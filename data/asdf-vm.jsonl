{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you explain what asdf - The Multiple Runtime Version Manager is in asdf-vm?\n\nAssistant: Sure, I'd be happy to explain asdf - The Multiple Runtime Version Manager in asdf-vm.\n\n# asdf - The Multiple Runtime Version Manager\n\nManage all your runtime versions with one tool!Here's a quick rundown of what this is about:\n\n## One Tool\n\nManage each of your project runtimes with a single CLI tool and command interface.\n\n## Plugins\n\nLarge ecosystem of existing runtimes & tools. Simple API to add support for new tools as you need!\n\n## Backwards Compatible\n\nSupport for existing config files .nvmrc, .node-version, .ruby-version for smooth migration!\n\n## One Config File\n\n.tool-versions to manage all your tools, runtimes and their versions in a single, sharable place.\n\n## Shells\n\nSupports Bash, ZSH, Fish & Elvish with completions available.\n\n## GitHub Actions\n\nProvides a GitHub Action to install and utilize your .tool-versions in your CI/CD workflows.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://asdf-vm.com", "title": "asdf - The Multiple Runtime Version Manager", "description": "Manage all your runtime versions with one tool!", "has_code_examples": false, "has_best_practices": false, "section_count": 6, "timestamp": "2025-03-01 02:50:25", "type": "overview", "page_metadata": {"title": "asdf", "description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "language": "en-US", "scrapeId": "63539c73-e403-43f6-8314-f8a418b1ae5e", "sourceURL": "https://asdf-vm.com", "url": "https://asdf-vm.com/", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I one tool in asdf-vm?\n\nAssistant: To one tool in asdf-vm, here's what you do:\nManage each of your project runtimes with a single CLI tool and command interface..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com", "title": "asdf - The Multiple Runtime Version Manager", "description": "Manage all your runtime versions with one tool!", "has_code_examples": false, "has_best_practices": false, "section_count": 6, "timestamp": "2025-03-01 02:50:25", "type": "section_detail", "page_metadata": {"title": "asdf", "description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "language": "en-US", "scrapeId": "63539c73-e403-43f6-8314-f8a418b1ae5e", "sourceURL": "https://asdf-vm.com", "url": "https://asdf-vm.com/", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I plugins in asdf-vm?\n\nAssistant: To plugins in asdf-vm, here's what you do:\nLarge ecosystem of existing runtimes & tools. Simple API to add support for new tools as you need!.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com", "title": "asdf - The Multiple Runtime Version Manager", "description": "Manage all your runtime versions with one tool!", "has_code_examples": false, "has_best_practices": false, "section_count": 6, "timestamp": "2025-03-01 02:50:25", "type": "section_detail", "page_metadata": {"title": "asdf", "description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "language": "en-US", "scrapeId": "63539c73-e403-43f6-8314-f8a418b1ae5e", "sourceURL": "https://asdf-vm.com", "url": "https://asdf-vm.com/", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I backwards compatible in asdf-vm?\n\nAssistant: To backwards compatible in asdf-vm, here's what you do:\nSupport for existing config files .nvmrc, .node-version, .ruby-version for smooth migration!.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com", "title": "asdf - The Multiple Runtime Version Manager", "description": "Manage all your runtime versions with one tool!", "has_code_examples": false, "has_best_practices": false, "section_count": 6, "timestamp": "2025-03-01 02:50:25", "type": "section_detail", "page_metadata": {"title": "asdf", "description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "language": "en-US", "scrapeId": "63539c73-e403-43f6-8314-f8a418b1ae5e", "sourceURL": "https://asdf-vm.com", "url": "https://asdf-vm.com/", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I one config file in asdf-vm?\n\nAssistant: To one config file in asdf-vm, here's what you do:\n.tool-versions to manage all your tools, runtimes and their versions in a single, sharable place..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com", "title": "asdf - The Multiple Runtime Version Manager", "description": "Manage all your runtime versions with one tool!", "has_code_examples": false, "has_best_practices": false, "section_count": 6, "timestamp": "2025-03-01 02:50:25", "type": "section_detail", "page_metadata": {"title": "asdf", "description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "language": "en-US", "scrapeId": "63539c73-e403-43f6-8314-f8a418b1ae5e", "sourceURL": "https://asdf-vm.com", "url": "https://asdf-vm.com/", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I shells in asdf-vm?\n\nAssistant: To shells in asdf-vm, here's what you do:\nSupports Bash, ZSH, Fish & Elvish with completions available..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com", "title": "asdf - The Multiple Runtime Version Manager", "description": "Manage all your runtime versions with one tool!", "has_code_examples": false, "has_best_practices": false, "section_count": 6, "timestamp": "2025-03-01 02:50:25", "type": "section_detail", "page_metadata": {"title": "asdf", "description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "language": "en-US", "scrapeId": "63539c73-e403-43f6-8314-f8a418b1ae5e", "sourceURL": "https://asdf-vm.com", "url": "https://asdf-vm.com/", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I github actions in asdf-vm?\n\nAssistant: To github actions in asdf-vm, here's what you do:\nProvides a GitHub Action to install and utilize your .tool-versions in your CI/CD workflows..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com", "title": "asdf - The Multiple Runtime Version Manager", "description": "Manage all your runtime versions with one tool!", "has_code_examples": false, "has_best_practices": false, "section_count": 6, "timestamp": "2025-03-01 02:50:25", "type": "section_detail", "page_metadata": {"title": "asdf", "description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "language": "en-US", "scrapeId": "63539c73-e403-43f6-8314-f8a418b1ae5e", "sourceURL": "https://asdf-vm.com", "url": "https://asdf-vm.com/", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you explain what asdfマルチランタイム  バージョンマネージャ is in asdf-vm?\n\nAssistant: Sure, I'd be happy to explain asdfマルチランタイム  バージョンマネージャ in asdf-vm.\n\n# asdfマルチランタイム  バージョンマネージャ\n\n1つのツールですべてのランタイムのバージョンを管理しましょう!Here's a quick rundown of what this is about:\n\n## 単一ツール\n\n単体のCLIツールとコマンドインターフェースで、各プロジェクトのランタイムを管理できます。\n\n## プラグイン\n\n既存ランタイム・ツールを使用した大規模なエコシステムです。必要に応じて新しいツールをサポートできるシンプルなAPIを用意しています!\n\n## 後方互換性\n\n.nvmrc、.node-version、.ruby-versionといった既存構成ファイルから、スムーズに移行できます!\n\n## 単一の構成ファイル\n\n.tool-versionsを使用すると、すべてのツール、ランタイム、およびそれらのバージョンを、共有された単一の場所で管理できます。\n\n## シェル\n\nBash、ZSH、Fish、およびElvishをサポートし、コマンド補完にも対応しています。\n\n## GitHub Actions\n\nCI/CDワークフローで、.tool-versionsをインストールし利用するためのGitHub Actionを提供しています。\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://asdf-vm.com/ja-jp", "title": "asdfマルチランタイム  バージョンマネージャ", "description": "1つのツールですべてのランタイムのバージョンを管理しましょう!", "has_code_examples": false, "has_best_practices": false, "section_count": 6, "timestamp": "2025-03-01 02:50:43", "type": "overview", "page_metadata": {"language": "ja-jp", "generator": "VitePress v1.6.3", "description": "Manage multiple runtime versions with a single CLI tool", "title": "asdf", "viewport": "width=device-width,initial-scale=1", "scrapeId": "0ae9a291-87c7-44e7-b4d9-c1902f98a37e", "sourceURL": "https://asdf-vm.com/ja-jp", "url": "https://asdf-vm.com/ja-jp/", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 単一ツール in asdf-vm?\n\nAssistant: To 単一ツール in asdf-vm, here's what you do:\n単体のCLIツールとコマンドインターフェースで、各プロジェクトのランタイムを管理できます。.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ja-jp", "title": "asdfマルチランタイム  バージョンマネージャ", "description": "1つのツールですべてのランタイムのバージョンを管理しましょう!", "has_code_examples": false, "has_best_practices": false, "section_count": 6, "timestamp": "2025-03-01 02:50:43", "type": "section_detail", "page_metadata": {"language": "ja-jp", "generator": "VitePress v1.6.3", "description": "Manage multiple runtime versions with a single CLI tool", "title": "asdf", "viewport": "width=device-width,initial-scale=1", "scrapeId": "0ae9a291-87c7-44e7-b4d9-c1902f98a37e", "sourceURL": "https://asdf-vm.com/ja-jp", "url": "https://asdf-vm.com/ja-jp/", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I プラグイン in asdf-vm?\n\nAssistant: To プラグイン in asdf-vm, here's what you do:\n既存ランタイム・ツールを使用した大規模なエコシステムです。必要に応じて新しいツールをサポートできるシンプルなAPIを用意しています!.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ja-jp", "title": "asdfマルチランタイム  バージョンマネージャ", "description": "1つのツールですべてのランタイムのバージョンを管理しましょう!", "has_code_examples": false, "has_best_practices": false, "section_count": 6, "timestamp": "2025-03-01 02:50:43", "type": "section_detail", "page_metadata": {"language": "ja-jp", "generator": "VitePress v1.6.3", "description": "Manage multiple runtime versions with a single CLI tool", "title": "asdf", "viewport": "width=device-width,initial-scale=1", "scrapeId": "0ae9a291-87c7-44e7-b4d9-c1902f98a37e", "sourceURL": "https://asdf-vm.com/ja-jp", "url": "https://asdf-vm.com/ja-jp/", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 後方互換性 in asdf-vm?\n\nAssistant: To 後方互換性 in asdf-vm, here's what you do:\n.nvmrc、.node-version、.ruby-versionといった既存構成ファイルから、スムーズに移行できます!.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ja-jp", "title": "asdfマルチランタイム  バージョンマネージャ", "description": "1つのツールですべてのランタイムのバージョンを管理しましょう!", "has_code_examples": false, "has_best_practices": false, "section_count": 6, "timestamp": "2025-03-01 02:50:43", "type": "section_detail", "page_metadata": {"language": "ja-jp", "generator": "VitePress v1.6.3", "description": "Manage multiple runtime versions with a single CLI tool", "title": "asdf", "viewport": "width=device-width,initial-scale=1", "scrapeId": "0ae9a291-87c7-44e7-b4d9-c1902f98a37e", "sourceURL": "https://asdf-vm.com/ja-jp", "url": "https://asdf-vm.com/ja-jp/", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 単一の構成ファイル in asdf-vm?\n\nAssistant: To 単一の構成ファイル in asdf-vm, here's what you do:\n.tool-versionsを使用すると、すべてのツール、ランタイム、およびそれらのバージョンを、共有された単一の場所で管理できます。.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ja-jp", "title": "asdfマルチランタイム  バージョンマネージャ", "description": "1つのツールですべてのランタイムのバージョンを管理しましょう!", "has_code_examples": false, "has_best_practices": false, "section_count": 6, "timestamp": "2025-03-01 02:50:43", "type": "section_detail", "page_metadata": {"language": "ja-jp", "generator": "VitePress v1.6.3", "description": "Manage multiple runtime versions with a single CLI tool", "title": "asdf", "viewport": "width=device-width,initial-scale=1", "scrapeId": "0ae9a291-87c7-44e7-b4d9-c1902f98a37e", "sourceURL": "https://asdf-vm.com/ja-jp", "url": "https://asdf-vm.com/ja-jp/", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I シェル in asdf-vm?\n\nAssistant: To シェル in asdf-vm, here's what you do:\nBash、ZSH、Fish、およびElvishをサポートし、コマンド補完にも対応しています。.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ja-jp", "title": "asdfマルチランタイム  バージョンマネージャ", "description": "1つのツールですべてのランタイムのバージョンを管理しましょう!", "has_code_examples": false, "has_best_practices": false, "section_count": 6, "timestamp": "2025-03-01 02:50:43", "type": "section_detail", "page_metadata": {"language": "ja-jp", "generator": "VitePress v1.6.3", "description": "Manage multiple runtime versions with a single CLI tool", "title": "asdf", "viewport": "width=device-width,initial-scale=1", "scrapeId": "0ae9a291-87c7-44e7-b4d9-c1902f98a37e", "sourceURL": "https://asdf-vm.com/ja-jp", "url": "https://asdf-vm.com/ja-jp/", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I github actions in asdf-vm?\n\nAssistant: To github actions in asdf-vm, here's what you do:\nCI/CDワークフローで、.tool-versionsをインストールし利用するためのGitHub Actionを提供しています。.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ja-jp", "title": "asdfマルチランタイム  バージョンマネージャ", "description": "1つのツールですべてのランタイムのバージョンを管理しましょう!", "has_code_examples": false, "has_best_practices": false, "section_count": 6, "timestamp": "2025-03-01 02:50:43", "type": "section_detail", "page_metadata": {"language": "ja-jp", "generator": "VitePress v1.6.3", "description": "Manage multiple runtime versions with a single CLI tool", "title": "asdf", "viewport": "width=device-width,initial-scale=1", "scrapeId": "0ae9a291-87c7-44e7-b4d9-c1902f98a37e", "sourceURL": "https://asdf-vm.com/ja-jp", "url": "https://asdf-vm.com/ja-jp/", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you explain what asdfO Gerenciador de Múltiplas Versões de Tempo de Execução is in asdf-vm?\n\nAssistant: Sure, I'd be happy to explain asdfO Gerenciador de Múltiplas Versões de Tempo de Execução in asdf-vm.\n\n# asdfO Gerenciador de Múltiplas Versões de Tempo de Execução\n\nGerencie todas as suas versões de tempo de execução com uma ferramenta!Here's a quick rundown of what this is about:\n\n## Uma super ferramenta\n\nGerencie cada um dos runtimes e ferramentas dos seus projetos com uma única ferramenta de CLI\n\n## Plugins\n\nGrande ecossistema de runtimes e ferramentas existentes. API simples para adicionar suporte para novas ferramentas conforme necessário!\n\n## Compatível com vários arquivos de configuração\n\nSuporte para arquivos de configuração existentes .nvmrc, .node-version, .ruby-version para uma migração tranquila!\n\n## Só um arquivo de configuração\n\n.tool-versions para gerenciar todas as suas ferramentas, runtimes e suas versões em um único arquivo\n\n## Shells\n\nSuporta Bash, ZSH, Fish & Elvish com autocomplete.\n\n## GitHub Actions\n\nFornece um GitHub Action para instalar e utilizar seu .tool-verions em seu fluxo de trabalho CICD.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://asdf-vm.com/pt-br", "title": "asdfO Gerenciador de Múltiplas Versões de Tempo de Execução", "description": "Gerencie todas as suas versões de tempo de execução com uma ferramenta!", "has_code_examples": false, "has_best_practices": false, "section_count": 6, "timestamp": "2025-03-01 02:50:56", "type": "overview", "page_metadata": {"language": "pr-br", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "title": "asdf", "description": "Manage multiple runtime versions with a single CLI tool", "scrapeId": "77dbdd96-b033-43d9-b6f8-e2d5ca37124a", "sourceURL": "https://asdf-vm.com/pt-br", "url": "https://asdf-vm.com/pt-br/", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I uma super ferramenta in asdf-vm?\n\nAssistant: To uma super ferramenta in asdf-vm, here's what you do:\nGerencie cada um dos runtimes e ferramentas dos seus projetos com uma única ferramenta de CLI.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/pt-br", "title": "asdfO Gerenciador de Múltiplas Versões de Tempo de Execução", "description": "Gerencie todas as suas versões de tempo de execução com uma ferramenta!", "has_code_examples": false, "has_best_practices": false, "section_count": 6, "timestamp": "2025-03-01 02:50:56", "type": "section_detail", "page_metadata": {"language": "pr-br", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "title": "asdf", "description": "Manage multiple runtime versions with a single CLI tool", "scrapeId": "77dbdd96-b033-43d9-b6f8-e2d5ca37124a", "sourceURL": "https://asdf-vm.com/pt-br", "url": "https://asdf-vm.com/pt-br/", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I plugins in asdf-vm?\n\nAssistant: To plugins in asdf-vm, here's what you do:\nGrande ecossistema de runtimes e ferramentas existentes. API simples para adicionar suporte para novas ferramentas conforme necessário!.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/pt-br", "title": "asdfO Gerenciador de Múltiplas Versões de Tempo de Execução", "description": "Gerencie todas as suas versões de tempo de execução com uma ferramenta!", "has_code_examples": false, "has_best_practices": false, "section_count": 6, "timestamp": "2025-03-01 02:50:56", "type": "section_detail", "page_metadata": {"language": "pr-br", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "title": "asdf", "description": "Manage multiple runtime versions with a single CLI tool", "scrapeId": "77dbdd96-b033-43d9-b6f8-e2d5ca37124a", "sourceURL": "https://asdf-vm.com/pt-br", "url": "https://asdf-vm.com/pt-br/", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I compatível com vários arquivos de configuração in asdf-vm?\n\nAssistant: To compatível com vários arquivos de configuração in asdf-vm, here's what you do:\nSuporte para arquivos de configuração existentes .nvmrc, .node-version, .ruby-version para uma migração tranquila!.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/pt-br", "title": "asdfO Gerenciador de Múltiplas Versões de Tempo de Execução", "description": "Gerencie todas as suas versões de tempo de execução com uma ferramenta!", "has_code_examples": false, "has_best_practices": false, "section_count": 6, "timestamp": "2025-03-01 02:50:56", "type": "section_detail", "page_metadata": {"language": "pr-br", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "title": "asdf", "description": "Manage multiple runtime versions with a single CLI tool", "scrapeId": "77dbdd96-b033-43d9-b6f8-e2d5ca37124a", "sourceURL": "https://asdf-vm.com/pt-br", "url": "https://asdf-vm.com/pt-br/", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I só um arquivo de configuração in asdf-vm?\n\nAssistant: To só um arquivo de configuração in asdf-vm, here's what you do:\n.tool-versions para gerenciar todas as suas ferramentas, runtimes e suas versões em um único arquivo.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/pt-br", "title": "asdfO Gerenciador de Múltiplas Versões de Tempo de Execução", "description": "Gerencie todas as suas versões de tempo de execução com uma ferramenta!", "has_code_examples": false, "has_best_practices": false, "section_count": 6, "timestamp": "2025-03-01 02:50:56", "type": "section_detail", "page_metadata": {"language": "pr-br", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "title": "asdf", "description": "Manage multiple runtime versions with a single CLI tool", "scrapeId": "77dbdd96-b033-43d9-b6f8-e2d5ca37124a", "sourceURL": "https://asdf-vm.com/pt-br", "url": "https://asdf-vm.com/pt-br/", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I shells in asdf-vm?\n\nAssistant: To shells in asdf-vm, here's what you do:\nSuporta Bash, ZSH, Fish & Elvish com autocomplete..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/pt-br", "title": "asdfO Gerenciador de Múltiplas Versões de Tempo de Execução", "description": "Gerencie todas as suas versões de tempo de execução com uma ferramenta!", "has_code_examples": false, "has_best_practices": false, "section_count": 6, "timestamp": "2025-03-01 02:50:56", "type": "section_detail", "page_metadata": {"language": "pr-br", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "title": "asdf", "description": "Manage multiple runtime versions with a single CLI tool", "scrapeId": "77dbdd96-b033-43d9-b6f8-e2d5ca37124a", "sourceURL": "https://asdf-vm.com/pt-br", "url": "https://asdf-vm.com/pt-br/", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I github actions in asdf-vm?\n\nAssistant: To github actions in asdf-vm, here's what you do:\nFornece um GitHub Action para instalar e utilizar seu .tool-verions em seu fluxo de trabalho CICD..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/pt-br", "title": "asdfO Gerenciador de Múltiplas Versões de Tempo de Execução", "description": "Gerencie todas as suas versões de tempo de execução com uma ferramenta!", "has_code_examples": false, "has_best_practices": false, "section_count": 6, "timestamp": "2025-03-01 02:50:56", "type": "section_detail", "page_metadata": {"language": "pr-br", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "title": "asdf", "description": "Manage multiple runtime versions with a single CLI tool", "scrapeId": "77dbdd96-b033-43d9-b6f8-e2d5ca37124a", "sourceURL": "https://asdf-vm.com/pt-br", "url": "https://asdf-vm.com/pt-br/", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you explain what asdf다중 런타임 버전 매니저 is in asdf-vm?\n\nAssistant: Sure, I'd be happy to explain asdf다중 런타임 버전 매니저 in asdf-vm.\n\n# asdf다중 런타임 버전 매니저\n\n한가지 툴로 모든 런타임 버전들을 관리하세요!Here's a quick rundown of what this is about:\n\n## 단 한가지 도구\n\n각 프로젝트 런타임들을 단 한가지 CLI 툴과 커맨드 인터페이스로 관리.\n\n## 플러그인\n\n런타임과 툴들의 거대한 생태계. 당신이 필요한 새로운 툴들을 더해주는 간단한 API!\n\n## 구버전 호환\n\n원활한 마이그레이션을 위해 이미 존재하던 .nvmrc, .node-version, .ruby-version 등의 설정 파일들 지원!\n\n## 단 하나의 설정 파일\n\n단 하나의 공유된 .tool-versions 파일로 모든 툴, 런타임, 그리고 버전들을 관리.\n\n## 셸\n\nBash, ZSH, Fish & Elvish 자동완성 기능 지원.\n\n## GitHub Actions\n\nGitHub Action 설치 제공과 .tool-versions 파일을 CI/CD 워크플로우에서 활용.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://asdf-vm.com/ko-kr", "title": "asdf다중 런타임 버전 매니저", "description": "한가지 툴로 모든 런타임 버전들을 관리하세요!", "has_code_examples": false, "has_best_practices": false, "section_count": 6, "timestamp": "2025-03-01 02:51:07", "type": "overview", "page_metadata": {"generator": "VitePress v1.6.3", "language": "ko-kr", "description": "Manage multiple runtime versions with a single CLI tool", "title": "asdf", "viewport": "width=device-width,initial-scale=1", "scrapeId": "b04bdfd0-afcb-4276-bfa0-217e9adb37ca", "sourceURL": "https://asdf-vm.com/ko-kr", "url": "https://asdf-vm.com/ko-kr/", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 단 한가지 도구 in asdf-vm?\n\nAssistant: To 단 한가지 도구 in asdf-vm, here's what you do:\n각 프로젝트 런타임들을 단 한가지 CLI 툴과 커맨드 인터페이스로 관리..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ko-kr", "title": "asdf다중 런타임 버전 매니저", "description": "한가지 툴로 모든 런타임 버전들을 관리하세요!", "has_code_examples": false, "has_best_practices": false, "section_count": 6, "timestamp": "2025-03-01 02:51:07", "type": "section_detail", "page_metadata": {"generator": "VitePress v1.6.3", "language": "ko-kr", "description": "Manage multiple runtime versions with a single CLI tool", "title": "asdf", "viewport": "width=device-width,initial-scale=1", "scrapeId": "b04bdfd0-afcb-4276-bfa0-217e9adb37ca", "sourceURL": "https://asdf-vm.com/ko-kr", "url": "https://asdf-vm.com/ko-kr/", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 플러그인 in asdf-vm?\n\nAssistant: To 플러그인 in asdf-vm, here's what you do:\n런타임과 툴들의 거대한 생태계. 당신이 필요한 새로운 툴들을 더해주는 간단한 API!.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ko-kr", "title": "asdf다중 런타임 버전 매니저", "description": "한가지 툴로 모든 런타임 버전들을 관리하세요!", "has_code_examples": false, "has_best_practices": false, "section_count": 6, "timestamp": "2025-03-01 02:51:07", "type": "section_detail", "page_metadata": {"generator": "VitePress v1.6.3", "language": "ko-kr", "description": "Manage multiple runtime versions with a single CLI tool", "title": "asdf", "viewport": "width=device-width,initial-scale=1", "scrapeId": "b04bdfd0-afcb-4276-bfa0-217e9adb37ca", "sourceURL": "https://asdf-vm.com/ko-kr", "url": "https://asdf-vm.com/ko-kr/", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 구버전 호환 in asdf-vm?\n\nAssistant: To 구버전 호환 in asdf-vm, here's what you do:\n원활한 마이그레이션을 위해 이미 존재하던 .nvmrc, .node-version, .ruby-version 등의 설정 파일들 지원!.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ko-kr", "title": "asdf다중 런타임 버전 매니저", "description": "한가지 툴로 모든 런타임 버전들을 관리하세요!", "has_code_examples": false, "has_best_practices": false, "section_count": 6, "timestamp": "2025-03-01 02:51:07", "type": "section_detail", "page_metadata": {"generator": "VitePress v1.6.3", "language": "ko-kr", "description": "Manage multiple runtime versions with a single CLI tool", "title": "asdf", "viewport": "width=device-width,initial-scale=1", "scrapeId": "b04bdfd0-afcb-4276-bfa0-217e9adb37ca", "sourceURL": "https://asdf-vm.com/ko-kr", "url": "https://asdf-vm.com/ko-kr/", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 단 하나의 설정 파일 in asdf-vm?\n\nAssistant: To 단 하나의 설정 파일 in asdf-vm, here's what you do:\n단 하나의 공유된 .tool-versions 파일로 모든 툴, 런타임, 그리고 버전들을 관리..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ko-kr", "title": "asdf다중 런타임 버전 매니저", "description": "한가지 툴로 모든 런타임 버전들을 관리하세요!", "has_code_examples": false, "has_best_practices": false, "section_count": 6, "timestamp": "2025-03-01 02:51:07", "type": "section_detail", "page_metadata": {"generator": "VitePress v1.6.3", "language": "ko-kr", "description": "Manage multiple runtime versions with a single CLI tool", "title": "asdf", "viewport": "width=device-width,initial-scale=1", "scrapeId": "b04bdfd0-afcb-4276-bfa0-217e9adb37ca", "sourceURL": "https://asdf-vm.com/ko-kr", "url": "https://asdf-vm.com/ko-kr/", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 셸 in asdf-vm?\n\nAssistant: To 셸 in asdf-vm, here's what you do:\nBash, ZSH, Fish & Elvish 자동완성 기능 지원..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ko-kr", "title": "asdf다중 런타임 버전 매니저", "description": "한가지 툴로 모든 런타임 버전들을 관리하세요!", "has_code_examples": false, "has_best_practices": false, "section_count": 6, "timestamp": "2025-03-01 02:51:07", "type": "section_detail", "page_metadata": {"generator": "VitePress v1.6.3", "language": "ko-kr", "description": "Manage multiple runtime versions with a single CLI tool", "title": "asdf", "viewport": "width=device-width,initial-scale=1", "scrapeId": "b04bdfd0-afcb-4276-bfa0-217e9adb37ca", "sourceURL": "https://asdf-vm.com/ko-kr", "url": "https://asdf-vm.com/ko-kr/", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I github actions in asdf-vm?\n\nAssistant: To github actions in asdf-vm, here's what you do:\nGitHub Action 설치 제공과 .tool-versions 파일을 CI/CD 워크플로우에서 활용..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ko-kr", "title": "asdf다중 런타임 버전 매니저", "description": "한가지 툴로 모든 런타임 버전들을 관리하세요!", "has_code_examples": false, "has_best_practices": false, "section_count": 6, "timestamp": "2025-03-01 02:51:07", "type": "section_detail", "page_metadata": {"generator": "VitePress v1.6.3", "language": "ko-kr", "description": "Manage multiple runtime versions with a single CLI tool", "title": "asdf", "viewport": "width=device-width,initial-scale=1", "scrapeId": "b04bdfd0-afcb-4276-bfa0-217e9adb37ca", "sourceURL": "https://asdf-vm.com/ko-kr", "url": "https://asdf-vm.com/ko-kr/", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you explain what asdf多运行时版本管理器 is in asdf-vm?\n\nAssistant: Sure, I'd be happy to explain asdf多运行时版本管理器 in asdf-vm.\n\n# asdf多运行时版本管理器\n\n使用一个工具管理所有运行时版本！Here's a quick rundown of what this is about:\n\n## 一个工具\n\n使用单个命令行工具和命令界面管理你的每个项目运行环境。\n\n## 插件\n\n现有运行环境和工具的大型生态系统。简单 API 用于根据需要添加对新工具的支持！\n\n## 向后兼容\n\n支持从现有配置文件 .nvmrc、.node-version、.ruby-version 平滑迁移！\n\n## 一个配置文件\n\n一个可共享的 .tool-versions 配置文件管理所有工具、运行环境及其版本。\n\n## Shells\n\n支持 Bash、ZSH、Fish 和 Elvish，并提供补全功能。\n\n## GitHub Actions\n\n提供 Github Action 在 CI/CD 工作流中安装和使用 .tool-versions。\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://asdf-vm.com/zh-hans", "title": "asdf多运行时版本管理器", "description": "使用一个工具管理所有运行时版本！", "has_code_examples": false, "has_best_practices": false, "section_count": 6, "timestamp": "2025-03-01 02:51:53", "type": "overview", "page_metadata": {"generator": "VitePress v1.6.3", "title": "asdf", "language": "zh-hans", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "scrapeId": "deaf12e7-636e-4ee6-a3f9-18b8a0dbef9a", "sourceURL": "https://asdf-vm.com/zh-hans", "url": "https://asdf-vm.com/zh-hans/", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 一个工具 in asdf-vm?\n\nAssistant: To 一个工具 in asdf-vm, here's what you do:\n使用单个命令行工具和命令界面管理你的每个项目运行环境。.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/zh-hans", "title": "asdf多运行时版本管理器", "description": "使用一个工具管理所有运行时版本！", "has_code_examples": false, "has_best_practices": false, "section_count": 6, "timestamp": "2025-03-01 02:51:53", "type": "section_detail", "page_metadata": {"generator": "VitePress v1.6.3", "title": "asdf", "language": "zh-hans", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "scrapeId": "deaf12e7-636e-4ee6-a3f9-18b8a0dbef9a", "sourceURL": "https://asdf-vm.com/zh-hans", "url": "https://asdf-vm.com/zh-hans/", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 插件 in asdf-vm?\n\nAssistant: To 插件 in asdf-vm, here's what you do:\n现有运行环境和工具的大型生态系统。简单 API 用于根据需要添加对新工具的支持！.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/zh-hans", "title": "asdf多运行时版本管理器", "description": "使用一个工具管理所有运行时版本！", "has_code_examples": false, "has_best_practices": false, "section_count": 6, "timestamp": "2025-03-01 02:51:53", "type": "section_detail", "page_metadata": {"generator": "VitePress v1.6.3", "title": "asdf", "language": "zh-hans", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "scrapeId": "deaf12e7-636e-4ee6-a3f9-18b8a0dbef9a", "sourceURL": "https://asdf-vm.com/zh-hans", "url": "https://asdf-vm.com/zh-hans/", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 向后兼容 in asdf-vm?\n\nAssistant: To 向后兼容 in asdf-vm, here's what you do:\n支持从现有配置文件 .nvmrc、.node-version、.ruby-version 平滑迁移！.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/zh-hans", "title": "asdf多运行时版本管理器", "description": "使用一个工具管理所有运行时版本！", "has_code_examples": false, "has_best_practices": false, "section_count": 6, "timestamp": "2025-03-01 02:51:53", "type": "section_detail", "page_metadata": {"generator": "VitePress v1.6.3", "title": "asdf", "language": "zh-hans", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "scrapeId": "deaf12e7-636e-4ee6-a3f9-18b8a0dbef9a", "sourceURL": "https://asdf-vm.com/zh-hans", "url": "https://asdf-vm.com/zh-hans/", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 一个配置文件 in asdf-vm?\n\nAssistant: To 一个配置文件 in asdf-vm, here's what you do:\n一个可共享的 .tool-versions 配置文件管理所有工具、运行环境及其版本。.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/zh-hans", "title": "asdf多运行时版本管理器", "description": "使用一个工具管理所有运行时版本！", "has_code_examples": false, "has_best_practices": false, "section_count": 6, "timestamp": "2025-03-01 02:51:53", "type": "section_detail", "page_metadata": {"generator": "VitePress v1.6.3", "title": "asdf", "language": "zh-hans", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "scrapeId": "deaf12e7-636e-4ee6-a3f9-18b8a0dbef9a", "sourceURL": "https://asdf-vm.com/zh-hans", "url": "https://asdf-vm.com/zh-hans/", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I shells in asdf-vm?\n\nAssistant: To shells in asdf-vm, here's what you do:\n支持 Bash、ZSH、Fish 和 Elvish，并提供补全功能。.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/zh-hans", "title": "asdf多运行时版本管理器", "description": "使用一个工具管理所有运行时版本！", "has_code_examples": false, "has_best_practices": false, "section_count": 6, "timestamp": "2025-03-01 02:51:53", "type": "section_detail", "page_metadata": {"generator": "VitePress v1.6.3", "title": "asdf", "language": "zh-hans", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "scrapeId": "deaf12e7-636e-4ee6-a3f9-18b8a0dbef9a", "sourceURL": "https://asdf-vm.com/zh-hans", "url": "https://asdf-vm.com/zh-hans/", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I github actions in asdf-vm?\n\nAssistant: To github actions in asdf-vm, here's what you do:\n提供 Github Action 在 CI/CD 工作流中安装和使用 .tool-versions。.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/zh-hans", "title": "asdf多运行时版本管理器", "description": "使用一个工具管理所有运行时版本！", "has_code_examples": false, "has_best_practices": false, "section_count": 6, "timestamp": "2025-03-01 02:51:53", "type": "section_detail", "page_metadata": {"generator": "VitePress v1.6.3", "title": "asdf", "language": "zh-hans", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "scrapeId": "deaf12e7-636e-4ee6-a3f9-18b8a0dbef9a", "sourceURL": "https://asdf-vm.com/zh-hans", "url": "https://asdf-vm.com/zh-hans/", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you explain what Versions is in asdf-vm?\n\nAssistant: Sure, I'd be happy to explain Versions in asdf-vm.\n\n# Versions\n\nThis page covers how to manage versions of tools using asdf, including installation, listing, setting, and uninstalling versions.Here's a quick rundown of what this is about:\n\n## Install Version\n\n```shell\nasdf install <name> <version>\n# asdf install erlang 17.3\n```\nIf a plugin supports downloading & compiling from source, you can specify `ref:foo` where `foo` is a specific branch, tag, or commit. You'll need to use the same name and reference when uninstalling too.\n\n## Install Latest Stable Version\n\n```shell\nasdf install <name> latest\n# asdf install erlang latest\n```\nInstall latest stable version that begins with a given string.\n```shell\nasdf install <name> latest:<version>\n# asdf install erlang latest:17\n```\n\n## List Installed Versions\n\n```shell\nasdf list <name>\n# asdf list erlang\n```\nFilter versions to those that begin with a given string.\n```shell\nasdf list <name> <version>\n# asdf list erlang 17\n```\n\n## List All Available Versions\n\n```shell\nasdf list all <name>\n# asdf list all erlang\n```\nFilter versions to those that begin with a given string.\n```shell\nasdf list all <name> <version>\n# asdf list all erlang 17\n```\n\n## Show Latest Stable Version\n\n```shell\nasdf latest <name>\n# asdf latest erlang\n```\nShow latest stable version that begins with a given string.\n```shell\nasdf latest <name> <version>\n# asdf latest erlang 17\n```\n\n## Set Version\n\n#### Via `.tool-versions` file\n```shell\nasdf set [flags] <name> <version> [<version>...]\n# asdf set elixir 1.2.4 # set in current dir\n# asdf set -u elixir 1.2.4 # set in .tool-versions file in home directory\n# asdf set -p elixir 1.2.4 # set in existing .tool-versions file in a parent dir\n\nasdf set <name> latest[:<version>]\n# asdf set elixir latest\n```\n`asdf set` writes the version to a `.tool-versions` file in the current directory, creating it if needed. It exists purely for convenience. You can think of it as just doing `echo \"<tool> <version>\" > .tool-versions`.\n\nWith the `-u`/ `--home` flag `asdf set` writes to the `.tool-versions` file in your `$HOME` directory, creating the file if it does not exist.\n\nWith the `-p`/ `--parent` flag `asdf set` finds a `.tool-versions` file in the closest parent directory of the current directory.\n\n#### Via Environment Variable\nWhen determining the version looks for an environment variable with the pattern `ASDF_${TOOL}_VERSION`. The version format is the same supported by the `.tool-versions` file. If set, the value of this environment variable overrides any versions set in for the tool in any `.tool-versions` file. For example:\n```shell\nexport ASDF_ELIXIR_VERSION=1.18.1\n```\nWill tell asdf to use Elixir `1.18.1` in the current shell session.\n\nWARNING\nBecause this is an environment variable, it only takes effect where it is set. Any other shell sessions that are running will still use to whatever version is set in a `.tool-versions` file.\n\nThe following example runs tests on an Elixir project with version `1.4.0`.\n```shell\nASDF_ELIXIR_VERSION=1.4.0 mix test\n```\n\n## Fallback to System Version\n\nTo use the system version of tool `<name>` instead of an asdf managed version you can set the version for the tool to `system`.\nSet system with either `asdf set` or via environment variable as outlined in [Set Version](https://asdf-vm.com/manage/versions.html#set-version) section above.\n```shell\nasdf set <name> system\n# asdf set python system\n```\n\n## View Current Version\n\n```shell\nasdf current\n# asdf current\n# erlang          17.3          /Users/kim/.tool-versions\n# nodejs          6.11.5        /Users/kim/cool-node-project/.tool-versions\n\nasdf current <name>\n# asdf current erlang\n# erlang          17.3          /Users/kim/.tool-versions\n```\n\n## Uninstall Version\n\n```shell\nasdf uninstall <name> <version>\n# asdf uninstall erlang 17.3\n```\n\n## Shims\n\nWhen asdf installs a package it creates shims for every executable program in that package in a `$ASDF_DATA_DIR/shims` directory (default `~/.asdf/shims`). This directory being on the `$PATH` (by means of `asdf.sh`, `asdf.fish`, etc) is how the installed programs are made available in the environment.\n\nThe shims themselves are really simple wrappers that `exec` a helper program `asdf exec` passing it the name of the plugin and path to the executable in the installed package that the shim is wrapping.\n\nThe `asdf exec` helper determines the version of the package to use (as specified in `.tool-versions` file or environment variable), the final path to the executable in the package installation directory (this can be manipulated by the `exec-path` callback in the plugin) and the environment to execute in (also provided by the plugin - `exec-env` script), and finally it executes it.\n\nNote\nBecause this system uses `exec` calls, any scripts in the package that are meant to be sourced by the shell instead of executed need to be accessed directly instead of via the shim wrapper. The two `asdf` commands: `which` and `where` can help with this by returning the path to the installed package:\n```shell\n# returns path to main executable in current version\nsource $(asdf which ${PLUGIN})/../script.sh\n\n# returns path to the package installation directory\nsource $(asdf where ${PLUGIN})/bin/script.sh\n```\n\n## By-passing asdf shims\n\nIf for some reason you want to by-pass asdf shims or want your environment variables automatically set upon entering your project's directory, the [asdf-direnv](https://github.com/asdf-community/asdf-direnv) plugin can be helpful. Be sure to check its README for more details.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://asdf-vm.com/manage/versions.html", "title": "Versions", "description": "This page covers how to manage versions of tools using asdf, including installation, listing, setting, and uninstalling versions.", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 02:52:46", "type": "overview", "page_metadata": {"title": "Versions | asdf", "language": "en-US", "description": "Manage multiple runtime versions with a single CLI tool", "viewport": "width=device-width,initial-scale=1", "generator": "VitePress v1.6.3", "scrapeId": "4e70b5d5-3cde-4d36-b528-1be0a2488798", "sourceURL": "https://asdf-vm.com/manage/versions.html", "url": "https://asdf-vm.com/manage/versions.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I install version in asdf-vm?\n\nAssistant: To install version in asdf-vm, here's what you do:\n```shell\nasdf install <name> <version>\n# asdf install erlang 17.3\n```\nIf a plugin supports downloading & compiling from source, you can specify `ref:foo` where `foo` is a specific branch, tag, or commit. You'll need to use the same name and reference when uninstalling too..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/manage/versions.html", "title": "Versions", "description": "This page covers how to manage versions of tools using asdf, including installation, listing, setting, and uninstalling versions.", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 02:52:46", "type": "section_detail", "page_metadata": {"title": "Versions | asdf", "language": "en-US", "description": "Manage multiple runtime versions with a single CLI tool", "viewport": "width=device-width,initial-scale=1", "generator": "VitePress v1.6.3", "scrapeId": "4e70b5d5-3cde-4d36-b528-1be0a2488798", "sourceURL": "https://asdf-vm.com/manage/versions.html", "url": "https://asdf-vm.com/manage/versions.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I install latest stable version in asdf-vm?\n\nAssistant: To install latest stable version in asdf-vm, here's what you do:\n```shell\nasdf install <name> latest\n# asdf install erlang latest\n```\nInstall latest stable version that begins with a given string.\n```shell\nasdf install <name> latest:<version>\n# asdf install erlang latest:17\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/manage/versions.html", "title": "Versions", "description": "This page covers how to manage versions of tools using asdf, including installation, listing, setting, and uninstalling versions.", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 02:52:46", "type": "section_detail", "page_metadata": {"title": "Versions | asdf", "language": "en-US", "description": "Manage multiple runtime versions with a single CLI tool", "viewport": "width=device-width,initial-scale=1", "generator": "VitePress v1.6.3", "scrapeId": "4e70b5d5-3cde-4d36-b528-1be0a2488798", "sourceURL": "https://asdf-vm.com/manage/versions.html", "url": "https://asdf-vm.com/manage/versions.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I list installed versions in asdf-vm?\n\nAssistant: To list installed versions in asdf-vm, here's what you do:\n```shell\nasdf list <name>\n# asdf list erlang\n```\nFilter versions to those that begin with a given string.\n```shell\nasdf list <name> <version>\n# asdf list erlang 17\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/manage/versions.html", "title": "Versions", "description": "This page covers how to manage versions of tools using asdf, including installation, listing, setting, and uninstalling versions.", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 02:52:46", "type": "section_detail", "page_metadata": {"title": "Versions | asdf", "language": "en-US", "description": "Manage multiple runtime versions with a single CLI tool", "viewport": "width=device-width,initial-scale=1", "generator": "VitePress v1.6.3", "scrapeId": "4e70b5d5-3cde-4d36-b528-1be0a2488798", "sourceURL": "https://asdf-vm.com/manage/versions.html", "url": "https://asdf-vm.com/manage/versions.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I list all available versions in asdf-vm?\n\nAssistant: To list all available versions in asdf-vm, here's what you do:\n```shell\nasdf list all <name>\n# asdf list all erlang\n```\nFilter versions to those that begin with a given string.\n```shell\nasdf list all <name> <version>\n# asdf list all erlang 17\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/manage/versions.html", "title": "Versions", "description": "This page covers how to manage versions of tools using asdf, including installation, listing, setting, and uninstalling versions.", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 02:52:46", "type": "section_detail", "page_metadata": {"title": "Versions | asdf", "language": "en-US", "description": "Manage multiple runtime versions with a single CLI tool", "viewport": "width=device-width,initial-scale=1", "generator": "VitePress v1.6.3", "scrapeId": "4e70b5d5-3cde-4d36-b528-1be0a2488798", "sourceURL": "https://asdf-vm.com/manage/versions.html", "url": "https://asdf-vm.com/manage/versions.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I show latest stable version in asdf-vm?\n\nAssistant: To show latest stable version in asdf-vm, here's what you do:\n```shell\nasdf latest <name>\n# asdf latest erlang\n```\nShow latest stable version that begins with a given string.\n```shell\nasdf latest <name> <version>\n# asdf latest erlang 17\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/manage/versions.html", "title": "Versions", "description": "This page covers how to manage versions of tools using asdf, including installation, listing, setting, and uninstalling versions.", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 02:52:46", "type": "section_detail", "page_metadata": {"title": "Versions | asdf", "language": "en-US", "description": "Manage multiple runtime versions with a single CLI tool", "viewport": "width=device-width,initial-scale=1", "generator": "VitePress v1.6.3", "scrapeId": "4e70b5d5-3cde-4d36-b528-1be0a2488798", "sourceURL": "https://asdf-vm.com/manage/versions.html", "url": "https://asdf-vm.com/manage/versions.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I set version in asdf-vm?\n\nAssistant: To set version in asdf-vm, here's what you do:\n#### Via `.tool-versions` file\n```shell\nasdf set [flags] <name> <version> [<version>...]\n# asdf set elixir 1.2.4 # set in current dir\n# asdf set -u elixir 1.2.4 # set in .tool-versions file in home directory\n# asdf set -p elixir 1.2.4 # set in existing .tool-versions file in a parent dir\n\nasdf set <name> latest[:<version>]\n# asdf set elixir latest\n```\n`asdf set` writes the version to a `.tool-versions` file in the current directory, creating it if needed. It exists purely for convenience. You can think of it as just doing `echo \"<tool> <version>\" > .tool-versions`.\n\nWith the `-u`/ `--home` flag `asdf set` writes to the `.tool-versions` file in your `$HOME` directory, creating the file if it does not exist.\n\nWith the `-p`/ `--parent` flag `asdf set` finds a `.tool-versions` file in the closest parent directory of the current directory.\n\n#### Via Environment Variable\nWhen determining the version looks for an environment variable with the pattern `ASDF_${TOOL}_VERSION`. The version format is the same supported by the `.tool-versions` file. If set, the value of this environment variable overrides any versions set in for the tool in any `.tool-versions` file. For example:\n```shell\nexport ASDF_ELIXIR_VERSION=1.18.1\n```\nWill tell asdf to use Elixir `1.18.1` in the current shell session.\n\nWARNING\nBecause this is an environment variable, it only takes effect where it is set. Any other shell sessions that are running will still use to whatever version is set in a `.tool-versions` file.\n\nThe following example runs tests on an Elixir project with version `1.4.0`.\n```shell\nASDF_ELIXIR_VERSION=1.4.0 mix test\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/manage/versions.html", "title": "Versions", "description": "This page covers how to manage versions of tools using asdf, including installation, listing, setting, and uninstalling versions.", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 02:52:46", "type": "section_detail", "page_metadata": {"title": "Versions | asdf", "language": "en-US", "description": "Manage multiple runtime versions with a single CLI tool", "viewport": "width=device-width,initial-scale=1", "generator": "VitePress v1.6.3", "scrapeId": "4e70b5d5-3cde-4d36-b528-1be0a2488798", "sourceURL": "https://asdf-vm.com/manage/versions.html", "url": "https://asdf-vm.com/manage/versions.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I fallback to system version in asdf-vm?\n\nAssistant: To fallback to system version in asdf-vm, here's what you do:\nTo use the system version of tool `<name>` instead of an asdf managed version you can set the version for the tool to `system`.\nSet system with either `asdf set` or via environment variable as outlined in [Set Version](https://asdf-vm.com/manage/versions.html#set-version) section above.\n```shell\nasdf set <name> system\n# asdf set python system\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/manage/versions.html", "title": "Versions", "description": "This page covers how to manage versions of tools using asdf, including installation, listing, setting, and uninstalling versions.", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 02:52:46", "type": "section_detail", "page_metadata": {"title": "Versions | asdf", "language": "en-US", "description": "Manage multiple runtime versions with a single CLI tool", "viewport": "width=device-width,initial-scale=1", "generator": "VitePress v1.6.3", "scrapeId": "4e70b5d5-3cde-4d36-b528-1be0a2488798", "sourceURL": "https://asdf-vm.com/manage/versions.html", "url": "https://asdf-vm.com/manage/versions.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I view current version in asdf-vm?\n\nAssistant: To view current version in asdf-vm, here's what you do:\n```shell\nasdf current\n# asdf current\n# erlang          17.3          /Users/kim/.tool-versions\n# nodejs          6.11.5        /Users/kim/cool-node-project/.tool-versions\n\nasdf current <name>\n# asdf current erlang\n# erlang          17.3          /Users/kim/.tool-versions\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/manage/versions.html", "title": "Versions", "description": "This page covers how to manage versions of tools using asdf, including installation, listing, setting, and uninstalling versions.", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 02:52:46", "type": "section_detail", "page_metadata": {"title": "Versions | asdf", "language": "en-US", "description": "Manage multiple runtime versions with a single CLI tool", "viewport": "width=device-width,initial-scale=1", "generator": "VitePress v1.6.3", "scrapeId": "4e70b5d5-3cde-4d36-b528-1be0a2488798", "sourceURL": "https://asdf-vm.com/manage/versions.html", "url": "https://asdf-vm.com/manage/versions.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I uninstall version in asdf-vm?\n\nAssistant: To uninstall version in asdf-vm, here's what you do:\n```shell\nasdf uninstall <name> <version>\n# asdf uninstall erlang 17.3\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/manage/versions.html", "title": "Versions", "description": "This page covers how to manage versions of tools using asdf, including installation, listing, setting, and uninstalling versions.", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 02:52:46", "type": "section_detail", "page_metadata": {"title": "Versions | asdf", "language": "en-US", "description": "Manage multiple runtime versions with a single CLI tool", "viewport": "width=device-width,initial-scale=1", "generator": "VitePress v1.6.3", "scrapeId": "4e70b5d5-3cde-4d36-b528-1be0a2488798", "sourceURL": "https://asdf-vm.com/manage/versions.html", "url": "https://asdf-vm.com/manage/versions.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I shims in asdf-vm?\n\nAssistant: To shims in asdf-vm, here's what you do:\nWhen asdf installs a package it creates shims for every executable program in that package in a `$ASDF_DATA_DIR/shims` directory (default `~/.asdf/shims`). This directory being on the `$PATH` (by means of `asdf.sh`, `asdf.fish`, etc) is how the installed programs are made available in the environment.\n\nThe shims themselves are really simple wrappers that `exec` a helper program `asdf exec` passing it the name of the plugin and path to the executable in the installed package that the shim is wrapping.\n\nThe `asdf exec` helper determines the version of the package to use (as specified in `.tool-versions` file or environment variable), the final path to the executable in the package installation directory (this can be manipulated by the `exec-path` callback in the plugin) and the environment to execute in (also provided by the plugin - `exec-env` script), and finally it executes it.\n\nNote\nBecause this system uses `exec` calls, any scripts in the package that are meant to be sourced by the shell instead of executed need to be accessed directly instead of via the shim wrapper. The two `asdf` commands: `which` and `where` can help with this by returning the path to the installed package:\n```shell\n# returns path to main executable in current version\nsource $(asdf which ${PLUGIN})/../script.sh\n\n# returns path to the package installation directory\nsource $(asdf where ${PLUGIN})/bin/script.sh\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/manage/versions.html", "title": "Versions", "description": "This page covers how to manage versions of tools using asdf, including installation, listing, setting, and uninstalling versions.", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 02:52:46", "type": "section_detail", "page_metadata": {"title": "Versions | asdf", "language": "en-US", "description": "Manage multiple runtime versions with a single CLI tool", "viewport": "width=device-width,initial-scale=1", "generator": "VitePress v1.6.3", "scrapeId": "4e70b5d5-3cde-4d36-b528-1be0a2488798", "sourceURL": "https://asdf-vm.com/manage/versions.html", "url": "https://asdf-vm.com/manage/versions.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I by-passing asdf shims in asdf-vm?\n\nAssistant: To by-passing asdf shims in asdf-vm, here's what you do:\nIf for some reason you want to by-pass asdf shims or want your environment variables automatically set upon entering your project's directory, the [asdf-direnv](https://github.com/asdf-community/asdf-direnv) plugin can be helpful. Be sure to check its README for more details..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/manage/versions.html", "title": "Versions", "description": "This page covers how to manage versions of tools using asdf, including installation, listing, setting, and uninstalling versions.", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 02:52:46", "type": "section_detail", "page_metadata": {"title": "Versions | asdf", "language": "en-US", "description": "Manage multiple runtime versions with a single CLI tool", "viewport": "width=device-width,initial-scale=1", "generator": "VitePress v1.6.3", "scrapeId": "4e70b5d5-3cde-4d36-b528-1be0a2488798", "sourceURL": "https://asdf-vm.com/manage/versions.html", "url": "https://asdf-vm.com/manage/versions.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you give me some code examples for Versions in asdf-vm?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Install Version**:\n\n```yaml\n```shell\nasdf install <name> <version>\n# asdf install erlang 17.3\n```\n```\n\nThis snippet shows you how to install version, which is an important aspect of versions.\n\n**Install Latest Stable Version**:\n\n```yaml\n```shell\nasdf install <name> latest\n# asdf install erlang latest\n```\n```\n\nThis snippet shows you how to install latest stable version, which is an important aspect of versions.\n\n**Install Latest Stable Version with String Filter**:\n\n```yaml\n```shell\nasdf install <name> latest:<version>\n# asdf install erlang latest:17\n```\n```\n\nThis snippet shows you how to install latest stable version with string filter, which is an important aspect of versions.\n\n**List Installed Versions**:\n\n```yaml\n```shell\nasdf list <name>\n# asdf list erlang\n```\n```\n\nThis snippet shows you how to list installed versions, which is an important aspect of versions.\n\n**List Installed Versions with String Filter**:\n\n```yaml\n```shell\nasdf list <name> <version>\n# asdf list erlang 17\n```\n```\n\nThis snippet shows you how to list installed versions with string filter, which is an important aspect of versions.\n\n**List All Available Versions**:\n\n```yaml\n```shell\nasdf list all <name>\n# asdf list all erlang\n```\n```\n\nThis snippet shows you how to list all available versions, which is an important aspect of versions.\n\n**List All Available Versions with String Filter**:\n\n```yaml\n```shell\nasdf list all <name> <version>\n# asdf list all erlang 17\n```\n```\n\nThis snippet shows you how to list all available versions with string filter, which is an important aspect of versions.\n\n**Show Latest Stable Version**:\n\n```yaml\n```shell\nasdf latest <name>\n# asdf latest erlang\n```\n```\n\nThis snippet shows you how to show latest stable version, which is an important aspect of versions.\n\n**Show Latest Stable Version with String Filter**:\n\n```yaml\n```shell\nasdf latest <name> <version>\n# asdf latest erlang 17\n```\n```\n\nThis snippet shows you how to show latest stable version with string filter, which is an important aspect of versions.\n\n**Set Version via .tool-versions file**:\n\n```yaml\n```shell\nasdf set [flags] <name> <version> [<version>...]\n# asdf set elixir 1.2.4 # set in current dir\n# asdf set -u elixir 1.2.4 # set in .tool-versions file in home directory\n# asdf set -p elixir 1.2.4 # set in existing .tool-versions file in a parent dir\n\nasdf set <name> latest[:<version>]\n# asdf set elixir latest\n```\n```\n\nThis snippet shows you how to set version via .tool-versions file, which is an important aspect of versions.\n\n**Set Version via Environment Variable**:\n\n```yaml\n```shell\nexport ASDF_ELIXIR_VERSION=1.18.1\n```\n```\n\nThis snippet shows you how to set version via environment variable, which is an important aspect of versions.\n\n**Run Tests with Specific Version**:\n\n```yaml\n```shell\nASDF_ELIXIR_VERSION=1.4.0 mix test\n```\n```\n\nThis snippet shows you how to run tests with specific version, which is an important aspect of versions.\n\n**Fallback to System Version**:\n\n```yaml\n```shell\nasdf set <name> system\n# asdf set python system\n```\n```\n\nThis snippet shows you how to fallback to system version, which is an important aspect of versions.\n\n**View Current Version**:\n\n```yaml\n```shell\nasdf current\n# asdf current\n# erlang          17.3          /Users/kim/.tool-versions\n# nodejs          6.11.5        /Users/kim/cool-node-project/.tool-versions\n\nasdf current <name>\n# asdf current erlang\n# erlang          17.3          /Users/kim/.tool-versions\n```\n```\n\nThis snippet shows you how to view current version, which is an important aspect of versions.\n\n**Uninstall Version**:\n\n```yaml\n```shell\nasdf uninstall <name> <version>\n# asdf uninstall erlang 17.3\n```\n```\n\nThis snippet shows you how to uninstall version, which is an important aspect of versions.\n\n**Source Main Executable**:\n\n```yaml\n```shell\n# returns path to main executable in current version\nsource $(asdf which ${PLUGIN})/../script.sh\n```\n```\n\nThis snippet shows you how to source main executable, which is an important aspect of versions.\n\n**Source Package Installation Directory**:\n\n```yaml\n```shell\n# returns path to the package installation directory\nsource $(asdf where ${PLUGIN})/bin/script.sh\n```\n```\n\nThis snippet shows you how to source package installation directory, which is an important aspect of versions.\n\n", "metadata": {"source_url": "https://asdf-vm.com/manage/versions.html", "title": "Versions", "description": "This page covers how to manage versions of tools using asdf, including installation, listing, setting, and uninstalling versions.", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 02:52:46", "type": "code_examples", "page_metadata": {"title": "Versions | asdf", "language": "en-US", "description": "Manage multiple runtime versions with a single CLI tool", "viewport": "width=device-width,initial-scale=1", "generator": "VitePress v1.6.3", "scrapeId": "4e70b5d5-3cde-4d36-b528-1be0a2488798", "sourceURL": "https://asdf-vm.com/manage/versions.html", "url": "https://asdf-vm.com/manage/versions.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: What are some tips for using Versions in asdf-vm effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nWhen using `asdf set`, remember that it writes to a `.tool-versions` file in the current directory, creating it if needed.\n\nUse the `-u`/`--home` flag with `asdf set` to write to the `.tool-versions` file in your home directory.\n\nUse the `-p`/`--parent` flag with `asdf set` to find a `.tool-versions` file in the closest parent directory.\n\nBe cautious with environment variables as they only take effect in the shell session where they are set.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://asdf-vm.com/manage/versions.html", "title": "Versions", "description": "This page covers how to manage versions of tools using asdf, including installation, listing, setting, and uninstalling versions.", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 02:52:46", "type": "best_practices", "page_metadata": {"title": "Versions | asdf", "language": "en-US", "description": "Manage multiple runtime versions with a single CLI tool", "viewport": "width=device-width,initial-scale=1", "generator": "VitePress v1.6.3", "scrapeId": "4e70b5d5-3cde-4d36-b528-1be0a2488798", "sourceURL": "https://asdf-vm.com/manage/versions.html", "url": "https://asdf-vm.com/manage/versions.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you explain what Managing Plugins in asdf is in asdf-vm?\n\nAssistant: Sure, I'd be happy to explain Managing Plugins in asdf in asdf-vm.\n\n# Managing Plugins in asdf\n\nThis page covers how to manage plugins in asdf, including adding, listing, updating, and removing plugins.Here's a quick rundown of what this is about:\n\n## Plugins\n\nPlugins are how `asdf` knows to handle different tools like Node.js, Ruby, Elixir etc.\n\nSee [Creating Plugins](https://asdf-vm.com/plugins/create.html) for the plugin API used to support more tools.\n\n## Add\n\nAdd plugins via their Git URL:\n\n```shell\nasdf plugin add <name> <git-url>\n# asdf plugin add elm https://github.com/vic/asdf-elm\n```\n\nor via the short-name association in the plugins repository:\n\n```shell\nasdf plugin add <name>\n# asdf plugin add erlang\n```\n\nRecommendation\n\nPrefer the longer `git-url` method as it is independent of the short-name repo.\n\n## List Installed\n\n```shell\nasdf plugin list\n# asdf plugin list\n# java\n# nodejs\n```\n\n```shell\nasdf plugin list --urls\n# asdf plugin list\n# java            https://github.com/halcyon/asdf-java.git\n# nodejs          https://github.com/asdf-vm/asdf-nodejs.git\n```\n\n## List All in Short-name Repository\n\n```shell\nasdf plugin list all\n```\n\nSee [Plugins Shortname Index](https://github.com/asdf-vm/asdf-plugins) for the entire short-name list of plugins.\n\n## Update\n\n```shell\nasdf plugin update --all\n```\n\nIf you want to update a specific package, just say so.\n\n```shell\nasdf plugin update <name>\n# asdf plugin update erlang\n```\n\nThis update will fetch the _latest commit_ on the _default branch_ of the _origin_ of the plugin repository. Versioned plugins and updates are currently being developed ( [#916](https://github.com/asdf-vm/asdf/pull/916)).\n\n## Remove\n\n```bash\nasdf plugin remove <name>\n# asdf plugin remove erlang\n```\n\nRemoving a plugin will remove all installations of the tool made with the plugin. This can be used as a shorthand for cleaning/pruning many unused versions of a tool.\n\n## Syncing the asdf Short-name Repository\n\nThe short-name repo is synced to your local machine and periodically refreshed. This method to determine a sync is as follows:\n\n- sync events are triggered by commands:\n  - `asdf plugin add <name>`\n  - `asdf plugin list all`\n- if configuration option `disable_plugin_short_name_repository` is set to `yes`, then sync is aborted early. See the [asdf config docs](https://asdf-vm.com/manage/configuration.html) for more.\n- if there has not been a synchronization in the last `X` minutes then the sync will occur.\n  - `X` defaults to `60`, but can be configured in your `.asdfrc` via the `plugin_repository_last_check_duration` option. See the [asdf config docs](https://asdf-vm.com/manage/configuration.html) for more.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://asdf-vm.com/manage/plugins.html", "title": "Managing Plugins in asdf", "description": "This page covers how to manage plugins in asdf, including adding, listing, updating, and removing plugins.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 02:54:12", "type": "overview", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "language": "en-US", "title": "Plugins | asdf", "generator": "VitePress v1.6.3", "scrapeId": "1111043f-9119-4fc5-80b8-05145d3a8c27", "sourceURL": "https://asdf-vm.com/manage/plugins.html", "url": "https://asdf-vm.com/manage/plugins.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I plugins in asdf-vm?\n\nAssistant: To plugins in asdf-vm, here's what you do:\nPlugins are how `asdf` knows to handle different tools like Node.js, Ruby, Elixir etc.\n\nSee [Creating Plugins](https://asdf-vm.com/plugins/create.html) for the plugin API used to support more tools..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/manage/plugins.html", "title": "Managing Plugins in asdf", "description": "This page covers how to manage plugins in asdf, including adding, listing, updating, and removing plugins.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 02:54:12", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "language": "en-US", "title": "Plugins | asdf", "generator": "VitePress v1.6.3", "scrapeId": "1111043f-9119-4fc5-80b8-05145d3a8c27", "sourceURL": "https://asdf-vm.com/manage/plugins.html", "url": "https://asdf-vm.com/manage/plugins.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I add in asdf-vm?\n\nAssistant: To add in asdf-vm, here's what you do:\nAdd plugins via their Git URL:\n\n```shell\nasdf plugin add <name> <git-url>\n# asdf plugin add elm https://github.com/vic/asdf-elm\n```\n\nor via the short-name association in the plugins repository:\n\n```shell\nasdf plugin add <name>\n# asdf plugin add erlang\n```\n\nRecommendation\n\nPrefer the longer `git-url` method as it is independent of the short-name repo..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/manage/plugins.html", "title": "Managing Plugins in asdf", "description": "This page covers how to manage plugins in asdf, including adding, listing, updating, and removing plugins.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 02:54:12", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "language": "en-US", "title": "Plugins | asdf", "generator": "VitePress v1.6.3", "scrapeId": "1111043f-9119-4fc5-80b8-05145d3a8c27", "sourceURL": "https://asdf-vm.com/manage/plugins.html", "url": "https://asdf-vm.com/manage/plugins.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I list installed in asdf-vm?\n\nAssistant: To list installed in asdf-vm, here's what you do:\n```shell\nasdf plugin list\n# asdf plugin list\n# java\n# nodejs\n```\n\n```shell\nasdf plugin list --urls\n# asdf plugin list\n# java            https://github.com/halcyon/asdf-java.git\n# nodejs          https://github.com/asdf-vm/asdf-nodejs.git\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/manage/plugins.html", "title": "Managing Plugins in asdf", "description": "This page covers how to manage plugins in asdf, including adding, listing, updating, and removing plugins.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 02:54:12", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "language": "en-US", "title": "Plugins | asdf", "generator": "VitePress v1.6.3", "scrapeId": "1111043f-9119-4fc5-80b8-05145d3a8c27", "sourceURL": "https://asdf-vm.com/manage/plugins.html", "url": "https://asdf-vm.com/manage/plugins.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I list all in short-name repository in asdf-vm?\n\nAssistant: To list all in short-name repository in asdf-vm, here's what you do:\n```shell\nasdf plugin list all\n```\n\nSee [Plugins Shortname Index](https://github.com/asdf-vm/asdf-plugins) for the entire short-name list of plugins..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/manage/plugins.html", "title": "Managing Plugins in asdf", "description": "This page covers how to manage plugins in asdf, including adding, listing, updating, and removing plugins.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 02:54:12", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "language": "en-US", "title": "Plugins | asdf", "generator": "VitePress v1.6.3", "scrapeId": "1111043f-9119-4fc5-80b8-05145d3a8c27", "sourceURL": "https://asdf-vm.com/manage/plugins.html", "url": "https://asdf-vm.com/manage/plugins.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I update in asdf-vm?\n\nAssistant: To update in asdf-vm, here's what you do:\n```shell\nasdf plugin update --all\n```\n\nIf you want to update a specific package, just say so.\n\n```shell\nasdf plugin update <name>\n# asdf plugin update erlang\n```\n\nThis update will fetch the _latest commit_ on the _default branch_ of the _origin_ of the plugin repository. Versioned plugins and updates are currently being developed ( [#916](https://github.com/asdf-vm/asdf/pull/916))..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/manage/plugins.html", "title": "Managing Plugins in asdf", "description": "This page covers how to manage plugins in asdf, including adding, listing, updating, and removing plugins.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 02:54:12", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "language": "en-US", "title": "Plugins | asdf", "generator": "VitePress v1.6.3", "scrapeId": "1111043f-9119-4fc5-80b8-05145d3a8c27", "sourceURL": "https://asdf-vm.com/manage/plugins.html", "url": "https://asdf-vm.com/manage/plugins.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I remove in asdf-vm?\n\nAssistant: To remove in asdf-vm, here's what you do:\n```bash\nasdf plugin remove <name>\n# asdf plugin remove erlang\n```\n\nRemoving a plugin will remove all installations of the tool made with the plugin. This can be used as a shorthand for cleaning/pruning many unused versions of a tool..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/manage/plugins.html", "title": "Managing Plugins in asdf", "description": "This page covers how to manage plugins in asdf, including adding, listing, updating, and removing plugins.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 02:54:12", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "language": "en-US", "title": "Plugins | asdf", "generator": "VitePress v1.6.3", "scrapeId": "1111043f-9119-4fc5-80b8-05145d3a8c27", "sourceURL": "https://asdf-vm.com/manage/plugins.html", "url": "https://asdf-vm.com/manage/plugins.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I syncing the asdf short-name repository in asdf-vm?\n\nAssistant: To syncing the asdf short-name repository in asdf-vm, here's what you do:\nThe short-name repo is synced to your local machine and periodically refreshed. This method to determine a sync is as follows:\n\n- sync events are triggered by commands:\n  - `asdf plugin add <name>`\n  - `asdf plugin list all`\n- if configuration option `disable_plugin_short_name_repository` is set to `yes`, then sync is aborted early. See the [asdf config docs](https://asdf-vm.com/manage/configuration.html) for more.\n- if there has not been a synchronization in the last `X` minutes then the sync will occur.\n  - `X` defaults to `60`, but can be configured in your `.asdfrc` via the `plugin_repository_last_check_duration` option. See the [asdf config docs](https://asdf-vm.com/manage/configuration.html) for more..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/manage/plugins.html", "title": "Managing Plugins in asdf", "description": "This page covers how to manage plugins in asdf, including adding, listing, updating, and removing plugins.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 02:54:12", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "language": "en-US", "title": "Plugins | asdf", "generator": "VitePress v1.6.3", "scrapeId": "1111043f-9119-4fc5-80b8-05145d3a8c27", "sourceURL": "https://asdf-vm.com/manage/plugins.html", "url": "https://asdf-vm.com/manage/plugins.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you give me some code examples for Managing Plugins in asdf in asdf-vm?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Add Plugin via Git URL**:\n\n```yaml\nasdf plugin add <name> <git-url>\n# asdf plugin add elm https://github.com/vic/asdf-elm\n```\n\nThis snippet shows you how to add plugin via git url, which is an important aspect of managing plugins in asdf.\n\n**Add Plugin via Short-name**:\n\n```yaml\nasdf plugin add <name>\n# asdf plugin add erlang\n```\n\nThis snippet shows you how to add plugin via short-name, which is an important aspect of managing plugins in asdf.\n\n**List Installed Plugins**:\n\n```yaml\nasdf plugin list\n```\n\nThis snippet shows you how to list installed plugins, which is an important aspect of managing plugins in asdf.\n\n**List Installed Plugins with URLs**:\n\n```yaml\nasdf plugin list --urls\n```\n\nThis snippet shows you how to list installed plugins with urls, which is an important aspect of managing plugins in asdf.\n\n**List All Plugins in Short-name Repository**:\n\n```yaml\nasdf plugin list all\n```\n\nThis snippet shows you how to list all plugins in short-name repository, which is an important aspect of managing plugins in asdf.\n\n**Update All Plugins**:\n\n```yaml\nasdf plugin update --all\n```\n\nThis snippet shows you how to update all plugins, which is an important aspect of managing plugins in asdf.\n\n**Update Specific Plugin**:\n\n```yaml\nasdf plugin update <name>\n# asdf plugin update erlang\n```\n\nThis snippet shows you how to update specific plugin, which is an important aspect of managing plugins in asdf.\n\n**Remove Plugin**:\n\n```yaml\nasdf plugin remove <name>\n# asdf plugin remove erlang\n```\n\nThis snippet shows you how to remove plugin, which is an important aspect of managing plugins in asdf.\n\n", "metadata": {"source_url": "https://asdf-vm.com/manage/plugins.html", "title": "Managing Plugins in asdf", "description": "This page covers how to manage plugins in asdf, including adding, listing, updating, and removing plugins.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 02:54:12", "type": "code_examples", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "language": "en-US", "title": "Plugins | asdf", "generator": "VitePress v1.6.3", "scrapeId": "1111043f-9119-4fc5-80b8-05145d3a8c27", "sourceURL": "https://asdf-vm.com/manage/plugins.html", "url": "https://asdf-vm.com/manage/plugins.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: What are some tips for using Managing Plugins in asdf in asdf-vm effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nPrefer the longer `git-url` method for adding plugins as it is independent of the short-name repo.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://asdf-vm.com/manage/plugins.html", "title": "Managing Plugins in asdf", "description": "This page covers how to manage plugins in asdf, including adding, listing, updating, and removing plugins.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 02:54:12", "type": "best_practices", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "language": "en-US", "title": "Plugins | asdf", "generator": "VitePress v1.6.3", "scrapeId": "1111043f-9119-4fc5-80b8-05145d3a8c27", "sourceURL": "https://asdf-vm.com/manage/plugins.html", "url": "https://asdf-vm.com/manage/plugins.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you explain what FAQ is in asdf-vm?\n\nAssistant: Sure, I'd be happy to explain FAQ in asdf-vm.\n\n# FAQ\n\nHere are some common questions regarding `asdf`.Here's a quick rundown of what this is about:\n\n## WSL1 support?\n\nWSL1 ( [Windows Subsystem for Linux](https://en.wikipedia.org/wiki/Windows_Subsystem_for_Linux) 1) is not officially supported. Some aspects of `asdf` may not work properly. We do not intend to add official support for WSL1.\n\n## WSL2 support?\n\nWSL2 ( [Windows Subsystem for Linux](https://en.wikipedia.org/wiki/Windows_Subsystem_for_Linux#WSL_2) 2) should work using the setup & dependency instructions for you chosen WSL distro.\n\nImportantly, WSL2 is _only_ expected to work properly when the current working directory is a Unix drive and not a bound Windows drive.\n\nWe intend to run out test suite on WSL2 when host runner support is available on GitHub Actions, currently this does not appear to be the case.\n\n## Newly installed executable not running?\n\nI just `npm install -g yarn`, but cannot execute `yarn`. What gives?\n\n`asdf` uses [shims](https://en.wikipedia.org/wiki/Shim_(computing)) to manage executables. Those installed by plugins have shims automatically created, whereas installing executables via an `asdf` managed tool will require you to notify `asdf` of the need to create shims. In this instance, to create a shim for [Yarn](https://yarnpkg.com/). See the [`asdf reshim` command docs](https://asdf-vm.com/manage/core.html#reshim).\n\n## Shell not detecting newly installed shims?\n\nIf `asdf reshim` is not resolving your issue, then it is most-likely due to the sourcing of `asdf.sh` or `asdf.fish` _not_ being at the **BOTTOM** of your Shell config file ( `.bash_profile`, `.zshrc`, `config.fish` etc). It needs to be sourced **AFTER** you have set your `$PATH` and **AFTER** you have sourced your framework (oh-my-zsh etc) if any.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://asdf-vm.com/more/faq.html", "title": "FAQ", "description": "Here are some common questions regarding `asdf`.", "has_code_examples": false, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 02:54:23", "type": "overview", "page_metadata": {"title": "FAQ | asdf", "description": "Manage multiple runtime versions with a single CLI tool", "language": "en-US", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "scrapeId": "a28760cb-2405-456a-91b8-9d488a28ea04", "sourceURL": "https://asdf-vm.com/more/faq.html", "url": "https://asdf-vm.com/more/faq.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I wsl1 support? in asdf-vm?\n\nAssistant: To wsl1 support? in asdf-vm, here's what you do:\nWSL1 ( [Windows Subsystem for Linux](https://en.wikipedia.org/wiki/Windows_Subsystem_for_Linux) 1) is not officially supported. Some aspects of `asdf` may not work properly. We do not intend to add official support for WSL1..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/more/faq.html", "title": "FAQ", "description": "Here are some common questions regarding `asdf`.", "has_code_examples": false, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 02:54:23", "type": "section_detail", "page_metadata": {"title": "FAQ | asdf", "description": "Manage multiple runtime versions with a single CLI tool", "language": "en-US", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "scrapeId": "a28760cb-2405-456a-91b8-9d488a28ea04", "sourceURL": "https://asdf-vm.com/more/faq.html", "url": "https://asdf-vm.com/more/faq.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I wsl2 support? in asdf-vm?\n\nAssistant: To wsl2 support? in asdf-vm, here's what you do:\nWSL2 ( [Windows Subsystem for Linux](https://en.wikipedia.org/wiki/Windows_Subsystem_for_Linux#WSL_2) 2) should work using the setup & dependency instructions for you chosen WSL distro.\n\nImportantly, WSL2 is _only_ expected to work properly when the current working directory is a Unix drive and not a bound Windows drive.\n\nWe intend to run out test suite on WSL2 when host runner support is available on GitHub Actions, currently this does not appear to be the case..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/more/faq.html", "title": "FAQ", "description": "Here are some common questions regarding `asdf`.", "has_code_examples": false, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 02:54:23", "type": "section_detail", "page_metadata": {"title": "FAQ | asdf", "description": "Manage multiple runtime versions with a single CLI tool", "language": "en-US", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "scrapeId": "a28760cb-2405-456a-91b8-9d488a28ea04", "sourceURL": "https://asdf-vm.com/more/faq.html", "url": "https://asdf-vm.com/more/faq.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I newly installed executable not running? in asdf-vm?\n\nAssistant: To newly installed executable not running? in asdf-vm, here's what you do:\nI just `npm install -g yarn`, but cannot execute `yarn`. What gives?\n\n`asdf` uses [shims](https://en.wikipedia.org/wiki/Shim_(computing)) to manage executables. Those installed by plugins have shims automatically created, whereas installing executables via an `asdf` managed tool will require you to notify `asdf` of the need to create shims. In this instance, to create a shim for [Yarn](https://yarnpkg.com/). See the [`asdf reshim` command docs](https://asdf-vm.com/manage/core.html#reshim)..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/more/faq.html", "title": "FAQ", "description": "Here are some common questions regarding `asdf`.", "has_code_examples": false, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 02:54:23", "type": "section_detail", "page_metadata": {"title": "FAQ | asdf", "description": "Manage multiple runtime versions with a single CLI tool", "language": "en-US", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "scrapeId": "a28760cb-2405-456a-91b8-9d488a28ea04", "sourceURL": "https://asdf-vm.com/more/faq.html", "url": "https://asdf-vm.com/more/faq.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I shell not detecting newly installed shims? in asdf-vm?\n\nAssistant: To shell not detecting newly installed shims? in asdf-vm, here's what you do:\nIf `asdf reshim` is not resolving your issue, then it is most-likely due to the sourcing of `asdf.sh` or `asdf.fish` _not_ being at the **BOTTOM** of your Shell config file ( `.bash_profile`, `.zshrc`, `config.fish` etc). It needs to be sourced **AFTER** you have set your `$PATH` and **AFTER** you have sourced your framework (oh-my-zsh etc) if any..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/more/faq.html", "title": "FAQ", "description": "Here are some common questions regarding `asdf`.", "has_code_examples": false, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 02:54:23", "type": "section_detail", "page_metadata": {"title": "FAQ | asdf", "description": "Manage multiple runtime versions with a single CLI tool", "language": "en-US", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "scrapeId": "a28760cb-2405-456a-91b8-9d488a28ea04", "sourceURL": "https://asdf-vm.com/more/faq.html", "url": "https://asdf-vm.com/more/faq.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: What are some tips for using FAQ in asdf-vm effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nEnsure that `asdf.sh` or `asdf.fish` is sourced at the bottom of your Shell config file.\n\nMake sure to set your `$PATH` before sourcing `asdf.sh` or `asdf.fish`.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://asdf-vm.com/more/faq.html", "title": "FAQ", "description": "Here are some common questions regarding `asdf`.", "has_code_examples": false, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 02:54:23", "type": "best_practices", "page_metadata": {"title": "FAQ | asdf", "description": "Manage multiple runtime versions with a single CLI tool", "language": "en-US", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "scrapeId": "a28760cb-2405-456a-91b8-9d488a28ea04", "sourceURL": "https://asdf-vm.com/more/faq.html", "url": "https://asdf-vm.com/more/faq.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you explain what asdf core contribution guide is in asdf-vm?\n\nAssistant: Sure, I'd be happy to explain asdf core contribution guide in asdf-vm.\n\n# asdf core contribution guide\n\nGuide for contributing to the asdf core project.Here's a quick rundown of what this is about:\n\n## Initial Setup\n\nFork `asdf` on GitHub and/or Git clone the default branch:\n\n```shell\n# clone your fork\ngit clone https://github.com/<GITHUB_USER>/asdf.git\n# or clone asdf\ngit clone https://github.com/asdf-vm/asdf.git\n```\n\nThe tools for core development are in this repo's `.tool-versions`. If you wish to manage with `asdf` itself, add the plugins:\n\n```shell\nasdf plugin add bats https://github.com/timgluz/asdf-bats.git\nasdf plugin add shellcheck https://github.com/luizm/asdf-shellcheck.git\nasdf plugin add shfmt https://github.com/luizm/asdf-shfmt.git\n```\n\nInstall the versions to develop `asdf` with:\n\n```shell\nasdf install\n```\n\nIt _may_ be useful to not use `asdf` to manage the tools during development on your local machine as you may need to break functionality which would then break your dev tooling. Here's the raw list of tools:\n\n- [bats-core](https://github.com/bats-core/bats-core): Bash Automated Testing System, for unit testing Bash or POSIX compliant scripts.\n- [shellcheck](https://github.com/koalaman/shellcheck): Static analysis tool for shell scripts.\n- [shfmt](https://github.com/mvdan/sh): A shell parser, formatter, and interpreter with bash support; includes shfmt.\n\n## Development\n\nIf you want to try out your changes without making change to your installed `asdf`, you can set the `$ASDF_DIR` variable to the path where you cloned the repository, and temporarily prepend the `bin` and `shims` directory of the directory to your path.\n\nIt is best to format, lint and test your code locally before you commit or push to the remote. Use the following scripts/commands:\n\n```shell\n# Lint\n./scripts/lint.bash --check\n\n# Fix & Format\n./scripts/lint.bash --fix\n\n# Test: all tests\n./scripts/test.bash\n\n# Test: for specific command\nbats test/list_commands.bash\n```\n\nTIP\n\n**Add tests!** - Tests are **required** for new features and speed up review of bug fixes. Please cover new code paths before you create a Pull Request. See [bats-core documentation](https://bats-core.readthedocs.io/en/stable/index.html).\n\n## Gitignore\n\nThe following is the `.gitignore` file in the `asdf-vm/asdf` repository. We ignore project-specific files. Files specific to your OS, tools or workflows should be ignored in your global `.gitignore` configuration, [see here](http://stratus3d.com/blog/2018/06/03/stop-excluding-editor-temp-files-in-gitignore/) for more details.\n\n```gitignore\n/installs\n/downloads\n/shims\nrepository\n.vagrant\nkeyrings\n/tmp\n\ndist/\n\n# ignore build binary\nasdf\n```\n\n## .git-blame-ignore-revs\n\n`asdf` uses a `.git-blame-ignore-revs` to reduce noise when running a blame. See the [git blame documentation](https://git-scm.com/docs/git-blame) for more information.\n\nUse the file with `git blame` like so:\n\n```sh\ngit blame --ignore-revs-file .git-blame-ignore-revs ./test/install_command.bats\n```\n\nOptionally, configure to use the file on every invocation of `blame` without manually supplying it:\n\n```sh\ngit config blame.ignoreRevsFile .git-blame-ignore-revs\n```\n\nIt is possible to configure IDEs to use this file. For example, when using VSCode (with [GitLens](https://marketplace.visualstudio.com/items?itemName=eamodio.gitlens)), write the following to `.vscode/settings.json`:\n\n```json\n{\n  \"gitlens.advanced.blame.customArguments\": [\\\n    \"--ignore-revs-file\",\\\n    \".git-blame-ignore-revs\"\\\n  ]\n}\n```\n\n## Bats Testing\n\nExecute tests locally with:\n\n```shell\n./scripts/test.bash\n```\n\nBefore writing tests **please read**:\n\n- existing tests in `test/`\n- [bats-core documentation](https://bats-core.readthedocs.io/en/stable/index.html)\n- existing Bats settings used in `scripts/test.bash`\n\n## Bats Tips\n\nBats debugging can be difficult at times. Using the TAP output with `-t` flag will enable you to print outputs with the special file descriptor `>&3` during test execution, simplifying debugging. As an example:\n\n```shell\n# test/some_tests.bats\n\nprintf \"%s\\n\" \"Will not be printed during bats test/some_tests.bats\"\nprintf \"%s\\n\" \"Will be printed during bats -t test/some_tests.bats\" >&3\n```\n\nThis is further documented in bats-core [Printing to the Terminal](https://bats-core.readthedocs.io/en/stable/writing-tests.html#printing-to-the-terminal).\n\n## Pull Requests, Releases & Conventional Commits\n\n`asdf` is using an automated release tool called [Release Please](https://github.com/googleapis/release-please) to automatically bump the [SemVer](https://semver.org/) version and generate the [Changelog](https://github.com/asdf-vm/asdf/blob/master/CHANGELOG.md). This information is determined by reading the commit history since the last release.\n\n[Conventional Commit messages](https://www.conventionalcommits.org/) define the format of the Pull Request Title which becomes the commit message format on the default branch. This is enforced with GitHub Action [`amannn/action-semantic-pull-request`](https://github.com/amannn/action-semantic-pull-request).\n\nConventional Commit follows this format:\n\n```\n<type>[optional scope][optional !]: <description>\n\n<!-- examples -->\nfix: some fix\nfeat: a new feature\ndocs: some documentation update\ndocs(website): some change for the website\nfeat!: feature with breaking change\n```\n\nThe full list of `<types>` are: `feat`, `fix`, `docs`, `style`, `refactor`, `perf`, `test`, `build`, `ci`, `chore`, `revert`.\n\n- `!`: indicates a breaking change\n- `fix`: will create a new SemVer `patch`\n- `feat`: will create a new SemVer `minor`\n- `<type>!`: will create a new SemVer `major`\n\nThe Pull Request Title must follow this format.\n\nTIP\n\nUse Conventional Commit message format for your Pull Request Title.\n\n## Docker Images\n\nThe [asdf-alpine](https://github.com/vic/asdf-alpine) and [asdf-ubuntu](https://github.com/vic/asdf-ubuntu) projects are an ongoing effort to provide Dockerized images of some asdf tools. You can use these docker images as base for your development servers, or for running your production apps.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://asdf-vm.com/contribute/core.html", "title": "asdf core contribution guide", "description": "Guide for contributing to the asdf core project.", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 02:54:55", "type": "overview", "page_metadata": {"title": "asdf", "generator": "VitePress v1.6.3", "description": "Manage multiple runtime versions with a single CLI tool", "language": "en-US", "viewport": "width=device-width,initial-scale=1", "scrapeId": "2e458e78-017b-43df-aaeb-3eaf397e9070", "sourceURL": "https://asdf-vm.com/contribute/core.html", "url": "https://asdf-vm.com/contribute/core.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I initial setup in asdf-vm?\n\nAssistant: To initial setup in asdf-vm, here's what you do:\nFork `asdf` on GitHub and/or Git clone the default branch:\n\n```shell\n# clone your fork\ngit clone https://github.com/<GITHUB_USER>/asdf.git\n# or clone asdf\ngit clone https://github.com/asdf-vm/asdf.git\n```\n\nThe tools for core development are in this repo's `.tool-versions`. If you wish to manage with `asdf` itself, add the plugins:\n\n```shell\nasdf plugin add bats https://github.com/timgluz/asdf-bats.git\nasdf plugin add shellcheck https://github.com/luizm/asdf-shellcheck.git\nasdf plugin add shfmt https://github.com/luizm/asdf-shfmt.git\n```\n\nInstall the versions to develop `asdf` with:\n\n```shell\nasdf install\n```\n\nIt _may_ be useful to not use `asdf` to manage the tools during development on your local machine as you may need to break functionality which would then break your dev tooling. Here's the raw list of tools:\n\n- [bats-core](https://github.com/bats-core/bats-core): Bash Automated Testing System, for unit testing Bash or POSIX compliant scripts.\n- [shellcheck](https://github.com/koalaman/shellcheck): Static analysis tool for shell scripts.\n- [shfmt](https://github.com/mvdan/sh): A shell parser, formatter, and interpreter with bash support; includes shfmt..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/contribute/core.html", "title": "asdf core contribution guide", "description": "Guide for contributing to the asdf core project.", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 02:54:55", "type": "section_detail", "page_metadata": {"title": "asdf", "generator": "VitePress v1.6.3", "description": "Manage multiple runtime versions with a single CLI tool", "language": "en-US", "viewport": "width=device-width,initial-scale=1", "scrapeId": "2e458e78-017b-43df-aaeb-3eaf397e9070", "sourceURL": "https://asdf-vm.com/contribute/core.html", "url": "https://asdf-vm.com/contribute/core.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I development in asdf-vm?\n\nAssistant: To development in asdf-vm, here's what you do:\nIf you want to try out your changes without making change to your installed `asdf`, you can set the `$ASDF_DIR` variable to the path where you cloned the repository, and temporarily prepend the `bin` and `shims` directory of the directory to your path.\n\nIt is best to format, lint and test your code locally before you commit or push to the remote. Use the following scripts/commands:\n\n```shell\n# Lint\n./scripts/lint.bash --check\n\n# Fix & Format\n./scripts/lint.bash --fix\n\n# Test: all tests\n./scripts/test.bash\n\n# Test: for specific command\nbats test/list_commands.bash\n```\n\nTIP\n\n**Add tests!** - Tests are **required** for new features and speed up review of bug fixes. Please cover new code paths before you create a Pull Request. See [bats-core documentation](https://bats-core.readthedocs.io/en/stable/index.html)..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/contribute/core.html", "title": "asdf core contribution guide", "description": "Guide for contributing to the asdf core project.", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 02:54:55", "type": "section_detail", "page_metadata": {"title": "asdf", "generator": "VitePress v1.6.3", "description": "Manage multiple runtime versions with a single CLI tool", "language": "en-US", "viewport": "width=device-width,initial-scale=1", "scrapeId": "2e458e78-017b-43df-aaeb-3eaf397e9070", "sourceURL": "https://asdf-vm.com/contribute/core.html", "url": "https://asdf-vm.com/contribute/core.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I gitignore in asdf-vm?\n\nAssistant: To gitignore in asdf-vm, here's what you do:\nThe following is the `.gitignore` file in the `asdf-vm/asdf` repository. We ignore project-specific files. Files specific to your OS, tools or workflows should be ignored in your global `.gitignore` configuration, [see here](http://stratus3d.com/blog/2018/06/03/stop-excluding-editor-temp-files-in-gitignore/) for more details.\n\n```gitignore\n/installs\n/downloads\n/shims\nrepository\n.vagrant\nkeyrings\n/tmp\n\ndist/\n\n# ignore build binary\nasdf\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/contribute/core.html", "title": "asdf core contribution guide", "description": "Guide for contributing to the asdf core project.", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 02:54:55", "type": "section_detail", "page_metadata": {"title": "asdf", "generator": "VitePress v1.6.3", "description": "Manage multiple runtime versions with a single CLI tool", "language": "en-US", "viewport": "width=device-width,initial-scale=1", "scrapeId": "2e458e78-017b-43df-aaeb-3eaf397e9070", "sourceURL": "https://asdf-vm.com/contribute/core.html", "url": "https://asdf-vm.com/contribute/core.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I .git-blame-ignore-revs in asdf-vm?\n\nAssistant: To .git-blame-ignore-revs in asdf-vm, here's what you do:\n`asdf` uses a `.git-blame-ignore-revs` to reduce noise when running a blame. See the [git blame documentation](https://git-scm.com/docs/git-blame) for more information.\n\nUse the file with `git blame` like so:\n\n```sh\ngit blame --ignore-revs-file .git-blame-ignore-revs ./test/install_command.bats\n```\n\nOptionally, configure to use the file on every invocation of `blame` without manually supplying it:\n\n```sh\ngit config blame.ignoreRevsFile .git-blame-ignore-revs\n```\n\nIt is possible to configure IDEs to use this file. For example, when using VSCode (with [GitLens](https://marketplace.visualstudio.com/items?itemName=eamodio.gitlens)), write the following to `.vscode/settings.json`:\n\n```json\n{\n  \"gitlens.advanced.blame.customArguments\": [\\\n    \"--ignore-revs-file\",\\\n    \".git-blame-ignore-revs\"\\\n  ]\n}\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/contribute/core.html", "title": "asdf core contribution guide", "description": "Guide for contributing to the asdf core project.", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 02:54:55", "type": "section_detail", "page_metadata": {"title": "asdf", "generator": "VitePress v1.6.3", "description": "Manage multiple runtime versions with a single CLI tool", "language": "en-US", "viewport": "width=device-width,initial-scale=1", "scrapeId": "2e458e78-017b-43df-aaeb-3eaf397e9070", "sourceURL": "https://asdf-vm.com/contribute/core.html", "url": "https://asdf-vm.com/contribute/core.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I bats testing in asdf-vm?\n\nAssistant: To bats testing in asdf-vm, here's what you do:\nExecute tests locally with:\n\n```shell\n./scripts/test.bash\n```\n\nBefore writing tests **please read**:\n\n- existing tests in `test/`\n- [bats-core documentation](https://bats-core.readthedocs.io/en/stable/index.html)\n- existing Bats settings used in `scripts/test.bash`.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/contribute/core.html", "title": "asdf core contribution guide", "description": "Guide for contributing to the asdf core project.", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 02:54:55", "type": "section_detail", "page_metadata": {"title": "asdf", "generator": "VitePress v1.6.3", "description": "Manage multiple runtime versions with a single CLI tool", "language": "en-US", "viewport": "width=device-width,initial-scale=1", "scrapeId": "2e458e78-017b-43df-aaeb-3eaf397e9070", "sourceURL": "https://asdf-vm.com/contribute/core.html", "url": "https://asdf-vm.com/contribute/core.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I bats tips in asdf-vm?\n\nAssistant: To bats tips in asdf-vm, here's what you do:\nBats debugging can be difficult at times. Using the TAP output with `-t` flag will enable you to print outputs with the special file descriptor `>&3` during test execution, simplifying debugging. As an example:\n\n```shell\n# test/some_tests.bats\n\nprintf \"%s\\n\" \"Will not be printed during bats test/some_tests.bats\"\nprintf \"%s\\n\" \"Will be printed during bats -t test/some_tests.bats\" >&3\n```\n\nThis is further documented in bats-core [Printing to the Terminal](https://bats-core.readthedocs.io/en/stable/writing-tests.html#printing-to-the-terminal)..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/contribute/core.html", "title": "asdf core contribution guide", "description": "Guide for contributing to the asdf core project.", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 02:54:55", "type": "section_detail", "page_metadata": {"title": "asdf", "generator": "VitePress v1.6.3", "description": "Manage multiple runtime versions with a single CLI tool", "language": "en-US", "viewport": "width=device-width,initial-scale=1", "scrapeId": "2e458e78-017b-43df-aaeb-3eaf397e9070", "sourceURL": "https://asdf-vm.com/contribute/core.html", "url": "https://asdf-vm.com/contribute/core.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I pull requests, releases & conventional commits in asdf-vm?\n\nAssistant: To pull requests, releases & conventional commits in asdf-vm, here's what you do:\n`asdf` is using an automated release tool called [Release Please](https://github.com/googleapis/release-please) to automatically bump the [SemVer](https://semver.org/) version and generate the [Changelog](https://github.com/asdf-vm/asdf/blob/master/CHANGELOG.md). This information is determined by reading the commit history since the last release.\n\n[Conventional Commit messages](https://www.conventionalcommits.org/) define the format of the Pull Request Title which becomes the commit message format on the default branch. This is enforced with GitHub Action [`amannn/action-semantic-pull-request`](https://github.com/amannn/action-semantic-pull-request).\n\nConventional Commit follows this format:\n\n```\n<type>[optional scope][optional !]: <description>\n\n<!-- examples -->\nfix: some fix\nfeat: a new feature\ndocs: some documentation update\ndocs(website): some change for the website\nfeat!: feature with breaking change\n```\n\nThe full list of `<types>` are: `feat`, `fix`, `docs`, `style`, `refactor`, `perf`, `test`, `build`, `ci`, `chore`, `revert`.\n\n- `!`: indicates a breaking change\n- `fix`: will create a new SemVer `patch`\n- `feat`: will create a new SemVer `minor`\n- `<type>!`: will create a new SemVer `major`\n\nThe Pull Request Title must follow this format.\n\nTIP\n\nUse Conventional Commit message format for your Pull Request Title..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/contribute/core.html", "title": "asdf core contribution guide", "description": "Guide for contributing to the asdf core project.", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 02:54:55", "type": "section_detail", "page_metadata": {"title": "asdf", "generator": "VitePress v1.6.3", "description": "Manage multiple runtime versions with a single CLI tool", "language": "en-US", "viewport": "width=device-width,initial-scale=1", "scrapeId": "2e458e78-017b-43df-aaeb-3eaf397e9070", "sourceURL": "https://asdf-vm.com/contribute/core.html", "url": "https://asdf-vm.com/contribute/core.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I docker images in asdf-vm?\n\nAssistant: To docker images in asdf-vm, here's what you do:\nThe [asdf-alpine](https://github.com/vic/asdf-alpine) and [asdf-ubuntu](https://github.com/vic/asdf-ubuntu) projects are an ongoing effort to provide Dockerized images of some asdf tools. You can use these docker images as base for your development servers, or for running your production apps..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/contribute/core.html", "title": "asdf core contribution guide", "description": "Guide for contributing to the asdf core project.", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 02:54:55", "type": "section_detail", "page_metadata": {"title": "asdf", "generator": "VitePress v1.6.3", "description": "Manage multiple runtime versions with a single CLI tool", "language": "en-US", "viewport": "width=device-width,initial-scale=1", "scrapeId": "2e458e78-017b-43df-aaeb-3eaf397e9070", "sourceURL": "https://asdf-vm.com/contribute/core.html", "url": "https://asdf-vm.com/contribute/core.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you give me some code examples for asdf core contribution guide in asdf-vm?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Clone Repository**:\n\n```yaml\n# clone your fork\ngit clone https://github.com/<GITHUB_USER>/asdf.git\n# or clone asdf\ngit clone https://github.com/asdf-vm/asdf.git\n```\n\nThis snippet shows you how to clone repository, which is an important aspect of asdf core contribution guide.\n\n**Add Plugins**:\n\n```yaml\nasdf plugin add bats https://github.com/timgluz/asdf-bats.git\nasdf plugin add shellcheck https://github.com/luizm/asdf-shellcheck.git\nasdf plugin add shfmt https://github.com/luizm/asdf-shfmt.git\n```\n\nThis snippet shows you how to add plugins, which is an important aspect of asdf core contribution guide.\n\n**Install Tools**:\n\n```yaml\nasdf install\n```\n\nThis snippet shows you how to install tools, which is an important aspect of asdf core contribution guide.\n\n**Lint Code**:\n\n```yaml\n# Lint\n./scripts/lint.bash --check\n```\n\nThis snippet shows you how to lint code, which is an important aspect of asdf core contribution guide.\n\n**Fix & Format Code**:\n\n```yaml\n# Fix & Format\n./scripts/lint.bash --fix\n```\n\nThis snippet shows you how to fix & format code, which is an important aspect of asdf core contribution guide.\n\n**Run All Tests**:\n\n```yaml\n# Test: all tests\n./scripts/test.bash\n```\n\nThis snippet shows you how to run all tests, which is an important aspect of asdf core contribution guide.\n\n**Run Specific Test**:\n\n```yaml\n# Test: for specific command\nbats test/list_commands.bash\n```\n\nThis snippet shows you how to run specific test, which is an important aspect of asdf core contribution guide.\n\n**Git Blame Ignore Revs**:\n\n```yaml\ngit blame --ignore-revs-file .git-blame-ignore-revs ./test/install_command.bats\n```\n\nThis snippet shows you how to git blame ignore revs, which is an important aspect of asdf core contribution guide.\n\n**Configure Git Blame**:\n\n```yaml\ngit config blame.ignoreRevsFile .git-blame-ignore-revs\n```\n\nThis snippet shows you how to configure git blame, which is an important aspect of asdf core contribution guide.\n\n**VSCode GitLens Configuration**:\n\n```yaml\n{\n  \"gitlens.advanced.blame.customArguments\": [\\\n    \"--ignore-revs-file\",\\\n    \".git-blame-ignore-revs\"\\\n  ]\n}\n```\n\nThis snippet shows you how to vscode gitlens configuration, which is an important aspect of asdf core contribution guide.\n\n", "metadata": {"source_url": "https://asdf-vm.com/contribute/core.html", "title": "asdf core contribution guide", "description": "Guide for contributing to the asdf core project.", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 02:54:55", "type": "code_examples", "page_metadata": {"title": "asdf", "generator": "VitePress v1.6.3", "description": "Manage multiple runtime versions with a single CLI tool", "language": "en-US", "viewport": "width=device-width,initial-scale=1", "scrapeId": "2e458e78-017b-43df-aaeb-3eaf397e9070", "sourceURL": "https://asdf-vm.com/contribute/core.html", "url": "https://asdf-vm.com/contribute/core.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: What are some tips for using asdf core contribution guide in asdf-vm effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nAdd tests! - Tests are required for new features and speed up review of bug fixes. Please cover new code paths before you create a Pull Request.\n\nUse Conventional Commit message format for your Pull Request Title.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://asdf-vm.com/contribute/core.html", "title": "asdf core contribution guide", "description": "Guide for contributing to the asdf core project.", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 02:54:55", "type": "best_practices", "page_metadata": {"title": "asdf", "generator": "VitePress v1.6.3", "description": "Manage multiple runtime versions with a single CLI tool", "language": "en-US", "viewport": "width=device-width,initial-scale=1", "scrapeId": "2e458e78-017b-43df-aaeb-3eaf397e9070", "sourceURL": "https://asdf-vm.com/contribute/core.html", "url": "https://asdf-vm.com/contribute/core.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you explain what All Commands is in asdf-vm?\n\nAssistant: Sure, I'd be happy to explain All Commands in asdf-vm.\n\n# All Commands\n\nThe list of all commands available in `asdf`. This list is the `asdf help` command text.Here's a quick rundown of what this is about:\n\n## Manage Plugins\n\nasdf plugin add <name> [<git-url>]      Add a plugin from the plugin repo OR,\n                                        add a Git repo as a plugin by\n                                        specifying the name and repo url\nasdf plugin list [--urls] [--refs]      List installed plugins. Optionally show\n                                        git urls and git-ref\nasdf plugin list all                    List plugins registered on asdf-plugins\n                                        repository with URLs\nasdf plugin remove <name>               Remove plugin and package versions\nasdf plugin update <name> [<git-ref>]   Update a plugin to latest commit on\n                                        default branch or a particular git-ref\nasdf plugin update --all                Update all plugins to latest commit on\n                                        default branch\n\n## Manage Tools\n\nasdf current                            Display current version set or being\n                                        used for all packages\nasdf current <name>                     Display current version set or being\n                                        used for package\nasdf help <name> [<version>]            Output documentation for plugin and tool\nasdf install                            Install all the package versions listed\n                                        in the .tool-versions file\nasdf install <name>                     Install one tool at the version\n                                        specified in the .tool-versions file\nasdf install <name> <version>           Install a specific version of a package\nasdf install <name> latest[:<version>]  Install the latest stable version of a\n                                        package, or with optional version,\n                                        install the latest stable version that\n                                        begins with the given string\nasdf latest <name> [<version>]          Show latest stable version of a package\nasdf latest --all                       Show latest stable version of all the\n                                        packages and if they are installed\nasdf list <name> [version]              List installed versions of a package and\n                                        optionally filter the versions\nasdf list all <name> [<version>]        List all versions of a package and\n                                        optionally filter the returned versions\nasdf set [-u] [-p] <name> <versions...> Set a tool version in a .tool-version in\n                                        the current directory, or a parent\ndirectory.\nasdf uninstall <name> <version>         Remove a specific version of a package\nasdf where <name> [<version>]           Display install path for an installed\n                                        or current version\nasdf which <command>                    Display the path to an executable\n\n## Utils\n\nasdf exec <command> [args...]           Executes the command shim for current version\nasdf env <command> [util]               Runs util (default: `env`) inside the\n                                        environment used for command shim execution.\nasdf info                               Print OS, Shell and ASDF debug information.\nasdf version                            Print the currently installed version of ASDF\nasdf reshim <name> <version>            Recreate shims for version of a package\nasdf shimversions <command>             List the plugins and versions that\n                                        provide a command\n\n## Resources\n\nGitHub: https://github.com/asdf-vm/asdf\nDocs:   https://asdf-vm.com\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://asdf-vm.com/manage/commands.html", "title": "All Commands", "description": "The list of all commands available in `asdf`. This list is the `asdf help` command text.", "has_code_examples": false, "has_best_practices": false, "section_count": 4, "timestamp": "2025-03-01 02:55:15", "type": "overview", "page_metadata": {"description": "Manage multiple runtime versions with a single CLI tool", "viewport": "width=device-width,initial-scale=1", "title": "All Commands | asdf", "generator": "VitePress v1.6.3", "language": "en-US", "scrapeId": "19992fdc-0d37-456d-aaae-22c9ac8c3fd2", "sourceURL": "https://asdf-vm.com/manage/commands.html", "url": "https://asdf-vm.com/manage/commands.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I manage plugins in asdf-vm?\n\nAssistant: To manage plugins in asdf-vm, here's what you do:\nasdf plugin add <name> [<git-url>]      Add a plugin from the plugin repo OR,\n                                        add a Git repo as a plugin by\n                                        specifying the name and repo url\nasdf plugin list [--urls] [--refs]      List installed plugins. Optionally show\n                                        git urls and git-ref\nasdf plugin list all                    List plugins registered on asdf-plugins\n                                        repository with URLs\nasdf plugin remove <name>               Remove plugin and package versions\nasdf plugin update <name> [<git-ref>]   Update a plugin to latest commit on\n                                        default branch or a particular git-ref\nasdf plugin update --all                Update all plugins to latest commit on\n                                        default branch.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/manage/commands.html", "title": "All Commands", "description": "The list of all commands available in `asdf`. This list is the `asdf help` command text.", "has_code_examples": false, "has_best_practices": false, "section_count": 4, "timestamp": "2025-03-01 02:55:15", "type": "section_detail", "page_metadata": {"description": "Manage multiple runtime versions with a single CLI tool", "viewport": "width=device-width,initial-scale=1", "title": "All Commands | asdf", "generator": "VitePress v1.6.3", "language": "en-US", "scrapeId": "19992fdc-0d37-456d-aaae-22c9ac8c3fd2", "sourceURL": "https://asdf-vm.com/manage/commands.html", "url": "https://asdf-vm.com/manage/commands.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I manage tools in asdf-vm?\n\nAssistant: To manage tools in asdf-vm, here's what you do:\nasdf current                            Display current version set or being\n                                        used for all packages\nasdf current <name>                     Display current version set or being\n                                        used for package\nasdf help <name> [<version>]            Output documentation for plugin and tool\nasdf install                            Install all the package versions listed\n                                        in the .tool-versions file\nasdf install <name>                     Install one tool at the version\n                                        specified in the .tool-versions file\nasdf install <name> <version>           Install a specific version of a package\nasdf install <name> latest[:<version>]  Install the latest stable version of a\n                                        package, or with optional version,\n                                        install the latest stable version that\n                                        begins with the given string\nasdf latest <name> [<version>]          Show latest stable version of a package\nasdf latest --all                       Show latest stable version of all the\n                                        packages and if they are installed\nasdf list <name> [version]              List installed versions of a package and\n                                        optionally filter the versions\nasdf list all <name> [<version>]        List all versions of a package and\n                                        optionally filter the returned versions\nasdf set [-u] [-p] <name> <versions...> Set a tool version in a .tool-version in\n                                        the current directory, or a parent\ndirectory.\nasdf uninstall <name> <version>         Remove a specific version of a package\nasdf where <name> [<version>]           Display install path for an installed\n                                        or current version\nasdf which <command>                    Display the path to an executable.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/manage/commands.html", "title": "All Commands", "description": "The list of all commands available in `asdf`. This list is the `asdf help` command text.", "has_code_examples": false, "has_best_practices": false, "section_count": 4, "timestamp": "2025-03-01 02:55:15", "type": "section_detail", "page_metadata": {"description": "Manage multiple runtime versions with a single CLI tool", "viewport": "width=device-width,initial-scale=1", "title": "All Commands | asdf", "generator": "VitePress v1.6.3", "language": "en-US", "scrapeId": "19992fdc-0d37-456d-aaae-22c9ac8c3fd2", "sourceURL": "https://asdf-vm.com/manage/commands.html", "url": "https://asdf-vm.com/manage/commands.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I utils in asdf-vm?\n\nAssistant: To utils in asdf-vm, here's what you do:\nasdf exec <command> [args...]           Executes the command shim for current version\nasdf env <command> [util]               Runs util (default: `env`) inside the\n                                        environment used for command shim execution.\nasdf info                               Print OS, Shell and ASDF debug information.\nasdf version                            Print the currently installed version of ASDF\nasdf reshim <name> <version>            Recreate shims for version of a package\nasdf shimversions <command>             List the plugins and versions that\n                                        provide a command.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/manage/commands.html", "title": "All Commands", "description": "The list of all commands available in `asdf`. This list is the `asdf help` command text.", "has_code_examples": false, "has_best_practices": false, "section_count": 4, "timestamp": "2025-03-01 02:55:15", "type": "section_detail", "page_metadata": {"description": "Manage multiple runtime versions with a single CLI tool", "viewport": "width=device-width,initial-scale=1", "title": "All Commands | asdf", "generator": "VitePress v1.6.3", "language": "en-US", "scrapeId": "19992fdc-0d37-456d-aaae-22c9ac8c3fd2", "sourceURL": "https://asdf-vm.com/manage/commands.html", "url": "https://asdf-vm.com/manage/commands.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I resources in asdf-vm?\n\nAssistant: To resources in asdf-vm, here's what you do:\nGitHub: https://github.com/asdf-vm/asdf\nDocs:   https://asdf-vm.com.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/manage/commands.html", "title": "All Commands", "description": "The list of all commands available in `asdf`. This list is the `asdf help` command text.", "has_code_examples": false, "has_best_practices": false, "section_count": 4, "timestamp": "2025-03-01 02:55:15", "type": "section_detail", "page_metadata": {"description": "Manage multiple runtime versions with a single CLI tool", "viewport": "width=device-width,initial-scale=1", "title": "All Commands | asdf", "generator": "VitePress v1.6.3", "language": "en-US", "scrapeId": "19992fdc-0d37-456d-aaae-22c9ac8c3fd2", "sourceURL": "https://asdf-vm.com/manage/commands.html", "url": "https://asdf-vm.com/manage/commands.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you explain what Introduction to asdf is in asdf-vm?\n\nAssistant: Sure, I'd be happy to explain Introduction to asdf in asdf-vm.\n\n# Introduction to asdf\n\nThis page provides an overview of asdf, a tool version manager that simplifies the management of tool versions across development environments.Here's a quick rundown of what this is about:\n\n## Introduction\n\n`asdf` is a tool version manager. All tool version definitions are contained within one file ( `.tool-versions`) which you can check in to your project's Git repository to share with your team, ensuring everyone is using the **exact** same versions of tools.\n\nThe old way of working required multiple CLI version managers, each with their distinct API, configurations files and implementation (e.g. `$PATH` manipulation, shims, environment variables, etc...). `asdf` provides a single interface and configuration file to simplify development workflows, and can be extended to all tools and runtimes via a simple plugin interface.\n\n## How It Works\n\nOnce `asdf` core is set up with your Shell configuration, plugins are installed to manage particular tools. When a tool is installed by a plugin, the executables that are installed have [shims](https://en.wikipedia.org/wiki/Shim_(computing)) created for each of them. When you try and run one of these executables, the shim is run instead, allowing `asdf` to identify which version of the tool is set in `.tool-versions` and execute that version.\n\n## Related Projects\n\n### nvm / n / rbenv etc\n\nTools like [nvm](https://github.com/nvm-sh/nvm), [n](https://github.com/tj/n) and [rbenv](https://github.com/rbenv/rbenv) are all written as Shell scripts which create shims for the executables installed by these tools.\n\n`asdf` is very similar and was built to compete in this space of tool/runtime version management. The differentiating factor for `asdf` is its plugin system which removes the need for a manager per tool/runtime, different commands per manager and different `*-version` files in your repo.\n\n### direnv\n\n> augments existing shells with a new feature that can load and unload environment variables depending on the current directory.\n\n`asdf` does not manage Environment Variables, however there is a plugin [`asdf-direnv`](https://github.com/asdf-community/asdf-direnv) to integrate direnv behaviour with `asdf`.\n\nSee [direnv docs](https://direnv.net/) for more.\n\n### Homebrew\n\n> The Missing Package Manager for macOS (or Linux)\n\nHomebrew manages your packages and their upstream dependencies. `asdf` does not manage upstream dependencies, it is not a package manager, that burden is upon the user, though we try and keep the dependency list small.\n\nSee [Homebrew docs](https://brew.sh/) for more.\n\n### NixOS\n\n> Nix is a tool that takes a unique approach to package management and system configuration\n\nNixOS aims to build truly reproducible environments by managing exact versions of packages up the entire dependency tree of each tool, something `asdf` does not do. NixOS does this with its own programming language, many CLI tools and a package collection of over 60,000 packages.\n\nAgain, `asdf` does not manage upstream dependencies and is not a package manager.\n\nSee [NixOS docs](https://nixos.org/guides/how-nix-works.html) for more.\n\n## Why use asdf?\n\n`asdf` ensures teams are using the **exact** same versions of tools, with support for **many** tools via a plugin system, and the _simplicity and familiarity_ of being a single **Shell** script you include in your Shell config.\n\nNote\n\n`asdf` is not intended to be a system package manager. It is a tool version manager. Just because you can create a plugin for any tool and manage its versions with `asdf`, does not mean that is the best course of action for that specific tool.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://asdf-vm.com/guide/introduction.html", "title": "Introduction to asdf", "description": "This page provides an overview of asdf, a tool version manager that simplifies the management of tool versions across development environments.", "has_code_examples": false, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 02:57:44", "type": "overview", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "title": "Introduction | asdf", "language": "en-US", "description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "scrapeId": "355aa09a-8df3-4b85-85ca-abb78ad9947e", "sourceURL": "https://asdf-vm.com/guide/introduction.html", "url": "https://asdf-vm.com/guide/introduction.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I introduction in asdf-vm?\n\nAssistant: To introduction in asdf-vm, here's what you do:\n`asdf` is a tool version manager. All tool version definitions are contained within one file ( `.tool-versions`) which you can check in to your project's Git repository to share with your team, ensuring everyone is using the **exact** same versions of tools.\n\nThe old way of working required multiple CLI version managers, each with their distinct API, configurations files and implementation (e.g. `$PATH` manipulation, shims, environment variables, etc...). `asdf` provides a single interface and configuration file to simplify development workflows, and can be extended to all tools and runtimes via a simple plugin interface..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/guide/introduction.html", "title": "Introduction to asdf", "description": "This page provides an overview of asdf, a tool version manager that simplifies the management of tool versions across development environments.", "has_code_examples": false, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 02:57:44", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "title": "Introduction | asdf", "language": "en-US", "description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "scrapeId": "355aa09a-8df3-4b85-85ca-abb78ad9947e", "sourceURL": "https://asdf-vm.com/guide/introduction.html", "url": "https://asdf-vm.com/guide/introduction.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I how it works in asdf-vm?\n\nAssistant: To how it works in asdf-vm, here's what you do:\nOnce `asdf` core is set up with your Shell configuration, plugins are installed to manage particular tools. When a tool is installed by a plugin, the executables that are installed have [shims](https://en.wikipedia.org/wiki/Shim_(computing)) created for each of them. When you try and run one of these executables, the shim is run instead, allowing `asdf` to identify which version of the tool is set in `.tool-versions` and execute that version..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/guide/introduction.html", "title": "Introduction to asdf", "description": "This page provides an overview of asdf, a tool version manager that simplifies the management of tool versions across development environments.", "has_code_examples": false, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 02:57:44", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "title": "Introduction | asdf", "language": "en-US", "description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "scrapeId": "355aa09a-8df3-4b85-85ca-abb78ad9947e", "sourceURL": "https://asdf-vm.com/guide/introduction.html", "url": "https://asdf-vm.com/guide/introduction.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I related projects in asdf-vm?\n\nAssistant: To related projects in asdf-vm, here's what you do:\n### nvm / n / rbenv etc\n\nTools like [nvm](https://github.com/nvm-sh/nvm), [n](https://github.com/tj/n) and [rbenv](https://github.com/rbenv/rbenv) are all written as Shell scripts which create shims for the executables installed by these tools.\n\n`asdf` is very similar and was built to compete in this space of tool/runtime version management. The differentiating factor for `asdf` is its plugin system which removes the need for a manager per tool/runtime, different commands per manager and different `*-version` files in your repo.\n\n### direnv\n\n> augments existing shells with a new feature that can load and unload environment variables depending on the current directory.\n\n`asdf` does not manage Environment Variables, however there is a plugin [`asdf-direnv`](https://github.com/asdf-community/asdf-direnv) to integrate direnv behaviour with `asdf`.\n\nSee [direnv docs](https://direnv.net/) for more.\n\n### Homebrew\n\n> The Missing Package Manager for macOS (or Linux)\n\nHomebrew manages your packages and their upstream dependencies. `asdf` does not manage upstream dependencies, it is not a package manager, that burden is upon the user, though we try and keep the dependency list small.\n\nSee [Homebrew docs](https://brew.sh/) for more.\n\n### NixOS\n\n> Nix is a tool that takes a unique approach to package management and system configuration\n\nNixOS aims to build truly reproducible environments by managing exact versions of packages up the entire dependency tree of each tool, something `asdf` does not do. NixOS does this with its own programming language, many CLI tools and a package collection of over 60,000 packages.\n\nAgain, `asdf` does not manage upstream dependencies and is not a package manager.\n\nSee [NixOS docs](https://nixos.org/guides/how-nix-works.html) for more..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/guide/introduction.html", "title": "Introduction to asdf", "description": "This page provides an overview of asdf, a tool version manager that simplifies the management of tool versions across development environments.", "has_code_examples": false, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 02:57:44", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "title": "Introduction | asdf", "language": "en-US", "description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "scrapeId": "355aa09a-8df3-4b85-85ca-abb78ad9947e", "sourceURL": "https://asdf-vm.com/guide/introduction.html", "url": "https://asdf-vm.com/guide/introduction.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I why use asdf? in asdf-vm?\n\nAssistant: To why use asdf? in asdf-vm, here's what you do:\n`asdf` ensures teams are using the **exact** same versions of tools, with support for **many** tools via a plugin system, and the _simplicity and familiarity_ of being a single **Shell** script you include in your Shell config.\n\nNote\n\n`asdf` is not intended to be a system package manager. It is a tool version manager. Just because you can create a plugin for any tool and manage its versions with `asdf`, does not mean that is the best course of action for that specific tool..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/guide/introduction.html", "title": "Introduction to asdf", "description": "This page provides an overview of asdf, a tool version manager that simplifies the management of tool versions across development environments.", "has_code_examples": false, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 02:57:44", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "title": "Introduction | asdf", "language": "en-US", "description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "scrapeId": "355aa09a-8df3-4b85-85ca-abb78ad9947e", "sourceURL": "https://asdf-vm.com/guide/introduction.html", "url": "https://asdf-vm.com/guide/introduction.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: What are some tips for using Introduction to asdf in asdf-vm effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nEnsure all team members use the same versions of tools by checking in the `.tool-versions` file to the project's Git repository.\n\nUse plugins to extend `asdf` to manage various tools and runtimes effectively.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://asdf-vm.com/guide/introduction.html", "title": "Introduction to asdf", "description": "This page provides an overview of asdf, a tool version manager that simplifies the management of tool versions across development environments.", "has_code_examples": false, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 02:57:44", "type": "best_practices", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "title": "Introduction | asdf", "language": "en-US", "description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "scrapeId": "355aa09a-8df3-4b85-85ca-abb78ad9947e", "sourceURL": "https://asdf-vm.com/guide/introduction.html", "url": "https://asdf-vm.com/guide/introduction.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you explain what Create a Plugin is in asdf-vm?\n\nAssistant: Sure, I'd be happy to explain Create a Plugin in asdf-vm.\n\n# Create a Plugin\n\nA plugin is a Git repo with some executable scripts to support versioning a language / tool. These scripts are run by asdf using specific commands to support features such as `asdf list-all <name>`, `asdf install <name> <version>` etc.Here's a quick rundown of what this is about:\n\n## Quickstart\n\nThere are two options to get started with creating your own plugin:\n\n1. use the [asdf-vm/asdf-plugin-template](https://github.com/asdf-vm/asdf-plugin-template) repository to [generate](https://github.com/asdf-vm/asdf-plugin-template/generate) a plugin repo (named `asdf-<tool_name>`) with default scripts implemented. Once generated, clone the repo and run the `setup.bash` script to interactively update the template.\n2. start your own repo called `asdf-<tool_name>` and implement the required scripts as listed in the documentation below.\n\n## Golden Rules for Plugin Scripts\n\n- scripts should **NOT** call other `asdf` commands\n- keep your dependency list of Shell tools/commands small\n- avoid non-portable tools or command flags. For example, `sort -V`. See our asdf core [list of banned commands](https://github.com/asdf-vm/asdf/blob/master/test/banned_commands.bats)\n\n## Scripts Overview\n\nThe full list of scripts callable from asdf.\n\n| Script | Description |\n| --- | --- |\n| [bin/list-all](https://asdf-vm.com/plugins/create.html#bin-list-all) required | List all installable versions |\n| [bin/download](https://asdf-vm.com/plugins/create.html#bin-download) recommended | Download source code or binary for the specified version |\n| [bin/install](https://asdf-vm.com/plugins/create.html#bin-install) required | Installs the specified version |\n| [bin/latest-stable](https://asdf-vm.com/plugins/create.html#bin-latest-stable) recommended | List the latest stable version of the specified tool |\n| [bin/help.overview](https://asdf-vm.com/plugins/create.html#bin-help.overview) | Output a general description about the plugin & tool |\n| [bin/help.deps](https://asdf-vm.com/plugins/create.html#bin-help.deps) | Output a list of dependencies per Operating System |\n| [bin/help.config](https://asdf-vm.com/plugins/create.html#bin-help.config) | Output plugin or tool configuration information |\n| [bin/help.links](https://asdf-vm.com/plugins/create.html#bin-help.links) | Output a list of links for the plugin or tool |\n| [bin/list-bin-paths](https://asdf-vm.com/plugins/create.html#bin-list-bin-paths) | List relative paths to directories with binaries to create shims |\n| [bin/exec-env](https://asdf-vm.com/plugins/create.html#bin-exec-env) | Prepare the environment for running the binaries |\n| [bin/exec-path](https://asdf-vm.com/plugins/create.html#bin-exec-path) | Output the executable path for a version of a tool |\n| [bin/uninstall](https://asdf-vm.com/plugins/create.html#bin-uninstall) | Uninstall a specific version of a tool |\n| [bin/list-legacy-filenames](https://asdf-vm.com/plugins/create.html#bin-list-legacy-filenames) | Output filenames of legacy version files: `.ruby-version` |\n| [bin/parse-legacy-file](https://asdf-vm.com/plugins/create.html#bin-parse-legacy-file) | Custom parser for legacy version files |\n| [bin/post-plugin-add](https://asdf-vm.com/plugins/create.html#bin-post-plugin-add) | Hook to execute after a plugin has been added |\n| [bin/post-plugin-update](https://asdf-vm.com/plugins/create.html#bin-post-plugin-update) | Hook to execute after a plugin has been updated |\n| [bin/pre-plugin-remove](https://asdf-vm.com/plugins/create.html#bin-pre-plugin-remove) | Hook to execute before a plugin is removed |\n\nTo see which commands invoke which scripts, see the detailed documentation for each script.\n\n## Environment Variables Overview\n\nThe full list of Environment Variables used throughout all scripts.\n\n| Environment Variables | Description |\n| --- | --- |\n| `ASDF_INSTALL_TYPE` | `version` or `ref` |\n| `ASDF_INSTALL_VERSION` | full version number or Git Ref depending on `ASDF_INSTALL_TYPE` |\n| `ASDF_INSTALL_PATH` | the path to where the tool _should_, or _has been_ installed |\n| `ASDF_CONCURRENCY` | the number of cores to use when compiling the source code. Useful for setting `make -j` |\n| `ASDF_DOWNLOAD_PATH` | the path to where the source code or binary was downloaded to by `bin/download` |\n| `ASDF_PLUGIN_PATH` | the path the plugin was installed |\n| `ASDF_PLUGIN_SOURCE_URL` | the source URL of the plugin |\n| `ASDF_PLUGIN_PREV_REF` | previous `git-ref` of the plugin repo |\n| `ASDF_PLUGIN_POST_REF` | updated `git-ref` of the plugin repo |\n| `ASDF_CMD_FILE` | resolves to the full path of the file being sourced |\n\nNOTE\n\n**Not all environment variables are available in all scripts.** Check the documentation for each script below to see which env vars are available to it.\n\n## Required Scripts\n\n### `bin/list-all` required\n\n**Description**\n\nList all installable versions.\n\n**Output Format**\n\nMust print a string with a **space-separated** list of versions. For example:\n\n```\n1.0.1 1.0.2 1.3.0 1.4\n```\n\nNewest version should be last.\n\nasdf core will print each version on its own line, potentially pushing some versions offscreen.\n\n**Sorting**\n\nIf versions are being pulled from releases page on a website it's recommended to leave the versions in the provided order as they are often already in the correct order. If they are in reverse order piping them through `tac` should suffice.\n\nIf sorting is unavoidable, `sort -V` is not portable, so we suggest either:\n\n- [using the Git sort capability](https://github.com/asdf-vm/asdf-plugin-template/blob/main/template/lib/utils.bash) (requires Git >= `v2.18.0`)\n- [writing a custom sort method](https://github.com/vic/asdf-idris/blob/master/bin/list-all#L6) (requires `sed`, `sort` & `awk`)\n\n**Environment Variables available to script**\n\nNo environment variables are provided to this script.\n\n**Commands that invoke this script**\n\n- `asdf list all <name> [version]`\n- `asdf list all nodejs`: lists all versions as returned by this script, one on each line.\n- `asdf list all nodejs 18`: lists all versions as returned by this script, one on each line, with a filter matching any version beginning with `18` applied.\n\n**Call signature from asdf core**\n\nNo parameters provided.\n\n```bash\n\"${plugin_path}/bin/list-all\"\n```\n\n### `bin/download` required\n\n**Description**\n\nDownload the source code or binary for a specific version of a tool to a specified location.\n\n**Implementation Details**\n\n- The script must download the source or binary to the directory specified by `ASDF_DOWNLOAD_PATH`.\n- Only the decompressed source code or binary should be placed in the `ASDF_DOWNLOAD_PATH` directory.\n- On failure, no files should be placed in `ASDF_DOWNLOAD_PATH`.\n- Success should exit with `0`.\n- Failure should exit with a non-zero status.\n\n**Legacy Plugins**\n\nThough this script is marked as _required_ for all plugins, it is _optional_ for \"legacy\" plugins which predate its introduction.\n\nIf this script is absent, asdf will assume that the `bin/install` script is present and will download **and** install the version.\n\nAll plugins must include this script as support for legacy plugins will eventually be removed.\n\n**Environment Variables available to script**\n\n- `ASDF_INSTALL_TYPE`: `version` or `ref`\n- `ASDF_INSTALL_VERSION`:\n  - Full version number if `ASDF_INSTALL_TYPE=version`.\n  - Git ref (tag/commit/branch) if `ASDF_INSTALL_TYPE=ref`.\n- `ASDF_INSTALL_PATH`: The path to where the tool _has been_, or _should be_ installed.\n- `ASDF_DOWNLOAD_PATH`: The path to where the source code or binary was downloaded to.\n\n**Commands that invoke this script**\n\n- `asdf install <tool> [version]`\n- `asdf install <tool> latest[:version]`\n- `asdf install nodejs 18.0.0`: downloads the source code or binary for Node.js version `18.0.0` and places it in the `ASDF_DOWNLOAD_PATH` directory. Then runs the `bin/install` script.\n\n**Call signature from asdf core**\n\nNo parameters provided.\n\n```bash\n\"${plugin_path}\"/bin/download\n```\n\n### `bin/install` required\n\n**Description**\n\nInstall a specific version of a tool to a specified location.\n\n**Implementation Details**\n\n- The script should install the specified version in the path `ASDF_INSTALL_PATH`.\n- Shims will be created by default for any files in `$ASDF_INSTALL_PATH/bin`. This behaviour can be customised with the optional [bin/list-bin-paths](https://asdf-vm.com/plugins/create.html#binlist-bin-paths) script.\n- Success should exit with `0`.\n- Failure should exit with a non-zero status.\n- To avoid TOCTOU (Time-of-Check-to-Time-of-Use) issues, ensure the script only places files in `ASDF_INSTALL_PATH` once the build and installation of the tool is deemed a success.\n\n**Legacy Plugins**\n\nIf the `bin/download` script is absent, this script should download **and** install the specified version.\n\nFor compatibility with versions of the asdf core earlier than `0.7._` and newer than `0.8._`, check for the presence of the `ASDF_DOWNLOAD_PATH` environment variable. If set, assume the `bin/download` script already downloaded the version, else download the source code in the `bin/install` script.\n\n**Environment Variables available to script**\n\n- `ASDF_INSTALL_TYPE`: `version` or `ref`\n- `ASDF_INSTALL_VERSION`:\n  - Full version number if `ASDF_INSTALL_TYPE=version`.\n  - Git ref (tag/commit/branch) if `ASDF_INSTALL_TYPE=ref`.\n- `ASDF_INSTALL_PATH`: The path to where the tool _has been_, or _should be_ installed.\n- `ASDF_CONCURRENCY`: The number of cores to use when compiling source code. Useful for setting flags like `make -j`.\n- `ASDF_DOWNLOAD_PATH`: The path where the source code or binary was downloaded to.\n\n**Commands that invoke this script**\n\n- `asdf install`\n- `asdf install <tool>`\n- `asdf install <tool> [version]`\n- `asdf install <tool> latest[:version]`\n- `asdf install nodejs 18.0.0`: installs Node.js version `18.0.0` in the `ASDF_INSTALL_PATH` directory.\n\n**Call signature from asdf core**\n\nNo parameters provided.\n\n```bash\n\"${plugin_path}\"/bin/install\n```\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://asdf-vm.com/plugins/create.html", "title": "Create a Plugin", "description": "A plugin is a Git repo with some executable scripts to support versioning a language / tool. These scripts are run by asdf using specific commands to support features such as `asdf list-all <name>`, `asdf install <name> <version>` etc.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 02:58:33", "type": "overview", "page_metadata": {"generator": "VitePress v1.6.3", "language": "en-US", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "title": "Create a Plugin | asdf", "scrapeId": "2a1b36df-90a9-4779-8c1d-7afab8f8ac2a", "sourceURL": "https://asdf-vm.com/plugins/create.html", "url": "https://asdf-vm.com/plugins/create.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I quickstart in asdf-vm?\n\nAssistant: To quickstart in asdf-vm, here's what you do:\nThere are two options to get started with creating your own plugin:\n\n1. use the [asdf-vm/asdf-plugin-template](https://github.com/asdf-vm/asdf-plugin-template) repository to [generate](https://github.com/asdf-vm/asdf-plugin-template/generate) a plugin repo (named `asdf-<tool_name>`) with default scripts implemented. Once generated, clone the repo and run the `setup.bash` script to interactively update the template.\n2. start your own repo called `asdf-<tool_name>` and implement the required scripts as listed in the documentation below..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/plugins/create.html", "title": "Create a Plugin", "description": "A plugin is a Git repo with some executable scripts to support versioning a language / tool. These scripts are run by asdf using specific commands to support features such as `asdf list-all <name>`, `asdf install <name> <version>` etc.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 02:58:33", "type": "section_detail", "page_metadata": {"generator": "VitePress v1.6.3", "language": "en-US", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "title": "Create a Plugin | asdf", "scrapeId": "2a1b36df-90a9-4779-8c1d-7afab8f8ac2a", "sourceURL": "https://asdf-vm.com/plugins/create.html", "url": "https://asdf-vm.com/plugins/create.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I golden rules for plugin scripts in asdf-vm?\n\nAssistant: To golden rules for plugin scripts in asdf-vm, here's what you do:\n- scripts should **NOT** call other `asdf` commands\n- keep your dependency list of Shell tools/commands small\n- avoid non-portable tools or command flags. For example, `sort -V`. See our asdf core [list of banned commands](https://github.com/asdf-vm/asdf/blob/master/test/banned_commands.bats).\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/plugins/create.html", "title": "Create a Plugin", "description": "A plugin is a Git repo with some executable scripts to support versioning a language / tool. These scripts are run by asdf using specific commands to support features such as `asdf list-all <name>`, `asdf install <name> <version>` etc.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 02:58:33", "type": "section_detail", "page_metadata": {"generator": "VitePress v1.6.3", "language": "en-US", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "title": "Create a Plugin | asdf", "scrapeId": "2a1b36df-90a9-4779-8c1d-7afab8f8ac2a", "sourceURL": "https://asdf-vm.com/plugins/create.html", "url": "https://asdf-vm.com/plugins/create.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I scripts overview in asdf-vm?\n\nAssistant: To scripts overview in asdf-vm, here's what you do:\nThe full list of scripts callable from asdf.\n\n| Script | Description |\n| --- | --- |\n| [bin/list-all](https://asdf-vm.com/plugins/create.html#bin-list-all) required | List all installable versions |\n| [bin/download](https://asdf-vm.com/plugins/create.html#bin-download) recommended | Download source code or binary for the specified version |\n| [bin/install](https://asdf-vm.com/plugins/create.html#bin-install) required | Installs the specified version |\n| [bin/latest-stable](https://asdf-vm.com/plugins/create.html#bin-latest-stable) recommended | List the latest stable version of the specified tool |\n| [bin/help.overview](https://asdf-vm.com/plugins/create.html#bin-help.overview) | Output a general description about the plugin & tool |\n| [bin/help.deps](https://asdf-vm.com/plugins/create.html#bin-help.deps) | Output a list of dependencies per Operating System |\n| [bin/help.config](https://asdf-vm.com/plugins/create.html#bin-help.config) | Output plugin or tool configuration information |\n| [bin/help.links](https://asdf-vm.com/plugins/create.html#bin-help.links) | Output a list of links for the plugin or tool |\n| [bin/list-bin-paths](https://asdf-vm.com/plugins/create.html#bin-list-bin-paths) | List relative paths to directories with binaries to create shims |\n| [bin/exec-env](https://asdf-vm.com/plugins/create.html#bin-exec-env) | Prepare the environment for running the binaries |\n| [bin/exec-path](https://asdf-vm.com/plugins/create.html#bin-exec-path) | Output the executable path for a version of a tool |\n| [bin/uninstall](https://asdf-vm.com/plugins/create.html#bin-uninstall) | Uninstall a specific version of a tool |\n| [bin/list-legacy-filenames](https://asdf-vm.com/plugins/create.html#bin-list-legacy-filenames) | Output filenames of legacy version files: `.ruby-version` |\n| [bin/parse-legacy-file](https://asdf-vm.com/plugins/create.html#bin-parse-legacy-file) | Custom parser for legacy version files |\n| [bin/post-plugin-add](https://asdf-vm.com/plugins/create.html#bin-post-plugin-add) | Hook to execute after a plugin has been added |\n| [bin/post-plugin-update](https://asdf-vm.com/plugins/create.html#bin-post-plugin-update) | Hook to execute after a plugin has been updated |\n| [bin/pre-plugin-remove](https://asdf-vm.com/plugins/create.html#bin-pre-plugin-remove) | Hook to execute before a plugin is removed |\n\nTo see which commands invoke which scripts, see the detailed documentation for each script..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/plugins/create.html", "title": "Create a Plugin", "description": "A plugin is a Git repo with some executable scripts to support versioning a language / tool. These scripts are run by asdf using specific commands to support features such as `asdf list-all <name>`, `asdf install <name> <version>` etc.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 02:58:33", "type": "section_detail", "page_metadata": {"generator": "VitePress v1.6.3", "language": "en-US", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "title": "Create a Plugin | asdf", "scrapeId": "2a1b36df-90a9-4779-8c1d-7afab8f8ac2a", "sourceURL": "https://asdf-vm.com/plugins/create.html", "url": "https://asdf-vm.com/plugins/create.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I environment variables overview in asdf-vm?\n\nAssistant: To environment variables overview in asdf-vm, here's what you do:\nThe full list of Environment Variables used throughout all scripts.\n\n| Environment Variables | Description |\n| --- | --- |\n| `ASDF_INSTALL_TYPE` | `version` or `ref` |\n| `ASDF_INSTALL_VERSION` | full version number or Git Ref depending on `ASDF_INSTALL_TYPE` |\n| `ASDF_INSTALL_PATH` | the path to where the tool _should_, or _has been_ installed |\n| `ASDF_CONCURRENCY` | the number of cores to use when compiling the source code. Useful for setting `make -j` |\n| `ASDF_DOWNLOAD_PATH` | the path to where the source code or binary was downloaded to by `bin/download` |\n| `ASDF_PLUGIN_PATH` | the path the plugin was installed |\n| `ASDF_PLUGIN_SOURCE_URL` | the source URL of the plugin |\n| `ASDF_PLUGIN_PREV_REF` | previous `git-ref` of the plugin repo |\n| `ASDF_PLUGIN_POST_REF` | updated `git-ref` of the plugin repo |\n| `ASDF_CMD_FILE` | resolves to the full path of the file being sourced |\n\nNOTE\n\n**Not all environment variables are available in all scripts.** Check the documentation for each script below to see which env vars are available to it..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/plugins/create.html", "title": "Create a Plugin", "description": "A plugin is a Git repo with some executable scripts to support versioning a language / tool. These scripts are run by asdf using specific commands to support features such as `asdf list-all <name>`, `asdf install <name> <version>` etc.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 02:58:33", "type": "section_detail", "page_metadata": {"generator": "VitePress v1.6.3", "language": "en-US", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "title": "Create a Plugin | asdf", "scrapeId": "2a1b36df-90a9-4779-8c1d-7afab8f8ac2a", "sourceURL": "https://asdf-vm.com/plugins/create.html", "url": "https://asdf-vm.com/plugins/create.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I required scripts in asdf-vm?\n\nAssistant: To required scripts in asdf-vm, here's what you do:\n### `bin/list-all` required\n\n**Description**\n\nList all installable versions.\n\n**Output Format**\n\nMust print a string with a **space-separated** list of versions. For example:\n\n```\n1.0.1 1.0.2 1.3.0 1.4\n```\n\nNewest version should be last.\n\nasdf core will print each version on its own line, potentially pushing some versions offscreen.\n\n**Sorting**\n\nIf versions are being pulled from releases page on a website it's recommended to leave the versions in the provided order as they are often already in the correct order. If they are in reverse order piping them through `tac` should suffice.\n\nIf sorting is unavoidable, `sort -V` is not portable, so we suggest either:\n\n- [using the Git sort capability](https://github.com/asdf-vm/asdf-plugin-template/blob/main/template/lib/utils.bash) (requires Git >= `v2.18.0`)\n- [writing a custom sort method](https://github.com/vic/asdf-idris/blob/master/bin/list-all#L6) (requires `sed`, `sort` & `awk`)\n\n**Environment Variables available to script**\n\nNo environment variables are provided to this script.\n\n**Commands that invoke this script**\n\n- `asdf list all <name> [version]`\n- `asdf list all nodejs`: lists all versions as returned by this script, one on each line.\n- `asdf list all nodejs 18`: lists all versions as returned by this script, one on each line, with a filter matching any version beginning with `18` applied.\n\n**Call signature from asdf core**\n\nNo parameters provided.\n\n```bash\n\"${plugin_path}/bin/list-all\"\n```\n\n### `bin/download` required\n\n**Description**\n\nDownload the source code or binary for a specific version of a tool to a specified location.\n\n**Implementation Details**\n\n- The script must download the source or binary to the directory specified by `ASDF_DOWNLOAD_PATH`.\n- Only the decompressed source code or binary should be placed in the `ASDF_DOWNLOAD_PATH` directory.\n- On failure, no files should be placed in `ASDF_DOWNLOAD_PATH`.\n- Success should exit with `0`.\n- Failure should exit with a non-zero status.\n\n**Legacy Plugins**\n\nThough this script is marked as _required_ for all plugins, it is _optional_ for \"legacy\" plugins which predate its introduction.\n\nIf this script is absent, asdf will assume that the `bin/install` script is present and will download **and** install the version.\n\nAll plugins must include this script as support for legacy plugins will eventually be removed.\n\n**Environment Variables available to script**\n\n- `ASDF_INSTALL_TYPE`: `version` or `ref`\n- `ASDF_INSTALL_VERSION`:\n  - Full version number if `ASDF_INSTALL_TYPE=version`.\n  - Git ref (tag/commit/branch) if `ASDF_INSTALL_TYPE=ref`.\n- `ASDF_INSTALL_PATH`: The path to where the tool _has been_, or _should be_ installed.\n- `ASDF_DOWNLOAD_PATH`: The path to where the source code or binary was downloaded to.\n\n**Commands that invoke this script**\n\n- `asdf install <tool> [version]`\n- `asdf install <tool> latest[:version]`\n- `asdf install nodejs 18.0.0`: downloads the source code or binary for Node.js version `18.0.0` and places it in the `ASDF_DOWNLOAD_PATH` directory. Then runs the `bin/install` script.\n\n**Call signature from asdf core**\n\nNo parameters provided.\n\n```bash\n\"${plugin_path}\"/bin/download\n```\n\n### `bin/install` required\n\n**Description**\n\nInstall a specific version of a tool to a specified location.\n\n**Implementation Details**\n\n- The script should install the specified version in the path `ASDF_INSTALL_PATH`.\n- Shims will be created by default for any files in `$ASDF_INSTALL_PATH/bin`. This behaviour can be customised with the optional [bin/list-bin-paths](https://asdf-vm.com/plugins/create.html#binlist-bin-paths) script.\n- Success should exit with `0`.\n- Failure should exit with a non-zero status.\n- To avoid TOCTOU (Time-of-Check-to-Time-of-Use) issues, ensure the script only places files in `ASDF_INSTALL_PATH` once the build and installation of the tool is deemed a success.\n\n**Legacy Plugins**\n\nIf the `bin/download` script is absent, this script should download **and** install the specified version.\n\nFor compatibility with versions of the asdf core earlier than `0.7._` and newer than `0.8._`, check for the presence of the `ASDF_DOWNLOAD_PATH` environment variable. If set, assume the `bin/download` script already downloaded the version, else download the source code in the `bin/install` script.\n\n**Environment Variables available to script**\n\n- `ASDF_INSTALL_TYPE`: `version` or `ref`\n- `ASDF_INSTALL_VERSION`:\n  - Full version number if `ASDF_INSTALL_TYPE=version`.\n  - Git ref (tag/commit/branch) if `ASDF_INSTALL_TYPE=ref`.\n- `ASDF_INSTALL_PATH`: The path to where the tool _has been_, or _should be_ installed.\n- `ASDF_CONCURRENCY`: The number of cores to use when compiling source code. Useful for setting flags like `make -j`.\n- `ASDF_DOWNLOAD_PATH`: The path where the source code or binary was downloaded to.\n\n**Commands that invoke this script**\n\n- `asdf install`\n- `asdf install <tool>`\n- `asdf install <tool> [version]`\n- `asdf install <tool> latest[:version]`\n- `asdf install nodejs 18.0.0`: installs Node.js version `18.0.0` in the `ASDF_INSTALL_PATH` directory.\n\n**Call signature from asdf core**\n\nNo parameters provided.\n\n```bash\n\"${plugin_path}\"/bin/install\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/plugins/create.html", "title": "Create a Plugin", "description": "A plugin is a Git repo with some executable scripts to support versioning a language / tool. These scripts are run by asdf using specific commands to support features such as `asdf list-all <name>`, `asdf install <name> <version>` etc.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 02:58:33", "type": "section_detail", "page_metadata": {"generator": "VitePress v1.6.3", "language": "en-US", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "title": "Create a Plugin | asdf", "scrapeId": "2a1b36df-90a9-4779-8c1d-7afab8f8ac2a", "sourceURL": "https://asdf-vm.com/plugins/create.html", "url": "https://asdf-vm.com/plugins/create.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you give me some code examples for Create a Plugin in asdf-vm?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Output Format for `bin/list-all`**:\n\n```yaml\n```\n1.0.1 1.0.2 1.3.0 1.4\n```\n```\n\nThis snippet shows you how to output format for `bin/list-all`, which is an important aspect of create a plugin.\n\n**Call signature from asdf core for `bin/list-all`**:\n\n```yaml\n```bash\n\"${plugin_path}/bin/list-all\"\n```\n```\n\nThis snippet shows you how to call signature from asdf core for `bin/list-all`, which is an important aspect of create a plugin.\n\n**Call signature from asdf core for `bin/download`**:\n\n```yaml\n```bash\n\"${plugin_path}\"/bin/download\n```\n```\n\nThis snippet shows you how to call signature from asdf core for `bin/download`, which is an important aspect of create a plugin.\n\n**Call signature from asdf core for `bin/install`**:\n\n```yaml\n```bash\n\"${plugin_path}\"/bin/install\n```\n```\n\nThis snippet shows you how to call signature from asdf core for `bin/install`, which is an important aspect of create a plugin.\n\n", "metadata": {"source_url": "https://asdf-vm.com/plugins/create.html", "title": "Create a Plugin", "description": "A plugin is a Git repo with some executable scripts to support versioning a language / tool. These scripts are run by asdf using specific commands to support features such as `asdf list-all <name>`, `asdf install <name> <version>` etc.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 02:58:33", "type": "code_examples", "page_metadata": {"generator": "VitePress v1.6.3", "language": "en-US", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "title": "Create a Plugin | asdf", "scrapeId": "2a1b36df-90a9-4779-8c1d-7afab8f8ac2a", "sourceURL": "https://asdf-vm.com/plugins/create.html", "url": "https://asdf-vm.com/plugins/create.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: What are some tips for using Create a Plugin in asdf-vm effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nscripts should **NOT** call other `asdf` commands\n\nkeep your dependency list of Shell tools/commands small\n\navoid non-portable tools or command flags. For example, `sort -V`.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://asdf-vm.com/plugins/create.html", "title": "Create a Plugin", "description": "A plugin is a Git repo with some executable scripts to support versioning a language / tool. These scripts are run by asdf using specific commands to support features such as `asdf list-all <name>`, `asdf install <name> <version>` etc.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 02:58:33", "type": "best_practices", "page_metadata": {"generator": "VitePress v1.6.3", "language": "en-US", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "title": "Create a Plugin | asdf", "scrapeId": "2a1b36df-90a9-4779-8c1d-7afab8f8ac2a", "sourceURL": "https://asdf-vm.com/plugins/create.html", "url": "https://asdf-vm.com/plugins/create.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you explain what Configuration is in asdf-vm?\n\nAssistant: Sure, I'd be happy to explain Configuration in asdf-vm.\n\n# Configuration\n\nConfiguration of `asdf` encompasses both the sharable `.tool-versions` files as well as user specific customisations with `.asdfrc` and Environment Variables.Here's a quick rundown of what this is about:\n\n## .tool-versions\n\nWhenever `.tool-versions` file is present in a directory, the tool versions it declares will be used in that directory and any subdirectories.\n\nThis is what a `.tool-versions` file looks like:\n\n```\nruby 2.5.3\nnodejs 10.15.0\n```\n\nYou can also include comments:\n\n```\nruby 2.5.3 # This is a comment\n# This is another comment\nnodejs 10.15.0\n```\n\nThe versions can be in the following format:\n\n- `10.15.0` \\- an actual version. Plugins that support downloading binaries, will download binaries.\n- `ref:v1.0.2-a` or `ref:39cb398vb39` \\- tag/commit/branch to download from github and compile\n- `path:~/src/elixir` \\- a path to custom compiled version of a tool to use. For use by language developers and such.\n- `system` \\- this keyword causes asdf to passthrough to the version of the tool on the system that is not managed by asdf.\n\nTIP\n\nMultiple versions can be set by separating them with a space. For example, to use Python `3.7.2`, fallback to Python `2.7.15` and finally to the `system` Python, the following line can be added to `.tool-versions`.\n\n```\npython 3.7.2 2.7.15 system\n```\n\nTo install all the tools defined in a `.tool-versions` file run `asdf install` with no other arguments in the directory containing the `.tool-versions` file.\n\nTo install a single tool defined in a `.tool-versions` file run `asdf install <name>` in the directory containing the `.tool-versions` file. The tool will be installed at the version specified in the `.tool-versions` file.\n\nEdit the file directly or use `asdf set` which updates it.\n\n## .asdfrc\n\nThe `.asdfrc` file defines the user's machine specific configuration.\n\n`${HOME}/.asdfrc` is the default location used by asdf. This can be set with the [Environment Variable `ASDF_CONFIG_FILE`](https://asdf-vm.com/manage/configuration.html#asdfconfigfile).\n\nThe below file shows the required format with the default values:\n\ntxt\n\n```\nlegacy_version_file = no\nuse_release_candidates = no\nalways_keep_download = no\nplugin_repository_last_check_duration = 60\ndisable_plugin_short_name_repository = no\nconcurrency = auto\n```\n\n### legacy_version_file\n\nPlugins **with support** can read the versions files used by other version managers, for example, `.ruby-version` in the case of Ruby's `rbenv`.\n\n| Options | Description |\n| --- | --- |\n| `no` default | Use `.tool-versions` to read versions |\n| `yes` | Use plugin fallback to legacy version files ( `.ruby-version`) if available |\n\n### always_keep_download\n\nConfigure the `asdf install` command to keep or delete the source code or binary it downloads.\n\n| Options | Description |\n| --- | --- |\n| `no` default | Delete source code or binary after successful install |\n| `yes` | Keep source code or binary after install |\n\n### plugin_repository_last_check_duration\n\nConfigure the duration (in minutes) between asdf plugin repository syncs. Trigger events result in a check of the duration. If more time has elapsed since the last sync than specified in the duration, a new sync occurs.\n\n| Options | Description |\n| --- | --- |\n| integer in range `1` to `999999999`<br>`60` is default | Sync on trigger event if duration (in minutes) since last sync has been exceeded |\n| `0` | Sync on each trigger event |\n| `never` | Never sync |\n\nSync events occur when the following commands are executed:\n\n- `asdf plugin add <name>`\n- `asdf plugin list all`\n\n`asdf plugin add <name> <git-url>` does NOT trigger a plugin sync.\n\nNote\n\nSetting the value to `never` does not stop the plugin repository from being initially synced, for that behaviour see `disable_plugin_short_name_repository`.\n\n### disable_plugin_short_name_repository\n\nDisable synchronization of the asdf plugin short-name repository. Sync events will exit early if the short-name repository is disabled.\n\n| Options | Description |\n| --- | --- |\n| `no` default | Clone or update the asdf plugin repository on sync events |\n| `yes` | Disable the plugin short-name repository |\n\nSync events occur when the following commands are executed:\n\n- `asdf plugin add <name>`\n- `asdf plugin list all`\n\n`asdf plugin add <name> <git-url>` does NOT trigger a plugin sync.\n\nNote\n\nDisabling the plugin short-name repository does not remove the repository if it has already synced. Remove the plugin repo with `rm --recursive --trash $ASDF_DATA_DIR/repository`.\n\nDisabling the plugin short-name repository does not remove plugins previously installed from this source. Plugins can be removed with `asdf plugin remove <name>`. Removing a plugin will remove all installed versions of the managed tool.\n\n### concurrency\n\nThe default number of cores to use during compilation.\n\n| Options | Description |\n| --- | --- |\n| integer | Number of cores to use when compiling the source code |\n| `auto` | Calculate the number of cores using `nproc`, then `sysctl hw.ncpu`, then `/proc/cpuinfo` or else `1` |\n\nNote: the environment variable `ASDF_CONCURRENCY` take precedence if set.\n\n### Plugin Hooks\n\nIt is possible to execute custom code:\n\n- Before or after a plugin is installed, reshimed, updated, or uninstalled\n- Before or after a plugin command is executed\n\nFor example, if a plugin called `foo` is installed and provides a `bar` executable, then the following hooks can be used to execute custom code first:\n\ntext\n\n```\npre_foo_bar = echo Executing with args: $@\n```\n\nThe following patterns are supported:\n\n- `pre_<plugin_name>_<command>`\n- `pre_asdf_download_<plugin_name>`\n- `{pre,post}_asdf_{install,reshim,uninstall}_<plugin_name>`\n  - `$1`: full version\n- `{pre,post}_asdf_plugin_{add,update,remove,reshim}`\n  - `$1`: plugin name\n- `{pre,post}_asdf_plugin_{add,update,remove}_<plugin_name>`\n\nSee [Create a Plugin](https://asdf-vm.com/plugins/create.html) for specifics on what command hooks are ran before or after what commands.\n\n## Environment Variables\n\nSetting environment variables varies depending on your system and Shell. Default locations depend upon your installation location and method (Git clone, Homebrew, AUR).\n\nEnvironment variables should generally be set before sourcing `asdf.sh`/ `asdf.fish` etc. For Elvish set above `use asdf`.\n\nThe following describe usage with a Bash Shell.\n\n### ASDF_CONFIG_FILE\n\nPath to the `.asdfrc` configuration file. Can be set to any location. Must be an absolute path.\n\n- If Unset: `$HOME/.asdfrc` will be used.\n- Usage: `export ASDF_CONFIG_FILE=/home/john_doe/.config/asdf/.asdfrc`\n\n### ASDF_DEFAULT_TOOL_VERSIONS_FILENAME\n\nThe filename of the file storing the tool names and versions. Can be any valid filename. Typically, you should not set this value unless you want to ignore `.tool-versions` files.\n\n- If Unset: `.tool-versions` will be used.\n- Usage: `export ASDF_DEFAULT_TOOL_VERSIONS_FILENAME=tool_versions`\n\n### ASDF_DIR\n\nThe location of `asdf` core scripts. Can be set to any location. Must be an absolute path.\n\n- If Unset: the parent directory of the `bin/asdf` executable is used.\n- Usage: `export ASDF_DIR=/home/john_doe/.config/asdf`\n\n### ASDF_DATA_DIR\n\nThe location where `asdf` will install plugins, shims and tool versions. Can be set to any location. Must be an absolute path.\n\n- If Unset: `$HOME/.asdf` if it exists, or else the value of `ASDF_DIR`\n- Usage: `export ASDF_DATA_DIR=/home/john_doe/.asdf`\n\n### ASDF_CONCURRENCY\n\nNumber of cores to use when compiling the source code. If set, this value takes precedence over the asdf config `concurrency` value.\n\n- If Unset: the asdf config `concurrency` value is used.\n- Usage: `export ASDF_CONCURRENCY=32`\n\n### ASDF_FORCE_PREPEND\n\nWhether or not to prepend the `asdf` shims and path directories to the front-most (highest-priority) part of the `PATH`.\n\n- If Unset: On macOS, defaults to `yes`; but on other systems, defaults to `no`\n- If `yes`: Force `asdf` directories to the front of the `PATH`\n- If set to any string _other_ than `yes`: Do _not_ force `asdf` directories to the front of the `PATH`\n- Usage: `ASDF_FORCE_PREPEND=no . \"<path-to-asdf-directory>/asdf.sh\"`\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://asdf-vm.com/manage/configuration.html", "title": "Configuration", "description": "Configuration of `asdf` encompasses both the sharable `.tool-versions` files as well as user specific customisations with `.asdfrc` and Environment Variables.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:00:26", "type": "overview", "page_metadata": {"title": "Configuration | asdf", "language": "en-US", "description": "Manage multiple runtime versions with a single CLI tool", "viewport": "width=device-width,initial-scale=1", "generator": "VitePress v1.6.3", "scrapeId": "00e5853d-a1b1-42fe-b036-a053216e66f1", "sourceURL": "https://asdf-vm.com/manage/configuration.html", "url": "https://asdf-vm.com/manage/configuration.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I .tool-versions in asdf-vm?\n\nAssistant: To .tool-versions in asdf-vm, here's what you do:\nWhenever `.tool-versions` file is present in a directory, the tool versions it declares will be used in that directory and any subdirectories.\n\nThis is what a `.tool-versions` file looks like:\n\n```\nruby 2.5.3\nnodejs 10.15.0\n```\n\nYou can also include comments:\n\n```\nruby 2.5.3 # This is a comment\n# This is another comment\nnodejs 10.15.0\n```\n\nThe versions can be in the following format:\n\n- `10.15.0` \\- an actual version. Plugins that support downloading binaries, will download binaries.\n- `ref:v1.0.2-a` or `ref:39cb398vb39` \\- tag/commit/branch to download from github and compile\n- `path:~/src/elixir` \\- a path to custom compiled version of a tool to use. For use by language developers and such.\n- `system` \\- this keyword causes asdf to passthrough to the version of the tool on the system that is not managed by asdf.\n\nTIP\n\nMultiple versions can be set by separating them with a space. For example, to use Python `3.7.2`, fallback to Python `2.7.15` and finally to the `system` Python, the following line can be added to `.tool-versions`.\n\n```\npython 3.7.2 2.7.15 system\n```\n\nTo install all the tools defined in a `.tool-versions` file run `asdf install` with no other arguments in the directory containing the `.tool-versions` file.\n\nTo install a single tool defined in a `.tool-versions` file run `asdf install <name>` in the directory containing the `.tool-versions` file. The tool will be installed at the version specified in the `.tool-versions` file.\n\nEdit the file directly or use `asdf set` which updates it..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/manage/configuration.html", "title": "Configuration", "description": "Configuration of `asdf` encompasses both the sharable `.tool-versions` files as well as user specific customisations with `.asdfrc` and Environment Variables.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:00:26", "type": "section_detail", "page_metadata": {"title": "Configuration | asdf", "language": "en-US", "description": "Manage multiple runtime versions with a single CLI tool", "viewport": "width=device-width,initial-scale=1", "generator": "VitePress v1.6.3", "scrapeId": "00e5853d-a1b1-42fe-b036-a053216e66f1", "sourceURL": "https://asdf-vm.com/manage/configuration.html", "url": "https://asdf-vm.com/manage/configuration.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I .asdfrc in asdf-vm?\n\nAssistant: To .asdfrc in asdf-vm, here's what you do:\nThe `.asdfrc` file defines the user's machine specific configuration.\n\n`${HOME}/.asdfrc` is the default location used by asdf. This can be set with the [Environment Variable `ASDF_CONFIG_FILE`](https://asdf-vm.com/manage/configuration.html#asdfconfigfile).\n\nThe below file shows the required format with the default values:\n\ntxt\n\n```\nlegacy_version_file = no\nuse_release_candidates = no\nalways_keep_download = no\nplugin_repository_last_check_duration = 60\ndisable_plugin_short_name_repository = no\nconcurrency = auto\n```\n\n### legacy_version_file\n\nPlugins **with support** can read the versions files used by other version managers, for example, `.ruby-version` in the case of Ruby's `rbenv`.\n\n| Options | Description |\n| --- | --- |\n| `no` default | Use `.tool-versions` to read versions |\n| `yes` | Use plugin fallback to legacy version files ( `.ruby-version`) if available |\n\n### always_keep_download\n\nConfigure the `asdf install` command to keep or delete the source code or binary it downloads.\n\n| Options | Description |\n| --- | --- |\n| `no` default | Delete source code or binary after successful install |\n| `yes` | Keep source code or binary after install |\n\n### plugin_repository_last_check_duration\n\nConfigure the duration (in minutes) between asdf plugin repository syncs. Trigger events result in a check of the duration. If more time has elapsed since the last sync than specified in the duration, a new sync occurs.\n\n| Options | Description |\n| --- | --- |\n| integer in range `1` to `999999999`<br>`60` is default | Sync on trigger event if duration (in minutes) since last sync has been exceeded |\n| `0` | Sync on each trigger event |\n| `never` | Never sync |\n\nSync events occur when the following commands are executed:\n\n- `asdf plugin add <name>`\n- `asdf plugin list all`\n\n`asdf plugin add <name> <git-url>` does NOT trigger a plugin sync.\n\nNote\n\nSetting the value to `never` does not stop the plugin repository from being initially synced, for that behaviour see `disable_plugin_short_name_repository`.\n\n### disable_plugin_short_name_repository\n\nDisable synchronization of the asdf plugin short-name repository. Sync events will exit early if the short-name repository is disabled.\n\n| Options | Description |\n| --- | --- |\n| `no` default | Clone or update the asdf plugin repository on sync events |\n| `yes` | Disable the plugin short-name repository |\n\nSync events occur when the following commands are executed:\n\n- `asdf plugin add <name>`\n- `asdf plugin list all`\n\n`asdf plugin add <name> <git-url>` does NOT trigger a plugin sync.\n\nNote\n\nDisabling the plugin short-name repository does not remove the repository if it has already synced. Remove the plugin repo with `rm --recursive --trash $ASDF_DATA_DIR/repository`.\n\nDisabling the plugin short-name repository does not remove plugins previously installed from this source. Plugins can be removed with `asdf plugin remove <name>`. Removing a plugin will remove all installed versions of the managed tool.\n\n### concurrency\n\nThe default number of cores to use during compilation.\n\n| Options | Description |\n| --- | --- |\n| integer | Number of cores to use when compiling the source code |\n| `auto` | Calculate the number of cores using `nproc`, then `sysctl hw.ncpu`, then `/proc/cpuinfo` or else `1` |\n\nNote: the environment variable `ASDF_CONCURRENCY` take precedence if set.\n\n### Plugin Hooks\n\nIt is possible to execute custom code:\n\n- Before or after a plugin is installed, reshimed, updated, or uninstalled\n- Before or after a plugin command is executed\n\nFor example, if a plugin called `foo` is installed and provides a `bar` executable, then the following hooks can be used to execute custom code first:\n\ntext\n\n```\npre_foo_bar = echo Executing with args: $@\n```\n\nThe following patterns are supported:\n\n- `pre_<plugin_name>_<command>`\n- `pre_asdf_download_<plugin_name>`\n- `{pre,post}_asdf_{install,reshim,uninstall}_<plugin_name>`\n  - `$1`: full version\n- `{pre,post}_asdf_plugin_{add,update,remove,reshim}`\n  - `$1`: plugin name\n- `{pre,post}_asdf_plugin_{add,update,remove}_<plugin_name>`\n\nSee [Create a Plugin](https://asdf-vm.com/plugins/create.html) for specifics on what command hooks are ran before or after what commands..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/manage/configuration.html", "title": "Configuration", "description": "Configuration of `asdf` encompasses both the sharable `.tool-versions` files as well as user specific customisations with `.asdfrc` and Environment Variables.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:00:26", "type": "section_detail", "page_metadata": {"title": "Configuration | asdf", "language": "en-US", "description": "Manage multiple runtime versions with a single CLI tool", "viewport": "width=device-width,initial-scale=1", "generator": "VitePress v1.6.3", "scrapeId": "00e5853d-a1b1-42fe-b036-a053216e66f1", "sourceURL": "https://asdf-vm.com/manage/configuration.html", "url": "https://asdf-vm.com/manage/configuration.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I environment variables in asdf-vm?\n\nAssistant: To environment variables in asdf-vm, here's what you do:\nSetting environment variables varies depending on your system and Shell. Default locations depend upon your installation location and method (Git clone, Homebrew, AUR).\n\nEnvironment variables should generally be set before sourcing `asdf.sh`/ `asdf.fish` etc. For Elvish set above `use asdf`.\n\nThe following describe usage with a Bash Shell.\n\n### ASDF_CONFIG_FILE\n\nPath to the `.asdfrc` configuration file. Can be set to any location. Must be an absolute path.\n\n- If Unset: `$HOME/.asdfrc` will be used.\n- Usage: `export ASDF_CONFIG_FILE=/home/john_doe/.config/asdf/.asdfrc`\n\n### ASDF_DEFAULT_TOOL_VERSIONS_FILENAME\n\nThe filename of the file storing the tool names and versions. Can be any valid filename. Typically, you should not set this value unless you want to ignore `.tool-versions` files.\n\n- If Unset: `.tool-versions` will be used.\n- Usage: `export ASDF_DEFAULT_TOOL_VERSIONS_FILENAME=tool_versions`\n\n### ASDF_DIR\n\nThe location of `asdf` core scripts. Can be set to any location. Must be an absolute path.\n\n- If Unset: the parent directory of the `bin/asdf` executable is used.\n- Usage: `export ASDF_DIR=/home/john_doe/.config/asdf`\n\n### ASDF_DATA_DIR\n\nThe location where `asdf` will install plugins, shims and tool versions. Can be set to any location. Must be an absolute path.\n\n- If Unset: `$HOME/.asdf` if it exists, or else the value of `ASDF_DIR`\n- Usage: `export ASDF_DATA_DIR=/home/john_doe/.asdf`\n\n### ASDF_CONCURRENCY\n\nNumber of cores to use when compiling the source code. If set, this value takes precedence over the asdf config `concurrency` value.\n\n- If Unset: the asdf config `concurrency` value is used.\n- Usage: `export ASDF_CONCURRENCY=32`\n\n### ASDF_FORCE_PREPEND\n\nWhether or not to prepend the `asdf` shims and path directories to the front-most (highest-priority) part of the `PATH`.\n\n- If Unset: On macOS, defaults to `yes`; but on other systems, defaults to `no`\n- If `yes`: Force `asdf` directories to the front of the `PATH`\n- If set to any string _other_ than `yes`: Do _not_ force `asdf` directories to the front of the `PATH`\n- Usage: `ASDF_FORCE_PREPEND=no . \"<path-to-asdf-directory>/asdf.sh\"`.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/manage/configuration.html", "title": "Configuration", "description": "Configuration of `asdf` encompasses both the sharable `.tool-versions` files as well as user specific customisations with `.asdfrc` and Environment Variables.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:00:26", "type": "section_detail", "page_metadata": {"title": "Configuration | asdf", "language": "en-US", "description": "Manage multiple runtime versions with a single CLI tool", "viewport": "width=device-width,initial-scale=1", "generator": "VitePress v1.6.3", "scrapeId": "00e5853d-a1b1-42fe-b036-a053216e66f1", "sourceURL": "https://asdf-vm.com/manage/configuration.html", "url": "https://asdf-vm.com/manage/configuration.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you give me some code examples for Configuration in asdf-vm?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**.tool-versions example**:\n\n```yaml\nruby 2.5.3\nnodejs 10.15.0\n```\n\nThis snippet shows you how to .tool-versions example, which is an important aspect of configuration.\n\n**Comments in .tool-versions**:\n\n```yaml\nruby 2.5.3 # This is a comment\n# This is another comment\nnodejs 10.15.0\n```\n\nThis snippet shows you how to comments in .tool-versions, which is an important aspect of configuration.\n\n**Multiple versions in .tool-versions**:\n\n```yaml\npython 3.7.2 2.7.15 system\n```\n\nThis snippet shows you how to multiple versions in .tool-versions, which is an important aspect of configuration.\n\n**Default .asdfrc format**:\n\n```yaml\nlegacy_version_file = no\nuse_release_candidates = no\nalways_keep_download = no\nplugin_repository_last_check_duration = 60\ndisable_plugin_short_name_repository = no\nconcurrency = auto\n```\n\nThis snippet shows you how to default .asdfrc format, which is an important aspect of configuration.\n\n**Plugin hooks example**:\n\n```yaml\npre_foo_bar = echo Executing with args: $@\n```\n\nThis snippet shows you how to plugin hooks example, which is an important aspect of configuration.\n\n**ASDF_CONFIG_FILE usage**:\n\n```yaml\nexport ASDF_CONFIG_FILE=/home/john_doe/.config/asdf/.asdfrc\n```\n\nThis snippet shows you how to asdf_config_file usage, which is an important aspect of configuration.\n\n**ASDF_DEFAULT_TOOL_VERSIONS_FILENAME usage**:\n\n```yaml\nexport ASDF_DEFAULT_TOOL_VERSIONS_FILENAME=tool_versions\n```\n\nThis snippet shows you how to asdf_default_tool_versions_filename usage, which is an important aspect of configuration.\n\n**ASDF_DIR usage**:\n\n```yaml\nexport ASDF_DIR=/home/john_doe/.config/asdf\n```\n\nThis snippet shows you how to asdf_dir usage, which is an important aspect of configuration.\n\n**ASDF_DATA_DIR usage**:\n\n```yaml\nexport ASDF_DATA_DIR=/home/john_doe/.asdf\n```\n\nThis snippet shows you how to asdf_data_dir usage, which is an important aspect of configuration.\n\n**ASDF_CONCURRENCY usage**:\n\n```yaml\nexport ASDF_CONCURRENCY=32\n```\n\nThis snippet shows you how to asdf_concurrency usage, which is an important aspect of configuration.\n\n**ASDF_FORCE_PREPEND usage**:\n\n```yaml\nASDF_FORCE_PREPEND=no . \"<path-to-asdf-directory>/asdf.sh\"\n```\n\nThis snippet shows you how to asdf_force_prepend usage, which is an important aspect of configuration.\n\n", "metadata": {"source_url": "https://asdf-vm.com/manage/configuration.html", "title": "Configuration", "description": "Configuration of `asdf` encompasses both the sharable `.tool-versions` files as well as user specific customisations with `.asdfrc` and Environment Variables.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:00:26", "type": "code_examples", "page_metadata": {"title": "Configuration | asdf", "language": "en-US", "description": "Manage multiple runtime versions with a single CLI tool", "viewport": "width=device-width,initial-scale=1", "generator": "VitePress v1.6.3", "scrapeId": "00e5853d-a1b1-42fe-b036-a053216e66f1", "sourceURL": "https://asdf-vm.com/manage/configuration.html", "url": "https://asdf-vm.com/manage/configuration.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: What are some tips for using Configuration in asdf-vm effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nMultiple versions can be set by separating them with a space in the `.tool-versions` file.\n\nTo install all tools defined in a `.tool-versions` file, run `asdf install` with no arguments in the directory containing the file.\n\nTo install a single tool defined in a `.tool-versions` file, run `asdf install <name>` in the directory containing the file.\n\nEdit the `.tool-versions` file directly or use `asdf set` to update it.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://asdf-vm.com/manage/configuration.html", "title": "Configuration", "description": "Configuration of `asdf` encompasses both the sharable `.tool-versions` files as well as user specific customisations with `.asdfrc` and Environment Variables.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:00:26", "type": "best_practices", "page_metadata": {"title": "Configuration | asdf", "language": "en-US", "description": "Manage multiple runtime versions with a single CLI tool", "viewport": "width=device-width,initial-scale=1", "generator": "VitePress v1.6.3", "scrapeId": "00e5853d-a1b1-42fe-b036-a053216e66f1", "sourceURL": "https://asdf-vm.com/manage/configuration.html", "url": "https://asdf-vm.com/manage/configuration.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you explain what Core is in asdf-vm?\n\nAssistant: Sure, I'd be happy to explain Core in asdf-vm.\n\n# Core\n\nThe core `asdf` command list is rather small, but can facilitate many workflows.Here's a quick rundown of what this is about:\n\n## Installation & Setup\n\nCovered in the [Getting Started](https://asdf-vm.com/guide/getting-started.html) guide.\n\n## Exec\n\nExecutes the command shim for the current version.\n\n```shell\nasdf exec <command> [args...]\n```\n\n## Env\n\n```shell\nasdf env <command> [util]\n```\n\n## Info\n\nA helper command to print the OS, Shell and `asdf` debug information. Share this when making a bug report.\n\n```shell\nasdf info\n```\n\n## Reshim\n\nThis recreates the shims for the current version of a package. By default, shims are created by plugins during installation of a tool. Some tools like the [npm CLI](https://docs.npmjs.com/cli/) allow global installation of executables, for example, installing [Yarn](https://yarnpkg.com/) via `npm install -g yarn`. Since this executable was not installed via the plugin lifecycle, no shim exists for it yet. `asdf reshim nodejs <version>` will force recalculation of shims for any new executables, like `yarn`, for `<version>` of `nodejs`.\n\n```shell\nasdf reshim <name> <version>\n```\n\n## Shim-versions\n\nLists the plugins and versions that provide shims for a command.\n\nAs an example, [Node.js](https://nodejs.org/) ships with two executables, `node` and `npm`. When many versions of the tools are installed with [`asdf-nodejs`](https://github.com/asdf-vm/asdf-nodejs/) `shimversions` can return:\n\n```shell\n➜ asdf shimversions node\nnodejs 14.8.0\nnodejs 14.17.3\nnodejs 16.5.0\n```\n\n```shell\n➜ asdf shimversions npm\nnodejs 14.8.0\nnodejs 14.17.3\nnodejs 16.5.0\n```\n\n## Update\n\nPlease use the same method you used to install asdf to update it. The latest version of asdf is shown in the top right corner of this page.\n\n## Uninstall\n\nTo uninstall `asdf` follow these steps:\n\n### Bash & Git\n1. In your `~/.bashrc` remove the lines that source `asdf.sh` and the completions:\n\n```shell\n. \"$HOME/.asdf/asdf.sh\"\n. \"$HOME/.asdf/completions/asdf.bash\"\n```\n\n2. Remove the `$HOME/.asdf` dir:\n\n```shell\nrm -rf \"${ASDF_DATA_DIR:-$HOME/.asdf}\"\n```\n\n3. Run this command to remove all `asdf` config files:\n\n```shell\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\n### Bash & Git (macOS)\n1. In your `~/.bash_profile` remove the lines that source `asdf.sh` and the completions:\n\n```shell\n. \"$HOME/.asdf/asdf.sh\"\n. \"$HOME/.asdf/completions/asdf.bash\"\n```\n\n2. Remove the `$HOME/.asdf` dir:\n\n```shell\nrm -rf \"${ASDF_DATA_DIR:-$HOME/.asdf}\"\n```\n\n3. Run this command to remove all `asdf` config files:\n\n```shell\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\n### Bash & Homebrew\n1. In your `~/.bashrc` remove the lines that source `asdf.sh` and the completions:\n\n```shell\n. $(brew --prefix asdf)/libexec/asdf.sh\n. $(brew --prefix asdf)/etc/bash_completion.d/asdf.bash\n```\n\nCompletions may have been [configured as per Homebrew's instructions](https://docs.brew.sh/Shell-Completion#configuring-completions-in-bash) so follow their guide to find out what to remove.\n\n2. Uninstall with your package manager:\n\n```shell\nbrew uninstall asdf --force\n```\n\n3. Run this command to remove all `asdf` config files:\n\n```shell\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\n### Bash & Homebrew (macOS)\nIf using **macOS Catalina or newer**, the default shell has changed to **ZSH**. If you can't find any config in your `~/.bash_profile` it may be in a `~/.zshrc` in which case please follow the ZSH instructions.\n\n1. In your `~/.bash_profile` remove the lines that source `asdf.sh` and the completions:\n\n```shell\n. $(brew --prefix asdf)/libexec/asdf.sh\n. $(brew --prefix asdf)/etc/bash_completion.d/asdf.bash\n```\n\nCompletions may have been [configured as per Homebrew's instructions](https://docs.brew.sh/Shell-Completion#configuring-completions-in-bash) so follow their guide to find out what to remove.\n\n2. Uninstall with your package manager:\n\n```shell\nbrew uninstall asdf --force\n```\n\n3. Run this command to remove all `asdf` config files:\n\n```shell\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\n### Bash & Pacman\n1. In your `~/.bashrc` remove the lines that source `asdf.sh` and the completions:\n\n```shell\n. /opt/asdf-vm/asdf.sh\n```\n\n2. Uninstall with your package manager:\n\n```shell\npacman -Rs asdf-vm\n```\n\n3. Remove the `$HOME/.asdf` dir:\n\n```shell\nrm -rf \"${ASDF_DATA_DIR:-$HOME/.asdf}\"\n```\n\n4. Run this command to remove all `asdf` config files:\n\n```shell\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\n### Fish & Git\n1. In your `~/.config/fish/config.fish` remove the lines that source `asdf.fish`:\n\n```shell\nsource ~/.asdf/asdf.fish\n```\n\nand remove completions with this command:\n\n```shell\nrm -rf ~/.config/fish/completions/asdf.fish\n```\n\n2. Remove the `$HOME/.asdf` dir:\n\n```shell\nrm -rf (string join : -- $ASDF_DATA_DIR $HOME/.asdf)\n```\n\n3. Run this command to remove all `asdf` config files:\n\n```shell\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\n### Fish & Homebrew\n1. In your `~/.config/fish/config.fish` remove the lines that source `asdf.fish`:\n\n```shell\nsource \"(brew --prefix asdf)\"/libexec/asdf.fish\n```\n\n2. Uninstall with your package manager:\n\n```shell\nbrew uninstall asdf --force\n```\n\n3. Run this command to remove all `asdf` config files:\n\n```shell\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\n### Fish & Pacman\n1. In your `~/.config/fish/config.fish` remove the lines that source `asdf.fish`:\n\n```shell\nsource /opt/asdf-vm/asdf.fish\n```\n\n2. Uninstall with your package manager:\n\n```shell\npacman -Rs asdf-vm\n```\n\n3. Remove the `$HOME/.asdf` dir:\n\n```shell\nrm -rf (string join : -- $ASDF_DATA_DIR $HOME/.asdf)\n```\n\n4. Run this command to remove all `asdf` config files:\n\n```shell\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\n### Elvish & Git\n1. In your `~/.config/elvish/rc.elv` remove the lines that use the `asdf` module:\n\n```shell\nuse asdf _asdf; var asdf~ = $_asdf:asdf~\nset edit:completion:arg-completer[asdf] = $_asdf:arg-completer~\n```\n\nand uninstall the `asdf` module with this command:\n\n```shell\nrm -f ~/.config/elvish/lib/asdf.elv\n```\n\n2. Remove the `$HOME/.asdf` dir:\n\n```shell\nif (!=s $E:ASDF_DATA_DIR \"\") { rm -rf $E:ASDF_DATA_DIR } else { rm -rf ~/.asdf }\n```\n\n3. Run this command to remove all `asdf` config files:\n\n```shell\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\n### Elvish & Homebrew\n1. In your `~/.config/elvish/rc.elv` remove the lines that use the `asdf` module:\n\n```shell\nuse asdf _asdf; var asdf~ = $_asdf:asdf~\nset edit:completion:arg-completer[asdf] = $_asdf:arg-completer~\n```\n\nand uninstall the `asdf` module with this command:\n\n```shell\nrm -f ~/.config/elvish/lib/asdf.elv\n```\n\n2. Uninstall with your package manager:\n\n```shell\nbrew uninstall asdf --force\n```\n\n3. Run this command to remove all `asdf` config files:\n\n```shell\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\n### Elvish & Pacman\n1. In your `~/.config/elvish/rc.elv` remove the lines that use the `asdf` module:\n\n```shell\nuse asdf _asdf; var asdf~ = $_asdf:asdf~\nset edit:completion:arg-completer[asdf] = $_asdf:arg-completer~\n```\n\nand uninstall the `asdf` module with this command:\n\n```shell\nrm -f ~/.config/elvish/lib/asdf.elv\n```\n\n2. Uninstall with your package manager:\n\n```shell\npacman -Rs asdf-vm\n```\n\n3. Remove the `$HOME/.asdf` dir:\n\n```shell\nif (!=s $E:ASDF_DATA_DIR \"\") { rm -rf $E:ASDF_DATA_DIR } else { rm -rf ~/.asdf }\n```\n\n4. Run this command to remove all `asdf` config files:\n\n```shell\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\n### ZSH & Git\n1. In your `~/.zshrc` remove the lines that source `asdf.sh` and completions:\n\n```shell\n. \"$HOME/.asdf/asdf.sh\"\n# ...\nfpath=(${ASDF_DIR}/completions $fpath)\nautoload -Uz compinit\ncompinit\n```\n\n**OR** the ZSH Framework plugin if used.\n\n2. Remove the `$HOME/.asdf` dir:\n\n```shell\nrm -rf \"${ASDF_DATA_DIR:-$HOME/.asdf}\"\n```\n\n3. Run this command to remove all `asdf` config files:\n\n```shell\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\n### ZSH & Homebrew\n1. In your `~/.zshrc` remove the lines that source `asdf.sh`:\n\n```shell\n. $(brew --prefix asdf)/libexec/asdf.sh\n```\n\n2. Uninstall with your package manager:\n\n```shell\nbrew uninstall asdf --force && brew autoremove\n```\n\n3. Run this command to remove all `asdf` config files:\n\n```shell\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\n### ZSH & Pacman\n1. In your `~/.zshrc` remove the lines that source `asdf.sh`:\n\n```shell\n. /opt/asdf-vm/asdf.sh\n```\n\n2. Uninstall with your package manager:\n\n```shell\npacman -Rs asdf-vm\n```\n\n3. Remove the `$HOME/.asdf` dir:\n\n```shell\nrm -rf \"${ASDF_DATA_DIR:-$HOME/.asdf}\"\n```\n\n4. Run this command to remove all `asdf` config files:\n\n```shell\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://asdf-vm.com/manage/core.html", "title": "Core", "description": "The core `asdf` command list is rather small, but can facilitate many workflows.", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 03:03:27", "type": "overview", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "language": "en-US", "title": "Core | asdf", "generator": "VitePress v1.6.3", "scrapeId": "5ade903d-2e26-4168-ba7b-3e00dfa923d3", "sourceURL": "https://asdf-vm.com/manage/core.html", "url": "https://asdf-vm.com/manage/core.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I installation & setup in asdf-vm?\n\nAssistant: To installation & setup in asdf-vm, here's what you do:\nCovered in the [Getting Started](https://asdf-vm.com/guide/getting-started.html) guide..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/manage/core.html", "title": "Core", "description": "The core `asdf` command list is rather small, but can facilitate many workflows.", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 03:03:27", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "language": "en-US", "title": "Core | asdf", "generator": "VitePress v1.6.3", "scrapeId": "5ade903d-2e26-4168-ba7b-3e00dfa923d3", "sourceURL": "https://asdf-vm.com/manage/core.html", "url": "https://asdf-vm.com/manage/core.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I exec in asdf-vm?\n\nAssistant: To exec in asdf-vm, here's what you do:\nExecutes the command shim for the current version.\n\n```shell\nasdf exec <command> [args...]\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/manage/core.html", "title": "Core", "description": "The core `asdf` command list is rather small, but can facilitate many workflows.", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 03:03:27", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "language": "en-US", "title": "Core | asdf", "generator": "VitePress v1.6.3", "scrapeId": "5ade903d-2e26-4168-ba7b-3e00dfa923d3", "sourceURL": "https://asdf-vm.com/manage/core.html", "url": "https://asdf-vm.com/manage/core.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I env in asdf-vm?\n\nAssistant: To env in asdf-vm, here's what you do:\n```shell\nasdf env <command> [util]\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/manage/core.html", "title": "Core", "description": "The core `asdf` command list is rather small, but can facilitate many workflows.", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 03:03:27", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "language": "en-US", "title": "Core | asdf", "generator": "VitePress v1.6.3", "scrapeId": "5ade903d-2e26-4168-ba7b-3e00dfa923d3", "sourceURL": "https://asdf-vm.com/manage/core.html", "url": "https://asdf-vm.com/manage/core.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I info in asdf-vm?\n\nAssistant: To info in asdf-vm, here's what you do:\nA helper command to print the OS, Shell and `asdf` debug information. Share this when making a bug report.\n\n```shell\nasdf info\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/manage/core.html", "title": "Core", "description": "The core `asdf` command list is rather small, but can facilitate many workflows.", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 03:03:27", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "language": "en-US", "title": "Core | asdf", "generator": "VitePress v1.6.3", "scrapeId": "5ade903d-2e26-4168-ba7b-3e00dfa923d3", "sourceURL": "https://asdf-vm.com/manage/core.html", "url": "https://asdf-vm.com/manage/core.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I reshim in asdf-vm?\n\nAssistant: To reshim in asdf-vm, here's what you do:\nThis recreates the shims for the current version of a package. By default, shims are created by plugins during installation of a tool. Some tools like the [npm CLI](https://docs.npmjs.com/cli/) allow global installation of executables, for example, installing [Yarn](https://yarnpkg.com/) via `npm install -g yarn`. Since this executable was not installed via the plugin lifecycle, no shim exists for it yet. `asdf reshim nodejs <version>` will force recalculation of shims for any new executables, like `yarn`, for `<version>` of `nodejs`.\n\n```shell\nasdf reshim <name> <version>\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/manage/core.html", "title": "Core", "description": "The core `asdf` command list is rather small, but can facilitate many workflows.", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 03:03:27", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "language": "en-US", "title": "Core | asdf", "generator": "VitePress v1.6.3", "scrapeId": "5ade903d-2e26-4168-ba7b-3e00dfa923d3", "sourceURL": "https://asdf-vm.com/manage/core.html", "url": "https://asdf-vm.com/manage/core.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I shim-versions in asdf-vm?\n\nAssistant: To shim-versions in asdf-vm, here's what you do:\nLists the plugins and versions that provide shims for a command.\n\nAs an example, [Node.js](https://nodejs.org/) ships with two executables, `node` and `npm`. When many versions of the tools are installed with [`asdf-nodejs`](https://github.com/asdf-vm/asdf-nodejs/) `shimversions` can return:\n\n```shell\n➜ asdf shimversions node\nnodejs 14.8.0\nnodejs 14.17.3\nnodejs 16.5.0\n```\n\n```shell\n➜ asdf shimversions npm\nnodejs 14.8.0\nnodejs 14.17.3\nnodejs 16.5.0\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/manage/core.html", "title": "Core", "description": "The core `asdf` command list is rather small, but can facilitate many workflows.", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 03:03:27", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "language": "en-US", "title": "Core | asdf", "generator": "VitePress v1.6.3", "scrapeId": "5ade903d-2e26-4168-ba7b-3e00dfa923d3", "sourceURL": "https://asdf-vm.com/manage/core.html", "url": "https://asdf-vm.com/manage/core.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I update in asdf-vm?\n\nAssistant: To update in asdf-vm, here's what you do:\nPlease use the same method you used to install asdf to update it. The latest version of asdf is shown in the top right corner of this page..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/manage/core.html", "title": "Core", "description": "The core `asdf` command list is rather small, but can facilitate many workflows.", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 03:03:27", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "language": "en-US", "title": "Core | asdf", "generator": "VitePress v1.6.3", "scrapeId": "5ade903d-2e26-4168-ba7b-3e00dfa923d3", "sourceURL": "https://asdf-vm.com/manage/core.html", "url": "https://asdf-vm.com/manage/core.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I uninstall in asdf-vm?\n\nAssistant: To uninstall in asdf-vm, here's what you do:\nTo uninstall `asdf` follow these steps:\n\n### Bash & Git\n1. In your `~/.bashrc` remove the lines that source `asdf.sh` and the completions:\n\n```shell\n. \"$HOME/.asdf/asdf.sh\"\n. \"$HOME/.asdf/completions/asdf.bash\"\n```\n\n2. Remove the `$HOME/.asdf` dir:\n\n```shell\nrm -rf \"${ASDF_DATA_DIR:-$HOME/.asdf}\"\n```\n\n3. Run this command to remove all `asdf` config files:\n\n```shell\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\n### Bash & Git (macOS)\n1. In your `~/.bash_profile` remove the lines that source `asdf.sh` and the completions:\n\n```shell\n. \"$HOME/.asdf/asdf.sh\"\n. \"$HOME/.asdf/completions/asdf.bash\"\n```\n\n2. Remove the `$HOME/.asdf` dir:\n\n```shell\nrm -rf \"${ASDF_DATA_DIR:-$HOME/.asdf}\"\n```\n\n3. Run this command to remove all `asdf` config files:\n\n```shell\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\n### Bash & Homebrew\n1. In your `~/.bashrc` remove the lines that source `asdf.sh` and the completions:\n\n```shell\n. $(brew --prefix asdf)/libexec/asdf.sh\n. $(brew --prefix asdf)/etc/bash_completion.d/asdf.bash\n```\n\nCompletions may have been [configured as per Homebrew's instructions](https://docs.brew.sh/Shell-Completion#configuring-completions-in-bash) so follow their guide to find out what to remove.\n\n2. Uninstall with your package manager:\n\n```shell\nbrew uninstall asdf --force\n```\n\n3. Run this command to remove all `asdf` config files:\n\n```shell\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\n### Bash & Homebrew (macOS)\nIf using **macOS Catalina or newer**, the default shell has changed to **ZSH**. If you can't find any config in your `~/.bash_profile` it may be in a `~/.zshrc` in which case please follow the ZSH instructions.\n\n1. In your `~/.bash_profile` remove the lines that source `asdf.sh` and the completions:\n\n```shell\n. $(brew --prefix asdf)/libexec/asdf.sh\n. $(brew --prefix asdf)/etc/bash_completion.d/asdf.bash\n```\n\nCompletions may have been [configured as per Homebrew's instructions](https://docs.brew.sh/Shell-Completion#configuring-completions-in-bash) so follow their guide to find out what to remove.\n\n2. Uninstall with your package manager:\n\n```shell\nbrew uninstall asdf --force\n```\n\n3. Run this command to remove all `asdf` config files:\n\n```shell\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\n### Bash & Pacman\n1. In your `~/.bashrc` remove the lines that source `asdf.sh` and the completions:\n\n```shell\n. /opt/asdf-vm/asdf.sh\n```\n\n2. Uninstall with your package manager:\n\n```shell\npacman -Rs asdf-vm\n```\n\n3. Remove the `$HOME/.asdf` dir:\n\n```shell\nrm -rf \"${ASDF_DATA_DIR:-$HOME/.asdf}\"\n```\n\n4. Run this command to remove all `asdf` config files:\n\n```shell\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\n### Fish & Git\n1. In your `~/.config/fish/config.fish` remove the lines that source `asdf.fish`:\n\n```shell\nsource ~/.asdf/asdf.fish\n```\n\nand remove completions with this command:\n\n```shell\nrm -rf ~/.config/fish/completions/asdf.fish\n```\n\n2. Remove the `$HOME/.asdf` dir:\n\n```shell\nrm -rf (string join : -- $ASDF_DATA_DIR $HOME/.asdf)\n```\n\n3. Run this command to remove all `asdf` config files:\n\n```shell\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\n### Fish & Homebrew\n1. In your `~/.config/fish/config.fish` remove the lines that source `asdf.fish`:\n\n```shell\nsource \"(brew --prefix asdf)\"/libexec/asdf.fish\n```\n\n2. Uninstall with your package manager:\n\n```shell\nbrew uninstall asdf --force\n```\n\n3. Run this command to remove all `asdf` config files:\n\n```shell\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\n### Fish & Pacman\n1. In your `~/.config/fish/config.fish` remove the lines that source `asdf.fish`:\n\n```shell\nsource /opt/asdf-vm/asdf.fish\n```\n\n2. Uninstall with your package manager:\n\n```shell\npacman -Rs asdf-vm\n```\n\n3. Remove the `$HOME/.asdf` dir:\n\n```shell\nrm -rf (string join : -- $ASDF_DATA_DIR $HOME/.asdf)\n```\n\n4. Run this command to remove all `asdf` config files:\n\n```shell\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\n### Elvish & Git\n1. In your `~/.config/elvish/rc.elv` remove the lines that use the `asdf` module:\n\n```shell\nuse asdf _asdf; var asdf~ = $_asdf:asdf~\nset edit:completion:arg-completer[asdf] = $_asdf:arg-completer~\n```\n\nand uninstall the `asdf` module with this command:\n\n```shell\nrm -f ~/.config/elvish/lib/asdf.elv\n```\n\n2. Remove the `$HOME/.asdf` dir:\n\n```shell\nif (!=s $E:ASDF_DATA_DIR \"\") { rm -rf $E:ASDF_DATA_DIR } else { rm -rf ~/.asdf }\n```\n\n3. Run this command to remove all `asdf` config files:\n\n```shell\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\n### Elvish & Homebrew\n1. In your `~/.config/elvish/rc.elv` remove the lines that use the `asdf` module:\n\n```shell\nuse asdf _asdf; var asdf~ = $_asdf:asdf~\nset edit:completion:arg-completer[asdf] = $_asdf:arg-completer~\n```\n\nand uninstall the `asdf` module with this command:\n\n```shell\nrm -f ~/.config/elvish/lib/asdf.elv\n```\n\n2. Uninstall with your package manager:\n\n```shell\nbrew uninstall asdf --force\n```\n\n3. Run this command to remove all `asdf` config files:\n\n```shell\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\n### Elvish & Pacman\n1. In your `~/.config/elvish/rc.elv` remove the lines that use the `asdf` module:\n\n```shell\nuse asdf _asdf; var asdf~ = $_asdf:asdf~\nset edit:completion:arg-completer[asdf] = $_asdf:arg-completer~\n```\n\nand uninstall the `asdf` module with this command:\n\n```shell\nrm -f ~/.config/elvish/lib/asdf.elv\n```\n\n2. Uninstall with your package manager:\n\n```shell\npacman -Rs asdf-vm\n```\n\n3. Remove the `$HOME/.asdf` dir:\n\n```shell\nif (!=s $E:ASDF_DATA_DIR \"\") { rm -rf $E:ASDF_DATA_DIR } else { rm -rf ~/.asdf }\n```\n\n4. Run this command to remove all `asdf` config files:\n\n```shell\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\n### ZSH & Git\n1. In your `~/.zshrc` remove the lines that source `asdf.sh` and completions:\n\n```shell\n. \"$HOME/.asdf/asdf.sh\"\n# ...\nfpath=(${ASDF_DIR}/completions $fpath)\nautoload -Uz compinit\ncompinit\n```\n\n**OR** the ZSH Framework plugin if used.\n\n2. Remove the `$HOME/.asdf` dir:\n\n```shell\nrm -rf \"${ASDF_DATA_DIR:-$HOME/.asdf}\"\n```\n\n3. Run this command to remove all `asdf` config files:\n\n```shell\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\n### ZSH & Homebrew\n1. In your `~/.zshrc` remove the lines that source `asdf.sh`:\n\n```shell\n. $(brew --prefix asdf)/libexec/asdf.sh\n```\n\n2. Uninstall with your package manager:\n\n```shell\nbrew uninstall asdf --force && brew autoremove\n```\n\n3. Run this command to remove all `asdf` config files:\n\n```shell\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\n### ZSH & Pacman\n1. In your `~/.zshrc` remove the lines that source `asdf.sh`:\n\n```shell\n. /opt/asdf-vm/asdf.sh\n```\n\n2. Uninstall with your package manager:\n\n```shell\npacman -Rs asdf-vm\n```\n\n3. Remove the `$HOME/.asdf` dir:\n\n```shell\nrm -rf \"${ASDF_DATA_DIR:-$HOME/.asdf}\"\n```\n\n4. Run this command to remove all `asdf` config files:\n\n```shell\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/manage/core.html", "title": "Core", "description": "The core `asdf` command list is rather small, but can facilitate many workflows.", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 03:03:27", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "language": "en-US", "title": "Core | asdf", "generator": "VitePress v1.6.3", "scrapeId": "5ade903d-2e26-4168-ba7b-3e00dfa923d3", "sourceURL": "https://asdf-vm.com/manage/core.html", "url": "https://asdf-vm.com/manage/core.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you give me some code examples for Core in asdf-vm?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Exec Command**:\n\n```yaml\n```shell\nasdf exec <command> [args...]\n```\n```\n\nThis snippet shows you how to exec command, which is an important aspect of core.\n\n**Env Command**:\n\n```yaml\n```shell\nasdf env <command> [util]\n```\n```\n\nThis snippet shows you how to env command, which is an important aspect of core.\n\n**Info Command**:\n\n```yaml\n```shell\nasdf info\n```\n```\n\nThis snippet shows you how to info command, which is an important aspect of core.\n\n**Reshim Command**:\n\n```yaml\n```shell\nasdf reshim <name> <version>\n```\n```\n\nThis snippet shows you how to reshim command, which is an important aspect of core.\n\n**Shim-versions Command**:\n\n```yaml\n```shell\nasdf shimversions <command>\n```\n```\n\nThis snippet shows you how to shim-versions command, which is an important aspect of core.\n\n**Shim-versions Example for Node**:\n\n```yaml\n```shell\n➜ asdf shimversions node\nnodejs 14.8.0\nnodejs 14.17.3\nnodejs 16.5.0\n```\n```\n\nThis snippet shows you how to shim-versions example for node, which is an important aspect of core.\n\n**Shim-versions Example for NPM**:\n\n```yaml\n```shell\n➜ asdf shimversions npm\nnodejs 14.8.0\nnodejs 14.17.3\nnodejs 16.5.0\n```\n```\n\nThis snippet shows you how to shim-versions example for npm, which is an important aspect of core.\n\n**Uninstall Bash & Git**:\n\n```yaml\n1. In your `~/.bashrc` remove the lines that source `asdf.sh` and the completions:\n\n```shell\n. \"$HOME/.asdf/asdf.sh\"\n. \"$HOME/.asdf/completions/asdf.bash\"\n```\n\n2. Remove the `$HOME/.asdf` dir:\n\n```shell\nrm -rf \"${ASDF_DATA_DIR:-$HOME/.asdf}\"\n```\n\n3. Run this command to remove all `asdf` config files:\n\n```shell\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n```\n\nThis snippet shows you how to uninstall bash & git, which is an important aspect of core.\n\n**Uninstall Bash & Homebrew**:\n\n```yaml\n1. In your `~/.bashrc` remove the lines that source `asdf.sh` and the completions:\n\n```shell\n. $(brew --prefix asdf)/libexec/asdf.sh\n. $(brew --prefix asdf)/etc/bash_completion.d/asdf.bash\n```\n\n2. Uninstall with your package manager:\n\n```shell\nbrew uninstall asdf --force\n```\n\n3. Run this command to remove all `asdf` config files:\n\n```shell\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n```\n\nThis snippet shows you how to uninstall bash & homebrew, which is an important aspect of core.\n\n**Uninstall Fish & Git**:\n\n```yaml\n1. In your `~/.config/fish/config.fish` remove the lines that source `asdf.fish`:\n\n```shell\nsource ~/.asdf/asdf.fish\n```\n\nand remove completions with this command:\n\n```shell\nrm -rf ~/.config/fish/completions/asdf.fish\n```\n\n2. Remove the `$HOME/.asdf` dir:\n\n```shell\nrm -rf (string join : -- $ASDF_DATA_DIR $HOME/.asdf)\n```\n\n3. Run this command to remove all `asdf` config files:\n\n```shell\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n```\n\nThis snippet shows you how to uninstall fish & git, which is an important aspect of core.\n\n**Uninstall ZSH & Git**:\n\n```yaml\n1. In your `~/.zshrc` remove the lines that source `asdf.sh` and completions:\n\n```shell\n. \"$HOME/.asdf/asdf.sh\"\n# ...\nfpath=(${ASDF_DIR}/completions $fpath)\nautoload -Uz compinit\ncompinit\n```\n\n2. Remove the `$HOME/.asdf` dir:\n\n```shell\nrm -rf \"${ASDF_DATA_DIR:-$HOME/.asdf}\"\n```\n\n3. Run this command to remove all `asdf` config files:\n\n```shell\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n```\n\nThis snippet shows you how to uninstall zsh & git, which is an important aspect of core.\n\n", "metadata": {"source_url": "https://asdf-vm.com/manage/core.html", "title": "Core", "description": "The core `asdf` command list is rather small, but can facilitate many workflows.", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 03:03:27", "type": "code_examples", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "language": "en-US", "title": "Core | asdf", "generator": "VitePress v1.6.3", "scrapeId": "5ade903d-2e26-4168-ba7b-3e00dfa923d3", "sourceURL": "https://asdf-vm.com/manage/core.html", "url": "https://asdf-vm.com/manage/core.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: What are some tips for using Core in asdf-vm effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nShare the output of `asdf info` when making a bug report.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://asdf-vm.com/manage/core.html", "title": "Core", "description": "The core `asdf` command list is rather small, but can facilitate many workflows.", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 03:03:27", "type": "best_practices", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "language": "en-US", "title": "Core | asdf", "generator": "VitePress v1.6.3", "scrapeId": "5ade903d-2e26-4168-ba7b-3e00dfa923d3", "sourceURL": "https://asdf-vm.com/manage/core.html", "url": "https://asdf-vm.com/manage/core.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you explain what Documentation & Site Contribution Guide is in asdf-vm?\n\nAssistant: Sure, I'd be happy to explain Documentation & Site Contribution Guide in asdf-vm.\n\n# Documentation & Site Contribution Guide\n\nGuide for contributing to the documentation and site of asdf.Here's a quick rundown of what this is about:\n\n## Initial Setup\n\nFork `asdf` on GitHub and/or Git clone the default branch:\n\n```shell\n# clone your fork\ngit clone https://github.com/<GITHUB_USER>/asdf.git\n# or clone asdf\ngit clone https://github.com/asdf-vm/asdf.git\n```\n\nThe tools for Docs site development are managed with `asdf` in the `docs/.tool-versions`. Add the plugins with:\n\n```shell\nasdf plugin add nodejs https://github.com/asdf-vm/asdf-nodejs\n```\n\nInstall the tool version(s) with:\n\n```shell\nasdf install\n```\n\n- [Node.js](https://nodejs.org/): JavaScript runtime built on Chrome's V8 JavaScript engine.\n\nInstall Node.js dependencies from `docs/package.json`:\n\n```shell\nnpm install\n```\n\n## Development\n\n[VitePress (v2)](https://vitepress.dev/) is the Static Site Generator (SSG) we use to build the asdf documentation site. It was chosen to replace [Docsify.js](https://docsify.js.org/) and subsequently VuePress as we would like to support an HTML only fallback when users do not have JavaScript available or enabled. This was not possible with Docsify & VitePress quickly supplanted VuePress. Other than this, the feature-set is largely the same, with the focus on writing Markdown files with minimal configuration.\n\n`package.json` contains the scripts required for development:\n\nTo start the local development server:\n\n```shell\nnpm run dev\n```\n\nFormat the code before committing:\n\n```shell\nnpm run format\n```\n\n## Pull Requests, Releases & Conventional Commits\n\n`asdf` is using an automated release pipeline which relies on Conventional Commits in PR titles. Detailed documentation found in the [core contribution guide](https://asdf-vm.com/contribute/core.html).\n\nWhen creating a PR for documentation changes please make the PR title with the Conventional Commit type `docs` in the format `docs: <description>`.\n\n## Vitepress\n\nConfiguration of the site is contained within a few TypeScript files with JS Objects used to represent the config. They are:\n\n- `docs/.vitepress/config.js`: the root config file for the site. Read the [VitePress documentation](https://vitepress.dev/reference/site-config) for it's spec.\n\nTo simplify the root config, the larger JS Objects representing the _navbar_ and _sidebar_ configuration have been extracted and separated by their locale. See both in:\n\n- `docs/.vitepress/navbars.js`\n- `docs/.vitepress/sidebars.js`\n\nWith the official documentation for these configs living in the [Default Theme Reference](https://vitepress.dev/reference/default-theme-config).\n\n## I18n\n\nVitePress has first-class support for internationalization. The root config `docs/.vitepress/config.js` defines the supported locales with their URL, title in the selection dropdown menu and navbar/sidebar configs references.\n\nThe navbar/sidebar configs are captured in the aforementioned config files, separated by locale and exported individually.\n\nThe markdown content for each locale must fall under a folder with the same name as the keys for `locales` in the root config. That is:\n\n```js\n// docs/.vitepress/config.js\nexport default defineConfig({\n  ...\n  locales: {\n    root: {\n      label: \"English\",\n      lang: \"en-US\",\n      themeConfig: {\n        nav: navbars.en,\n        sidebar: sidebars.en,\n      },\n    },\n    \"pt-br\": {\n      label: \"Brazilian Portuguese\",\n      lang: \"pr-br\",\n      themeConfig: {\n        nav: navbars.pt_br,\n        sidebar: sidebars.pt_br,\n      },\n    },\n    \"zh-hans\": {\n      label: \"简体中文\",\n      lang: \"zh-hans\",\n      themeConfig: {\n        nav: navbars.zh_hans,\n        sidebar: sidebars.zh_hans,\n      },\n    },\n  },\n})\n```\n\n`/pt-BR/` will require the same set of markdown files located under `docs/pt-BR/`, like so:\n\n```shell\ndocs\n├─ README.md\n├─ foo.md\n├─ nested\n│  └─ README.md\n└─ pt-BR\n   ├─ README.md\n   ├─ foo.md\n   └─ nested\n      └─ README.md\n```\n\nThe [official VitePress i18n documentation](https://vitepress.dev/guide/i18n) goes into more detail.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://asdf-vm.com/contribute/documentation.html", "title": "Documentation & Site Contribution Guide", "description": "Guide for contributing to the documentation and site of asdf.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:03:56", "type": "overview", "page_metadata": {"description": "Manage multiple runtime versions with a single CLI tool", "viewport": "width=device-width,initial-scale=1", "title": "Docs & Site | asdf", "language": "en-US", "generator": "VitePress v1.6.3", "scrapeId": "31e8ab43-444e-48b5-8248-97caa5c1c3e7", "sourceURL": "https://asdf-vm.com/contribute/documentation.html", "url": "https://asdf-vm.com/contribute/documentation.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I initial setup in asdf-vm?\n\nAssistant: To initial setup in asdf-vm, here's what you do:\nFork `asdf` on GitHub and/or Git clone the default branch:\n\n```shell\n# clone your fork\ngit clone https://github.com/<GITHUB_USER>/asdf.git\n# or clone asdf\ngit clone https://github.com/asdf-vm/asdf.git\n```\n\nThe tools for Docs site development are managed with `asdf` in the `docs/.tool-versions`. Add the plugins with:\n\n```shell\nasdf plugin add nodejs https://github.com/asdf-vm/asdf-nodejs\n```\n\nInstall the tool version(s) with:\n\n```shell\nasdf install\n```\n\n- [Node.js](https://nodejs.org/): JavaScript runtime built on Chrome's V8 JavaScript engine.\n\nInstall Node.js dependencies from `docs/package.json`:\n\n```shell\nnpm install\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/contribute/documentation.html", "title": "Documentation & Site Contribution Guide", "description": "Guide for contributing to the documentation and site of asdf.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:03:56", "type": "section_detail", "page_metadata": {"description": "Manage multiple runtime versions with a single CLI tool", "viewport": "width=device-width,initial-scale=1", "title": "Docs & Site | asdf", "language": "en-US", "generator": "VitePress v1.6.3", "scrapeId": "31e8ab43-444e-48b5-8248-97caa5c1c3e7", "sourceURL": "https://asdf-vm.com/contribute/documentation.html", "url": "https://asdf-vm.com/contribute/documentation.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I development in asdf-vm?\n\nAssistant: To development in asdf-vm, here's what you do:\n[VitePress (v2)](https://vitepress.dev/) is the Static Site Generator (SSG) we use to build the asdf documentation site. It was chosen to replace [Docsify.js](https://docsify.js.org/) and subsequently VuePress as we would like to support an HTML only fallback when users do not have JavaScript available or enabled. This was not possible with Docsify & VitePress quickly supplanted VuePress. Other than this, the feature-set is largely the same, with the focus on writing Markdown files with minimal configuration.\n\n`package.json` contains the scripts required for development:\n\nTo start the local development server:\n\n```shell\nnpm run dev\n```\n\nFormat the code before committing:\n\n```shell\nnpm run format\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/contribute/documentation.html", "title": "Documentation & Site Contribution Guide", "description": "Guide for contributing to the documentation and site of asdf.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:03:56", "type": "section_detail", "page_metadata": {"description": "Manage multiple runtime versions with a single CLI tool", "viewport": "width=device-width,initial-scale=1", "title": "Docs & Site | asdf", "language": "en-US", "generator": "VitePress v1.6.3", "scrapeId": "31e8ab43-444e-48b5-8248-97caa5c1c3e7", "sourceURL": "https://asdf-vm.com/contribute/documentation.html", "url": "https://asdf-vm.com/contribute/documentation.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I pull requests, releases & conventional commits in asdf-vm?\n\nAssistant: To pull requests, releases & conventional commits in asdf-vm, here's what you do:\n`asdf` is using an automated release pipeline which relies on Conventional Commits in PR titles. Detailed documentation found in the [core contribution guide](https://asdf-vm.com/contribute/core.html).\n\nWhen creating a PR for documentation changes please make the PR title with the Conventional Commit type `docs` in the format `docs: <description>`..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/contribute/documentation.html", "title": "Documentation & Site Contribution Guide", "description": "Guide for contributing to the documentation and site of asdf.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:03:56", "type": "section_detail", "page_metadata": {"description": "Manage multiple runtime versions with a single CLI tool", "viewport": "width=device-width,initial-scale=1", "title": "Docs & Site | asdf", "language": "en-US", "generator": "VitePress v1.6.3", "scrapeId": "31e8ab43-444e-48b5-8248-97caa5c1c3e7", "sourceURL": "https://asdf-vm.com/contribute/documentation.html", "url": "https://asdf-vm.com/contribute/documentation.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I vitepress in asdf-vm?\n\nAssistant: To vitepress in asdf-vm, here's what you do:\nConfiguration of the site is contained within a few TypeScript files with JS Objects used to represent the config. They are:\n\n- `docs/.vitepress/config.js`: the root config file for the site. Read the [VitePress documentation](https://vitepress.dev/reference/site-config) for it's spec.\n\nTo simplify the root config, the larger JS Objects representing the _navbar_ and _sidebar_ configuration have been extracted and separated by their locale. See both in:\n\n- `docs/.vitepress/navbars.js`\n- `docs/.vitepress/sidebars.js`\n\nWith the official documentation for these configs living in the [Default Theme Reference](https://vitepress.dev/reference/default-theme-config)..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/contribute/documentation.html", "title": "Documentation & Site Contribution Guide", "description": "Guide for contributing to the documentation and site of asdf.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:03:56", "type": "section_detail", "page_metadata": {"description": "Manage multiple runtime versions with a single CLI tool", "viewport": "width=device-width,initial-scale=1", "title": "Docs & Site | asdf", "language": "en-US", "generator": "VitePress v1.6.3", "scrapeId": "31e8ab43-444e-48b5-8248-97caa5c1c3e7", "sourceURL": "https://asdf-vm.com/contribute/documentation.html", "url": "https://asdf-vm.com/contribute/documentation.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I i18n in asdf-vm?\n\nAssistant: To i18n in asdf-vm, here's what you do:\nVitePress has first-class support for internationalization. The root config `docs/.vitepress/config.js` defines the supported locales with their URL, title in the selection dropdown menu and navbar/sidebar configs references.\n\nThe navbar/sidebar configs are captured in the aforementioned config files, separated by locale and exported individually.\n\nThe markdown content for each locale must fall under a folder with the same name as the keys for `locales` in the root config. That is:\n\n```js\n// docs/.vitepress/config.js\nexport default defineConfig({\n  ...\n  locales: {\n    root: {\n      label: \"English\",\n      lang: \"en-US\",\n      themeConfig: {\n        nav: navbars.en,\n        sidebar: sidebars.en,\n      },\n    },\n    \"pt-br\": {\n      label: \"Brazilian Portuguese\",\n      lang: \"pr-br\",\n      themeConfig: {\n        nav: navbars.pt_br,\n        sidebar: sidebars.pt_br,\n      },\n    },\n    \"zh-hans\": {\n      label: \"简体中文\",\n      lang: \"zh-hans\",\n      themeConfig: {\n        nav: navbars.zh_hans,\n        sidebar: sidebars.zh_hans,\n      },\n    },\n  },\n})\n```\n\n`/pt-BR/` will require the same set of markdown files located under `docs/pt-BR/`, like so:\n\n```shell\ndocs\n├─ README.md\n├─ foo.md\n├─ nested\n│  └─ README.md\n└─ pt-BR\n   ├─ README.md\n   ├─ foo.md\n   └─ nested\n      └─ README.md\n```\n\nThe [official VitePress i18n documentation](https://vitepress.dev/guide/i18n) goes into more detail..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/contribute/documentation.html", "title": "Documentation & Site Contribution Guide", "description": "Guide for contributing to the documentation and site of asdf.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:03:56", "type": "section_detail", "page_metadata": {"description": "Manage multiple runtime versions with a single CLI tool", "viewport": "width=device-width,initial-scale=1", "title": "Docs & Site | asdf", "language": "en-US", "generator": "VitePress v1.6.3", "scrapeId": "31e8ab43-444e-48b5-8248-97caa5c1c3e7", "sourceURL": "https://asdf-vm.com/contribute/documentation.html", "url": "https://asdf-vm.com/contribute/documentation.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you give me some code examples for Documentation & Site Contribution Guide in asdf-vm?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Clone Repository**:\n\n```yaml\n# clone your fork\ngit clone https://github.com/<GITHUB_USER>/asdf.git\n# or clone asdf\ngit clone https://github.com/asdf-vm/asdf.git\n```\n\nThis snippet shows you how to clone repository, which is an important aspect of documentation & site contribution guide.\n\n**Add Node.js Plugin**:\n\n```yaml\nasdf plugin add nodejs https://github.com/asdf-vm/asdf-nodejs\n```\n\nThis snippet shows you how to add node.js plugin, which is an important aspect of documentation & site contribution guide.\n\n**Install Tool Versions**:\n\n```yaml\nasdf install\n```\n\nThis snippet shows you how to install tool versions, which is an important aspect of documentation & site contribution guide.\n\n**Install Node.js Dependencies**:\n\n```yaml\nnpm install\n```\n\nThis snippet shows you how to install node.js dependencies, which is an important aspect of documentation & site contribution guide.\n\n**Start Local Development Server**:\n\n```yaml\nnpm run dev\n```\n\nThis snippet shows you how to start local development server, which is an important aspect of documentation & site contribution guide.\n\n**Format Code Before Committing**:\n\n```yaml\nnpm run format\n```\n\nThis snippet shows you how to format code before committing, which is an important aspect of documentation & site contribution guide.\n\n**VitePress Configuration Example**:\n\n```yaml\n// docs/.vitepress/config.js\nexport default defineConfig({\n  ...\n  locales: {\n    root: {\n      label: \"English\",\n      lang: \"en-US\",\n      themeConfig: {\n        nav: navbars.en,\n        sidebar: sidebars.en,\n      },\n    },\n    \"pt-br\": {\n      label: \"Brazilian Portuguese\",\n      lang: \"pr-br\",\n      themeConfig: {\n        nav: navbars.pt_br,\n        sidebar: sidebars.pt_br,\n      },\n    },\n    \"zh-hans\": {\n      label: \"简体中文\",\n      lang: \"zh-hans\",\n      themeConfig: {\n        nav: navbars.zh_hans,\n        sidebar: sidebars.zh_hans,\n      },\n    },\n  },\n})\n```\n\nThis snippet shows you how to vitepress configuration example, which is an important aspect of documentation & site contribution guide.\n\n", "metadata": {"source_url": "https://asdf-vm.com/contribute/documentation.html", "title": "Documentation & Site Contribution Guide", "description": "Guide for contributing to the documentation and site of asdf.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:03:56", "type": "code_examples", "page_metadata": {"description": "Manage multiple runtime versions with a single CLI tool", "viewport": "width=device-width,initial-scale=1", "title": "Docs & Site | asdf", "language": "en-US", "generator": "VitePress v1.6.3", "scrapeId": "31e8ab43-444e-48b5-8248-97caa5c1c3e7", "sourceURL": "https://asdf-vm.com/contribute/documentation.html", "url": "https://asdf-vm.com/contribute/documentation.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: What are some tips for using Documentation & Site Contribution Guide in asdf-vm effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nWhen creating a PR for documentation changes, use the Conventional Commit type `docs` in the format `docs: <description>`.\n\nEnsure that the markdown content for each locale is placed under a folder with the same name as the keys for `locales` in the root config.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://asdf-vm.com/contribute/documentation.html", "title": "Documentation & Site Contribution Guide", "description": "Guide for contributing to the documentation and site of asdf.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:03:56", "type": "best_practices", "page_metadata": {"description": "Manage multiple runtime versions with a single CLI tool", "viewport": "width=device-width,initial-scale=1", "title": "Docs & Site | asdf", "language": "en-US", "generator": "VitePress v1.6.3", "scrapeId": "31e8ab43-444e-48b5-8248-97caa5c1c3e7", "sourceURL": "https://asdf-vm.com/contribute/documentation.html", "url": "https://asdf-vm.com/contribute/documentation.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you explain what Thanks is in asdf-vm?\n\nAssistant: Sure, I'd be happy to explain Thanks in asdf-vm.\n\n# Thanks\n\nThank you page to the asdf authors & contributors!Here's a quick rundown of what this is about:\n\n## Credits\n\nMe ( [@HashNuke](https://github.com/HashNuke)), High-fever, cold, cough.\n\nCopyright 2014 to the end of time ( [MIT License](https://github.com/asdf-vm/asdf/blob/master/LICENSE))\n\n## Maintainers\n\n- [@HashNuke](https://github.com/HashNuke)\n- [@danhper](https://github.com/danhper)\n- [@Stratus3D](https://github.com/Stratus3D)\n- [@vic](https://github.com/vic)\n- [@jthegedus](https://github.com/jthegedus)\n\n## Contributors\n\nSee the [list of contributors](https://github.com/asdf-vm/asdf/graphs/contributors) 🙏 on GitHub\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://asdf-vm.com/more/thanks.html", "title": "Thanks", "description": "Thank you page to the asdf authors & contributors!", "has_code_examples": false, "has_best_practices": false, "section_count": 3, "timestamp": "2025-03-01 03:04:37", "type": "overview", "page_metadata": {"generator": "VitePress v1.6.3", "language": "en-US", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "title": "Thanks | asdf", "scrapeId": "cf1f32cc-5874-4612-9e6f-6230a964c2f0", "sourceURL": "https://asdf-vm.com/more/thanks.html", "url": "https://asdf-vm.com/more/thanks.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I credits in asdf-vm?\n\nAssistant: To credits in asdf-vm, here's what you do:\nMe ( [@HashNuke](https://github.com/HashNuke)), High-fever, cold, cough.\n\nCopyright 2014 to the end of time ( [MIT License](https://github.com/asdf-vm/asdf/blob/master/LICENSE)).\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/more/thanks.html", "title": "Thanks", "description": "Thank you page to the asdf authors & contributors!", "has_code_examples": false, "has_best_practices": false, "section_count": 3, "timestamp": "2025-03-01 03:04:37", "type": "section_detail", "page_metadata": {"generator": "VitePress v1.6.3", "language": "en-US", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "title": "Thanks | asdf", "scrapeId": "cf1f32cc-5874-4612-9e6f-6230a964c2f0", "sourceURL": "https://asdf-vm.com/more/thanks.html", "url": "https://asdf-vm.com/more/thanks.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I maintainers in asdf-vm?\n\nAssistant: To maintainers in asdf-vm, here's what you do:\n- [@HashNuke](https://github.com/HashNuke)\n- [@danhper](https://github.com/danhper)\n- [@Stratus3D](https://github.com/Stratus3D)\n- [@vic](https://github.com/vic)\n- [@jthegedus](https://github.com/jthegedus).\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/more/thanks.html", "title": "Thanks", "description": "Thank you page to the asdf authors & contributors!", "has_code_examples": false, "has_best_practices": false, "section_count": 3, "timestamp": "2025-03-01 03:04:37", "type": "section_detail", "page_metadata": {"generator": "VitePress v1.6.3", "language": "en-US", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "title": "Thanks | asdf", "scrapeId": "cf1f32cc-5874-4612-9e6f-6230a964c2f0", "sourceURL": "https://asdf-vm.com/more/thanks.html", "url": "https://asdf-vm.com/more/thanks.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I contributors in asdf-vm?\n\nAssistant: To contributors in asdf-vm, here's what you do:\nSee the [list of contributors](https://github.com/asdf-vm/asdf/graphs/contributors) 🙏 on GitHub.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/more/thanks.html", "title": "Thanks", "description": "Thank you page to the asdf authors & contributors!", "has_code_examples": false, "has_best_practices": false, "section_count": 3, "timestamp": "2025-03-01 03:04:37", "type": "section_detail", "page_metadata": {"generator": "VitePress v1.6.3", "language": "en-US", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "title": "Thanks | asdf", "scrapeId": "cf1f32cc-5874-4612-9e6f-6230a964c2f0", "sourceURL": "https://asdf-vm.com/more/thanks.html", "url": "https://asdf-vm.com/more/thanks.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you explain what 코어 is in asdf-vm?\n\nAssistant: Sure, I'd be happy to explain 코어 in asdf-vm.\n\n# 코어\n\n코어 `asdf` 명령어는 소수지만, 많은 워크플로우를 원활하게 만들어줍니다.Here's a quick rundown of what this is about:\n\n## 설치 & 설정\n\n[시작하기](https://asdf-vm.com/ko-kr/guide/getting-started.html) 의 가이드에 설명되어 있습니다.\n\n## 실행\n\nshell\n\n```\nasdf exec <command> [args...]\n```\n\n현재 버전의 shim 명령어를 실행합니다.\n\n## 환경 변수\n\nshell\n\n```\nasdf env <command> [util]\n```\n\n\n## 정보\n\nshell\n\n```\nasdf info\n```\n\n운영체제, 셸 및 `asdf` 디버깅 정보를 출력하는 헬퍼 명령어입니다. 버그 리포트 작성시 공유해주세요.\n\n## Shim 재생성\n\nshell\n\n```\nasdf reshim <name> <version>\n```\n\n패키지의 현재 버전 shim을 재생성합니다. 기본적으로, shim들은 플러그인을 통해 툴 설치 중에 생성됩니다. [npm CLI](https://docs.npmjs.com/cli/) 등과 같은 툴들은 실행파일을 글로벌 설치할 수 있습니다, 예를 들어, `npm install -g yarn` 을 통한 [Yarn](https://yarnpkg.com/) 설치. 이러한 실행파일은 플러그인의 라이프사이클을 통해 설치되지 않았기 때문에, 해당 플러그인을 위한 shim이 아직 존재하지 않습니다. 이때, `nodejs` 의 `<version>` 에 대해서, 예를 들면 `yarn` 과 같은, 새로운 실행파일의 shim을 `asdf reshim nodejs <version>` 을 통해 강제적으로 재작성 할 수 있습니다.\n\n## Shim 버전\n\nshell\n\n```\nasdf shimversions <command>\n```\n\nshim을 제공하는 플러그인 및 버전들을 나열합니다.\n\n예를 들면, [Node.js](https://nodejs.org/) 에는 `node` 와 `npm` 이라고 하는 2개의 실행파일이 제공되고 있습니다. [`asdf-nodejs`](https://github.com/asdf-vm/asdf-nodejs/) 을 통해 여러 버전의 툴이 설치되어 있는 경우, `shimversions` 는 아래와 같은 내용을 출력할 수 있습니다:\n\nshell\n\n```\n➜ asdf shimversions node\nnodejs 14.8.0\nnodejs 14.17.3\nnodejs 16.5.0\n```\n\nshell\n\n```\n➜ asdf shimversions npm\nnodejs 14.8.0\nnodejs 14.17.3\nnodejs 16.5.0\n```\n\n\n## 업데이트\n\n`asdf` 를 설치하는 데 사용한 것과 같은 방법을 사용하여 업데이트하세요. `asdf` 의 최신 버전은 이 페이지의 오른쪽 상단 모서리에 표시됩니다.\n\n## 제거\n\n`asdf` 제거를 위해 다음 절차를 따르세요:\n\nBash & Git\n\n1. `~/.bashrc` 에서, `asdf.sh` 및 자동완성을 source하고 있는 행들을 삭제:\n\nshell\n\n```\n. \"$HOME/.asdf/asdf.sh\"\n. \"$HOME/.asdf/completions/asdf.bash\"\n```\n\n2. `$HOME/.asdf` 디렉토리 제거:\n\nshell\n\n```\nrm -rf \"${ASDF_DATA_DIR:-$HOME/.asdf}\"\n```\n\n3. 모든 `asdf` 설정 파일들 제거를 위해 아래 명령어 실행:\n\nshell\n\n```\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\nBash & Git (macOS)\n\n1. `~/.bash_profile` 에서, `asdf.sh` 및 자동완성을 source하고 있는 행들을 삭제:\n\nshell\n\n```\n. \"$HOME/.asdf/asdf.sh\"\n. \"$HOME/.asdf/completions/asdf.bash\"\n```\n\n2. `$HOME/.asdf` 디렉토리 제거:\n\nshell\n\n```\nrm -rf \"${ASDF_DATA_DIR:-$HOME/.asdf}\"\n```\n\n3. 모든 `asdf` 설정 파일들 제거를 위해 아래 명령어 실행:\n\nshell\n\n```\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\nBash & Homebrew\n\n1. `~/.bashrc` 에서, `asdf.sh` 및 자동완성을 source하고 있는 행들을 삭제:\n\nshell\n\n```\n. $(brew --prefix asdf)/libexec/asdf.sh\n. $(brew --prefix asdf)/etc/bash_completion.d/asdf.bash\n```\n\n명령어 자동완성에 대해서는 [Homebrew에 설명되어 있는 방법으로 설정](https://docs.brew.sh/Shell-Completion#configuring-completions-in-bash) 되어 있을 가능성이 있으므로, 그 가이드에 따라 삭제할 행을 찾아주세요.\n\n2. 패키지 관리자를 사용하여 제거:\n\nshell\n\n```\nbrew uninstall asdf --force\n```\n\n3. 모든 `asdf` 설정 파일들 제거를 위해 아래 명령어 실행:\n\nshell\n\n```\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\nBash & Homebrew (macOS)\n\n**macOS Catalina 혹은 그 이상** 을 사용하신다면, 기본 셸이 **ZSH** 로 변경되었습니다. 만약, `~/.bash_profile` 에서 설정을 찾을 수 없는 경우는, `~/.zshrc` 에 있을 가능성이 있는데 이 경우 ZSH의 설명을 봐 주세요.\n\n1. `~/.bash_profile` 에서, `asdf.sh` 및 자동완성을 source하고 있는 행들을 삭제:\n\nshell\n\n```\n. $(brew --prefix asdf)/libexec/asdf.sh\n. $(brew --prefix asdf)/etc/bash_completion.d/asdf.bash\n```\n\n명령어 자동완성에 대해서는 [Homebrew에 설명되어 있는 방법으로 설정](https://docs.brew.sh/Shell-Completion#configuring-completions-in-bash) 되어 있을 가능성이 있으므로, 그 가이드에 따라 삭제할 행을 찾아주세요.\n\n2. 패키지 관리자를 사용하여 제거:\n\nshell\n\n```\nbrew uninstall asdf --force\n```\n\n3. 모든 `asdf` 설정 파일들 제거를 위해 아래 명령어 실행:\n\nshell\n\n```\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\nBash & Pacman\n\n1. `~/.bashrc` 에서, `asdf.sh` 및 자동완성을 source하고 있는 행들을 삭제:\n\nshell\n\n```\n. /opt/asdf-vm/asdf.sh\n```\n\n2. 패키지 관리자를 사용하여 제거:\n\nshell\n\n```\npacman -Rs asdf-vm\n```\n\n3. `$HOME/.asdf` 디렉토리 제거:\n\nshell\n\n```\nrm -rf \"${ASDF_DATA_DIR:-$HOME/.asdf}\"\n```\n\n4. 모든 `asdf` 설정 파일들 제거를 위해 아래 명령어 실행:\n\nshell\n\n```\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\nFish & Git\n\n1. `~/.config/fish/config.fish` 에서, `asdf.fish` 를 source하고 있는 행들을 삭제:\n\nshell\n\n```\nsource ~/.asdf/asdf.fish\n```\n\n그리고 자동완성을 다음 명령어로 제거:\n\nshell\n\n```\nrm -rf ~/.config/fish/completions/asdf.fish\n```\n\n2. `$HOME/.asdf` 디렉토리 제거:\n\nshell\n\n```\nrm -rf (string join : -- $ASDF_DATA_DIR $HOME/.asdf)\n```\n\n3. 모든 `asdf` 설정 파일들 제거를 위해 아래 명령어 실행:\n\nshell\n\n```\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\nFish & Homebrew\n\n1. `~/.config/fish/config.fish` 에서, `asdf.fish` 를 source하고 있는 행들을 삭제:\n\nshell\n\n```\nsource \"(brew --prefix asdf)\"/libexec/asdf.fish\n```\n\n2. 패키지 관리자를 사용하여 제거:\n\nshell\n\n```\nbrew uninstall asdf --force\n```\n\n3. 모든 `asdf` 설정 파일들 제거를 위해 아래 명령어 실행:\n\nshell\n\n```\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\nFish & Pacman\n\n1. `~/.config/fish/config.fish` 에서, `asdf.fish` 를 source하고 있는 행들을 삭제:\n\nshell\n\n```\nsource /opt/asdf-vm/asdf.fish\n```\n\n2. 패키지 관리자를 사용하여 제거:\n\nshell\n\n```\npacman -Rs asdf-vm\n```\n\n3. `$HOME/.asdf` 디렉토리 제거:\n\nshell\n\n```\nrm -rf (string join : -- $ASDF_DATA_DIR $HOME/.asdf)\n```\n\n4. 모든 `asdf` 설정 파일들 제거를 위해 아래 명령어 실행:\n\nshell\n\n```\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\nElvish & Git\n\n1. `~/.config/elvish/rc.elv` 에서, `asdf` 모듈을 사용하는 행들을 삭제:\n\nshell\n\n```\nuse asdf _asdf; var asdf~ = $_asdf:asdf~\nset edit:completion:arg-completer[asdf] = $_asdf:arg-completer~\n```\n\n그리고 `asdf` 모듈을 다음 명령어로 제거:\n\nshell\n\n```\nrm -f ~/.config/elvish/lib/asdf.elv\n```\n\n2. `$HOME/.asdf` 디렉토리 제거:\n\nshell\n\n```\nif (!=s $E:ASDF_DATA_DIR \"\") { rm -rf $E:ASDF_DATA_DIR } else { rm -rf ~/.asdf }\n```\n\n3. 모든 `asdf` 설정 파일들 제거를 위해 아래 명령어 실행:\n\nshell\n\n```\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\nElvish & Homebrew\n\n1. `~/.config/elvish/rc.elv` 에서, `asdf` 모듈을 사용하는 행들을 삭제:\n\nshell\n\n```\nuse asdf _asdf; var asdf~ = $_asdf:asdf~\nset edit:completion:arg-completer[asdf] = $_asdf:arg-completer~\n```\n\n그리고 `asdf` 모듈을 다음 명령어로 제거:\n\nshell\n\n```\nrm -f ~/.config/elvish/lib/asdf.elv\n```\n\n2. 패키지 관리자를 사용하여 제거:\n\nshell\n\n```\nbrew uninstall asdf --force\n```\n\n3. 모든 `asdf` 설정 파일들 제거를 위해 아래 명령어 실행:\n\nshell\n\n```\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\nElvish & Pacman\n\n1. `~/.config/elvish/rc.elv` 에서, `asdf` 모듈을 사용하는 행들을 삭제:\n\nshell\n\n```\nuse asdf _asdf; var asdf~ = $_asdf:asdf~\nset edit:completion:arg-completer[asdf] = $_asdf:arg-completer~\n```\n\n그리고 `asdf` 모듈을 다음 명령어로 제거:\n\nshell\n\n```\nrm -f ~/.config/elvish/lib/asdf.elv\n```\n\n2. 패키지 관리자를 사용하여 제거:\n\nshell\n\n```\npacman -Rs asdf-vm\n```\n\n3. `$HOME/.asdf` 디렉토리 제거:\n\nshell\n\n```\nif (!=s $E:ASDF_DATA_DIR \"\") { rm -rf $E:ASDF_DATA_DIR } else { rm -rf ~/.asdf }\n```\n\n4. 모든 `asdf` 설정 파일들 제거를 위해 아래 명령어 실행:\n\nshell\n\n```\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\nZSH & Git\n\n1. `~/.zshrc` 에서, `asdf.sh` 및 자동완성을 source하고 있는 행들을 삭제:\n\nshell\n\n```\n. \"$HOME/.asdf/asdf.sh\"\n# ...\nfpath=(${ASDF_DIR}/completions $fpath)\nautoload -Uz compinit\ncompinit\n```\n\n**혹은** 사용된 ZSH 프레임워크 플러그인 제거.\n\n2. `$HOME/.asdf` 디렉토리 제거:\n\nshell\n\n```\nrm -rf \"${ASDF_DATA_DIR:-$HOME/.asdf}\"\n```\n\n3. 모든 `asdf` 설정 파일들 제거를 위해 아래 명령어 실행:\n\nshell\n\n```\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\nZSH & Homebrew\n\n1. `~/.zshrc` 에서, `asdf.sh` 을 source하고 있는 행들을 삭제:\n\nshell\n\n```\n. $(brew --prefix asdf)/libexec/asdf.sh\n```\n\n2. 패키지 관리자를 사용하여 제거:\n\nshell\n\n```\nbrew uninstall asdf --force && brew autoremove\n```\n\n3. 모든 `asdf` 설정 파일들 제거를 위해 아래 명령어 실행:\n\nshell\n\n```\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\nZSH & Pacman\n\n1. `~/.zshrc` 에서, `asdf.sh` 을 source하고 있는 행들을 삭제:\n\nshell\n\n```\n. /opt/asdf-vm/asdf.sh\n```\n\n2. 패키지 관리자를 사용하여 제거:\n\nshell\n\n```\npacman -Rs asdf-vm\n```\n\n3. `$HOME/.asdf` 디렉토리 제거:\n\nshell\n\n```\nrm -rf \"${ASDF_DATA_DIR:-$HOME/.asdf}\"\n```\n\n4. 모든 `asdf` 설정 파일들 제거를 위해 아래 명령어 실행:\n\nshell\n\n```\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://asdf-vm.com/ko-kr/manage/core", "title": "코어", "description": "코어 `asdf` 명령어는 소수지만, 많은 워크플로우를 원활하게 만들어줍니다.", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 03:05:28", "type": "overview", "page_metadata": {"language": "ko-kr", "description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "title": "코어 | asdf", "scrapeId": "2437eaa9-458d-44da-b99c-e2de9ea6e34a", "sourceURL": "https://asdf-vm.com/ko-kr/manage/core", "url": "https://asdf-vm.com/ko-kr/manage/core", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 설치 & 설정 in asdf-vm?\n\nAssistant: To 설치 & 설정 in asdf-vm, here's what you do:\n[시작하기](https://asdf-vm.com/ko-kr/guide/getting-started.html) 의 가이드에 설명되어 있습니다..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ko-kr/manage/core", "title": "코어", "description": "코어 `asdf` 명령어는 소수지만, 많은 워크플로우를 원활하게 만들어줍니다.", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 03:05:28", "type": "section_detail", "page_metadata": {"language": "ko-kr", "description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "title": "코어 | asdf", "scrapeId": "2437eaa9-458d-44da-b99c-e2de9ea6e34a", "sourceURL": "https://asdf-vm.com/ko-kr/manage/core", "url": "https://asdf-vm.com/ko-kr/manage/core", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 실행 in asdf-vm?\n\nAssistant: To 실행 in asdf-vm, here's what you do:\nshell\n\n```\nasdf exec <command> [args...]\n```\n\n현재 버전의 shim 명령어를 실행합니다..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ko-kr/manage/core", "title": "코어", "description": "코어 `asdf` 명령어는 소수지만, 많은 워크플로우를 원활하게 만들어줍니다.", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 03:05:28", "type": "section_detail", "page_metadata": {"language": "ko-kr", "description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "title": "코어 | asdf", "scrapeId": "2437eaa9-458d-44da-b99c-e2de9ea6e34a", "sourceURL": "https://asdf-vm.com/ko-kr/manage/core", "url": "https://asdf-vm.com/ko-kr/manage/core", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 환경 변수 in asdf-vm?\n\nAssistant: To 환경 변수 in asdf-vm, here's what you do:\nshell\n\n```\nasdf env <command> [util]\n```\n.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ko-kr/manage/core", "title": "코어", "description": "코어 `asdf` 명령어는 소수지만, 많은 워크플로우를 원활하게 만들어줍니다.", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 03:05:28", "type": "section_detail", "page_metadata": {"language": "ko-kr", "description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "title": "코어 | asdf", "scrapeId": "2437eaa9-458d-44da-b99c-e2de9ea6e34a", "sourceURL": "https://asdf-vm.com/ko-kr/manage/core", "url": "https://asdf-vm.com/ko-kr/manage/core", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 정보 in asdf-vm?\n\nAssistant: To 정보 in asdf-vm, here's what you do:\nshell\n\n```\nasdf info\n```\n\n운영체제, 셸 및 `asdf` 디버깅 정보를 출력하는 헬퍼 명령어입니다. 버그 리포트 작성시 공유해주세요..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ko-kr/manage/core", "title": "코어", "description": "코어 `asdf` 명령어는 소수지만, 많은 워크플로우를 원활하게 만들어줍니다.", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 03:05:28", "type": "section_detail", "page_metadata": {"language": "ko-kr", "description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "title": "코어 | asdf", "scrapeId": "2437eaa9-458d-44da-b99c-e2de9ea6e34a", "sourceURL": "https://asdf-vm.com/ko-kr/manage/core", "url": "https://asdf-vm.com/ko-kr/manage/core", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I shim 재생성 in asdf-vm?\n\nAssistant: To shim 재생성 in asdf-vm, here's what you do:\nshell\n\n```\nasdf reshim <name> <version>\n```\n\n패키지의 현재 버전 shim을 재생성합니다. 기본적으로, shim들은 플러그인을 통해 툴 설치 중에 생성됩니다. [npm CLI](https://docs.npmjs.com/cli/) 등과 같은 툴들은 실행파일을 글로벌 설치할 수 있습니다, 예를 들어, `npm install -g yarn` 을 통한 [Yarn](https://yarnpkg.com/) 설치. 이러한 실행파일은 플러그인의 라이프사이클을 통해 설치되지 않았기 때문에, 해당 플러그인을 위한 shim이 아직 존재하지 않습니다. 이때, `nodejs` 의 `<version>` 에 대해서, 예를 들면 `yarn` 과 같은, 새로운 실행파일의 shim을 `asdf reshim nodejs <version>` 을 통해 강제적으로 재작성 할 수 있습니다..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ko-kr/manage/core", "title": "코어", "description": "코어 `asdf` 명령어는 소수지만, 많은 워크플로우를 원활하게 만들어줍니다.", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 03:05:28", "type": "section_detail", "page_metadata": {"language": "ko-kr", "description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "title": "코어 | asdf", "scrapeId": "2437eaa9-458d-44da-b99c-e2de9ea6e34a", "sourceURL": "https://asdf-vm.com/ko-kr/manage/core", "url": "https://asdf-vm.com/ko-kr/manage/core", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I shim 버전 in asdf-vm?\n\nAssistant: To shim 버전 in asdf-vm, here's what you do:\nshell\n\n```\nasdf shimversions <command>\n```\n\nshim을 제공하는 플러그인 및 버전들을 나열합니다.\n\n예를 들면, [Node.js](https://nodejs.org/) 에는 `node` 와 `npm` 이라고 하는 2개의 실행파일이 제공되고 있습니다. [`asdf-nodejs`](https://github.com/asdf-vm/asdf-nodejs/) 을 통해 여러 버전의 툴이 설치되어 있는 경우, `shimversions` 는 아래와 같은 내용을 출력할 수 있습니다:\n\nshell\n\n```\n➜ asdf shimversions node\nnodejs 14.8.0\nnodejs 14.17.3\nnodejs 16.5.0\n```\n\nshell\n\n```\n➜ asdf shimversions npm\nnodejs 14.8.0\nnodejs 14.17.3\nnodejs 16.5.0\n```\n.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ko-kr/manage/core", "title": "코어", "description": "코어 `asdf` 명령어는 소수지만, 많은 워크플로우를 원활하게 만들어줍니다.", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 03:05:28", "type": "section_detail", "page_metadata": {"language": "ko-kr", "description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "title": "코어 | asdf", "scrapeId": "2437eaa9-458d-44da-b99c-e2de9ea6e34a", "sourceURL": "https://asdf-vm.com/ko-kr/manage/core", "url": "https://asdf-vm.com/ko-kr/manage/core", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 업데이트 in asdf-vm?\n\nAssistant: To 업데이트 in asdf-vm, here's what you do:\n`asdf` 를 설치하는 데 사용한 것과 같은 방법을 사용하여 업데이트하세요. `asdf` 의 최신 버전은 이 페이지의 오른쪽 상단 모서리에 표시됩니다..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ko-kr/manage/core", "title": "코어", "description": "코어 `asdf` 명령어는 소수지만, 많은 워크플로우를 원활하게 만들어줍니다.", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 03:05:28", "type": "section_detail", "page_metadata": {"language": "ko-kr", "description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "title": "코어 | asdf", "scrapeId": "2437eaa9-458d-44da-b99c-e2de9ea6e34a", "sourceURL": "https://asdf-vm.com/ko-kr/manage/core", "url": "https://asdf-vm.com/ko-kr/manage/core", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 제거 in asdf-vm?\n\nAssistant: To 제거 in asdf-vm, here's what you do:\n`asdf` 제거를 위해 다음 절차를 따르세요:\n\nBash & Git\n\n1. `~/.bashrc` 에서, `asdf.sh` 및 자동완성을 source하고 있는 행들을 삭제:\n\nshell\n\n```\n. \"$HOME/.asdf/asdf.sh\"\n. \"$HOME/.asdf/completions/asdf.bash\"\n```\n\n2. `$HOME/.asdf` 디렉토리 제거:\n\nshell\n\n```\nrm -rf \"${ASDF_DATA_DIR:-$HOME/.asdf}\"\n```\n\n3. 모든 `asdf` 설정 파일들 제거를 위해 아래 명령어 실행:\n\nshell\n\n```\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\nBash & Git (macOS)\n\n1. `~/.bash_profile` 에서, `asdf.sh` 및 자동완성을 source하고 있는 행들을 삭제:\n\nshell\n\n```\n. \"$HOME/.asdf/asdf.sh\"\n. \"$HOME/.asdf/completions/asdf.bash\"\n```\n\n2. `$HOME/.asdf` 디렉토리 제거:\n\nshell\n\n```\nrm -rf \"${ASDF_DATA_DIR:-$HOME/.asdf}\"\n```\n\n3. 모든 `asdf` 설정 파일들 제거를 위해 아래 명령어 실행:\n\nshell\n\n```\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\nBash & Homebrew\n\n1. `~/.bashrc` 에서, `asdf.sh` 및 자동완성을 source하고 있는 행들을 삭제:\n\nshell\n\n```\n. $(brew --prefix asdf)/libexec/asdf.sh\n. $(brew --prefix asdf)/etc/bash_completion.d/asdf.bash\n```\n\n명령어 자동완성에 대해서는 [Homebrew에 설명되어 있는 방법으로 설정](https://docs.brew.sh/Shell-Completion#configuring-completions-in-bash) 되어 있을 가능성이 있으므로, 그 가이드에 따라 삭제할 행을 찾아주세요.\n\n2. 패키지 관리자를 사용하여 제거:\n\nshell\n\n```\nbrew uninstall asdf --force\n```\n\n3. 모든 `asdf` 설정 파일들 제거를 위해 아래 명령어 실행:\n\nshell\n\n```\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\nBash & Homebrew (macOS)\n\n**macOS Catalina 혹은 그 이상** 을 사용하신다면, 기본 셸이 **ZSH** 로 변경되었습니다. 만약, `~/.bash_profile` 에서 설정을 찾을 수 없는 경우는, `~/.zshrc` 에 있을 가능성이 있는데 이 경우 ZSH의 설명을 봐 주세요.\n\n1. `~/.bash_profile` 에서, `asdf.sh` 및 자동완성을 source하고 있는 행들을 삭제:\n\nshell\n\n```\n. $(brew --prefix asdf)/libexec/asdf.sh\n. $(brew --prefix asdf)/etc/bash_completion.d/asdf.bash\n```\n\n명령어 자동완성에 대해서는 [Homebrew에 설명되어 있는 방법으로 설정](https://docs.brew.sh/Shell-Completion#configuring-completions-in-bash) 되어 있을 가능성이 있으므로, 그 가이드에 따라 삭제할 행을 찾아주세요.\n\n2. 패키지 관리자를 사용하여 제거:\n\nshell\n\n```\nbrew uninstall asdf --force\n```\n\n3. 모든 `asdf` 설정 파일들 제거를 위해 아래 명령어 실행:\n\nshell\n\n```\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\nBash & Pacman\n\n1. `~/.bashrc` 에서, `asdf.sh` 및 자동완성을 source하고 있는 행들을 삭제:\n\nshell\n\n```\n. /opt/asdf-vm/asdf.sh\n```\n\n2. 패키지 관리자를 사용하여 제거:\n\nshell\n\n```\npacman -Rs asdf-vm\n```\n\n3. `$HOME/.asdf` 디렉토리 제거:\n\nshell\n\n```\nrm -rf \"${ASDF_DATA_DIR:-$HOME/.asdf}\"\n```\n\n4. 모든 `asdf` 설정 파일들 제거를 위해 아래 명령어 실행:\n\nshell\n\n```\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\nFish & Git\n\n1. `~/.config/fish/config.fish` 에서, `asdf.fish` 를 source하고 있는 행들을 삭제:\n\nshell\n\n```\nsource ~/.asdf/asdf.fish\n```\n\n그리고 자동완성을 다음 명령어로 제거:\n\nshell\n\n```\nrm -rf ~/.config/fish/completions/asdf.fish\n```\n\n2. `$HOME/.asdf` 디렉토리 제거:\n\nshell\n\n```\nrm -rf (string join : -- $ASDF_DATA_DIR $HOME/.asdf)\n```\n\n3. 모든 `asdf` 설정 파일들 제거를 위해 아래 명령어 실행:\n\nshell\n\n```\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\nFish & Homebrew\n\n1. `~/.config/fish/config.fish` 에서, `asdf.fish` 를 source하고 있는 행들을 삭제:\n\nshell\n\n```\nsource \"(brew --prefix asdf)\"/libexec/asdf.fish\n```\n\n2. 패키지 관리자를 사용하여 제거:\n\nshell\n\n```\nbrew uninstall asdf --force\n```\n\n3. 모든 `asdf` 설정 파일들 제거를 위해 아래 명령어 실행:\n\nshell\n\n```\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\nFish & Pacman\n\n1. `~/.config/fish/config.fish` 에서, `asdf.fish` 를 source하고 있는 행들을 삭제:\n\nshell\n\n```\nsource /opt/asdf-vm/asdf.fish\n```\n\n2. 패키지 관리자를 사용하여 제거:\n\nshell\n\n```\npacman -Rs asdf-vm\n```\n\n3. `$HOME/.asdf` 디렉토리 제거:\n\nshell\n\n```\nrm -rf (string join : -- $ASDF_DATA_DIR $HOME/.asdf)\n```\n\n4. 모든 `asdf` 설정 파일들 제거를 위해 아래 명령어 실행:\n\nshell\n\n```\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\nElvish & Git\n\n1. `~/.config/elvish/rc.elv` 에서, `asdf` 모듈을 사용하는 행들을 삭제:\n\nshell\n\n```\nuse asdf _asdf; var asdf~ = $_asdf:asdf~\nset edit:completion:arg-completer[asdf] = $_asdf:arg-completer~\n```\n\n그리고 `asdf` 모듈을 다음 명령어로 제거:\n\nshell\n\n```\nrm -f ~/.config/elvish/lib/asdf.elv\n```\n\n2. `$HOME/.asdf` 디렉토리 제거:\n\nshell\n\n```\nif (!=s $E:ASDF_DATA_DIR \"\") { rm -rf $E:ASDF_DATA_DIR } else { rm -rf ~/.asdf }\n```\n\n3. 모든 `asdf` 설정 파일들 제거를 위해 아래 명령어 실행:\n\nshell\n\n```\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\nElvish & Homebrew\n\n1. `~/.config/elvish/rc.elv` 에서, `asdf` 모듈을 사용하는 행들을 삭제:\n\nshell\n\n```\nuse asdf _asdf; var asdf~ = $_asdf:asdf~\nset edit:completion:arg-completer[asdf] = $_asdf:arg-completer~\n```\n\n그리고 `asdf` 모듈을 다음 명령어로 제거:\n\nshell\n\n```\nrm -f ~/.config/elvish/lib/asdf.elv\n```\n\n2. 패키지 관리자를 사용하여 제거:\n\nshell\n\n```\nbrew uninstall asdf --force\n```\n\n3. 모든 `asdf` 설정 파일들 제거를 위해 아래 명령어 실행:\n\nshell\n\n```\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\nElvish & Pacman\n\n1. `~/.config/elvish/rc.elv` 에서, `asdf` 모듈을 사용하는 행들을 삭제:\n\nshell\n\n```\nuse asdf _asdf; var asdf~ = $_asdf:asdf~\nset edit:completion:arg-completer[asdf] = $_asdf:arg-completer~\n```\n\n그리고 `asdf` 모듈을 다음 명령어로 제거:\n\nshell\n\n```\nrm -f ~/.config/elvish/lib/asdf.elv\n```\n\n2. 패키지 관리자를 사용하여 제거:\n\nshell\n\n```\npacman -Rs asdf-vm\n```\n\n3. `$HOME/.asdf` 디렉토리 제거:\n\nshell\n\n```\nif (!=s $E:ASDF_DATA_DIR \"\") { rm -rf $E:ASDF_DATA_DIR } else { rm -rf ~/.asdf }\n```\n\n4. 모든 `asdf` 설정 파일들 제거를 위해 아래 명령어 실행:\n\nshell\n\n```\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\nZSH & Git\n\n1. `~/.zshrc` 에서, `asdf.sh` 및 자동완성을 source하고 있는 행들을 삭제:\n\nshell\n\n```\n. \"$HOME/.asdf/asdf.sh\"\n# ...\nfpath=(${ASDF_DIR}/completions $fpath)\nautoload -Uz compinit\ncompinit\n```\n\n**혹은** 사용된 ZSH 프레임워크 플러그인 제거.\n\n2. `$HOME/.asdf` 디렉토리 제거:\n\nshell\n\n```\nrm -rf \"${ASDF_DATA_DIR:-$HOME/.asdf}\"\n```\n\n3. 모든 `asdf` 설정 파일들 제거를 위해 아래 명령어 실행:\n\nshell\n\n```\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\nZSH & Homebrew\n\n1. `~/.zshrc` 에서, `asdf.sh` 을 source하고 있는 행들을 삭제:\n\nshell\n\n```\n. $(brew --prefix asdf)/libexec/asdf.sh\n```\n\n2. 패키지 관리자를 사용하여 제거:\n\nshell\n\n```\nbrew uninstall asdf --force && brew autoremove\n```\n\n3. 모든 `asdf` 설정 파일들 제거를 위해 아래 명령어 실행:\n\nshell\n\n```\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\nZSH & Pacman\n\n1. `~/.zshrc` 에서, `asdf.sh` 을 source하고 있는 행들을 삭제:\n\nshell\n\n```\n. /opt/asdf-vm/asdf.sh\n```\n\n2. 패키지 관리자를 사용하여 제거:\n\nshell\n\n```\npacman -Rs asdf-vm\n```\n\n3. `$HOME/.asdf` 디렉토리 제거:\n\nshell\n\n```\nrm -rf \"${ASDF_DATA_DIR:-$HOME/.asdf}\"\n```\n\n4. 모든 `asdf` 설정 파일들 제거를 위해 아래 명령어 실행:\n\nshell\n\n```\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ko-kr/manage/core", "title": "코어", "description": "코어 `asdf` 명령어는 소수지만, 많은 워크플로우를 원활하게 만들어줍니다.", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 03:05:28", "type": "section_detail", "page_metadata": {"language": "ko-kr", "description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "title": "코어 | asdf", "scrapeId": "2437eaa9-458d-44da-b99c-e2de9ea6e34a", "sourceURL": "https://asdf-vm.com/ko-kr/manage/core", "url": "https://asdf-vm.com/ko-kr/manage/core", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you give me some code examples for 코어 in asdf-vm?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**실행 명령어**:\n\n```yaml\nasdf exec <command> [args...]\n```\n\nThis snippet shows you how to 실행 명령어, which is an important aspect of 코어.\n\n**환경 변수 명령어**:\n\n```yaml\nasdf env <command> [util]\n```\n\nThis snippet shows you how to 환경 변수 명령어, which is an important aspect of 코어.\n\n**정보 명령어**:\n\n```yaml\nasdf info\n```\n\nThis snippet shows you how to 정보 명령어, which is an important aspect of 코어.\n\n**Shim 재생성 명령어**:\n\n```yaml\nasdf reshim <name> <version>\n```\n\nThis snippet shows you how to shim 재생성 명령어, which is an important aspect of 코어.\n\n**Shim 버전 명령어**:\n\n```yaml\nasdf shimversions <command>\n```\n\nThis snippet shows you how to shim 버전 명령어, which is an important aspect of 코어.\n\n**제거 명령어 (Bash & Git)**:\n\n```yaml\n. \"$HOME/.asdf/asdf.sh\"\n. \"$HOME/.asdf/completions/asdf.bash\"\n```\n\nThis snippet shows you how to 제거 명령어 (bash & git), which is an important aspect of 코어.\n\n**제거 명령어 (Bash & Git)**:\n\n```yaml\nrm -rf \"${ASDF_DATA_DIR:-$HOME/.asdf}\"\n```\n\nThis snippet shows you how to 제거 명령어 (bash & git), which is an important aspect of 코어.\n\n**제거 명령어 (Bash & Git)**:\n\n```yaml\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\nThis snippet shows you how to 제거 명령어 (bash & git), which is an important aspect of 코어.\n\n", "metadata": {"source_url": "https://asdf-vm.com/ko-kr/manage/core", "title": "코어", "description": "코어 `asdf` 명령어는 소수지만, 많은 워크플로우를 원활하게 만들어줍니다.", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 03:05:28", "type": "code_examples", "page_metadata": {"language": "ko-kr", "description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "title": "코어 | asdf", "scrapeId": "2437eaa9-458d-44da-b99c-e2de9ea6e34a", "sourceURL": "https://asdf-vm.com/ko-kr/manage/core", "url": "https://asdf-vm.com/ko-kr/manage/core", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: What are some tips for using 코어 in asdf-vm effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\n`asdf` 를 설치하는 데 사용한 것과 같은 방법을 사용하여 업데이트하세요.\n\n버그 리포트 작성시 `asdf info` 명령어로 출력된 정보를 공유하세요.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://asdf-vm.com/ko-kr/manage/core", "title": "코어", "description": "코어 `asdf` 명령어는 소수지만, 많은 워크플로우를 원활하게 만들어줍니다.", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 03:05:28", "type": "best_practices", "page_metadata": {"language": "ko-kr", "description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "title": "코어 | asdf", "scrapeId": "2437eaa9-458d-44da-b99c-e2de9ea6e34a", "sourceURL": "https://asdf-vm.com/ko-kr/manage/core", "url": "https://asdf-vm.com/ko-kr/manage/core", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you explain what Getting Started is in asdf-vm?\n\nAssistant: Sure, I'd be happy to explain Getting Started in asdf-vm.\n\n# Getting Started\n\nThis page provides a comprehensive guide on how to install and configure asdf, a version manager for multiple programming languages.Here's a quick rundown of what this is about:\n\n## 1. Install asdf\n\nasdf can be installed in several different ways:\n\nWith Package Manager - **Recommended**\n\n| Package Manager | Command |\n| --- | --- |\n| Homebrew | `brew install asdf` |\n| Pacman | `git clone https://aur.archlinux.org/asdf-vm.git && cd asdf-vm && makepkg -si` or use your preferred [AUR helper](https://wiki.archlinux.org/index.php/AUR_helpers) |\n\nDownload Pre-Compiled Binary - **Easy**\n\n##### Install Dependencies\n\nasdf primarily requires `git`. Here is a _non-exhaustive_ list of commands to run for _your_ package manager (some might automatically install these tools in later steps).\n\n| OS | Package Manager | Command |\n| --- | --- | --- |\n| linux | Aptitude | `apt install git` |\n| linux | DNF | `dnf install git` |\n| linux | Pacman | `pacman -S git` |\n| linux | Zypper | `zypper install git` |\n| macOS | Homebrew | `brew install coreutils git` |\n| macOS | Spack | `spack install coreutils git` |\n\nNote\n\n`sudo` may be required depending on your system configuration.\n\n##### Install asdf\n\n1. Visit [https://github.com/asdf-vm/asdf/releases](https://github.com/asdf-vm/asdf/releases) and download the appropriate archive for your operating system/architecture combination.\n2. Extract the `asdf` binary in the archive into a directory on your `$PATH`.\n3. Verify `asdf` is on your shell's `$PATH` by running `type -a asdf`. The directory you placed the `asdf` binary in should be listed on the first line of the output from `type`. If it is not that means step #2 was not completed correctly.\n\nWith `go install`\n\n##### Install Dependencies\n\nasdf primarily requires `git`. Here is a _non-exhaustive_ list of commands to run for _your_ package manager (some might automatically install these tools in later steps).\n\n| OS | Package Manager | Command |\n| --- | --- | --- |\n| linux | Aptitude | `apt install git` |\n| linux | DNF | `dnf install git` |\n| linux | Pacman | `pacman -S git` |\n| linux | Zypper | `zypper install git` |\n| macOS | Homebrew | `brew install coreutils git` |\n| macOS | Spack | `spack install coreutils git` |\n\nNote\n\n`sudo` may be required depending on your system configuration.\n\n##### Install asdf\n\n1. [Install Go](https://go.dev/doc/install)\n2. Run `go install github.com/asdf-vm/asdf/cmd/asdf@v0.16.0`\n\nBuild from Source\n\n##### Install Dependencies\n\nasdf primarily requires `git`. Here is a _non-exhaustive_ list of commands to run for _your_ package manager (some might automatically install these tools in later steps).\n\n| OS | Package Manager | Command |\n| --- | --- | --- |\n| linux | Aptitude | `apt install git` |\n| linux | DNF | `dnf install git` |\n| linux | Pacman | `pacman -S git` |\n| linux | Zypper | `zypper install git` |\n| macOS | Homebrew | `brew install coreutils git` |\n| macOS | Spack | `spack install coreutils git` |\n\nNote\n\n`sudo` may be required depending on your system configuration.\n\n##### Install asdf\n\n1. Clone the asdf repository:\n\n```\ngit clone https://github.com/asdf-vm/asdf.git --branch v0.16.0\n```\n\n2. Run `make`\n3. Copy the `asdf` binary into a directory on your `$PATH`.\n4. Verify `asdf` is on your shell's `$PATH` by running `type -a asdf`. The directory you placed the `asdf` binary in should be listed on the first line of the output from `type`. If it is not that means step #3 was not completed correctly.\n\n## 2. Configure asdf\n\nNote\n\nMost users **DO NOT** need to customize the location that asdf writes plugin, install, and shim data to. However, if `$HOME/.asdf` isn't the directory you want asdf writing to, you can change it. Specify the directory by exporting a variable named `ASDF_DATA_DIR` in your shell's RC file.\n\nThere are many different combinations of Shells, OSs & Installation methods all of which affect the configuration here. Expand the selection below that best matches your system.\n\n**macOS users, be sure to read the warning about `path_helper` at the end of this section.**\n\nBash\n\n**macOS Catalina or newer**: The default shell has changed to **ZSH**. Unless changing back to Bash, follow the ZSH instructions.\n\n**Pacman**: [`bash-completion`](https://wiki.archlinux.org/title/bash#Common_programs_and_options) needs to be installed for the completions to work.\n\n##### Add shims directory to path (required)\n\nAdd the following to `~/.bash_profile`:\n\n```\nexport PATH=\"${ASDF_DATA_DIR:-$HOME/.asdf}/shims:$PATH\"\n```\n\n###### Custom data directory (optional)\n\nAdd the following to `~/.bash_profile` above the line you added above:\n\n```\nexport ASDF_DATA_DIR=\"/your/custom/data/dir\"\n```\n\n##### Set up shell completions (optional)\n\nCompletions must be configured by adding the following to your `.bashrc`:\n\n```\n. <(asdf completion bash)\n```\n\nFish\n\n##### Add shims directory to path (required)\n\nAdd the following to `~/.config/fish/config.fish`:\n\n```\n# ASDF configuration code\nif test -z $ASDF_DATA_DIR\n    set _asdf_shims \"$HOME/.asdf/shims\"\nelse\n    set _asdf_shims \"$ASDF_DATA_DIR/shims\"\nend\n\n# Do not use fish_add_path (added in Fish 3.2) because it\n# potentially changes the order of items in PATH\nif not contains $_asdf_shims $PATH\n    set -gx --prepend PATH $_asdf_shims\nend\nset --erase _asdf_shims\n```\n\n###### Custom data directory (optional)\n\n**Pacman**: Completions are automatically configured on installation by the AUR package.\n\nAdd the following to `~/.config/fish/config.fish` above the lines you added above:\n\n```\nset -gx --prepend ASDF_DATA_DIR \"/your/custom/data/dir\"\n```\n\n##### Set up shell completions (optional)\n\nCompletions must be configured manually with the following command:\n\n```\n$ asdf completion fish > ~/.config/fish/completions/asdf.fish\n```\n\nElvish\n\n##### Add shims directory to path (required)\n\nAdd the following to `~/.config/elvish/rc.elv`:\n\n```\nvar asdf_data_dir = ~'/.asdf'\nif (and (has-env ASDF_DATA_DIR) (!=s $E:ASDF_DATA_DIR '')) {\n  set asdf_data_dir = $E:ASDF_DATA_DIR\n}\n\nif (not (has-value $paths $asdf_data_dir'/shims')) {\n  set paths = [$path $@paths]\n}\n```\n\n###### Custom data directory (optional)\n\nChange the following line in the above snippet to set a custom data directory:\n\n```\n-var asdf_data_dir = ~'/.asdf'\n+var asdf_data_dir = '/your/custom/data/dir'\n```\n\n##### Set up shell completions (optional)\n\n```\n$ asdf completion elvish >> ~/.config/elvish/rc.elv\n$ echo \"\\n\"'set edit:completion:arg-completer[asdf] = $_asdf:arg-completer~' >> ~/.config/elvish/rc.elv\n```\n\nZSH\n\n**Pacman**: Completions are placed in a ZSH friendly location, but [ZSH must be configured to use the autocompletions](https://wiki.archlinux.org/index.php/zsh#Command_completion).\n\n##### Add shims directory to path (required)\n\nAdd the following to `~/.zshrc`:\n\n```\nexport PATH=\"${ASDF_DATA_DIR:-$HOME/.asdf}/shims:$PATH\"\n```\n\n###### Custom data directory (optional)\n\nAdd the following to `~/.zshrc` above the line you added above:\n\n```\nexport ASDF_DATA_DIR=\"/your/custom/data/dir\"\n```\n\n##### Set up shell completions (optional)\n\nCompletions are configured by either a ZSH Framework `asdf` plugin (like [asdf for oh-my-zsh](https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/asdf)) or by doing the following:\n\n```\n$ mkdir -p \"${ASDF_DATA_DIR:-$HOME/.asdf}/completions\"\n$ asdf completion zsh > \"${ASDF_DATA_DIR:-$HOME/.asdf}/completions/_asdf\"\n```\n\nThen add the following to your `.zshrc`:\n\n```\n# append completions to fpath\nfpath=(${ASDF_DATA_DIR:-$HOME/.asdf}/completions $fpath)\n# initialise completions with ZSH's compinit\nautoload -Uz compinit && compinit\n```\n\n**Note**\n\nIf you are using a custom `compinit` setup with a ZSH Framework, ensure `compinit` is below your sourcing of the framework\n\nCompletions are configured by either a ZSH Framework `asdf` or will need to be [configured as per Homebrew's instructions](https://docs.brew.sh/Shell-Completion#configuring-completions-in-zsh). If you are using a ZSH Framework the associated plugin for asdf may need to be updated to use the new ZSH completions properly via `fpath`. The Oh-My-ZSH asdf plugin is yet to be updated, see [ohmyzsh/ohmyzsh#8837](https://github.com/ohmyzsh/ohmyzsh/pull/8837).\n\nPowerShell Core\n\n##### Add shims directory to path (required)\n\nAdd the following to `~/.config/powershell/profile.ps1`:\n\n```\n# Determine the location of the shims directory\nif ($null -eq $ASDF_DATA_DIR -or $ASDF_DATA_DIR -eq '') {\n  $_asdf_shims = \"${env:HOME}/.asdf/shims\"\n}\nelse {\n  $_asdf_shims = \"$ASDF_DATA_DIR/shims\"\n}\n\n# Then add it to path\n$env:PATH = \"${_asdf_shims}:${env:PATH}\"\n```\n\n###### Custom data directory (optional)\n\nAdd the following to `~/.config/powershell/profile.ps1` above the snippet you added above:\n\n```\n$env:ASDF_DATA_DIR = \"/your/custom/data/dir\"\n```\n\nShell completions not available for PowerShell\n\nNushell\n\n##### Add shims directory to path (required)\n\nAdd the following to `~/.config/nushell/config.nu`:\n\n```\nlet shims_dir = (\n  if ( $env | get --ignore-errors ASDF_DATA_DIR | is-empty ) {\n    $env.HOME | path join '.asdf'\n  } else {\n    $env.ASDF_DATA_DIR\n  } | path join 'shims'\n)\n$env.PATH = ( $env.PATH | split row (char esep) | where { |p| $p != $shims_dir } | prepend $shims_dir )\n```\n\n###### Custom data directory (optional)\n\nAdd the following to `~/.config/nushell/config.nu` above the line you added above:\n\n```\n$env.ASDF_DATA_DIR = \"/your/custom/data/dir\"\n```\n\n##### Set up shell completions (optional)\n\n```\n# If you've not customized the asdf data directory:\n$ mkdir \"$($env.HOME)/.asdf/completions\"\n$ asdf completion nushell | save \"$($env.HOME)/.asdf/completions/nushell.nu\"\n\n# If you have customized the data directory by setting ASDF_DATA_DIR:\n$ mkdir \"$($env.ASDF_DATA_DIR)/completions\"\n$ asdf completion nushell | save \"$($env.ASDF_DATA_DIR)/completions/nushell.nu\"\n```\n\nThen add the following to `~/.config/nushell/config.nu`:\n\n```\nlet asdf_data_dir = (\n  if ( $env | get --ignore-errors ASDF_DATA_DIR | is-empty ) {\n    $env.HOME | path join '.asdf'\n  } else {\n    $env.ASDF_DATA_DIR\n  }\n)\n. \"$asdf_data_dir/completions/nushell.nu\"\n```\n\nPOSIX Shell\n\n##### Add shims directory to path (required)\n\nAdd the following to `~/.profile`:\n\n```\nexport PATH=\"${ASDF_DATA_DIR:-$HOME/.asdf}/shims:$PATH\"\n```\n\n###### Custom data directory (optional)\n\nAdd the following to `~/.profile` above the line you added above:\n\n```\nexport ASDF_DATA_DIR=\"/your/custom/data/dir\"\n```\n\n`asdf` scripts need to be sourced **after** you have set your `$PATH` and **after** you have sourced your framework (oh-my-zsh etc).\n\nWARNING\n\nOn macOS, starting a Bash or Zsh shell automatically calls a utility called `path_helper`. `path_helper` can rearrange items in `PATH` (and `MANPATH`), causing inconsistent behavior for tools that require specific ordering. To workaround this, `asdf` on macOS defaults to forcibly adding its `PATH`-entries to the front (taking highest priority). This is controllable with the `ASDF_FORCE_PREPEND` variable.\n\nRestart your shell so that `PATH` changes take effect. Opening a new terminal tab will usually do it.\n\n## Core Installation Complete!\n\nThis completes the installation of the `asdf` core 🎉\n\n`asdf` is only useful once you install a **plugin**, install a **tool** and manage its **versions**. Continue the guide below to learn how to do this.\n\n## 4. Install a Plugin\n\nFor demonstration purposes we will install & set [Node.js](https://nodejs.org/) via the [`asdf-nodejs`](https://github.com/asdf-vm/asdf-nodejs/) plugin.\n\n### Plugin Dependencies\n\nEach plugin has dependencies so we need to check the plugin repo where they should be listed. For `asdf-nodejs` they are:\n\n| OS | Dependency Installation |\n| --- | --- |\n| Debian | `apt-get install dirmngr gpg curl gawk` |\n| CentOS/ Rocky Linux/ AlmaLinux | `yum install gnupg2 curl gawk` |\n| macOS | `brew install gpg gawk` |\n\nWe should install dependencies first as some Plugins have post-install hooks.\n\n### Install the Plugin\n\n```\nasdf plugin add nodejs https://github.com/asdf-vm/asdf-nodejs.git\n```\n\n## 5. Install a Version\n\nNow we have a plugin for Node.js we can install a version of the tool.\n\nWe can see which versions are available with `asdf list all nodejs` or a subset of versions with `asdf list all nodejs 14`.\n\nWe will just install the `latest` available version:\n\n```\nasdf install nodejs latest\n```\n\nNote\n\n`asdf` enforces exact versions. `latest` is a helper throughout `asdf` that will resolve to the actual version number at the time of execution.\n\n## 6. Set a Version\n\n`asdf` performs a version lookup of a tool in all `.tool-versions` files from the current working directory up to the `$HOME` directory. The lookup occurs just-in-time when you execute a tool that `asdf` manages.\n\nWARNING\n\nWithout a version listed for a tool execution of the tool will **error**. `asdf current` will show you the tool & version resolution, or absence of, from your current directory so you can observe which tools will fail to execute.\n\nBecause asdf looks for a `.tool-versions` file in the current directory first, and if the file is not found it then climbs up the file tree looking for a `.tool-versions` in a parent directory until it finds one. If no `.tool-versions` file is found the version resolution process will fail and an error will be printed.\n\nIf you want to set a default version that will apply to all directories you work in you can set a version in `$HOME/.tool-versions`. Any directory under your home directory will have that same version set, unless a particular directory sets another version.\n\n```\nasdf set -u nodejs 16.5.0\n```\n\n`$HOME/.tool-versions` will then look like:\n\n```\nnodejs 16.5.0\n```\n\nSome OSs already have tools installed that are managed by the system and not `asdf`, `python` is a common example. You need to tell `asdf` to pass the management back to the system. The [Versions reference section](https://asdf-vm.com/manage/versions.html) will guide you.\n\nThe first place asdf looks for a version is your current working directory ( `$PWD/.tool-versions`). This may be a directory containing a source code or Git repository for a project. When in your desired directory execute you can use `asdf set` to set the version:\n\n```\nasdf set nodejs 16.5.0\n```\n\n`$PWD/.tool-versions` will then look like:\n\n```\nnodejs 16.5.0\n```\n\n### Using Existing Tool Version Files\n\n`asdf` supports the migration from existing version files from other version managers. Eg: `.ruby-version` for the case of `rbenv`. This is supported on a per-plugin basis.\n\n[`asdf-nodejs`](https://github.com/asdf-vm/asdf-nodejs/) supports this via both `.nvmrc` and `.node-version` files. To enable this, add the following to your `asdf` configuration file `$HOME/.asdfrc`:\n\n```\nlegacy_version_file = yes\n```\n\nSee the [configuration](https://asdf-vm.com/manage/configuration.html) reference page for more config options.\n\n## Guide Complete!\n\nThat completes the Getting Started guide for `asdf` 🎉 You can now manage `nodejs` versions for your project. Follow similar steps for each type of tool in your project!\n\n`asdf` has many more commands to become familiar with, you can see them all by running `asdf --help` or `asdf`. The core of the commands are broken into three categories:\n\n- [core `asdf`](https://asdf-vm.com/manage/core.html)\n- [plugins](https://asdf-vm.com/manage/plugins.html)\n- [versions (of tools)](https://asdf-vm.com/manage/versions.html)\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://asdf-vm.com/guide/getting-started.html", "title": "Getting Started", "description": "This page provides a comprehensive guide on how to install and configure asdf, a version manager for multiple programming languages.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:07:30", "type": "overview", "page_metadata": {"title": "Getting Started | asdf", "description": "Manage multiple runtime versions with a single CLI tool", "viewport": "width=device-width,initial-scale=1", "generator": "VitePress v1.6.3", "language": "en-US", "scrapeId": "3ef3d99e-f6d5-46a3-bf91-924067eae7e2", "sourceURL": "https://asdf-vm.com/guide/getting-started.html", "url": "https://asdf-vm.com/guide/getting-started.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 1. install asdf in asdf-vm?\n\nAssistant: To 1. install asdf in asdf-vm, here's what you do:\nasdf can be installed in several different ways:\n\nWith Package Manager - **Recommended**\n\n| Package Manager | Command |\n| --- | --- |\n| Homebrew | `brew install asdf` |\n| Pacman | `git clone https://aur.archlinux.org/asdf-vm.git && cd asdf-vm && makepkg -si` or use your preferred [AUR helper](https://wiki.archlinux.org/index.php/AUR_helpers) |\n\nDownload Pre-Compiled Binary - **Easy**\n\n##### Install Dependencies\n\nasdf primarily requires `git`. Here is a _non-exhaustive_ list of commands to run for _your_ package manager (some might automatically install these tools in later steps).\n\n| OS | Package Manager | Command |\n| --- | --- | --- |\n| linux | Aptitude | `apt install git` |\n| linux | DNF | `dnf install git` |\n| linux | Pacman | `pacman -S git` |\n| linux | Zypper | `zypper install git` |\n| macOS | Homebrew | `brew install coreutils git` |\n| macOS | Spack | `spack install coreutils git` |\n\nNote\n\n`sudo` may be required depending on your system configuration.\n\n##### Install asdf\n\n1. Visit [https://github.com/asdf-vm/asdf/releases](https://github.com/asdf-vm/asdf/releases) and download the appropriate archive for your operating system/architecture combination.\n2. Extract the `asdf` binary in the archive into a directory on your `$PATH`.\n3. Verify `asdf` is on your shell's `$PATH` by running `type -a asdf`. The directory you placed the `asdf` binary in should be listed on the first line of the output from `type`. If it is not that means step #2 was not completed correctly.\n\nWith `go install`\n\n##### Install Dependencies\n\nasdf primarily requires `git`. Here is a _non-exhaustive_ list of commands to run for _your_ package manager (some might automatically install these tools in later steps).\n\n| OS | Package Manager | Command |\n| --- | --- | --- |\n| linux | Aptitude | `apt install git` |\n| linux | DNF | `dnf install git` |\n| linux | Pacman | `pacman -S git` |\n| linux | Zypper | `zypper install git` |\n| macOS | Homebrew | `brew install coreutils git` |\n| macOS | Spack | `spack install coreutils git` |\n\nNote\n\n`sudo` may be required depending on your system configuration.\n\n##### Install asdf\n\n1. [Install Go](https://go.dev/doc/install)\n2. Run `go install github.com/asdf-vm/asdf/cmd/asdf@v0.16.0`\n\nBuild from Source\n\n##### Install Dependencies\n\nasdf primarily requires `git`. Here is a _non-exhaustive_ list of commands to run for _your_ package manager (some might automatically install these tools in later steps).\n\n| OS | Package Manager | Command |\n| --- | --- | --- |\n| linux | Aptitude | `apt install git` |\n| linux | DNF | `dnf install git` |\n| linux | Pacman | `pacman -S git` |\n| linux | Zypper | `zypper install git` |\n| macOS | Homebrew | `brew install coreutils git` |\n| macOS | Spack | `spack install coreutils git` |\n\nNote\n\n`sudo` may be required depending on your system configuration.\n\n##### Install asdf\n\n1. Clone the asdf repository:\n\n```\ngit clone https://github.com/asdf-vm/asdf.git --branch v0.16.0\n```\n\n2. Run `make`\n3. Copy the `asdf` binary into a directory on your `$PATH`.\n4. Verify `asdf` is on your shell's `$PATH` by running `type -a asdf`. The directory you placed the `asdf` binary in should be listed on the first line of the output from `type`. If it is not that means step #3 was not completed correctly..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/guide/getting-started.html", "title": "Getting Started", "description": "This page provides a comprehensive guide on how to install and configure asdf, a version manager for multiple programming languages.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:07:30", "type": "section_detail", "page_metadata": {"title": "Getting Started | asdf", "description": "Manage multiple runtime versions with a single CLI tool", "viewport": "width=device-width,initial-scale=1", "generator": "VitePress v1.6.3", "language": "en-US", "scrapeId": "3ef3d99e-f6d5-46a3-bf91-924067eae7e2", "sourceURL": "https://asdf-vm.com/guide/getting-started.html", "url": "https://asdf-vm.com/guide/getting-started.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 2. configure asdf in asdf-vm?\n\nAssistant: To 2. configure asdf in asdf-vm, here's what you do:\nNote\n\nMost users **DO NOT** need to customize the location that asdf writes plugin, install, and shim data to. However, if `$HOME/.asdf` isn't the directory you want asdf writing to, you can change it. Specify the directory by exporting a variable named `ASDF_DATA_DIR` in your shell's RC file.\n\nThere are many different combinations of Shells, OSs & Installation methods all of which affect the configuration here. Expand the selection below that best matches your system.\n\n**macOS users, be sure to read the warning about `path_helper` at the end of this section.**\n\nBash\n\n**macOS Catalina or newer**: The default shell has changed to **ZSH**. Unless changing back to Bash, follow the ZSH instructions.\n\n**Pacman**: [`bash-completion`](https://wiki.archlinux.org/title/bash#Common_programs_and_options) needs to be installed for the completions to work.\n\n##### Add shims directory to path (required)\n\nAdd the following to `~/.bash_profile`:\n\n```\nexport PATH=\"${ASDF_DATA_DIR:-$HOME/.asdf}/shims:$PATH\"\n```\n\n###### Custom data directory (optional)\n\nAdd the following to `~/.bash_profile` above the line you added above:\n\n```\nexport ASDF_DATA_DIR=\"/your/custom/data/dir\"\n```\n\n##### Set up shell completions (optional)\n\nCompletions must be configured by adding the following to your `.bashrc`:\n\n```\n. <(asdf completion bash)\n```\n\nFish\n\n##### Add shims directory to path (required)\n\nAdd the following to `~/.config/fish/config.fish`:\n\n```\n# ASDF configuration code\nif test -z $ASDF_DATA_DIR\n    set _asdf_shims \"$HOME/.asdf/shims\"\nelse\n    set _asdf_shims \"$ASDF_DATA_DIR/shims\"\nend\n\n# Do not use fish_add_path (added in Fish 3.2) because it\n# potentially changes the order of items in PATH\nif not contains $_asdf_shims $PATH\n    set -gx --prepend PATH $_asdf_shims\nend\nset --erase _asdf_shims\n```\n\n###### Custom data directory (optional)\n\n**Pacman**: Completions are automatically configured on installation by the AUR package.\n\nAdd the following to `~/.config/fish/config.fish` above the lines you added above:\n\n```\nset -gx --prepend ASDF_DATA_DIR \"/your/custom/data/dir\"\n```\n\n##### Set up shell completions (optional)\n\nCompletions must be configured manually with the following command:\n\n```\n$ asdf completion fish > ~/.config/fish/completions/asdf.fish\n```\n\nElvish\n\n##### Add shims directory to path (required)\n\nAdd the following to `~/.config/elvish/rc.elv`:\n\n```\nvar asdf_data_dir = ~'/.asdf'\nif (and (has-env ASDF_DATA_DIR) (!=s $E:ASDF_DATA_DIR '')) {\n  set asdf_data_dir = $E:ASDF_DATA_DIR\n}\n\nif (not (has-value $paths $asdf_data_dir'/shims')) {\n  set paths = [$path $@paths]\n}\n```\n\n###### Custom data directory (optional)\n\nChange the following line in the above snippet to set a custom data directory:\n\n```\n-var asdf_data_dir = ~'/.asdf'\n+var asdf_data_dir = '/your/custom/data/dir'\n```\n\n##### Set up shell completions (optional)\n\n```\n$ asdf completion elvish >> ~/.config/elvish/rc.elv\n$ echo \"\\n\"'set edit:completion:arg-completer[asdf] = $_asdf:arg-completer~' >> ~/.config/elvish/rc.elv\n```\n\nZSH\n\n**Pacman**: Completions are placed in a ZSH friendly location, but [ZSH must be configured to use the autocompletions](https://wiki.archlinux.org/index.php/zsh#Command_completion).\n\n##### Add shims directory to path (required)\n\nAdd the following to `~/.zshrc`:\n\n```\nexport PATH=\"${ASDF_DATA_DIR:-$HOME/.asdf}/shims:$PATH\"\n```\n\n###### Custom data directory (optional)\n\nAdd the following to `~/.zshrc` above the line you added above:\n\n```\nexport ASDF_DATA_DIR=\"/your/custom/data/dir\"\n```\n\n##### Set up shell completions (optional)\n\nCompletions are configured by either a ZSH Framework `asdf` plugin (like [asdf for oh-my-zsh](https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/asdf)) or by doing the following:\n\n```\n$ mkdir -p \"${ASDF_DATA_DIR:-$HOME/.asdf}/completions\"\n$ asdf completion zsh > \"${ASDF_DATA_DIR:-$HOME/.asdf}/completions/_asdf\"\n```\n\nThen add the following to your `.zshrc`:\n\n```\n# append completions to fpath\nfpath=(${ASDF_DATA_DIR:-$HOME/.asdf}/completions $fpath)\n# initialise completions with ZSH's compinit\nautoload -Uz compinit && compinit\n```\n\n**Note**\n\nIf you are using a custom `compinit` setup with a ZSH Framework, ensure `compinit` is below your sourcing of the framework\n\nCompletions are configured by either a ZSH Framework `asdf` or will need to be [configured as per Homebrew's instructions](https://docs.brew.sh/Shell-Completion#configuring-completions-in-zsh). If you are using a ZSH Framework the associated plugin for asdf may need to be updated to use the new ZSH completions properly via `fpath`. The Oh-My-ZSH asdf plugin is yet to be updated, see [ohmyzsh/ohmyzsh#8837](https://github.com/ohmyzsh/ohmyzsh/pull/8837).\n\nPowerShell Core\n\n##### Add shims directory to path (required)\n\nAdd the following to `~/.config/powershell/profile.ps1`:\n\n```\n# Determine the location of the shims directory\nif ($null -eq $ASDF_DATA_DIR -or $ASDF_DATA_DIR -eq '') {\n  $_asdf_shims = \"${env:HOME}/.asdf/shims\"\n}\nelse {\n  $_asdf_shims = \"$ASDF_DATA_DIR/shims\"\n}\n\n# Then add it to path\n$env:PATH = \"${_asdf_shims}:${env:PATH}\"\n```\n\n###### Custom data directory (optional)\n\nAdd the following to `~/.config/powershell/profile.ps1` above the snippet you added above:\n\n```\n$env:ASDF_DATA_DIR = \"/your/custom/data/dir\"\n```\n\nShell completions not available for PowerShell\n\nNushell\n\n##### Add shims directory to path (required)\n\nAdd the following to `~/.config/nushell/config.nu`:\n\n```\nlet shims_dir = (\n  if ( $env | get --ignore-errors ASDF_DATA_DIR | is-empty ) {\n    $env.HOME | path join '.asdf'\n  } else {\n    $env.ASDF_DATA_DIR\n  } | path join 'shims'\n)\n$env.PATH = ( $env.PATH | split row (char esep) | where { |p| $p != $shims_dir } | prepend $shims_dir )\n```\n\n###### Custom data directory (optional)\n\nAdd the following to `~/.config/nushell/config.nu` above the line you added above:\n\n```\n$env.ASDF_DATA_DIR = \"/your/custom/data/dir\"\n```\n\n##### Set up shell completions (optional)\n\n```\n# If you've not customized the asdf data directory:\n$ mkdir \"$($env.HOME)/.asdf/completions\"\n$ asdf completion nushell | save \"$($env.HOME)/.asdf/completions/nushell.nu\"\n\n# If you have customized the data directory by setting ASDF_DATA_DIR:\n$ mkdir \"$($env.ASDF_DATA_DIR)/completions\"\n$ asdf completion nushell | save \"$($env.ASDF_DATA_DIR)/completions/nushell.nu\"\n```\n\nThen add the following to `~/.config/nushell/config.nu`:\n\n```\nlet asdf_data_dir = (\n  if ( $env | get --ignore-errors ASDF_DATA_DIR | is-empty ) {\n    $env.HOME | path join '.asdf'\n  } else {\n    $env.ASDF_DATA_DIR\n  }\n)\n. \"$asdf_data_dir/completions/nushell.nu\"\n```\n\nPOSIX Shell\n\n##### Add shims directory to path (required)\n\nAdd the following to `~/.profile`:\n\n```\nexport PATH=\"${ASDF_DATA_DIR:-$HOME/.asdf}/shims:$PATH\"\n```\n\n###### Custom data directory (optional)\n\nAdd the following to `~/.profile` above the line you added above:\n\n```\nexport ASDF_DATA_DIR=\"/your/custom/data/dir\"\n```\n\n`asdf` scripts need to be sourced **after** you have set your `$PATH` and **after** you have sourced your framework (oh-my-zsh etc).\n\nWARNING\n\nOn macOS, starting a Bash or Zsh shell automatically calls a utility called `path_helper`. `path_helper` can rearrange items in `PATH` (and `MANPATH`), causing inconsistent behavior for tools that require specific ordering. To workaround this, `asdf` on macOS defaults to forcibly adding its `PATH`-entries to the front (taking highest priority). This is controllable with the `ASDF_FORCE_PREPEND` variable.\n\nRestart your shell so that `PATH` changes take effect. Opening a new terminal tab will usually do it..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/guide/getting-started.html", "title": "Getting Started", "description": "This page provides a comprehensive guide on how to install and configure asdf, a version manager for multiple programming languages.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:07:30", "type": "section_detail", "page_metadata": {"title": "Getting Started | asdf", "description": "Manage multiple runtime versions with a single CLI tool", "viewport": "width=device-width,initial-scale=1", "generator": "VitePress v1.6.3", "language": "en-US", "scrapeId": "3ef3d99e-f6d5-46a3-bf91-924067eae7e2", "sourceURL": "https://asdf-vm.com/guide/getting-started.html", "url": "https://asdf-vm.com/guide/getting-started.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I core installation complete! in asdf-vm?\n\nAssistant: To core installation complete! in asdf-vm, here's what you do:\nThis completes the installation of the `asdf` core 🎉\n\n`asdf` is only useful once you install a **plugin**, install a **tool** and manage its **versions**. Continue the guide below to learn how to do this..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/guide/getting-started.html", "title": "Getting Started", "description": "This page provides a comprehensive guide on how to install and configure asdf, a version manager for multiple programming languages.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:07:30", "type": "section_detail", "page_metadata": {"title": "Getting Started | asdf", "description": "Manage multiple runtime versions with a single CLI tool", "viewport": "width=device-width,initial-scale=1", "generator": "VitePress v1.6.3", "language": "en-US", "scrapeId": "3ef3d99e-f6d5-46a3-bf91-924067eae7e2", "sourceURL": "https://asdf-vm.com/guide/getting-started.html", "url": "https://asdf-vm.com/guide/getting-started.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 4. install a plugin in asdf-vm?\n\nAssistant: To 4. install a plugin in asdf-vm, here's what you do:\nFor demonstration purposes we will install & set [Node.js](https://nodejs.org/) via the [`asdf-nodejs`](https://github.com/asdf-vm/asdf-nodejs/) plugin.\n\n### Plugin Dependencies\n\nEach plugin has dependencies so we need to check the plugin repo where they should be listed. For `asdf-nodejs` they are:\n\n| OS | Dependency Installation |\n| --- | --- |\n| Debian | `apt-get install dirmngr gpg curl gawk` |\n| CentOS/ Rocky Linux/ AlmaLinux | `yum install gnupg2 curl gawk` |\n| macOS | `brew install gpg gawk` |\n\nWe should install dependencies first as some Plugins have post-install hooks.\n\n### Install the Plugin\n\n```\nasdf plugin add nodejs https://github.com/asdf-vm/asdf-nodejs.git\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/guide/getting-started.html", "title": "Getting Started", "description": "This page provides a comprehensive guide on how to install and configure asdf, a version manager for multiple programming languages.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:07:30", "type": "section_detail", "page_metadata": {"title": "Getting Started | asdf", "description": "Manage multiple runtime versions with a single CLI tool", "viewport": "width=device-width,initial-scale=1", "generator": "VitePress v1.6.3", "language": "en-US", "scrapeId": "3ef3d99e-f6d5-46a3-bf91-924067eae7e2", "sourceURL": "https://asdf-vm.com/guide/getting-started.html", "url": "https://asdf-vm.com/guide/getting-started.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 5. install a version in asdf-vm?\n\nAssistant: To 5. install a version in asdf-vm, here's what you do:\nNow we have a plugin for Node.js we can install a version of the tool.\n\nWe can see which versions are available with `asdf list all nodejs` or a subset of versions with `asdf list all nodejs 14`.\n\nWe will just install the `latest` available version:\n\n```\nasdf install nodejs latest\n```\n\nNote\n\n`asdf` enforces exact versions. `latest` is a helper throughout `asdf` that will resolve to the actual version number at the time of execution..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/guide/getting-started.html", "title": "Getting Started", "description": "This page provides a comprehensive guide on how to install and configure asdf, a version manager for multiple programming languages.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:07:30", "type": "section_detail", "page_metadata": {"title": "Getting Started | asdf", "description": "Manage multiple runtime versions with a single CLI tool", "viewport": "width=device-width,initial-scale=1", "generator": "VitePress v1.6.3", "language": "en-US", "scrapeId": "3ef3d99e-f6d5-46a3-bf91-924067eae7e2", "sourceURL": "https://asdf-vm.com/guide/getting-started.html", "url": "https://asdf-vm.com/guide/getting-started.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 6. set a version in asdf-vm?\n\nAssistant: To 6. set a version in asdf-vm, here's what you do:\n`asdf` performs a version lookup of a tool in all `.tool-versions` files from the current working directory up to the `$HOME` directory. The lookup occurs just-in-time when you execute a tool that `asdf` manages.\n\nWARNING\n\nWithout a version listed for a tool execution of the tool will **error**. `asdf current` will show you the tool & version resolution, or absence of, from your current directory so you can observe which tools will fail to execute.\n\nBecause asdf looks for a `.tool-versions` file in the current directory first, and if the file is not found it then climbs up the file tree looking for a `.tool-versions` in a parent directory until it finds one. If no `.tool-versions` file is found the version resolution process will fail and an error will be printed.\n\nIf you want to set a default version that will apply to all directories you work in you can set a version in `$HOME/.tool-versions`. Any directory under your home directory will have that same version set, unless a particular directory sets another version.\n\n```\nasdf set -u nodejs 16.5.0\n```\n\n`$HOME/.tool-versions` will then look like:\n\n```\nnodejs 16.5.0\n```\n\nSome OSs already have tools installed that are managed by the system and not `asdf`, `python` is a common example. You need to tell `asdf` to pass the management back to the system. The [Versions reference section](https://asdf-vm.com/manage/versions.html) will guide you.\n\nThe first place asdf looks for a version is your current working directory ( `$PWD/.tool-versions`). This may be a directory containing a source code or Git repository for a project. When in your desired directory execute you can use `asdf set` to set the version:\n\n```\nasdf set nodejs 16.5.0\n```\n\n`$PWD/.tool-versions` will then look like:\n\n```\nnodejs 16.5.0\n```\n\n### Using Existing Tool Version Files\n\n`asdf` supports the migration from existing version files from other version managers. Eg: `.ruby-version` for the case of `rbenv`. This is supported on a per-plugin basis.\n\n[`asdf-nodejs`](https://github.com/asdf-vm/asdf-nodejs/) supports this via both `.nvmrc` and `.node-version` files. To enable this, add the following to your `asdf` configuration file `$HOME/.asdfrc`:\n\n```\nlegacy_version_file = yes\n```\n\nSee the [configuration](https://asdf-vm.com/manage/configuration.html) reference page for more config options..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/guide/getting-started.html", "title": "Getting Started", "description": "This page provides a comprehensive guide on how to install and configure asdf, a version manager for multiple programming languages.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:07:30", "type": "section_detail", "page_metadata": {"title": "Getting Started | asdf", "description": "Manage multiple runtime versions with a single CLI tool", "viewport": "width=device-width,initial-scale=1", "generator": "VitePress v1.6.3", "language": "en-US", "scrapeId": "3ef3d99e-f6d5-46a3-bf91-924067eae7e2", "sourceURL": "https://asdf-vm.com/guide/getting-started.html", "url": "https://asdf-vm.com/guide/getting-started.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I guide complete! in asdf-vm?\n\nAssistant: To guide complete! in asdf-vm, here's what you do:\nThat completes the Getting Started guide for `asdf` 🎉 You can now manage `nodejs` versions for your project. Follow similar steps for each type of tool in your project!\n\n`asdf` has many more commands to become familiar with, you can see them all by running `asdf --help` or `asdf`. The core of the commands are broken into three categories:\n\n- [core `asdf`](https://asdf-vm.com/manage/core.html)\n- [plugins](https://asdf-vm.com/manage/plugins.html)\n- [versions (of tools)](https://asdf-vm.com/manage/versions.html).\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/guide/getting-started.html", "title": "Getting Started", "description": "This page provides a comprehensive guide on how to install and configure asdf, a version manager for multiple programming languages.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:07:30", "type": "section_detail", "page_metadata": {"title": "Getting Started | asdf", "description": "Manage multiple runtime versions with a single CLI tool", "viewport": "width=device-width,initial-scale=1", "generator": "VitePress v1.6.3", "language": "en-US", "scrapeId": "3ef3d99e-f6d5-46a3-bf91-924067eae7e2", "sourceURL": "https://asdf-vm.com/guide/getting-started.html", "url": "https://asdf-vm.com/guide/getting-started.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you give me some code examples for Getting Started in asdf-vm?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Install asdf with Homebrew**:\n\n```yaml\nbrew install asdf\n```\n\nThis snippet shows you how to install asdf with homebrew, which is an important aspect of getting started.\n\n**Install asdf with Pacman**:\n\n```yaml\ngit clone https://aur.archlinux.org/asdf-vm.git && cd asdf-vm && makepkg -si\n```\n\nThis snippet shows you how to install asdf with pacman, which is an important aspect of getting started.\n\n**Install asdf with Go**:\n\n```yaml\ngo install github.com/asdf-vm/asdf/cmd/asdf@v0.16.0\n```\n\nThis snippet shows you how to install asdf with go, which is an important aspect of getting started.\n\n**Clone asdf repository**:\n\n```yaml\ngit clone https://github.com/asdf-vm/asdf.git --branch v0.16.0\n```\n\nThis snippet shows you how to clone asdf repository, which is an important aspect of getting started.\n\n**Add shims directory to path (Bash)**:\n\n```yaml\nexport PATH=\"${ASDF_DATA_DIR:-$HOME/.asdf}/shims:$PATH\"\n```\n\nThis snippet shows you how to add shims directory to path (bash), which is an important aspect of getting started.\n\n**Set custom data directory (Bash)**:\n\n```yaml\nexport ASDF_DATA_DIR=\"/your/custom/data/dir\"\n```\n\nThis snippet shows you how to set custom data directory (bash), which is an important aspect of getting started.\n\n**Install Node.js plugin**:\n\n```yaml\nasdf plugin add nodejs https://github.com/asdf-vm/asdf-nodejs.git\n```\n\nThis snippet shows you how to install node.js plugin, which is an important aspect of getting started.\n\n**Install Node.js latest version**:\n\n```yaml\nasdf install nodejs latest\n```\n\nThis snippet shows you how to install node.js latest version, which is an important aspect of getting started.\n\n**Set Node.js version**:\n\n```yaml\nasdf set -u nodejs 16.5.0\n```\n\nThis snippet shows you how to set node.js version, which is an important aspect of getting started.\n\n", "metadata": {"source_url": "https://asdf-vm.com/guide/getting-started.html", "title": "Getting Started", "description": "This page provides a comprehensive guide on how to install and configure asdf, a version manager for multiple programming languages.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:07:30", "type": "code_examples", "page_metadata": {"title": "Getting Started | asdf", "description": "Manage multiple runtime versions with a single CLI tool", "viewport": "width=device-width,initial-scale=1", "generator": "VitePress v1.6.3", "language": "en-US", "scrapeId": "3ef3d99e-f6d5-46a3-bf91-924067eae7e2", "sourceURL": "https://asdf-vm.com/guide/getting-started.html", "url": "https://asdf-vm.com/guide/getting-started.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: What are some tips for using Getting Started in asdf-vm effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nMost users do not need to customize the location that asdf writes plugin, install, and shim data to.\n\nOn macOS, starting a Bash or Zsh shell automatically calls a utility called path_helper which can rearrange items in PATH, causing inconsistent behavior for tools that require specific ordering. To workaround this, asdf on macOS defaults to forcibly adding its PATH-entries to the front.\n\nRestart your shell so that PATH changes take effect. Opening a new terminal tab will usually do it.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://asdf-vm.com/guide/getting-started.html", "title": "Getting Started", "description": "This page provides a comprehensive guide on how to install and configure asdf, a version manager for multiple programming languages.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:07:30", "type": "best_practices", "page_metadata": {"title": "Getting Started | asdf", "description": "Manage multiple runtime versions with a single CLI tool", "viewport": "width=device-width,initial-scale=1", "generator": "VitePress v1.6.3", "language": "en-US", "scrapeId": "3ef3d99e-f6d5-46a3-bf91-924067eae7e2", "sourceURL": "https://asdf-vm.com/guide/getting-started.html", "url": "https://asdf-vm.com/guide/getting-started.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you explain what 버전 관리 is in asdf-vm?\n\nAssistant: Sure, I'd be happy to explain 버전 관리 in asdf-vm.\n\n# 버전 관리\n\n이 페이지에서는 asdf 버전 관리 도구를 사용하여 다양한 버전을 설치하고 관리하는 방법에 대해 설명합니다.Here's a quick rundown of what this is about:\n\n## 버전 설치\n\nshell\n\n```\nasdf install <name> <version>\n# asdf install erlang 17.3\n```\n\n플러그인이 소스에서 다운로드 & 컴파일을 지원하는 경우, `ref:foo` 를 지정할 수 있으며 여기서 `foo` 는 특정 브랜치, 태그 또는 커밋입니다. 제거할 때도 동일한 이름과 참조를 사용해야 합니다.\n\n## 최신 안정 버전 설치\n\nshell\n\n```\nasdf install <name> latest\n# asdf install erlang latest\n```\n\n주어진 문자열로 시작하는 최신 안정 버전을 설치합니다.\n\nshell\n\n```\nasdf install <name> latest:<version>\n# asdf install erlang latest:17\n```\n\n## 설치된 버전 목록\n\nshell\n\n```\nasdf list <name>\n# asdf list erlang\n```\n\n주어진 문자열로 시작하는 버전으로 필터링합니다.\n\nshell\n\n```\nasdf list <name> <version>\n# asdf list erlang 17\n```\n\n## 사용 가능한 모든 버전 목록\n\nshell\n\n```\nasdf list all <name>\n# asdf list all erlang\n```\n\n주어진 문자열로 시작하는 버전으로 필터링합니다.\n\nshell\n\n```\nasdf list all <name> <version>\n# asdf list all erlang 17\n```\n\n## 최신 안정 버전 보기\n\nshell\n\n```\nasdf latest <name>\n# asdf latest erlang\n```\n\n주어진 문자열로 시작하는 최신 안정 버전을 보여줍니다.\n\nshell\n\n```\nasdf latest <name> <version>\n# asdf latest erlang 17\n```\n\n## 현재 버전 설정\n\nshell\n\n```\nasdf global <name> <version> [<version>...]\nasdf shell <name> <version> [<version>...]\nasdf local <name> <version> [<version>...]\n# asdf global elixir 1.2.4\n\nasdf global <name> latest[:<version>]\nasdf local <name> latest[:<version>]\n# asdf global elixir latest\n```\n\n`global` 은 해당 버전을 `$HOME/.tool-versions` 에 작성합니다.\n\n현재 셸 세션에 대해서만, `shell` 은 `ASDF_${TOOL}_VERSION` 이라는 이름의 환경 변수로 버전을 설정합니다.\n\n`local` 은 해당 버전을 `$PWD/.tool-versions` 에 작성합니다, 존재하지 않을 시에 새로 만듦.\n\n세부 내용은 `.tool-versions` [설정 섹션에 파일](https://asdf-vm.com/ko-kr/manage/configuration.html) 을 참고하세요.\n\n대체수단\n\n현재 셸 세션에 대해서만 버전을 설정하려는 경우 또는 특정 툴 버전 하에 단순히 한개의 명령어만 실행하기 위해, 당신은 `ASDF_${TOOL}_VERSION` 과 같은 환경 변수를 설정할 수 있습니다.\n\n다음 예시에서는 버전 `1.4.0` 의 Elixir 프로젝트에서 테스트를 수행합니다. 버전 형식은 `.tool-versions` 파일에서 지원되는 것과 동일하게 지원됩니다.\n\nshell\n\n```\nASDF_ELIXIR_VERSION=1.4.0 mix test\n```\n\n## 시스템 버전으로의 폴백\n\nasdf 관리 버전이 아닌 `<name>` 도구의 시스템 버전을 사용하려면 도구의 버전을 `system` 으로 설정할 수 있습니다.\n\n위에 [현재 버전 설정](https://asdf-vm.com/ko-kr/manage/versions#%ED%98%84%EC%9E%AC-%EB%B2%84%EC%A0%84-%EC%84%A4%EC%A0%95) 섹션에 나와있는대로, `system` 을 `global`, `local` or `shell` 중에 하나로 설정하세요.\n\nshell\n\n```\nasdf local <name> system\n# asdf local python system\n```\n\n## 현재 버전 보기\n\nshell\n\n```\nasdf current\n# asdf current\n# erlang          17.3          /Users/kim/.tool-versions\n# nodejs          6.11.5        /Users/kim/cool-node-project/.tool-versions\n\nasdf current <name>\n# asdf current erlang\n# erlang          17.3          /Users/kim/.tool-versions\n```\n\n## 버전 제거\n\nshell\n\n```\nasdf uninstall <name> <version>\n# asdf uninstall erlang 17.3\n```\n\n## Shims\n\nasdf는 패키지를 설치할 때 해당 패키지의 모든 실행 프로그램에 대한 shim들을 `$ASDF_DATA_DIR/shims` 디렉토리 (기본값은 `~/.asdf/shims`)에 생성합니다. 이 디렉토리는 설치된 프로그램들이 이용가능하도록 `$PATH` ( `asdf.sh`, `asdf.fish` 등)에 존재합니다.\n\nShim 자체는 플러그인 이름과 shim이 감싸고 있는 설치된 패키지의 실행파일의 경로를 넘겨주는 `asdf exec` 라는 헬퍼 프로그램을 `exec` 시키는 매우 단순한 wrapper입니다.\n\n`asdf exec` 헬퍼는 ( `.tool-version` 파일에 지정된 대로, `asdf local...` 또는 `asdf global...` 에서 선택된 대로) 사용할 패키지의 버전을 결정합니다, (플러그인의 `exec-path` 콜백에 의해 조정될 수 있음) 패키지 설치 디렉토리의 실행 파일에 대한 최종 경로 및 (플러그인에 의해 제공된 \n`- exec-env` 스크립트) 실행할 환경을 결정하고, 최종적으로 이를 실행합니다.\n\n노트\n\n이 시스템은 `exec` 호출을 사용하기 때문에, 실행 대신 셸에 의해 source 되야하는 패키지의 스크립트는 shim wrapper를 통하지 않고 직접 액세스되야 합니다. 두 가지 `asdf` 명령어: `which` 와 `where` 는 설치된 패키지로의 경로를 반환할 수 있습니다:\n\nshell\n\n```\n# returns path to main executable in current version\nsource $(asdf which ${PLUGIN})/../script.sh\n\n# returns path to the package installation directory\nsource $(asdf where ${PLUGIN})/bin/script.sh\n```\n\n## asdf shims 우회\n\n어떠한 이유로 asdf의 shim들을 우회하고 싶거나 프로젝트의 디렉토리로 이동했을 때 자동으로 환경 변수를 설정되게 하고 싶으시면 [asdf-direnv](https://github.com/asdf-community/asdf-direnv) 플러그인이 도움이 될 것입니다. 상세한 내용은 README를 확인해 주세요.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://asdf-vm.com/ko-kr/manage/versions", "title": "버전 관리", "description": "이 페이지에서는 asdf 버전 관리 도구를 사용하여 다양한 버전을 설치하고 관리하는 방법에 대해 설명합니다.", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 03:08:23", "type": "overview", "page_metadata": {"language": "ko-kr", "title": "버전 | asdf", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "scrapeId": "031a47e6-3868-4407-ba5a-49fb981566e6", "sourceURL": "https://asdf-vm.com/ko-kr/manage/versions", "url": "https://asdf-vm.com/ko-kr/manage/versions", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 버전 설치 in asdf-vm?\n\nAssistant: To 버전 설치 in asdf-vm, here's what you do:\nshell\n\n```\nasdf install <name> <version>\n# asdf install erlang 17.3\n```\n\n플러그인이 소스에서 다운로드 & 컴파일을 지원하는 경우, `ref:foo` 를 지정할 수 있으며 여기서 `foo` 는 특정 브랜치, 태그 또는 커밋입니다. 제거할 때도 동일한 이름과 참조를 사용해야 합니다..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ko-kr/manage/versions", "title": "버전 관리", "description": "이 페이지에서는 asdf 버전 관리 도구를 사용하여 다양한 버전을 설치하고 관리하는 방법에 대해 설명합니다.", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 03:08:23", "type": "section_detail", "page_metadata": {"language": "ko-kr", "title": "버전 | asdf", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "scrapeId": "031a47e6-3868-4407-ba5a-49fb981566e6", "sourceURL": "https://asdf-vm.com/ko-kr/manage/versions", "url": "https://asdf-vm.com/ko-kr/manage/versions", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 최신 안정 버전 설치 in asdf-vm?\n\nAssistant: To 최신 안정 버전 설치 in asdf-vm, here's what you do:\nshell\n\n```\nasdf install <name> latest\n# asdf install erlang latest\n```\n\n주어진 문자열로 시작하는 최신 안정 버전을 설치합니다.\n\nshell\n\n```\nasdf install <name> latest:<version>\n# asdf install erlang latest:17\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ko-kr/manage/versions", "title": "버전 관리", "description": "이 페이지에서는 asdf 버전 관리 도구를 사용하여 다양한 버전을 설치하고 관리하는 방법에 대해 설명합니다.", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 03:08:23", "type": "section_detail", "page_metadata": {"language": "ko-kr", "title": "버전 | asdf", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "scrapeId": "031a47e6-3868-4407-ba5a-49fb981566e6", "sourceURL": "https://asdf-vm.com/ko-kr/manage/versions", "url": "https://asdf-vm.com/ko-kr/manage/versions", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 설치된 버전 목록 in asdf-vm?\n\nAssistant: To 설치된 버전 목록 in asdf-vm, here's what you do:\nshell\n\n```\nasdf list <name>\n# asdf list erlang\n```\n\n주어진 문자열로 시작하는 버전으로 필터링합니다.\n\nshell\n\n```\nasdf list <name> <version>\n# asdf list erlang 17\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ko-kr/manage/versions", "title": "버전 관리", "description": "이 페이지에서는 asdf 버전 관리 도구를 사용하여 다양한 버전을 설치하고 관리하는 방법에 대해 설명합니다.", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 03:08:23", "type": "section_detail", "page_metadata": {"language": "ko-kr", "title": "버전 | asdf", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "scrapeId": "031a47e6-3868-4407-ba5a-49fb981566e6", "sourceURL": "https://asdf-vm.com/ko-kr/manage/versions", "url": "https://asdf-vm.com/ko-kr/manage/versions", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 사용 가능한 모든 버전 목록 in asdf-vm?\n\nAssistant: To 사용 가능한 모든 버전 목록 in asdf-vm, here's what you do:\nshell\n\n```\nasdf list all <name>\n# asdf list all erlang\n```\n\n주어진 문자열로 시작하는 버전으로 필터링합니다.\n\nshell\n\n```\nasdf list all <name> <version>\n# asdf list all erlang 17\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ko-kr/manage/versions", "title": "버전 관리", "description": "이 페이지에서는 asdf 버전 관리 도구를 사용하여 다양한 버전을 설치하고 관리하는 방법에 대해 설명합니다.", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 03:08:23", "type": "section_detail", "page_metadata": {"language": "ko-kr", "title": "버전 | asdf", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "scrapeId": "031a47e6-3868-4407-ba5a-49fb981566e6", "sourceURL": "https://asdf-vm.com/ko-kr/manage/versions", "url": "https://asdf-vm.com/ko-kr/manage/versions", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 최신 안정 버전 보기 in asdf-vm?\n\nAssistant: To 최신 안정 버전 보기 in asdf-vm, here's what you do:\nshell\n\n```\nasdf latest <name>\n# asdf latest erlang\n```\n\n주어진 문자열로 시작하는 최신 안정 버전을 보여줍니다.\n\nshell\n\n```\nasdf latest <name> <version>\n# asdf latest erlang 17\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ko-kr/manage/versions", "title": "버전 관리", "description": "이 페이지에서는 asdf 버전 관리 도구를 사용하여 다양한 버전을 설치하고 관리하는 방법에 대해 설명합니다.", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 03:08:23", "type": "section_detail", "page_metadata": {"language": "ko-kr", "title": "버전 | asdf", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "scrapeId": "031a47e6-3868-4407-ba5a-49fb981566e6", "sourceURL": "https://asdf-vm.com/ko-kr/manage/versions", "url": "https://asdf-vm.com/ko-kr/manage/versions", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 현재 버전 설정 in asdf-vm?\n\nAssistant: To 현재 버전 설정 in asdf-vm, here's what you do:\nshell\n\n```\nasdf global <name> <version> [<version>...]\nasdf shell <name> <version> [<version>...]\nasdf local <name> <version> [<version>...]\n# asdf global elixir 1.2.4\n\nasdf global <name> latest[:<version>]\nasdf local <name> latest[:<version>]\n# asdf global elixir latest\n```\n\n`global` 은 해당 버전을 `$HOME/.tool-versions` 에 작성합니다.\n\n현재 셸 세션에 대해서만, `shell` 은 `ASDF_${TOOL}_VERSION` 이라는 이름의 환경 변수로 버전을 설정합니다.\n\n`local` 은 해당 버전을 `$PWD/.tool-versions` 에 작성합니다, 존재하지 않을 시에 새로 만듦.\n\n세부 내용은 `.tool-versions` [설정 섹션에 파일](https://asdf-vm.com/ko-kr/manage/configuration.html) 을 참고하세요.\n\n대체수단\n\n현재 셸 세션에 대해서만 버전을 설정하려는 경우 또는 특정 툴 버전 하에 단순히 한개의 명령어만 실행하기 위해, 당신은 `ASDF_${TOOL}_VERSION` 과 같은 환경 변수를 설정할 수 있습니다.\n\n다음 예시에서는 버전 `1.4.0` 의 Elixir 프로젝트에서 테스트를 수행합니다. 버전 형식은 `.tool-versions` 파일에서 지원되는 것과 동일하게 지원됩니다.\n\nshell\n\n```\nASDF_ELIXIR_VERSION=1.4.0 mix test\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ko-kr/manage/versions", "title": "버전 관리", "description": "이 페이지에서는 asdf 버전 관리 도구를 사용하여 다양한 버전을 설치하고 관리하는 방법에 대해 설명합니다.", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 03:08:23", "type": "section_detail", "page_metadata": {"language": "ko-kr", "title": "버전 | asdf", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "scrapeId": "031a47e6-3868-4407-ba5a-49fb981566e6", "sourceURL": "https://asdf-vm.com/ko-kr/manage/versions", "url": "https://asdf-vm.com/ko-kr/manage/versions", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 시스템 버전으로의 폴백 in asdf-vm?\n\nAssistant: To 시스템 버전으로의 폴백 in asdf-vm, here's what you do:\nasdf 관리 버전이 아닌 `<name>` 도구의 시스템 버전을 사용하려면 도구의 버전을 `system` 으로 설정할 수 있습니다.\n\n위에 [현재 버전 설정](https://asdf-vm.com/ko-kr/manage/versions#%ED%98%84%EC%9E%AC-%EB%B2%84%EC%A0%84-%EC%84%A4%EC%A0%95) 섹션에 나와있는대로, `system` 을 `global`, `local` or `shell` 중에 하나로 설정하세요.\n\nshell\n\n```\nasdf local <name> system\n# asdf local python system\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ko-kr/manage/versions", "title": "버전 관리", "description": "이 페이지에서는 asdf 버전 관리 도구를 사용하여 다양한 버전을 설치하고 관리하는 방법에 대해 설명합니다.", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 03:08:23", "type": "section_detail", "page_metadata": {"language": "ko-kr", "title": "버전 | asdf", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "scrapeId": "031a47e6-3868-4407-ba5a-49fb981566e6", "sourceURL": "https://asdf-vm.com/ko-kr/manage/versions", "url": "https://asdf-vm.com/ko-kr/manage/versions", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 현재 버전 보기 in asdf-vm?\n\nAssistant: To 현재 버전 보기 in asdf-vm, here's what you do:\nshell\n\n```\nasdf current\n# asdf current\n# erlang          17.3          /Users/kim/.tool-versions\n# nodejs          6.11.5        /Users/kim/cool-node-project/.tool-versions\n\nasdf current <name>\n# asdf current erlang\n# erlang          17.3          /Users/kim/.tool-versions\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ko-kr/manage/versions", "title": "버전 관리", "description": "이 페이지에서는 asdf 버전 관리 도구를 사용하여 다양한 버전을 설치하고 관리하는 방법에 대해 설명합니다.", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 03:08:23", "type": "section_detail", "page_metadata": {"language": "ko-kr", "title": "버전 | asdf", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "scrapeId": "031a47e6-3868-4407-ba5a-49fb981566e6", "sourceURL": "https://asdf-vm.com/ko-kr/manage/versions", "url": "https://asdf-vm.com/ko-kr/manage/versions", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 버전 제거 in asdf-vm?\n\nAssistant: To 버전 제거 in asdf-vm, here's what you do:\nshell\n\n```\nasdf uninstall <name> <version>\n# asdf uninstall erlang 17.3\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ko-kr/manage/versions", "title": "버전 관리", "description": "이 페이지에서는 asdf 버전 관리 도구를 사용하여 다양한 버전을 설치하고 관리하는 방법에 대해 설명합니다.", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 03:08:23", "type": "section_detail", "page_metadata": {"language": "ko-kr", "title": "버전 | asdf", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "scrapeId": "031a47e6-3868-4407-ba5a-49fb981566e6", "sourceURL": "https://asdf-vm.com/ko-kr/manage/versions", "url": "https://asdf-vm.com/ko-kr/manage/versions", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I shims in asdf-vm?\n\nAssistant: To shims in asdf-vm, here's what you do:\nasdf는 패키지를 설치할 때 해당 패키지의 모든 실행 프로그램에 대한 shim들을 `$ASDF_DATA_DIR/shims` 디렉토리 (기본값은 `~/.asdf/shims`)에 생성합니다. 이 디렉토리는 설치된 프로그램들이 이용가능하도록 `$PATH` ( `asdf.sh`, `asdf.fish` 등)에 존재합니다.\n\nShim 자체는 플러그인 이름과 shim이 감싸고 있는 설치된 패키지의 실행파일의 경로를 넘겨주는 `asdf exec` 라는 헬퍼 프로그램을 `exec` 시키는 매우 단순한 wrapper입니다.\n\n`asdf exec` 헬퍼는 ( `.tool-version` 파일에 지정된 대로, `asdf local...` 또는 `asdf global...` 에서 선택된 대로) 사용할 패키지의 버전을 결정합니다, (플러그인의 `exec-path` 콜백에 의해 조정될 수 있음) 패키지 설치 디렉토리의 실행 파일에 대한 최종 경로 및 (플러그인에 의해 제공된 \n`- exec-env` 스크립트) 실행할 환경을 결정하고, 최종적으로 이를 실행합니다.\n\n노트\n\n이 시스템은 `exec` 호출을 사용하기 때문에, 실행 대신 셸에 의해 source 되야하는 패키지의 스크립트는 shim wrapper를 통하지 않고 직접 액세스되야 합니다. 두 가지 `asdf` 명령어: `which` 와 `where` 는 설치된 패키지로의 경로를 반환할 수 있습니다:\n\nshell\n\n```\n# returns path to main executable in current version\nsource $(asdf which ${PLUGIN})/../script.sh\n\n# returns path to the package installation directory\nsource $(asdf where ${PLUGIN})/bin/script.sh\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ko-kr/manage/versions", "title": "버전 관리", "description": "이 페이지에서는 asdf 버전 관리 도구를 사용하여 다양한 버전을 설치하고 관리하는 방법에 대해 설명합니다.", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 03:08:23", "type": "section_detail", "page_metadata": {"language": "ko-kr", "title": "버전 | asdf", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "scrapeId": "031a47e6-3868-4407-ba5a-49fb981566e6", "sourceURL": "https://asdf-vm.com/ko-kr/manage/versions", "url": "https://asdf-vm.com/ko-kr/manage/versions", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I asdf shims 우회 in asdf-vm?\n\nAssistant: To asdf shims 우회 in asdf-vm, here's what you do:\n어떠한 이유로 asdf의 shim들을 우회하고 싶거나 프로젝트의 디렉토리로 이동했을 때 자동으로 환경 변수를 설정되게 하고 싶으시면 [asdf-direnv](https://github.com/asdf-community/asdf-direnv) 플러그인이 도움이 될 것입니다. 상세한 내용은 README를 확인해 주세요..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ko-kr/manage/versions", "title": "버전 관리", "description": "이 페이지에서는 asdf 버전 관리 도구를 사용하여 다양한 버전을 설치하고 관리하는 방법에 대해 설명합니다.", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 03:08:23", "type": "section_detail", "page_metadata": {"language": "ko-kr", "title": "버전 | asdf", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "scrapeId": "031a47e6-3868-4407-ba5a-49fb981566e6", "sourceURL": "https://asdf-vm.com/ko-kr/manage/versions", "url": "https://asdf-vm.com/ko-kr/manage/versions", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you give me some code examples for 버전 관리 in asdf-vm?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**버전 설치**:\n\n```yaml\nasdf install <name> <version>\n# asdf install erlang 17.3\n```\n\nThis snippet shows you how to 버전 설치, which is an important aspect of 버전 관리.\n\n**최신 안정 버전 설치**:\n\n```yaml\nasdf install <name> latest\n# asdf install erlang latest\n```\n\nThis snippet shows you how to 최신 안정 버전 설치, which is an important aspect of 버전 관리.\n\n**주어진 문자열로 시작하는 최신 안정 버전 설치**:\n\n```yaml\nasdf install <name> latest:<version>\n# asdf install erlang latest:17\n```\n\nThis snippet shows you how to 주어진 문자열로 시작하는 최신 안정 버전 설치, which is an important aspect of 버전 관리.\n\n**설치된 버전 목록 보기**:\n\n```yaml\nasdf list <name>\n# asdf list erlang\n```\n\nThis snippet shows you how to 설치된 버전 목록 보기, which is an important aspect of 버전 관리.\n\n**주어진 문자열로 시작하는 버전으로 필터링**:\n\n```yaml\nasdf list <name> <version>\n# asdf list erlang 17\n```\n\nThis snippet shows you how to 주어진 문자열로 시작하는 버전으로 필터링, which is an important aspect of 버전 관리.\n\n**사용 가능한 모든 버전 목록 보기**:\n\n```yaml\nasdf list all <name>\n# asdf list all erlang\n```\n\nThis snippet shows you how to 사용 가능한 모든 버전 목록 보기, which is an important aspect of 버전 관리.\n\n**주어진 문자열로 시작하는 버전으로 필터링**:\n\n```yaml\nasdf list all <name> <version>\n# asdf list all erlang 17\n```\n\nThis snippet shows you how to 주어진 문자열로 시작하는 버전으로 필터링, which is an important aspect of 버전 관리.\n\n**최신 안정 버전 보기**:\n\n```yaml\nasdf latest <name>\n# asdf latest erlang\n```\n\nThis snippet shows you how to 최신 안정 버전 보기, which is an important aspect of 버전 관리.\n\n**주어진 문자열로 시작하는 최신 안정 버전 보기**:\n\n```yaml\nasdf latest <name> <version>\n# asdf latest erlang 17\n```\n\nThis snippet shows you how to 주어진 문자열로 시작하는 최신 안정 버전 보기, which is an important aspect of 버전 관리.\n\n**현재 버전 설정**:\n\n```yaml\nasdf global <name> <version> [<version>...]\nasdf shell <name> <version> [<version>...]\nasdf local <name> <version> [<version>...]\n# asdf global elixir 1.2.4\n```\n\nThis snippet shows you how to 현재 버전 설정, which is an important aspect of 버전 관리.\n\n**시스템 버전으로의 폴백**:\n\n```yaml\nasdf local <name> system\n# asdf local python system\n```\n\nThis snippet shows you how to 시스템 버전으로의 폴백, which is an important aspect of 버전 관리.\n\n**현재 버전 보기**:\n\n```yaml\nasdf current\n# asdf current\n# erlang          17.3          /Users/kim/.tool-versions\n# nodejs          6.11.5        /Users/kim/cool-node-project/.tool-versions\n\nasdf current <name>\n# asdf current erlang\n# erlang          17.3          /Users/kim/.tool-versions\n```\n\nThis snippet shows you how to 현재 버전 보기, which is an important aspect of 버전 관리.\n\n**버전 제거**:\n\n```yaml\nasdf uninstall <name> <version>\n# asdf uninstall erlang 17.3\n```\n\nThis snippet shows you how to 버전 제거, which is an important aspect of 버전 관리.\n\n**Shims 설명**:\n\n```yaml\nasdf는 패키지를 설치할 때 해당 패키지의 모든 실행 프로그램에 대한 shim들을 `$ASDF_DATA_DIR/shims` 디렉토리 (기본값은 `~/.asdf/shims`)에 생성합니다. 이 디렉토리는 설치된 프로그램들이 이용가능하도록 `$PATH` ( `asdf.sh`, `asdf.fish` 등)에 존재합니다.\n```\n\nThis snippet shows you how to shims 설명, which is an important aspect of 버전 관리.\n\n**asdf shims 우회**:\n\n```yaml\n어떠한 이유로 asdf의 shim들을 우회하고 싶거나 프로젝트의 디렉토리로 이동했을 때 자동으로 환경 변수를 설정되게 하고 싶으시면 [asdf-direnv](https://github.com/asdf-community/asdf-direnv) 플러그인이 도움이 될 것입니다.\n```\n\nThis snippet shows you how to asdf shims 우회, which is an important aspect of 버전 관리.\n\n", "metadata": {"source_url": "https://asdf-vm.com/ko-kr/manage/versions", "title": "버전 관리", "description": "이 페이지에서는 asdf 버전 관리 도구를 사용하여 다양한 버전을 설치하고 관리하는 방법에 대해 설명합니다.", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 03:08:23", "type": "code_examples", "page_metadata": {"language": "ko-kr", "title": "버전 | asdf", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "scrapeId": "031a47e6-3868-4407-ba5a-49fb981566e6", "sourceURL": "https://asdf-vm.com/ko-kr/manage/versions", "url": "https://asdf-vm.com/ko-kr/manage/versions", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: What are some tips for using 버전 관리 in asdf-vm effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\n플러그인이 소스에서 다운로드 & 컴파일을 지원하는 경우, `ref:foo` 를 지정할 수 있습니다.\n\n`global` 은 해당 버전을 `$HOME/.tool-versions` 에 작성합니다.\n\n`local` 은 해당 버전을 `$PWD/.tool-versions` 에 작성합니다, 존재하지 않을 시에 새로 만듦.\n\n현재 셸 세션에 대해서만 버전을 설정하려는 경우, `ASDF_${TOOL}_VERSION` 과 같은 환경 변수를 설정할 수 있습니다.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://asdf-vm.com/ko-kr/manage/versions", "title": "버전 관리", "description": "이 페이지에서는 asdf 버전 관리 도구를 사용하여 다양한 버전을 설치하고 관리하는 방법에 대해 설명합니다.", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 03:08:23", "type": "best_practices", "page_metadata": {"language": "ko-kr", "title": "버전 | asdf", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "scrapeId": "031a47e6-3868-4407-ba5a-49fb981566e6", "sourceURL": "https://asdf-vm.com/ko-kr/manage/versions", "url": "https://asdf-vm.com/ko-kr/manage/versions", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you explain what 문서 & 사이트 기여 가이드 is in asdf-vm?\n\nAssistant: Sure, I'd be happy to explain 문서 & 사이트 기여 가이드 in asdf-vm.\n\n# 문서 & 사이트 기여 가이드\n\n이 페이지는 asdf 문서 사이트에 기여하기 위한 초기 세팅, 개발, 풀 리퀘스트, VitePress 설정 및 국제화에 대한 가이드를 제공합니다.Here's a quick rundown of what this is about:\n\n## 초기 세팅\n\nGithub의 `asdf` fork 그리고/혹은 기본 브랜치 Git clone:\n\n```\n# clone your fork\ngit clone https://github.com/<GITHUB_USER>/asdf.git\n# or clone asdf\ngit clone https://github.com/asdf-vm/asdf.git\n```\n\n문서 사이트 개발을 위한 도구들은 `asdf` 의 `docs/.tool-versions` 에서 관리되고 있습니다. 플러그인들을 추가하기:\n\n```\nasdf plugin add nodejs https://github.com/asdf-vm/asdf-nodejs\n```\n\n툴 버전들을 설치하기:\n\n```\nasdf install\n```\n\n- [Node.js](https://nodejs.org/): Chrome의 V8 JavaScript 엔진을 기반으로 구축된 JavaScript 런타임.\n\n`docs/package.json` 로부터 Node.js dependencies 설치하기:\n\n```\nnpm install\n```\n\n## 개발\n\n[VitePress (v2)](https://vitepress.dev/) 는 우리가 asdf 문서 사이트를 빌드하기 위해 사용하는 정적 사이트 생성기(SSG)입니다. 이는 사용자가 JavaScript를 사용중이지 않을때도 HTML 폴백을 지원하고, [Docsify.js](https://docsify.js.org/) 와 결과적으로 VuePress를 대체하기 위해 선택되었습니다. 이는 VuePress로부터 대체된 Docsify & VitePress가 아니면 불가능했을 것입니다. 이것을 제외하면, 최소한의 설정과 함께 마크다운 작성에 집중하는 feature-set은 대부분 비슷합니다.\n\n`package.json` 은 개발에 필요한 스크립트들을 포함합니다:\n\n로컬 개발 서버 시작하기:\n\n```\nnpm run dev\n```\n\n커밋 전 코드 형식 맞추기:\n\n```\nnpm run format\n```\n\n## 풀 리퀘스트, 릴리스 & 관습적 커밋\n\n`asdf` 는 PR 제목들의 관습적인 커밋들에 의존하는 자동화된 배포 pipeline을 사용하고 있습니다. 더 자세한 문서는 [코어 기여 가이드](https://asdf-vm.com/ko-kr/contribute/core.html) 에서 찾을 수 있습니다.\n\n문서 업데이트를 위한 PR을 만드실때는, PR `docs: <description>` 형식인 관습적인 커밋 타입 `docs` 제목을 만들어주세요.\n\n## Vitepress\n\n사이트의 설정은 설정을 대표하는 JS 오브젝트의 TypeScript 파일들로 구성되어 있습니다. 그 파일들은 다음과 같습니다:\n\n- `docs/.vitepress/config.js`: 사이트를 위한 root 설정 파일. [VitePress 문서](https://vitepress.dev/reference/site-config) 참조.\n\nroot 설정 단순화를 위해, _navbar_ 와 _sidebar_ 를 대표하는 더 큰 JS 객체가 추출되었고 로케일로 구분되었습니다. 다음을 참조하세요:\n\n- `docs/.vitepress/navbars.js`\n- `docs/.vitepress/sidebars.js`\n\n[기본 테마 참고자료](https://vitepress.dev/reference/default-theme-config) 에서 위 설정들의 공식 문서를 보실 수 있습니다.\n\n## I18n\n\nVitePress는 국제화를 공식적으로 지원합니다. root 설정 `docs/.vitepress/config.js` 는 선택 dropdown에서의 지원되는 로케일들의 URL, 제목과 navbar/sidebar의 설정 레퍼런스들을 정의합니다.\n\nnavbar/sidebar 설정들은 앞서 언급한 로케일 별로 나누어지고 내보내기된 설정파일들에 의해 결정됩니다.\n\n각 로케일을 위한 Markdown 내용은 반드시 root 설정안에 `locales` 의 키들과 같은 이름의 폴더에 위치해야합니다. 다시 말해서:\n\n```js\n// docs/.vitepress/config.js\nexport default defineConfig({\n  ...\n  locales: {\n    root: {\n      label: \"English\",\n        lang: \"en-US\",\n        themeConfig: {\n        nav: navbars.en,\n          sidebar: sidebars.en,\n      },\n    },\n    \"pt-br\": {\n      label: \"Brazilian Portuguese\",\n        lang: \"pr-br\",\n        themeConfig: {\n        nav: navbars.pt_br,\n          sidebar: sidebars.pt_br,\n      },\n    },\n    \"zh-hans\": {\n      label: \"简体中文\",\n        lang: \"zh-hans\",\n        themeConfig: {\n        nav: navbars.zh_hans,\n          sidebar: sidebars.zh_hans,\n      },\n    },\n  },\n})\n```\n\n`/pt-BR/` 는 `docs/pt-BR/` 에 위치한 Markdown 파일들의 세트가 똑같이 필요합니다, 예를 들어:\n\n```\ndocs\n├─ README.md\n├─ foo.md\n├─ nested\n│  └─ README.md\n└─ pt-BR\n   ├─ README.md\n   ├─ foo.md\n   └─ nested\n      └─ README.md\n```\n\n더 자세한 정보는 [공식 VitePress i18n 문서](https://vitepress.dev/guide/i18n) 에서 확인 가능합니다.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://asdf-vm.com/ko-kr/contribute/documentation", "title": "문서 & 사이트 기여 가이드", "description": "이 페이지는 asdf 문서 사이트에 기여하기 위한 초기 세팅, 개발, 풀 리퀘스트, VitePress 설정 및 국제화에 대한 가이드를 제공합니다.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:10:01", "type": "overview", "page_metadata": {"description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "title": "문서 & 사이트 | asdf", "language": "ko-kr", "viewport": "width=device-width,initial-scale=1", "scrapeId": "b372018b-7c49-4859-89c4-89e1e573bc0c", "sourceURL": "https://asdf-vm.com/ko-kr/contribute/documentation", "url": "https://asdf-vm.com/ko-kr/contribute/documentation", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 초기 세팅 in asdf-vm?\n\nAssistant: To 초기 세팅 in asdf-vm, here's what you do:\nGithub의 `asdf` fork 그리고/혹은 기본 브랜치 Git clone:\n\n```\n# clone your fork\ngit clone https://github.com/<GITHUB_USER>/asdf.git\n# or clone asdf\ngit clone https://github.com/asdf-vm/asdf.git\n```\n\n문서 사이트 개발을 위한 도구들은 `asdf` 의 `docs/.tool-versions` 에서 관리되고 있습니다. 플러그인들을 추가하기:\n\n```\nasdf plugin add nodejs https://github.com/asdf-vm/asdf-nodejs\n```\n\n툴 버전들을 설치하기:\n\n```\nasdf install\n```\n\n- [Node.js](https://nodejs.org/): Chrome의 V8 JavaScript 엔진을 기반으로 구축된 JavaScript 런타임.\n\n`docs/package.json` 로부터 Node.js dependencies 설치하기:\n\n```\nnpm install\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ko-kr/contribute/documentation", "title": "문서 & 사이트 기여 가이드", "description": "이 페이지는 asdf 문서 사이트에 기여하기 위한 초기 세팅, 개발, 풀 리퀘스트, VitePress 설정 및 국제화에 대한 가이드를 제공합니다.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:10:01", "type": "section_detail", "page_metadata": {"description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "title": "문서 & 사이트 | asdf", "language": "ko-kr", "viewport": "width=device-width,initial-scale=1", "scrapeId": "b372018b-7c49-4859-89c4-89e1e573bc0c", "sourceURL": "https://asdf-vm.com/ko-kr/contribute/documentation", "url": "https://asdf-vm.com/ko-kr/contribute/documentation", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 개발 in asdf-vm?\n\nAssistant: To 개발 in asdf-vm, here's what you do:\n[VitePress (v2)](https://vitepress.dev/) 는 우리가 asdf 문서 사이트를 빌드하기 위해 사용하는 정적 사이트 생성기(SSG)입니다. 이는 사용자가 JavaScript를 사용중이지 않을때도 HTML 폴백을 지원하고, [Docsify.js](https://docsify.js.org/) 와 결과적으로 VuePress를 대체하기 위해 선택되었습니다. 이는 VuePress로부터 대체된 Docsify & VitePress가 아니면 불가능했을 것입니다. 이것을 제외하면, 최소한의 설정과 함께 마크다운 작성에 집중하는 feature-set은 대부분 비슷합니다.\n\n`package.json` 은 개발에 필요한 스크립트들을 포함합니다:\n\n로컬 개발 서버 시작하기:\n\n```\nnpm run dev\n```\n\n커밋 전 코드 형식 맞추기:\n\n```\nnpm run format\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ko-kr/contribute/documentation", "title": "문서 & 사이트 기여 가이드", "description": "이 페이지는 asdf 문서 사이트에 기여하기 위한 초기 세팅, 개발, 풀 리퀘스트, VitePress 설정 및 국제화에 대한 가이드를 제공합니다.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:10:01", "type": "section_detail", "page_metadata": {"description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "title": "문서 & 사이트 | asdf", "language": "ko-kr", "viewport": "width=device-width,initial-scale=1", "scrapeId": "b372018b-7c49-4859-89c4-89e1e573bc0c", "sourceURL": "https://asdf-vm.com/ko-kr/contribute/documentation", "url": "https://asdf-vm.com/ko-kr/contribute/documentation", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 풀 리퀘스트, 릴리스 & 관습적 커밋 in asdf-vm?\n\nAssistant: To 풀 리퀘스트, 릴리스 & 관습적 커밋 in asdf-vm, here's what you do:\n`asdf` 는 PR 제목들의 관습적인 커밋들에 의존하는 자동화된 배포 pipeline을 사용하고 있습니다. 더 자세한 문서는 [코어 기여 가이드](https://asdf-vm.com/ko-kr/contribute/core.html) 에서 찾을 수 있습니다.\n\n문서 업데이트를 위한 PR을 만드실때는, PR `docs: <description>` 형식인 관습적인 커밋 타입 `docs` 제목을 만들어주세요..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ko-kr/contribute/documentation", "title": "문서 & 사이트 기여 가이드", "description": "이 페이지는 asdf 문서 사이트에 기여하기 위한 초기 세팅, 개발, 풀 리퀘스트, VitePress 설정 및 국제화에 대한 가이드를 제공합니다.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:10:01", "type": "section_detail", "page_metadata": {"description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "title": "문서 & 사이트 | asdf", "language": "ko-kr", "viewport": "width=device-width,initial-scale=1", "scrapeId": "b372018b-7c49-4859-89c4-89e1e573bc0c", "sourceURL": "https://asdf-vm.com/ko-kr/contribute/documentation", "url": "https://asdf-vm.com/ko-kr/contribute/documentation", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I vitepress in asdf-vm?\n\nAssistant: To vitepress in asdf-vm, here's what you do:\n사이트의 설정은 설정을 대표하는 JS 오브젝트의 TypeScript 파일들로 구성되어 있습니다. 그 파일들은 다음과 같습니다:\n\n- `docs/.vitepress/config.js`: 사이트를 위한 root 설정 파일. [VitePress 문서](https://vitepress.dev/reference/site-config) 참조.\n\nroot 설정 단순화를 위해, _navbar_ 와 _sidebar_ 를 대표하는 더 큰 JS 객체가 추출되었고 로케일로 구분되었습니다. 다음을 참조하세요:\n\n- `docs/.vitepress/navbars.js`\n- `docs/.vitepress/sidebars.js`\n\n[기본 테마 참고자료](https://vitepress.dev/reference/default-theme-config) 에서 위 설정들의 공식 문서를 보실 수 있습니다..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ko-kr/contribute/documentation", "title": "문서 & 사이트 기여 가이드", "description": "이 페이지는 asdf 문서 사이트에 기여하기 위한 초기 세팅, 개발, 풀 리퀘스트, VitePress 설정 및 국제화에 대한 가이드를 제공합니다.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:10:01", "type": "section_detail", "page_metadata": {"description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "title": "문서 & 사이트 | asdf", "language": "ko-kr", "viewport": "width=device-width,initial-scale=1", "scrapeId": "b372018b-7c49-4859-89c4-89e1e573bc0c", "sourceURL": "https://asdf-vm.com/ko-kr/contribute/documentation", "url": "https://asdf-vm.com/ko-kr/contribute/documentation", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I i18n in asdf-vm?\n\nAssistant: To i18n in asdf-vm, here's what you do:\nVitePress는 국제화를 공식적으로 지원합니다. root 설정 `docs/.vitepress/config.js` 는 선택 dropdown에서의 지원되는 로케일들의 URL, 제목과 navbar/sidebar의 설정 레퍼런스들을 정의합니다.\n\nnavbar/sidebar 설정들은 앞서 언급한 로케일 별로 나누어지고 내보내기된 설정파일들에 의해 결정됩니다.\n\n각 로케일을 위한 Markdown 내용은 반드시 root 설정안에 `locales` 의 키들과 같은 이름의 폴더에 위치해야합니다. 다시 말해서:\n\n```js\n// docs/.vitepress/config.js\nexport default defineConfig({\n  ...\n  locales: {\n    root: {\n      label: \"English\",\n        lang: \"en-US\",\n        themeConfig: {\n        nav: navbars.en,\n          sidebar: sidebars.en,\n      },\n    },\n    \"pt-br\": {\n      label: \"Brazilian Portuguese\",\n        lang: \"pr-br\",\n        themeConfig: {\n        nav: navbars.pt_br,\n          sidebar: sidebars.pt_br,\n      },\n    },\n    \"zh-hans\": {\n      label: \"简体中文\",\n        lang: \"zh-hans\",\n        themeConfig: {\n        nav: navbars.zh_hans,\n          sidebar: sidebars.zh_hans,\n      },\n    },\n  },\n})\n```\n\n`/pt-BR/` 는 `docs/pt-BR/` 에 위치한 Markdown 파일들의 세트가 똑같이 필요합니다, 예를 들어:\n\n```\ndocs\n├─ README.md\n├─ foo.md\n├─ nested\n│  └─ README.md\n└─ pt-BR\n   ├─ README.md\n   ├─ foo.md\n   └─ nested\n      └─ README.md\n```\n\n더 자세한 정보는 [공식 VitePress i18n 문서](https://vitepress.dev/guide/i18n) 에서 확인 가능합니다..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ko-kr/contribute/documentation", "title": "문서 & 사이트 기여 가이드", "description": "이 페이지는 asdf 문서 사이트에 기여하기 위한 초기 세팅, 개발, 풀 리퀘스트, VitePress 설정 및 국제화에 대한 가이드를 제공합니다.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:10:01", "type": "section_detail", "page_metadata": {"description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "title": "문서 & 사이트 | asdf", "language": "ko-kr", "viewport": "width=device-width,initial-scale=1", "scrapeId": "b372018b-7c49-4859-89c4-89e1e573bc0c", "sourceURL": "https://asdf-vm.com/ko-kr/contribute/documentation", "url": "https://asdf-vm.com/ko-kr/contribute/documentation", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you give me some code examples for 문서 & 사이트 기여 가이드 in asdf-vm?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**초기 세팅 - Git Clone**:\n\n```yaml\n# clone your fork\ngit clone https://github.com/<GITHUB_USER>/asdf.git\n# or clone asdf\ngit clone https://github.com/asdf-vm/asdf.git\n```\n\nThis snippet shows you how to 초기 세팅 - git clone, which is an important aspect of 문서 & 사이트 기여 가이드.\n\n**초기 세팅 - 플러그인 추가**:\n\n```yaml\nasdf plugin add nodejs https://github.com/asdf-vm/asdf-nodejs\n```\n\nThis snippet shows you how to 초기 세팅 - 플러그인 추가, which is an important aspect of 문서 & 사이트 기여 가이드.\n\n**초기 세팅 - 툴 버전 설치**:\n\n```yaml\nasdf install\n```\n\nThis snippet shows you how to 초기 세팅 - 툴 버전 설치, which is an important aspect of 문서 & 사이트 기여 가이드.\n\n**초기 세팅 - Node.js dependencies 설치**:\n\n```yaml\nnpm install\n```\n\nThis snippet shows you how to 초기 세팅 - node.js dependencies 설치, which is an important aspect of 문서 & 사이트 기여 가이드.\n\n**개발 - 로컬 개발 서버 시작하기**:\n\n```yaml\nnpm run dev\n```\n\nThis snippet shows you how to 개발 - 로컬 개발 서버 시작하기, which is an important aspect of 문서 & 사이트 기여 가이드.\n\n**개발 - 커밋 전 코드 형식 맞추기**:\n\n```yaml\nnpm run format\n```\n\nThis snippet shows you how to 개발 - 커밋 전 코드 형식 맞추기, which is an important aspect of 문서 & 사이트 기여 가이드.\n\n**I18n - VitePress 설정 예시**:\n\n```yaml\nexport default defineConfig({\n  ...\n  locales: {\n    root: {\n      label: \"English\",\n        lang: \"en-US\",\n        themeConfig: {\n        nav: navbars.en,\n          sidebar: sidebars.en,\n      },\n    },\n    \"pt-br\": {\n      label: \"Brazilian Portuguese\",\n        lang: \"pr-br\",\n        themeConfig: {\n        nav: navbars.pt_br,\n          sidebar: sidebars.pt_br,\n      },\n    },\n    \"zh-hans\": {\n      label: \"简体中文\",\n        lang: \"zh-hans\",\n        themeConfig: {\n        nav: navbars.zh_hans,\n          sidebar: sidebars.zh_hans,\n      },\n    },\n  },\n})\n```\n\nThis snippet shows you how to i18n - vitepress 설정 예시, which is an important aspect of 문서 & 사이트 기여 가이드.\n\n", "metadata": {"source_url": "https://asdf-vm.com/ko-kr/contribute/documentation", "title": "문서 & 사이트 기여 가이드", "description": "이 페이지는 asdf 문서 사이트에 기여하기 위한 초기 세팅, 개발, 풀 리퀘스트, VitePress 설정 및 국제화에 대한 가이드를 제공합니다.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:10:01", "type": "code_examples", "page_metadata": {"description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "title": "문서 & 사이트 | asdf", "language": "ko-kr", "viewport": "width=device-width,initial-scale=1", "scrapeId": "b372018b-7c49-4859-89c4-89e1e573bc0c", "sourceURL": "https://asdf-vm.com/ko-kr/contribute/documentation", "url": "https://asdf-vm.com/ko-kr/contribute/documentation", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: What are some tips for using 문서 & 사이트 기여 가이드 in asdf-vm effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nPR 제목은 `docs: <description>` 형식으로 작성해야 합니다.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://asdf-vm.com/ko-kr/contribute/documentation", "title": "문서 & 사이트 기여 가이드", "description": "이 페이지는 asdf 문서 사이트에 기여하기 위한 초기 세팅, 개발, 풀 리퀘스트, VitePress 설정 및 국제화에 대한 가이드를 제공합니다.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:10:01", "type": "best_practices", "page_metadata": {"description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "title": "문서 & 사이트 | asdf", "language": "ko-kr", "viewport": "width=device-width,initial-scale=1", "scrapeId": "b372018b-7c49-4859-89c4-89e1e573bc0c", "sourceURL": "https://asdf-vm.com/ko-kr/contribute/documentation", "url": "https://asdf-vm.com/ko-kr/contribute/documentation", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you explain what Configuration is in asdf-vm?\n\nAssistant: Sure, I'd be happy to explain Configuration in asdf-vm.\n\n# Configuration\n\nThis page covers the configuration settings for asdf, including the .tool-versions and .asdfrc files, and how to customize them.Here's a quick rundown of what this is about:\n\n## .tool-versions\n\nA directory containing a .tool-versions file will use the tool versions defined in that file for that directory and all subdirectories.\n\nNote\n\nGlobal defaults can be set in the $HOME/.tool-versions file.\n\nThe format of the .tool-versions file is as follows:\n\n```\nruby 2.5.3\nnodejs 10.15.0\n```\n\nComments can be added as follows:\n\n```\nruby 2.5.3 # This is a comment\n# This is another comment\nnodejs 10.15.0\n```\n\nVersions can be in the following formats:\n\n- `10.15.0` - Actual version. Plugins that support binary downloads will download the binaries.\n- `ref:v1.0.2-a` or `ref:39cb398vb39` - Downloads and compiles from the specified tag/commit/branch from Github.\n- `path:~/src/elixir` - Path for a custom compiled version of the tool you want to use. Used by language developers, etc.\n- `system` - This keyword allows asdf to use the system version of the tool that is not managed by asdf.\n\nTIP\n\nMultiple versions can be specified separated by spaces. For example, to use Python `3.7.2`, fallback to Python `2.7.15`, and finally to the `system` Python, add the following to .tool-versions:\n\n```\npython 3.7.2 2.7.15 system\n```\n\nTo install all tools defined in the .tool-version file, run `asdf install` without any arguments in the directory containing the .tool-version file.\n\nTo install a single tool defined in the .tool-versions file, run `asdf install <name>` in the directory containing the .tool-version file. This tool will be installed with the version defined in the .tool-versions file.\n\nYou can update the file directly or use the `asdf local` command (or `asdf global` command) to update it.\n\n## .asdfrc\n\n.asdfrc file defines user-specific settings for the machine.\n\n`${HOME}/.asdfrc` is the default location used by asdf. This can be set with the environment variable `ASDF_CONFIG_FILE`.\n\nThe following file shows the required format and default values:\n\ntxt\n```\nlegacy_version_file = no\nuse_release_candidates = no\nalways_keep_download = no\nplugin_repository_last_check_duration = 60\ndisable_plugin_short_name_repository = no\nconcurrency = auto\n```\n\n### `legacy_version_file`\n\n**Supported** plugins can read version files used by other version managers, for example, Ruby's `rbenv` with `.ruby-version`.\n\n| Option | Description |\n| --- | --- |\n| `no` default | Uses `.tool-versions` to load versions |\n| `yes` | Uses available legacy version files (e.g., `.ruby-version`) as a fallback for plugins |\n\n### `always_keep_download`\n\nSets whether to keep or remove the source code or binaries downloaded by the `asdf install` command.\n\n| Option | Description |\n| --- | --- |\n| `no` default | Removes source code or binaries after successful installation |\n| `yes` | Keeps source code or binaries after installation |\n\n### `plugin_repository_last_check_duration`\n\nSets the synchronization interval (in minutes) for asdf plugin repositories. Trigger events check the last synchronization time. If more time has passed than the specified synchronization interval since the last synchronization, a new synchronization occurs.\n\n| Option | Description |\n| --- | --- |\n| `1` to `999999999` <br>`60` default | Triggers synchronization if the duration (in minutes) since the last synchronization exceeds the specified duration |\n| `0` | Synchronizes on each trigger event |\n| `never` | Does not synchronize |\n\nSynchronization events occur when executing the following commands:\n\n- `asdf plugin add <name>`\n- `asdf plugin list all`\n\n`asdf plugin add <name> <git-url>` does not trigger plugin synchronization.\n\nNote\n\nSetting this value to `never` does not prevent the initial synchronization of the plugin repository, refer to `disable_plugin_short_name_repository` for that functionality.\n\n### `disable_plugin_short_name_repository`\n\nDisables synchronization of the asdf plugin short-name repository. If the short-name repository is disabled, synchronization events terminate early.\n\n| Option | Description |\n| --- | --- |\n| `no` default | Clones or updates the asdf plugin repository during synchronization events |\n| `yes` | Disables the short-name plugin repository |\n\nSynchronization events occur when executing the following commands:\n\n- `asdf plugin add <name>`\n- `asdf plugin list all`\n\n`asdf plugin add <name> <git-url>` does not trigger plugin synchronization.\n\nNote\n\nDisabling the short-name plugin repository does not remove it if it has already been synchronized. You can remove the plugin repository with `rm --recursive --trash $ASDF_DATA_DIR/repository`.\n\nDisabling the short-name plugin repository does not remove previously installed plugins from that repository. You can remove plugins with `asdf plugin remove <name>`. Removing a plugin will remove all installed versions of that tool.\n\n### `concurrency`\n\nThe number of cores to use during compilation.\n\n| Option | Description |\n| --- | --- |\n| Integer | Number of cores to use when compiling source code |\n| `auto` | Calculates the number of cores using `nproc`, `sysctl hw.ncpu`, `/proc/cpuinfo`, or `1` sequentially |\n\nNote: The `ASDF_CONCURRENCY` environment variable takes precedence if it exists.\n\n### Plugin Hooks\n\nCustom code can be executed:\n\n- Before or after plugin installation, shim regeneration, update, or removal\n- Before or after executing plugin commands\n\nFor example, if a plugin named `foo` is installed and provides an executable named `bar`, you can use the following hooks to execute custom code first:\n\ntxt\n```\npre_foo_bar = echo Executing with args: $@\n```\n\nSupported patterns are:\n\n- `pre_<plugin_name>_<command>`\n- `pre_asdf_download_<plugin_name>`\n- `{pre,post}_asdf_{install,reshim,uninstall}_<plugin_name>`\n  - `$1`: Full version\n- `{pre,post}_asdf_plugin_{add,update,remove,reshim}`\n  - `$1`: Plugin name\n- `{pre,post}_asdf_plugin_{add,update,remove}_<plugin_name>`\n\nFor more details on which command hooks are executed before or after which commands, refer to [Creating Plugins](https://asdf-vm.com/ko-kr/plugins/create.html).\n\n## Environment Variables\n\nSetting environment variables depends on the system and shell. The default location depends on how and where it was installed (Git clone, Homebrew, AUR).\n\nEnvironment variables are generally set before sourcing `asdf.sh`/`asdf.fish`, etc. For Elvish, it is set at the top with `use asdf`.\n\nThe following describes usage in the Bash shell.\n\n### `ASDF_CONFIG_FILE`\n\nPath to the .asdfrc settings file. Can be set to any arbitrary location. Must be an absolute path.\n\n- If not set: `$HOME/.asdfrc` is used.\n- Usage: `export ASDF_CONFIG_FILE=/home/john_doe/.config/asdf/.asdfrc`\n\n### `ASDF_DEFAULT_TOOL_VERSIONS_FILENAME`\n\nThe filename of the file that stores tool names and versions. Can be any valid filename. Typically, set this value when you want to ignore `.tool-version` files.\n\n- If not set: `.tool-versions` is used.\n- Usage: `export ASDF_DEFAULT_TOOL_VERSIONS_FILENAME=tool_versions`\n\n### `ASDF_DIR`\n\nLocation of the asdf core scripts. Can be set to any arbitrary location. Must be an absolute path.\n\n- If not set: The directory one level above the `bin/asdf` executable is used.\n- Usage: `export ASDF_DIR=/home/john_doe/.config/asdf`\n\n### `ASDF_DATA_DIR`\n\nLocation where asdf installs plugins, shims, and tool versions. Can be set to any arbitrary location. Must be an absolute path.\n\n- If not set: `$HOME/.asdf` is used if it exists, otherwise `ASDF_DIR` is used.\n- Usage: `export ASDF_DATA_DIR=/home/john_doe/.asdf`\n\n### `ASDF_CONCURRENCY`\n\nNumber of cores to use when compiling source code. If set, this value takes precedence over the asdf setting `concurrency`.\n\n- If not set: The asdf setting `concurrency` value is used.\n- Usage: `export ASDF_CONCURRENCY=32`\n\n### `ASDF_FORCE_PREPEND`\n\nWhether to add the asdf shim and path directories to the front (highest priority) of `PATH`.\n\n- If not set: `yes` is the default on macOS; `no` is the default on other systems.\n- `yes`: Forces the addition of the asdf directory to the front of `PATH`.\n- Any string other than `yes`: Does not force the addition of the asdf directory to the front of `PATH`.\n- Usage: `ASDF_FORCE_PREPEND=no . \"<path-to-asdf-directory>/asdf.sh\"`\n\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://asdf-vm.com/ko-kr/manage/configuration", "title": "Configuration", "description": "This page covers the configuration settings for asdf, including the .tool-versions and .asdfrc files, and how to customize them.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:14:58", "type": "overview", "page_metadata": {"title": "설정 | asdf", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "language": "ko-kr", "generator": "VitePress v1.6.3", "scrapeId": "4d261c4c-c326-4a25-b36d-9b51981a4078", "sourceURL": "https://asdf-vm.com/ko-kr/manage/configuration", "url": "https://asdf-vm.com/ko-kr/manage/configuration", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I .tool-versions in asdf-vm?\n\nAssistant: To .tool-versions in asdf-vm, here's what you do:\nA directory containing a .tool-versions file will use the tool versions defined in that file for that directory and all subdirectories.\n\nNote\n\nGlobal defaults can be set in the $HOME/.tool-versions file.\n\nThe format of the .tool-versions file is as follows:\n\n```\nruby 2.5.3\nnodejs 10.15.0\n```\n\nComments can be added as follows:\n\n```\nruby 2.5.3 # This is a comment\n# This is another comment\nnodejs 10.15.0\n```\n\nVersions can be in the following formats:\n\n- `10.15.0` - Actual version. Plugins that support binary downloads will download the binaries.\n- `ref:v1.0.2-a` or `ref:39cb398vb39` - Downloads and compiles from the specified tag/commit/branch from Github.\n- `path:~/src/elixir` - Path for a custom compiled version of the tool you want to use. Used by language developers, etc.\n- `system` - This keyword allows asdf to use the system version of the tool that is not managed by asdf.\n\nTIP\n\nMultiple versions can be specified separated by spaces. For example, to use Python `3.7.2`, fallback to Python `2.7.15`, and finally to the `system` Python, add the following to .tool-versions:\n\n```\npython 3.7.2 2.7.15 system\n```\n\nTo install all tools defined in the .tool-version file, run `asdf install` without any arguments in the directory containing the .tool-version file.\n\nTo install a single tool defined in the .tool-versions file, run `asdf install <name>` in the directory containing the .tool-version file. This tool will be installed with the version defined in the .tool-versions file.\n\nYou can update the file directly or use the `asdf local` command (or `asdf global` command) to update it..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ko-kr/manage/configuration", "title": "Configuration", "description": "This page covers the configuration settings for asdf, including the .tool-versions and .asdfrc files, and how to customize them.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:14:58", "type": "section_detail", "page_metadata": {"title": "설정 | asdf", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "language": "ko-kr", "generator": "VitePress v1.6.3", "scrapeId": "4d261c4c-c326-4a25-b36d-9b51981a4078", "sourceURL": "https://asdf-vm.com/ko-kr/manage/configuration", "url": "https://asdf-vm.com/ko-kr/manage/configuration", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I .asdfrc in asdf-vm?\n\nAssistant: To .asdfrc in asdf-vm, here's what you do:\n.asdfrc file defines user-specific settings for the machine.\n\n`${HOME}/.asdfrc` is the default location used by asdf. This can be set with the environment variable `ASDF_CONFIG_FILE`.\n\nThe following file shows the required format and default values:\n\ntxt\n```\nlegacy_version_file = no\nuse_release_candidates = no\nalways_keep_download = no\nplugin_repository_last_check_duration = 60\ndisable_plugin_short_name_repository = no\nconcurrency = auto\n```\n\n### `legacy_version_file`\n\n**Supported** plugins can read version files used by other version managers, for example, Ruby's `rbenv` with `.ruby-version`.\n\n| Option | Description |\n| --- | --- |\n| `no` default | Uses `.tool-versions` to load versions |\n| `yes` | Uses available legacy version files (e.g., `.ruby-version`) as a fallback for plugins |\n\n### `always_keep_download`\n\nSets whether to keep or remove the source code or binaries downloaded by the `asdf install` command.\n\n| Option | Description |\n| --- | --- |\n| `no` default | Removes source code or binaries after successful installation |\n| `yes` | Keeps source code or binaries after installation |\n\n### `plugin_repository_last_check_duration`\n\nSets the synchronization interval (in minutes) for asdf plugin repositories. Trigger events check the last synchronization time. If more time has passed than the specified synchronization interval since the last synchronization, a new synchronization occurs.\n\n| Option | Description |\n| --- | --- |\n| `1` to `999999999` <br>`60` default | Triggers synchronization if the duration (in minutes) since the last synchronization exceeds the specified duration |\n| `0` | Synchronizes on each trigger event |\n| `never` | Does not synchronize |\n\nSynchronization events occur when executing the following commands:\n\n- `asdf plugin add <name>`\n- `asdf plugin list all`\n\n`asdf plugin add <name> <git-url>` does not trigger plugin synchronization.\n\nNote\n\nSetting this value to `never` does not prevent the initial synchronization of the plugin repository, refer to `disable_plugin_short_name_repository` for that functionality.\n\n### `disable_plugin_short_name_repository`\n\nDisables synchronization of the asdf plugin short-name repository. If the short-name repository is disabled, synchronization events terminate early.\n\n| Option | Description |\n| --- | --- |\n| `no` default | Clones or updates the asdf plugin repository during synchronization events |\n| `yes` | Disables the short-name plugin repository |\n\nSynchronization events occur when executing the following commands:\n\n- `asdf plugin add <name>`\n- `asdf plugin list all`\n\n`asdf plugin add <name> <git-url>` does not trigger plugin synchronization.\n\nNote\n\nDisabling the short-name plugin repository does not remove it if it has already been synchronized. You can remove the plugin repository with `rm --recursive --trash $ASDF_DATA_DIR/repository`.\n\nDisabling the short-name plugin repository does not remove previously installed plugins from that repository. You can remove plugins with `asdf plugin remove <name>`. Removing a plugin will remove all installed versions of that tool.\n\n### `concurrency`\n\nThe number of cores to use during compilation.\n\n| Option | Description |\n| --- | --- |\n| Integer | Number of cores to use when compiling source code |\n| `auto` | Calculates the number of cores using `nproc`, `sysctl hw.ncpu`, `/proc/cpuinfo`, or `1` sequentially |\n\nNote: The `ASDF_CONCURRENCY` environment variable takes precedence if it exists.\n\n### Plugin Hooks\n\nCustom code can be executed:\n\n- Before or after plugin installation, shim regeneration, update, or removal\n- Before or after executing plugin commands\n\nFor example, if a plugin named `foo` is installed and provides an executable named `bar`, you can use the following hooks to execute custom code first:\n\ntxt\n```\npre_foo_bar = echo Executing with args: $@\n```\n\nSupported patterns are:\n\n- `pre_<plugin_name>_<command>`\n- `pre_asdf_download_<plugin_name>`\n- `{pre,post}_asdf_{install,reshim,uninstall}_<plugin_name>`\n  - `$1`: Full version\n- `{pre,post}_asdf_plugin_{add,update,remove,reshim}`\n  - `$1`: Plugin name\n- `{pre,post}_asdf_plugin_{add,update,remove}_<plugin_name>`\n\nFor more details on which command hooks are executed before or after which commands, refer to [Creating Plugins](https://asdf-vm.com/ko-kr/plugins/create.html)..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ko-kr/manage/configuration", "title": "Configuration", "description": "This page covers the configuration settings for asdf, including the .tool-versions and .asdfrc files, and how to customize them.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:14:58", "type": "section_detail", "page_metadata": {"title": "설정 | asdf", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "language": "ko-kr", "generator": "VitePress v1.6.3", "scrapeId": "4d261c4c-c326-4a25-b36d-9b51981a4078", "sourceURL": "https://asdf-vm.com/ko-kr/manage/configuration", "url": "https://asdf-vm.com/ko-kr/manage/configuration", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I environment variables in asdf-vm?\n\nAssistant: To environment variables in asdf-vm, here's what you do:\nSetting environment variables depends on the system and shell. The default location depends on how and where it was installed (Git clone, Homebrew, AUR).\n\nEnvironment variables are generally set before sourcing `asdf.sh`/`asdf.fish`, etc. For Elvish, it is set at the top with `use asdf`.\n\nThe following describes usage in the Bash shell.\n\n### `ASDF_CONFIG_FILE`\n\nPath to the .asdfrc settings file. Can be set to any arbitrary location. Must be an absolute path.\n\n- If not set: `$HOME/.asdfrc` is used.\n- Usage: `export ASDF_CONFIG_FILE=/home/john_doe/.config/asdf/.asdfrc`\n\n### `ASDF_DEFAULT_TOOL_VERSIONS_FILENAME`\n\nThe filename of the file that stores tool names and versions. Can be any valid filename. Typically, set this value when you want to ignore `.tool-version` files.\n\n- If not set: `.tool-versions` is used.\n- Usage: `export ASDF_DEFAULT_TOOL_VERSIONS_FILENAME=tool_versions`\n\n### `ASDF_DIR`\n\nLocation of the asdf core scripts. Can be set to any arbitrary location. Must be an absolute path.\n\n- If not set: The directory one level above the `bin/asdf` executable is used.\n- Usage: `export ASDF_DIR=/home/john_doe/.config/asdf`\n\n### `ASDF_DATA_DIR`\n\nLocation where asdf installs plugins, shims, and tool versions. Can be set to any arbitrary location. Must be an absolute path.\n\n- If not set: `$HOME/.asdf` is used if it exists, otherwise `ASDF_DIR` is used.\n- Usage: `export ASDF_DATA_DIR=/home/john_doe/.asdf`\n\n### `ASDF_CONCURRENCY`\n\nNumber of cores to use when compiling source code. If set, this value takes precedence over the asdf setting `concurrency`.\n\n- If not set: The asdf setting `concurrency` value is used.\n- Usage: `export ASDF_CONCURRENCY=32`\n\n### `ASDF_FORCE_PREPEND`\n\nWhether to add the asdf shim and path directories to the front (highest priority) of `PATH`.\n\n- If not set: `yes` is the default on macOS; `no` is the default on other systems.\n- `yes`: Forces the addition of the asdf directory to the front of `PATH`.\n- Any string other than `yes`: Does not force the addition of the asdf directory to the front of `PATH`.\n- Usage: `ASDF_FORCE_PREPEND=no . \"<path-to-asdf-directory>/asdf.sh\"`\n.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ko-kr/manage/configuration", "title": "Configuration", "description": "This page covers the configuration settings for asdf, including the .tool-versions and .asdfrc files, and how to customize them.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:14:58", "type": "section_detail", "page_metadata": {"title": "설정 | asdf", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "language": "ko-kr", "generator": "VitePress v1.6.3", "scrapeId": "4d261c4c-c326-4a25-b36d-9b51981a4078", "sourceURL": "https://asdf-vm.com/ko-kr/manage/configuration", "url": "https://asdf-vm.com/ko-kr/manage/configuration", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you give me some code examples for Configuration in asdf-vm?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**.tool-versions example**:\n\n```yaml\n```\nruby 2.5.3\nnodejs 10.15.0\n```\n\n```\nruby 2.5.3 # This is a comment\n# This is another comment\nnodejs 10.15.0\n```\n\n```\npython 3.7.2 2.7.15 system\n```\n\n```\n\nThis snippet shows you how to .tool-versions example, which is an important aspect of configuration.\n\n**.asdfrc example**:\n\n```yaml\n```\nlegacy_version_file = no\nuse_release_candidates = no\nalways_keep_download = no\nplugin_repository_last_check_duration = 60\ndisable_plugin_short_name_repository = no\nconcurrency = auto\n```\n\n```\n\nThis snippet shows you how to .asdfrc example, which is an important aspect of configuration.\n\n**Plugin Hook Example**:\n\n```yaml\n```\npre_foo_bar = echo Executing with args: $@\n```\n```\n\nThis snippet shows you how to plugin hook example, which is an important aspect of configuration.\n\n", "metadata": {"source_url": "https://asdf-vm.com/ko-kr/manage/configuration", "title": "Configuration", "description": "This page covers the configuration settings for asdf, including the .tool-versions and .asdfrc files, and how to customize them.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:14:58", "type": "code_examples", "page_metadata": {"title": "설정 | asdf", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "language": "ko-kr", "generator": "VitePress v1.6.3", "scrapeId": "4d261c4c-c326-4a25-b36d-9b51981a4078", "sourceURL": "https://asdf-vm.com/ko-kr/manage/configuration", "url": "https://asdf-vm.com/ko-kr/manage/configuration", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: What are some tips for using Configuration in asdf-vm effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nMultiple versions can be specified separated by spaces in the .tool-versions file.\n\nTo install all tools defined in the .tool-version file, run `asdf install` without any arguments in the directory containing the .tool-version file.\n\nTo install a single tool defined in the .tool-versions file, run `asdf install <name>` in the directory containing the .tool-version file.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://asdf-vm.com/ko-kr/manage/configuration", "title": "Configuration", "description": "This page covers the configuration settings for asdf, including the .tool-versions and .asdfrc files, and how to customize them.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:14:58", "type": "best_practices", "page_metadata": {"title": "설정 | asdf", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "language": "ko-kr", "generator": "VitePress v1.6.3", "scrapeId": "4d261c4c-c326-4a25-b36d-9b51981a4078", "sourceURL": "https://asdf-vm.com/ko-kr/manage/configuration", "url": "https://asdf-vm.com/ko-kr/manage/configuration", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you explain what asdf 소개 is in asdf-vm?\n\nAssistant: Sure, I'd be happy to explain asdf 소개 in asdf-vm.\n\n# asdf 소개\n\n`asdf` 는 툴 버전 매니저로, 모든 툴 버전 정의들을 공유하는 프로젝트의 Git 리포지토리에서 확인할 수 있는 `.tool-versions` 파일을 통해 관리합니다.Here's a quick rundown of what this is about:\n\n## 작동방식\n\n`asdf` 코어가 셸 설정과 함께 설치되면, 플러그인들이 특정 툴들을 관리하기 위해 설치됩니다. 플러그인에 의해 한가지 툴이 설치되면, [shims](https://en.wikipedia.org/wiki/Shim_(computing)) 들을 가진 실행파일들이 각각의 툴들을 위해 생성됩니다. 실행파일들을 실행하려 할 때, `.tool-versions` 에 설정된 툴의 버전을 통해 `asdf` 가 어떤 버전을 실행시킬 지 결정하고 해당 shim이 대신 실행됩니다.\n\n## 관련된 프로젝트\n\n### nvm / n / rbenv 등\n[nvm](https://github.com/nvm-sh/nvm), [n](https://github.com/tj/n) 그리고 [rbenv](https://github.com/rbenv/rbenv) 과 같은 툴들은 설치된 실행파일을 위한 shim들을 만드는 셸 스크립트들로 작성되어 있습니다.\n\n`asdf` 는 매우 비슷하고 툴/런타임 버전 관리의 영역에서 경쟁하기 위해 만들어졌습니다. `asdf` 의 차별화 요소는 플러그인 시스템이 툴/런타임 별 매니저의 필요성, 각기 다른 명령어들, 그리고 리포지토리에 각각 `*-version` 파일들을 제거하였다는 것입니다.\n\n### direnv\n> 현재 디렉토리에 따라 환경 변수들을 load와 unload 할 수 있는 새로운 기능을 기존의 셸에 추가합니다.\n\n`asdf` 는 환경 변수들을 관리하지 않습니다만, [`asdf-direnv`](https://github.com/asdf-community/asdf-direnv) 플러그인을 통해 direnv 동작를 `asdf` 에 통합할 수 있습니다.\n\n[direnv 문서](https://direnv.net/) 에서 더보기.\n\n### Homebrew\n> macOS (혹은 Linux)에서의 패키지 매니저 부재\n\nHomebrew는 패키지들과 upstream dependencies들을 관리합니다. `asdf` 는 upstream dependencies들을 관리하지 않고, 패키지 매니저가 아니고, 우리가 dependency 목록들을 작게 유지하므로, 사용자가 직접 관리해야합니다.\n\n[Homebrew 문서](https://brew.sh/) 에서 더보기.\n\n### NixOS\n> Nix는 패키지 관리와 시스템 설정에 창의적으로 접근하는 툴입니다.\n\nNixOS는, `asdf` 가 제공하지 않는, 각 툴의 전체 dependency tree를 통해 패키지들의 정확한 버전들을 관리함으로써 재현가능한 환경 구축을 목표로 합니다. NixOS는 자신만의 프로그래밍 언어, 많은 CLI 툴들, 그리고 6000개가 넘는 패키지 컬렉션을 통해 해당 기능을 제공합니다.\n\n다시 한번 말씀드리지만, `asdf` 는 upstream dependencies들을 관리하지 않으며 패키지 매니저가 아닙니다.\n\n[NixOS 문서](https://nixos.org/guides/how-nix-works.html) 에서 더보기.\n\n## 왜 asdf를 사용할까요?\n\n`asdf` 는 팀들이 플러그인 시스템을 통해 **다양한** 툴들의 지원 그리고 셸 설정에 포함시킬 하나의 **셸** 스크립트의 _단순함_ 과 _친숙성_ 을 통해 **정확히** 같은 버전의 툴들을 사용하는 것을 보장합니다.\n\n노트\n\n`asdf` 는 시스템 패키지 매니저가 아닙니다. 이것은 툴 버전 매니저입니다. 단지 어떠한 툴을 위한 플러그인을 생성하고 그것의 버전을 `asdf` 로 관리할 수 있다고 해서, 그 특정한 툴을 버전 관리를 위한 최선의 방법을 의미하는 것은 아닙니다.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://asdf-vm.com/ko-kr/guide/introduction", "title": "asdf 소개", "description": "`asdf` 는 툴 버전 매니저로, 모든 툴 버전 정의들을 공유하는 프로젝트의 Git 리포지토리에서 확인할 수 있는 `.tool-versions` 파일을 통해 관리합니다.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:15:21", "type": "overview", "page_metadata": {"title": "소개 | asdf", "viewport": "width=device-width,initial-scale=1", "language": "ko-kr", "description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "scrapeId": "7959e4d8-f484-4bcc-89d0-01419d2231e1", "sourceURL": "https://asdf-vm.com/ko-kr/guide/introduction", "url": "https://asdf-vm.com/ko-kr/guide/introduction", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 작동방식 in asdf-vm?\n\nAssistant: To 작동방식 in asdf-vm, here's what you do:\n`asdf` 코어가 셸 설정과 함께 설치되면, 플러그인들이 특정 툴들을 관리하기 위해 설치됩니다. 플러그인에 의해 한가지 툴이 설치되면, [shims](https://en.wikipedia.org/wiki/Shim_(computing)) 들을 가진 실행파일들이 각각의 툴들을 위해 생성됩니다. 실행파일들을 실행하려 할 때, `.tool-versions` 에 설정된 툴의 버전을 통해 `asdf` 가 어떤 버전을 실행시킬 지 결정하고 해당 shim이 대신 실행됩니다..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ko-kr/guide/introduction", "title": "asdf 소개", "description": "`asdf` 는 툴 버전 매니저로, 모든 툴 버전 정의들을 공유하는 프로젝트의 Git 리포지토리에서 확인할 수 있는 `.tool-versions` 파일을 통해 관리합니다.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:15:21", "type": "section_detail", "page_metadata": {"title": "소개 | asdf", "viewport": "width=device-width,initial-scale=1", "language": "ko-kr", "description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "scrapeId": "7959e4d8-f484-4bcc-89d0-01419d2231e1", "sourceURL": "https://asdf-vm.com/ko-kr/guide/introduction", "url": "https://asdf-vm.com/ko-kr/guide/introduction", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 관련된 프로젝트 in asdf-vm?\n\nAssistant: To 관련된 프로젝트 in asdf-vm, here's what you do:\n### nvm / n / rbenv 등\n[nvm](https://github.com/nvm-sh/nvm), [n](https://github.com/tj/n) 그리고 [rbenv](https://github.com/rbenv/rbenv) 과 같은 툴들은 설치된 실행파일을 위한 shim들을 만드는 셸 스크립트들로 작성되어 있습니다.\n\n`asdf` 는 매우 비슷하고 툴/런타임 버전 관리의 영역에서 경쟁하기 위해 만들어졌습니다. `asdf` 의 차별화 요소는 플러그인 시스템이 툴/런타임 별 매니저의 필요성, 각기 다른 명령어들, 그리고 리포지토리에 각각 `*-version` 파일들을 제거하였다는 것입니다.\n\n### direnv\n> 현재 디렉토리에 따라 환경 변수들을 load와 unload 할 수 있는 새로운 기능을 기존의 셸에 추가합니다.\n\n`asdf` 는 환경 변수들을 관리하지 않습니다만, [`asdf-direnv`](https://github.com/asdf-community/asdf-direnv) 플러그인을 통해 direnv 동작를 `asdf` 에 통합할 수 있습니다.\n\n[direnv 문서](https://direnv.net/) 에서 더보기.\n\n### Homebrew\n> macOS (혹은 Linux)에서의 패키지 매니저 부재\n\nHomebrew는 패키지들과 upstream dependencies들을 관리합니다. `asdf` 는 upstream dependencies들을 관리하지 않고, 패키지 매니저가 아니고, 우리가 dependency 목록들을 작게 유지하므로, 사용자가 직접 관리해야합니다.\n\n[Homebrew 문서](https://brew.sh/) 에서 더보기.\n\n### NixOS\n> Nix는 패키지 관리와 시스템 설정에 창의적으로 접근하는 툴입니다.\n\nNixOS는, `asdf` 가 제공하지 않는, 각 툴의 전체 dependency tree를 통해 패키지들의 정확한 버전들을 관리함으로써 재현가능한 환경 구축을 목표로 합니다. NixOS는 자신만의 프로그래밍 언어, 많은 CLI 툴들, 그리고 6000개가 넘는 패키지 컬렉션을 통해 해당 기능을 제공합니다.\n\n다시 한번 말씀드리지만, `asdf` 는 upstream dependencies들을 관리하지 않으며 패키지 매니저가 아닙니다.\n\n[NixOS 문서](https://nixos.org/guides/how-nix-works.html) 에서 더보기..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ko-kr/guide/introduction", "title": "asdf 소개", "description": "`asdf` 는 툴 버전 매니저로, 모든 툴 버전 정의들을 공유하는 프로젝트의 Git 리포지토리에서 확인할 수 있는 `.tool-versions` 파일을 통해 관리합니다.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:15:21", "type": "section_detail", "page_metadata": {"title": "소개 | asdf", "viewport": "width=device-width,initial-scale=1", "language": "ko-kr", "description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "scrapeId": "7959e4d8-f484-4bcc-89d0-01419d2231e1", "sourceURL": "https://asdf-vm.com/ko-kr/guide/introduction", "url": "https://asdf-vm.com/ko-kr/guide/introduction", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 왜 asdf를 사용할까요? in asdf-vm?\n\nAssistant: To 왜 asdf를 사용할까요? in asdf-vm, here's what you do:\n`asdf` 는 팀들이 플러그인 시스템을 통해 **다양한** 툴들의 지원 그리고 셸 설정에 포함시킬 하나의 **셸** 스크립트의 _단순함_ 과 _친숙성_ 을 통해 **정확히** 같은 버전의 툴들을 사용하는 것을 보장합니다.\n\n노트\n\n`asdf` 는 시스템 패키지 매니저가 아닙니다. 이것은 툴 버전 매니저입니다. 단지 어떠한 툴을 위한 플러그인을 생성하고 그것의 버전을 `asdf` 로 관리할 수 있다고 해서, 그 특정한 툴을 버전 관리를 위한 최선의 방법을 의미하는 것은 아닙니다..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ko-kr/guide/introduction", "title": "asdf 소개", "description": "`asdf` 는 툴 버전 매니저로, 모든 툴 버전 정의들을 공유하는 프로젝트의 Git 리포지토리에서 확인할 수 있는 `.tool-versions` 파일을 통해 관리합니다.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:15:21", "type": "section_detail", "page_metadata": {"title": "소개 | asdf", "viewport": "width=device-width,initial-scale=1", "language": "ko-kr", "description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "scrapeId": "7959e4d8-f484-4bcc-89d0-01419d2231e1", "sourceURL": "https://asdf-vm.com/ko-kr/guide/introduction", "url": "https://asdf-vm.com/ko-kr/guide/introduction", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: What are some tips for using asdf 소개 in asdf-vm effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\n`asdf` 는 시스템 패키지 매니저가 아닙니다. 이것은 툴 버전 매니저입니다.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://asdf-vm.com/ko-kr/guide/introduction", "title": "asdf 소개", "description": "`asdf` 는 툴 버전 매니저로, 모든 툴 버전 정의들을 공유하는 프로젝트의 Git 리포지토리에서 확인할 수 있는 `.tool-versions` 파일을 통해 관리합니다.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:15:21", "type": "best_practices", "page_metadata": {"title": "소개 | asdf", "viewport": "width=device-width,initial-scale=1", "language": "ko-kr", "description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "scrapeId": "7959e4d8-f484-4bcc-89d0-01419d2231e1", "sourceURL": "https://asdf-vm.com/ko-kr/guide/introduction", "url": "https://asdf-vm.com/ko-kr/guide/introduction", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you explain what 플러그인 is in asdf-vm?\n\nAssistant: Sure, I'd be happy to explain 플러그인 in asdf-vm.\n\n# 플러그인\n\n플로그인들은 `asdf` 가 Node.js, Ruby, Elixir 등 여러가지 툴들을 취급하는 방법입니다.Here's a quick rundown of what this is about:\n\n## 추가하기\n\nGit URL로 플러그인 추가하기:\n\n```\nasdf plugin add <name> <git-url>\n# asdf plugin add elm https://github.com/vic/asdf-elm\n```\n\n또는 플러그인 리포지토리에 short-name을 통해 추가하기:\n\n```\nasdf plugin add <name>\n# asdf plugin add erlang\n```\n\n추천\n\nshort-name 리포지토리에 독립적인 긴 `git-url` 방식이 선호됩니다.\n\n## 설치된 목록\n\n\n```\nasdf plugin list\n# asdf plugin list\n# java\n# nodejs\n```\n\n```\nasdf plugin list --urls\n# asdf plugin list\n# java            https://github.com/halcyon/asdf-java.git\n# nodejs          https://github.com/asdf-vm/asdf-nodejs.git\n```\n\n## 모든 Short-name 리포지토리 목록\n\n\n```\nasdf plugin list all\n```\n\n플러그인들의 전체 short-name 목록을 [플러그인 Shortname 인덱스](https://github.com/asdf-vm/asdf-plugins) 에서 확인하세요.\n\n## 업데이트\n\n\n```\nasdf plugin update --all\n```\n\n특정 패키지를 업데이트하고 싶다면, 다음 명령어를 사용하세요.\n\n```\nasdf plugin update <name>\n# asdf plugin update erlang\n```\n\n이 명령어는 해당 플러그인 리포지토리의 _origin_ _기본 브랜치_ 의 _가장 최근 커밋_ 을 fetch합니다. 버전화된 플러그인들과 업데이트들은 현재 개발 진행중 입니다 ( [#916](https://github.com/asdf-vm/asdf/pull/916)).\n\n## 제거\n\n\n```\nasdf plugin remove <name>\n# asdf plugin remove erlang\n```\n\n플러그인 제거는 해당 툴과 관련된 모든 것을 제거합니다. 이것은 한 툴의 미사용중인 많은 버전들의 cleaning/pruning에 유용합니다.\n\n## asdf Short-name 리포지토리 동기화\n\nShort-name 리포지토리는 로컬 머신에 주기적으로 동기화됩니다. 동기화 방식들로 다음 방식들이 있습니다:\n\n- 명령어들에 의한 동기화 이벤트:\n  - `asdf plugin add <name>`\n  - `asdf plugin list all`\n- 만약 `disable_plugin_short_name_repository` 설정 옵션이 `yes` 로 설정되어 있다면, 동기화는 조기 종료됩니다. [asdf 설정 문서](https://asdf-vm.com/ko-kr/manage/configuration.html) 에서 더보기.\n- 만약 동기화가 지난 `X` 분 동안 진행되지 않았다면, 동기화가 진행됩니다.\n  - `X` 의 기본값은 `60` 입니다만, `.asdfrc` 의 `plugin_repository_last_check_duration` 옵션을 통해 설정될 수 있습니다. [asdf 설정 문서](https://asdf-vm.com/ko-kr/manage/configuration.html) 에서 더보기.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://asdf-vm.com/ko-kr/manage/plugins", "title": "플러그인", "description": "플로그인들은 `asdf` 가 Node.js, Ruby, Elixir 등 여러가지 툴들을 취급하는 방법입니다.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:15:38", "type": "overview", "page_metadata": {"language": "ko-kr", "title": "플러그인 | asdf", "description": "Manage multiple runtime versions with a single CLI tool", "viewport": "width=device-width,initial-scale=1", "generator": "VitePress v1.6.3", "scrapeId": "352074df-c0d4-47be-85d5-cd74f1aef3ca", "sourceURL": "https://asdf-vm.com/ko-kr/manage/plugins", "url": "https://asdf-vm.com/ko-kr/manage/plugins", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 추가하기 in asdf-vm?\n\nAssistant: To 추가하기 in asdf-vm, here's what you do:\nGit URL로 플러그인 추가하기:\n\n```\nasdf plugin add <name> <git-url>\n# asdf plugin add elm https://github.com/vic/asdf-elm\n```\n\n또는 플러그인 리포지토리에 short-name을 통해 추가하기:\n\n```\nasdf plugin add <name>\n# asdf plugin add erlang\n```\n\n추천\n\nshort-name 리포지토리에 독립적인 긴 `git-url` 방식이 선호됩니다..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ko-kr/manage/plugins", "title": "플러그인", "description": "플로그인들은 `asdf` 가 Node.js, Ruby, Elixir 등 여러가지 툴들을 취급하는 방법입니다.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:15:38", "type": "section_detail", "page_metadata": {"language": "ko-kr", "title": "플러그인 | asdf", "description": "Manage multiple runtime versions with a single CLI tool", "viewport": "width=device-width,initial-scale=1", "generator": "VitePress v1.6.3", "scrapeId": "352074df-c0d4-47be-85d5-cd74f1aef3ca", "sourceURL": "https://asdf-vm.com/ko-kr/manage/plugins", "url": "https://asdf-vm.com/ko-kr/manage/plugins", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 설치된 목록 in asdf-vm?\n\nAssistant: To 설치된 목록 in asdf-vm, here's what you do:\n\n```\nasdf plugin list\n# asdf plugin list\n# java\n# nodejs\n```\n\n```\nasdf plugin list --urls\n# asdf plugin list\n# java            https://github.com/halcyon/asdf-java.git\n# nodejs          https://github.com/asdf-vm/asdf-nodejs.git\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ko-kr/manage/plugins", "title": "플러그인", "description": "플로그인들은 `asdf` 가 Node.js, Ruby, Elixir 등 여러가지 툴들을 취급하는 방법입니다.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:15:38", "type": "section_detail", "page_metadata": {"language": "ko-kr", "title": "플러그인 | asdf", "description": "Manage multiple runtime versions with a single CLI tool", "viewport": "width=device-width,initial-scale=1", "generator": "VitePress v1.6.3", "scrapeId": "352074df-c0d4-47be-85d5-cd74f1aef3ca", "sourceURL": "https://asdf-vm.com/ko-kr/manage/plugins", "url": "https://asdf-vm.com/ko-kr/manage/plugins", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 모든 short-name 리포지토리 목록 in asdf-vm?\n\nAssistant: To 모든 short-name 리포지토리 목록 in asdf-vm, here's what you do:\n\n```\nasdf plugin list all\n```\n\n플러그인들의 전체 short-name 목록을 [플러그인 Shortname 인덱스](https://github.com/asdf-vm/asdf-plugins) 에서 확인하세요..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ko-kr/manage/plugins", "title": "플러그인", "description": "플로그인들은 `asdf` 가 Node.js, Ruby, Elixir 등 여러가지 툴들을 취급하는 방법입니다.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:15:38", "type": "section_detail", "page_metadata": {"language": "ko-kr", "title": "플러그인 | asdf", "description": "Manage multiple runtime versions with a single CLI tool", "viewport": "width=device-width,initial-scale=1", "generator": "VitePress v1.6.3", "scrapeId": "352074df-c0d4-47be-85d5-cd74f1aef3ca", "sourceURL": "https://asdf-vm.com/ko-kr/manage/plugins", "url": "https://asdf-vm.com/ko-kr/manage/plugins", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 업데이트 in asdf-vm?\n\nAssistant: To 업데이트 in asdf-vm, here's what you do:\n\n```\nasdf plugin update --all\n```\n\n특정 패키지를 업데이트하고 싶다면, 다음 명령어를 사용하세요.\n\n```\nasdf plugin update <name>\n# asdf plugin update erlang\n```\n\n이 명령어는 해당 플러그인 리포지토리의 _origin_ _기본 브랜치_ 의 _가장 최근 커밋_ 을 fetch합니다. 버전화된 플러그인들과 업데이트들은 현재 개발 진행중 입니다 ( [#916](https://github.com/asdf-vm/asdf/pull/916))..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ko-kr/manage/plugins", "title": "플러그인", "description": "플로그인들은 `asdf` 가 Node.js, Ruby, Elixir 등 여러가지 툴들을 취급하는 방법입니다.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:15:38", "type": "section_detail", "page_metadata": {"language": "ko-kr", "title": "플러그인 | asdf", "description": "Manage multiple runtime versions with a single CLI tool", "viewport": "width=device-width,initial-scale=1", "generator": "VitePress v1.6.3", "scrapeId": "352074df-c0d4-47be-85d5-cd74f1aef3ca", "sourceURL": "https://asdf-vm.com/ko-kr/manage/plugins", "url": "https://asdf-vm.com/ko-kr/manage/plugins", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 제거 in asdf-vm?\n\nAssistant: To 제거 in asdf-vm, here's what you do:\n\n```\nasdf plugin remove <name>\n# asdf plugin remove erlang\n```\n\n플러그인 제거는 해당 툴과 관련된 모든 것을 제거합니다. 이것은 한 툴의 미사용중인 많은 버전들의 cleaning/pruning에 유용합니다..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ko-kr/manage/plugins", "title": "플러그인", "description": "플로그인들은 `asdf` 가 Node.js, Ruby, Elixir 등 여러가지 툴들을 취급하는 방법입니다.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:15:38", "type": "section_detail", "page_metadata": {"language": "ko-kr", "title": "플러그인 | asdf", "description": "Manage multiple runtime versions with a single CLI tool", "viewport": "width=device-width,initial-scale=1", "generator": "VitePress v1.6.3", "scrapeId": "352074df-c0d4-47be-85d5-cd74f1aef3ca", "sourceURL": "https://asdf-vm.com/ko-kr/manage/plugins", "url": "https://asdf-vm.com/ko-kr/manage/plugins", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I asdf short-name 리포지토리 동기화 in asdf-vm?\n\nAssistant: To asdf short-name 리포지토리 동기화 in asdf-vm, here's what you do:\nShort-name 리포지토리는 로컬 머신에 주기적으로 동기화됩니다. 동기화 방식들로 다음 방식들이 있습니다:\n\n- 명령어들에 의한 동기화 이벤트:\n  - `asdf plugin add <name>`\n  - `asdf plugin list all`\n- 만약 `disable_plugin_short_name_repository` 설정 옵션이 `yes` 로 설정되어 있다면, 동기화는 조기 종료됩니다. [asdf 설정 문서](https://asdf-vm.com/ko-kr/manage/configuration.html) 에서 더보기.\n- 만약 동기화가 지난 `X` 분 동안 진행되지 않았다면, 동기화가 진행됩니다.\n  - `X` 의 기본값은 `60` 입니다만, `.asdfrc` 의 `plugin_repository_last_check_duration` 옵션을 통해 설정될 수 있습니다. [asdf 설정 문서](https://asdf-vm.com/ko-kr/manage/configuration.html) 에서 더보기..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ko-kr/manage/plugins", "title": "플러그인", "description": "플로그인들은 `asdf` 가 Node.js, Ruby, Elixir 등 여러가지 툴들을 취급하는 방법입니다.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:15:38", "type": "section_detail", "page_metadata": {"language": "ko-kr", "title": "플러그인 | asdf", "description": "Manage multiple runtime versions with a single CLI tool", "viewport": "width=device-width,initial-scale=1", "generator": "VitePress v1.6.3", "scrapeId": "352074df-c0d4-47be-85d5-cd74f1aef3ca", "sourceURL": "https://asdf-vm.com/ko-kr/manage/plugins", "url": "https://asdf-vm.com/ko-kr/manage/plugins", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you give me some code examples for 플러그인 in asdf-vm?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**플러그인 추가하기 (Git URL)**:\n\n```yaml\nasdf plugin add <name> <git-url>\n# asdf plugin add elm https://github.com/vic/asdf-elm\n```\n\nThis snippet shows you how to 플러그인 추가하기 (git url), which is an important aspect of 플러그인.\n\n**플러그인 추가하기 (Short-name)**:\n\n```yaml\nasdf plugin add <name>\n# asdf plugin add erlang\n```\n\nThis snippet shows you how to 플러그인 추가하기 (short-name), which is an important aspect of 플러그인.\n\n**설치된 플러그인 목록**:\n\n```yaml\nasdf plugin list\n```\n\nThis snippet shows you how to 설치된 플러그인 목록, which is an important aspect of 플러그인.\n\n**설치된 플러그인 목록 (URLs)**:\n\n```yaml\nasdf plugin list --urls\n```\n\nThis snippet shows you how to 설치된 플러그인 목록 (urls), which is an important aspect of 플러그인.\n\n**모든 Short-name 리포지토리 목록**:\n\n```yaml\nasdf plugin list all\n```\n\nThis snippet shows you how to 모든 short-name 리포지토리 목록, which is an important aspect of 플러그인.\n\n**모든 플러그인 업데이트**:\n\n```yaml\nasdf plugin update --all\n```\n\nThis snippet shows you how to 모든 플러그인 업데이트, which is an important aspect of 플러그인.\n\n**특정 플러그인 업데이트**:\n\n```yaml\nasdf plugin update <name>\n# asdf plugin update erlang\n```\n\nThis snippet shows you how to 특정 플러그인 업데이트, which is an important aspect of 플러그인.\n\n**플러그인 제거**:\n\n```yaml\nasdf plugin remove <name>\n# asdf plugin remove erlang\n```\n\nThis snippet shows you how to 플러그인 제거, which is an important aspect of 플러그인.\n\n", "metadata": {"source_url": "https://asdf-vm.com/ko-kr/manage/plugins", "title": "플러그인", "description": "플로그인들은 `asdf` 가 Node.js, Ruby, Elixir 등 여러가지 툴들을 취급하는 방법입니다.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:15:38", "type": "code_examples", "page_metadata": {"language": "ko-kr", "title": "플러그인 | asdf", "description": "Manage multiple runtime versions with a single CLI tool", "viewport": "width=device-width,initial-scale=1", "generator": "VitePress v1.6.3", "scrapeId": "352074df-c0d4-47be-85d5-cd74f1aef3ca", "sourceURL": "https://asdf-vm.com/ko-kr/manage/plugins", "url": "https://asdf-vm.com/ko-kr/manage/plugins", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: What are some tips for using 플러그인 in asdf-vm effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nshort-name 리포지토리에 독립적인 긴 `git-url` 방식이 선호됩니다.\n\n플러그인 제거는 해당 툴과 관련된 모든 것을 제거합니다. 이것은 한 툴의 미사용중인 많은 버전들의 cleaning/pruning에 유용합니다.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://asdf-vm.com/ko-kr/manage/plugins", "title": "플러그인", "description": "플로그인들은 `asdf` 가 Node.js, Ruby, Elixir 등 여러가지 툴들을 취급하는 방법입니다.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:15:38", "type": "best_practices", "page_metadata": {"language": "ko-kr", "title": "플러그인 | asdf", "description": "Manage multiple runtime versions with a single CLI tool", "viewport": "width=device-width,initial-scale=1", "generator": "VitePress v1.6.3", "scrapeId": "352074df-c0d4-47be-85d5-cd74f1aef3ca", "sourceURL": "https://asdf-vm.com/ko-kr/manage/plugins", "url": "https://asdf-vm.com/ko-kr/manage/plugins", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you explain what asdf 코어 기여 가이드 is in asdf-vm?\n\nAssistant: Sure, I'd be happy to explain asdf 코어 기여 가이드 in asdf-vm.\n\n# asdf 코어 기여 가이드\n\n이 페이지는 asdf의 코어 기여 방법에 대한 가이드를 제공합니다.Here's a quick rundown of what this is about:\n\n## 초기 설정\n\nGithub의 `asdf` 를 fork하거나 clone하세요:\n\n```shell\n# clone your fork\ngit clone https://github.com/<GITHUB_USER>/asdf.git\n# or clone asdf\ngit clone https://github.com/asdf-vm/asdf.git\n```\n\n코어 개발을 위한 툴들은 이 리포지토리의 `.tool-versions` 에 있습니다. 만약 `asdf` 가 직접 관리하기를 바라신다면, 다음 플러그인들을 설치하세요:\n\n```shell\nasdf plugin add bats https://github.com/timgluz/asdf-bats.git\nasdf plugin add shellcheck https://github.com/luizm/asdf-shellcheck.git\nasdf plugin add shfmt https://github.com/luizm/asdf-shfmt.git\n```\n\n`asdf` 를 개발하기 위한 버전들을 설치하세요:\n\n```shell\nasdf install\n```\n\n로컬 머신에서 개발 도구를 손상시킬 수 있는 기능을 개발 중일 경우 `asdf` 를 사용하지 않는 것이 _좋을 수_ 있습니다. 개발 도구들의 원본 목록입니다:\n\n- [bats-core](https://github.com/bats-core/bats-core): Bash 또는 POSIX 준수 스크립트를 단위 테스트하기 위한 Bash 자동화 테스트 시스템.\n- [shellcheck](https://github.com/koalaman/shellcheck): 셸 스크립트 정적 분석 도구.\n- [shfmt](https://github.com/mvdan/sh): Bash를 지원하는 셸 parser, formatter, interpreter; shfmt 포함.\n\n## 개발\n\n만약 설치된 `asdf` 에 영향 없이 변화들을 테스트해보시고 싶으시다면, `$ASDF_DIR` 변수를 리포지토리를 clone한 경로에 지정하시고, 그 다음 임시로 `bin` 와 `shims` 디렉토리들을 경로 앞에 추가하세요.\n\n원격 리포지토리에 커밋 혹은 push하기 전에, 당신의 코드를 format, lint, 그리고 locally test하세요. 다음 스크립트/명령어들을 사용하세요:\n\n```shell\n# Lint\n./scripts/lint.bash --check\n\n# Fix & Format\n./scripts/lint.bash --fix\n\n# Test: all tests\n./scripts/test.bash\n\n# Test: for specific command\nbats test/list_commands.bash\n```\n\nTIP\n\n**테스트 추가!** \n- 새로운 기능들과 버그 수정들의 리뷰 속도 향상을 위해 테스트들은 **필수적** 입니다. 풀 리퀘스트 요청을 만드시기 전에 새로운 코드 경로들을 추가해주세요. [bats-core 문서](https://bats-core.readthedocs.io/en/stable/index.html) 참조.\n\n## Gitignore\n\n다음은 `asdf-vm/asdf` 리포지토리에 `.gitignore` 파일입니다. 우리는 프로젝트에 관련된 특정한 파일들을 무시합니다. 운영체제, 툴, workflows에 관련된 파일들은 글로벌 `.gitignore` 설정에서 무시되어야합니다, [더 보기](http://stratus3d.com/blog/2018/06/03/stop-excluding-editor-temp-files-in-gitignore/). \n\n@/../.gitignore\n\n## .git-blame-ignore-revs\n\n`asdf` 는 `.git-blame-ignore-revs` 사용해 blame 실행에서 잡음을 줄입니다. 더 많은 정보 [git blame 문서](https://git-scm.com/docs/git-blame).\n\n다음과 같이 `git blame` 과 `.git-blame-ignore-revs` 을 사용:\n\n```sh\ngit blame --ignore-revs-file .git-blame-ignore-revs ./test/install_command.bats\n```\n\n선택적으로, 수동적으로 파일을 제공하는 대신 모든 `blame` 에서 해당 파일을 사용하도록 설정:\n\n```sh\ngit config blame.ignoreRevsFile .git-blame-ignore-revs\n```\n\nIDE들에서 이 파일을 사용하도록 설정할 수 있습니다. 예를 들어, VSCode를 사용하실 경우 ( [GitLens](https://marketplace.visualstudio.com/items?itemName=eamodio.gitlens) 와 함께), 다음을 `.vscode/settings.json` 에 추가하세요:\n\n```json\n{\n  \"gitlens.advanced.blame.customArguments\": [\\\n    \"--ignore-revs-file\",\\\n    \".git-blame-ignore-revs\"\\\n  ]\n}\n```\n\n## Bats 테스팅\n\n로컬 테스트 실행:\n\n```shell\n./scripts/test.bash\n```\n\n테스트 작성 전 **반드시 읽기**:\n- `test/` 에 존재하는 테스트들\n- [bats-core 문서](https://bats-core.readthedocs.io/en/stable/index.html)\n- `scripts/test.bash` 에 존재하는 Bats 설정들.\n\n## Bats 팁\n\nBats 디버깅은 때에 따라 어려울 수 있습니다. 디버깅 단순화를 위해, `-t` flag로 TAP output을 사용하여 테스트 실행 중 결과물 출력을 위한 특별한 파일 디스크립터 `>&3` 를 사용할 수 있습니다. 예시:\n\n```shell\n# test/some_tests.bats\n\nprintf \"%s\\n\" \"Will not be printed during bats test/some_tests.bats\"\nprintf \"%s\\n\" \"Will be printed during bats -t test/some_tests.bats\" >&3\n```\n\nbats-core의 더 자세한 문서 [Printing to the Terminal](https://bats-core.readthedocs.io/en/stable/writing-tests.html#printing-to-the-terminal).\n\n## 풀 리퀘스트, 릴리스 & 관습적 커밋\n\n`asdf` 는 자동화 배포 툴 [Release Please](https://github.com/googleapis/release-please) 를 사용하여 자동으로 [SemVer](https://semver.org/) 버전을 올리고 [변동사항](https://github.com/asdf-vm/asdf/blob/master/CHANGELOG.md) 을 작성합니다. 이 정보들은 지난 배포들로부터 커밋 history를 읽음으로써 결정됩니다.\n\n[유의적 커밋 메세지](https://www.conventionalcommits.org/) 는 기본 브랜치의 커밋 메세지 형식이 되는 풀 리퀘스트 제목의 형식을 정의합니다. 이것은 GitHub Action에서 강제됩니다 [`amannn/action-semantic-pull-request`](https://github.com/amannn/action-semantic-pull-request).\n\n관습적인 커밋 다음 형식을 따릅니다:\n\n```\n<type>[optional scope][optional !]: <description>\n\n<!-- examples -->\nfix: some fix\nfeat: a new feature\ndocs: some documentation update\ndocs(website): some change for the website\nfeat!: feature with breaking change\n```\n\n`<types>` 의 모든 목록: `feat`, `fix`, `docs`, `style`, `refactor`, `perf`, `test`, `build`, `ci`, `chore`, `revert`.\n\n- `!`: 주요한(breaking) 변화들을 나타냅니다\n- `fix`: 새로운 SemVer `patch` 을 만듭니다\n- `feat`: 새로운 SemVer `minor` 을 만듭니다\n- `<type>!`: 새로운 SemVer `major` 을 만듭니다\n\n풀 리퀘스트 제목은 반드시 이 형식을 따라야 합니다.\n\nTIP\n\n풀 리퀘스트 제목을 관습적 커밋 메세지 형식을 사용하세요.\n\n## Docker 이미지\n\n[asdf-alpine](https://github.com/vic/asdf-alpine) 와 [asdf-ubuntu](https://github.com/vic/asdf-ubuntu) 프로젝트들은 asdf 툴들의 Dockerized 이미지들을 제공하기 위해 진행되고있습니다. 개발 서버의 베이스 혹은 프로덕션 앱들을 위해 docker 이미지들을 사용할 수 있습니다.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://asdf-vm.com/ko-kr/contribute/core", "title": "asdf 코어 기여 가이드", "description": "이 페이지는 asdf의 코어 기여 방법에 대한 가이드를 제공합니다.", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 03:17:26", "type": "overview", "page_metadata": {"title": "asdf", "description": "Manage multiple runtime versions with a single CLI tool", "viewport": "width=device-width,initial-scale=1", "language": "ko-kr", "generator": "VitePress v1.6.3", "scrapeId": "027f8aa2-2c58-4873-a833-c00cdba76027", "sourceURL": "https://asdf-vm.com/ko-kr/contribute/core", "url": "https://asdf-vm.com/ko-kr/contribute/core", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 초기 설정 in asdf-vm?\n\nAssistant: To 초기 설정 in asdf-vm, here's what you do:\nGithub의 `asdf` 를 fork하거나 clone하세요:\n\n```shell\n# clone your fork\ngit clone https://github.com/<GITHUB_USER>/asdf.git\n# or clone asdf\ngit clone https://github.com/asdf-vm/asdf.git\n```\n\n코어 개발을 위한 툴들은 이 리포지토리의 `.tool-versions` 에 있습니다. 만약 `asdf` 가 직접 관리하기를 바라신다면, 다음 플러그인들을 설치하세요:\n\n```shell\nasdf plugin add bats https://github.com/timgluz/asdf-bats.git\nasdf plugin add shellcheck https://github.com/luizm/asdf-shellcheck.git\nasdf plugin add shfmt https://github.com/luizm/asdf-shfmt.git\n```\n\n`asdf` 를 개발하기 위한 버전들을 설치하세요:\n\n```shell\nasdf install\n```\n\n로컬 머신에서 개발 도구를 손상시킬 수 있는 기능을 개발 중일 경우 `asdf` 를 사용하지 않는 것이 _좋을 수_ 있습니다. 개발 도구들의 원본 목록입니다:\n\n- [bats-core](https://github.com/bats-core/bats-core): Bash 또는 POSIX 준수 스크립트를 단위 테스트하기 위한 Bash 자동화 테스트 시스템.\n- [shellcheck](https://github.com/koalaman/shellcheck): 셸 스크립트 정적 분석 도구.\n- [shfmt](https://github.com/mvdan/sh): Bash를 지원하는 셸 parser, formatter, interpreter; shfmt 포함..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ko-kr/contribute/core", "title": "asdf 코어 기여 가이드", "description": "이 페이지는 asdf의 코어 기여 방법에 대한 가이드를 제공합니다.", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 03:17:26", "type": "section_detail", "page_metadata": {"title": "asdf", "description": "Manage multiple runtime versions with a single CLI tool", "viewport": "width=device-width,initial-scale=1", "language": "ko-kr", "generator": "VitePress v1.6.3", "scrapeId": "027f8aa2-2c58-4873-a833-c00cdba76027", "sourceURL": "https://asdf-vm.com/ko-kr/contribute/core", "url": "https://asdf-vm.com/ko-kr/contribute/core", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 개발 in asdf-vm?\n\nAssistant: To 개발 in asdf-vm, here's what you do:\n만약 설치된 `asdf` 에 영향 없이 변화들을 테스트해보시고 싶으시다면, `$ASDF_DIR` 변수를 리포지토리를 clone한 경로에 지정하시고, 그 다음 임시로 `bin` 와 `shims` 디렉토리들을 경로 앞에 추가하세요.\n\n원격 리포지토리에 커밋 혹은 push하기 전에, 당신의 코드를 format, lint, 그리고 locally test하세요. 다음 스크립트/명령어들을 사용하세요:\n\n```shell\n# Lint\n./scripts/lint.bash --check\n\n# Fix & Format\n./scripts/lint.bash --fix\n\n# Test: all tests\n./scripts/test.bash\n\n# Test: for specific command\nbats test/list_commands.bash\n```\n\nTIP\n\n**테스트 추가!** \n- 새로운 기능들과 버그 수정들의 리뷰 속도 향상을 위해 테스트들은 **필수적** 입니다. 풀 리퀘스트 요청을 만드시기 전에 새로운 코드 경로들을 추가해주세요. [bats-core 문서](https://bats-core.readthedocs.io/en/stable/index.html) 참조..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ko-kr/contribute/core", "title": "asdf 코어 기여 가이드", "description": "이 페이지는 asdf의 코어 기여 방법에 대한 가이드를 제공합니다.", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 03:17:26", "type": "section_detail", "page_metadata": {"title": "asdf", "description": "Manage multiple runtime versions with a single CLI tool", "viewport": "width=device-width,initial-scale=1", "language": "ko-kr", "generator": "VitePress v1.6.3", "scrapeId": "027f8aa2-2c58-4873-a833-c00cdba76027", "sourceURL": "https://asdf-vm.com/ko-kr/contribute/core", "url": "https://asdf-vm.com/ko-kr/contribute/core", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I gitignore in asdf-vm?\n\nAssistant: To gitignore in asdf-vm, here's what you do:\n다음은 `asdf-vm/asdf` 리포지토리에 `.gitignore` 파일입니다. 우리는 프로젝트에 관련된 특정한 파일들을 무시합니다. 운영체제, 툴, workflows에 관련된 파일들은 글로벌 `.gitignore` 설정에서 무시되어야합니다, [더 보기](http://stratus3d.com/blog/2018/06/03/stop-excluding-editor-temp-files-in-gitignore/). \n\n@/../.gitignore.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ko-kr/contribute/core", "title": "asdf 코어 기여 가이드", "description": "이 페이지는 asdf의 코어 기여 방법에 대한 가이드를 제공합니다.", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 03:17:26", "type": "section_detail", "page_metadata": {"title": "asdf", "description": "Manage multiple runtime versions with a single CLI tool", "viewport": "width=device-width,initial-scale=1", "language": "ko-kr", "generator": "VitePress v1.6.3", "scrapeId": "027f8aa2-2c58-4873-a833-c00cdba76027", "sourceURL": "https://asdf-vm.com/ko-kr/contribute/core", "url": "https://asdf-vm.com/ko-kr/contribute/core", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I .git-blame-ignore-revs in asdf-vm?\n\nAssistant: To .git-blame-ignore-revs in asdf-vm, here's what you do:\n`asdf` 는 `.git-blame-ignore-revs` 사용해 blame 실행에서 잡음을 줄입니다. 더 많은 정보 [git blame 문서](https://git-scm.com/docs/git-blame).\n\n다음과 같이 `git blame` 과 `.git-blame-ignore-revs` 을 사용:\n\n```sh\ngit blame --ignore-revs-file .git-blame-ignore-revs ./test/install_command.bats\n```\n\n선택적으로, 수동적으로 파일을 제공하는 대신 모든 `blame` 에서 해당 파일을 사용하도록 설정:\n\n```sh\ngit config blame.ignoreRevsFile .git-blame-ignore-revs\n```\n\nIDE들에서 이 파일을 사용하도록 설정할 수 있습니다. 예를 들어, VSCode를 사용하실 경우 ( [GitLens](https://marketplace.visualstudio.com/items?itemName=eamodio.gitlens) 와 함께), 다음을 `.vscode/settings.json` 에 추가하세요:\n\n```json\n{\n  \"gitlens.advanced.blame.customArguments\": [\\\n    \"--ignore-revs-file\",\\\n    \".git-blame-ignore-revs\"\\\n  ]\n}\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ko-kr/contribute/core", "title": "asdf 코어 기여 가이드", "description": "이 페이지는 asdf의 코어 기여 방법에 대한 가이드를 제공합니다.", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 03:17:26", "type": "section_detail", "page_metadata": {"title": "asdf", "description": "Manage multiple runtime versions with a single CLI tool", "viewport": "width=device-width,initial-scale=1", "language": "ko-kr", "generator": "VitePress v1.6.3", "scrapeId": "027f8aa2-2c58-4873-a833-c00cdba76027", "sourceURL": "https://asdf-vm.com/ko-kr/contribute/core", "url": "https://asdf-vm.com/ko-kr/contribute/core", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I bats 테스팅 in asdf-vm?\n\nAssistant: To bats 테스팅 in asdf-vm, here's what you do:\n로컬 테스트 실행:\n\n```shell\n./scripts/test.bash\n```\n\n테스트 작성 전 **반드시 읽기**:\n- `test/` 에 존재하는 테스트들\n- [bats-core 문서](https://bats-core.readthedocs.io/en/stable/index.html)\n- `scripts/test.bash` 에 존재하는 Bats 설정들..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ko-kr/contribute/core", "title": "asdf 코어 기여 가이드", "description": "이 페이지는 asdf의 코어 기여 방법에 대한 가이드를 제공합니다.", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 03:17:26", "type": "section_detail", "page_metadata": {"title": "asdf", "description": "Manage multiple runtime versions with a single CLI tool", "viewport": "width=device-width,initial-scale=1", "language": "ko-kr", "generator": "VitePress v1.6.3", "scrapeId": "027f8aa2-2c58-4873-a833-c00cdba76027", "sourceURL": "https://asdf-vm.com/ko-kr/contribute/core", "url": "https://asdf-vm.com/ko-kr/contribute/core", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I bats 팁 in asdf-vm?\n\nAssistant: To bats 팁 in asdf-vm, here's what you do:\nBats 디버깅은 때에 따라 어려울 수 있습니다. 디버깅 단순화를 위해, `-t` flag로 TAP output을 사용하여 테스트 실행 중 결과물 출력을 위한 특별한 파일 디스크립터 `>&3` 를 사용할 수 있습니다. 예시:\n\n```shell\n# test/some_tests.bats\n\nprintf \"%s\\n\" \"Will not be printed during bats test/some_tests.bats\"\nprintf \"%s\\n\" \"Will be printed during bats -t test/some_tests.bats\" >&3\n```\n\nbats-core의 더 자세한 문서 [Printing to the Terminal](https://bats-core.readthedocs.io/en/stable/writing-tests.html#printing-to-the-terminal)..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ko-kr/contribute/core", "title": "asdf 코어 기여 가이드", "description": "이 페이지는 asdf의 코어 기여 방법에 대한 가이드를 제공합니다.", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 03:17:26", "type": "section_detail", "page_metadata": {"title": "asdf", "description": "Manage multiple runtime versions with a single CLI tool", "viewport": "width=device-width,initial-scale=1", "language": "ko-kr", "generator": "VitePress v1.6.3", "scrapeId": "027f8aa2-2c58-4873-a833-c00cdba76027", "sourceURL": "https://asdf-vm.com/ko-kr/contribute/core", "url": "https://asdf-vm.com/ko-kr/contribute/core", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 풀 리퀘스트, 릴리스 & 관습적 커밋 in asdf-vm?\n\nAssistant: To 풀 리퀘스트, 릴리스 & 관습적 커밋 in asdf-vm, here's what you do:\n`asdf` 는 자동화 배포 툴 [Release Please](https://github.com/googleapis/release-please) 를 사용하여 자동으로 [SemVer](https://semver.org/) 버전을 올리고 [변동사항](https://github.com/asdf-vm/asdf/blob/master/CHANGELOG.md) 을 작성합니다. 이 정보들은 지난 배포들로부터 커밋 history를 읽음으로써 결정됩니다.\n\n[유의적 커밋 메세지](https://www.conventionalcommits.org/) 는 기본 브랜치의 커밋 메세지 형식이 되는 풀 리퀘스트 제목의 형식을 정의합니다. 이것은 GitHub Action에서 강제됩니다 [`amannn/action-semantic-pull-request`](https://github.com/amannn/action-semantic-pull-request).\n\n관습적인 커밋 다음 형식을 따릅니다:\n\n```\n<type>[optional scope][optional !]: <description>\n\n<!-- examples -->\nfix: some fix\nfeat: a new feature\ndocs: some documentation update\ndocs(website): some change for the website\nfeat!: feature with breaking change\n```\n\n`<types>` 의 모든 목록: `feat`, `fix`, `docs`, `style`, `refactor`, `perf`, `test`, `build`, `ci`, `chore`, `revert`.\n\n- `!`: 주요한(breaking) 변화들을 나타냅니다\n- `fix`: 새로운 SemVer `patch` 을 만듭니다\n- `feat`: 새로운 SemVer `minor` 을 만듭니다\n- `<type>!`: 새로운 SemVer `major` 을 만듭니다\n\n풀 리퀘스트 제목은 반드시 이 형식을 따라야 합니다.\n\nTIP\n\n풀 리퀘스트 제목을 관습적 커밋 메세지 형식을 사용하세요..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ko-kr/contribute/core", "title": "asdf 코어 기여 가이드", "description": "이 페이지는 asdf의 코어 기여 방법에 대한 가이드를 제공합니다.", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 03:17:26", "type": "section_detail", "page_metadata": {"title": "asdf", "description": "Manage multiple runtime versions with a single CLI tool", "viewport": "width=device-width,initial-scale=1", "language": "ko-kr", "generator": "VitePress v1.6.3", "scrapeId": "027f8aa2-2c58-4873-a833-c00cdba76027", "sourceURL": "https://asdf-vm.com/ko-kr/contribute/core", "url": "https://asdf-vm.com/ko-kr/contribute/core", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I docker 이미지 in asdf-vm?\n\nAssistant: To docker 이미지 in asdf-vm, here's what you do:\n[asdf-alpine](https://github.com/vic/asdf-alpine) 와 [asdf-ubuntu](https://github.com/vic/asdf-ubuntu) 프로젝트들은 asdf 툴들의 Dockerized 이미지들을 제공하기 위해 진행되고있습니다. 개발 서버의 베이스 혹은 프로덕션 앱들을 위해 docker 이미지들을 사용할 수 있습니다..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ko-kr/contribute/core", "title": "asdf 코어 기여 가이드", "description": "이 페이지는 asdf의 코어 기여 방법에 대한 가이드를 제공합니다.", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 03:17:26", "type": "section_detail", "page_metadata": {"title": "asdf", "description": "Manage multiple runtime versions with a single CLI tool", "viewport": "width=device-width,initial-scale=1", "language": "ko-kr", "generator": "VitePress v1.6.3", "scrapeId": "027f8aa2-2c58-4873-a833-c00cdba76027", "sourceURL": "https://asdf-vm.com/ko-kr/contribute/core", "url": "https://asdf-vm.com/ko-kr/contribute/core", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you give me some code examples for asdf 코어 기여 가이드 in asdf-vm?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**초기 설정 - Git Clone**:\n\n```yaml\n# clone your fork\ngit clone https://github.com/<GITHUB_USER>/asdf.git\n# or clone asdf\ngit clone https://github.com/asdf-vm/asdf.git\n```\n\nThis snippet shows you how to 초기 설정 - git clone, which is an important aspect of asdf 코어 기여 가이드.\n\n**코어 개발 툴 설치**:\n\n```yaml\nasdf plugin add bats https://github.com/timgluz/asdf-bats.git\nasdf plugin add shellcheck https://github.com/luizm/asdf-shellcheck.git\nasdf plugin add shfmt https://github.com/luizm/asdf-shfmt.git\n```\n\nThis snippet shows you how to 코어 개발 툴 설치, which is an important aspect of asdf 코어 기여 가이드.\n\n**버전 설치**:\n\n```yaml\nasdf install\n```\n\nThis snippet shows you how to 버전 설치, which is an important aspect of asdf 코어 기여 가이드.\n\n**Linting**:\n\n```yaml\n# Lint\n./scripts/lint.bash --check\n```\n\nThis snippet shows you how to linting, which is an important aspect of asdf 코어 기여 가이드.\n\n**Fix & Format**:\n\n```yaml\n# Fix & Format\n./scripts/lint.bash --fix\n```\n\nThis snippet shows you how to fix & format, which is an important aspect of asdf 코어 기여 가이드.\n\n**모든 테스트 실행**:\n\n```yaml\n# Test: all tests\n./scripts/test.bash\n```\n\nThis snippet shows you how to 모든 테스트 실행, which is an important aspect of asdf 코어 기여 가이드.\n\n**특정 명령어 테스트**:\n\n```yaml\n# Test: for specific command\nbats test/list_commands.bash\n```\n\nThis snippet shows you how to 특정 명령어 테스트, which is an important aspect of asdf 코어 기여 가이드.\n\n**Git Blame 사용**:\n\n```yaml\ngit blame --ignore-revs-file .git-blame-ignore-revs ./test/install_command.bats\n```\n\nThis snippet shows you how to git blame 사용, which is an important aspect of asdf 코어 기여 가이드.\n\n**Git Config 설정**:\n\n```yaml\ngit config blame.ignoreRevsFile .git-blame-ignore-revs\n```\n\nThis snippet shows you how to git config 설정, which is an important aspect of asdf 코어 기여 가이드.\n\n**VSCode 설정**:\n\n```yaml\n{\n  \"gitlens.advanced.blame.customArguments\": [\\\n    \"--ignore-revs-file\",\\\n    \".git-blame-ignore-revs\"\\\n  ]\n}\n```\n\nThis snippet shows you how to vscode 설정, which is an important aspect of asdf 코어 기여 가이드.\n\n", "metadata": {"source_url": "https://asdf-vm.com/ko-kr/contribute/core", "title": "asdf 코어 기여 가이드", "description": "이 페이지는 asdf의 코어 기여 방법에 대한 가이드를 제공합니다.", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 03:17:26", "type": "code_examples", "page_metadata": {"title": "asdf", "description": "Manage multiple runtime versions with a single CLI tool", "viewport": "width=device-width,initial-scale=1", "language": "ko-kr", "generator": "VitePress v1.6.3", "scrapeId": "027f8aa2-2c58-4873-a833-c00cdba76027", "sourceURL": "https://asdf-vm.com/ko-kr/contribute/core", "url": "https://asdf-vm.com/ko-kr/contribute/core", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: What are some tips for using asdf 코어 기여 가이드 in asdf-vm effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\n테스트 추가! - 새로운 기능들과 버그 수정들의 리뷰 속도 향상을 위해 테스트들은 필수적 입니다. 풀 리퀘스트 요청을 만드시기 전에 새로운 코드 경로들을 추가해주세요.\n\n풀 리퀘스트 제목을 관습적 커밋 메세지 형식을 사용하세요.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://asdf-vm.com/ko-kr/contribute/core", "title": "asdf 코어 기여 가이드", "description": "이 페이지는 asdf의 코어 기여 방법에 대한 가이드를 제공합니다.", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 03:17:26", "type": "best_practices", "page_metadata": {"title": "asdf", "description": "Manage multiple runtime versions with a single CLI tool", "viewport": "width=device-width,initial-scale=1", "language": "ko-kr", "generator": "VitePress v1.6.3", "scrapeId": "027f8aa2-2c58-4873-a833-c00cdba76027", "sourceURL": "https://asdf-vm.com/ko-kr/contribute/core", "url": "https://asdf-vm.com/ko-kr/contribute/core", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you explain what 자주 묻는 질문 is in asdf-vm?\n\nAssistant: Sure, I'd be happy to explain 자주 묻는 질문 in asdf-vm.\n\n# 자주 묻는 질문\n\n`asdf` 에 관련된 공통된 질문들입니다.Here's a quick rundown of what this is about:\n\n## WSL1을 지원하나요?\n\nWSL1 ( [Windows Subsystem for Linux](https://en.wikipedia.org/wiki/Windows_Subsystem_for_Linux) 1)는 공식적으로 지원되지 않습니다. 어떤 부분의 `asdf` 의 제대로 동작하지 않을 수 있습니다. 우리는 WSL1의 공식 지원을 추가할 계획이 없습니다.\n\n## WSL2을 지원하나요?\n\nWSL2 ( [Windows Subsystem for Linux](https://en.wikipedia.org/wiki/Windows_Subsystem_for_Linux#WSL_2) 2)는 당신이 선택한 WSL distro를 위한 설치 & dependency 설명서를 따르면 작동합니다.\n\n중요한 것은, WSL2는 _오직_ 현재 작업 디렉토리가 Unix 드라이브 그리고 Windows 드라이브에 종속되어 있지 않을때 정상적으로 동작합니다.\n\n우리는 호스트 runner support가 GitHub Actions에서 사용가능할 때 WSL2에서 테스트 suite를 진행할 계획입니다만, 현재는 아직 이용가능하지 않은 것 같습니다.\n\n## 새롭게 설치된 실행파일이 동작하지 않나요?\n\n> 방금 `npm install -g yarn`, 그러나 `yarn` 을 실행시킬 수 없습니다. 어떻게 해야하나요?\n\n`asdf` 는 [shims](https://en.wikipedia.org/wiki/Shim_(computing)) 를 사용하여 실행파일들을 관리합니다. 플러그인에 의해서 설치되는 실행파일들은 자동적으로 shim이 생성되지만, `asdf` 가 관리하고 있는 툴에 의해서 실행파일이 설치 된 경우는 shim을 생성해야 한다고 하는 것을 `asdf` 에 알려줄 필요가 있습니다. 이러한 경우, [Yarn](https://yarnpkg.com/) 의 shim을 생성하기 위해 [`asdf reshim` 명령어 문서](https://asdf-vm.com/ko-kr/manage/core.html#Shim-%EC%9E%AC%EC%83%9D%EC%84%B1) 를 참고하세요.\n\n## 셸이 새롭게 설치된 shims들을 감지하지 못하나요?\n\n만약 `asdf reshim` 가 문제를 해결하지 못한다면, 대부분의 경우 `asdf.sh` 혹은 `asdf.fish` sourcing이 당신의 셸 설정 파일 ( `.bash_profile`, `.zshrc`, `config.fish` etc) **아래쪽에** 있지 _않을_ 가능성이 높습니다. 당신의 `$PATH` 가 설정 된 **후에** 그리고 사용중인 프레임워크 (oh-my-zsh etc)가 source 된 **후에** source 되어야 합니다.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://asdf-vm.com/ko-kr/more/faq", "title": "자주 묻는 질문", "description": "`asdf` 에 관련된 공통된 질문들입니다.", "has_code_examples": false, "has_best_practices": false, "section_count": 4, "timestamp": "2025-03-01 03:17:46", "type": "overview", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "title": "자주 묻는 질문 | asdf", "language": "ko-kr", "generator": "VitePress v1.6.3", "scrapeId": "668b2d8c-0830-43cc-bb10-b6be86db3524", "sourceURL": "https://asdf-vm.com/ko-kr/more/faq", "url": "https://asdf-vm.com/ko-kr/more/faq", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I wsl1을 지원하나요? in asdf-vm?\n\nAssistant: To wsl1을 지원하나요? in asdf-vm, here's what you do:\nWSL1 ( [Windows Subsystem for Linux](https://en.wikipedia.org/wiki/Windows_Subsystem_for_Linux) 1)는 공식적으로 지원되지 않습니다. 어떤 부분의 `asdf` 의 제대로 동작하지 않을 수 있습니다. 우리는 WSL1의 공식 지원을 추가할 계획이 없습니다..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ko-kr/more/faq", "title": "자주 묻는 질문", "description": "`asdf` 에 관련된 공통된 질문들입니다.", "has_code_examples": false, "has_best_practices": false, "section_count": 4, "timestamp": "2025-03-01 03:17:46", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "title": "자주 묻는 질문 | asdf", "language": "ko-kr", "generator": "VitePress v1.6.3", "scrapeId": "668b2d8c-0830-43cc-bb10-b6be86db3524", "sourceURL": "https://asdf-vm.com/ko-kr/more/faq", "url": "https://asdf-vm.com/ko-kr/more/faq", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I wsl2을 지원하나요? in asdf-vm?\n\nAssistant: To wsl2을 지원하나요? in asdf-vm, here's what you do:\nWSL2 ( [Windows Subsystem for Linux](https://en.wikipedia.org/wiki/Windows_Subsystem_for_Linux#WSL_2) 2)는 당신이 선택한 WSL distro를 위한 설치 & dependency 설명서를 따르면 작동합니다.\n\n중요한 것은, WSL2는 _오직_ 현재 작업 디렉토리가 Unix 드라이브 그리고 Windows 드라이브에 종속되어 있지 않을때 정상적으로 동작합니다.\n\n우리는 호스트 runner support가 GitHub Actions에서 사용가능할 때 WSL2에서 테스트 suite를 진행할 계획입니다만, 현재는 아직 이용가능하지 않은 것 같습니다..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ko-kr/more/faq", "title": "자주 묻는 질문", "description": "`asdf` 에 관련된 공통된 질문들입니다.", "has_code_examples": false, "has_best_practices": false, "section_count": 4, "timestamp": "2025-03-01 03:17:46", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "title": "자주 묻는 질문 | asdf", "language": "ko-kr", "generator": "VitePress v1.6.3", "scrapeId": "668b2d8c-0830-43cc-bb10-b6be86db3524", "sourceURL": "https://asdf-vm.com/ko-kr/more/faq", "url": "https://asdf-vm.com/ko-kr/more/faq", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 새롭게 설치된 실행파일이 동작하지 않나요? in asdf-vm?\n\nAssistant: To 새롭게 설치된 실행파일이 동작하지 않나요? in asdf-vm, here's what you do:\n> 방금 `npm install -g yarn`, 그러나 `yarn` 을 실행시킬 수 없습니다. 어떻게 해야하나요?\n\n`asdf` 는 [shims](https://en.wikipedia.org/wiki/Shim_(computing)) 를 사용하여 실행파일들을 관리합니다. 플러그인에 의해서 설치되는 실행파일들은 자동적으로 shim이 생성되지만, `asdf` 가 관리하고 있는 툴에 의해서 실행파일이 설치 된 경우는 shim을 생성해야 한다고 하는 것을 `asdf` 에 알려줄 필요가 있습니다. 이러한 경우, [Yarn](https://yarnpkg.com/) 의 shim을 생성하기 위해 [`asdf reshim` 명령어 문서](https://asdf-vm.com/ko-kr/manage/core.html#Shim-%EC%9E%AC%EC%83%9D%EC%84%B1) 를 참고하세요..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ko-kr/more/faq", "title": "자주 묻는 질문", "description": "`asdf` 에 관련된 공통된 질문들입니다.", "has_code_examples": false, "has_best_practices": false, "section_count": 4, "timestamp": "2025-03-01 03:17:46", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "title": "자주 묻는 질문 | asdf", "language": "ko-kr", "generator": "VitePress v1.6.3", "scrapeId": "668b2d8c-0830-43cc-bb10-b6be86db3524", "sourceURL": "https://asdf-vm.com/ko-kr/more/faq", "url": "https://asdf-vm.com/ko-kr/more/faq", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 셸이 새롭게 설치된 shims들을 감지하지 못하나요? in asdf-vm?\n\nAssistant: To 셸이 새롭게 설치된 shims들을 감지하지 못하나요? in asdf-vm, here's what you do:\n만약 `asdf reshim` 가 문제를 해결하지 못한다면, 대부분의 경우 `asdf.sh` 혹은 `asdf.fish` sourcing이 당신의 셸 설정 파일 ( `.bash_profile`, `.zshrc`, `config.fish` etc) **아래쪽에** 있지 _않을_ 가능성이 높습니다. 당신의 `$PATH` 가 설정 된 **후에** 그리고 사용중인 프레임워크 (oh-my-zsh etc)가 source 된 **후에** source 되어야 합니다..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ko-kr/more/faq", "title": "자주 묻는 질문", "description": "`asdf` 에 관련된 공통된 질문들입니다.", "has_code_examples": false, "has_best_practices": false, "section_count": 4, "timestamp": "2025-03-01 03:17:46", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "title": "자주 묻는 질문 | asdf", "language": "ko-kr", "generator": "VitePress v1.6.3", "scrapeId": "668b2d8c-0830-43cc-bb10-b6be86db3524", "sourceURL": "https://asdf-vm.com/ko-kr/more/faq", "url": "https://asdf-vm.com/ko-kr/more/faq", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you explain what 모든 명령어 is in asdf-vm?\n\nAssistant: Sure, I'd be happy to explain 모든 명령어 in asdf-vm.\n\n# 모든 명령어\n\n다음 목록은 `asdf` 에서 이용가능한 모든 명령어들입니다. 해당 목록은 `asdf help` 명령어를 통해 확인가능합니다.Here's a quick rundown of what this is about:\n\n## MANAGE PLUGINS\n\nasdf plugin add <name> [<git-url>]      Add a plugin from the plugin repo OR,\n                                        add a Git repo as a plugin by\n                                        specifying the name and repo url\nasdf plugin list [--urls] [--refs]      List installed plugins. Optionally show\n                                        git urls and git-ref\nasdf plugin list all                    List plugins registered on asdf-plugins\n                                        repository with URLs\nasdf plugin remove <name>               Remove plugin and package versions\nasdf plugin update <name> [<git-ref>]   Update a plugin to latest commit on\n                                        default branch or a particular git-ref\nasdf plugin update --all                Update all plugins to latest commit on\n                                        default branch\n\n## MANAGE TOOLS\n\nasdf current                            Display current version set or being\n                                        used for all packages\nasdf current <name>                     Display current version set or being\n                                        used for package\nasdf help <name> [<version>]            Output documentation for plugin and tool\nasdf install                            Install all the package versions listed\n                                        in the .tool-versions file\nasdf install <name>                     Install one tool at the version\n                                        specified in the .tool-versions file\nasdf install <name> <version>           Install a specific version of a package\nasdf install <name> latest[:<version>]  Install the latest stable version of a\n                                        package, or with optional version,\n                                        install the latest stable version that\n                                        begins with the given string\nasdf latest <name> [<version>]          Show latest stable version of a package\nasdf latest --all                       Show latest stable version of all the\n                                        packages and if they are installed\nasdf list <name> [version]              List installed versions of a package and\n                                        optionally filter the versions\nasdf list all <name> [<version>]        List all versions of a package and\n                                        optionally filter the returned versions\nasdf set [-u] [-p] <name> <versions...> Set a tool version in a .tool-version in\n                                        the current directory, or a parent\n                                        directory.\nasdf uninstall <name> <version>         Remove a specific version of a package\nasdf where <name> [<version>]           Display install path for an installed\n                                        or current version\nasdf which <command>                    Display the path to an executable\n\n## UTILS\n\nasdf exec <command> [args...]           Executes the command shim for current version\nasdf env <command> [util]               Runs util (default: `env`) inside the\n                                        environment used for command shim execution.\nasdf info                               Print OS, Shell and ASDF debug information.\nasdf version                            Print the currently installed version of ASDF\nasdf reshim <name> <version>            Recreate shims for version of a package\nasdf shimversions <command>             List the plugins and versions that\n                                        provide a command\n\n## RESOURCES\n\nGitHub: https://github.com/asdf-vm/asdf\nDocs:   https://asdf-vm.com\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://asdf-vm.com/ko-kr/manage/commands", "title": "모든 명령어", "description": "다음 목록은 `asdf` 에서 이용가능한 모든 명령어들입니다. 해당 목록은 `asdf help` 명령어를 통해 확인가능합니다.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:18:17", "type": "overview", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "language": "ko-kr", "description": "Manage multiple runtime versions with a single CLI tool", "title": "모든 명령어 | asdf", "generator": "VitePress v1.6.3", "scrapeId": "8fffea61-89a0-4541-9541-9229446c7b11", "sourceURL": "https://asdf-vm.com/ko-kr/manage/commands", "url": "https://asdf-vm.com/ko-kr/manage/commands", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I manage plugins in asdf-vm?\n\nAssistant: To manage plugins in asdf-vm, here's what you do:\nasdf plugin add <name> [<git-url>]      Add a plugin from the plugin repo OR,\n                                        add a Git repo as a plugin by\n                                        specifying the name and repo url\nasdf plugin list [--urls] [--refs]      List installed plugins. Optionally show\n                                        git urls and git-ref\nasdf plugin list all                    List plugins registered on asdf-plugins\n                                        repository with URLs\nasdf plugin remove <name>               Remove plugin and package versions\nasdf plugin update <name> [<git-ref>]   Update a plugin to latest commit on\n                                        default branch or a particular git-ref\nasdf plugin update --all                Update all plugins to latest commit on\n                                        default branch.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ko-kr/manage/commands", "title": "모든 명령어", "description": "다음 목록은 `asdf` 에서 이용가능한 모든 명령어들입니다. 해당 목록은 `asdf help` 명령어를 통해 확인가능합니다.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:18:17", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "language": "ko-kr", "description": "Manage multiple runtime versions with a single CLI tool", "title": "모든 명령어 | asdf", "generator": "VitePress v1.6.3", "scrapeId": "8fffea61-89a0-4541-9541-9229446c7b11", "sourceURL": "https://asdf-vm.com/ko-kr/manage/commands", "url": "https://asdf-vm.com/ko-kr/manage/commands", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I manage tools in asdf-vm?\n\nAssistant: To manage tools in asdf-vm, here's what you do:\nasdf current                            Display current version set or being\n                                        used for all packages\nasdf current <name>                     Display current version set or being\n                                        used for package\nasdf help <name> [<version>]            Output documentation for plugin and tool\nasdf install                            Install all the package versions listed\n                                        in the .tool-versions file\nasdf install <name>                     Install one tool at the version\n                                        specified in the .tool-versions file\nasdf install <name> <version>           Install a specific version of a package\nasdf install <name> latest[:<version>]  Install the latest stable version of a\n                                        package, or with optional version,\n                                        install the latest stable version that\n                                        begins with the given string\nasdf latest <name> [<version>]          Show latest stable version of a package\nasdf latest --all                       Show latest stable version of all the\n                                        packages and if they are installed\nasdf list <name> [version]              List installed versions of a package and\n                                        optionally filter the versions\nasdf list all <name> [<version>]        List all versions of a package and\n                                        optionally filter the returned versions\nasdf set [-u] [-p] <name> <versions...> Set a tool version in a .tool-version in\n                                        the current directory, or a parent\n                                        directory.\nasdf uninstall <name> <version>         Remove a specific version of a package\nasdf where <name> [<version>]           Display install path for an installed\n                                        or current version\nasdf which <command>                    Display the path to an executable.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ko-kr/manage/commands", "title": "모든 명령어", "description": "다음 목록은 `asdf` 에서 이용가능한 모든 명령어들입니다. 해당 목록은 `asdf help` 명령어를 통해 확인가능합니다.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:18:17", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "language": "ko-kr", "description": "Manage multiple runtime versions with a single CLI tool", "title": "모든 명령어 | asdf", "generator": "VitePress v1.6.3", "scrapeId": "8fffea61-89a0-4541-9541-9229446c7b11", "sourceURL": "https://asdf-vm.com/ko-kr/manage/commands", "url": "https://asdf-vm.com/ko-kr/manage/commands", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I utils in asdf-vm?\n\nAssistant: To utils in asdf-vm, here's what you do:\nasdf exec <command> [args...]           Executes the command shim for current version\nasdf env <command> [util]               Runs util (default: `env`) inside the\n                                        environment used for command shim execution.\nasdf info                               Print OS, Shell and ASDF debug information.\nasdf version                            Print the currently installed version of ASDF\nasdf reshim <name> <version>            Recreate shims for version of a package\nasdf shimversions <command>             List the plugins and versions that\n                                        provide a command.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ko-kr/manage/commands", "title": "모든 명령어", "description": "다음 목록은 `asdf` 에서 이용가능한 모든 명령어들입니다. 해당 목록은 `asdf help` 명령어를 통해 확인가능합니다.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:18:17", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "language": "ko-kr", "description": "Manage multiple runtime versions with a single CLI tool", "title": "모든 명령어 | asdf", "generator": "VitePress v1.6.3", "scrapeId": "8fffea61-89a0-4541-9541-9229446c7b11", "sourceURL": "https://asdf-vm.com/ko-kr/manage/commands", "url": "https://asdf-vm.com/ko-kr/manage/commands", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I resources in asdf-vm?\n\nAssistant: To resources in asdf-vm, here's what you do:\nGitHub: https://github.com/asdf-vm/asdf\nDocs:   https://asdf-vm.com.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ko-kr/manage/commands", "title": "모든 명령어", "description": "다음 목록은 `asdf` 에서 이용가능한 모든 명령어들입니다. 해당 목록은 `asdf help` 명령어를 통해 확인가능합니다.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:18:17", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "language": "ko-kr", "description": "Manage multiple runtime versions with a single CLI tool", "title": "모든 명령어 | asdf", "generator": "VitePress v1.6.3", "scrapeId": "8fffea61-89a0-4541-9541-9229446c7b11", "sourceURL": "https://asdf-vm.com/ko-kr/manage/commands", "url": "https://asdf-vm.com/ko-kr/manage/commands", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you give me some code examples for 모든 명령어 in asdf-vm?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**MANAGE PLUGINS**:\n\n```yaml\nasdf plugin add <name> [<git-url>]      Add a plugin from the plugin repo OR,\n                                        add a Git repo as a plugin by\n                                        specifying the name and repo url\nasdf plugin list [--urls] [--refs]      List installed plugins. Optionally show\n                                        git urls and git-ref\nasdf plugin list all                    List plugins registered on asdf-plugins\n                                        repository with URLs\nasdf plugin remove <name>               Remove plugin and package versions\nasdf plugin update <name> [<git-ref>]   Update a plugin to latest commit on\n                                        default branch or a particular git-ref\nasdf plugin update --all                Update all plugins to latest commit on\n                                        default branch\n```\n\nThis snippet shows you how to manage plugins, which is an important aspect of 모든 명령어.\n\n**MANAGE TOOLS**:\n\n```yaml\nasdf current                            Display current version set or being\n                                        used for all packages\nasdf current <name>                     Display current version set or being\n                                        used for package\nasdf help <name> [<version>]            Output documentation for plugin and tool\nasdf install                            Install all the package versions listed\n                                        in the .tool-versions file\nasdf install <name>                     Install one tool at the version\n                                        specified in the .tool-versions file\nasdf install <name> <version>           Install a specific version of a package\nasdf install <name> latest[:<version>]  Install the latest stable version of a\n                                        package, or with optional version,\n                                        install the latest stable version that\n                                        begins with the given string\nasdf latest <name> [<version>]          Show latest stable version of a package\nasdf latest --all                       Show latest stable version of all the\n                                        packages and if they are installed\nasdf list <name> [version]              List installed versions of a package and\n                                        optionally filter the versions\nasdf list all <name> [<version>]        List all versions of a package and\n                                        optionally filter the returned versions\nasdf set [-u] [-p] <name> <versions...> Set a tool version in a .tool-version in\n                                        the current directory, or a parent\n                                        directory.\nasdf uninstall <name> <version>         Remove a specific version of a package\nasdf where <name> [<version>]           Display install path for an installed\n                                        or current version\nasdf which <command>                    Display the path to an executable\n```\n\nThis snippet shows you how to manage tools, which is an important aspect of 모든 명령어.\n\n**UTILS**:\n\n```yaml\nasdf exec <command> [args...]           Executes the command shim for current version\nasdf env <command> [util]               Runs util (default: `env`) inside the\n                                        environment used for command shim execution.\nasdf info                               Print OS, Shell and ASDF debug information.\nasdf version                            Print the currently installed version of ASDF\nasdf reshim <name> <version>            Recreate shims for version of a package\nasdf shimversions <command>             List the plugins and versions that\n                                        provide a command\n```\n\nThis snippet shows you how to utils, which is an important aspect of 모든 명령어.\n\n", "metadata": {"source_url": "https://asdf-vm.com/ko-kr/manage/commands", "title": "모든 명령어", "description": "다음 목록은 `asdf` 에서 이용가능한 모든 명령어들입니다. 해당 목록은 `asdf help` 명령어를 통해 확인가능합니다.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:18:17", "type": "code_examples", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "language": "ko-kr", "description": "Manage multiple runtime versions with a single CLI tool", "title": "모든 명령어 | asdf", "generator": "VitePress v1.6.3", "scrapeId": "8fffea61-89a0-4541-9541-9229446c7b11", "sourceURL": "https://asdf-vm.com/ko-kr/manage/commands", "url": "https://asdf-vm.com/ko-kr/manage/commands", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: What are some tips for using 모든 명령어 in asdf-vm effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nUse `asdf help` to see the list of available commands and their descriptions.\n\nWhen adding plugins, you can specify a Git URL if the plugin is not in the default repository.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://asdf-vm.com/ko-kr/manage/commands", "title": "모든 명령어", "description": "다음 목록은 `asdf` 에서 이용가능한 모든 명령어들입니다. 해당 목록은 `asdf help` 명령어를 통해 확인가능합니다.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:18:17", "type": "best_practices", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "language": "ko-kr", "description": "Manage multiple runtime versions with a single CLI tool", "title": "모든 명령어 | asdf", "generator": "VitePress v1.6.3", "scrapeId": "8fffea61-89a0-4541-9541-9229446c7b11", "sourceURL": "https://asdf-vm.com/ko-kr/manage/commands", "url": "https://asdf-vm.com/ko-kr/manage/commands", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you explain what 감사인사 is in asdf-vm?\n\nAssistant: Sure, I'd be happy to explain 감사인사 in asdf-vm.\n\n# 감사인사\n\nasdf 저자들 & 기여자들을 위한 감사 페이지!Here's a quick rundown of what this is about:\n\n## Credits\n\n나 ( [@HashNuke](https://github.com/HashNuke)), 고열, 감기, 기침.\n\n2014년부터 종료까지의 저작권 ( [MIT License](https://github.com/asdf-vm/asdf/blob/master/LICENSE))\n\n## 관리자\n\n- [@HashNuke](https://github.com/HashNuke)\n- [@danhper](https://github.com/danhper)\n- [@Stratus3D](https://github.com/Stratus3D)\n- [@vic](https://github.com/vic)\n- [@jthegedus](https://github.com/jthegedus)\n\n## 기여자\n\nGitHub에서 [기여자들의 목록](https://github.com/asdf-vm/asdf/graphs/contributors) 를 확인하세요 🙏\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://asdf-vm.com/ko-kr/more/thanks", "title": "감사인사", "description": "asdf 저자들 & 기여자들을 위한 감사 페이지!", "has_code_examples": false, "has_best_practices": false, "section_count": 3, "timestamp": "2025-03-01 03:18:40", "type": "overview", "page_metadata": {"title": "감사인사 | asdf", "description": "Manage multiple runtime versions with a single CLI tool", "language": "ko-kr", "viewport": "width=device-width,initial-scale=1", "generator": "VitePress v1.6.3", "scrapeId": "1fe483f0-7ce9-4589-8ca3-bca90a9501a7", "sourceURL": "https://asdf-vm.com/ko-kr/more/thanks", "url": "https://asdf-vm.com/ko-kr/more/thanks", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I credits in asdf-vm?\n\nAssistant: To credits in asdf-vm, here's what you do:\n나 ( [@HashNuke](https://github.com/HashNuke)), 고열, 감기, 기침.\n\n2014년부터 종료까지의 저작권 ( [MIT License](https://github.com/asdf-vm/asdf/blob/master/LICENSE)).\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ko-kr/more/thanks", "title": "감사인사", "description": "asdf 저자들 & 기여자들을 위한 감사 페이지!", "has_code_examples": false, "has_best_practices": false, "section_count": 3, "timestamp": "2025-03-01 03:18:40", "type": "section_detail", "page_metadata": {"title": "감사인사 | asdf", "description": "Manage multiple runtime versions with a single CLI tool", "language": "ko-kr", "viewport": "width=device-width,initial-scale=1", "generator": "VitePress v1.6.3", "scrapeId": "1fe483f0-7ce9-4589-8ca3-bca90a9501a7", "sourceURL": "https://asdf-vm.com/ko-kr/more/thanks", "url": "https://asdf-vm.com/ko-kr/more/thanks", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 관리자 in asdf-vm?\n\nAssistant: To 관리자 in asdf-vm, here's what you do:\n- [@HashNuke](https://github.com/HashNuke)\n- [@danhper](https://github.com/danhper)\n- [@Stratus3D](https://github.com/Stratus3D)\n- [@vic](https://github.com/vic)\n- [@jthegedus](https://github.com/jthegedus).\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ko-kr/more/thanks", "title": "감사인사", "description": "asdf 저자들 & 기여자들을 위한 감사 페이지!", "has_code_examples": false, "has_best_practices": false, "section_count": 3, "timestamp": "2025-03-01 03:18:40", "type": "section_detail", "page_metadata": {"title": "감사인사 | asdf", "description": "Manage multiple runtime versions with a single CLI tool", "language": "ko-kr", "viewport": "width=device-width,initial-scale=1", "generator": "VitePress v1.6.3", "scrapeId": "1fe483f0-7ce9-4589-8ca3-bca90a9501a7", "sourceURL": "https://asdf-vm.com/ko-kr/more/thanks", "url": "https://asdf-vm.com/ko-kr/more/thanks", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 기여자 in asdf-vm?\n\nAssistant: To 기여자 in asdf-vm, here's what you do:\nGitHub에서 [기여자들의 목록](https://github.com/asdf-vm/asdf/graphs/contributors) 를 확인하세요 🙏.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ko-kr/more/thanks", "title": "감사인사", "description": "asdf 저자들 & 기여자들을 위한 감사 페이지!", "has_code_examples": false, "has_best_practices": false, "section_count": 3, "timestamp": "2025-03-01 03:18:40", "type": "section_detail", "page_metadata": {"title": "감사인사 | asdf", "description": "Manage multiple runtime versions with a single CLI tool", "language": "ko-kr", "viewport": "width=device-width,initial-scale=1", "generator": "VitePress v1.6.3", "scrapeId": "1fe483f0-7ce9-4589-8ca3-bca90a9501a7", "sourceURL": "https://asdf-vm.com/ko-kr/more/thanks", "url": "https://asdf-vm.com/ko-kr/more/thanks", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you explain what GitHub Actions is in asdf-vm?\n\nAssistant: Sure, I'd be happy to explain GitHub Actions in asdf-vm.\n\n# GitHub Actions\n\nThanks for your interest, please see the asdf actions repo for their existing Issues, conversations and Contributing Guidelines.Here's a quick rundown of what this is about:\n\n## Introduction\n\nThanks for your interest, please see the asdf actions repo for their existing Issues, conversations and Contributing Guidelines.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://asdf-vm.com/contribute/github-actions.html", "title": "GitHub Actions", "description": "Thanks for your interest, please see the asdf actions repo for their existing Issues, conversations and Contributing Guidelines.", "has_code_examples": false, "has_best_practices": false, "section_count": 1, "timestamp": "2025-03-01 03:18:49", "type": "overview", "page_metadata": {"language": "en-US", "title": "GitHub Actions | asdf", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "scrapeId": "2e949c3e-b5bf-425d-b2a6-2ca3e79de7a7", "sourceURL": "https://asdf-vm.com/contribute/github-actions.html", "url": "https://asdf-vm.com/contribute/github-actions.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I introduction in asdf-vm?\n\nAssistant: To introduction in asdf-vm, here's what you do:\nThanks for your interest, please see the asdf actions repo for their existing Issues, conversations and Contributing Guidelines..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/contribute/github-actions.html", "title": "GitHub Actions", "description": "Thanks for your interest, please see the asdf actions repo for their existing Issues, conversations and Contributing Guidelines.", "has_code_examples": false, "has_best_practices": false, "section_count": 1, "timestamp": "2025-03-01 03:18:49", "type": "section_detail", "page_metadata": {"language": "en-US", "title": "GitHub Actions | asdf", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "scrapeId": "2e949c3e-b5bf-425d-b2a6-2ca3e79de7a7", "sourceURL": "https://asdf-vm.com/contribute/github-actions.html", "url": "https://asdf-vm.com/contribute/github-actions.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you explain what Community Projects is in asdf-vm?\n\nAssistant: Sure, I'd be happy to explain Community Projects in asdf-vm.\n\n# Community Projects\n\nHere are some community projects related to `asdf`.Here's a quick rundown of what this is about:\n\n## Community Projects\n\nHere are some community projects related to `asdf`:\n\n- [asdf-community](https://github.com/asdf-community): A collaborative, community-driven project for long-term maintenance of asdf plugins.\n- [asdf dev container](https://github.com/iloveitaly/asdf-devcontainer): A [GitHub Dev Container](https://docs.github.com/en/codespaces/setting-up-your-project-for-codespaces/introduction-to-dev-containers) supporting asdf managed tools in GitHub Codespaces.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://asdf-vm.com/more/community-projects.html", "title": "Community Projects", "description": "Here are some community projects related to `asdf`.", "has_code_examples": false, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 03:18:58", "type": "overview", "page_metadata": {"description": "Manage multiple runtime versions with a single CLI tool", "language": "en-US", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "title": "Community Projects | asdf", "scrapeId": "44084102-c2ac-4108-836b-394b125f0c1a", "sourceURL": "https://asdf-vm.com/more/community-projects.html", "url": "https://asdf-vm.com/more/community-projects.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I community projects in asdf-vm?\n\nAssistant: To community projects in asdf-vm, here's what you do:\nHere are some community projects related to `asdf`:\n\n- [asdf-community](https://github.com/asdf-community): A collaborative, community-driven project for long-term maintenance of asdf plugins.\n- [asdf dev container](https://github.com/iloveitaly/asdf-devcontainer): A [GitHub Dev Container](https://docs.github.com/en/codespaces/setting-up-your-project-for-codespaces/introduction-to-dev-containers) supporting asdf managed tools in GitHub Codespaces..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/more/community-projects.html", "title": "Community Projects", "description": "Here are some community projects related to `asdf`.", "has_code_examples": false, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 03:18:58", "type": "section_detail", "page_metadata": {"description": "Manage multiple runtime versions with a single CLI tool", "language": "en-US", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "title": "Community Projects | asdf", "scrapeId": "44084102-c2ac-4108-836b-394b125f0c1a", "sourceURL": "https://asdf-vm.com/more/community-projects.html", "url": "https://asdf-vm.com/more/community-projects.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: What are some tips for using Community Projects in asdf-vm effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nasdf core team do not own these projects or their code.\n\nasdf core are not responsible for the quality or security as they relate to those listed here.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://asdf-vm.com/more/community-projects.html", "title": "Community Projects", "description": "Here are some community projects related to `asdf`.", "has_code_examples": false, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 03:18:58", "type": "best_practices", "page_metadata": {"description": "Manage multiple runtime versions with a single CLI tool", "language": "en-US", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "title": "Community Projects | asdf", "scrapeId": "44084102-c2ac-4108-836b-394b125f0c1a", "sourceURL": "https://asdf-vm.com/more/community-projects.html", "url": "https://asdf-vm.com/more/community-projects.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you explain what All Commands is in asdf-vm?\n\nAssistant: Sure, I'd be happy to explain All Commands in asdf-vm.\n\n# All Commands\n\nA lista de todos os comandos disponíveis em asdf. Esta lista é o texto do comando asdf help.Here's a quick rundown of what this is about:\n\n## MANAGE PLUGINS\n\nasdf plugin add <name> [<git-url>]      Add a plugin from the plugin repo OR,\n                                        add a Git repo as a plugin by\n                                        specifying the name and repo url\nasdf plugin list [--urls] [--refs]      List installed plugins. Optionally show\n                                        git urls and git-ref\nasdf plugin list all                    List plugins registered on asdf-plugins\n                                        repository with URLs\nasdf plugin remove <name>               Remove plugin and package versions\nasdf plugin update <name> [<git-ref>]   Update a plugin to latest commit on\n                                        default branch or a particular git-ref\nasdf plugin update --all                Update all plugins to latest commit on\n                                        default branch\n\n## MANAGE TOOLS\n\nasdf current                            Display current version set or being\n                                        used for all packages\nasdf current <name>                     Display current version set or being\n                                        used for package\nasdf help <name> [<version>]            Output documentation for plugin and tool\nasdf install                            Install all the package versions listed\n                                        in the .tool-versions file\nasdf install <name>                     Install one tool at the version\n                                        specified in the .tool-versions file\nasdf install <name> <version>           Install a specific version of a package\nasdf install <name> latest[:<version>]  Install the latest stable version of a\n                                        package, or with optional version,\n                                        install the latest stable version that\n                                        begins with the given string\nasdf latest <name> [<version>]          Show latest stable version of a package\nasdf latest --all                       Show latest stable version of all the\n                                        packages and if they are installed\nasdf list <name> [version]              List installed versions of a package and\n                                        optionally filter the versions\nasdf list all <name> [<version>]        List all versions of a package and\n                                        optionally filter the returned versions\nasdf set [-u] [-p] <name> <versions...> Set a tool version in a .tool-version in\n                                        the current directory, or a parent\ndirectory.\nasdf uninstall <name> <version>         Remove a specific version of a package\nasdf where <name> [<version>]           Display install path for an installed\n                                        or current version\nasdf which <command>                    Display the path to an executable\n\n## UTILS\n\nasdf exec <command> [args...]           Executes the command shim for current version\nasdf env <command> [util]               Runs util (default: `env`) inside the\n                                        environment used for command shim execution.\nasdf info                               Print OS, Shell and ASDF debug information.\nasdf version                            Print the currently installed version of ASDF\nasdf reshim <name> <version>            Recreate shims for version of a package\nasdf shimversions <command>             List the plugins and versions that\n                                        provide a command\n\n## RESOURCES\n\nGitHub: https://github.com/asdf-vm/asdf\nDocs:   https://asdf-vm.com\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://asdf-vm.com/pt-br/manage/commands.html", "title": "All Commands", "description": "A lista de todos os comandos disponíveis em asdf. Esta lista é o texto do comando asdf help.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:19:27", "type": "overview", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "language": "pr-br", "generator": "VitePress v1.6.3", "title": "All Commands | asdf", "scrapeId": "7a5588cc-facd-4f55-bc7c-cff0f9b12a95", "sourceURL": "https://asdf-vm.com/pt-br/manage/commands.html", "url": "https://asdf-vm.com/pt-br/manage/commands.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I manage plugins in asdf-vm?\n\nAssistant: To manage plugins in asdf-vm, here's what you do:\nasdf plugin add <name> [<git-url>]      Add a plugin from the plugin repo OR,\n                                        add a Git repo as a plugin by\n                                        specifying the name and repo url\nasdf plugin list [--urls] [--refs]      List installed plugins. Optionally show\n                                        git urls and git-ref\nasdf plugin list all                    List plugins registered on asdf-plugins\n                                        repository with URLs\nasdf plugin remove <name>               Remove plugin and package versions\nasdf plugin update <name> [<git-ref>]   Update a plugin to latest commit on\n                                        default branch or a particular git-ref\nasdf plugin update --all                Update all plugins to latest commit on\n                                        default branch.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/pt-br/manage/commands.html", "title": "All Commands", "description": "A lista de todos os comandos disponíveis em asdf. Esta lista é o texto do comando asdf help.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:19:27", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "language": "pr-br", "generator": "VitePress v1.6.3", "title": "All Commands | asdf", "scrapeId": "7a5588cc-facd-4f55-bc7c-cff0f9b12a95", "sourceURL": "https://asdf-vm.com/pt-br/manage/commands.html", "url": "https://asdf-vm.com/pt-br/manage/commands.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I manage tools in asdf-vm?\n\nAssistant: To manage tools in asdf-vm, here's what you do:\nasdf current                            Display current version set or being\n                                        used for all packages\nasdf current <name>                     Display current version set or being\n                                        used for package\nasdf help <name> [<version>]            Output documentation for plugin and tool\nasdf install                            Install all the package versions listed\n                                        in the .tool-versions file\nasdf install <name>                     Install one tool at the version\n                                        specified in the .tool-versions file\nasdf install <name> <version>           Install a specific version of a package\nasdf install <name> latest[:<version>]  Install the latest stable version of a\n                                        package, or with optional version,\n                                        install the latest stable version that\n                                        begins with the given string\nasdf latest <name> [<version>]          Show latest stable version of a package\nasdf latest --all                       Show latest stable version of all the\n                                        packages and if they are installed\nasdf list <name> [version]              List installed versions of a package and\n                                        optionally filter the versions\nasdf list all <name> [<version>]        List all versions of a package and\n                                        optionally filter the returned versions\nasdf set [-u] [-p] <name> <versions...> Set a tool version in a .tool-version in\n                                        the current directory, or a parent\ndirectory.\nasdf uninstall <name> <version>         Remove a specific version of a package\nasdf where <name> [<version>]           Display install path for an installed\n                                        or current version\nasdf which <command>                    Display the path to an executable.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/pt-br/manage/commands.html", "title": "All Commands", "description": "A lista de todos os comandos disponíveis em asdf. Esta lista é o texto do comando asdf help.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:19:27", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "language": "pr-br", "generator": "VitePress v1.6.3", "title": "All Commands | asdf", "scrapeId": "7a5588cc-facd-4f55-bc7c-cff0f9b12a95", "sourceURL": "https://asdf-vm.com/pt-br/manage/commands.html", "url": "https://asdf-vm.com/pt-br/manage/commands.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I utils in asdf-vm?\n\nAssistant: To utils in asdf-vm, here's what you do:\nasdf exec <command> [args...]           Executes the command shim for current version\nasdf env <command> [util]               Runs util (default: `env`) inside the\n                                        environment used for command shim execution.\nasdf info                               Print OS, Shell and ASDF debug information.\nasdf version                            Print the currently installed version of ASDF\nasdf reshim <name> <version>            Recreate shims for version of a package\nasdf shimversions <command>             List the plugins and versions that\n                                        provide a command.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/pt-br/manage/commands.html", "title": "All Commands", "description": "A lista de todos os comandos disponíveis em asdf. Esta lista é o texto do comando asdf help.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:19:27", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "language": "pr-br", "generator": "VitePress v1.6.3", "title": "All Commands | asdf", "scrapeId": "7a5588cc-facd-4f55-bc7c-cff0f9b12a95", "sourceURL": "https://asdf-vm.com/pt-br/manage/commands.html", "url": "https://asdf-vm.com/pt-br/manage/commands.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I resources in asdf-vm?\n\nAssistant: To resources in asdf-vm, here's what you do:\nGitHub: https://github.com/asdf-vm/asdf\nDocs:   https://asdf-vm.com.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/pt-br/manage/commands.html", "title": "All Commands", "description": "A lista de todos os comandos disponíveis em asdf. Esta lista é o texto do comando asdf help.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:19:27", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "language": "pr-br", "generator": "VitePress v1.6.3", "title": "All Commands | asdf", "scrapeId": "7a5588cc-facd-4f55-bc7c-cff0f9b12a95", "sourceURL": "https://asdf-vm.com/pt-br/manage/commands.html", "url": "https://asdf-vm.com/pt-br/manage/commands.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you give me some code examples for All Commands in asdf-vm?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Manage Plugins**:\n\n```yaml\nasdf plugin add <name> [<git-url>]      Add a plugin from the plugin repo OR,\n                                        add a Git repo as a plugin by\n                                        specifying the name and repo url\nasdf plugin list [--urls] [--refs]      List installed plugins. Optionally show\n                                        git urls and git-ref\nasdf plugin list all                    List plugins registered on asdf-plugins\n                                        repository with URLs\nasdf plugin remove <name>               Remove plugin and package versions\nasdf plugin update <name> [<git-ref>]   Update a plugin to latest commit on\n                                        default branch or a particular git-ref\nasdf plugin update --all                Update all plugins to latest commit on\n                                        default branch\n```\n\nThis snippet shows you how to manage plugins, which is an important aspect of all commands.\n\n**Manage Tools**:\n\n```yaml\nasdf current                            Display current version set or being\n                                        used for all packages\nasdf current <name>                     Display current version set or being\n                                        used for package\nasdf help <name> [<version>]            Output documentation for plugin and tool\nasdf install                            Install all the package versions listed\n                                        in the .tool-versions file\nasdf install <name>                     Install one tool at the version\n                                        specified in the .tool-versions file\nasdf install <name> <version>           Install a specific version of a package\nasdf install <name> latest[:<version>]  Install the latest stable version of a\n                                        package, or with optional version,\n                                        install the latest stable version that\n                                        begins with the given string\nasdf latest <name> [<version>]          Show latest stable version of a package\nasdf latest --all                       Show latest stable version of all the\n                                        packages and if they are installed\nasdf list <name> [version]              List installed versions of a package and\n                                        optionally filter the versions\nasdf list all <name> [<version>]        List all versions of a package and\n                                        optionally filter the returned versions\nasdf set [-u] [-p] <name> <versions...> Set a tool version in a .tool-version in\n                                        the current directory, or a parent\ndirectory.\nasdf uninstall <name> <version>         Remove a specific version of a package\nasdf where <name> [<version>]           Display install path for an installed\n                                        or current version\nasdf which <command>                    Display the path to an executable\n```\n\nThis snippet shows you how to manage tools, which is an important aspect of all commands.\n\n**Utils**:\n\n```yaml\nasdf exec <command> [args...]           Executes the command shim for current version\nasdf env <command> [util]               Runs util (default: `env`) inside the\n                                        environment used for command shim execution.\nasdf info                               Print OS, Shell and ASDF debug information.\nasdf version                            Print the currently installed version of ASDF\nasdf reshim <name> <version>            Recreate shims for version of a package\nasdf shimversions <command>             List the plugins and versions that\n                                        provide a command\n```\n\nThis snippet shows you how to utils, which is an important aspect of all commands.\n\n", "metadata": {"source_url": "https://asdf-vm.com/pt-br/manage/commands.html", "title": "All Commands", "description": "A lista de todos os comandos disponíveis em asdf. Esta lista é o texto do comando asdf help.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:19:27", "type": "code_examples", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "language": "pr-br", "generator": "VitePress v1.6.3", "title": "All Commands | asdf", "scrapeId": "7a5588cc-facd-4f55-bc7c-cff0f9b12a95", "sourceURL": "https://asdf-vm.com/pt-br/manage/commands.html", "url": "https://asdf-vm.com/pt-br/manage/commands.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: What are some tips for using All Commands in asdf-vm effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nUse the command `asdf help` to get a list of all available commands and their descriptions.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://asdf-vm.com/pt-br/manage/commands.html", "title": "All Commands", "description": "A lista de todos os comandos disponíveis em asdf. Esta lista é o texto do comando asdf help.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:19:27", "type": "best_practices", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "language": "pr-br", "generator": "VitePress v1.6.3", "title": "All Commands | asdf", "scrapeId": "7a5588cc-facd-4f55-bc7c-cff0f9b12a95", "sourceURL": "https://asdf-vm.com/pt-br/manage/commands.html", "url": "https://asdf-vm.com/pt-br/manage/commands.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you explain what 核心 is in asdf-vm?\n\nAssistant: Sure, I'd be happy to explain 核心 in asdf-vm.\n\n# 核心\n\n核心 `asdf` 命令列表很小，但可以促进很多工作流。Here's a quick rundown of what this is about:\n\n## 安装和配置\n\n请查看 [快速上手](https://asdf-vm.com/zh-hans/guide/getting-started.html) 了解更多详情。\n\n## Exec\n\nshell\n\n```\nasdf exec <command> [args...]\n```\n\n执行当前版本的命令垫片。\n\n## Env\n\nshell\n\n```\nasdf env <command> [util]\n```\n\n\n## Info\n\nshell\n\n```\nasdf info\n```\n\n用于打印操作系统、Shell 和 `asdf` 调试信息的辅助命令。在报告 bug 时需要共享这些信息。\n\n## Reshim\n\nshell\n\n```\nasdf reshim <name> <version>\n```\n\n这将为某个包的当前版本重新创建垫片。默认情况下，垫片是在某个工具安装的过程中由插件创建。一些工具像 [npm 命令行](https://docs.npmjs.com/cli/) 允许全局安装可执行程序，比如使用 `npm install -g yarn` 命令安装 [Yarn](https://yarnpkg.com/)。因为这个可执行程序不是通过插件生命周期安装的，所以还没有对应的垫片存在。 `asdf reshim nodejs <version>` 命令将会强制重新计算任何新可执行程序的垫片，类似 `nodejs` 的 `versions` 版本下的 `yarn`。\n\n## Shim-versions\n\nshell\n\n```\nasdf shimversions <command>\n```\n\n列举为命令提供垫片的插件和版本。\n\n例如， [Node.js](https://nodejs.org/) 附带了两个可执行程序， `node` 和 `npm`。当使用 [`asdf-nodejs`](https://github.com/asdf-vm/asdf-nodejs/) `插件安装了这些工具的很多版本时，执行` shimversions\\` 命令会返回：\n\nshell\n\n```\n➜ asdf shimversions node\nnodejs 14.8.0\nnodejs 14.17.3\nnodejs 16.5.0\n```\n\nshell\n\n```\n➜ asdf shimversions npm\nnodejs 14.8.0\nnodejs 14.17.3\nnodejs 16.5.0\n```\n\n\n## 更新\n\n请使用与安装 `asdf` 相同的方法进行更新。 `asdf` 的最新版本显示在本页面的右上角。\n\n## 卸载\n\n根据以下步骤卸载 `asdf`：\n\nBash & Git\n\n1. 在 `~/.bashrc` 配置文件中移除生效 `asdf.sh` 和补全功能的行：\n\nshell\n\n```\n. \"$HOME/.asdf/asdf.sh\"\n. \"$HOME/.asdf/completions/asdf.bash\"\n```\n\n2. 移除 `$HOME/.asdf` 目录：\n\nshell\n\n```\nrm -rf \"${ASDF_DATA_DIR:-$HOME/.asdf}\"\n```\n\n3. 执行以下命令移除 `asdf` 所有配置文件：\n\nshell\n\n```\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\nBash & Git (macOS)\n\n1. 在 `~/.bash_profile` 配置文件中移除生效 `asdf.sh` 和补全功能的行：\n\nshell\n\n```\n. \"$HOME/.asdf/asdf.sh\"\n. \"$HOME/.asdf/completions/asdf.bash\"\n```\n\n2. 移除 `$HOME/.asdf` 目录：\n\nshell\n\n```\nrm -rf \"${ASDF_DATA_DIR:-$HOME/.asdf}\"\n```\n\n3. 执行以下命令移除 `asdf` 所有配置文件：\n\nshell\n\n```\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\nBash & Homebrew\n\n1. 在 `~/.bashrc` 配置文件中移除生效 `asdf.sh` 和补全功能的行：\n\nshell\n\n```\n. $(brew --prefix asdf)/libexec/asdf.sh\n. $(brew --prefix asdf)/etc/bash_completion.d/asdf.bash\n```\n\n补全功能可能已经如 [Homebrew 的指南](https://docs.brew.sh/Shell-Completion#configuring-completions-in-bash) 那样配置了，因此请按照他们的指南找出要删除的内容。\n\n2. 用包管理器卸载：\n\nshell\n\n```\nbrew uninstall asdf --force\n```\n\n3. 执行以下命令移除 `asdf` 所有配置文件：\n\nshell\n\n```\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\nBash & Homebrew (macOS)\n\n如果你正在使用 **macOS Catalina 以及更新版本**，默认的 shell 已经变成了 **ZSH**。如果你在 `~/.bash_profile` 文件中找不到任何配置，则可能位于 `~/.zshrc` 中。在这种情况下，请按照 ZSH 指南进行操作。\n\n1. 在 `~/.bash_profile` 配置文件中移除生效 `asdf.sh` 和补全功能的行：\n\nshell\n\n```\n. $(brew --prefix asdf)/libexec/asdf.sh\n. $(brew --prefix asdf)/etc/bash_completion.d/asdf.bash\n```\n\n补全功能可能已经如 [Homebrew 的指南](https://docs.brew.sh/Shell-Completion#configuring-completions-in-bash) 那样配置了，因此请按照他们的指南找出要删除的内容。\n\n2. 用包管理器卸载：\n\nshell\n\n```\nbrew uninstall asdf --force\n```\n\n3. 执行以下命令移除 `asdf` 所有配置文件：\n\nshell\n\n```\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\nBash & Pacman\n\n1. 在 `~/.bashrc` 配置文件中移除生效 `asdf.sh` 和补全功能的行：\n\nshell\n\n```\n. /opt/asdf-vm/asdf.sh\n```\n\n2. 用包管理器卸载：\n\nshell\n\n```\npacman -Rs asdf-vm\n```\n\n3. 移除 `$HOME/.asdf` 目录：\n\nshell\n\n```\nrm -rf \"${ASDF_DATA_DIR:-$HOME/.asdf}\"\n```\n\n4. 执行以下命令移除 `asdf` 所有配置文件：\n\nshell\n\n```\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\nFish & Git\n\n1. 在 `~/.config/fish/config.fish` 配置文件中移除生效 `asdf.fish` 的行：\n\nshell\n\n```\nsource ~/.asdf/asdf.fish\n```\n\n以及使用以下命令移除补全功能：\n\nshell\n\n```\nrm -rf ~/.config/fish/completions/asdf.fish\n```\n\n2. 移除 `$HOME/.asdf` 目录：\n\nshell\n\n```\nrm -rf (string join : -- $ASDF_DATA_DIR $HOME/.asdf)\n```\n\n3. 执行以下命令移除 `asdf` 所有配置文件：\n\nshell\n\n```\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\nFish & Homebrew\n\n1. 在 `~/.config/fish/config.fish` 配置文件中移除生效 `asdf.fish` 的行：\n\nshell\n\n```\nsource \"(brew --prefix asdf)\"/libexec/asdf.fish\n```\n\n2. 用包管理器卸载：\n\nshell\n\n```\nbrew uninstall asdf --force\n```\n\n3. 执行以下命令移除 `asdf` 所有配置文件：\n\nshell\n\n```\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\nFish & Pacman\n\n1. 在 `~/.config/fish/config.fish` 配置文件中移除生效 `asdf.fish` 的行：\n\nshell\n\n```\nsource /opt/asdf-vm/asdf.fish\n```\n\n2. 用包管理器卸载：\n\nshell\n\n```\npacman -Rs asdf-vm\n```\n\n3. 移除 `$HOME/.asdf` 目录：\n\nshell\n\n```\nrm -rf (string join : -- $ASDF_DATA_DIR $HOME/.asdf)\n```\n\n4. 执行以下命令移除 `asdf` 所有配置文件：\n\nshell\n\n```\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\nElvish & Git\n\n1. 在 `~/.config/elvish/rc.elv` 配置文件中移除使用 `asdf` 模块的行：\n\nshell\n\n```\nuse asdf _asdf; var asdf~ = $_asdf:asdf~\nset edit:completion:arg-completer[asdf] = $_asdf:arg-completer~\n```\n\n以及使用以下命令卸载 `asdf` 模块：\n\nshell\n\n```\nrm -f ~/.config/elvish/lib/asdf.elv\n```\n\n2. 移除 `$HOME/.asdf` 目录：\n\nshell\n\n```\nif (!=s $E:ASDF_DATA_DIR \"\") { rm -rf $E:ASDF_DATA_DIR } else { rm -rf ~/.asdf }\n```\n\n3. 执行以下命令移除 `asdf` 所有配置文件：\n\nshell\n\n```\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\nElvish & Homebrew\n\n1. 在 `~/.config/elvish/rc.elv` 配置文件中移除使用 `asdf` 模块的行：\n\nshell\n\n```\nuse asdf _asdf; var asdf~ = $_asdf:asdf~\nset edit:completion:arg-completer[asdf] = $_asdf:arg-completer~\n```\n\n以及使用以下命令卸载 `asdf` 模块：\n\nshell\n\n```\nrm -f ~/.config/elvish/lib/asdf.elv\n```\n\n2. 用包管理器卸载：\n\nshell\n\n```\nbrew uninstall asdf --force\n```\n\n3. 执行以下命令移除 `asdf` 所有配置文件：\n\nshell\n\n```\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\nElvish & Pacman\n\n1. 在 `~/.config/elvish/rc.elv` 配置文件中移除使用 `asdf` 模块的行：\n\nshell\n\n```\nuse asdf _asdf; var asdf~ = $_asdf:asdf~\nset edit:completion:arg-completer[asdf] = $_asdf:arg-completer~\n```\n\n以及使用以下命令卸载 `asdf` 模块：\n\nshell\n\n```\nrm -f ~/.config/elvish/lib/asdf.elv\n```\n\n2. 用包管理器卸载：\n\nshell\n\n```\npacman -Rs asdf-vm\n```\n\n3. 移除 `$HOME/.asdf` 目录：\n\nshell\n\n```\nif (!=s $E:ASDF_DATA_DIR \"\") { rm -rf $E:ASDF_DATA_DIR } else { rm -rf ~/.asdf }\n```\n\n4. 执行以下命令移除 `asdf` 所有配置文件：\n\nshell\n\n```\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\nZSH & Git\n\n1. 在 `~/.zshrc` 配置文件中移除生效 `asdf.sh` 和补全功能的行：\n\nshell\n\n```\n. \"$HOME/.asdf/asdf.sh\"\n# ...\nfpath=(${ASDF_DIR}/completions $fpath)\nautoload -Uz compinit\ncompinit\n```\n\n**或者** ZSH 框架插件（如果用了的话）\n\n2. 移除 `$HOME/.asdf` 目录：\n\nshell\n\n```\nrm -rf \"${ASDF_DATA_DIR:-$HOME/.asdf}\"\n```\n\n3. 执行以下命令移除 `asdf` 所有配置文件：\n\nshell\n\n```\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\nZSH & Homebrew\n\n1. 在 `~/.zshrc` 配置文件中移除生效 `asdf.sh` 的行：\n\nshell\n\n```\n. $(brew --prefix asdf)/libexec/asdf.sh\n```\n\n2. 用包管理器卸载：\n\nshell\n\n```\nbrew uninstall asdf --force && brew autoremove\n```\n\n3. 执行以下命令移除 `asdf` 所有配置文件：\n\nshell\n\n```\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\nZSH & Pacman\n\n1. 在 `~/.zshrc` 配置文件中移除生效 `asdf.sh` 的行：\n\nshell\n\n```\n. /opt/asdf-vm/asdf.sh\n```\n\n2. 用包管理器卸载：\n\nshell\n\n```\npacman -Rs asdf-vm\n```\n\n3. 移除 `$HOME/.asdf` 目录\n\nshell\n\n```\nrm -rf \"${ASDF_DATA_DIR:-$HOME/.asdf}\"\n```\n\n4. 执行以下命令移除 `asdf` 所有配置文件：\n\nshell\n\n```\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\n恭喜你完成了 🎉\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://asdf-vm.com/zh-hans/manage/core.html", "title": "核心", "description": "核心 `asdf` 命令列表很小，但可以促进很多工作流。", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 03:20:15", "type": "overview", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "language": "zh-hans", "title": "核心 | asdf", "generator": "VitePress v1.6.3", "description": "Manage multiple runtime versions with a single CLI tool", "scrapeId": "0bcac3fc-3e1b-40c2-b6df-1e80c80fa5ea", "sourceURL": "https://asdf-vm.com/zh-hans/manage/core.html", "url": "https://asdf-vm.com/zh-hans/manage/core.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 安装和配置 in asdf-vm?\n\nAssistant: To 安装和配置 in asdf-vm, here's what you do:\n请查看 [快速上手](https://asdf-vm.com/zh-hans/guide/getting-started.html) 了解更多详情。.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/zh-hans/manage/core.html", "title": "核心", "description": "核心 `asdf` 命令列表很小，但可以促进很多工作流。", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 03:20:15", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "language": "zh-hans", "title": "核心 | asdf", "generator": "VitePress v1.6.3", "description": "Manage multiple runtime versions with a single CLI tool", "scrapeId": "0bcac3fc-3e1b-40c2-b6df-1e80c80fa5ea", "sourceURL": "https://asdf-vm.com/zh-hans/manage/core.html", "url": "https://asdf-vm.com/zh-hans/manage/core.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I exec in asdf-vm?\n\nAssistant: To exec in asdf-vm, here's what you do:\nshell\n\n```\nasdf exec <command> [args...]\n```\n\n执行当前版本的命令垫片。.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/zh-hans/manage/core.html", "title": "核心", "description": "核心 `asdf` 命令列表很小，但可以促进很多工作流。", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 03:20:15", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "language": "zh-hans", "title": "核心 | asdf", "generator": "VitePress v1.6.3", "description": "Manage multiple runtime versions with a single CLI tool", "scrapeId": "0bcac3fc-3e1b-40c2-b6df-1e80c80fa5ea", "sourceURL": "https://asdf-vm.com/zh-hans/manage/core.html", "url": "https://asdf-vm.com/zh-hans/manage/core.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I env in asdf-vm?\n\nAssistant: To env in asdf-vm, here's what you do:\nshell\n\n```\nasdf env <command> [util]\n```\n.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/zh-hans/manage/core.html", "title": "核心", "description": "核心 `asdf` 命令列表很小，但可以促进很多工作流。", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 03:20:15", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "language": "zh-hans", "title": "核心 | asdf", "generator": "VitePress v1.6.3", "description": "Manage multiple runtime versions with a single CLI tool", "scrapeId": "0bcac3fc-3e1b-40c2-b6df-1e80c80fa5ea", "sourceURL": "https://asdf-vm.com/zh-hans/manage/core.html", "url": "https://asdf-vm.com/zh-hans/manage/core.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I info in asdf-vm?\n\nAssistant: To info in asdf-vm, here's what you do:\nshell\n\n```\nasdf info\n```\n\n用于打印操作系统、Shell 和 `asdf` 调试信息的辅助命令。在报告 bug 时需要共享这些信息。.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/zh-hans/manage/core.html", "title": "核心", "description": "核心 `asdf` 命令列表很小，但可以促进很多工作流。", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 03:20:15", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "language": "zh-hans", "title": "核心 | asdf", "generator": "VitePress v1.6.3", "description": "Manage multiple runtime versions with a single CLI tool", "scrapeId": "0bcac3fc-3e1b-40c2-b6df-1e80c80fa5ea", "sourceURL": "https://asdf-vm.com/zh-hans/manage/core.html", "url": "https://asdf-vm.com/zh-hans/manage/core.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I reshim in asdf-vm?\n\nAssistant: To reshim in asdf-vm, here's what you do:\nshell\n\n```\nasdf reshim <name> <version>\n```\n\n这将为某个包的当前版本重新创建垫片。默认情况下，垫片是在某个工具安装的过程中由插件创建。一些工具像 [npm 命令行](https://docs.npmjs.com/cli/) 允许全局安装可执行程序，比如使用 `npm install -g yarn` 命令安装 [Yarn](https://yarnpkg.com/)。因为这个可执行程序不是通过插件生命周期安装的，所以还没有对应的垫片存在。 `asdf reshim nodejs <version>` 命令将会强制重新计算任何新可执行程序的垫片，类似 `nodejs` 的 `versions` 版本下的 `yarn`。.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/zh-hans/manage/core.html", "title": "核心", "description": "核心 `asdf` 命令列表很小，但可以促进很多工作流。", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 03:20:15", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "language": "zh-hans", "title": "核心 | asdf", "generator": "VitePress v1.6.3", "description": "Manage multiple runtime versions with a single CLI tool", "scrapeId": "0bcac3fc-3e1b-40c2-b6df-1e80c80fa5ea", "sourceURL": "https://asdf-vm.com/zh-hans/manage/core.html", "url": "https://asdf-vm.com/zh-hans/manage/core.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I shim-versions in asdf-vm?\n\nAssistant: To shim-versions in asdf-vm, here's what you do:\nshell\n\n```\nasdf shimversions <command>\n```\n\n列举为命令提供垫片的插件和版本。\n\n例如， [Node.js](https://nodejs.org/) 附带了两个可执行程序， `node` 和 `npm`。当使用 [`asdf-nodejs`](https://github.com/asdf-vm/asdf-nodejs/) `插件安装了这些工具的很多版本时，执行` shimversions\\` 命令会返回：\n\nshell\n\n```\n➜ asdf shimversions node\nnodejs 14.8.0\nnodejs 14.17.3\nnodejs 16.5.0\n```\n\nshell\n\n```\n➜ asdf shimversions npm\nnodejs 14.8.0\nnodejs 14.17.3\nnodejs 16.5.0\n```\n.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/zh-hans/manage/core.html", "title": "核心", "description": "核心 `asdf` 命令列表很小，但可以促进很多工作流。", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 03:20:15", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "language": "zh-hans", "title": "核心 | asdf", "generator": "VitePress v1.6.3", "description": "Manage multiple runtime versions with a single CLI tool", "scrapeId": "0bcac3fc-3e1b-40c2-b6df-1e80c80fa5ea", "sourceURL": "https://asdf-vm.com/zh-hans/manage/core.html", "url": "https://asdf-vm.com/zh-hans/manage/core.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 更新 in asdf-vm?\n\nAssistant: To 更新 in asdf-vm, here's what you do:\n请使用与安装 `asdf` 相同的方法进行更新。 `asdf` 的最新版本显示在本页面的右上角。.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/zh-hans/manage/core.html", "title": "核心", "description": "核心 `asdf` 命令列表很小，但可以促进很多工作流。", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 03:20:15", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "language": "zh-hans", "title": "核心 | asdf", "generator": "VitePress v1.6.3", "description": "Manage multiple runtime versions with a single CLI tool", "scrapeId": "0bcac3fc-3e1b-40c2-b6df-1e80c80fa5ea", "sourceURL": "https://asdf-vm.com/zh-hans/manage/core.html", "url": "https://asdf-vm.com/zh-hans/manage/core.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 卸载 in asdf-vm?\n\nAssistant: To 卸载 in asdf-vm, here's what you do:\n根据以下步骤卸载 `asdf`：\n\nBash & Git\n\n1. 在 `~/.bashrc` 配置文件中移除生效 `asdf.sh` 和补全功能的行：\n\nshell\n\n```\n. \"$HOME/.asdf/asdf.sh\"\n. \"$HOME/.asdf/completions/asdf.bash\"\n```\n\n2. 移除 `$HOME/.asdf` 目录：\n\nshell\n\n```\nrm -rf \"${ASDF_DATA_DIR:-$HOME/.asdf}\"\n```\n\n3. 执行以下命令移除 `asdf` 所有配置文件：\n\nshell\n\n```\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\nBash & Git (macOS)\n\n1. 在 `~/.bash_profile` 配置文件中移除生效 `asdf.sh` 和补全功能的行：\n\nshell\n\n```\n. \"$HOME/.asdf/asdf.sh\"\n. \"$HOME/.asdf/completions/asdf.bash\"\n```\n\n2. 移除 `$HOME/.asdf` 目录：\n\nshell\n\n```\nrm -rf \"${ASDF_DATA_DIR:-$HOME/.asdf}\"\n```\n\n3. 执行以下命令移除 `asdf` 所有配置文件：\n\nshell\n\n```\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\nBash & Homebrew\n\n1. 在 `~/.bashrc` 配置文件中移除生效 `asdf.sh` 和补全功能的行：\n\nshell\n\n```\n. $(brew --prefix asdf)/libexec/asdf.sh\n. $(brew --prefix asdf)/etc/bash_completion.d/asdf.bash\n```\n\n补全功能可能已经如 [Homebrew 的指南](https://docs.brew.sh/Shell-Completion#configuring-completions-in-bash) 那样配置了，因此请按照他们的指南找出要删除的内容。\n\n2. 用包管理器卸载：\n\nshell\n\n```\nbrew uninstall asdf --force\n```\n\n3. 执行以下命令移除 `asdf` 所有配置文件：\n\nshell\n\n```\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\nBash & Homebrew (macOS)\n\n如果你正在使用 **macOS Catalina 以及更新版本**，默认的 shell 已经变成了 **ZSH**。如果你在 `~/.bash_profile` 文件中找不到任何配置，则可能位于 `~/.zshrc` 中。在这种情况下，请按照 ZSH 指南进行操作。\n\n1. 在 `~/.bash_profile` 配置文件中移除生效 `asdf.sh` 和补全功能的行：\n\nshell\n\n```\n. $(brew --prefix asdf)/libexec/asdf.sh\n. $(brew --prefix asdf)/etc/bash_completion.d/asdf.bash\n```\n\n补全功能可能已经如 [Homebrew 的指南](https://docs.brew.sh/Shell-Completion#configuring-completions-in-bash) 那样配置了，因此请按照他们的指南找出要删除的内容。\n\n2. 用包管理器卸载：\n\nshell\n\n```\nbrew uninstall asdf --force\n```\n\n3. 执行以下命令移除 `asdf` 所有配置文件：\n\nshell\n\n```\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\nBash & Pacman\n\n1. 在 `~/.bashrc` 配置文件中移除生效 `asdf.sh` 和补全功能的行：\n\nshell\n\n```\n. /opt/asdf-vm/asdf.sh\n```\n\n2. 用包管理器卸载：\n\nshell\n\n```\npacman -Rs asdf-vm\n```\n\n3. 移除 `$HOME/.asdf` 目录：\n\nshell\n\n```\nrm -rf \"${ASDF_DATA_DIR:-$HOME/.asdf}\"\n```\n\n4. 执行以下命令移除 `asdf` 所有配置文件：\n\nshell\n\n```\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\nFish & Git\n\n1. 在 `~/.config/fish/config.fish` 配置文件中移除生效 `asdf.fish` 的行：\n\nshell\n\n```\nsource ~/.asdf/asdf.fish\n```\n\n以及使用以下命令移除补全功能：\n\nshell\n\n```\nrm -rf ~/.config/fish/completions/asdf.fish\n```\n\n2. 移除 `$HOME/.asdf` 目录：\n\nshell\n\n```\nrm -rf (string join : -- $ASDF_DATA_DIR $HOME/.asdf)\n```\n\n3. 执行以下命令移除 `asdf` 所有配置文件：\n\nshell\n\n```\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\nFish & Homebrew\n\n1. 在 `~/.config/fish/config.fish` 配置文件中移除生效 `asdf.fish` 的行：\n\nshell\n\n```\nsource \"(brew --prefix asdf)\"/libexec/asdf.fish\n```\n\n2. 用包管理器卸载：\n\nshell\n\n```\nbrew uninstall asdf --force\n```\n\n3. 执行以下命令移除 `asdf` 所有配置文件：\n\nshell\n\n```\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\nFish & Pacman\n\n1. 在 `~/.config/fish/config.fish` 配置文件中移除生效 `asdf.fish` 的行：\n\nshell\n\n```\nsource /opt/asdf-vm/asdf.fish\n```\n\n2. 用包管理器卸载：\n\nshell\n\n```\npacman -Rs asdf-vm\n```\n\n3. 移除 `$HOME/.asdf` 目录：\n\nshell\n\n```\nrm -rf (string join : -- $ASDF_DATA_DIR $HOME/.asdf)\n```\n\n4. 执行以下命令移除 `asdf` 所有配置文件：\n\nshell\n\n```\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\nElvish & Git\n\n1. 在 `~/.config/elvish/rc.elv` 配置文件中移除使用 `asdf` 模块的行：\n\nshell\n\n```\nuse asdf _asdf; var asdf~ = $_asdf:asdf~\nset edit:completion:arg-completer[asdf] = $_asdf:arg-completer~\n```\n\n以及使用以下命令卸载 `asdf` 模块：\n\nshell\n\n```\nrm -f ~/.config/elvish/lib/asdf.elv\n```\n\n2. 移除 `$HOME/.asdf` 目录：\n\nshell\n\n```\nif (!=s $E:ASDF_DATA_DIR \"\") { rm -rf $E:ASDF_DATA_DIR } else { rm -rf ~/.asdf }\n```\n\n3. 执行以下命令移除 `asdf` 所有配置文件：\n\nshell\n\n```\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\nElvish & Homebrew\n\n1. 在 `~/.config/elvish/rc.elv` 配置文件中移除使用 `asdf` 模块的行：\n\nshell\n\n```\nuse asdf _asdf; var asdf~ = $_asdf:asdf~\nset edit:completion:arg-completer[asdf] = $_asdf:arg-completer~\n```\n\n以及使用以下命令卸载 `asdf` 模块：\n\nshell\n\n```\nrm -f ~/.config/elvish/lib/asdf.elv\n```\n\n2. 用包管理器卸载：\n\nshell\n\n```\nbrew uninstall asdf --force\n```\n\n3. 执行以下命令移除 `asdf` 所有配置文件：\n\nshell\n\n```\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\nElvish & Pacman\n\n1. 在 `~/.config/elvish/rc.elv` 配置文件中移除使用 `asdf` 模块的行：\n\nshell\n\n```\nuse asdf _asdf; var asdf~ = $_asdf:asdf~\nset edit:completion:arg-completer[asdf] = $_asdf:arg-completer~\n```\n\n以及使用以下命令卸载 `asdf` 模块：\n\nshell\n\n```\nrm -f ~/.config/elvish/lib/asdf.elv\n```\n\n2. 用包管理器卸载：\n\nshell\n\n```\npacman -Rs asdf-vm\n```\n\n3. 移除 `$HOME/.asdf` 目录：\n\nshell\n\n```\nif (!=s $E:ASDF_DATA_DIR \"\") { rm -rf $E:ASDF_DATA_DIR } else { rm -rf ~/.asdf }\n```\n\n4. 执行以下命令移除 `asdf` 所有配置文件：\n\nshell\n\n```\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\nZSH & Git\n\n1. 在 `~/.zshrc` 配置文件中移除生效 `asdf.sh` 和补全功能的行：\n\nshell\n\n```\n. \"$HOME/.asdf/asdf.sh\"\n# ...\nfpath=(${ASDF_DIR}/completions $fpath)\nautoload -Uz compinit\ncompinit\n```\n\n**或者** ZSH 框架插件（如果用了的话）\n\n2. 移除 `$HOME/.asdf` 目录：\n\nshell\n\n```\nrm -rf \"${ASDF_DATA_DIR:-$HOME/.asdf}\"\n```\n\n3. 执行以下命令移除 `asdf` 所有配置文件：\n\nshell\n\n```\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\nZSH & Homebrew\n\n1. 在 `~/.zshrc` 配置文件中移除生效 `asdf.sh` 的行：\n\nshell\n\n```\n. $(brew --prefix asdf)/libexec/asdf.sh\n```\n\n2. 用包管理器卸载：\n\nshell\n\n```\nbrew uninstall asdf --force && brew autoremove\n```\n\n3. 执行以下命令移除 `asdf` 所有配置文件：\n\nshell\n\n```\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\nZSH & Pacman\n\n1. 在 `~/.zshrc` 配置文件中移除生效 `asdf.sh` 的行：\n\nshell\n\n```\n. /opt/asdf-vm/asdf.sh\n```\n\n2. 用包管理器卸载：\n\nshell\n\n```\npacman -Rs asdf-vm\n```\n\n3. 移除 `$HOME/.asdf` 目录\n\nshell\n\n```\nrm -rf \"${ASDF_DATA_DIR:-$HOME/.asdf}\"\n```\n\n4. 执行以下命令移除 `asdf` 所有配置文件：\n\nshell\n\n```\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\n恭喜你完成了 🎉.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/zh-hans/manage/core.html", "title": "核心", "description": "核心 `asdf` 命令列表很小，但可以促进很多工作流。", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 03:20:15", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "language": "zh-hans", "title": "核心 | asdf", "generator": "VitePress v1.6.3", "description": "Manage multiple runtime versions with a single CLI tool", "scrapeId": "0bcac3fc-3e1b-40c2-b6df-1e80c80fa5ea", "sourceURL": "https://asdf-vm.com/zh-hans/manage/core.html", "url": "https://asdf-vm.com/zh-hans/manage/core.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you give me some code examples for 核心 in asdf-vm?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Exec Command**:\n\n```yaml\nasdf exec <command> [args...]\n```\n\nThis snippet shows you how to exec command, which is an important aspect of 核心.\n\n**Env Command**:\n\n```yaml\nasdf env <command> [util]\n```\n\nThis snippet shows you how to env command, which is an important aspect of 核心.\n\n**Info Command**:\n\n```yaml\nasdf info\n```\n\nThis snippet shows you how to info command, which is an important aspect of 核心.\n\n**Reshim Command**:\n\n```yaml\nasdf reshim <name> <version>\n```\n\nThis snippet shows you how to reshim command, which is an important aspect of 核心.\n\n**Shim-versions Command**:\n\n```yaml\nasdf shimversions <command>\n```\n\nThis snippet shows you how to shim-versions command, which is an important aspect of 核心.\n\n**Shimversions Example for Node**:\n\n```yaml\n➜ asdf shimversions node\nnodejs 14.8.0\nnodejs 14.17.3\nnodejs 16.5.0\n```\n\nThis snippet shows you how to shimversions example for node, which is an important aspect of 核心.\n\n**Shimversions Example for NPM**:\n\n```yaml\n➜ asdf shimversions npm\nnodejs 14.8.0\nnodejs 14.17.3\nnodejs 16.5.0\n```\n\nThis snippet shows you how to shimversions example for npm, which is an important aspect of 核心.\n\n**Uninstall Bash & Git Step 1**:\n\n```yaml\n. \"$HOME/.asdf/asdf.sh\"\n. \"$HOME/.asdf/completions/asdf.bash\"\n```\n\nThis snippet shows you how to uninstall bash & git step 1, which is an important aspect of 核心.\n\n**Uninstall Bash & Git Step 2**:\n\n```yaml\nrm -rf \"${ASDF_DATA_DIR:-$HOME/.asdf}\"\n```\n\nThis snippet shows you how to uninstall bash & git step 2, which is an important aspect of 核心.\n\n**Uninstall Bash & Git Step 3**:\n\n```yaml\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\nThis snippet shows you how to uninstall bash & git step 3, which is an important aspect of 核心.\n\n", "metadata": {"source_url": "https://asdf-vm.com/zh-hans/manage/core.html", "title": "核心", "description": "核心 `asdf` 命令列表很小，但可以促进很多工作流。", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 03:20:15", "type": "code_examples", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "language": "zh-hans", "title": "核心 | asdf", "generator": "VitePress v1.6.3", "description": "Manage multiple runtime versions with a single CLI tool", "scrapeId": "0bcac3fc-3e1b-40c2-b6df-1e80c80fa5ea", "sourceURL": "https://asdf-vm.com/zh-hans/manage/core.html", "url": "https://asdf-vm.com/zh-hans/manage/core.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: What are some tips for using 核心 in asdf-vm effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\n请查看 [快速上手](https://asdf-vm.com/zh-hans/guide/getting-started.html) 了解更多详情。\n\n请使用与安装 `asdf` 相同的方法进行更新。 `asdf` 的最新版本显示在本页面的右上角。\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://asdf-vm.com/zh-hans/manage/core.html", "title": "核心", "description": "核心 `asdf` 命令列表很小，但可以促进很多工作流。", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 03:20:15", "type": "best_practices", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "language": "zh-hans", "title": "核心 | asdf", "generator": "VitePress v1.6.3", "description": "Manage multiple runtime versions with a single CLI tool", "scrapeId": "0bcac3fc-3e1b-40c2-b6df-1e80c80fa5ea", "sourceURL": "https://asdf-vm.com/zh-hans/manage/core.html", "url": "https://asdf-vm.com/zh-hans/manage/core.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you explain what 構成設定 is in asdf-vm?\n\nAssistant: Sure, I'd be happy to explain 構成設定 in asdf-vm.\n\n# 構成設定\n\n`asdf` の構成設定には、他人と共有可能な `.tool-versions` ファイルと、 `.asdfrc` や環境変数によってカスタマイズ可能なユーザ固有の設定とがあります。Here's a quick rundown of what this is about:\n\n## .tool-versions\n\n.tool-versions ファイルがディレクトリに存在する場合、当該ディレクトリおよびサブディレクトリで、ファイル内で宣言しているツールのバージョンが使用されます。\n\n.tool-versions ファイル内は下記のような記述となっています:\n\n```\nruby 2.5.3\nnodejs 10.15.0\n```\n\nコメントを含めることもできます:\n\n```\nruby 2.5.3 # This is a comment\n# This is another comment\nnodejs 10.15.0\n```\n\nバージョンの表記は下記の形式があります:\n\n- `10.15.0` \\- 実バージョンの表記です。バイナリのダウンロードに対応しているプラグインの場合、バイナリがダウンロードされます。\n- `ref:v1.0.2-a` or `ref:39cb398vb39` \\- 指定されたタグ/コミット/ブランチをgithubからダウンロードし、コンパイルされます。\n- `path:~/src/elixir` \\- 使用するツールをカスタムコンパイルしたバージョンへのパスです。言語開発者などが使用します。\n- `system` \\- このキーワードを指定した場合、asdfが管理していない、システム上のツールバージョンへパススルーします。\n\nヒント\n\nスペースで区切れば、複数のバージョンを指定できます。例えば、Python `3.7.2` を使用し、Python `2.7.15` にフォールバックし、最終的に `system` のPythonにフォールバックさせるには、 `.tool-versions` に下記の行を追記します。\n\n```\npython 3.7.2 2.7.15 system\n```\n\n.tool-versions ファイルで定義されているすべてのツールをインストールするには、 `.tool-versions` ファイルを含むディレクトリで、 `asdf install` コマンドを引数を指定せずに実行します。\n\n.tool-versions ファイルで定義されている単一のツールをインストールするには、 `.tool-versions` ファイルを含むディレクトリで、 `asdf install <name>` コマンドを実行します。ツールは、 `.tool-versions` ファイルで指定されたバージョンでインストールされます。\n\nファイルは、直接編集するか、 `asdf set` コマンドを使用して更新してください.\n\n## .asdfrc\n\n.asdfrc では、ユーザのマシン固有の構成を設定します。\n\nasdfはデフォルトで `${HOME}/.asdfrc` に構成ファイルを配置します。ファイルの場所は、 [`ASDF_CONFIG_FILE` 環境変数](https://asdf-vm.com/ja-jp/manage/configuration.html#asdf-config-file) で設定できます。\n\n下記は、構成に必要な項目とそのデフォルト値を示しています:\n\ntxt\n\n```\nlegacy_version_file = no\nuse_release_candidates = no\nalways_keep_download = no\nplugin_repository_last_check_duration = 60\ndisable_plugin_short_name_repository = no\nconcurrency = auto\n```\n\n### legacy_version_file\n\n**対応している** プラグインの場合、他のバージョンマネージャで使用されているバージョンファイルを読み込むことができます。例えば、Rubyの `rbenv` であれば `.ruby-version` ファイルを読み込みます。\n\n| オプション | 説明 |\n| --- | --- |\n| `no` デフォルト | バージョンの読み込みには `.tool-versions` を使用します |\n| `yes` | 利用可能なレガシーバージョンファイル( `.ruby-version` など)がある場合、プラグインのフォールバックで使用します |\n\n### always_keep_download\n\n`asdf install` コマンドでダウンロードしたソースコードやバイナリを、保持しておくか削除するかを制御します。\n\n| オプション | 説明 |\n| --- | --- |\n| `no` デフォルト | インストールが成功したら、ソースコードやバイナリを削除します |\n| `yes` | インストール後も、ソースコードやバイナリを保持します |\n\n### plugin_repository_last_check_duration\n\nasdfプラグインリポジトリの同期間隔(分)を制御します。何らかのトリガーイベントが発生した際に、最後に同期した時刻からの経過時間をチェックします。設定された間隔以上の時間が経過していた倍は、新たに同期が開始されます。\n\n| オプション | 説明 |\n| --- | --- |\n| `1` から `999999999` までの整数値 <br>デフォルトは `60` | 最後に同期した時刻から指定時間(分)以上経過していた場合、トリガーイベントで同期します |\n| `0` | トリガーイベントのたびに同期します |\n| `never` | 同期しません |\n\n同期は、以下のコマンドが実行されたときに発生します:\n\n- `asdf plugin add <name>`\n- `asdf plugin list all`\n\n`asdf plugin add <name> <git-url>` コマンドでは、プラグインの同期はトリガーされません。\n\n備考\n\n値を `never` にしても、プラグインリポジトリの初期同期は停止されません。この動作については、 `disable_plugin_short_name_repository` の節をご覧ください。\n\n### disable_plugin_short_name_repository\n\nasdfプラグインのショートネームリポジトリの同期を無効化します。ショートネームリポジトリが無効となっている場合、同期イベントはすぐに終了します。\n\n| オプション | 説明 |\n| --- | --- |\n| `no` デフォルト | 同期イベントが発生した際に、asdfプラグインリポジトリをクローンまたは更新します |\n| `yes` | プラグインショートネームリポジトリを無効化します |\n\n同期は、以下のコマンドが実行されたときに発生します:\n\n- `asdf plugin add <name>`\n- `asdf plugin list all`\n\n`asdf plugin add <name> <git-url>` コマンドでは、プラグインの同期はトリガーされません。\n\n備考\n\nプラグインショートネームリポジトリを無効化しても、すでに同期されたリポジトリは削除されません。プラグインリポジトリを削除するには、 `rm --recursive --trash $ASDF_DATA_DIR/repository` コマンドを実行してください。\n\nまた、プラグインショートネームリポジトリを無効化しても、以前にこのソースからインストールされたプラグインは削除されません。プラグインを削除するには、 `asdf plugin remove <name>` コマンドを実行してください。プラグインを削除すると、そのプラグインでインストールされたすべてのツールバージョンが削除されます。\n\n### concurrency\n\nコンパイル時に使用するデフォルトのコア数です。\n\n| Options | Description |\n| --- | --- |\n| 整数値 | ソースコードのコンパイル時に使用するコア数です |\n| `auto` | `nproc`、 `sysctl hw.ncpu`、 `/proc/cpuinfo`、または `1`、の優先順でコア数を計算します |\n\n備考: `ASDF_CONCURRENCY` 環境変数が設定されている場合はそちらが優先されます。\n\n### プラグインフック\n\n下記のタイミングで、カスタムコードを実行することができます:\n\n- プラグインのインストール、Shim再生成、更新および削除をする際の前後\n- プラグインコマンドの実行前後\n\n例えば、 `foo` というプラグインがインストールされていて、 `bar` という実行可能ファイルが提供されている場合、以下のようなフックを使うことで、一番最初にカスタムコードを実行することができます:\n\ntext\n\n```\npre_foo_bar = echo Executing with args: $@\n```\n\n以下のパターンがサポートされています:\n\n- `pre_<plugin_name>_<command>`\n- `pre_asdf_download_<plugin_name>`\n- `{pre,post}_asdf_{install,reshim,uninstall}_<plugin_name>`\n  - `$1`: フルバージョン\n- `{pre,post}_asdf_plugin_{add,update,remove,reshim}`\n  - `$1`: プラグイン名\n- `{pre,post}_asdf_plugin_{add,update,remove}_<plugin_name>`\n\nどのようなコマンドの前後にどのようなコマンドフックを実行すべきかについての詳細は、 [プラグインの作成](https://asdf-vm.com/ja-jp/plugins/create.html) をご覧ください.\n\n## 環境変数\n\n環境変数の設定値は、お使いのシステムやシェルによって異なります。デフォルトロケーションは、インストールした場所や方法(Gitクローン、Homebrew、AUR)によって異なります。\n\n環境変数は通常、 `asdf.sh`/ `asdf.fish` などをsourceする前に設定する必要があります。Elvishの場合は、 `use asdf` の上側に設定します。\n\n以下では、Bashシェルでの使用方法について説明します。\n\n### ASDF_CONFIG_FILE\n\n.asdfrc 構成ファイルへのパスです。任意の場所に設定できます。必ず絶対パスで設定してください。\n\n- 未設定の場合: `$HOME/.asdfrc` の値が使用されます。\n- 使用方法: `export ASDF_CONFIG_FILE=/home/john_doe/.config/asdf/.asdfrc`\n\n### ASDF_DEFAULT_TOOL_VERSIONS_FILENAME\n\nツール名とバージョンの情報を格納するファイルのファイル名です。有効なファイル名であれば何でも設定できます。通常、 `.tool-versions` ファイルを無視したい場合を除き、この値を変更するべきではありません。\n\n- 未設定の場合: `.tool-versions` の値が使用されます。\n- 使用方法: `export ASDF_DEFAULT_TOOL_VERSIONS_FILENAME=tool_versions`\n\n### ASDF_DIR\n\n`asdf` のコアスクリプト場所です。任意の場所に設定できます。必ず絶対パスで設定してください。\n\n- 未設定の場合: `bin/asdf` 実行ファイルの親ディレクトリが使用されます。\n- 使用方法: `export ASDF_DIR=/home/john_doe/.config/asdf`\n\n### ASDF_DATA_DIR\n\n`asdf` がプラグイン、Shim、ツールのバージョンをインストールする場所です。任意の場所に設定できます。必ず絶対パスで設定してください。\n\n- 未設定の場合: `$HOME/.asdf` ディレクトリが存在すればその場所、存在しない場合は `ASDF_DIR` の値を使用します。\n- 使用方法: `export ASDF_DATA_DIR=/home/john_doe/.asdf`\n\n### ASDF_CONCURRENCY\n\nソースコードのコンパイル時に使用するコア数です。この環境変数の値は、asdf構成ファイルの `concurrency` の値よりも優先されます。\n\n- 未設定の場合: asdf構成ファイルの `concurrency` の値が使用されます。\n- 使用方法: `export ASDF_CONCURRENCY=32`\n\n### ASDF_FORCE_PREPEND\n\n`asdf` のShimやパスのディレクトリを `PATH` の先頭(最高優先度)に追加するかどうかを設定します。\n\n- 未設定の場合: macOSでのデフォルト値は `yes`、その他のシステムでのデフォルト値は `no` です。\n- `yes` の場合: `asdf` ディレクトリを強制的に `PATH` の先頭に配置します。\n- `yes` 以外の文字列を設定した場合: `asdf` ディレクトリを強制的に `PATH` の先頭に配置することは _しません_ 。\n- Usage: `ASDF_FORCE_PREPEND=no . \"<path-to-asdf-directory>/asdf.sh\"`\n\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://asdf-vm.com/ja-jp/manage/configuration.html", "title": "構成設定", "description": "`asdf` の構成設定には、他人と共有可能な `.tool-versions` ファイルと、 `.asdfrc` や環境変数によってカスタマイズ可能なユーザ固有の設定とがあります。", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:20:59", "type": "overview", "page_metadata": {"generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "language": "ja-jp", "title": "構成設定 | asdf", "description": "Manage multiple runtime versions with a single CLI tool", "scrapeId": "93b198d8-6a34-44e9-bfb8-4b01d66de8b8", "sourceURL": "https://asdf-vm.com/ja-jp/manage/configuration.html", "url": "https://asdf-vm.com/ja-jp/manage/configuration.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I .tool-versions in asdf-vm?\n\nAssistant: To .tool-versions in asdf-vm, here's what you do:\n.tool-versions ファイルがディレクトリに存在する場合、当該ディレクトリおよびサブディレクトリで、ファイル内で宣言しているツールのバージョンが使用されます。\n\n.tool-versions ファイル内は下記のような記述となっています:\n\n```\nruby 2.5.3\nnodejs 10.15.0\n```\n\nコメントを含めることもできます:\n\n```\nruby 2.5.3 # This is a comment\n# This is another comment\nnodejs 10.15.0\n```\n\nバージョンの表記は下記の形式があります:\n\n- `10.15.0` \\- 実バージョンの表記です。バイナリのダウンロードに対応しているプラグインの場合、バイナリがダウンロードされます。\n- `ref:v1.0.2-a` or `ref:39cb398vb39` \\- 指定されたタグ/コミット/ブランチをgithubからダウンロードし、コンパイルされます。\n- `path:~/src/elixir` \\- 使用するツールをカスタムコンパイルしたバージョンへのパスです。言語開発者などが使用します。\n- `system` \\- このキーワードを指定した場合、asdfが管理していない、システム上のツールバージョンへパススルーします。\n\nヒント\n\nスペースで区切れば、複数のバージョンを指定できます。例えば、Python `3.7.2` を使用し、Python `2.7.15` にフォールバックし、最終的に `system` のPythonにフォールバックさせるには、 `.tool-versions` に下記の行を追記します。\n\n```\npython 3.7.2 2.7.15 system\n```\n\n.tool-versions ファイルで定義されているすべてのツールをインストールするには、 `.tool-versions` ファイルを含むディレクトリで、 `asdf install` コマンドを引数を指定せずに実行します。\n\n.tool-versions ファイルで定義されている単一のツールをインストールするには、 `.tool-versions` ファイルを含むディレクトリで、 `asdf install <name>` コマンドを実行します。ツールは、 `.tool-versions` ファイルで指定されたバージョンでインストールされます。\n\nファイルは、直接編集するか、 `asdf set` コマンドを使用して更新してください..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ja-jp/manage/configuration.html", "title": "構成設定", "description": "`asdf` の構成設定には、他人と共有可能な `.tool-versions` ファイルと、 `.asdfrc` や環境変数によってカスタマイズ可能なユーザ固有の設定とがあります。", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:20:59", "type": "section_detail", "page_metadata": {"generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "language": "ja-jp", "title": "構成設定 | asdf", "description": "Manage multiple runtime versions with a single CLI tool", "scrapeId": "93b198d8-6a34-44e9-bfb8-4b01d66de8b8", "sourceURL": "https://asdf-vm.com/ja-jp/manage/configuration.html", "url": "https://asdf-vm.com/ja-jp/manage/configuration.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I .asdfrc in asdf-vm?\n\nAssistant: To .asdfrc in asdf-vm, here's what you do:\n.asdfrc では、ユーザのマシン固有の構成を設定します。\n\nasdfはデフォルトで `${HOME}/.asdfrc` に構成ファイルを配置します。ファイルの場所は、 [`ASDF_CONFIG_FILE` 環境変数](https://asdf-vm.com/ja-jp/manage/configuration.html#asdf-config-file) で設定できます。\n\n下記は、構成に必要な項目とそのデフォルト値を示しています:\n\ntxt\n\n```\nlegacy_version_file = no\nuse_release_candidates = no\nalways_keep_download = no\nplugin_repository_last_check_duration = 60\ndisable_plugin_short_name_repository = no\nconcurrency = auto\n```\n\n### legacy_version_file\n\n**対応している** プラグインの場合、他のバージョンマネージャで使用されているバージョンファイルを読み込むことができます。例えば、Rubyの `rbenv` であれば `.ruby-version` ファイルを読み込みます。\n\n| オプション | 説明 |\n| --- | --- |\n| `no` デフォルト | バージョンの読み込みには `.tool-versions` を使用します |\n| `yes` | 利用可能なレガシーバージョンファイル( `.ruby-version` など)がある場合、プラグインのフォールバックで使用します |\n\n### always_keep_download\n\n`asdf install` コマンドでダウンロードしたソースコードやバイナリを、保持しておくか削除するかを制御します。\n\n| オプション | 説明 |\n| --- | --- |\n| `no` デフォルト | インストールが成功したら、ソースコードやバイナリを削除します |\n| `yes` | インストール後も、ソースコードやバイナリを保持します |\n\n### plugin_repository_last_check_duration\n\nasdfプラグインリポジトリの同期間隔(分)を制御します。何らかのトリガーイベントが発生した際に、最後に同期した時刻からの経過時間をチェックします。設定された間隔以上の時間が経過していた倍は、新たに同期が開始されます。\n\n| オプション | 説明 |\n| --- | --- |\n| `1` から `999999999` までの整数値 <br>デフォルトは `60` | 最後に同期した時刻から指定時間(分)以上経過していた場合、トリガーイベントで同期します |\n| `0` | トリガーイベントのたびに同期します |\n| `never` | 同期しません |\n\n同期は、以下のコマンドが実行されたときに発生します:\n\n- `asdf plugin add <name>`\n- `asdf plugin list all`\n\n`asdf plugin add <name> <git-url>` コマンドでは、プラグインの同期はトリガーされません。\n\n備考\n\n値を `never` にしても、プラグインリポジトリの初期同期は停止されません。この動作については、 `disable_plugin_short_name_repository` の節をご覧ください。\n\n### disable_plugin_short_name_repository\n\nasdfプラグインのショートネームリポジトリの同期を無効化します。ショートネームリポジトリが無効となっている場合、同期イベントはすぐに終了します。\n\n| オプション | 説明 |\n| --- | --- |\n| `no` デフォルト | 同期イベントが発生した際に、asdfプラグインリポジトリをクローンまたは更新します |\n| `yes` | プラグインショートネームリポジトリを無効化します |\n\n同期は、以下のコマンドが実行されたときに発生します:\n\n- `asdf plugin add <name>`\n- `asdf plugin list all`\n\n`asdf plugin add <name> <git-url>` コマンドでは、プラグインの同期はトリガーされません。\n\n備考\n\nプラグインショートネームリポジトリを無効化しても、すでに同期されたリポジトリは削除されません。プラグインリポジトリを削除するには、 `rm --recursive --trash $ASDF_DATA_DIR/repository` コマンドを実行してください。\n\nまた、プラグインショートネームリポジトリを無効化しても、以前にこのソースからインストールされたプラグインは削除されません。プラグインを削除するには、 `asdf plugin remove <name>` コマンドを実行してください。プラグインを削除すると、そのプラグインでインストールされたすべてのツールバージョンが削除されます。\n\n### concurrency\n\nコンパイル時に使用するデフォルトのコア数です。\n\n| Options | Description |\n| --- | --- |\n| 整数値 | ソースコードのコンパイル時に使用するコア数です |\n| `auto` | `nproc`、 `sysctl hw.ncpu`、 `/proc/cpuinfo`、または `1`、の優先順でコア数を計算します |\n\n備考: `ASDF_CONCURRENCY` 環境変数が設定されている場合はそちらが優先されます。\n\n### プラグインフック\n\n下記のタイミングで、カスタムコードを実行することができます:\n\n- プラグインのインストール、Shim再生成、更新および削除をする際の前後\n- プラグインコマンドの実行前後\n\n例えば、 `foo` というプラグインがインストールされていて、 `bar` という実行可能ファイルが提供されている場合、以下のようなフックを使うことで、一番最初にカスタムコードを実行することができます:\n\ntext\n\n```\npre_foo_bar = echo Executing with args: $@\n```\n\n以下のパターンがサポートされています:\n\n- `pre_<plugin_name>_<command>`\n- `pre_asdf_download_<plugin_name>`\n- `{pre,post}_asdf_{install,reshim,uninstall}_<plugin_name>`\n  - `$1`: フルバージョン\n- `{pre,post}_asdf_plugin_{add,update,remove,reshim}`\n  - `$1`: プラグイン名\n- `{pre,post}_asdf_plugin_{add,update,remove}_<plugin_name>`\n\nどのようなコマンドの前後にどのようなコマンドフックを実行すべきかについての詳細は、 [プラグインの作成](https://asdf-vm.com/ja-jp/plugins/create.html) をご覧ください..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ja-jp/manage/configuration.html", "title": "構成設定", "description": "`asdf` の構成設定には、他人と共有可能な `.tool-versions` ファイルと、 `.asdfrc` や環境変数によってカスタマイズ可能なユーザ固有の設定とがあります。", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:20:59", "type": "section_detail", "page_metadata": {"generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "language": "ja-jp", "title": "構成設定 | asdf", "description": "Manage multiple runtime versions with a single CLI tool", "scrapeId": "93b198d8-6a34-44e9-bfb8-4b01d66de8b8", "sourceURL": "https://asdf-vm.com/ja-jp/manage/configuration.html", "url": "https://asdf-vm.com/ja-jp/manage/configuration.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 環境変数 in asdf-vm?\n\nAssistant: To 環境変数 in asdf-vm, here's what you do:\n環境変数の設定値は、お使いのシステムやシェルによって異なります。デフォルトロケーションは、インストールした場所や方法(Gitクローン、Homebrew、AUR)によって異なります。\n\n環境変数は通常、 `asdf.sh`/ `asdf.fish` などをsourceする前に設定する必要があります。Elvishの場合は、 `use asdf` の上側に設定します。\n\n以下では、Bashシェルでの使用方法について説明します。\n\n### ASDF_CONFIG_FILE\n\n.asdfrc 構成ファイルへのパスです。任意の場所に設定できます。必ず絶対パスで設定してください。\n\n- 未設定の場合: `$HOME/.asdfrc` の値が使用されます。\n- 使用方法: `export ASDF_CONFIG_FILE=/home/john_doe/.config/asdf/.asdfrc`\n\n### ASDF_DEFAULT_TOOL_VERSIONS_FILENAME\n\nツール名とバージョンの情報を格納するファイルのファイル名です。有効なファイル名であれば何でも設定できます。通常、 `.tool-versions` ファイルを無視したい場合を除き、この値を変更するべきではありません。\n\n- 未設定の場合: `.tool-versions` の値が使用されます。\n- 使用方法: `export ASDF_DEFAULT_TOOL_VERSIONS_FILENAME=tool_versions`\n\n### ASDF_DIR\n\n`asdf` のコアスクリプト場所です。任意の場所に設定できます。必ず絶対パスで設定してください。\n\n- 未設定の場合: `bin/asdf` 実行ファイルの親ディレクトリが使用されます。\n- 使用方法: `export ASDF_DIR=/home/john_doe/.config/asdf`\n\n### ASDF_DATA_DIR\n\n`asdf` がプラグイン、Shim、ツールのバージョンをインストールする場所です。任意の場所に設定できます。必ず絶対パスで設定してください。\n\n- 未設定の場合: `$HOME/.asdf` ディレクトリが存在すればその場所、存在しない場合は `ASDF_DIR` の値を使用します。\n- 使用方法: `export ASDF_DATA_DIR=/home/john_doe/.asdf`\n\n### ASDF_CONCURRENCY\n\nソースコードのコンパイル時に使用するコア数です。この環境変数の値は、asdf構成ファイルの `concurrency` の値よりも優先されます。\n\n- 未設定の場合: asdf構成ファイルの `concurrency` の値が使用されます。\n- 使用方法: `export ASDF_CONCURRENCY=32`\n\n### ASDF_FORCE_PREPEND\n\n`asdf` のShimやパスのディレクトリを `PATH` の先頭(最高優先度)に追加するかどうかを設定します。\n\n- 未設定の場合: macOSでのデフォルト値は `yes`、その他のシステムでのデフォルト値は `no` です。\n- `yes` の場合: `asdf` ディレクトリを強制的に `PATH` の先頭に配置します。\n- `yes` 以外の文字列を設定した場合: `asdf` ディレクトリを強制的に `PATH` の先頭に配置することは _しません_ 。\n- Usage: `ASDF_FORCE_PREPEND=no . \"<path-to-asdf-directory>/asdf.sh\"`\n.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ja-jp/manage/configuration.html", "title": "構成設定", "description": "`asdf` の構成設定には、他人と共有可能な `.tool-versions` ファイルと、 `.asdfrc` や環境変数によってカスタマイズ可能なユーザ固有の設定とがあります。", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:20:59", "type": "section_detail", "page_metadata": {"generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "language": "ja-jp", "title": "構成設定 | asdf", "description": "Manage multiple runtime versions with a single CLI tool", "scrapeId": "93b198d8-6a34-44e9-bfb8-4b01d66de8b8", "sourceURL": "https://asdf-vm.com/ja-jp/manage/configuration.html", "url": "https://asdf-vm.com/ja-jp/manage/configuration.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you give me some code examples for 構成設定 in asdf-vm?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**.tool-versions example**:\n\n```yaml\nruby 2.5.3\nnodejs 10.15.0\n```\n\nThis snippet shows you how to .tool-versions example, which is an important aspect of 構成設定.\n\n**Comment example in .tool-versions**:\n\n```yaml\nruby 2.5.3 # This is a comment\n# This is another comment\nnodejs 10.15.0\n```\n\nThis snippet shows you how to comment example in .tool-versions, which is an important aspect of 構成設定.\n\n**Multiple versions example**:\n\n```yaml\npython 3.7.2 2.7.15 system\n```\n\nThis snippet shows you how to multiple versions example, which is an important aspect of 構成設定.\n\n**ASDF_CONFIG_FILE example**:\n\n```yaml\nexport ASDF_CONFIG_FILE=/home/john_doe/.config/asdf/.asdfrc\n```\n\nThis snippet shows you how to asdf_config_file example, which is an important aspect of 構成設定.\n\n**ASDF_DEFAULT_TOOL_VERSIONS_FILENAME example**:\n\n```yaml\nexport ASDF_DEFAULT_TOOL_VERSIONS_FILENAME=tool_versions\n```\n\nThis snippet shows you how to asdf_default_tool_versions_filename example, which is an important aspect of 構成設定.\n\n**ASDF_DIR example**:\n\n```yaml\nexport ASDF_DIR=/home/john_doe/.config/asdf\n```\n\nThis snippet shows you how to asdf_dir example, which is an important aspect of 構成設定.\n\n**ASDF_DATA_DIR example**:\n\n```yaml\nexport ASDF_DATA_DIR=/home/john_doe/.asdf\n```\n\nThis snippet shows you how to asdf_data_dir example, which is an important aspect of 構成設定.\n\n**ASDF_CONCURRENCY example**:\n\n```yaml\nexport ASDF_CONCURRENCY=32\n```\n\nThis snippet shows you how to asdf_concurrency example, which is an important aspect of 構成設定.\n\n**ASDF_FORCE_PREPEND example**:\n\n```yaml\nASDF_FORCE_PREPEND=no . \"<path-to-asdf-directory>/asdf.sh\"\n```\n\nThis snippet shows you how to asdf_force_prepend example, which is an important aspect of 構成設定.\n\n", "metadata": {"source_url": "https://asdf-vm.com/ja-jp/manage/configuration.html", "title": "構成設定", "description": "`asdf` の構成設定には、他人と共有可能な `.tool-versions` ファイルと、 `.asdfrc` や環境変数によってカスタマイズ可能なユーザ固有の設定とがあります。", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:20:59", "type": "code_examples", "page_metadata": {"generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "language": "ja-jp", "title": "構成設定 | asdf", "description": "Manage multiple runtime versions with a single CLI tool", "scrapeId": "93b198d8-6a34-44e9-bfb8-4b01d66de8b8", "sourceURL": "https://asdf-vm.com/ja-jp/manage/configuration.html", "url": "https://asdf-vm.com/ja-jp/manage/configuration.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: What are some tips for using 構成設定 in asdf-vm effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nスペースで区切れば、複数のバージョンを指定できます。例えば、Python `3.7.2` を使用し、Python `2.7.15` にフォールバックし、最終的に `system` のPythonにフォールバックさせるには、 `.tool-versions` に下記の行を追記します。\n\nファイルは、直接編集するか、 `asdf set` コマンドを使用して更新してください。\n\nプラグインショートネームリポジトリを無効化しても、すでに同期されたリポジトリは削除されません。プラグインリポジトリを削除するには、 `rm --recursive --trash $ASDF_DATA_DIR/repository` コマンドを実行してください。\n\nプラグインを削除するには、 `asdf plugin remove <name>` コマンドを実行してください。プラグインを削除すると、そのプラグインでインストールされたすべてのツールバージョンが削除されます。\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://asdf-vm.com/ja-jp/manage/configuration.html", "title": "構成設定", "description": "`asdf` の構成設定には、他人と共有可能な `.tool-versions` ファイルと、 `.asdfrc` や環境変数によってカスタマイズ可能なユーザ固有の設定とがあります。", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:20:59", "type": "best_practices", "page_metadata": {"generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "language": "ja-jp", "title": "構成設定 | asdf", "description": "Manage multiple runtime versions with a single CLI tool", "scrapeId": "93b198d8-6a34-44e9-bfb8-4b01d66de8b8", "sourceURL": "https://asdf-vm.com/ja-jp/manage/configuration.html", "url": "https://asdf-vm.com/ja-jp/manage/configuration.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you explain what 配置 is in asdf-vm?\n\nAssistant: Sure, I'd be happy to explain 配置 in asdf-vm.\n\n# 配置\n\n`asdf` 配置既包括可共享的 `.tool-versions` 文件，也包括用户特定的自定义 `.asdfrc` 和环境变量。Here's a quick rundown of what this is about:\n\n## .tool-versions\n\n无论何时 `.tool-versions` 出现在目录中，它所声明的工具版本将会被用于该目录和任意子目录。\n\n注意\n\n全局默认配置将设置在文件 `$HOME/.tool-versions` 中\n\n一个 `.tool-versions` 文件示例如下所示：\n\n```\nruby 2.5.3\nnodejs 10.15.0\n```\n\n你也可以包含注释在里面：\n\n```\nruby 2.5.3 # 这是一个注释\n# 这是另一个注释\nnodejs 10.15.0\n```\n\n版本号可以有如下格式：\n\n- `10.15.0` \\- 实际的版本号。支持下载二进制文件的插件将会下载二进制文件。\n- `ref:v1.0.2-a` 或者 `ref:39cb398vb39` \\- 指定标签/提交/分支从 github 下载并编译。\n- `path:~/src/elixir` \\- 要使用的工具的自定义编译版本的路径。这种方式供语言开发者等使用。\n- `system` \\- 此关键字会导致 asdf 传递系统上未由 asdf 管理的工具版本。\n\n提示\n\n多版本可以通过空格将它们分隔开来。比如，使用 Python `3.7.2` 回退到 Python `2.7.15` 最后回退到 `system` Python，可以将以下行的内容添加到 `.tool-versions` 文件中。\n\n```\npython 3.7.2 2.7.15 system\n```\n\n为了安装 `.tool-versions` 文件中定义的所有工具，在包含 `.tool-versions` 文件的目录中不带其他参数执行 `asdf install` 命令。\n\n为了安装 `.tool-versions` 文件中定义的某个工具，在包含 `.tool-versions` 文件的目录中运行 `asdf install <name>` 命令。这个工具将会安装 `.tool-versions` 文件所指定的版本。\n\n可以直接编辑这个文件或者使用 `asdf local` （或者 `asdf global`）来更新工具版本。\n\n## $HOME/.asdfrc\n\n给你的家目录添加一个 `.asdfrc` 文件然后 asdf 将会使用这个文件所指定的配置。下面的文件展示了所需的格式，其中包含用于演示的默认值：\n\ntxt\n\n```\nlegacy_version_file = no\nuse_release_candidates = no\nalways_keep_download = no\nplugin_repository_last_check_duration = 60\ndisable_plugin_short_name_repository = no\nconcurrency = auto\n```\n\n### legacy_version_file\n\n插件 **支持** 读取其他版本管理器使用的版本文件，比如，Ruby 的 `rbenv` 的 `.ruby-version` 文件。\n\n| 选项 | 描述 |\n| --- | --- |\n| `no` 默认 | 从 `.tool-versions` 文件读取版本 |\n| `yes` | 如果可行的话，从传统版本文件读取版本（ `.ruby-versions`） |\n\n### always_keep_download\n\n配置 `asdf install` 命令以保留或删除下载的源代码或二进制文件。\n\n| 选项 | 描述 |\n| --- | --- |\n| `no` 默认 | 在成功安装后删除源代码或二进制文件 |\n| `yes` | 在成功安装后保留源代码或二进制文件 |\n\n### plugin_repository_last_check_duration\n\n配置自上次 asdf 插件存储库同步到下一次存储库同步的持续时间。命令 `asdf plugin add <name>` 或者 `asdf plugin list all` 将会触发持续时间的检查，如果持续时间已过，则进行同步。\n\n| 选项 | 描述 |\n| --- | --- |\n| 从 `1` 到 `999999999` 的数字 <br>默认 为 `60` | 如果已过自上次同步的持续时间，触发器事件发生时同步 |\n| `0` | 每个触发器事件发生时同步 |\n| `never` | 从不同步 |\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://asdf-vm.com/zh-hans/manage/configuration.html", "title": "配置", "description": "`asdf` 配置既包括可共享的 `.tool-versions` 文件，也包括用户特定的自定义 `.asdfrc` 和环境变量。", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:21:38", "type": "overview", "page_metadata": {"description": "Manage multiple runtime versions with a single CLI tool", "title": "配置 | asdf", "viewport": "width=device-width,initial-scale=1", "language": "zh-hans", "generator": "VitePress v1.6.3", "scrapeId": "9f9a0350-859e-4a2e-a097-733b19ecabfc", "sourceURL": "https://asdf-vm.com/zh-hans/manage/configuration.html", "url": "https://asdf-vm.com/zh-hans/manage/configuration.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I .tool-versions in asdf-vm?\n\nAssistant: To .tool-versions in asdf-vm, here's what you do:\n无论何时 `.tool-versions` 出现在目录中，它所声明的工具版本将会被用于该目录和任意子目录。\n\n注意\n\n全局默认配置将设置在文件 `$HOME/.tool-versions` 中\n\n一个 `.tool-versions` 文件示例如下所示：\n\n```\nruby 2.5.3\nnodejs 10.15.0\n```\n\n你也可以包含注释在里面：\n\n```\nruby 2.5.3 # 这是一个注释\n# 这是另一个注释\nnodejs 10.15.0\n```\n\n版本号可以有如下格式：\n\n- `10.15.0` \\- 实际的版本号。支持下载二进制文件的插件将会下载二进制文件。\n- `ref:v1.0.2-a` 或者 `ref:39cb398vb39` \\- 指定标签/提交/分支从 github 下载并编译。\n- `path:~/src/elixir` \\- 要使用的工具的自定义编译版本的路径。这种方式供语言开发者等使用。\n- `system` \\- 此关键字会导致 asdf 传递系统上未由 asdf 管理的工具版本。\n\n提示\n\n多版本可以通过空格将它们分隔开来。比如，使用 Python `3.7.2` 回退到 Python `2.7.15` 最后回退到 `system` Python，可以将以下行的内容添加到 `.tool-versions` 文件中。\n\n```\npython 3.7.2 2.7.15 system\n```\n\n为了安装 `.tool-versions` 文件中定义的所有工具，在包含 `.tool-versions` 文件的目录中不带其他参数执行 `asdf install` 命令。\n\n为了安装 `.tool-versions` 文件中定义的某个工具，在包含 `.tool-versions` 文件的目录中运行 `asdf install <name>` 命令。这个工具将会安装 `.tool-versions` 文件所指定的版本。\n\n可以直接编辑这个文件或者使用 `asdf local` （或者 `asdf global`）来更新工具版本。.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/zh-hans/manage/configuration.html", "title": "配置", "description": "`asdf` 配置既包括可共享的 `.tool-versions` 文件，也包括用户特定的自定义 `.asdfrc` 和环境变量。", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:21:38", "type": "section_detail", "page_metadata": {"description": "Manage multiple runtime versions with a single CLI tool", "title": "配置 | asdf", "viewport": "width=device-width,initial-scale=1", "language": "zh-hans", "generator": "VitePress v1.6.3", "scrapeId": "9f9a0350-859e-4a2e-a097-733b19ecabfc", "sourceURL": "https://asdf-vm.com/zh-hans/manage/configuration.html", "url": "https://asdf-vm.com/zh-hans/manage/configuration.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I $home/.asdfrc in asdf-vm?\n\nAssistant: To $home/.asdfrc in asdf-vm, here's what you do:\n给你的家目录添加一个 `.asdfrc` 文件然后 asdf 将会使用这个文件所指定的配置。下面的文件展示了所需的格式，其中包含用于演示的默认值：\n\ntxt\n\n```\nlegacy_version_file = no\nuse_release_candidates = no\nalways_keep_download = no\nplugin_repository_last_check_duration = 60\ndisable_plugin_short_name_repository = no\nconcurrency = auto\n```\n\n### legacy_version_file\n\n插件 **支持** 读取其他版本管理器使用的版本文件，比如，Ruby 的 `rbenv` 的 `.ruby-version` 文件。\n\n| 选项 | 描述 |\n| --- | --- |\n| `no` 默认 | 从 `.tool-versions` 文件读取版本 |\n| `yes` | 如果可行的话，从传统版本文件读取版本（ `.ruby-versions`） |\n\n### always_keep_download\n\n配置 `asdf install` 命令以保留或删除下载的源代码或二进制文件。\n\n| 选项 | 描述 |\n| --- | --- |\n| `no` 默认 | 在成功安装后删除源代码或二进制文件 |\n| `yes` | 在成功安装后保留源代码或二进制文件 |\n\n### plugin_repository_last_check_duration\n\n配置自上次 asdf 插件存储库同步到下一次存储库同步的持续时间。命令 `asdf plugin add <name>` 或者 `asdf plugin list all` 将会触发持续时间的检查，如果持续时间已过，则进行同步。\n\n| 选项 | 描述 |\n| --- | --- |\n| 从 `1` 到 `999999999` 的数字 <br>默认 为 `60` | 如果已过自上次同步的持续时间，触发器事件发生时同步 |\n| `0` | 每个触发器事件发生时同步 |\n| `never` | 从不同步 |.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/zh-hans/manage/configuration.html", "title": "配置", "description": "`asdf` 配置既包括可共享的 `.tool-versions` 文件，也包括用户特定的自定义 `.asdfrc` 和环境变量。", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:21:38", "type": "section_detail", "page_metadata": {"description": "Manage multiple runtime versions with a single CLI tool", "title": "配置 | asdf", "viewport": "width=device-width,initial-scale=1", "language": "zh-hans", "generator": "VitePress v1.6.3", "scrapeId": "9f9a0350-859e-4a2e-a097-733b19ecabfc", "sourceURL": "https://asdf-vm.com/zh-hans/manage/configuration.html", "url": "https://asdf-vm.com/zh-hans/manage/configuration.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you give me some code examples for 配置 in asdf-vm?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**.tool-versions 示例**:\n\n```yaml\nruby 2.5.3\nnodejs 10.15.0\n```\n\nThis snippet shows you how to .tool-versions 示例, which is an important aspect of 配置.\n\n**包含注释的 .tool-versions 示例**:\n\n```yaml\nruby 2.5.3 # 这是一个注释\n# 这是另一个注释\nnodejs 10.15.0\n```\n\nThis snippet shows you how to 包含注释的 .tool-versions 示例, which is an important aspect of 配置.\n\n**多版本示例**:\n\n```yaml\npython 3.7.2 2.7.15 system\n```\n\nThis snippet shows you how to 多版本示例, which is an important aspect of 配置.\n\n**$HOME/.asdfrc 示例**:\n\n```yaml\nlegacy_version_file = no\nuse_release_candidates = no\nalways_keep_download = no\nplugin_repository_last_check_duration = 60\ndisable_plugin_short_name_repository = no\nconcurrency = auto\n```\n\nThis snippet shows you how to $home/.asdfrc 示例, which is an important aspect of 配置.\n\n", "metadata": {"source_url": "https://asdf-vm.com/zh-hans/manage/configuration.html", "title": "配置", "description": "`asdf` 配置既包括可共享的 `.tool-versions` 文件，也包括用户特定的自定义 `.asdfrc` 和环境变量。", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:21:38", "type": "code_examples", "page_metadata": {"description": "Manage multiple runtime versions with a single CLI tool", "title": "配置 | asdf", "viewport": "width=device-width,initial-scale=1", "language": "zh-hans", "generator": "VitePress v1.6.3", "scrapeId": "9f9a0350-859e-4a2e-a097-733b19ecabfc", "sourceURL": "https://asdf-vm.com/zh-hans/manage/configuration.html", "url": "https://asdf-vm.com/zh-hans/manage/configuration.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: What are some tips for using 配置 in asdf-vm effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\n多版本可以通过空格将它们分隔开来。\n\n为了安装 `.tool-versions` 文件中定义的所有工具，在包含 `.tool-versions` 文件的目录中不带其他参数执行 `asdf install` 命令。\n\n为了安装 `.tool-versions` 文件中定义的某个工具，在包含 `.tool-versions` 文件的目录中运行 `asdf install <name>` 命令。\n\n可以直接编辑这个文件或者使用 `asdf local` （或者 `asdf global`）来更新工具版本。\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://asdf-vm.com/zh-hans/manage/configuration.html", "title": "配置", "description": "`asdf` 配置既包括可共享的 `.tool-versions` 文件，也包括用户特定的自定义 `.asdfrc` 和环境变量。", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:21:38", "type": "best_practices", "page_metadata": {"description": "Manage multiple runtime versions with a single CLI tool", "title": "配置 | asdf", "viewport": "width=device-width,initial-scale=1", "language": "zh-hans", "generator": "VitePress v1.6.3", "scrapeId": "9f9a0350-859e-4a2e-a097-733b19ecabfc", "sourceURL": "https://asdf-vm.com/zh-hans/manage/configuration.html", "url": "https://asdf-vm.com/zh-hans/manage/configuration.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you explain what Introdução is in asdf-vm?\n\nAssistant: Sure, I'd be happy to explain Introdução in asdf-vm.\n\n# Introdução\n\nO `asdf` é um gerenciador de versões que simplifica o fluxo de desenvolvimento ao permitir que todas as definições de versão das ferramentas sejam contidas em um único arquivo (.tool-versions).Here's a quick rundown of what this is about:\n\n## Funcionamento\n\nApós instalar e configurar o `asdf` no seu shell, plugins podem ser instalados para gerenciar determinadas ferramentas. Quando uma ferramenta é instalada por um plugin, os executáveis que foram instalados possuem shims criados para cada um deles. Quando você roda algum destes executáveis, o shim é executado, permitindo que o `asdf` identifique qual versão da ferramenta está configurada no arquivo `.tool-versions` e execute esta versão.\n\n## Projetos relacionados\n\nFerramentas como o nvm, n e rbenv são escritas em shell scripts que criam shims para os executáveis instalados para essas ferramentas. O `asdf` é bem similar e foi criado para competir neste meio de ferramentas de gerenciamento de versão. O grande diferencial do `asdf` é que seu sistema de plugins elimina a necessidade de um gerenciador de versões para cada ferramenta, esta com diferentes comandos e arquivos de configuração.\n\n## direnv\n\nAumenta os shells existentes com a possibilidade de utilizar diferentes variáveis de ambiente com base no diretório atual. O `asdf` não gerencia variáveis de ambiente, entretanto existe o plugin asdf-direnv para integrar o comportamento do direnv ao asdf. Veja a documentação do direnv para mais detalhes.\n\n## Homebrew\n\nO gerenciador de pacotes faltante para o macOS (ou Linux). O Homebrew gerencia seus pacotes e dependências destes pacotes. O `asdf` não gerencia dependencias, não é um gerenciador de pacotes, a escolha do gerenciador de pacotes é reservada ao usuário. Veja a documentação do Homebrew para mais detalhes.\n\n## NixOS\n\nO Nix é uma ferramenta que relaciona o gerenciamento de pacotes e as configurações de sistema. O NixOS visa construir ambientes verdadeiramente replicáveis através da gerência das versões exatas dos pacotes e dependências de cada ferramenta, algo que o `asdf` não faz. O NixOS faz isso através da sua própria linguagem de programação, muitas ferramentas da linha de comando e uma coleção de pacotes contendo mais de 60,000 destes. Novamente, o `asdf` não gerencia dependências/pacotes e não é um gerenciador de pacotes. Veja a documentação do NixOS para mais detalhes.\n\n## Por que usar o asdf?\n\nO `asdf` garante que equipes utilizem exatamente a mesma versão de alguma ferramenta, com suporte para diversas delas através do sistema de plugins e a simplicidade e familiaridade de ser um único shell script que você inclui na configuração do seu shell. Nota: O `asdf` não foi feito para ser o gerenciador de pacotes do seu sistema, mas sim uma ferramenta para gerenciar versões de outras ferramentas. Não é por que é possível criar um plugin para qualquer ferramenta/linguagem com o `asdf` que esta sempre será a solução mais adequada.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://asdf-vm.com/pt-br/guide/introduction.html", "title": "Introdução", "description": "O `asdf` é um gerenciador de versões que simplifica o fluxo de desenvolvimento ao permitir que todas as definições de versão das ferramentas sejam contidas em um único arquivo (.tool-versions).", "has_code_examples": false, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:31:52", "type": "overview", "page_metadata": {"description": "Manage multiple runtime versions with a single CLI tool", "viewport": "width=device-width,initial-scale=1", "title": "Introdução | asdf", "generator": "VitePress v1.6.3", "language": "pr-br", "scrapeId": "0775053c-be88-4443-8b2d-815126079f2c", "sourceURL": "https://asdf-vm.com/pt-br/guide/introduction.html", "url": "https://asdf-vm.com/pt-br/guide/introduction.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I funcionamento in asdf-vm?\n\nAssistant: To funcionamento in asdf-vm, here's what you do:\nApós instalar e configurar o `asdf` no seu shell, plugins podem ser instalados para gerenciar determinadas ferramentas. Quando uma ferramenta é instalada por um plugin, os executáveis que foram instalados possuem shims criados para cada um deles. Quando você roda algum destes executáveis, o shim é executado, permitindo que o `asdf` identifique qual versão da ferramenta está configurada no arquivo `.tool-versions` e execute esta versão..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/pt-br/guide/introduction.html", "title": "Introdução", "description": "O `asdf` é um gerenciador de versões que simplifica o fluxo de desenvolvimento ao permitir que todas as definições de versão das ferramentas sejam contidas em um único arquivo (.tool-versions).", "has_code_examples": false, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:31:52", "type": "section_detail", "page_metadata": {"description": "Manage multiple runtime versions with a single CLI tool", "viewport": "width=device-width,initial-scale=1", "title": "Introdução | asdf", "generator": "VitePress v1.6.3", "language": "pr-br", "scrapeId": "0775053c-be88-4443-8b2d-815126079f2c", "sourceURL": "https://asdf-vm.com/pt-br/guide/introduction.html", "url": "https://asdf-vm.com/pt-br/guide/introduction.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I projetos relacionados in asdf-vm?\n\nAssistant: To projetos relacionados in asdf-vm, here's what you do:\nFerramentas como o nvm, n e rbenv são escritas em shell scripts que criam shims para os executáveis instalados para essas ferramentas. O `asdf` é bem similar e foi criado para competir neste meio de ferramentas de gerenciamento de versão. O grande diferencial do `asdf` é que seu sistema de plugins elimina a necessidade de um gerenciador de versões para cada ferramenta, esta com diferentes comandos e arquivos de configuração..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/pt-br/guide/introduction.html", "title": "Introdução", "description": "O `asdf` é um gerenciador de versões que simplifica o fluxo de desenvolvimento ao permitir que todas as definições de versão das ferramentas sejam contidas em um único arquivo (.tool-versions).", "has_code_examples": false, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:31:52", "type": "section_detail", "page_metadata": {"description": "Manage multiple runtime versions with a single CLI tool", "viewport": "width=device-width,initial-scale=1", "title": "Introdução | asdf", "generator": "VitePress v1.6.3", "language": "pr-br", "scrapeId": "0775053c-be88-4443-8b2d-815126079f2c", "sourceURL": "https://asdf-vm.com/pt-br/guide/introduction.html", "url": "https://asdf-vm.com/pt-br/guide/introduction.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I direnv in asdf-vm?\n\nAssistant: To direnv in asdf-vm, here's what you do:\nAumenta os shells existentes com a possibilidade de utilizar diferentes variáveis de ambiente com base no diretório atual. O `asdf` não gerencia variáveis de ambiente, entretanto existe o plugin asdf-direnv para integrar o comportamento do direnv ao asdf. Veja a documentação do direnv para mais detalhes..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/pt-br/guide/introduction.html", "title": "Introdução", "description": "O `asdf` é um gerenciador de versões que simplifica o fluxo de desenvolvimento ao permitir que todas as definições de versão das ferramentas sejam contidas em um único arquivo (.tool-versions).", "has_code_examples": false, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:31:52", "type": "section_detail", "page_metadata": {"description": "Manage multiple runtime versions with a single CLI tool", "viewport": "width=device-width,initial-scale=1", "title": "Introdução | asdf", "generator": "VitePress v1.6.3", "language": "pr-br", "scrapeId": "0775053c-be88-4443-8b2d-815126079f2c", "sourceURL": "https://asdf-vm.com/pt-br/guide/introduction.html", "url": "https://asdf-vm.com/pt-br/guide/introduction.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I homebrew in asdf-vm?\n\nAssistant: To homebrew in asdf-vm, here's what you do:\nO gerenciador de pacotes faltante para o macOS (ou Linux). O Homebrew gerencia seus pacotes e dependências destes pacotes. O `asdf` não gerencia dependencias, não é um gerenciador de pacotes, a escolha do gerenciador de pacotes é reservada ao usuário. Veja a documentação do Homebrew para mais detalhes..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/pt-br/guide/introduction.html", "title": "Introdução", "description": "O `asdf` é um gerenciador de versões que simplifica o fluxo de desenvolvimento ao permitir que todas as definições de versão das ferramentas sejam contidas em um único arquivo (.tool-versions).", "has_code_examples": false, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:31:52", "type": "section_detail", "page_metadata": {"description": "Manage multiple runtime versions with a single CLI tool", "viewport": "width=device-width,initial-scale=1", "title": "Introdução | asdf", "generator": "VitePress v1.6.3", "language": "pr-br", "scrapeId": "0775053c-be88-4443-8b2d-815126079f2c", "sourceURL": "https://asdf-vm.com/pt-br/guide/introduction.html", "url": "https://asdf-vm.com/pt-br/guide/introduction.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I nixos in asdf-vm?\n\nAssistant: To nixos in asdf-vm, here's what you do:\nO Nix é uma ferramenta que relaciona o gerenciamento de pacotes e as configurações de sistema. O NixOS visa construir ambientes verdadeiramente replicáveis através da gerência das versões exatas dos pacotes e dependências de cada ferramenta, algo que o `asdf` não faz. O NixOS faz isso através da sua própria linguagem de programação, muitas ferramentas da linha de comando e uma coleção de pacotes contendo mais de 60,000 destes. Novamente, o `asdf` não gerencia dependências/pacotes e não é um gerenciador de pacotes. Veja a documentação do NixOS para mais detalhes..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/pt-br/guide/introduction.html", "title": "Introdução", "description": "O `asdf` é um gerenciador de versões que simplifica o fluxo de desenvolvimento ao permitir que todas as definições de versão das ferramentas sejam contidas em um único arquivo (.tool-versions).", "has_code_examples": false, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:31:52", "type": "section_detail", "page_metadata": {"description": "Manage multiple runtime versions with a single CLI tool", "viewport": "width=device-width,initial-scale=1", "title": "Introdução | asdf", "generator": "VitePress v1.6.3", "language": "pr-br", "scrapeId": "0775053c-be88-4443-8b2d-815126079f2c", "sourceURL": "https://asdf-vm.com/pt-br/guide/introduction.html", "url": "https://asdf-vm.com/pt-br/guide/introduction.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I por que usar o asdf? in asdf-vm?\n\nAssistant: To por que usar o asdf? in asdf-vm, here's what you do:\nO `asdf` garante que equipes utilizem exatamente a mesma versão de alguma ferramenta, com suporte para diversas delas através do sistema de plugins e a simplicidade e familiaridade de ser um único shell script que você inclui na configuração do seu shell. Nota: O `asdf` não foi feito para ser o gerenciador de pacotes do seu sistema, mas sim uma ferramenta para gerenciar versões de outras ferramentas. Não é por que é possível criar um plugin para qualquer ferramenta/linguagem com o `asdf` que esta sempre será a solução mais adequada..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/pt-br/guide/introduction.html", "title": "Introdução", "description": "O `asdf` é um gerenciador de versões que simplifica o fluxo de desenvolvimento ao permitir que todas as definições de versão das ferramentas sejam contidas em um único arquivo (.tool-versions).", "has_code_examples": false, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:31:52", "type": "section_detail", "page_metadata": {"description": "Manage multiple runtime versions with a single CLI tool", "viewport": "width=device-width,initial-scale=1", "title": "Introdução | asdf", "generator": "VitePress v1.6.3", "language": "pr-br", "scrapeId": "0775053c-be88-4443-8b2d-815126079f2c", "sourceURL": "https://asdf-vm.com/pt-br/guide/introduction.html", "url": "https://asdf-vm.com/pt-br/guide/introduction.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: What are some tips for using Introdução in asdf-vm effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nO `asdf` deve ser usado para gerenciar versões de ferramentas, não como um gerenciador de pacotes do sistema.\n\nUtilize o sistema de plugins do `asdf` para suportar diversas ferramentas de forma simplificada.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://asdf-vm.com/pt-br/guide/introduction.html", "title": "Introdução", "description": "O `asdf` é um gerenciador de versões que simplifica o fluxo de desenvolvimento ao permitir que todas as definições de versão das ferramentas sejam contidas em um único arquivo (.tool-versions).", "has_code_examples": false, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:31:52", "type": "best_practices", "page_metadata": {"description": "Manage multiple runtime versions with a single CLI tool", "viewport": "width=device-width,initial-scale=1", "title": "Introdução | asdf", "generator": "VitePress v1.6.3", "language": "pr-br", "scrapeId": "0775053c-be88-4443-8b2d-815126079f2c", "sourceURL": "https://asdf-vm.com/pt-br/guide/introduction.html", "url": "https://asdf-vm.com/pt-br/guide/introduction.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you explain what Configuration is in asdf-vm?\n\nAssistant: Sure, I'd be happy to explain Configuration in asdf-vm.\n\n# Configuration\n\nA configuração do `asdf` abrange tanto os arquivos `.tool-versions` compartilháveis quanto as personalizações específicas do usuário com `.asdfrc` e variáveis de ambiente.Here's a quick rundown of what this is about:\n\n## .tool-versions\n\nSempre que o arquivo `.tool-versions` estiver presente em um diretório, as versões da ferramenta que ele declara serão usadas nesse diretório e em seus subdiretórios.\n\nConfigurações globais podem ser modificadas no arquivo `$HOME/.tool-versions`\n\nO arquivo `.tool-versions` se parece assim:\n\n```\nruby 2.5.3\nnodejs 10.15.0\n```\n\nAs versões podem estar no seguinte formato:\n\n- `10.15.0` \\- uma versão real. Os plugins que suportam o download de binários farão o download de binários.\n- `ref:v1.0.2-a` ou `ref:39cb398vb39` \\- _tag/commit/branch_ para download pelo github e compilação um path costumizado e compi\n- `path:~/src/elixir` \\- um path para uma versão compilada e personalizada de uma ferramenta pronta para usar. Para uso por linguagens de desenvolvimento e outros.\n- `system` \\- faz com que asdf passe para a versão da ferramenta no sistema que não é gerenciada por asdf .\n\nVárias versões podem ser definidas, separando-as com um espaço. Por exemplo, para usar Python 3.7.2, e também Python 2.7.15, use a linha abaixo em seu arquivo `.tool-versions`.\n\n```\npython 3.7.2 2.7.15 system\n```\n\nPara instalar todas as ferramentas definidas em `.tool-versions`, execute o camando `asdf install` sem argumentos no mesmo diretório de `.tool-versions.\n\nPara isntalar somente uma ferramenta definida em `.tool-versions`, execute o camando `asdf install` sem argumentos no mesmo diretório de `.tool-versions`. A ferramenta será instalada na versão especificada no arquivo `.tool-versions`.\n\nEdite o arquivo diretamente no diretório ou use `asdf local` (ou `asdf global`) para atualiza-lo.\n\n## $HOME/.asdfrc\n\nAdicione um arquivo `.asdfrc` ao seu diretório home e asdf usará as configurações especificadas no arquivo. O arquivo deve ser formatado assim:\n\n```\nlegacy_version_file = yes\n```\n\n**Configurações**\n\n- `legacy_version_file` \\- por padrão é `no`. Se definido como `yes`, fará com que os plug-ins que suportam esse recurso leiam os arquivos de versão usados por outros gerenciadores de versão (por exemplo, `.ruby-version` no caso do `rbenv` do Ruby).\n\n- `always_keep_download` \\- por padrão é `no`. Se definido como `yes`, fará com que o `asdf install` sempre mantenha o código-fonte ou binário baixado. Se definido como `no`, o código fonte ou binário baixado por `asdf install` será excluído após a instalação bem sucedida.\n\n- `plugin_repository_last_check_duration` \\- por padrão é `60` min (1 hrs). Ele define a duração da última verificação do repositório de plugins asdf. Quando o comando `asdf plugin add <nome>`, `asdf plugin list all` for executado, ele verificará a duração da última atualização para atualizar o repositório. Se definido como `0`, ele atualizará o repositório de plugins asdf todas as vezes.\n\n## Variáveis de ambiente\n\n- `ASDF_CONFIG_FILE` \\- O padrão é `~ /.asdfrc` conforme descrito acima. Pode ser definido para qualquer local.\n- `ASDF_DEFAULT_TOOL_VERSIONS_FILENAME` \\- O nome do arquivo que armazena os nomes e versões das ferramentas. O padrão é `.tool-versions`. Pode ser qualquer nome de arquivo válido. Normalmente você não deve substituir o valor padrão, a menos que deseja que o asdf ignore os arquivos `.tool-versions`.\n- `ASDF_DIR` \\- O padrão é `~/.asdf` \\- Localização dos arquivos `asdf`. Se você instalar `asdf` em algum outro diretório, defina-o para esse diretório. Por exemplo, se você estiver instalando através do AUR, você deve definir isso para `/opt/asdf-vm`.\n- `ASDF_DATA_DIR` \\- O padrão é `~/.asdf` \\- Local onde `asdf` instala plugins, correções e instalações. Pode ser definido para qualquer local antes de fornecer `asdf.sh` ou `asdf.fish` mencionado na seção acima. Para Elvish, isso pode ser definido acima de `use asdf`.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://asdf-vm.com/pt-br/manage/configuration.html", "title": "Configuration", "description": "A configuração do `asdf` abrange tanto os arquivos `.tool-versions` compartilháveis quanto as personalizações específicas do usuário com `.asdfrc` e variáveis de ambiente.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:32:13", "type": "overview", "page_metadata": {"title": "Configuration | asdf", "language": "pr-br", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "scrapeId": "43c394e1-33d3-4f41-ac15-291b0d6a3030", "sourceURL": "https://asdf-vm.com/pt-br/manage/configuration.html", "url": "https://asdf-vm.com/pt-br/manage/configuration.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I .tool-versions in asdf-vm?\n\nAssistant: To .tool-versions in asdf-vm, here's what you do:\nSempre que o arquivo `.tool-versions` estiver presente em um diretório, as versões da ferramenta que ele declara serão usadas nesse diretório e em seus subdiretórios.\n\nConfigurações globais podem ser modificadas no arquivo `$HOME/.tool-versions`\n\nO arquivo `.tool-versions` se parece assim:\n\n```\nruby 2.5.3\nnodejs 10.15.0\n```\n\nAs versões podem estar no seguinte formato:\n\n- `10.15.0` \\- uma versão real. Os plugins que suportam o download de binários farão o download de binários.\n- `ref:v1.0.2-a` ou `ref:39cb398vb39` \\- _tag/commit/branch_ para download pelo github e compilação um path costumizado e compi\n- `path:~/src/elixir` \\- um path para uma versão compilada e personalizada de uma ferramenta pronta para usar. Para uso por linguagens de desenvolvimento e outros.\n- `system` \\- faz com que asdf passe para a versão da ferramenta no sistema que não é gerenciada por asdf .\n\nVárias versões podem ser definidas, separando-as com um espaço. Por exemplo, para usar Python 3.7.2, e também Python 2.7.15, use a linha abaixo em seu arquivo `.tool-versions`.\n\n```\npython 3.7.2 2.7.15 system\n```\n\nPara instalar todas as ferramentas definidas em `.tool-versions`, execute o camando `asdf install` sem argumentos no mesmo diretório de `.tool-versions.\n\nPara isntalar somente uma ferramenta definida em `.tool-versions`, execute o camando `asdf install` sem argumentos no mesmo diretório de `.tool-versions`. A ferramenta será instalada na versão especificada no arquivo `.tool-versions`.\n\nEdite o arquivo diretamente no diretório ou use `asdf local` (ou `asdf global`) para atualiza-lo..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/pt-br/manage/configuration.html", "title": "Configuration", "description": "A configuração do `asdf` abrange tanto os arquivos `.tool-versions` compartilháveis quanto as personalizações específicas do usuário com `.asdfrc` e variáveis de ambiente.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:32:13", "type": "section_detail", "page_metadata": {"title": "Configuration | asdf", "language": "pr-br", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "scrapeId": "43c394e1-33d3-4f41-ac15-291b0d6a3030", "sourceURL": "https://asdf-vm.com/pt-br/manage/configuration.html", "url": "https://asdf-vm.com/pt-br/manage/configuration.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I $home/.asdfrc in asdf-vm?\n\nAssistant: To $home/.asdfrc in asdf-vm, here's what you do:\nAdicione um arquivo `.asdfrc` ao seu diretório home e asdf usará as configurações especificadas no arquivo. O arquivo deve ser formatado assim:\n\n```\nlegacy_version_file = yes\n```\n\n**Configurações**\n\n- `legacy_version_file` \\- por padrão é `no`. Se definido como `yes`, fará com que os plug-ins que suportam esse recurso leiam os arquivos de versão usados por outros gerenciadores de versão (por exemplo, `.ruby-version` no caso do `rbenv` do Ruby).\n\n- `always_keep_download` \\- por padrão é `no`. Se definido como `yes`, fará com que o `asdf install` sempre mantenha o código-fonte ou binário baixado. Se definido como `no`, o código fonte ou binário baixado por `asdf install` será excluído após a instalação bem sucedida.\n\n- `plugin_repository_last_check_duration` \\- por padrão é `60` min (1 hrs). Ele define a duração da última verificação do repositório de plugins asdf. Quando o comando `asdf plugin add <nome>`, `asdf plugin list all` for executado, ele verificará a duração da última atualização para atualizar o repositório. Se definido como `0`, ele atualizará o repositório de plugins asdf todas as vezes..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/pt-br/manage/configuration.html", "title": "Configuration", "description": "A configuração do `asdf` abrange tanto os arquivos `.tool-versions` compartilháveis quanto as personalizações específicas do usuário com `.asdfrc` e variáveis de ambiente.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:32:13", "type": "section_detail", "page_metadata": {"title": "Configuration | asdf", "language": "pr-br", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "scrapeId": "43c394e1-33d3-4f41-ac15-291b0d6a3030", "sourceURL": "https://asdf-vm.com/pt-br/manage/configuration.html", "url": "https://asdf-vm.com/pt-br/manage/configuration.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I variáveis de ambiente in asdf-vm?\n\nAssistant: To variáveis de ambiente in asdf-vm, here's what you do:\n- `ASDF_CONFIG_FILE` \\- O padrão é `~ /.asdfrc` conforme descrito acima. Pode ser definido para qualquer local.\n- `ASDF_DEFAULT_TOOL_VERSIONS_FILENAME` \\- O nome do arquivo que armazena os nomes e versões das ferramentas. O padrão é `.tool-versions`. Pode ser qualquer nome de arquivo válido. Normalmente você não deve substituir o valor padrão, a menos que deseja que o asdf ignore os arquivos `.tool-versions`.\n- `ASDF_DIR` \\- O padrão é `~/.asdf` \\- Localização dos arquivos `asdf`. Se você instalar `asdf` em algum outro diretório, defina-o para esse diretório. Por exemplo, se você estiver instalando através do AUR, você deve definir isso para `/opt/asdf-vm`.\n- `ASDF_DATA_DIR` \\- O padrão é `~/.asdf` \\- Local onde `asdf` instala plugins, correções e instalações. Pode ser definido para qualquer local antes de fornecer `asdf.sh` ou `asdf.fish` mencionado na seção acima. Para Elvish, isso pode ser definido acima de `use asdf`..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/pt-br/manage/configuration.html", "title": "Configuration", "description": "A configuração do `asdf` abrange tanto os arquivos `.tool-versions` compartilháveis quanto as personalizações específicas do usuário com `.asdfrc` e variáveis de ambiente.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:32:13", "type": "section_detail", "page_metadata": {"title": "Configuration | asdf", "language": "pr-br", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "scrapeId": "43c394e1-33d3-4f41-ac15-291b0d6a3030", "sourceURL": "https://asdf-vm.com/pt-br/manage/configuration.html", "url": "https://asdf-vm.com/pt-br/manage/configuration.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you give me some code examples for Configuration in asdf-vm?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**.tool-versions example**:\n\n```yaml\nruby 2.5.3\nnodejs 10.15.0\n```\n\nThis snippet shows you how to .tool-versions example, which is an important aspect of configuration.\n\n**Multiple versions example**:\n\n```yaml\npython 3.7.2 2.7.15 system\n```\n\nThis snippet shows you how to multiple versions example, which is an important aspect of configuration.\n\n**.asdfrc example**:\n\n```yaml\nlegacy_version_file = yes\n```\n\nThis snippet shows you how to .asdfrc example, which is an important aspect of configuration.\n\n", "metadata": {"source_url": "https://asdf-vm.com/pt-br/manage/configuration.html", "title": "Configuration", "description": "A configuração do `asdf` abrange tanto os arquivos `.tool-versions` compartilháveis quanto as personalizações específicas do usuário com `.asdfrc` e variáveis de ambiente.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:32:13", "type": "code_examples", "page_metadata": {"title": "Configuration | asdf", "language": "pr-br", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "scrapeId": "43c394e1-33d3-4f41-ac15-291b0d6a3030", "sourceURL": "https://asdf-vm.com/pt-br/manage/configuration.html", "url": "https://asdf-vm.com/pt-br/manage/configuration.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: What are some tips for using Configuration in asdf-vm effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nEdite o arquivo diretamente no diretório ou use `asdf local` (ou `asdf global`) para atualiza-lo.\n\nPara instalar todas as ferramentas definidas em `.tool-versions`, execute o camando `asdf install` sem argumentos no mesmo diretório de `.tool-versions.\n\nSe definido como `0`, ele atualizará o repositório de plugins asdf todas as vezes.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://asdf-vm.com/pt-br/manage/configuration.html", "title": "Configuration", "description": "A configuração do `asdf` abrange tanto os arquivos `.tool-versions` compartilháveis quanto as personalizações específicas do usuário com `.asdfrc` e variáveis de ambiente.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:32:13", "type": "best_practices", "page_metadata": {"title": "Configuration | asdf", "language": "pr-br", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "scrapeId": "43c394e1-33d3-4f41-ac15-291b0d6a3030", "sourceURL": "https://asdf-vm.com/pt-br/manage/configuration.html", "url": "https://asdf-vm.com/pt-br/manage/configuration.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you explain what Core is in asdf-vm?\n\nAssistant: Sure, I'd be happy to explain Core in asdf-vm.\n\n# Core\n\nA lista de comandos do núcleo `asdf` é bastante pequena, mas pode facilitar muitos fluxos de trabalho.Here's a quick rundown of what this is about:\n\n## Instalação e configuração\n\nBaseado no [Guia de Introdução](https://asdf-vm.com/pt-br/guide/getting-started.html).\n\n## Execute\n\nExecuta o comando shim para a versão atual\n\n```shell\nasdf exec <command> [args...]\n```\n\n## Variável de Ambiente\n\n```shell\nasdf env <command> [util]\n```\n\n## Informações\n\nUm comando auxiliar para imprimir as informações de depuração do SO, Shell e `asdf`. Compartilhe isso ao fazer um relatório de bug.\n\n```shell\nasdf info\n```\n\n## Reshim\n\nIsso recria os shims para a versão atual de um pacote. Por padrão, os calços são criados por plugins durante a instalação de uma ferramenta. Algumas ferramentas como a [npm CLI](https://docs.npmjs.com/cli/) permitem a instalação global de executáveis, por exemplo, instalando [Yarn](https://yarnpkg.com/) via `npm install -g fio`. Como este executável não foi instalado por meio do ciclo de vida do plug-in, ainda não existe shim para ele. `asdf reshim nodejs <version>` forçará o recálculo de shims para quaisquer novos executáveis, como `yarn`, para `<version>` de `nodejs`.\n\n```shell\nasdf reshim <name> <version>\n```\n\n## Versionamento do Shim\n\nLista os plugins e versões que fornecem shims para um comando.\n\nComo exemplo, o [Node.js](https://nodejs.org/) vem com dois executáveis, `node` e `npm`. Quando muitas versões das ferramentas são instaladas com [`asdf-nodejs`](https://github.com/asdf-vm/asdf-nodejs/) `shimversions` pode retornar:\n\n```shell\n➜ asdf shimversions node\nnodejs 14.8.0\nnodejs 14.17.3\nnodejs 16.5.0\n```\n\n```shell\n➜ asdf shimversions npm\nnodejs 14.8.0\nnodejs 14.17.3\nnodejs 16.5.0\n```\n\n## Atualizar\n\nPor favor, use o mesmo método que você usou para instalar o asdf para atualizá-lo. A versão mais recente do asdf é mostrada no canto superior direito desta página.\n\n## Desinstalar\n\nPara desinstalar `asdf` siga os passos:\n\n**Bash & Git**\n\n1. Em seu `~/.bashrc` remova as linhas do `asdf.sh` e seus complementos:\n\n```shell\n. \"$HOME/.asdf/asdf.sh\"\n. \"$HOME/.asdf/completions/asdf.bash\"\n```\n\n2. Remova o diretório `$HOME/.asdf`:\n\n```shell\nrm -rf \"${ASDF_DATA_DIR:-$HOME/.asdf}\"\n```\n\n3. Execute o comando para remover todos os arquivos de configurações do `asdf`:\n\n```shell\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\n**Bash & Git (macOS)**\n\n1. Em seu `~/.bash_profile` remova as linhas do `asdf.sh` e remova seus complementos:\n\n```shell\n. \"$HOME/.asdf/asdf.sh\"\n. \"$HOME/.asdf/completions/asdf.bash\"\n```\n\n2. Remova o diretório `$HOME/.asdf`:\n\n```shell\nrm -rf \"${ASDF_DATA_DIR:-$HOME/.asdf}\"\n```\n\n3. Execute o comando para remover todos os arquivos de configurações do `asdf`:\n\n```shell\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\n**Bash & Homebrew**\n\n1. Em seu `~/.bashrc` remova as linhas do `asdf.sh` e remova seus complementos:\n\n```shell\n. $(brew --prefix asdf)/libexec/asdf.sh\n. $(brew --prefix asdf)/etc/bash_completion.d/asdf.bash\n```\n\n2. Desinstale usando seu gerenciador de pacotes:\n\n```shell\nbrew uninstall asdf --force\n```\n\n3. Execute o comando para remover todos os arquivos de configurações do `asdf`:\n\n```shell\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\n**Bash & Homebrew (macOS)**\n\nCaso esteja usando **macOs Catalina ou mais recente**, por padrão o _shell_ é **ZSH**. Se não achar alguma configuração em seu `~/.bash_profile` talvez esteja em `~/.zshrc` em cada caso siga as intruções do ZSH.\n\n1. Em seu `~/.bash_profile` remova as linhas do `asdf.sh` e remova seus complementos:\n\n```shell\n. $(brew --prefix asdf)/libexec/asdf.sh\n. $(brew --prefix asdf)/etc/bash_completion.d/asdf.bash\n```\n\n2. Desinstale usando seu gerenciador de pacotes:\n\n```shell\nbrew uninstall asdf --force\n```\n\n3. Execute o comando para remover todos os arquivos de configurações do `asdf`:\n\n```shell\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\n**Bash & Pacman**\n\n1. Em seu `~/.bashrc` remova as linhas do `asdf.sh` e seus complementos:\n\n```shell\n. /opt/asdf-vm/asdf.sh\n```\n\n2. Desinstale usando seu gerenciador de pacotes:\n\n```shell\npacman -Rs asdf-vm\n```\n\n3. Remova o diretório `$HOME/.asdf`:\n\n```shell\nrm -rf \"${ASDF_DATA_DIR:-$HOME/.asdf}\"\n```\n\n4. Execute o comando para remover todos os arquivos de configurações do `asdf`:\n\n```shell\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\n**Fish & Git**\n\n1. Em seu `~/.config/fish/config.fish` remova as linhas do `asdf.sh`:\n\n```shell\nsource ~/.asdf/asdf.fish\n```\n\ne remova os complementos de com esse comando:\n\n```shell\nrm -rf ~/.config/fish/completions/asdf.fish\n```\n\n2. Remova o diretório `$HOME/.asdf`:\n\n```shell\nrm -rf (string join : -- $ASDF_DATA_DIR $HOME/.asdf)\n```\n\n3. Execute o comando para remover todos os arquivos de configurações do `asdf`:\n\n```shell\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\n**Fish & Homebrew**\n\n1. Em seu `~/.config/fish/config.fish` remova as linhas do `asdf.fish`:\n\n```shell\nsource \"(brew --prefix asdf)\"/libexec/asdf.fish\n```\n\n2. Desinstale usando seu gerenciador de pacotes:\n\n```shell\nbrew uninstall asdf --force\n```\n\n3. Execute o comando para remover todos os arquivos de configurações do `asdf`:\n\n```shell\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\n**Fish & Pacman**\n\n1. Em seu `~/.config/fish/config.fish` remova as linhas do `asdf.fish`:\n\n```shell\nsource /opt/asdf-vm/asdf.fish\n```\n\n2. Desinstale usando seu gerenciador de pacotes:\n\n```shell\npacman -Rs asdf-vm\n```\n\n3. Remova o diretório `$HOME/.asdf`:\n\n```shell\nrm -rf (string join : -- $ASDF_DATA_DIR $HOME/.asdf)\n```\n\n4. Execute o comando para remover todos os arquivos de configurações do `asdf`:\n\n```shell\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\n**Elvish & Git**\n\n1. Em seu `~/.config/elvish/rc.elv` remova as linhas que importa o módulo `asdf`:\n\n```shell\nuse asdf _asdf; var asdf~ = $_asdf:asdf~\nset edit:completion:arg-completer[asdf] = $_asdf:arg-completer~\n```\n\ne desinstale o módulo `asdf` com este comando:\n\n```shell\nrm -f ~/.config/elvish/lib/asdf.elv\n```\n\n2. Remova o diretório `$HOME/.asdf`:\n\n```shell\nif (!=s $E:ASDF_DATA_DIR \"\") { rm -rf $E:ASDF_DATA_DIR } else { rm -rf ~/.asdf }\n```\n\n3. Execute este comando para remover todos os arquivos de configuração `asdf`:\n\n```shell\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\n**Elvish & Homebrew**\n\n1. Em seu `~/.config/elvish/rc.elv` remova as linhas que importa o módulo `asdf`:\n\n```shell\nuse asdf _asdf; var asdf~ = $_asdf:asdf~\nset edit:completion:arg-completer[asdf] = $_asdf:arg-completer~\n```\n\ne desinstale o módulo `asdf` com este comando:\n\n```shell\nrm -f ~/.config/elvish/lib/asdf.elv\n```\n\n2. Desinstale com seu gerenciador de pacotes:\n\n```shell\nbrew uninstall asdf --force\n```\n\n3. Execute este comando para remover todos os arquivos de configuração `asdf`:\n\n```shell\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\n**Elvish & Pacman**\n\n1. Em seu `~/.config/elvish/rc.elv` remova as linhas que importa o módulo `asdf`:\n\n```shell\nuse asdf _asdf; var asdf~ = $_asdf:asdf~\nset edit:completion:arg-completer[asdf] = $_asdf:arg-completer~\n```\n\ne desinstale o módulo `asdf` com este comando:\n\n```shell\nrm -f ~/.config/elvish/lib/asdf.elv\n```\n\n2. Desinstale com seu gerenciador de pacotes:\n\n```shell\npacman -Rs asdf-vm\n```\n\n3. Remova o diretório `$ HOME/.asdf`:\n\n```shell\nif (!=s $E:ASDF_DATA_DIR \"\") { rm -rf $E:ASDF_DATA_DIR } else { rm -rf ~/.asdf }\n```\n\n4. Execute este comando para remover todos os arquivos de configuração `asdf`:\n\n```shell\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\n**ZSH & Git**\n\n1. Em seu `~/.zshrc` remova as linhas do `asdf.sh` e seus complementos:\n\n```shell\n. \"$HOME/.asdf/asdf.sh\"\n# ...\nfpath=(${ASDF_DIR}/completions $fpath)\nautoload -Uz compinit\ncompinit\n```\n\n**Ou** use ZSH Framework plugin.\n\n2. Remova o diretório `$HOME/.asdf`:\n\n```shell\nrm -rf \"${ASDF_DATA_DIR:-$HOME/.asdf}\"\n```\n\n3. Execute o comando para remover todos os arquivos de configurações do `asdf`:\n\n```shell\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\n**ZSH & Homebrew**\n\n1. Em seu `~/.zshrc` remova as linhas do `asdf.sh`:\n\n```shell\n. $(brew --prefix asdf)/libexec/asdf.sh\n```\n\n2. Desinstale usando seu gerenciador de pacotes:\n\n```shell\nbrew uninstall asdf --force\n```\n\n3. Execute o comando para remover todos os arquivos de configurações do `asdf`:\n\n```shell\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\n**ZSH & Pacman**\n\n1. Em seu `~/.zshrc` remova as linhas do `asdf.sh`:\n\n```shell\n. /opt/asdf-vm/asdf.sh\n```\n\n2. Desinstale usando seu gerenciador de pacotes:\n\n```shell\npacman -Rs asdf-vm\n```\n\n3. Remova o diretório `$HOME/.asdf`:\n\n```shell\nrm -rf \"${ASDF_DATA_DIR:-$HOME/.asdf}\"\n```\n\n4. Execute o comando para remover todos os arquivos de configurações do `asdf`:\n\n```shell\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\nTudo pronto! 🎉\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://asdf-vm.com/pt-br/manage/core.html", "title": "Core", "description": "A lista de comandos do núcleo `asdf` é bastante pequena, mas pode facilitar muitos fluxos de trabalho.", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 03:32:53", "type": "overview", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "generator": "VitePress v1.6.3", "language": "pr-br", "description": "Manage multiple runtime versions with a single CLI tool", "title": "Core | asdf", "scrapeId": "e8399783-4a09-4f42-b156-725db0638ab7", "sourceURL": "https://asdf-vm.com/pt-br/manage/core.html", "url": "https://asdf-vm.com/pt-br/manage/core.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I instalação e configuração in asdf-vm?\n\nAssistant: To instalação e configuração in asdf-vm, here's what you do:\nBaseado no [Guia de Introdução](https://asdf-vm.com/pt-br/guide/getting-started.html)..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/pt-br/manage/core.html", "title": "Core", "description": "A lista de comandos do núcleo `asdf` é bastante pequena, mas pode facilitar muitos fluxos de trabalho.", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 03:32:53", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "generator": "VitePress v1.6.3", "language": "pr-br", "description": "Manage multiple runtime versions with a single CLI tool", "title": "Core | asdf", "scrapeId": "e8399783-4a09-4f42-b156-725db0638ab7", "sourceURL": "https://asdf-vm.com/pt-br/manage/core.html", "url": "https://asdf-vm.com/pt-br/manage/core.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I execute in asdf-vm?\n\nAssistant: To execute in asdf-vm, here's what you do:\nExecuta o comando shim para a versão atual\n\n```shell\nasdf exec <command> [args...]\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/pt-br/manage/core.html", "title": "Core", "description": "A lista de comandos do núcleo `asdf` é bastante pequena, mas pode facilitar muitos fluxos de trabalho.", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 03:32:53", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "generator": "VitePress v1.6.3", "language": "pr-br", "description": "Manage multiple runtime versions with a single CLI tool", "title": "Core | asdf", "scrapeId": "e8399783-4a09-4f42-b156-725db0638ab7", "sourceURL": "https://asdf-vm.com/pt-br/manage/core.html", "url": "https://asdf-vm.com/pt-br/manage/core.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I variável de ambiente in asdf-vm?\n\nAssistant: To variável de ambiente in asdf-vm, here's what you do:\n```shell\nasdf env <command> [util]\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/pt-br/manage/core.html", "title": "Core", "description": "A lista de comandos do núcleo `asdf` é bastante pequena, mas pode facilitar muitos fluxos de trabalho.", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 03:32:53", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "generator": "VitePress v1.6.3", "language": "pr-br", "description": "Manage multiple runtime versions with a single CLI tool", "title": "Core | asdf", "scrapeId": "e8399783-4a09-4f42-b156-725db0638ab7", "sourceURL": "https://asdf-vm.com/pt-br/manage/core.html", "url": "https://asdf-vm.com/pt-br/manage/core.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I informações in asdf-vm?\n\nAssistant: To informações in asdf-vm, here's what you do:\nUm comando auxiliar para imprimir as informações de depuração do SO, Shell e `asdf`. Compartilhe isso ao fazer um relatório de bug.\n\n```shell\nasdf info\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/pt-br/manage/core.html", "title": "Core", "description": "A lista de comandos do núcleo `asdf` é bastante pequena, mas pode facilitar muitos fluxos de trabalho.", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 03:32:53", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "generator": "VitePress v1.6.3", "language": "pr-br", "description": "Manage multiple runtime versions with a single CLI tool", "title": "Core | asdf", "scrapeId": "e8399783-4a09-4f42-b156-725db0638ab7", "sourceURL": "https://asdf-vm.com/pt-br/manage/core.html", "url": "https://asdf-vm.com/pt-br/manage/core.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I reshim in asdf-vm?\n\nAssistant: To reshim in asdf-vm, here's what you do:\nIsso recria os shims para a versão atual de um pacote. Por padrão, os calços são criados por plugins durante a instalação de uma ferramenta. Algumas ferramentas como a [npm CLI](https://docs.npmjs.com/cli/) permitem a instalação global de executáveis, por exemplo, instalando [Yarn](https://yarnpkg.com/) via `npm install -g fio`. Como este executável não foi instalado por meio do ciclo de vida do plug-in, ainda não existe shim para ele. `asdf reshim nodejs <version>` forçará o recálculo de shims para quaisquer novos executáveis, como `yarn`, para `<version>` de `nodejs`.\n\n```shell\nasdf reshim <name> <version>\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/pt-br/manage/core.html", "title": "Core", "description": "A lista de comandos do núcleo `asdf` é bastante pequena, mas pode facilitar muitos fluxos de trabalho.", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 03:32:53", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "generator": "VitePress v1.6.3", "language": "pr-br", "description": "Manage multiple runtime versions with a single CLI tool", "title": "Core | asdf", "scrapeId": "e8399783-4a09-4f42-b156-725db0638ab7", "sourceURL": "https://asdf-vm.com/pt-br/manage/core.html", "url": "https://asdf-vm.com/pt-br/manage/core.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I versionamento do shim in asdf-vm?\n\nAssistant: To versionamento do shim in asdf-vm, here's what you do:\nLista os plugins e versões que fornecem shims para um comando.\n\nComo exemplo, o [Node.js](https://nodejs.org/) vem com dois executáveis, `node` e `npm`. Quando muitas versões das ferramentas são instaladas com [`asdf-nodejs`](https://github.com/asdf-vm/asdf-nodejs/) `shimversions` pode retornar:\n\n```shell\n➜ asdf shimversions node\nnodejs 14.8.0\nnodejs 14.17.3\nnodejs 16.5.0\n```\n\n```shell\n➜ asdf shimversions npm\nnodejs 14.8.0\nnodejs 14.17.3\nnodejs 16.5.0\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/pt-br/manage/core.html", "title": "Core", "description": "A lista de comandos do núcleo `asdf` é bastante pequena, mas pode facilitar muitos fluxos de trabalho.", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 03:32:53", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "generator": "VitePress v1.6.3", "language": "pr-br", "description": "Manage multiple runtime versions with a single CLI tool", "title": "Core | asdf", "scrapeId": "e8399783-4a09-4f42-b156-725db0638ab7", "sourceURL": "https://asdf-vm.com/pt-br/manage/core.html", "url": "https://asdf-vm.com/pt-br/manage/core.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I atualizar in asdf-vm?\n\nAssistant: To atualizar in asdf-vm, here's what you do:\nPor favor, use o mesmo método que você usou para instalar o asdf para atualizá-lo. A versão mais recente do asdf é mostrada no canto superior direito desta página..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/pt-br/manage/core.html", "title": "Core", "description": "A lista de comandos do núcleo `asdf` é bastante pequena, mas pode facilitar muitos fluxos de trabalho.", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 03:32:53", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "generator": "VitePress v1.6.3", "language": "pr-br", "description": "Manage multiple runtime versions with a single CLI tool", "title": "Core | asdf", "scrapeId": "e8399783-4a09-4f42-b156-725db0638ab7", "sourceURL": "https://asdf-vm.com/pt-br/manage/core.html", "url": "https://asdf-vm.com/pt-br/manage/core.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I desinstalar in asdf-vm?\n\nAssistant: To desinstalar in asdf-vm, here's what you do:\nPara desinstalar `asdf` siga os passos:\n\n**Bash & Git**\n\n1. Em seu `~/.bashrc` remova as linhas do `asdf.sh` e seus complementos:\n\n```shell\n. \"$HOME/.asdf/asdf.sh\"\n. \"$HOME/.asdf/completions/asdf.bash\"\n```\n\n2. Remova o diretório `$HOME/.asdf`:\n\n```shell\nrm -rf \"${ASDF_DATA_DIR:-$HOME/.asdf}\"\n```\n\n3. Execute o comando para remover todos os arquivos de configurações do `asdf`:\n\n```shell\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\n**Bash & Git (macOS)**\n\n1. Em seu `~/.bash_profile` remova as linhas do `asdf.sh` e remova seus complementos:\n\n```shell\n. \"$HOME/.asdf/asdf.sh\"\n. \"$HOME/.asdf/completions/asdf.bash\"\n```\n\n2. Remova o diretório `$HOME/.asdf`:\n\n```shell\nrm -rf \"${ASDF_DATA_DIR:-$HOME/.asdf}\"\n```\n\n3. Execute o comando para remover todos os arquivos de configurações do `asdf`:\n\n```shell\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\n**Bash & Homebrew**\n\n1. Em seu `~/.bashrc` remova as linhas do `asdf.sh` e remova seus complementos:\n\n```shell\n. $(brew --prefix asdf)/libexec/asdf.sh\n. $(brew --prefix asdf)/etc/bash_completion.d/asdf.bash\n```\n\n2. Desinstale usando seu gerenciador de pacotes:\n\n```shell\nbrew uninstall asdf --force\n```\n\n3. Execute o comando para remover todos os arquivos de configurações do `asdf`:\n\n```shell\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\n**Bash & Homebrew (macOS)**\n\nCaso esteja usando **macOs Catalina ou mais recente**, por padrão o _shell_ é **ZSH**. Se não achar alguma configuração em seu `~/.bash_profile` talvez esteja em `~/.zshrc` em cada caso siga as intruções do ZSH.\n\n1. Em seu `~/.bash_profile` remova as linhas do `asdf.sh` e remova seus complementos:\n\n```shell\n. $(brew --prefix asdf)/libexec/asdf.sh\n. $(brew --prefix asdf)/etc/bash_completion.d/asdf.bash\n```\n\n2. Desinstale usando seu gerenciador de pacotes:\n\n```shell\nbrew uninstall asdf --force\n```\n\n3. Execute o comando para remover todos os arquivos de configurações do `asdf`:\n\n```shell\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\n**Bash & Pacman**\n\n1. Em seu `~/.bashrc` remova as linhas do `asdf.sh` e seus complementos:\n\n```shell\n. /opt/asdf-vm/asdf.sh\n```\n\n2. Desinstale usando seu gerenciador de pacotes:\n\n```shell\npacman -Rs asdf-vm\n```\n\n3. Remova o diretório `$HOME/.asdf`:\n\n```shell\nrm -rf \"${ASDF_DATA_DIR:-$HOME/.asdf}\"\n```\n\n4. Execute o comando para remover todos os arquivos de configurações do `asdf`:\n\n```shell\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\n**Fish & Git**\n\n1. Em seu `~/.config/fish/config.fish` remova as linhas do `asdf.sh`:\n\n```shell\nsource ~/.asdf/asdf.fish\n```\n\ne remova os complementos de com esse comando:\n\n```shell\nrm -rf ~/.config/fish/completions/asdf.fish\n```\n\n2. Remova o diretório `$HOME/.asdf`:\n\n```shell\nrm -rf (string join : -- $ASDF_DATA_DIR $HOME/.asdf)\n```\n\n3. Execute o comando para remover todos os arquivos de configurações do `asdf`:\n\n```shell\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\n**Fish & Homebrew**\n\n1. Em seu `~/.config/fish/config.fish` remova as linhas do `asdf.fish`:\n\n```shell\nsource \"(brew --prefix asdf)\"/libexec/asdf.fish\n```\n\n2. Desinstale usando seu gerenciador de pacotes:\n\n```shell\nbrew uninstall asdf --force\n```\n\n3. Execute o comando para remover todos os arquivos de configurações do `asdf`:\n\n```shell\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\n**Fish & Pacman**\n\n1. Em seu `~/.config/fish/config.fish` remova as linhas do `asdf.fish`:\n\n```shell\nsource /opt/asdf-vm/asdf.fish\n```\n\n2. Desinstale usando seu gerenciador de pacotes:\n\n```shell\npacman -Rs asdf-vm\n```\n\n3. Remova o diretório `$HOME/.asdf`:\n\n```shell\nrm -rf (string join : -- $ASDF_DATA_DIR $HOME/.asdf)\n```\n\n4. Execute o comando para remover todos os arquivos de configurações do `asdf`:\n\n```shell\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\n**Elvish & Git**\n\n1. Em seu `~/.config/elvish/rc.elv` remova as linhas que importa o módulo `asdf`:\n\n```shell\nuse asdf _asdf; var asdf~ = $_asdf:asdf~\nset edit:completion:arg-completer[asdf] = $_asdf:arg-completer~\n```\n\ne desinstale o módulo `asdf` com este comando:\n\n```shell\nrm -f ~/.config/elvish/lib/asdf.elv\n```\n\n2. Remova o diretório `$HOME/.asdf`:\n\n```shell\nif (!=s $E:ASDF_DATA_DIR \"\") { rm -rf $E:ASDF_DATA_DIR } else { rm -rf ~/.asdf }\n```\n\n3. Execute este comando para remover todos os arquivos de configuração `asdf`:\n\n```shell\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\n**Elvish & Homebrew**\n\n1. Em seu `~/.config/elvish/rc.elv` remova as linhas que importa o módulo `asdf`:\n\n```shell\nuse asdf _asdf; var asdf~ = $_asdf:asdf~\nset edit:completion:arg-completer[asdf] = $_asdf:arg-completer~\n```\n\ne desinstale o módulo `asdf` com este comando:\n\n```shell\nrm -f ~/.config/elvish/lib/asdf.elv\n```\n\n2. Desinstale com seu gerenciador de pacotes:\n\n```shell\nbrew uninstall asdf --force\n```\n\n3. Execute este comando para remover todos os arquivos de configuração `asdf`:\n\n```shell\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\n**Elvish & Pacman**\n\n1. Em seu `~/.config/elvish/rc.elv` remova as linhas que importa o módulo `asdf`:\n\n```shell\nuse asdf _asdf; var asdf~ = $_asdf:asdf~\nset edit:completion:arg-completer[asdf] = $_asdf:arg-completer~\n```\n\ne desinstale o módulo `asdf` com este comando:\n\n```shell\nrm -f ~/.config/elvish/lib/asdf.elv\n```\n\n2. Desinstale com seu gerenciador de pacotes:\n\n```shell\npacman -Rs asdf-vm\n```\n\n3. Remova o diretório `$ HOME/.asdf`:\n\n```shell\nif (!=s $E:ASDF_DATA_DIR \"\") { rm -rf $E:ASDF_DATA_DIR } else { rm -rf ~/.asdf }\n```\n\n4. Execute este comando para remover todos os arquivos de configuração `asdf`:\n\n```shell\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\n**ZSH & Git**\n\n1. Em seu `~/.zshrc` remova as linhas do `asdf.sh` e seus complementos:\n\n```shell\n. \"$HOME/.asdf/asdf.sh\"\n# ...\nfpath=(${ASDF_DIR}/completions $fpath)\nautoload -Uz compinit\ncompinit\n```\n\n**Ou** use ZSH Framework plugin.\n\n2. Remova o diretório `$HOME/.asdf`:\n\n```shell\nrm -rf \"${ASDF_DATA_DIR:-$HOME/.asdf}\"\n```\n\n3. Execute o comando para remover todos os arquivos de configurações do `asdf`:\n\n```shell\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\n**ZSH & Homebrew**\n\n1. Em seu `~/.zshrc` remova as linhas do `asdf.sh`:\n\n```shell\n. $(brew --prefix asdf)/libexec/asdf.sh\n```\n\n2. Desinstale usando seu gerenciador de pacotes:\n\n```shell\nbrew uninstall asdf --force\n```\n\n3. Execute o comando para remover todos os arquivos de configurações do `asdf`:\n\n```shell\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\n**ZSH & Pacman**\n\n1. Em seu `~/.zshrc` remova as linhas do `asdf.sh`:\n\n```shell\n. /opt/asdf-vm/asdf.sh\n```\n\n2. Desinstale usando seu gerenciador de pacotes:\n\n```shell\npacman -Rs asdf-vm\n```\n\n3. Remova o diretório `$HOME/.asdf`:\n\n```shell\nrm -rf \"${ASDF_DATA_DIR:-$HOME/.asdf}\"\n```\n\n4. Execute o comando para remover todos os arquivos de configurações do `asdf`:\n\n```shell\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\nTudo pronto! 🎉.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/pt-br/manage/core.html", "title": "Core", "description": "A lista de comandos do núcleo `asdf` é bastante pequena, mas pode facilitar muitos fluxos de trabalho.", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 03:32:53", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "generator": "VitePress v1.6.3", "language": "pr-br", "description": "Manage multiple runtime versions with a single CLI tool", "title": "Core | asdf", "scrapeId": "e8399783-4a09-4f42-b156-725db0638ab7", "sourceURL": "https://asdf-vm.com/pt-br/manage/core.html", "url": "https://asdf-vm.com/pt-br/manage/core.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you give me some code examples for Core in asdf-vm?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Execute Command**:\n\n```yaml\nasdf exec <command> [args...]\n```\n\nThis snippet shows you how to execute command, which is an important aspect of core.\n\n**Environment Variable Command**:\n\n```yaml\nasdf env <command> [util]\n```\n\nThis snippet shows you how to environment variable command, which is an important aspect of core.\n\n**Info Command**:\n\n```yaml\nasdf info\n```\n\nThis snippet shows you how to info command, which is an important aspect of core.\n\n**Reshim Command**:\n\n```yaml\nasdf reshim <name> <version>\n```\n\nThis snippet shows you how to reshim command, which is an important aspect of core.\n\n**Shim Versions Command**:\n\n```yaml\nasdf shimversions <command>\n```\n\nThis snippet shows you how to shim versions command, which is an important aspect of core.\n\n**Bash & Git Uninstall Step 1**:\n\n```yaml\n. \"$HOME/.asdf/asdf.sh\"\n. \"$HOME/.asdf/completions/asdf.bash\"\n```\n\nThis snippet shows you how to bash & git uninstall step 1, which is an important aspect of core.\n\n**Bash & Git Uninstall Step 2**:\n\n```yaml\nrm -rf \"${ASDF_DATA_DIR:-$HOME/.asdf}\"\n```\n\nThis snippet shows you how to bash & git uninstall step 2, which is an important aspect of core.\n\n**Bash & Git Uninstall Step 3**:\n\n```yaml\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\nThis snippet shows you how to bash & git uninstall step 3, which is an important aspect of core.\n\n**Fish & Git Uninstall Step 1**:\n\n```yaml\nsource ~/.asdf/asdf.fish\n```\n\nThis snippet shows you how to fish & git uninstall step 1, which is an important aspect of core.\n\n**Fish & Git Uninstall Step 2**:\n\n```yaml\nrm -rf ~/.config/fish/completions/asdf.fish\n```\n\nThis snippet shows you how to fish & git uninstall step 2, which is an important aspect of core.\n\n**Fish & Git Uninstall Step 3**:\n\n```yaml\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\nThis snippet shows you how to fish & git uninstall step 3, which is an important aspect of core.\n\n**ZSH & Git Uninstall Step 1**:\n\n```yaml\n. \"$HOME/.asdf/asdf.sh\"\n# ...\nfpath=(${ASDF_DIR}/completions $fpath)\nautoload -Uz compinit\ncompinit\n```\n\nThis snippet shows you how to zsh & git uninstall step 1, which is an important aspect of core.\n\n**ZSH & Git Uninstall Step 2**:\n\n```yaml\nrm -rf \"${ASDF_DATA_DIR:-$HOME/.asdf}\"\n```\n\nThis snippet shows you how to zsh & git uninstall step 2, which is an important aspect of core.\n\n**ZSH & Git Uninstall Step 3**:\n\n```yaml\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\nThis snippet shows you how to zsh & git uninstall step 3, which is an important aspect of core.\n\n", "metadata": {"source_url": "https://asdf-vm.com/pt-br/manage/core.html", "title": "Core", "description": "A lista de comandos do núcleo `asdf` é bastante pequena, mas pode facilitar muitos fluxos de trabalho.", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 03:32:53", "type": "code_examples", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "generator": "VitePress v1.6.3", "language": "pr-br", "description": "Manage multiple runtime versions with a single CLI tool", "title": "Core | asdf", "scrapeId": "e8399783-4a09-4f42-b156-725db0638ab7", "sourceURL": "https://asdf-vm.com/pt-br/manage/core.html", "url": "https://asdf-vm.com/pt-br/manage/core.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: What are some tips for using Core in asdf-vm effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nUse the same method you used to install asdf to update it.\n\nThe latest version of asdf is shown at the top right of the page.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://asdf-vm.com/pt-br/manage/core.html", "title": "Core", "description": "A lista de comandos do núcleo `asdf` é bastante pequena, mas pode facilitar muitos fluxos de trabalho.", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 03:32:53", "type": "best_practices", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "generator": "VitePress v1.6.3", "language": "pr-br", "description": "Manage multiple runtime versions with a single CLI tool", "title": "Core | asdf", "scrapeId": "e8399783-4a09-4f42-b156-725db0638ab7", "sourceURL": "https://asdf-vm.com/pt-br/manage/core.html", "url": "https://asdf-vm.com/pt-br/manage/core.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you explain what 项目简介 is in asdf-vm?\n\nAssistant: Sure, I'd be happy to explain 项目简介 in asdf-vm.\n\n# 项目简介\n\n`asdf` 是一个工具版本管理器，简化开发工作流程并可通过插件接口扩展到所有工具和运行环境。Here's a quick rundown of what this is about:\n\n## 它是如何工作的\n\n一旦 `asdf` 核心在 Shell 配置中设置好之后，你可以安装插件来管理特定的工具。当通过插件安装工具时，安装的可执行程序会为每个可执行程序创建 [垫片](https://zh.wikipedia.org/wiki/%E5%9E%AB%E7%89%87_(%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1))。当你尝试运行其中一个可执行程序时，将运行垫片，从而允许 `asdf` 识别 `.tool-versions` 文件中设置的工具版本并执行该版本。\n\n## 相关项目\n\n### nvm / n / rbenv 等\n[nvm](https://github.com/nvm-sh/nvm), [n](https://github.com/tj/n) 和 [rbenv](https://github.com/rbenv/rbenv) 等工具都是用 Shell 脚本写的，这些脚本能为工具安装的可执行程序创建垫片。\n\n`asdf` 非常相似，目的是在工具/运行环境版本管理领域竞争。 `asdf` 的区别之处在于它的插件系统，它消除了每个工具/运行环境对管理工具的需求、每个管理工具的不同命令以及存储库中不同的 `*-版本` 文件。\n\n### direnv\n> 使用可以根据当前目录加载和卸载环境变量的新功能增强现有 shell。\n\n`asdf` 不管理环境变量，但是有一个插件 [`asdf-direnv`](https://github.com/asdf-community/asdf-direnv) 可以用来集成 direnv 的特性到 `asdf` 中。\n\n请查看 [direnv 文档](https://direnv.net/) 了解更多。\n\n### Homebrew\n> macOS（或者 Linux）上缺失包的管理器\n\nHomebrew 管理你的软件包及其上游依赖。 `asdf` 不管理上游依赖，它不是包管理器。这个责任取决于用户，尽管我们试图保持依赖关系列表很小。\n\n请查看 [Homebrew 文档](https://brew.sh/) 了解更多。\n\n### NixOS\n> Nix 是一种采用独特方法进行软件包管理和系统配置的工具\n\nNixOS 旨在通过管理每个工具的整个依赖关系树中软件包的确切版本来构建真正可重复的环境，有些是 `asdf` 无法做到的。NixOS 使用自己的编程语言、许多命令行工具和超过 60,000 个包的包集合来实现这一点。\n\n同样， `asdf` 不管理上游依赖，并且它不是一个包管理器。\n\n请查看 [NixOS 文档](https://nixos.org/guides/how-nix-works.html) 了解更多。\n\n## 为什么使用 asdf？\n\n`asdf` 确保团队可以使用 **完全** 相同的工具版本，通过插件系统支持 **很多** 工具，以及作为 Shell 配置中包含的单个 **Shell** 脚本的 _简单性和熟悉性_ 。\n\n注意\n\n`asdf` 并不打算成为一个系统包管理器。它是一个工具版本管理器。仅仅因为你可以为任何工具创建插件并使用 `asdf` 管理其版本，并不意味着这是这个特定工具的最佳实践方案。\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://asdf-vm.com/zh-hans/guide/introduction.html", "title": "项目简介", "description": "`asdf` 是一个工具版本管理器，简化开发工作流程并可通过插件接口扩展到所有工具和运行环境。", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:33:05", "type": "overview", "page_metadata": {"generator": "VitePress v1.6.3", "language": "zh-hans", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "title": "项目简介 | asdf", "scrapeId": "4fcd9ef4-9998-4765-b077-0d08044fbe19", "sourceURL": "https://asdf-vm.com/zh-hans/guide/introduction.html", "url": "https://asdf-vm.com/zh-hans/guide/introduction.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 它是如何工作的 in asdf-vm?\n\nAssistant: To 它是如何工作的 in asdf-vm, here's what you do:\n一旦 `asdf` 核心在 Shell 配置中设置好之后，你可以安装插件来管理特定的工具。当通过插件安装工具时，安装的可执行程序会为每个可执行程序创建 [垫片](https://zh.wikipedia.org/wiki/%E5%9E%AB%E7%89%87_(%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1))。当你尝试运行其中一个可执行程序时，将运行垫片，从而允许 `asdf` 识别 `.tool-versions` 文件中设置的工具版本并执行该版本。.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/zh-hans/guide/introduction.html", "title": "项目简介", "description": "`asdf` 是一个工具版本管理器，简化开发工作流程并可通过插件接口扩展到所有工具和运行环境。", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:33:05", "type": "section_detail", "page_metadata": {"generator": "VitePress v1.6.3", "language": "zh-hans", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "title": "项目简介 | asdf", "scrapeId": "4fcd9ef4-9998-4765-b077-0d08044fbe19", "sourceURL": "https://asdf-vm.com/zh-hans/guide/introduction.html", "url": "https://asdf-vm.com/zh-hans/guide/introduction.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 相关项目 in asdf-vm?\n\nAssistant: To 相关项目 in asdf-vm, here's what you do:\n### nvm / n / rbenv 等\n[nvm](https://github.com/nvm-sh/nvm), [n](https://github.com/tj/n) 和 [rbenv](https://github.com/rbenv/rbenv) 等工具都是用 Shell 脚本写的，这些脚本能为工具安装的可执行程序创建垫片。\n\n`asdf` 非常相似，目的是在工具/运行环境版本管理领域竞争。 `asdf` 的区别之处在于它的插件系统，它消除了每个工具/运行环境对管理工具的需求、每个管理工具的不同命令以及存储库中不同的 `*-版本` 文件。\n\n### direnv\n> 使用可以根据当前目录加载和卸载环境变量的新功能增强现有 shell。\n\n`asdf` 不管理环境变量，但是有一个插件 [`asdf-direnv`](https://github.com/asdf-community/asdf-direnv) 可以用来集成 direnv 的特性到 `asdf` 中。\n\n请查看 [direnv 文档](https://direnv.net/) 了解更多。\n\n### Homebrew\n> macOS（或者 Linux）上缺失包的管理器\n\nHomebrew 管理你的软件包及其上游依赖。 `asdf` 不管理上游依赖，它不是包管理器。这个责任取决于用户，尽管我们试图保持依赖关系列表很小。\n\n请查看 [Homebrew 文档](https://brew.sh/) 了解更多。\n\n### NixOS\n> Nix 是一种采用独特方法进行软件包管理和系统配置的工具\n\nNixOS 旨在通过管理每个工具的整个依赖关系树中软件包的确切版本来构建真正可重复的环境，有些是 `asdf` 无法做到的。NixOS 使用自己的编程语言、许多命令行工具和超过 60,000 个包的包集合来实现这一点。\n\n同样， `asdf` 不管理上游依赖，并且它不是一个包管理器。\n\n请查看 [NixOS 文档](https://nixos.org/guides/how-nix-works.html) 了解更多。.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/zh-hans/guide/introduction.html", "title": "项目简介", "description": "`asdf` 是一个工具版本管理器，简化开发工作流程并可通过插件接口扩展到所有工具和运行环境。", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:33:05", "type": "section_detail", "page_metadata": {"generator": "VitePress v1.6.3", "language": "zh-hans", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "title": "项目简介 | asdf", "scrapeId": "4fcd9ef4-9998-4765-b077-0d08044fbe19", "sourceURL": "https://asdf-vm.com/zh-hans/guide/introduction.html", "url": "https://asdf-vm.com/zh-hans/guide/introduction.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 为什么使用 asdf？ in asdf-vm?\n\nAssistant: To 为什么使用 asdf？ in asdf-vm, here's what you do:\n`asdf` 确保团队可以使用 **完全** 相同的工具版本，通过插件系统支持 **很多** 工具，以及作为 Shell 配置中包含的单个 **Shell** 脚本的 _简单性和熟悉性_ 。\n\n注意\n\n`asdf` 并不打算成为一个系统包管理器。它是一个工具版本管理器。仅仅因为你可以为任何工具创建插件并使用 `asdf` 管理其版本，并不意味着这是这个特定工具的最佳实践方案。.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/zh-hans/guide/introduction.html", "title": "项目简介", "description": "`asdf` 是一个工具版本管理器，简化开发工作流程并可通过插件接口扩展到所有工具和运行环境。", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:33:05", "type": "section_detail", "page_metadata": {"generator": "VitePress v1.6.3", "language": "zh-hans", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "title": "项目简介 | asdf", "scrapeId": "4fcd9ef4-9998-4765-b077-0d08044fbe19", "sourceURL": "https://asdf-vm.com/zh-hans/guide/introduction.html", "url": "https://asdf-vm.com/zh-hans/guide/introduction.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: What are some tips for using 项目简介 in asdf-vm effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\n确保团队使用相同的工具版本。\n\n利用插件系统支持多种工具。\n\n将配置文件放在项目的 Git 存储库中以便于共享。\n\n注意 `asdf` 不是一个系统包管理器。\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://asdf-vm.com/zh-hans/guide/introduction.html", "title": "项目简介", "description": "`asdf` 是一个工具版本管理器，简化开发工作流程并可通过插件接口扩展到所有工具和运行环境。", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:33:05", "type": "best_practices", "page_metadata": {"generator": "VitePress v1.6.3", "language": "zh-hans", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "title": "项目简介 | asdf", "scrapeId": "4fcd9ef4-9998-4765-b077-0d08044fbe19", "sourceURL": "https://asdf-vm.com/zh-hans/guide/introduction.html", "url": "https://asdf-vm.com/zh-hans/guide/introduction.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you explain what asdf コアのコントリビューションガイド is in asdf-vm?\n\nAssistant: Sure, I'd be happy to explain asdf コアのコントリビューションガイド in asdf-vm.\n\n# asdf コアのコントリビューションガイド\n\nこれは、 `asdf` コアのコントリビューションガイドです。Here's a quick rundown of what this is about:\n\n## 初期セットアップ\n\nGitHubで `asdf` をフォークするか、デフォルトのブランチをGitクローンしてください:\n\n```\n# clone your fork\ngit clone https://github.com/<GITHUB_USER>/asdf.git\n# or clone asdf\ngit clone https://github.com/asdf-vm/asdf.git\n```\n\nコア開発用のツールは、このリポジトリの `.tool-versions` で定義されています。 `asdf` 自身でこれらのツールを管理したい場合は、下記のようにプラグインを追加してください:\n\n```\nasdf plugin add bats https://github.com/timgluz/asdf-bats.git\nasdf plugin add shellcheck https://github.com/luizm/asdf-shellcheck.git\nasdf plugin add shfmt https://github.com/luizm/asdf-shfmt.git\n```\n\n`asdf` の開発に必要なバージョンを、下記のようにインストールします:\n\n```\nasdf install\n```\n\n開発ツールに影響を与える特定の機能を壊す可能性もあるため、ローカルマシンで開発する際は、 `asdf` を使用しないほうが _良いかもしれません_ 。下記に、使用しているツールを列挙します:\n\n- [bats-core](https://github.com/bats-core/bats-core): BashまたはPOSIX準拠のスクリプトを単体テストするための、Bash自動テストシステムです。\n- [shellcheck](https://github.com/koalaman/shellcheck): シェルスクリプトの静的解析ツールです。\n- [shfmt](https://github.com/mvdan/sh): Bashをサポートするシェルパーサ、フォーマッタ、インタプリタです。\n\n## 開発\n\nインストール済みの `asdf` に変更を加えずに、あなたが開発した変更内容を試したいときは、 `$ASDF_DIR` 変数に、クローンしたリポジトリのパスを設定し、そのディレクトリの `bin` と `shims` ディレクトリを一時的にパスの先頭へ追加します。\n\nリモートにコミットまたはプッシュする前に、コードをローカルでフォーマット、Lint、およびテストすることを推奨します。その際は、次のスクリプト/コマンドを使用してください:\n\n```\n# Lint\n./scripts/lint.bash --check\n\n# Fix & Format\n./scripts/lint.bash --fix\n\n# Test: all tests\n./scripts/test.bash\n\n# Test: for specific command\nbats test/list_commands.bash\n```\n\nヒント\n\n**テストを作ってください!** \\- 新機能にとってテストは **必要不可欠** であり、バグ修正のレビューをスピードアップさせることができます。プルリクエストを作成する前に、新しいコードをカバーするようなテストを作成してください。 [bats-coreのドキュメント](https://bats-core.readthedocs.io/en/stable/index.html) もご覧ください。\n\n## Gitignore\n\n下記は、 `asdf-vm/asdf` リポジトリの `.gitignore` ファイルです。プロジェクト固有のファイルは無視をしています。使用しているOS、ツール、およびワークフロー固有のファイルは、グローバルな `.gitignore` 構成で無視する必要があります。詳しくは [こちら](http://stratus3d.com/blog/2018/06/03/stop-excluding-editor-temp-files-in-gitignore/) をご覧ください。\n\n@ [Gitignoreコード](https://github.com/asdf-vm/asdf/blob/master/.gitignore)\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://asdf-vm.com/ja-jp/contribute/core.html", "title": "asdf コアのコントリビューションガイド", "description": "これは、 `asdf` コアのコントリビューションガイドです。", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:33:23", "type": "overview", "page_metadata": {"title": "asdf", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "language": "ja-jp", "scrapeId": "fd3f8b44-59b5-4d66-978d-e39f2f9571ef", "sourceURL": "https://asdf-vm.com/ja-jp/contribute/core.html", "url": "https://asdf-vm.com/ja-jp/contribute/core.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 初期セットアップ in asdf-vm?\n\nAssistant: To 初期セットアップ in asdf-vm, here's what you do:\nGitHubで `asdf` をフォークするか、デフォルトのブランチをGitクローンしてください:\n\n```\n# clone your fork\ngit clone https://github.com/<GITHUB_USER>/asdf.git\n# or clone asdf\ngit clone https://github.com/asdf-vm/asdf.git\n```\n\nコア開発用のツールは、このリポジトリの `.tool-versions` で定義されています。 `asdf` 自身でこれらのツールを管理したい場合は、下記のようにプラグインを追加してください:\n\n```\nasdf plugin add bats https://github.com/timgluz/asdf-bats.git\nasdf plugin add shellcheck https://github.com/luizm/asdf-shellcheck.git\nasdf plugin add shfmt https://github.com/luizm/asdf-shfmt.git\n```\n\n`asdf` の開発に必要なバージョンを、下記のようにインストールします:\n\n```\nasdf install\n```\n\n開発ツールに影響を与える特定の機能を壊す可能性もあるため、ローカルマシンで開発する際は、 `asdf` を使用しないほうが _良いかもしれません_ 。下記に、使用しているツールを列挙します:\n\n- [bats-core](https://github.com/bats-core/bats-core): BashまたはPOSIX準拠のスクリプトを単体テストするための、Bash自動テストシステムです。\n- [shellcheck](https://github.com/koalaman/shellcheck): シェルスクリプトの静的解析ツールです。\n- [shfmt](https://github.com/mvdan/sh): Bashをサポートするシェルパーサ、フォーマッタ、インタプリタです。.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ja-jp/contribute/core.html", "title": "asdf コアのコントリビューションガイド", "description": "これは、 `asdf` コアのコントリビューションガイドです。", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:33:23", "type": "section_detail", "page_metadata": {"title": "asdf", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "language": "ja-jp", "scrapeId": "fd3f8b44-59b5-4d66-978d-e39f2f9571ef", "sourceURL": "https://asdf-vm.com/ja-jp/contribute/core.html", "url": "https://asdf-vm.com/ja-jp/contribute/core.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 開発 in asdf-vm?\n\nAssistant: To 開発 in asdf-vm, here's what you do:\nインストール済みの `asdf` に変更を加えずに、あなたが開発した変更内容を試したいときは、 `$ASDF_DIR` 変数に、クローンしたリポジトリのパスを設定し、そのディレクトリの `bin` と `shims` ディレクトリを一時的にパスの先頭へ追加します。\n\nリモートにコミットまたはプッシュする前に、コードをローカルでフォーマット、Lint、およびテストすることを推奨します。その際は、次のスクリプト/コマンドを使用してください:\n\n```\n# Lint\n./scripts/lint.bash --check\n\n# Fix & Format\n./scripts/lint.bash --fix\n\n# Test: all tests\n./scripts/test.bash\n\n# Test: for specific command\nbats test/list_commands.bash\n```\n\nヒント\n\n**テストを作ってください!** \\- 新機能にとってテストは **必要不可欠** であり、バグ修正のレビューをスピードアップさせることができます。プルリクエストを作成する前に、新しいコードをカバーするようなテストを作成してください。 [bats-coreのドキュメント](https://bats-core.readthedocs.io/en/stable/index.html) もご覧ください。.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ja-jp/contribute/core.html", "title": "asdf コアのコントリビューションガイド", "description": "これは、 `asdf` コアのコントリビューションガイドです。", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:33:23", "type": "section_detail", "page_metadata": {"title": "asdf", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "language": "ja-jp", "scrapeId": "fd3f8b44-59b5-4d66-978d-e39f2f9571ef", "sourceURL": "https://asdf-vm.com/ja-jp/contribute/core.html", "url": "https://asdf-vm.com/ja-jp/contribute/core.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I gitignore in asdf-vm?\n\nAssistant: To gitignore in asdf-vm, here's what you do:\n下記は、 `asdf-vm/asdf` リポジトリの `.gitignore` ファイルです。プロジェクト固有のファイルは無視をしています。使用しているOS、ツール、およびワークフロー固有のファイルは、グローバルな `.gitignore` 構成で無視する必要があります。詳しくは [こちら](http://stratus3d.com/blog/2018/06/03/stop-excluding-editor-temp-files-in-gitignore/) をご覧ください。\n\n@ [Gitignoreコード](https://github.com/asdf-vm/asdf/blob/master/.gitignore).\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ja-jp/contribute/core.html", "title": "asdf コアのコントリビューションガイド", "description": "これは、 `asdf` コアのコントリビューションガイドです。", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:33:23", "type": "section_detail", "page_metadata": {"title": "asdf", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "language": "ja-jp", "scrapeId": "fd3f8b44-59b5-4d66-978d-e39f2f9571ef", "sourceURL": "https://asdf-vm.com/ja-jp/contribute/core.html", "url": "https://asdf-vm.com/ja-jp/contribute/core.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you give me some code examples for asdf コアのコントリビューションガイド in asdf-vm?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**初期セットアップ - Gitクローン**:\n\n```yaml\n# clone your fork\ngit clone https://github.com/<GITHUB_USER>/asdf.git\n# or clone asdf\ngit clone https://github.com/asdf-vm/asdf.git\n```\n\nThis snippet shows you how to 初期セットアップ - gitクローン, which is an important aspect of asdf コアのコントリビューションガイド.\n\n**プラグイン追加**:\n\n```yaml\nasdf plugin add bats https://github.com/timgluz/asdf-bats.git\nasdf plugin add shellcheck https://github.com/luizm/asdf-shellcheck.git\nasdf plugin add shfmt https://github.com/luizm/asdf-shfmt.git\n```\n\nThis snippet shows you how to プラグイン追加, which is an important aspect of asdf コアのコントリビューションガイド.\n\n**バージョンインストール**:\n\n```yaml\nasdf install\n```\n\nThis snippet shows you how to バージョンインストール, which is an important aspect of asdf コアのコントリビューションガイド.\n\n**Lintコマンド**:\n\n```yaml\n# Lint\n./scripts/lint.bash --check\n```\n\nThis snippet shows you how to lintコマンド, which is an important aspect of asdf コアのコントリビューションガイド.\n\n**Fix & Formatコマンド**:\n\n```yaml\n# Fix & Format\n./scripts/lint.bash --fix\n```\n\nThis snippet shows you how to fix & formatコマンド, which is an important aspect of asdf コアのコントリビューションガイド.\n\n**全テスト実行**:\n\n```yaml\n# Test: all tests\n./scripts/test.bash\n```\n\nThis snippet shows you how to 全テスト実行, which is an important aspect of asdf コアのコントリビューションガイド.\n\n**特定コマンドのテスト**:\n\n```yaml\n# Test: for specific command\nbats test/list_commands.bash\n```\n\nThis snippet shows you how to 特定コマンドのテスト, which is an important aspect of asdf コアのコントリビューションガイド.\n\n**git blameの使用**:\n\n```yaml\ngit blame --ignore-revs-file .git-blame-ignore-revs ./test/install_command.bats\n```\n\nThis snippet shows you how to git blameの使用, which is an important aspect of asdf コアのコントリビューションガイド.\n\n**git configの設定**:\n\n```yaml\ngit config blame.ignoreRevsFile .git-blame-ignore-revs\n```\n\nThis snippet shows you how to git configの設定, which is an important aspect of asdf コアのコントリビューションガイド.\n\n**VSCode設定**:\n\n```yaml\n{\n  \"gitlens.advanced.blame.customArguments\": [\\\n    \"--ignore-revs-file\",\\\n    \".git-blame-ignore-revs\"\\\n  ]\n}\n```\n\nThis snippet shows you how to vscode設定, which is an important aspect of asdf コアのコントリビューションガイド.\n\n", "metadata": {"source_url": "https://asdf-vm.com/ja-jp/contribute/core.html", "title": "asdf コアのコントリビューションガイド", "description": "これは、 `asdf` コアのコントリビューションガイドです。", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:33:23", "type": "code_examples", "page_metadata": {"title": "asdf", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "language": "ja-jp", "scrapeId": "fd3f8b44-59b5-4d66-978d-e39f2f9571ef", "sourceURL": "https://asdf-vm.com/ja-jp/contribute/core.html", "url": "https://asdf-vm.com/ja-jp/contribute/core.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: What are some tips for using asdf コアのコントリビューションガイド in asdf-vm effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nテストを作ってください! - 新機能にとってテストは必要不可欠であり、バグ修正のレビューをスピードアップさせることができます。プルリクエストを作成する前に、新しいコードをカバーするようなテストを作成してください。\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://asdf-vm.com/ja-jp/contribute/core.html", "title": "asdf コアのコントリビューションガイド", "description": "これは、 `asdf` コアのコントリビューションガイドです。", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:33:23", "type": "best_practices", "page_metadata": {"title": "asdf", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "language": "ja-jp", "scrapeId": "fd3f8b44-59b5-4d66-978d-e39f2f9571ef", "sourceURL": "https://asdf-vm.com/ja-jp/contribute/core.html", "url": "https://asdf-vm.com/ja-jp/contribute/core.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you explain what FAQ is in asdf-vm?\n\nAssistant: Sure, I'd be happy to explain FAQ in asdf-vm.\n\n# FAQ\n\n以下是 `asdf` 相关的一些常见问题。Here's a quick rundown of what this is about:\n\n## 支持 WSL1 吗？\n\nWSL1 ( [Windows Subsystem for Linux 1](https://en.wikipedia.org/wiki/Windows_Subsystem_for_Linux#WSL_1)) 不受官方支持。 `asdf` 的某些方面可能无法正常工作。我们不打算添加对 WSL1 的官方支持。\n\n## 支持 WSL2 吗？\n\nWSL2 ( [Windows Subsystem for Linux 2](https://en.wikipedia.org/wiki/Windows_Subsystem_for_Linux#WSL_2)) 应该作为你选择的 WSL 发行版来使用本设置和依赖说明。\n\n重要的是，只有当前工作目录是 Unix 驱动器而不是绑定的 Windows 驱动器时，WSL2 _才能_ 正常工作。\n\n当 Github Actions 上提供主机运行器支持时，我们打算在 WSL2 上运行测试套件。（Github Actions 目前还未提供 WSL2 支持）\n\n## 新安装的可执行程序无法运行？\n\n我执行了 `npm install -g yarn` 命令，但是之后不能运行 `yarn` 命令。这是为什么？\n\n`asdf` 使用 [垫片](https://zh.wikipedia.org/wiki/%E5%9E%AB%E7%89%87_(%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1)) 来管理可执行程序。插件所安装的那些命令会自动创建垫片，而通过 `asdf` 管理工具安装过的可执行程序则需要通知 `asdf` 创建垫片的需要。在这个例子中，为 [Yarn](https://yarnpkg.com/) 创建一个垫片即可。请查看 [`asdf reshim` 命令文档](https://asdf-vm.com/zh-hans/manage/core.html#reshim) 了解更多。\n\n## Shell 没有检测到新安装的垫片？\n\n如果 `asdf reshim` 没有解决你的问题，那么很有可能是在 `asdf.sh` 或者 `asdf.fish` 的生效不在你的 Shell 配置文件（ `.bash_profile`、 `.zshrc`、 `config.fish` 等等）的 **下方**。这需要你在设置你的 `$PATH` **之后** 和生效你的框架（oh-my-zsh 等等）（如果有的话） **之后** 再生效。\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://asdf-vm.com/zh-hans/more/faq.html", "title": "FAQ", "description": "以下是 `asdf` 相关的一些常见问题。", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:33:42", "type": "overview", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "language": "zh-hans", "generator": "VitePress v1.6.3", "title": "FAQ | asdf", "scrapeId": "b01d5b50-890b-43b8-b9f3-54be17cd13f3", "sourceURL": "https://asdf-vm.com/zh-hans/more/faq.html", "url": "https://asdf-vm.com/zh-hans/more/faq.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 支持 wsl1 吗？ in asdf-vm?\n\nAssistant: To 支持 wsl1 吗？ in asdf-vm, here's what you do:\nWSL1 ( [Windows Subsystem for Linux 1](https://en.wikipedia.org/wiki/Windows_Subsystem_for_Linux#WSL_1)) 不受官方支持。 `asdf` 的某些方面可能无法正常工作。我们不打算添加对 WSL1 的官方支持。.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/zh-hans/more/faq.html", "title": "FAQ", "description": "以下是 `asdf` 相关的一些常见问题。", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:33:42", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "language": "zh-hans", "generator": "VitePress v1.6.3", "title": "FAQ | asdf", "scrapeId": "b01d5b50-890b-43b8-b9f3-54be17cd13f3", "sourceURL": "https://asdf-vm.com/zh-hans/more/faq.html", "url": "https://asdf-vm.com/zh-hans/more/faq.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 支持 wsl2 吗？ in asdf-vm?\n\nAssistant: To 支持 wsl2 吗？ in asdf-vm, here's what you do:\nWSL2 ( [Windows Subsystem for Linux 2](https://en.wikipedia.org/wiki/Windows_Subsystem_for_Linux#WSL_2)) 应该作为你选择的 WSL 发行版来使用本设置和依赖说明。\n\n重要的是，只有当前工作目录是 Unix 驱动器而不是绑定的 Windows 驱动器时，WSL2 _才能_ 正常工作。\n\n当 Github Actions 上提供主机运行器支持时，我们打算在 WSL2 上运行测试套件。（Github Actions 目前还未提供 WSL2 支持）.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/zh-hans/more/faq.html", "title": "FAQ", "description": "以下是 `asdf` 相关的一些常见问题。", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:33:42", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "language": "zh-hans", "generator": "VitePress v1.6.3", "title": "FAQ | asdf", "scrapeId": "b01d5b50-890b-43b8-b9f3-54be17cd13f3", "sourceURL": "https://asdf-vm.com/zh-hans/more/faq.html", "url": "https://asdf-vm.com/zh-hans/more/faq.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 新安装的可执行程序无法运行？ in asdf-vm?\n\nAssistant: To 新安装的可执行程序无法运行？ in asdf-vm, here's what you do:\n我执行了 `npm install -g yarn` 命令，但是之后不能运行 `yarn` 命令。这是为什么？\n\n`asdf` 使用 [垫片](https://zh.wikipedia.org/wiki/%E5%9E%AB%E7%89%87_(%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1)) 来管理可执行程序。插件所安装的那些命令会自动创建垫片，而通过 `asdf` 管理工具安装过的可执行程序则需要通知 `asdf` 创建垫片的需要。在这个例子中，为 [Yarn](https://yarnpkg.com/) 创建一个垫片即可。请查看 [`asdf reshim` 命令文档](https://asdf-vm.com/zh-hans/manage/core.html#reshim) 了解更多。.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/zh-hans/more/faq.html", "title": "FAQ", "description": "以下是 `asdf` 相关的一些常见问题。", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:33:42", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "language": "zh-hans", "generator": "VitePress v1.6.3", "title": "FAQ | asdf", "scrapeId": "b01d5b50-890b-43b8-b9f3-54be17cd13f3", "sourceURL": "https://asdf-vm.com/zh-hans/more/faq.html", "url": "https://asdf-vm.com/zh-hans/more/faq.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I shell 没有检测到新安装的垫片？ in asdf-vm?\n\nAssistant: To shell 没有检测到新安装的垫片？ in asdf-vm, here's what you do:\n如果 `asdf reshim` 没有解决你的问题，那么很有可能是在 `asdf.sh` 或者 `asdf.fish` 的生效不在你的 Shell 配置文件（ `.bash_profile`、 `.zshrc`、 `config.fish` 等等）的 **下方**。这需要你在设置你的 `$PATH` **之后** 和生效你的框架（oh-my-zsh 等等）（如果有的话） **之后** 再生效。.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/zh-hans/more/faq.html", "title": "FAQ", "description": "以下是 `asdf` 相关的一些常见问题。", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:33:42", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "language": "zh-hans", "generator": "VitePress v1.6.3", "title": "FAQ | asdf", "scrapeId": "b01d5b50-890b-43b8-b9f3-54be17cd13f3", "sourceURL": "https://asdf-vm.com/zh-hans/more/faq.html", "url": "https://asdf-vm.com/zh-hans/more/faq.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you give me some code examples for FAQ in asdf-vm?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**安装 Yarn**:\n\n```yaml\nnpm install -g yarn\n```\n\nThis snippet shows you how to 安装 yarn, which is an important aspect of faq.\n\n**创建垫片**:\n\n```yaml\nasdf reshim\n```\n\nThis snippet shows you how to 创建垫片, which is an important aspect of faq.\n\n", "metadata": {"source_url": "https://asdf-vm.com/zh-hans/more/faq.html", "title": "FAQ", "description": "以下是 `asdf` 相关的一些常见问题。", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:33:42", "type": "code_examples", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "language": "zh-hans", "generator": "VitePress v1.6.3", "title": "FAQ | asdf", "scrapeId": "b01d5b50-890b-43b8-b9f3-54be17cd13f3", "sourceURL": "https://asdf-vm.com/zh-hans/more/faq.html", "url": "https://asdf-vm.com/zh-hans/more/faq.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: What are some tips for using FAQ in asdf-vm effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\n确保在设置你的 $PATH 之后再生效 asdf.sh 或 asdf.fish。\n\n在使用 WSL2 时，确保当前工作目录是 Unix 驱动器。\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://asdf-vm.com/zh-hans/more/faq.html", "title": "FAQ", "description": "以下是 `asdf` 相关的一些常见问题。", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:33:42", "type": "best_practices", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "language": "zh-hans", "generator": "VitePress v1.6.3", "title": "FAQ | asdf", "scrapeId": "b01d5b50-890b-43b8-b9f3-54be17cd13f3", "sourceURL": "https://asdf-vm.com/zh-hans/more/faq.html", "url": "https://asdf-vm.com/zh-hans/more/faq.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you explain what すべてのコマンド is in asdf-vm?\n\nAssistant: Sure, I'd be happy to explain すべてのコマンド in asdf-vm.\n\n# すべてのコマンド\n\n`asdf` で利用可能なすべてのコマンドの一覧です。この一覧は、 `asdf help` コマンドで表示されるテキストです。Here's a quick rundown of what this is about:\n\n## MANAGE PLUGINS\n\nasdf plugin add <name> [<git-url>]      Add a plugin from the plugin repo OR,\n                                        add a Git repo as a plugin by\n                                        specifying the name and repo url\nasdf plugin list [--urls] [--refs]      List installed plugins. Optionally show\n                                        git urls and git-ref\nasdf plugin list all                    List plugins registered on asdf-plugins\n                                        repository with URLs\nasdf plugin remove <name>               Remove plugin and package versions\nasdf plugin update <name> [<git-ref>]   Update a plugin to latest commit on\n                                        default branch or a particular git-ref\nasdf plugin update --all                Update all plugins to latest commit on\n                                        default branch\n\n## MANAGE TOOLS\n\nasdf current                            Display current version set or being\n                                        used for all packages\nasdf current <name>                     Display current version set or being\n                                        used for package\nasdf help <name> [<version>]            Output documentation for plugin and tool\nasdf install                            Install all the package versions listed\n                                        in the .tool-versions file\nasdf install <name>                     Install one tool at the version\n                                        specified in the .tool-versions file\nasdf install <name> <version>           Install a specific version of a package\nasdf install <name> latest[:<version>]  Install the latest stable version of a\n                                        package, or with optional version,\n                                        install the latest stable version that\n                                        begins with the given string\nasdf latest <name> [<version>]          Show latest stable version of a package\nasdf latest --all                       Show latest stable version of all the\n                                        packages and if they are installed\nasdf list <name> [version]              List installed versions of a package and\n                                        optionally filter the versions\nasdf list all <name> [<version>]        List all versions of a package and\n                                        optionally filter the returned versions\nasdf set [-u] [-p] <name> <versions...> Set a tool version in a .tool-version in\n                                        the current directory, or a parent\ndirectory.\nasdf uninstall <name> <version>         Remove a specific version of a package\nasdf where <name> [<version>]           Display install path for an installed\n                                        or current version\nasdf which <command>                    Display the path to an executable\n\n## UTILS\n\nasdf exec <command> [args...]           Executes the command shim for current version\nasdf env <command> [util]               Runs util (default: `env`) inside the\n                                        environment used for command shim execution.\nasdf info                               Print OS, Shell and ASDF debug information.\nasdf version                            Print the currently installed version of ASDF\nasdf reshim <name> <version>            Recreate shims for version of a package\nasdf shimversions <command>             List the plugins and versions that\n                                        provide a command\n\n## RESOURCES\n\nGitHub: https://github.com/asdf-vm/asdf\nDocs:   https://asdf-vm.com\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://asdf-vm.com/ja-jp/manage/commands.html", "title": "すべてのコマンド", "description": "`asdf` で利用可能なすべてのコマンドの一覧です。この一覧は、 `asdf help` コマンドで表示されるテキストです。", "has_code_examples": false, "has_best_practices": false, "section_count": 4, "timestamp": "2025-03-01 03:33:52", "type": "overview", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "generator": "VitePress v1.6.3", "language": "ja-jp", "title": "すべてのコマンド | asdf", "description": "Manage multiple runtime versions with a single CLI tool", "scrapeId": "937a4803-81b5-4106-b84f-bcbca449184c", "sourceURL": "https://asdf-vm.com/ja-jp/manage/commands.html", "url": "https://asdf-vm.com/ja-jp/manage/commands.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I manage plugins in asdf-vm?\n\nAssistant: To manage plugins in asdf-vm, here's what you do:\nasdf plugin add <name> [<git-url>]      Add a plugin from the plugin repo OR,\n                                        add a Git repo as a plugin by\n                                        specifying the name and repo url\nasdf plugin list [--urls] [--refs]      List installed plugins. Optionally show\n                                        git urls and git-ref\nasdf plugin list all                    List plugins registered on asdf-plugins\n                                        repository with URLs\nasdf plugin remove <name>               Remove plugin and package versions\nasdf plugin update <name> [<git-ref>]   Update a plugin to latest commit on\n                                        default branch or a particular git-ref\nasdf plugin update --all                Update all plugins to latest commit on\n                                        default branch.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ja-jp/manage/commands.html", "title": "すべてのコマンド", "description": "`asdf` で利用可能なすべてのコマンドの一覧です。この一覧は、 `asdf help` コマンドで表示されるテキストです。", "has_code_examples": false, "has_best_practices": false, "section_count": 4, "timestamp": "2025-03-01 03:33:52", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "generator": "VitePress v1.6.3", "language": "ja-jp", "title": "すべてのコマンド | asdf", "description": "Manage multiple runtime versions with a single CLI tool", "scrapeId": "937a4803-81b5-4106-b84f-bcbca449184c", "sourceURL": "https://asdf-vm.com/ja-jp/manage/commands.html", "url": "https://asdf-vm.com/ja-jp/manage/commands.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I manage tools in asdf-vm?\n\nAssistant: To manage tools in asdf-vm, here's what you do:\nasdf current                            Display current version set or being\n                                        used for all packages\nasdf current <name>                     Display current version set or being\n                                        used for package\nasdf help <name> [<version>]            Output documentation for plugin and tool\nasdf install                            Install all the package versions listed\n                                        in the .tool-versions file\nasdf install <name>                     Install one tool at the version\n                                        specified in the .tool-versions file\nasdf install <name> <version>           Install a specific version of a package\nasdf install <name> latest[:<version>]  Install the latest stable version of a\n                                        package, or with optional version,\n                                        install the latest stable version that\n                                        begins with the given string\nasdf latest <name> [<version>]          Show latest stable version of a package\nasdf latest --all                       Show latest stable version of all the\n                                        packages and if they are installed\nasdf list <name> [version]              List installed versions of a package and\n                                        optionally filter the versions\nasdf list all <name> [<version>]        List all versions of a package and\n                                        optionally filter the returned versions\nasdf set [-u] [-p] <name> <versions...> Set a tool version in a .tool-version in\n                                        the current directory, or a parent\ndirectory.\nasdf uninstall <name> <version>         Remove a specific version of a package\nasdf where <name> [<version>]           Display install path for an installed\n                                        or current version\nasdf which <command>                    Display the path to an executable.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ja-jp/manage/commands.html", "title": "すべてのコマンド", "description": "`asdf` で利用可能なすべてのコマンドの一覧です。この一覧は、 `asdf help` コマンドで表示されるテキストです。", "has_code_examples": false, "has_best_practices": false, "section_count": 4, "timestamp": "2025-03-01 03:33:52", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "generator": "VitePress v1.6.3", "language": "ja-jp", "title": "すべてのコマンド | asdf", "description": "Manage multiple runtime versions with a single CLI tool", "scrapeId": "937a4803-81b5-4106-b84f-bcbca449184c", "sourceURL": "https://asdf-vm.com/ja-jp/manage/commands.html", "url": "https://asdf-vm.com/ja-jp/manage/commands.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I utils in asdf-vm?\n\nAssistant: To utils in asdf-vm, here's what you do:\nasdf exec <command> [args...]           Executes the command shim for current version\nasdf env <command> [util]               Runs util (default: `env`) inside the\n                                        environment used for command shim execution.\nasdf info                               Print OS, Shell and ASDF debug information.\nasdf version                            Print the currently installed version of ASDF\nasdf reshim <name> <version>            Recreate shims for version of a package\nasdf shimversions <command>             List the plugins and versions that\n                                        provide a command.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ja-jp/manage/commands.html", "title": "すべてのコマンド", "description": "`asdf` で利用可能なすべてのコマンドの一覧です。この一覧は、 `asdf help` コマンドで表示されるテキストです。", "has_code_examples": false, "has_best_practices": false, "section_count": 4, "timestamp": "2025-03-01 03:33:52", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "generator": "VitePress v1.6.3", "language": "ja-jp", "title": "すべてのコマンド | asdf", "description": "Manage multiple runtime versions with a single CLI tool", "scrapeId": "937a4803-81b5-4106-b84f-bcbca449184c", "sourceURL": "https://asdf-vm.com/ja-jp/manage/commands.html", "url": "https://asdf-vm.com/ja-jp/manage/commands.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I resources in asdf-vm?\n\nAssistant: To resources in asdf-vm, here's what you do:\nGitHub: https://github.com/asdf-vm/asdf\nDocs:   https://asdf-vm.com.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ja-jp/manage/commands.html", "title": "すべてのコマンド", "description": "`asdf` で利用可能なすべてのコマンドの一覧です。この一覧は、 `asdf help` コマンドで表示されるテキストです。", "has_code_examples": false, "has_best_practices": false, "section_count": 4, "timestamp": "2025-03-01 03:33:52", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "generator": "VitePress v1.6.3", "language": "ja-jp", "title": "すべてのコマンド | asdf", "description": "Manage multiple runtime versions with a single CLI tool", "scrapeId": "937a4803-81b5-4106-b84f-bcbca449184c", "sourceURL": "https://asdf-vm.com/ja-jp/manage/commands.html", "url": "https://asdf-vm.com/ja-jp/manage/commands.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you explain what 所有命令 is in asdf-vm?\n\nAssistant: Sure, I'd be happy to explain 所有命令 in asdf-vm.\n\n# 所有命令\n\n`asdf` 中所有可用命令的列表。这个列表就是 `asdf help` 命令的打印内容。Here's a quick rundown of what this is about:\n\n## MANAGE PLUGINS\n\nasdf plugin add <name> [<git-url>]      Add a plugin from the plugin repo OR,\n                                        add a Git repo as a plugin by\n                                        specifying the name and repo url\nasdf plugin list [--urls] [--refs]      List installed plugins. Optionally show\n                                        git urls and git-ref\nasdf plugin list all                    List plugins registered on asdf-plugins\n                                        repository with URLs\nasdf plugin remove <name>               Remove plugin and package versions\nasdf plugin update <name> [<git-ref>]   Update a plugin to latest commit on\n                                        default branch or a particular git-ref\nasdf plugin update --all                Update all plugins to latest commit on\n                                        default branch\n\n## MANAGE TOOLS\n\nasdf current                            Display current version set or being\n                                        used for all packages\nasdf current <name>                     Display current version set or being\n                                        used for package\nasdf help <name> [<version>]            Output documentation for plugin and tool\nasdf install                            Install all the package versions listed\n                                        in the .tool-versions file\nasdf install <name>                     Install one tool at the version\n                                        specified in the .tool-versions file\nasdf install <name> <version>           Install a specific version of a package\nasdf install <name> latest[:<version>]  Install the latest stable version of a\n                                        package, or with optional version,\n                                        install the latest stable version that\n                                        begins with the given string\nasdf latest <name> [<version>]          Show latest stable version of a package\nasdf latest --all                       Show latest stable version of all the\n                                        packages and if they are installed\nasdf list <name> [version]              List installed versions of a package and\n                                        optionally filter the versions\nasdf list all <name> [<version>]        List all versions of a package and\n                                        optionally filter the returned versions\nasdf set [-u] [-p] <name> <versions...> Set a tool version in a .tool-version in\n                                        the current directory, or a parent\n                                        directory.\nasdf uninstall <name> <version>         Remove a specific version of a package\nasdf where <name> [<version>]           Display install path for an installed\n                                        or current version\nasdf which <command>                    Display the path to an executable\n\n## UTILS\n\nasdf exec <command> [args...]           Executes the command shim for current version\nasdf env <command> [util]               Runs util (default: `env`) inside the\n                                        environment used for command shim execution.\nasdf info                               Print OS, Shell and ASDF debug information.\nasdf version                            Print the currently installed version of ASDF\nasdf reshim <name> <version>            Recreate shims for version of a package\nasdf shimversions <command>             List the plugins and versions that\n                                        provide a command\n\n## RESOURCES\n\nGitHub: https://github.com/asdf-vm/asdf\nDocs:   https://asdf-vm.com\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://asdf-vm.com/zh-hans/manage/commands.html", "title": "所有命令", "description": "`asdf` 中所有可用命令的列表。这个列表就是 `asdf help` 命令的打印内容。", "has_code_examples": false, "has_best_practices": false, "section_count": 4, "timestamp": "2025-03-01 03:34:05", "type": "overview", "page_metadata": {"generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "title": "所有命令 | asdf", "language": "zh-hans", "scrapeId": "ed9d8eb7-76d7-4cc3-baa3-df77619ba905", "sourceURL": "https://asdf-vm.com/zh-hans/manage/commands.html", "url": "https://asdf-vm.com/zh-hans/manage/commands.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I manage plugins in asdf-vm?\n\nAssistant: To manage plugins in asdf-vm, here's what you do:\nasdf plugin add <name> [<git-url>]      Add a plugin from the plugin repo OR,\n                                        add a Git repo as a plugin by\n                                        specifying the name and repo url\nasdf plugin list [--urls] [--refs]      List installed plugins. Optionally show\n                                        git urls and git-ref\nasdf plugin list all                    List plugins registered on asdf-plugins\n                                        repository with URLs\nasdf plugin remove <name>               Remove plugin and package versions\nasdf plugin update <name> [<git-ref>]   Update a plugin to latest commit on\n                                        default branch or a particular git-ref\nasdf plugin update --all                Update all plugins to latest commit on\n                                        default branch.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/zh-hans/manage/commands.html", "title": "所有命令", "description": "`asdf` 中所有可用命令的列表。这个列表就是 `asdf help` 命令的打印内容。", "has_code_examples": false, "has_best_practices": false, "section_count": 4, "timestamp": "2025-03-01 03:34:05", "type": "section_detail", "page_metadata": {"generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "title": "所有命令 | asdf", "language": "zh-hans", "scrapeId": "ed9d8eb7-76d7-4cc3-baa3-df77619ba905", "sourceURL": "https://asdf-vm.com/zh-hans/manage/commands.html", "url": "https://asdf-vm.com/zh-hans/manage/commands.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I manage tools in asdf-vm?\n\nAssistant: To manage tools in asdf-vm, here's what you do:\nasdf current                            Display current version set or being\n                                        used for all packages\nasdf current <name>                     Display current version set or being\n                                        used for package\nasdf help <name> [<version>]            Output documentation for plugin and tool\nasdf install                            Install all the package versions listed\n                                        in the .tool-versions file\nasdf install <name>                     Install one tool at the version\n                                        specified in the .tool-versions file\nasdf install <name> <version>           Install a specific version of a package\nasdf install <name> latest[:<version>]  Install the latest stable version of a\n                                        package, or with optional version,\n                                        install the latest stable version that\n                                        begins with the given string\nasdf latest <name> [<version>]          Show latest stable version of a package\nasdf latest --all                       Show latest stable version of all the\n                                        packages and if they are installed\nasdf list <name> [version]              List installed versions of a package and\n                                        optionally filter the versions\nasdf list all <name> [<version>]        List all versions of a package and\n                                        optionally filter the returned versions\nasdf set [-u] [-p] <name> <versions...> Set a tool version in a .tool-version in\n                                        the current directory, or a parent\n                                        directory.\nasdf uninstall <name> <version>         Remove a specific version of a package\nasdf where <name> [<version>]           Display install path for an installed\n                                        or current version\nasdf which <command>                    Display the path to an executable.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/zh-hans/manage/commands.html", "title": "所有命令", "description": "`asdf` 中所有可用命令的列表。这个列表就是 `asdf help` 命令的打印内容。", "has_code_examples": false, "has_best_practices": false, "section_count": 4, "timestamp": "2025-03-01 03:34:05", "type": "section_detail", "page_metadata": {"generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "title": "所有命令 | asdf", "language": "zh-hans", "scrapeId": "ed9d8eb7-76d7-4cc3-baa3-df77619ba905", "sourceURL": "https://asdf-vm.com/zh-hans/manage/commands.html", "url": "https://asdf-vm.com/zh-hans/manage/commands.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I utils in asdf-vm?\n\nAssistant: To utils in asdf-vm, here's what you do:\nasdf exec <command> [args...]           Executes the command shim for current version\nasdf env <command> [util]               Runs util (default: `env`) inside the\n                                        environment used for command shim execution.\nasdf info                               Print OS, Shell and ASDF debug information.\nasdf version                            Print the currently installed version of ASDF\nasdf reshim <name> <version>            Recreate shims for version of a package\nasdf shimversions <command>             List the plugins and versions that\n                                        provide a command.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/zh-hans/manage/commands.html", "title": "所有命令", "description": "`asdf` 中所有可用命令的列表。这个列表就是 `asdf help` 命令的打印内容。", "has_code_examples": false, "has_best_practices": false, "section_count": 4, "timestamp": "2025-03-01 03:34:05", "type": "section_detail", "page_metadata": {"generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "title": "所有命令 | asdf", "language": "zh-hans", "scrapeId": "ed9d8eb7-76d7-4cc3-baa3-df77619ba905", "sourceURL": "https://asdf-vm.com/zh-hans/manage/commands.html", "url": "https://asdf-vm.com/zh-hans/manage/commands.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I resources in asdf-vm?\n\nAssistant: To resources in asdf-vm, here's what you do:\nGitHub: https://github.com/asdf-vm/asdf\nDocs:   https://asdf-vm.com.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/zh-hans/manage/commands.html", "title": "所有命令", "description": "`asdf` 中所有可用命令的列表。这个列表就是 `asdf help` 命令的打印内容。", "has_code_examples": false, "has_best_practices": false, "section_count": 4, "timestamp": "2025-03-01 03:34:05", "type": "section_detail", "page_metadata": {"generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "title": "所有命令 | asdf", "language": "zh-hans", "scrapeId": "ed9d8eb7-76d7-4cc3-baa3-df77619ba905", "sourceURL": "https://asdf-vm.com/zh-hans/manage/commands.html", "url": "https://asdf-vm.com/zh-hans/manage/commands.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you explain what Gerenciamento de Versões com asdf is in asdf-vm?\n\nAssistant: Sure, I'd be happy to explain Gerenciamento de Versões com asdf in asdf-vm.\n\n# Gerenciamento de Versões com asdf\n\nEsta página cobre como instalar, listar, selecionar e desinstalar versões de ferramentas usando o gerenciador de versões asdf.Here's a quick rundown of what this is about:\n\n## Instalar Versão\n\nPara instalar uma versão específica de uma ferramenta, use o comando:\n\n```\nasdf install <name> <version>\n# asdf install erlang 17.3\n```\n\nSe um plugin suporta o download e compilação do código-fonte, você pode especificar `ref:foo` no qual `foo` é uma 'branch' especifica, 'tag', ou 'commit'. Você também precisará usar o mesmo nome e referência ao desinstalar.\n\n## Instalar última versão estável\n\nPara instalar a última versão estável de uma ferramenta, use:\n\n```\nasdf install <name> latest\n# asdf install erlang latest\n```\n\nPara instalar a última versão estável que inicia com um texto específico:\n\n```\nasdf install <name> latest:<version>\n# asdf install erlang latest:17\n```\n\n## Listar versões instaladas\n\nPara listar as versões instaladas de uma ferramenta, use:\n\n```\nasdf list <name>\n# asdf list erlang\n```\n\nPara limitar as versões que iniciam com um determinado texto:\n\n```\nasdf list <name> <version>\n# asdf list erlang 17\n```\n\n## Listar todas as versões disponíveis\n\nPara listar todas as versões disponíveis de uma ferramenta, use:\n\n```\nasdf list all <name>\n# asdf list all erlang\n```\n\nPara limitar as versões que iniciam com um determinado texto:\n\n```\nasdf list all <name> <version>\n# asdf list all erlang 17\n```\n\n## Mostrar última versão estável\n\nPara mostrar a última versão estável de uma ferramenta, use:\n\n```\nasdf latest <name>\n# asdf latest erlang\n```\n\nPara mostrar a última versão estável que inicia com um determinado texto:\n\n```\nasdf latest <name> <version>\n# asdf latest erlang 17\n```\n\n## Selecionar versão atual\n\nPara selecionar a versão atual de uma ferramenta, use:\n\n```\nasdf global <name> <version> [<version>...]\nasdf shell <name> <version> [<version>...]\nasdf local <name> <version> [<version>...]\n# asdf global elixir 1.2.4\n\nasdf global <name> latest[:<version>]\nasdf local <name> latest[:<version>]\n# asdf global elixir latest\n```\n\n`global` escreve a versão para `$HOME/.tool-versions`.\n\n`shell` seleciona a versão na variável de ambiente `ASDF_${LANG}_VERSION`, para a seção atual do shell.\n\n`local` escreve a versão para `$PWD/.tool-versions`, criando se necessário.\n\nVeja em `.tool-versions` para mais detalhes.\n\n## Resposta do sistema de versão\n\nPara usar o sistema de versão da ferramenta `<name>`, inicie um gerenciador de versões do asdf para selecionar a versão na ferramenta do `system`.\n\nSelecione o sistema com `global`, `local` ou `shell` conforme descrito em Selecionar versão atual:\n\n```\nasdf local <name> system\n# asdf local python system\n```\n\n## Verificar a versão atual\n\nPara verificar a versão atual de todas as ferramentas, use:\n\n```\nasdf current\n# asdf current\n# erlang 17.3 (set by /Users/kim/.tool-versions)\n# nodejs 6.11.5 (set by /Users/kim/cool-node-project/.tool-versions)\n```\n\nPara verificar a versão atual de uma ferramenta específica:\n\n```\nasdf current <name>\n# asdf current erlang\n# 17.3 (set by /Users/kim/.tool-versions)\n```\n\n## Desinstalar versão\n\nPara desinstalar uma versão de uma ferramenta, use:\n\n```\nasdf uninstall <name> <version>\n# asdf uninstall erlang 17.3\n```\n\n## Shims\n\nQuando asdf instala um pacote, é criado _shims_ para cada programa executado no pacote do diretório `$ASDF_DATA_DIR/shims` (padrão `~/.asdf/shims`). Esse diretório começa no `$PATH` e é como o programa instalado é disponibilizado no ambiente do sistema.\n\nOs _shims_ em si são atalhos simples que executam um programa auxiliar `asdf exec` passando o nome do plugin e o caminho para o executável no pacote instalado que o _shim_ está contido.\n\nO `asdf exec` ajuda a determinar a versão do pacote usado, o final do _path_ do executável no pacote instalado e o ambiente executado.\n\nObserve que, como este sistema usa chamadas `exec`, qualquer _scripts_ no pacote devem ser fornecidos pelo _shell_.\n\nOs comandos `which` e `where` podem ajudar com o retorno do caminho para o pacote instalado:\n\n```\n# retorna o 'path' da versão atual em execução\nsource $(asdf which ${PLUGIN})/../script.sh\n\n# retorna o 'path' do pacote instalado no diretório\nsource $(asdf where ${PLUGIN} $(asdf current ${PLUGIN}))/bin/script.sh\n```\n\n## Ignorando _shims_ do asdf\n\nSe por algum motivo você deseja ignorar _shims_ do asdf ou deseja que suas variáveis de ambiente sejam definidas automaticamente ao entrar no diretório do seu projeto, pode ser útil o [asdf-direnv](https://github.com/asdf-community/asdf-direnv). Verifique o README para mais detalhes.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://asdf-vm.com/pt-br/manage/versions.html", "title": "Gerenciamento de Versões com asdf", "description": "Esta página cobre como instalar, listar, selecionar e desinstalar versões de ferramentas usando o gerenciador de versões asdf.", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 03:34:31", "type": "overview", "page_metadata": {"generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "title": "Versões | asdf", "language": "pr-br", "scrapeId": "4daddccc-1713-42c3-9c9b-ee35f20b235b", "sourceURL": "https://asdf-vm.com/pt-br/manage/versions.html", "url": "https://asdf-vm.com/pt-br/manage/versions.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I instalar versão in asdf-vm?\n\nAssistant: To instalar versão in asdf-vm, here's what you do:\nPara instalar uma versão específica de uma ferramenta, use o comando:\n\n```\nasdf install <name> <version>\n# asdf install erlang 17.3\n```\n\nSe um plugin suporta o download e compilação do código-fonte, você pode especificar `ref:foo` no qual `foo` é uma 'branch' especifica, 'tag', ou 'commit'. Você também precisará usar o mesmo nome e referência ao desinstalar..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/pt-br/manage/versions.html", "title": "Gerenciamento de Versões com asdf", "description": "Esta página cobre como instalar, listar, selecionar e desinstalar versões de ferramentas usando o gerenciador de versões asdf.", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 03:34:31", "type": "section_detail", "page_metadata": {"generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "title": "Versões | asdf", "language": "pr-br", "scrapeId": "4daddccc-1713-42c3-9c9b-ee35f20b235b", "sourceURL": "https://asdf-vm.com/pt-br/manage/versions.html", "url": "https://asdf-vm.com/pt-br/manage/versions.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I instalar última versão estável in asdf-vm?\n\nAssistant: To instalar última versão estável in asdf-vm, here's what you do:\nPara instalar a última versão estável de uma ferramenta, use:\n\n```\nasdf install <name> latest\n# asdf install erlang latest\n```\n\nPara instalar a última versão estável que inicia com um texto específico:\n\n```\nasdf install <name> latest:<version>\n# asdf install erlang latest:17\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/pt-br/manage/versions.html", "title": "Gerenciamento de Versões com asdf", "description": "Esta página cobre como instalar, listar, selecionar e desinstalar versões de ferramentas usando o gerenciador de versões asdf.", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 03:34:31", "type": "section_detail", "page_metadata": {"generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "title": "Versões | asdf", "language": "pr-br", "scrapeId": "4daddccc-1713-42c3-9c9b-ee35f20b235b", "sourceURL": "https://asdf-vm.com/pt-br/manage/versions.html", "url": "https://asdf-vm.com/pt-br/manage/versions.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I listar versões instaladas in asdf-vm?\n\nAssistant: To listar versões instaladas in asdf-vm, here's what you do:\nPara listar as versões instaladas de uma ferramenta, use:\n\n```\nasdf list <name>\n# asdf list erlang\n```\n\nPara limitar as versões que iniciam com um determinado texto:\n\n```\nasdf list <name> <version>\n# asdf list erlang 17\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/pt-br/manage/versions.html", "title": "Gerenciamento de Versões com asdf", "description": "Esta página cobre como instalar, listar, selecionar e desinstalar versões de ferramentas usando o gerenciador de versões asdf.", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 03:34:31", "type": "section_detail", "page_metadata": {"generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "title": "Versões | asdf", "language": "pr-br", "scrapeId": "4daddccc-1713-42c3-9c9b-ee35f20b235b", "sourceURL": "https://asdf-vm.com/pt-br/manage/versions.html", "url": "https://asdf-vm.com/pt-br/manage/versions.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I listar todas as versões disponíveis in asdf-vm?\n\nAssistant: To listar todas as versões disponíveis in asdf-vm, here's what you do:\nPara listar todas as versões disponíveis de uma ferramenta, use:\n\n```\nasdf list all <name>\n# asdf list all erlang\n```\n\nPara limitar as versões que iniciam com um determinado texto:\n\n```\nasdf list all <name> <version>\n# asdf list all erlang 17\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/pt-br/manage/versions.html", "title": "Gerenciamento de Versões com asdf", "description": "Esta página cobre como instalar, listar, selecionar e desinstalar versões de ferramentas usando o gerenciador de versões asdf.", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 03:34:31", "type": "section_detail", "page_metadata": {"generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "title": "Versões | asdf", "language": "pr-br", "scrapeId": "4daddccc-1713-42c3-9c9b-ee35f20b235b", "sourceURL": "https://asdf-vm.com/pt-br/manage/versions.html", "url": "https://asdf-vm.com/pt-br/manage/versions.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I mostrar última versão estável in asdf-vm?\n\nAssistant: To mostrar última versão estável in asdf-vm, here's what you do:\nPara mostrar a última versão estável de uma ferramenta, use:\n\n```\nasdf latest <name>\n# asdf latest erlang\n```\n\nPara mostrar a última versão estável que inicia com um determinado texto:\n\n```\nasdf latest <name> <version>\n# asdf latest erlang 17\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/pt-br/manage/versions.html", "title": "Gerenciamento de Versões com asdf", "description": "Esta página cobre como instalar, listar, selecionar e desinstalar versões de ferramentas usando o gerenciador de versões asdf.", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 03:34:31", "type": "section_detail", "page_metadata": {"generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "title": "Versões | asdf", "language": "pr-br", "scrapeId": "4daddccc-1713-42c3-9c9b-ee35f20b235b", "sourceURL": "https://asdf-vm.com/pt-br/manage/versions.html", "url": "https://asdf-vm.com/pt-br/manage/versions.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I selecionar versão atual in asdf-vm?\n\nAssistant: To selecionar versão atual in asdf-vm, here's what you do:\nPara selecionar a versão atual de uma ferramenta, use:\n\n```\nasdf global <name> <version> [<version>...]\nasdf shell <name> <version> [<version>...]\nasdf local <name> <version> [<version>...]\n# asdf global elixir 1.2.4\n\nasdf global <name> latest[:<version>]\nasdf local <name> latest[:<version>]\n# asdf global elixir latest\n```\n\n`global` escreve a versão para `$HOME/.tool-versions`.\n\n`shell` seleciona a versão na variável de ambiente `ASDF_${LANG}_VERSION`, para a seção atual do shell.\n\n`local` escreve a versão para `$PWD/.tool-versions`, criando se necessário.\n\nVeja em `.tool-versions` para mais detalhes..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/pt-br/manage/versions.html", "title": "Gerenciamento de Versões com asdf", "description": "Esta página cobre como instalar, listar, selecionar e desinstalar versões de ferramentas usando o gerenciador de versões asdf.", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 03:34:31", "type": "section_detail", "page_metadata": {"generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "title": "Versões | asdf", "language": "pr-br", "scrapeId": "4daddccc-1713-42c3-9c9b-ee35f20b235b", "sourceURL": "https://asdf-vm.com/pt-br/manage/versions.html", "url": "https://asdf-vm.com/pt-br/manage/versions.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I resposta do sistema de versão in asdf-vm?\n\nAssistant: To resposta do sistema de versão in asdf-vm, here's what you do:\nPara usar o sistema de versão da ferramenta `<name>`, inicie um gerenciador de versões do asdf para selecionar a versão na ferramenta do `system`.\n\nSelecione o sistema com `global`, `local` ou `shell` conforme descrito em Selecionar versão atual:\n\n```\nasdf local <name> system\n# asdf local python system\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/pt-br/manage/versions.html", "title": "Gerenciamento de Versões com asdf", "description": "Esta página cobre como instalar, listar, selecionar e desinstalar versões de ferramentas usando o gerenciador de versões asdf.", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 03:34:31", "type": "section_detail", "page_metadata": {"generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "title": "Versões | asdf", "language": "pr-br", "scrapeId": "4daddccc-1713-42c3-9c9b-ee35f20b235b", "sourceURL": "https://asdf-vm.com/pt-br/manage/versions.html", "url": "https://asdf-vm.com/pt-br/manage/versions.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I verificar a versão atual in asdf-vm?\n\nAssistant: To verificar a versão atual in asdf-vm, here's what you do:\nPara verificar a versão atual de todas as ferramentas, use:\n\n```\nasdf current\n# asdf current\n# erlang 17.3 (set by /Users/kim/.tool-versions)\n# nodejs 6.11.5 (set by /Users/kim/cool-node-project/.tool-versions)\n```\n\nPara verificar a versão atual de uma ferramenta específica:\n\n```\nasdf current <name>\n# asdf current erlang\n# 17.3 (set by /Users/kim/.tool-versions)\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/pt-br/manage/versions.html", "title": "Gerenciamento de Versões com asdf", "description": "Esta página cobre como instalar, listar, selecionar e desinstalar versões de ferramentas usando o gerenciador de versões asdf.", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 03:34:31", "type": "section_detail", "page_metadata": {"generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "title": "Versões | asdf", "language": "pr-br", "scrapeId": "4daddccc-1713-42c3-9c9b-ee35f20b235b", "sourceURL": "https://asdf-vm.com/pt-br/manage/versions.html", "url": "https://asdf-vm.com/pt-br/manage/versions.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I desinstalar versão in asdf-vm?\n\nAssistant: To desinstalar versão in asdf-vm, here's what you do:\nPara desinstalar uma versão de uma ferramenta, use:\n\n```\nasdf uninstall <name> <version>\n# asdf uninstall erlang 17.3\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/pt-br/manage/versions.html", "title": "Gerenciamento de Versões com asdf", "description": "Esta página cobre como instalar, listar, selecionar e desinstalar versões de ferramentas usando o gerenciador de versões asdf.", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 03:34:31", "type": "section_detail", "page_metadata": {"generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "title": "Versões | asdf", "language": "pr-br", "scrapeId": "4daddccc-1713-42c3-9c9b-ee35f20b235b", "sourceURL": "https://asdf-vm.com/pt-br/manage/versions.html", "url": "https://asdf-vm.com/pt-br/manage/versions.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I shims in asdf-vm?\n\nAssistant: To shims in asdf-vm, here's what you do:\nQuando asdf instala um pacote, é criado _shims_ para cada programa executado no pacote do diretório `$ASDF_DATA_DIR/shims` (padrão `~/.asdf/shims`). Esse diretório começa no `$PATH` e é como o programa instalado é disponibilizado no ambiente do sistema.\n\nOs _shims_ em si são atalhos simples que executam um programa auxiliar `asdf exec` passando o nome do plugin e o caminho para o executável no pacote instalado que o _shim_ está contido.\n\nO `asdf exec` ajuda a determinar a versão do pacote usado, o final do _path_ do executável no pacote instalado e o ambiente executado.\n\nObserve que, como este sistema usa chamadas `exec`, qualquer _scripts_ no pacote devem ser fornecidos pelo _shell_.\n\nOs comandos `which` e `where` podem ajudar com o retorno do caminho para o pacote instalado:\n\n```\n# retorna o 'path' da versão atual em execução\nsource $(asdf which ${PLUGIN})/../script.sh\n\n# retorna o 'path' do pacote instalado no diretório\nsource $(asdf where ${PLUGIN} $(asdf current ${PLUGIN}))/bin/script.sh\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/pt-br/manage/versions.html", "title": "Gerenciamento de Versões com asdf", "description": "Esta página cobre como instalar, listar, selecionar e desinstalar versões de ferramentas usando o gerenciador de versões asdf.", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 03:34:31", "type": "section_detail", "page_metadata": {"generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "title": "Versões | asdf", "language": "pr-br", "scrapeId": "4daddccc-1713-42c3-9c9b-ee35f20b235b", "sourceURL": "https://asdf-vm.com/pt-br/manage/versions.html", "url": "https://asdf-vm.com/pt-br/manage/versions.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I ignorando _shims_ do asdf in asdf-vm?\n\nAssistant: To ignorando _shims_ do asdf in asdf-vm, here's what you do:\nSe por algum motivo você deseja ignorar _shims_ do asdf ou deseja que suas variáveis de ambiente sejam definidas automaticamente ao entrar no diretório do seu projeto, pode ser útil o [asdf-direnv](https://github.com/asdf-community/asdf-direnv). Verifique o README para mais detalhes..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/pt-br/manage/versions.html", "title": "Gerenciamento de Versões com asdf", "description": "Esta página cobre como instalar, listar, selecionar e desinstalar versões de ferramentas usando o gerenciador de versões asdf.", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 03:34:31", "type": "section_detail", "page_metadata": {"generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "title": "Versões | asdf", "language": "pr-br", "scrapeId": "4daddccc-1713-42c3-9c9b-ee35f20b235b", "sourceURL": "https://asdf-vm.com/pt-br/manage/versions.html", "url": "https://asdf-vm.com/pt-br/manage/versions.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you give me some code examples for Gerenciamento de Versões com asdf in asdf-vm?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Instalar Versão**:\n\n```yaml\nasdf install <name> <version>\n# asdf install erlang 17.3\n```\n\nThis snippet shows you how to instalar versão, which is an important aspect of gerenciamento de versões com asdf.\n\n**Instalar última versão estável**:\n\n```yaml\nasdf install <name> latest\n# asdf install erlang latest\n```\n\nThis snippet shows you how to instalar última versão estável, which is an important aspect of gerenciamento de versões com asdf.\n\n**Instalar última versão estável que inicia com um texto**:\n\n```yaml\nasdf install <name> latest:<version>\n# asdf install erlang latest:17\n```\n\nThis snippet shows you how to instalar última versão estável que inicia com um texto, which is an important aspect of gerenciamento de versões com asdf.\n\n**Listar versões instaladas**:\n\n```yaml\nasdf list <name>\n# asdf list erlang\n```\n\nThis snippet shows you how to listar versões instaladas, which is an important aspect of gerenciamento de versões com asdf.\n\n**Listar versões instaladas que iniciam com um texto**:\n\n```yaml\nasdf list <name> <version>\n# asdf list erlang 17\n```\n\nThis snippet shows you how to listar versões instaladas que iniciam com um texto, which is an important aspect of gerenciamento de versões com asdf.\n\n**Listar todas as versões disponíveis**:\n\n```yaml\nasdf list all <name>\n# asdf list all erlang\n```\n\nThis snippet shows you how to listar todas as versões disponíveis, which is an important aspect of gerenciamento de versões com asdf.\n\n**Listar todas as versões disponíveis que iniciam com um texto**:\n\n```yaml\nasdf list all <name> <version>\n# asdf list all erlang 17\n```\n\nThis snippet shows you how to listar todas as versões disponíveis que iniciam com um texto, which is an important aspect of gerenciamento de versões com asdf.\n\n**Mostrar última versão estável**:\n\n```yaml\nasdf latest <name>\n# asdf latest erlang\n```\n\nThis snippet shows you how to mostrar última versão estável, which is an important aspect of gerenciamento de versões com asdf.\n\n**Mostrar última versão estável que inicia com um texto**:\n\n```yaml\nasdf latest <name> <version>\n# asdf latest erlang 17\n```\n\nThis snippet shows you how to mostrar última versão estável que inicia com um texto, which is an important aspect of gerenciamento de versões com asdf.\n\n**Selecionar versão atual**:\n\n```yaml\nasdf global <name> <version> [<version>...]\nasdf shell <name> <version> [<version>...]\nasdf local <name> <version> [<version>...]\n# asdf global elixir 1.2.4\n```\n\nThis snippet shows you how to selecionar versão atual, which is an important aspect of gerenciamento de versões com asdf.\n\n**Selecionar versão atual com latest**:\n\n```yaml\nasdf global <name> latest[:<version>]\nasdf local <name> latest[:<version>]\n# asdf global elixir latest\n```\n\nThis snippet shows you how to selecionar versão atual com latest, which is an important aspect of gerenciamento de versões com asdf.\n\n**Resposta do sistema de versão**:\n\n```yaml\nasdf local <name> system\n# asdf local python system\n```\n\nThis snippet shows you how to resposta do sistema de versão, which is an important aspect of gerenciamento de versões com asdf.\n\n**Verificar a versão atual**:\n\n```yaml\nasdf current\n# asdf current\n# erlang 17.3 (set by /Users/kim/.tool-versions)\n# nodejs 6.11.5 (set by /Users/kim/cool-node-project/.tool-versions)\n```\n\nThis snippet shows you how to verificar a versão atual, which is an important aspect of gerenciamento de versões com asdf.\n\n", "metadata": {"source_url": "https://asdf-vm.com/pt-br/manage/versions.html", "title": "Gerenciamento de Versões com asdf", "description": "Esta página cobre como instalar, listar, selecionar e desinstalar versões de ferramentas usando o gerenciador de versões asdf.", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 03:34:31", "type": "code_examples", "page_metadata": {"generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "title": "Versões | asdf", "language": "pr-br", "scrapeId": "4daddccc-1713-42c3-9c9b-ee35f20b235b", "sourceURL": "https://asdf-vm.com/pt-br/manage/versions.html", "url": "https://asdf-vm.com/pt-br/manage/versions.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: What are some tips for using Gerenciamento de Versões com asdf in asdf-vm effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nSe um plugin suporta o download e compilação do código-fonte, você pode especificar `ref:foo` ao instalar.\n\nUse `asdf exec` para determinar a versão do pacote usado e o ambiente executado.\n\nPara ignorar _shims_ do asdf, considere usar o asdf-direnv.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://asdf-vm.com/pt-br/manage/versions.html", "title": "Gerenciamento de Versões com asdf", "description": "Esta página cobre como instalar, listar, selecionar e desinstalar versões de ferramentas usando o gerenciador de versões asdf.", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 03:34:31", "type": "best_practices", "page_metadata": {"generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "title": "Versões | asdf", "language": "pr-br", "scrapeId": "4daddccc-1713-42c3-9c9b-ee35f20b235b", "sourceURL": "https://asdf-vm.com/pt-br/manage/versions.html", "url": "https://asdf-vm.com/pt-br/manage/versions.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you explain what 插件 is in asdf-vm?\n\nAssistant: Sure, I'd be happy to explain 插件 in asdf-vm.\n\n# 插件\n\n插件告诉 `asdf` 如何处理不同的工具，如 Node.js、 Ruby、 Elixir 等。Here's a quick rundown of what this is about:\n\n## 添加\n\n通过 Git URL 地址添加插件：\n\n```shell\nasdf plugin add <name> <git-url>\n# asdf plugin add elm https://github.com/vic/asdf-elm\n```\n\n或者通过插件存储库中的缩写添加插件：\n\n```shell\nasdf plugin add <name>\n# asdf plugin add erlang\n```\n\n建议\n\n推荐独立于缩写存储库的、更长的 `git-url` 方法。\n\n## 列举已安装\n\n```shell\nasdf plugin list\n# asdf plugin list\n# java\n# nodejs\n```\n\n```shell\nasdf plugin list --urls\n# asdf plugin list\n# java            https://github.com/halcyon/asdf-java.git\n# nodejs          https://github.com/asdf-vm/asdf-nodejs.git\n```\n\n## 列举缩写存储库中的所有插件\n\n```shell\nasdf plugin list all\n``` \n\n请参考 [插件缩写索引](https://github.com/asdf-vm/asdf-plugins) 了解插件的完整缩写列表。\n\n## 更新\n\n```shell\nasdf plugin update --all\n```\n\n如果你想要更新特定的包，如下所示。\n\n```shell\nasdf plugin update <name>\n# asdf plugin update erlang\n```\n\n这种更新方式将会获取插件存储库的 _源代码_ 的 _默认分支_ 的 _最新提交_。版本化的插件和更新正在开发中 ( [#916](https://github.com/asdf-vm/asdf/pull/916))。\n\n## 移除\n\n```bash\nasdf plugin remove <name>\n# asdf plugin remove erlang\n```\n\n移除一个插件将会移除该插件安装的所有工具。这可以当作是清理/修剪工具的许多未使用版本的简单方法。\n\n## 同步缩写存储库\n\n缩写存储库将同步到你的本地计算机并定期刷新。这个周期由以下方法确定：\n\n- 命令 `asdf plugin add <name>` 或者 `asdf plugin list all` 将会触发同步\n- 如果在过去的 `X` 分钟内没有同步，则进行同步\n- `X` 默认是 `60`，但可以通过在 `.asdfrc` 文件中配置 `plugin_repository_last_check_duration` 选项来进行配置。请查看 [asdf 配置文档](https://asdf-vm.com/zh-hans/manage/configuration.html) 了解更多。\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://asdf-vm.com/zh-hans/manage/plugins.html", "title": "插件", "description": "插件告诉 `asdf` 如何处理不同的工具，如 Node.js、 Ruby、 Elixir 等。", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:34:43", "type": "overview", "page_metadata": {"description": "Manage multiple runtime versions with a single CLI tool", "title": "插件 | asdf", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "language": "zh-hans", "scrapeId": "5b2e357d-64df-4ceb-b9f3-7d044b65cbb5", "sourceURL": "https://asdf-vm.com/zh-hans/manage/plugins.html", "url": "https://asdf-vm.com/zh-hans/manage/plugins.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 添加 in asdf-vm?\n\nAssistant: To 添加 in asdf-vm, here's what you do:\n通过 Git URL 地址添加插件：\n\n```shell\nasdf plugin add <name> <git-url>\n# asdf plugin add elm https://github.com/vic/asdf-elm\n```\n\n或者通过插件存储库中的缩写添加插件：\n\n```shell\nasdf plugin add <name>\n# asdf plugin add erlang\n```\n\n建议\n\n推荐独立于缩写存储库的、更长的 `git-url` 方法。.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/zh-hans/manage/plugins.html", "title": "插件", "description": "插件告诉 `asdf` 如何处理不同的工具，如 Node.js、 Ruby、 Elixir 等。", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:34:43", "type": "section_detail", "page_metadata": {"description": "Manage multiple runtime versions with a single CLI tool", "title": "插件 | asdf", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "language": "zh-hans", "scrapeId": "5b2e357d-64df-4ceb-b9f3-7d044b65cbb5", "sourceURL": "https://asdf-vm.com/zh-hans/manage/plugins.html", "url": "https://asdf-vm.com/zh-hans/manage/plugins.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 列举已安装 in asdf-vm?\n\nAssistant: To 列举已安装 in asdf-vm, here's what you do:\n```shell\nasdf plugin list\n# asdf plugin list\n# java\n# nodejs\n```\n\n```shell\nasdf plugin list --urls\n# asdf plugin list\n# java            https://github.com/halcyon/asdf-java.git\n# nodejs          https://github.com/asdf-vm/asdf-nodejs.git\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/zh-hans/manage/plugins.html", "title": "插件", "description": "插件告诉 `asdf` 如何处理不同的工具，如 Node.js、 Ruby、 Elixir 等。", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:34:43", "type": "section_detail", "page_metadata": {"description": "Manage multiple runtime versions with a single CLI tool", "title": "插件 | asdf", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "language": "zh-hans", "scrapeId": "5b2e357d-64df-4ceb-b9f3-7d044b65cbb5", "sourceURL": "https://asdf-vm.com/zh-hans/manage/plugins.html", "url": "https://asdf-vm.com/zh-hans/manage/plugins.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 列举缩写存储库中的所有插件 in asdf-vm?\n\nAssistant: To 列举缩写存储库中的所有插件 in asdf-vm, here's what you do:\n```shell\nasdf plugin list all\n``` \n\n请参考 [插件缩写索引](https://github.com/asdf-vm/asdf-plugins) 了解插件的完整缩写列表。.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/zh-hans/manage/plugins.html", "title": "插件", "description": "插件告诉 `asdf` 如何处理不同的工具，如 Node.js、 Ruby、 Elixir 等。", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:34:43", "type": "section_detail", "page_metadata": {"description": "Manage multiple runtime versions with a single CLI tool", "title": "插件 | asdf", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "language": "zh-hans", "scrapeId": "5b2e357d-64df-4ceb-b9f3-7d044b65cbb5", "sourceURL": "https://asdf-vm.com/zh-hans/manage/plugins.html", "url": "https://asdf-vm.com/zh-hans/manage/plugins.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 更新 in asdf-vm?\n\nAssistant: To 更新 in asdf-vm, here's what you do:\n```shell\nasdf plugin update --all\n```\n\n如果你想要更新特定的包，如下所示。\n\n```shell\nasdf plugin update <name>\n# asdf plugin update erlang\n```\n\n这种更新方式将会获取插件存储库的 _源代码_ 的 _默认分支_ 的 _最新提交_。版本化的插件和更新正在开发中 ( [#916](https://github.com/asdf-vm/asdf/pull/916))。.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/zh-hans/manage/plugins.html", "title": "插件", "description": "插件告诉 `asdf` 如何处理不同的工具，如 Node.js、 Ruby、 Elixir 等。", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:34:43", "type": "section_detail", "page_metadata": {"description": "Manage multiple runtime versions with a single CLI tool", "title": "插件 | asdf", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "language": "zh-hans", "scrapeId": "5b2e357d-64df-4ceb-b9f3-7d044b65cbb5", "sourceURL": "https://asdf-vm.com/zh-hans/manage/plugins.html", "url": "https://asdf-vm.com/zh-hans/manage/plugins.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 移除 in asdf-vm?\n\nAssistant: To 移除 in asdf-vm, here's what you do:\n```bash\nasdf plugin remove <name>\n# asdf plugin remove erlang\n```\n\n移除一个插件将会移除该插件安装的所有工具。这可以当作是清理/修剪工具的许多未使用版本的简单方法。.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/zh-hans/manage/plugins.html", "title": "插件", "description": "插件告诉 `asdf` 如何处理不同的工具，如 Node.js、 Ruby、 Elixir 等。", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:34:43", "type": "section_detail", "page_metadata": {"description": "Manage multiple runtime versions with a single CLI tool", "title": "插件 | asdf", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "language": "zh-hans", "scrapeId": "5b2e357d-64df-4ceb-b9f3-7d044b65cbb5", "sourceURL": "https://asdf-vm.com/zh-hans/manage/plugins.html", "url": "https://asdf-vm.com/zh-hans/manage/plugins.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 同步缩写存储库 in asdf-vm?\n\nAssistant: To 同步缩写存储库 in asdf-vm, here's what you do:\n缩写存储库将同步到你的本地计算机并定期刷新。这个周期由以下方法确定：\n\n- 命令 `asdf plugin add <name>` 或者 `asdf plugin list all` 将会触发同步\n- 如果在过去的 `X` 分钟内没有同步，则进行同步\n- `X` 默认是 `60`，但可以通过在 `.asdfrc` 文件中配置 `plugin_repository_last_check_duration` 选项来进行配置。请查看 [asdf 配置文档](https://asdf-vm.com/zh-hans/manage/configuration.html) 了解更多。.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/zh-hans/manage/plugins.html", "title": "插件", "description": "插件告诉 `asdf` 如何处理不同的工具，如 Node.js、 Ruby、 Elixir 等。", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:34:43", "type": "section_detail", "page_metadata": {"description": "Manage multiple runtime versions with a single CLI tool", "title": "插件 | asdf", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "language": "zh-hans", "scrapeId": "5b2e357d-64df-4ceb-b9f3-7d044b65cbb5", "sourceURL": "https://asdf-vm.com/zh-hans/manage/plugins.html", "url": "https://asdf-vm.com/zh-hans/manage/plugins.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you give me some code examples for 插件 in asdf-vm?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**添加插件**:\n\n```yaml\nasdf plugin add <name> <git-url>\n# asdf plugin add elm https://github.com/vic/asdf-elm\n```\n\nThis snippet shows you how to 添加插件, which is an important aspect of 插件.\n\n**添加插件（缩写）**:\n\n```yaml\nasdf plugin add <name>\n# asdf plugin add erlang\n```\n\nThis snippet shows you how to 添加插件（缩写）, which is an important aspect of 插件.\n\n**列举已安装插件**:\n\n```yaml\nasdf plugin list\n```\n\nThis snippet shows you how to 列举已安装插件, which is an important aspect of 插件.\n\n**列举已安装插件（带URL）**:\n\n```yaml\nasdf plugin list --urls\n```\n\nThis snippet shows you how to 列举已安装插件（带url）, which is an important aspect of 插件.\n\n**列举所有插件**:\n\n```yaml\nasdf plugin list all\n```\n\nThis snippet shows you how to 列举所有插件, which is an important aspect of 插件.\n\n**更新所有插件**:\n\n```yaml\nasdf plugin update --all\n```\n\nThis snippet shows you how to 更新所有插件, which is an important aspect of 插件.\n\n**更新特定插件**:\n\n```yaml\nasdf plugin update <name>\n# asdf plugin update erlang\n```\n\nThis snippet shows you how to 更新特定插件, which is an important aspect of 插件.\n\n**移除插件**:\n\n```yaml\nasdf plugin remove <name>\n# asdf plugin remove erlang\n```\n\nThis snippet shows you how to 移除插件, which is an important aspect of 插件.\n\n", "metadata": {"source_url": "https://asdf-vm.com/zh-hans/manage/plugins.html", "title": "插件", "description": "插件告诉 `asdf` 如何处理不同的工具，如 Node.js、 Ruby、 Elixir 等。", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:34:43", "type": "code_examples", "page_metadata": {"description": "Manage multiple runtime versions with a single CLI tool", "title": "插件 | asdf", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "language": "zh-hans", "scrapeId": "5b2e357d-64df-4ceb-b9f3-7d044b65cbb5", "sourceURL": "https://asdf-vm.com/zh-hans/manage/plugins.html", "url": "https://asdf-vm.com/zh-hans/manage/plugins.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: What are some tips for using 插件 in asdf-vm effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\n推荐独立于缩写存储库的、更长的 `git-url` 方法。\n\n移除插件将会移除该插件安装的所有工具，这可以当作是清理/修剪工具的许多未使用版本的简单方法。\n\n同步缩写存储库的周期可以通过在 `.asdfrc` 文件中配置 `plugin_repository_last_check_duration` 选项来进行配置。\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://asdf-vm.com/zh-hans/manage/plugins.html", "title": "插件", "description": "插件告诉 `asdf` 如何处理不同的工具，如 Node.js、 Ruby、 Elixir 等。", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:34:43", "type": "best_practices", "page_metadata": {"description": "Manage multiple runtime versions with a single CLI tool", "title": "插件 | asdf", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "language": "zh-hans", "scrapeId": "5b2e357d-64df-4ceb-b9f3-7d044b65cbb5", "sourceURL": "https://asdf-vm.com/zh-hans/manage/plugins.html", "url": "https://asdf-vm.com/zh-hans/manage/plugins.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you explain what 创建插件 is in asdf-vm?\n\nAssistant: Sure, I'd be happy to explain 创建插件 in asdf-vm.\n\n# 创建插件\n\n本页面介绍如何创建 asdf 插件，包括必要的脚本、环境变量、可选脚本以及测试插件的方法。Here's a quick rundown of what this is about:\n\n## 插件里有什么\n\n插件是一个包含几个可执行脚本的 git 存储库，用于支持对某种语言或工具进行版本控制。这些脚本在执行 `list-all`、 `install` 或者 `uninstall` 命令时被执行。你可以设定或取消设定环境变量，并执行设置工具环境所需的任何操作。\n\n## 必要的脚本\n\n- `bin/list-all` \\- 列举所有可安装的版本\n- `bin/download` \\- 下载指定版本的源代码或二进制文件\n- `bin/install` \\- 安装指定版本\n\n## 环境变量\n\n所有脚本除了 `bin/list-all` 之外对以下环境变量有权限进行操作：\n\n- `ASDF_INSTALL_TYPE` \\- `version` 或者 `ref`\n- `ASDF_INSTALL_VERSION` \\- 如果 `ASDF_INSTALL_TYPE` 是 `version`，那么这将是版本号。否则它将传递为 git 的 ref。可能指向存储库的一个标签/提交/分支。\n- `ASDF_INSTALL_PATH` \\- _已经_ 安装到的目录（或 `bin/install` 脚本执行情况下 _应该_ 安装到的目录）\n\n这些附加的环境变量将可用于 `bin/install` 脚本：\n\n- `ASDF_CONCURRENCY` \\- 编译源代码时使用的内核数。对于配置 `make -j` 非常有用。\n- `ASDF_DOWNLOAD_PATH` \\- `bin/download` 脚本下载源代码或二进制文件的路径。\n\n这些附加的环境变量将可用于 `bin/download` 脚本：\n\n- `ASDF_DOWNLOAD_PATH` \\- 源代码或二进制文件应该下载到的路径。\n\n## 可选脚本\n\n#### bin/help 脚本\n这不是一个回调脚本，而是一组回调脚本，每个脚本将打印不同的文档到 STDOUT。下面列出了可能的回调脚本。请注意， `bin/help.overview` 是一种特殊情况，因为必须存在才能为脚本显示任何帮助输出。\n\n- `bin/help.overview` \\- 此脚本应该输出有关插件和所管理工具的一般描述。不应该打印任何标题，因为 asdf 将打印标题。输出可以是自由格式的文本，但理想情况下只有一个短段落。如果你希望 asdf 为你的插件提供帮助信息，则必须存在此脚本。所有其他的帮助回调脚本都是可选的。\n- `bin/help.deps` \\- 此脚本应该输出为操作系统量身定制的依赖项列表。每行一个依赖项。\n- `bin/help.config` \\- 此脚本应该打印对插件和工具可能有用的任何必需或可选配置。安装或编译该工具所需的任何环境变量或其他标志（尽可能针对用户的操作系统）。输出可以是自由格式的文本。\n- `bin/help.links` \\- 这应该是与插件和工具相关的链接列表（同样，尽可能针对当前操作系统量身定制）。每行一个链接。行的格式可以是 `<title>: <link>` 或只是 `<link>`。\n\n## asdf 命令行的扩展命令\n\n插件可以通过提供 `lib/commands/command*.bash` 脚本或者可执行程序来定义新的 asdf 命令，这些脚本或可执行程序将使用插件名称作为 asdf 命令的子命令进行调用。\n\n## 测试插件\n\n`asdf` 包含 `plugin-test` 命令用于测试插件。你可以像下面这样使用它：\n\n```\nasdf plugin test <plugin-name> <plugin-url> [--asdf-tool-version <version>] [--asdf-plugin-gitref <git-ref>] [test-command*]\n```\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://asdf-vm.com/zh-hans/plugins/create.html", "title": "创建插件", "description": "本页面介绍如何创建 asdf 插件，包括必要的脚本、环境变量、可选脚本以及测试插件的方法。", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:35:02", "type": "overview", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "title": "创建插件 | asdf", "generator": "VitePress v1.6.3", "description": "Manage multiple runtime versions with a single CLI tool", "language": "zh-hans", "scrapeId": "48f47e51-2fda-4db6-9c15-06d7cbf7720f", "sourceURL": "https://asdf-vm.com/zh-hans/plugins/create.html", "url": "https://asdf-vm.com/zh-hans/plugins/create.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 插件里有什么 in asdf-vm?\n\nAssistant: To 插件里有什么 in asdf-vm, here's what you do:\n插件是一个包含几个可执行脚本的 git 存储库，用于支持对某种语言或工具进行版本控制。这些脚本在执行 `list-all`、 `install` 或者 `uninstall` 命令时被执行。你可以设定或取消设定环境变量，并执行设置工具环境所需的任何操作。.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/zh-hans/plugins/create.html", "title": "创建插件", "description": "本页面介绍如何创建 asdf 插件，包括必要的脚本、环境变量、可选脚本以及测试插件的方法。", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:35:02", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "title": "创建插件 | asdf", "generator": "VitePress v1.6.3", "description": "Manage multiple runtime versions with a single CLI tool", "language": "zh-hans", "scrapeId": "48f47e51-2fda-4db6-9c15-06d7cbf7720f", "sourceURL": "https://asdf-vm.com/zh-hans/plugins/create.html", "url": "https://asdf-vm.com/zh-hans/plugins/create.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 必要的脚本 in asdf-vm?\n\nAssistant: To 必要的脚本 in asdf-vm, here's what you do:\n- `bin/list-all` \\- 列举所有可安装的版本\n- `bin/download` \\- 下载指定版本的源代码或二进制文件\n- `bin/install` \\- 安装指定版本.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/zh-hans/plugins/create.html", "title": "创建插件", "description": "本页面介绍如何创建 asdf 插件，包括必要的脚本、环境变量、可选脚本以及测试插件的方法。", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:35:02", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "title": "创建插件 | asdf", "generator": "VitePress v1.6.3", "description": "Manage multiple runtime versions with a single CLI tool", "language": "zh-hans", "scrapeId": "48f47e51-2fda-4db6-9c15-06d7cbf7720f", "sourceURL": "https://asdf-vm.com/zh-hans/plugins/create.html", "url": "https://asdf-vm.com/zh-hans/plugins/create.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 环境变量 in asdf-vm?\n\nAssistant: To 环境变量 in asdf-vm, here's what you do:\n所有脚本除了 `bin/list-all` 之外对以下环境变量有权限进行操作：\n\n- `ASDF_INSTALL_TYPE` \\- `version` 或者 `ref`\n- `ASDF_INSTALL_VERSION` \\- 如果 `ASDF_INSTALL_TYPE` 是 `version`，那么这将是版本号。否则它将传递为 git 的 ref。可能指向存储库的一个标签/提交/分支。\n- `ASDF_INSTALL_PATH` \\- _已经_ 安装到的目录（或 `bin/install` 脚本执行情况下 _应该_ 安装到的目录）\n\n这些附加的环境变量将可用于 `bin/install` 脚本：\n\n- `ASDF_CONCURRENCY` \\- 编译源代码时使用的内核数。对于配置 `make -j` 非常有用。\n- `ASDF_DOWNLOAD_PATH` \\- `bin/download` 脚本下载源代码或二进制文件的路径。\n\n这些附加的环境变量将可用于 `bin/download` 脚本：\n\n- `ASDF_DOWNLOAD_PATH` \\- 源代码或二进制文件应该下载到的路径。.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/zh-hans/plugins/create.html", "title": "创建插件", "description": "本页面介绍如何创建 asdf 插件，包括必要的脚本、环境变量、可选脚本以及测试插件的方法。", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:35:02", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "title": "创建插件 | asdf", "generator": "VitePress v1.6.3", "description": "Manage multiple runtime versions with a single CLI tool", "language": "zh-hans", "scrapeId": "48f47e51-2fda-4db6-9c15-06d7cbf7720f", "sourceURL": "https://asdf-vm.com/zh-hans/plugins/create.html", "url": "https://asdf-vm.com/zh-hans/plugins/create.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 可选脚本 in asdf-vm?\n\nAssistant: To 可选脚本 in asdf-vm, here's what you do:\n#### bin/help 脚本\n这不是一个回调脚本，而是一组回调脚本，每个脚本将打印不同的文档到 STDOUT。下面列出了可能的回调脚本。请注意， `bin/help.overview` 是一种特殊情况，因为必须存在才能为脚本显示任何帮助输出。\n\n- `bin/help.overview` \\- 此脚本应该输出有关插件和所管理工具的一般描述。不应该打印任何标题，因为 asdf 将打印标题。输出可以是自由格式的文本，但理想情况下只有一个短段落。如果你希望 asdf 为你的插件提供帮助信息，则必须存在此脚本。所有其他的帮助回调脚本都是可选的。\n- `bin/help.deps` \\- 此脚本应该输出为操作系统量身定制的依赖项列表。每行一个依赖项。\n- `bin/help.config` \\- 此脚本应该打印对插件和工具可能有用的任何必需或可选配置。安装或编译该工具所需的任何环境变量或其他标志（尽可能针对用户的操作系统）。输出可以是自由格式的文本。\n- `bin/help.links` \\- 这应该是与插件和工具相关的链接列表（同样，尽可能针对当前操作系统量身定制）。每行一个链接。行的格式可以是 `<title>: <link>` 或只是 `<link>`。.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/zh-hans/plugins/create.html", "title": "创建插件", "description": "本页面介绍如何创建 asdf 插件，包括必要的脚本、环境变量、可选脚本以及测试插件的方法。", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:35:02", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "title": "创建插件 | asdf", "generator": "VitePress v1.6.3", "description": "Manage multiple runtime versions with a single CLI tool", "language": "zh-hans", "scrapeId": "48f47e51-2fda-4db6-9c15-06d7cbf7720f", "sourceURL": "https://asdf-vm.com/zh-hans/plugins/create.html", "url": "https://asdf-vm.com/zh-hans/plugins/create.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I asdf 命令行的扩展命令 in asdf-vm?\n\nAssistant: To asdf 命令行的扩展命令 in asdf-vm, here's what you do:\n插件可以通过提供 `lib/commands/command*.bash` 脚本或者可执行程序来定义新的 asdf 命令，这些脚本或可执行程序将使用插件名称作为 asdf 命令的子命令进行调用。.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/zh-hans/plugins/create.html", "title": "创建插件", "description": "本页面介绍如何创建 asdf 插件，包括必要的脚本、环境变量、可选脚本以及测试插件的方法。", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:35:02", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "title": "创建插件 | asdf", "generator": "VitePress v1.6.3", "description": "Manage multiple runtime versions with a single CLI tool", "language": "zh-hans", "scrapeId": "48f47e51-2fda-4db6-9c15-06d7cbf7720f", "sourceURL": "https://asdf-vm.com/zh-hans/plugins/create.html", "url": "https://asdf-vm.com/zh-hans/plugins/create.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 测试插件 in asdf-vm?\n\nAssistant: To 测试插件 in asdf-vm, here's what you do:\n`asdf` 包含 `plugin-test` 命令用于测试插件。你可以像下面这样使用它：\n\n```\nasdf plugin test <plugin-name> <plugin-url> [--asdf-tool-version <version>] [--asdf-plugin-gitref <git-ref>] [test-command*]\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/zh-hans/plugins/create.html", "title": "创建插件", "description": "本页面介绍如何创建 asdf 插件，包括必要的脚本、环境变量、可选脚本以及测试插件的方法。", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:35:02", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "title": "创建插件 | asdf", "generator": "VitePress v1.6.3", "description": "Manage multiple runtime versions with a single CLI tool", "language": "zh-hans", "scrapeId": "48f47e51-2fda-4db6-9c15-06d7cbf7720f", "sourceURL": "https://asdf-vm.com/zh-hans/plugins/create.html", "url": "https://asdf-vm.com/zh-hans/plugins/create.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you give me some code examples for 创建插件 in asdf-vm?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**bin/list-all 示例输出**:\n\n```yaml\n1.0.1 1.0.2 1.3.0 1.4\n```\n\nThis snippet shows you how to bin/list-all 示例输出, which is an important aspect of 创建插件.\n\n**bin/download 示例**:\n\n```yaml\ncmd=\"curl -s\"\nif [ -n \"$GITHUB_API_TOKEN\" ]; then\n cmd=\"$cmd -H 'Authorization: token $GITHUB_API_TOKEN'\"\nfi\n\ncmd=\"$cmd $releases_path\"\n```\n\nThis snippet shows you how to bin/download 示例, which is an important aspect of 创建插件.\n\n**GitHub Action 示例**:\n\n```yaml\nsteps:\n  - name: asdf_plugin_test\n    uses: asdf-vm/actions/plugin-test@v1\n    with:\n      command: \"my_tool --version\"\n    env:\n      GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }} # 自动提供\n```\n\nThis snippet shows you how to github action 示例, which is an important aspect of 创建插件.\n\n**TravisCI 配置示例**:\n\n```yaml\nlanguage: c\nscript: asdf plugin test nodejs $TRAVIS_BUILD_DIR 'node --version'\nbefore_script:\n  - git clone https://github.com/asdf-vm/asdf.git asdf\n  - . asdf/asdf.sh\nos:\n  - linux\n  - osx\n```\n\nThis snippet shows you how to travisci 配置示例, which is an important aspect of 创建插件.\n\n", "metadata": {"source_url": "https://asdf-vm.com/zh-hans/plugins/create.html", "title": "创建插件", "description": "本页面介绍如何创建 asdf 插件，包括必要的脚本、环境变量、可选脚本以及测试插件的方法。", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:35:02", "type": "code_examples", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "title": "创建插件 | asdf", "generator": "VitePress v1.6.3", "description": "Manage multiple runtime versions with a single CLI tool", "language": "zh-hans", "scrapeId": "48f47e51-2fda-4db6-9c15-06d7cbf7720f", "sourceURL": "https://asdf-vm.com/zh-hans/plugins/create.html", "url": "https://asdf-vm.com/zh-hans/plugins/create.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: What are some tips for using 创建插件 in asdf-vm effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\n确保在访问 GitHub API 时提供授权令牌，以避免频率限制问题。\n\n在 CI 环境中测试插件，确保它可以在 Linux 和 OSX 上运行。\n\n使用 `plugin-test` 命令来测试插件的功能。\n\n在插件的 README 文件中提及任何提供的 asdf 扩展命令。\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://asdf-vm.com/zh-hans/plugins/create.html", "title": "创建插件", "description": "本页面介绍如何创建 asdf 插件，包括必要的脚本、环境变量、可选脚本以及测试插件的方法。", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:35:02", "type": "best_practices", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "title": "创建插件 | asdf", "generator": "VitePress v1.6.3", "description": "Manage multiple runtime versions with a single CLI tool", "language": "zh-hans", "scrapeId": "48f47e51-2fda-4db6-9c15-06d7cbf7720f", "sourceURL": "https://asdf-vm.com/zh-hans/plugins/create.html", "url": "https://asdf-vm.com/zh-hans/plugins/create.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you explain what Criar um plug-in is in asdf-vm?\n\nAssistant: Sure, I'd be happy to explain Criar um plug-in in asdf-vm.\n\n# Criar um plug-in\n\nEste documento fornece diretrizes sobre como criar um plug-in para o asdf, incluindo scripts obrigatórios, variáveis de ambiente e exemplos de uso.Here's a quick rundown of what this is about:\n\n## O que há em um plug-in\n\nUm plugin é um repositório git, com alguns scripts executáveis, para dar suporte ao versionamento de outra linguagem ou ferramenta. Esses scripts são executados quando os comandos `list-all`, `install` ou `uninstall` são executados. Você pode definir ou desmarcar env vars e fazer qualquer coisa necessária para configurar o ambiente para a ferramenta.\n\n## Scripts obrigatórios\n\n- `bin/list-all` \\- lista todas as versões instaláveis\n- `bin/download` \\- baixe o código fonte ou binário para a versão especificada\n- `bin/install` \\- instala a versão especificada\n\n## Variáveis de Ambiente\n\nTodos os scripts, exceto `bin/list-all`, terão acesso aos seguintes env vars para agir:\n\n- `ASDF_INSTALL_TYPE` \\- `version` ou `ref`\n- `ASDF_INSTALL_VERSION` \\- se `ASDF_INSTALL_TYPE` é `version` então este será o número da versão. Caso contrário, será o git ref que será passado. Pode apontar para uma tag/commit/branch no repositório.\n- `ASDF_INSTALL_PATH` \\- o diretório onde _foi_ instalado (ou _deve_ ser instalado no caso do script `bin/install`)\n\nEssas variáveis de ambiente adicionais estarão disponíveis para o script `bin/install`:\n\n- `ASDF_CONCURRENCY` \\- o número de núcleos a serem usados ao compilar o código-fonte. Útil para definir `make -j`.\n- `ASDF_DOWNLOAD_PATH` \\- o caminho para onde o código fonte ou binário foi baixado pelo script `bin/download`.\n\nEssas variáveis de ambiente adicionais estarão disponíveis para o script `bin/download`:\n\n- `ASDF_DOWNLOAD_PATH` \\- o caminho para onde o código-fonte ou binário deve ser baixado.\n\n## bin/list-all\n\nDeve imprimir uma string com uma lista de versões separadas por espaço. A saída de exemplo seria a seguinte:\n\n```\n1.0.1 1.0.2 1.3.0 1.4\n```\n\nObserve que a versão mais recente deve ser listada por último para que apareça mais próxima do prompt do usuário. Isso é útil já que o comando `list-all` imprime cada versão em sua própria linha. Se houver muitas versões, é possível que as primeiras versões fiquem fora da tela.\n\nSe as versões estiverem sendo extraídas da página de lançamentos em um site, é recomendável não classificar as versões, se possível. Muitas vezes as versões já estão na ordem correta ou, na ordem inversa, nesse caso algo como `tac` deve ser suficiente. Se você precisar classificar as versões manualmente, não poderá confiar em `sort -V`, pois não é suportado no OSX. Uma função de classificação alternativa [como esta é uma escolha melhor](https://github.com/vic/asdf-idris/blob/master/bin/list-all#L6).\n\n## bin/download\n\nEste script deve baixar o código fonte ou binário, no caminho contido na variável de ambiente `ASDF_DOWNLOAD_PATH`. Se o código-fonte ou binário baixado estiver compactado, apenas o código-fonte ou binário descompactado poderá ser colocado no diretório `ASDF_DOWNLOAD_PATH`.\n\nO script deve sair com um status de `0` quando o download for bem-sucedido. Se o download falhar, o script deve sair com qualquer status de saída diferente de zero.\n\nSe possível, o script deve apenas colocar arquivos no `ASDF_DOWNLOAD_PATH`. Se o download falhar, nenhum arquivo deve ser colocado no diretório.\n\nSe este script não estiver presente, o asdf assumirá que o script `bin/install` está presente e fará o download e instalará a versão. asdf só funciona sem este script para suportar plugins legados. Todos os plugins devem incluir este script e, eventualmente, o suporte para plugins legados será removido.\n\n## bin/install\n\nEste script deve instalar a versão, no caminho mencionado em `ASDF_INSTALL_PATH`. Por padrão, o asdf criará shims para qualquer arquivo em `$ASDF_INSTALL_PATH/bin` (isso pode ser personalizado com o script opcional [bin/list-bin-paths](https://asdf-vm.com/pt-br/plugins/create.html#binlist-bin-paths)).\n\nO script de instalação deve sair com um status de `0` quando a instalação for bem-sucedida. Se a instalação falhar, o script deve sair com qualquer status de saída diferente de zero.\n\nSe possível, o script deve apenas colocar os arquivos no diretório `ASDF_INSTALL_PATH` uma vez que a compilação e instalação da ferramenta são consideradas bem sucedidas pelo script de instalação. asdf [verifica a existência](https://github.com/asdf-vm/asdf/blob/242d132afbf710fe3c7ec23c68cec7bdd2c78ab5/lib/utils.sh#L44) do diretório `ASDF_INSTALL_PATH` para determinar se essa versão da ferramenta está instalado. Se o diretório `ASDF_INSTALL_PATH` for preenchido no início do processo de instalação, outros comandos asdf executados em outros terminais durante a instalação podem considerar essa versão da ferramenta instalada, mesmo quando não estiver totalmente instalada.\n\nSe você quiser que seu plugin funcione com asdf versão 0.7._ e anterior e versão 0.8._ e mais recente, verifique a presença da variável de ambiente `ASDF_DOWNLOAD_PATH`. Se não estiver definido, baixe o código-fonte no retorno de chamada bin/install. Se estiver definido, suponha que o script `bin/download` já tenha baixado.\n\n## Scripts Opcionais\n\n#### scripts bin/help\n\nEste não é um script de retorno de chamada, mas sim um conjunto de scripts de retorno de chamada que imprimem documentação diferente para STDOUT. Os scripts de retorno de chamada possíveis estão listados abaixo. Observe que `bin/help.overview` é um caso especial, pois deve estar presente para que qualquer saída de ajuda seja exibida para o script.\n\n- `bin/help.overview` \\- Este script deve gerar uma descrição geral sobre o plugin e a ferramenta que está sendo gerenciada. Nenhum título deve ser impresso, pois o asdf imprimirá títulos. A saída pode ser um texto de formato livre, mas idealmente apenas um parágrafo curto. Este script deve estar presente se você quiser que o asdf forneça informações de ajuda para seu plugin. Todos os outros scripts de retorno de chamada de ajuda são opcionais.\n- `bin/help.deps` \\- Esse script deve gerar a lista de dependências adaptadas ao sistema operacional. Uma dependência por linha.\n- `bin/help.config` \\- Este script deve imprimir qualquer configuração obrigatória ou opcional que possa estar disponível para o plug-in e a ferramenta. Quaisquer variáveis de ambiente ou outros sinalizadores necessários para instalar ou compilar a ferramenta (para o sistema operacional dos usuários quando possível). A saída pode ser texto de formato livre.\n- `bin/help.links` \\- Esta deve ser uma lista de links relevantes para o plug-in e a ferramenta (mais uma vez, adaptados ao sistema operacional atual, quando possível). Um link por linha. As linhas podem estar no formato `<title>: <link>` ou apenas `<link>`.\n\nCada um desses scripts deve adaptar sua saída ao sistema operacional atual. Por exemplo, quando no Ubuntu, o script deps pode gerar as dependências como pacotes apt-get que devem ser instalados. O script também deve adaptar sua saída ao valor de `ASDF_INSTALL_VERSION` e `ASDF_INSTALL_TYPE` quando as variáveis forem definidas. Eles são opcionais e nem sempre serão definidos.\n\n## bin/list-bin-paths\n\nListe os executáveis para a versão especificada da ferramenta. Deve imprimir uma string com uma lista separada por espaços de caminhos de diretórios que contêm executáveis. Os caminhos devem ser relativos ao caminho de instalação passado. A saída de exemplo seria:\n\n```\nbin tools veggies\n```\n\nIsso instruirá o asdf a criar shims para os arquivos em `<install-path>/bin`, `<install-path>/tools` e `<install-path>/veggies`\n\nSe este script não for especificado, o asdf procurará o diretório `bin` em uma instalação e criará shims para eles.\n\n## bin/exec-env\n\nConfigure o env para executar os binários no pacote.\n\n## bin/exec-path\n\nObtenha o caminho executável para a versão especificada da ferramenta. Deve imprimir uma string com o caminho executável relativo. Isso permite que o plug-in substitua condicionalmente o caminho executável especificado do shim, caso contrário, retorne o caminho padrão especificado pelo shim.\n\n```\nUsage:\n  plugin/bin/exec-path <install-path> <command> <executable-path>\n\nExample Call:\n  ~/.asdf/plugins/foo/bin/exec-path \"~/.asdf/installs/foo/1.0\" \"foo\" \"bin/foo\"\n\nOutput:\n  bin/foox\n```\n\n## bin/uninstall\n\nDesinstala uma versão específica de uma ferramenta.\n\n## bin/list-legacy-filenames\n\nRegistre arquivos setter adicionais para este plugin. Deve imprimir uma string com uma lista de nomes de arquivos separados por espaços.\n\n```\n.ruby-version .rvmrc\n```\n\nNota: Isso só se aplica a usuários que habilitaram a opção `legacy_version_file` em seu `~/.asdfrc`.\n\n## bin/parse-legacy-file\n\nIsso pode ser usado para analisar ainda mais o arquivo legado encontrado pelo asdf. Se o `parse-legacy-file` não for implementado, o asdf simplesmente irá cat o arquivo para determinar a versão. O script receberá o caminho do arquivo como seu primeiro argumento.\n\n## bin/post-plugin-add\n\nIsso pode ser usado para executar qualquer ação pós-instalação depois que o plug-in for adicionado ao asdf.\n\nO script tem acesso ao caminho em que o plugin foi instalado ( `${ASDF_PLUGIN_PATH}`) e o URL de origem ( `${ASDF_PLUGIN_SOURCE_URL}`), se algum foi usado.\n\n## bin/pre-plugin-remove\n\nIsso pode ser usado para executar qualquer ação de pré-remoção antes que o plug-in seja removido do asdf.\n\nO script tem acesso ao caminho em que o plugin foi instalado ( `${ASDF_PLUGIN_PATH}`).\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://asdf-vm.com/pt-br/plugins/create.html", "title": "Criar um plug-in", "description": "Este documento fornece diretrizes sobre como criar um plug-in para o asdf, incluindo scripts obrigatórios, variáveis de ambiente e exemplos de uso.", "has_code_examples": true, "has_best_practices": true, "section_count": 15, "timestamp": "2025-03-01 03:35:39", "type": "overview", "page_metadata": {"title": "Criar um plug-in | asdf", "language": "pr-br", "description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "scrapeId": "df37af87-cd6d-4a20-a2c8-c9aee3ca8e51", "sourceURL": "https://asdf-vm.com/pt-br/plugins/create.html", "url": "https://asdf-vm.com/pt-br/plugins/create.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I o que há em um plug-in in asdf-vm?\n\nAssistant: To o que há em um plug-in in asdf-vm, here's what you do:\nUm plugin é um repositório git, com alguns scripts executáveis, para dar suporte ao versionamento de outra linguagem ou ferramenta. Esses scripts são executados quando os comandos `list-all`, `install` ou `uninstall` são executados. Você pode definir ou desmarcar env vars e fazer qualquer coisa necessária para configurar o ambiente para a ferramenta..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/pt-br/plugins/create.html", "title": "Criar um plug-in", "description": "Este documento fornece diretrizes sobre como criar um plug-in para o asdf, incluindo scripts obrigatórios, variáveis de ambiente e exemplos de uso.", "has_code_examples": true, "has_best_practices": true, "section_count": 15, "timestamp": "2025-03-01 03:35:39", "type": "section_detail", "page_metadata": {"title": "Criar um plug-in | asdf", "language": "pr-br", "description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "scrapeId": "df37af87-cd6d-4a20-a2c8-c9aee3ca8e51", "sourceURL": "https://asdf-vm.com/pt-br/plugins/create.html", "url": "https://asdf-vm.com/pt-br/plugins/create.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I scripts obrigatórios in asdf-vm?\n\nAssistant: To scripts obrigatórios in asdf-vm, here's what you do:\n- `bin/list-all` \\- lista todas as versões instaláveis\n- `bin/download` \\- baixe o código fonte ou binário para a versão especificada\n- `bin/install` \\- instala a versão especificada.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/pt-br/plugins/create.html", "title": "Criar um plug-in", "description": "Este documento fornece diretrizes sobre como criar um plug-in para o asdf, incluindo scripts obrigatórios, variáveis de ambiente e exemplos de uso.", "has_code_examples": true, "has_best_practices": true, "section_count": 15, "timestamp": "2025-03-01 03:35:39", "type": "section_detail", "page_metadata": {"title": "Criar um plug-in | asdf", "language": "pr-br", "description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "scrapeId": "df37af87-cd6d-4a20-a2c8-c9aee3ca8e51", "sourceURL": "https://asdf-vm.com/pt-br/plugins/create.html", "url": "https://asdf-vm.com/pt-br/plugins/create.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I variáveis de ambiente in asdf-vm?\n\nAssistant: To variáveis de ambiente in asdf-vm, here's what you do:\nTodos os scripts, exceto `bin/list-all`, terão acesso aos seguintes env vars para agir:\n\n- `ASDF_INSTALL_TYPE` \\- `version` ou `ref`\n- `ASDF_INSTALL_VERSION` \\- se `ASDF_INSTALL_TYPE` é `version` então este será o número da versão. Caso contrário, será o git ref que será passado. Pode apontar para uma tag/commit/branch no repositório.\n- `ASDF_INSTALL_PATH` \\- o diretório onde _foi_ instalado (ou _deve_ ser instalado no caso do script `bin/install`)\n\nEssas variáveis de ambiente adicionais estarão disponíveis para o script `bin/install`:\n\n- `ASDF_CONCURRENCY` \\- o número de núcleos a serem usados ao compilar o código-fonte. Útil para definir `make -j`.\n- `ASDF_DOWNLOAD_PATH` \\- o caminho para onde o código fonte ou binário foi baixado pelo script `bin/download`.\n\nEssas variáveis de ambiente adicionais estarão disponíveis para o script `bin/download`:\n\n- `ASDF_DOWNLOAD_PATH` \\- o caminho para onde o código-fonte ou binário deve ser baixado..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/pt-br/plugins/create.html", "title": "Criar um plug-in", "description": "Este documento fornece diretrizes sobre como criar um plug-in para o asdf, incluindo scripts obrigatórios, variáveis de ambiente e exemplos de uso.", "has_code_examples": true, "has_best_practices": true, "section_count": 15, "timestamp": "2025-03-01 03:35:39", "type": "section_detail", "page_metadata": {"title": "Criar um plug-in | asdf", "language": "pr-br", "description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "scrapeId": "df37af87-cd6d-4a20-a2c8-c9aee3ca8e51", "sourceURL": "https://asdf-vm.com/pt-br/plugins/create.html", "url": "https://asdf-vm.com/pt-br/plugins/create.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I bin/list-all in asdf-vm?\n\nAssistant: To bin/list-all in asdf-vm, here's what you do:\nDeve imprimir uma string com uma lista de versões separadas por espaço. A saída de exemplo seria a seguinte:\n\n```\n1.0.1 1.0.2 1.3.0 1.4\n```\n\nObserve que a versão mais recente deve ser listada por último para que apareça mais próxima do prompt do usuário. Isso é útil já que o comando `list-all` imprime cada versão em sua própria linha. Se houver muitas versões, é possível que as primeiras versões fiquem fora da tela.\n\nSe as versões estiverem sendo extraídas da página de lançamentos em um site, é recomendável não classificar as versões, se possível. Muitas vezes as versões já estão na ordem correta ou, na ordem inversa, nesse caso algo como `tac` deve ser suficiente. Se você precisar classificar as versões manualmente, não poderá confiar em `sort -V`, pois não é suportado no OSX. Uma função de classificação alternativa [como esta é uma escolha melhor](https://github.com/vic/asdf-idris/blob/master/bin/list-all#L6)..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/pt-br/plugins/create.html", "title": "Criar um plug-in", "description": "Este documento fornece diretrizes sobre como criar um plug-in para o asdf, incluindo scripts obrigatórios, variáveis de ambiente e exemplos de uso.", "has_code_examples": true, "has_best_practices": true, "section_count": 15, "timestamp": "2025-03-01 03:35:39", "type": "section_detail", "page_metadata": {"title": "Criar um plug-in | asdf", "language": "pr-br", "description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "scrapeId": "df37af87-cd6d-4a20-a2c8-c9aee3ca8e51", "sourceURL": "https://asdf-vm.com/pt-br/plugins/create.html", "url": "https://asdf-vm.com/pt-br/plugins/create.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I bin/download in asdf-vm?\n\nAssistant: To bin/download in asdf-vm, here's what you do:\nEste script deve baixar o código fonte ou binário, no caminho contido na variável de ambiente `ASDF_DOWNLOAD_PATH`. Se o código-fonte ou binário baixado estiver compactado, apenas o código-fonte ou binário descompactado poderá ser colocado no diretório `ASDF_DOWNLOAD_PATH`.\n\nO script deve sair com um status de `0` quando o download for bem-sucedido. Se o download falhar, o script deve sair com qualquer status de saída diferente de zero.\n\nSe possível, o script deve apenas colocar arquivos no `ASDF_DOWNLOAD_PATH`. Se o download falhar, nenhum arquivo deve ser colocado no diretório.\n\nSe este script não estiver presente, o asdf assumirá que o script `bin/install` está presente e fará o download e instalará a versão. asdf só funciona sem este script para suportar plugins legados. Todos os plugins devem incluir este script e, eventualmente, o suporte para plugins legados será removido..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/pt-br/plugins/create.html", "title": "Criar um plug-in", "description": "Este documento fornece diretrizes sobre como criar um plug-in para o asdf, incluindo scripts obrigatórios, variáveis de ambiente e exemplos de uso.", "has_code_examples": true, "has_best_practices": true, "section_count": 15, "timestamp": "2025-03-01 03:35:39", "type": "section_detail", "page_metadata": {"title": "Criar um plug-in | asdf", "language": "pr-br", "description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "scrapeId": "df37af87-cd6d-4a20-a2c8-c9aee3ca8e51", "sourceURL": "https://asdf-vm.com/pt-br/plugins/create.html", "url": "https://asdf-vm.com/pt-br/plugins/create.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I bin/install in asdf-vm?\n\nAssistant: To bin/install in asdf-vm, here's what you do:\nEste script deve instalar a versão, no caminho mencionado em `ASDF_INSTALL_PATH`. Por padrão, o asdf criará shims para qualquer arquivo em `$ASDF_INSTALL_PATH/bin` (isso pode ser personalizado com o script opcional [bin/list-bin-paths](https://asdf-vm.com/pt-br/plugins/create.html#binlist-bin-paths)).\n\nO script de instalação deve sair com um status de `0` quando a instalação for bem-sucedida. Se a instalação falhar, o script deve sair com qualquer status de saída diferente de zero.\n\nSe possível, o script deve apenas colocar os arquivos no diretório `ASDF_INSTALL_PATH` uma vez que a compilação e instalação da ferramenta são consideradas bem sucedidas pelo script de instalação. asdf [verifica a existência](https://github.com/asdf-vm/asdf/blob/242d132afbf710fe3c7ec23c68cec7bdd2c78ab5/lib/utils.sh#L44) do diretório `ASDF_INSTALL_PATH` para determinar se essa versão da ferramenta está instalado. Se o diretório `ASDF_INSTALL_PATH` for preenchido no início do processo de instalação, outros comandos asdf executados em outros terminais durante a instalação podem considerar essa versão da ferramenta instalada, mesmo quando não estiver totalmente instalada.\n\nSe você quiser que seu plugin funcione com asdf versão 0.7._ e anterior e versão 0.8._ e mais recente, verifique a presença da variável de ambiente `ASDF_DOWNLOAD_PATH`. Se não estiver definido, baixe o código-fonte no retorno de chamada bin/install. Se estiver definido, suponha que o script `bin/download` já tenha baixado..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/pt-br/plugins/create.html", "title": "Criar um plug-in", "description": "Este documento fornece diretrizes sobre como criar um plug-in para o asdf, incluindo scripts obrigatórios, variáveis de ambiente e exemplos de uso.", "has_code_examples": true, "has_best_practices": true, "section_count": 15, "timestamp": "2025-03-01 03:35:39", "type": "section_detail", "page_metadata": {"title": "Criar um plug-in | asdf", "language": "pr-br", "description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "scrapeId": "df37af87-cd6d-4a20-a2c8-c9aee3ca8e51", "sourceURL": "https://asdf-vm.com/pt-br/plugins/create.html", "url": "https://asdf-vm.com/pt-br/plugins/create.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I scripts opcionais in asdf-vm?\n\nAssistant: To scripts opcionais in asdf-vm, here's what you do:\n#### scripts bin/help\n\nEste não é um script de retorno de chamada, mas sim um conjunto de scripts de retorno de chamada que imprimem documentação diferente para STDOUT. Os scripts de retorno de chamada possíveis estão listados abaixo. Observe que `bin/help.overview` é um caso especial, pois deve estar presente para que qualquer saída de ajuda seja exibida para o script.\n\n- `bin/help.overview` \\- Este script deve gerar uma descrição geral sobre o plugin e a ferramenta que está sendo gerenciada. Nenhum título deve ser impresso, pois o asdf imprimirá títulos. A saída pode ser um texto de formato livre, mas idealmente apenas um parágrafo curto. Este script deve estar presente se você quiser que o asdf forneça informações de ajuda para seu plugin. Todos os outros scripts de retorno de chamada de ajuda são opcionais.\n- `bin/help.deps` \\- Esse script deve gerar a lista de dependências adaptadas ao sistema operacional. Uma dependência por linha.\n- `bin/help.config` \\- Este script deve imprimir qualquer configuração obrigatória ou opcional que possa estar disponível para o plug-in e a ferramenta. Quaisquer variáveis de ambiente ou outros sinalizadores necessários para instalar ou compilar a ferramenta (para o sistema operacional dos usuários quando possível). A saída pode ser texto de formato livre.\n- `bin/help.links` \\- Esta deve ser uma lista de links relevantes para o plug-in e a ferramenta (mais uma vez, adaptados ao sistema operacional atual, quando possível). Um link por linha. As linhas podem estar no formato `<title>: <link>` ou apenas `<link>`.\n\nCada um desses scripts deve adaptar sua saída ao sistema operacional atual. Por exemplo, quando no Ubuntu, o script deps pode gerar as dependências como pacotes apt-get que devem ser instalados. O script também deve adaptar sua saída ao valor de `ASDF_INSTALL_VERSION` e `ASDF_INSTALL_TYPE` quando as variáveis forem definidas. Eles são opcionais e nem sempre serão definidos..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/pt-br/plugins/create.html", "title": "Criar um plug-in", "description": "Este documento fornece diretrizes sobre como criar um plug-in para o asdf, incluindo scripts obrigatórios, variáveis de ambiente e exemplos de uso.", "has_code_examples": true, "has_best_practices": true, "section_count": 15, "timestamp": "2025-03-01 03:35:39", "type": "section_detail", "page_metadata": {"title": "Criar um plug-in | asdf", "language": "pr-br", "description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "scrapeId": "df37af87-cd6d-4a20-a2c8-c9aee3ca8e51", "sourceURL": "https://asdf-vm.com/pt-br/plugins/create.html", "url": "https://asdf-vm.com/pt-br/plugins/create.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I bin/list-bin-paths in asdf-vm?\n\nAssistant: To bin/list-bin-paths in asdf-vm, here's what you do:\nListe os executáveis para a versão especificada da ferramenta. Deve imprimir uma string com uma lista separada por espaços de caminhos de diretórios que contêm executáveis. Os caminhos devem ser relativos ao caminho de instalação passado. A saída de exemplo seria:\n\n```\nbin tools veggies\n```\n\nIsso instruirá o asdf a criar shims para os arquivos em `<install-path>/bin`, `<install-path>/tools` e `<install-path>/veggies`\n\nSe este script não for especificado, o asdf procurará o diretório `bin` em uma instalação e criará shims para eles..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/pt-br/plugins/create.html", "title": "Criar um plug-in", "description": "Este documento fornece diretrizes sobre como criar um plug-in para o asdf, incluindo scripts obrigatórios, variáveis de ambiente e exemplos de uso.", "has_code_examples": true, "has_best_practices": true, "section_count": 15, "timestamp": "2025-03-01 03:35:39", "type": "section_detail", "page_metadata": {"title": "Criar um plug-in | asdf", "language": "pr-br", "description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "scrapeId": "df37af87-cd6d-4a20-a2c8-c9aee3ca8e51", "sourceURL": "https://asdf-vm.com/pt-br/plugins/create.html", "url": "https://asdf-vm.com/pt-br/plugins/create.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I bin/exec-env in asdf-vm?\n\nAssistant: To bin/exec-env in asdf-vm, here's what you do:\nConfigure o env para executar os binários no pacote..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/pt-br/plugins/create.html", "title": "Criar um plug-in", "description": "Este documento fornece diretrizes sobre como criar um plug-in para o asdf, incluindo scripts obrigatórios, variáveis de ambiente e exemplos de uso.", "has_code_examples": true, "has_best_practices": true, "section_count": 15, "timestamp": "2025-03-01 03:35:39", "type": "section_detail", "page_metadata": {"title": "Criar um plug-in | asdf", "language": "pr-br", "description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "scrapeId": "df37af87-cd6d-4a20-a2c8-c9aee3ca8e51", "sourceURL": "https://asdf-vm.com/pt-br/plugins/create.html", "url": "https://asdf-vm.com/pt-br/plugins/create.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I bin/exec-path in asdf-vm?\n\nAssistant: To bin/exec-path in asdf-vm, here's what you do:\nObtenha o caminho executável para a versão especificada da ferramenta. Deve imprimir uma string com o caminho executável relativo. Isso permite que o plug-in substitua condicionalmente o caminho executável especificado do shim, caso contrário, retorne o caminho padrão especificado pelo shim.\n\n```\nUsage:\n  plugin/bin/exec-path <install-path> <command> <executable-path>\n\nExample Call:\n  ~/.asdf/plugins/foo/bin/exec-path \"~/.asdf/installs/foo/1.0\" \"foo\" \"bin/foo\"\n\nOutput:\n  bin/foox\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/pt-br/plugins/create.html", "title": "Criar um plug-in", "description": "Este documento fornece diretrizes sobre como criar um plug-in para o asdf, incluindo scripts obrigatórios, variáveis de ambiente e exemplos de uso.", "has_code_examples": true, "has_best_practices": true, "section_count": 15, "timestamp": "2025-03-01 03:35:39", "type": "section_detail", "page_metadata": {"title": "Criar um plug-in | asdf", "language": "pr-br", "description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "scrapeId": "df37af87-cd6d-4a20-a2c8-c9aee3ca8e51", "sourceURL": "https://asdf-vm.com/pt-br/plugins/create.html", "url": "https://asdf-vm.com/pt-br/plugins/create.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I bin/uninstall in asdf-vm?\n\nAssistant: To bin/uninstall in asdf-vm, here's what you do:\nDesinstala uma versão específica de uma ferramenta..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/pt-br/plugins/create.html", "title": "Criar um plug-in", "description": "Este documento fornece diretrizes sobre como criar um plug-in para o asdf, incluindo scripts obrigatórios, variáveis de ambiente e exemplos de uso.", "has_code_examples": true, "has_best_practices": true, "section_count": 15, "timestamp": "2025-03-01 03:35:39", "type": "section_detail", "page_metadata": {"title": "Criar um plug-in | asdf", "language": "pr-br", "description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "scrapeId": "df37af87-cd6d-4a20-a2c8-c9aee3ca8e51", "sourceURL": "https://asdf-vm.com/pt-br/plugins/create.html", "url": "https://asdf-vm.com/pt-br/plugins/create.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I bin/list-legacy-filenames in asdf-vm?\n\nAssistant: To bin/list-legacy-filenames in asdf-vm, here's what you do:\nRegistre arquivos setter adicionais para este plugin. Deve imprimir uma string com uma lista de nomes de arquivos separados por espaços.\n\n```\n.ruby-version .rvmrc\n```\n\nNota: Isso só se aplica a usuários que habilitaram a opção `legacy_version_file` em seu `~/.asdfrc`..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/pt-br/plugins/create.html", "title": "Criar um plug-in", "description": "Este documento fornece diretrizes sobre como criar um plug-in para o asdf, incluindo scripts obrigatórios, variáveis de ambiente e exemplos de uso.", "has_code_examples": true, "has_best_practices": true, "section_count": 15, "timestamp": "2025-03-01 03:35:39", "type": "section_detail", "page_metadata": {"title": "Criar um plug-in | asdf", "language": "pr-br", "description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "scrapeId": "df37af87-cd6d-4a20-a2c8-c9aee3ca8e51", "sourceURL": "https://asdf-vm.com/pt-br/plugins/create.html", "url": "https://asdf-vm.com/pt-br/plugins/create.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I bin/parse-legacy-file in asdf-vm?\n\nAssistant: To bin/parse-legacy-file in asdf-vm, here's what you do:\nIsso pode ser usado para analisar ainda mais o arquivo legado encontrado pelo asdf. Se o `parse-legacy-file` não for implementado, o asdf simplesmente irá cat o arquivo para determinar a versão. O script receberá o caminho do arquivo como seu primeiro argumento..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/pt-br/plugins/create.html", "title": "Criar um plug-in", "description": "Este documento fornece diretrizes sobre como criar um plug-in para o asdf, incluindo scripts obrigatórios, variáveis de ambiente e exemplos de uso.", "has_code_examples": true, "has_best_practices": true, "section_count": 15, "timestamp": "2025-03-01 03:35:39", "type": "section_detail", "page_metadata": {"title": "Criar um plug-in | asdf", "language": "pr-br", "description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "scrapeId": "df37af87-cd6d-4a20-a2c8-c9aee3ca8e51", "sourceURL": "https://asdf-vm.com/pt-br/plugins/create.html", "url": "https://asdf-vm.com/pt-br/plugins/create.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I bin/post-plugin-add in asdf-vm?\n\nAssistant: To bin/post-plugin-add in asdf-vm, here's what you do:\nIsso pode ser usado para executar qualquer ação pós-instalação depois que o plug-in for adicionado ao asdf.\n\nO script tem acesso ao caminho em que o plugin foi instalado ( `${ASDF_PLUGIN_PATH}`) e o URL de origem ( `${ASDF_PLUGIN_SOURCE_URL}`), se algum foi usado..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/pt-br/plugins/create.html", "title": "Criar um plug-in", "description": "Este documento fornece diretrizes sobre como criar um plug-in para o asdf, incluindo scripts obrigatórios, variáveis de ambiente e exemplos de uso.", "has_code_examples": true, "has_best_practices": true, "section_count": 15, "timestamp": "2025-03-01 03:35:39", "type": "section_detail", "page_metadata": {"title": "Criar um plug-in | asdf", "language": "pr-br", "description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "scrapeId": "df37af87-cd6d-4a20-a2c8-c9aee3ca8e51", "sourceURL": "https://asdf-vm.com/pt-br/plugins/create.html", "url": "https://asdf-vm.com/pt-br/plugins/create.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I bin/pre-plugin-remove in asdf-vm?\n\nAssistant: To bin/pre-plugin-remove in asdf-vm, here's what you do:\nIsso pode ser usado para executar qualquer ação de pré-remoção antes que o plug-in seja removido do asdf.\n\nO script tem acesso ao caminho em que o plugin foi instalado ( `${ASDF_PLUGIN_PATH}`)..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/pt-br/plugins/create.html", "title": "Criar um plug-in", "description": "Este documento fornece diretrizes sobre como criar um plug-in para o asdf, incluindo scripts obrigatórios, variáveis de ambiente e exemplos de uso.", "has_code_examples": true, "has_best_practices": true, "section_count": 15, "timestamp": "2025-03-01 03:35:39", "type": "section_detail", "page_metadata": {"title": "Criar um plug-in | asdf", "language": "pr-br", "description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "scrapeId": "df37af87-cd6d-4a20-a2c8-c9aee3ca8e51", "sourceURL": "https://asdf-vm.com/pt-br/plugins/create.html", "url": "https://asdf-vm.com/pt-br/plugins/create.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you give me some code examples for Criar um plug-in in asdf-vm?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**bin/list-all**:\n\n```yaml\n```\n1.0.1 1.0.2 1.3.0 1.4\n```\n```\n\nThis snippet shows you how to bin/list-all, which is an important aspect of criar um plug-in.\n\n**bin/download**:\n\n```yaml\nO script deve sair com um status de `0` quando o download for bem-sucedido. Se o download falhar, o script deve sair com qualquer status de saída diferente de zero.\n```\n\nThis snippet shows you how to bin/download, which is an important aspect of criar um plug-in.\n\n**bin/install**:\n\n```yaml\nO script de instalação deve sair com um status de `0` quando a instalação for bem-sucedida. Se a instalação falhar, o script deve sair com qualquer status de saída diferente de zero.\n```\n\nThis snippet shows you how to bin/install, which is an important aspect of criar um plug-in.\n\n**bin/exec-path**:\n\n```yaml\n```\nUsage:\n  plugin/bin/exec-path <install-path> <command> <executable-path>\n\nExample Call:\n  ~/.asdf/plugins/foo/bin/exec-path \"~/.asdf/installs/foo/1.0\" \"foo\" \"bin/foo\"\n\nOutput:\n  bin/foox\n```\n```\n\nThis snippet shows you how to bin/exec-path, which is an important aspect of criar um plug-in.\n\n**Exemplo GitHub Action**:\n\n```yaml\n```\nsteps:\n  - name: asdf_plugin_test\n    uses: asdf-vm/actions/plugin-test@v1\n    with:\n      command: \"my_tool --version\"\n    env:\n      GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }} # automatically provided\n```\n```\n\nThis snippet shows you how to exemplo github action, which is an important aspect of criar um plug-in.\n\n**Exemplo de configuração do TravisCI**:\n\n```yaml\n```\nlanguage: c\nscript: asdf plugin test nodejs $TRAVIS_BUILD_DIR 'node --version'\nbefore_script:\n  - git clone https://github.com/asdf-vm/asdf.git asdf\n  - . asdf/asdf.sh\nos:\n  - linux\n  - osx\n```\n```\n\nThis snippet shows you how to exemplo de configuração do travisci, which is an important aspect of criar um plug-in.\n\n", "metadata": {"source_url": "https://asdf-vm.com/pt-br/plugins/create.html", "title": "Criar um plug-in", "description": "Este documento fornece diretrizes sobre como criar um plug-in para o asdf, incluindo scripts obrigatórios, variáveis de ambiente e exemplos de uso.", "has_code_examples": true, "has_best_practices": true, "section_count": 15, "timestamp": "2025-03-01 03:35:39", "type": "code_examples", "page_metadata": {"title": "Criar um plug-in | asdf", "language": "pr-br", "description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "scrapeId": "df37af87-cd6d-4a20-a2c8-c9aee3ca8e51", "sourceURL": "https://asdf-vm.com/pt-br/plugins/create.html", "url": "https://asdf-vm.com/pt-br/plugins/create.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: What are some tips for using Criar um plug-in in asdf-vm effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nSe as versões estiverem sendo extraídas da página de lançamentos em um site, é recomendável não classificar as versões, se possível.\n\nSe você quiser que seu plugin funcione com asdf versão 0.7._ e anterior e versão 0.8._ e mais recente, verifique a presença da variável de ambiente `ASDF_DOWNLOAD_PATH`.\n\nAo usar outro IC, você precisará verificar qual variável mapeia para o caminho do repositório.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://asdf-vm.com/pt-br/plugins/create.html", "title": "Criar um plug-in", "description": "Este documento fornece diretrizes sobre como criar um plug-in para o asdf, incluindo scripts obrigatórios, variáveis de ambiente e exemplos de uso.", "has_code_examples": true, "has_best_practices": true, "section_count": 15, "timestamp": "2025-03-01 03:35:39", "type": "best_practices", "page_metadata": {"title": "Criar um plug-in | asdf", "language": "pr-br", "description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "scrapeId": "df37af87-cd6d-4a20-a2c8-c9aee3ca8e51", "sourceURL": "https://asdf-vm.com/pt-br/plugins/create.html", "url": "https://asdf-vm.com/pt-br/plugins/create.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you explain what ドキュメント & サイト is in asdf-vm?\n\nAssistant: Sure, I'd be happy to explain ドキュメント & サイト in asdf-vm.\n\n# ドキュメント & サイト\n\nこれは、ドキュメントおよびサイトのコントリビューションガイドです。Here's a quick rundown of what this is about:\n\n## 初期セットアップ\n\nGitHubで `asdf` をフォークするか、デフォルトのブランチをGitクローンしてください:\n\n```\n# clone your fork\ngit clone https://github.com/<GITHUB_USER>/asdf.git\n# or clone asdf\ngit clone https://github.com/asdf-vm/asdf.git\n```\n\nドキュメントサイト開発用のツールは、 `asdf` によって `docs/.tool-versions` で管理されています。下記のようにプラグインを追加してください:\n\n```\nasdf plugin add nodejs https://github.com/asdf-vm/asdf-nodejs\n```\n\n開発に必要なバージョンを、下記のようにインストールします:\n\n```\nasdf install\n```\n\n- [Node.js](https://nodejs.org/): ChromeのV8 JavaScriptエンジンをベースに構築されたJavaScriptランタイムです。\n\n`docs/package.json` をもとに、Node.jsの依存関係をインストールしてください:\n\n```\nnpm install\n```\n\n## 開発\n\n[VitePress (v2)](https://vitepress.dev/) は、asdfドキュメントサイトを構築するために使用している静的サイトジェネレータ(SSG)です。類似ツールである [Docsify.js](https://docsify.js.org/) やVuePressに代わってVitePressが採用されたのは、ユーザがJavaScriptを使用できない、または有効にしていない場合に、HTMLのみのフォールバックをサポートしたいからでした。これは、DocsifyとVitePressがVuePressに急速に取って代わっていた場合には不可能でした。これ以外の機能セットはほとんど同じで、最小限の構成でMarkdownファイルを書くことに重点を置いています。\n\n`package.json` には、開発に必要なスクリプトが含まれています:\n\n@ [`package.json` のコード](https://github.com/asdf-vm/asdf/blob/master/docs/package.json#L3-L5)\n\nローカルの開発サーバを起動するには、次のように実行します:\n\n```\nnpm run dev\n```\n\nコミットする前にコードをフォーマットするには、次のように実行します:\n\n```\nnpm run format\n```\n\n## プルリクエスト、リリース、Conventional Commits\n\n`asdf` は、プルリクエストタイトルのConventional Commitsに依存する自動リリースパイプラインを使用しています。詳しくは、 [コアのコントリビューションガイド](https://asdf-vm.com/ja-jp/contribute/core.html) のドキュメントに記述されています。\n\nドキュメントの変更に関するプルリクエストを作成する場合、プルリクエストのタイトルは、Conventional Commit typeを `docs` として、 `docs: <description>` というフォーマットで作成するようにしてください。\n\n## Vitepress\n\nサイトの構成設定は、構成を示すために使用されるJSオブジェクト含んだ、いくつかのTypeScriptファイルに記述されています。以下のとおりです:\n\n- `docs/.vitepress/config.js`: サイトのルート構成ファイルです。仕様については、 [VitePressのドキュメント](https://vitepress.dev/reference/site-config) をご覧ください。\n\nルート構成ファイルを簡素化するために、 _Navバー_ と _サイドバー_ の構成を示す大きなJSオブジェクトについては、別ファイルに切り出されており、かつ、ロケールごとに分類されています。次の両方のファイルを参照してください:\n\n- `docs/.vitepress/navbars.js`\n- `docs/.vitepress/sidebars.js`\n\nこれらの構成設定に関する公式ドキュメントは、 [Default Theme Reference](https://vitepress.dev/reference/default-theme-config) をご覧ください。\n\n## I18n\n\nVitePressは、国際化対応に関して最高のサポートを備えています。 ルート構成ファイルである `docs/.vitepress/config.js` では、サポートされているロケールとそのURL、ドロップメニューのタイトル、Navバー/サイドバーの構成への参照を定義しています。\n\nNavバー/サイドバーの構成設定は前述の構成ファイルにキャプチャされ、ロケールごとに分類され、個別にエクスポートされます。\n\n各ロケールのMarkdownコンテンツは、ルート構成ファイル内の `locales` 内のキーと同じ名前のディレクトリ配下に配置する必要があります。ルート構成が下記の場合:\n\n```js\n// docs/.vitepress/config.js\nexport default defineConfig({\n  ...\n  locales: {\n    root: {\n      label: \"English\",\n      lang: \"en-US\",\n      themeConfig: {\n        nav: navbars.en,\n        sidebar: sidebars.en,\n      },\n    },\n    \"pt-br\": {\n      label: \"Brazilian Portuguese\",\n      lang: \"pr-br\",\n      themeConfig: {\n        nav: navbars.pt_br,\n        sidebar: sidebars.pt_br,\n      },\n    },\n    \"zh-hans\": {\n      label: \"简体中文\",\n      lang: \"zh-hans\",\n      themeConfig: {\n        nav: navbars.zh_hans,\n        sidebar: sidebars.zh_hans,\n      },\n    },\n  },\n})\n```\n\n`/pt-BR/` を有効にするには、下記のように、 `docs/pt-BR/` 配下に同じMarkdownファイルのセットを配置する必要があります:\n\n```\ndocs\n├─ README.md\n├─ foo.md\n├─ nested\n│  └─ README.md\n└─ pt-BR\n   ├─ README.md\n   ├─ foo.md\n   └─ nested\n      └─ README.md\n```\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://asdf-vm.com/ja-jp/contribute/documentation.html", "title": "ドキュメント & サイト", "description": "これは、ドキュメントおよびサイトのコントリビューションガイドです。", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:36:12", "type": "overview", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "language": "ja-jp", "title": "ドキュメント & サイト | asdf", "scrapeId": "0dc69a2d-4c69-4f4b-b9dd-c8febd78caa9", "sourceURL": "https://asdf-vm.com/ja-jp/contribute/documentation.html", "url": "https://asdf-vm.com/ja-jp/contribute/documentation.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 初期セットアップ in asdf-vm?\n\nAssistant: To 初期セットアップ in asdf-vm, here's what you do:\nGitHubで `asdf` をフォークするか、デフォルトのブランチをGitクローンしてください:\n\n```\n# clone your fork\ngit clone https://github.com/<GITHUB_USER>/asdf.git\n# or clone asdf\ngit clone https://github.com/asdf-vm/asdf.git\n```\n\nドキュメントサイト開発用のツールは、 `asdf` によって `docs/.tool-versions` で管理されています。下記のようにプラグインを追加してください:\n\n```\nasdf plugin add nodejs https://github.com/asdf-vm/asdf-nodejs\n```\n\n開発に必要なバージョンを、下記のようにインストールします:\n\n```\nasdf install\n```\n\n- [Node.js](https://nodejs.org/): ChromeのV8 JavaScriptエンジンをベースに構築されたJavaScriptランタイムです。\n\n`docs/package.json` をもとに、Node.jsの依存関係をインストールしてください:\n\n```\nnpm install\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ja-jp/contribute/documentation.html", "title": "ドキュメント & サイト", "description": "これは、ドキュメントおよびサイトのコントリビューションガイドです。", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:36:12", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "language": "ja-jp", "title": "ドキュメント & サイト | asdf", "scrapeId": "0dc69a2d-4c69-4f4b-b9dd-c8febd78caa9", "sourceURL": "https://asdf-vm.com/ja-jp/contribute/documentation.html", "url": "https://asdf-vm.com/ja-jp/contribute/documentation.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 開発 in asdf-vm?\n\nAssistant: To 開発 in asdf-vm, here's what you do:\n[VitePress (v2)](https://vitepress.dev/) は、asdfドキュメントサイトを構築するために使用している静的サイトジェネレータ(SSG)です。類似ツールである [Docsify.js](https://docsify.js.org/) やVuePressに代わってVitePressが採用されたのは、ユーザがJavaScriptを使用できない、または有効にしていない場合に、HTMLのみのフォールバックをサポートしたいからでした。これは、DocsifyとVitePressがVuePressに急速に取って代わっていた場合には不可能でした。これ以外の機能セットはほとんど同じで、最小限の構成でMarkdownファイルを書くことに重点を置いています。\n\n`package.json` には、開発に必要なスクリプトが含まれています:\n\n@ [`package.json` のコード](https://github.com/asdf-vm/asdf/blob/master/docs/package.json#L3-L5)\n\nローカルの開発サーバを起動するには、次のように実行します:\n\n```\nnpm run dev\n```\n\nコミットする前にコードをフォーマットするには、次のように実行します:\n\n```\nnpm run format\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ja-jp/contribute/documentation.html", "title": "ドキュメント & サイト", "description": "これは、ドキュメントおよびサイトのコントリビューションガイドです。", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:36:12", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "language": "ja-jp", "title": "ドキュメント & サイト | asdf", "scrapeId": "0dc69a2d-4c69-4f4b-b9dd-c8febd78caa9", "sourceURL": "https://asdf-vm.com/ja-jp/contribute/documentation.html", "url": "https://asdf-vm.com/ja-jp/contribute/documentation.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I プルリクエスト、リリース、conventional commits in asdf-vm?\n\nAssistant: To プルリクエスト、リリース、conventional commits in asdf-vm, here's what you do:\n`asdf` は、プルリクエストタイトルのConventional Commitsに依存する自動リリースパイプラインを使用しています。詳しくは、 [コアのコントリビューションガイド](https://asdf-vm.com/ja-jp/contribute/core.html) のドキュメントに記述されています。\n\nドキュメントの変更に関するプルリクエストを作成する場合、プルリクエストのタイトルは、Conventional Commit typeを `docs` として、 `docs: <description>` というフォーマットで作成するようにしてください。.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ja-jp/contribute/documentation.html", "title": "ドキュメント & サイト", "description": "これは、ドキュメントおよびサイトのコントリビューションガイドです。", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:36:12", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "language": "ja-jp", "title": "ドキュメント & サイト | asdf", "scrapeId": "0dc69a2d-4c69-4f4b-b9dd-c8febd78caa9", "sourceURL": "https://asdf-vm.com/ja-jp/contribute/documentation.html", "url": "https://asdf-vm.com/ja-jp/contribute/documentation.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I vitepress in asdf-vm?\n\nAssistant: To vitepress in asdf-vm, here's what you do:\nサイトの構成設定は、構成を示すために使用されるJSオブジェクト含んだ、いくつかのTypeScriptファイルに記述されています。以下のとおりです:\n\n- `docs/.vitepress/config.js`: サイトのルート構成ファイルです。仕様については、 [VitePressのドキュメント](https://vitepress.dev/reference/site-config) をご覧ください。\n\nルート構成ファイルを簡素化するために、 _Navバー_ と _サイドバー_ の構成を示す大きなJSオブジェクトについては、別ファイルに切り出されており、かつ、ロケールごとに分類されています。次の両方のファイルを参照してください:\n\n- `docs/.vitepress/navbars.js`\n- `docs/.vitepress/sidebars.js`\n\nこれらの構成設定に関する公式ドキュメントは、 [Default Theme Reference](https://vitepress.dev/reference/default-theme-config) をご覧ください。.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ja-jp/contribute/documentation.html", "title": "ドキュメント & サイト", "description": "これは、ドキュメントおよびサイトのコントリビューションガイドです。", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:36:12", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "language": "ja-jp", "title": "ドキュメント & サイト | asdf", "scrapeId": "0dc69a2d-4c69-4f4b-b9dd-c8febd78caa9", "sourceURL": "https://asdf-vm.com/ja-jp/contribute/documentation.html", "url": "https://asdf-vm.com/ja-jp/contribute/documentation.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I i18n in asdf-vm?\n\nAssistant: To i18n in asdf-vm, here's what you do:\nVitePressは、国際化対応に関して最高のサポートを備えています。 ルート構成ファイルである `docs/.vitepress/config.js` では、サポートされているロケールとそのURL、ドロップメニューのタイトル、Navバー/サイドバーの構成への参照を定義しています。\n\nNavバー/サイドバーの構成設定は前述の構成ファイルにキャプチャされ、ロケールごとに分類され、個別にエクスポートされます。\n\n各ロケールのMarkdownコンテンツは、ルート構成ファイル内の `locales` 内のキーと同じ名前のディレクトリ配下に配置する必要があります。ルート構成が下記の場合:\n\n```js\n// docs/.vitepress/config.js\nexport default defineConfig({\n  ...\n  locales: {\n    root: {\n      label: \"English\",\n      lang: \"en-US\",\n      themeConfig: {\n        nav: navbars.en,\n        sidebar: sidebars.en,\n      },\n    },\n    \"pt-br\": {\n      label: \"Brazilian Portuguese\",\n      lang: \"pr-br\",\n      themeConfig: {\n        nav: navbars.pt_br,\n        sidebar: sidebars.pt_br,\n      },\n    },\n    \"zh-hans\": {\n      label: \"简体中文\",\n      lang: \"zh-hans\",\n      themeConfig: {\n        nav: navbars.zh_hans,\n        sidebar: sidebars.zh_hans,\n      },\n    },\n  },\n})\n```\n\n`/pt-BR/` を有効にするには、下記のように、 `docs/pt-BR/` 配下に同じMarkdownファイルのセットを配置する必要があります:\n\n```\ndocs\n├─ README.md\n├─ foo.md\n├─ nested\n│  └─ README.md\n└─ pt-BR\n   ├─ README.md\n   ├─ foo.md\n   └─ nested\n      └─ README.md\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ja-jp/contribute/documentation.html", "title": "ドキュメント & サイト", "description": "これは、ドキュメントおよびサイトのコントリビューションガイドです。", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:36:12", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "language": "ja-jp", "title": "ドキュメント & サイト | asdf", "scrapeId": "0dc69a2d-4c69-4f4b-b9dd-c8febd78caa9", "sourceURL": "https://asdf-vm.com/ja-jp/contribute/documentation.html", "url": "https://asdf-vm.com/ja-jp/contribute/documentation.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you give me some code examples for ドキュメント & サイト in asdf-vm?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**初期セットアップ - Git Clone**:\n\n```yaml\n# clone your fork\ngit clone https://github.com/<GITHUB_USER>/asdf.git\n# or clone asdf\ngit clone https://github.com/asdf-vm/asdf.git\n```\n\nThis snippet shows you how to 初期セットアップ - git clone, which is an important aspect of ドキュメント & サイト.\n\n**初期セットアップ - プラグイン追加**:\n\n```yaml\nasdf plugin add nodejs https://github.com/asdf-vm/asdf-nodejs\n```\n\nThis snippet shows you how to 初期セットアップ - プラグイン追加, which is an important aspect of ドキュメント & サイト.\n\n**初期セットアップ - バージョンインストール**:\n\n```yaml\nasdf install\n```\n\nThis snippet shows you how to 初期セットアップ - バージョンインストール, which is an important aspect of ドキュメント & サイト.\n\n**初期セットアップ - Node.js依存関係インストール**:\n\n```yaml\nnpm install\n```\n\nThis snippet shows you how to 初期セットアップ - node.js依存関係インストール, which is an important aspect of ドキュメント & サイト.\n\n**開発 - ローカル開発サーバ起動**:\n\n```yaml\nnpm run dev\n```\n\nThis snippet shows you how to 開発 - ローカル開発サーバ起動, which is an important aspect of ドキュメント & サイト.\n\n**開発 - コードフォーマット**:\n\n```yaml\nnpm run format\n```\n\nThis snippet shows you how to 開発 - コードフォーマット, which is an important aspect of ドキュメント & サイト.\n\n**I18n - ルート構成ファイル**:\n\n```yaml\n// docs/.vitepress/config.js\nexport default defineConfig({\n  ...\n  locales: {\n    root: {\n      label: \"English\",\n      lang: \"en-US\",\n      themeConfig: {\n        nav: navbars.en,\n        sidebar: sidebars.en,\n      },\n    },\n    \"pt-br\": {\n      label: \"Brazilian Portuguese\",\n      lang: \"pr-br\",\n      themeConfig: {\n        nav: navbars.pt_br,\n        sidebar: sidebars.pt_br,\n      },\n    },\n    \"zh-hans\": {\n      label: \"简体中文\",\n      lang: \"zh-hans\",\n      themeConfig: {\n        nav: navbars.zh_hans,\n        sidebar: sidebars.zh_hans,\n      },\n    },\n  },\n})\n```\n\nThis snippet shows you how to i18n - ルート構成ファイル, which is an important aspect of ドキュメント & サイト.\n\n", "metadata": {"source_url": "https://asdf-vm.com/ja-jp/contribute/documentation.html", "title": "ドキュメント & サイト", "description": "これは、ドキュメントおよびサイトのコントリビューションガイドです。", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:36:12", "type": "code_examples", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "language": "ja-jp", "title": "ドキュメント & サイト | asdf", "scrapeId": "0dc69a2d-4c69-4f4b-b9dd-c8febd78caa9", "sourceURL": "https://asdf-vm.com/ja-jp/contribute/documentation.html", "url": "https://asdf-vm.com/ja-jp/contribute/documentation.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: What are some tips for using ドキュメント & サイト in asdf-vm effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nプルリクエストのタイトルは、Conventional Commit typeを `docs` として、 `docs: <description>` というフォーマットで作成する。\n\n各ロケールのMarkdownコンテンツは、ルート構成ファイル内の `locales` 内のキーと同じ名前のディレクトリ配下に配置する必要がある。\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://asdf-vm.com/ja-jp/contribute/documentation.html", "title": "ドキュメント & サイト", "description": "これは、ドキュメントおよびサイトのコントリビューションガイドです。", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:36:12", "type": "best_practices", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "language": "ja-jp", "title": "ドキュメント & サイト | asdf", "scrapeId": "0dc69a2d-4c69-4f4b-b9dd-c8febd78caa9", "sourceURL": "https://asdf-vm.com/ja-jp/contribute/documentation.html", "url": "https://asdf-vm.com/ja-jp/contribute/documentation.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you explain what Perguntas frequentes is in asdf-vm?\n\nAssistant: Sure, I'd be happy to explain Perguntas frequentes in asdf-vm.\n\n# Perguntas frequentes\n\nAqui estão algumas perguntas comuns sobre `asdf`.Here's a quick rundown of what this is about:\n\n## Suporte WSL1?\n\nWSL1 (Windows Subsystem for Linux 1) não é oficialmente suportado. Alguns aspectos do `asdf` podem não funcionar corretamente. Não temos a intenção de adicionar suporte oficial para WSL1.\n\n## Suporte WSL2?\n\nWSL2 (Subsistema Windows para Linux 2) deve funcionar usando as instruções de configuração e dependência para a distribuição WSL escolhida.\n\nÉ importante ressaltar que o WSL2 _apenas_ deve funcionar corretamente quando o diretório de trabalho atual é uma unidade Unix e não uma unidade Windows vinculada.\n\nPretendemos executar o conjunto de testes no WSL2 quando o suporte ao host runner estiver disponível nas Ações do GitHub; atualmente, esse não parece ser o caso.\n\n## Exectable recém-instalado não está funcionando?\n\n\"Acabei de instalar o `npm -g yarn`, mas não consigo executar o `yarn`. O que da?\"\n\n`asdf` usa shims para gerenciar executáveis. Aqueles instalados por plug-ins têm shims criados automaticamente, enquanto a instalação de executáveis ​​por meio de uma ferramenta gerenciada `asdf` exigirá que você notifique o `asdf` sobre a necessidade de criar shims. Neste caso, para criar um shim para Yarn. Veja a documentação do comando `asdf reshim`.\n\n## Shell não detecta shims recém-instalados?\n\nSe `asdf reshim` não está resolvendo seu problema, então é mais provável devido ao sourcing de `asdf.sh` ou `asdf.fish` _não_ estar no **BOTTOM** de seu arquivo de configuração Shell (`.bash_profile`, `.zshrc`, `config.fish`, etc). Ele precisa ser fornecido **DEPOIS** de você definir seu `$PATH` e **DEPOIS** de ter fornecido seu framework (oh-meu-zsh etc), se houver.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://asdf-vm.com/pt-br/more/faq.html", "title": "Perguntas frequentes", "description": "Aqui estão algumas perguntas comuns sobre `asdf`.", "has_code_examples": false, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:36:30", "type": "overview", "page_metadata": {"description": "Manage multiple runtime versions with a single CLI tool", "language": "pr-br", "generator": "VitePress v1.6.3", "title": "Perguntas frequentes | asdf", "viewport": "width=device-width,initial-scale=1", "scrapeId": "add2583a-af03-42be-b8dc-73e4dceb65c9", "sourceURL": "https://asdf-vm.com/pt-br/more/faq.html", "url": "https://asdf-vm.com/pt-br/more/faq.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I suporte wsl1? in asdf-vm?\n\nAssistant: To suporte wsl1? in asdf-vm, here's what you do:\nWSL1 (Windows Subsystem for Linux 1) não é oficialmente suportado. Alguns aspectos do `asdf` podem não funcionar corretamente. Não temos a intenção de adicionar suporte oficial para WSL1..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/pt-br/more/faq.html", "title": "Perguntas frequentes", "description": "Aqui estão algumas perguntas comuns sobre `asdf`.", "has_code_examples": false, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:36:30", "type": "section_detail", "page_metadata": {"description": "Manage multiple runtime versions with a single CLI tool", "language": "pr-br", "generator": "VitePress v1.6.3", "title": "Perguntas frequentes | asdf", "viewport": "width=device-width,initial-scale=1", "scrapeId": "add2583a-af03-42be-b8dc-73e4dceb65c9", "sourceURL": "https://asdf-vm.com/pt-br/more/faq.html", "url": "https://asdf-vm.com/pt-br/more/faq.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I suporte wsl2? in asdf-vm?\n\nAssistant: To suporte wsl2? in asdf-vm, here's what you do:\nWSL2 (Subsistema Windows para Linux 2) deve funcionar usando as instruções de configuração e dependência para a distribuição WSL escolhida.\n\nÉ importante ressaltar que o WSL2 _apenas_ deve funcionar corretamente quando o diretório de trabalho atual é uma unidade Unix e não uma unidade Windows vinculada.\n\nPretendemos executar o conjunto de testes no WSL2 quando o suporte ao host runner estiver disponível nas Ações do GitHub; atualmente, esse não parece ser o caso..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/pt-br/more/faq.html", "title": "Perguntas frequentes", "description": "Aqui estão algumas perguntas comuns sobre `asdf`.", "has_code_examples": false, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:36:30", "type": "section_detail", "page_metadata": {"description": "Manage multiple runtime versions with a single CLI tool", "language": "pr-br", "generator": "VitePress v1.6.3", "title": "Perguntas frequentes | asdf", "viewport": "width=device-width,initial-scale=1", "scrapeId": "add2583a-af03-42be-b8dc-73e4dceb65c9", "sourceURL": "https://asdf-vm.com/pt-br/more/faq.html", "url": "https://asdf-vm.com/pt-br/more/faq.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I exectable recém-instalado não está funcionando? in asdf-vm?\n\nAssistant: To exectable recém-instalado não está funcionando? in asdf-vm, here's what you do:\n\"Acabei de instalar o `npm -g yarn`, mas não consigo executar o `yarn`. O que da?\"\n\n`asdf` usa shims para gerenciar executáveis. Aqueles instalados por plug-ins têm shims criados automaticamente, enquanto a instalação de executáveis ​​por meio de uma ferramenta gerenciada `asdf` exigirá que você notifique o `asdf` sobre a necessidade de criar shims. Neste caso, para criar um shim para Yarn. Veja a documentação do comando `asdf reshim`..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/pt-br/more/faq.html", "title": "Perguntas frequentes", "description": "Aqui estão algumas perguntas comuns sobre `asdf`.", "has_code_examples": false, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:36:30", "type": "section_detail", "page_metadata": {"description": "Manage multiple runtime versions with a single CLI tool", "language": "pr-br", "generator": "VitePress v1.6.3", "title": "Perguntas frequentes | asdf", "viewport": "width=device-width,initial-scale=1", "scrapeId": "add2583a-af03-42be-b8dc-73e4dceb65c9", "sourceURL": "https://asdf-vm.com/pt-br/more/faq.html", "url": "https://asdf-vm.com/pt-br/more/faq.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I shell não detecta shims recém-instalados? in asdf-vm?\n\nAssistant: To shell não detecta shims recém-instalados? in asdf-vm, here's what you do:\nSe `asdf reshim` não está resolvendo seu problema, então é mais provável devido ao sourcing de `asdf.sh` ou `asdf.fish` _não_ estar no **BOTTOM** de seu arquivo de configuração Shell (`.bash_profile`, `.zshrc`, `config.fish`, etc). Ele precisa ser fornecido **DEPOIS** de você definir seu `$PATH` e **DEPOIS** de ter fornecido seu framework (oh-meu-zsh etc), se houver..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/pt-br/more/faq.html", "title": "Perguntas frequentes", "description": "Aqui estão algumas perguntas comuns sobre `asdf`.", "has_code_examples": false, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:36:30", "type": "section_detail", "page_metadata": {"description": "Manage multiple runtime versions with a single CLI tool", "language": "pr-br", "generator": "VitePress v1.6.3", "title": "Perguntas frequentes | asdf", "viewport": "width=device-width,initial-scale=1", "scrapeId": "add2583a-af03-42be-b8dc-73e4dceb65c9", "sourceURL": "https://asdf-vm.com/pt-br/more/faq.html", "url": "https://asdf-vm.com/pt-br/more/faq.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: What are some tips for using Perguntas frequentes in asdf-vm effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nCertifique-se de que `asdf.sh` ou `asdf.fish` esteja no final do seu arquivo de configuração Shell.\n\nVerifique se o diretório de trabalho atual é uma unidade Unix ao usar WSL2.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://asdf-vm.com/pt-br/more/faq.html", "title": "Perguntas frequentes", "description": "Aqui estão algumas perguntas comuns sobre `asdf`.", "has_code_examples": false, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:36:30", "type": "best_practices", "page_metadata": {"description": "Manage multiple runtime versions with a single CLI tool", "language": "pr-br", "generator": "VitePress v1.6.3", "title": "Perguntas frequentes | asdf", "viewport": "width=device-width,initial-scale=1", "scrapeId": "add2583a-af03-42be-b8dc-73e4dceb65c9", "sourceURL": "https://asdf-vm.com/pt-br/more/faq.html", "url": "https://asdf-vm.com/pt-br/more/faq.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you explain what Getting Started is in asdf-vm?\n\nAssistant: Sure, I'd be happy to explain Getting Started in asdf-vm.\n\n# Getting Started\n\nThis page provides a comprehensive guide on how to install and set up asdf, a version manager for multiple programming languages.Here's a quick rundown of what this is about:\n\n## Getting Started\n\n`asdf` installation involves:\n\n1. Installing dependencies\n2. Downloading `asdf` core\n3. Installing `asdf`\n4. Installing a plugin for each tool/runtime you wish to manage\n5. Installing a version of the tool/runtime\n6. Setting global and project versions via `.tool-versions` config files\n\n## 1. Install Dependencies\n\nasdf primarily requires `git` & `curl`. Here is a _non-exhaustive_ list of commands to run for _your_ package manager (some might automatically install these tools in later steps).\n\n| OS | Package Manager | Command |\n| --- | --- | --- |\n| linux | Aptitude | `apt install curl git` |\n| linux | DNF | `dnf install curl git` |\n| linux | Pacman | `pacman -S curl git` |\n| linux | Zypper | `zypper install curl git` |\n| macOS | Homebrew | `brew install coreutils curl git` |\n| macOS | Spack | `spack install coreutils curl git` |\n\nNote\n\n`sudo` may be required depending on your system configuration.\n\n## 2. Download asdf\n\n### Official Download\n\nshell\n\n```\ngit clone https://github.com/asdf-vm/asdf.git ~/.asdf --branch v0.15.0\n```\n\n### Community Supported Download Methods\n\nWe highly recommend using the official `git` method.\n\n| Method | Command |\n| --- | --- |\n| Homebrew | `brew install asdf` |\n| Pacman | `git clone https://aur.archlinux.org/asdf-vm.git && cd asdf-vm && makepkg -si` or use your preferred [AUR helper](https://wiki.archlinux.org/index.php/AUR_helpers) |\n\n## 3. Install asdf\n\nThere are many different combinations of Shells, OSs & Installation methods all of which affect the configuration here. Expand the selection below that best matches your system.\n\n**macOS users, be sure to read the warning about `path_helper` at the end of this section.**\n\nBash & Git\n\nAdd the following to `~/.bashrc`:\n\nshell\n\n```\n. \"$HOME/.asdf/asdf.sh\"\n```\n\nCompletions must be configured by adding the following to your `.bashrc`:\n\nshell\n\n```\n. \"$HOME/.asdf/completions/asdf.bash\"\n```\n\nBash & Git (macOS)\n\nIf using **macOS Catalina or newer**, the default shell has changed to **ZSH**. Unless changing back to Bash, follow the ZSH instructions.\n\nAdd the following to `~/.bash_profile`:\n\nshell\n\n```\n. \"$HOME/.asdf/asdf.sh\"\n```\n\nCompletions must be configured manually with the following entry in your `.bash_profile`:\n\nshell\n\n```\n. \"$HOME/.asdf/completions/asdf.bash\"\n```\n\nBash & Homebrew\n\nAdd `asdf.sh` to your `~/.bashrc` with:\n\nshell\n\n```\necho -e \"\\n. \\\"$(brew --prefix asdf)/libexec/asdf.sh\\\"\" >> ~/.bashrc\n```\n\nCompletions will need to be [configured as per Homebrew's instructions](https://docs.brew.sh/Shell-Completion#configuring-completions-in-bash) or with the following:\n\nshell\n\n```\necho -e \"\\n. \\\"$(brew --prefix asdf)/etc/bash_completion.d/asdf.bash\\\"\" >> ~/.bashrc\n```\n\nBash & Homebrew (macOS)\n\nIf using **macOS Catalina or newer**, the default shell has changed to **ZSH**. Unless changing back to Bash, follow the ZSH instructions.\n\nAdd `asdf.sh` to your `~/.bash_profile` with:\n\nshell\n\n```\necho -e \"\\n. \\\"$(brew --prefix asdf)/libexec/asdf.sh\\\"\" >> ~/.bash_profile\n```\n\nCompletions will need to be [configured as per Homebrew's instructions](https://docs.brew.sh/Shell-Completion#configuring-completions-in-bash) or with the following:\n\nshell\n\n```\necho -e \"\\n. \\\"$(brew --prefix asdf)/etc/bash_completion.d/asdf.bash\\\"\" >> ~/.bash_profile\n```\n\nBash & Pacman\n\nAdd the following to `~/.bashrc`:\n\nshell\n\n```\n. /opt/asdf-vm/asdf.sh\n```\n\n[`bash-completion`](https://wiki.archlinux.org/title/bash#Common_programs_and_options) needs to be installed for the completions to work.\n\n## Core Installation Complete!\n\nThis completes the installation of the `asdf` core 🎉\n\n`asdf` is only useful once you install a **plugin**, install a **tool** and manage its **versions**. Continue the guide below to learn how to do this.\n\n## 4. Install a Plugin\n\nFor demonstration purposes we will install & set [Node.js](https://nodejs.org/) via the [`asdf-nodejs`](https://github.com/asdf-vm/asdf-nodejs/) plugin.\n\n## Plugin Dependencies\n\nEach plugin has dependencies so we need to check the plugin repo where they should be listed. For `asdf-nodejs` they are:\n\n| OS | Dependency Installation |\n| --- | --- |\n| Debian | `apt-get install dirmngr gpg curl gawk` |\n| CentOS/ Rocky Linux/ AlmaLinux | `yum install gnupg2 curl gawk` |\n| macOS | `brew install gpg gawk` |\n\nWe should install dependencies first as some Plugins have post-install hooks.\n\n## Install the Plugin\n\nshell\n\n```\nasdf plugin add nodejs https://github.com/asdf-vm/asdf-nodejs.git\n```\n\n## 5. Install a Version\n\nNow we have a plugin for Node.js we can install a version of the tool.\n\nWe can see which versions are available with `asdf list all nodejs` or a subset of versions with `asdf list all nodejs 14`.\n\nWe will just install the `latest` available version:\n\nshell\n\n```\nasdf install nodejs latest\n```\n\n## 6. Set a Version\n\n`asdf` performs a version lookup of a tool in all `.tool-versions` files from the current working directory up to the `$HOME` directory. The lookup occurs just-in-time when you execute a tool that `asdf` manages.\n\nWARNING\n\nWithout a version listed for a tool execution of the tool will **error**. `asdf current` will show you the tool & version resolution, or absence of, from your current directory so you can observe which tools will fail to execute.\n\n### Global\n\nGlobal defaults are managed in `$HOME/.tool-versions`. Set a global version with:\n\nshell\n\n```\nasdf global nodejs latest\n```\n\n`$HOME/.tool-versions` will then look like:\n\n```\nnodejs 16.5.0\n```\n\nSome OSs already have tools installed that are managed by the system and not `asdf`, `python` is a common example. You need to tell `asdf` to pass the management back to the system. The [Versions reference section](https://asdf-vm.com/manage/versions.html) will guide you.\n\n### Local\n\nLocal versions are defined in the `$PWD/.tool-versions` file (your current working directory). Usually, this will be the Git repository for a project. When in your desired directory execute:\n\nshell\n\n```\nasdf local nodejs latest\n```\n\n`$PWD/.tool-versions` will then look like:\n\n```\nnodejs 16.5.0\n```\n\n### Using Existing Tool Version Files\n\n`asdf` supports the migration from existing version files from other version managers. Eg: `.ruby-version` for the case of `rbenv`. This is supported on a per-plugin basis.\n\n[`asdf-nodejs`](https://github.com/asdf-vm/asdf-nodejs/) supports this via both `.nvmrc` and `.node-version` files. To enable this, add the following to your `asdf` configuration file `$HOME/.asdfrc`:\n\n```\nlegacy_version_file = yes\n```\n\nSee the [configuration](https://asdf-vm.com/manage/configuration.html) reference page for more config options.\n\n## Guide Complete!\n\nThat completes the Getting Started guide for `asdf` 🎉 You can now manage `nodejs` versions for your project. Follow similar steps for each type of tool in your project!\n\n`asdf` has many more commands to become familiar with, you can see them all by running `asdf --help` or `asdf`. The core of the commands are broken into three categories:\n\n- [core `asdf`](https://asdf-vm.com/manage/core.html)\n- [plugins](https://asdf-vm.com/manage/plugins.html)\n- [versions (of tools)](https://asdf-vm.com/manage/versions.html)\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://asdf-vm.com/guide/getting-started-legacy.html", "title": "Getting Started", "description": "This page provides a comprehensive guide on how to install and set up asdf, a version manager for multiple programming languages.", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 03:37:22", "type": "overview", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "title": "Getting Started | asdf", "language": "en-US", "scrapeId": "6db5a34f-bf0f-4701-967e-d3d65d367094", "sourceURL": "https://asdf-vm.com/guide/getting-started-legacy.html", "url": "https://asdf-vm.com/guide/getting-started-legacy.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I getting started in asdf-vm?\n\nAssistant: To getting started in asdf-vm, here's what you do:\n`asdf` installation involves:\n\n1. Installing dependencies\n2. Downloading `asdf` core\n3. Installing `asdf`\n4. Installing a plugin for each tool/runtime you wish to manage\n5. Installing a version of the tool/runtime\n6. Setting global and project versions via `.tool-versions` config files.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/guide/getting-started-legacy.html", "title": "Getting Started", "description": "This page provides a comprehensive guide on how to install and set up asdf, a version manager for multiple programming languages.", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 03:37:22", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "title": "Getting Started | asdf", "language": "en-US", "scrapeId": "6db5a34f-bf0f-4701-967e-d3d65d367094", "sourceURL": "https://asdf-vm.com/guide/getting-started-legacy.html", "url": "https://asdf-vm.com/guide/getting-started-legacy.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 1. install dependencies in asdf-vm?\n\nAssistant: To 1. install dependencies in asdf-vm, here's what you do:\nasdf primarily requires `git` & `curl`. Here is a _non-exhaustive_ list of commands to run for _your_ package manager (some might automatically install these tools in later steps).\n\n| OS | Package Manager | Command |\n| --- | --- | --- |\n| linux | Aptitude | `apt install curl git` |\n| linux | DNF | `dnf install curl git` |\n| linux | Pacman | `pacman -S curl git` |\n| linux | Zypper | `zypper install curl git` |\n| macOS | Homebrew | `brew install coreutils curl git` |\n| macOS | Spack | `spack install coreutils curl git` |\n\nNote\n\n`sudo` may be required depending on your system configuration..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/guide/getting-started-legacy.html", "title": "Getting Started", "description": "This page provides a comprehensive guide on how to install and set up asdf, a version manager for multiple programming languages.", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 03:37:22", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "title": "Getting Started | asdf", "language": "en-US", "scrapeId": "6db5a34f-bf0f-4701-967e-d3d65d367094", "sourceURL": "https://asdf-vm.com/guide/getting-started-legacy.html", "url": "https://asdf-vm.com/guide/getting-started-legacy.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 2. download asdf in asdf-vm?\n\nAssistant: To 2. download asdf in asdf-vm, here's what you do:\n### Official Download\n\nshell\n\n```\ngit clone https://github.com/asdf-vm/asdf.git ~/.asdf --branch v0.15.0\n```\n\n### Community Supported Download Methods\n\nWe highly recommend using the official `git` method.\n\n| Method | Command |\n| --- | --- |\n| Homebrew | `brew install asdf` |\n| Pacman | `git clone https://aur.archlinux.org/asdf-vm.git && cd asdf-vm && makepkg -si` or use your preferred [AUR helper](https://wiki.archlinux.org/index.php/AUR_helpers) |.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/guide/getting-started-legacy.html", "title": "Getting Started", "description": "This page provides a comprehensive guide on how to install and set up asdf, a version manager for multiple programming languages.", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 03:37:22", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "title": "Getting Started | asdf", "language": "en-US", "scrapeId": "6db5a34f-bf0f-4701-967e-d3d65d367094", "sourceURL": "https://asdf-vm.com/guide/getting-started-legacy.html", "url": "https://asdf-vm.com/guide/getting-started-legacy.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 3. install asdf in asdf-vm?\n\nAssistant: To 3. install asdf in asdf-vm, here's what you do:\nThere are many different combinations of Shells, OSs & Installation methods all of which affect the configuration here. Expand the selection below that best matches your system.\n\n**macOS users, be sure to read the warning about `path_helper` at the end of this section.**\n\nBash & Git\n\nAdd the following to `~/.bashrc`:\n\nshell\n\n```\n. \"$HOME/.asdf/asdf.sh\"\n```\n\nCompletions must be configured by adding the following to your `.bashrc`:\n\nshell\n\n```\n. \"$HOME/.asdf/completions/asdf.bash\"\n```\n\nBash & Git (macOS)\n\nIf using **macOS Catalina or newer**, the default shell has changed to **ZSH**. Unless changing back to Bash, follow the ZSH instructions.\n\nAdd the following to `~/.bash_profile`:\n\nshell\n\n```\n. \"$HOME/.asdf/asdf.sh\"\n```\n\nCompletions must be configured manually with the following entry in your `.bash_profile`:\n\nshell\n\n```\n. \"$HOME/.asdf/completions/asdf.bash\"\n```\n\nBash & Homebrew\n\nAdd `asdf.sh` to your `~/.bashrc` with:\n\nshell\n\n```\necho -e \"\\n. \\\"$(brew --prefix asdf)/libexec/asdf.sh\\\"\" >> ~/.bashrc\n```\n\nCompletions will need to be [configured as per Homebrew's instructions](https://docs.brew.sh/Shell-Completion#configuring-completions-in-bash) or with the following:\n\nshell\n\n```\necho -e \"\\n. \\\"$(brew --prefix asdf)/etc/bash_completion.d/asdf.bash\\\"\" >> ~/.bashrc\n```\n\nBash & Homebrew (macOS)\n\nIf using **macOS Catalina or newer**, the default shell has changed to **ZSH**. Unless changing back to Bash, follow the ZSH instructions.\n\nAdd `asdf.sh` to your `~/.bash_profile` with:\n\nshell\n\n```\necho -e \"\\n. \\\"$(brew --prefix asdf)/libexec/asdf.sh\\\"\" >> ~/.bash_profile\n```\n\nCompletions will need to be [configured as per Homebrew's instructions](https://docs.brew.sh/Shell-Completion#configuring-completions-in-bash) or with the following:\n\nshell\n\n```\necho -e \"\\n. \\\"$(brew --prefix asdf)/etc/bash_completion.d/asdf.bash\\\"\" >> ~/.bash_profile\n```\n\nBash & Pacman\n\nAdd the following to `~/.bashrc`:\n\nshell\n\n```\n. /opt/asdf-vm/asdf.sh\n```\n\n[`bash-completion`](https://wiki.archlinux.org/title/bash#Common_programs_and_options) needs to be installed for the completions to work..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/guide/getting-started-legacy.html", "title": "Getting Started", "description": "This page provides a comprehensive guide on how to install and set up asdf, a version manager for multiple programming languages.", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 03:37:22", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "title": "Getting Started | asdf", "language": "en-US", "scrapeId": "6db5a34f-bf0f-4701-967e-d3d65d367094", "sourceURL": "https://asdf-vm.com/guide/getting-started-legacy.html", "url": "https://asdf-vm.com/guide/getting-started-legacy.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I core installation complete! in asdf-vm?\n\nAssistant: To core installation complete! in asdf-vm, here's what you do:\nThis completes the installation of the `asdf` core 🎉\n\n`asdf` is only useful once you install a **plugin**, install a **tool** and manage its **versions**. Continue the guide below to learn how to do this..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/guide/getting-started-legacy.html", "title": "Getting Started", "description": "This page provides a comprehensive guide on how to install and set up asdf, a version manager for multiple programming languages.", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 03:37:22", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "title": "Getting Started | asdf", "language": "en-US", "scrapeId": "6db5a34f-bf0f-4701-967e-d3d65d367094", "sourceURL": "https://asdf-vm.com/guide/getting-started-legacy.html", "url": "https://asdf-vm.com/guide/getting-started-legacy.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 4. install a plugin in asdf-vm?\n\nAssistant: To 4. install a plugin in asdf-vm, here's what you do:\nFor demonstration purposes we will install & set [Node.js](https://nodejs.org/) via the [`asdf-nodejs`](https://github.com/asdf-vm/asdf-nodejs/) plugin..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/guide/getting-started-legacy.html", "title": "Getting Started", "description": "This page provides a comprehensive guide on how to install and set up asdf, a version manager for multiple programming languages.", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 03:37:22", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "title": "Getting Started | asdf", "language": "en-US", "scrapeId": "6db5a34f-bf0f-4701-967e-d3d65d367094", "sourceURL": "https://asdf-vm.com/guide/getting-started-legacy.html", "url": "https://asdf-vm.com/guide/getting-started-legacy.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I plugin dependencies in asdf-vm?\n\nAssistant: To plugin dependencies in asdf-vm, here's what you do:\nEach plugin has dependencies so we need to check the plugin repo where they should be listed. For `asdf-nodejs` they are:\n\n| OS | Dependency Installation |\n| --- | --- |\n| Debian | `apt-get install dirmngr gpg curl gawk` |\n| CentOS/ Rocky Linux/ AlmaLinux | `yum install gnupg2 curl gawk` |\n| macOS | `brew install gpg gawk` |\n\nWe should install dependencies first as some Plugins have post-install hooks..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/guide/getting-started-legacy.html", "title": "Getting Started", "description": "This page provides a comprehensive guide on how to install and set up asdf, a version manager for multiple programming languages.", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 03:37:22", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "title": "Getting Started | asdf", "language": "en-US", "scrapeId": "6db5a34f-bf0f-4701-967e-d3d65d367094", "sourceURL": "https://asdf-vm.com/guide/getting-started-legacy.html", "url": "https://asdf-vm.com/guide/getting-started-legacy.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I install the plugin in asdf-vm?\n\nAssistant: To install the plugin in asdf-vm, here's what you do:\nshell\n\n```\nasdf plugin add nodejs https://github.com/asdf-vm/asdf-nodejs.git\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/guide/getting-started-legacy.html", "title": "Getting Started", "description": "This page provides a comprehensive guide on how to install and set up asdf, a version manager for multiple programming languages.", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 03:37:22", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "title": "Getting Started | asdf", "language": "en-US", "scrapeId": "6db5a34f-bf0f-4701-967e-d3d65d367094", "sourceURL": "https://asdf-vm.com/guide/getting-started-legacy.html", "url": "https://asdf-vm.com/guide/getting-started-legacy.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 5. install a version in asdf-vm?\n\nAssistant: To 5. install a version in asdf-vm, here's what you do:\nNow we have a plugin for Node.js we can install a version of the tool.\n\nWe can see which versions are available with `asdf list all nodejs` or a subset of versions with `asdf list all nodejs 14`.\n\nWe will just install the `latest` available version:\n\nshell\n\n```\nasdf install nodejs latest\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/guide/getting-started-legacy.html", "title": "Getting Started", "description": "This page provides a comprehensive guide on how to install and set up asdf, a version manager for multiple programming languages.", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 03:37:22", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "title": "Getting Started | asdf", "language": "en-US", "scrapeId": "6db5a34f-bf0f-4701-967e-d3d65d367094", "sourceURL": "https://asdf-vm.com/guide/getting-started-legacy.html", "url": "https://asdf-vm.com/guide/getting-started-legacy.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 6. set a version in asdf-vm?\n\nAssistant: To 6. set a version in asdf-vm, here's what you do:\n`asdf` performs a version lookup of a tool in all `.tool-versions` files from the current working directory up to the `$HOME` directory. The lookup occurs just-in-time when you execute a tool that `asdf` manages.\n\nWARNING\n\nWithout a version listed for a tool execution of the tool will **error**. `asdf current` will show you the tool & version resolution, or absence of, from your current directory so you can observe which tools will fail to execute.\n\n### Global\n\nGlobal defaults are managed in `$HOME/.tool-versions`. Set a global version with:\n\nshell\n\n```\nasdf global nodejs latest\n```\n\n`$HOME/.tool-versions` will then look like:\n\n```\nnodejs 16.5.0\n```\n\nSome OSs already have tools installed that are managed by the system and not `asdf`, `python` is a common example. You need to tell `asdf` to pass the management back to the system. The [Versions reference section](https://asdf-vm.com/manage/versions.html) will guide you.\n\n### Local\n\nLocal versions are defined in the `$PWD/.tool-versions` file (your current working directory). Usually, this will be the Git repository for a project. When in your desired directory execute:\n\nshell\n\n```\nasdf local nodejs latest\n```\n\n`$PWD/.tool-versions` will then look like:\n\n```\nnodejs 16.5.0\n```\n\n### Using Existing Tool Version Files\n\n`asdf` supports the migration from existing version files from other version managers. Eg: `.ruby-version` for the case of `rbenv`. This is supported on a per-plugin basis.\n\n[`asdf-nodejs`](https://github.com/asdf-vm/asdf-nodejs/) supports this via both `.nvmrc` and `.node-version` files. To enable this, add the following to your `asdf` configuration file `$HOME/.asdfrc`:\n\n```\nlegacy_version_file = yes\n```\n\nSee the [configuration](https://asdf-vm.com/manage/configuration.html) reference page for more config options..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/guide/getting-started-legacy.html", "title": "Getting Started", "description": "This page provides a comprehensive guide on how to install and set up asdf, a version manager for multiple programming languages.", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 03:37:22", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "title": "Getting Started | asdf", "language": "en-US", "scrapeId": "6db5a34f-bf0f-4701-967e-d3d65d367094", "sourceURL": "https://asdf-vm.com/guide/getting-started-legacy.html", "url": "https://asdf-vm.com/guide/getting-started-legacy.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I guide complete! in asdf-vm?\n\nAssistant: To guide complete! in asdf-vm, here's what you do:\nThat completes the Getting Started guide for `asdf` 🎉 You can now manage `nodejs` versions for your project. Follow similar steps for each type of tool in your project!\n\n`asdf` has many more commands to become familiar with, you can see them all by running `asdf --help` or `asdf`. The core of the commands are broken into three categories:\n\n- [core `asdf`](https://asdf-vm.com/manage/core.html)\n- [plugins](https://asdf-vm.com/manage/plugins.html)\n- [versions (of tools)](https://asdf-vm.com/manage/versions.html).\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/guide/getting-started-legacy.html", "title": "Getting Started", "description": "This page provides a comprehensive guide on how to install and set up asdf, a version manager for multiple programming languages.", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 03:37:22", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "title": "Getting Started | asdf", "language": "en-US", "scrapeId": "6db5a34f-bf0f-4701-967e-d3d65d367094", "sourceURL": "https://asdf-vm.com/guide/getting-started-legacy.html", "url": "https://asdf-vm.com/guide/getting-started-legacy.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you give me some code examples for Getting Started in asdf-vm?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Official Download**:\n\n```yaml\ngit clone https://github.com/asdf-vm/asdf.git ~/.asdf --branch v0.15.0\n```\n\nThis snippet shows you how to official download, which is an important aspect of getting started.\n\n**Install the Plugin**:\n\n```yaml\nasdf plugin add nodejs https://github.com/asdf-vm/asdf-nodejs.git\n```\n\nThis snippet shows you how to install the plugin, which is an important aspect of getting started.\n\n**Install a Version**:\n\n```yaml\nasdf install nodejs latest\n```\n\nThis snippet shows you how to install a version, which is an important aspect of getting started.\n\n**Set a Global Version**:\n\n```yaml\nasdf global nodejs latest\n```\n\nThis snippet shows you how to set a global version, which is an important aspect of getting started.\n\n**Set a Local Version**:\n\n```yaml\nasdf local nodejs latest\n```\n\nThis snippet shows you how to set a local version, which is an important aspect of getting started.\n\n**POSIX Shell & Git**:\n\n```yaml\nexport ASDF_DIR=\"$HOME/.asdf\"\n. \"$HOME/.asdf/asdf.sh\"\n```\n\nThis snippet shows you how to posix shell & git, which is an important aspect of getting started.\n\n", "metadata": {"source_url": "https://asdf-vm.com/guide/getting-started-legacy.html", "title": "Getting Started", "description": "This page provides a comprehensive guide on how to install and set up asdf, a version manager for multiple programming languages.", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 03:37:22", "type": "code_examples", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "title": "Getting Started | asdf", "language": "en-US", "scrapeId": "6db5a34f-bf0f-4701-967e-d3d65d367094", "sourceURL": "https://asdf-vm.com/guide/getting-started-legacy.html", "url": "https://asdf-vm.com/guide/getting-started-legacy.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: What are some tips for using Getting Started in asdf-vm effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\n`sudo` may be required depending on your system configuration.\n\nOn macOS, starting a Bash or Zsh shell automatically calls a utility called `path_helper`. `path_helper` can rearrange items in `PATH`, causing inconsistent behavior for tools that require specific ordering. To workaround this, `asdf` on macOS defaults to forcibly adding its `PATH`-entries to the front (taking highest priority). This is controllable with the `ASDF_FORCE_PREPEND` variable.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://asdf-vm.com/guide/getting-started-legacy.html", "title": "Getting Started", "description": "This page provides a comprehensive guide on how to install and set up asdf, a version manager for multiple programming languages.", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 03:37:22", "type": "best_practices", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "title": "Getting Started | asdf", "language": "en-US", "scrapeId": "6db5a34f-bf0f-4701-967e-d3d65d367094", "sourceURL": "https://asdf-vm.com/guide/getting-started-legacy.html", "url": "https://asdf-vm.com/guide/getting-started-legacy.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you explain what Contribuição para asdf is in asdf-vm?\n\nAssistant: Sure, I'd be happy to explain Contribuição para asdf in asdf-vm.\n\n# Contribuição para asdf\n\nGuia de contribuição principal para o projeto asdf.Here's a quick rundown of what this is about:\n\n## Configuração inicial\n\nFork `asdf` no GitHub e/ou Git clone o branch padrão:\n\n```shell\n# clone your fork\ngit clone https://github.com/<GITHUB_USER>/asdf.git\n# or clone asdf\ngit clone https://github.com/asdf-vm/asdf.git\n```\n\nAs ferramentas para o desenvolvimento do núcleo estão em `.tool-versions` deste repositório. Se você deseja gerenciar com o próprio `asdf`, adicione os plugins:\n\n```shell\nasdf plugin add bats https://github.com/timgluz/asdf-bats.git\nasdf plugin add shellcheck https://github.com/luizm/asdf-shellcheck.git\nasdf plugin add shfmt https://github.com/luizm/asdf-shfmt.git\n```\n\nInstale as versões para desenvolver `asdf` com:\n\n```shell\nasdf install\n```\n\n_pode_ ser útil não usar `asdf` para gerenciar as ferramentas durante o desenvolvimento em sua máquina local, pois você pode precisar quebrar funcionalidades que, então, quebrariam suas ferramentas de desenvolvimento. Aqui está a lista bruta de ferramentas:\n\n- [bats-core](https://github.com/bats-core/bats-core): Bash Automated Testing System, para testes unitários de scripts compatíveis com Bash ou POSIX.\n- [shellcheck](https://github.com/koalaman/shellcheck): Ferramenta de análise estática para scripts de shell.\n- [shfmt](https://github.com/mvdan/sh): Um analisador, formatador e interpretador de shell com suporte a bash; inclui shfmt.\n\n## Desenvolvimento\n\nSe você quiser testar suas alterações sem fazer alterações em seu `asdf` instalado, você pode definir a variável `$ASDF_DIR` para o caminho onde você clonou o repositório e anexar temporariamente o diretório `bin` e `shims` do diretório para o seu caminho.\n\nÉ melhor formatar, lint e testar seu código localmente antes de confirmar ou enviar para o controle remoto. Use os seguintes scripts/comandos:\n\n```shell\n# Shellcheck\n./scripts/shellcheck.bash\n\n# Format\n./scripts/shfmt.bash\n\n# Test: all tests\nbats test/\n# Test: for specific command\nbats test/list_commands.bash\n``` \n\nTIP\n\n**Adicione testes!** \\- Os testes são **necessários** para novos recursos e aceleram a revisão de correções de bugs. Por favor, cubra novos caminhos de código antes de criar um Pull Request. Consulte [documentação do bats-core](https://bats-core.readthedocs.io/en/stable/index.html)\n\n## Teste de BATS\n\nÉ **fortemente recomendado** examinar o conjunto de testes existente e a [documentação do bats-core](https://bats-core.readthedocs.io/en/stable/index.html) antes de escrever os testes.\n\nA depuração de BATs pode ser difícil às vezes. Usar a saída TAP com o sinalizador `-t` permitirá que você imprima saídas com o descritor de arquivo especial `>&3` durante a execução do teste, simplificando a depuração. Como um exemplo:\n\n```shell\n# test/some_tests.bats\n\nprintf \"%s\\n\" \"Will not be printed during bats test/some_tests.bats\"\nprintf \"%s\\n\" \"Will be printed during bats -t test/some_tests.bats\" >&3\n```\n\nIsso está documentado em bats-core [Imprimindo no Terminal](https://bats-core.readthedocs.io/en/stable/writing-tests.html#printing-to-the-terminal).\n\n## Pull Requests, Releases e Commits Convencionais\n\nO `asdf` está usando uma ferramenta de lançamento automatizada chamada [Release Please](https://github.com/googleapis/release-please) para aumentar automaticamente a versão [SemVer](https://semver.org/) e gerar a [Changelog](https://github.com/asdf-vm/asdf/blob/master/CHANGELOG.md). Essas informações são determinadas lendo o histórico de confirmação desde a última versão.\n\n[Mensagens de confirmação convencionais](https://www.conventionalcommits.org/) definem o formato do título da solicitação pull que se torna o formato da mensagem de confirmação na ramificação padrão. Isso é aplicado com GitHub Action [`amannn/action-semantic-pull-request`](https://github.com/amannn/action-semantic-pull-request).\n\nO Commit Convencional segue este formato:\n\n```\n<type>[optional scope][optional !]: <description>\n\n<!-- examples -->\nfix: some fix\nfeat: a new feature\ndocs: some documentation update\ndocs(website): some change for the website\nfeat!: feature with breaking change\n```\n\nA lista completa de `<types>` é: `feat`, `fix`, `docs`, `style`, `refactor`, `perf`, `test`, `build`, `ci`, `chore`, `revert`.\n\nO `!` indica uma mudança de ruptura.\n\n`fix`: will create a new SemVer `patch` `feat`: will create a new SemVer `minor` `<type>!`: will create a new SemVer `major`\n\nO título da solicitação pull deve seguir este formato.\n\nTIP\n\nUse o formato de mensagem de confirmação convencional para seu título de solicitação de pull.\n\n## Imagens Docker\n\nOs projetos [asdf-alpine](https://github.com/vic/asdf-alpine) e [asdf-ubuntu](https://github.com/vic/asdf-ubuntu) são um esforço contínuo para fornecer imagens de algumas ferramentas asdf. Você pode usar essas imagens docker como base para seus servidores de desenvolvimento ou para executar seus aplicativos de produção.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://asdf-vm.com/pt-br/contribute/core.html", "title": "Contribuição para asdf", "description": "Guia de contribuição principal para o projeto asdf.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:37:43", "type": "overview", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "generator": "VitePress v1.6.3", "title": "asdf", "language": "pr-br", "description": "Manage multiple runtime versions with a single CLI tool", "scrapeId": "27d2d772-bb1e-4c51-ab91-e13fe8533e44", "sourceURL": "https://asdf-vm.com/pt-br/contribute/core.html", "url": "https://asdf-vm.com/pt-br/contribute/core.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I configuração inicial in asdf-vm?\n\nAssistant: To configuração inicial in asdf-vm, here's what you do:\nFork `asdf` no GitHub e/ou Git clone o branch padrão:\n\n```shell\n# clone your fork\ngit clone https://github.com/<GITHUB_USER>/asdf.git\n# or clone asdf\ngit clone https://github.com/asdf-vm/asdf.git\n```\n\nAs ferramentas para o desenvolvimento do núcleo estão em `.tool-versions` deste repositório. Se você deseja gerenciar com o próprio `asdf`, adicione os plugins:\n\n```shell\nasdf plugin add bats https://github.com/timgluz/asdf-bats.git\nasdf plugin add shellcheck https://github.com/luizm/asdf-shellcheck.git\nasdf plugin add shfmt https://github.com/luizm/asdf-shfmt.git\n```\n\nInstale as versões para desenvolver `asdf` com:\n\n```shell\nasdf install\n```\n\n_pode_ ser útil não usar `asdf` para gerenciar as ferramentas durante o desenvolvimento em sua máquina local, pois você pode precisar quebrar funcionalidades que, então, quebrariam suas ferramentas de desenvolvimento. Aqui está a lista bruta de ferramentas:\n\n- [bats-core](https://github.com/bats-core/bats-core): Bash Automated Testing System, para testes unitários de scripts compatíveis com Bash ou POSIX.\n- [shellcheck](https://github.com/koalaman/shellcheck): Ferramenta de análise estática para scripts de shell.\n- [shfmt](https://github.com/mvdan/sh): Um analisador, formatador e interpretador de shell com suporte a bash; inclui shfmt..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/pt-br/contribute/core.html", "title": "Contribuição para asdf", "description": "Guia de contribuição principal para o projeto asdf.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:37:43", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "generator": "VitePress v1.6.3", "title": "asdf", "language": "pr-br", "description": "Manage multiple runtime versions with a single CLI tool", "scrapeId": "27d2d772-bb1e-4c51-ab91-e13fe8533e44", "sourceURL": "https://asdf-vm.com/pt-br/contribute/core.html", "url": "https://asdf-vm.com/pt-br/contribute/core.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I desenvolvimento in asdf-vm?\n\nAssistant: To desenvolvimento in asdf-vm, here's what you do:\nSe você quiser testar suas alterações sem fazer alterações em seu `asdf` instalado, você pode definir a variável `$ASDF_DIR` para o caminho onde você clonou o repositório e anexar temporariamente o diretório `bin` e `shims` do diretório para o seu caminho.\n\nÉ melhor formatar, lint e testar seu código localmente antes de confirmar ou enviar para o controle remoto. Use os seguintes scripts/comandos:\n\n```shell\n# Shellcheck\n./scripts/shellcheck.bash\n\n# Format\n./scripts/shfmt.bash\n\n# Test: all tests\nbats test/\n# Test: for specific command\nbats test/list_commands.bash\n``` \n\nTIP\n\n**Adicione testes!** \\- Os testes são **necessários** para novos recursos e aceleram a revisão de correções de bugs. Por favor, cubra novos caminhos de código antes de criar um Pull Request. Consulte [documentação do bats-core](https://bats-core.readthedocs.io/en/stable/index.html).\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/pt-br/contribute/core.html", "title": "Contribuição para asdf", "description": "Guia de contribuição principal para o projeto asdf.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:37:43", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "generator": "VitePress v1.6.3", "title": "asdf", "language": "pr-br", "description": "Manage multiple runtime versions with a single CLI tool", "scrapeId": "27d2d772-bb1e-4c51-ab91-e13fe8533e44", "sourceURL": "https://asdf-vm.com/pt-br/contribute/core.html", "url": "https://asdf-vm.com/pt-br/contribute/core.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I teste de bats in asdf-vm?\n\nAssistant: To teste de bats in asdf-vm, here's what you do:\nÉ **fortemente recomendado** examinar o conjunto de testes existente e a [documentação do bats-core](https://bats-core.readthedocs.io/en/stable/index.html) antes de escrever os testes.\n\nA depuração de BATs pode ser difícil às vezes. Usar a saída TAP com o sinalizador `-t` permitirá que você imprima saídas com o descritor de arquivo especial `>&3` durante a execução do teste, simplificando a depuração. Como um exemplo:\n\n```shell\n# test/some_tests.bats\n\nprintf \"%s\\n\" \"Will not be printed during bats test/some_tests.bats\"\nprintf \"%s\\n\" \"Will be printed during bats -t test/some_tests.bats\" >&3\n```\n\nIsso está documentado em bats-core [Imprimindo no Terminal](https://bats-core.readthedocs.io/en/stable/writing-tests.html#printing-to-the-terminal)..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/pt-br/contribute/core.html", "title": "Contribuição para asdf", "description": "Guia de contribuição principal para o projeto asdf.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:37:43", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "generator": "VitePress v1.6.3", "title": "asdf", "language": "pr-br", "description": "Manage multiple runtime versions with a single CLI tool", "scrapeId": "27d2d772-bb1e-4c51-ab91-e13fe8533e44", "sourceURL": "https://asdf-vm.com/pt-br/contribute/core.html", "url": "https://asdf-vm.com/pt-br/contribute/core.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I pull requests, releases e commits convencionais in asdf-vm?\n\nAssistant: To pull requests, releases e commits convencionais in asdf-vm, here's what you do:\nO `asdf` está usando uma ferramenta de lançamento automatizada chamada [Release Please](https://github.com/googleapis/release-please) para aumentar automaticamente a versão [SemVer](https://semver.org/) e gerar a [Changelog](https://github.com/asdf-vm/asdf/blob/master/CHANGELOG.md). Essas informações são determinadas lendo o histórico de confirmação desde a última versão.\n\n[Mensagens de confirmação convencionais](https://www.conventionalcommits.org/) definem o formato do título da solicitação pull que se torna o formato da mensagem de confirmação na ramificação padrão. Isso é aplicado com GitHub Action [`amannn/action-semantic-pull-request`](https://github.com/amannn/action-semantic-pull-request).\n\nO Commit Convencional segue este formato:\n\n```\n<type>[optional scope][optional !]: <description>\n\n<!-- examples -->\nfix: some fix\nfeat: a new feature\ndocs: some documentation update\ndocs(website): some change for the website\nfeat!: feature with breaking change\n```\n\nA lista completa de `<types>` é: `feat`, `fix`, `docs`, `style`, `refactor`, `perf`, `test`, `build`, `ci`, `chore`, `revert`.\n\nO `!` indica uma mudança de ruptura.\n\n`fix`: will create a new SemVer `patch` `feat`: will create a new SemVer `minor` `<type>!`: will create a new SemVer `major`\n\nO título da solicitação pull deve seguir este formato.\n\nTIP\n\nUse o formato de mensagem de confirmação convencional para seu título de solicitação de pull..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/pt-br/contribute/core.html", "title": "Contribuição para asdf", "description": "Guia de contribuição principal para o projeto asdf.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:37:43", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "generator": "VitePress v1.6.3", "title": "asdf", "language": "pr-br", "description": "Manage multiple runtime versions with a single CLI tool", "scrapeId": "27d2d772-bb1e-4c51-ab91-e13fe8533e44", "sourceURL": "https://asdf-vm.com/pt-br/contribute/core.html", "url": "https://asdf-vm.com/pt-br/contribute/core.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I imagens docker in asdf-vm?\n\nAssistant: To imagens docker in asdf-vm, here's what you do:\nOs projetos [asdf-alpine](https://github.com/vic/asdf-alpine) e [asdf-ubuntu](https://github.com/vic/asdf-ubuntu) são um esforço contínuo para fornecer imagens de algumas ferramentas asdf. Você pode usar essas imagens docker como base para seus servidores de desenvolvimento ou para executar seus aplicativos de produção..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/pt-br/contribute/core.html", "title": "Contribuição para asdf", "description": "Guia de contribuição principal para o projeto asdf.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:37:43", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "generator": "VitePress v1.6.3", "title": "asdf", "language": "pr-br", "description": "Manage multiple runtime versions with a single CLI tool", "scrapeId": "27d2d772-bb1e-4c51-ab91-e13fe8533e44", "sourceURL": "https://asdf-vm.com/pt-br/contribute/core.html", "url": "https://asdf-vm.com/pt-br/contribute/core.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you give me some code examples for Contribuição para asdf in asdf-vm?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Configuração inicial - Clonando o repositório**:\n\n```yaml\n# clone your fork\ngit clone https://github.com/<GITHUB_USER>/asdf.git\n# or clone asdf\ngit clone https://github.com/asdf-vm/asdf.git\n```\n\nThis snippet shows you how to configuração inicial - clonando o repositório, which is an important aspect of contribuição para asdf.\n\n**Configuração inicial - Adicionando plugins**:\n\n```yaml\nasdf plugin add bats https://github.com/timgluz/asdf-bats.git\nasdf plugin add shellcheck https://github.com/luizm/asdf-shellcheck.git\nasdf plugin add shfmt https://github.com/luizm/asdf-shfmt.git\n```\n\nThis snippet shows you how to configuração inicial - adicionando plugins, which is an important aspect of contribuição para asdf.\n\n**Configuração inicial - Instalando versões**:\n\n```yaml\nasdf install\n```\n\nThis snippet shows you how to configuração inicial - instalando versões, which is an important aspect of contribuição para asdf.\n\n**Desenvolvimento - Shellcheck**:\n\n```yaml\n# Shellcheck\n./scripts/shellcheck.bash\n```\n\nThis snippet shows you how to desenvolvimento - shellcheck, which is an important aspect of contribuição para asdf.\n\n**Desenvolvimento - Formatando**:\n\n```yaml\n# Format\n./scripts/shfmt.bash\n```\n\nThis snippet shows you how to desenvolvimento - formatando, which is an important aspect of contribuição para asdf.\n\n**Desenvolvimento - Testando todos os testes**:\n\n```yaml\n# Test: all tests\nbats test/\n```\n\nThis snippet shows you how to desenvolvimento - testando todos os testes, which is an important aspect of contribuição para asdf.\n\n", "metadata": {"source_url": "https://asdf-vm.com/pt-br/contribute/core.html", "title": "Contribuição para asdf", "description": "Guia de contribuição principal para o projeto asdf.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:37:43", "type": "code_examples", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "generator": "VitePress v1.6.3", "title": "asdf", "language": "pr-br", "description": "Manage multiple runtime versions with a single CLI tool", "scrapeId": "27d2d772-bb1e-4c51-ab91-e13fe8533e44", "sourceURL": "https://asdf-vm.com/pt-br/contribute/core.html", "url": "https://asdf-vm.com/pt-br/contribute/core.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: What are some tips for using Contribuição para asdf in asdf-vm effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nAdicione testes! - Os testes são necessários para novos recursos e aceleram a revisão de correções de bugs. Por favor, cubra novos caminhos de código antes de criar um Pull Request.\n\nUse o formato de mensagem de confirmação convencional para seu título de solicitação de pull.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://asdf-vm.com/pt-br/contribute/core.html", "title": "Contribuição para asdf", "description": "Guia de contribuição principal para o projeto asdf.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:37:43", "type": "best_practices", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "generator": "VitePress v1.6.3", "title": "asdf", "language": "pr-br", "description": "Manage multiple runtime versions with a single CLI tool", "scrapeId": "27d2d772-bb1e-4c51-ab91-e13fe8533e44", "sourceURL": "https://asdf-vm.com/pt-br/contribute/core.html", "url": "https://asdf-vm.com/pt-br/contribute/core.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you explain what Documentação e guia de contribuição do site is in asdf-vm?\n\nAssistant: Sure, I'd be happy to explain Documentação e guia de contribuição do site in asdf-vm.\n\n# Documentação e guia de contribuição do site\n\nHi, we've recently migrated our docs and added some new pages. If you would like to help translate this page, see the \"Edit this page\" link at the bottom of the page.Here's a quick rundown of what this is about:\n\n## Configuração inicial\n\nFork `asdf` no GitHub e/ou Git clone o branch padrão:\n\n```\n# clone your fork\ngit clone https://github.com/<GITHUB_USER>/asdf.git\n# or clone asdf\ngit clone https://github.com/asdf-vm/asdf.git\n```\n\nAs ferramentas para desenvolvimento de sites Docs são gerenciadas com `asdf` em `docs/.tool-versions`. Adicione os plugins com:\n\n```\nasdf plugin add nodejs https://github.com/asdf-vm/asdf-nodejs\n```\n\nInstale a(s) versão(ões) da ferramenta com:\n\n```\nasdf install\n```\n\n- [Node.js](https://nodejs.org/): tempo de execução JavaScript criado no mecanismo JavaScript V8 do Chrome.\n\nInstale as dependências do Node.js do `docs/package.json`:\n\n```\nnpm install\n```\n\n## Desenvolvimento\n\n[Vuepress (v2)](https://v2.vuepress.vuejs.org/) é o Static Site Generator (SSG) que usamos para construir o site de documentação do asdf. Foi escolhido para substituir [Docsify.js](https://docsify.js.org/), pois gostaríamos de oferecer suporte a um substituto somente HTML quando os usuários não tiverem JavaScript disponível ou ativado. Isso não era possível com o Docsify. Fora isso, o conjunto de recursos é basicamente o mesmo, com foco em escrever arquivos Markdown com configuração mínima.\n\n`package.json` contém os scripts necessários para o desenvolvimento:\n\nPara iniciar o servidor de desenvolvimento local:\n\n```\nnpm run dev\n```\n\nFormate o código antes de confirmar:\n\n```\nnpm run format\n```\n\n## Pull Requests, Releases e Commits Convencionais\n\n`asdf` está usando um pipeline de lançamento automatizado que depende de Commits Convencionais em títulos de PR. Documentação detalhada encontrada no [guia de contribuição principal](https://asdf-vm.com/pt-br/contribute/core.html).\n\nAo criar um PR para alterações na documentação, por favor, faça o título do PR com o tipo de Commit Convencional `docs` no formato `docs: <description>`.\n\n## Vuepress\n\nA configuração do site está contida em alguns arquivos JavaScript com objetos JS usados para representar a configuração. Eles estão:\n\n- `docs/.vuepress/config.js`: o arquivo de configuração raiz do site. Leia a [documentação do Vuepress](https://v2.vuepress.vuejs.org/guide/configuration.html#config-file) para obter as especificações.\n\nPara simplificar a configuração raiz, os objetos JS maiores que representam a configuração _navbar_ e _sidebar_ foram extraídos e separados por sua localidade. Veja os dois em:\n\n- `docs/.vuepress/navbar.js`\n- `docs/.vuepress/sidebar.js`\n\nCom a documentação oficial para essas configurações vivendo na [Referência de tema padrão](https://v2.vuepress.vuejs.org/reference/default-theme/config.html#locale-config).\n\n## I18n\n\nVuepress tem suporte de primeira classe para internacionalização. O root config `docs/.vuepress/config.js` define os locais suportados com sua URL, título no menu suspenso de seleção e referências de configurações navbar/sidebar.\n\nAs configurações da barra de navegação/barra lateral são capturadas nos arquivos de configuração mencionados acima, separadas por localidade e exportadas individualmente.\n\nO conteúdo de markdown para cada localidade deve estar em uma pasta com o mesmo nome das chaves para `locales` na configuração raiz. Isso é:\n\n```\n{\n  ...\n  themeConfig: {\n    locales: {\n      \"/\": {\n        selectLanguageName: \"English (US)\",\n        sidebar: sidebar.en,\n        navbar: navbar.en\n      },\n      \"/pt-BR/\": {\n        selectLanguageName: \"Brazilian Portuguese\",\n        sidebar: sidebar.pt_br,\n        navbar: navbar.pt_br\n      }\n    }\n  }\n}\n```\n\n`/pt-BR/` exigirá o mesmo conjunto de arquivos markdown localizados em `docs/pt-BR/`, assim:\n\n```\ndocs\n├─ README.md\n├─ foo.md\n├─ nested\n│  └─ README.md\n└─ pt-BR\n   ├─ README.md\n   ├─ foo.md\n   └─ nested\n      └─ README.md\n```\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://asdf-vm.com/pt-br/contribute/documentation.html", "title": "Documentação e guia de contribuição do site", "description": "Hi, we've recently migrated our docs and added some new pages. If you would like to help translate this page, see the \"Edit this page\" link at the bottom of the page.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:38:07", "type": "overview", "page_metadata": {"description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "title": "Docs & Site | asdf", "language": "pr-br", "viewport": "width=device-width,initial-scale=1", "scrapeId": "67405089-4f93-4a08-806e-9f83601aaaa1", "sourceURL": "https://asdf-vm.com/pt-br/contribute/documentation.html", "url": "https://asdf-vm.com/pt-br/contribute/documentation.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I configuração inicial in asdf-vm?\n\nAssistant: To configuração inicial in asdf-vm, here's what you do:\nFork `asdf` no GitHub e/ou Git clone o branch padrão:\n\n```\n# clone your fork\ngit clone https://github.com/<GITHUB_USER>/asdf.git\n# or clone asdf\ngit clone https://github.com/asdf-vm/asdf.git\n```\n\nAs ferramentas para desenvolvimento de sites Docs são gerenciadas com `asdf` em `docs/.tool-versions`. Adicione os plugins com:\n\n```\nasdf plugin add nodejs https://github.com/asdf-vm/asdf-nodejs\n```\n\nInstale a(s) versão(ões) da ferramenta com:\n\n```\nasdf install\n```\n\n- [Node.js](https://nodejs.org/): tempo de execução JavaScript criado no mecanismo JavaScript V8 do Chrome.\n\nInstale as dependências do Node.js do `docs/package.json`:\n\n```\nnpm install\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/pt-br/contribute/documentation.html", "title": "Documentação e guia de contribuição do site", "description": "Hi, we've recently migrated our docs and added some new pages. If you would like to help translate this page, see the \"Edit this page\" link at the bottom of the page.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:38:07", "type": "section_detail", "page_metadata": {"description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "title": "Docs & Site | asdf", "language": "pr-br", "viewport": "width=device-width,initial-scale=1", "scrapeId": "67405089-4f93-4a08-806e-9f83601aaaa1", "sourceURL": "https://asdf-vm.com/pt-br/contribute/documentation.html", "url": "https://asdf-vm.com/pt-br/contribute/documentation.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I desenvolvimento in asdf-vm?\n\nAssistant: To desenvolvimento in asdf-vm, here's what you do:\n[Vuepress (v2)](https://v2.vuepress.vuejs.org/) é o Static Site Generator (SSG) que usamos para construir o site de documentação do asdf. Foi escolhido para substituir [Docsify.js](https://docsify.js.org/), pois gostaríamos de oferecer suporte a um substituto somente HTML quando os usuários não tiverem JavaScript disponível ou ativado. Isso não era possível com o Docsify. Fora isso, o conjunto de recursos é basicamente o mesmo, com foco em escrever arquivos Markdown com configuração mínima.\n\n`package.json` contém os scripts necessários para o desenvolvimento:\n\nPara iniciar o servidor de desenvolvimento local:\n\n```\nnpm run dev\n```\n\nFormate o código antes de confirmar:\n\n```\nnpm run format\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/pt-br/contribute/documentation.html", "title": "Documentação e guia de contribuição do site", "description": "Hi, we've recently migrated our docs and added some new pages. If you would like to help translate this page, see the \"Edit this page\" link at the bottom of the page.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:38:07", "type": "section_detail", "page_metadata": {"description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "title": "Docs & Site | asdf", "language": "pr-br", "viewport": "width=device-width,initial-scale=1", "scrapeId": "67405089-4f93-4a08-806e-9f83601aaaa1", "sourceURL": "https://asdf-vm.com/pt-br/contribute/documentation.html", "url": "https://asdf-vm.com/pt-br/contribute/documentation.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I pull requests, releases e commits convencionais in asdf-vm?\n\nAssistant: To pull requests, releases e commits convencionais in asdf-vm, here's what you do:\n`asdf` está usando um pipeline de lançamento automatizado que depende de Commits Convencionais em títulos de PR. Documentação detalhada encontrada no [guia de contribuição principal](https://asdf-vm.com/pt-br/contribute/core.html).\n\nAo criar um PR para alterações na documentação, por favor, faça o título do PR com o tipo de Commit Convencional `docs` no formato `docs: <description>`..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/pt-br/contribute/documentation.html", "title": "Documentação e guia de contribuição do site", "description": "Hi, we've recently migrated our docs and added some new pages. If you would like to help translate this page, see the \"Edit this page\" link at the bottom of the page.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:38:07", "type": "section_detail", "page_metadata": {"description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "title": "Docs & Site | asdf", "language": "pr-br", "viewport": "width=device-width,initial-scale=1", "scrapeId": "67405089-4f93-4a08-806e-9f83601aaaa1", "sourceURL": "https://asdf-vm.com/pt-br/contribute/documentation.html", "url": "https://asdf-vm.com/pt-br/contribute/documentation.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I vuepress in asdf-vm?\n\nAssistant: To vuepress in asdf-vm, here's what you do:\nA configuração do site está contida em alguns arquivos JavaScript com objetos JS usados para representar a configuração. Eles estão:\n\n- `docs/.vuepress/config.js`: o arquivo de configuração raiz do site. Leia a [documentação do Vuepress](https://v2.vuepress.vuejs.org/guide/configuration.html#config-file) para obter as especificações.\n\nPara simplificar a configuração raiz, os objetos JS maiores que representam a configuração _navbar_ e _sidebar_ foram extraídos e separados por sua localidade. Veja os dois em:\n\n- `docs/.vuepress/navbar.js`\n- `docs/.vuepress/sidebar.js`\n\nCom a documentação oficial para essas configurações vivendo na [Referência de tema padrão](https://v2.vuepress.vuejs.org/reference/default-theme/config.html#locale-config)..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/pt-br/contribute/documentation.html", "title": "Documentação e guia de contribuição do site", "description": "Hi, we've recently migrated our docs and added some new pages. If you would like to help translate this page, see the \"Edit this page\" link at the bottom of the page.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:38:07", "type": "section_detail", "page_metadata": {"description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "title": "Docs & Site | asdf", "language": "pr-br", "viewport": "width=device-width,initial-scale=1", "scrapeId": "67405089-4f93-4a08-806e-9f83601aaaa1", "sourceURL": "https://asdf-vm.com/pt-br/contribute/documentation.html", "url": "https://asdf-vm.com/pt-br/contribute/documentation.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I i18n in asdf-vm?\n\nAssistant: To i18n in asdf-vm, here's what you do:\nVuepress tem suporte de primeira classe para internacionalização. O root config `docs/.vuepress/config.js` define os locais suportados com sua URL, título no menu suspenso de seleção e referências de configurações navbar/sidebar.\n\nAs configurações da barra de navegação/barra lateral são capturadas nos arquivos de configuração mencionados acima, separadas por localidade e exportadas individualmente.\n\nO conteúdo de markdown para cada localidade deve estar em uma pasta com o mesmo nome das chaves para `locales` na configuração raiz. Isso é:\n\n```\n{\n  ...\n  themeConfig: {\n    locales: {\n      \"/\": {\n        selectLanguageName: \"English (US)\",\n        sidebar: sidebar.en,\n        navbar: navbar.en\n      },\n      \"/pt-BR/\": {\n        selectLanguageName: \"Brazilian Portuguese\",\n        sidebar: sidebar.pt_br,\n        navbar: navbar.pt_br\n      }\n    }\n  }\n}\n```\n\n`/pt-BR/` exigirá o mesmo conjunto de arquivos markdown localizados em `docs/pt-BR/`, assim:\n\n```\ndocs\n├─ README.md\n├─ foo.md\n├─ nested\n│  └─ README.md\n└─ pt-BR\n   ├─ README.md\n   ├─ foo.md\n   └─ nested\n      └─ README.md\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/pt-br/contribute/documentation.html", "title": "Documentação e guia de contribuição do site", "description": "Hi, we've recently migrated our docs and added some new pages. If you would like to help translate this page, see the \"Edit this page\" link at the bottom of the page.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:38:07", "type": "section_detail", "page_metadata": {"description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "title": "Docs & Site | asdf", "language": "pr-br", "viewport": "width=device-width,initial-scale=1", "scrapeId": "67405089-4f93-4a08-806e-9f83601aaaa1", "sourceURL": "https://asdf-vm.com/pt-br/contribute/documentation.html", "url": "https://asdf-vm.com/pt-br/contribute/documentation.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you give me some code examples for Documentação e guia de contribuição do site in asdf-vm?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Clone your fork**:\n\n```yaml\n# clone your fork\ngit clone https://github.com/<GITHUB_USER>/asdf.git\n# or clone asdf\ngit clone https://github.com/asdf-vm/asdf.git\n```\n\nThis snippet shows you how to clone your fork, which is an important aspect of documentação e guia de contribuição do site.\n\n**Add Node.js plugin**:\n\n```yaml\nasdf plugin add nodejs https://github.com/asdf-vm/asdf-nodejs\n```\n\nThis snippet shows you how to add node.js plugin, which is an important aspect of documentação e guia de contribuição do site.\n\n**Install tool versions**:\n\n```yaml\nasdf install\n```\n\nThis snippet shows you how to install tool versions, which is an important aspect of documentação e guia de contribuição do site.\n\n**Install Node.js dependencies**:\n\n```yaml\nnpm install\n```\n\nThis snippet shows you how to install node.js dependencies, which is an important aspect of documentação e guia de contribuição do site.\n\n**Start local development server**:\n\n```yaml\nnpm run dev\n```\n\nThis snippet shows you how to start local development server, which is an important aspect of documentação e guia de contribuição do site.\n\n**Format code before commit**:\n\n```yaml\nnpm run format\n```\n\nThis snippet shows you how to format code before commit, which is an important aspect of documentação e guia de contribuição do site.\n\n", "metadata": {"source_url": "https://asdf-vm.com/pt-br/contribute/documentation.html", "title": "Documentação e guia de contribuição do site", "description": "Hi, we've recently migrated our docs and added some new pages. If you would like to help translate this page, see the \"Edit this page\" link at the bottom of the page.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:38:07", "type": "code_examples", "page_metadata": {"description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "title": "Docs & Site | asdf", "language": "pr-br", "viewport": "width=device-width,initial-scale=1", "scrapeId": "67405089-4f93-4a08-806e-9f83601aaaa1", "sourceURL": "https://asdf-vm.com/pt-br/contribute/documentation.html", "url": "https://asdf-vm.com/pt-br/contribute/documentation.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: What are some tips for using Documentação e guia de contribuição do site in asdf-vm effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nAo criar um PR para alterações na documentação, por favor, faça o título do PR com o tipo de Commit Convencional `docs` no formato `docs: <description>`.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://asdf-vm.com/pt-br/contribute/documentation.html", "title": "Documentação e guia de contribuição do site", "description": "Hi, we've recently migrated our docs and added some new pages. If you would like to help translate this page, see the \"Edit this page\" link at the bottom of the page.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:38:07", "type": "best_practices", "page_metadata": {"description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "title": "Docs & Site | asdf", "language": "pr-br", "viewport": "width=device-width,initial-scale=1", "scrapeId": "67405089-4f93-4a08-806e-9f83601aaaa1", "sourceURL": "https://asdf-vm.com/pt-br/contribute/documentation.html", "url": "https://asdf-vm.com/pt-br/contribute/documentation.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you explain what バージョン is in asdf-vm?\n\nAssistant: Sure, I'd be happy to explain バージョン in asdf-vm.\n\n# バージョン\n\nこのページでは、asdfのバージョン管理に関するコマンドとその使用方法について説明します。Here's a quick rundown of what this is about:\n\n## バージョンのインストール\n\nshell\n\n```\nasdf install <name> <version>\n# asdf install erlang 17.3\n```\n\nプラグインが、ソースコードからのダウンロード・コンパイルをサポートしている場合、 `ref:foo` の形式( `foo` は特定のブランチ、タグ、またはコミット)でバージョンを指定できます。アンインストールするときも、同じ名前とバージョンを指定する必要があります。\n\n## 最新安定バージョンのインストール\n\nshell\n\n```\nasdf install <name> latest\n# asdf install erlang latest\n```\n\n下記のように、特定のプレフィックスでの最新安定バージョンをインストールすることもできます。\n\nshell\n\n```\nasdf install <name> latest:<version>\n# asdf install erlang latest:17\n```\n\n## インストール済みバージョン一覧\n\nshell\n\n```\nasdf list <name>\n# asdf list erlang\n```\n\n下記のように、特定のプレフィックスでのバージョンでフィルタすることもできます。\n\nshell\n\n```\nasdf list <name> <version>\n# asdf list erlang 17\n```\n\n## インストール可能な全バージョン一覧\n\nshell\n\n```\nasdf list all <name>\n# asdf list all erlang\n```\n\n下記のように、特定のプレフィックスでのバージョンでフィルタすることもできます。\n\nshell\n\n```\nasdf list all <name> <version>\n# asdf list all erlang 17\n```\n\n## 最新安定バージョンの表示\n\nshell\n\n```\nasdf latest <name>\n# asdf latest erlang\n```\n\n下記のように、特定のプレフィックスでの最新安定バージョンで表示することもできます。\n\nshell\n\n```\nasdf latest <name> <version>\n# asdf latest erlang 17\n```\n\n## バージョンのセット\n\n#### `.tool-versions` ファイルで管理する\n\nshell\n\n```\nasdf set [flags] <name> <version> [<version>...]\n# asdf set elixir 1.2.4 # set in current dir\n# asdf set -u elixir 1.2.4 # set in .tool-versions file in home directory\n# asdf set -p elixir 1.2.4 # set in existing .tool-versions file in a parent dir\n\nasdf set <name> latest[:<version>]\n# asdf set elixir latest\n```\n\n`asdf set` はカレントディレクトリの `.tool-versions` ファイルにバージョンを書き込みます。これは単純に利便性のために存在します。 `echo \"<tool> <version>\" > .tool-versions` を実行するようなものと考えてください。\n\n`u` または `--home` フラグをつけて `asdf set` を実行すると、 `$HOME` ディレクトリの `.tool-versions` ファイルにバージョンを書き込みます。ファイルが存在しない場合は作成されます。\n\n`p` または `--parent` フラグをつけて `asdf set` を実行すると、カレントディレクトリから親ディレクトリを探索し、最初に見つかった `.tool-versions` ファイルにバージョンを書き込みます。\n\n#### 環境変数で管理する\n\nバージョンを決定するときに、 `ASDF_${TOOL}_VERSION` というパターンの環境変数を探します。バージョンの形式は `.tool-versions` ファイルでサポートされているものと同じです。設定されている場合、この環境変数の値は `.tool-versions` ファイルでのバージョン指定よりも優先されます。たとえば:\n\nshell\n\n```\nexport ASDF_ELIXIR_VERSION=1.18.1\n```\n\nこれは現在のシェルセッションではElixir `1.18.1` を使うようasdfに指示します。\n\nWARNING\n\nこれは環境変数なので、設定されたセッションでのみ有効になります。 実行中の他のセッションでは、 `.tool-versions` ファイルに設定されているバージョンを引き続き使用します。\n\n`.tool-versions` ファイルについて詳しくは、 [構成設定のリファレンス](https://asdf-vm.com/ja-jp/manage/configuration.html) をご覧ください。\n\n下記の例では、バージョン `1.4.0` のElixirプロジェクトに対して、テストを実行させています。\n\nshell\n\n```\nASDF_ELIXIR_VERSION=1.4.0 mix test\n```\n\n## システムバージョンへの委任\n\nasdfで管理されているバージョンではなく、 `<name>` で指定されたツールのシステムバージョンを使用するには、バージョンとして `system` を指定します。\n\n[バージョンのセット](https://asdf-vm.com/ja-jp/manage/versions.html#%E3%83%90%E3%83%BC%E3%82%B8%E3%83%A7%E3%83%B3%E3%81%AE%E3%82%BB%E3%83%83%E3%83%88) と同様に、 `asdf set` または環境変数で `system` をセットしてください。\n\nshell\n\n```\nasdf set <name> system\n# asdf set python system\n```\n\n## カレントバージョンの表示\n\nshell\n\n```\nasdf current\n# asdf current\n# erlang          17.3          /Users/kim/.tool-versions\n# nodejs          6.11.5        /Users/kim/cool-node-project/.tool-versions\n\nasdf current <name>\n# asdf current erlang\n# erlang          17.3          /Users/kim/.tool-versions\n```\n\n## バージョンのアンインストール\n\nshell\n\n```\nasdf uninstall <name> <version>\n# asdf uninstall erlang 17.3\n```\n\n## Shims\n\nasdfがパッケージをインストールすると、そのパッケージに含まれるすべての実行プログラムのShimが `$ASDF_DATA_DIR/shims` ディレクトリ(デフォルトは `~/.asdf/shims`)に作成されます。このディレクトリが( `asdf.sh` や `asdf.fish` などによって) `$PATH` に設定されることで、インストールされているプログラムが当該環境で利用できるようになります。\n\nShim自体は非常に単純なラッパーであり、 `asdf exec` というヘルパープログラムに、プラグイン名と、Shimがラップしているインストール済みパッケージの実行ファイルのパスを渡して、 `exec` します。\n\n`asdf exec` ヘルパーは、使用するパッケージのバージョン( `.tool-versions` ファイルで指定されたもの、または環境変数で指定されたもの)、パッケージのインストールディレクトリにある実行ファイルの完全パス(プラグインの `exec-path` コールバックで操作可能)、および実行環境(プラグインの `exec-env` スクリプトで提供)を決定し、実行します。\n\n備考\n\n本システムは `exec` 呼び出しを使用するため、シェルによってsourceされるパッケージ内のスクリプトは、Shimラッパーを経由させずに直接アクセスする必要があります。 `asdf` で用意されている `which` および `where` コマンドは、下記のように、インストールされたパッケージへのパスを返すため、この状況を解決するのに役立ちます:\n\nshell\n\n```\n# returns path to main executable in current version\nsource $(asdf which ${PLUGIN})/../script.sh\n\n# returns path to the package installation directory\nsource $(asdf where ${PLUGIN})/bin/script.sh\n```\n\n## asdfのShimのバイパス\n\n何らかの理由でasdfのShimをバイパスしたい場合や、プロジェクトのディレクトリに移動した際に自動的に環境変数を設定したい場合は、 [asdf-direnv](https://github.com/asdf-community/asdf-direnv) プラグインが役に立ちます。詳細はREADMEをご確認ください。\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://asdf-vm.com/ja-jp/manage/versions.html", "title": "バージョン", "description": "このページでは、asdfのバージョン管理に関するコマンドとその使用方法について説明します。", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 03:38:55", "type": "overview", "page_metadata": {"language": "ja-jp", "viewport": "width=device-width,initial-scale=1", "generator": "VitePress v1.6.3", "description": "Manage multiple runtime versions with a single CLI tool", "title": "バージョン | asdf", "scrapeId": "bc7801e2-d19c-432a-b071-a1318230ef92", "sourceURL": "https://asdf-vm.com/ja-jp/manage/versions.html", "url": "https://asdf-vm.com/ja-jp/manage/versions.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I バージョンのインストール in asdf-vm?\n\nAssistant: To バージョンのインストール in asdf-vm, here's what you do:\nshell\n\n```\nasdf install <name> <version>\n# asdf install erlang 17.3\n```\n\nプラグインが、ソースコードからのダウンロード・コンパイルをサポートしている場合、 `ref:foo` の形式( `foo` は特定のブランチ、タグ、またはコミット)でバージョンを指定できます。アンインストールするときも、同じ名前とバージョンを指定する必要があります。.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ja-jp/manage/versions.html", "title": "バージョン", "description": "このページでは、asdfのバージョン管理に関するコマンドとその使用方法について説明します。", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 03:38:55", "type": "section_detail", "page_metadata": {"language": "ja-jp", "viewport": "width=device-width,initial-scale=1", "generator": "VitePress v1.6.3", "description": "Manage multiple runtime versions with a single CLI tool", "title": "バージョン | asdf", "scrapeId": "bc7801e2-d19c-432a-b071-a1318230ef92", "sourceURL": "https://asdf-vm.com/ja-jp/manage/versions.html", "url": "https://asdf-vm.com/ja-jp/manage/versions.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 最新安定バージョンのインストール in asdf-vm?\n\nAssistant: To 最新安定バージョンのインストール in asdf-vm, here's what you do:\nshell\n\n```\nasdf install <name> latest\n# asdf install erlang latest\n```\n\n下記のように、特定のプレフィックスでの最新安定バージョンをインストールすることもできます。\n\nshell\n\n```\nasdf install <name> latest:<version>\n# asdf install erlang latest:17\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ja-jp/manage/versions.html", "title": "バージョン", "description": "このページでは、asdfのバージョン管理に関するコマンドとその使用方法について説明します。", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 03:38:55", "type": "section_detail", "page_metadata": {"language": "ja-jp", "viewport": "width=device-width,initial-scale=1", "generator": "VitePress v1.6.3", "description": "Manage multiple runtime versions with a single CLI tool", "title": "バージョン | asdf", "scrapeId": "bc7801e2-d19c-432a-b071-a1318230ef92", "sourceURL": "https://asdf-vm.com/ja-jp/manage/versions.html", "url": "https://asdf-vm.com/ja-jp/manage/versions.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I インストール済みバージョン一覧 in asdf-vm?\n\nAssistant: To インストール済みバージョン一覧 in asdf-vm, here's what you do:\nshell\n\n```\nasdf list <name>\n# asdf list erlang\n```\n\n下記のように、特定のプレフィックスでのバージョンでフィルタすることもできます。\n\nshell\n\n```\nasdf list <name> <version>\n# asdf list erlang 17\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ja-jp/manage/versions.html", "title": "バージョン", "description": "このページでは、asdfのバージョン管理に関するコマンドとその使用方法について説明します。", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 03:38:55", "type": "section_detail", "page_metadata": {"language": "ja-jp", "viewport": "width=device-width,initial-scale=1", "generator": "VitePress v1.6.3", "description": "Manage multiple runtime versions with a single CLI tool", "title": "バージョン | asdf", "scrapeId": "bc7801e2-d19c-432a-b071-a1318230ef92", "sourceURL": "https://asdf-vm.com/ja-jp/manage/versions.html", "url": "https://asdf-vm.com/ja-jp/manage/versions.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I インストール可能な全バージョン一覧 in asdf-vm?\n\nAssistant: To インストール可能な全バージョン一覧 in asdf-vm, here's what you do:\nshell\n\n```\nasdf list all <name>\n# asdf list all erlang\n```\n\n下記のように、特定のプレフィックスでのバージョンでフィルタすることもできます。\n\nshell\n\n```\nasdf list all <name> <version>\n# asdf list all erlang 17\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ja-jp/manage/versions.html", "title": "バージョン", "description": "このページでは、asdfのバージョン管理に関するコマンドとその使用方法について説明します。", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 03:38:55", "type": "section_detail", "page_metadata": {"language": "ja-jp", "viewport": "width=device-width,initial-scale=1", "generator": "VitePress v1.6.3", "description": "Manage multiple runtime versions with a single CLI tool", "title": "バージョン | asdf", "scrapeId": "bc7801e2-d19c-432a-b071-a1318230ef92", "sourceURL": "https://asdf-vm.com/ja-jp/manage/versions.html", "url": "https://asdf-vm.com/ja-jp/manage/versions.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 最新安定バージョンの表示 in asdf-vm?\n\nAssistant: To 最新安定バージョンの表示 in asdf-vm, here's what you do:\nshell\n\n```\nasdf latest <name>\n# asdf latest erlang\n```\n\n下記のように、特定のプレフィックスでの最新安定バージョンで表示することもできます。\n\nshell\n\n```\nasdf latest <name> <version>\n# asdf latest erlang 17\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ja-jp/manage/versions.html", "title": "バージョン", "description": "このページでは、asdfのバージョン管理に関するコマンドとその使用方法について説明します。", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 03:38:55", "type": "section_detail", "page_metadata": {"language": "ja-jp", "viewport": "width=device-width,initial-scale=1", "generator": "VitePress v1.6.3", "description": "Manage multiple runtime versions with a single CLI tool", "title": "バージョン | asdf", "scrapeId": "bc7801e2-d19c-432a-b071-a1318230ef92", "sourceURL": "https://asdf-vm.com/ja-jp/manage/versions.html", "url": "https://asdf-vm.com/ja-jp/manage/versions.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I バージョンのセット in asdf-vm?\n\nAssistant: To バージョンのセット in asdf-vm, here's what you do:\n#### `.tool-versions` ファイルで管理する\n\nshell\n\n```\nasdf set [flags] <name> <version> [<version>...]\n# asdf set elixir 1.2.4 # set in current dir\n# asdf set -u elixir 1.2.4 # set in .tool-versions file in home directory\n# asdf set -p elixir 1.2.4 # set in existing .tool-versions file in a parent dir\n\nasdf set <name> latest[:<version>]\n# asdf set elixir latest\n```\n\n`asdf set` はカレントディレクトリの `.tool-versions` ファイルにバージョンを書き込みます。これは単純に利便性のために存在します。 `echo \"<tool> <version>\" > .tool-versions` を実行するようなものと考えてください。\n\n`u` または `--home` フラグをつけて `asdf set` を実行すると、 `$HOME` ディレクトリの `.tool-versions` ファイルにバージョンを書き込みます。ファイルが存在しない場合は作成されます。\n\n`p` または `--parent` フラグをつけて `asdf set` を実行すると、カレントディレクトリから親ディレクトリを探索し、最初に見つかった `.tool-versions` ファイルにバージョンを書き込みます。\n\n#### 環境変数で管理する\n\nバージョンを決定するときに、 `ASDF_${TOOL}_VERSION` というパターンの環境変数を探します。バージョンの形式は `.tool-versions` ファイルでサポートされているものと同じです。設定されている場合、この環境変数の値は `.tool-versions` ファイルでのバージョン指定よりも優先されます。たとえば:\n\nshell\n\n```\nexport ASDF_ELIXIR_VERSION=1.18.1\n```\n\nこれは現在のシェルセッションではElixir `1.18.1` を使うようasdfに指示します。\n\nWARNING\n\nこれは環境変数なので、設定されたセッションでのみ有効になります。 実行中の他のセッションでは、 `.tool-versions` ファイルに設定されているバージョンを引き続き使用します。\n\n`.tool-versions` ファイルについて詳しくは、 [構成設定のリファレンス](https://asdf-vm.com/ja-jp/manage/configuration.html) をご覧ください。\n\n下記の例では、バージョン `1.4.0` のElixirプロジェクトに対して、テストを実行させています。\n\nshell\n\n```\nASDF_ELIXIR_VERSION=1.4.0 mix test\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ja-jp/manage/versions.html", "title": "バージョン", "description": "このページでは、asdfのバージョン管理に関するコマンドとその使用方法について説明します。", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 03:38:55", "type": "section_detail", "page_metadata": {"language": "ja-jp", "viewport": "width=device-width,initial-scale=1", "generator": "VitePress v1.6.3", "description": "Manage multiple runtime versions with a single CLI tool", "title": "バージョン | asdf", "scrapeId": "bc7801e2-d19c-432a-b071-a1318230ef92", "sourceURL": "https://asdf-vm.com/ja-jp/manage/versions.html", "url": "https://asdf-vm.com/ja-jp/manage/versions.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I システムバージョンへの委任 in asdf-vm?\n\nAssistant: To システムバージョンへの委任 in asdf-vm, here's what you do:\nasdfで管理されているバージョンではなく、 `<name>` で指定されたツールのシステムバージョンを使用するには、バージョンとして `system` を指定します。\n\n[バージョンのセット](https://asdf-vm.com/ja-jp/manage/versions.html#%E3%83%90%E3%83%BC%E3%82%B8%E3%83%A7%E3%83%B3%E3%81%AE%E3%82%BB%E3%83%83%E3%83%88) と同様に、 `asdf set` または環境変数で `system` をセットしてください。\n\nshell\n\n```\nasdf set <name> system\n# asdf set python system\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ja-jp/manage/versions.html", "title": "バージョン", "description": "このページでは、asdfのバージョン管理に関するコマンドとその使用方法について説明します。", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 03:38:55", "type": "section_detail", "page_metadata": {"language": "ja-jp", "viewport": "width=device-width,initial-scale=1", "generator": "VitePress v1.6.3", "description": "Manage multiple runtime versions with a single CLI tool", "title": "バージョン | asdf", "scrapeId": "bc7801e2-d19c-432a-b071-a1318230ef92", "sourceURL": "https://asdf-vm.com/ja-jp/manage/versions.html", "url": "https://asdf-vm.com/ja-jp/manage/versions.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I カレントバージョンの表示 in asdf-vm?\n\nAssistant: To カレントバージョンの表示 in asdf-vm, here's what you do:\nshell\n\n```\nasdf current\n# asdf current\n# erlang          17.3          /Users/kim/.tool-versions\n# nodejs          6.11.5        /Users/kim/cool-node-project/.tool-versions\n\nasdf current <name>\n# asdf current erlang\n# erlang          17.3          /Users/kim/.tool-versions\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ja-jp/manage/versions.html", "title": "バージョン", "description": "このページでは、asdfのバージョン管理に関するコマンドとその使用方法について説明します。", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 03:38:55", "type": "section_detail", "page_metadata": {"language": "ja-jp", "viewport": "width=device-width,initial-scale=1", "generator": "VitePress v1.6.3", "description": "Manage multiple runtime versions with a single CLI tool", "title": "バージョン | asdf", "scrapeId": "bc7801e2-d19c-432a-b071-a1318230ef92", "sourceURL": "https://asdf-vm.com/ja-jp/manage/versions.html", "url": "https://asdf-vm.com/ja-jp/manage/versions.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I バージョンのアンインストール in asdf-vm?\n\nAssistant: To バージョンのアンインストール in asdf-vm, here's what you do:\nshell\n\n```\nasdf uninstall <name> <version>\n# asdf uninstall erlang 17.3\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ja-jp/manage/versions.html", "title": "バージョン", "description": "このページでは、asdfのバージョン管理に関するコマンドとその使用方法について説明します。", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 03:38:55", "type": "section_detail", "page_metadata": {"language": "ja-jp", "viewport": "width=device-width,initial-scale=1", "generator": "VitePress v1.6.3", "description": "Manage multiple runtime versions with a single CLI tool", "title": "バージョン | asdf", "scrapeId": "bc7801e2-d19c-432a-b071-a1318230ef92", "sourceURL": "https://asdf-vm.com/ja-jp/manage/versions.html", "url": "https://asdf-vm.com/ja-jp/manage/versions.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I shims in asdf-vm?\n\nAssistant: To shims in asdf-vm, here's what you do:\nasdfがパッケージをインストールすると、そのパッケージに含まれるすべての実行プログラムのShimが `$ASDF_DATA_DIR/shims` ディレクトリ(デフォルトは `~/.asdf/shims`)に作成されます。このディレクトリが( `asdf.sh` や `asdf.fish` などによって) `$PATH` に設定されることで、インストールされているプログラムが当該環境で利用できるようになります。\n\nShim自体は非常に単純なラッパーであり、 `asdf exec` というヘルパープログラムに、プラグイン名と、Shimがラップしているインストール済みパッケージの実行ファイルのパスを渡して、 `exec` します。\n\n`asdf exec` ヘルパーは、使用するパッケージのバージョン( `.tool-versions` ファイルで指定されたもの、または環境変数で指定されたもの)、パッケージのインストールディレクトリにある実行ファイルの完全パス(プラグインの `exec-path` コールバックで操作可能)、および実行環境(プラグインの `exec-env` スクリプトで提供)を決定し、実行します。\n\n備考\n\n本システムは `exec` 呼び出しを使用するため、シェルによってsourceされるパッケージ内のスクリプトは、Shimラッパーを経由させずに直接アクセスする必要があります。 `asdf` で用意されている `which` および `where` コマンドは、下記のように、インストールされたパッケージへのパスを返すため、この状況を解決するのに役立ちます:\n\nshell\n\n```\n# returns path to main executable in current version\nsource $(asdf which ${PLUGIN})/../script.sh\n\n# returns path to the package installation directory\nsource $(asdf where ${PLUGIN})/bin/script.sh\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ja-jp/manage/versions.html", "title": "バージョン", "description": "このページでは、asdfのバージョン管理に関するコマンドとその使用方法について説明します。", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 03:38:55", "type": "section_detail", "page_metadata": {"language": "ja-jp", "viewport": "width=device-width,initial-scale=1", "generator": "VitePress v1.6.3", "description": "Manage multiple runtime versions with a single CLI tool", "title": "バージョン | asdf", "scrapeId": "bc7801e2-d19c-432a-b071-a1318230ef92", "sourceURL": "https://asdf-vm.com/ja-jp/manage/versions.html", "url": "https://asdf-vm.com/ja-jp/manage/versions.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I asdfのshimのバイパス in asdf-vm?\n\nAssistant: To asdfのshimのバイパス in asdf-vm, here's what you do:\n何らかの理由でasdfのShimをバイパスしたい場合や、プロジェクトのディレクトリに移動した際に自動的に環境変数を設定したい場合は、 [asdf-direnv](https://github.com/asdf-community/asdf-direnv) プラグインが役に立ちます。詳細はREADMEをご確認ください。.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ja-jp/manage/versions.html", "title": "バージョン", "description": "このページでは、asdfのバージョン管理に関するコマンドとその使用方法について説明します。", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 03:38:55", "type": "section_detail", "page_metadata": {"language": "ja-jp", "viewport": "width=device-width,initial-scale=1", "generator": "VitePress v1.6.3", "description": "Manage multiple runtime versions with a single CLI tool", "title": "バージョン | asdf", "scrapeId": "bc7801e2-d19c-432a-b071-a1318230ef92", "sourceURL": "https://asdf-vm.com/ja-jp/manage/versions.html", "url": "https://asdf-vm.com/ja-jp/manage/versions.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you give me some code examples for バージョン in asdf-vm?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**バージョンのインストール**:\n\n```yaml\nasdf install <name> <version>\n# asdf install erlang 17.3\n```\n\nThis snippet shows you how to バージョンのインストール, which is an important aspect of バージョン.\n\n**最新安定バージョンのインストール**:\n\n```yaml\nasdf install <name> latest\n# asdf install erlang latest\n```\n\nThis snippet shows you how to 最新安定バージョンのインストール, which is an important aspect of バージョン.\n\n**特定のプレフィックスでの最新安定バージョンのインストール**:\n\n```yaml\nasdf install <name> latest:<version>\n# asdf install erlang latest:17\n```\n\nThis snippet shows you how to 特定のプレフィックスでの最新安定バージョンのインストール, which is an important aspect of バージョン.\n\n**インストール済みバージョン一覧**:\n\n```yaml\nasdf list <name>\n# asdf list erlang\n```\n\nThis snippet shows you how to インストール済みバージョン一覧, which is an important aspect of バージョン.\n\n**特定のプレフィックスでのバージョンでフィルタ**:\n\n```yaml\nasdf list <name> <version>\n# asdf list erlang 17\n```\n\nThis snippet shows you how to 特定のプレフィックスでのバージョンでフィルタ, which is an important aspect of バージョン.\n\n**インストール可能な全バージョン一覧**:\n\n```yaml\nasdf list all <name>\n# asdf list all erlang\n```\n\nThis snippet shows you how to インストール可能な全バージョン一覧, which is an important aspect of バージョン.\n\n**特定のプレフィックスでのバージョンでフィルタ**:\n\n```yaml\nasdf list all <name> <version>\n# asdf list all erlang 17\n```\n\nThis snippet shows you how to 特定のプレフィックスでのバージョンでフィルタ, which is an important aspect of バージョン.\n\n**最新安定バージョンの表示**:\n\n```yaml\nasdf latest <name>\n# asdf latest erlang\n```\n\nThis snippet shows you how to 最新安定バージョンの表示, which is an important aspect of バージョン.\n\n**特定のプレフィックスでの最新安定バージョンで表示**:\n\n```yaml\nasdf latest <name> <version>\n# asdf latest erlang 17\n```\n\nThis snippet shows you how to 特定のプレフィックスでの最新安定バージョンで表示, which is an important aspect of バージョン.\n\n**バージョンのセット**:\n\n```yaml\nasdf set [flags] <name> <version> [<version>...]\n# asdf set elixir 1.2.4 # set in current dir\n# asdf set -u elixir 1.2.4 # set in .tool-versions file in home directory\n# asdf set -p elixir 1.2.4 # set in existing .tool-versions file in a parent dir\n\nasdf set <name> latest[:<version>]\n# asdf set elixir latest\n```\n\nThis snippet shows you how to バージョンのセット, which is an important aspect of バージョン.\n\n**環境変数で管理する**:\n\n```yaml\nexport ASDF_ELIXIR_VERSION=1.18.1\n```\n\nThis snippet shows you how to 環境変数で管理する, which is an important aspect of バージョン.\n\n**システムバージョンへの委任**:\n\n```yaml\nasdf set <name> system\n# asdf set python system\n```\n\nThis snippet shows you how to システムバージョンへの委任, which is an important aspect of バージョン.\n\n**カレントバージョンの表示**:\n\n```yaml\nasdf current\n# asdf current\n# erlang          17.3          /Users/kim/.tool-versions\n# nodejs          6.11.5        /Users/kim/cool-node-project/.tool-versions\n\nasdf current <name>\n# asdf current erlang\n# erlang          17.3          /Users/kim/.tool-versions\n```\n\nThis snippet shows you how to カレントバージョンの表示, which is an important aspect of バージョン.\n\n**バージョンのアンインストール**:\n\n```yaml\nasdf uninstall <name> <version>\n# asdf uninstall erlang 17.3\n```\n\nThis snippet shows you how to バージョンのアンインストール, which is an important aspect of バージョン.\n\n**Shims**:\n\n```yaml\n# returns path to main executable in current version\nsource $(asdf which ${PLUGIN})/../script.sh\n\n# returns path to the package installation directory\nsource $(asdf where ${PLUGIN})/bin/script.sh\n```\n\nThis snippet shows you how to shims, which is an important aspect of バージョン.\n\n", "metadata": {"source_url": "https://asdf-vm.com/ja-jp/manage/versions.html", "title": "バージョン", "description": "このページでは、asdfのバージョン管理に関するコマンドとその使用方法について説明します。", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 03:38:55", "type": "code_examples", "page_metadata": {"language": "ja-jp", "viewport": "width=device-width,initial-scale=1", "generator": "VitePress v1.6.3", "description": "Manage multiple runtime versions with a single CLI tool", "title": "バージョン | asdf", "scrapeId": "bc7801e2-d19c-432a-b071-a1318230ef92", "sourceURL": "https://asdf-vm.com/ja-jp/manage/versions.html", "url": "https://asdf-vm.com/ja-jp/manage/versions.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: What are some tips for using バージョン in asdf-vm effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nプラグインが、ソースコードからのダウンロード・コンパイルをサポートしている場合、 `ref:foo` の形式でバージョンを指定できます。\n\n`asdf set` はカレントディレクトリの `.tool-versions` ファイルにバージョンを書き込みます。\n\n環境変数 `ASDF_${TOOL}_VERSION` を使用してバージョンを管理することができます。\n\nシステムバージョンを使用するには、バージョンとして `system` を指定します。\n\nShimをバイパスしたい場合は、 [asdf-direnv](https://github.com/asdf-community/asdf-direnv) プラグインを使用することができます。\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://asdf-vm.com/ja-jp/manage/versions.html", "title": "バージョン", "description": "このページでは、asdfのバージョン管理に関するコマンドとその使用方法について説明します。", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 03:38:55", "type": "best_practices", "page_metadata": {"language": "ja-jp", "viewport": "width=device-width,initial-scale=1", "generator": "VitePress v1.6.3", "description": "Manage multiple runtime versions with a single CLI tool", "title": "バージョン | asdf", "scrapeId": "bc7801e2-d19c-432a-b071-a1318230ef92", "sourceURL": "https://asdf-vm.com/ja-jp/manage/versions.html", "url": "https://asdf-vm.com/ja-jp/manage/versions.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you explain what Plugins is in asdf-vm?\n\nAssistant: Sure, I'd be happy to explain Plugins in asdf-vm.\n\n# Plugins\n\nEsta página cobre como gerenciar plugins no asdf, incluindo adição, listagem, atualização e remoção de plugins.Here's a quick rundown of what this is about:\n\n## Adicionar\n\nAdicione os plugins via sua Url Git:\n\n```shell\nasdf plugin add <name> <git-url>\n# asdf plugin add elm https://github.com/vic/asdf-elm\n```\n\nou pelo nome abreviado dentro do repositório de plugins:\n\n```shell\nasdf plugin add <name>\n# asdf plugin add erlang\n```\n\nRecommendation\n\nPrefira o método mais longo `git-url`, pois ele é independente do repositório de nome abreviado.\n\n## Listar Instalados\n\n```shell\nasdf plugin list\n# asdf plugin list\n# java\n# nodejs\n```\n\n```shell\nasdf plugin list --urls\n# asdf plugin list\n# java            https://github.com/halcyon/asdf-java.git\n# nodejs          https://github.com/asdf-vm/asdf-nodejs.git\n```\n\n## Listar todos nomes abreviados no repositório\n\n```shell\nasdf plugin list all\n```\n\nVeja [Plugins Shortname Index](https://github.com/asdf-vm/asdf-plugin-template) para toda a lista de nomes curtos de plugins.\n\n## Atualizar\n\n```shell\nasdf plugin update --all\n```\n\nSe você quiser atualizar um pacote específico, apenas use.\n\n```shell\nasdf plugin update <name>\n# asdf plugin update erlang\n```\n\nEsta atualização irá buscar o último _commit_ na _branch_ padrão no _origin_ de seu respositório. Plugins e atualizações das versões estão sendo desenvolvidas ( [#916](https://github.com/asdf-vm/asdf/pull/916))\n\n## Remover\n\n```bash\nasdf plugin remove <name>\n# asdf plugin remove erlang\n```\n\nRemovendo o plugin irá remover todas as instalações feitas com o plugin. Isso pode ser usado como um atalho para apagar/remover sujeiras de versões não utilizadas de uma ferramenta.\n\n## Sincronizar nome abreviado no repositório\n\nO nome abreviado do repositório é sincronizado em seu máquina local e periodicamente atualizado. Esse período pode ser determinado com o seguinte método:\n\n- comandos `asdf plugin add <name>` ou `asdf plugin list all` disparam a sincronização\n- ocorre uma sincronização se não houver nenhuma nos últimos `X` minutos\n- `X` por padrão é `60`, mas pode ser mudado em `.asdfrc` via as opções do `plugin_repository_last_check_duration`. Seja mais em [asdf documentação de configuração](https://asdf-vm.com/pt-br/manage/configuration.html).\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://asdf-vm.com/pt-br/manage/plugins.html", "title": "Plugins", "description": "Esta página cobre como gerenciar plugins no asdf, incluindo adição, listagem, atualização e remoção de plugins.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:43:17", "type": "overview", "page_metadata": {"language": "pr-br", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "title": "Plugins | asdf", "scrapeId": "3b98242d-ef95-4cdb-a090-e51dfa49c988", "sourceURL": "https://asdf-vm.com/pt-br/manage/plugins.html", "url": "https://asdf-vm.com/pt-br/manage/plugins.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I adicionar in asdf-vm?\n\nAssistant: To adicionar in asdf-vm, here's what you do:\nAdicione os plugins via sua Url Git:\n\n```shell\nasdf plugin add <name> <git-url>\n# asdf plugin add elm https://github.com/vic/asdf-elm\n```\n\nou pelo nome abreviado dentro do repositório de plugins:\n\n```shell\nasdf plugin add <name>\n# asdf plugin add erlang\n```\n\nRecommendation\n\nPrefira o método mais longo `git-url`, pois ele é independente do repositório de nome abreviado..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/pt-br/manage/plugins.html", "title": "Plugins", "description": "Esta página cobre como gerenciar plugins no asdf, incluindo adição, listagem, atualização e remoção de plugins.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:43:17", "type": "section_detail", "page_metadata": {"language": "pr-br", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "title": "Plugins | asdf", "scrapeId": "3b98242d-ef95-4cdb-a090-e51dfa49c988", "sourceURL": "https://asdf-vm.com/pt-br/manage/plugins.html", "url": "https://asdf-vm.com/pt-br/manage/plugins.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I listar instalados in asdf-vm?\n\nAssistant: To listar instalados in asdf-vm, here's what you do:\n```shell\nasdf plugin list\n# asdf plugin list\n# java\n# nodejs\n```\n\n```shell\nasdf plugin list --urls\n# asdf plugin list\n# java            https://github.com/halcyon/asdf-java.git\n# nodejs          https://github.com/asdf-vm/asdf-nodejs.git\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/pt-br/manage/plugins.html", "title": "Plugins", "description": "Esta página cobre como gerenciar plugins no asdf, incluindo adição, listagem, atualização e remoção de plugins.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:43:17", "type": "section_detail", "page_metadata": {"language": "pr-br", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "title": "Plugins | asdf", "scrapeId": "3b98242d-ef95-4cdb-a090-e51dfa49c988", "sourceURL": "https://asdf-vm.com/pt-br/manage/plugins.html", "url": "https://asdf-vm.com/pt-br/manage/plugins.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I listar todos nomes abreviados no repositório in asdf-vm?\n\nAssistant: To listar todos nomes abreviados no repositório in asdf-vm, here's what you do:\n```shell\nasdf plugin list all\n```\n\nVeja [Plugins Shortname Index](https://github.com/asdf-vm/asdf-plugin-template) para toda a lista de nomes curtos de plugins..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/pt-br/manage/plugins.html", "title": "Plugins", "description": "Esta página cobre como gerenciar plugins no asdf, incluindo adição, listagem, atualização e remoção de plugins.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:43:17", "type": "section_detail", "page_metadata": {"language": "pr-br", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "title": "Plugins | asdf", "scrapeId": "3b98242d-ef95-4cdb-a090-e51dfa49c988", "sourceURL": "https://asdf-vm.com/pt-br/manage/plugins.html", "url": "https://asdf-vm.com/pt-br/manage/plugins.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I atualizar in asdf-vm?\n\nAssistant: To atualizar in asdf-vm, here's what you do:\n```shell\nasdf plugin update --all\n```\n\nSe você quiser atualizar um pacote específico, apenas use.\n\n```shell\nasdf plugin update <name>\n# asdf plugin update erlang\n```\n\nEsta atualização irá buscar o último _commit_ na _branch_ padrão no _origin_ de seu respositório. Plugins e atualizações das versões estão sendo desenvolvidas ( [#916](https://github.com/asdf-vm/asdf/pull/916)).\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/pt-br/manage/plugins.html", "title": "Plugins", "description": "Esta página cobre como gerenciar plugins no asdf, incluindo adição, listagem, atualização e remoção de plugins.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:43:17", "type": "section_detail", "page_metadata": {"language": "pr-br", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "title": "Plugins | asdf", "scrapeId": "3b98242d-ef95-4cdb-a090-e51dfa49c988", "sourceURL": "https://asdf-vm.com/pt-br/manage/plugins.html", "url": "https://asdf-vm.com/pt-br/manage/plugins.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I remover in asdf-vm?\n\nAssistant: To remover in asdf-vm, here's what you do:\n```bash\nasdf plugin remove <name>\n# asdf plugin remove erlang\n```\n\nRemovendo o plugin irá remover todas as instalações feitas com o plugin. Isso pode ser usado como um atalho para apagar/remover sujeiras de versões não utilizadas de uma ferramenta..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/pt-br/manage/plugins.html", "title": "Plugins", "description": "Esta página cobre como gerenciar plugins no asdf, incluindo adição, listagem, atualização e remoção de plugins.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:43:17", "type": "section_detail", "page_metadata": {"language": "pr-br", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "title": "Plugins | asdf", "scrapeId": "3b98242d-ef95-4cdb-a090-e51dfa49c988", "sourceURL": "https://asdf-vm.com/pt-br/manage/plugins.html", "url": "https://asdf-vm.com/pt-br/manage/plugins.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I sincronizar nome abreviado no repositório in asdf-vm?\n\nAssistant: To sincronizar nome abreviado no repositório in asdf-vm, here's what you do:\nO nome abreviado do repositório é sincronizado em seu máquina local e periodicamente atualizado. Esse período pode ser determinado com o seguinte método:\n\n- comandos `asdf plugin add <name>` ou `asdf plugin list all` disparam a sincronização\n- ocorre uma sincronização se não houver nenhuma nos últimos `X` minutos\n- `X` por padrão é `60`, mas pode ser mudado em `.asdfrc` via as opções do `plugin_repository_last_check_duration`. Seja mais em [asdf documentação de configuração](https://asdf-vm.com/pt-br/manage/configuration.html)..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/pt-br/manage/plugins.html", "title": "Plugins", "description": "Esta página cobre como gerenciar plugins no asdf, incluindo adição, listagem, atualização e remoção de plugins.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:43:17", "type": "section_detail", "page_metadata": {"language": "pr-br", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "title": "Plugins | asdf", "scrapeId": "3b98242d-ef95-4cdb-a090-e51dfa49c988", "sourceURL": "https://asdf-vm.com/pt-br/manage/plugins.html", "url": "https://asdf-vm.com/pt-br/manage/plugins.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you give me some code examples for Plugins in asdf-vm?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Adicionar Plugin via Git URL**:\n\n```yaml\n```shell\nasdf plugin add <name> <git-url>\n# asdf plugin add elm https://github.com/vic/asdf-elm\n```\n```\n\nThis snippet shows you how to adicionar plugin via git url, which is an important aspect of plugins.\n\n**Adicionar Plugin pelo Nome Abreviado**:\n\n```yaml\n```shell\nasdf plugin add <name>\n# asdf plugin add erlang\n```\n```\n\nThis snippet shows you how to adicionar plugin pelo nome abreviado, which is an important aspect of plugins.\n\n**Listar Plugins Instalados**:\n\n```yaml\n```shell\nasdf plugin list\n# asdf plugin list\n# java\n# nodejs\n```\n```\n\nThis snippet shows you how to listar plugins instalados, which is an important aspect of plugins.\n\n**Listar Plugins com URLs**:\n\n```yaml\n```shell\nasdf plugin list --urls\n# asdf plugin list\n# java            https://github.com/halcyon/asdf-java.git\n# nodejs          https://github.com/asdf-vm/asdf-nodejs.git\n```\n```\n\nThis snippet shows you how to listar plugins com urls, which is an important aspect of plugins.\n\n**Listar Todos os Nomes Abreviados**:\n\n```yaml\n```shell\nasdf plugin list all\n```\n```\n\nThis snippet shows you how to listar todos os nomes abreviados, which is an important aspect of plugins.\n\n**Atualizar Todos os Plugins**:\n\n```yaml\n```shell\nasdf plugin update --all\n```\n```\n\nThis snippet shows you how to atualizar todos os plugins, which is an important aspect of plugins.\n\n**Atualizar Plugin Específico**:\n\n```yaml\n```shell\nasdf plugin update <name>\n# asdf plugin update erlang\n```\n```\n\nThis snippet shows you how to atualizar plugin específico, which is an important aspect of plugins.\n\n**Remover Plugin**:\n\n```yaml\n```bash\nasdf plugin remove <name>\n# asdf plugin remove erlang\n```\n```\n\nThis snippet shows you how to remover plugin, which is an important aspect of plugins.\n\n", "metadata": {"source_url": "https://asdf-vm.com/pt-br/manage/plugins.html", "title": "Plugins", "description": "Esta página cobre como gerenciar plugins no asdf, incluindo adição, listagem, atualização e remoção de plugins.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:43:17", "type": "code_examples", "page_metadata": {"language": "pr-br", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "title": "Plugins | asdf", "scrapeId": "3b98242d-ef95-4cdb-a090-e51dfa49c988", "sourceURL": "https://asdf-vm.com/pt-br/manage/plugins.html", "url": "https://asdf-vm.com/pt-br/manage/plugins.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: What are some tips for using Plugins in asdf-vm effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nPrefira o método mais longo `git-url` para adicionar plugins, pois ele é independente do repositório de nome abreviado.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://asdf-vm.com/pt-br/manage/plugins.html", "title": "Plugins", "description": "Esta página cobre como gerenciar plugins no asdf, incluindo adição, listagem, atualização e remoção de plugins.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:43:17", "type": "best_practices", "page_metadata": {"language": "pr-br", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "title": "Plugins | asdf", "scrapeId": "3b98242d-ef95-4cdb-a090-e51dfa49c988", "sourceURL": "https://asdf-vm.com/pt-br/manage/plugins.html", "url": "https://asdf-vm.com/pt-br/manage/plugins.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you explain what 管理版本 is in asdf-vm?\n\nAssistant: Sure, I'd be happy to explain 管理版本 in asdf-vm.\n\n# 管理版本\n\n本页面介绍如何使用 asdf 管理不同工具的版本，包括安装、列举、设置和卸载版本等操作。Here's a quick rundown of what this is about:\n\n## 安装版本\n\n使用以下命令安装指定名称和版本的工具：\n\n```shell\nasdf install <name> <version>\n# asdf install erlang 17.3\n```\n\n如果一个插件支持从源代码下载和编译，你可以指定 `ref:foo`，其中 `foo` 是特定的分支、标签或者提交。卸载该版本时，你也需要使用相同的名称和引用。\n\n## 安装最新稳定版本\n\n使用以下命令安装指定名称的最新稳定版本：\n\n```shell\nasdf install <name> latest\n# asdf install erlang latest\n```\n\n安装给定字符串开头的最新稳定版本：\n\n```shell\nasdf install <name> latest:<version>\n# asdf install erlang latest:17\n```\n\n## 列举已安装版本\n\n使用以下命令列举已安装的指定名称的版本：\n\n```shell\nasdf list <name>\n# asdf list erlang\n```\n\n筛选出以给定字符串开头的版本：\n\n```shell\nasdf list <name> <version>\n# asdf list erlang 17\n```\n\n## 列举所有可用版本\n\n使用以下命令列举所有可用的指定名称的版本：\n\n```shell\nasdf list all <name>\n# asdf list all erlang\n```\n\n筛选出以给定字符串开头的版本：\n\n```shell\nasdf list all <name> <version>\n# asdf list all erlang 17\n```\n\n## 显示最新稳定版本\n\n使用以下命令显示指定名称的最新稳定版本：\n\n```shell\nasdf latest <name>\n# asdf latest erlang\n```\n\n显示以给定字符串开头的最新稳定版本：\n\n```shell\nasdf latest <name> <version>\n# asdf latest erlang 17\n```\n\n## 设置当前版本\n\n使用以下命令设置当前版本：\n\n```shell\nasdf global <name> <version> [<version>...]\nasdf shell <name> <version> [<version>...]\nasdf local <name> <version> [<version>...]\n# asdf global elixir 1.2.4\n\nasdf global <name> latest[:<version>]\nasdf local <name> latest[:<version>]\n# asdf global elixir latest\n```\n\n`global` 将版本写到 `$HOME/.tool-versions` 文件中。\n\n`shell` 仅为当前 shell 会话将版本设置为一个名为 `ASDF_${LANG}_VERSION` 的环境变量。\n\n`local` 将版本写到 `$PWD/.tool-versions` 文件中，如果有需要也会创建此文件。\n\n请查看 [配置部分](https://asdf-vm.com/zh-hans/manage/configuration.html) 的 `.tool-versions` 文件了解更多详情。\n\n可选：如果你只是想为当前 shell 会话或者在特定工具版本下执行一条命令，你可以设置一个类似 `ASDF_${TOOL}_VERSION` 的环境变量。下面的示例在版本为 `1.4.0` 的 Elixir 项目上运行测试。版本格式与 `.tool-versions` 文件支持的版本格式相同。\n\n```shell\nASDF_ELIXIR_VERSION=1.4.0 mix test\n```\n\n## 回退到系统版本\n\n要使用工具 `<name>` 的系统版本而非 asdf 管理版本，你可以将工具的版本设置为 `system`。\n\n使用 `global`、 `local` 或者 `shell` 设置系统，如上面的 [设置当前版本](https://asdf-vm.com/zh-hans/manage/versions.html#%E8%AE%BE%E7%BD%AE%E5%BD%93%E5%89%8D%E7%89%88%E6%9C%AC) 部分所述。\n\n```shell\nasdf local <name> system\n# asdf local python system\n```\n\n## 显示当前版本\n\n使用以下命令显示当前版本：\n\n```shell\nasdf current\n# asdf current\n# erlang 17.3 (set by /Users/kim/.tool-versions)\n# nodejs 6.11.5 (set by /Users/kim/cool-node-project/.tool-versions)\n\nasdf current <name>\n# asdf current erlang\n# 17.3 (set by /Users/kim/.tool-versions)\n```\n\n## 卸载版本\n\n使用以下命令卸载指定名称和版本的工具：\n\n```shell\nasdf uninstall <name> <version>\n# asdf uninstall erlang 17.3\n```\n\n## 垫片（Shims）\n\n当 asdf 安装一个包时，它会在 `$ASDF_DATA_DIR/shims` 目录（默认为 `~/.asdf/shims`）中为该包中的每个可执行程序创建垫片。这个位于 `$PATH` 中（通过 `asdf.sh`、 `asdf.fish` 等等实现）的目录是已安装程序在环境中可用的方式。\n\n垫片本身是非常简单的包装器，它 `exec` （执行）一个辅助程序 `asdf exec`，向其传递插件的名称和垫片正在包装的已安装包中的可执行程序的路径。\n\n`asdf exec` 辅助程序确定要使用的软件包版本（比如在 `.tool-versions` 文件中指定，通过 `asdf local ...` 或者 `asdf global ...` 命令选择）、软件包安装目录中的可执行程序的最终路径（这可以在插件中通过 `exec-path` 回调来操作）以及要在其中执行的环境（也由插件 - `exec-env` 脚本提供），最后完成执行。\n\n注意：因为此系统使用 `exec` 调用，所以软件包中的任何脚本如果要由 shell 生效而不是执行的脚本都需要直接访问，而不是通过垫片包装器进行访问。两个 `asdf` 命令： `which` 和 `where` 可以通过返回已安装软件包的路径来帮助解决这个问题。\n\n```shell\n# 返回当前版本中主要可执行程序的路径\nsource $(asdf which ${PLUGIN})/../script.sh\n\n# 返回软件包安装目录的路径\nsource $(asdf where ${PLUGIN} $(asdf current ${PLUGIN}))/bin/script.sh\n```\n\n## 绕过 asdf 垫片\n\n如果由于某种原因，你希望绕过 asdf 垫片，或者希望在进入项目目录时自动设置环境变量，则 [asdf-direnv](https://github.com/asdf-community/asdf-direnv) 插件可能会有所帮助。请务必查看其 README 文件了解更多详情。\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://asdf-vm.com/zh-hans/manage/versions.html", "title": "管理版本", "description": "本页面介绍如何使用 asdf 管理不同工具的版本，包括安装、列举、设置和卸载版本等操作。", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 03:43:53", "type": "overview", "page_metadata": {"title": "版本 | asdf", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "language": "zh-hans", "generator": "VitePress v1.6.3", "scrapeId": "19ccf1db-b0eb-4bed-be0f-f4538d0ebecd", "sourceURL": "https://asdf-vm.com/zh-hans/manage/versions.html", "url": "https://asdf-vm.com/zh-hans/manage/versions.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 安装版本 in asdf-vm?\n\nAssistant: To 安装版本 in asdf-vm, here's what you do:\n使用以下命令安装指定名称和版本的工具：\n\n```shell\nasdf install <name> <version>\n# asdf install erlang 17.3\n```\n\n如果一个插件支持从源代码下载和编译，你可以指定 `ref:foo`，其中 `foo` 是特定的分支、标签或者提交。卸载该版本时，你也需要使用相同的名称和引用。.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/zh-hans/manage/versions.html", "title": "管理版本", "description": "本页面介绍如何使用 asdf 管理不同工具的版本，包括安装、列举、设置和卸载版本等操作。", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 03:43:53", "type": "section_detail", "page_metadata": {"title": "版本 | asdf", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "language": "zh-hans", "generator": "VitePress v1.6.3", "scrapeId": "19ccf1db-b0eb-4bed-be0f-f4538d0ebecd", "sourceURL": "https://asdf-vm.com/zh-hans/manage/versions.html", "url": "https://asdf-vm.com/zh-hans/manage/versions.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 安装最新稳定版本 in asdf-vm?\n\nAssistant: To 安装最新稳定版本 in asdf-vm, here's what you do:\n使用以下命令安装指定名称的最新稳定版本：\n\n```shell\nasdf install <name> latest\n# asdf install erlang latest\n```\n\n安装给定字符串开头的最新稳定版本：\n\n```shell\nasdf install <name> latest:<version>\n# asdf install erlang latest:17\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/zh-hans/manage/versions.html", "title": "管理版本", "description": "本页面介绍如何使用 asdf 管理不同工具的版本，包括安装、列举、设置和卸载版本等操作。", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 03:43:53", "type": "section_detail", "page_metadata": {"title": "版本 | asdf", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "language": "zh-hans", "generator": "VitePress v1.6.3", "scrapeId": "19ccf1db-b0eb-4bed-be0f-f4538d0ebecd", "sourceURL": "https://asdf-vm.com/zh-hans/manage/versions.html", "url": "https://asdf-vm.com/zh-hans/manage/versions.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 列举已安装版本 in asdf-vm?\n\nAssistant: To 列举已安装版本 in asdf-vm, here's what you do:\n使用以下命令列举已安装的指定名称的版本：\n\n```shell\nasdf list <name>\n# asdf list erlang\n```\n\n筛选出以给定字符串开头的版本：\n\n```shell\nasdf list <name> <version>\n# asdf list erlang 17\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/zh-hans/manage/versions.html", "title": "管理版本", "description": "本页面介绍如何使用 asdf 管理不同工具的版本，包括安装、列举、设置和卸载版本等操作。", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 03:43:53", "type": "section_detail", "page_metadata": {"title": "版本 | asdf", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "language": "zh-hans", "generator": "VitePress v1.6.3", "scrapeId": "19ccf1db-b0eb-4bed-be0f-f4538d0ebecd", "sourceURL": "https://asdf-vm.com/zh-hans/manage/versions.html", "url": "https://asdf-vm.com/zh-hans/manage/versions.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 列举所有可用版本 in asdf-vm?\n\nAssistant: To 列举所有可用版本 in asdf-vm, here's what you do:\n使用以下命令列举所有可用的指定名称的版本：\n\n```shell\nasdf list all <name>\n# asdf list all erlang\n```\n\n筛选出以给定字符串开头的版本：\n\n```shell\nasdf list all <name> <version>\n# asdf list all erlang 17\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/zh-hans/manage/versions.html", "title": "管理版本", "description": "本页面介绍如何使用 asdf 管理不同工具的版本，包括安装、列举、设置和卸载版本等操作。", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 03:43:53", "type": "section_detail", "page_metadata": {"title": "版本 | asdf", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "language": "zh-hans", "generator": "VitePress v1.6.3", "scrapeId": "19ccf1db-b0eb-4bed-be0f-f4538d0ebecd", "sourceURL": "https://asdf-vm.com/zh-hans/manage/versions.html", "url": "https://asdf-vm.com/zh-hans/manage/versions.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 显示最新稳定版本 in asdf-vm?\n\nAssistant: To 显示最新稳定版本 in asdf-vm, here's what you do:\n使用以下命令显示指定名称的最新稳定版本：\n\n```shell\nasdf latest <name>\n# asdf latest erlang\n```\n\n显示以给定字符串开头的最新稳定版本：\n\n```shell\nasdf latest <name> <version>\n# asdf latest erlang 17\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/zh-hans/manage/versions.html", "title": "管理版本", "description": "本页面介绍如何使用 asdf 管理不同工具的版本，包括安装、列举、设置和卸载版本等操作。", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 03:43:53", "type": "section_detail", "page_metadata": {"title": "版本 | asdf", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "language": "zh-hans", "generator": "VitePress v1.6.3", "scrapeId": "19ccf1db-b0eb-4bed-be0f-f4538d0ebecd", "sourceURL": "https://asdf-vm.com/zh-hans/manage/versions.html", "url": "https://asdf-vm.com/zh-hans/manage/versions.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 设置当前版本 in asdf-vm?\n\nAssistant: To 设置当前版本 in asdf-vm, here's what you do:\n使用以下命令设置当前版本：\n\n```shell\nasdf global <name> <version> [<version>...]\nasdf shell <name> <version> [<version>...]\nasdf local <name> <version> [<version>...]\n# asdf global elixir 1.2.4\n\nasdf global <name> latest[:<version>]\nasdf local <name> latest[:<version>]\n# asdf global elixir latest\n```\n\n`global` 将版本写到 `$HOME/.tool-versions` 文件中。\n\n`shell` 仅为当前 shell 会话将版本设置为一个名为 `ASDF_${LANG}_VERSION` 的环境变量。\n\n`local` 将版本写到 `$PWD/.tool-versions` 文件中，如果有需要也会创建此文件。\n\n请查看 [配置部分](https://asdf-vm.com/zh-hans/manage/configuration.html) 的 `.tool-versions` 文件了解更多详情。\n\n可选：如果你只是想为当前 shell 会话或者在特定工具版本下执行一条命令，你可以设置一个类似 `ASDF_${TOOL}_VERSION` 的环境变量。下面的示例在版本为 `1.4.0` 的 Elixir 项目上运行测试。版本格式与 `.tool-versions` 文件支持的版本格式相同。\n\n```shell\nASDF_ELIXIR_VERSION=1.4.0 mix test\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/zh-hans/manage/versions.html", "title": "管理版本", "description": "本页面介绍如何使用 asdf 管理不同工具的版本，包括安装、列举、设置和卸载版本等操作。", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 03:43:53", "type": "section_detail", "page_metadata": {"title": "版本 | asdf", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "language": "zh-hans", "generator": "VitePress v1.6.3", "scrapeId": "19ccf1db-b0eb-4bed-be0f-f4538d0ebecd", "sourceURL": "https://asdf-vm.com/zh-hans/manage/versions.html", "url": "https://asdf-vm.com/zh-hans/manage/versions.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 回退到系统版本 in asdf-vm?\n\nAssistant: To 回退到系统版本 in asdf-vm, here's what you do:\n要使用工具 `<name>` 的系统版本而非 asdf 管理版本，你可以将工具的版本设置为 `system`。\n\n使用 `global`、 `local` 或者 `shell` 设置系统，如上面的 [设置当前版本](https://asdf-vm.com/zh-hans/manage/versions.html#%E8%AE%BE%E7%BD%AE%E5%BD%93%E5%89%8D%E7%89%88%E6%9C%AC) 部分所述。\n\n```shell\nasdf local <name> system\n# asdf local python system\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/zh-hans/manage/versions.html", "title": "管理版本", "description": "本页面介绍如何使用 asdf 管理不同工具的版本，包括安装、列举、设置和卸载版本等操作。", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 03:43:53", "type": "section_detail", "page_metadata": {"title": "版本 | asdf", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "language": "zh-hans", "generator": "VitePress v1.6.3", "scrapeId": "19ccf1db-b0eb-4bed-be0f-f4538d0ebecd", "sourceURL": "https://asdf-vm.com/zh-hans/manage/versions.html", "url": "https://asdf-vm.com/zh-hans/manage/versions.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 显示当前版本 in asdf-vm?\n\nAssistant: To 显示当前版本 in asdf-vm, here's what you do:\n使用以下命令显示当前版本：\n\n```shell\nasdf current\n# asdf current\n# erlang 17.3 (set by /Users/kim/.tool-versions)\n# nodejs 6.11.5 (set by /Users/kim/cool-node-project/.tool-versions)\n\nasdf current <name>\n# asdf current erlang\n# 17.3 (set by /Users/kim/.tool-versions)\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/zh-hans/manage/versions.html", "title": "管理版本", "description": "本页面介绍如何使用 asdf 管理不同工具的版本，包括安装、列举、设置和卸载版本等操作。", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 03:43:53", "type": "section_detail", "page_metadata": {"title": "版本 | asdf", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "language": "zh-hans", "generator": "VitePress v1.6.3", "scrapeId": "19ccf1db-b0eb-4bed-be0f-f4538d0ebecd", "sourceURL": "https://asdf-vm.com/zh-hans/manage/versions.html", "url": "https://asdf-vm.com/zh-hans/manage/versions.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 卸载版本 in asdf-vm?\n\nAssistant: To 卸载版本 in asdf-vm, here's what you do:\n使用以下命令卸载指定名称和版本的工具：\n\n```shell\nasdf uninstall <name> <version>\n# asdf uninstall erlang 17.3\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/zh-hans/manage/versions.html", "title": "管理版本", "description": "本页面介绍如何使用 asdf 管理不同工具的版本，包括安装、列举、设置和卸载版本等操作。", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 03:43:53", "type": "section_detail", "page_metadata": {"title": "版本 | asdf", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "language": "zh-hans", "generator": "VitePress v1.6.3", "scrapeId": "19ccf1db-b0eb-4bed-be0f-f4538d0ebecd", "sourceURL": "https://asdf-vm.com/zh-hans/manage/versions.html", "url": "https://asdf-vm.com/zh-hans/manage/versions.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 垫片（shims） in asdf-vm?\n\nAssistant: To 垫片（shims） in asdf-vm, here's what you do:\n当 asdf 安装一个包时，它会在 `$ASDF_DATA_DIR/shims` 目录（默认为 `~/.asdf/shims`）中为该包中的每个可执行程序创建垫片。这个位于 `$PATH` 中（通过 `asdf.sh`、 `asdf.fish` 等等实现）的目录是已安装程序在环境中可用的方式。\n\n垫片本身是非常简单的包装器，它 `exec` （执行）一个辅助程序 `asdf exec`，向其传递插件的名称和垫片正在包装的已安装包中的可执行程序的路径。\n\n`asdf exec` 辅助程序确定要使用的软件包版本（比如在 `.tool-versions` 文件中指定，通过 `asdf local ...` 或者 `asdf global ...` 命令选择）、软件包安装目录中的可执行程序的最终路径（这可以在插件中通过 `exec-path` 回调来操作）以及要在其中执行的环境（也由插件 - `exec-env` 脚本提供），最后完成执行。\n\n注意：因为此系统使用 `exec` 调用，所以软件包中的任何脚本如果要由 shell 生效而不是执行的脚本都需要直接访问，而不是通过垫片包装器进行访问。两个 `asdf` 命令： `which` 和 `where` 可以通过返回已安装软件包的路径来帮助解决这个问题。\n\n```shell\n# 返回当前版本中主要可执行程序的路径\nsource $(asdf which ${PLUGIN})/../script.sh\n\n# 返回软件包安装目录的路径\nsource $(asdf where ${PLUGIN} $(asdf current ${PLUGIN}))/bin/script.sh\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/zh-hans/manage/versions.html", "title": "管理版本", "description": "本页面介绍如何使用 asdf 管理不同工具的版本，包括安装、列举、设置和卸载版本等操作。", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 03:43:53", "type": "section_detail", "page_metadata": {"title": "版本 | asdf", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "language": "zh-hans", "generator": "VitePress v1.6.3", "scrapeId": "19ccf1db-b0eb-4bed-be0f-f4538d0ebecd", "sourceURL": "https://asdf-vm.com/zh-hans/manage/versions.html", "url": "https://asdf-vm.com/zh-hans/manage/versions.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 绕过 asdf 垫片 in asdf-vm?\n\nAssistant: To 绕过 asdf 垫片 in asdf-vm, here's what you do:\n如果由于某种原因，你希望绕过 asdf 垫片，或者希望在进入项目目录时自动设置环境变量，则 [asdf-direnv](https://github.com/asdf-community/asdf-direnv) 插件可能会有所帮助。请务必查看其 README 文件了解更多详情。.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/zh-hans/manage/versions.html", "title": "管理版本", "description": "本页面介绍如何使用 asdf 管理不同工具的版本，包括安装、列举、设置和卸载版本等操作。", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 03:43:53", "type": "section_detail", "page_metadata": {"title": "版本 | asdf", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "language": "zh-hans", "generator": "VitePress v1.6.3", "scrapeId": "19ccf1db-b0eb-4bed-be0f-f4538d0ebecd", "sourceURL": "https://asdf-vm.com/zh-hans/manage/versions.html", "url": "https://asdf-vm.com/zh-hans/manage/versions.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you give me some code examples for 管理版本 in asdf-vm?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**安装版本**:\n\n```yaml\nasdf install <name> <version>\n# asdf install erlang 17.3\n```\n\nThis snippet shows you how to 安装版本, which is an important aspect of 管理版本.\n\n**安装最新稳定版本**:\n\n```yaml\nasdf install <name> latest\n# asdf install erlang latest\n```\n\nThis snippet shows you how to 安装最新稳定版本, which is an important aspect of 管理版本.\n\n**安装给定字符串开头的最新稳定版本**:\n\n```yaml\nasdf install <name> latest:<version>\n# asdf install erlang latest:17\n```\n\nThis snippet shows you how to 安装给定字符串开头的最新稳定版本, which is an important aspect of 管理版本.\n\n**列举已安装版本**:\n\n```yaml\nasdf list <name>\n# asdf list erlang\n```\n\nThis snippet shows you how to 列举已安装版本, which is an important aspect of 管理版本.\n\n**筛选出以给定字符串开头的版本**:\n\n```yaml\nasdf list <name> <version>\n# asdf list erlang 17\n```\n\nThis snippet shows you how to 筛选出以给定字符串开头的版本, which is an important aspect of 管理版本.\n\n**列举所有可用版本**:\n\n```yaml\nasdf list all <name>\n# asdf list all erlang\n```\n\nThis snippet shows you how to 列举所有可用版本, which is an important aspect of 管理版本.\n\n**筛选出以给定字符串开头的版本**:\n\n```yaml\nasdf list all <name> <version>\n# asdf list all erlang 17\n```\n\nThis snippet shows you how to 筛选出以给定字符串开头的版本, which is an important aspect of 管理版本.\n\n**显示最新稳定版本**:\n\n```yaml\nasdf latest <name>\n# asdf latest erlang\n```\n\nThis snippet shows you how to 显示最新稳定版本, which is an important aspect of 管理版本.\n\n**显示以给定字符串开头的最新稳定版本**:\n\n```yaml\nasdf latest <name> <version>\n# asdf latest erlang 17\n```\n\nThis snippet shows you how to 显示以给定字符串开头的最新稳定版本, which is an important aspect of 管理版本.\n\n**设置当前版本**:\n\n```yaml\nasdf global <name> <version> [<version>...]\nasdf shell <name> <version> [<version>...]\nasdf local <name> <version> [<version>...]\n# asdf global elixir 1.2.4\n\nasdf global <name> latest[:<version>]\nasdf local <name> latest[:<version>]\n# asdf global elixir latest\n```\n\nThis snippet shows you how to 设置当前版本, which is an important aspect of 管理版本.\n\n**回退到系统版本**:\n\n```yaml\nasdf local <name> system\n# asdf local python system\n```\n\nThis snippet shows you how to 回退到系统版本, which is an important aspect of 管理版本.\n\n**显示当前版本**:\n\n```yaml\nasdf current\n# asdf current\n# erlang 17.3 (set by /Users/kim/.tool-versions)\n# nodejs 6.11.5 (set by /Users/kim/cool-node-project/.tool-versions)\n\nasdf current <name>\n# asdf current erlang\n# 17.3 (set by /Users/kim/.tool-versions)\n```\n\nThis snippet shows you how to 显示当前版本, which is an important aspect of 管理版本.\n\n", "metadata": {"source_url": "https://asdf-vm.com/zh-hans/manage/versions.html", "title": "管理版本", "description": "本页面介绍如何使用 asdf 管理不同工具的版本，包括安装、列举、设置和卸载版本等操作。", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 03:43:53", "type": "code_examples", "page_metadata": {"title": "版本 | asdf", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "language": "zh-hans", "generator": "VitePress v1.6.3", "scrapeId": "19ccf1db-b0eb-4bed-be0f-f4538d0ebecd", "sourceURL": "https://asdf-vm.com/zh-hans/manage/versions.html", "url": "https://asdf-vm.com/zh-hans/manage/versions.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: What are some tips for using 管理版本 in asdf-vm effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\n如果一个插件支持从源代码下载和编译，可以指定 `ref:foo`。\n\n使用 `global`、 `local` 或者 `shell` 设置系统版本时，确保使用正确的命令。\n\n在执行命令时，可以设置 `ASDF_${TOOL}_VERSION` 环境变量以指定版本。\n\n使用 `which` 和 `where` 命令帮助解决脚本访问问题。\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://asdf-vm.com/zh-hans/manage/versions.html", "title": "管理版本", "description": "本页面介绍如何使用 asdf 管理不同工具的版本，包括安装、列举、设置和卸载版本等操作。", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 03:43:53", "type": "best_practices", "page_metadata": {"title": "版本 | asdf", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "language": "zh-hans", "generator": "VitePress v1.6.3", "scrapeId": "19ccf1db-b0eb-4bed-be0f-f4538d0ebecd", "sourceURL": "https://asdf-vm.com/zh-hans/manage/versions.html", "url": "https://asdf-vm.com/zh-hans/manage/versions.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you explain what プラグイン is in asdf-vm?\n\nAssistant: Sure, I'd be happy to explain プラグイン in asdf-vm.\n\n# プラグイン\n\nプラグインは、 `asdf` がNode.jsやRuby、Elixirなどの様々なツールを取り扱えるようにするためのものです。Here's a quick rundown of what this is about:\n\n## 追加\n\n下記コマンドでは、GitのURLからプラグインを追加します:\n\n```\nasdf plugin add <name> <git-url>\n# asdf plugin add elm https://github.com/vic/asdf-elm\n```\n\nまたは下記のコマンドで、プラグインリポジトリのショートネームを指定して追加します:\n\n```\nasdf plugin add <name>\n# asdf plugin add erlang\n```\n\n推奨\n\nリポジトリのショートネームに依存しないために、 `git-url` を使用することを推奨します。\n\n## インストール済みプラグイン一覧\n\n\n```\nasdf plugin list\n# asdf plugin list\n# java\n# nodejs\n```\n\n```\nasdf plugin list --urls\n# asdf plugin list\n# java            https://github.com/halcyon/asdf-java.git\n# nodejs          https://github.com/asdf-vm/asdf-nodejs.git\n```\n\n## 全プラグインのショートネーム一覧\n\n\n```\nasdf plugin list all\n```\n\n全プラグインのショートネーム一覧については、 [プラグインショートネームの一覧](https://github.com/asdf-vm/asdf-plugins) もご覧ください。\n\n## 更新\n\n\n```\nasdf plugin update --all\n```\n\n特定のプラグインパッケージを更新したい場合は、下記のように指定してください。\n\n```\nasdf plugin update <name>\n# asdf plugin update erlang\n```\n\nこの更新コマンドは、プラグインリポジトリの _origin_ の _デフォルトブランチ_ における _最新コミット_ を取得します。バージョニングされたプラグインの更新機能については、現在開発中です( [#916](https://github.com/asdf-vm/asdf/pull/916))。\n\n## 削除\n\n\n```\nasdf plugin remove <name>\n# asdf plugin remove erlang\n```\n\nプラグインを削除すると、当該プラグインでインストールされたすべてのツールが削除されます。これは、各ツールの未使用バージョンを手っ取り早くクリーンアップ/プルーニングするのに有用です。\n\n## ショートネームリポジトリの同期\n\nショートネームリポジトリはローカルマシンに同期され、定期的に更新されます。同期のタイミングの条件は、次のとおりです:\n\n- 同期イベントは、下記コマンドによってトリガーされます:\n  - `asdf plugin add <name>`\n  - `asdf plugin list all`\n- 構成設定の `disable_plugin_short_name_repository` オプションが `yes` の場合、同期は中止されます。詳しくは [asdfの構成設定](https://asdf-vm.com/ja-jp/manage/configuration.html) のリファレンスをご覧ください。\n- もし、過去 `X` 分の間に同期が行われていない場合、同期が開始されます。\n  - `X` のデフォルト値は `60` ですが、 `.asdfrc` ファイルの `plugin_repository_last_check_duration` オプションで変更することができます。詳しくは [asdfの構成設定](https://asdf-vm.com/ja-jp/manage/configuration.html) のリファレンスをご覧ください。\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://asdf-vm.com/ja-jp/manage/plugins.html", "title": "プラグイン", "description": "プラグインは、 `asdf` がNode.jsやRuby、Elixirなどの様々なツールを取り扱えるようにするためのものです。", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:44:22", "type": "overview", "page_metadata": {"generator": "VitePress v1.6.3", "language": "ja-jp", "title": "プラグイン | asdf", "description": "Manage multiple runtime versions with a single CLI tool", "viewport": "width=device-width,initial-scale=1", "scrapeId": "14118710-e2f0-49a5-8009-8858039683f3", "sourceURL": "https://asdf-vm.com/ja-jp/manage/plugins.html", "url": "https://asdf-vm.com/ja-jp/manage/plugins.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 追加 in asdf-vm?\n\nAssistant: To 追加 in asdf-vm, here's what you do:\n下記コマンドでは、GitのURLからプラグインを追加します:\n\n```\nasdf plugin add <name> <git-url>\n# asdf plugin add elm https://github.com/vic/asdf-elm\n```\n\nまたは下記のコマンドで、プラグインリポジトリのショートネームを指定して追加します:\n\n```\nasdf plugin add <name>\n# asdf plugin add erlang\n```\n\n推奨\n\nリポジトリのショートネームに依存しないために、 `git-url` を使用することを推奨します。.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ja-jp/manage/plugins.html", "title": "プラグイン", "description": "プラグインは、 `asdf` がNode.jsやRuby、Elixirなどの様々なツールを取り扱えるようにするためのものです。", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:44:22", "type": "section_detail", "page_metadata": {"generator": "VitePress v1.6.3", "language": "ja-jp", "title": "プラグイン | asdf", "description": "Manage multiple runtime versions with a single CLI tool", "viewport": "width=device-width,initial-scale=1", "scrapeId": "14118710-e2f0-49a5-8009-8858039683f3", "sourceURL": "https://asdf-vm.com/ja-jp/manage/plugins.html", "url": "https://asdf-vm.com/ja-jp/manage/plugins.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I インストール済みプラグイン一覧 in asdf-vm?\n\nAssistant: To インストール済みプラグイン一覧 in asdf-vm, here's what you do:\n\n```\nasdf plugin list\n# asdf plugin list\n# java\n# nodejs\n```\n\n```\nasdf plugin list --urls\n# asdf plugin list\n# java            https://github.com/halcyon/asdf-java.git\n# nodejs          https://github.com/asdf-vm/asdf-nodejs.git\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ja-jp/manage/plugins.html", "title": "プラグイン", "description": "プラグインは、 `asdf` がNode.jsやRuby、Elixirなどの様々なツールを取り扱えるようにするためのものです。", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:44:22", "type": "section_detail", "page_metadata": {"generator": "VitePress v1.6.3", "language": "ja-jp", "title": "プラグイン | asdf", "description": "Manage multiple runtime versions with a single CLI tool", "viewport": "width=device-width,initial-scale=1", "scrapeId": "14118710-e2f0-49a5-8009-8858039683f3", "sourceURL": "https://asdf-vm.com/ja-jp/manage/plugins.html", "url": "https://asdf-vm.com/ja-jp/manage/plugins.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 全プラグインのショートネーム一覧 in asdf-vm?\n\nAssistant: To 全プラグインのショートネーム一覧 in asdf-vm, here's what you do:\n\n```\nasdf plugin list all\n```\n\n全プラグインのショートネーム一覧については、 [プラグインショートネームの一覧](https://github.com/asdf-vm/asdf-plugins) もご覧ください。.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ja-jp/manage/plugins.html", "title": "プラグイン", "description": "プラグインは、 `asdf` がNode.jsやRuby、Elixirなどの様々なツールを取り扱えるようにするためのものです。", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:44:22", "type": "section_detail", "page_metadata": {"generator": "VitePress v1.6.3", "language": "ja-jp", "title": "プラグイン | asdf", "description": "Manage multiple runtime versions with a single CLI tool", "viewport": "width=device-width,initial-scale=1", "scrapeId": "14118710-e2f0-49a5-8009-8858039683f3", "sourceURL": "https://asdf-vm.com/ja-jp/manage/plugins.html", "url": "https://asdf-vm.com/ja-jp/manage/plugins.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 更新 in asdf-vm?\n\nAssistant: To 更新 in asdf-vm, here's what you do:\n\n```\nasdf plugin update --all\n```\n\n特定のプラグインパッケージを更新したい場合は、下記のように指定してください。\n\n```\nasdf plugin update <name>\n# asdf plugin update erlang\n```\n\nこの更新コマンドは、プラグインリポジトリの _origin_ の _デフォルトブランチ_ における _最新コミット_ を取得します。バージョニングされたプラグインの更新機能については、現在開発中です( [#916](https://github.com/asdf-vm/asdf/pull/916))。.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ja-jp/manage/plugins.html", "title": "プラグイン", "description": "プラグインは、 `asdf` がNode.jsやRuby、Elixirなどの様々なツールを取り扱えるようにするためのものです。", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:44:22", "type": "section_detail", "page_metadata": {"generator": "VitePress v1.6.3", "language": "ja-jp", "title": "プラグイン | asdf", "description": "Manage multiple runtime versions with a single CLI tool", "viewport": "width=device-width,initial-scale=1", "scrapeId": "14118710-e2f0-49a5-8009-8858039683f3", "sourceURL": "https://asdf-vm.com/ja-jp/manage/plugins.html", "url": "https://asdf-vm.com/ja-jp/manage/plugins.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 削除 in asdf-vm?\n\nAssistant: To 削除 in asdf-vm, here's what you do:\n\n```\nasdf plugin remove <name>\n# asdf plugin remove erlang\n```\n\nプラグインを削除すると、当該プラグインでインストールされたすべてのツールが削除されます。これは、各ツールの未使用バージョンを手っ取り早くクリーンアップ/プルーニングするのに有用です。.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ja-jp/manage/plugins.html", "title": "プラグイン", "description": "プラグインは、 `asdf` がNode.jsやRuby、Elixirなどの様々なツールを取り扱えるようにするためのものです。", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:44:22", "type": "section_detail", "page_metadata": {"generator": "VitePress v1.6.3", "language": "ja-jp", "title": "プラグイン | asdf", "description": "Manage multiple runtime versions with a single CLI tool", "viewport": "width=device-width,initial-scale=1", "scrapeId": "14118710-e2f0-49a5-8009-8858039683f3", "sourceURL": "https://asdf-vm.com/ja-jp/manage/plugins.html", "url": "https://asdf-vm.com/ja-jp/manage/plugins.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I ショートネームリポジトリの同期 in asdf-vm?\n\nAssistant: To ショートネームリポジトリの同期 in asdf-vm, here's what you do:\nショートネームリポジトリはローカルマシンに同期され、定期的に更新されます。同期のタイミングの条件は、次のとおりです:\n\n- 同期イベントは、下記コマンドによってトリガーされます:\n  - `asdf plugin add <name>`\n  - `asdf plugin list all`\n- 構成設定の `disable_plugin_short_name_repository` オプションが `yes` の場合、同期は中止されます。詳しくは [asdfの構成設定](https://asdf-vm.com/ja-jp/manage/configuration.html) のリファレンスをご覧ください。\n- もし、過去 `X` 分の間に同期が行われていない場合、同期が開始されます。\n  - `X` のデフォルト値は `60` ですが、 `.asdfrc` ファイルの `plugin_repository_last_check_duration` オプションで変更することができます。詳しくは [asdfの構成設定](https://asdf-vm.com/ja-jp/manage/configuration.html) のリファレンスをご覧ください。.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ja-jp/manage/plugins.html", "title": "プラグイン", "description": "プラグインは、 `asdf` がNode.jsやRuby、Elixirなどの様々なツールを取り扱えるようにするためのものです。", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:44:22", "type": "section_detail", "page_metadata": {"generator": "VitePress v1.6.3", "language": "ja-jp", "title": "プラグイン | asdf", "description": "Manage multiple runtime versions with a single CLI tool", "viewport": "width=device-width,initial-scale=1", "scrapeId": "14118710-e2f0-49a5-8009-8858039683f3", "sourceURL": "https://asdf-vm.com/ja-jp/manage/plugins.html", "url": "https://asdf-vm.com/ja-jp/manage/plugins.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you give me some code examples for プラグイン in asdf-vm?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**プラグインの追加 (GitのURLから)**:\n\n```yaml\nasdf plugin add <name> <git-url>\n# asdf plugin add elm https://github.com/vic/asdf-elm\n```\n\nThis snippet shows you how to プラグインの追加 (gitのurlから), which is an important aspect of プラグイン.\n\n**プラグインの追加 (ショートネーム)**:\n\n```yaml\nasdf plugin add <name>\n# asdf plugin add erlang\n```\n\nThis snippet shows you how to プラグインの追加 (ショートネーム), which is an important aspect of プラグイン.\n\n**インストール済みプラグイン一覧**:\n\n```yaml\nasdf plugin list\n```\n\nThis snippet shows you how to インストール済みプラグイン一覧, which is an important aspect of プラグイン.\n\n**インストール済みプラグイン一覧 (URL付き)**:\n\n```yaml\nasdf plugin list --urls\n```\n\nThis snippet shows you how to インストール済みプラグイン一覧 (url付き), which is an important aspect of プラグイン.\n\n**全プラグインのショートネーム一覧**:\n\n```yaml\nasdf plugin list all\n```\n\nThis snippet shows you how to 全プラグインのショートネーム一覧, which is an important aspect of プラグイン.\n\n**全プラグインの更新**:\n\n```yaml\nasdf plugin update --all\n```\n\nThis snippet shows you how to 全プラグインの更新, which is an important aspect of プラグイン.\n\n**特定プラグインの更新**:\n\n```yaml\nasdf plugin update <name>\n# asdf plugin update erlang\n```\n\nThis snippet shows you how to 特定プラグインの更新, which is an important aspect of プラグイン.\n\n**プラグインの削除**:\n\n```yaml\nasdf plugin remove <name>\n# asdf plugin remove erlang\n```\n\nThis snippet shows you how to プラグインの削除, which is an important aspect of プラグイン.\n\n", "metadata": {"source_url": "https://asdf-vm.com/ja-jp/manage/plugins.html", "title": "プラグイン", "description": "プラグインは、 `asdf` がNode.jsやRuby、Elixirなどの様々なツールを取り扱えるようにするためのものです。", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:44:22", "type": "code_examples", "page_metadata": {"generator": "VitePress v1.6.3", "language": "ja-jp", "title": "プラグイン | asdf", "description": "Manage multiple runtime versions with a single CLI tool", "viewport": "width=device-width,initial-scale=1", "scrapeId": "14118710-e2f0-49a5-8009-8858039683f3", "sourceURL": "https://asdf-vm.com/ja-jp/manage/plugins.html", "url": "https://asdf-vm.com/ja-jp/manage/plugins.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: What are some tips for using プラグイン in asdf-vm effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nリポジトリのショートネームに依存しないために、 `git-url` を使用することを推奨します。\n\nプラグインを削除すると、当該プラグインでインストールされたすべてのツールが削除されます。\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://asdf-vm.com/ja-jp/manage/plugins.html", "title": "プラグイン", "description": "プラグインは、 `asdf` がNode.jsやRuby、Elixirなどの様々なツールを取り扱えるようにするためのものです。", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:44:22", "type": "best_practices", "page_metadata": {"generator": "VitePress v1.6.3", "language": "ja-jp", "title": "プラグイン | asdf", "description": "Manage multiple runtime versions with a single CLI tool", "viewport": "width=device-width,initial-scale=1", "scrapeId": "14118710-e2f0-49a5-8009-8858039683f3", "sourceURL": "https://asdf-vm.com/ja-jp/manage/plugins.html", "url": "https://asdf-vm.com/ja-jp/manage/plugins.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you explain what 文档 & 网站 is in asdf-vm?\n\nAssistant: Sure, I'd be happy to explain 文档 & 网站 in asdf-vm.\n\n# 文档 & 网站\n\n文档 & 网站贡献指南。Here's a quick rundown of what this is about:\n\n## 初始化设置\n\n在 Github 上 fork `asdf` 并且/或者使用 Git 克隆默认分支：\n\nshell\n\n```\n# 克隆你 fork 的 asdf\ngit clone https://github.com/<GITHUB_USER>/asdf.git\n# 或者直接克隆 asdf\ngit clone https://github.com/asdf-vm/asdf.git\n```\n\n文档网站开发所需的工具都在文件 `docs/.tool-versions` 中使用 `asdf` 进行管理。使用以下命令添加插件：\n\nshell\n\n```\nasdf plugin add nodejs https://github.com/asdf-vm/asdf-nodejs\n```\n\n使用以下命令安装工具版本：\n\nshell\n\n```\nasdf install\n```\n\n- [Node.js](https://nodejs.org/zh-cn/)：基于 Chrome 的 V8 引擎的 JavaScript 运行环境。\n\n根据 `docs/package.json` 文件安装 Node.js 依赖：\n\nshell\n\n```\nnpm install\n```\n\n## 开发\n\n[Vuepress (v2)](https://v2.vuepress.vuejs.org/zh/) 是我们用来构建 asdf 文档网站的静态站点生成器（SSG）。它被选中来取代 [Docsify.js](https://docsify.js.org/#/zh-cn/)，因为我们希望在用户没有可用或未启用 JavaScript 时支持仅依靠 HTML。Docsify 无法做到这一点。除此之外，两者特性集合大致相同，重点是 Vuepress 可以用最少的配置编写 Markdown 文件。\n\n`package.json` 包含了开发所需的脚本：\n\n@ [code json{3-5}](https://asdf-vm.com/package.json)\n\n启动本地开发服务器：\n\nshell\n\n```\nnpm run dev\n```\n\n在提交之前格式化代码：\n\nshell\n\n```\nnpm run format\n```\n\n## 拉取请求、发布以及约定式提交\n\n`asdf` 正在使用依赖 PR 标题中的约定式提交的自动化发布流水线。具体的文档可以查看 [核心贡献指南](https://asdf-vm.com/zh-hans/contribute/core.html).\n\n当为文档更改创建 PR 请求时，请确保 PR 标题使用了约定式提交类型 `docs` 以及 `docs: <description>` 的格式。\n\n## Vuepress\n\n网站的配置包含在几个 JavaScript 文件中，其中 JS 对象用于表示配置。它们是：\n\n- `docs/.vuepress/config.js`：网站的根配置文件。请查看 [Vuepress 文档](https://v2.vuepress.vuejs.org/zh/guide/configuration.html) 了解更多详情。\n\n为了简化根配置文件，更大的 JS 对象表示 _导航栏和侧边栏_ 配置已经被提取并按照语言类型分隔开来。请参考以下文件：\n\n- `docs/.vuepress/navbar.js`\n- `docs/.vuepress/sidebar.js`\n\n这些配置的官方文档位于 [默认主题参考](https://v2.vuepress.vuejs.org/zh/reference/default-theme/config.html)。\n\n## I18n 国际化\n\nVuepress 有一流的国际化支持。根配置文件 `docs/.vuepress/config.js` 定义了支持的语言类型及其 URL、在选择下拉菜单中的标题以及导航栏/侧边栏配置引用。\n\n导航栏/侧边栏配置在上述配置文件中捕获，按语言类型分隔开并单独导出。\n\n每种语言的 markdown 内容必须位于与根配置文件中 `locale` 键同名的目录位置。也就是：\n\njs\n\n```\n{\n  ...\n  themeConfig: {\n    locales: {\n      \"/\": {\n        selectLanguageName: \"English (US)\",\n        sidebar: sidebar.en,\n        navbar: navbar.en\n      },\n      \"/pt-BR/\": {\n        selectLanguageName: \"Brazilian Portuguese\",\n        sidebar: sidebar.pt_br,\n        navbar: navbar.pt_br\n      }\n    }\n  }\n}\n```\n\n`/pt-BR/` 将要求 markdown 文件的同一集合位于 `docs/pt-BR/` 目录下，如下所示：\n\nshell\n\n```\ndocs\n├─ README.md\n├─ foo.md\n├─ nested\n│  └─ README.md\n└─ pt-BR\n   ├─ README.md\n   ├─ foo.md\n   └─ nested\n      └─ README.md\n```\n\n请查看 [Vuepress i18n 国际化官方文档](https://v2.vuepress.vuejs.org/zh/guide/i18n.html#%E7%AB%99%E7%82%B9%E5%A4%9A%E8%AF%AD%E8%A8%80%E9%85%8D%E7%BD%AE) 了解更多详情。\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://asdf-vm.com/zh-hans/contribute/documentation.html", "title": "文档 & 网站", "description": "文档 & 网站贡献指南。", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:44:45", "type": "overview", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "language": "zh-hans", "description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "title": "文档 & 网站 | asdf", "scrapeId": "7aa5b3e3-3e97-49dc-b25a-cbe120d2281d", "sourceURL": "https://asdf-vm.com/zh-hans/contribute/documentation.html", "url": "https://asdf-vm.com/zh-hans/contribute/documentation.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 初始化设置 in asdf-vm?\n\nAssistant: To 初始化设置 in asdf-vm, here's what you do:\n在 Github 上 fork `asdf` 并且/或者使用 Git 克隆默认分支：\n\nshell\n\n```\n# 克隆你 fork 的 asdf\ngit clone https://github.com/<GITHUB_USER>/asdf.git\n# 或者直接克隆 asdf\ngit clone https://github.com/asdf-vm/asdf.git\n```\n\n文档网站开发所需的工具都在文件 `docs/.tool-versions` 中使用 `asdf` 进行管理。使用以下命令添加插件：\n\nshell\n\n```\nasdf plugin add nodejs https://github.com/asdf-vm/asdf-nodejs\n```\n\n使用以下命令安装工具版本：\n\nshell\n\n```\nasdf install\n```\n\n- [Node.js](https://nodejs.org/zh-cn/)：基于 Chrome 的 V8 引擎的 JavaScript 运行环境。\n\n根据 `docs/package.json` 文件安装 Node.js 依赖：\n\nshell\n\n```\nnpm install\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/zh-hans/contribute/documentation.html", "title": "文档 & 网站", "description": "文档 & 网站贡献指南。", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:44:45", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "language": "zh-hans", "description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "title": "文档 & 网站 | asdf", "scrapeId": "7aa5b3e3-3e97-49dc-b25a-cbe120d2281d", "sourceURL": "https://asdf-vm.com/zh-hans/contribute/documentation.html", "url": "https://asdf-vm.com/zh-hans/contribute/documentation.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 开发 in asdf-vm?\n\nAssistant: To 开发 in asdf-vm, here's what you do:\n[Vuepress (v2)](https://v2.vuepress.vuejs.org/zh/) 是我们用来构建 asdf 文档网站的静态站点生成器（SSG）。它被选中来取代 [Docsify.js](https://docsify.js.org/#/zh-cn/)，因为我们希望在用户没有可用或未启用 JavaScript 时支持仅依靠 HTML。Docsify 无法做到这一点。除此之外，两者特性集合大致相同，重点是 Vuepress 可以用最少的配置编写 Markdown 文件。\n\n`package.json` 包含了开发所需的脚本：\n\n@ [code json{3-5}](https://asdf-vm.com/package.json)\n\n启动本地开发服务器：\n\nshell\n\n```\nnpm run dev\n```\n\n在提交之前格式化代码：\n\nshell\n\n```\nnpm run format\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/zh-hans/contribute/documentation.html", "title": "文档 & 网站", "description": "文档 & 网站贡献指南。", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:44:45", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "language": "zh-hans", "description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "title": "文档 & 网站 | asdf", "scrapeId": "7aa5b3e3-3e97-49dc-b25a-cbe120d2281d", "sourceURL": "https://asdf-vm.com/zh-hans/contribute/documentation.html", "url": "https://asdf-vm.com/zh-hans/contribute/documentation.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 拉取请求、发布以及约定式提交 in asdf-vm?\n\nAssistant: To 拉取请求、发布以及约定式提交 in asdf-vm, here's what you do:\n`asdf` 正在使用依赖 PR 标题中的约定式提交的自动化发布流水线。具体的文档可以查看 [核心贡献指南](https://asdf-vm.com/zh-hans/contribute/core.html).\n\n当为文档更改创建 PR 请求时，请确保 PR 标题使用了约定式提交类型 `docs` 以及 `docs: <description>` 的格式。.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/zh-hans/contribute/documentation.html", "title": "文档 & 网站", "description": "文档 & 网站贡献指南。", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:44:45", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "language": "zh-hans", "description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "title": "文档 & 网站 | asdf", "scrapeId": "7aa5b3e3-3e97-49dc-b25a-cbe120d2281d", "sourceURL": "https://asdf-vm.com/zh-hans/contribute/documentation.html", "url": "https://asdf-vm.com/zh-hans/contribute/documentation.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I vuepress in asdf-vm?\n\nAssistant: To vuepress in asdf-vm, here's what you do:\n网站的配置包含在几个 JavaScript 文件中，其中 JS 对象用于表示配置。它们是：\n\n- `docs/.vuepress/config.js`：网站的根配置文件。请查看 [Vuepress 文档](https://v2.vuepress.vuejs.org/zh/guide/configuration.html) 了解更多详情。\n\n为了简化根配置文件，更大的 JS 对象表示 _导航栏和侧边栏_ 配置已经被提取并按照语言类型分隔开来。请参考以下文件：\n\n- `docs/.vuepress/navbar.js`\n- `docs/.vuepress/sidebar.js`\n\n这些配置的官方文档位于 [默认主题参考](https://v2.vuepress.vuejs.org/zh/reference/default-theme/config.html)。.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/zh-hans/contribute/documentation.html", "title": "文档 & 网站", "description": "文档 & 网站贡献指南。", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:44:45", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "language": "zh-hans", "description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "title": "文档 & 网站 | asdf", "scrapeId": "7aa5b3e3-3e97-49dc-b25a-cbe120d2281d", "sourceURL": "https://asdf-vm.com/zh-hans/contribute/documentation.html", "url": "https://asdf-vm.com/zh-hans/contribute/documentation.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I i18n 国际化 in asdf-vm?\n\nAssistant: To i18n 国际化 in asdf-vm, here's what you do:\nVuepress 有一流的国际化支持。根配置文件 `docs/.vuepress/config.js` 定义了支持的语言类型及其 URL、在选择下拉菜单中的标题以及导航栏/侧边栏配置引用。\n\n导航栏/侧边栏配置在上述配置文件中捕获，按语言类型分隔开并单独导出。\n\n每种语言的 markdown 内容必须位于与根配置文件中 `locale` 键同名的目录位置。也就是：\n\njs\n\n```\n{\n  ...\n  themeConfig: {\n    locales: {\n      \"/\": {\n        selectLanguageName: \"English (US)\",\n        sidebar: sidebar.en,\n        navbar: navbar.en\n      },\n      \"/pt-BR/\": {\n        selectLanguageName: \"Brazilian Portuguese\",\n        sidebar: sidebar.pt_br,\n        navbar: navbar.pt_br\n      }\n    }\n  }\n}\n```\n\n`/pt-BR/` 将要求 markdown 文件的同一集合位于 `docs/pt-BR/` 目录下，如下所示：\n\nshell\n\n```\ndocs\n├─ README.md\n├─ foo.md\n├─ nested\n│  └─ README.md\n└─ pt-BR\n   ├─ README.md\n   ├─ foo.md\n   └─ nested\n      └─ README.md\n```\n\n请查看 [Vuepress i18n 国际化官方文档](https://v2.vuepress.vuejs.org/zh/guide/i18n.html#%E7%AB%99%E7%82%B9%E5%A4%9A%E8%AF%AD%E8%A8%80%E9%85%8D%E7%BD%AE) 了解更多详情。.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/zh-hans/contribute/documentation.html", "title": "文档 & 网站", "description": "文档 & 网站贡献指南。", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:44:45", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "language": "zh-hans", "description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "title": "文档 & 网站 | asdf", "scrapeId": "7aa5b3e3-3e97-49dc-b25a-cbe120d2281d", "sourceURL": "https://asdf-vm.com/zh-hans/contribute/documentation.html", "url": "https://asdf-vm.com/zh-hans/contribute/documentation.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you give me some code examples for 文档 & 网站 in asdf-vm?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**克隆 asdf**:\n\n```yaml\ngit clone https://github.com/<GITHUB_USER>/asdf.git\n```\n\nThis snippet shows you how to 克隆 asdf, which is an important aspect of 文档 & 网站.\n\n**克隆 asdf 默认分支**:\n\n```yaml\ngit clone https://github.com/asdf-vm/asdf.git\n```\n\nThis snippet shows you how to 克隆 asdf 默认分支, which is an important aspect of 文档 & 网站.\n\n**添加插件**:\n\n```yaml\nasdf plugin add nodejs https://github.com/asdf-vm/asdf-nodejs\n```\n\nThis snippet shows you how to 添加插件, which is an important aspect of 文档 & 网站.\n\n**安装工具版本**:\n\n```yaml\nasdf install\n```\n\nThis snippet shows you how to 安装工具版本, which is an important aspect of 文档 & 网站.\n\n**安装 Node.js 依赖**:\n\n```yaml\nnpm install\n```\n\nThis snippet shows you how to 安装 node.js 依赖, which is an important aspect of 文档 & 网站.\n\n**启动本地开发服务器**:\n\n```yaml\nnpm run dev\n```\n\nThis snippet shows you how to 启动本地开发服务器, which is an important aspect of 文档 & 网站.\n\n**格式化代码**:\n\n```yaml\nnpm run format\n```\n\nThis snippet shows you how to 格式化代码, which is an important aspect of 文档 & 网站.\n\n", "metadata": {"source_url": "https://asdf-vm.com/zh-hans/contribute/documentation.html", "title": "文档 & 网站", "description": "文档 & 网站贡献指南。", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:44:45", "type": "code_examples", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "language": "zh-hans", "description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "title": "文档 & 网站 | asdf", "scrapeId": "7aa5b3e3-3e97-49dc-b25a-cbe120d2281d", "sourceURL": "https://asdf-vm.com/zh-hans/contribute/documentation.html", "url": "https://asdf-vm.com/zh-hans/contribute/documentation.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: What are some tips for using 文档 & 网站 in asdf-vm effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\n确保 PR 标题使用了约定式提交类型 `docs` 以及 `docs: <description>` 的格式。\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://asdf-vm.com/zh-hans/contribute/documentation.html", "title": "文档 & 网站", "description": "文档 & 网站贡献指南。", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:44:45", "type": "best_practices", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "language": "zh-hans", "description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "title": "文档 & 网站 | asdf", "scrapeId": "7aa5b3e3-3e97-49dc-b25a-cbe120d2281d", "sourceURL": "https://asdf-vm.com/zh-hans/contribute/documentation.html", "url": "https://asdf-vm.com/zh-hans/contribute/documentation.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you explain what イントロダクション is in asdf-vm?\n\nAssistant: Sure, I'd be happy to explain イントロダクション in asdf-vm.\n\n# イントロダクション\n\n`asdf` は、ツールのためのバージョンマネージャです。すべてのツールのバージョンは単一のファイル( `.tool-versions`)内で定義されるため、プロジェクトのGitリポジトリにチェックインして共有することで、チーム全員に同じーバージョンのツールを使ってもらえるようになります。Here's a quick rundown of what this is about:\n\n## どうやって動いているの\n\nシェル上で `asdf` コアがセットアップすると、特定のツールを管理するためのプラグインをインストールすることができるようになります。プラグインによってツールがインストールされると、インストールされる実行ファイルごとに [Shim](https://en.wikipedia.org/wiki/Shim_(computing)) が作成されます。これらの実行ファイルを実行しようとすると、代わりにShimが実行され、 `.tool-versions` で定義されているバージョンを `asdf` が認識して、当該バージョンが実行されます。\n\n## 関連プロジェクト\n\n### nvm / n / rbenv etc\n[nvm](https://github.com/nvm-sh/nvm)、 [n](https://github.com/tj/n)、および [rbenv](https://github.com/rbenv/rbenv) のようなツールはすべて、ツールによってインストールされる実行ファイルのShimを作成するシェルスクリプトです。\n\n`asdf` はこれらのツールと非常に似ていて、ツール/ランタイムのバージョン管理という分野では競合しています。 `asdf` はプラグインシステムを採用し、他のツールと差別化することで、ツール/ランタイムごとのマネージャ、マネージャごとの異なるコマンド、そしてリポジトリ内の様々な `*-version` ファイルといったものを排除しています。\n\n### direnv\n> シェルに、ディレクトリごとに環境変数をロード/アンロードできる機能を付け加えます。\n\n`asdf` は環境変数を管理することはしませんが、direnvの動作を `asdf` に統合する [`asdf-direnv`](https://github.com/asdf-community/asdf-direnv) プラグインが存在します。\n\n詳しくは [direnvのドキュメント](https://direnv.net/) をご覧ください。\n\n### Homebrew\n> macOS(またはLinux)のためのパッケージマネージャー\n\nHomebrewは、パッケージとその上位の依存関係を管理します。 `asdf` は上位の依存関係を管理することはしませんし、パッケージマネージャでもありません。それらの管理はユーザが負担することとなりますが、 `asdf` はなるべく依存関係のリストを小さく保つように努めています。\n\n詳しくは [Homebrewのドキュメント](https://brew.sh/) をご覧ください。\n\n### NixOS\n> Nixは、パッケージ管理とシステム構成に独自のアプローチを取り入れたツールです。\n\nNixOSは、各ツールの依存関係ツリー全体でパッケージのバージョンを正確に管理することで、真に再現可能な環境を構築することを目指しています。 `asdf` でそのようなことはできません。NixOSは、独自のプログラミング言語、たくさんのCLIツール、そして60,000を超えるパッケージコレクションによって、それらの機能を支えています。\n\n繰り返しになりますが、 `asdf` は上位の依存関係を管理することはしませんし、パッケージマネージャでもありません。\n\n詳しくは [NixOSのドキュメント](https://nixos.org/guides/how-nix-works.html) をご覧ください。\n\n## なぜasdfを使うの?\n\n`asdf` は、プラグインシステムによって **多くの** ツールをサポートしており、シェル構成にたった1行の **シェル** スクリプトを記述するだけで使えるというシンプルさ・親しみやすさによって、チームが **確実に** 同じバージョンのツールを使用することを保証できます。\n\nNote\n\n`asdf` はシステムのパッケージマネージャになることを目指してはいません。あくまで、ツールのバージョンマネージャです。プラグインを作成することで、どのようなツールでも `asdf` で管理できるようになりますが、それがそのツールにとって最善の方法であるとは限りませんのでご注意ください。\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://asdf-vm.com/ja-jp/guide/introduction.html", "title": "イントロダクション", "description": "`asdf` は、ツールのためのバージョンマネージャです。すべてのツールのバージョンは単一のファイル( `.tool-versions`)内で定義されるため、プロジェクトのGitリポジトリにチェックインして共有することで、チーム全員に同じーバージョンのツールを使ってもらえるようになります。", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:45:11", "type": "overview", "page_metadata": {"language": "ja-jp", "viewport": "width=device-width,initial-scale=1", "title": "イントロダクション | asdf", "generator": "VitePress v1.6.3", "description": "Manage multiple runtime versions with a single CLI tool", "scrapeId": "cac8a5ea-c806-40b2-b374-d61ea7d02e59", "sourceURL": "https://asdf-vm.com/ja-jp/guide/introduction.html", "url": "https://asdf-vm.com/ja-jp/guide/introduction.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I どうやって動いているの in asdf-vm?\n\nAssistant: To どうやって動いているの in asdf-vm, here's what you do:\nシェル上で `asdf` コアがセットアップすると、特定のツールを管理するためのプラグインをインストールすることができるようになります。プラグインによってツールがインストールされると、インストールされる実行ファイルごとに [Shim](https://en.wikipedia.org/wiki/Shim_(computing)) が作成されます。これらの実行ファイルを実行しようとすると、代わりにShimが実行され、 `.tool-versions` で定義されているバージョンを `asdf` が認識して、当該バージョンが実行されます。.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ja-jp/guide/introduction.html", "title": "イントロダクション", "description": "`asdf` は、ツールのためのバージョンマネージャです。すべてのツールのバージョンは単一のファイル( `.tool-versions`)内で定義されるため、プロジェクトのGitリポジトリにチェックインして共有することで、チーム全員に同じーバージョンのツールを使ってもらえるようになります。", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:45:11", "type": "section_detail", "page_metadata": {"language": "ja-jp", "viewport": "width=device-width,initial-scale=1", "title": "イントロダクション | asdf", "generator": "VitePress v1.6.3", "description": "Manage multiple runtime versions with a single CLI tool", "scrapeId": "cac8a5ea-c806-40b2-b374-d61ea7d02e59", "sourceURL": "https://asdf-vm.com/ja-jp/guide/introduction.html", "url": "https://asdf-vm.com/ja-jp/guide/introduction.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 関連プロジェクト in asdf-vm?\n\nAssistant: To 関連プロジェクト in asdf-vm, here's what you do:\n### nvm / n / rbenv etc\n[nvm](https://github.com/nvm-sh/nvm)、 [n](https://github.com/tj/n)、および [rbenv](https://github.com/rbenv/rbenv) のようなツールはすべて、ツールによってインストールされる実行ファイルのShimを作成するシェルスクリプトです。\n\n`asdf` はこれらのツールと非常に似ていて、ツール/ランタイムのバージョン管理という分野では競合しています。 `asdf` はプラグインシステムを採用し、他のツールと差別化することで、ツール/ランタイムごとのマネージャ、マネージャごとの異なるコマンド、そしてリポジトリ内の様々な `*-version` ファイルといったものを排除しています。\n\n### direnv\n> シェルに、ディレクトリごとに環境変数をロード/アンロードできる機能を付け加えます。\n\n`asdf` は環境変数を管理することはしませんが、direnvの動作を `asdf` に統合する [`asdf-direnv`](https://github.com/asdf-community/asdf-direnv) プラグインが存在します。\n\n詳しくは [direnvのドキュメント](https://direnv.net/) をご覧ください。\n\n### Homebrew\n> macOS(またはLinux)のためのパッケージマネージャー\n\nHomebrewは、パッケージとその上位の依存関係を管理します。 `asdf` は上位の依存関係を管理することはしませんし、パッケージマネージャでもありません。それらの管理はユーザが負担することとなりますが、 `asdf` はなるべく依存関係のリストを小さく保つように努めています。\n\n詳しくは [Homebrewのドキュメント](https://brew.sh/) をご覧ください。\n\n### NixOS\n> Nixは、パッケージ管理とシステム構成に独自のアプローチを取り入れたツールです。\n\nNixOSは、各ツールの依存関係ツリー全体でパッケージのバージョンを正確に管理することで、真に再現可能な環境を構築することを目指しています。 `asdf` でそのようなことはできません。NixOSは、独自のプログラミング言語、たくさんのCLIツール、そして60,000を超えるパッケージコレクションによって、それらの機能を支えています。\n\n繰り返しになりますが、 `asdf` は上位の依存関係を管理することはしませんし、パッケージマネージャでもありません。\n\n詳しくは [NixOSのドキュメント](https://nixos.org/guides/how-nix-works.html) をご覧ください。.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ja-jp/guide/introduction.html", "title": "イントロダクション", "description": "`asdf` は、ツールのためのバージョンマネージャです。すべてのツールのバージョンは単一のファイル( `.tool-versions`)内で定義されるため、プロジェクトのGitリポジトリにチェックインして共有することで、チーム全員に同じーバージョンのツールを使ってもらえるようになります。", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:45:11", "type": "section_detail", "page_metadata": {"language": "ja-jp", "viewport": "width=device-width,initial-scale=1", "title": "イントロダクション | asdf", "generator": "VitePress v1.6.3", "description": "Manage multiple runtime versions with a single CLI tool", "scrapeId": "cac8a5ea-c806-40b2-b374-d61ea7d02e59", "sourceURL": "https://asdf-vm.com/ja-jp/guide/introduction.html", "url": "https://asdf-vm.com/ja-jp/guide/introduction.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I なぜasdfを使うの? in asdf-vm?\n\nAssistant: To なぜasdfを使うの? in asdf-vm, here's what you do:\n`asdf` は、プラグインシステムによって **多くの** ツールをサポートしており、シェル構成にたった1行の **シェル** スクリプトを記述するだけで使えるというシンプルさ・親しみやすさによって、チームが **確実に** 同じバージョンのツールを使用することを保証できます。\n\nNote\n\n`asdf` はシステムのパッケージマネージャになることを目指してはいません。あくまで、ツールのバージョンマネージャです。プラグインを作成することで、どのようなツールでも `asdf` で管理できるようになりますが、それがそのツールにとって最善の方法であるとは限りませんのでご注意ください。.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ja-jp/guide/introduction.html", "title": "イントロダクション", "description": "`asdf` は、ツールのためのバージョンマネージャです。すべてのツールのバージョンは単一のファイル( `.tool-versions`)内で定義されるため、プロジェクトのGitリポジトリにチェックインして共有することで、チーム全員に同じーバージョンのツールを使ってもらえるようになります。", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:45:11", "type": "section_detail", "page_metadata": {"language": "ja-jp", "viewport": "width=device-width,initial-scale=1", "title": "イントロダクション | asdf", "generator": "VitePress v1.6.3", "description": "Manage multiple runtime versions with a single CLI tool", "scrapeId": "cac8a5ea-c806-40b2-b374-d61ea7d02e59", "sourceURL": "https://asdf-vm.com/ja-jp/guide/introduction.html", "url": "https://asdf-vm.com/ja-jp/guide/introduction.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: What are some tips for using イントロダクション in asdf-vm effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\n`asdf` はシステムのパッケージマネージャになることを目指してはいません。あくまで、ツールのバージョンマネージャです。\n\nプラグインを作成することで、どのようなツールでも `asdf` で管理できるようになりますが、それがそのツールにとって最善の方法であるとは限りませんのでご注意ください。\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://asdf-vm.com/ja-jp/guide/introduction.html", "title": "イントロダクション", "description": "`asdf` は、ツールのためのバージョンマネージャです。すべてのツールのバージョンは単一のファイル( `.tool-versions`)内で定義されるため、プロジェクトのGitリポジトリにチェックインして共有することで、チーム全員に同じーバージョンのツールを使ってもらえるようになります。", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:45:11", "type": "best_practices", "page_metadata": {"language": "ja-jp", "viewport": "width=device-width,initial-scale=1", "title": "イントロダクション | asdf", "generator": "VitePress v1.6.3", "description": "Manage multiple runtime versions with a single CLI tool", "scrapeId": "cac8a5ea-c806-40b2-b374-d61ea7d02e59", "sourceURL": "https://asdf-vm.com/ja-jp/guide/introduction.html", "url": "https://asdf-vm.com/ja-jp/guide/introduction.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you explain what asdf 核心贡献指南 is in asdf-vm?\n\nAssistant: Sure, I'd be happy to explain asdf 核心贡献指南 in asdf-vm.\n\n# asdf 核心贡献指南\n\n本页面提供了关于如何为 asdf 进行核心贡献的指南，包括初始化安装、开发、Bats 测试、拉取请求、发布以及约定式提交等内容。Here's a quick rundown of what this is about:\n\n## 初始化安装\n\n在 Github 上 fork `asdf` 并且/或者使用 Git 克隆默认分支：\n\n```\n# 克隆你 fork 的 asdf\ngit clone https://github.com/<GITHUB_USER>/asdf.git\n# 或者直接克隆 asdf\ngit clone https://github.com/asdf-vm/asdf.git\n```\n\n核心开发所需的工具都列举在这个存储库的 `.tool-versions` 文件中。如果你想要使用 `asdf` 自身来管理它，请使用以下命令添加这些插件：\n\n```\nasdf plugin add bats https://github.com/timgluz/asdf-bats.git\nasdf plugin add shellcheck https://github.com/luizm/asdf-shellcheck.git\nasdf plugin add shfmt https://github.com/luizm/asdf-shfmt.git\n```\n\n使用以下命令安装这些版本来开发 `asdf`：\n\n```\nasdf install\n```\n\n在本地机器的开发过程中不使用 `asdf` 来管理工具 _或许_ 对你有帮助，因为你可能需要打破某些可能会影响到你的开发工具链的功能。以下是所需工具的原始列表：\n\n- [bats-core](https://github.com/bats-core/bats-core)：Bash 自动化测试系统，用于单元测试 Bash 或 POSIX 兼容脚本。\n- [shellcheck](https://github.com/koalaman/shellcheck)：Shell 脚本的静态分析工具。\n- [shfmt](https://github.com/mvdan/sh)：支持 Bash 的 Shell 解析器、格式化器和解释器；包含 shfmt。\n\n## 开发\n\n如果你想要在不更改已安装的 `asdf` 的情况下尝试应用你的更改，可以将 `$ASDF_DIR` 变量设置为克隆存储库的路径，并临时将目录的 `bin` 和 `shims` 目录添加到你的路径中。\n\n最好在提交或推送到远程之前，在本地做好格式化、lint 检查和测试你的代码。可以使用以下脚本/命令：\n\n```\n# 脚本检查\n./scripts/shellcheck.bash\n\n# 格式化\n./scripts/shfmt.bash\n\n# 测试：所有案例\nbats test/\n# 测试：特定命令\nbats test/list_commands.bash\n```\n\n提示\n\n**增加测试！** \\- 新特性需要进行测试，并加快错误修复的审查速度。请在创建拉取请求之前覆盖新的代码路径。查看 [bats-core 文档](https://bats-core.readthedocs.io/en/stable/index.html) 了解更多。\n\n## Bats 测试\n\n**强烈建议** 在编写测试之前检查现有的测试套件和 [bats-core 文档](https://bats-core.readthedocs.io/en/stable/index.html)。\n\nBats 调试有时可能很困难。使用带有 `-t` 标识的 TAP 输出将使你能够在测试执行期间打印带有特殊文件描述符 `>&3` 的输出，从而简化调试。例如：\n\n```\n# test/some_tests.bats\n\nprintf \"%s\\n\" \"Will not be printed during bats test/some_tests.bats\"\nprintf \"%s\\n\" \"Will be printed during bats -t test/some_tests.bats\" >&3\n```\n\n进一步相关文档请查看 bats-core 的 [Printing to the Terminal](https://bats-core.readthedocs.io/en/stable/writing-tests.html#printing-to-the-terminal) 部分.\n\n## 拉取请求、发布以及约定式提交\n\n`asdf` 正在使用一个名为 [Release Please](https://github.com/googleapis/release-please) 的自动发布工具来自动碰撞 [SemVer](https://semver.org/) 版本并生成 [变更日志](https://github.com/asdf-vm/asdf/blob/master/CHANGELOG.md)。这个信息是通过读取自上次发布以来的提交历史记录来确定的。\n\n[约定式提交](https://www.conventionalcommits.org/zh-hans/) 定义了拉取请求标题的格式，该标题成为默认分支上的提交消息格式。这是通过 Github Action [`amannn/action-semantic-pull-request`](https://github.com/amannn/action-semantic-pull-request) 强制执行的。\n\n约定式提交遵循以下格式：\n\n```\n<type>[optional scope][optional !]: <description>\n\n<!-- 例子 -->\nfix: some fix\nfeat: a new feature\ndocs: some documentation update\ndocs(website): some change for the website\nfeat!: feature with breaking change\n```\n\n`<types>` 的所有类型包含： `feat`、 `fix`、 `docs`、 `style`、 `refactor`、 `perf`、 `test`、 `build`、 `ci`、 `chore`、 `revert`。\n\n- `!`：表示重大更改\n- `fix`：将会创建一个新的 SemVer `patch` 补丁\n- `feat`：将会创建一个新的 SemVer `minor` 小版本\n- `<type>!`：将会创建一个新的 SemVer `major` 大版本\n\n拉取请求标题必须遵循这种格式。\n\n提示\n\n请使用约定式提交信息格式作为拉取请求标题。\n\n## Docker 镜像\n\n[asdf-alpine](https://github.com/vic/asdf-alpine) 和 [asdf-ubuntu](https://github.com/vic/asdf-ubuntu) 项目正在努力提供一些 asdf 工具的容器化镜像。你可以使用这些容器镜像作为开发服务器的基础镜像，或者运行生产应用。\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://asdf-vm.com/zh-hans/contribute/core.html", "title": "asdf 核心贡献指南", "description": "本页面提供了关于如何为 asdf 进行核心贡献的指南，包括初始化安装、开发、Bats 测试、拉取请求、发布以及约定式提交等内容。", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:45:53", "type": "overview", "page_metadata": {"description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "title": "asdf", "viewport": "width=device-width,initial-scale=1", "language": "zh-hans", "scrapeId": "8f7bcb11-448c-42f1-ace7-ef20f30901cd", "sourceURL": "https://asdf-vm.com/zh-hans/contribute/core.html", "url": "https://asdf-vm.com/zh-hans/contribute/core.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 初始化安装 in asdf-vm?\n\nAssistant: To 初始化安装 in asdf-vm, here's what you do:\n在 Github 上 fork `asdf` 并且/或者使用 Git 克隆默认分支：\n\n```\n# 克隆你 fork 的 asdf\ngit clone https://github.com/<GITHUB_USER>/asdf.git\n# 或者直接克隆 asdf\ngit clone https://github.com/asdf-vm/asdf.git\n```\n\n核心开发所需的工具都列举在这个存储库的 `.tool-versions` 文件中。如果你想要使用 `asdf` 自身来管理它，请使用以下命令添加这些插件：\n\n```\nasdf plugin add bats https://github.com/timgluz/asdf-bats.git\nasdf plugin add shellcheck https://github.com/luizm/asdf-shellcheck.git\nasdf plugin add shfmt https://github.com/luizm/asdf-shfmt.git\n```\n\n使用以下命令安装这些版本来开发 `asdf`：\n\n```\nasdf install\n```\n\n在本地机器的开发过程中不使用 `asdf` 来管理工具 _或许_ 对你有帮助，因为你可能需要打破某些可能会影响到你的开发工具链的功能。以下是所需工具的原始列表：\n\n- [bats-core](https://github.com/bats-core/bats-core)：Bash 自动化测试系统，用于单元测试 Bash 或 POSIX 兼容脚本。\n- [shellcheck](https://github.com/koalaman/shellcheck)：Shell 脚本的静态分析工具。\n- [shfmt](https://github.com/mvdan/sh)：支持 Bash 的 Shell 解析器、格式化器和解释器；包含 shfmt。.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/zh-hans/contribute/core.html", "title": "asdf 核心贡献指南", "description": "本页面提供了关于如何为 asdf 进行核心贡献的指南，包括初始化安装、开发、Bats 测试、拉取请求、发布以及约定式提交等内容。", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:45:53", "type": "section_detail", "page_metadata": {"description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "title": "asdf", "viewport": "width=device-width,initial-scale=1", "language": "zh-hans", "scrapeId": "8f7bcb11-448c-42f1-ace7-ef20f30901cd", "sourceURL": "https://asdf-vm.com/zh-hans/contribute/core.html", "url": "https://asdf-vm.com/zh-hans/contribute/core.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 开发 in asdf-vm?\n\nAssistant: To 开发 in asdf-vm, here's what you do:\n如果你想要在不更改已安装的 `asdf` 的情况下尝试应用你的更改，可以将 `$ASDF_DIR` 变量设置为克隆存储库的路径，并临时将目录的 `bin` 和 `shims` 目录添加到你的路径中。\n\n最好在提交或推送到远程之前，在本地做好格式化、lint 检查和测试你的代码。可以使用以下脚本/命令：\n\n```\n# 脚本检查\n./scripts/shellcheck.bash\n\n# 格式化\n./scripts/shfmt.bash\n\n# 测试：所有案例\nbats test/\n# 测试：特定命令\nbats test/list_commands.bash\n```\n\n提示\n\n**增加测试！** \\- 新特性需要进行测试，并加快错误修复的审查速度。请在创建拉取请求之前覆盖新的代码路径。查看 [bats-core 文档](https://bats-core.readthedocs.io/en/stable/index.html) 了解更多。.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/zh-hans/contribute/core.html", "title": "asdf 核心贡献指南", "description": "本页面提供了关于如何为 asdf 进行核心贡献的指南，包括初始化安装、开发、Bats 测试、拉取请求、发布以及约定式提交等内容。", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:45:53", "type": "section_detail", "page_metadata": {"description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "title": "asdf", "viewport": "width=device-width,initial-scale=1", "language": "zh-hans", "scrapeId": "8f7bcb11-448c-42f1-ace7-ef20f30901cd", "sourceURL": "https://asdf-vm.com/zh-hans/contribute/core.html", "url": "https://asdf-vm.com/zh-hans/contribute/core.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I bats 测试 in asdf-vm?\n\nAssistant: To bats 测试 in asdf-vm, here's what you do:\n**强烈建议** 在编写测试之前检查现有的测试套件和 [bats-core 文档](https://bats-core.readthedocs.io/en/stable/index.html)。\n\nBats 调试有时可能很困难。使用带有 `-t` 标识的 TAP 输出将使你能够在测试执行期间打印带有特殊文件描述符 `>&3` 的输出，从而简化调试。例如：\n\n```\n# test/some_tests.bats\n\nprintf \"%s\\n\" \"Will not be printed during bats test/some_tests.bats\"\nprintf \"%s\\n\" \"Will be printed during bats -t test/some_tests.bats\" >&3\n```\n\n进一步相关文档请查看 bats-core 的 [Printing to the Terminal](https://bats-core.readthedocs.io/en/stable/writing-tests.html#printing-to-the-terminal) 部分..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/zh-hans/contribute/core.html", "title": "asdf 核心贡献指南", "description": "本页面提供了关于如何为 asdf 进行核心贡献的指南，包括初始化安装、开发、Bats 测试、拉取请求、发布以及约定式提交等内容。", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:45:53", "type": "section_detail", "page_metadata": {"description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "title": "asdf", "viewport": "width=device-width,initial-scale=1", "language": "zh-hans", "scrapeId": "8f7bcb11-448c-42f1-ace7-ef20f30901cd", "sourceURL": "https://asdf-vm.com/zh-hans/contribute/core.html", "url": "https://asdf-vm.com/zh-hans/contribute/core.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 拉取请求、发布以及约定式提交 in asdf-vm?\n\nAssistant: To 拉取请求、发布以及约定式提交 in asdf-vm, here's what you do:\n`asdf` 正在使用一个名为 [Release Please](https://github.com/googleapis/release-please) 的自动发布工具来自动碰撞 [SemVer](https://semver.org/) 版本并生成 [变更日志](https://github.com/asdf-vm/asdf/blob/master/CHANGELOG.md)。这个信息是通过读取自上次发布以来的提交历史记录来确定的。\n\n[约定式提交](https://www.conventionalcommits.org/zh-hans/) 定义了拉取请求标题的格式，该标题成为默认分支上的提交消息格式。这是通过 Github Action [`amannn/action-semantic-pull-request`](https://github.com/amannn/action-semantic-pull-request) 强制执行的。\n\n约定式提交遵循以下格式：\n\n```\n<type>[optional scope][optional !]: <description>\n\n<!-- 例子 -->\nfix: some fix\nfeat: a new feature\ndocs: some documentation update\ndocs(website): some change for the website\nfeat!: feature with breaking change\n```\n\n`<types>` 的所有类型包含： `feat`、 `fix`、 `docs`、 `style`、 `refactor`、 `perf`、 `test`、 `build`、 `ci`、 `chore`、 `revert`。\n\n- `!`：表示重大更改\n- `fix`：将会创建一个新的 SemVer `patch` 补丁\n- `feat`：将会创建一个新的 SemVer `minor` 小版本\n- `<type>!`：将会创建一个新的 SemVer `major` 大版本\n\n拉取请求标题必须遵循这种格式。\n\n提示\n\n请使用约定式提交信息格式作为拉取请求标题。.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/zh-hans/contribute/core.html", "title": "asdf 核心贡献指南", "description": "本页面提供了关于如何为 asdf 进行核心贡献的指南，包括初始化安装、开发、Bats 测试、拉取请求、发布以及约定式提交等内容。", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:45:53", "type": "section_detail", "page_metadata": {"description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "title": "asdf", "viewport": "width=device-width,initial-scale=1", "language": "zh-hans", "scrapeId": "8f7bcb11-448c-42f1-ace7-ef20f30901cd", "sourceURL": "https://asdf-vm.com/zh-hans/contribute/core.html", "url": "https://asdf-vm.com/zh-hans/contribute/core.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I docker 镜像 in asdf-vm?\n\nAssistant: To docker 镜像 in asdf-vm, here's what you do:\n[asdf-alpine](https://github.com/vic/asdf-alpine) 和 [asdf-ubuntu](https://github.com/vic/asdf-ubuntu) 项目正在努力提供一些 asdf 工具的容器化镜像。你可以使用这些容器镜像作为开发服务器的基础镜像，或者运行生产应用。.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/zh-hans/contribute/core.html", "title": "asdf 核心贡献指南", "description": "本页面提供了关于如何为 asdf 进行核心贡献的指南，包括初始化安装、开发、Bats 测试、拉取请求、发布以及约定式提交等内容。", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:45:53", "type": "section_detail", "page_metadata": {"description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "title": "asdf", "viewport": "width=device-width,initial-scale=1", "language": "zh-hans", "scrapeId": "8f7bcb11-448c-42f1-ace7-ef20f30901cd", "sourceURL": "https://asdf-vm.com/zh-hans/contribute/core.html", "url": "https://asdf-vm.com/zh-hans/contribute/core.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you give me some code examples for asdf 核心贡献指南 in asdf-vm?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**初始化安装**:\n\n```yaml\n# 克隆你 fork 的 asdf\ngit clone https://github.com/<GITHUB_USER>/asdf.git\n# 或者直接克隆 asdf\ngit clone https://github.com/asdf-vm/asdf.git\n```\n\nThis snippet shows you how to 初始化安装, which is an important aspect of asdf 核心贡献指南.\n\n**添加插件**:\n\n```yaml\nasdf plugin add bats https://github.com/timgluz/asdf-bats.git\nasdf plugin add shellcheck https://github.com/luizm/asdf-shellcheck.git\nasdf plugin add shfmt https://github.com/luizm/asdf-shfmt.git\n```\n\nThis snippet shows you how to 添加插件, which is an important aspect of asdf 核心贡献指南.\n\n**安装版本**:\n\n```yaml\nasdf install\n```\n\nThis snippet shows you how to 安装版本, which is an important aspect of asdf 核心贡献指南.\n\n**开发检查**:\n\n```yaml\n# 脚本检查\n./scripts/shellcheck.bash\n\n# 格式化\n./scripts/shfmt.bash\n\n# 测试：所有案例\nbats test/\n# 测试：特定命令\nbats test/list_commands.bash\n```\n\nThis snippet shows you how to 开发检查, which is an important aspect of asdf 核心贡献指南.\n\n**Bats 调试示例**:\n\n```yaml\n# test/some_tests.bats\n\nprintf \"%s\\n\" \"Will not be printed during bats test/some_tests.bats\"\nprintf \"%s\\n\" \"Will be printed during bats -t test/some_tests.bats\" >&3\n```\n\nThis snippet shows you how to bats 调试示例, which is an important aspect of asdf 核心贡献指南.\n\n**约定式提交格式**:\n\n```yaml\n<type>[optional scope][optional !]: <description>\n\n<!-- 例子 -->\nfix: some fix\nfeat: a new feature\ndocs: some documentation update\ndocs(website): some change for the website\nfeat!: feature with breaking change\n```\n\nThis snippet shows you how to 约定式提交格式, which is an important aspect of asdf 核心贡献指南.\n\n", "metadata": {"source_url": "https://asdf-vm.com/zh-hans/contribute/core.html", "title": "asdf 核心贡献指南", "description": "本页面提供了关于如何为 asdf 进行核心贡献的指南，包括初始化安装、开发、Bats 测试、拉取请求、发布以及约定式提交等内容。", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:45:53", "type": "code_examples", "page_metadata": {"description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "title": "asdf", "viewport": "width=device-width,initial-scale=1", "language": "zh-hans", "scrapeId": "8f7bcb11-448c-42f1-ace7-ef20f30901cd", "sourceURL": "https://asdf-vm.com/zh-hans/contribute/core.html", "url": "https://asdf-vm.com/zh-hans/contribute/core.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: What are some tips for using asdf 核心贡献指南 in asdf-vm effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\n增加测试！新特性需要进行测试，并加快错误修复的审查速度。请在创建拉取请求之前覆盖新的代码路径。\n\n请使用约定式提交信息格式作为拉取请求标题。\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://asdf-vm.com/zh-hans/contribute/core.html", "title": "asdf 核心贡献指南", "description": "本页面提供了关于如何为 asdf 进行核心贡献的指南，包括初始化安装、开发、Bats 测试、拉取请求、发布以及约定式提交等内容。", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:45:53", "type": "best_practices", "page_metadata": {"description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "title": "asdf", "viewport": "width=device-width,initial-scale=1", "language": "zh-hans", "scrapeId": "8f7bcb11-448c-42f1-ace7-ef20f30901cd", "sourceURL": "https://asdf-vm.com/zh-hans/contribute/core.html", "url": "https://asdf-vm.com/zh-hans/contribute/core.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you explain what FAQ is in asdf-vm?\n\nAssistant: Sure, I'd be happy to explain FAQ in asdf-vm.\n\n# FAQ\n\nここでは、 `asdf` に関するよくある質問を紹介します。Here's a quick rundown of what this is about:\n\n## WSL1をサポートしていますか?\n\nWSL1 ( [Windows Subsystem for Linux](https://ja.wikipedia.org/wiki/Windows_Subsystem_for_Linux) 1)は公式にはサポートしていません。 `asdf` は正常に動作しない可能性があります。WSL1を公式にサポートする予定はありません。\n\n## WSL2をサポートしていますか?\n\nWSL2 ( [Windows Subsystem for Linux](https://ja.wikipedia.org/wiki/Windows_Subsystem_for_Linux#WSL2) 2)では、あなたが選択したWSLディストリビューションに基づいて、セットアップと依存関係の解決を済ませれば、動作するはずです。\n\n重要なのは、WSL2が正常に動作するのは、カレントワークディレクトリがWindowsドライブではなくUnixドライブである場合に _限られる_ ということです。\n\nGitHub Actionsでホストランナーのサポートが可能になれば、WSL2でテストスイートを実行する予定ですが、現時点ではそうではないようです。\n\n## 新しくインストールした実行ファイルが実行できないのですが?\n\n> `npm install -g yarn` を実行したにも関わらず、 `yarn` が実行できません。どうなっているの?\n\n`asdf` は [Shim](https://en.wikipedia.org/wiki/Shim_(computing)) を使って実行ファイルを管理しています。プラグインによってインストールされるものは、自動的にShimが作成されますが、 `asdf` が管理しているツールによって実行ファイルがインストールされた場合は、Shimを作成しなければならないということを `asdf` に通知する必要があります。上記の例では、 [Yarn](https://yarnpkg.com/) のShimを作成しなければいけません。詳しくは、 [`asdf reshim` コマンドのドキュメント](https://asdf-vm.com/ja-jp/manage/core.html#shim%E3%81%AE%E5%86%8D%E4%BD%9C%E6%88%90) をご覧ください。\n\n## シェルが、新しくインストールされたShimを検知してくれないのですが?\n\n`asdf reshim` コマンドを実行しても問題が解決しない場合、 `asdf.sh` や `asdf.fish` のsourceが、シェルの構成ファイル( `.bash_profile`、 `.zshrc`、 `config.fish` など)の **一番下** にないことが原因である可能性があります。 `$PATH` を設定した **後**、そしてフレームワーク(oh-my-zshなど)を使用しているのれあればそれをsourceした **後** に、sourceする必要があります。\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://asdf-vm.com/ja-jp/more/faq.html", "title": "FAQ", "description": "ここでは、 `asdf` に関するよくある質問を紹介します。", "has_code_examples": false, "has_best_practices": false, "section_count": 4, "timestamp": "2025-03-01 03:46:09", "type": "overview", "page_metadata": {"language": "ja-jp", "description": "Manage multiple runtime versions with a single CLI tool", "title": "FAQ | asdf", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "scrapeId": "40d8dfaa-abb9-4c39-bc79-92bfcc6b173d", "sourceURL": "https://asdf-vm.com/ja-jp/more/faq.html", "url": "https://asdf-vm.com/ja-jp/more/faq.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I wsl1をサポートしていますか? in asdf-vm?\n\nAssistant: To wsl1をサポートしていますか? in asdf-vm, here's what you do:\nWSL1 ( [Windows Subsystem for Linux](https://ja.wikipedia.org/wiki/Windows_Subsystem_for_Linux) 1)は公式にはサポートしていません。 `asdf` は正常に動作しない可能性があります。WSL1を公式にサポートする予定はありません。.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ja-jp/more/faq.html", "title": "FAQ", "description": "ここでは、 `asdf` に関するよくある質問を紹介します。", "has_code_examples": false, "has_best_practices": false, "section_count": 4, "timestamp": "2025-03-01 03:46:09", "type": "section_detail", "page_metadata": {"language": "ja-jp", "description": "Manage multiple runtime versions with a single CLI tool", "title": "FAQ | asdf", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "scrapeId": "40d8dfaa-abb9-4c39-bc79-92bfcc6b173d", "sourceURL": "https://asdf-vm.com/ja-jp/more/faq.html", "url": "https://asdf-vm.com/ja-jp/more/faq.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I wsl2をサポートしていますか? in asdf-vm?\n\nAssistant: To wsl2をサポートしていますか? in asdf-vm, here's what you do:\nWSL2 ( [Windows Subsystem for Linux](https://ja.wikipedia.org/wiki/Windows_Subsystem_for_Linux#WSL2) 2)では、あなたが選択したWSLディストリビューションに基づいて、セットアップと依存関係の解決を済ませれば、動作するはずです。\n\n重要なのは、WSL2が正常に動作するのは、カレントワークディレクトリがWindowsドライブではなくUnixドライブである場合に _限られる_ ということです。\n\nGitHub Actionsでホストランナーのサポートが可能になれば、WSL2でテストスイートを実行する予定ですが、現時点ではそうではないようです。.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ja-jp/more/faq.html", "title": "FAQ", "description": "ここでは、 `asdf` に関するよくある質問を紹介します。", "has_code_examples": false, "has_best_practices": false, "section_count": 4, "timestamp": "2025-03-01 03:46:09", "type": "section_detail", "page_metadata": {"language": "ja-jp", "description": "Manage multiple runtime versions with a single CLI tool", "title": "FAQ | asdf", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "scrapeId": "40d8dfaa-abb9-4c39-bc79-92bfcc6b173d", "sourceURL": "https://asdf-vm.com/ja-jp/more/faq.html", "url": "https://asdf-vm.com/ja-jp/more/faq.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 新しくインストールした実行ファイルが実行できないのですが? in asdf-vm?\n\nAssistant: To 新しくインストールした実行ファイルが実行できないのですが? in asdf-vm, here's what you do:\n> `npm install -g yarn` を実行したにも関わらず、 `yarn` が実行できません。どうなっているの?\n\n`asdf` は [Shim](https://en.wikipedia.org/wiki/Shim_(computing)) を使って実行ファイルを管理しています。プラグインによってインストールされるものは、自動的にShimが作成されますが、 `asdf` が管理しているツールによって実行ファイルがインストールされた場合は、Shimを作成しなければならないということを `asdf` に通知する必要があります。上記の例では、 [Yarn](https://yarnpkg.com/) のShimを作成しなければいけません。詳しくは、 [`asdf reshim` コマンドのドキュメント](https://asdf-vm.com/ja-jp/manage/core.html#shim%E3%81%AE%E5%86%8D%E4%BD%9C%E6%88%90) をご覧ください。.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ja-jp/more/faq.html", "title": "FAQ", "description": "ここでは、 `asdf` に関するよくある質問を紹介します。", "has_code_examples": false, "has_best_practices": false, "section_count": 4, "timestamp": "2025-03-01 03:46:09", "type": "section_detail", "page_metadata": {"language": "ja-jp", "description": "Manage multiple runtime versions with a single CLI tool", "title": "FAQ | asdf", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "scrapeId": "40d8dfaa-abb9-4c39-bc79-92bfcc6b173d", "sourceURL": "https://asdf-vm.com/ja-jp/more/faq.html", "url": "https://asdf-vm.com/ja-jp/more/faq.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I シェルが、新しくインストールされたshimを検知してくれないのですが? in asdf-vm?\n\nAssistant: To シェルが、新しくインストールされたshimを検知してくれないのですが? in asdf-vm, here's what you do:\n`asdf reshim` コマンドを実行しても問題が解決しない場合、 `asdf.sh` や `asdf.fish` のsourceが、シェルの構成ファイル( `.bash_profile`、 `.zshrc`、 `config.fish` など)の **一番下** にないことが原因である可能性があります。 `$PATH` を設定した **後**、そしてフレームワーク(oh-my-zshなど)を使用しているのれあればそれをsourceした **後** に、sourceする必要があります。.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ja-jp/more/faq.html", "title": "FAQ", "description": "ここでは、 `asdf` に関するよくある質問を紹介します。", "has_code_examples": false, "has_best_practices": false, "section_count": 4, "timestamp": "2025-03-01 03:46:09", "type": "section_detail", "page_metadata": {"language": "ja-jp", "description": "Manage multiple runtime versions with a single CLI tool", "title": "FAQ | asdf", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "scrapeId": "40d8dfaa-abb9-4c39-bc79-92bfcc6b173d", "sourceURL": "https://asdf-vm.com/ja-jp/more/faq.html", "url": "https://asdf-vm.com/ja-jp/more/faq.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you explain what コア is in asdf-vm?\n\nAssistant: Sure, I'd be happy to explain コア in asdf-vm.\n\n# コア\n\nコアとなる `asdf` のコマンドはかなり少量ですが、多くのワークフローを円滑に進めることができます。Here's a quick rundown of what this is about:\n\n## インストール & セットアップ\n\n[はじめよう](https://asdf-vm.com/ja-jp/guide/getting-started.html) のガイドで説明されています。\n\n## 実行\n\nshell\n\n```\nasdf exec <command> [args...]\n```\n\n現在のバージョンのShimでコマンドを実行します。\n\n## 環境変数\n\nshell\n\n```\nasdf env <command> [util]\n```\n\n\n## 情報\n\nshell\n\n```\nasdf info\n```\n\nOS、シェル、および `asdf` のデバッグ情報を表示するヘルパーコマンドです。バグレポート作成時に共有してください。\n\n## Shimの再作成\n\nshell\n\n```\nasdf reshim <name> <version>\n```\n\n特定のパッケージ・バージョンのShimを再作成します。デフォルトでは、Shimはプラグインによってツールのインストール中に作成されます。 [npm CLI](https://docs.npmjs.com/cli/) などのツールは、実行ファイルをグローバルインストールができます(例: `npm install -g yarn` コマンドで [Yarn](https://yarnpkg.com/) をインストール)が、これらの実行ファイルはプラグインのライフサイクルを通してインストールされないため、Shimはまだ存在しません。そのような時に、例えば `asdf reshim nodejs <version>` を実行すると、 `nodejs` の `<version>` に対して、 `yarn` のような新しい実行ファイルのShimを強制的に再作成させることができます。\n\n## Shimのバージョン\n\nshell\n\n```\nasdf shimversions <command>\n```\n\n`<command>` のShimを提供するプラグインおよびバージョンを一覧で表示します。\n\n例えば、 [Node.js](https://nodejs.org/) には `node` と `npm` という2つの実行ファイルが提供されています。 [`asdf-nodejs`](https://github.com/asdf-vm/asdf-nodejs/) プラグインで、複数のバージョンのツールがインストールされている場合、 `shimversions` は下記のような一覧を返します:\n\nshell\n\n```\n➜ asdf shimversions node\nnodejs 14.8.0\nnodejs 14.17.3\nnodejs 16.5.0\n```\n\nshell\n\n```\n➜ asdf shimversions npm\nnodejs 14.8.0\nnodejs 14.17.3\nnodejs 16.5.0\n```\n\n\n## 更新\n\n`asdf` をインストールするときと同じ方法で更新してください。このページの右上に asdf の最新バージョンが表示されます。\n\n## アンインストール\n\n`asdf` をアンインストールするには以下の手順に従ってください:\n\nBash & Git\n\n1. `~/.bashrc` で、 `asdf.sh` およびコマンド補完をsourceしている行を削除します:\n\nshell\n\n```\n. \"$HOME/.asdf/asdf.sh\"\n. \"$HOME/.asdf/completions/asdf.bash\"\n```\n\n2. `$HOME/.asdf` ディレクトリを削除します:\n\nshell\n\n```\nrm -rf \"${ASDF_DATA_DIR:-$HOME/.asdf}\"\n```\n\n3. `asdf` のすべての構成ファイルを削除するために次のコマンドを実行します:\n\nshell\n\n```\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\nBash & Git (macOS)\n\n1. `~/.bash_profile` で、 `asdf.sh` およびコマンド補完をsourceしている行を削除します:\n\nshell\n\n```\n. \"$HOME/.asdf/asdf.sh\"\n. \"$HOME/.asdf/completions/asdf.bash\"\n```\n\n2. `$HOME/.asdf` ディレクトリを削除します:\n\nshell\n\n```\nrm -rf \"${ASDF_DATA_DIR:-$HOME/.asdf}\"\n```\n\n3. `asdf` のすべての構成ファイルを削除するために次のコマンドを実行します:\n\nshell\n\n```\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\nBash & Homebrew\n\n1. `~/.bashrc` で、 `asdf.sh` およびコマンド補完をsourceしている行を削除します:\n\nshell\n\n```\n. $(brew --prefix asdf)/libexec/asdf.sh\n. $(brew --prefix asdf)/etc/bash_completion.d/asdf.bash\n```\n\nコマンド補完については、 [Homebrewで説明されている方法で設定](https://docs.brew.sh/Shell-Completion#configuring-completions-in-bash) されている可能性があるため、そちらのガイドに従って削除する行を見つけてください。\n\n2. パッケージマネージャでアンインストールします:\n\nshell\n\n```\nbrew uninstall asdf --force\n```\n\n3. `asdf` のすべての構成ファイルを削除するために次のコマンドを実行します:\n\nshell\n\n```\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\nBash & Homebrew (macOS)\n\n**macOS Catalina以降** では、デフォルトのシェルが **ZSH** に変更されました。もし、 `~/.bash_profile` に設定が見つからない場合は、 `~/.zshrc` にある可能性があります。その場合は、ZSHの手順をご覧ください。\n\n1. `~/.bash_profile` で、 `asdf.sh` およびコマンド補完をsourceしている行を削除します:\n\nshell\n\n```\n. $(brew --prefix asdf)/libexec/asdf.sh\n. $(brew --prefix asdf)/etc/bash_completion.d/asdf.bash\n```\n\nコマンド補完については、 [Homebrewで説明されている方法で設定](https://docs.brew.sh/Shell-Completion#configuring-completions-in-bash) されている可能性があるため、そちらのガイドに従って削除する行を見つけてください。\n\n2. パッケージマネージャでアンインストールします:\n\nshell\n\n```\nbrew uninstall asdf --force\n```\n\n3. `asdf` のすべての構成ファイルを削除するために次のコマンドを実行します:\n\nshell\n\n```\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\nBash & Pacman\n\n1. `~/.bashrc` で、 `asdf.sh` およびコマンド補完をsourceしている行を削除します:\n\nshell\n\n```\n. /opt/asdf-vm/asdf.sh\n```\n\n2. パッケージマネージャでアンインストールします:\n\nshell\n\n```\npacman -Rs asdf-vm\n```\n\n3. `$HOME/.asdf` ディレクトリを削除します:\n\nshell\n\n```\nrm -rf \"${ASDF_DATA_DIR:-$HOME/.asdf}\"\n```\n\n4. `asdf` のすべての構成ファイルを削除するために次のコマンドを実行します:\n\nshell\n\n```\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\nFish & Git\n\n1. `~/.config/fish/config.fish` で、 `asdf.fish` をsourceしている行を削除します:\n\nshell\n\n```\nsource ~/.asdf/asdf.fish\n```\n\nそして、次のコマンドで、コマンド補完を削除します:\n\nshell\n\n```\nrm -rf ~/.config/fish/completions/asdf.fish\n```\n\n2. `$HOME/.asdf` ディレクトリを削除します:\n\nshell\n\n```\nrm -rf (string join : -- $ASDF_DATA_DIR $HOME/.asdf)\n```\n\n3. `asdf` のすべての構成ファイルを削除するために次のコマンドを実行します:\n\nshell\n\n```\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\nFish & Homebrew\n\n1. `~/.config/fish/config.fish` で、 `asdf.fish` をsourceしている行を削除します:\n\nshell\n\n```\nsource \"(brew --prefix asdf)\"/libexec/asdf.fish\n```\n\n2. パッケージマネージャでアンインストールします:\n\nshell\n\n```\nbrew uninstall asdf --force\n```\n\n3. `asdf` のすべての構成ファイルを削除するために次のコマンドを実行します:\n\nshell\n\n```\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\nFish & Pacman\n\n1. `~/.config/fish/config.fish` で、 `asdf.fish` をsourceしている行を削除します:\n\nshell\n\n```\nsource /opt/asdf-vm/asdf.fish\n```\n\n2. パッケージマネージャでアンインストールします:\n\nshell\n\n```\npacman -Rs asdf-vm\n```\n\n3. `$HOME/.asdf` ディレクトリを削除します:\n\nshell\n\n```\nrm -rf (string join : -- $ASDF_DATA_DIR $HOME/.asdf)\n```\n\n4. `asdf` のすべての構成ファイルを削除するために次のコマンドを実行します:\n\nshell\n\n```\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\nElvish & Git\n\n1. `~/.config/elvish/rc.elv` で、 `asdf` モジュールを使用している行を削除します:\n\nshell\n\n```\nuse asdf _asdf; var asdf~ = $_asdf:asdf~\nset edit:completion:arg-completer[asdf] = $_asdf:arg-completer~\n```\n\nそして、次のコマンドで、 `asdf` モジュールを削除します:\n\nshell\n\n```\nrm -f ~/.config/elvish/lib/asdf.elv\n```\n\n2. `$HOME/.asdf` ディレクトリを削除します:\n\nshell\n\n```\nif (!=s $E:ASDF_DATA_DIR \"\") { rm -rf $E:ASDF_DATA_DIR } else { rm -rf ~/.asdf }\n```\n\n3. `asdf` のすべての構成ファイルを削除するために次のコマンドを実行します:\n\nshell\n\n```\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\nElvish & Homebrew\n\n1. `~/.config/elvish/rc.elv` で、 `asdf` モジュールを使用している行を削除します:\n\nshell\n\n```\nuse asdf _asdf; var asdf~ = $_asdf:asdf~\nset edit:completion:arg-completer[asdf] = $_asdf:arg-completer~\n```\n\nそして、次のコマンドで、 `asdf` モジュールを削除します:\n\nshell\n\n```\nrm -f ~/.config/elvish/lib/asdf.elv\n```\n\n2. パッケージマネージャでアンインストールします:\n\nshell\n\n```\nbrew uninstall asdf --force\n```\n\n3. `asdf` のすべての構成ファイルを削除するために次のコマンドを実行します:\n\nshell\n\n```\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\nElvish & Pacman\n\n1. `~/.config/elvish/rc.elv` で、 `asdf` モジュールを使用している行を削除します:\n\nshell\n\n```\nuse asdf _asdf; var asdf~ = $_asdf:asdf~\nset edit:completion:arg-completer[asdf] = $_asdf:arg-completer~\n```\n\nそして、次のコマンドで、 `asdf` モジュールを削除します:\n\nshell\n\n```\nrm -f ~/.config/elvish/lib/asdf.elv\n```\n\n2. パッケージマネージャでアンインストールします:\n\nshell\n\n```\npacman -Rs asdf-vm\n```\n\n3. `$HOME/.asdf` ディレクトリを削除します:\n\nshell\n\n```\nif (!=s $E:ASDF_DATA_DIR \"\") { rm -rf $E:ASDF_DATA_DIR } else { rm -rf ~/.asdf }\n```\n\n4. `asdf` のすべての構成ファイルを削除するために次のコマンドを実行します:\n\nshell\n\n```\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\nZSH & Git\n\n1. `~/.zshrc` で、 `asdf.sh` およびコマンド補完をsourceしている行を削除します:\n\nshell\n\n```\n. \"$HOME/.asdf/asdf.sh\"\n# ...\nfpath=(${ASDF_DIR}/completions $fpath)\nautoload -Uz compinit\ncompinit\n```\n\n**または**、ZSHフレームワークプラグインを使用します。\n\n2. `$HOME/.asdf` ディレクトリを削除します:\n\nshell\n\n```\nrm -rf \"${ASDF_DATA_DIR:-$HOME/.asdf}\"\n```\n\n3. `asdf` のすべての構成ファイルを削除するために次のコマンドを実行します:\n\nshell\n\n```\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\nZSH & Homebrew\n\n1. `~/.zshrc` で、 `asdf.sh` をsourceしている行を削除します:\n\nshell\n\n```\n. $(brew --prefix asdf)/libexec/asdf.sh\n```\n\n2. パッケージマネージャでアンインストールします:\n\nshell\n\n```\nbrew uninstall asdf --force && brew autoremove\n```\n\n3. `asdf` のすべての構成ファイルを削除するために次のコマンドを実行します:\n\nshell\n\n```\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\nZSH & Pacman\n\n1. `~/.zshrc` で、 `asdf.sh` をsourceしている行を削除します:\n\nshell\n\n```\n. /opt/asdf-vm/asdf.sh\n```\n\n2. パッケージマネージャでアンインストールします:\n\nshell\n\n```\npacman -Rs asdf-vm\n```\n\n3. `$HOME/.asdf` ディレクトリを削除します:\n\nshell\n\n```\nrm -rf \"${ASDF_DATA_DIR:-$HOME/.asdf}\"\n```\n\n4. `asdf` のすべての構成ファイルを削除するために次のコマンドを実行します:\n\nshell\n\n```\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://asdf-vm.com/ja-jp/manage/core.html", "title": "コア", "description": "コアとなる `asdf` のコマンドはかなり少量ですが、多くのワークフローを円滑に進めることができます。", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 03:48:08", "type": "overview", "page_metadata": {"language": "ja-jp", "viewport": "width=device-width,initial-scale=1", "title": "コア | asdf", "description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "scrapeId": "47cd7c2c-8d1a-4d9a-a0db-0fa2ec057848", "sourceURL": "https://asdf-vm.com/ja-jp/manage/core.html", "url": "https://asdf-vm.com/ja-jp/manage/core.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I インストール & セットアップ in asdf-vm?\n\nAssistant: To インストール & セットアップ in asdf-vm, here's what you do:\n[はじめよう](https://asdf-vm.com/ja-jp/guide/getting-started.html) のガイドで説明されています。.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ja-jp/manage/core.html", "title": "コア", "description": "コアとなる `asdf` のコマンドはかなり少量ですが、多くのワークフローを円滑に進めることができます。", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 03:48:08", "type": "section_detail", "page_metadata": {"language": "ja-jp", "viewport": "width=device-width,initial-scale=1", "title": "コア | asdf", "description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "scrapeId": "47cd7c2c-8d1a-4d9a-a0db-0fa2ec057848", "sourceURL": "https://asdf-vm.com/ja-jp/manage/core.html", "url": "https://asdf-vm.com/ja-jp/manage/core.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 実行 in asdf-vm?\n\nAssistant: To 実行 in asdf-vm, here's what you do:\nshell\n\n```\nasdf exec <command> [args...]\n```\n\n現在のバージョンのShimでコマンドを実行します。.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ja-jp/manage/core.html", "title": "コア", "description": "コアとなる `asdf` のコマンドはかなり少量ですが、多くのワークフローを円滑に進めることができます。", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 03:48:08", "type": "section_detail", "page_metadata": {"language": "ja-jp", "viewport": "width=device-width,initial-scale=1", "title": "コア | asdf", "description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "scrapeId": "47cd7c2c-8d1a-4d9a-a0db-0fa2ec057848", "sourceURL": "https://asdf-vm.com/ja-jp/manage/core.html", "url": "https://asdf-vm.com/ja-jp/manage/core.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 環境変数 in asdf-vm?\n\nAssistant: To 環境変数 in asdf-vm, here's what you do:\nshell\n\n```\nasdf env <command> [util]\n```\n.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ja-jp/manage/core.html", "title": "コア", "description": "コアとなる `asdf` のコマンドはかなり少量ですが、多くのワークフローを円滑に進めることができます。", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 03:48:08", "type": "section_detail", "page_metadata": {"language": "ja-jp", "viewport": "width=device-width,initial-scale=1", "title": "コア | asdf", "description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "scrapeId": "47cd7c2c-8d1a-4d9a-a0db-0fa2ec057848", "sourceURL": "https://asdf-vm.com/ja-jp/manage/core.html", "url": "https://asdf-vm.com/ja-jp/manage/core.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 情報 in asdf-vm?\n\nAssistant: To 情報 in asdf-vm, here's what you do:\nshell\n\n```\nasdf info\n```\n\nOS、シェル、および `asdf` のデバッグ情報を表示するヘルパーコマンドです。バグレポート作成時に共有してください。.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ja-jp/manage/core.html", "title": "コア", "description": "コアとなる `asdf` のコマンドはかなり少量ですが、多くのワークフローを円滑に進めることができます。", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 03:48:08", "type": "section_detail", "page_metadata": {"language": "ja-jp", "viewport": "width=device-width,initial-scale=1", "title": "コア | asdf", "description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "scrapeId": "47cd7c2c-8d1a-4d9a-a0db-0fa2ec057848", "sourceURL": "https://asdf-vm.com/ja-jp/manage/core.html", "url": "https://asdf-vm.com/ja-jp/manage/core.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I shimの再作成 in asdf-vm?\n\nAssistant: To shimの再作成 in asdf-vm, here's what you do:\nshell\n\n```\nasdf reshim <name> <version>\n```\n\n特定のパッケージ・バージョンのShimを再作成します。デフォルトでは、Shimはプラグインによってツールのインストール中に作成されます。 [npm CLI](https://docs.npmjs.com/cli/) などのツールは、実行ファイルをグローバルインストールができます(例: `npm install -g yarn` コマンドで [Yarn](https://yarnpkg.com/) をインストール)が、これらの実行ファイルはプラグインのライフサイクルを通してインストールされないため、Shimはまだ存在しません。そのような時に、例えば `asdf reshim nodejs <version>` を実行すると、 `nodejs` の `<version>` に対して、 `yarn` のような新しい実行ファイルのShimを強制的に再作成させることができます。.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ja-jp/manage/core.html", "title": "コア", "description": "コアとなる `asdf` のコマンドはかなり少量ですが、多くのワークフローを円滑に進めることができます。", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 03:48:08", "type": "section_detail", "page_metadata": {"language": "ja-jp", "viewport": "width=device-width,initial-scale=1", "title": "コア | asdf", "description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "scrapeId": "47cd7c2c-8d1a-4d9a-a0db-0fa2ec057848", "sourceURL": "https://asdf-vm.com/ja-jp/manage/core.html", "url": "https://asdf-vm.com/ja-jp/manage/core.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I shimのバージョン in asdf-vm?\n\nAssistant: To shimのバージョン in asdf-vm, here's what you do:\nshell\n\n```\nasdf shimversions <command>\n```\n\n`<command>` のShimを提供するプラグインおよびバージョンを一覧で表示します。\n\n例えば、 [Node.js](https://nodejs.org/) には `node` と `npm` という2つの実行ファイルが提供されています。 [`asdf-nodejs`](https://github.com/asdf-vm/asdf-nodejs/) プラグインで、複数のバージョンのツールがインストールされている場合、 `shimversions` は下記のような一覧を返します:\n\nshell\n\n```\n➜ asdf shimversions node\nnodejs 14.8.0\nnodejs 14.17.3\nnodejs 16.5.0\n```\n\nshell\n\n```\n➜ asdf shimversions npm\nnodejs 14.8.0\nnodejs 14.17.3\nnodejs 16.5.0\n```\n.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ja-jp/manage/core.html", "title": "コア", "description": "コアとなる `asdf` のコマンドはかなり少量ですが、多くのワークフローを円滑に進めることができます。", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 03:48:08", "type": "section_detail", "page_metadata": {"language": "ja-jp", "viewport": "width=device-width,initial-scale=1", "title": "コア | asdf", "description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "scrapeId": "47cd7c2c-8d1a-4d9a-a0db-0fa2ec057848", "sourceURL": "https://asdf-vm.com/ja-jp/manage/core.html", "url": "https://asdf-vm.com/ja-jp/manage/core.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 更新 in asdf-vm?\n\nAssistant: To 更新 in asdf-vm, here's what you do:\n`asdf` をインストールするときと同じ方法で更新してください。このページの右上に asdf の最新バージョンが表示されます。.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ja-jp/manage/core.html", "title": "コア", "description": "コアとなる `asdf` のコマンドはかなり少量ですが、多くのワークフローを円滑に進めることができます。", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 03:48:08", "type": "section_detail", "page_metadata": {"language": "ja-jp", "viewport": "width=device-width,initial-scale=1", "title": "コア | asdf", "description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "scrapeId": "47cd7c2c-8d1a-4d9a-a0db-0fa2ec057848", "sourceURL": "https://asdf-vm.com/ja-jp/manage/core.html", "url": "https://asdf-vm.com/ja-jp/manage/core.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I アンインストール in asdf-vm?\n\nAssistant: To アンインストール in asdf-vm, here's what you do:\n`asdf` をアンインストールするには以下の手順に従ってください:\n\nBash & Git\n\n1. `~/.bashrc` で、 `asdf.sh` およびコマンド補完をsourceしている行を削除します:\n\nshell\n\n```\n. \"$HOME/.asdf/asdf.sh\"\n. \"$HOME/.asdf/completions/asdf.bash\"\n```\n\n2. `$HOME/.asdf` ディレクトリを削除します:\n\nshell\n\n```\nrm -rf \"${ASDF_DATA_DIR:-$HOME/.asdf}\"\n```\n\n3. `asdf` のすべての構成ファイルを削除するために次のコマンドを実行します:\n\nshell\n\n```\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\nBash & Git (macOS)\n\n1. `~/.bash_profile` で、 `asdf.sh` およびコマンド補完をsourceしている行を削除します:\n\nshell\n\n```\n. \"$HOME/.asdf/asdf.sh\"\n. \"$HOME/.asdf/completions/asdf.bash\"\n```\n\n2. `$HOME/.asdf` ディレクトリを削除します:\n\nshell\n\n```\nrm -rf \"${ASDF_DATA_DIR:-$HOME/.asdf}\"\n```\n\n3. `asdf` のすべての構成ファイルを削除するために次のコマンドを実行します:\n\nshell\n\n```\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\nBash & Homebrew\n\n1. `~/.bashrc` で、 `asdf.sh` およびコマンド補完をsourceしている行を削除します:\n\nshell\n\n```\n. $(brew --prefix asdf)/libexec/asdf.sh\n. $(brew --prefix asdf)/etc/bash_completion.d/asdf.bash\n```\n\nコマンド補完については、 [Homebrewで説明されている方法で設定](https://docs.brew.sh/Shell-Completion#configuring-completions-in-bash) されている可能性があるため、そちらのガイドに従って削除する行を見つけてください。\n\n2. パッケージマネージャでアンインストールします:\n\nshell\n\n```\nbrew uninstall asdf --force\n```\n\n3. `asdf` のすべての構成ファイルを削除するために次のコマンドを実行します:\n\nshell\n\n```\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\nBash & Homebrew (macOS)\n\n**macOS Catalina以降** では、デフォルトのシェルが **ZSH** に変更されました。もし、 `~/.bash_profile` に設定が見つからない場合は、 `~/.zshrc` にある可能性があります。その場合は、ZSHの手順をご覧ください。\n\n1. `~/.bash_profile` で、 `asdf.sh` およびコマンド補完をsourceしている行を削除します:\n\nshell\n\n```\n. $(brew --prefix asdf)/libexec/asdf.sh\n. $(brew --prefix asdf)/etc/bash_completion.d/asdf.bash\n```\n\nコマンド補完については、 [Homebrewで説明されている方法で設定](https://docs.brew.sh/Shell-Completion#configuring-completions-in-bash) されている可能性があるため、そちらのガイドに従って削除する行を見つけてください。\n\n2. パッケージマネージャでアンインストールします:\n\nshell\n\n```\nbrew uninstall asdf --force\n```\n\n3. `asdf` のすべての構成ファイルを削除するために次のコマンドを実行します:\n\nshell\n\n```\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\nBash & Pacman\n\n1. `~/.bashrc` で、 `asdf.sh` およびコマンド補完をsourceしている行を削除します:\n\nshell\n\n```\n. /opt/asdf-vm/asdf.sh\n```\n\n2. パッケージマネージャでアンインストールします:\n\nshell\n\n```\npacman -Rs asdf-vm\n```\n\n3. `$HOME/.asdf` ディレクトリを削除します:\n\nshell\n\n```\nrm -rf \"${ASDF_DATA_DIR:-$HOME/.asdf}\"\n```\n\n4. `asdf` のすべての構成ファイルを削除するために次のコマンドを実行します:\n\nshell\n\n```\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\nFish & Git\n\n1. `~/.config/fish/config.fish` で、 `asdf.fish` をsourceしている行を削除します:\n\nshell\n\n```\nsource ~/.asdf/asdf.fish\n```\n\nそして、次のコマンドで、コマンド補完を削除します:\n\nshell\n\n```\nrm -rf ~/.config/fish/completions/asdf.fish\n```\n\n2. `$HOME/.asdf` ディレクトリを削除します:\n\nshell\n\n```\nrm -rf (string join : -- $ASDF_DATA_DIR $HOME/.asdf)\n```\n\n3. `asdf` のすべての構成ファイルを削除するために次のコマンドを実行します:\n\nshell\n\n```\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\nFish & Homebrew\n\n1. `~/.config/fish/config.fish` で、 `asdf.fish` をsourceしている行を削除します:\n\nshell\n\n```\nsource \"(brew --prefix asdf)\"/libexec/asdf.fish\n```\n\n2. パッケージマネージャでアンインストールします:\n\nshell\n\n```\nbrew uninstall asdf --force\n```\n\n3. `asdf` のすべての構成ファイルを削除するために次のコマンドを実行します:\n\nshell\n\n```\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\nFish & Pacman\n\n1. `~/.config/fish/config.fish` で、 `asdf.fish` をsourceしている行を削除します:\n\nshell\n\n```\nsource /opt/asdf-vm/asdf.fish\n```\n\n2. パッケージマネージャでアンインストールします:\n\nshell\n\n```\npacman -Rs asdf-vm\n```\n\n3. `$HOME/.asdf` ディレクトリを削除します:\n\nshell\n\n```\nrm -rf (string join : -- $ASDF_DATA_DIR $HOME/.asdf)\n```\n\n4. `asdf` のすべての構成ファイルを削除するために次のコマンドを実行します:\n\nshell\n\n```\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\nElvish & Git\n\n1. `~/.config/elvish/rc.elv` で、 `asdf` モジュールを使用している行を削除します:\n\nshell\n\n```\nuse asdf _asdf; var asdf~ = $_asdf:asdf~\nset edit:completion:arg-completer[asdf] = $_asdf:arg-completer~\n```\n\nそして、次のコマンドで、 `asdf` モジュールを削除します:\n\nshell\n\n```\nrm -f ~/.config/elvish/lib/asdf.elv\n```\n\n2. `$HOME/.asdf` ディレクトリを削除します:\n\nshell\n\n```\nif (!=s $E:ASDF_DATA_DIR \"\") { rm -rf $E:ASDF_DATA_DIR } else { rm -rf ~/.asdf }\n```\n\n3. `asdf` のすべての構成ファイルを削除するために次のコマンドを実行します:\n\nshell\n\n```\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\nElvish & Homebrew\n\n1. `~/.config/elvish/rc.elv` で、 `asdf` モジュールを使用している行を削除します:\n\nshell\n\n```\nuse asdf _asdf; var asdf~ = $_asdf:asdf~\nset edit:completion:arg-completer[asdf] = $_asdf:arg-completer~\n```\n\nそして、次のコマンドで、 `asdf` モジュールを削除します:\n\nshell\n\n```\nrm -f ~/.config/elvish/lib/asdf.elv\n```\n\n2. パッケージマネージャでアンインストールします:\n\nshell\n\n```\nbrew uninstall asdf --force\n```\n\n3. `asdf` のすべての構成ファイルを削除するために次のコマンドを実行します:\n\nshell\n\n```\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\nElvish & Pacman\n\n1. `~/.config/elvish/rc.elv` で、 `asdf` モジュールを使用している行を削除します:\n\nshell\n\n```\nuse asdf _asdf; var asdf~ = $_asdf:asdf~\nset edit:completion:arg-completer[asdf] = $_asdf:arg-completer~\n```\n\nそして、次のコマンドで、 `asdf` モジュールを削除します:\n\nshell\n\n```\nrm -f ~/.config/elvish/lib/asdf.elv\n```\n\n2. パッケージマネージャでアンインストールします:\n\nshell\n\n```\npacman -Rs asdf-vm\n```\n\n3. `$HOME/.asdf` ディレクトリを削除します:\n\nshell\n\n```\nif (!=s $E:ASDF_DATA_DIR \"\") { rm -rf $E:ASDF_DATA_DIR } else { rm -rf ~/.asdf }\n```\n\n4. `asdf` のすべての構成ファイルを削除するために次のコマンドを実行します:\n\nshell\n\n```\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\nZSH & Git\n\n1. `~/.zshrc` で、 `asdf.sh` およびコマンド補完をsourceしている行を削除します:\n\nshell\n\n```\n. \"$HOME/.asdf/asdf.sh\"\n# ...\nfpath=(${ASDF_DIR}/completions $fpath)\nautoload -Uz compinit\ncompinit\n```\n\n**または**、ZSHフレームワークプラグインを使用します。\n\n2. `$HOME/.asdf` ディレクトリを削除します:\n\nshell\n\n```\nrm -rf \"${ASDF_DATA_DIR:-$HOME/.asdf}\"\n```\n\n3. `asdf` のすべての構成ファイルを削除するために次のコマンドを実行します:\n\nshell\n\n```\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\nZSH & Homebrew\n\n1. `~/.zshrc` で、 `asdf.sh` をsourceしている行を削除します:\n\nshell\n\n```\n. $(brew --prefix asdf)/libexec/asdf.sh\n```\n\n2. パッケージマネージャでアンインストールします:\n\nshell\n\n```\nbrew uninstall asdf --force && brew autoremove\n```\n\n3. `asdf` のすべての構成ファイルを削除するために次のコマンドを実行します:\n\nshell\n\n```\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n\nZSH & Pacman\n\n1. `~/.zshrc` で、 `asdf.sh` をsourceしている行を削除します:\n\nshell\n\n```\n. /opt/asdf-vm/asdf.sh\n```\n\n2. パッケージマネージャでアンインストールします:\n\nshell\n\n```\npacman -Rs asdf-vm\n```\n\n3. `$HOME/.asdf` ディレクトリを削除します:\n\nshell\n\n```\nrm -rf \"${ASDF_DATA_DIR:-$HOME/.asdf}\"\n```\n\n4. `asdf` のすべての構成ファイルを削除するために次のコマンドを実行します:\n\nshell\n\n```\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ja-jp/manage/core.html", "title": "コア", "description": "コアとなる `asdf` のコマンドはかなり少量ですが、多くのワークフローを円滑に進めることができます。", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 03:48:08", "type": "section_detail", "page_metadata": {"language": "ja-jp", "viewport": "width=device-width,initial-scale=1", "title": "コア | asdf", "description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "scrapeId": "47cd7c2c-8d1a-4d9a-a0db-0fa2ec057848", "sourceURL": "https://asdf-vm.com/ja-jp/manage/core.html", "url": "https://asdf-vm.com/ja-jp/manage/core.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you give me some code examples for コア in asdf-vm?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**実行**:\n\n```yaml\nasdf exec <command> [args...]\n```\n\nThis snippet shows you how to 実行, which is an important aspect of コア.\n\n**環境変数**:\n\n```yaml\nasdf env <command> [util]\n```\n\nThis snippet shows you how to 環境変数, which is an important aspect of コア.\n\n**情報**:\n\n```yaml\nasdf info\n```\n\nThis snippet shows you how to 情報, which is an important aspect of コア.\n\n**Shimの再作成**:\n\n```yaml\nasdf reshim <name> <version>\n```\n\nThis snippet shows you how to shimの再作成, which is an important aspect of コア.\n\n**Shimのバージョン**:\n\n```yaml\nasdf shimversions <command>\n```\n\nThis snippet shows you how to shimのバージョン, which is an important aspect of コア.\n\n**アンインストール手順 (Bash & Git)**:\n\n```yaml\n1. `~/.bashrc` で、 `asdf.sh` およびコマンド補完をsourceしている行を削除します:\n\n```\n. \"$HOME/.asdf/asdf.sh\"\n. \"$HOME/.asdf/completions/asdf.bash\"\n```\n\n2. `$HOME/.asdf` ディレクトリを削除します:\n\n```\nrm -rf \"${ASDF_DATA_DIR:-$HOME/.asdf}\"\n```\n\n3. `asdf` のすべての構成ファイルを削除するために次のコマンドを実行します:\n\n```\nrm -rf \"$HOME/.tool-versions\" \"$HOME/.asdfrc\"\n```\n```\n\nThis snippet shows you how to アンインストール手順 (bash & git), which is an important aspect of コア.\n\n", "metadata": {"source_url": "https://asdf-vm.com/ja-jp/manage/core.html", "title": "コア", "description": "コアとなる `asdf` のコマンドはかなり少量ですが、多くのワークフローを円滑に進めることができます。", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 03:48:08", "type": "code_examples", "page_metadata": {"language": "ja-jp", "viewport": "width=device-width,initial-scale=1", "title": "コア | asdf", "description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "scrapeId": "47cd7c2c-8d1a-4d9a-a0db-0fa2ec057848", "sourceURL": "https://asdf-vm.com/ja-jp/manage/core.html", "url": "https://asdf-vm.com/ja-jp/manage/core.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: What are some tips for using コア in asdf-vm effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\n`asdf` をインストールするときと同じ方法で更新してください。\n\nmacOS Catalina以降では、デフォルトのシェルが ZSH に変更されました。\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://asdf-vm.com/ja-jp/manage/core.html", "title": "コア", "description": "コアとなる `asdf` のコマンドはかなり少量ですが、多くのワークフローを円滑に進めることができます。", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 03:48:08", "type": "best_practices", "page_metadata": {"language": "ja-jp", "viewport": "width=device-width,initial-scale=1", "title": "コア | asdf", "description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "scrapeId": "47cd7c2c-8d1a-4d9a-a0db-0fa2ec057848", "sourceURL": "https://asdf-vm.com/ja-jp/manage/core.html", "url": "https://asdf-vm.com/ja-jp/manage/core.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you explain what 커뮤니티 프로젝트 is in asdf-vm?\n\nAssistant: Sure, I'd be happy to explain 커뮤니티 프로젝트 in asdf-vm.\n\n# 커뮤니티 프로젝트\n\nasdf와 관련된 커뮤니티 프로젝트들입니다.Here's a quick rundown of what this is about:\n\n## 프로젝트 목록\n\n- [asdf-community](https://github.com/asdf-community): asdf 플로그인들의 장기 관리를 위한 커뮤니티 주도의 프로젝트입니다.\n- [asdf dev container](https://github.com/iloveitaly/asdf-devcontainer): GitHub 코드스페이스에서 asdf가 관리하는 툴들을 지원하는 [GitHub 개발 컨테이너](https://docs.github.com/en/codespaces/setting-up-your-project-for-codespaces/introduction-to-dev-containers)\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://asdf-vm.com/ko-kr/more/community-projects", "title": "커뮤니티 프로젝트", "description": "asdf와 관련된 커뮤니티 프로젝트들입니다.", "has_code_examples": false, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 03:48:43", "type": "overview", "page_metadata": {"description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "title": "커뮤니티 프로젝트 | asdf", "language": "ko-kr", "viewport": "width=device-width,initial-scale=1", "scrapeId": "c53322c9-0685-4544-9c79-59a734d3d224", "sourceURL": "https://asdf-vm.com/ko-kr/more/community-projects", "url": "https://asdf-vm.com/ko-kr/more/community-projects", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 프로젝트 목록 in asdf-vm?\n\nAssistant: To 프로젝트 목록 in asdf-vm, here's what you do:\n- [asdf-community](https://github.com/asdf-community): asdf 플로그인들의 장기 관리를 위한 커뮤니티 주도의 프로젝트입니다.\n- [asdf dev container](https://github.com/iloveitaly/asdf-devcontainer): GitHub 코드스페이스에서 asdf가 관리하는 툴들을 지원하는 [GitHub 개발 컨테이너](https://docs.github.com/en/codespaces/setting-up-your-project-for-codespaces/introduction-to-dev-containers).\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ko-kr/more/community-projects", "title": "커뮤니티 프로젝트", "description": "asdf와 관련된 커뮤니티 프로젝트들입니다.", "has_code_examples": false, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 03:48:43", "type": "section_detail", "page_metadata": {"description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "title": "커뮤니티 프로젝트 | asdf", "language": "ko-kr", "viewport": "width=device-width,initial-scale=1", "scrapeId": "c53322c9-0685-4544-9c79-59a734d3d224", "sourceURL": "https://asdf-vm.com/ko-kr/more/community-projects", "url": "https://asdf-vm.com/ko-kr/more/community-projects", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: What are some tips for using 커뮤니티 프로젝트 in asdf-vm effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nasdf 코어 팀은 이 프로젝트들 혹은 코드를 소유하지 않습니다.\n\nasdf 코어는 위의 목록들에 품질과 보안을 책임지지 않습니다.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://asdf-vm.com/ko-kr/more/community-projects", "title": "커뮤니티 프로젝트", "description": "asdf와 관련된 커뮤니티 프로젝트들입니다.", "has_code_examples": false, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 03:48:43", "type": "best_practices", "page_metadata": {"description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "title": "커뮤니티 프로젝트 | asdf", "language": "ko-kr", "viewport": "width=device-width,initial-scale=1", "scrapeId": "c53322c9-0685-4544-9c79-59a734d3d224", "sourceURL": "https://asdf-vm.com/ko-kr/more/community-projects", "url": "https://asdf-vm.com/ko-kr/more/community-projects", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you explain what 謝辞 is in asdf-vm?\n\nAssistant: Sure, I'd be happy to explain 謝辞 in asdf-vm.\n\n# 謝辞\n\nこのページを借りて、asdfのオーサーおよびコントリビューターの皆様に感謝を申し上げます!Here's a quick rundown of what this is about:\n\n## クレジット\n\n私 ( [@HashNuke](https://github.com/HashNuke))、高熱、風邪、咳。\n\nコピーライト 2014年から今まで ( [MIT License](https://github.com/asdf-vm/asdf/blob/master/LICENSE))\n\n## メンテナー\n\n- [@HashNuke](https://github.com/HashNuke)\n- [@danhper](https://github.com/danhper)\n- [@Stratus3D](https://github.com/Stratus3D)\n- [@vic](https://github.com/vic)\n- [@jthegedus](https://github.com/jthegedus)\n\n## コントリビューター\n\nGitHubの [コントリビューターリスト](https://github.com/asdf-vm/asdf/graphs/contributors) 🙏をご覧ください。\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://asdf-vm.com/ja-jp/more/thanks.html", "title": "謝辞", "description": "このページを借りて、asdfのオーサーおよびコントリビューターの皆様に感謝を申し上げます!", "has_code_examples": false, "has_best_practices": false, "section_count": 3, "timestamp": "2025-03-01 03:49:02", "type": "overview", "page_metadata": {"generator": "VitePress v1.6.3", "description": "Manage multiple runtime versions with a single CLI tool", "title": "謝辞 | asdf", "language": "ja-jp", "viewport": "width=device-width,initial-scale=1", "scrapeId": "5e615d62-9bd7-4641-a536-9e313f9a8477", "sourceURL": "https://asdf-vm.com/ja-jp/more/thanks.html", "url": "https://asdf-vm.com/ja-jp/more/thanks.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I クレジット in asdf-vm?\n\nAssistant: To クレジット in asdf-vm, here's what you do:\n私 ( [@HashNuke](https://github.com/HashNuke))、高熱、風邪、咳。\n\nコピーライト 2014年から今まで ( [MIT License](https://github.com/asdf-vm/asdf/blob/master/LICENSE)).\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ja-jp/more/thanks.html", "title": "謝辞", "description": "このページを借りて、asdfのオーサーおよびコントリビューターの皆様に感謝を申し上げます!", "has_code_examples": false, "has_best_practices": false, "section_count": 3, "timestamp": "2025-03-01 03:49:02", "type": "section_detail", "page_metadata": {"generator": "VitePress v1.6.3", "description": "Manage multiple runtime versions with a single CLI tool", "title": "謝辞 | asdf", "language": "ja-jp", "viewport": "width=device-width,initial-scale=1", "scrapeId": "5e615d62-9bd7-4641-a536-9e313f9a8477", "sourceURL": "https://asdf-vm.com/ja-jp/more/thanks.html", "url": "https://asdf-vm.com/ja-jp/more/thanks.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I メンテナー in asdf-vm?\n\nAssistant: To メンテナー in asdf-vm, here's what you do:\n- [@HashNuke](https://github.com/HashNuke)\n- [@danhper](https://github.com/danhper)\n- [@Stratus3D](https://github.com/Stratus3D)\n- [@vic](https://github.com/vic)\n- [@jthegedus](https://github.com/jthegedus).\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ja-jp/more/thanks.html", "title": "謝辞", "description": "このページを借りて、asdfのオーサーおよびコントリビューターの皆様に感謝を申し上げます!", "has_code_examples": false, "has_best_practices": false, "section_count": 3, "timestamp": "2025-03-01 03:49:02", "type": "section_detail", "page_metadata": {"generator": "VitePress v1.6.3", "description": "Manage multiple runtime versions with a single CLI tool", "title": "謝辞 | asdf", "language": "ja-jp", "viewport": "width=device-width,initial-scale=1", "scrapeId": "5e615d62-9bd7-4641-a536-9e313f9a8477", "sourceURL": "https://asdf-vm.com/ja-jp/more/thanks.html", "url": "https://asdf-vm.com/ja-jp/more/thanks.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I コントリビューター in asdf-vm?\n\nAssistant: To コントリビューター in asdf-vm, here's what you do:\nGitHubの [コントリビューターリスト](https://github.com/asdf-vm/asdf/graphs/contributors) 🙏をご覧ください。.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ja-jp/more/thanks.html", "title": "謝辞", "description": "このページを借りて、asdfのオーサーおよびコントリビューターの皆様に感謝を申し上げます!", "has_code_examples": false, "has_best_practices": false, "section_count": 3, "timestamp": "2025-03-01 03:49:02", "type": "section_detail", "page_metadata": {"generator": "VitePress v1.6.3", "description": "Manage multiple runtime versions with a single CLI tool", "title": "謝辞 | asdf", "language": "ja-jp", "viewport": "width=device-width,initial-scale=1", "scrapeId": "5e615d62-9bd7-4641-a536-9e313f9a8477", "sourceURL": "https://asdf-vm.com/ja-jp/more/thanks.html", "url": "https://asdf-vm.com/ja-jp/more/thanks.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you explain what 致谢 is in asdf-vm?\n\nAssistant: Sure, I'd be happy to explain 致谢 in asdf-vm.\n\n# 致谢\n\nasdf 作者和贡献者的感谢页！Here's a quick rundown of what this is about:\n\n## 作者\n\n我 ( [@HashNuke](https://github.com/HashNuke))，高烧、感冒、咳嗽。\n\n版权 2014 直到时间尽头 ( [MIT License](https://github.com/asdf-vm/asdf/blob/master/LICENSE))\n\n## 维护者\n\n- [@HashNuke](https://github.com/HashNuke)\n- [@danhper](https://github.com/danhper)\n- [@Stratus3D](https://github.com/Stratus3D)\n- [@vic](https://github.com/vic)\n- [@jthegedus](https://github.com/jthegedus)\n\n## 贡献者\n\n请查看 Github 上的 [贡献者名单](https://github.com/asdf-vm/asdf/graphs/contributors) 🙏 了解更多。\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://asdf-vm.com/zh-hans/more/thanks.html", "title": "致谢", "description": "asdf 作者和贡献者的感谢页！", "has_code_examples": false, "has_best_practices": false, "section_count": 3, "timestamp": "2025-03-01 03:51:01", "type": "overview", "page_metadata": {"description": "Manage multiple runtime versions with a single CLI tool", "title": "致谢 | asdf", "generator": "VitePress v1.6.3", "language": "zh-hans", "viewport": "width=device-width,initial-scale=1", "scrapeId": "beb7c061-19c3-4227-ab3c-e18e18a9cdd8", "sourceURL": "https://asdf-vm.com/zh-hans/more/thanks.html", "url": "https://asdf-vm.com/zh-hans/more/thanks.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 作者 in asdf-vm?\n\nAssistant: To 作者 in asdf-vm, here's what you do:\n我 ( [@HashNuke](https://github.com/HashNuke))，高烧、感冒、咳嗽。\n\n版权 2014 直到时间尽头 ( [MIT License](https://github.com/asdf-vm/asdf/blob/master/LICENSE)).\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/zh-hans/more/thanks.html", "title": "致谢", "description": "asdf 作者和贡献者的感谢页！", "has_code_examples": false, "has_best_practices": false, "section_count": 3, "timestamp": "2025-03-01 03:51:01", "type": "section_detail", "page_metadata": {"description": "Manage multiple runtime versions with a single CLI tool", "title": "致谢 | asdf", "generator": "VitePress v1.6.3", "language": "zh-hans", "viewport": "width=device-width,initial-scale=1", "scrapeId": "beb7c061-19c3-4227-ab3c-e18e18a9cdd8", "sourceURL": "https://asdf-vm.com/zh-hans/more/thanks.html", "url": "https://asdf-vm.com/zh-hans/more/thanks.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 维护者 in asdf-vm?\n\nAssistant: To 维护者 in asdf-vm, here's what you do:\n- [@HashNuke](https://github.com/HashNuke)\n- [@danhper](https://github.com/danhper)\n- [@Stratus3D](https://github.com/Stratus3D)\n- [@vic](https://github.com/vic)\n- [@jthegedus](https://github.com/jthegedus).\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/zh-hans/more/thanks.html", "title": "致谢", "description": "asdf 作者和贡献者的感谢页！", "has_code_examples": false, "has_best_practices": false, "section_count": 3, "timestamp": "2025-03-01 03:51:01", "type": "section_detail", "page_metadata": {"description": "Manage multiple runtime versions with a single CLI tool", "title": "致谢 | asdf", "generator": "VitePress v1.6.3", "language": "zh-hans", "viewport": "width=device-width,initial-scale=1", "scrapeId": "beb7c061-19c3-4227-ab3c-e18e18a9cdd8", "sourceURL": "https://asdf-vm.com/zh-hans/more/thanks.html", "url": "https://asdf-vm.com/zh-hans/more/thanks.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 贡献者 in asdf-vm?\n\nAssistant: To 贡献者 in asdf-vm, here's what you do:\n请查看 Github 上的 [贡献者名单](https://github.com/asdf-vm/asdf/graphs/contributors) 🙏 了解更多。.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/zh-hans/more/thanks.html", "title": "致谢", "description": "asdf 作者和贡献者的感谢页！", "has_code_examples": false, "has_best_practices": false, "section_count": 3, "timestamp": "2025-03-01 03:51:01", "type": "section_detail", "page_metadata": {"description": "Manage multiple runtime versions with a single CLI tool", "title": "致谢 | asdf", "generator": "VitePress v1.6.3", "language": "zh-hans", "viewport": "width=device-width,initial-scale=1", "scrapeId": "beb7c061-19c3-4227-ab3c-e18e18a9cdd8", "sourceURL": "https://asdf-vm.com/zh-hans/more/thanks.html", "url": "https://asdf-vm.com/zh-hans/more/thanks.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you explain what GitHub Actions is in asdf-vm?\n\nAssistant: Sure, I'd be happy to explain GitHub Actions in asdf-vm.\n\n# GitHub Actions\n\n당신의 관심에 감사드리며, 존재하는 이슈들, 대화들, 그리고 기여 가이드라인을 asdf actions 리포지토리에서 확인 해주세요.", "metadata": {"source_url": "https://asdf-vm.com/ko-kr/contribute/github-actions", "title": "GitHub Actions", "description": "당신의 관심에 감사드리며, 존재하는 이슈들, 대화들, 그리고 기여 가이드라인을 asdf actions 리포지토리에서 확인 해주세요.", "has_code_examples": false, "has_best_practices": false, "section_count": 0, "timestamp": "2025-03-01 03:51:22", "type": "overview", "page_metadata": {"generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "title": "GitHub Actions | asdf", "description": "Manage multiple runtime versions with a single CLI tool", "language": "ko-kr", "scrapeId": "70fef1af-ae90-4f6b-9828-b1cf3fdf247d", "sourceURL": "https://asdf-vm.com/ko-kr/contribute/github-actions", "url": "https://asdf-vm.com/ko-kr/contribute/github-actions", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you explain what First-Party Plugins is in asdf-vm?\n\nAssistant: Sure, I'd be happy to explain First-Party Plugins in asdf-vm.\n\n# First-Party Plugins\n\nThe asdf core team has authored some plugins relevant to their daily work life. Help is always welcome in maintaining and improving these plugins.Here's a quick rundown of what this is about:\n\n## First-Party Plugins\n\nThe asdf core team has authored some plugins relevant to their daily work life. Help is always welcome in maintaining and improving these plugins. See the associated repo for each linked below:\n\n- [Elixir](https://github.com/asdf-vm/asdf-elixir)\n- [Erlang](https://github.com/asdf-vm/asdf-erlang)\n- [Node.js](https://github.com/asdf-vm/asdf-nodejs)\n- [Ruby](https://github.com/asdf-vm/asdf-ruby)\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://asdf-vm.com/contribute/first-party-plugins.html", "title": "First-Party Plugins", "description": "The asdf core team has authored some plugins relevant to their daily work life. Help is always welcome in maintaining and improving these plugins.", "has_code_examples": false, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 03:51:29", "type": "overview", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "generator": "VitePress v1.6.3", "title": "First-Party Plugins | asdf", "language": "en-US", "description": "Manage multiple runtime versions with a single CLI tool", "scrapeId": "b1c7f554-3e93-4be4-9f45-4b74af5c5509", "sourceURL": "https://asdf-vm.com/contribute/first-party-plugins.html", "url": "https://asdf-vm.com/contribute/first-party-plugins.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I first-party plugins in asdf-vm?\n\nAssistant: To first-party plugins in asdf-vm, here's what you do:\nThe asdf core team has authored some plugins relevant to their daily work life. Help is always welcome in maintaining and improving these plugins. See the associated repo for each linked below:\n\n- [Elixir](https://github.com/asdf-vm/asdf-elixir)\n- [Erlang](https://github.com/asdf-vm/asdf-erlang)\n- [Node.js](https://github.com/asdf-vm/asdf-nodejs)\n- [Ruby](https://github.com/asdf-vm/asdf-ruby).\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/contribute/first-party-plugins.html", "title": "First-Party Plugins", "description": "The asdf core team has authored some plugins relevant to their daily work life. Help is always welcome in maintaining and improving these plugins.", "has_code_examples": false, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 03:51:29", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "generator": "VitePress v1.6.3", "title": "First-Party Plugins | asdf", "language": "en-US", "description": "Manage multiple runtime versions with a single CLI tool", "scrapeId": "b1c7f554-3e93-4be4-9f45-4b74af5c5509", "sourceURL": "https://asdf-vm.com/contribute/first-party-plugins.html", "url": "https://asdf-vm.com/contribute/first-party-plugins.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: What are some tips for using First-Party Plugins in asdf-vm effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nHelp is always welcome in maintaining and improving these plugins.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://asdf-vm.com/contribute/first-party-plugins.html", "title": "First-Party Plugins", "description": "The asdf core team has authored some plugins relevant to their daily work life. Help is always welcome in maintaining and improving these plugins.", "has_code_examples": false, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 03:51:29", "type": "best_practices", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "generator": "VitePress v1.6.3", "title": "First-Party Plugins | asdf", "language": "en-US", "description": "Manage multiple runtime versions with a single CLI tool", "scrapeId": "b1c7f554-3e93-4be4-9f45-4b74af5c5509", "sourceURL": "https://asdf-vm.com/contribute/first-party-plugins.html", "url": "https://asdf-vm.com/contribute/first-party-plugins.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you explain what Upgrading to 0.16.0 is in asdf-vm?\n\nAssistant: Sure, I'd be happy to explain Upgrading to 0.16.0 in asdf-vm.\n\n# Upgrading to 0.16.0\n\nThis page covers the steps and considerations for upgrading to asdf version 0.16.0, including installation, breaking changes, and how to upgrade without losing data.Here's a quick rundown of what this is about:\n\n## Installation\n\nInstallation of version 0.16.0 is much simpler than previous versions of asdf. It's just three steps:\n\n- Download the appropriate `asdf` binary for your operating system/architecture combo and place it in a directory on your `$PATH`\n- Add `$ASDF_DATA_DIR/shims` to the front of your `$PATH`.\n- Optionally, if you previously had a customized location for asdf data, set `ASDF_DATA_DIR` to the directory you already had the old version installing plugins, versions, and shims.\n\nIf your operating system's package manager already offers asdf 0.16.0 that is probably the best method for installing it. Upgrading asdf is now only possible via OS package managers and manual installation. There is no self-upgrade feature.\n\n## Upgrading Without Losing Data\n\nYou can upgrade to the latest version of asdf without losing your existing install data. It's the same sequence of steps as above.\n\n1. Download the appropriate `asdf` binary for your operating system & architecture\n\n   Download the binary and place it in a directory on your path. I chose to place the asdf binary in `$HOME/bin` and then added `$HOME/bin` to the front of my `$PATH`:\n   ```\n   # In .zshrc, .bashrc, etc...\n   export PATH=\"$HOME/bin:$PATH\"\n   ```\n\n2. Set `ASDF_DATA_DIR`\n\n   Run `asdf info` and copy the line containing the `ASDF_DATA_DIR` variable:\n   ```\n   ...\n   ASDF_DATA_DIR=\"/home/myuser/.asdf\"\n   ...\n   ```\n   In your shell RC file ( `.zshrc` if Zsh, `.bashrc` if Bash, etc...) add a line to the end setting `ASDF_DATA_DIR` to that same value:\n   ```\n   export ASDF_DATA_DIR=\"/home/myuser/.asdf\"\n   ```\n\n3. Add `$ASDF_DATA_DIR/shims` to the front of your `$PATH`\n\n   In your shell RC file (same file as step #2) add `$ASDF_DATA_DIR/shims` to the front of your path:\n   ```\n   export ASDF_DATA_DIR=\"/home/myuser/.asdf\"\n   export PATH=\"$ASDF_DATA_DIR/shims:$PATH\"\n   ```\n\n4. Regenerate Shims\n\n   Verify that `asdf` command in your shell session is version 0.16.0+ by running `asdf --help`. If you still see an older version you will need to start a new shell session.\n   Once you've verified the `asdf` command is the new version run `asdf reshim` to regenerate all shims. This is necessary as the old shims may still reference the old Bash version.\n\n## Testing\n\nIf you aren't sure if the upgrade to 0.16.0 will break things for you can you can test by installing 0.16.0 in addition to your existing version as described above in \"Upgrading Without Losing Data\". If it turns out that the upgrade to 0.16.0 breaks things for you simply remove the lines you added to your shell RC file.\n\n## Breaking Changes\n\n### Hyphenated commands have been removed\n\nasdf version 0.15.0 and earlier supported by hyphenated and non-hyphenated versions of certain commands. With version 0.16.0 only the non-hyphenated versions are supported. The affected commands:\n- `asdf list-all` -\\> `asdf list all`\n- `asdf plugin-add` -\\> `asdf plugin add`\n- `asdf plugin-list` -\\> `asdf plugin list`\n- `asdf plugin-list-all` -\\> `asdf plugin list all`\n- `asdf plugin-update` -\\> `asdf plugin update`\n- `asdf plugin-remove` -\\> `asdf plugin remove`\n- `asdf plugin-test` -\\> `asdf plugin test`\n- `asdf shim-versions` -\\> `asdf shimversions`\n\n### `asdf global` and `asdf local` commands have been replaced with `asdf set`\n\n`asdf global` and `asdf local` have been removed. The \"global\" and \"local\" terminology was wrong and also misleading. asdf doesn't actually support \"global\" versions that apply everywhere. Any version that was specified with `asdf global` could easily be overridden by a `.tool-versions` file in your current directory specifying a different version. This was confusing to users. The new `asdf set` behaves the same as `asdf local` by default, but also has flags for setting versions in the user's home directory ( `--home`) and in an existing `.tool-versions` file in one of the parent directories ( `--parent`). This new interface will hopefully convey a better understanding of how asdf resolves versions and provide equivalent functionality.\n\n### `asdf update` command has been removed\n\nUpdates can no longer be performed this way. Use your OS package manager or download the latest binary manually. Additionally, the `asdf update` command present in versions 0.15.0 and older cannot upgrade to version 0.16.0 because the install process has changed. **You cannot upgrade to the latest Go implementation using `asdf update`.**\n\n### `asdf shell` command has been removed\n\nThis command actually set an environment variable in the user's current shell session. It was able to do this because `asdf` was actually a shell function, not an executable. The new rewrite removes all shell code from asdf, and it is now a binary rather than a shell function, so setting environment variables directly in the shell is no longer possible.\n\n### `asdf current` has changed\n\nInstead of three columns in the output, with the last being either the location the version is set or a suggested command that could be run to set or install a version. The third column has been split into two columns. The third column now only indicates the source of the version if it is set (typically either version file or environment variable) and the fourth is a boolean indicating whether the specified version is actually installed. If it is not installed, a suggested install command is shown.\n\n### Plugin extension commands must now be prefixed with `cmd`\n\nPreviously plugin extension commands could be run like this:\n```bash\nasdf nodejs nodebuild --version\n```\nNow they must be prefixed with `cmd` to avoid causing confusion with built-in commands:\n```bash\nasdf cmd nodejs nodebuild --version\n```\n\n### Extension commands have been redesigned\n\nThere are a number of breaking changes for plugin extension commands:\n- They must be runnable by `exec` syscall. If your extension commands are shell scripts in order to be run with `exec` they must start with a proper shebang line.\n- They can now be binaries or scripts in any language. It no longer makes sense to require a `.bash` extension as it is misleading.\n- They must have executable permission set.\n- They are no longer sourced by asdf as Bash scripts when they lack executable permission.\n\nAdditionally, only the first argument after plugin name is used to determine the extension command to run. This means effectively there is the default `command` extension command that asdf defaults to when no command matching the first argument after plugin name is found. For example:\n```\nfoo/\n  lib/commands/\n    command\n    command-bar\n    command-bat-man\n```\nPreviously these scripts would work like this:\n```\n$ asdf cmd foo         # same as running `$ASDF_DATA_DIR/plugins/foo/lib/commands/command`\n$ asdf cmd foo bar     # same as running `$ASDF_DATA_DIR/plugins/foo/lib/commands/command-bar`\n$ asdf cmd foo bat man # same as running `$ASDF_DATA_DIR/plugins/foo/lib/commands/command-bat-man`\n```\nNow:\n```\n$ asdf cmd foo         # same as running `$ASDF_DATA_DIR/plugins/foo/lib/commands/command`\n$ asdf cmd foo bar     # same as running `$ASDF_DATA_DIR/plugins/foo/lib/commands/command-bar`\n$ asdf cmd foo bat man # same as running `$ASDF_DATA_DIR/plugins/foo/lib/commands/command-bat man`\n```\n\n### Executables Shims Resolve to Must Runnable by `syscall.Exec`\n\nThe most obvious example of this breaking change are scripts that lack a proper shebang line. asdf 0.15.0 and older were implemented in Bash, so as long it was an executable that could be executed with Bash it would run. This mean that scripts lacking a shebang could still be run by `asdf exec`. With asdf 0.16.x implemented in Go we now invoke executables via Go's `syscall.Exec` function, which cannot handle scripts lacking a shebang.\n\nIn practice this isn't much of a problem. Most shell scripts DO contain a shebang line. If a tool managed by asdf provides scripts that don't have a shebang line one will need to be added to them.\n\n### Custom shim templates are no longer supported\n\nThis was a rarely used feature. The only plugin maintained by the core team that used it was the Elixir plugin, and it no longer needs it. This feature was originally added so that shim that get evaluated by a program rather than executed contain code that is suitable for evaluation by a particular program (in the case of Elixir this was the `iex` shell). Upon further investigation it seems this feature only exists because the `PATH` for executables was sometimes improperly set to include the **shims** rather than the other **executables** for the selected version(s).\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://asdf-vm.com/guide/upgrading-to-v0-16.html", "title": "Upgrading to 0.16.0", "description": "This page covers the steps and considerations for upgrading to asdf version 0.16.0, including installation, breaking changes, and how to upgrade without losing data.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:52:20", "type": "overview", "page_metadata": {"title": "Upgrading to 0.16.0 | asdf", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "language": "en-US", "generator": "VitePress v1.6.3", "scrapeId": "80f1fdb6-41c8-47dc-b90c-35cc207cfe91", "sourceURL": "https://asdf-vm.com/guide/upgrading-to-v0-16.html", "url": "https://asdf-vm.com/guide/upgrading-to-v0-16.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I installation in asdf-vm?\n\nAssistant: To installation in asdf-vm, here's what you do:\nInstallation of version 0.16.0 is much simpler than previous versions of asdf. It's just three steps:\n\n- Download the appropriate `asdf` binary for your operating system/architecture combo and place it in a directory on your `$PATH`\n- Add `$ASDF_DATA_DIR/shims` to the front of your `$PATH`.\n- Optionally, if you previously had a customized location for asdf data, set `ASDF_DATA_DIR` to the directory you already had the old version installing plugins, versions, and shims.\n\nIf your operating system's package manager already offers asdf 0.16.0 that is probably the best method for installing it. Upgrading asdf is now only possible via OS package managers and manual installation. There is no self-upgrade feature..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/guide/upgrading-to-v0-16.html", "title": "Upgrading to 0.16.0", "description": "This page covers the steps and considerations for upgrading to asdf version 0.16.0, including installation, breaking changes, and how to upgrade without losing data.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:52:20", "type": "section_detail", "page_metadata": {"title": "Upgrading to 0.16.0 | asdf", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "language": "en-US", "generator": "VitePress v1.6.3", "scrapeId": "80f1fdb6-41c8-47dc-b90c-35cc207cfe91", "sourceURL": "https://asdf-vm.com/guide/upgrading-to-v0-16.html", "url": "https://asdf-vm.com/guide/upgrading-to-v0-16.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I upgrading without losing data in asdf-vm?\n\nAssistant: To upgrading without losing data in asdf-vm, here's what you do:\nYou can upgrade to the latest version of asdf without losing your existing install data. It's the same sequence of steps as above.\n\n1. Download the appropriate `asdf` binary for your operating system & architecture\n\n   Download the binary and place it in a directory on your path. I chose to place the asdf binary in `$HOME/bin` and then added `$HOME/bin` to the front of my `$PATH`:\n   ```\n   # In .zshrc, .bashrc, etc...\n   export PATH=\"$HOME/bin:$PATH\"\n   ```\n\n2. Set `ASDF_DATA_DIR`\n\n   Run `asdf info` and copy the line containing the `ASDF_DATA_DIR` variable:\n   ```\n   ...\n   ASDF_DATA_DIR=\"/home/myuser/.asdf\"\n   ...\n   ```\n   In your shell RC file ( `.zshrc` if Zsh, `.bashrc` if Bash, etc...) add a line to the end setting `ASDF_DATA_DIR` to that same value:\n   ```\n   export ASDF_DATA_DIR=\"/home/myuser/.asdf\"\n   ```\n\n3. Add `$ASDF_DATA_DIR/shims` to the front of your `$PATH`\n\n   In your shell RC file (same file as step #2) add `$ASDF_DATA_DIR/shims` to the front of your path:\n   ```\n   export ASDF_DATA_DIR=\"/home/myuser/.asdf\"\n   export PATH=\"$ASDF_DATA_DIR/shims:$PATH\"\n   ```\n\n4. Regenerate Shims\n\n   Verify that `asdf` command in your shell session is version 0.16.0+ by running `asdf --help`. If you still see an older version you will need to start a new shell session.\n   Once you've verified the `asdf` command is the new version run `asdf reshim` to regenerate all shims. This is necessary as the old shims may still reference the old Bash version..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/guide/upgrading-to-v0-16.html", "title": "Upgrading to 0.16.0", "description": "This page covers the steps and considerations for upgrading to asdf version 0.16.0, including installation, breaking changes, and how to upgrade without losing data.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:52:20", "type": "section_detail", "page_metadata": {"title": "Upgrading to 0.16.0 | asdf", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "language": "en-US", "generator": "VitePress v1.6.3", "scrapeId": "80f1fdb6-41c8-47dc-b90c-35cc207cfe91", "sourceURL": "https://asdf-vm.com/guide/upgrading-to-v0-16.html", "url": "https://asdf-vm.com/guide/upgrading-to-v0-16.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I testing in asdf-vm?\n\nAssistant: To testing in asdf-vm, here's what you do:\nIf you aren't sure if the upgrade to 0.16.0 will break things for you can you can test by installing 0.16.0 in addition to your existing version as described above in \"Upgrading Without Losing Data\". If it turns out that the upgrade to 0.16.0 breaks things for you simply remove the lines you added to your shell RC file..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/guide/upgrading-to-v0-16.html", "title": "Upgrading to 0.16.0", "description": "This page covers the steps and considerations for upgrading to asdf version 0.16.0, including installation, breaking changes, and how to upgrade without losing data.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:52:20", "type": "section_detail", "page_metadata": {"title": "Upgrading to 0.16.0 | asdf", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "language": "en-US", "generator": "VitePress v1.6.3", "scrapeId": "80f1fdb6-41c8-47dc-b90c-35cc207cfe91", "sourceURL": "https://asdf-vm.com/guide/upgrading-to-v0-16.html", "url": "https://asdf-vm.com/guide/upgrading-to-v0-16.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I breaking changes in asdf-vm?\n\nAssistant: To breaking changes in asdf-vm, here's what you do:\n### Hyphenated commands have been removed\n\nasdf version 0.15.0 and earlier supported by hyphenated and non-hyphenated versions of certain commands. With version 0.16.0 only the non-hyphenated versions are supported. The affected commands:\n- `asdf list-all` -\\> `asdf list all`\n- `asdf plugin-add` -\\> `asdf plugin add`\n- `asdf plugin-list` -\\> `asdf plugin list`\n- `asdf plugin-list-all` -\\> `asdf plugin list all`\n- `asdf plugin-update` -\\> `asdf plugin update`\n- `asdf plugin-remove` -\\> `asdf plugin remove`\n- `asdf plugin-test` -\\> `asdf plugin test`\n- `asdf shim-versions` -\\> `asdf shimversions`\n\n### `asdf global` and `asdf local` commands have been replaced with `asdf set`\n\n`asdf global` and `asdf local` have been removed. The \"global\" and \"local\" terminology was wrong and also misleading. asdf doesn't actually support \"global\" versions that apply everywhere. Any version that was specified with `asdf global` could easily be overridden by a `.tool-versions` file in your current directory specifying a different version. This was confusing to users. The new `asdf set` behaves the same as `asdf local` by default, but also has flags for setting versions in the user's home directory ( `--home`) and in an existing `.tool-versions` file in one of the parent directories ( `--parent`). This new interface will hopefully convey a better understanding of how asdf resolves versions and provide equivalent functionality.\n\n### `asdf update` command has been removed\n\nUpdates can no longer be performed this way. Use your OS package manager or download the latest binary manually. Additionally, the `asdf update` command present in versions 0.15.0 and older cannot upgrade to version 0.16.0 because the install process has changed. **You cannot upgrade to the latest Go implementation using `asdf update`.**\n\n### `asdf shell` command has been removed\n\nThis command actually set an environment variable in the user's current shell session. It was able to do this because `asdf` was actually a shell function, not an executable. The new rewrite removes all shell code from asdf, and it is now a binary rather than a shell function, so setting environment variables directly in the shell is no longer possible.\n\n### `asdf current` has changed\n\nInstead of three columns in the output, with the last being either the location the version is set or a suggested command that could be run to set or install a version. The third column has been split into two columns. The third column now only indicates the source of the version if it is set (typically either version file or environment variable) and the fourth is a boolean indicating whether the specified version is actually installed. If it is not installed, a suggested install command is shown.\n\n### Plugin extension commands must now be prefixed with `cmd`\n\nPreviously plugin extension commands could be run like this:\n```bash\nasdf nodejs nodebuild --version\n```\nNow they must be prefixed with `cmd` to avoid causing confusion with built-in commands:\n```bash\nasdf cmd nodejs nodebuild --version\n```\n\n### Extension commands have been redesigned\n\nThere are a number of breaking changes for plugin extension commands:\n- They must be runnable by `exec` syscall. If your extension commands are shell scripts in order to be run with `exec` they must start with a proper shebang line.\n- They can now be binaries or scripts in any language. It no longer makes sense to require a `.bash` extension as it is misleading.\n- They must have executable permission set.\n- They are no longer sourced by asdf as Bash scripts when they lack executable permission.\n\nAdditionally, only the first argument after plugin name is used to determine the extension command to run. This means effectively there is the default `command` extension command that asdf defaults to when no command matching the first argument after plugin name is found. For example:\n```\nfoo/\n  lib/commands/\n    command\n    command-bar\n    command-bat-man\n```\nPreviously these scripts would work like this:\n```\n$ asdf cmd foo         # same as running `$ASDF_DATA_DIR/plugins/foo/lib/commands/command`\n$ asdf cmd foo bar     # same as running `$ASDF_DATA_DIR/plugins/foo/lib/commands/command-bar`\n$ asdf cmd foo bat man # same as running `$ASDF_DATA_DIR/plugins/foo/lib/commands/command-bat-man`\n```\nNow:\n```\n$ asdf cmd foo         # same as running `$ASDF_DATA_DIR/plugins/foo/lib/commands/command`\n$ asdf cmd foo bar     # same as running `$ASDF_DATA_DIR/plugins/foo/lib/commands/command-bar`\n$ asdf cmd foo bat man # same as running `$ASDF_DATA_DIR/plugins/foo/lib/commands/command-bat man`\n```\n\n### Executables Shims Resolve to Must Runnable by `syscall.Exec`\n\nThe most obvious example of this breaking change are scripts that lack a proper shebang line. asdf 0.15.0 and older were implemented in Bash, so as long it was an executable that could be executed with Bash it would run. This mean that scripts lacking a shebang could still be run by `asdf exec`. With asdf 0.16.x implemented in Go we now invoke executables via Go's `syscall.Exec` function, which cannot handle scripts lacking a shebang.\n\nIn practice this isn't much of a problem. Most shell scripts DO contain a shebang line. If a tool managed by asdf provides scripts that don't have a shebang line one will need to be added to them.\n\n### Custom shim templates are no longer supported\n\nThis was a rarely used feature. The only plugin maintained by the core team that used it was the Elixir plugin, and it no longer needs it. This feature was originally added so that shim that get evaluated by a program rather than executed contain code that is suitable for evaluation by a particular program (in the case of Elixir this was the `iex` shell). Upon further investigation it seems this feature only exists because the `PATH` for executables was sometimes improperly set to include the **shims** rather than the other **executables** for the selected version(s)..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/guide/upgrading-to-v0-16.html", "title": "Upgrading to 0.16.0", "description": "This page covers the steps and considerations for upgrading to asdf version 0.16.0, including installation, breaking changes, and how to upgrade without losing data.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:52:20", "type": "section_detail", "page_metadata": {"title": "Upgrading to 0.16.0 | asdf", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "language": "en-US", "generator": "VitePress v1.6.3", "scrapeId": "80f1fdb6-41c8-47dc-b90c-35cc207cfe91", "sourceURL": "https://asdf-vm.com/guide/upgrading-to-v0-16.html", "url": "https://asdf-vm.com/guide/upgrading-to-v0-16.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you give me some code examples for Upgrading to 0.16.0 in asdf-vm?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Setting PATH in shell RC file**:\n\n```yaml\n# In .zshrc, .bashrc, etc...\nexport PATH=\"$HOME/bin:$PATH\"\n```\n\nThis snippet shows you how to setting path in shell rc file, which is an important aspect of upgrading to 0.16.0.\n\n**Setting ASDF_DATA_DIR**:\n\n```yaml\nexport ASDF_DATA_DIR=\"/home/myuser/.asdf\"\n```\n\nThis snippet shows you how to setting asdf_data_dir, which is an important aspect of upgrading to 0.16.0.\n\n**Adding shims to PATH**:\n\n```yaml\nexport PATH=\"$ASDF_DATA_DIR/shims:$PATH\"\n```\n\nThis snippet shows you how to adding shims to path, which is an important aspect of upgrading to 0.16.0.\n\n**Regenerating shims**:\n\n```yaml\nasdf reshim\n```\n\nThis snippet shows you how to regenerating shims, which is an important aspect of upgrading to 0.16.0.\n\n**Running plugin extension commands**:\n\n```yaml\nasdf cmd nodejs nodebuild --version\n```\n\nThis snippet shows you how to running plugin extension commands, which is an important aspect of upgrading to 0.16.0.\n\n", "metadata": {"source_url": "https://asdf-vm.com/guide/upgrading-to-v0-16.html", "title": "Upgrading to 0.16.0", "description": "This page covers the steps and considerations for upgrading to asdf version 0.16.0, including installation, breaking changes, and how to upgrade without losing data.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:52:20", "type": "code_examples", "page_metadata": {"title": "Upgrading to 0.16.0 | asdf", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "language": "en-US", "generator": "VitePress v1.6.3", "scrapeId": "80f1fdb6-41c8-47dc-b90c-35cc207cfe91", "sourceURL": "https://asdf-vm.com/guide/upgrading-to-v0-16.html", "url": "https://asdf-vm.com/guide/upgrading-to-v0-16.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: What are some tips for using Upgrading to 0.16.0 in asdf-vm effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nIf your operating system's package manager already offers asdf 0.16.0, that is probably the best method for installing it.\n\nTo avoid losing existing install data, follow the steps outlined in 'Upgrading Without Losing Data'.\n\nVerify the `asdf` command version after installation by running `asdf --help`.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://asdf-vm.com/guide/upgrading-to-v0-16.html", "title": "Upgrading to 0.16.0", "description": "This page covers the steps and considerations for upgrading to asdf version 0.16.0, including installation, breaking changes, and how to upgrade without losing data.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:52:20", "type": "best_practices", "page_metadata": {"title": "Upgrading to 0.16.0 | asdf", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "language": "en-US", "generator": "VitePress v1.6.3", "scrapeId": "80f1fdb6-41c8-47dc-b90c-35cc207cfe91", "sourceURL": "https://asdf-vm.com/guide/upgrading-to-v0-16.html", "url": "https://asdf-vm.com/guide/upgrading-to-v0-16.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you explain what はじめよう is in asdf-vm?\n\nAssistant: Sure, I'd be happy to explain はじめよう in asdf-vm.\n\n# はじめよう\n\n`asdf` のインストールには次の手順が必要です: 1. 依存関係のインストール 2. `asdf` コアのダウンロード 3. `asdf` のインストール 4. 管理したいツール/ランタイムごとにプラグインをインストール 5. ツール/ランタイムの特定バージョンをインストール 6. `.tool-versions` ファイルで、グローバルまたはプロジェクトのバージョンをセットHere's a quick rundown of what this is about:\n\n## 1. 依存関係のインストール\n\nasdfの動作には `git` および `curl` が必要です。以下の表は、 _あなたが使用している_ パッケージマネージャで実行するコマンドの _一部例_ です(いくつかのツールは、後の手順で自動的にインストールされます)。\n\n| OS | パッケージマネージャ | コマンド |\n| --- | --- | --- |\n| linux | Aptitude | `apt install curl git` |\n| linux | DNF | `dnf install curl git` |\n| linux | Pacman | `pacman -S curl git` |\n| linux | Zypper | `zypper install curl git` |\n| macOS | Homebrew | `brew install coreutils curl git` |\n| macOS | Spack | `spack install coreutils curl git` |\n\n備考\n\nお使いのシステムの構成によっては、接頭に `sudo` が必要となる場合もあります。\n\n## 2. asdfのダウンロード\n\n### 公式ダウンロード\n\nshell\n\n```\ngit clone https://github.com/asdf-vm/asdf.git ~/.asdf --branch v0.14.0\n```\n\n### コミュニティがサポートするダウンロード方法\n\n理由がない限り、 `git` コマンドを使用した公式ダウンロードの手順を使用することを強く推奨します。\n\n| 方法 | コマンド |\n| --- | --- |\n| Homebrew | `brew install asdf` |\n| Pacman | `git clone https://aur.archlinux.org/asdf-vm.git && cd asdf-vm && makepkg -si` または好みの [AURヘルパー](https://wiki.archlinux.jp/index.php/AUR_%E3%83%98%E3%83%AB%E3%83%91%E3%83%BC) を使用 |\n\n## 3. asdfのインストール\n\nあなたが使用しているシェル、OS、およびインストール方法によって、ここでの設定方法が変わります。最も適したものを選択してください。\n\n**masOSユーザの方は、この節の最後にある `path_helper` に関する警告を必ず参照してください。**\n\n**Bash & Git**\n\n`~/.bashrc` に下記の行を追記します:\n\nshell\n\n```\n. \"$HOME/.asdf/asdf.sh\"\n```\n\nコマンド補完が必要な場合は、 `.bashrc` に下記の行を追記します:\n\nshell\n\n```\n. \"$HOME/.asdf/completions/asdf.bash\"\n```\n\n**Bash & Git (macOS)**\n\n**macOS Catalina以降** を使用している場合、デフォルトのシェルは **ZSH** です。Bashに変更していない限り、ZSHの手順を参照してください。\n\n`~/.bash_profile` に下記の行を追記します:\n\nshell\n\n```\n. \"$HOME/.asdf/asdf.sh\"\n```\n\nコマンド補完が必要な場合は、 `.bash_profile` に下記の行を追記します:\n\nshell\n\n```\n. \"$HOME/.asdf/completions/asdf.bash\"\n```\n\n**Bash & Homebrew**\n\n下記コマンドで、 `~/.bashrc` に `asdf.sh` を追加します:\n\nshell\n\n```\necho -e \"\\n. \\\"$(brew --prefix asdf)/libexec/asdf.sh\\\"\" >> ~/.bashrc\n```\n\nコマンド補完が必要な場合は、 [Homebrewのガイドに従って設定を完了させる](https://docs.brew.sh/Shell-Completion#configuring-completions-in-bash) か、下記コマンドを実行します:\n\nshell\n\n```\necho -e \"\\n. \\\"$(brew --prefix asdf)/etc/bash_completion.d/asdf.bash\\\"\" >> ~/.bashrc\n```\n\n**Bash & Homebrew (macOS)**\n\n**macOS Catalina以降** を使用している場合、デフォルトのシェルは **ZSH** です。Bashに変更していない限り、ZSHの手順を参照してください。\n\n下記コマンドで、 `~/.bash_profile` に `asdf.sh` を追加します:\n\nshell\n\n```\necho -e \"\\n. \\\"$(brew --prefix asdf)/libexec/asdf.sh\\\"\" >> ~/.bash_profile\n```\n\nコマンド補完が必要な場合は、 [Homebrewのガイドに従って設定を完了させる](https://docs.brew.sh/Shell-Completion#configuring-completions-in-bash) か、下記コマンドを実行します:\n\nshell\n\n```\necho -e \"\\n. \\\"$(brew --prefix asdf)/etc/bash_completion.d/asdf.bash\\\"\" >> ~/.bash_profile\n```\n\n**Bash & Pacman**\n\n`~/.bashrc` に下記の行を追記します:\n\nshell\n\n```\n. /opt/asdf-vm/asdf.sh\n```\n\nコマンド補完が必要な場合は、 [`bash-completion`](https://wiki.archlinux.jp/index.php/Bash#%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%A0%E3%81%A8%E3%82%AA%E3%83%97%E3%82%B7%E3%83%A7%E3%83%B3%E3%82%92%E8%BF%BD%E5%8A%A0) をインストールします。\n\n## 4. プラグインのインストール\n\nここではデモとして、 [`asdf-nodejs`](https://github.com/asdf-vm/asdf-nodejs/) プラグインを使用して [Node.js](https://nodejs.org/) をインストール・設定してみましょう。\n\n### プラグインの依存関係\n\n各プラグインには依存関係があるため、プラグインのリポジトリを確認しておきましょう。 `asdf-nodejs` の場合、必要なものは次のとおりです:\n\n| OS | 依存関係インストールコマンド |\n| --- | --- |\n| Debian | `apt-get install dirmngr gpg curl gawk` |\n| CentOS/ Rocky Linux/ AlmaLinux | `yum install gnupg2 curl gawk` |\n| macOS | `brew install gpg gawk` |\n\n一部のプラグインではインストール後の事後処理でこれらの依存関係が必要となるため、あらかじめインストールしておきましょう。\n\n### プラグインのインストール\n\nshell\n\n```\nasdf plugin add nodejs https://github.com/asdf-vm/asdf-nodejs.git\n```\n\n## 5. 特定のバージョンのインストール\n\nNode.js用のプラグインをインストールしたので、このツールの特定のバージョンをインストールしましょう。\n\nインストール可能なバージョンは `asdf list all nodejs` コマンドで確認できますし、特定のメジャーバージョンのサブセットは `asdf list all nodejs 14` コマンドで確認できます。\n\n最新版をインストールするには、次のコマンドを実行します:\n\nshell\n\n```\nasdf install nodejs latest\n```\n\n備考\n\n`asdf` では正確なバージョン番号を指定してください。 `latest` は、現時点での最新バージョンを指定できる `asdf` のヘルパーです。\n\n## 6. バージョンをセット\n\n`asdf` は、カレントディレクトリから上位の `$HOME` ディレクトリまでに存在するすべての `.tool-versions` ファイルをもとに、ツールのバージョンを照会します。照会は、 `asdf` で管理するツールを実行した際に、ジャストインタイムで行われます。\n\n### グローバル\n\nグローバルのデフォルト設定は、 `$HOME/.tool-versions` で管理されます。グローバルのバージョンをセットするには、次のコマンドを実行します:\n\nshell\n\n```\nasdf global nodejs latest\n```\n\nすると、 `$HOME/.tool-versions` 内には次のように書き込まれます:\n\n```\nnodejs 16.5.0\n```\n\n### ローカル\n\nローカルのバージョン設定は、 `$PWD/.tool-versions` ファイル(カレントディレクトリ内)で定義されます。たいていの場合は、プロジェクトのGitリポジトリ内となるでしょう。対象となるディレクトリで、下記コマンドを実行します:\n\nshell\n\n```\nasdf local nodejs latest\n```\n\nすると、 `$PWD/.tool-versions` 内には次のように書き込まれます:\n\n```\nnodejs 16.5.0\n```\n\n## 入門完了!\n\n以上で、 `asdf` の入門は完了です🎉 ここまでで、プロジェクトでの `nodejs` のバージョン管理ができるようになりました。プロジェクトで使用するツールごとに、同様の手順を実施してください!\n\n`asdf` には使いこなすと便利なコマンドが他にもいっぱいあり、 `asdf --help` コマンドまたは単に `asdf` コマンドを実行すれば、すべてのコマンドの説明を見ることができます。コマンドは大きく分けて3つのカテゴリに分けられます:\n\n- [`asdf` のコア](https://asdf-vm.com/ja-jp/manage/core.html)\n- [プラグイン](https://asdf-vm.com/ja-jp/manage/plugins.html)\n- [ツールのバージョン](https://asdf-vm.com/ja-jp/manage/versions.html)\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://asdf-vm.com/ja-jp/guide/getting-started-legacy", "title": "はじめよう", "description": "`asdf` のインストールには次の手順が必要です: 1. 依存関係のインストール 2. `asdf` コアのダウンロード 3. `asdf` のインストール 4. 管理したいツール/ランタイムごとにプラグインをインストール 5. ツール/ランタイムの特定バージョンをインストール 6. `.tool-versions` ファイルで、グローバルまたはプロジェクトのバージョンをセット", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:53:03", "type": "overview", "page_metadata": {"language": "ja-jp", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "title": "はじめよう | asdf", "generator": "VitePress v1.6.3", "scrapeId": "1d4e00e4-102e-41ee-8954-35e0f5a0b13e", "sourceURL": "https://asdf-vm.com/ja-jp/guide/getting-started-legacy", "url": "https://asdf-vm.com/ja-jp/guide/getting-started-legacy", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 1. 依存関係のインストール in asdf-vm?\n\nAssistant: To 1. 依存関係のインストール in asdf-vm, here's what you do:\nasdfの動作には `git` および `curl` が必要です。以下の表は、 _あなたが使用している_ パッケージマネージャで実行するコマンドの _一部例_ です(いくつかのツールは、後の手順で自動的にインストールされます)。\n\n| OS | パッケージマネージャ | コマンド |\n| --- | --- | --- |\n| linux | Aptitude | `apt install curl git` |\n| linux | DNF | `dnf install curl git` |\n| linux | Pacman | `pacman -S curl git` |\n| linux | Zypper | `zypper install curl git` |\n| macOS | Homebrew | `brew install coreutils curl git` |\n| macOS | Spack | `spack install coreutils curl git` |\n\n備考\n\nお使いのシステムの構成によっては、接頭に `sudo` が必要となる場合もあります。.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ja-jp/guide/getting-started-legacy", "title": "はじめよう", "description": "`asdf` のインストールには次の手順が必要です: 1. 依存関係のインストール 2. `asdf` コアのダウンロード 3. `asdf` のインストール 4. 管理したいツール/ランタイムごとにプラグインをインストール 5. ツール/ランタイムの特定バージョンをインストール 6. `.tool-versions` ファイルで、グローバルまたはプロジェクトのバージョンをセット", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:53:03", "type": "section_detail", "page_metadata": {"language": "ja-jp", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "title": "はじめよう | asdf", "generator": "VitePress v1.6.3", "scrapeId": "1d4e00e4-102e-41ee-8954-35e0f5a0b13e", "sourceURL": "https://asdf-vm.com/ja-jp/guide/getting-started-legacy", "url": "https://asdf-vm.com/ja-jp/guide/getting-started-legacy", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 2. asdfのダウンロード in asdf-vm?\n\nAssistant: To 2. asdfのダウンロード in asdf-vm, here's what you do:\n### 公式ダウンロード\n\nshell\n\n```\ngit clone https://github.com/asdf-vm/asdf.git ~/.asdf --branch v0.14.0\n```\n\n### コミュニティがサポートするダウンロード方法\n\n理由がない限り、 `git` コマンドを使用した公式ダウンロードの手順を使用することを強く推奨します。\n\n| 方法 | コマンド |\n| --- | --- |\n| Homebrew | `brew install asdf` |\n| Pacman | `git clone https://aur.archlinux.org/asdf-vm.git && cd asdf-vm && makepkg -si` または好みの [AURヘルパー](https://wiki.archlinux.jp/index.php/AUR_%E3%83%98%E3%83%AB%E3%83%91%E3%83%BC) を使用 |.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ja-jp/guide/getting-started-legacy", "title": "はじめよう", "description": "`asdf` のインストールには次の手順が必要です: 1. 依存関係のインストール 2. `asdf` コアのダウンロード 3. `asdf` のインストール 4. 管理したいツール/ランタイムごとにプラグインをインストール 5. ツール/ランタイムの特定バージョンをインストール 6. `.tool-versions` ファイルで、グローバルまたはプロジェクトのバージョンをセット", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:53:03", "type": "section_detail", "page_metadata": {"language": "ja-jp", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "title": "はじめよう | asdf", "generator": "VitePress v1.6.3", "scrapeId": "1d4e00e4-102e-41ee-8954-35e0f5a0b13e", "sourceURL": "https://asdf-vm.com/ja-jp/guide/getting-started-legacy", "url": "https://asdf-vm.com/ja-jp/guide/getting-started-legacy", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 3. asdfのインストール in asdf-vm?\n\nAssistant: To 3. asdfのインストール in asdf-vm, here's what you do:\nあなたが使用しているシェル、OS、およびインストール方法によって、ここでの設定方法が変わります。最も適したものを選択してください。\n\n**masOSユーザの方は、この節の最後にある `path_helper` に関する警告を必ず参照してください。**\n\n**Bash & Git**\n\n`~/.bashrc` に下記の行を追記します:\n\nshell\n\n```\n. \"$HOME/.asdf/asdf.sh\"\n```\n\nコマンド補完が必要な場合は、 `.bashrc` に下記の行を追記します:\n\nshell\n\n```\n. \"$HOME/.asdf/completions/asdf.bash\"\n```\n\n**Bash & Git (macOS)**\n\n**macOS Catalina以降** を使用している場合、デフォルトのシェルは **ZSH** です。Bashに変更していない限り、ZSHの手順を参照してください。\n\n`~/.bash_profile` に下記の行を追記します:\n\nshell\n\n```\n. \"$HOME/.asdf/asdf.sh\"\n```\n\nコマンド補完が必要な場合は、 `.bash_profile` に下記の行を追記します:\n\nshell\n\n```\n. \"$HOME/.asdf/completions/asdf.bash\"\n```\n\n**Bash & Homebrew**\n\n下記コマンドで、 `~/.bashrc` に `asdf.sh` を追加します:\n\nshell\n\n```\necho -e \"\\n. \\\"$(brew --prefix asdf)/libexec/asdf.sh\\\"\" >> ~/.bashrc\n```\n\nコマンド補完が必要な場合は、 [Homebrewのガイドに従って設定を完了させる](https://docs.brew.sh/Shell-Completion#configuring-completions-in-bash) か、下記コマンドを実行します:\n\nshell\n\n```\necho -e \"\\n. \\\"$(brew --prefix asdf)/etc/bash_completion.d/asdf.bash\\\"\" >> ~/.bashrc\n```\n\n**Bash & Homebrew (macOS)**\n\n**macOS Catalina以降** を使用している場合、デフォルトのシェルは **ZSH** です。Bashに変更していない限り、ZSHの手順を参照してください。\n\n下記コマンドで、 `~/.bash_profile` に `asdf.sh` を追加します:\n\nshell\n\n```\necho -e \"\\n. \\\"$(brew --prefix asdf)/libexec/asdf.sh\\\"\" >> ~/.bash_profile\n```\n\nコマンド補完が必要な場合は、 [Homebrewのガイドに従って設定を完了させる](https://docs.brew.sh/Shell-Completion#configuring-completions-in-bash) か、下記コマンドを実行します:\n\nshell\n\n```\necho -e \"\\n. \\\"$(brew --prefix asdf)/etc/bash_completion.d/asdf.bash\\\"\" >> ~/.bash_profile\n```\n\n**Bash & Pacman**\n\n`~/.bashrc` に下記の行を追記します:\n\nshell\n\n```\n. /opt/asdf-vm/asdf.sh\n```\n\nコマンド補完が必要な場合は、 [`bash-completion`](https://wiki.archlinux.jp/index.php/Bash#%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%A0%E3%81%A8%E3%82%AA%E3%83%97%E3%82%B7%E3%83%A7%E3%83%B3%E3%82%92%E8%BF%BD%E5%8A%A0) をインストールします。.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ja-jp/guide/getting-started-legacy", "title": "はじめよう", "description": "`asdf` のインストールには次の手順が必要です: 1. 依存関係のインストール 2. `asdf` コアのダウンロード 3. `asdf` のインストール 4. 管理したいツール/ランタイムごとにプラグインをインストール 5. ツール/ランタイムの特定バージョンをインストール 6. `.tool-versions` ファイルで、グローバルまたはプロジェクトのバージョンをセット", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:53:03", "type": "section_detail", "page_metadata": {"language": "ja-jp", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "title": "はじめよう | asdf", "generator": "VitePress v1.6.3", "scrapeId": "1d4e00e4-102e-41ee-8954-35e0f5a0b13e", "sourceURL": "https://asdf-vm.com/ja-jp/guide/getting-started-legacy", "url": "https://asdf-vm.com/ja-jp/guide/getting-started-legacy", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 4. プラグインのインストール in asdf-vm?\n\nAssistant: To 4. プラグインのインストール in asdf-vm, here's what you do:\nここではデモとして、 [`asdf-nodejs`](https://github.com/asdf-vm/asdf-nodejs/) プラグインを使用して [Node.js](https://nodejs.org/) をインストール・設定してみましょう。\n\n### プラグインの依存関係\n\n各プラグインには依存関係があるため、プラグインのリポジトリを確認しておきましょう。 `asdf-nodejs` の場合、必要なものは次のとおりです:\n\n| OS | 依存関係インストールコマンド |\n| --- | --- |\n| Debian | `apt-get install dirmngr gpg curl gawk` |\n| CentOS/ Rocky Linux/ AlmaLinux | `yum install gnupg2 curl gawk` |\n| macOS | `brew install gpg gawk` |\n\n一部のプラグインではインストール後の事後処理でこれらの依存関係が必要となるため、あらかじめインストールしておきましょう。\n\n### プラグインのインストール\n\nshell\n\n```\nasdf plugin add nodejs https://github.com/asdf-vm/asdf-nodejs.git\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ja-jp/guide/getting-started-legacy", "title": "はじめよう", "description": "`asdf` のインストールには次の手順が必要です: 1. 依存関係のインストール 2. `asdf` コアのダウンロード 3. `asdf` のインストール 4. 管理したいツール/ランタイムごとにプラグインをインストール 5. ツール/ランタイムの特定バージョンをインストール 6. `.tool-versions` ファイルで、グローバルまたはプロジェクトのバージョンをセット", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:53:03", "type": "section_detail", "page_metadata": {"language": "ja-jp", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "title": "はじめよう | asdf", "generator": "VitePress v1.6.3", "scrapeId": "1d4e00e4-102e-41ee-8954-35e0f5a0b13e", "sourceURL": "https://asdf-vm.com/ja-jp/guide/getting-started-legacy", "url": "https://asdf-vm.com/ja-jp/guide/getting-started-legacy", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 5. 特定のバージョンのインストール in asdf-vm?\n\nAssistant: To 5. 特定のバージョンのインストール in asdf-vm, here's what you do:\nNode.js用のプラグインをインストールしたので、このツールの特定のバージョンをインストールしましょう。\n\nインストール可能なバージョンは `asdf list all nodejs` コマンドで確認できますし、特定のメジャーバージョンのサブセットは `asdf list all nodejs 14` コマンドで確認できます。\n\n最新版をインストールするには、次のコマンドを実行します:\n\nshell\n\n```\nasdf install nodejs latest\n```\n\n備考\n\n`asdf` では正確なバージョン番号を指定してください。 `latest` は、現時点での最新バージョンを指定できる `asdf` のヘルパーです。.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ja-jp/guide/getting-started-legacy", "title": "はじめよう", "description": "`asdf` のインストールには次の手順が必要です: 1. 依存関係のインストール 2. `asdf` コアのダウンロード 3. `asdf` のインストール 4. 管理したいツール/ランタイムごとにプラグインをインストール 5. ツール/ランタイムの特定バージョンをインストール 6. `.tool-versions` ファイルで、グローバルまたはプロジェクトのバージョンをセット", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:53:03", "type": "section_detail", "page_metadata": {"language": "ja-jp", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "title": "はじめよう | asdf", "generator": "VitePress v1.6.3", "scrapeId": "1d4e00e4-102e-41ee-8954-35e0f5a0b13e", "sourceURL": "https://asdf-vm.com/ja-jp/guide/getting-started-legacy", "url": "https://asdf-vm.com/ja-jp/guide/getting-started-legacy", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 6. バージョンをセット in asdf-vm?\n\nAssistant: To 6. バージョンをセット in asdf-vm, here's what you do:\n`asdf` は、カレントディレクトリから上位の `$HOME` ディレクトリまでに存在するすべての `.tool-versions` ファイルをもとに、ツールのバージョンを照会します。照会は、 `asdf` で管理するツールを実行した際に、ジャストインタイムで行われます。\n\n### グローバル\n\nグローバルのデフォルト設定は、 `$HOME/.tool-versions` で管理されます。グローバルのバージョンをセットするには、次のコマンドを実行します:\n\nshell\n\n```\nasdf global nodejs latest\n```\n\nすると、 `$HOME/.tool-versions` 内には次のように書き込まれます:\n\n```\nnodejs 16.5.0\n```\n\n### ローカル\n\nローカルのバージョン設定は、 `$PWD/.tool-versions` ファイル(カレントディレクトリ内)で定義されます。たいていの場合は、プロジェクトのGitリポジトリ内となるでしょう。対象となるディレクトリで、下記コマンドを実行します:\n\nshell\n\n```\nasdf local nodejs latest\n```\n\nすると、 `$PWD/.tool-versions` 内には次のように書き込まれます:\n\n```\nnodejs 16.5.0\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ja-jp/guide/getting-started-legacy", "title": "はじめよう", "description": "`asdf` のインストールには次の手順が必要です: 1. 依存関係のインストール 2. `asdf` コアのダウンロード 3. `asdf` のインストール 4. 管理したいツール/ランタイムごとにプラグインをインストール 5. ツール/ランタイムの特定バージョンをインストール 6. `.tool-versions` ファイルで、グローバルまたはプロジェクトのバージョンをセット", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:53:03", "type": "section_detail", "page_metadata": {"language": "ja-jp", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "title": "はじめよう | asdf", "generator": "VitePress v1.6.3", "scrapeId": "1d4e00e4-102e-41ee-8954-35e0f5a0b13e", "sourceURL": "https://asdf-vm.com/ja-jp/guide/getting-started-legacy", "url": "https://asdf-vm.com/ja-jp/guide/getting-started-legacy", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 入門完了! in asdf-vm?\n\nAssistant: To 入門完了! in asdf-vm, here's what you do:\n以上で、 `asdf` の入門は完了です🎉 ここまでで、プロジェクトでの `nodejs` のバージョン管理ができるようになりました。プロジェクトで使用するツールごとに、同様の手順を実施してください!\n\n`asdf` には使いこなすと便利なコマンドが他にもいっぱいあり、 `asdf --help` コマンドまたは単に `asdf` コマンドを実行すれば、すべてのコマンドの説明を見ることができます。コマンドは大きく分けて3つのカテゴリに分けられます:\n\n- [`asdf` のコア](https://asdf-vm.com/ja-jp/manage/core.html)\n- [プラグイン](https://asdf-vm.com/ja-jp/manage/plugins.html)\n- [ツールのバージョン](https://asdf-vm.com/ja-jp/manage/versions.html).\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ja-jp/guide/getting-started-legacy", "title": "はじめよう", "description": "`asdf` のインストールには次の手順が必要です: 1. 依存関係のインストール 2. `asdf` コアのダウンロード 3. `asdf` のインストール 4. 管理したいツール/ランタイムごとにプラグインをインストール 5. ツール/ランタイムの特定バージョンをインストール 6. `.tool-versions` ファイルで、グローバルまたはプロジェクトのバージョンをセット", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:53:03", "type": "section_detail", "page_metadata": {"language": "ja-jp", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "title": "はじめよう | asdf", "generator": "VitePress v1.6.3", "scrapeId": "1d4e00e4-102e-41ee-8954-35e0f5a0b13e", "sourceURL": "https://asdf-vm.com/ja-jp/guide/getting-started-legacy", "url": "https://asdf-vm.com/ja-jp/guide/getting-started-legacy", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you give me some code examples for はじめよう in asdf-vm?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**公式ダウンロード**:\n\n```yaml\ngit clone https://github.com/asdf-vm/asdf.git ~/.asdf --branch v0.14.0\n```\n\nThis snippet shows you how to 公式ダウンロード, which is an important aspect of はじめよう.\n\n**Bash & Git**:\n\n```yaml\n. \"$HOME/.asdf/asdf.sh\"\n```\n\nThis snippet shows you how to bash & git, which is an important aspect of はじめよう.\n\n**Bash & Git (macOS)**:\n\n```yaml\n. \"$HOME/.asdf/asdf.sh\"\n```\n\nThis snippet shows you how to bash & git (macos), which is an important aspect of はじめよう.\n\n**Bash & Homebrew**:\n\n```yaml\necho -e \"\\n. \\\"$(brew --prefix asdf)/libexec/asdf.sh\\\"\" >> ~/.bashrc\n```\n\nThis snippet shows you how to bash & homebrew, which is an important aspect of はじめよう.\n\n**プラグインのインストール**:\n\n```yaml\nasdf plugin add nodejs https://github.com/asdf-vm/asdf-nodejs.git\n```\n\nThis snippet shows you how to プラグインのインストール, which is an important aspect of はじめよう.\n\n**特定のバージョンのインストール**:\n\n```yaml\nasdf install nodejs latest\n```\n\nThis snippet shows you how to 特定のバージョンのインストール, which is an important aspect of はじめよう.\n\n**グローバルバージョンのセット**:\n\n```yaml\nasdf global nodejs latest\n```\n\nThis snippet shows you how to グローバルバージョンのセット, which is an important aspect of はじめよう.\n\n**ローカルバージョンのセット**:\n\n```yaml\nasdf local nodejs latest\n```\n\nThis snippet shows you how to ローカルバージョンのセット, which is an important aspect of はじめよう.\n\n", "metadata": {"source_url": "https://asdf-vm.com/ja-jp/guide/getting-started-legacy", "title": "はじめよう", "description": "`asdf` のインストールには次の手順が必要です: 1. 依存関係のインストール 2. `asdf` コアのダウンロード 3. `asdf` のインストール 4. 管理したいツール/ランタイムごとにプラグインをインストール 5. ツール/ランタイムの特定バージョンをインストール 6. `.tool-versions` ファイルで、グローバルまたはプロジェクトのバージョンをセット", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:53:03", "type": "code_examples", "page_metadata": {"language": "ja-jp", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "title": "はじめよう | asdf", "generator": "VitePress v1.6.3", "scrapeId": "1d4e00e4-102e-41ee-8954-35e0f5a0b13e", "sourceURL": "https://asdf-vm.com/ja-jp/guide/getting-started-legacy", "url": "https://asdf-vm.com/ja-jp/guide/getting-started-legacy", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: What are some tips for using はじめよう in asdf-vm effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nお使いのシステムの構成によっては、接頭に `sudo` が必要となる場合もあります。\n\n理由がない限り、 `git` コマンドを使用した公式ダウンロードの手順を使用することを強く推奨します。\n\nmacOSでは、BashまたはZSHシェルを起動すると、自動的に `path_helper` というユーティリティが呼び出されます。 `path_helper` は `PATH`(および `MANPATH`)内の項目の順番を並び替えることができるため、特定の順序を必要とするツールの動作に、一貫性が無くなってしまいます。これを回避するため、macOSで `asdf` を利用するときは、強制的に `PATH` エントリの先頭に追加する(優先度を一番高くする)ようにしてください。これは、 `ASDF_FORCE_PREPEND` 環境変数で制御できます。\n\n`asdf` のスクリプトは、 `$PATH` を設定した **あと**、かつ、使用中のフレームワーク(oh-my-zsh など)を呼び出した **あと** に記述する必要があります。\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://asdf-vm.com/ja-jp/guide/getting-started-legacy", "title": "はじめよう", "description": "`asdf` のインストールには次の手順が必要です: 1. 依存関係のインストール 2. `asdf` コアのダウンロード 3. `asdf` のインストール 4. 管理したいツール/ランタイムごとにプラグインをインストール 5. ツール/ランタイムの特定バージョンをインストール 6. `.tool-versions` ファイルで、グローバルまたはプロジェクトのバージョンをセット", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:53:03", "type": "best_practices", "page_metadata": {"language": "ja-jp", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "title": "はじめよう | asdf", "generator": "VitePress v1.6.3", "scrapeId": "1d4e00e4-102e-41ee-8954-35e0f5a0b13e", "sourceURL": "https://asdf-vm.com/ja-jp/guide/getting-started-legacy", "url": "https://asdf-vm.com/ja-jp/guide/getting-started-legacy", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you explain what Getting Started with asdf is in asdf-vm?\n\nAssistant: Sure, I'd be happy to explain Getting Started with asdf in asdf-vm.\n\n# Getting Started with asdf\n\nThis page provides a comprehensive guide on how to get started with asdf, including installation, configuration, and plugin management.Here's a quick rundown of what this is about:\n\n## はじめよう\n\nThis section introduces the asdf installation process.\n\n## 1. asdfのインストール\n\nasdf can be installed in several ways:\n\n- Using a package manager - **Recommended**\n\n| パッケージマネージャー | コマンド |\n| --- | --- |\n| Homebrew | `brew install asdf` |\n| Pacman | `git clone https://aur.archlinux.org/asdf-vm.git && cd asdf-vm && makepkg -si` or your preferred [AUR helper](https://wiki.archlinux.jp/index.php/AUR_%E3%83%98%E3%83%AB%E3%83%91%E3%83%BC) |\n\n- Downloading a precompiled binary - **Easy**\n\n### 依存関係のインストール\n\nasdf requires `git` to function. Below is a table with some example commands to run with your package manager (some tools will be automatically installed in later steps).\n\n| OS | パッケージマネージャー | コマンド |\n| --- | --- | --- |\n| linux | Aptitude | `apt install git` |\n| linux | DNF | `dnf install git` |\n| linux | Pacman | `pacman -S git` |\n| linux | Zypper | `zypper install git` |\n| macOS | Homebrew | `brew install coreutils git` |\n| macOS | Spack | `spack install coreutils git` |\n\n**Note**: Depending on your system configuration, `sudo` may be required.\n\n## 2. asdfの設定\n\nMost users do not need to change the location where asdf stores its data (plugin, install, shim data). However, if you want to specify a directory other than the default `$HOME/.asdf`, you can do so by exporting the `ASDF_DATA_DIR` variable in your shell's RC file.\n\n## コアのインストールが完了！\n\nThe core installation of asdf is complete! 🎉 However, asdf becomes useful only after installing plugins and managing tools and versions.\n\n## 4. プラグインのインストール\n\nThis section demonstrates how to install and configure Node.js using the [`asdf-nodejs`](https://github.com/asdf-vm/asdf-nodejs/) plugin.\n\n## 5. 特定のバージョンのインストール\n\nNow that the Node.js plugin is installed, let's install a specific version of this tool.\n\n## 6. バージョンをセット\n\nasdf queries the tool version based on all `.tool-versions` files present from the current directory up to the `$HOME` directory.\n\n## 入門完了！\n\nThis concludes the introduction to asdf 🎉 You are now able to manage the version of nodejs in your project.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://asdf-vm.com/ja-jp/guide/getting-started.html", "title": "Getting Started with asdf", "description": "This page provides a comprehensive guide on how to get started with asdf, including installation, configuration, and plugin management.", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 03:57:32", "type": "overview", "page_metadata": {"description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "title": "はじめよう | asdf", "language": "ja-jp", "viewport": "width=device-width,initial-scale=1", "scrapeId": "84318379-f80b-428d-8a96-136b5b7dcfe6", "sourceURL": "https://asdf-vm.com/ja-jp/guide/getting-started.html", "url": "https://asdf-vm.com/ja-jp/guide/getting-started.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I はじめよう in asdf-vm?\n\nAssistant: To はじめよう in asdf-vm, here's what you do:\nThis section introduces the asdf installation process..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ja-jp/guide/getting-started.html", "title": "Getting Started with asdf", "description": "This page provides a comprehensive guide on how to get started with asdf, including installation, configuration, and plugin management.", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 03:57:32", "type": "section_detail", "page_metadata": {"description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "title": "はじめよう | asdf", "language": "ja-jp", "viewport": "width=device-width,initial-scale=1", "scrapeId": "84318379-f80b-428d-8a96-136b5b7dcfe6", "sourceURL": "https://asdf-vm.com/ja-jp/guide/getting-started.html", "url": "https://asdf-vm.com/ja-jp/guide/getting-started.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 1. asdfのインストール in asdf-vm?\n\nAssistant: To 1. asdfのインストール in asdf-vm, here's what you do:\nasdf can be installed in several ways:\n\n- Using a package manager - **Recommended**\n\n| パッケージマネージャー | コマンド |\n| --- | --- |\n| Homebrew | `brew install asdf` |\n| Pacman | `git clone https://aur.archlinux.org/asdf-vm.git && cd asdf-vm && makepkg -si` or your preferred [AUR helper](https://wiki.archlinux.jp/index.php/AUR_%E3%83%98%E3%83%AB%E3%83%91%E3%83%BC) |\n\n- Downloading a precompiled binary - **Easy**\n\n### 依存関係のインストール\n\nasdf requires `git` to function. Below is a table with some example commands to run with your package manager (some tools will be automatically installed in later steps).\n\n| OS | パッケージマネージャー | コマンド |\n| --- | --- | --- |\n| linux | Aptitude | `apt install git` |\n| linux | DNF | `dnf install git` |\n| linux | Pacman | `pacman -S git` |\n| linux | Zypper | `zypper install git` |\n| macOS | Homebrew | `brew install coreutils git` |\n| macOS | Spack | `spack install coreutils git` |\n\n**Note**: Depending on your system configuration, `sudo` may be required..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ja-jp/guide/getting-started.html", "title": "Getting Started with asdf", "description": "This page provides a comprehensive guide on how to get started with asdf, including installation, configuration, and plugin management.", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 03:57:32", "type": "section_detail", "page_metadata": {"description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "title": "はじめよう | asdf", "language": "ja-jp", "viewport": "width=device-width,initial-scale=1", "scrapeId": "84318379-f80b-428d-8a96-136b5b7dcfe6", "sourceURL": "https://asdf-vm.com/ja-jp/guide/getting-started.html", "url": "https://asdf-vm.com/ja-jp/guide/getting-started.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 2. asdfの設定 in asdf-vm?\n\nAssistant: To 2. asdfの設定 in asdf-vm, here's what you do:\nMost users do not need to change the location where asdf stores its data (plugin, install, shim data). However, if you want to specify a directory other than the default `$HOME/.asdf`, you can do so by exporting the `ASDF_DATA_DIR` variable in your shell's RC file..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ja-jp/guide/getting-started.html", "title": "Getting Started with asdf", "description": "This page provides a comprehensive guide on how to get started with asdf, including installation, configuration, and plugin management.", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 03:57:32", "type": "section_detail", "page_metadata": {"description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "title": "はじめよう | asdf", "language": "ja-jp", "viewport": "width=device-width,initial-scale=1", "scrapeId": "84318379-f80b-428d-8a96-136b5b7dcfe6", "sourceURL": "https://asdf-vm.com/ja-jp/guide/getting-started.html", "url": "https://asdf-vm.com/ja-jp/guide/getting-started.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I コアのインストールが完了！ in asdf-vm?\n\nAssistant: To コアのインストールが完了！ in asdf-vm, here's what you do:\nThe core installation of asdf is complete! 🎉 However, asdf becomes useful only after installing plugins and managing tools and versions..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ja-jp/guide/getting-started.html", "title": "Getting Started with asdf", "description": "This page provides a comprehensive guide on how to get started with asdf, including installation, configuration, and plugin management.", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 03:57:32", "type": "section_detail", "page_metadata": {"description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "title": "はじめよう | asdf", "language": "ja-jp", "viewport": "width=device-width,initial-scale=1", "scrapeId": "84318379-f80b-428d-8a96-136b5b7dcfe6", "sourceURL": "https://asdf-vm.com/ja-jp/guide/getting-started.html", "url": "https://asdf-vm.com/ja-jp/guide/getting-started.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 4. プラグインのインストール in asdf-vm?\n\nAssistant: To 4. プラグインのインストール in asdf-vm, here's what you do:\nThis section demonstrates how to install and configure Node.js using the [`asdf-nodejs`](https://github.com/asdf-vm/asdf-nodejs/) plugin..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ja-jp/guide/getting-started.html", "title": "Getting Started with asdf", "description": "This page provides a comprehensive guide on how to get started with asdf, including installation, configuration, and plugin management.", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 03:57:32", "type": "section_detail", "page_metadata": {"description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "title": "はじめよう | asdf", "language": "ja-jp", "viewport": "width=device-width,initial-scale=1", "scrapeId": "84318379-f80b-428d-8a96-136b5b7dcfe6", "sourceURL": "https://asdf-vm.com/ja-jp/guide/getting-started.html", "url": "https://asdf-vm.com/ja-jp/guide/getting-started.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 5. 特定のバージョンのインストール in asdf-vm?\n\nAssistant: To 5. 特定のバージョンのインストール in asdf-vm, here's what you do:\nNow that the Node.js plugin is installed, let's install a specific version of this tool..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ja-jp/guide/getting-started.html", "title": "Getting Started with asdf", "description": "This page provides a comprehensive guide on how to get started with asdf, including installation, configuration, and plugin management.", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 03:57:32", "type": "section_detail", "page_metadata": {"description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "title": "はじめよう | asdf", "language": "ja-jp", "viewport": "width=device-width,initial-scale=1", "scrapeId": "84318379-f80b-428d-8a96-136b5b7dcfe6", "sourceURL": "https://asdf-vm.com/ja-jp/guide/getting-started.html", "url": "https://asdf-vm.com/ja-jp/guide/getting-started.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 6. バージョンをセット in asdf-vm?\n\nAssistant: To 6. バージョンをセット in asdf-vm, here's what you do:\nasdf queries the tool version based on all `.tool-versions` files present from the current directory up to the `$HOME` directory..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ja-jp/guide/getting-started.html", "title": "Getting Started with asdf", "description": "This page provides a comprehensive guide on how to get started with asdf, including installation, configuration, and plugin management.", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 03:57:32", "type": "section_detail", "page_metadata": {"description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "title": "はじめよう | asdf", "language": "ja-jp", "viewport": "width=device-width,initial-scale=1", "scrapeId": "84318379-f80b-428d-8a96-136b5b7dcfe6", "sourceURL": "https://asdf-vm.com/ja-jp/guide/getting-started.html", "url": "https://asdf-vm.com/ja-jp/guide/getting-started.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 入門完了！ in asdf-vm?\n\nAssistant: To 入門完了！ in asdf-vm, here's what you do:\nThis concludes the introduction to asdf 🎉 You are now able to manage the version of nodejs in your project..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ja-jp/guide/getting-started.html", "title": "Getting Started with asdf", "description": "This page provides a comprehensive guide on how to get started with asdf, including installation, configuration, and plugin management.", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 03:57:32", "type": "section_detail", "page_metadata": {"description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "title": "はじめよう | asdf", "language": "ja-jp", "viewport": "width=device-width,initial-scale=1", "scrapeId": "84318379-f80b-428d-8a96-136b5b7dcfe6", "sourceURL": "https://asdf-vm.com/ja-jp/guide/getting-started.html", "url": "https://asdf-vm.com/ja-jp/guide/getting-started.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you give me some code examples for Getting Started with asdf in asdf-vm?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Install asdf using Homebrew**:\n\n```yaml\nbrew install asdf\n```\n\nThis snippet shows you how to install asdf using homebrew, which is an important aspect of getting started with asdf.\n\n**Install git using Aptitude**:\n\n```yaml\napt install git\n```\n\nThis snippet shows you how to install git using aptitude, which is an important aspect of getting started with asdf.\n\n**Clone asdf repository**:\n\n```yaml\ngit clone https://github.com/asdf-vm/asdf.git --branch v0.16.0\n```\n\nThis snippet shows you how to clone asdf repository, which is an important aspect of getting started with asdf.\n\n**Set PATH for shims in Bash**:\n\n```yaml\nexport PATH=\"${ASDF_DATA_DIR:-$HOME/.asdf}/shims:$PATH\"\n```\n\nThis snippet shows you how to set path for shims in bash, which is an important aspect of getting started with asdf.\n\n**Install Node.js plugin**:\n\n```yaml\nasdf plugin add nodejs https://github.com/asdf-vm/asdf-nodejs.git\n```\n\nThis snippet shows you how to install node.js plugin, which is an important aspect of getting started with asdf.\n\n**Install latest Node.js version**:\n\n```yaml\nasdf install nodejs latest\n```\n\nThis snippet shows you how to install latest node.js version, which is an important aspect of getting started with asdf.\n\n**Set default Node.js version**:\n\n```yaml\nasdf set -u nodejs 16.5.0\n```\n\nThis snippet shows you how to set default node.js version, which is an important aspect of getting started with asdf.\n\n", "metadata": {"source_url": "https://asdf-vm.com/ja-jp/guide/getting-started.html", "title": "Getting Started with asdf", "description": "This page provides a comprehensive guide on how to get started with asdf, including installation, configuration, and plugin management.", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 03:57:32", "type": "code_examples", "page_metadata": {"description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "title": "はじめよう | asdf", "language": "ja-jp", "viewport": "width=device-width,initial-scale=1", "scrapeId": "84318379-f80b-428d-8a96-136b5b7dcfe6", "sourceURL": "https://asdf-vm.com/ja-jp/guide/getting-started.html", "url": "https://asdf-vm.com/ja-jp/guide/getting-started.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: What are some tips for using Getting Started with asdf in asdf-vm effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nMost users do not need to change the location where asdf stores its data.\n\nmacOS users should refer to the warning about `path_helper` at the end of this section.\n\nEnsure to restart your shell to reflect changes in PATH.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://asdf-vm.com/ja-jp/guide/getting-started.html", "title": "Getting Started with asdf", "description": "This page provides a comprehensive guide on how to get started with asdf, including installation, configuration, and plugin management.", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 03:57:32", "type": "best_practices", "page_metadata": {"description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "title": "はじめよう | asdf", "language": "ja-jp", "viewport": "width=device-width,initial-scale=1", "scrapeId": "84318379-f80b-428d-8a96-136b5b7dcfe6", "sourceURL": "https://asdf-vm.com/ja-jp/guide/getting-started.html", "url": "https://asdf-vm.com/ja-jp/guide/getting-started.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you explain what 시작하기 is in asdf-vm?\n\nAssistant: Sure, I'd be happy to explain 시작하기 in asdf-vm.\n\n# 시작하기\n\n`asdf` 설치는 다음과 같습니다: 1. dependencies 설치 2. `asdf` 코어 다운로드 3. `asdf` 설치 4. 관리하고 싶은 각각의 툴/런타임 플러그인 설치 5. 툴/런타임 버전 설치 6. `.tool-versions` 설정 파일들을 통해 글로벌 혹은 프로젝트 버전들 설정Here's a quick rundown of what this is about:\n\n## 1. Dependencies 설치\n\nasdf는 `git` & `curl` 이 필요합니다. _당신이_ 필요한 패키지 매니저를 구동하기 위한 _일부_ 명령어들의 목록입니다. (몇몇은 나중 단계에서 자동으로 설치될 수 있습니다).\n\n| 운영체제 | 패키지 매니저 | 명령어 |\n| --- | --- | --- |\n| linux | Aptitude | `apt install curl git` |\n| linux | DNF | `dnf install curl git` |\n| linux | Pacman | `pacman -S curl git` |\n| linux | Zypper | `zypper install curl git` |\n| macOS | Homebrew | `brew install coreutils curl git` |\n| macOS | Spack | `spack install coreutils curl git` |\n\n노트\n\n시스템 설정에 의해 `sudo` 가 필요할 수 있습니다.\n\n## 2. asdf 다운로드\n\n### 공식 다운로드\n\nshell\n\n```\ngit clone https://github.com/asdf-vm/asdf.git ~/.asdf --branch v0.14.0\n```\n\n### 커뮤니티 지원 다운로드 방법\n\n공식 `git` 방식을 사용할 것을 적극적으로 권장드립니다.\n\n| 방법 | 명령어 |\n| --- | --- |\n| Homebrew | `brew install asdf` |\n| Pacman | `git clone https://aur.archlinux.org/asdf-vm.git && cd asdf-vm && makepkg -si` 혹은 선호하시는 [AUR helper](https://wiki.archlinux.org/index.php/AUR_helpers) 사용 |\n\n## 3. asdf 설치\n\n설정에 영향을 미치는 다양한 셸, 운영체제들 & 설치방법의 조합들이 있습니다. 아래 선택사항들 중 가장 적합한 것을 사용하세요.\n\n**macOS 사용자들은 이 섹션 마지막 부분에 `path_helper` 에 경고를 반드시 읽어보세요.**\n\nBash & Git\n\n다음을 `~/.bashrc` 에 추가하세요:\n\nshell\n\n```\n. \"$HOME/.asdf/asdf.sh\"\n```\n\n자동완성 설정은 다음을 `.bashrc` 에 추가하세요:\n\nshell\n\n```\n. \"$HOME/.asdf/completions/asdf.bash\"\n```\n\nBash & Git (macOS)\n\n**macOS Catalina 혹은 그 이상** 을 사용하신다면, 기본 셸이 **ZSH** 로 변경되었습니다. Bash로 다시 변경하지 않으셨다면, ZSH의 설치방법을 따라주세요.\n\n다음을 `~/.bash_profile` 에 추가하세요:\n\nshell\n\n```\n. \"$HOME/.asdf/asdf.sh\"\n```\n\n자동완성 설정은 다음을 `.bash_profile` 에 직접 추가하세요:\n\nshell\n\n```\n. \"$HOME/.asdf/completions/asdf.bash\"\n```\n\nBash & Homebrew\n\n`~/.bashrc` 에 `asdf.sh` 를 추가하세요:\n\nshell\n\n```\necho -e \"\\n. \\\"$(brew --prefix asdf)/libexec/asdf.sh\\\"\" >> ~/.bashrc\n```\n\n자동완성은 [Homebrew'의 방법에 따라 설정되어야 합니다](https://docs.brew.sh/Shell-Completion#configuring-completions-in-bash) 혹은 다음을 이용하세요:\n\nshell\n\n```\necho -e \"\\n. \\\"$(brew --prefix asdf)/etc/bash_completion.d/asdf.bash\\\"\" >> ~/.bashrc\n```\n\nBash & Homebrew (macOS)\n\n**macOS Catalina 혹은 그 이상** 을 사용하신다면, 기본 셸이 **ZSH** 로 변경되었습니다. Bash로 다시 변경하지 않으셨다면, ZSH의 설치방법을 따라주세요.\n\n`~/.bash_profile` 에 `asdf.sh` 추가하기:\n\nshell\n\n```\necho -e \"\\n. \\\"$(brew --prefix asdf)/libexec/asdf.sh\\\"\" >> ~/.bash_profile\n```\n\n자동완성은 [Homebrew'의 방법에 따라 설정되어야 합니다](https://docs.brew.sh/Shell-Completion#configuring-completions-in-bash) 혹은 다음을 이용하세요:\n\nshell\n\n```\necho -e \"\\n. \\\"$(brew --prefix asdf)/etc/bash_completion.d/asdf.bash\\\"\" >> ~/.bash_profile\n```\n\nBash & Pacman\n\n다음을 `~/.bashrc` 에 추가하세요:\n\nshell\n\n```\n. /opt/asdf-vm/asdf.sh\n```\n\n자동완성을 위해 [`bash-completion`](https://wiki.archlinux.org/title/bash#Common_programs_and_options) 이 설치 되어야합니다.\n\n## 4. 플러그인 설치\n\n데모 목적으로 우리는 [`asdf-nodejs`](https://github.com/asdf-vm/asdf-nodejs/) 플러그인을 통해 [Node.js](https://nodejs.org/) 설치 & 설정을 해보겠습니다.\n\n### 플러그인 Dependencies\n\n각 플러그인은 dependencies 갖고 있어 우리는 플러그인 리포지토리의 목록을 확인해야합니다. `asdf-nodejs` 는 다음을 가지고 있습니다:\n\n| OS | Dependency 설치 |\n| --- | --- |\n| Debian | `apt-get install dirmngr gpg curl gawk` |\n| CentOS/ Rocky Linux/ AlmaLinux | `yum install gnupg2 curl gawk` |\n| macOS | `brew install gpg gawk` |\n\n우리는 어떤 플러그인들은 설치-후 훅들을 갖고있어 dependencies 먼저 설치해야합니다.\n\n## 5. 버전 설치\n\n이제 우리는 Node.js를 위한 플러그인을 갖고있어 툴 버전을 설치할 수 있습니다.\n\n우리는 `asdf list all nodejs` 를 통해 어떤 버전들이 이용가능한지 혹은 `asdf list all nodejs 14` 를 통해 하위 버전들을 확인가능합니다.\n\n우리는 이용가능한 `latest` 버전을 설치할 것입니다.\n\nshell\n\n```\nasdf install nodejs latest\n```\n\n노트\n\n`asdf` 는 정확한 버전들을 강제합니다. `latest` 는 `asdf` 가 실행했을때 실제 버전을 찾는 헬퍼입니다.\n\n## 6. 버전 설정\n\n`asdf` 는 현재 작업 디렉토리부터 `$HOME` 디렉토리까지 모든 `.tool-versions` 파일들에서 버전 검색을 수행합니다. 검색은 `asdf` 가 관리하는 툴을 실행시킬때 맞춰서 실행됩니다.\n\n::: 경고 툴 실행을 위한 툴 버전을 설정하지 않으면 **에러** 가 발생합니다. `asdf current` 는 현재 디렉토리로부터 툴 & 버전을 표시함으로써 어떤 툴들이 실행을 실패하는지 관찰할 수 있게합니다. :::\n\n### 글로벌\n\n글로벌 기본값들은 `$HOME/.tool-versions` 에서 관리됩니다. 글로벌 버전을 다음을 이용해 설정하세요:\n\nshell\n\n```\nasdf global nodejs latest\n```\n\n`$HOME/.tool-versions` 은 다음과 같습니다:\n\n```\nnodejs 16.5.0\n```\n\n어떤 운영체제들은 `asdf` 가 아닌 시스템에 의해 관리되는 툴들이 이미 설치되어 있습니다, `python` 이 대표적인 예시입니다. 당신은 시스템에 의한 툴 관리를 위해 `asdf` 를 설정해야합니다. [버전 참조 섹션](https://asdf-vm.com/ko-kr/manage/versions.html) 를 참고하세요.\n\n### 로컬\n\n로컬 버전들은 (현재 작업 디렉토리) `$PWD/.tool-versions` 파일에 정의 되어 있습니다. 보통, 이 디렉토리는 하나의 프로젝트의 Git 리포지토리입니다. 툴 버전을 설정하고 싶은 디렉토리에서 다음을 실행시키세요:\n\nshell\n\n```\nasdf local nodejs latest\n```\n\n`$PWD/.tool-versions` 은 다음과 같습니다:\n\n```\nnodejs 16.5.0\n```\n\n### 기존의 툴 버전 파일들 사용하기\n\n`asdf` 는 기존의 다른 버전 매니저들의 버전 파일들 마이그레이션을 지원합니다. 예시: `rbenv` 의 `.ruby-version`. 이는 각 플러그인 기준으로 지원됩니다.\n\n[`asdf-nodejs`](https://github.com/asdf-vm/asdf-nodejs/) 는 `.nvmrc` 와 `.node-version` 파일들을 지원합니다. 이를 활성화하기 위해, 다음을 `asdf` 설정 파일 `$HOME/.asdfrc` 에 추가하세요:\n\n```\nlegacy_version_file = yes\n```\n\n더 많은 설정 옵션들은 [configuration](https://asdf-vm.com/ko-kr/manage/configuration.html) 페이지를 참고하세요.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://asdf-vm.com/ko-kr/guide/getting-started.html", "title": "시작하기", "description": "`asdf` 설치는 다음과 같습니다: 1. dependencies 설치 2. `asdf` 코어 다운로드 3. `asdf` 설치 4. 관리하고 싶은 각각의 툴/런타임 플러그인 설치 5. 툴/런타임 버전 설치 6. `.tool-versions` 설정 파일들을 통해 글로벌 혹은 프로젝트 버전들 설정", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:58:30", "type": "overview", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "generator": "VitePress v1.6.3", "language": "ko-kr", "title": "시작하기 | asdf", "description": "Manage multiple runtime versions with a single CLI tool", "scrapeId": "a1cb2838-ea2b-4fa0-bf56-d227521b06a4", "sourceURL": "https://asdf-vm.com/ko-kr/guide/getting-started.html", "url": "https://asdf-vm.com/ko-kr/guide/getting-started.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 1. dependencies 설치 in asdf-vm?\n\nAssistant: To 1. dependencies 설치 in asdf-vm, here's what you do:\nasdf는 `git` & `curl` 이 필요합니다. _당신이_ 필요한 패키지 매니저를 구동하기 위한 _일부_ 명령어들의 목록입니다. (몇몇은 나중 단계에서 자동으로 설치될 수 있습니다).\n\n| 운영체제 | 패키지 매니저 | 명령어 |\n| --- | --- | --- |\n| linux | Aptitude | `apt install curl git` |\n| linux | DNF | `dnf install curl git` |\n| linux | Pacman | `pacman -S curl git` |\n| linux | Zypper | `zypper install curl git` |\n| macOS | Homebrew | `brew install coreutils curl git` |\n| macOS | Spack | `spack install coreutils curl git` |\n\n노트\n\n시스템 설정에 의해 `sudo` 가 필요할 수 있습니다..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ko-kr/guide/getting-started.html", "title": "시작하기", "description": "`asdf` 설치는 다음과 같습니다: 1. dependencies 설치 2. `asdf` 코어 다운로드 3. `asdf` 설치 4. 관리하고 싶은 각각의 툴/런타임 플러그인 설치 5. 툴/런타임 버전 설치 6. `.tool-versions` 설정 파일들을 통해 글로벌 혹은 프로젝트 버전들 설정", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:58:30", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "generator": "VitePress v1.6.3", "language": "ko-kr", "title": "시작하기 | asdf", "description": "Manage multiple runtime versions with a single CLI tool", "scrapeId": "a1cb2838-ea2b-4fa0-bf56-d227521b06a4", "sourceURL": "https://asdf-vm.com/ko-kr/guide/getting-started.html", "url": "https://asdf-vm.com/ko-kr/guide/getting-started.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 2. asdf 다운로드 in asdf-vm?\n\nAssistant: To 2. asdf 다운로드 in asdf-vm, here's what you do:\n### 공식 다운로드\n\nshell\n\n```\ngit clone https://github.com/asdf-vm/asdf.git ~/.asdf --branch v0.14.0\n```\n\n### 커뮤니티 지원 다운로드 방법\n\n공식 `git` 방식을 사용할 것을 적극적으로 권장드립니다.\n\n| 방법 | 명령어 |\n| --- | --- |\n| Homebrew | `brew install asdf` |\n| Pacman | `git clone https://aur.archlinux.org/asdf-vm.git && cd asdf-vm && makepkg -si` 혹은 선호하시는 [AUR helper](https://wiki.archlinux.org/index.php/AUR_helpers) 사용 |.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ko-kr/guide/getting-started.html", "title": "시작하기", "description": "`asdf` 설치는 다음과 같습니다: 1. dependencies 설치 2. `asdf` 코어 다운로드 3. `asdf` 설치 4. 관리하고 싶은 각각의 툴/런타임 플러그인 설치 5. 툴/런타임 버전 설치 6. `.tool-versions` 설정 파일들을 통해 글로벌 혹은 프로젝트 버전들 설정", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:58:30", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "generator": "VitePress v1.6.3", "language": "ko-kr", "title": "시작하기 | asdf", "description": "Manage multiple runtime versions with a single CLI tool", "scrapeId": "a1cb2838-ea2b-4fa0-bf56-d227521b06a4", "sourceURL": "https://asdf-vm.com/ko-kr/guide/getting-started.html", "url": "https://asdf-vm.com/ko-kr/guide/getting-started.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 3. asdf 설치 in asdf-vm?\n\nAssistant: To 3. asdf 설치 in asdf-vm, here's what you do:\n설정에 영향을 미치는 다양한 셸, 운영체제들 & 설치방법의 조합들이 있습니다. 아래 선택사항들 중 가장 적합한 것을 사용하세요.\n\n**macOS 사용자들은 이 섹션 마지막 부분에 `path_helper` 에 경고를 반드시 읽어보세요.**\n\nBash & Git\n\n다음을 `~/.bashrc` 에 추가하세요:\n\nshell\n\n```\n. \"$HOME/.asdf/asdf.sh\"\n```\n\n자동완성 설정은 다음을 `.bashrc` 에 추가하세요:\n\nshell\n\n```\n. \"$HOME/.asdf/completions/asdf.bash\"\n```\n\nBash & Git (macOS)\n\n**macOS Catalina 혹은 그 이상** 을 사용하신다면, 기본 셸이 **ZSH** 로 변경되었습니다. Bash로 다시 변경하지 않으셨다면, ZSH의 설치방법을 따라주세요.\n\n다음을 `~/.bash_profile` 에 추가하세요:\n\nshell\n\n```\n. \"$HOME/.asdf/asdf.sh\"\n```\n\n자동완성 설정은 다음을 `.bash_profile` 에 직접 추가하세요:\n\nshell\n\n```\n. \"$HOME/.asdf/completions/asdf.bash\"\n```\n\nBash & Homebrew\n\n`~/.bashrc` 에 `asdf.sh` 를 추가하세요:\n\nshell\n\n```\necho -e \"\\n. \\\"$(brew --prefix asdf)/libexec/asdf.sh\\\"\" >> ~/.bashrc\n```\n\n자동완성은 [Homebrew'의 방법에 따라 설정되어야 합니다](https://docs.brew.sh/Shell-Completion#configuring-completions-in-bash) 혹은 다음을 이용하세요:\n\nshell\n\n```\necho -e \"\\n. \\\"$(brew --prefix asdf)/etc/bash_completion.d/asdf.bash\\\"\" >> ~/.bashrc\n```\n\nBash & Homebrew (macOS)\n\n**macOS Catalina 혹은 그 이상** 을 사용하신다면, 기본 셸이 **ZSH** 로 변경되었습니다. Bash로 다시 변경하지 않으셨다면, ZSH의 설치방법을 따라주세요.\n\n`~/.bash_profile` 에 `asdf.sh` 추가하기:\n\nshell\n\n```\necho -e \"\\n. \\\"$(brew --prefix asdf)/libexec/asdf.sh\\\"\" >> ~/.bash_profile\n```\n\n자동완성은 [Homebrew'의 방법에 따라 설정되어야 합니다](https://docs.brew.sh/Shell-Completion#configuring-completions-in-bash) 혹은 다음을 이용하세요:\n\nshell\n\n```\necho -e \"\\n. \\\"$(brew --prefix asdf)/etc/bash_completion.d/asdf.bash\\\"\" >> ~/.bash_profile\n```\n\nBash & Pacman\n\n다음을 `~/.bashrc` 에 추가하세요:\n\nshell\n\n```\n. /opt/asdf-vm/asdf.sh\n```\n\n자동완성을 위해 [`bash-completion`](https://wiki.archlinux.org/title/bash#Common_programs_and_options) 이 설치 되어야합니다..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ko-kr/guide/getting-started.html", "title": "시작하기", "description": "`asdf` 설치는 다음과 같습니다: 1. dependencies 설치 2. `asdf` 코어 다운로드 3. `asdf` 설치 4. 관리하고 싶은 각각의 툴/런타임 플러그인 설치 5. 툴/런타임 버전 설치 6. `.tool-versions` 설정 파일들을 통해 글로벌 혹은 프로젝트 버전들 설정", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:58:30", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "generator": "VitePress v1.6.3", "language": "ko-kr", "title": "시작하기 | asdf", "description": "Manage multiple runtime versions with a single CLI tool", "scrapeId": "a1cb2838-ea2b-4fa0-bf56-d227521b06a4", "sourceURL": "https://asdf-vm.com/ko-kr/guide/getting-started.html", "url": "https://asdf-vm.com/ko-kr/guide/getting-started.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 4. 플러그인 설치 in asdf-vm?\n\nAssistant: To 4. 플러그인 설치 in asdf-vm, here's what you do:\n데모 목적으로 우리는 [`asdf-nodejs`](https://github.com/asdf-vm/asdf-nodejs/) 플러그인을 통해 [Node.js](https://nodejs.org/) 설치 & 설정을 해보겠습니다.\n\n### 플러그인 Dependencies\n\n각 플러그인은 dependencies 갖고 있어 우리는 플러그인 리포지토리의 목록을 확인해야합니다. `asdf-nodejs` 는 다음을 가지고 있습니다:\n\n| OS | Dependency 설치 |\n| --- | --- |\n| Debian | `apt-get install dirmngr gpg curl gawk` |\n| CentOS/ Rocky Linux/ AlmaLinux | `yum install gnupg2 curl gawk` |\n| macOS | `brew install gpg gawk` |\n\n우리는 어떤 플러그인들은 설치-후 훅들을 갖고있어 dependencies 먼저 설치해야합니다..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ko-kr/guide/getting-started.html", "title": "시작하기", "description": "`asdf` 설치는 다음과 같습니다: 1. dependencies 설치 2. `asdf` 코어 다운로드 3. `asdf` 설치 4. 관리하고 싶은 각각의 툴/런타임 플러그인 설치 5. 툴/런타임 버전 설치 6. `.tool-versions` 설정 파일들을 통해 글로벌 혹은 프로젝트 버전들 설정", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:58:30", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "generator": "VitePress v1.6.3", "language": "ko-kr", "title": "시작하기 | asdf", "description": "Manage multiple runtime versions with a single CLI tool", "scrapeId": "a1cb2838-ea2b-4fa0-bf56-d227521b06a4", "sourceURL": "https://asdf-vm.com/ko-kr/guide/getting-started.html", "url": "https://asdf-vm.com/ko-kr/guide/getting-started.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 5. 버전 설치 in asdf-vm?\n\nAssistant: To 5. 버전 설치 in asdf-vm, here's what you do:\n이제 우리는 Node.js를 위한 플러그인을 갖고있어 툴 버전을 설치할 수 있습니다.\n\n우리는 `asdf list all nodejs` 를 통해 어떤 버전들이 이용가능한지 혹은 `asdf list all nodejs 14` 를 통해 하위 버전들을 확인가능합니다.\n\n우리는 이용가능한 `latest` 버전을 설치할 것입니다.\n\nshell\n\n```\nasdf install nodejs latest\n```\n\n노트\n\n`asdf` 는 정확한 버전들을 강제합니다. `latest` 는 `asdf` 가 실행했을때 실제 버전을 찾는 헬퍼입니다..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ko-kr/guide/getting-started.html", "title": "시작하기", "description": "`asdf` 설치는 다음과 같습니다: 1. dependencies 설치 2. `asdf` 코어 다운로드 3. `asdf` 설치 4. 관리하고 싶은 각각의 툴/런타임 플러그인 설치 5. 툴/런타임 버전 설치 6. `.tool-versions` 설정 파일들을 통해 글로벌 혹은 프로젝트 버전들 설정", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:58:30", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "generator": "VitePress v1.6.3", "language": "ko-kr", "title": "시작하기 | asdf", "description": "Manage multiple runtime versions with a single CLI tool", "scrapeId": "a1cb2838-ea2b-4fa0-bf56-d227521b06a4", "sourceURL": "https://asdf-vm.com/ko-kr/guide/getting-started.html", "url": "https://asdf-vm.com/ko-kr/guide/getting-started.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 6. 버전 설정 in asdf-vm?\n\nAssistant: To 6. 버전 설정 in asdf-vm, here's what you do:\n`asdf` 는 현재 작업 디렉토리부터 `$HOME` 디렉토리까지 모든 `.tool-versions` 파일들에서 버전 검색을 수행합니다. 검색은 `asdf` 가 관리하는 툴을 실행시킬때 맞춰서 실행됩니다.\n\n::: 경고 툴 실행을 위한 툴 버전을 설정하지 않으면 **에러** 가 발생합니다. `asdf current` 는 현재 디렉토리로부터 툴 & 버전을 표시함으로써 어떤 툴들이 실행을 실패하는지 관찰할 수 있게합니다. :::\n\n### 글로벌\n\n글로벌 기본값들은 `$HOME/.tool-versions` 에서 관리됩니다. 글로벌 버전을 다음을 이용해 설정하세요:\n\nshell\n\n```\nasdf global nodejs latest\n```\n\n`$HOME/.tool-versions` 은 다음과 같습니다:\n\n```\nnodejs 16.5.0\n```\n\n어떤 운영체제들은 `asdf` 가 아닌 시스템에 의해 관리되는 툴들이 이미 설치되어 있습니다, `python` 이 대표적인 예시입니다. 당신은 시스템에 의한 툴 관리를 위해 `asdf` 를 설정해야합니다. [버전 참조 섹션](https://asdf-vm.com/ko-kr/manage/versions.html) 를 참고하세요.\n\n### 로컬\n\n로컬 버전들은 (현재 작업 디렉토리) `$PWD/.tool-versions` 파일에 정의 되어 있습니다. 보통, 이 디렉토리는 하나의 프로젝트의 Git 리포지토리입니다. 툴 버전을 설정하고 싶은 디렉토리에서 다음을 실행시키세요:\n\nshell\n\n```\nasdf local nodejs latest\n```\n\n`$PWD/.tool-versions` 은 다음과 같습니다:\n\n```\nnodejs 16.5.0\n```\n\n### 기존의 툴 버전 파일들 사용하기\n\n`asdf` 는 기존의 다른 버전 매니저들의 버전 파일들 마이그레이션을 지원합니다. 예시: `rbenv` 의 `.ruby-version`. 이는 각 플러그인 기준으로 지원됩니다.\n\n[`asdf-nodejs`](https://github.com/asdf-vm/asdf-nodejs/) 는 `.nvmrc` 와 `.node-version` 파일들을 지원합니다. 이를 활성화하기 위해, 다음을 `asdf` 설정 파일 `$HOME/.asdfrc` 에 추가하세요:\n\n```\nlegacy_version_file = yes\n```\n\n더 많은 설정 옵션들은 [configuration](https://asdf-vm.com/ko-kr/manage/configuration.html) 페이지를 참고하세요..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ko-kr/guide/getting-started.html", "title": "시작하기", "description": "`asdf` 설치는 다음과 같습니다: 1. dependencies 설치 2. `asdf` 코어 다운로드 3. `asdf` 설치 4. 관리하고 싶은 각각의 툴/런타임 플러그인 설치 5. 툴/런타임 버전 설치 6. `.tool-versions` 설정 파일들을 통해 글로벌 혹은 프로젝트 버전들 설정", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:58:30", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "generator": "VitePress v1.6.3", "language": "ko-kr", "title": "시작하기 | asdf", "description": "Manage multiple runtime versions with a single CLI tool", "scrapeId": "a1cb2838-ea2b-4fa0-bf56-d227521b06a4", "sourceURL": "https://asdf-vm.com/ko-kr/guide/getting-started.html", "url": "https://asdf-vm.com/ko-kr/guide/getting-started.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you give me some code examples for 시작하기 in asdf-vm?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**asdf 다운로드**:\n\n```yaml\ngit clone https://github.com/asdf-vm/asdf.git ~/.asdf --branch v0.14.0\n```\n\nThis snippet shows you how to asdf 다운로드, which is an important aspect of 시작하기.\n\n**Bash & Git 설정**:\n\n```yaml\n. \"$HOME/.asdf/asdf.sh\"\n```\n\nThis snippet shows you how to bash & git 설정, which is an important aspect of 시작하기.\n\n**Bash & Homebrew 설정**:\n\n```yaml\necho -e \"\\n. \\\"$(brew --prefix asdf)/libexec/asdf.sh\\\"\" >> ~/.bashrc\n```\n\nThis snippet shows you how to bash & homebrew 설정, which is an important aspect of 시작하기.\n\n**플러그인 설치**:\n\n```yaml\nasdf plugin add nodejs https://github.com/asdf-vm/asdf-nodejs.git\n```\n\nThis snippet shows you how to 플러그인 설치, which is an important aspect of 시작하기.\n\n**버전 설치**:\n\n```yaml\nasdf install nodejs latest\n```\n\nThis snippet shows you how to 버전 설치, which is an important aspect of 시작하기.\n\n**글로벌 버전 설정**:\n\n```yaml\nasdf global nodejs latest\n```\n\nThis snippet shows you how to 글로벌 버전 설정, which is an important aspect of 시작하기.\n\n**로컬 버전 설정**:\n\n```yaml\nasdf local nodejs latest\n```\n\nThis snippet shows you how to 로컬 버전 설정, which is an important aspect of 시작하기.\n\n**기존 툴 버전 파일 사용하기 설정**:\n\n```yaml\nlegacy_version_file = yes\n```\n\nThis snippet shows you how to 기존 툴 버전 파일 사용하기 설정, which is an important aspect of 시작하기.\n\n", "metadata": {"source_url": "https://asdf-vm.com/ko-kr/guide/getting-started.html", "title": "시작하기", "description": "`asdf` 설치는 다음과 같습니다: 1. dependencies 설치 2. `asdf` 코어 다운로드 3. `asdf` 설치 4. 관리하고 싶은 각각의 툴/런타임 플러그인 설치 5. 툴/런타임 버전 설치 6. `.tool-versions` 설정 파일들을 통해 글로벌 혹은 프로젝트 버전들 설정", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:58:30", "type": "code_examples", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "generator": "VitePress v1.6.3", "language": "ko-kr", "title": "시작하기 | asdf", "description": "Manage multiple runtime versions with a single CLI tool", "scrapeId": "a1cb2838-ea2b-4fa0-bf56-d227521b06a4", "sourceURL": "https://asdf-vm.com/ko-kr/guide/getting-started.html", "url": "https://asdf-vm.com/ko-kr/guide/getting-started.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: What are some tips for using 시작하기 in asdf-vm effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\n시스템 설정에 의해 `sudo` 가 필요할 수 있습니다.\n\nmacOS에서, Bash 혹은 Zsh 셸 시작시에 자동적으로 `path_helper` 유틸리티를 실행시킵니다. `path_helper` 는 `PATH` (와 `MANPATH`)에 항목들을 재배열 시켜 특정 순서를 요구하는 툴들의 일관된 동작을 방해합니다. 이를 방지하기 위해, macOS에서 `asdf` 는 `PATH` 앞부분에 (가장 높은 우선순위) 강제로 추가합니다. 이는 `ASDF_FORCE_PREPEND` 를 통해 변경가능합니다.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://asdf-vm.com/ko-kr/guide/getting-started.html", "title": "시작하기", "description": "`asdf` 설치는 다음과 같습니다: 1. dependencies 설치 2. `asdf` 코어 다운로드 3. `asdf` 설치 4. 관리하고 싶은 각각의 툴/런타임 플러그인 설치 5. 툴/런타임 버전 설치 6. `.tool-versions` 설정 파일들을 통해 글로벌 혹은 프로젝트 버전들 설정", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:58:30", "type": "best_practices", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "generator": "VitePress v1.6.3", "language": "ko-kr", "title": "시작하기 | asdf", "description": "Manage multiple runtime versions with a single CLI tool", "scrapeId": "a1cb2838-ea2b-4fa0-bf56-d227521b06a4", "sourceURL": "https://asdf-vm.com/ko-kr/guide/getting-started.html", "url": "https://asdf-vm.com/ko-kr/guide/getting-started.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you explain what Community Projects is in asdf-vm?\n\nAssistant: Sure, I'd be happy to explain Community Projects in asdf-vm.\n\n# Community Projects\n\nHere are some community projects related to `asdf`.Here's a quick rundown of what this is about:\n\n## Community Projects\n\nHere are some community projects related to `asdf`:\n\n- [asdf-community](https://github.com/asdf-community): A collaborative, community-driven project for long-term maintenance of asdf plugins.\n- [asdf dev container](https://github.com/iloveitaly/asdf-devcontainer): A [GitHub Dev Container](https://docs.github.com/en/codespaces/setting-up-your-project-for-codespaces/introduction-to-dev-containers) supporting asdf managed tools in GitHub Codespaces.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://asdf-vm.com/zh-hans/more/community-projects.html", "title": "Community Projects", "description": "Here are some community projects related to `asdf`.", "has_code_examples": false, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 03:58:56", "type": "overview", "page_metadata": {"title": "Community Projects | asdf", "language": "zh-hans", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "scrapeId": "2061a093-4d4a-42c8-86a5-c7819b99035e", "sourceURL": "https://asdf-vm.com/zh-hans/more/community-projects.html", "url": "https://asdf-vm.com/zh-hans/more/community-projects.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I community projects in asdf-vm?\n\nAssistant: To community projects in asdf-vm, here's what you do:\nHere are some community projects related to `asdf`:\n\n- [asdf-community](https://github.com/asdf-community): A collaborative, community-driven project for long-term maintenance of asdf plugins.\n- [asdf dev container](https://github.com/iloveitaly/asdf-devcontainer): A [GitHub Dev Container](https://docs.github.com/en/codespaces/setting-up-your-project-for-codespaces/introduction-to-dev-containers) supporting asdf managed tools in GitHub Codespaces..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/zh-hans/more/community-projects.html", "title": "Community Projects", "description": "Here are some community projects related to `asdf`.", "has_code_examples": false, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 03:58:56", "type": "section_detail", "page_metadata": {"title": "Community Projects | asdf", "language": "zh-hans", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "scrapeId": "2061a093-4d4a-42c8-86a5-c7819b99035e", "sourceURL": "https://asdf-vm.com/zh-hans/more/community-projects.html", "url": "https://asdf-vm.com/zh-hans/more/community-projects.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: What are some tips for using Community Projects in asdf-vm effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nasdf core do not own these projects or their code.\n\nasdf core are not responsible for the quality or security as they relate to those listed here.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://asdf-vm.com/zh-hans/more/community-projects.html", "title": "Community Projects", "description": "Here are some community projects related to `asdf`.", "has_code_examples": false, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 03:58:56", "type": "best_practices", "page_metadata": {"title": "Community Projects | asdf", "language": "zh-hans", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "scrapeId": "2061a093-4d4a-42c8-86a5-c7819b99035e", "sourceURL": "https://asdf-vm.com/zh-hans/more/community-projects.html", "url": "https://asdf-vm.com/zh-hans/more/community-projects.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you explain what GitHub Actions is in asdf-vm?\n\nAssistant: Sure, I'd be happy to explain GitHub Actions in asdf-vm.\n\n# GitHub Actions\n\nHi, we've recently migrated our docs and added some new pages. If you would like to help translate this page, see the 'Edit this page' link at the bottom of the page.Here's a quick rundown of what this is about:\n\n## Introduction\n\nObrigado pelo seu interesse, consulte o repositório de ações asdf para ver os problemas, conversas e diretrizes de contribuição existentes.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://asdf-vm.com/pt-br/contribute/github-actions.html", "title": "GitHub Actions", "description": "Hi, we've recently migrated our docs and added some new pages. If you would like to help translate this page, see the 'Edit this page' link at the bottom of the page.", "has_code_examples": false, "has_best_practices": false, "section_count": 1, "timestamp": "2025-03-01 03:59:06", "type": "overview", "page_metadata": {"generator": "VitePress v1.6.3", "language": "pr-br", "viewport": "width=device-width,initial-scale=1", "title": "GitHub Actions | asdf", "description": "Manage multiple runtime versions with a single CLI tool", "scrapeId": "6be4dfe8-6541-4365-95f8-c3a7cd6d57c4", "sourceURL": "https://asdf-vm.com/pt-br/contribute/github-actions.html", "url": "https://asdf-vm.com/pt-br/contribute/github-actions.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I introduction in asdf-vm?\n\nAssistant: To introduction in asdf-vm, here's what you do:\nObrigado pelo seu interesse, consulte o repositório de ações asdf para ver os problemas, conversas e diretrizes de contribuição existentes..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/pt-br/contribute/github-actions.html", "title": "GitHub Actions", "description": "Hi, we've recently migrated our docs and added some new pages. If you would like to help translate this page, see the 'Edit this page' link at the bottom of the page.", "has_code_examples": false, "has_best_practices": false, "section_count": 1, "timestamp": "2025-03-01 03:59:06", "type": "section_detail", "page_metadata": {"generator": "VitePress v1.6.3", "language": "pr-br", "viewport": "width=device-width,initial-scale=1", "title": "GitHub Actions | asdf", "description": "Manage multiple runtime versions with a single CLI tool", "scrapeId": "6be4dfe8-6541-4365-95f8-c3a7cd6d57c4", "sourceURL": "https://asdf-vm.com/pt-br/contribute/github-actions.html", "url": "https://asdf-vm.com/pt-br/contribute/github-actions.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you explain what GitHub Actions is in asdf-vm?\n\nAssistant: Sure, I'd be happy to explain GitHub Actions in asdf-vm.\n\n# GitHub Actions\n\nご興味を持っていただきありがとうございます。既存のイシュー、議論、コントリビューションガイドについては、 asdf actions リポジトリを参照してください。", "metadata": {"source_url": "https://asdf-vm.com/ja-jp/contribute/github-actions.html", "title": "GitHub Actions", "description": "ご興味を持っていただきありがとうございます。既存のイシュー、議論、コントリビューションガイドについては、 asdf actions リポジトリを参照してください。", "has_code_examples": false, "has_best_practices": false, "section_count": 0, "timestamp": "2025-03-01 04:02:41", "type": "overview", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "title": "GitHub Actions | asdf", "language": "ja-jp", "description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "scrapeId": "6333e091-9d89-42d4-a5d9-007bc8b32af1", "sourceURL": "https://asdf-vm.com/ja-jp/contribute/github-actions.html", "url": "https://asdf-vm.com/ja-jp/contribute/github-actions.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you explain what コミュニティプロジェクト is in asdf-vm?\n\nAssistant: Sure, I'd be happy to explain コミュニティプロジェクト in asdf-vm.\n\n# コミュニティプロジェクト\n\n`asdf` に関連するコミュニティプロジェクトをいくつか紹介しますHere's a quick rundown of what this is about:\n\n## コミュニティプロジェクトの紹介\n\n- [asdf-community](https://github.com/asdf-community): asdfプラグインの長期的なメンテナンスを目的とした コミュニティ主導の共同プロジェクトです。\n- [asdf dev container](https://github.com/iloveitaly/asdf-devcontainer): GitHub Codespacesでasdfによるツール管理をサポートする、 [GitHub Dev Container](https://docs.github.com/en/codespaces/setting-up-your-project-for-codespaces/introduction-to-dev-containers) です。\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://asdf-vm.com/ja-jp/more/community-projects.html", "title": "コミュニティプロジェクト", "description": "`asdf` に関連するコミュニティプロジェクトをいくつか紹介します", "has_code_examples": false, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 04:02:50", "type": "overview", "page_metadata": {"generator": "VitePress v1.6.3", "language": "ja-jp", "description": "Manage multiple runtime versions with a single CLI tool", "title": "コミュニティプロジェクト | asdf", "viewport": "width=device-width,initial-scale=1", "scrapeId": "01d324f7-5370-4725-bcc6-79fdffb9bf73", "sourceURL": "https://asdf-vm.com/ja-jp/more/community-projects.html", "url": "https://asdf-vm.com/ja-jp/more/community-projects.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I コミュニティプロジェクトの紹介 in asdf-vm?\n\nAssistant: To コミュニティプロジェクトの紹介 in asdf-vm, here's what you do:\n- [asdf-community](https://github.com/asdf-community): asdfプラグインの長期的なメンテナンスを目的とした コミュニティ主導の共同プロジェクトです。\n- [asdf dev container](https://github.com/iloveitaly/asdf-devcontainer): GitHub Codespacesでasdfによるツール管理をサポートする、 [GitHub Dev Container](https://docs.github.com/en/codespaces/setting-up-your-project-for-codespaces/introduction-to-dev-containers) です。.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ja-jp/more/community-projects.html", "title": "コミュニティプロジェクト", "description": "`asdf` に関連するコミュニティプロジェクトをいくつか紹介します", "has_code_examples": false, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 04:02:50", "type": "section_detail", "page_metadata": {"generator": "VitePress v1.6.3", "language": "ja-jp", "description": "Manage multiple runtime versions with a single CLI tool", "title": "コミュニティプロジェクト | asdf", "viewport": "width=device-width,initial-scale=1", "scrapeId": "01d324f7-5370-4725-bcc6-79fdffb9bf73", "sourceURL": "https://asdf-vm.com/ja-jp/more/community-projects.html", "url": "https://asdf-vm.com/ja-jp/more/community-projects.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: What are some tips for using コミュニティプロジェクト in asdf-vm effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nasdfコアチームは、これらのプロジェクトやコードを所有していません。\n\nasdfコアでは、ここに掲載されているものに関連する品質やセキュリティについては責任を負いません。\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://asdf-vm.com/ja-jp/more/community-projects.html", "title": "コミュニティプロジェクト", "description": "`asdf` に関連するコミュニティプロジェクトをいくつか紹介します", "has_code_examples": false, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 04:02:50", "type": "best_practices", "page_metadata": {"generator": "VitePress v1.6.3", "language": "ja-jp", "description": "Manage multiple runtime versions with a single CLI tool", "title": "コミュニティプロジェクト | asdf", "viewport": "width=device-width,initial-scale=1", "scrapeId": "01d324f7-5370-4725-bcc6-79fdffb9bf73", "sourceURL": "https://asdf-vm.com/ja-jp/more/community-projects.html", "url": "https://asdf-vm.com/ja-jp/more/community-projects.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you explain what Community Projects is in asdf-vm?\n\nAssistant: Sure, I'd be happy to explain Community Projects in asdf-vm.\n\n# Community Projects\n\nHere are some community projects related to asdf.Here's a quick rundown of what this is about:\n\n## Community Projects\n\nHere are some community projects related to `asdf`:\n\n- [asdf-community](https://github.com/asdf-community): A collaborative, community-driven project for long-term maintenance of asdf plugins.\n- [asdf dev container](https://github.com/iloveitaly/asdf-devcontainer): A [GitHub Dev Container](https://docs.github.com/en/codespaces/setting-up-your-project-for-codespaces/introduction-to-dev-containers) supporting asdf managed tools in GitHub Codespaces.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://asdf-vm.com/pt-br/more/community-projects.html", "title": "Community Projects", "description": "Here are some community projects related to asdf.", "has_code_examples": false, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 04:03:00", "type": "overview", "page_metadata": {"generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "title": "Community Projects | asdf", "description": "Manage multiple runtime versions with a single CLI tool", "language": "pr-br", "scrapeId": "29da24c2-4da4-416b-b50d-622a2d49c27e", "sourceURL": "https://asdf-vm.com/pt-br/more/community-projects.html", "url": "https://asdf-vm.com/pt-br/more/community-projects.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I community projects in asdf-vm?\n\nAssistant: To community projects in asdf-vm, here's what you do:\nHere are some community projects related to `asdf`:\n\n- [asdf-community](https://github.com/asdf-community): A collaborative, community-driven project for long-term maintenance of asdf plugins.\n- [asdf dev container](https://github.com/iloveitaly/asdf-devcontainer): A [GitHub Dev Container](https://docs.github.com/en/codespaces/setting-up-your-project-for-codespaces/introduction-to-dev-containers) supporting asdf managed tools in GitHub Codespaces..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/pt-br/more/community-projects.html", "title": "Community Projects", "description": "Here are some community projects related to asdf.", "has_code_examples": false, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 04:03:00", "type": "section_detail", "page_metadata": {"generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "title": "Community Projects | asdf", "description": "Manage multiple runtime versions with a single CLI tool", "language": "pr-br", "scrapeId": "29da24c2-4da4-416b-b50d-622a2d49c27e", "sourceURL": "https://asdf-vm.com/pt-br/more/community-projects.html", "url": "https://asdf-vm.com/pt-br/more/community-projects.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: What are some tips for using Community Projects in asdf-vm effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nasdf core do not own these projects or their code.\n\nasdf core are not responsible for the quality or security as they relate to those listed here.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://asdf-vm.com/pt-br/more/community-projects.html", "title": "Community Projects", "description": "Here are some community projects related to asdf.", "has_code_examples": false, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 04:03:00", "type": "best_practices", "page_metadata": {"generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "title": "Community Projects | asdf", "description": "Manage multiple runtime versions with a single CLI tool", "language": "pr-br", "scrapeId": "29da24c2-4da4-416b-b50d-622a2d49c27e", "sourceURL": "https://asdf-vm.com/pt-br/more/community-projects.html", "url": "https://asdf-vm.com/pt-br/more/community-projects.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you explain what 공식 플러그인 is in asdf-vm?\n\nAssistant: Sure, I'd be happy to explain 공식 플러그인 in asdf-vm.\n\n# 공식 플러그인\n\nasdf 코어 팀은 일상 업무 환경에서 사용되는 플러그인들을 작성해왔습니다. 이 플러그인들을 관리하고 발전시키는 도움은 언제든 환영입니다.Here's a quick rundown of what this is about:\n\n## 플러그인 목록\n\n아래 각 링크들에서 관련된 리포지토리들을 확인하세요:\n\n- [Elixir](https://github.com/asdf-vm/asdf-elixir)\n- [Erlang](https://github.com/asdf-vm/asdf-erlang)\n- [Node.js](https://github.com/asdf-vm/asdf-nodejs)\n- [Ruby](https://github.com/asdf-vm/asdf-ruby)\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://asdf-vm.com/ko-kr/contribute/first-party-plugins", "title": "공식 플러그인", "description": "asdf 코어 팀은 일상 업무 환경에서 사용되는 플러그인들을 작성해왔습니다. 이 플러그인들을 관리하고 발전시키는 도움은 언제든 환영입니다.", "has_code_examples": false, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 04:03:09", "type": "overview", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "language": "ko-kr", "generator": "VitePress v1.6.3", "description": "Manage multiple runtime versions with a single CLI tool", "title": "공식 플러그인 | asdf", "scrapeId": "20c3e713-6611-4f3d-b53f-222021a32917", "sourceURL": "https://asdf-vm.com/ko-kr/contribute/first-party-plugins", "url": "https://asdf-vm.com/ko-kr/contribute/first-party-plugins", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 플러그인 목록 in asdf-vm?\n\nAssistant: To 플러그인 목록 in asdf-vm, here's what you do:\n아래 각 링크들에서 관련된 리포지토리들을 확인하세요:\n\n- [Elixir](https://github.com/asdf-vm/asdf-elixir)\n- [Erlang](https://github.com/asdf-vm/asdf-erlang)\n- [Node.js](https://github.com/asdf-vm/asdf-nodejs)\n- [Ruby](https://github.com/asdf-vm/asdf-ruby).\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ko-kr/contribute/first-party-plugins", "title": "공식 플러그인", "description": "asdf 코어 팀은 일상 업무 환경에서 사용되는 플러그인들을 작성해왔습니다. 이 플러그인들을 관리하고 발전시키는 도움은 언제든 환영입니다.", "has_code_examples": false, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 04:03:09", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "language": "ko-kr", "generator": "VitePress v1.6.3", "description": "Manage multiple runtime versions with a single CLI tool", "title": "공식 플러그인 | asdf", "scrapeId": "20c3e713-6611-4f3d-b53f-222021a32917", "sourceURL": "https://asdf-vm.com/ko-kr/contribute/first-party-plugins", "url": "https://asdf-vm.com/ko-kr/contribute/first-party-plugins", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: What are some tips for using 공식 플러그인 in asdf-vm effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\n커뮤니티 플러그인 보기:\n\n`asdf-community` 공동체: `asdf` 플러그인의 장기 유지보수를 위한 공동체 주도의 프로젝트입니다.\n\n`asdf-plugins` shortname 리포지토리: 인기 있는 `asdf` 플러그인 검색을 위해 `asdf` 코어가 사용하는 Short-name 목록.\n\nGithub `asdf-plugin` 토픽 검색\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://asdf-vm.com/ko-kr/contribute/first-party-plugins", "title": "공식 플러그인", "description": "asdf 코어 팀은 일상 업무 환경에서 사용되는 플러그인들을 작성해왔습니다. 이 플러그인들을 관리하고 발전시키는 도움은 언제든 환영입니다.", "has_code_examples": false, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 04:03:09", "type": "best_practices", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "language": "ko-kr", "generator": "VitePress v1.6.3", "description": "Manage multiple runtime versions with a single CLI tool", "title": "공식 플러그인 | asdf", "scrapeId": "20c3e713-6611-4f3d-b53f-222021a32917", "sourceURL": "https://asdf-vm.com/ko-kr/contribute/first-party-plugins", "url": "https://asdf-vm.com/ko-kr/contribute/first-party-plugins", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you explain what GitHub Actions is in asdf-vm?\n\nAssistant: Sure, I'd be happy to explain GitHub Actions in asdf-vm.\n\n# GitHub Actions\n\n感谢你的关注，请参考 asdf actions repo 了解现有的问题、对话和贡献指南。Here's a quick rundown of what this is about:\n\n## GitHub Actions\n\n感谢你的关注，请参考 [asdf actions repo](https://github.com/asdf-vm/actions) 了解现有的问题、对话和贡献指南。\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://asdf-vm.com/zh-hans/contribute/github-actions.html", "title": "GitHub Actions", "description": "感谢你的关注，请参考 asdf actions repo 了解现有的问题、对话和贡献指南。", "has_code_examples": false, "has_best_practices": false, "section_count": 1, "timestamp": "2025-03-01 04:03:12", "type": "overview", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "title": "GitHub Actions | asdf", "description": "Manage multiple runtime versions with a single CLI tool", "language": "zh-hans", "generator": "VitePress v1.6.3", "scrapeId": "a294e279-0be5-479b-b50f-907568c45ce0", "sourceURL": "https://asdf-vm.com/zh-hans/contribute/github-actions.html", "url": "https://asdf-vm.com/zh-hans/contribute/github-actions.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I github actions in asdf-vm?\n\nAssistant: To github actions in asdf-vm, here's what you do:\n感谢你的关注，请参考 [asdf actions repo](https://github.com/asdf-vm/actions) 了解现有的问题、对话和贡献指南。.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/zh-hans/contribute/github-actions.html", "title": "GitHub Actions", "description": "感谢你的关注，请参考 asdf actions repo 了解现有的问题、对话和贡献指南。", "has_code_examples": false, "has_best_practices": false, "section_count": 1, "timestamp": "2025-03-01 04:03:12", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "title": "GitHub Actions | asdf", "description": "Manage multiple runtime versions with a single CLI tool", "language": "zh-hans", "generator": "VitePress v1.6.3", "scrapeId": "a294e279-0be5-479b-b50f-907568c45ce0", "sourceURL": "https://asdf-vm.com/zh-hans/contribute/github-actions.html", "url": "https://asdf-vm.com/zh-hans/contribute/github-actions.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you explain what 0.16.0にアップグレードする is in asdf-vm?\n\nAssistant: Sure, I'd be happy to explain 0.16.0にアップグレードする in asdf-vm.\n\n# 0.16.0にアップグレードする\n\nasdfはバージョン0.15.0以前まではBashで書かれており、 `asdf` 関数がシェルにロードされたBashスクリプトのセットとして配布されていました。バージョン0.16.0はasdfをGoで完全に書き直したものです。完全に書き直したことによって多くの破壊的変更があり、現在ではスクリプトのセットではなくバイナリになっています。Here's a quick rundown of what this is about:\n\n## インストール\n\nバージョン0.16.0のインストールは、以前のバージョンのasdfよりもはるかに簡単です。 たったの3ステップで完了します:\n\n- お使いのオペレーティングシステム/アーキテクチャの組み合わせに適した `asdf` バイナリをダウンロードし、 `$PATH` のディレクトリに配置する。\n- `$PATH` の前に `$ASDF_DATA_DIR/shims` を追加する。\n- 以前にasdfのデータの保存場所をカスタマイズしていた場合は、 `ASDF_DATA_DIR` に旧バージョンのプラグイン、バージョン、Shimをインストールしていたディレクトリを設定する(オプション)。\n\nオペレーティングシステムのパッケージマネージャがすでにasdf 0.16.0を提供している場合は、それをインストールするのがおそらく最良の方法です。asdfのアップグレードはOSのパッケージマネージャーと手動インストールでのみ可能です。セルフアップグレード機能はありません。\n\n## データを失わずにアップグレードする\n\n既存のインストールデータを失うことなく、asdfの最新バージョンにアップグレードできます。上記の手順と同じです。\n\n#### 1. お使いのオペレーティングシステムとアーキテクチャに適した `asdf` バイナリをダウンロードする\n\nバイナリをダウンロードして、パスの通ったディレクトリに配置します。以下ではasdfのバイナリを `$HOME/bin` に配置し、 `$HOME/bin` を `$PATH` の先頭に追加します:\n\n```\n# In .zshrc, .bashrc, etc...\nexport PATH=\"$HOME/bin:$PATH\"\n```\n\n#### 2. `ASDF_DATA_DIR` を設定する\n\n`asdf info` を実行し、変数 `ASDF_DATA_DIR` を含む行をコピーします:\n\n```\n...\nASDF_DATA_DIR=\"/home/myuser/.asdf\"\n...\n```\n\nシェルのRCファイル（Zshの場合は `.zshrc`、Bashの場合は `.bashrc` など）で、 `ASDF_DATA_DIR` を設定してエクスポートします:\n\n```\nbash\nexport ASDF_DATA_DIR=\"/home/myuser/.asdf\"\n```\n\n#### 3. `$ASDF_DATA_DIR/shims` を `$PATH` の前に追加する。\n\nシェルのRCファイル（手順2と同じファイル）で、パスの前に `$ASDF_DATA_DIR/shims` を追加します：\n\n```\nbash\nexport ASDF_DATA_DIR=\"/home/myuser/.asdf\"\nexport PATH=\"$ASDF_DATA_DIR/shims:$PATH\"\n```\n\n#### 4. Shimを再生成する\n\n`asdf --help` を実行して、シェルセッションの `asdf` コマンドのバージョンが0.16.0以上であることを確認してください。まだ古いバージョンが表示されている場合は、新しいシェルセッションを開始する必要があります。\n\n`asdf` コマンドが新しいバージョンであることを確認したら、 `asdf reshim` を実行してすべてのShimを再生成します。この手順は、古いShimが古いバージョンのBashを参照している可能性があるため必要となります。\n\n## テスト\n\n0.16.0へのアップグレードで問題が発生するかどうか確信が持てない場合は、「データを失わずにアップグレードする」で説明したように、既存のバージョンに加えて0.16.0をインストールしてテストすることができます。0.16.0へのアップグレードで不具合が生じることがわかったら、シェルのRCファイルに追加した行を削除してください。\n\n## 破壊的変更\n\n### ハイフン付きバージョンのコマンドは削除されました\n\nasdfバージョン0.15.0およびそれ以前では、特定のコマンドのハイフン付きバージョンとハイフンなしバージョンがサポートされていました。バージョン 0.16.0 では、ハイフンなしバージョンのみがサポートされます。影響を受けるコマンドは以下です:\n\n- `asdf list-all` -\\> `asdf list all`\n- `asdf plugin-add` -\\> `asdf plugin add`\n- `asdf plugin-list` -\\> `asdf plugin list`\n- `asdf plugin-list-all` -\\> `asdf plugin list all`\n- `asdf plugin-update` -\\> `asdf plugin update`\n- `asdf plugin-remove` -\\> `asdf plugin remove`\n- `asdf plugin-test` -\\> `asdf plugin test`\n- `asdf shim-versions` -\\> `asdf shimversions`\n\n### `asdf global` と `asdf local` コマンドが `asdf set` に変更されました\n\n`asdf global` と `asdf local` は削除されました。「グローバル」と「ローカル」という用語は誤りで、誤解を招く恐れがありました。asdf は、実際にはあらゆる場所に適用される「グローバル」バージョンをサポートしていません。 `asdf global` で指定したバージョンは、カレントディレクトリにある `.tool-versions` ファイルで簡単に上書きすることができました。これはユーザーを混乱させていました。 新しい `asdf set` はデフォルトでは `asdf local` と同じように動作しますが、ユーザーのホームディレクトリ ( `--home`) や親ディレクトリ ( `--parent`) にある既存の `.tool-versions` ファイルにバージョンを設定するためのフラグも用意されています。 この新しいインターフェイスは、asdfがどのようにバージョンを解決するかをよりよく理解し、同等の機能を提供することを期待しています。\n\n### `asdf update` コマンドが削除されました\n\nこの方法ではアップデートを実行できなくなりました。OS のパッケージマネージャを使用するか、手動で最新のバイナリをダウンロードしてください。さらに、バージョン 0.15.0 以前の `asdf update` コマンドは、インストールプロセスが変更されたため、バージョン 0.16.0 にアップグレードできません。 **`asdf update` を使用して最新のGo実装にアップグレードすることはできません。**\n\n### `asdf shell` コマンドが削除されました\n\nこのコマンドは実際にユーザーの現在のシェルセッションに環境変数を設定していました。これは `asdf` が実行可能ファイルではなく、実際にはシェル関数であったために可能でした。新しい実装では、asdfからすべてのシェルコードが削除され、シェル関数ではなくバイナリになったので、シェルで直接環境変数を設定することはできなくなりました。\n\n### `asdf current` が変更されました\n\nこれまで出力されていた3つのカラムの代わりに、最後のカラムはバージョンが設定されている場所か、バージョンを設定またはインストールするために実行可能な推奨コマンドのいずれかが表示されるようになりました。3番目のカラムが2つのカラムに分割されています。3番目のカラムは、バージョンが設定されている場合（通常、バージョンファイルか環境変数のいずれか）のみ、バージョンのソースを示すようになり、4番目は、指定されたバージョンが実際にインストールされているかどうかを示すブール値です。インストールされていない場合は、インストールコマンドの候補が表示されます。\n\n### プラグイン拡張コマンドの前に `cmd` を付ける必要があります\n\n以前のプラグイン拡張コマンドは次のように実行できました:\n\n```\nasdf nodejs nodebuild --version\n```\n\n現在では、組み込みコマンドと混同するのを避けるために、 `cmd` をプレフィックスとして付ける必要があります:\n\n```\nasdf cmd nodejs nodebuild --version\n```\n\n### 拡張コマンドが再設計されました\n\nプラグイン拡張コマンドにはいくつかの変更点があります：\n\n- 拡張コマンドは `exec` システムコールで実行可能でなければなりません。拡張コマンドがシェルスクリプトの場合、 `exec` で実行するためには適切なshebang行で始まる必要があります。\n- 拡張コマンドはバイナリでもスクリプトでも、どの言語でも実行できるようになりました。もはや `.bash` という拡張子を要求するのは誤解を招くので意味がありません。\n- 実行権限が設定されていなければなりません。\n- 実行権限がない場合、asdfによってBashスクリプトとしてソースされなくなりました。\n\nさらに、プラグイン名の後の最初の引数のみが、実行する拡張コマンドを決定するために使用されます。これは、プラグイン名の後の最初の引数にマッチするコマンドが見つからない場合にasdfがデフォルトで実行する `command` 拡張コマンドが存在することを意味します。たとえばこのようになります:\n\n```\nfoo/\n  lib/commands/\n    command\n    command-bar\n    command-bat-man\n```\n\n以前は、これらのスクリプトはこのように動作していました:\n\n```\n$ asdf cmd foo         # same as running `$ASDF_DATA_DIR/plugins/foo/lib/commands/command`\n$ asdf cmd foo bar     # same as running `$ASDF_DATA_DIR/plugins/foo/lib/commands/command-bar`\n$ asdf cmd foo bat man # same as running `$ASDF_DATA_DIR/plugins/foo/lib/commands/command-bat-man`\n```\n\n現在はこのようになります:\n\n```\n$ asdf cmd foo         # same as running `$ASDF_DATA_DIR/plugins/foo/lib/commands/command`\n$ asdf cmd foo bar     # same as running `$ASDF_DATA_DIR/plugins/foo/lib/commands/command-bar`\n$ asdf cmd foo bat man # same as running `$ASDF_DATA_DIR/plugins/foo/lib/commands/command-bat man`\n```\n\n### 実行可能なShimは `syscall.Exec` によって実行できる必要があります\n\nasdf 0.15.0以前はBashで実装されていたので、Bashで実行できる実行ファイルであれば実行することができました。つまり、shebang行がないスクリプトでも `asdf exec` で実行することができました。しかし、asdf 0.16.xがGoで実装されたことで、Goの `syscall.Exec` 関数を使って実行ファイルを呼び出すようになり、shebangがないスクリプトは扱えなくなりました。\n\n実際には、これはあまり問題ではありません。ほとんどのシェルスクリプトはshebang行を含んでいます。asdfによって管理されるツールがshebang行を持たないスクリプトを提供する場合、shebang行を追加する必要があります。\n\n### カスタムShimテンプレートはサポートされなくなりました\n\nこれはめったに使われない機能でした。コアチームがメンテナンスしているプラグインでこの機能を使用していたのはElixirプラグインだけで、もう必要ありません。この機能はもともと、実行されるのではなくプログラムによって評価されるShimが、特定のプログラム(Elixir の場合は `iex` シェル)による評価に適したコードを含むように追加されました。さらに調べてみると、この機能は実行可能ファイルの `PATH` が不適切に設定され、選択されたバージョンの **実行可能ファイル** ではなく、 **Shim** を含むように設定されていたために存在していたようです。\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://asdf-vm.com/ja-jp/guide/upgrading-to-v0-16", "title": "0.16.0にアップグレードする", "description": "asdfはバージョン0.15.0以前まではBashで書かれており、 `asdf` 関数がシェルにロードされたBashスクリプトのセットとして配布されていました。バージョン0.16.0はasdfをGoで完全に書き直したものです。完全に書き直したことによって多くの破壊的変更があり、現在ではスクリプトのセットではなくバイナリになっています。", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 04:04:01", "type": "overview", "page_metadata": {"title": "0.16.0にアップグレードする | asdf", "viewport": "width=device-width,initial-scale=1", "generator": "VitePress v1.6.3", "description": "Manage multiple runtime versions with a single CLI tool", "language": "ja-jp", "scrapeId": "6ad8490a-e95b-45d2-aef3-9ce382919d1d", "sourceURL": "https://asdf-vm.com/ja-jp/guide/upgrading-to-v0-16", "url": "https://asdf-vm.com/ja-jp/guide/upgrading-to-v0-16", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I インストール in asdf-vm?\n\nAssistant: To インストール in asdf-vm, here's what you do:\nバージョン0.16.0のインストールは、以前のバージョンのasdfよりもはるかに簡単です。 たったの3ステップで完了します:\n\n- お使いのオペレーティングシステム/アーキテクチャの組み合わせに適した `asdf` バイナリをダウンロードし、 `$PATH` のディレクトリに配置する。\n- `$PATH` の前に `$ASDF_DATA_DIR/shims` を追加する。\n- 以前にasdfのデータの保存場所をカスタマイズしていた場合は、 `ASDF_DATA_DIR` に旧バージョンのプラグイン、バージョン、Shimをインストールしていたディレクトリを設定する(オプション)。\n\nオペレーティングシステムのパッケージマネージャがすでにasdf 0.16.0を提供している場合は、それをインストールするのがおそらく最良の方法です。asdfのアップグレードはOSのパッケージマネージャーと手動インストールでのみ可能です。セルフアップグレード機能はありません。.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ja-jp/guide/upgrading-to-v0-16", "title": "0.16.0にアップグレードする", "description": "asdfはバージョン0.15.0以前まではBashで書かれており、 `asdf` 関数がシェルにロードされたBashスクリプトのセットとして配布されていました。バージョン0.16.0はasdfをGoで完全に書き直したものです。完全に書き直したことによって多くの破壊的変更があり、現在ではスクリプトのセットではなくバイナリになっています。", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 04:04:01", "type": "section_detail", "page_metadata": {"title": "0.16.0にアップグレードする | asdf", "viewport": "width=device-width,initial-scale=1", "generator": "VitePress v1.6.3", "description": "Manage multiple runtime versions with a single CLI tool", "language": "ja-jp", "scrapeId": "6ad8490a-e95b-45d2-aef3-9ce382919d1d", "sourceURL": "https://asdf-vm.com/ja-jp/guide/upgrading-to-v0-16", "url": "https://asdf-vm.com/ja-jp/guide/upgrading-to-v0-16", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I データを失わずにアップグレードする in asdf-vm?\n\nAssistant: To データを失わずにアップグレードする in asdf-vm, here's what you do:\n既存のインストールデータを失うことなく、asdfの最新バージョンにアップグレードできます。上記の手順と同じです。\n\n#### 1. お使いのオペレーティングシステムとアーキテクチャに適した `asdf` バイナリをダウンロードする\n\nバイナリをダウンロードして、パスの通ったディレクトリに配置します。以下ではasdfのバイナリを `$HOME/bin` に配置し、 `$HOME/bin` を `$PATH` の先頭に追加します:\n\n```\n# In .zshrc, .bashrc, etc...\nexport PATH=\"$HOME/bin:$PATH\"\n```\n\n#### 2. `ASDF_DATA_DIR` を設定する\n\n`asdf info` を実行し、変数 `ASDF_DATA_DIR` を含む行をコピーします:\n\n```\n...\nASDF_DATA_DIR=\"/home/myuser/.asdf\"\n...\n```\n\nシェルのRCファイル（Zshの場合は `.zshrc`、Bashの場合は `.bashrc` など）で、 `ASDF_DATA_DIR` を設定してエクスポートします:\n\n```\nbash\nexport ASDF_DATA_DIR=\"/home/myuser/.asdf\"\n```\n\n#### 3. `$ASDF_DATA_DIR/shims` を `$PATH` の前に追加する。\n\nシェルのRCファイル（手順2と同じファイル）で、パスの前に `$ASDF_DATA_DIR/shims` を追加します：\n\n```\nbash\nexport ASDF_DATA_DIR=\"/home/myuser/.asdf\"\nexport PATH=\"$ASDF_DATA_DIR/shims:$PATH\"\n```\n\n#### 4. Shimを再生成する\n\n`asdf --help` を実行して、シェルセッションの `asdf` コマンドのバージョンが0.16.0以上であることを確認してください。まだ古いバージョンが表示されている場合は、新しいシェルセッションを開始する必要があります。\n\n`asdf` コマンドが新しいバージョンであることを確認したら、 `asdf reshim` を実行してすべてのShimを再生成します。この手順は、古いShimが古いバージョンのBashを参照している可能性があるため必要となります。.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ja-jp/guide/upgrading-to-v0-16", "title": "0.16.0にアップグレードする", "description": "asdfはバージョン0.15.0以前まではBashで書かれており、 `asdf` 関数がシェルにロードされたBashスクリプトのセットとして配布されていました。バージョン0.16.0はasdfをGoで完全に書き直したものです。完全に書き直したことによって多くの破壊的変更があり、現在ではスクリプトのセットではなくバイナリになっています。", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 04:04:01", "type": "section_detail", "page_metadata": {"title": "0.16.0にアップグレードする | asdf", "viewport": "width=device-width,initial-scale=1", "generator": "VitePress v1.6.3", "description": "Manage multiple runtime versions with a single CLI tool", "language": "ja-jp", "scrapeId": "6ad8490a-e95b-45d2-aef3-9ce382919d1d", "sourceURL": "https://asdf-vm.com/ja-jp/guide/upgrading-to-v0-16", "url": "https://asdf-vm.com/ja-jp/guide/upgrading-to-v0-16", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I テスト in asdf-vm?\n\nAssistant: To テスト in asdf-vm, here's what you do:\n0.16.0へのアップグレードで問題が発生するかどうか確信が持てない場合は、「データを失わずにアップグレードする」で説明したように、既存のバージョンに加えて0.16.0をインストールしてテストすることができます。0.16.0へのアップグレードで不具合が生じることがわかったら、シェルのRCファイルに追加した行を削除してください。.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ja-jp/guide/upgrading-to-v0-16", "title": "0.16.0にアップグレードする", "description": "asdfはバージョン0.15.0以前まではBashで書かれており、 `asdf` 関数がシェルにロードされたBashスクリプトのセットとして配布されていました。バージョン0.16.0はasdfをGoで完全に書き直したものです。完全に書き直したことによって多くの破壊的変更があり、現在ではスクリプトのセットではなくバイナリになっています。", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 04:04:01", "type": "section_detail", "page_metadata": {"title": "0.16.0にアップグレードする | asdf", "viewport": "width=device-width,initial-scale=1", "generator": "VitePress v1.6.3", "description": "Manage multiple runtime versions with a single CLI tool", "language": "ja-jp", "scrapeId": "6ad8490a-e95b-45d2-aef3-9ce382919d1d", "sourceURL": "https://asdf-vm.com/ja-jp/guide/upgrading-to-v0-16", "url": "https://asdf-vm.com/ja-jp/guide/upgrading-to-v0-16", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 破壊的変更 in asdf-vm?\n\nAssistant: To 破壊的変更 in asdf-vm, here's what you do:\n### ハイフン付きバージョンのコマンドは削除されました\n\nasdfバージョン0.15.0およびそれ以前では、特定のコマンドのハイフン付きバージョンとハイフンなしバージョンがサポートされていました。バージョン 0.16.0 では、ハイフンなしバージョンのみがサポートされます。影響を受けるコマンドは以下です:\n\n- `asdf list-all` -\\> `asdf list all`\n- `asdf plugin-add` -\\> `asdf plugin add`\n- `asdf plugin-list` -\\> `asdf plugin list`\n- `asdf plugin-list-all` -\\> `asdf plugin list all`\n- `asdf plugin-update` -\\> `asdf plugin update`\n- `asdf plugin-remove` -\\> `asdf plugin remove`\n- `asdf plugin-test` -\\> `asdf plugin test`\n- `asdf shim-versions` -\\> `asdf shimversions`\n\n### `asdf global` と `asdf local` コマンドが `asdf set` に変更されました\n\n`asdf global` と `asdf local` は削除されました。「グローバル」と「ローカル」という用語は誤りで、誤解を招く恐れがありました。asdf は、実際にはあらゆる場所に適用される「グローバル」バージョンをサポートしていません。 `asdf global` で指定したバージョンは、カレントディレクトリにある `.tool-versions` ファイルで簡単に上書きすることができました。これはユーザーを混乱させていました。 新しい `asdf set` はデフォルトでは `asdf local` と同じように動作しますが、ユーザーのホームディレクトリ ( `--home`) や親ディレクトリ ( `--parent`) にある既存の `.tool-versions` ファイルにバージョンを設定するためのフラグも用意されています。 この新しいインターフェイスは、asdfがどのようにバージョンを解決するかをよりよく理解し、同等の機能を提供することを期待しています。\n\n### `asdf update` コマンドが削除されました\n\nこの方法ではアップデートを実行できなくなりました。OS のパッケージマネージャを使用するか、手動で最新のバイナリをダウンロードしてください。さらに、バージョン 0.15.0 以前の `asdf update` コマンドは、インストールプロセスが変更されたため、バージョン 0.16.0 にアップグレードできません。 **`asdf update` を使用して最新のGo実装にアップグレードすることはできません。**\n\n### `asdf shell` コマンドが削除されました\n\nこのコマンドは実際にユーザーの現在のシェルセッションに環境変数を設定していました。これは `asdf` が実行可能ファイルではなく、実際にはシェル関数であったために可能でした。新しい実装では、asdfからすべてのシェルコードが削除され、シェル関数ではなくバイナリになったので、シェルで直接環境変数を設定することはできなくなりました。\n\n### `asdf current` が変更されました\n\nこれまで出力されていた3つのカラムの代わりに、最後のカラムはバージョンが設定されている場所か、バージョンを設定またはインストールするために実行可能な推奨コマンドのいずれかが表示されるようになりました。3番目のカラムが2つのカラムに分割されています。3番目のカラムは、バージョンが設定されている場合（通常、バージョンファイルか環境変数のいずれか）のみ、バージョンのソースを示すようになり、4番目は、指定されたバージョンが実際にインストールされているかどうかを示すブール値です。インストールされていない場合は、インストールコマンドの候補が表示されます。\n\n### プラグイン拡張コマンドの前に `cmd` を付ける必要があります\n\n以前のプラグイン拡張コマンドは次のように実行できました:\n\n```\nasdf nodejs nodebuild --version\n```\n\n現在では、組み込みコマンドと混同するのを避けるために、 `cmd` をプレフィックスとして付ける必要があります:\n\n```\nasdf cmd nodejs nodebuild --version\n```\n\n### 拡張コマンドが再設計されました\n\nプラグイン拡張コマンドにはいくつかの変更点があります：\n\n- 拡張コマンドは `exec` システムコールで実行可能でなければなりません。拡張コマンドがシェルスクリプトの場合、 `exec` で実行するためには適切なshebang行で始まる必要があります。\n- 拡張コマンドはバイナリでもスクリプトでも、どの言語でも実行できるようになりました。もはや `.bash` という拡張子を要求するのは誤解を招くので意味がありません。\n- 実行権限が設定されていなければなりません。\n- 実行権限がない場合、asdfによってBashスクリプトとしてソースされなくなりました。\n\nさらに、プラグイン名の後の最初の引数のみが、実行する拡張コマンドを決定するために使用されます。これは、プラグイン名の後の最初の引数にマッチするコマンドが見つからない場合にasdfがデフォルトで実行する `command` 拡張コマンドが存在することを意味します。たとえばこのようになります:\n\n```\nfoo/\n  lib/commands/\n    command\n    command-bar\n    command-bat-man\n```\n\n以前は、これらのスクリプトはこのように動作していました:\n\n```\n$ asdf cmd foo         # same as running `$ASDF_DATA_DIR/plugins/foo/lib/commands/command`\n$ asdf cmd foo bar     # same as running `$ASDF_DATA_DIR/plugins/foo/lib/commands/command-bar`\n$ asdf cmd foo bat man # same as running `$ASDF_DATA_DIR/plugins/foo/lib/commands/command-bat-man`\n```\n\n現在はこのようになります:\n\n```\n$ asdf cmd foo         # same as running `$ASDF_DATA_DIR/plugins/foo/lib/commands/command`\n$ asdf cmd foo bar     # same as running `$ASDF_DATA_DIR/plugins/foo/lib/commands/command-bar`\n$ asdf cmd foo bat man # same as running `$ASDF_DATA_DIR/plugins/foo/lib/commands/command-bat man`\n```\n\n### 実行可能なShimは `syscall.Exec` によって実行できる必要があります\n\nasdf 0.15.0以前はBashで実装されていたので、Bashで実行できる実行ファイルであれば実行することができました。つまり、shebang行がないスクリプトでも `asdf exec` で実行することができました。しかし、asdf 0.16.xがGoで実装されたことで、Goの `syscall.Exec` 関数を使って実行ファイルを呼び出すようになり、shebangがないスクリプトは扱えなくなりました。\n\n実際には、これはあまり問題ではありません。ほとんどのシェルスクリプトはshebang行を含んでいます。asdfによって管理されるツールがshebang行を持たないスクリプトを提供する場合、shebang行を追加する必要があります。\n\n### カスタムShimテンプレートはサポートされなくなりました\n\nこれはめったに使われない機能でした。コアチームがメンテナンスしているプラグインでこの機能を使用していたのはElixirプラグインだけで、もう必要ありません。この機能はもともと、実行されるのではなくプログラムによって評価されるShimが、特定のプログラム(Elixir の場合は `iex` シェル)による評価に適したコードを含むように追加されました。さらに調べてみると、この機能は実行可能ファイルの `PATH` が不適切に設定され、選択されたバージョンの **実行可能ファイル** ではなく、 **Shim** を含むように設定されていたために存在していたようです。.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ja-jp/guide/upgrading-to-v0-16", "title": "0.16.0にアップグレードする", "description": "asdfはバージョン0.15.0以前まではBashで書かれており、 `asdf` 関数がシェルにロードされたBashスクリプトのセットとして配布されていました。バージョン0.16.0はasdfをGoで完全に書き直したものです。完全に書き直したことによって多くの破壊的変更があり、現在ではスクリプトのセットではなくバイナリになっています。", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 04:04:01", "type": "section_detail", "page_metadata": {"title": "0.16.0にアップグレードする | asdf", "viewport": "width=device-width,initial-scale=1", "generator": "VitePress v1.6.3", "description": "Manage multiple runtime versions with a single CLI tool", "language": "ja-jp", "scrapeId": "6ad8490a-e95b-45d2-aef3-9ce382919d1d", "sourceURL": "https://asdf-vm.com/ja-jp/guide/upgrading-to-v0-16", "url": "https://asdf-vm.com/ja-jp/guide/upgrading-to-v0-16", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you give me some code examples for 0.16.0にアップグレードする in asdf-vm?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**バイナリをダウンロードしてパスを設定する**:\n\n```yaml\n# In .zshrc, .bashrc, etc...\nexport PATH=\"$HOME/bin:$PATH\"\n```\n\nThis snippet shows you how to バイナリをダウンロードしてパスを設定する, which is an important aspect of 0.16.0にアップグレードする.\n\n**ASDF_DATA_DIRを設定する**:\n\n```yaml\nexport ASDF_DATA_DIR=\"/home/myuser/.asdf\"\n```\n\nThis snippet shows you how to asdf_data_dirを設定する, which is an important aspect of 0.16.0にアップグレードする.\n\n**$ASDF_DATA_DIR/shimsを$PATHの前に追加する**:\n\n```yaml\nexport ASDF_DATA_DIR=\"/home/myuser/.asdf\"\nexport PATH=\"$ASDF_DATA_DIR/shims:$PATH\"\n```\n\nThis snippet shows you how to $asdf_data_dir/shimsを$pathの前に追加する, which is an important aspect of 0.16.0にアップグレードする.\n\n**Shimを再生成する**:\n\n```yaml\nasdf reshim\n```\n\nThis snippet shows you how to shimを再生成する, which is an important aspect of 0.16.0にアップグレードする.\n\n", "metadata": {"source_url": "https://asdf-vm.com/ja-jp/guide/upgrading-to-v0-16", "title": "0.16.0にアップグレードする", "description": "asdfはバージョン0.15.0以前まではBashで書かれており、 `asdf` 関数がシェルにロードされたBashスクリプトのセットとして配布されていました。バージョン0.16.0はasdfをGoで完全に書き直したものです。完全に書き直したことによって多くの破壊的変更があり、現在ではスクリプトのセットではなくバイナリになっています。", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 04:04:01", "type": "code_examples", "page_metadata": {"title": "0.16.0にアップグレードする | asdf", "viewport": "width=device-width,initial-scale=1", "generator": "VitePress v1.6.3", "description": "Manage multiple runtime versions with a single CLI tool", "language": "ja-jp", "scrapeId": "6ad8490a-e95b-45d2-aef3-9ce382919d1d", "sourceURL": "https://asdf-vm.com/ja-jp/guide/upgrading-to-v0-16", "url": "https://asdf-vm.com/ja-jp/guide/upgrading-to-v0-16", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: What are some tips for using 0.16.0にアップグレードする in asdf-vm effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nオペレーティングシステムのパッケージマネージャがすでにasdf 0.16.0を提供している場合は、それをインストールするのがおそらく最良の方法です。\n\nasdfのアップグレードはOSのパッケージマネージャーと手動インストールでのみ可能です。セルフアップグレード機能はありません。\n\n既存のインストールデータを失うことなく、asdfの最新バージョンにアップグレードできます。\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://asdf-vm.com/ja-jp/guide/upgrading-to-v0-16", "title": "0.16.0にアップグレードする", "description": "asdfはバージョン0.15.0以前まではBashで書かれており、 `asdf` 関数がシェルにロードされたBashスクリプトのセットとして配布されていました。バージョン0.16.0はasdfをGoで完全に書き直したものです。完全に書き直したことによって多くの破壊的変更があり、現在ではスクリプトのセットではなくバイナリになっています。", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 04:04:01", "type": "best_practices", "page_metadata": {"title": "0.16.0にアップグレードする | asdf", "viewport": "width=device-width,initial-scale=1", "generator": "VitePress v1.6.3", "description": "Manage multiple runtime versions with a single CLI tool", "language": "ja-jp", "scrapeId": "6ad8490a-e95b-45d2-aef3-9ce382919d1d", "sourceURL": "https://asdf-vm.com/ja-jp/guide/upgrading-to-v0-16", "url": "https://asdf-vm.com/ja-jp/guide/upgrading-to-v0-16", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you explain what 公式プラグイン is in asdf-vm?\n\nAssistant: Sure, I'd be happy to explain 公式プラグイン in asdf-vm.\n\n# 公式プラグイン\n\nasdfコアチームでは、日々のワークライフに関連するプラグインをいくつか作成しています。これらのプラグインのメンテナンスおよび改善にご協力いただける方を、いつでも歓迎しています。Here's a quick rundown of what this is about:\n\n## 公式プラグインのリポジトリ\n\n- [Elixir](https://github.com/asdf-vm/asdf-elixir)\n- [Erlang](https://github.com/asdf-vm/asdf-erlang)\n- [Node.js](https://github.com/asdf-vm/asdf-nodejs)\n- [Ruby](https://github.com/asdf-vm/asdf-ruby)\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://asdf-vm.com/ja-jp/contribute/first-party-plugins.html", "title": "公式プラグイン", "description": "asdfコアチームでは、日々のワークライフに関連するプラグインをいくつか作成しています。これらのプラグインのメンテナンスおよび改善にご協力いただける方を、いつでも歓迎しています。", "has_code_examples": false, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 04:04:08", "type": "overview", "page_metadata": {"description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "language": "ja-jp", "viewport": "width=device-width,initial-scale=1", "title": "公式プラグイン | asdf", "scrapeId": "27bbebcf-0a30-4964-bc89-e3ba613b9dbb", "sourceURL": "https://asdf-vm.com/ja-jp/contribute/first-party-plugins.html", "url": "https://asdf-vm.com/ja-jp/contribute/first-party-plugins.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 公式プラグインのリポジトリ in asdf-vm?\n\nAssistant: To 公式プラグインのリポジトリ in asdf-vm, here's what you do:\n- [Elixir](https://github.com/asdf-vm/asdf-elixir)\n- [Erlang](https://github.com/asdf-vm/asdf-erlang)\n- [Node.js](https://github.com/asdf-vm/asdf-nodejs)\n- [Ruby](https://github.com/asdf-vm/asdf-ruby).\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ja-jp/contribute/first-party-plugins.html", "title": "公式プラグイン", "description": "asdfコアチームでは、日々のワークライフに関連するプラグインをいくつか作成しています。これらのプラグインのメンテナンスおよび改善にご協力いただける方を、いつでも歓迎しています。", "has_code_examples": false, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 04:04:08", "type": "section_detail", "page_metadata": {"description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "language": "ja-jp", "viewport": "width=device-width,initial-scale=1", "title": "公式プラグイン | asdf", "scrapeId": "27bbebcf-0a30-4964-bc89-e3ba613b9dbb", "sourceURL": "https://asdf-vm.com/ja-jp/contribute/first-party-plugins.html", "url": "https://asdf-vm.com/ja-jp/contribute/first-party-plugins.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: What are some tips for using 公式プラグイン in asdf-vm effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nコミュニティプラグインについては、下記をご覧ください:\n\n- [`asdf-community` オーガナイゼーション](https://github.com/asdf-community): `asdf` プラグインの長期的なメンテナンスを目的としたコミュニティ主導の共同プロジェクトです。\n\n- [`asdf-plugins` ショートネームリポジトリ](https://github.com/asdf-vm/asdf-plugins): ポピュラーな `asdf` プラグインを検索するために `asdf` コアが使用する、ショートネームのリストです。\n\n- [GitHub `asdf-plugin` トピック検索](https://github.com/topics/asdf-plugin)\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://asdf-vm.com/ja-jp/contribute/first-party-plugins.html", "title": "公式プラグイン", "description": "asdfコアチームでは、日々のワークライフに関連するプラグインをいくつか作成しています。これらのプラグインのメンテナンスおよび改善にご協力いただける方を、いつでも歓迎しています。", "has_code_examples": false, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 04:04:08", "type": "best_practices", "page_metadata": {"description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "language": "ja-jp", "viewport": "width=device-width,initial-scale=1", "title": "公式プラグイン | asdf", "scrapeId": "27bbebcf-0a30-4964-bc89-e3ba613b9dbb", "sourceURL": "https://asdf-vm.com/ja-jp/contribute/first-party-plugins.html", "url": "https://asdf-vm.com/ja-jp/contribute/first-party-plugins.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you explain what 官方插件 is in asdf-vm?\n\nAssistant: Sure, I'd be happy to explain 官方插件 in asdf-vm.\n\n# 官方插件\n\nasdf 核心团队已经开发了一些与他们日常工作相关的插件。随时欢迎大家维护和改进这些插件。Here's a quick rundown of what this is about:\n\n## 插件列表\n\nasdf 核心团队已经开发了一些与他们日常工作相关的插件。随时欢迎大家维护和改进这些插件。这些插件所对应的存储库链接如下所示：\n\n- [Elixir](https://github.com/asdf-vm/asdf-elixir)\n- [Erlang](https://github.com/asdf-vm/asdf-erlang)\n- [Node.js](https://github.com/asdf-vm/asdf-nodejs)\n- [Ruby](https://github.com/asdf-vm/asdf-ruby)\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://asdf-vm.com/zh-hans/contribute/first-party-plugins.html", "title": "官方插件", "description": "asdf 核心团队已经开发了一些与他们日常工作相关的插件。随时欢迎大家维护和改进这些插件。", "has_code_examples": false, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 04:04:13", "type": "overview", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "language": "zh-hans", "title": "官方插件 | asdf", "scrapeId": "09b3de16-3c94-4823-8f64-ae3d13aeb326", "sourceURL": "https://asdf-vm.com/zh-hans/contribute/first-party-plugins.html", "url": "https://asdf-vm.com/zh-hans/contribute/first-party-plugins.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 插件列表 in asdf-vm?\n\nAssistant: To 插件列表 in asdf-vm, here's what you do:\nasdf 核心团队已经开发了一些与他们日常工作相关的插件。随时欢迎大家维护和改进这些插件。这些插件所对应的存储库链接如下所示：\n\n- [Elixir](https://github.com/asdf-vm/asdf-elixir)\n- [Erlang](https://github.com/asdf-vm/asdf-erlang)\n- [Node.js](https://github.com/asdf-vm/asdf-nodejs)\n- [Ruby](https://github.com/asdf-vm/asdf-ruby).\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/zh-hans/contribute/first-party-plugins.html", "title": "官方插件", "description": "asdf 核心团队已经开发了一些与他们日常工作相关的插件。随时欢迎大家维护和改进这些插件。", "has_code_examples": false, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 04:04:13", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "language": "zh-hans", "title": "官方插件 | asdf", "scrapeId": "09b3de16-3c94-4823-8f64-ae3d13aeb326", "sourceURL": "https://asdf-vm.com/zh-hans/contribute/first-party-plugins.html", "url": "https://asdf-vm.com/zh-hans/contribute/first-party-plugins.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: What are some tips for using 官方插件 in asdf-vm effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\n对于社区插件，请参考：\n\n- [`asdf-community` 组织](https://github.com/asdf-community)：一个用于长期维护 `asdf` 插件的协作、社区驱动的项目。\n\n- [`asdf-plugins` 缩写存储库](https://github.com/asdf-vm/asdf-plugins)： `asdf` 核心用于查找流行的 `asdf` 插件的缩写列表。\n\n- [GitHub `asdf-plugin` 主题搜索](https://github.com/topics/asdf-plugin)\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://asdf-vm.com/zh-hans/contribute/first-party-plugins.html", "title": "官方插件", "description": "asdf 核心团队已经开发了一些与他们日常工作相关的插件。随时欢迎大家维护和改进这些插件。", "has_code_examples": false, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 04:04:13", "type": "best_practices", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "language": "zh-hans", "title": "官方插件 | asdf", "scrapeId": "09b3de16-3c94-4823-8f64-ae3d13aeb326", "sourceURL": "https://asdf-vm.com/zh-hans/contribute/first-party-plugins.html", "url": "https://asdf-vm.com/zh-hans/contribute/first-party-plugins.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you explain what First-Party Plugins is in asdf-vm?\n\nAssistant: Sure, I'd be happy to explain First-Party Plugins in asdf-vm.\n\n# First-Party Plugins\n\nA guide to first-party plugins created by the asdf team, including links to relevant repositories and community resources.Here's a quick rundown of what this is about:\n\n## Introduction\n\nA equipe principal do asdf criou alguns plugins relevantes para sua vida profissional diária. A ajuda é sempre bem-vinda na manutenção e melhoria desses plugins. Veja o repositório associado para cada link abaixo:\n\n## First-Party Plugins\n\n- [Elixir](https://github.com/asdf-vm/asdf-elixir)\n- [Erlang](https://github.com/asdf-vm/asdf-erlang)\n- [Node.js](https://github.com/asdf-vm/asdf-nodejs)\n- [Ruby](https://github.com/asdf-vm/asdf-ruby)\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://asdf-vm.com/pt-br/contribute/first-party-plugins.html", "title": "First-Party Plugins", "description": "A guide to first-party plugins created by the asdf team, including links to relevant repositories and community resources.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 04:04:18", "type": "overview", "page_metadata": {"generator": "VitePress v1.6.3", "title": "First-Party Plugins | asdf", "description": "Manage multiple runtime versions with a single CLI tool", "viewport": "width=device-width,initial-scale=1", "language": "pr-br", "scrapeId": "e2ccb7c2-d917-40f9-a1f6-985b5a1963ef", "sourceURL": "https://asdf-vm.com/pt-br/contribute/first-party-plugins.html", "url": "https://asdf-vm.com/pt-br/contribute/first-party-plugins.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I introduction in asdf-vm?\n\nAssistant: To introduction in asdf-vm, here's what you do:\nA equipe principal do asdf criou alguns plugins relevantes para sua vida profissional diária. A ajuda é sempre bem-vinda na manutenção e melhoria desses plugins. Veja o repositório associado para cada link abaixo:.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/pt-br/contribute/first-party-plugins.html", "title": "First-Party Plugins", "description": "A guide to first-party plugins created by the asdf team, including links to relevant repositories and community resources.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 04:04:18", "type": "section_detail", "page_metadata": {"generator": "VitePress v1.6.3", "title": "First-Party Plugins | asdf", "description": "Manage multiple runtime versions with a single CLI tool", "viewport": "width=device-width,initial-scale=1", "language": "pr-br", "scrapeId": "e2ccb7c2-d917-40f9-a1f6-985b5a1963ef", "sourceURL": "https://asdf-vm.com/pt-br/contribute/first-party-plugins.html", "url": "https://asdf-vm.com/pt-br/contribute/first-party-plugins.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I first-party plugins in asdf-vm?\n\nAssistant: To first-party plugins in asdf-vm, here's what you do:\n- [Elixir](https://github.com/asdf-vm/asdf-elixir)\n- [Erlang](https://github.com/asdf-vm/asdf-erlang)\n- [Node.js](https://github.com/asdf-vm/asdf-nodejs)\n- [Ruby](https://github.com/asdf-vm/asdf-ruby).\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/pt-br/contribute/first-party-plugins.html", "title": "First-Party Plugins", "description": "A guide to first-party plugins created by the asdf team, including links to relevant repositories and community resources.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 04:04:18", "type": "section_detail", "page_metadata": {"generator": "VitePress v1.6.3", "title": "First-Party Plugins | asdf", "description": "Manage multiple runtime versions with a single CLI tool", "viewport": "width=device-width,initial-scale=1", "language": "pr-br", "scrapeId": "e2ccb7c2-d917-40f9-a1f6-985b5a1963ef", "sourceURL": "https://asdf-vm.com/pt-br/contribute/first-party-plugins.html", "url": "https://asdf-vm.com/pt-br/contribute/first-party-plugins.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: What are some tips for using First-Party Plugins in asdf-vm effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nA ajuda é sempre bem-vinda na manutenção e melhoria desses plugins.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://asdf-vm.com/pt-br/contribute/first-party-plugins.html", "title": "First-Party Plugins", "description": "A guide to first-party plugins created by the asdf team, including links to relevant repositories and community resources.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 04:04:18", "type": "best_practices", "page_metadata": {"generator": "VitePress v1.6.3", "title": "First-Party Plugins | asdf", "description": "Manage multiple runtime versions with a single CLI tool", "viewport": "width=device-width,initial-scale=1", "language": "pr-br", "scrapeId": "e2ccb7c2-d917-40f9-a1f6-985b5a1963ef", "sourceURL": "https://asdf-vm.com/pt-br/contribute/first-party-plugins.html", "url": "https://asdf-vm.com/pt-br/contribute/first-party-plugins.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you explain what 플러그인 생성하기 is in asdf-vm?\n\nAssistant: Sure, I'd be happy to explain 플러그인 생성하기 in asdf-vm.\n\n# 플러그인 생성하기\n\n플러그인은 언어 / 툴의 버전 관리를 지원하는 실행 가능한 스크립트들이 있는 Git 리포지토리입니다. 이 스크립트들은 asdf에 의해 특정 명령어들을 받아 `asdf list-all <name>`, `asdf install <name> <version>` 등의 지원을 위해 실행됩니다.Here's a quick rundown of what this is about:\n\n## 빠른 시작\n\n자체 플러그인을 만드는 것을 시작하는 두 가지 옵션이 있습니다:\n\n1. [asdf-vm/asdf-plugin-template](https://github.com/asdf-vm/asdf-plugin-template) 리포지토리 사용해서 기본 스크립트가 구현된 ( `asdf-<tool_name>` 이름으로) 플러그인 리포지토리 [생성하기](https://github.com/asdf-vm/asdf-plugin-template/generate). 리포지토리가 생성되면, 그 리포지토리를 clone하고 템플릿을 유기적으로 업데이트하여 `setup.bash` 스크립트를 실행합니다.\n2. `asdf-<tool_name>` 로 이룸 붙인 리포지토리를 시작하고 아래 문서에 필수 스크립트들을 구현하세요.\n\n## 플리그인 스크립트들을 위한 황금률\n\n- 스크립트는 다른 `asdf` 명령어를 호출하면 **안됩니다**.\n- 셸 툴/명령어의 dependency를 최소로 유지하세요.\n- non-portable 툴이나 명령어 플래그의 사용을 피하세요. 예를 들어, `sort -V`. asdf core를 참고하세요 [금지된 명령어 목록](https://github.com/asdf-vm/asdf/blob/master/test/banned_commands.bats)\n\n## 스크립트 개요\n\nasdf에서 호출 가능한 스크립트의 전체 목록입니다.\n\n| 스크립트 | 설명 |\n| --- | --- |\n| [bin/list-all](https://asdf-vm.com/ko-kr/plugins/create#bin-list-all) 필수 | 모든 설치 가능한 버전들을 나열 |\n| [bin/download](https://asdf-vm.com/ko-kr/plugins/create#bin-download) 필수 | 지정한 버전에 대한 소스 코드 또는 바이너리 다운로드 |\n| [bin/install](https://asdf-vm.com/ko-kr/plugins/create#bin-install) 필수 | 지정된 버전을 설치 |\n| [bin/latest-stable](https://asdf-vm.com/ko-kr/plugins/create#bin-latest-stable) 추천 | 지정된 도구의 최신 안정 버전 나열 |\n| [bin/help.overview](https://asdf-vm.com/ko-kr/plugins/create#bin-help.overview) | 플러그인 및 도구에 대한 일반적인 설명을 출력 |\n| [bin/help.deps](https://asdf-vm.com/ko-kr/plugins/create#bin-help.deps) | 운영 체제별 dependencies 목록 출력 |\n| [bin/help.config](https://asdf-vm.com/ko-kr/plugins/create#bin-help.config) | 플러그인 및 툴 설정 정보 출력 |\n| [bin/help.links](https://asdf-vm.com/ko-kr/plugins/create#bin-help.links) | 플러그인 및 툴에 대한 링크 목록 출력 |\n| [bin/list-bin-paths](https://asdf-vm.com/ko-kr/plugins/create#bin-list-bin-paths) | shim들을 생성하기 위해 바이너리 파일이 있는 디렉토리에 대한 상대 경로 나열 |\n| [bin/exec-env](https://asdf-vm.com/ko-kr/plugins/create#bin-exec-env) | 바이너리 실행을 위한 환경 준비 |\n| [bin/exec-path](https://asdf-vm.com/ko-kr/plugins/create#bin-exec-path) | 툴 버전의 실행파일 경로 출력 |\n| [bin/uninstall](https://asdf-vm.com/ko-kr/plugins/create#bin-uninstall) | 툴의 특정 버전 제거 |\n| [bin/list-legacy-filenames](https://asdf-vm.com/ko-kr/plugins/create#bin-list-legacy-filenames) | 레거시 버전 파일의 이름 출력: `.ruby-version` |\n| [bin/parse-legacy-file](https://asdf-vm.com/ko-kr/plugins/create#bin-parse-legacy-file) | 레거시 버전 파일들을 위한 맞춤 parser |\n| [bin/post-plugin-add](https://asdf-vm.com/ko-kr/plugins/create#bin-post-plugin-add) | 플러그인이 추가된 후 실행될 훅 |\n| [bin/post-plugin-update](https://asdf-vm.com/ko-kr/plugins/create#bin-post-plugin-update) | 플러그인이 업데이트 된 후 실행될 훅 |\n| [bin/pre-plugin-remove](https://asdf-vm.com/ko-kr/plugins/create#bin-pre-plugin-remove) | 플러그인이 제거되기 전 실행될 훅 |\n\n## 환경 변수 개요\n\n모든 스크립트에서 사용되는 환경 변수의 전체 목록입니다.\n\n| 환경 변수 | 설명 |\n| --- | --- |\n| `ASDF_INSTALL_TYPE` | `version` 또는 `ref` |\n| `ASDF_INSTALL_VERSION` | `ASDF_INSTALL_TYPE` 에 따른 풀 버전 번호 또는 Git Ref |\n| `ASDF_INSTALL_PATH` | 툴이 설치 _되어야하는_ 혹은 _되어있는_ 경로 |\n| `ASDF_CONCURRENCY` | 소스 코드를 컴파일할 때 사용할 코어 수. `make-j` 를 설정할 때 유용 |\n| `ASDF_DOWNLOAD_PATH` | `bin/download` 에 의해 소스 코드 또는 바이너리가 다운로드 된 경로 |\n| `ASDF_PLUGIN_PATH` | 플러그인이 설치된 경로 |\n| `ASDF_PLUGIN_SOURCE_URL` | 플러그인의 소스 URL |\n| `ASDF_PLUGIN_PREV_REF` | 플러그인 리포지토리의 이전 `git-ref` |\n| `ASDF_PLUGIN_POST_REF` | 플러그인 리포지토리의 업데이트 된 `git-ref` |\n| `ASDF_CMD_FILE` | source 되는 파일의 전체 경로를 해결 | \n\n노트\n\n**모든 스크립트에서 모든 환경 변수를 사용할 수 있는 것은 아닙니다.** 아래 각 스크립트에 대한 문서를 확인하여 사용할 수 있는 환경 변수들을 확인하세요.\n\n## 필수적 스크립트\n\n### `bin/list-all` 필수\n\n**설명**\n\n설치 가능한 모든 버전 나열.\n\n**출력 형식**\n\n**공백으로 구분된** 문자열을 반드시 출력. 예를 들어:\n\n```\n1.0.1 1.0.2 1.3.0 1.4\n```\n\n최신 버전이 마지막에 와야 합니다.\n\nasdf core는 각 버전을 각각의 행에 출력하여, 일부 버전을 화면 밖으로 밀어낼 가능성이 있습니다.\n\n**정렬**\n\n웹사이트의 릴리스 페이지에서 버전을 가져오는 경우에는 이미 올바른 순서로 되어 있는 경우가 많기 때문에 제공된 순서대로 두는 것이 좋습니다. 역순으로 되어 있는 경우 `tac` 을 통해 해당 버전들을 바로 잡는것으로 충분합니다.\n\n정렬이 불가피한 경우, `sort -V` 는 사용이 불가능하므로, 다음 중 하나를 제안합니다:\n\n- [Git 정렬 기능 사용](https://github.com/asdf-vm/asdf-plugin-template/blob/main/template/lib/utils.bash) (Git `v2.18.0` 이상 필요)\n- [맞춤 정렬 함수 작성](https://github.com/vic/asdf-idris/blob/master/bin/list-all#L6) ( `sed`, `sort` & `awk` 필요)\n\n**스크립트에서 사용 가능한 환경 변수**\n\n이 스크립트에는 환경 변수가 제공되지 않습니다.\n\n**이 스크립트를 호출하는 명령어**\n\n- `asdf list all <name> [version]`\n- `asdf list all nodejs`: 이 스크립트에 의해 반환된 모든 버전을 나열합니다, 한 행에 한개씩.\n- `asdf list all nodejs 18`: 이 스크립트에 의해 반환된 모든 버전을 나열하며, 각 행에 하나씩, `18` 로 시작하는 모든 버전에 필터가 적용됩니다.\n\n**asdf core에서 호출 시그니처**\n\n제공되는 매개변수는 없습니다.\n\n```bash\n\"${plugin_path}/bin/list-all\"\n```\n\n## `bin/download` 필수\n\n**설명**\n\n지정된 장소에 지정된 버전에 대한 소스 코드 또는 바이너리 다운로드\n\n**구현 세부사항**\n\n- 스크립트는 소스 또는 바이너리를 `ASDF_DOWNLOAD_PATH` 에서 지정된 디렉토리에 다운로드해야합니다.\n- 압축 해제된 소스 코드 또는 바이너리만 `ASDF_DOWNLOAD_PATH` 디렉토리에 위치해야합니다.\n- 실패 시에는 `ASDF_DOLOAD_PATH` 에 어떠한 파일도 남아서는 안 됩니다.\n- 성공 시에는 `0` 이 종료 코드입니다.\n- 실패 시에는 0이 아닌 상태의 종료 코드입니다.\n\n**레거시 플러그인**\n\n비록 이 스크립트는 모든 플러그인에서 _필수_로 되어 있지만, 이 스크립트가 도입되기 이전의 \"레거시\" 플러그인에서는 _선택_ 입니다.\n\n이 스크립트가 없는 경우, asdf는 `bin/install` 스크립트가 있다고 가정하고 해당 버전을 다운로드 **그리고** 설치합니다.\n\n레거시 플러그인 지원은 최종적으로 제거될 예정이기 때문에 앞으로 작성할 모든 플러그인에서 이 스크립트를 포함해야합니다.\n\n**스크립트에서 사용 가능한 환경 변수**\n\n- `ASDF_INSTALL_TYPE`: `version` 또는 `ref`\n- `ASDF_INSTALL_VERSION`:\n  - `ASDF_INSTALL_TYPE=version` 의 경우, 풀 버전 번호.\n  - `ASDF_INSTALL_TYPE=ref` 의 경우, Git ref (태그/커밋/브랜치).\n- `ASDF_INSTALL_PATH`: 툴이 설치 _되어있는_, 또는 _되어야하는_ 경로.\n- `ASDF_DOWNLOAD_PATH`: 소스 코드 또는 바이너리 파일이 다운로드 된 경로.\n\n**이 스크립트를 호출하는 명령어**\n\n- `asdf install <tool> [version]`\n- `asdf install <tool> latest[:version]`\n- `asdf install nodejs 18.0.0`: Node.js 버전 `18.0.0` 의 소스 코드 또는 바이너리를 다운로드하고 `ASDF_DOWNLOAD_PATH` 디렉토리에 저장. 그 다음 `bin/install` 스크립트를 실행.\n\n**asdf core에서 호출 시그니처**\n\n제공되는 매개변수는 없습니다.\n\n```bash\n\"${plugin_path}\"/bin/download\n```\n\n## `bin/install` 필수\n\n**설명**\n\n특정 버전의 도구를 지정된 위치에 설치.\n\n**구현 세부사항**\n\n- 스크립트는 `ASDF_INSTALL_PATH` 경로에 지정된 버전을 설치해야합니다.\n- Shim은 `$ASDF_INSTALL_PATH/bin` 에 있는 어떠한 파일에 대해서든 기본적으로 생성됩니다. 이 동작은 선택적 [bin/list-bin-paths](https://asdf-vm.com/ko-kr/plugins/create#binlist-bin-paths) 스크립트로 맞춤 설정 가능합니다.\n- 성공 시에는 `0` 이 종료 코드입니다.\n- 실패 시에는 0이 아닌 상태의 종료 코드입니다.\n- TOCTOU(Time-of-Check-to-Off-Use) 문제를 방지하려면, 툴의 빌드 및 설치가 성공적이라고 판단될때만 스크립트에서 파일을 `ASDF_INSTALL_PATH` 에 배치합니다.\n\n**레거시 플러그인**\n\n`bin/download` 스크립트가 없는 경우, 이 스크립트는 지정된 버전을 다운로드 **그리고** 설치해야합니다.\n\n`0.7._` 보다 이전 그리고 `0.8._` 보다 이후 asdf 코어 버전들의 호환성을 확인하려면, `ASDF_DOWNLOAD_PATH` 환경 변수가 있는지 확인합니다. 그 환경 변수가 존재하는 경우, 이미 `bin/download` 스크립트가 그 버전을 다운로드했다고 가정하고, 존재하지 않으면 `bin/install` 스크립트에서 소스 코드를 다운로드합니다.\n\n**스크립트에서 사용 가능한 환경 변수**\n\n- `ASDF_INSTALL_TYPE`: `version` 또는 `ref`\n- `ASDF_INSTALL_VERSION`:\n  - `ASDF_INSTALL_TYPE=version` 의 경우, 풀 버전 번호.\n  - `ASDF_INSTALL_TYPE=ref` 의 경우, Git ref (태그/커밋/브랜치).\n- `ASDF_INSTALL_PATH`: 툴이 설치 _되어있는_, 또는 _되어야하는_ 경로.\n- `ASDF_CONCURRENCY`: 소스 코드를 컴파일할 때 사용할 코어 수. `make-j` 를 설정할 때 유용.\n- `ASDF_DOWNLOAD_PATH`: 소스 코드 또는 바이너리 파일이 다운로드 된 경로.\n\n**이 스크립트를 호출하는 명령어**\n\n- `asdf install`\n- `asdf install <tool>`\n- `asdf install <tool> [version]`\n- `asdf install <tool> latest[:version]`\n- `asdf install nodejs 18.0.0`: Node.js 버전 `18.0.0` 을 `ASDF_INSTALL_PATH` 디렉토리에 설치.\n\n**asdf core에서 호출 시그니처**\n\n제공되는 매개변수는 없습니다.\n\n```bash\n\"${plugin_path}\"/bin/install\n```\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://asdf-vm.com/ko-kr/plugins/create", "title": "플러그인 생성하기", "description": "플러그인은 언어 / 툴의 버전 관리를 지원하는 실행 가능한 스크립트들이 있는 Git 리포지토리입니다. 이 스크립트들은 asdf에 의해 특정 명령어들을 받아 `asdf list-all <name>`, `asdf install <name> <version>` 등의 지원을 위해 실행됩니다.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 04:05:08", "type": "overview", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "title": "플러그인 생성하기 | asdf", "language": "ko-kr", "generator": "VitePress v1.6.3", "description": "Manage multiple runtime versions with a single CLI tool", "scrapeId": "747eb899-b212-4740-a6d9-e33341c4d657", "sourceURL": "https://asdf-vm.com/ko-kr/plugins/create", "url": "https://asdf-vm.com/ko-kr/plugins/create", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 빠른 시작 in asdf-vm?\n\nAssistant: To 빠른 시작 in asdf-vm, here's what you do:\n자체 플러그인을 만드는 것을 시작하는 두 가지 옵션이 있습니다:\n\n1. [asdf-vm/asdf-plugin-template](https://github.com/asdf-vm/asdf-plugin-template) 리포지토리 사용해서 기본 스크립트가 구현된 ( `asdf-<tool_name>` 이름으로) 플러그인 리포지토리 [생성하기](https://github.com/asdf-vm/asdf-plugin-template/generate). 리포지토리가 생성되면, 그 리포지토리를 clone하고 템플릿을 유기적으로 업데이트하여 `setup.bash` 스크립트를 실행합니다.\n2. `asdf-<tool_name>` 로 이룸 붙인 리포지토리를 시작하고 아래 문서에 필수 스크립트들을 구현하세요..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ko-kr/plugins/create", "title": "플러그인 생성하기", "description": "플러그인은 언어 / 툴의 버전 관리를 지원하는 실행 가능한 스크립트들이 있는 Git 리포지토리입니다. 이 스크립트들은 asdf에 의해 특정 명령어들을 받아 `asdf list-all <name>`, `asdf install <name> <version>` 등의 지원을 위해 실행됩니다.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 04:05:08", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "title": "플러그인 생성하기 | asdf", "language": "ko-kr", "generator": "VitePress v1.6.3", "description": "Manage multiple runtime versions with a single CLI tool", "scrapeId": "747eb899-b212-4740-a6d9-e33341c4d657", "sourceURL": "https://asdf-vm.com/ko-kr/plugins/create", "url": "https://asdf-vm.com/ko-kr/plugins/create", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 플리그인 스크립트들을 위한 황금률 in asdf-vm?\n\nAssistant: To 플리그인 스크립트들을 위한 황금률 in asdf-vm, here's what you do:\n- 스크립트는 다른 `asdf` 명령어를 호출하면 **안됩니다**.\n- 셸 툴/명령어의 dependency를 최소로 유지하세요.\n- non-portable 툴이나 명령어 플래그의 사용을 피하세요. 예를 들어, `sort -V`. asdf core를 참고하세요 [금지된 명령어 목록](https://github.com/asdf-vm/asdf/blob/master/test/banned_commands.bats).\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ko-kr/plugins/create", "title": "플러그인 생성하기", "description": "플러그인은 언어 / 툴의 버전 관리를 지원하는 실행 가능한 스크립트들이 있는 Git 리포지토리입니다. 이 스크립트들은 asdf에 의해 특정 명령어들을 받아 `asdf list-all <name>`, `asdf install <name> <version>` 등의 지원을 위해 실행됩니다.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 04:05:08", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "title": "플러그인 생성하기 | asdf", "language": "ko-kr", "generator": "VitePress v1.6.3", "description": "Manage multiple runtime versions with a single CLI tool", "scrapeId": "747eb899-b212-4740-a6d9-e33341c4d657", "sourceURL": "https://asdf-vm.com/ko-kr/plugins/create", "url": "https://asdf-vm.com/ko-kr/plugins/create", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 스크립트 개요 in asdf-vm?\n\nAssistant: To 스크립트 개요 in asdf-vm, here's what you do:\nasdf에서 호출 가능한 스크립트의 전체 목록입니다.\n\n| 스크립트 | 설명 |\n| --- | --- |\n| [bin/list-all](https://asdf-vm.com/ko-kr/plugins/create#bin-list-all) 필수 | 모든 설치 가능한 버전들을 나열 |\n| [bin/download](https://asdf-vm.com/ko-kr/plugins/create#bin-download) 필수 | 지정한 버전에 대한 소스 코드 또는 바이너리 다운로드 |\n| [bin/install](https://asdf-vm.com/ko-kr/plugins/create#bin-install) 필수 | 지정된 버전을 설치 |\n| [bin/latest-stable](https://asdf-vm.com/ko-kr/plugins/create#bin-latest-stable) 추천 | 지정된 도구의 최신 안정 버전 나열 |\n| [bin/help.overview](https://asdf-vm.com/ko-kr/plugins/create#bin-help.overview) | 플러그인 및 도구에 대한 일반적인 설명을 출력 |\n| [bin/help.deps](https://asdf-vm.com/ko-kr/plugins/create#bin-help.deps) | 운영 체제별 dependencies 목록 출력 |\n| [bin/help.config](https://asdf-vm.com/ko-kr/plugins/create#bin-help.config) | 플러그인 및 툴 설정 정보 출력 |\n| [bin/help.links](https://asdf-vm.com/ko-kr/plugins/create#bin-help.links) | 플러그인 및 툴에 대한 링크 목록 출력 |\n| [bin/list-bin-paths](https://asdf-vm.com/ko-kr/plugins/create#bin-list-bin-paths) | shim들을 생성하기 위해 바이너리 파일이 있는 디렉토리에 대한 상대 경로 나열 |\n| [bin/exec-env](https://asdf-vm.com/ko-kr/plugins/create#bin-exec-env) | 바이너리 실행을 위한 환경 준비 |\n| [bin/exec-path](https://asdf-vm.com/ko-kr/plugins/create#bin-exec-path) | 툴 버전의 실행파일 경로 출력 |\n| [bin/uninstall](https://asdf-vm.com/ko-kr/plugins/create#bin-uninstall) | 툴의 특정 버전 제거 |\n| [bin/list-legacy-filenames](https://asdf-vm.com/ko-kr/plugins/create#bin-list-legacy-filenames) | 레거시 버전 파일의 이름 출력: `.ruby-version` |\n| [bin/parse-legacy-file](https://asdf-vm.com/ko-kr/plugins/create#bin-parse-legacy-file) | 레거시 버전 파일들을 위한 맞춤 parser |\n| [bin/post-plugin-add](https://asdf-vm.com/ko-kr/plugins/create#bin-post-plugin-add) | 플러그인이 추가된 후 실행될 훅 |\n| [bin/post-plugin-update](https://asdf-vm.com/ko-kr/plugins/create#bin-post-plugin-update) | 플러그인이 업데이트 된 후 실행될 훅 |\n| [bin/pre-plugin-remove](https://asdf-vm.com/ko-kr/plugins/create#bin-pre-plugin-remove) | 플러그인이 제거되기 전 실행될 훅 |.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ko-kr/plugins/create", "title": "플러그인 생성하기", "description": "플러그인은 언어 / 툴의 버전 관리를 지원하는 실행 가능한 스크립트들이 있는 Git 리포지토리입니다. 이 스크립트들은 asdf에 의해 특정 명령어들을 받아 `asdf list-all <name>`, `asdf install <name> <version>` 등의 지원을 위해 실행됩니다.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 04:05:08", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "title": "플러그인 생성하기 | asdf", "language": "ko-kr", "generator": "VitePress v1.6.3", "description": "Manage multiple runtime versions with a single CLI tool", "scrapeId": "747eb899-b212-4740-a6d9-e33341c4d657", "sourceURL": "https://asdf-vm.com/ko-kr/plugins/create", "url": "https://asdf-vm.com/ko-kr/plugins/create", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 환경 변수 개요 in asdf-vm?\n\nAssistant: To 환경 변수 개요 in asdf-vm, here's what you do:\n모든 스크립트에서 사용되는 환경 변수의 전체 목록입니다.\n\n| 환경 변수 | 설명 |\n| --- | --- |\n| `ASDF_INSTALL_TYPE` | `version` 또는 `ref` |\n| `ASDF_INSTALL_VERSION` | `ASDF_INSTALL_TYPE` 에 따른 풀 버전 번호 또는 Git Ref |\n| `ASDF_INSTALL_PATH` | 툴이 설치 _되어야하는_ 혹은 _되어있는_ 경로 |\n| `ASDF_CONCURRENCY` | 소스 코드를 컴파일할 때 사용할 코어 수. `make-j` 를 설정할 때 유용 |\n| `ASDF_DOWNLOAD_PATH` | `bin/download` 에 의해 소스 코드 또는 바이너리가 다운로드 된 경로 |\n| `ASDF_PLUGIN_PATH` | 플러그인이 설치된 경로 |\n| `ASDF_PLUGIN_SOURCE_URL` | 플러그인의 소스 URL |\n| `ASDF_PLUGIN_PREV_REF` | 플러그인 리포지토리의 이전 `git-ref` |\n| `ASDF_PLUGIN_POST_REF` | 플러그인 리포지토리의 업데이트 된 `git-ref` |\n| `ASDF_CMD_FILE` | source 되는 파일의 전체 경로를 해결 | \n\n노트\n\n**모든 스크립트에서 모든 환경 변수를 사용할 수 있는 것은 아닙니다.** 아래 각 스크립트에 대한 문서를 확인하여 사용할 수 있는 환경 변수들을 확인하세요..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ko-kr/plugins/create", "title": "플러그인 생성하기", "description": "플러그인은 언어 / 툴의 버전 관리를 지원하는 실행 가능한 스크립트들이 있는 Git 리포지토리입니다. 이 스크립트들은 asdf에 의해 특정 명령어들을 받아 `asdf list-all <name>`, `asdf install <name> <version>` 등의 지원을 위해 실행됩니다.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 04:05:08", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "title": "플러그인 생성하기 | asdf", "language": "ko-kr", "generator": "VitePress v1.6.3", "description": "Manage multiple runtime versions with a single CLI tool", "scrapeId": "747eb899-b212-4740-a6d9-e33341c4d657", "sourceURL": "https://asdf-vm.com/ko-kr/plugins/create", "url": "https://asdf-vm.com/ko-kr/plugins/create", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 필수적 스크립트 in asdf-vm?\n\nAssistant: To 필수적 스크립트 in asdf-vm, here's what you do:\n### `bin/list-all` 필수\n\n**설명**\n\n설치 가능한 모든 버전 나열.\n\n**출력 형식**\n\n**공백으로 구분된** 문자열을 반드시 출력. 예를 들어:\n\n```\n1.0.1 1.0.2 1.3.0 1.4\n```\n\n최신 버전이 마지막에 와야 합니다.\n\nasdf core는 각 버전을 각각의 행에 출력하여, 일부 버전을 화면 밖으로 밀어낼 가능성이 있습니다.\n\n**정렬**\n\n웹사이트의 릴리스 페이지에서 버전을 가져오는 경우에는 이미 올바른 순서로 되어 있는 경우가 많기 때문에 제공된 순서대로 두는 것이 좋습니다. 역순으로 되어 있는 경우 `tac` 을 통해 해당 버전들을 바로 잡는것으로 충분합니다.\n\n정렬이 불가피한 경우, `sort -V` 는 사용이 불가능하므로, 다음 중 하나를 제안합니다:\n\n- [Git 정렬 기능 사용](https://github.com/asdf-vm/asdf-plugin-template/blob/main/template/lib/utils.bash) (Git `v2.18.0` 이상 필요)\n- [맞춤 정렬 함수 작성](https://github.com/vic/asdf-idris/blob/master/bin/list-all#L6) ( `sed`, `sort` & `awk` 필요)\n\n**스크립트에서 사용 가능한 환경 변수**\n\n이 스크립트에는 환경 변수가 제공되지 않습니다.\n\n**이 스크립트를 호출하는 명령어**\n\n- `asdf list all <name> [version]`\n- `asdf list all nodejs`: 이 스크립트에 의해 반환된 모든 버전을 나열합니다, 한 행에 한개씩.\n- `asdf list all nodejs 18`: 이 스크립트에 의해 반환된 모든 버전을 나열하며, 각 행에 하나씩, `18` 로 시작하는 모든 버전에 필터가 적용됩니다.\n\n**asdf core에서 호출 시그니처**\n\n제공되는 매개변수는 없습니다.\n\n```bash\n\"${plugin_path}/bin/list-all\"\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ko-kr/plugins/create", "title": "플러그인 생성하기", "description": "플러그인은 언어 / 툴의 버전 관리를 지원하는 실행 가능한 스크립트들이 있는 Git 리포지토리입니다. 이 스크립트들은 asdf에 의해 특정 명령어들을 받아 `asdf list-all <name>`, `asdf install <name> <version>` 등의 지원을 위해 실행됩니다.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 04:05:08", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "title": "플러그인 생성하기 | asdf", "language": "ko-kr", "generator": "VitePress v1.6.3", "description": "Manage multiple runtime versions with a single CLI tool", "scrapeId": "747eb899-b212-4740-a6d9-e33341c4d657", "sourceURL": "https://asdf-vm.com/ko-kr/plugins/create", "url": "https://asdf-vm.com/ko-kr/plugins/create", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I `bin/download` 필수 in asdf-vm?\n\nAssistant: To `bin/download` 필수 in asdf-vm, here's what you do:\n**설명**\n\n지정된 장소에 지정된 버전에 대한 소스 코드 또는 바이너리 다운로드\n\n**구현 세부사항**\n\n- 스크립트는 소스 또는 바이너리를 `ASDF_DOWNLOAD_PATH` 에서 지정된 디렉토리에 다운로드해야합니다.\n- 압축 해제된 소스 코드 또는 바이너리만 `ASDF_DOWNLOAD_PATH` 디렉토리에 위치해야합니다.\n- 실패 시에는 `ASDF_DOLOAD_PATH` 에 어떠한 파일도 남아서는 안 됩니다.\n- 성공 시에는 `0` 이 종료 코드입니다.\n- 실패 시에는 0이 아닌 상태의 종료 코드입니다.\n\n**레거시 플러그인**\n\n비록 이 스크립트는 모든 플러그인에서 _필수_로 되어 있지만, 이 스크립트가 도입되기 이전의 \"레거시\" 플러그인에서는 _선택_ 입니다.\n\n이 스크립트가 없는 경우, asdf는 `bin/install` 스크립트가 있다고 가정하고 해당 버전을 다운로드 **그리고** 설치합니다.\n\n레거시 플러그인 지원은 최종적으로 제거될 예정이기 때문에 앞으로 작성할 모든 플러그인에서 이 스크립트를 포함해야합니다.\n\n**스크립트에서 사용 가능한 환경 변수**\n\n- `ASDF_INSTALL_TYPE`: `version` 또는 `ref`\n- `ASDF_INSTALL_VERSION`:\n  - `ASDF_INSTALL_TYPE=version` 의 경우, 풀 버전 번호.\n  - `ASDF_INSTALL_TYPE=ref` 의 경우, Git ref (태그/커밋/브랜치).\n- `ASDF_INSTALL_PATH`: 툴이 설치 _되어있는_, 또는 _되어야하는_ 경로.\n- `ASDF_DOWNLOAD_PATH`: 소스 코드 또는 바이너리 파일이 다운로드 된 경로.\n\n**이 스크립트를 호출하는 명령어**\n\n- `asdf install <tool> [version]`\n- `asdf install <tool> latest[:version]`\n- `asdf install nodejs 18.0.0`: Node.js 버전 `18.0.0` 의 소스 코드 또는 바이너리를 다운로드하고 `ASDF_DOWNLOAD_PATH` 디렉토리에 저장. 그 다음 `bin/install` 스크립트를 실행.\n\n**asdf core에서 호출 시그니처**\n\n제공되는 매개변수는 없습니다.\n\n```bash\n\"${plugin_path}\"/bin/download\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ko-kr/plugins/create", "title": "플러그인 생성하기", "description": "플러그인은 언어 / 툴의 버전 관리를 지원하는 실행 가능한 스크립트들이 있는 Git 리포지토리입니다. 이 스크립트들은 asdf에 의해 특정 명령어들을 받아 `asdf list-all <name>`, `asdf install <name> <version>` 등의 지원을 위해 실행됩니다.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 04:05:08", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "title": "플러그인 생성하기 | asdf", "language": "ko-kr", "generator": "VitePress v1.6.3", "description": "Manage multiple runtime versions with a single CLI tool", "scrapeId": "747eb899-b212-4740-a6d9-e33341c4d657", "sourceURL": "https://asdf-vm.com/ko-kr/plugins/create", "url": "https://asdf-vm.com/ko-kr/plugins/create", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I `bin/install` 필수 in asdf-vm?\n\nAssistant: To `bin/install` 필수 in asdf-vm, here's what you do:\n**설명**\n\n특정 버전의 도구를 지정된 위치에 설치.\n\n**구현 세부사항**\n\n- 스크립트는 `ASDF_INSTALL_PATH` 경로에 지정된 버전을 설치해야합니다.\n- Shim은 `$ASDF_INSTALL_PATH/bin` 에 있는 어떠한 파일에 대해서든 기본적으로 생성됩니다. 이 동작은 선택적 [bin/list-bin-paths](https://asdf-vm.com/ko-kr/plugins/create#binlist-bin-paths) 스크립트로 맞춤 설정 가능합니다.\n- 성공 시에는 `0` 이 종료 코드입니다.\n- 실패 시에는 0이 아닌 상태의 종료 코드입니다.\n- TOCTOU(Time-of-Check-to-Off-Use) 문제를 방지하려면, 툴의 빌드 및 설치가 성공적이라고 판단될때만 스크립트에서 파일을 `ASDF_INSTALL_PATH` 에 배치합니다.\n\n**레거시 플러그인**\n\n`bin/download` 스크립트가 없는 경우, 이 스크립트는 지정된 버전을 다운로드 **그리고** 설치해야합니다.\n\n`0.7._` 보다 이전 그리고 `0.8._` 보다 이후 asdf 코어 버전들의 호환성을 확인하려면, `ASDF_DOWNLOAD_PATH` 환경 변수가 있는지 확인합니다. 그 환경 변수가 존재하는 경우, 이미 `bin/download` 스크립트가 그 버전을 다운로드했다고 가정하고, 존재하지 않으면 `bin/install` 스크립트에서 소스 코드를 다운로드합니다.\n\n**스크립트에서 사용 가능한 환경 변수**\n\n- `ASDF_INSTALL_TYPE`: `version` 또는 `ref`\n- `ASDF_INSTALL_VERSION`:\n  - `ASDF_INSTALL_TYPE=version` 의 경우, 풀 버전 번호.\n  - `ASDF_INSTALL_TYPE=ref` 의 경우, Git ref (태그/커밋/브랜치).\n- `ASDF_INSTALL_PATH`: 툴이 설치 _되어있는_, 또는 _되어야하는_ 경로.\n- `ASDF_CONCURRENCY`: 소스 코드를 컴파일할 때 사용할 코어 수. `make-j` 를 설정할 때 유용.\n- `ASDF_DOWNLOAD_PATH`: 소스 코드 또는 바이너리 파일이 다운로드 된 경로.\n\n**이 스크립트를 호출하는 명령어**\n\n- `asdf install`\n- `asdf install <tool>`\n- `asdf install <tool> [version]`\n- `asdf install <tool> latest[:version]`\n- `asdf install nodejs 18.0.0`: Node.js 버전 `18.0.0` 을 `ASDF_INSTALL_PATH` 디렉토리에 설치.\n\n**asdf core에서 호출 시그니처**\n\n제공되는 매개변수는 없습니다.\n\n```bash\n\"${plugin_path}\"/bin/install\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ko-kr/plugins/create", "title": "플러그인 생성하기", "description": "플러그인은 언어 / 툴의 버전 관리를 지원하는 실행 가능한 스크립트들이 있는 Git 리포지토리입니다. 이 스크립트들은 asdf에 의해 특정 명령어들을 받아 `asdf list-all <name>`, `asdf install <name> <version>` 등의 지원을 위해 실행됩니다.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 04:05:08", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "title": "플러그인 생성하기 | asdf", "language": "ko-kr", "generator": "VitePress v1.6.3", "description": "Manage multiple runtime versions with a single CLI tool", "scrapeId": "747eb899-b212-4740-a6d9-e33341c4d657", "sourceURL": "https://asdf-vm.com/ko-kr/plugins/create", "url": "https://asdf-vm.com/ko-kr/plugins/create", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you give me some code examples for 플러그인 생성하기 in asdf-vm?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**스크립트에서 사용 가능한 환경 변수**:\n\n```yaml\n- `ASDF_INSTALL_TYPE`: `version` 또는 `ref`\n- `ASDF_INSTALL_VERSION`:\n  - `ASDF_INSTALL_TYPE=version` 의 경우, 풀 버전 번호.\n  - `ASDF_INSTALL_TYPE=ref` 의 경우, Git ref (태그/커밋/브랜치).\n- `ASDF_INSTALL_PATH`: 툴이 설치 _되어있는_, 또는 _되어야하는_ 경로.\n- `ASDF_CONCURRENCY`: 소스 코드를 컴파일할 때 사용할 코어 수. `make-j` 를 설정할 때 유용.\n- `ASDF_DOWNLOAD_PATH`: 소스 코드 또는 바이너리 파일이 다운로드 된 경로.\n```\n\nThis snippet shows you how to 스크립트에서 사용 가능한 환경 변수, which is an important aspect of 플러그인 생성하기.\n\n**출력 형식**:\n\n```yaml\n**공백으로 구분된** 문자열을 반드시 출력. 예를 들어:\n\n```\n1.0.1 1.0.2 1.3.0 1.4\n```\n```\n\nThis snippet shows you how to 출력 형식, which is an important aspect of 플러그인 생성하기.\n\n**정렬**:\n\n```yaml\n정렬이 불가피한 경우, `sort -V` 는 사용이 불가능하므로, 다음 중 하나를 제안합니다:\n\n- [Git 정렬 기능 사용](https://github.com/asdf-vm/asdf-plugin-template/blob/main/template/lib/utils.bash) (Git `v2.18.0` 이상 필요)\n- [맞춤 정렬 함수 작성](https://github.com/vic/asdf-idris/blob/master/bin/list-all#L6) ( `sed`, `sort` & `awk` 필요)\n```\n\nThis snippet shows you how to 정렬, which is an important aspect of 플러그인 생성하기.\n\n", "metadata": {"source_url": "https://asdf-vm.com/ko-kr/plugins/create", "title": "플러그인 생성하기", "description": "플러그인은 언어 / 툴의 버전 관리를 지원하는 실행 가능한 스크립트들이 있는 Git 리포지토리입니다. 이 스크립트들은 asdf에 의해 특정 명령어들을 받아 `asdf list-all <name>`, `asdf install <name> <version>` 등의 지원을 위해 실행됩니다.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 04:05:08", "type": "code_examples", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "title": "플러그인 생성하기 | asdf", "language": "ko-kr", "generator": "VitePress v1.6.3", "description": "Manage multiple runtime versions with a single CLI tool", "scrapeId": "747eb899-b212-4740-a6d9-e33341c4d657", "sourceURL": "https://asdf-vm.com/ko-kr/plugins/create", "url": "https://asdf-vm.com/ko-kr/plugins/create", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: What are some tips for using 플러그인 생성하기 in asdf-vm effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\n스크립트는 다른 `asdf` 명령어를 호출하면 **안됩니다**.\n\n셸 툴/명령어의 dependency를 최소로 유지하세요.\n\nnon-portable 툴이나 명령어 플래그의 사용을 피하세요. 예를 들어, `sort -V`. asdf core를 참고하세요 [금지된 명령어 목록](https://github.com/asdf-vm/asdf/blob/master/test/banned_commands.bats)\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://asdf-vm.com/ko-kr/plugins/create", "title": "플러그인 생성하기", "description": "플러그인은 언어 / 툴의 버전 관리를 지원하는 실행 가능한 스크립트들이 있는 Git 리포지토리입니다. 이 스크립트들은 asdf에 의해 특정 명령어들을 받아 `asdf list-all <name>`, `asdf install <name> <version>` 등의 지원을 위해 실행됩니다.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 04:05:08", "type": "best_practices", "page_metadata": {"viewport": "width=device-width,initial-scale=1", "title": "플러그인 생성하기 | asdf", "language": "ko-kr", "generator": "VitePress v1.6.3", "description": "Manage multiple runtime versions with a single CLI tool", "scrapeId": "747eb899-b212-4740-a6d9-e33341c4d657", "sourceURL": "https://asdf-vm.com/ko-kr/plugins/create", "url": "https://asdf-vm.com/ko-kr/plugins/create", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you explain what プラグインの作成 is in asdf-vm?\n\nAssistant: Sure, I'd be happy to explain プラグインの作成 in asdf-vm.\n\n# プラグインの作成\n\nプラグインとは、言語/ツールのバージョン管理をサポートするための実行スクリプトを含めたGitリポジトリのことです。これらのスクリプトは、 asdfによって実行されます。Here's a quick rundown of what this is about:\n\n## クイックスタート\n\nオリジナルのプラグインを作成するには、次の2つの方法があります:\n\n1. [asdf-vm/asdf-plugin-template](https://github.com/asdf-vm/asdf-plugin-template) リポジトリを使用し、デフォルトのスクリプトが実装されたプラグインリポジトリ(名前は `asdf-<tool_name>`)を [生成](https://github.com/asdf-vm/asdf-plugin-template/generate) します。生成できたら、そのリポジトリをクローンして `setup.bash` のスクリプトを実行し、テンプレートを対話的に更新していきます。\n2. `asdf-<tool_name>` という名前のリポジトリを自分で立ち上げ、以降に記載されている必要なスクリプトを実装します。\n\n## プラグインスクリプトの鉄則\n\n- スクリプト内で他の `asdf` コマンドを呼び出しては **いけません**。\n- シェルのツール/コマンドへの依存関係を小さく保つようにしてください。\n- 移植性のないツールやコマンドフラグの使用は避けてください。例えば、 `sort -V` などです。 asdfコアの [禁止コマンド一覧](https://github.com/asdf-vm/asdf/blob/master/test/banned_commands.bats) もご覧ください。\n\n## スクリプトの概要\n\n以下は、asdfから呼び出せるスクリプトの全リストです。\n\n| スクリプト | 説明 |\n| --- | --- |\n| [bin/list-all](https://asdf-vm.com/ja-jp/plugins/create.html#bin-list-all) 必須 | インストール可能なすべてのバージョンをリストします。 |\n| [bin/download](https://asdf-vm.com/ja-jp/plugins/create.html#bin-download) 必須 | ツールの特定バージョンのソースコードまたはバイナリをダウンロードします。 |\n| [bin/install](https://asdf-vm.com/ja-jp/plugins/create.html#bin-install) 必須 | ツールの特定バージョンをインストールします。 |\n| [bin/latest-stable](https://asdf-vm.com/ja-jp/plugins/create.html#bin-latest-stable) 推奨 | 指定されたツールの最新安定バージョンをリストします。 |\n| [bin/help.overview](https://asdf-vm.com/ja-jp/plugins/create.html#bin-help.overview) | プラグインおよびツールに関する概要説明を出力します。 |\n| [bin/help.deps](https://asdf-vm.com/ja-jp/plugins/create.html#bin-help.deps) | オペレーティングシステムに合わせた依存関係のリストを出力します。 |\n| [bin/help.config](https://asdf-vm.com/ja-jp/plugins/create.html#bin-help.config) | プラグインおよびツールの構成設定一覧を出力します。 |\n| [bin/help.links](https://asdf-vm.com/ja-jp/plugins/create.html#bin-help.links) | プラグインとツールに関連するリンクリストを出力します。 |\n| [bin/list-bin-paths](https://asdf-vm.com/ja-jp/plugins/create.html#bin-list-bin-paths) | Shimを作成するバイナリが存在するディレクトリへの相対パスの一覧を出力します。 |\n| [bin/exec-env](https://asdf-vm.com/ja-jp/plugins/create.html#bin-exec-env) | ツールのバイナリのShimを実行する前に環境を準備します。 |\n| [bin/exec-path](https://asdf-vm.com/ja-jp/plugins/create.html#bin-exec-path) | ツールの特定バージョンの実行ファイルパスを出力します。 |\n| [bin/uninstall](https://asdf-vm.com/ja-jp/plugins/create.html#bin-uninstall) | ツールの特定バージョンをアンインストールします。 |\n| [bin/list-legacy-filenames](https://asdf-vm.com/ja-jp/plugins/create.html#bin-list-legacy-filenames) | `.ruby-version` のような、レガシー構成ファイルのリストを出力します。 |\n| [bin/parse-legacy-file](https://asdf-vm.com/ja-jp/plugins/create.html#bin-parse-legacy-file) | レガシーバージョンファイルのカスタムパーサーです。 |\n| [bin/post-plugin-add](https://asdf-vm.com/ja-jp/plugins/create.html#bin-post-plugin-add) | プラグインが追加された後に実行されるフックです。 |\n| [bin/post-plugin-update](https://asdf-vm.com/ja-jp/plugins/create.html#bin-post-plugin-update) | プラグインが更新された後に実行されるフックです。 |\n| [bin/pre-plugin-remove](https://asdf-vm.com/ja-jp/plugins/create.html#bin-pre-plugin-remove) | プラグインが削除される前に実行されるフックです。 |\n\n## 環境変数の概要\n\n以下は、すべてのスクリプトで使用される環境変数の全リストです。\n\n| 環境変数 | 説明 |\n| --- | --- |\n| `ASDF_INSTALL_TYPE` | `version` または `ref` です。 |\n| `ASDF_INSTALL_VERSION` | `ASDF_INSTALL_TYPE` に応じてフルバージョンナンバーまたはGit Refの値が入ります。 |\n| `ASDF_INSTALL_PATH` | ツールがインストール _されている_ 場所、またはインストール _されるべき_ 場所へのパスです。 |\n| `ASDF_CONCURRENCY` | ソースコードのコンパイル時に使用するコア数です。 `make -j` のようなフラグを設定する際に便利です。 |\n| `ASDF_DOWNLOAD_PATH` | `bin/download` によってソースコードまたはバイナリがダウンロードされる場所へのパスです。 |\n| `ASDF_PLUGIN_PATH` | プラグインがインストールされている場所へのパスです。 |\n| `ASDF_PLUGIN_SOURCE_URL` | プラグインソースのURLです。 |\n| `ASDF_PLUGIN_PREV_REF` | プラグインの以前の `git-ref` です。 |\n| `ASDF_PLUGIN_POST_REF` | 更新後のプラグインの `git-ref` です。 |\n| `ASDF_CMD_FILE` | ソースとなるファイルのフルパスに解決されます。 |\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://asdf-vm.com/ja-jp/plugins/create.html", "title": "プラグインの作成", "description": "プラグインとは、言語/ツールのバージョン管理をサポートするための実行スクリプトを含めたGitリポジトリのことです。これらのスクリプトは、 asdfによって実行されます。", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 04:05:45", "type": "overview", "page_metadata": {"description": "Manage multiple runtime versions with a single CLI tool", "language": "ja-jp", "title": "プラグインの作成 | asdf", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "scrapeId": "b9f38b0b-a8df-4ebd-b13f-64c711c5eee1", "sourceURL": "https://asdf-vm.com/ja-jp/plugins/create.html", "url": "https://asdf-vm.com/ja-jp/plugins/create.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I クイックスタート in asdf-vm?\n\nAssistant: To クイックスタート in asdf-vm, here's what you do:\nオリジナルのプラグインを作成するには、次の2つの方法があります:\n\n1. [asdf-vm/asdf-plugin-template](https://github.com/asdf-vm/asdf-plugin-template) リポジトリを使用し、デフォルトのスクリプトが実装されたプラグインリポジトリ(名前は `asdf-<tool_name>`)を [生成](https://github.com/asdf-vm/asdf-plugin-template/generate) します。生成できたら、そのリポジトリをクローンして `setup.bash` のスクリプトを実行し、テンプレートを対話的に更新していきます。\n2. `asdf-<tool_name>` という名前のリポジトリを自分で立ち上げ、以降に記載されている必要なスクリプトを実装します。.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ja-jp/plugins/create.html", "title": "プラグインの作成", "description": "プラグインとは、言語/ツールのバージョン管理をサポートするための実行スクリプトを含めたGitリポジトリのことです。これらのスクリプトは、 asdfによって実行されます。", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 04:05:45", "type": "section_detail", "page_metadata": {"description": "Manage multiple runtime versions with a single CLI tool", "language": "ja-jp", "title": "プラグインの作成 | asdf", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "scrapeId": "b9f38b0b-a8df-4ebd-b13f-64c711c5eee1", "sourceURL": "https://asdf-vm.com/ja-jp/plugins/create.html", "url": "https://asdf-vm.com/ja-jp/plugins/create.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I プラグインスクリプトの鉄則 in asdf-vm?\n\nAssistant: To プラグインスクリプトの鉄則 in asdf-vm, here's what you do:\n- スクリプト内で他の `asdf` コマンドを呼び出しては **いけません**。\n- シェルのツール/コマンドへの依存関係を小さく保つようにしてください。\n- 移植性のないツールやコマンドフラグの使用は避けてください。例えば、 `sort -V` などです。 asdfコアの [禁止コマンド一覧](https://github.com/asdf-vm/asdf/blob/master/test/banned_commands.bats) もご覧ください。.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ja-jp/plugins/create.html", "title": "プラグインの作成", "description": "プラグインとは、言語/ツールのバージョン管理をサポートするための実行スクリプトを含めたGitリポジトリのことです。これらのスクリプトは、 asdfによって実行されます。", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 04:05:45", "type": "section_detail", "page_metadata": {"description": "Manage multiple runtime versions with a single CLI tool", "language": "ja-jp", "title": "プラグインの作成 | asdf", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "scrapeId": "b9f38b0b-a8df-4ebd-b13f-64c711c5eee1", "sourceURL": "https://asdf-vm.com/ja-jp/plugins/create.html", "url": "https://asdf-vm.com/ja-jp/plugins/create.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I スクリプトの概要 in asdf-vm?\n\nAssistant: To スクリプトの概要 in asdf-vm, here's what you do:\n以下は、asdfから呼び出せるスクリプトの全リストです。\n\n| スクリプト | 説明 |\n| --- | --- |\n| [bin/list-all](https://asdf-vm.com/ja-jp/plugins/create.html#bin-list-all) 必須 | インストール可能なすべてのバージョンをリストします。 |\n| [bin/download](https://asdf-vm.com/ja-jp/plugins/create.html#bin-download) 必須 | ツールの特定バージョンのソースコードまたはバイナリをダウンロードします。 |\n| [bin/install](https://asdf-vm.com/ja-jp/plugins/create.html#bin-install) 必須 | ツールの特定バージョンをインストールします。 |\n| [bin/latest-stable](https://asdf-vm.com/ja-jp/plugins/create.html#bin-latest-stable) 推奨 | 指定されたツールの最新安定バージョンをリストします。 |\n| [bin/help.overview](https://asdf-vm.com/ja-jp/plugins/create.html#bin-help.overview) | プラグインおよびツールに関する概要説明を出力します。 |\n| [bin/help.deps](https://asdf-vm.com/ja-jp/plugins/create.html#bin-help.deps) | オペレーティングシステムに合わせた依存関係のリストを出力します。 |\n| [bin/help.config](https://asdf-vm.com/ja-jp/plugins/create.html#bin-help.config) | プラグインおよびツールの構成設定一覧を出力します。 |\n| [bin/help.links](https://asdf-vm.com/ja-jp/plugins/create.html#bin-help.links) | プラグインとツールに関連するリンクリストを出力します。 |\n| [bin/list-bin-paths](https://asdf-vm.com/ja-jp/plugins/create.html#bin-list-bin-paths) | Shimを作成するバイナリが存在するディレクトリへの相対パスの一覧を出力します。 |\n| [bin/exec-env](https://asdf-vm.com/ja-jp/plugins/create.html#bin-exec-env) | ツールのバイナリのShimを実行する前に環境を準備します。 |\n| [bin/exec-path](https://asdf-vm.com/ja-jp/plugins/create.html#bin-exec-path) | ツールの特定バージョンの実行ファイルパスを出力します。 |\n| [bin/uninstall](https://asdf-vm.com/ja-jp/plugins/create.html#bin-uninstall) | ツールの特定バージョンをアンインストールします。 |\n| [bin/list-legacy-filenames](https://asdf-vm.com/ja-jp/plugins/create.html#bin-list-legacy-filenames) | `.ruby-version` のような、レガシー構成ファイルのリストを出力します。 |\n| [bin/parse-legacy-file](https://asdf-vm.com/ja-jp/plugins/create.html#bin-parse-legacy-file) | レガシーバージョンファイルのカスタムパーサーです。 |\n| [bin/post-plugin-add](https://asdf-vm.com/ja-jp/plugins/create.html#bin-post-plugin-add) | プラグインが追加された後に実行されるフックです。 |\n| [bin/post-plugin-update](https://asdf-vm.com/ja-jp/plugins/create.html#bin-post-plugin-update) | プラグインが更新された後に実行されるフックです。 |\n| [bin/pre-plugin-remove](https://asdf-vm.com/ja-jp/plugins/create.html#bin-pre-plugin-remove) | プラグインが削除される前に実行されるフックです。 |.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ja-jp/plugins/create.html", "title": "プラグインの作成", "description": "プラグインとは、言語/ツールのバージョン管理をサポートするための実行スクリプトを含めたGitリポジトリのことです。これらのスクリプトは、 asdfによって実行されます。", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 04:05:45", "type": "section_detail", "page_metadata": {"description": "Manage multiple runtime versions with a single CLI tool", "language": "ja-jp", "title": "プラグインの作成 | asdf", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "scrapeId": "b9f38b0b-a8df-4ebd-b13f-64c711c5eee1", "sourceURL": "https://asdf-vm.com/ja-jp/plugins/create.html", "url": "https://asdf-vm.com/ja-jp/plugins/create.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 環境変数の概要 in asdf-vm?\n\nAssistant: To 環境変数の概要 in asdf-vm, here's what you do:\n以下は、すべてのスクリプトで使用される環境変数の全リストです。\n\n| 環境変数 | 説明 |\n| --- | --- |\n| `ASDF_INSTALL_TYPE` | `version` または `ref` です。 |\n| `ASDF_INSTALL_VERSION` | `ASDF_INSTALL_TYPE` に応じてフルバージョンナンバーまたはGit Refの値が入ります。 |\n| `ASDF_INSTALL_PATH` | ツールがインストール _されている_ 場所、またはインストール _されるべき_ 場所へのパスです。 |\n| `ASDF_CONCURRENCY` | ソースコードのコンパイル時に使用するコア数です。 `make -j` のようなフラグを設定する際に便利です。 |\n| `ASDF_DOWNLOAD_PATH` | `bin/download` によってソースコードまたはバイナリがダウンロードされる場所へのパスです。 |\n| `ASDF_PLUGIN_PATH` | プラグインがインストールされている場所へのパスです。 |\n| `ASDF_PLUGIN_SOURCE_URL` | プラグインソースのURLです。 |\n| `ASDF_PLUGIN_PREV_REF` | プラグインの以前の `git-ref` です。 |\n| `ASDF_PLUGIN_POST_REF` | 更新後のプラグインの `git-ref` です。 |\n| `ASDF_CMD_FILE` | ソースとなるファイルのフルパスに解決されます。 |.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/ja-jp/plugins/create.html", "title": "プラグインの作成", "description": "プラグインとは、言語/ツールのバージョン管理をサポートするための実行スクリプトを含めたGitリポジトリのことです。これらのスクリプトは、 asdfによって実行されます。", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 04:05:45", "type": "section_detail", "page_metadata": {"description": "Manage multiple runtime versions with a single CLI tool", "language": "ja-jp", "title": "プラグインの作成 | asdf", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "scrapeId": "b9f38b0b-a8df-4ebd-b13f-64c711c5eee1", "sourceURL": "https://asdf-vm.com/ja-jp/plugins/create.html", "url": "https://asdf-vm.com/ja-jp/plugins/create.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you give me some code examples for プラグインの作成 in asdf-vm?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**`bin/list-all` 必須**:\n\n```yaml\nインストール可能なすべてのバージョンをリストします。\n\n出力フォーマット\n\nスペース区切りのバージョンリストの文字列を出力する必要があります。例えば次のとおりです:\n\n```\n1.0.1 1.0.2 1.3.0 1.4\n```\n\n最新バージョンが末尾にくる必要があります。\n```\n\nThis snippet shows you how to `bin/list-all` 必須, which is an important aspect of プラグインの作成.\n\n**`bin/download` 必須**:\n\n```yaml\nツールの特定バージョンのソースコードまたはバイナリを、指定された場所にダウンロードします。\n\n実装内容\n\n- スクリプトは、 `ASDF_DOWNLOAD_PATH` で指定されたディレクトリに、ソースコードまたはバイナリをダウンロードする必要があります。\n- 解凍されたソースコードまたはバイナリのみを、 `ASDF_DOWNLOAD_PATH` ディレクトリに配置する必要があります。\n- 失敗した場合、 `ASDF_DOWNLOAD_PATH` ディレクトリ内に何もファイルを配置しないようにしてください。\n- 成功した場合、終了コードは `0` としてください。\n- 失敗した場合、終了コードは非ゼロとしてください。\n```\n\nThis snippet shows you how to `bin/download` 必須, which is an important aspect of プラグインの作成.\n\n**`bin/install` 必須**:\n\n```yaml\nツールの特定バージョンを指定された場所にインストールします。\n\n実装内容\n\n- スクリプトは、指定されたバージョンを `ASDF_INSTALL_PATH` のパスのディレクトリにインストールする必要があります。\n- Shimはデフォルトで、 `$ASDF_INSTALL_PATH/bin` 内にあるファイルに対して作成されます。 この動作は、オプションの [bin/list-bin-paths](https://asdf-vm.com/ja-jp/plugins/create.html#binlist-bin-paths) スクリプトでカスタマイズできます。\n- 成功した場合、終了コードは `0` としてください。\n- 失敗した場合、終了コードは非ゼロとしてください。\n```\n\nThis snippet shows you how to `bin/install` 必須, which is an important aspect of プラグインの作成.\n\n", "metadata": {"source_url": "https://asdf-vm.com/ja-jp/plugins/create.html", "title": "プラグインの作成", "description": "プラグインとは、言語/ツールのバージョン管理をサポートするための実行スクリプトを含めたGitリポジトリのことです。これらのスクリプトは、 asdfによって実行されます。", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 04:05:45", "type": "code_examples", "page_metadata": {"description": "Manage multiple runtime versions with a single CLI tool", "language": "ja-jp", "title": "プラグインの作成 | asdf", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "scrapeId": "b9f38b0b-a8df-4ebd-b13f-64c711c5eee1", "sourceURL": "https://asdf-vm.com/ja-jp/plugins/create.html", "url": "https://asdf-vm.com/ja-jp/plugins/create.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: What are some tips for using プラグインの作成 in asdf-vm effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nすべてのスクリプトですべての環境変数が使用できるわけではありません。\n\n各スクリプトの詳細なドキュメントを参照してください。\n\nプラグインのREADMEには、asdf拡張コマンドに関することを必ず記載するようにしてください。\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://asdf-vm.com/ja-jp/plugins/create.html", "title": "プラグインの作成", "description": "プラグインとは、言語/ツールのバージョン管理をサポートするための実行スクリプトを含めたGitリポジトリのことです。これらのスクリプトは、 asdfによって実行されます。", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 04:05:45", "type": "best_practices", "page_metadata": {"description": "Manage multiple runtime versions with a single CLI tool", "language": "ja-jp", "title": "プラグインの作成 | asdf", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "scrapeId": "b9f38b0b-a8df-4ebd-b13f-64c711c5eee1", "sourceURL": "https://asdf-vm.com/ja-jp/plugins/create.html", "url": "https://asdf-vm.com/ja-jp/plugins/create.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you explain what Começando is in asdf-vm?\n\nAssistant: Sure, I'd be happy to explain Começando in asdf-vm.\n\n# Começando\n\nA instalação do `asdf` envolve: 1. Instalar as dependências 2. Instalar o núcleo do `asdf` 3. Adicionar o `asdf` ao seu shell 4. Instalar um plugin para cada ferramenta que você gostaria de gerenciar 5. Instalar uma versão desta ferramenta 6. Definir uma versão global e uma versão local através do arquivo de configuração `.tool-versions`Here's a quick rundown of what this is about:\n\n## 1. Instalando as dependências\n\nasdf primarily requires `git` & `curl`. Here is a _non-exhaustive_ list of commands to run for _your_ package manager (some might automatically install these tools in later steps).\n\n| OS | Package Manager | Command |\n| --- | --- | --- |\n| linux | Aptitude | `apt install curl git` |\n| linux | DNF | `dnf install curl git` |\n| linux | Pacman | `pacman -S curl git` |\n| linux | Zypper | `zypper install curl git` |\n| macOS | Homebrew | `brew install coreutils curl git` |\n| macOS | Spack | `spack install coreutils curl git` |\n\nNote\n\n`sudo` may be required depending on your system configuration.\n\n## 2. Download asdf\n\n### Official Download\n\nshell\n\n```\ngit clone https://github.com/asdf-vm/asdf.git ~/.asdf --branch v0.15.0\n```\n\n### Community Supported Download Methods\n\nWe highly recommend using the official `git` method.\n\n| Method | Command |\n| --- | --- |\n| Homebrew | `brew install asdf` |\n| Pacman | `git clone https://aur.archlinux.org/asdf-vm.git && cd asdf-vm && makepkg -si` or use your preferred [AUR helper](https://wiki.archlinux.org/index.php/AUR_helpers) |\n\n## 3. Adicionando ao seu shell\n\nExistem diversas combinações de shells, sistemas operacionais e métodos de instalação que podem impactar a configuração. Abaixo, expanda a seção que se adeque mais com o seu sistema:\n\nBash & Git\n\nAdicione esta linha ao seu `~/.bashrc`:\n\nshell\n\n```\n. \"$HOME/.asdf/asdf.sh\"\n```\n\nO auto completar deve ser configurado manualmente a partir da adição da seguinte linha ao `.bashrc`:\n\nshell\n\n```\n. \"$HOME/.asdf/completions/asdf.bash\"\n```\n\nBash & Git (macOS)\n\nSe você estiver usando o **macOS Catalina ou mais recente**, o shell padrão mudou para o **ZSH**. A não ser que você tenha voltado para o bash, siga as instruções de instalação para o ZSH.\n\nAdicione esta linha ao seu `~/.bash_profile`:\n\nshell\n\n```\n. \"$HOME/.asdf/asdf.sh\"\n```\n\nO auto completar deve ser configurado manualmente a partir da adição da seguinte linha ao `.bash_profile`:\n\nshell\n\n```\n. \"$HOME/.asdf/completions/asdf.bash\"\n```\n\nBash & Homebrew\n\nAdicione `asdf.sh` ao `~/.bashrc` através do comando:\n\nshell\n\n```\necho -e \"\\n. $(brew --prefix asdf)/asdf.sh\" >> ~/.bashrc\n```\n\nO auto completar deve ser configurado seguindo as [instruções da Homebrew](https://docs.brew.sh/Shell-Completion#configuring-completions-in-bash), ou as seguintes:\n\nshell\n\n```\necho -e \"\\n. \\\"$(brew --prefix asdf)/etc/bash_completion.d/asdf.bash\\\"\" >> ~/.bashrc\n```\n\nBash & Homebrew (macOS)\n\nSe você estiver usando o **macOS Catalina ou mais recente**, o shell padrão mudou para o **ZSH**. A não ser que você tenha voltado para o bash, siga as instruções de instalação para o ZSH.\n\nAdicione `asdf.sh` ao `~/.bash_profile` através do comando:\n\nshell\n\n```\necho -e \"\\n. $(brew --prefix asdf)/asdf.sh\" >> ~/.bash_profile\n```\n\nO auto completar deve ser configurado seguindo as [instruções da Homebrew](https://docs.brew.sh/Shell-Completion#configuring-completions-in-bash), ou as seguintes:\n\nshell\n\n```\necho -e \"\\n. \\\"$(brew --prefix asdf)/etc/bash_completion.d/asdf.bash\\\"\" >> ~/.bash_profile\n```\n\nBash & Pacman\n\nAdicione a seguinte linha ao seu `~/.bashrc`:\n\nshell\n\n```\n. /opt/asdf-vm/asdf.sh\n```\n\nO [pacote `bash-completion`](https://wiki.archlinux.org/title/bash#Common_programs_and_options) precisa ser instalado para o auto completar funcionar.\n\nFish & Git\n\nAdicione a seguinte linha ao seu `~/.config/fish/config.fish`:\n\nshell\n\n```\nsource ~/.asdf/asdf.fish\n```\n\nO auto completar deve ser configurado manualmente através do seguinte comando:\n\nshell\n\n```\nmkdir -p ~/.config/fish/completions; and ln -s ~/.asdf/completions/asdf.fish ~/.config/fish/completions\n```\n\nFish & Homebrew\n\nAdicione `asdf.fish` ao seu `~/.config/fish/config.fish` através do comando:\n\nshell\n\n```\necho -e \"\\nsource \"(brew --prefix asdf)\"/asdf.fish\" >> ~/.config/fish/config.fish\n```\n\nO auto completar é [configurado pela Homebrew para o fish shell](https://docs.brew.sh/Shell-Completion#configuring-completions-in-fish).\n\nFish & Pacman\n\nAdicione a seguinte linha ao seu `~/.config/fish/config.fish`:\n\nshell\n\n```\nsource /opt/asdf-vm/asdf.fish\n```\n\nO auto completar é configurado automaticamente durante a instalação do pacote AUR.\n\nElvish & Git\n\nAdicione `asdf.elv` ao `~/.config/elvish/rc.elv` através do comando:\n\nshell\n\n```\nmkdir -p ~/.config/elvish/lib; ln -s ~/.asdf/asdf.elv ~/.config/elvish/lib/asdf.elv\necho \"\\n'use asdf _asdf; var asdf~ = $_asdf:asdf~' >> ~/.config/elvish/rc.elv\necho \"\\n'set edit:completion:arg-completer[asdf] = $_asdf:arg-completer~' >> ~/.config/elvish/rc.elv\n```\n\nAo concluir atualizará automaticamente\n\nElvish & Homebrew\n\nAdicione `asdf.elv` ao `~/.config/elvish/rc.elv` através do comando:\n\nshell\n\n```\nmkdir -p ~/.config/elvish/lib; ln -s (brew --prefix asdf)/libexec/asdf.elv ~/.config/elvish/lib/asdf.elv\necho \"\\n'use asdf _asdf; var asdf~ = $_asdf:asdf~' >> ~/.config/elvish/rc.elv\necho \"\\n'set edit:completion:arg-completer[asdf] = $_asdf:arg-completer~' >> ~/.config/elvish/rc.elv\n```\n\nAo concluir atualizará automaticamente\n\nElvish & Pacman\n\nAdicione `asdf.elv` ao `~/.config/elvish/rc.elv` através do comando:\n\nshell\n\n```\nmkdir -p ~/.config/elvish/lib; ln -s /opt/asdf-vm/asdf.elv ~/.config/elvish/lib/asdf.elv\necho \"\\n'use asdf _asdf; var asdf~ = $_asdf:asdf~' >> ~/.config/elvish/rc.elv\necho \"\\n'set edit:completion:arg-completer[asdf] = $_asdf:arg-completer~' >> ~/.config/elvish/rc.elv\n```\n\nAo concluir atualizará automaticamente\n\nZSH & Git\n\nAdicione a seguinte linha ao seu `~/.zshrc`:\n\nshell\n\n```\n. \"$HOME/.asdf/asdf.sh\"\n```\n\n**OU** utilize um framework para ZSH, como [asdf para oh-my-zsh](https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/asdf) que irá adicionar o script e o auto completar.\n\nO auto completar pode ser configurado ou pelo plugin do asdf para framework para ZSH, ou através da adição das seguintes linhas ao seu `.zshrc`:\n\nshell\n\n```\n# append completions to fpath\nfpath=(${ASDF_DIR}/completions $fpath)\n# initialise completions with ZSH's compinit\nautoload -Uz compinit && compinit\n```\n\n- Se você está utilizando uma configuração `compinit` customizada, garanta que `compinit` esteja abaixo chamada `asdf.sh`\n- Se você está utilizando uma configuração `compinit` customizada com um framework para ZSH, garanta que `compinit` esteja abaixo da chamada do framework.\n\n**Aviso**\n\nSe você está utilizando um framework para ZSH, o plugin do asdf pode precisar ser atualizado para utilização adequada do novo auto completar do ZSH através do `fpath`. O plugin do asdf para o oh-my-zsh ainda não foi atualizado, veja: [ohmyzsh/ohmyzsh#8837](https://github.com/ohmyzsh/ohmyzsh/pull/8837).\n\nZSH & Homebrew\n\nAdicione `asdf.sh` ao seu `~/.zshrc` através do comando:\n\nshell\n\n```\necho -e \"\\n. $(brew --prefix asdf)/asdf.sh\" >> ${ZDOTDIR:-~}/.zshrc\n```\n\n**OU** utilize um framework para ZSH, como [asdf para oh-my-zsh](https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/asdf) que irá adicionar o script e o auto completar.\n\nO auto completar pode ser configurado ou pelo framework para ZSH, ou de acordo com as [instruções da Homebrew](https://docs.brew.sh/Shell-Completion#configuring-completions-in-zsh). Se você está usando um framework para ZSH, pode ser que seja necessário atualizar o plugin do asdf para que o novo auto completar funcione adequadamente através do `fpath`. O plugin do asdf para o Oh-My-ZSH ainda será atualizado, veja: [ohmyzsh/ohmyzsh#8837](https://github.com/ohmyzsh/ohmyzsh/pull/8837).\n\nZSH & Pacman\n\nAdicione a seguinte linha ao seu `~/.zshrc`:\n\nshell\n\n```\n. /opt/asdf-vm/asdf.sh\n```\n\nPowerShell Core & Git\n\nAdicione a seguinte linha ao seu `~/.config/powershell/profile.ps1`:\n\nshell\n\n```\n. \"$HOME/.asdf/asdf.ps1\"\n```\n\nPowerShell Core & Homebrew\n\nAdicione `asdf.ps1` ao seu `~/.config/powershell/profile.ps1` através do comando:\n\nshell\n\n```\necho -e \"\\n. \\\"$(brew --prefix asdf)/libexec/asdf.ps1\\\"\" >> ~/.config/powershell/profile.ps1\n```\n\nPowerShell Core & Pacman\n\nAdicione a seguinte linha ao seu `~/.config/powershell/profile.ps1`:\n\nshell\n\n```\n. /opt/asdf-vm/asdf.ps1\n```\n\nNushell & Git\n\nAdicione `asdf.nu` ao seu `~/.config/nushell/config.nu` através do comando:\n\nshell\n\n```\n\"\\n$env.ASDF_DIR = ($env.HOME | path join '.asdf')\\n source \" + ($env.HOME | path join '.asdf/asdf.nu') | save --append $nu.config-path\n```\n\nAo concluir atualizará automaticamente\n\nNushell & Homebrew\n\nAdicione `asdf.nu` ao seu `~/.config/nushell/config.nu` através do comando:\n\nshell\n\n```\n\"\\n$env.ASDF_DIR = (brew --prefix asdf | str trim | into string | path join 'libexec')\\n source \" +  (brew --prefix asdf | str trim | into string | path join 'libexec/asdf.nu') | save --append $nu.config-path\n```\n\nAo concluir atualizará automaticamente\n\nNushell & Pacman\n\nAdicione `asdf.nu` ao seu `~/.config/nushell/config.nu` através do comando:\n\nshell\n\n```\n\"\\n$env.ASDF_DIR = '/opt/asdf-vm/'\\n source /opt/asdf-vm/asdf.nu\" | save --append $nu.config-path\n```\n\nAo concluir atualizará automaticamente\n\nPOSIX Shell & Git\n\nAdicione a seguinte linha ao seu `~/.profile`:\n\nshell\n\n```\nexport ASDF_DIR=\"$HOME/.asdf\"\n. \"$HOME/.asdf/asdf.sh\"\n```\n\nPOSIX Shell & Homebrew\n\nAdicione `asdf.sh` ao `~/.profile` através do comando:\n\nshell\n\n```\necho -e \"\\nexport ASDF_DIR=\\\"$(brew --prefix asdf)/libexec/asdf.sh\\\"\" >> ~/.profile\necho -e \"\\n. \\\"$(brew --prefix asdf)/libexec/asdf.sh\\\"\" >> ~/.profile\n```\n\nPOSIX Shell & Pacman\n\nAdicione a seguinte linha ao seu `~/.profile`:\n\nshell\n\n```\nexport ASDF_DIR=\"/opt/asdf-vm\"\n. /opt/asdf-vm/asdf.sh\n```\n\nO auto completar é colocado em um local familiar para o ZSH, [mas o ZSH deve ser configurado para conseguir utilizá-lo](https://wiki.archlinux.org/index.php/zsh#Command_completion). :::\n\nOs scripts do `asdf` precisam ser chamados **depois** de ter configurado a sua variável `$PATH` e **depois** de ter chamado o seu framework para ZSH (oh-my-zsh etc).\n\nReinicie seu shell para que as mudanças na variável `PATH` tenham efeito. Abrir uma nova janela/sessão de terminal o fará.\n\n## 4. Instalando um plugin\n\nPara demonstração, vamos instalar e configurar o [Node.js](https://nodejs.org/) através do plugin [`asdf-nodejs`](https://github.com/asdf-vm/asdf-nodejs/).\n\n### Dependências dos plugins\n\nCada plugin possui algumas dependências, por isso precisamos checar no repositório onde elas estão listadas. Por exemplo, para o `asdf-nodejs` são:\n\n| SO | Instalação de dependencia |\n| --- | --- |\n| Linux (Debian) | `apt-get install dirmngr gpg curl gawk` |\n| macOS | `brew install gpg gawk` |\n\nDevemos instalar instalar as dependências primeiro, pois alguns plugins exigem algumas ações após a instalação.\n\n### Instalando o plugin\n\nshell\n\n```\nasdf plugin add nodejs https://github.com/asdf-vm/asdf-nodejs.git\n```\n\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://asdf-vm.com/pt-br/guide/getting-started.html", "title": "Começando", "description": "A instalação do `asdf` envolve: 1. Instalar as dependências 2. Instalar o núcleo do `asdf` 3. Adicionar o `asdf` ao seu shell 4. Instalar um plugin para cada ferramenta que você gostaria de gerenciar 5. Instalar uma versão desta ferramenta 6. Definir uma versão global e uma versão local através do arquivo de configuração `.tool-versions`", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 04:22:26", "type": "overview", "page_metadata": {"language": "pr-br", "title": "Começando | asdf", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "scrapeId": "7ade7e78-b82f-49f4-8328-5980f3bb4dfa", "sourceURL": "https://asdf-vm.com/pt-br/guide/getting-started.html", "url": "https://asdf-vm.com/pt-br/guide/getting-started.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 1. instalando as dependências in asdf-vm?\n\nAssistant: To 1. instalando as dependências in asdf-vm, here's what you do:\nasdf primarily requires `git` & `curl`. Here is a _non-exhaustive_ list of commands to run for _your_ package manager (some might automatically install these tools in later steps).\n\n| OS | Package Manager | Command |\n| --- | --- | --- |\n| linux | Aptitude | `apt install curl git` |\n| linux | DNF | `dnf install curl git` |\n| linux | Pacman | `pacman -S curl git` |\n| linux | Zypper | `zypper install curl git` |\n| macOS | Homebrew | `brew install coreutils curl git` |\n| macOS | Spack | `spack install coreutils curl git` |\n\nNote\n\n`sudo` may be required depending on your system configuration..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/pt-br/guide/getting-started.html", "title": "Começando", "description": "A instalação do `asdf` envolve: 1. Instalar as dependências 2. Instalar o núcleo do `asdf` 3. Adicionar o `asdf` ao seu shell 4. Instalar um plugin para cada ferramenta que você gostaria de gerenciar 5. Instalar uma versão desta ferramenta 6. Definir uma versão global e uma versão local através do arquivo de configuração `.tool-versions`", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 04:22:26", "type": "section_detail", "page_metadata": {"language": "pr-br", "title": "Começando | asdf", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "scrapeId": "7ade7e78-b82f-49f4-8328-5980f3bb4dfa", "sourceURL": "https://asdf-vm.com/pt-br/guide/getting-started.html", "url": "https://asdf-vm.com/pt-br/guide/getting-started.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 2. download asdf in asdf-vm?\n\nAssistant: To 2. download asdf in asdf-vm, here's what you do:\n### Official Download\n\nshell\n\n```\ngit clone https://github.com/asdf-vm/asdf.git ~/.asdf --branch v0.15.0\n```\n\n### Community Supported Download Methods\n\nWe highly recommend using the official `git` method.\n\n| Method | Command |\n| --- | --- |\n| Homebrew | `brew install asdf` |\n| Pacman | `git clone https://aur.archlinux.org/asdf-vm.git && cd asdf-vm && makepkg -si` or use your preferred [AUR helper](https://wiki.archlinux.org/index.php/AUR_helpers) |.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/pt-br/guide/getting-started.html", "title": "Começando", "description": "A instalação do `asdf` envolve: 1. Instalar as dependências 2. Instalar o núcleo do `asdf` 3. Adicionar o `asdf` ao seu shell 4. Instalar um plugin para cada ferramenta que você gostaria de gerenciar 5. Instalar uma versão desta ferramenta 6. Definir uma versão global e uma versão local através do arquivo de configuração `.tool-versions`", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 04:22:26", "type": "section_detail", "page_metadata": {"language": "pr-br", "title": "Começando | asdf", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "scrapeId": "7ade7e78-b82f-49f4-8328-5980f3bb4dfa", "sourceURL": "https://asdf-vm.com/pt-br/guide/getting-started.html", "url": "https://asdf-vm.com/pt-br/guide/getting-started.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 3. adicionando ao seu shell in asdf-vm?\n\nAssistant: To 3. adicionando ao seu shell in asdf-vm, here's what you do:\nExistem diversas combinações de shells, sistemas operacionais e métodos de instalação que podem impactar a configuração. Abaixo, expanda a seção que se adeque mais com o seu sistema:\n\nBash & Git\n\nAdicione esta linha ao seu `~/.bashrc`:\n\nshell\n\n```\n. \"$HOME/.asdf/asdf.sh\"\n```\n\nO auto completar deve ser configurado manualmente a partir da adição da seguinte linha ao `.bashrc`:\n\nshell\n\n```\n. \"$HOME/.asdf/completions/asdf.bash\"\n```\n\nBash & Git (macOS)\n\nSe você estiver usando o **macOS Catalina ou mais recente**, o shell padrão mudou para o **ZSH**. A não ser que você tenha voltado para o bash, siga as instruções de instalação para o ZSH.\n\nAdicione esta linha ao seu `~/.bash_profile`:\n\nshell\n\n```\n. \"$HOME/.asdf/asdf.sh\"\n```\n\nO auto completar deve ser configurado manualmente a partir da adição da seguinte linha ao `.bash_profile`:\n\nshell\n\n```\n. \"$HOME/.asdf/completions/asdf.bash\"\n```\n\nBash & Homebrew\n\nAdicione `asdf.sh` ao `~/.bashrc` através do comando:\n\nshell\n\n```\necho -e \"\\n. $(brew --prefix asdf)/asdf.sh\" >> ~/.bashrc\n```\n\nO auto completar deve ser configurado seguindo as [instruções da Homebrew](https://docs.brew.sh/Shell-Completion#configuring-completions-in-bash), ou as seguintes:\n\nshell\n\n```\necho -e \"\\n. \\\"$(brew --prefix asdf)/etc/bash_completion.d/asdf.bash\\\"\" >> ~/.bashrc\n```\n\nBash & Homebrew (macOS)\n\nSe você estiver usando o **macOS Catalina ou mais recente**, o shell padrão mudou para o **ZSH**. A não ser que você tenha voltado para o bash, siga as instruções de instalação para o ZSH.\n\nAdicione `asdf.sh` ao `~/.bash_profile` através do comando:\n\nshell\n\n```\necho -e \"\\n. $(brew --prefix asdf)/asdf.sh\" >> ~/.bash_profile\n```\n\nO auto completar deve ser configurado seguindo as [instruções da Homebrew](https://docs.brew.sh/Shell-Completion#configuring-completions-in-bash), ou as seguintes:\n\nshell\n\n```\necho -e \"\\n. \\\"$(brew --prefix asdf)/etc/bash_completion.d/asdf.bash\\\"\" >> ~/.bash_profile\n```\n\nBash & Pacman\n\nAdicione a seguinte linha ao seu `~/.bashrc`:\n\nshell\n\n```\n. /opt/asdf-vm/asdf.sh\n```\n\nO [pacote `bash-completion`](https://wiki.archlinux.org/title/bash#Common_programs_and_options) precisa ser instalado para o auto completar funcionar.\n\nFish & Git\n\nAdicione a seguinte linha ao seu `~/.config/fish/config.fish`:\n\nshell\n\n```\nsource ~/.asdf/asdf.fish\n```\n\nO auto completar deve ser configurado manualmente através do seguinte comando:\n\nshell\n\n```\nmkdir -p ~/.config/fish/completions; and ln -s ~/.asdf/completions/asdf.fish ~/.config/fish/completions\n```\n\nFish & Homebrew\n\nAdicione `asdf.fish` ao seu `~/.config/fish/config.fish` através do comando:\n\nshell\n\n```\necho -e \"\\nsource \"(brew --prefix asdf)\"/asdf.fish\" >> ~/.config/fish/config.fish\n```\n\nO auto completar é [configurado pela Homebrew para o fish shell](https://docs.brew.sh/Shell-Completion#configuring-completions-in-fish).\n\nFish & Pacman\n\nAdicione a seguinte linha ao seu `~/.config/fish/config.fish`:\n\nshell\n\n```\nsource /opt/asdf-vm/asdf.fish\n```\n\nO auto completar é configurado automaticamente durante a instalação do pacote AUR.\n\nElvish & Git\n\nAdicione `asdf.elv` ao `~/.config/elvish/rc.elv` através do comando:\n\nshell\n\n```\nmkdir -p ~/.config/elvish/lib; ln -s ~/.asdf/asdf.elv ~/.config/elvish/lib/asdf.elv\necho \"\\n'use asdf _asdf; var asdf~ = $_asdf:asdf~' >> ~/.config/elvish/rc.elv\necho \"\\n'set edit:completion:arg-completer[asdf] = $_asdf:arg-completer~' >> ~/.config/elvish/rc.elv\n```\n\nAo concluir atualizará automaticamente\n\nElvish & Homebrew\n\nAdicione `asdf.elv` ao `~/.config/elvish/rc.elv` através do comando:\n\nshell\n\n```\nmkdir -p ~/.config/elvish/lib; ln -s (brew --prefix asdf)/libexec/asdf.elv ~/.config/elvish/lib/asdf.elv\necho \"\\n'use asdf _asdf; var asdf~ = $_asdf:asdf~' >> ~/.config/elvish/rc.elv\necho \"\\n'set edit:completion:arg-completer[asdf] = $_asdf:arg-completer~' >> ~/.config/elvish/rc.elv\n```\n\nAo concluir atualizará automaticamente\n\nElvish & Pacman\n\nAdicione `asdf.elv` ao `~/.config/elvish/rc.elv` através do comando:\n\nshell\n\n```\nmkdir -p ~/.config/elvish/lib; ln -s /opt/asdf-vm/asdf.elv ~/.config/elvish/lib/asdf.elv\necho \"\\n'use asdf _asdf; var asdf~ = $_asdf:asdf~' >> ~/.config/elvish/rc.elv\necho \"\\n'set edit:completion:arg-completer[asdf] = $_asdf:arg-completer~' >> ~/.config/elvish/rc.elv\n```\n\nAo concluir atualizará automaticamente\n\nZSH & Git\n\nAdicione a seguinte linha ao seu `~/.zshrc`:\n\nshell\n\n```\n. \"$HOME/.asdf/asdf.sh\"\n```\n\n**OU** utilize um framework para ZSH, como [asdf para oh-my-zsh](https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/asdf) que irá adicionar o script e o auto completar.\n\nO auto completar pode ser configurado ou pelo plugin do asdf para framework para ZSH, ou através da adição das seguintes linhas ao seu `.zshrc`:\n\nshell\n\n```\n# append completions to fpath\nfpath=(${ASDF_DIR}/completions $fpath)\n# initialise completions with ZSH's compinit\nautoload -Uz compinit && compinit\n```\n\n- Se você está utilizando uma configuração `compinit` customizada, garanta que `compinit` esteja abaixo chamada `asdf.sh`\n- Se você está utilizando uma configuração `compinit` customizada com um framework para ZSH, garanta que `compinit` esteja abaixo da chamada do framework.\n\n**Aviso**\n\nSe você está utilizando um framework para ZSH, o plugin do asdf pode precisar ser atualizado para utilização adequada do novo auto completar do ZSH através do `fpath`. O plugin do asdf para o oh-my-zsh ainda não foi atualizado, veja: [ohmyzsh/ohmyzsh#8837](https://github.com/ohmyzsh/ohmyzsh/pull/8837).\n\nZSH & Homebrew\n\nAdicione `asdf.sh` ao seu `~/.zshrc` através do comando:\n\nshell\n\n```\necho -e \"\\n. $(brew --prefix asdf)/asdf.sh\" >> ${ZDOTDIR:-~}/.zshrc\n```\n\n**OU** utilize um framework para ZSH, como [asdf para oh-my-zsh](https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/asdf) que irá adicionar o script e o auto completar.\n\nO auto completar pode ser configurado ou pelo framework para ZSH, ou de acordo com as [instruções da Homebrew](https://docs.brew.sh/Shell-Completion#configuring-completions-in-zsh). Se você está usando um framework para ZSH, pode ser que seja necessário atualizar o plugin do asdf para que o novo auto completar funcione adequadamente através do `fpath`. O plugin do asdf para o Oh-My-ZSH ainda será atualizado, veja: [ohmyzsh/ohmyzsh#8837](https://github.com/ohmyzsh/ohmyzsh/pull/8837).\n\nZSH & Pacman\n\nAdicione a seguinte linha ao seu `~/.zshrc`:\n\nshell\n\n```\n. /opt/asdf-vm/asdf.sh\n```\n\nPowerShell Core & Git\n\nAdicione a seguinte linha ao seu `~/.config/powershell/profile.ps1`:\n\nshell\n\n```\n. \"$HOME/.asdf/asdf.ps1\"\n```\n\nPowerShell Core & Homebrew\n\nAdicione `asdf.ps1` ao seu `~/.config/powershell/profile.ps1` através do comando:\n\nshell\n\n```\necho -e \"\\n. \\\"$(brew --prefix asdf)/libexec/asdf.ps1\\\"\" >> ~/.config/powershell/profile.ps1\n```\n\nPowerShell Core & Pacman\n\nAdicione a seguinte linha ao seu `~/.config/powershell/profile.ps1`:\n\nshell\n\n```\n. /opt/asdf-vm/asdf.ps1\n```\n\nNushell & Git\n\nAdicione `asdf.nu` ao seu `~/.config/nushell/config.nu` através do comando:\n\nshell\n\n```\n\"\\n$env.ASDF_DIR = ($env.HOME | path join '.asdf')\\n source \" + ($env.HOME | path join '.asdf/asdf.nu') | save --append $nu.config-path\n```\n\nAo concluir atualizará automaticamente\n\nNushell & Homebrew\n\nAdicione `asdf.nu` ao seu `~/.config/nushell/config.nu` através do comando:\n\nshell\n\n```\n\"\\n$env.ASDF_DIR = (brew --prefix asdf | str trim | into string | path join 'libexec')\\n source \" +  (brew --prefix asdf | str trim | into string | path join 'libexec/asdf.nu') | save --append $nu.config-path\n```\n\nAo concluir atualizará automaticamente\n\nNushell & Pacman\n\nAdicione `asdf.nu` ao seu `~/.config/nushell/config.nu` através do comando:\n\nshell\n\n```\n\"\\n$env.ASDF_DIR = '/opt/asdf-vm/'\\n source /opt/asdf-vm/asdf.nu\" | save --append $nu.config-path\n```\n\nAo concluir atualizará automaticamente\n\nPOSIX Shell & Git\n\nAdicione a seguinte linha ao seu `~/.profile`:\n\nshell\n\n```\nexport ASDF_DIR=\"$HOME/.asdf\"\n. \"$HOME/.asdf/asdf.sh\"\n```\n\nPOSIX Shell & Homebrew\n\nAdicione `asdf.sh` ao `~/.profile` através do comando:\n\nshell\n\n```\necho -e \"\\nexport ASDF_DIR=\\\"$(brew --prefix asdf)/libexec/asdf.sh\\\"\" >> ~/.profile\necho -e \"\\n. \\\"$(brew --prefix asdf)/libexec/asdf.sh\\\"\" >> ~/.profile\n```\n\nPOSIX Shell & Pacman\n\nAdicione a seguinte linha ao seu `~/.profile`:\n\nshell\n\n```\nexport ASDF_DIR=\"/opt/asdf-vm\"\n. /opt/asdf-vm/asdf.sh\n```\n\nO auto completar é colocado em um local familiar para o ZSH, [mas o ZSH deve ser configurado para conseguir utilizá-lo](https://wiki.archlinux.org/index.php/zsh#Command_completion). :::\n\nOs scripts do `asdf` precisam ser chamados **depois** de ter configurado a sua variável `$PATH` e **depois** de ter chamado o seu framework para ZSH (oh-my-zsh etc).\n\nReinicie seu shell para que as mudanças na variável `PATH` tenham efeito. Abrir uma nova janela/sessão de terminal o fará..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/pt-br/guide/getting-started.html", "title": "Começando", "description": "A instalação do `asdf` envolve: 1. Instalar as dependências 2. Instalar o núcleo do `asdf` 3. Adicionar o `asdf` ao seu shell 4. Instalar um plugin para cada ferramenta que você gostaria de gerenciar 5. Instalar uma versão desta ferramenta 6. Definir uma versão global e uma versão local através do arquivo de configuração `.tool-versions`", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 04:22:26", "type": "section_detail", "page_metadata": {"language": "pr-br", "title": "Começando | asdf", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "scrapeId": "7ade7e78-b82f-49f4-8328-5980f3bb4dfa", "sourceURL": "https://asdf-vm.com/pt-br/guide/getting-started.html", "url": "https://asdf-vm.com/pt-br/guide/getting-started.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 4. instalando um plugin in asdf-vm?\n\nAssistant: To 4. instalando um plugin in asdf-vm, here's what you do:\nPara demonstração, vamos instalar e configurar o [Node.js](https://nodejs.org/) através do plugin [`asdf-nodejs`](https://github.com/asdf-vm/asdf-nodejs/).\n\n### Dependências dos plugins\n\nCada plugin possui algumas dependências, por isso precisamos checar no repositório onde elas estão listadas. Por exemplo, para o `asdf-nodejs` são:\n\n| SO | Instalação de dependencia |\n| --- | --- |\n| Linux (Debian) | `apt-get install dirmngr gpg curl gawk` |\n| macOS | `brew install gpg gawk` |\n\nDevemos instalar instalar as dependências primeiro, pois alguns plugins exigem algumas ações após a instalação.\n\n### Instalando o plugin\n\nshell\n\n```\nasdf plugin add nodejs https://github.com/asdf-vm/asdf-nodejs.git\n```\n.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/pt-br/guide/getting-started.html", "title": "Começando", "description": "A instalação do `asdf` envolve: 1. Instalar as dependências 2. Instalar o núcleo do `asdf` 3. Adicionar o `asdf` ao seu shell 4. Instalar um plugin para cada ferramenta que você gostaria de gerenciar 5. Instalar uma versão desta ferramenta 6. Definir uma versão global e uma versão local através do arquivo de configuração `.tool-versions`", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 04:22:26", "type": "section_detail", "page_metadata": {"language": "pr-br", "title": "Começando | asdf", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "scrapeId": "7ade7e78-b82f-49f4-8328-5980f3bb4dfa", "sourceURL": "https://asdf-vm.com/pt-br/guide/getting-started.html", "url": "https://asdf-vm.com/pt-br/guide/getting-started.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you give me some code examples for Começando in asdf-vm?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Official Download**:\n\n```yaml\ngit clone https://github.com/asdf-vm/asdf.git ~/.asdf --branch v0.15.0\n```\n\nThis snippet shows you how to official download, which is an important aspect of começando.\n\n**Bash & Git - Add to .bashrc**:\n\n```yaml\n. \"$HOME/.asdf/asdf.sh\"\n```\n\nThis snippet shows you how to bash & git - add to .bashrc, which is an important aspect of começando.\n\n**Bash & Git - Auto-completion**:\n\n```yaml\n. \"$HOME/.asdf/completions/asdf.bash\"\n```\n\nThis snippet shows you how to bash & git - auto-completion, which is an important aspect of começando.\n\n**Install Node.js Plugin**:\n\n```yaml\nasdf plugin add nodejs https://github.com/asdf-vm/asdf-nodejs.git\n```\n\nThis snippet shows you how to install node.js plugin, which is an important aspect of começando.\n\n**Install Latest Node.js Version**:\n\n```yaml\nasdf install nodejs latest\n```\n\nThis snippet shows you how to install latest node.js version, which is an important aspect of começando.\n\n**Set Global Node.js Version**:\n\n```yaml\nasdf global nodejs latest\n```\n\nThis snippet shows you how to set global node.js version, which is an important aspect of começando.\n\n**Set Local Node.js Version**:\n\n```yaml\nasdf local nodejs latest\n```\n\nThis snippet shows you how to set local node.js version, which is an important aspect of começando.\n\n**Export ASDF_DIR in POSIX Shell**:\n\n```yaml\nexport ASDF_DIR=\"$HOME/.asdf\"\n. \"$HOME/.asdf/asdf.sh\"\n```\n\nThis snippet shows you how to export asdf_dir in posix shell, which is an important aspect of começando.\n\n", "metadata": {"source_url": "https://asdf-vm.com/pt-br/guide/getting-started.html", "title": "Começando", "description": "A instalação do `asdf` envolve: 1. Instalar as dependências 2. Instalar o núcleo do `asdf` 3. Adicionar o `asdf` ao seu shell 4. Instalar um plugin para cada ferramenta que você gostaria de gerenciar 5. Instalar uma versão desta ferramenta 6. Definir uma versão global e uma versão local através do arquivo de configuração `.tool-versions`", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 04:22:26", "type": "code_examples", "page_metadata": {"language": "pr-br", "title": "Começando | asdf", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "scrapeId": "7ade7e78-b82f-49f4-8328-5980f3bb4dfa", "sourceURL": "https://asdf-vm.com/pt-br/guide/getting-started.html", "url": "https://asdf-vm.com/pt-br/guide/getting-started.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: What are some tips for using Começando in asdf-vm effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\n`sudo` may be required depending on your system configuration.\n\nIf you are using a custom `compinit` configuration, ensure that `compinit` is below the call to `asdf.sh`.\n\nIf you are using a custom `compinit` configuration with a ZSH framework, ensure that `compinit` is below the call to the framework.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://asdf-vm.com/pt-br/guide/getting-started.html", "title": "Começando", "description": "A instalação do `asdf` envolve: 1. Instalar as dependências 2. Instalar o núcleo do `asdf` 3. Adicionar o `asdf` ao seu shell 4. Instalar um plugin para cada ferramenta que você gostaria de gerenciar 5. Instalar uma versão desta ferramenta 6. Definir uma versão global e uma versão local através do arquivo de configuração `.tool-versions`", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 04:22:26", "type": "best_practices", "page_metadata": {"language": "pr-br", "title": "Começando | asdf", "viewport": "width=device-width,initial-scale=1", "description": "Manage multiple runtime versions with a single CLI tool", "generator": "VitePress v1.6.3", "scrapeId": "7ade7e78-b82f-49f4-8328-5980f3bb4dfa", "sourceURL": "https://asdf-vm.com/pt-br/guide/getting-started.html", "url": "https://asdf-vm.com/pt-br/guide/getting-started.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you explain what 快速入门 is in asdf-vm?\n\nAssistant: Sure, I'd be happy to explain 快速入门 in asdf-vm.\n\n# 快速入门\n\n`asdf` 安装过程包括：1. 安装依赖 2. 下载 `asdf` 核心 3. 安装 `asdf` 4. 为每一个你想要管理的工具/运行环境安装插件 5. 安装工具/运行环境的一个版本 6. 通过 `.tool-versions` 配置文件设置全局和项目版本Here's a quick rundown of what this is about:\n\n## 1. 安装依赖\n\nasdf primarily requires `git` & `curl`. Here is a _non-exhaustive_ list of commands to run for _your_ package manager (some might automatically install these tools in later steps).\n\n| OS | Package Manager | Command |\n| --- | --- | --- |\n| linux | Aptitude | `apt install curl git` |\n| linux | DNF | `dnf install curl git` |\n| linux | Pacman | `pacman -S curl git` |\n| linux | Zypper | `zypper install curl git` |\n| macOS | Homebrew | `brew install coreutils curl git` |\n| macOS | Spack | `spack install coreutils curl git` |\n\nNote\n\n`sudo` may be required depending on your system configuration.\n\n## 2. 下载 asdf\n\n### Official Download\n\nshell\n\n```\ngit clone https://github.com/asdf-vm/asdf.git ~/.asdf --branch v0.15.0\n```\n\n### Community Supported Download Methods\n\nWe highly recommend using the official `git` method.\n\n| Method | Command |\n| --- | --- |\n| Homebrew | `brew install asdf` |\n| Pacman | `git clone https://aur.archlinux.org/asdf-vm.git && cd asdf-vm && makepkg -si` or use your preferred [AUR helper](https://wiki.archlinux.org/index.php/AUR_helpers) |\n\n## 3. 安装 asdf\n\n根据 Shell 脚本、操作系统和安装方法的组合不同，相应的配置也会不同。展开以下与你的系统最匹配的选项：\n\nBash & Git\n\n在 `~/.bashrc` 文件中加入以下内容：\n\nshell\n\n```\n. \"$HOME/.asdf/asdf.sh\"\n```\n\n补全功能必须在 `.bashrc` 文件中加入以下内容来配置完成：\n\nshell\n\n```\n. \"$HOME/.asdf/completions/asdf.bash\"\n```\n\nBash & Git (macOS)\n\n如果你正在使用 **macOS Catalina 或者更新的版本**, 默认的 shell 已经被修改为 **ZSH**。除非修改回 Bash, 否则请遵循 ZSH 的说明。\n\n在 `~/.bash_profile` 文件中加入以下内容：\n\nshell\n\n```\n. \"$HOME/.asdf/asdf.sh\"\n```\n\n补全功能必须在 `.bash_profile` 文件中使用以下内容手动配置完成：\n\nshell\n\n```\n. \"$HOME/.asdf/completions/asdf.bash\"\n```\n\nBash & Homebrew\n\n使用以下命令将 `asdf.sh` 加入到 `~/.bashrc` 文件中：\n\nshell\n\n```\necho -e \"\\n. \\\"$(brew --prefix asdf)/libexec/asdf.sh\\\"\" >> ~/.bashrc\n```\n\n补全功能将需要 [按照 Homebrew 的说明完成配置](https://docs.brew.sh/Shell-Completion#configuring-completions-in-bash) 或者执行以下命令：\n\nshell\n\n```\necho -e \"\\n. \\\"$(brew --prefix asdf)/etc/bash_completion.d/asdf.bash\\\"\" >> ~/.bashrc\n```\n\nBash & Homebrew (macOS)\n\n如果你正在使用 **macOS Catalina 或者更新的版本**, 默认的 shell 已经被修改为 **ZSH**。除非修改回 Bash, 否则请遵循 ZSH 的说明。\n\n使用以下命令将 `asdf.sh` 加入到 `~/.bash_profile` 文件中：\n\nshell\n\n```\necho -e \"\\n. \\\"$(brew --prefix asdf)/libexec/asdf.sh\\\"\" >> ~/.bash_profile\n```\n\n补全功能将需要 [按照 Homebrew 的说明完成配置](https://docs.brew.sh/Shell-Completion#configuring-completions-in-bash) 或者执行以下命令：\n\nshell\n\n```\necho -e \"\\n. \\\"$(brew --prefix asdf)/etc/bash_completion.d/asdf.bash\\\"\" >> ~/.bash_profile\n```\n\nBash & Pacman\n\n在 `~/.bashrc` 文件中加入以下内容：\n\nshell\n\n```\n. /opt/asdf-vm/asdf.sh\n```\n\n为了让补全功能正常工作需要安装 [`bash-completion`](https://wiki.archlinux.org/title/bash#Common_programs_and_options) 。\n\nFish & Git\n\n在 `~/.config/fish/config.fish` 文件中加入以下内容：\n\nshell\n\n```\nsource ~/.asdf/asdf.fish\n```\n\n补全功能必须按照以下命令手动配置完成：\n\nshell\n\n```\nmkdir -p ~/.config/fish/completions; and ln -s ~/.asdf/completions/asdf.fish ~/.config/fish/completions\n```\n\nFish & Homebrew\n\n使用以下命令将 `asdf.fish` 加入到 `~/.config/fish/config.fish` 文件中：\n\nshell\n\n```\necho -e \"\\nsource \\\"(brew --prefix asdf)\\\"/libexec/asdf.fish\" >> ~/.config/fish/config.fish\n```\n\nFish shell 的补全功能可以交给 [Homebrew 处理](https://docs.brew.sh/Shell-Completion#configuring-completions-in-fish). 很友好！\n\nFish & Pacman\n\n在 `~/.config/fish/config.fish` 文件中加入以下内容：\n\nshell\n\n```\nsource /opt/asdf-vm/asdf.fish\n```\n\n补全功能将会在安装过程中由 AUR 包管理器自动配置完成。\n\nElvish & Git\n\n使用以下命令将 `asdf.elv` 加入到 `~/.config/elvish/rc.elv` 文件中：\n\nshell\n\n```\nmkdir -p ~/.config/elvish/lib; ln -s ~/.asdf/asdf.elv ~/.config/elvish/lib/asdf.elv\necho \"\\n'use asdf _asdf; var asdf~ = $_asdf:asdf~'\" >> ~/.config/elvish/rc.elv\necho \"\\n'set edit:completion:arg-completer[asdf] = $_asdf:arg-completer~'\" >> ~/.config/elvish/rc.elv\n```\n\n补全功能将会自动配置。\n\nElvish & Homebrew\n\n使用以下命令将 `asdf.elv` 加入到 `~/.config/elvish/rc.elv` 文件中：\n\nshell\n\n```\nmkdir -p ~/.config/elvish/lib; ln -s (brew --prefix asdf)/libexec/asdf.elv ~/.config/elvish/lib/asdf.elv\necho \"\\n'use asdf _asdf; var asdf~ = $_asdf:asdf~'\" >> ~/.config/elvish/rc.elv\necho \"\\n'set edit:completion:arg-completer[asdf] = $_asdf:arg-completer~'\" >> ~/.config/elvish/rc.elv\n```\n\n补全功能将会自动配置。\n\nElvish & Pacman\n\n使用以下命令将 `asdf.elv` 加入到 `~/.config/elvish/rc.elv` 文件中：\n\nshell\n\n```\nmkdir -p ~/.config/elvish/lib; ln -s /opt/asdf-vm/asdf.elv ~/.config/elvish/lib/asdf.elv\necho \"\\n'use asdf _asdf; var asdf~ = $_asdf:asdf~'\" >> ~/.config/elvish/rc.elv\necho \"\\n'set edit:completion:arg-completer[asdf] = $_asdf:arg-completer~'\" >> ~/.config/elvish/rc.elv\n```\n\n补全功能将会自动配置。\n\nZSH & Git\n\n在 `~/.zshrc` 文件中加入以下内容：\n\nshell\n\n```\n. \"$HOME/.asdf/asdf.sh\"\n```\n\n**或者** 使用 ZSH 框架插件，比如 [asdf for oh-my-zsh](https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/asdf) 将会使脚本生效并安装补全功能。\n\n补全功能会被 ZSH 框架 `asdf` 插件或者通过在 `.zshrc` 文件中加入以下内容自动配置：\n\nshell\n\n```\n# append completions to fpath\nfpath=(${ASDF_DIR}/completions $fpath)\n# initialise completions with ZSH's compinit\nautoload -Uz compinit && compinit\n```\n\n- 如果你正在使用自定义的 `compinit` 配置，请确保 `compinit` 在 `asdf.sh` 生效位置的下方\n- 如果你正在使用自定义的 `compinit` 配置和 ZSH 框架，请确保 `compinit` 在框架生效位置的下方\n\n**警告**\n\n如果你正在使用 ZSH 框架，有关的 `asdf` 插件或许需要更新才能通过 `fpath` 正确地使用最新的 ZSH 补全功能。Oh-My-ZSH asdf 插件还在更新中，请查看 [ohmyzsh/ohmyzsh#8837](https://github.com/ohmyzsh/ohmyzsh/pull/8837) 了解更多。\n\nZSH & Homebrew\n\n使用以下命令将 `asdf.sh` 加入到 `~/.zshrc` 文件中：\n\nshell\n\n```\necho -e \"\\n. $(brew --prefix asdf)/libexec/asdf.sh\" >> ${ZDOTDIR:-~}/.zshrc\n```\n\n**或者** 使用 ZSH 框架插件，比如 [asdf for oh-my-zsh](https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/asdf) 将会使脚本生效并安装补全功能。\n\n补全功能可以被 ZSH 框架 `asdf` 或者 [按照 Homebrew 的指引](https://docs.brew.sh/Shell-Completion#configuring-completions-in-zsh) 完成配置。如果你正在使用 ZSH 框架，有关的 `asdf` 插件或许需要更新才能通过 `fpath` 正确地使用最新的 ZSH 补全功能。Oh-My-ZSH asdf 插件还在更新中，请查看 [ohmyzsh/ohmyzsh#8837](https://github.com/ohmyzsh/ohmyzsh/pull/8837) 了解更多。\n\nZSH & Pacman\n\n在 `~/.zshrc` 文件中加入以下内容：\n\nshell\n\n```\n. /opt/asdf-vm/asdf.sh\n```\n\n补全功能会被放在一个对 ZSH 很友好的位置，但是 [ZSH 必须使用自动补全完成配置](https://wiki.archlinux.org/index.php/zsh#Command_completion)。\n\nPowerShell Core & Git\n\n在 `~/.config/powershell/profile.ps1` 文件中加入以下内容：\n\nshell\n\n```\n. \"$HOME/.asdf/asdf.ps1\"\n```\n\nPowerShell Core & Homebrew\n\n使用以下命令将 `asdf.ps1` 加入到 `~/.config/powershell/profile.ps1` 文件中：\n\nshell\n\n```\necho -e \"\\n. \\\"$(brew --prefix asdf)/libexec/asdf.ps1\\\"\" >> ~/.config/powershell/profile.ps1\n```\n\nPowerShell Core & Pacman\n\n在 `~/.config/powershell/profile.ps1` 文件中加入以下内容：\n\nshell\n\n```\n. /opt/asdf-vm/asdf.ps1\n```\n\nNushell & Git\n\n使用以下命令将 `asdf.nu` 加入到 `~/.config/nushell/config.nu` 文件中：\n\nshell\n\n```\n\"\\n$env.ASDF_DIR = ($env.HOME | path join '.asdf')\\n source \" + ($env.HOME | path join '.asdf/asdf.nu') | save --append $nu.config-path\n```\n\n补全功能将会自动配置。\n\nNushell & Homebrew\n\n使用以下命令将 `asdf.nu` 加入到 `~/.config/nushell/config.nu` 文件中:\n\nshell\n\n```\n\"\\n$env.ASDF_DIR = (brew --prefix asdf | str trim | into string | path join 'libexec')\\n source \" +  (brew --prefix asdf | str trim | into string | path join 'libexec/asdf.nu') | save --append $nu.config-path\n```\n\n补全功能将会自动配置。\n\nNushell & Pacman\n\n使用以下命令将 `asdf.nu` 加入到 `~/.config/nushell/config.nu` 文件中:\n\nshell\n\n```\n\"\\n$env.ASDF_DIR = '/opt/asdf-vm/'\\n source /opt/asdf-vm/asdf.nu\" | save --append $nu.config-path\n```\n\n补全功能将会自动配置。\n\nPOSIX Shell & Git\n\n在 `~/.profile` 文件中加入以下内容：\n\nshell\n\n```\nexport ASDF_DIR=\"$HOME/.asdf\"\n. \"$HOME/.asdf/asdf.sh\"\n```\n\nPOSIX Shell & Homebrew\n\n使用以下命令将 `asdf.sh` 加入到 `~/.profile` 文件中：\n\nshell\n\n```\necho -e \"\\nexport ASDF_DIR=\\\"$(brew --prefix asdf)/libexec/asdf.sh\\\"\" >> ~/.profile\necho -e \"\\n. \\\"$(brew --prefix asdf)/libexec/asdf.sh\\\"\" >> ~/.profile\n```\n\nPOSIX Shell & Pacman\n\n在 `~/.profile` 文件中加入以下内容：\n\nshell\n\n```\nexport ASDF_DIR=\"/opt/asdf-vm\"\n. /opt/asdf-vm/asdf.sh\n```\n\n`asdf` 脚本需要在设置好的 `$PATH` **之后** 和已经生效的框架（比如 oh-my-zsh 等等） **之后** 的位置生效。\n\n通常打开一个新的终端标签页来重启你的 shell 让 `PATH` 更改即时生效。\n\n## 核心安装完成！\n\n这样就完成了 `asdf` 核心的安装 🎉\n\n`asdf` 仅在你安装 **插件**、 **工具** 和管理它们的 **版本** 时才开始真正发挥作用。请继续阅读下面的指南来了解这些是如何做到的。\n\n## 4. 安装插件\n\n出于演示目的，我们将通过 [`asdf-nodejs`](https://github.com/asdf-vm/asdf-nodejs/) 插件来安装和设置 [Node.js](https://nodejs.org/)。\n\n### 插件依赖\n\n每个插件都有依赖，所以我们需要确认应该列举了这些依赖的插件源码。对于 `asdf-nodejs` 来说，它们是：\n\n| 操作系统 | 安装依赖 |\n| --- | --- |\n| Linux (Debian) | `apt-get install dirmngr gpg curl gawk` |\n| macOS | `brew install gpg gawk` |\n\n我们应该提前安装这些依赖，因为有些插件有 post-install 钩子。\n\n## 安装插件\n\nshell\n\n```\nasdf plugin add nodejs https://github.com/asdf-vm/asdf-nodejs.git\n```\n\n## 5. 安装指定版本\n\n现在我们已经有了 Node.js 插件，所以我们可以开始安装某个版本了。\n\n我们通过 `asdf list all nodejs` 可以看到所有可用的版本或者通过 `asdf list all nodejs 14` 查看版本子集。\n\n我们将只安装最新可用的 `latest` 版本：\n\nshell\n\n```\nasdf install nodejs latest\n```\n\n## 注意\n\n`asdf` 强制使用准确的版本。 `latest` 是一个通过 `asdf` 来解析到执行时刻的实际版本号的辅助工具。\n\n## 6. 设置默认版本\n\n`asdf` 在从当前工作目录一直到 `$HOME` 目录的所有 `.tool-versions` 文件中进行工具的版本查找。查找在执行 `asdf` 管理的工具时实时发生。\n\n警告\n\n如果没有为工具找到指定的版本，则会出现 **错误**。 `asdf current` 将显示当前目录中的工具和版本解析结果，或者不存在，以便你可以观察哪些工具将无法执行。\n\n## 全局\n\n全局默认配置在 `$HOME/.tool-versions` 文件中进行管理。使用以下命令可以设置一个全局版本：\n\nshell\n\n```\nasdf global nodejs latest\n```\n\n`$HOME/.tool-versions` 文件内容将会如下所示：\n\n```\nnodejs 16.5.0\n```\n\n## 本地\n\n本地版本被定义在 `$PWD/.tool-versions` 文件中（当前工作目录）。通常，这将会是一个项目的 Git 存储库。当在你想要的目录执行：\n\nshell\n\n```\nasdf local nodejs latest\n```\n\n`$PWD/.tool-versions` 文件内容将会如下所示：\n\n```\nnodejs 16.5.0\n```\n\n## 使用现有工具版本文件\n\n`asdf` 支持从其他版本管理器的现有版本文件中迁移过来，比如 `rbenv` 的 `.ruby-version` 文件。这在每个插件中都原生支持。\n\n[`asdf-nodejs`](https://github.com/asdf-vm/asdf-nodejs/) 支持从 `.nvmrc` 和 `.node-version` 文件进行迁移。为了启用此功能，请在 `asdf` 配置文件 `$HOME/.asdfrc` 中加入以下内容：\n\n```\nlegacy_version_file = yes\n```\n\n请查看 [配置](https://asdf-vm.com/zh-hans/manage/configuration.html) 参考页面可以了解更多配置选项。\n\n## 完成指南！\n\n恭喜你完成了 `asdf` 的快速上手 🎉 你现在可以管理你的项目的 `nodejs` 版本了。对于项目中的其他工具类型可以执行类似步骤即可！\n\n`asdf` 还有更多命令需要熟悉，你可以通过运行 `asdf --help` 或者 `asdf` 来查看它们。命令主要分为三类：\n\n- [`asdf` 核心](https://asdf-vm.com/zh-hans/manage/core.html)\n- [插件](https://asdf-vm.com/zh-hans/manage/plugins.html)\n- [（工具的）版本](https://asdf-vm.com/zh-hans/manage/versions.html)\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://asdf-vm.com/zh-hans/guide/getting-started.html", "title": "快速入门", "description": "`asdf` 安装过程包括：1. 安装依赖 2. 下载 `asdf` 核心 3. 安装 `asdf` 4. 为每一个你想要管理的工具/运行环境安装插件 5. 安装工具/运行环境的一个版本 6. 通过 `.tool-versions` 配置文件设置全局和项目版本", "has_code_examples": true, "has_best_practices": true, "section_count": 13, "timestamp": "2025-03-01 05:15:06", "type": "overview", "page_metadata": {"description": "Manage multiple runtime versions with a single CLI tool", "title": "快速入门 | asdf", "language": "zh-hans", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "scrapeId": "445a15a3-fbfb-4cac-901b-d066093cee26", "sourceURL": "https://asdf-vm.com/zh-hans/guide/getting-started.html", "url": "https://asdf-vm.com/zh-hans/guide/getting-started.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 1. 安装依赖 in asdf-vm?\n\nAssistant: To 1. 安装依赖 in asdf-vm, here's what you do:\nasdf primarily requires `git` & `curl`. Here is a _non-exhaustive_ list of commands to run for _your_ package manager (some might automatically install these tools in later steps).\n\n| OS | Package Manager | Command |\n| --- | --- | --- |\n| linux | Aptitude | `apt install curl git` |\n| linux | DNF | `dnf install curl git` |\n| linux | Pacman | `pacman -S curl git` |\n| linux | Zypper | `zypper install curl git` |\n| macOS | Homebrew | `brew install coreutils curl git` |\n| macOS | Spack | `spack install coreutils curl git` |\n\nNote\n\n`sudo` may be required depending on your system configuration..\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/zh-hans/guide/getting-started.html", "title": "快速入门", "description": "`asdf` 安装过程包括：1. 安装依赖 2. 下载 `asdf` 核心 3. 安装 `asdf` 4. 为每一个你想要管理的工具/运行环境安装插件 5. 安装工具/运行环境的一个版本 6. 通过 `.tool-versions` 配置文件设置全局和项目版本", "has_code_examples": true, "has_best_practices": true, "section_count": 13, "timestamp": "2025-03-01 05:15:06", "type": "section_detail", "page_metadata": {"description": "Manage multiple runtime versions with a single CLI tool", "title": "快速入门 | asdf", "language": "zh-hans", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "scrapeId": "445a15a3-fbfb-4cac-901b-d066093cee26", "sourceURL": "https://asdf-vm.com/zh-hans/guide/getting-started.html", "url": "https://asdf-vm.com/zh-hans/guide/getting-started.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 2. 下载 asdf in asdf-vm?\n\nAssistant: To 2. 下载 asdf in asdf-vm, here's what you do:\n### Official Download\n\nshell\n\n```\ngit clone https://github.com/asdf-vm/asdf.git ~/.asdf --branch v0.15.0\n```\n\n### Community Supported Download Methods\n\nWe highly recommend using the official `git` method.\n\n| Method | Command |\n| --- | --- |\n| Homebrew | `brew install asdf` |\n| Pacman | `git clone https://aur.archlinux.org/asdf-vm.git && cd asdf-vm && makepkg -si` or use your preferred [AUR helper](https://wiki.archlinux.org/index.php/AUR_helpers) |.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/zh-hans/guide/getting-started.html", "title": "快速入门", "description": "`asdf` 安装过程包括：1. 安装依赖 2. 下载 `asdf` 核心 3. 安装 `asdf` 4. 为每一个你想要管理的工具/运行环境安装插件 5. 安装工具/运行环境的一个版本 6. 通过 `.tool-versions` 配置文件设置全局和项目版本", "has_code_examples": true, "has_best_practices": true, "section_count": 13, "timestamp": "2025-03-01 05:15:06", "type": "section_detail", "page_metadata": {"description": "Manage multiple runtime versions with a single CLI tool", "title": "快速入门 | asdf", "language": "zh-hans", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "scrapeId": "445a15a3-fbfb-4cac-901b-d066093cee26", "sourceURL": "https://asdf-vm.com/zh-hans/guide/getting-started.html", "url": "https://asdf-vm.com/zh-hans/guide/getting-started.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 3. 安装 asdf in asdf-vm?\n\nAssistant: To 3. 安装 asdf in asdf-vm, here's what you do:\n根据 Shell 脚本、操作系统和安装方法的组合不同，相应的配置也会不同。展开以下与你的系统最匹配的选项：\n\nBash & Git\n\n在 `~/.bashrc` 文件中加入以下内容：\n\nshell\n\n```\n. \"$HOME/.asdf/asdf.sh\"\n```\n\n补全功能必须在 `.bashrc` 文件中加入以下内容来配置完成：\n\nshell\n\n```\n. \"$HOME/.asdf/completions/asdf.bash\"\n```\n\nBash & Git (macOS)\n\n如果你正在使用 **macOS Catalina 或者更新的版本**, 默认的 shell 已经被修改为 **ZSH**。除非修改回 Bash, 否则请遵循 ZSH 的说明。\n\n在 `~/.bash_profile` 文件中加入以下内容：\n\nshell\n\n```\n. \"$HOME/.asdf/asdf.sh\"\n```\n\n补全功能必须在 `.bash_profile` 文件中使用以下内容手动配置完成：\n\nshell\n\n```\n. \"$HOME/.asdf/completions/asdf.bash\"\n```\n\nBash & Homebrew\n\n使用以下命令将 `asdf.sh` 加入到 `~/.bashrc` 文件中：\n\nshell\n\n```\necho -e \"\\n. \\\"$(brew --prefix asdf)/libexec/asdf.sh\\\"\" >> ~/.bashrc\n```\n\n补全功能将需要 [按照 Homebrew 的说明完成配置](https://docs.brew.sh/Shell-Completion#configuring-completions-in-bash) 或者执行以下命令：\n\nshell\n\n```\necho -e \"\\n. \\\"$(brew --prefix asdf)/etc/bash_completion.d/asdf.bash\\\"\" >> ~/.bashrc\n```\n\nBash & Homebrew (macOS)\n\n如果你正在使用 **macOS Catalina 或者更新的版本**, 默认的 shell 已经被修改为 **ZSH**。除非修改回 Bash, 否则请遵循 ZSH 的说明。\n\n使用以下命令将 `asdf.sh` 加入到 `~/.bash_profile` 文件中：\n\nshell\n\n```\necho -e \"\\n. \\\"$(brew --prefix asdf)/libexec/asdf.sh\\\"\" >> ~/.bash_profile\n```\n\n补全功能将需要 [按照 Homebrew 的说明完成配置](https://docs.brew.sh/Shell-Completion#configuring-completions-in-bash) 或者执行以下命令：\n\nshell\n\n```\necho -e \"\\n. \\\"$(brew --prefix asdf)/etc/bash_completion.d/asdf.bash\\\"\" >> ~/.bash_profile\n```\n\nBash & Pacman\n\n在 `~/.bashrc` 文件中加入以下内容：\n\nshell\n\n```\n. /opt/asdf-vm/asdf.sh\n```\n\n为了让补全功能正常工作需要安装 [`bash-completion`](https://wiki.archlinux.org/title/bash#Common_programs_and_options) 。\n\nFish & Git\n\n在 `~/.config/fish/config.fish` 文件中加入以下内容：\n\nshell\n\n```\nsource ~/.asdf/asdf.fish\n```\n\n补全功能必须按照以下命令手动配置完成：\n\nshell\n\n```\nmkdir -p ~/.config/fish/completions; and ln -s ~/.asdf/completions/asdf.fish ~/.config/fish/completions\n```\n\nFish & Homebrew\n\n使用以下命令将 `asdf.fish` 加入到 `~/.config/fish/config.fish` 文件中：\n\nshell\n\n```\necho -e \"\\nsource \\\"(brew --prefix asdf)\\\"/libexec/asdf.fish\" >> ~/.config/fish/config.fish\n```\n\nFish shell 的补全功能可以交给 [Homebrew 处理](https://docs.brew.sh/Shell-Completion#configuring-completions-in-fish). 很友好！\n\nFish & Pacman\n\n在 `~/.config/fish/config.fish` 文件中加入以下内容：\n\nshell\n\n```\nsource /opt/asdf-vm/asdf.fish\n```\n\n补全功能将会在安装过程中由 AUR 包管理器自动配置完成。\n\nElvish & Git\n\n使用以下命令将 `asdf.elv` 加入到 `~/.config/elvish/rc.elv` 文件中：\n\nshell\n\n```\nmkdir -p ~/.config/elvish/lib; ln -s ~/.asdf/asdf.elv ~/.config/elvish/lib/asdf.elv\necho \"\\n'use asdf _asdf; var asdf~ = $_asdf:asdf~'\" >> ~/.config/elvish/rc.elv\necho \"\\n'set edit:completion:arg-completer[asdf] = $_asdf:arg-completer~'\" >> ~/.config/elvish/rc.elv\n```\n\n补全功能将会自动配置。\n\nElvish & Homebrew\n\n使用以下命令将 `asdf.elv` 加入到 `~/.config/elvish/rc.elv` 文件中：\n\nshell\n\n```\nmkdir -p ~/.config/elvish/lib; ln -s (brew --prefix asdf)/libexec/asdf.elv ~/.config/elvish/lib/asdf.elv\necho \"\\n'use asdf _asdf; var asdf~ = $_asdf:asdf~'\" >> ~/.config/elvish/rc.elv\necho \"\\n'set edit:completion:arg-completer[asdf] = $_asdf:arg-completer~'\" >> ~/.config/elvish/rc.elv\n```\n\n补全功能将会自动配置。\n\nElvish & Pacman\n\n使用以下命令将 `asdf.elv` 加入到 `~/.config/elvish/rc.elv` 文件中：\n\nshell\n\n```\nmkdir -p ~/.config/elvish/lib; ln -s /opt/asdf-vm/asdf.elv ~/.config/elvish/lib/asdf.elv\necho \"\\n'use asdf _asdf; var asdf~ = $_asdf:asdf~'\" >> ~/.config/elvish/rc.elv\necho \"\\n'set edit:completion:arg-completer[asdf] = $_asdf:arg-completer~'\" >> ~/.config/elvish/rc.elv\n```\n\n补全功能将会自动配置。\n\nZSH & Git\n\n在 `~/.zshrc` 文件中加入以下内容：\n\nshell\n\n```\n. \"$HOME/.asdf/asdf.sh\"\n```\n\n**或者** 使用 ZSH 框架插件，比如 [asdf for oh-my-zsh](https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/asdf) 将会使脚本生效并安装补全功能。\n\n补全功能会被 ZSH 框架 `asdf` 插件或者通过在 `.zshrc` 文件中加入以下内容自动配置：\n\nshell\n\n```\n# append completions to fpath\nfpath=(${ASDF_DIR}/completions $fpath)\n# initialise completions with ZSH's compinit\nautoload -Uz compinit && compinit\n```\n\n- 如果你正在使用自定义的 `compinit` 配置，请确保 `compinit` 在 `asdf.sh` 生效位置的下方\n- 如果你正在使用自定义的 `compinit` 配置和 ZSH 框架，请确保 `compinit` 在框架生效位置的下方\n\n**警告**\n\n如果你正在使用 ZSH 框架，有关的 `asdf` 插件或许需要更新才能通过 `fpath` 正确地使用最新的 ZSH 补全功能。Oh-My-ZSH asdf 插件还在更新中，请查看 [ohmyzsh/ohmyzsh#8837](https://github.com/ohmyzsh/ohmyzsh/pull/8837) 了解更多。\n\nZSH & Homebrew\n\n使用以下命令将 `asdf.sh` 加入到 `~/.zshrc` 文件中：\n\nshell\n\n```\necho -e \"\\n. $(brew --prefix asdf)/libexec/asdf.sh\" >> ${ZDOTDIR:-~}/.zshrc\n```\n\n**或者** 使用 ZSH 框架插件，比如 [asdf for oh-my-zsh](https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/asdf) 将会使脚本生效并安装补全功能。\n\n补全功能可以被 ZSH 框架 `asdf` 或者 [按照 Homebrew 的指引](https://docs.brew.sh/Shell-Completion#configuring-completions-in-zsh) 完成配置。如果你正在使用 ZSH 框架，有关的 `asdf` 插件或许需要更新才能通过 `fpath` 正确地使用最新的 ZSH 补全功能。Oh-My-ZSH asdf 插件还在更新中，请查看 [ohmyzsh/ohmyzsh#8837](https://github.com/ohmyzsh/ohmyzsh/pull/8837) 了解更多。\n\nZSH & Pacman\n\n在 `~/.zshrc` 文件中加入以下内容：\n\nshell\n\n```\n. /opt/asdf-vm/asdf.sh\n```\n\n补全功能会被放在一个对 ZSH 很友好的位置，但是 [ZSH 必须使用自动补全完成配置](https://wiki.archlinux.org/index.php/zsh#Command_completion)。\n\nPowerShell Core & Git\n\n在 `~/.config/powershell/profile.ps1` 文件中加入以下内容：\n\nshell\n\n```\n. \"$HOME/.asdf/asdf.ps1\"\n```\n\nPowerShell Core & Homebrew\n\n使用以下命令将 `asdf.ps1` 加入到 `~/.config/powershell/profile.ps1` 文件中：\n\nshell\n\n```\necho -e \"\\n. \\\"$(brew --prefix asdf)/libexec/asdf.ps1\\\"\" >> ~/.config/powershell/profile.ps1\n```\n\nPowerShell Core & Pacman\n\n在 `~/.config/powershell/profile.ps1` 文件中加入以下内容：\n\nshell\n\n```\n. /opt/asdf-vm/asdf.ps1\n```\n\nNushell & Git\n\n使用以下命令将 `asdf.nu` 加入到 `~/.config/nushell/config.nu` 文件中：\n\nshell\n\n```\n\"\\n$env.ASDF_DIR = ($env.HOME | path join '.asdf')\\n source \" + ($env.HOME | path join '.asdf/asdf.nu') | save --append $nu.config-path\n```\n\n补全功能将会自动配置。\n\nNushell & Homebrew\n\n使用以下命令将 `asdf.nu` 加入到 `~/.config/nushell/config.nu` 文件中:\n\nshell\n\n```\n\"\\n$env.ASDF_DIR = (brew --prefix asdf | str trim | into string | path join 'libexec')\\n source \" +  (brew --prefix asdf | str trim | into string | path join 'libexec/asdf.nu') | save --append $nu.config-path\n```\n\n补全功能将会自动配置。\n\nNushell & Pacman\n\n使用以下命令将 `asdf.nu` 加入到 `~/.config/nushell/config.nu` 文件中:\n\nshell\n\n```\n\"\\n$env.ASDF_DIR = '/opt/asdf-vm/'\\n source /opt/asdf-vm/asdf.nu\" | save --append $nu.config-path\n```\n\n补全功能将会自动配置。\n\nPOSIX Shell & Git\n\n在 `~/.profile` 文件中加入以下内容：\n\nshell\n\n```\nexport ASDF_DIR=\"$HOME/.asdf\"\n. \"$HOME/.asdf/asdf.sh\"\n```\n\nPOSIX Shell & Homebrew\n\n使用以下命令将 `asdf.sh` 加入到 `~/.profile` 文件中：\n\nshell\n\n```\necho -e \"\\nexport ASDF_DIR=\\\"$(brew --prefix asdf)/libexec/asdf.sh\\\"\" >> ~/.profile\necho -e \"\\n. \\\"$(brew --prefix asdf)/libexec/asdf.sh\\\"\" >> ~/.profile\n```\n\nPOSIX Shell & Pacman\n\n在 `~/.profile` 文件中加入以下内容：\n\nshell\n\n```\nexport ASDF_DIR=\"/opt/asdf-vm\"\n. /opt/asdf-vm/asdf.sh\n```\n\n`asdf` 脚本需要在设置好的 `$PATH` **之后** 和已经生效的框架（比如 oh-my-zsh 等等） **之后** 的位置生效。\n\n通常打开一个新的终端标签页来重启你的 shell 让 `PATH` 更改即时生效。.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/zh-hans/guide/getting-started.html", "title": "快速入门", "description": "`asdf` 安装过程包括：1. 安装依赖 2. 下载 `asdf` 核心 3. 安装 `asdf` 4. 为每一个你想要管理的工具/运行环境安装插件 5. 安装工具/运行环境的一个版本 6. 通过 `.tool-versions` 配置文件设置全局和项目版本", "has_code_examples": true, "has_best_practices": true, "section_count": 13, "timestamp": "2025-03-01 05:15:06", "type": "section_detail", "page_metadata": {"description": "Manage multiple runtime versions with a single CLI tool", "title": "快速入门 | asdf", "language": "zh-hans", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "scrapeId": "445a15a3-fbfb-4cac-901b-d066093cee26", "sourceURL": "https://asdf-vm.com/zh-hans/guide/getting-started.html", "url": "https://asdf-vm.com/zh-hans/guide/getting-started.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 核心安装完成！ in asdf-vm?\n\nAssistant: To 核心安装完成！ in asdf-vm, here's what you do:\n这样就完成了 `asdf` 核心的安装 🎉\n\n`asdf` 仅在你安装 **插件**、 **工具** 和管理它们的 **版本** 时才开始真正发挥作用。请继续阅读下面的指南来了解这些是如何做到的。.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/zh-hans/guide/getting-started.html", "title": "快速入门", "description": "`asdf` 安装过程包括：1. 安装依赖 2. 下载 `asdf` 核心 3. 安装 `asdf` 4. 为每一个你想要管理的工具/运行环境安装插件 5. 安装工具/运行环境的一个版本 6. 通过 `.tool-versions` 配置文件设置全局和项目版本", "has_code_examples": true, "has_best_practices": true, "section_count": 13, "timestamp": "2025-03-01 05:15:06", "type": "section_detail", "page_metadata": {"description": "Manage multiple runtime versions with a single CLI tool", "title": "快速入门 | asdf", "language": "zh-hans", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "scrapeId": "445a15a3-fbfb-4cac-901b-d066093cee26", "sourceURL": "https://asdf-vm.com/zh-hans/guide/getting-started.html", "url": "https://asdf-vm.com/zh-hans/guide/getting-started.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 4. 安装插件 in asdf-vm?\n\nAssistant: To 4. 安装插件 in asdf-vm, here's what you do:\n出于演示目的，我们将通过 [`asdf-nodejs`](https://github.com/asdf-vm/asdf-nodejs/) 插件来安装和设置 [Node.js](https://nodejs.org/)。\n\n### 插件依赖\n\n每个插件都有依赖，所以我们需要确认应该列举了这些依赖的插件源码。对于 `asdf-nodejs` 来说，它们是：\n\n| 操作系统 | 安装依赖 |\n| --- | --- |\n| Linux (Debian) | `apt-get install dirmngr gpg curl gawk` |\n| macOS | `brew install gpg gawk` |\n\n我们应该提前安装这些依赖，因为有些插件有 post-install 钩子。.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/zh-hans/guide/getting-started.html", "title": "快速入门", "description": "`asdf` 安装过程包括：1. 安装依赖 2. 下载 `asdf` 核心 3. 安装 `asdf` 4. 为每一个你想要管理的工具/运行环境安装插件 5. 安装工具/运行环境的一个版本 6. 通过 `.tool-versions` 配置文件设置全局和项目版本", "has_code_examples": true, "has_best_practices": true, "section_count": 13, "timestamp": "2025-03-01 05:15:06", "type": "section_detail", "page_metadata": {"description": "Manage multiple runtime versions with a single CLI tool", "title": "快速入门 | asdf", "language": "zh-hans", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "scrapeId": "445a15a3-fbfb-4cac-901b-d066093cee26", "sourceURL": "https://asdf-vm.com/zh-hans/guide/getting-started.html", "url": "https://asdf-vm.com/zh-hans/guide/getting-started.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 安装插件 in asdf-vm?\n\nAssistant: To 安装插件 in asdf-vm, here's what you do:\nshell\n\n```\nasdf plugin add nodejs https://github.com/asdf-vm/asdf-nodejs.git\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/zh-hans/guide/getting-started.html", "title": "快速入门", "description": "`asdf` 安装过程包括：1. 安装依赖 2. 下载 `asdf` 核心 3. 安装 `asdf` 4. 为每一个你想要管理的工具/运行环境安装插件 5. 安装工具/运行环境的一个版本 6. 通过 `.tool-versions` 配置文件设置全局和项目版本", "has_code_examples": true, "has_best_practices": true, "section_count": 13, "timestamp": "2025-03-01 05:15:06", "type": "section_detail", "page_metadata": {"description": "Manage multiple runtime versions with a single CLI tool", "title": "快速入门 | asdf", "language": "zh-hans", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "scrapeId": "445a15a3-fbfb-4cac-901b-d066093cee26", "sourceURL": "https://asdf-vm.com/zh-hans/guide/getting-started.html", "url": "https://asdf-vm.com/zh-hans/guide/getting-started.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 5. 安装指定版本 in asdf-vm?\n\nAssistant: To 5. 安装指定版本 in asdf-vm, here's what you do:\n现在我们已经有了 Node.js 插件，所以我们可以开始安装某个版本了。\n\n我们通过 `asdf list all nodejs` 可以看到所有可用的版本或者通过 `asdf list all nodejs 14` 查看版本子集。\n\n我们将只安装最新可用的 `latest` 版本：\n\nshell\n\n```\nasdf install nodejs latest\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/zh-hans/guide/getting-started.html", "title": "快速入门", "description": "`asdf` 安装过程包括：1. 安装依赖 2. 下载 `asdf` 核心 3. 安装 `asdf` 4. 为每一个你想要管理的工具/运行环境安装插件 5. 安装工具/运行环境的一个版本 6. 通过 `.tool-versions` 配置文件设置全局和项目版本", "has_code_examples": true, "has_best_practices": true, "section_count": 13, "timestamp": "2025-03-01 05:15:06", "type": "section_detail", "page_metadata": {"description": "Manage multiple runtime versions with a single CLI tool", "title": "快速入门 | asdf", "language": "zh-hans", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "scrapeId": "445a15a3-fbfb-4cac-901b-d066093cee26", "sourceURL": "https://asdf-vm.com/zh-hans/guide/getting-started.html", "url": "https://asdf-vm.com/zh-hans/guide/getting-started.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 注意 in asdf-vm?\n\nAssistant: To 注意 in asdf-vm, here's what you do:\n`asdf` 强制使用准确的版本。 `latest` 是一个通过 `asdf` 来解析到执行时刻的实际版本号的辅助工具。.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/zh-hans/guide/getting-started.html", "title": "快速入门", "description": "`asdf` 安装过程包括：1. 安装依赖 2. 下载 `asdf` 核心 3. 安装 `asdf` 4. 为每一个你想要管理的工具/运行环境安装插件 5. 安装工具/运行环境的一个版本 6. 通过 `.tool-versions` 配置文件设置全局和项目版本", "has_code_examples": true, "has_best_practices": true, "section_count": 13, "timestamp": "2025-03-01 05:15:06", "type": "section_detail", "page_metadata": {"description": "Manage multiple runtime versions with a single CLI tool", "title": "快速入门 | asdf", "language": "zh-hans", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "scrapeId": "445a15a3-fbfb-4cac-901b-d066093cee26", "sourceURL": "https://asdf-vm.com/zh-hans/guide/getting-started.html", "url": "https://asdf-vm.com/zh-hans/guide/getting-started.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 6. 设置默认版本 in asdf-vm?\n\nAssistant: To 6. 设置默认版本 in asdf-vm, here's what you do:\n`asdf` 在从当前工作目录一直到 `$HOME` 目录的所有 `.tool-versions` 文件中进行工具的版本查找。查找在执行 `asdf` 管理的工具时实时发生。\n\n警告\n\n如果没有为工具找到指定的版本，则会出现 **错误**。 `asdf current` 将显示当前目录中的工具和版本解析结果，或者不存在，以便你可以观察哪些工具将无法执行。.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/zh-hans/guide/getting-started.html", "title": "快速入门", "description": "`asdf` 安装过程包括：1. 安装依赖 2. 下载 `asdf` 核心 3. 安装 `asdf` 4. 为每一个你想要管理的工具/运行环境安装插件 5. 安装工具/运行环境的一个版本 6. 通过 `.tool-versions` 配置文件设置全局和项目版本", "has_code_examples": true, "has_best_practices": true, "section_count": 13, "timestamp": "2025-03-01 05:15:06", "type": "section_detail", "page_metadata": {"description": "Manage multiple runtime versions with a single CLI tool", "title": "快速入门 | asdf", "language": "zh-hans", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "scrapeId": "445a15a3-fbfb-4cac-901b-d066093cee26", "sourceURL": "https://asdf-vm.com/zh-hans/guide/getting-started.html", "url": "https://asdf-vm.com/zh-hans/guide/getting-started.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 全局 in asdf-vm?\n\nAssistant: To 全局 in asdf-vm, here's what you do:\n全局默认配置在 `$HOME/.tool-versions` 文件中进行管理。使用以下命令可以设置一个全局版本：\n\nshell\n\n```\nasdf global nodejs latest\n```\n\n`$HOME/.tool-versions` 文件内容将会如下所示：\n\n```\nnodejs 16.5.0\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/zh-hans/guide/getting-started.html", "title": "快速入门", "description": "`asdf` 安装过程包括：1. 安装依赖 2. 下载 `asdf` 核心 3. 安装 `asdf` 4. 为每一个你想要管理的工具/运行环境安装插件 5. 安装工具/运行环境的一个版本 6. 通过 `.tool-versions` 配置文件设置全局和项目版本", "has_code_examples": true, "has_best_practices": true, "section_count": 13, "timestamp": "2025-03-01 05:15:06", "type": "section_detail", "page_metadata": {"description": "Manage multiple runtime versions with a single CLI tool", "title": "快速入门 | asdf", "language": "zh-hans", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "scrapeId": "445a15a3-fbfb-4cac-901b-d066093cee26", "sourceURL": "https://asdf-vm.com/zh-hans/guide/getting-started.html", "url": "https://asdf-vm.com/zh-hans/guide/getting-started.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 本地 in asdf-vm?\n\nAssistant: To 本地 in asdf-vm, here's what you do:\n本地版本被定义在 `$PWD/.tool-versions` 文件中（当前工作目录）。通常，这将会是一个项目的 Git 存储库。当在你想要的目录执行：\n\nshell\n\n```\nasdf local nodejs latest\n```\n\n`$PWD/.tool-versions` 文件内容将会如下所示：\n\n```\nnodejs 16.5.0\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/zh-hans/guide/getting-started.html", "title": "快速入门", "description": "`asdf` 安装过程包括：1. 安装依赖 2. 下载 `asdf` 核心 3. 安装 `asdf` 4. 为每一个你想要管理的工具/运行环境安装插件 5. 安装工具/运行环境的一个版本 6. 通过 `.tool-versions` 配置文件设置全局和项目版本", "has_code_examples": true, "has_best_practices": true, "section_count": 13, "timestamp": "2025-03-01 05:15:06", "type": "section_detail", "page_metadata": {"description": "Manage multiple runtime versions with a single CLI tool", "title": "快速入门 | asdf", "language": "zh-hans", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "scrapeId": "445a15a3-fbfb-4cac-901b-d066093cee26", "sourceURL": "https://asdf-vm.com/zh-hans/guide/getting-started.html", "url": "https://asdf-vm.com/zh-hans/guide/getting-started.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 使用现有工具版本文件 in asdf-vm?\n\nAssistant: To 使用现有工具版本文件 in asdf-vm, here's what you do:\n`asdf` 支持从其他版本管理器的现有版本文件中迁移过来，比如 `rbenv` 的 `.ruby-version` 文件。这在每个插件中都原生支持。\n\n[`asdf-nodejs`](https://github.com/asdf-vm/asdf-nodejs/) 支持从 `.nvmrc` 和 `.node-version` 文件进行迁移。为了启用此功能，请在 `asdf` 配置文件 `$HOME/.asdfrc` 中加入以下内容：\n\n```\nlegacy_version_file = yes\n```\n\n请查看 [配置](https://asdf-vm.com/zh-hans/manage/configuration.html) 参考页面可以了解更多配置选项。.\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/zh-hans/guide/getting-started.html", "title": "快速入门", "description": "`asdf` 安装过程包括：1. 安装依赖 2. 下载 `asdf` 核心 3. 安装 `asdf` 4. 为每一个你想要管理的工具/运行环境安装插件 5. 安装工具/运行环境的一个版本 6. 通过 `.tool-versions` 配置文件设置全局和项目版本", "has_code_examples": true, "has_best_practices": true, "section_count": 13, "timestamp": "2025-03-01 05:15:06", "type": "section_detail", "page_metadata": {"description": "Manage multiple runtime versions with a single CLI tool", "title": "快速入门 | asdf", "language": "zh-hans", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "scrapeId": "445a15a3-fbfb-4cac-901b-d066093cee26", "sourceURL": "https://asdf-vm.com/zh-hans/guide/getting-started.html", "url": "https://asdf-vm.com/zh-hans/guide/getting-started.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: How do I 完成指南！ in asdf-vm?\n\nAssistant: To 完成指南！ in asdf-vm, here's what you do:\n恭喜你完成了 `asdf` 的快速上手 🎉 你现在可以管理你的项目的 `nodejs` 版本了。对于项目中的其他工具类型可以执行类似步骤即可！\n\n`asdf` 还有更多命令需要熟悉，你可以通过运行 `asdf --help` 或者 `asdf` 来查看它们。命令主要分为三类：\n\n- [`asdf` 核心](https://asdf-vm.com/zh-hans/manage/core.html)\n- [插件](https://asdf-vm.com/zh-hans/manage/plugins.html)\n- [（工具的）版本](https://asdf-vm.com/zh-hans/manage/versions.html).\nPretty straightforward, right?", "metadata": {"source_url": "https://asdf-vm.com/zh-hans/guide/getting-started.html", "title": "快速入门", "description": "`asdf` 安装过程包括：1. 安装依赖 2. 下载 `asdf` 核心 3. 安装 `asdf` 4. 为每一个你想要管理的工具/运行环境安装插件 5. 安装工具/运行环境的一个版本 6. 通过 `.tool-versions` 配置文件设置全局和项目版本", "has_code_examples": true, "has_best_practices": true, "section_count": 13, "timestamp": "2025-03-01 05:15:06", "type": "section_detail", "page_metadata": {"description": "Manage multiple runtime versions with a single CLI tool", "title": "快速入门 | asdf", "language": "zh-hans", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "scrapeId": "445a15a3-fbfb-4cac-901b-d066093cee26", "sourceURL": "https://asdf-vm.com/zh-hans/guide/getting-started.html", "url": "https://asdf-vm.com/zh-hans/guide/getting-started.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: Can you give me some code examples for 快速入门 in asdf-vm?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**下载 asdf**:\n\n```yaml\ngit clone https://github.com/asdf-vm/asdf.git ~/.asdf --branch v0.15.0\n```\n\nThis snippet shows you how to 下载 asdf, which is an important aspect of 快速入门.\n\n**Bash & Git**:\n\n```yaml\n. \"$HOME/.asdf/asdf.sh\"\n```\n\nThis snippet shows you how to bash & git, which is an important aspect of 快速入门.\n\n**Bash & Git (macOS)**:\n\n```yaml\n. \"$HOME/.asdf/asdf.sh\"\n```\n\nThis snippet shows you how to bash & git (macos), which is an important aspect of 快速入门.\n\n**Bash & Homebrew**:\n\n```yaml\necho -e \"\\n. \\\"$(brew --prefix asdf)/libexec/asdf.sh\\\"\" >> ~/.bashrc\n```\n\nThis snippet shows you how to bash & homebrew, which is an important aspect of 快速入门.\n\n**安装插件**:\n\n```yaml\nasdf plugin add nodejs https://github.com/asdf-vm/asdf-nodejs.git\n```\n\nThis snippet shows you how to 安装插件, which is an important aspect of 快速入门.\n\n**安装指定版本**:\n\n```yaml\nasdf install nodejs latest\n```\n\nThis snippet shows you how to 安装指定版本, which is an important aspect of 快速入门.\n\n**全局版本设置**:\n\n```yaml\nasdf global nodejs latest\n```\n\nThis snippet shows you how to 全局版本设置, which is an important aspect of 快速入门.\n\n**本地版本设置**:\n\n```yaml\nasdf local nodejs latest\n```\n\nThis snippet shows you how to 本地版本设置, which is an important aspect of 快速入门.\n\n**使用现有工具版本文件**:\n\n```yaml\nlegacy_version_file = yes\n```\n\nThis snippet shows you how to 使用现有工具版本文件, which is an important aspect of 快速入门.\n\n", "metadata": {"source_url": "https://asdf-vm.com/zh-hans/guide/getting-started.html", "title": "快速入门", "description": "`asdf` 安装过程包括：1. 安装依赖 2. 下载 `asdf` 核心 3. 安装 `asdf` 4. 为每一个你想要管理的工具/运行环境安装插件 5. 安装工具/运行环境的一个版本 6. 通过 `.tool-versions` 配置文件设置全局和项目版本", "has_code_examples": true, "has_best_practices": true, "section_count": 13, "timestamp": "2025-03-01 05:15:06", "type": "code_examples", "page_metadata": {"description": "Manage multiple runtime versions with a single CLI tool", "title": "快速入门 | asdf", "language": "zh-hans", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "scrapeId": "445a15a3-fbfb-4cac-901b-d066093cee26", "sourceURL": "https://asdf-vm.com/zh-hans/guide/getting-started.html", "url": "https://asdf-vm.com/zh-hans/guide/getting-started.html", "statusCode": 200}}}
{"text": "System: You are a helpful asdf-vm expert.\n\nUser: What are some tips for using 快速入门 in asdf-vm effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\n`sudo` may be required depending on your system configuration.\n\nIf you are using a custom `compinit` configuration, ensure that `compinit` is below the effective position of `asdf.sh`.\n\nIf you are using a custom `compinit` configuration and ZSH framework, ensure that `compinit` is below the effective position of the framework.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://asdf-vm.com/zh-hans/guide/getting-started.html", "title": "快速入门", "description": "`asdf` 安装过程包括：1. 安装依赖 2. 下载 `asdf` 核心 3. 安装 `asdf` 4. 为每一个你想要管理的工具/运行环境安装插件 5. 安装工具/运行环境的一个版本 6. 通过 `.tool-versions` 配置文件设置全局和项目版本", "has_code_examples": true, "has_best_practices": true, "section_count": 13, "timestamp": "2025-03-01 05:15:06", "type": "best_practices", "page_metadata": {"description": "Manage multiple runtime versions with a single CLI tool", "title": "快速入门 | asdf", "language": "zh-hans", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1", "scrapeId": "445a15a3-fbfb-4cac-901b-d066093cee26", "sourceURL": "https://asdf-vm.com/zh-hans/guide/getting-started.html", "url": "https://asdf-vm.com/zh-hans/guide/getting-started.html", "statusCode": 200}}}

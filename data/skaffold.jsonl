{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what Skaffold 2.0 Documentation is in skaffold?\n\nAssistant: Sure, I'd be happy to explain Skaffold 2.0 Documentation in skaffold.\n\n# Skaffold 2.0 Documentation\n\nSkaffold v2 has been released! This documentation covers the features, workflow, and architecture of Skaffold, a command line tool for continuous development of container-based and Kubernetes applications.Here's a quick rundown of what this is about:\n\n## Features\n\n- Fast local Kubernetes Development\n  - **optimized “Source to Kubernetes”** \\- Skaffold detects changes in your source code and handles the pipeline to **build**, **push**, **test** and **deploy** your application automatically with **policy-based image tagging** and **highly optimized, fast local workflows**\n  - **continuous feedback** \\- Skaffold automatically manages deployment logging and resource port-forwarding\n- Skaffold projects work everywhere\n  - **share with other developers** \\- Skaffold is the easiest way to **share your project** with the world: `git clone` and `skaffold run`\n  - **context aware** \\- use Skaffold profiles, local user config, environment variables, and flags to easily incorporate differences across environments\n  - **platform aware** \\- use cross-platform and multi-platform **build** support, with automatic platform detection, to easily handle operating system and architecture differences between the development machine and Kubernetes cluster nodes.\n  - **CI/CD building blocks** \\- use `skaffold build`, `skaffold test` and `skaffold deploy` as part of your CI/CD pipeline, or simply `skaffold run` end-to-end\n  - **GitOps integration** \\- use `skaffold render` to build your images and render templated Kubernetes manifests for use in GitOps workflows\n- skaffold.yaml - a single pluggable, declarative configuration for your project\n  - **skaffold init** \\- Skaffold can discover your build and deployment configuration and generate a Skaffold config\n  - **multi-component apps** \\- Skaffold supports applications with many components, making it great for microservice-based applications\n  - **bring your own tools** \\- Skaffold has a pluggable architecture, allowing for different implementations of the build and deploy stages\n- Lightweight\n  - **client-side only** \\- Skaffold has no cluster-side component, so there’s no overhead or maintenance burden to your cluster\n  - **minimal pipeline** \\- Skaffold provides an opinionated, minimal pipeline to keep things simple\n\n## Demo\n\n![architecture](https://skaffold.dev/images/intro.gif)\n\n## Skaffold Workflow and Architecture\n\nSkaffold simplifies your development workflow by organizing common development stages into one simple command. Every time you run `skaffold dev`, the system\n\n1. Collects and watches your source code for changes\n2. Syncs files directly to pods if user marks them as syncable\n3. Builds artifacts from the source code\n4. Tests the built artifacts using [container-structure-tests](https://github.com/GoogleContainerTools/container-structure-test) or custom scripts\n5. Tags the artifacts\n6. Pushes the artifacts\n7. Deploys the artifacts\n8. Monitors the deployed artifacts\n9. Cleans up deployed artifacts on exit (Ctrl+C)\n\n#### Note\n\nAny of these stages can be skipped.\n\nThe pluggable architecture is central to Skaffold’s design, allowing you to use your preferred tool or technology in each stage. Also, Skaffold’s `profiles` feature grants you the freedom to switch tools on the fly with a simple flag.\n\nFor example, if you are coding on a local machine, you can configure Skaffold to build artifacts with your local Docker daemon and deploy them to minikube using `kubectl`. When you finalize your design, you can switch to your production profile and start building with Google Cloud Build and deploy with Helm.\n\nSkaffold supports the following tools:\n\n- [IMAGE BUILDERS](https://skaffold.dev/docs/#)\n- [TESTERS](https://skaffold.dev/docs/#)\n- [DEPLOYERS](https://skaffold.dev/docs/#)\n- [TAG POLICIES](https://skaffold.dev/docs/#)\n- [PUSH STRATEGIES](https://skaffold.dev/docs/#)\n\n- [Dockerfile](https://docs.docker.com/engine/reference/builder/)\n  - locally with Docker\n  - in-cluster with [Kaniko](https://github.com/GoogleContainerTools/kaniko)\n  - on cloud with [Google Cloud Build](https://cloud.google.com/cloud-build/docs/)\n- [Jib](https://github.com/GoogleContainerTools/jib) Maven and Gradle\n  - locally\n  - on cloud with [Google Cloud Build](https://cloud.google.com/cloud-build/docs/)\n- [Bazel](https://bazel.build/) locally\n- [Cloud Native Buildpacks](https://buildpacks.io/)\n  - locally with Docker\n  - on cloud with [Google Cloud Build](https://cloud.google.com/cloud-build/docs/)\n- Custom script\n  - locally\n  - in-cluster\n\n- [container-structure-test](https://github.com/GoogleContainerTools/container-structure-test)\n- custom script\n\n- Kubernetes Command-Line Interface ( `kubectl`)\n- Helm\n- kustomize\n\n- tag by git commit\n- tag by current date & time\n- tag by environment variables based template\n- tag by digest of the Docker image\n\n- don’t push - keep the image on the local daemon\n- push to registry\n\n![architecture](https://skaffold.dev/images/architecture.png)\n\nBesides the above steps, Skaffold also automatically manages the following utilities for you:\n\n- port-forwarding of deployed resources to your local machine using `kubectl port-forward`\n- log aggregation from the deployed pods\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs", "title": "Skaffold 2.0 Documentation", "description": "Skaffold v2 has been released! This documentation covers the features, workflow, and architecture of Skaffold, a command line tool for continuous development of container-based and Kubernetes applications.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 02:53:00", "type": "overview", "page_metadata": {"ogSiteName": "Skaffold", "twitter:title": "Skaffold 2.0 Documentation", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "og:description": "Easy and Repeatable Container & Kubernetes Development", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "description": "\n    Skaffold v2 has been released!\n    You are viewing the Skaffold v2 documentation. View the archived v1 documentation\n      here.\n    \n\nSkaffold …", "og:site_name": "Skaffold", "og:type": "website", "title": "Skaffold 2.0 Documentation | Skaffold", "robots": "index, follow", "ogTitle": "Skaffold 2.0 Documentation", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "generator": "Hugo 0.99.1", "og:title": "Skaffold 2.0 Documentation", "ogUrl": "https://skaffold.dev/docs/", "language": "en", "og:url": "https://skaffold.dev/docs/", "twitter:card": "summary", "scrapeId": "17e63bb3-f6bc-43fe-afff-d68a419c1bcb", "sourceURL": "https://skaffold.dev/docs", "url": "https://skaffold.dev/docs/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I features in skaffold?\n\nAssistant: To features in skaffold, here's what you do:\n- Fast local Kubernetes Development\n  - **optimized “Source to Kubernetes”** \\- Skaffold detects changes in your source code and handles the pipeline to **build**, **push**, **test** and **deploy** your application automatically with **policy-based image tagging** and **highly optimized, fast local workflows**\n  - **continuous feedback** \\- Skaffold automatically manages deployment logging and resource port-forwarding\n- Skaffold projects work everywhere\n  - **share with other developers** \\- Skaffold is the easiest way to **share your project** with the world: `git clone` and `skaffold run`\n  - **context aware** \\- use Skaffold profiles, local user config, environment variables, and flags to easily incorporate differences across environments\n  - **platform aware** \\- use cross-platform and multi-platform **build** support, with automatic platform detection, to easily handle operating system and architecture differences between the development machine and Kubernetes cluster nodes.\n  - **CI/CD building blocks** \\- use `skaffold build`, `skaffold test` and `skaffold deploy` as part of your CI/CD pipeline, or simply `skaffold run` end-to-end\n  - **GitOps integration** \\- use `skaffold render` to build your images and render templated Kubernetes manifests for use in GitOps workflows\n- skaffold.yaml - a single pluggable, declarative configuration for your project\n  - **skaffold init** \\- Skaffold can discover your build and deployment configuration and generate a Skaffold config\n  - **multi-component apps** \\- Skaffold supports applications with many components, making it great for microservice-based applications\n  - **bring your own tools** \\- Skaffold has a pluggable architecture, allowing for different implementations of the build and deploy stages\n- Lightweight\n  - **client-side only** \\- Skaffold has no cluster-side component, so there’s no overhead or maintenance burden to your cluster\n  - **minimal pipeline** \\- Skaffold provides an opinionated, minimal pipeline to keep things simple.\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs", "title": "Skaffold 2.0 Documentation", "description": "Skaffold v2 has been released! This documentation covers the features, workflow, and architecture of Skaffold, a command line tool for continuous development of container-based and Kubernetes applications.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 02:53:00", "type": "section_detail", "page_metadata": {"ogSiteName": "Skaffold", "twitter:title": "Skaffold 2.0 Documentation", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "og:description": "Easy and Repeatable Container & Kubernetes Development", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "description": "\n    Skaffold v2 has been released!\n    You are viewing the Skaffold v2 documentation. View the archived v1 documentation\n      here.\n    \n\nSkaffold …", "og:site_name": "Skaffold", "og:type": "website", "title": "Skaffold 2.0 Documentation | Skaffold", "robots": "index, follow", "ogTitle": "Skaffold 2.0 Documentation", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "generator": "Hugo 0.99.1", "og:title": "Skaffold 2.0 Documentation", "ogUrl": "https://skaffold.dev/docs/", "language": "en", "og:url": "https://skaffold.dev/docs/", "twitter:card": "summary", "scrapeId": "17e63bb3-f6bc-43fe-afff-d68a419c1bcb", "sourceURL": "https://skaffold.dev/docs", "url": "https://skaffold.dev/docs/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I demo in skaffold?\n\nAssistant: To demo in skaffold, here's what you do:\n![architecture](https://skaffold.dev/images/intro.gif).\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs", "title": "Skaffold 2.0 Documentation", "description": "Skaffold v2 has been released! This documentation covers the features, workflow, and architecture of Skaffold, a command line tool for continuous development of container-based and Kubernetes applications.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 02:53:00", "type": "section_detail", "page_metadata": {"ogSiteName": "Skaffold", "twitter:title": "Skaffold 2.0 Documentation", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "og:description": "Easy and Repeatable Container & Kubernetes Development", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "description": "\n    Skaffold v2 has been released!\n    You are viewing the Skaffold v2 documentation. View the archived v1 documentation\n      here.\n    \n\nSkaffold …", "og:site_name": "Skaffold", "og:type": "website", "title": "Skaffold 2.0 Documentation | Skaffold", "robots": "index, follow", "ogTitle": "Skaffold 2.0 Documentation", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "generator": "Hugo 0.99.1", "og:title": "Skaffold 2.0 Documentation", "ogUrl": "https://skaffold.dev/docs/", "language": "en", "og:url": "https://skaffold.dev/docs/", "twitter:card": "summary", "scrapeId": "17e63bb3-f6bc-43fe-afff-d68a419c1bcb", "sourceURL": "https://skaffold.dev/docs", "url": "https://skaffold.dev/docs/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I skaffold workflow and architecture in skaffold?\n\nAssistant: To skaffold workflow and architecture in skaffold, here's what you do:\nSkaffold simplifies your development workflow by organizing common development stages into one simple command. Every time you run `skaffold dev`, the system\n\n1. Collects and watches your source code for changes\n2. Syncs files directly to pods if user marks them as syncable\n3. Builds artifacts from the source code\n4. Tests the built artifacts using [container-structure-tests](https://github.com/GoogleContainerTools/container-structure-test) or custom scripts\n5. Tags the artifacts\n6. Pushes the artifacts\n7. Deploys the artifacts\n8. Monitors the deployed artifacts\n9. Cleans up deployed artifacts on exit (Ctrl+C)\n\n#### Note\n\nAny of these stages can be skipped.\n\nThe pluggable architecture is central to Skaffold’s design, allowing you to use your preferred tool or technology in each stage. Also, Skaffold’s `profiles` feature grants you the freedom to switch tools on the fly with a simple flag.\n\nFor example, if you are coding on a local machine, you can configure Skaffold to build artifacts with your local Docker daemon and deploy them to minikube using `kubectl`. When you finalize your design, you can switch to your production profile and start building with Google Cloud Build and deploy with Helm.\n\nSkaffold supports the following tools:\n\n- [IMAGE BUILDERS](https://skaffold.dev/docs/#)\n- [TESTERS](https://skaffold.dev/docs/#)\n- [DEPLOYERS](https://skaffold.dev/docs/#)\n- [TAG POLICIES](https://skaffold.dev/docs/#)\n- [PUSH STRATEGIES](https://skaffold.dev/docs/#)\n\n- [Dockerfile](https://docs.docker.com/engine/reference/builder/)\n  - locally with Docker\n  - in-cluster with [Kaniko](https://github.com/GoogleContainerTools/kaniko)\n  - on cloud with [Google Cloud Build](https://cloud.google.com/cloud-build/docs/)\n- [Jib](https://github.com/GoogleContainerTools/jib) Maven and Gradle\n  - locally\n  - on cloud with [Google Cloud Build](https://cloud.google.com/cloud-build/docs/)\n- [Bazel](https://bazel.build/) locally\n- [Cloud Native Buildpacks](https://buildpacks.io/)\n  - locally with Docker\n  - on cloud with [Google Cloud Build](https://cloud.google.com/cloud-build/docs/)\n- Custom script\n  - locally\n  - in-cluster\n\n- [container-structure-test](https://github.com/GoogleContainerTools/container-structure-test)\n- custom script\n\n- Kubernetes Command-Line Interface ( `kubectl`)\n- Helm\n- kustomize\n\n- tag by git commit\n- tag by current date & time\n- tag by environment variables based template\n- tag by digest of the Docker image\n\n- don’t push - keep the image on the local daemon\n- push to registry\n\n![architecture](https://skaffold.dev/images/architecture.png)\n\nBesides the above steps, Skaffold also automatically manages the following utilities for you:\n\n- port-forwarding of deployed resources to your local machine using `kubectl port-forward`\n- log aggregation from the deployed pods.\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs", "title": "Skaffold 2.0 Documentation", "description": "Skaffold v2 has been released! This documentation covers the features, workflow, and architecture of Skaffold, a command line tool for continuous development of container-based and Kubernetes applications.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 02:53:00", "type": "section_detail", "page_metadata": {"ogSiteName": "Skaffold", "twitter:title": "Skaffold 2.0 Documentation", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "og:description": "Easy and Repeatable Container & Kubernetes Development", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "description": "\n    Skaffold v2 has been released!\n    You are viewing the Skaffold v2 documentation. View the archived v1 documentation\n      here.\n    \n\nSkaffold …", "og:site_name": "Skaffold", "og:type": "website", "title": "Skaffold 2.0 Documentation | Skaffold", "robots": "index, follow", "ogTitle": "Skaffold 2.0 Documentation", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "generator": "Hugo 0.99.1", "og:title": "Skaffold 2.0 Documentation", "ogUrl": "https://skaffold.dev/docs/", "language": "en", "og:url": "https://skaffold.dev/docs/", "twitter:card": "summary", "scrapeId": "17e63bb3-f6bc-43fe-afff-d68a419c1bcb", "sourceURL": "https://skaffold.dev/docs", "url": "https://skaffold.dev/docs/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you give me some code examples for Skaffold 2.0 Documentation in skaffold?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Skaffold Commands**:\n\n```yaml\n`git clone` and `skaffold run`\n```\n\nThis snippet shows you how to skaffold commands, which is an important aspect of skaffold 2.0 documentation.\n\n**Skaffold Dev Command**:\n\n```yaml\n`skaffold dev`\n```\n\nThis snippet shows you how to skaffold dev command, which is an important aspect of skaffold 2.0 documentation.\n\n**Skaffold Build Command**:\n\n```yaml\n`skaffold build`\n```\n\nThis snippet shows you how to skaffold build command, which is an important aspect of skaffold 2.0 documentation.\n\n**Skaffold Test Command**:\n\n```yaml\n`skaffold test`\n```\n\nThis snippet shows you how to skaffold test command, which is an important aspect of skaffold 2.0 documentation.\n\n**Skaffold Deploy Command**:\n\n```yaml\n`skaffold deploy`\n```\n\nThis snippet shows you how to skaffold deploy command, which is an important aspect of skaffold 2.0 documentation.\n\n**Skaffold Render Command**:\n\n```yaml\n`skaffold render`\n```\n\nThis snippet shows you how to skaffold render command, which is an important aspect of skaffold 2.0 documentation.\n\n**Kubernetes Command**:\n\n```yaml\n`kubectl`\n```\n\nThis snippet shows you how to kubernetes command, which is an important aspect of skaffold 2.0 documentation.\n\n**Port Forwarding Command**:\n\n```yaml\n`kubectl port-forward`\n```\n\nThis snippet shows you how to port forwarding command, which is an important aspect of skaffold 2.0 documentation.\n\n", "metadata": {"source_url": "https://skaffold.dev/docs", "title": "Skaffold 2.0 Documentation", "description": "Skaffold v2 has been released! This documentation covers the features, workflow, and architecture of Skaffold, a command line tool for continuous development of container-based and Kubernetes applications.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 02:53:00", "type": "code_examples", "page_metadata": {"ogSiteName": "Skaffold", "twitter:title": "Skaffold 2.0 Documentation", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "og:description": "Easy and Repeatable Container & Kubernetes Development", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "description": "\n    Skaffold v2 has been released!\n    You are viewing the Skaffold v2 documentation. View the archived v1 documentation\n      here.\n    \n\nSkaffold …", "og:site_name": "Skaffold", "og:type": "website", "title": "Skaffold 2.0 Documentation | Skaffold", "robots": "index, follow", "ogTitle": "Skaffold 2.0 Documentation", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "generator": "Hugo 0.99.1", "og:title": "Skaffold 2.0 Documentation", "ogUrl": "https://skaffold.dev/docs/", "language": "en", "og:url": "https://skaffold.dev/docs/", "twitter:card": "summary", "scrapeId": "17e63bb3-f6bc-43fe-afff-d68a419c1bcb", "sourceURL": "https://skaffold.dev/docs", "url": "https://skaffold.dev/docs/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: What are some tips for using Skaffold 2.0 Documentation in skaffold effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nUse Skaffold profiles to switch tools on the fly with a simple flag.\n\nUtilize Skaffold's pluggable architecture to incorporate your preferred tools in each stage of the workflow.\n\nLeverage Skaffold's CI/CD building blocks for seamless integration into your pipelines.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://skaffold.dev/docs", "title": "Skaffold 2.0 Documentation", "description": "Skaffold v2 has been released! This documentation covers the features, workflow, and architecture of Skaffold, a command line tool for continuous development of container-based and Kubernetes applications.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 02:53:00", "type": "best_practices", "page_metadata": {"ogSiteName": "Skaffold", "twitter:title": "Skaffold 2.0 Documentation", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "og:description": "Easy and Repeatable Container & Kubernetes Development", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "description": "\n    Skaffold v2 has been released!\n    You are viewing the Skaffold v2 documentation. View the archived v1 documentation\n      here.\n    \n\nSkaffold …", "og:site_name": "Skaffold", "og:type": "website", "title": "Skaffold 2.0 Documentation | Skaffold", "robots": "index, follow", "ogTitle": "Skaffold 2.0 Documentation", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "generator": "Hugo 0.99.1", "og:title": "Skaffold 2.0 Documentation", "ogUrl": "https://skaffold.dev/docs/", "language": "en", "og:url": "https://skaffold.dev/docs/", "twitter:card": "summary", "scrapeId": "17e63bb3-f6bc-43fe-afff-d68a419c1bcb", "sourceURL": "https://skaffold.dev/docs", "url": "https://skaffold.dev/docs/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what Skaffold CLI Documentation is in skaffold?\n\nAssistant: Sure, I'd be happy to explain Skaffold CLI Documentation in skaffold.\n\n# Skaffold CLI Documentation\n\nThis documentation provides a comprehensive overview of the Skaffold command-line interface, including commands, options, and usage examples.Here's a quick rundown of what this is about:\n\n## Skaffold Commands\n\nSkaffold command-line interface provides the following commands:\n\nEnd-to-end pipelines:\n\n- [skaffold run](https://skaffold.dev/docs/references/cli/#skaffold-run) \\- to build & deploy once\n- [skaffold dev](https://skaffold.dev/docs/references/cli/#skaffold-dev) \\- to trigger the watch loop build & deploy workflow with cleanup on exit\n- [skaffold debug](https://skaffold.dev/docs/references/cli/#skaffold-debug) \\- to run a pipeline in debug mode\n\nPipeline building blocks for CI/CD:\n\n- [skaffold build](https://skaffold.dev/docs/references/cli/#skaffold-build) \\- to just build and tag your image(s)\n- [skaffold deploy](https://skaffold.dev/docs/references/cli/#skaffold-deploy) \\- to deploy the given image(s)\n- [skaffold delete](https://skaffold.dev/docs/references/cli/#skaffold-delete) \\- to cleanup the deployed artifacts\n- [skaffold render](https://skaffold.dev/docs/references/cli/#skaffold-render) \\- build and tag images, and output templated Kubernetes manifests\n- [skaffold apply](https://skaffold.dev/docs/references/cli/#skaffold-apply) \\- to apply hydrated manifests to a cluster\n\nGetting started with a new project:\n\n- [skaffold init](https://skaffold.dev/docs/references/cli/#skaffold-init) \\- to bootstrap Skaffold config\n- [skaffold fix](https://skaffold.dev/docs/references/cli/#skaffold-fix) \\- to upgrade from older skaffold.yaml schema version to newer skaffold.yaml schema version\n\nOther Commands:\n\n- [skaffold help](https://skaffold.dev/docs/references/cli/#skaffold-help) \\- print help\n- [skaffold version](https://skaffold.dev/docs/references/cli/#skaffold-version) \\- get Skaffold version\n- [skaffold completion](https://skaffold.dev/docs/references/cli/#skaffold-completion) \\- setup tab completion for the CLI\n- [skaffold config](https://skaffold.dev/docs/references/cli/#skaffold-config) \\- manage context specific parameters\n- [skaffold credits](https://skaffold.dev/docs/references/cli/#skaffold-credits) \\- export third party notices to given path (./skaffold-credits by default)\n- [skaffold diagnose](https://skaffold.dev/docs/references/cli/#skaffold-diagnose) \\- diagnostics of Skaffold works in your project\n- [skaffold schema](https://skaffold.dev/docs/references/cli/#skaffold-schema) \\- list and print json schemas used to validate skaffold.yaml configuration\n\n## Global Flags\n\n| Flag | Description |\n| --- | --- |\n| `-h, --help` | Prints the HELP file for the current command. |\n| `-v, --verbosity LOG-LEVEL` | Uses a specific log level. Available log levels are `info`, `warn`, `error`, `fatal`, `debug` and `trace`. Default value is `warn`. |\n\n## Global Environment Variables\n\n| Flag | Description |\n| --- | --- |\n| `SKAFFOLD_UPDATE_CHECK` | Enables checking for latest version of the Skaffold binary. By default it’s `true`. |\n\n## Skaffold Commands\n\n### skaffold\n\n```\n\nEnd-to-end Pipelines:\n  run                 Run a pipeline\n  dev                 Run a pipeline in development mode\n  debug               Run a pipeline in debug mode\n\nPipeline Building Blocks:\n  build               Build the artifacts\n  test                Run tests against your built application images\n  deploy              Deploy pre-built artifacts\n  delete              Delete any resources deployed by Skaffold\n  render              Generate rendered Kubernetes manifests\n  apply               Apply hydrated manifests to a cluster\n  verify              Run verification tests against skaffold deployments\n\nGetting Started With a New Project:\n  init                Generate configuration for deploying an application\n\nOther Commands:\n  completion          Output shell completion for the given shell (bash, fish or zsh)\n  config              Interact with the global Skaffold config file (defaults to `$HOME/.skaffold/config`)\n  diagnose            Run a diagnostic on Skaffold\n  exec                Execute a custom action\n  fix                 Update old configuration to a newer schema version\n  schema              List JSON schemas used to validate skaffold.yaml configuration\n  survey              Opens a web browser to fill out the Skaffold survey\n  version             Print the version information\n\nUse \"skaffold <command> --help\" for more information about a given command.\nUse \"skaffold options\" for a list of global command-line options (applies to all commands).\n\n```\n\nEnv vars:\n\n- `SKAFFOLD_COLOR` (same as `--color`)\n- `SKAFFOLD_INTERACTIVE` (same as `--interactive`)\n- `SKAFFOLD_TIMESTAMPS` (same as `--timestamps`)\n- `SKAFFOLD_UPDATE_CHECK` (same as `--update-check`)\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/references/cli", "title": "Skaffold CLI Documentation", "description": "This documentation provides a comprehensive overview of the Skaffold command-line interface, including commands, options, and usage examples.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 02:53:53", "type": "overview", "page_metadata": {"ogUrl": "https://skaffold.dev/docs/references/cli/", "og:site_name": "Skaffold", "og:description": "Easy and Repeatable Container & Kubernetes Development", "og:title": "CLI", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:type": "website", "og:url": "https://skaffold.dev/docs/references/cli/", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "twitter:title": "CLI", "ogTitle": "CLI", "description": "Skaffold command-line interface provides the following commands:\nEnd-to-end pipelines:\n\nskaffold run - to build & deploy once\nskaffold dev - to …", "generator": "Hugo 0.99.1", "twitter:card": "summary", "robots": "index, follow", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "language": "en", "title": "CLI | Skaffold", "ogSiteName": "Skaffold", "scrapeId": "92384c9d-4ef9-42e0-91b3-30b9fb83eca2", "sourceURL": "https://skaffold.dev/docs/references/cli", "url": "https://skaffold.dev/docs/references/cli/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I skaffold commands in skaffold?\n\nAssistant: To skaffold commands in skaffold, here's what you do:\nSkaffold command-line interface provides the following commands:\n\nEnd-to-end pipelines:\n\n- [skaffold run](https://skaffold.dev/docs/references/cli/#skaffold-run) \\- to build & deploy once\n- [skaffold dev](https://skaffold.dev/docs/references/cli/#skaffold-dev) \\- to trigger the watch loop build & deploy workflow with cleanup on exit\n- [skaffold debug](https://skaffold.dev/docs/references/cli/#skaffold-debug) \\- to run a pipeline in debug mode\n\nPipeline building blocks for CI/CD:\n\n- [skaffold build](https://skaffold.dev/docs/references/cli/#skaffold-build) \\- to just build and tag your image(s)\n- [skaffold deploy](https://skaffold.dev/docs/references/cli/#skaffold-deploy) \\- to deploy the given image(s)\n- [skaffold delete](https://skaffold.dev/docs/references/cli/#skaffold-delete) \\- to cleanup the deployed artifacts\n- [skaffold render](https://skaffold.dev/docs/references/cli/#skaffold-render) \\- build and tag images, and output templated Kubernetes manifests\n- [skaffold apply](https://skaffold.dev/docs/references/cli/#skaffold-apply) \\- to apply hydrated manifests to a cluster\n\nGetting started with a new project:\n\n- [skaffold init](https://skaffold.dev/docs/references/cli/#skaffold-init) \\- to bootstrap Skaffold config\n- [skaffold fix](https://skaffold.dev/docs/references/cli/#skaffold-fix) \\- to upgrade from older skaffold.yaml schema version to newer skaffold.yaml schema version\n\nOther Commands:\n\n- [skaffold help](https://skaffold.dev/docs/references/cli/#skaffold-help) \\- print help\n- [skaffold version](https://skaffold.dev/docs/references/cli/#skaffold-version) \\- get Skaffold version\n- [skaffold completion](https://skaffold.dev/docs/references/cli/#skaffold-completion) \\- setup tab completion for the CLI\n- [skaffold config](https://skaffold.dev/docs/references/cli/#skaffold-config) \\- manage context specific parameters\n- [skaffold credits](https://skaffold.dev/docs/references/cli/#skaffold-credits) \\- export third party notices to given path (./skaffold-credits by default)\n- [skaffold diagnose](https://skaffold.dev/docs/references/cli/#skaffold-diagnose) \\- diagnostics of Skaffold works in your project\n- [skaffold schema](https://skaffold.dev/docs/references/cli/#skaffold-schema) \\- list and print json schemas used to validate skaffold.yaml configuration.\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/cli", "title": "Skaffold CLI Documentation", "description": "This documentation provides a comprehensive overview of the Skaffold command-line interface, including commands, options, and usage examples.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 02:53:53", "type": "section_detail", "page_metadata": {"ogUrl": "https://skaffold.dev/docs/references/cli/", "og:site_name": "Skaffold", "og:description": "Easy and Repeatable Container & Kubernetes Development", "og:title": "CLI", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:type": "website", "og:url": "https://skaffold.dev/docs/references/cli/", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "twitter:title": "CLI", "ogTitle": "CLI", "description": "Skaffold command-line interface provides the following commands:\nEnd-to-end pipelines:\n\nskaffold run - to build & deploy once\nskaffold dev - to …", "generator": "Hugo 0.99.1", "twitter:card": "summary", "robots": "index, follow", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "language": "en", "title": "CLI | Skaffold", "ogSiteName": "Skaffold", "scrapeId": "92384c9d-4ef9-42e0-91b3-30b9fb83eca2", "sourceURL": "https://skaffold.dev/docs/references/cli", "url": "https://skaffold.dev/docs/references/cli/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I global flags in skaffold?\n\nAssistant: To global flags in skaffold, here's what you do:\n| Flag | Description |\n| --- | --- |\n| `-h, --help` | Prints the HELP file for the current command. |\n| `-v, --verbosity LOG-LEVEL` | Uses a specific log level. Available log levels are `info`, `warn`, `error`, `fatal`, `debug` and `trace`. Default value is `warn`. |.\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/cli", "title": "Skaffold CLI Documentation", "description": "This documentation provides a comprehensive overview of the Skaffold command-line interface, including commands, options, and usage examples.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 02:53:53", "type": "section_detail", "page_metadata": {"ogUrl": "https://skaffold.dev/docs/references/cli/", "og:site_name": "Skaffold", "og:description": "Easy and Repeatable Container & Kubernetes Development", "og:title": "CLI", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:type": "website", "og:url": "https://skaffold.dev/docs/references/cli/", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "twitter:title": "CLI", "ogTitle": "CLI", "description": "Skaffold command-line interface provides the following commands:\nEnd-to-end pipelines:\n\nskaffold run - to build & deploy once\nskaffold dev - to …", "generator": "Hugo 0.99.1", "twitter:card": "summary", "robots": "index, follow", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "language": "en", "title": "CLI | Skaffold", "ogSiteName": "Skaffold", "scrapeId": "92384c9d-4ef9-42e0-91b3-30b9fb83eca2", "sourceURL": "https://skaffold.dev/docs/references/cli", "url": "https://skaffold.dev/docs/references/cli/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I global environment variables in skaffold?\n\nAssistant: To global environment variables in skaffold, here's what you do:\n| Flag | Description |\n| --- | --- |\n| `SKAFFOLD_UPDATE_CHECK` | Enables checking for latest version of the Skaffold binary. By default it’s `true`. |.\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/cli", "title": "Skaffold CLI Documentation", "description": "This documentation provides a comprehensive overview of the Skaffold command-line interface, including commands, options, and usage examples.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 02:53:53", "type": "section_detail", "page_metadata": {"ogUrl": "https://skaffold.dev/docs/references/cli/", "og:site_name": "Skaffold", "og:description": "Easy and Repeatable Container & Kubernetes Development", "og:title": "CLI", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:type": "website", "og:url": "https://skaffold.dev/docs/references/cli/", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "twitter:title": "CLI", "ogTitle": "CLI", "description": "Skaffold command-line interface provides the following commands:\nEnd-to-end pipelines:\n\nskaffold run - to build & deploy once\nskaffold dev - to …", "generator": "Hugo 0.99.1", "twitter:card": "summary", "robots": "index, follow", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "language": "en", "title": "CLI | Skaffold", "ogSiteName": "Skaffold", "scrapeId": "92384c9d-4ef9-42e0-91b3-30b9fb83eca2", "sourceURL": "https://skaffold.dev/docs/references/cli", "url": "https://skaffold.dev/docs/references/cli/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I skaffold commands in skaffold?\n\nAssistant: To skaffold commands in skaffold, here's what you do:\n### skaffold\n\n```\n\nEnd-to-end Pipelines:\n  run                 Run a pipeline\n  dev                 Run a pipeline in development mode\n  debug               Run a pipeline in debug mode\n\nPipeline Building Blocks:\n  build               Build the artifacts\n  test                Run tests against your built application images\n  deploy              Deploy pre-built artifacts\n  delete              Delete any resources deployed by Skaffold\n  render              Generate rendered Kubernetes manifests\n  apply               Apply hydrated manifests to a cluster\n  verify              Run verification tests against skaffold deployments\n\nGetting Started With a New Project:\n  init                Generate configuration for deploying an application\n\nOther Commands:\n  completion          Output shell completion for the given shell (bash, fish or zsh)\n  config              Interact with the global Skaffold config file (defaults to `$HOME/.skaffold/config`)\n  diagnose            Run a diagnostic on Skaffold\n  exec                Execute a custom action\n  fix                 Update old configuration to a newer schema version\n  schema              List JSON schemas used to validate skaffold.yaml configuration\n  survey              Opens a web browser to fill out the Skaffold survey\n  version             Print the version information\n\nUse \"skaffold <command> --help\" for more information about a given command.\nUse \"skaffold options\" for a list of global command-line options (applies to all commands).\n\n```\n\nEnv vars:\n\n- `SKAFFOLD_COLOR` (same as `--color`)\n- `SKAFFOLD_INTERACTIVE` (same as `--interactive`)\n- `SKAFFOLD_TIMESTAMPS` (same as `--timestamps`)\n- `SKAFFOLD_UPDATE_CHECK` (same as `--update-check`).\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/cli", "title": "Skaffold CLI Documentation", "description": "This documentation provides a comprehensive overview of the Skaffold command-line interface, including commands, options, and usage examples.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 02:53:53", "type": "section_detail", "page_metadata": {"ogUrl": "https://skaffold.dev/docs/references/cli/", "og:site_name": "Skaffold", "og:description": "Easy and Repeatable Container & Kubernetes Development", "og:title": "CLI", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:type": "website", "og:url": "https://skaffold.dev/docs/references/cli/", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "twitter:title": "CLI", "ogTitle": "CLI", "description": "Skaffold command-line interface provides the following commands:\nEnd-to-end pipelines:\n\nskaffold run - to build & deploy once\nskaffold dev - to …", "generator": "Hugo 0.99.1", "twitter:card": "summary", "robots": "index, follow", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "language": "en", "title": "CLI | Skaffold", "ogSiteName": "Skaffold", "scrapeId": "92384c9d-4ef9-42e0-91b3-30b9fb83eca2", "sourceURL": "https://skaffold.dev/docs/references/cli", "url": "https://skaffold.dev/docs/references/cli/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you give me some code examples for Skaffold CLI Documentation in skaffold?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**skaffold apply**:\n\n```yaml\nApply hydrated manifests to a cluster\n\n```\nExamples:\n  # Hydrate Kubernetes pod manifest first\n  skaffold render --output rendered-pod.yaml\n\n  # Then create resources on your cluster from that hydrated manifest\n  skaffold apply rendered-pod.yaml\n\nOptions:\n    --assume-yes=false:\n\tIf true, skaffold will skip yes/no confirmation from the user and default to yes\n\n    --cloud-run-location='':\n\tThe GCP Region to deploy Cloud Run services to\n\n    --cloud-run-project='':\n\tThe GCP Project ID or Project Number to deploy for Cloud Run\n\n    -c, --config='':\n\tFile for global configurations (defaults to $HOME/.skaffold/config)\n\n    -f, --filename='skaffold.yaml':\n\tPath or URL to the Skaffold config file\n\n    --force=false:\n\tRecreate Kubernetes resources if necessary for deployment, warning: might cause downtime!\n\n    --iterative-status-check=true:\n\tRun `status-check` iteratively after each deploy step, instead of all-together at the end of all deploys (default).\n\n    --kube-context='':\n\tDeploy to this Kubernetes context\n\n    --kubeconfig='':\n\tPath to the kubeconfig file to use for CLI requests.\n\n    -l, --label=[]:\n\tAdd custom labels to deployed objects. Set multiple times for multiple labels\n\n    -m, --module=[]:\n\tFilter Skaffold configs to only the provided named modules\n\n    -n, --namespace='':\n\tRuns deployments in the specified namespace. When used with 'render' command, renders manifests contain the namespace\n\n    -p, --profile=[]:\n\tActivate profiles by name (prefixed with `-` to disable a profile)\n\n    --remote-cache-dir='':\n\tSpecify the location of the remote cache (default $HOME/.skaffold/remote-cache)\n\n    --rpc-http-port=:\n\ttcp port to expose the Skaffold API over HTTP REST\n\n    --rpc-port=:\n\ttcp port to expose the Skaffold API over gRPC\n\n    --status-check=:\n\tWait for deployed resources to stabilize\n\n    --status-check-selectors='':\n\tFile containing resource selectors for kubernetes resources status check. A sample file looks like the following: {   \"selectors\":[     {       \"group\":\"my.domain\",       \"kind\":\"MyCRD\"     }     ] } The values of \"group\" and \"kind\" are regular expressions.\n\n    --sync-remote-cache='always':\n\tControls how Skaffold manages the remote config cache (see `remote-cache-dir`). One of `always` (default), `missing`, or `never`. `always` syncs remote repositories to latest on access. `missing` only clones remote repositories if they do not exist locally. `never` means the user takes responsibility for updating remote repositories.\n\n    --tail=false:\n\tStream logs from deployed objects\n\n    --tolerate-failures-until-deadline=false:\n\tConfigures `status-check` to tolerate failures until Skaffold's statusCheckDeadline duration or the deployments progressDeadlineSeconds  Otherwise deployment failures skaffold encounters will immediately fail the deployment.  Defaults to 'false'\n\n    --wait-for-connection=false:\n\tBlocks ending execution of skaffold until the /v2/events gRPC/HTTP endpoint is hit\n\nUsage:\n  skaffold apply [options]\n\nUse \"skaffold options\" for a list of global command-line options (applies to all commands).\n\n```\n\nEnv vars:\n\n- `SKAFFOLD_ASSUME_YES` (same as `--assume-yes`)\n- `SKAFFOLD_CLOUD_RUN_LOCATION` (same as `--cloud-run-location`)\n- `SKAFFOLD_CLOUD_RUN_PROJECT` (same as `--cloud-run-project`)\n- `SKAFFOLD_CONFIG` (same as `--config`)\n- `SKAFFOLD_DEFAULT_REPO` (same as `--default-repo`)\n- `SKAFFOLD_DETECT_MINIKUBE` (same as `--detect-minikube`)\n- `SKAFFOLD_DRY_RUN` (same as `--dry-run`)\n- `SKAFFOLD_FILENAME` (same as `--filename`)\n- `SKAFFOLD_KUBE_CONTEXT` (same as `--kube-context`)\n- `SKAFFOLD_KUBECONFIG` (same as `--kubeconfig`)\n- `SKAFFOLD_MODULE` (same as `--module`)\n- `SKAFFOLD_NAMESPACE` (same as `--namespace`)\n- `SKAFFOLD_PROFILE` (same as `--profile`)\n- `SKAFFOLD_PROFILE_AUTO_ACTIVATION` (same as `--profile-auto-activation`)\n- `SKAFFOLD_PROPAGATE_PROFILES` (same as `--propagate-profiles`)\n- `SKAFFOLD_REMOTE_CACHE_DIR` (same as `--remote-cache-dir`)\n- `SKAFFOLD_SYNC_REMOTE_CACHE` (same as `--sync-remote-cache`)\n```\n\nThis snippet shows you how to skaffold apply, which is an important aspect of skaffold cli documentation.\n\n", "metadata": {"source_url": "https://skaffold.dev/docs/references/cli", "title": "Skaffold CLI Documentation", "description": "This documentation provides a comprehensive overview of the Skaffold command-line interface, including commands, options, and usage examples.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 02:53:53", "type": "code_examples", "page_metadata": {"ogUrl": "https://skaffold.dev/docs/references/cli/", "og:site_name": "Skaffold", "og:description": "Easy and Repeatable Container & Kubernetes Development", "og:title": "CLI", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:type": "website", "og:url": "https://skaffold.dev/docs/references/cli/", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "twitter:title": "CLI", "ogTitle": "CLI", "description": "Skaffold command-line interface provides the following commands:\nEnd-to-end pipelines:\n\nskaffold run - to build & deploy once\nskaffold dev - to …", "generator": "Hugo 0.99.1", "twitter:card": "summary", "robots": "index, follow", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "language": "en", "title": "CLI | Skaffold", "ogSiteName": "Skaffold", "scrapeId": "92384c9d-4ef9-42e0-91b3-30b9fb83eca2", "sourceURL": "https://skaffold.dev/docs/references/cli", "url": "https://skaffold.dev/docs/references/cli/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: What are some tips for using Skaffold CLI Documentation in skaffold effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nUse `skaffold dev` for a continuous development workflow that automatically rebuilds and redeploys your application on code changes.\n\nUtilize `skaffold build` to create images without deploying them, which is useful for testing builds separately.\n\nLeverage the `--dry-run` option to preview the actions that Skaffold will take without making any changes.\n\nAlways check the Skaffold version with `skaffold version` to ensure compatibility with your project.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://skaffold.dev/docs/references/cli", "title": "Skaffold CLI Documentation", "description": "This documentation provides a comprehensive overview of the Skaffold command-line interface, including commands, options, and usage examples.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 02:53:53", "type": "best_practices", "page_metadata": {"ogUrl": "https://skaffold.dev/docs/references/cli/", "og:site_name": "Skaffold", "og:description": "Easy and Repeatable Container & Kubernetes Development", "og:title": "CLI", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:type": "website", "og:url": "https://skaffold.dev/docs/references/cli/", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "twitter:title": "CLI", "ogTitle": "CLI", "description": "Skaffold command-line interface provides the following commands:\nEnd-to-end pipelines:\n\nskaffold run - to build & deploy once\nskaffold dev - to …", "generator": "Hugo 0.99.1", "twitter:card": "summary", "robots": "index, follow", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "language": "en", "title": "CLI | Skaffold", "ogSiteName": "Skaffold", "scrapeId": "92384c9d-4ef9-42e0-91b3-30b9fb83eca2", "sourceURL": "https://skaffold.dev/docs/references/cli", "url": "https://skaffold.dev/docs/references/cli/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what Builder types is in skaffold?\n\nAssistant: Sure, I'd be happy to explain Builder types in skaffold.\n\n# Builder types\n\nSkaffold supports various builder types for building container images.Here's a quick rundown of what this is about:\n\n## Supported Builder Types\n\nSkaffold supports the following builder types:\n\n- [Docker](https://skaffold.dev/docs/builders/builder-types/docker/)\n- [Jib](https://skaffold.dev/docs/builders/builder-types/jib/)\n- [Bazel](https://skaffold.dev/docs/builders/builder-types/bazel/)\n- [Custom build script](https://skaffold.dev/docs/builders/builder-types/custom/)\n- [ko](https://skaffold.dev/docs/builders/builder-types/ko/)\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/builders/builder-types", "title": "Builder types", "description": "Skaffold supports various builder types for building container images.", "has_code_examples": false, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 02:54:15", "type": "overview", "page_metadata": {"twitter:title": "Builder types", "title": "Builder types | Skaffold", "og:site_name": "Skaffold", "ogUrl": "https://skaffold.dev/docs/builders/builder-types/", "ogSiteName": "Skaffold", "og:description": "Easy and Repeatable Container & Kubernetes Development", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "twitter:card": "summary", "og:type": "website", "generator": "Hugo 0.99.1", "language": "en", "ogTitle": "Builder types", "robots": "index, follow", "og:url": "https://skaffold.dev/docs/builders/builder-types/", "description": "Skaffold supports the following builder types:\n\nDocker\nJib\nBazel\nCustom build script\nko\n\n", "og:title": "Builder types", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "scrapeId": "945dbed9-4251-4a18-a7d0-ab0ee6e78a3a", "sourceURL": "https://skaffold.dev/docs/builders/builder-types", "url": "https://skaffold.dev/docs/builders/builder-types/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I supported builder types in skaffold?\n\nAssistant: To supported builder types in skaffold, here's what you do:\nSkaffold supports the following builder types:\n\n- [Docker](https://skaffold.dev/docs/builders/builder-types/docker/)\n- [Jib](https://skaffold.dev/docs/builders/builder-types/jib/)\n- [Bazel](https://skaffold.dev/docs/builders/builder-types/bazel/)\n- [Custom build script](https://skaffold.dev/docs/builders/builder-types/custom/)\n- [ko](https://skaffold.dev/docs/builders/builder-types/ko/).\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/builders/builder-types", "title": "Builder types", "description": "Skaffold supports various builder types for building container images.", "has_code_examples": false, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 02:54:15", "type": "section_detail", "page_metadata": {"twitter:title": "Builder types", "title": "Builder types | Skaffold", "og:site_name": "Skaffold", "ogUrl": "https://skaffold.dev/docs/builders/builder-types/", "ogSiteName": "Skaffold", "og:description": "Easy and Repeatable Container & Kubernetes Development", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "twitter:card": "summary", "og:type": "website", "generator": "Hugo 0.99.1", "language": "en", "ogTitle": "Builder types", "robots": "index, follow", "og:url": "https://skaffold.dev/docs/builders/builder-types/", "description": "Skaffold supports the following builder types:\n\nDocker\nJib\nBazel\nCustom build script\nko\n\n", "og:title": "Builder types", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "scrapeId": "945dbed9-4251-4a18-a7d0-ab0ee6e78a3a", "sourceURL": "https://skaffold.dev/docs/builders/builder-types", "url": "https://skaffold.dev/docs/builders/builder-types/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: What are some tips for using Builder types in skaffold effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nEnsure to choose the appropriate builder type based on your project requirements.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://skaffold.dev/docs/builders/builder-types", "title": "Builder types", "description": "Skaffold supports various builder types for building container images.", "has_code_examples": false, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 02:54:15", "type": "best_practices", "page_metadata": {"twitter:title": "Builder types", "title": "Builder types | Skaffold", "og:site_name": "Skaffold", "ogUrl": "https://skaffold.dev/docs/builders/builder-types/", "ogSiteName": "Skaffold", "og:description": "Easy and Repeatable Container & Kubernetes Development", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "twitter:card": "summary", "og:type": "website", "generator": "Hugo 0.99.1", "language": "en", "ogTitle": "Builder types", "robots": "index, follow", "og:url": "https://skaffold.dev/docs/builders/builder-types/", "description": "Skaffold supports the following builder types:\n\nDocker\nJib\nBazel\nCustom build script\nko\n\n", "og:title": "Builder types", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "scrapeId": "945dbed9-4251-4a18-a7d0-ab0ee6e78a3a", "sourceURL": "https://skaffold.dev/docs/builders/builder-types", "url": "https://skaffold.dev/docs/builders/builder-types/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what Getting Started With Your Project is in skaffold?\n\nAssistant: Sure, I'd be happy to explain Getting Started With Your Project in skaffold.\n\n# Getting Started With Your Project\n\nSkaffold requires a skaffold.yaml, but for supported projects, Skaffold can generate a simple config for you that you can get started with.Here's a quick rundown of what this is about:\n\n## Getting Started\n\nSkaffold requires a `skaffold.yaml`, but - for supported projects - Skaffold can generate a simple config for you that you can get started with. To configure Skaffold for your application you can run [`skaffold init`](https://skaffold.dev/docs/init/).\n\nRunning [`skaffold init`](https://skaffold.dev/docs/init/) at the root of your project directory will walk you through a wizard and create a `skaffold.yaml` that defines how your project is built and deployed.\n\n## What’s next\n\nYou can further set up [File Sync](https://skaffold.dev/docs/filesync/) for source files that do not need a rebuild in [dev mode](https://skaffold.dev/docs/workflows/dev/).\n\nSkaffold automatically forwards Kubernetes Services in [dev mode](https://skaffold.dev/docs/workflows/dev/) if you run it with `--port-forward`. If your project contains resources other than services, you can set-up [port-forwarding](https://skaffold.dev/docs/port-forwarding/) to port-forward these resources in [`dev`](https://skaffold.dev/docs/workflows/dev/) or [`debug`](https://skaffold.dev/docs/workflows/debug/) mode.\n\nFor more understanding on how init works, see [`skaffold init`](https://skaffold.dev/docs/init/).\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/workflows/getting-started-with-your-project", "title": "Getting Started With Your Project", "description": "Skaffold requires a skaffold.yaml, but for supported projects, Skaffold can generate a simple config for you that you can get started with.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 02:58:40", "type": "overview", "page_metadata": {"robots": "index, follow", "ogUrl": "https://skaffold.dev/docs/workflows/getting-started-with-your-project/", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "twitter:card": "summary", "og:site_name": "Skaffold", "modifiedTime": "2025-01-23T10:14:58-05:00", "language": "en", "ogSiteName": "Skaffold", "description": "Skaffold requires a skaffold.yaml, but - for supported projects - Skaffold can\ngenerate a simple config for you that you can get started with. To …", "og:url": "https://skaffold.dev/docs/workflows/getting-started-with-your-project/", "twitter:title": "Getting Started With Your Project", "og:title": "Getting Started With Your Project", "title": "Getting Started With Your Project | Skaffold", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:type": "article", "ogTitle": "Getting Started With Your Project", "article:section": "docs", "article:modified_time": "2025-01-23T10:14:58-05:00", "ogDescription": "Skaffold requires a skaffold.yaml, but - for supported projects - Skaffold can generate a simple config for you that you can get started with. To configure Skaffold for your application you can run skaffold init.\nRunning skaffold init at the root of your project directory will walk you through a wizard and create a skaffold.yaml that defines how your project is built and deployed.\nskaffold init What’s next You can further set up File Sync for source files that do not need a rebuild in dev mode.", "generator": "Hugo 0.99.1", "twitter:description": "Skaffold requires a skaffold.yaml, but - for supported projects - Skaffold can generate a simple config for you that you can get started with. To configure Skaffold for your application you can run skaffold init.\nRunning skaffold init at the root of your project directory will walk you through a wizard and create a skaffold.yaml that defines how your project is built and deployed.\nskaffold init What’s next You can further set up File Sync for source files that do not need a rebuild in dev mode.", "og:description": "Skaffold requires a skaffold.yaml, but - for supported projects - Skaffold can generate a simple config for you that you can get started with. To configure Skaffold for your application you can run skaffold init.\nRunning skaffold init at the root of your project directory will walk you through a wizard and create a skaffold.yaml that defines how your project is built and deployed.\nskaffold init What’s next You can further set up File Sync for source files that do not need a rebuild in dev mode.", "scrapeId": "87973b7e-ab74-4d96-9270-2263e058ea84", "sourceURL": "https://skaffold.dev/docs/workflows/getting-started-with-your-project", "url": "https://skaffold.dev/docs/workflows/getting-started-with-your-project/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I getting started in skaffold?\n\nAssistant: To getting started in skaffold, here's what you do:\nSkaffold requires a `skaffold.yaml`, but - for supported projects - Skaffold can generate a simple config for you that you can get started with. To configure Skaffold for your application you can run [`skaffold init`](https://skaffold.dev/docs/init/).\n\nRunning [`skaffold init`](https://skaffold.dev/docs/init/) at the root of your project directory will walk you through a wizard and create a `skaffold.yaml` that defines how your project is built and deployed..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/workflows/getting-started-with-your-project", "title": "Getting Started With Your Project", "description": "Skaffold requires a skaffold.yaml, but for supported projects, Skaffold can generate a simple config for you that you can get started with.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 02:58:40", "type": "section_detail", "page_metadata": {"robots": "index, follow", "ogUrl": "https://skaffold.dev/docs/workflows/getting-started-with-your-project/", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "twitter:card": "summary", "og:site_name": "Skaffold", "modifiedTime": "2025-01-23T10:14:58-05:00", "language": "en", "ogSiteName": "Skaffold", "description": "Skaffold requires a skaffold.yaml, but - for supported projects - Skaffold can\ngenerate a simple config for you that you can get started with. To …", "og:url": "https://skaffold.dev/docs/workflows/getting-started-with-your-project/", "twitter:title": "Getting Started With Your Project", "og:title": "Getting Started With Your Project", "title": "Getting Started With Your Project | Skaffold", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:type": "article", "ogTitle": "Getting Started With Your Project", "article:section": "docs", "article:modified_time": "2025-01-23T10:14:58-05:00", "ogDescription": "Skaffold requires a skaffold.yaml, but - for supported projects - Skaffold can generate a simple config for you that you can get started with. To configure Skaffold for your application you can run skaffold init.\nRunning skaffold init at the root of your project directory will walk you through a wizard and create a skaffold.yaml that defines how your project is built and deployed.\nskaffold init What’s next You can further set up File Sync for source files that do not need a rebuild in dev mode.", "generator": "Hugo 0.99.1", "twitter:description": "Skaffold requires a skaffold.yaml, but - for supported projects - Skaffold can generate a simple config for you that you can get started with. To configure Skaffold for your application you can run skaffold init.\nRunning skaffold init at the root of your project directory will walk you through a wizard and create a skaffold.yaml that defines how your project is built and deployed.\nskaffold init What’s next You can further set up File Sync for source files that do not need a rebuild in dev mode.", "og:description": "Skaffold requires a skaffold.yaml, but - for supported projects - Skaffold can generate a simple config for you that you can get started with. To configure Skaffold for your application you can run skaffold init.\nRunning skaffold init at the root of your project directory will walk you through a wizard and create a skaffold.yaml that defines how your project is built and deployed.\nskaffold init What’s next You can further set up File Sync for source files that do not need a rebuild in dev mode.", "scrapeId": "87973b7e-ab74-4d96-9270-2263e058ea84", "sourceURL": "https://skaffold.dev/docs/workflows/getting-started-with-your-project", "url": "https://skaffold.dev/docs/workflows/getting-started-with-your-project/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I what’s next in skaffold?\n\nAssistant: To what’s next in skaffold, here's what you do:\nYou can further set up [File Sync](https://skaffold.dev/docs/filesync/) for source files that do not need a rebuild in [dev mode](https://skaffold.dev/docs/workflows/dev/).\n\nSkaffold automatically forwards Kubernetes Services in [dev mode](https://skaffold.dev/docs/workflows/dev/) if you run it with `--port-forward`. If your project contains resources other than services, you can set-up [port-forwarding](https://skaffold.dev/docs/port-forwarding/) to port-forward these resources in [`dev`](https://skaffold.dev/docs/workflows/dev/) or [`debug`](https://skaffold.dev/docs/workflows/debug/) mode.\n\nFor more understanding on how init works, see [`skaffold init`](https://skaffold.dev/docs/init/)..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/workflows/getting-started-with-your-project", "title": "Getting Started With Your Project", "description": "Skaffold requires a skaffold.yaml, but for supported projects, Skaffold can generate a simple config for you that you can get started with.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 02:58:40", "type": "section_detail", "page_metadata": {"robots": "index, follow", "ogUrl": "https://skaffold.dev/docs/workflows/getting-started-with-your-project/", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "twitter:card": "summary", "og:site_name": "Skaffold", "modifiedTime": "2025-01-23T10:14:58-05:00", "language": "en", "ogSiteName": "Skaffold", "description": "Skaffold requires a skaffold.yaml, but - for supported projects - Skaffold can\ngenerate a simple config for you that you can get started with. To …", "og:url": "https://skaffold.dev/docs/workflows/getting-started-with-your-project/", "twitter:title": "Getting Started With Your Project", "og:title": "Getting Started With Your Project", "title": "Getting Started With Your Project | Skaffold", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:type": "article", "ogTitle": "Getting Started With Your Project", "article:section": "docs", "article:modified_time": "2025-01-23T10:14:58-05:00", "ogDescription": "Skaffold requires a skaffold.yaml, but - for supported projects - Skaffold can generate a simple config for you that you can get started with. To configure Skaffold for your application you can run skaffold init.\nRunning skaffold init at the root of your project directory will walk you through a wizard and create a skaffold.yaml that defines how your project is built and deployed.\nskaffold init What’s next You can further set up File Sync for source files that do not need a rebuild in dev mode.", "generator": "Hugo 0.99.1", "twitter:description": "Skaffold requires a skaffold.yaml, but - for supported projects - Skaffold can generate a simple config for you that you can get started with. To configure Skaffold for your application you can run skaffold init.\nRunning skaffold init at the root of your project directory will walk you through a wizard and create a skaffold.yaml that defines how your project is built and deployed.\nskaffold init What’s next You can further set up File Sync for source files that do not need a rebuild in dev mode.", "og:description": "Skaffold requires a skaffold.yaml, but - for supported projects - Skaffold can generate a simple config for you that you can get started with. To configure Skaffold for your application you can run skaffold init.\nRunning skaffold init at the root of your project directory will walk you through a wizard and create a skaffold.yaml that defines how your project is built and deployed.\nskaffold init What’s next You can further set up File Sync for source files that do not need a rebuild in dev mode.", "scrapeId": "87973b7e-ab74-4d96-9270-2263e058ea84", "sourceURL": "https://skaffold.dev/docs/workflows/getting-started-with-your-project", "url": "https://skaffold.dev/docs/workflows/getting-started-with-your-project/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you give me some code examples for Getting Started With Your Project in skaffold?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Skaffold Init Command**:\n\n```yaml\nskaffold init\n```\n\nThis snippet shows you how to skaffold init command, which is an important aspect of getting started with your project.\n\n", "metadata": {"source_url": "https://skaffold.dev/docs/workflows/getting-started-with-your-project", "title": "Getting Started With Your Project", "description": "Skaffold requires a skaffold.yaml, but for supported projects, Skaffold can generate a simple config for you that you can get started with.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 02:58:40", "type": "code_examples", "page_metadata": {"robots": "index, follow", "ogUrl": "https://skaffold.dev/docs/workflows/getting-started-with-your-project/", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "twitter:card": "summary", "og:site_name": "Skaffold", "modifiedTime": "2025-01-23T10:14:58-05:00", "language": "en", "ogSiteName": "Skaffold", "description": "Skaffold requires a skaffold.yaml, but - for supported projects - Skaffold can\ngenerate a simple config for you that you can get started with. To …", "og:url": "https://skaffold.dev/docs/workflows/getting-started-with-your-project/", "twitter:title": "Getting Started With Your Project", "og:title": "Getting Started With Your Project", "title": "Getting Started With Your Project | Skaffold", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:type": "article", "ogTitle": "Getting Started With Your Project", "article:section": "docs", "article:modified_time": "2025-01-23T10:14:58-05:00", "ogDescription": "Skaffold requires a skaffold.yaml, but - for supported projects - Skaffold can generate a simple config for you that you can get started with. To configure Skaffold for your application you can run skaffold init.\nRunning skaffold init at the root of your project directory will walk you through a wizard and create a skaffold.yaml that defines how your project is built and deployed.\nskaffold init What’s next You can further set up File Sync for source files that do not need a rebuild in dev mode.", "generator": "Hugo 0.99.1", "twitter:description": "Skaffold requires a skaffold.yaml, but - for supported projects - Skaffold can generate a simple config for you that you can get started with. To configure Skaffold for your application you can run skaffold init.\nRunning skaffold init at the root of your project directory will walk you through a wizard and create a skaffold.yaml that defines how your project is built and deployed.\nskaffold init What’s next You can further set up File Sync for source files that do not need a rebuild in dev mode.", "og:description": "Skaffold requires a skaffold.yaml, but - for supported projects - Skaffold can generate a simple config for you that you can get started with. To configure Skaffold for your application you can run skaffold init.\nRunning skaffold init at the root of your project directory will walk you through a wizard and create a skaffold.yaml that defines how your project is built and deployed.\nskaffold init What’s next You can further set up File Sync for source files that do not need a rebuild in dev mode.", "scrapeId": "87973b7e-ab74-4d96-9270-2263e058ea84", "sourceURL": "https://skaffold.dev/docs/workflows/getting-started-with-your-project", "url": "https://skaffold.dev/docs/workflows/getting-started-with-your-project/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: What are some tips for using Getting Started With Your Project in skaffold effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nRun `skaffold init` at the root of your project directory to create a `skaffold.yaml`.\n\nSet up File Sync for source files that do not need a rebuild in dev mode.\n\nUse `--port-forward` to automatically forward Kubernetes Services in dev mode.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://skaffold.dev/docs/workflows/getting-started-with-your-project", "title": "Getting Started With Your Project", "description": "Skaffold requires a skaffold.yaml, but for supported projects, Skaffold can generate a simple config for you that you can get started with.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 02:58:40", "type": "best_practices", "page_metadata": {"robots": "index, follow", "ogUrl": "https://skaffold.dev/docs/workflows/getting-started-with-your-project/", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "twitter:card": "summary", "og:site_name": "Skaffold", "modifiedTime": "2025-01-23T10:14:58-05:00", "language": "en", "ogSiteName": "Skaffold", "description": "Skaffold requires a skaffold.yaml, but - for supported projects - Skaffold can\ngenerate a simple config for you that you can get started with. To …", "og:url": "https://skaffold.dev/docs/workflows/getting-started-with-your-project/", "twitter:title": "Getting Started With Your Project", "og:title": "Getting Started With Your Project", "title": "Getting Started With Your Project | Skaffold", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:type": "article", "ogTitle": "Getting Started With Your Project", "article:section": "docs", "article:modified_time": "2025-01-23T10:14:58-05:00", "ogDescription": "Skaffold requires a skaffold.yaml, but - for supported projects - Skaffold can generate a simple config for you that you can get started with. To configure Skaffold for your application you can run skaffold init.\nRunning skaffold init at the root of your project directory will walk you through a wizard and create a skaffold.yaml that defines how your project is built and deployed.\nskaffold init What’s next You can further set up File Sync for source files that do not need a rebuild in dev mode.", "generator": "Hugo 0.99.1", "twitter:description": "Skaffold requires a skaffold.yaml, but - for supported projects - Skaffold can generate a simple config for you that you can get started with. To configure Skaffold for your application you can run skaffold init.\nRunning skaffold init at the root of your project directory will walk you through a wizard and create a skaffold.yaml that defines how your project is built and deployed.\nskaffold init What’s next You can further set up File Sync for source files that do not need a rebuild in dev mode.", "og:description": "Skaffold requires a skaffold.yaml, but - for supported projects - Skaffold can generate a simple config for you that you can get started with. To configure Skaffold for your application you can run skaffold init.\nRunning skaffold init at the root of your project directory will walk you through a wizard and create a skaffold.yaml that defines how your project is built and deployed.\nskaffold init What’s next You can further set up File Sync for source files that do not need a rebuild in dev mode.", "scrapeId": "87973b7e-ab74-4d96-9270-2263e058ea84", "sourceURL": "https://skaffold.dev/docs/workflows/getting-started-with-your-project", "url": "https://skaffold.dev/docs/workflows/getting-started-with-your-project/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what Installing Skaffold is in skaffold?\n\nAssistant: Sure, I'd be happy to explain Installing Skaffold in skaffold.\n\n# Installing Skaffold\n\nThis page provides instructions on how to install Skaffold on various platforms and through different methods.Here's a quick rundown of what this is about:\n\n## Note\n\nTo keep Skaffold up to date, update checks are made to Google servers to see if a new version of Skaffold is available.\n\nYou can turn this update check off by following [these instructions](https://skaffold.dev/docs/references/privacy/#update-check).\n\nTo help prioritize features and work on improving Skaffold, we collect anonymized Skaffold usage data.\nYou can opt out of data collection by following [these instructions](https://skaffold.dev/docs/resources/telemetry/).\n\nYour use of this software is subject to the [Google Privacy Policy](https://policies.google.com/privacy).\n\n## Managed IDE\n\n- [CLOUD CODE](https://skaffold.dev/docs/install/#)\n- [GOOGLE CLOUD SHELL](https://skaffold.dev/docs/install/#)\n\n[Cloud Code](https://cloud.google.com/code) provides a managed experience of using Skaffold in supported IDEs. You can install the `Cloud Code` extension for [Visual Studio Code](https://skaffold.dev/docs/install/%5Bhttps://cloud.google.com/code/docs/vscode/quickstart-k8s#installing%5D(https://cloud.google.com/code/docs/vscode/install#installing)) or the plugin for [JetBrains IDEs](https://cloud.google.com/code/docs/intellij/quickstart-k8s#installing_the_plugin). It manages and keeps Skaffold up-to-date, along with other common dependencies, and works with any kubernetes cluster.\n\nGoogle Cloud Platform’s [_Cloud Shell_](http://cloud.google.com/shell) provides a free [browser-based terminal/CLI and editor](https://cloud.google.com/shell#product-demo) with Skaffold, Minikube, and Docker pre-installed. (Requires a [Google Account](https://accounts.google.com/SignUp).)\n\nCloud Shell is a great way to try Skaffold out.\n\n[![Open in Cloud Shell](https://gstatic.com/cloudssh/images/open-btn.svg)](https://ssh.cloud.google.com/cloudshell/editor?shellonly=true&cloudshell_git_repo=https%3A%2F%2Fgithub.com%2FGoogleContainerTools%2Fskaffold&cloudshell_working_dir=examples%2Fgetting-started)\n\n## Standalone binary\n\n- [LINUX](https://skaffold.dev/docs/install/#)\n- [MACOS](https://skaffold.dev/docs/install/#)\n- [WINDOWS](https://skaffold.dev/docs/install/#)\n- [GCLOUD](https://skaffold.dev/docs/install/#)\n- [DOCKER](https://skaffold.dev/docs/install/#)\n\nThe latest **stable** binaries can be found here:\n\n- Linux x86_64 (amd64): [https://storage.googleapis.com/skaffold/releases/latest/skaffold-linux-amd64](https://storage.googleapis.com/skaffold/releases/latest/skaffold-linux-amd64)\n- Linux ARMv8 (arm64): [https://storage.googleapis.com/skaffold/releases/latest/skaffold-linux-arm64](https://storage.googleapis.com/skaffold/releases/latest/skaffold-linux-arm64)\n\nSimply download the appropriate binary and add it to your `PATH`. Or, copy+paste one of the following commands in your terminal:\n\n```bash\n# For Linux x86_64 (amd64)\ncurl -Lo skaffold https://storage.googleapis.com/skaffold/releases/latest/skaffold-linux-amd64 && \nsudo install skaffold /usr/local/bin/\n\n```\n\n```bash\n# For Linux ARMv8 (arm64)\ncurl -Lo skaffold https://storage.googleapis.com/skaffold/releases/latest/skaffold-linux-arm64 && \nsudo install skaffold /usr/local/bin/\n\n```\n\nWe also release a **bleeding edge** build, built from the latest commit:\n\n- Linux x86_64 (amd64): [https://storage.googleapis.com/skaffold/builds/latest/skaffold-linux-amd64](https://storage.googleapis.com/skaffold/builds/latest/skaffold-linux-amd64)\n- Linux ARMv8 (arm64): [https://storage.googleapis.com/skaffold/builds/latest/skaffold-linux-arm64](https://storage.googleapis.com/skaffold/builds/latest/skaffold-linux-arm64)\n\n```bash\n# For Linux on x86_64 (amd64)\ncurl -Lo skaffold https://storage.googleapis.com/skaffold/builds/latest/skaffold-linux-amd64 && \nsudo install skaffold /usr/local/bin/\n\n```\n\n```bash\n# For Linux on ARMv8 (arm64)\ncurl -Lo skaffold https://storage.googleapis.com/skaffold/builds/latest/skaffold-linux-arm64 && \nsudo install skaffold /usr/local/bin/\n\n```\n\nThe latest **stable** binaries can be found here:\n\n- Darwin x86_64 (amd64): [https://storage.googleapis.com/skaffold/releases/latest/skaffold-darwin-amd64](https://storage.googleapis.com/skaffold/releases/latest/skaffold-darwin-amd64)\n- Darwin ARMv8 (arm64): [https://storage.googleapis.com/skaffold/releases/latest/skaffold-darwin-arm64](https://storage.googleapis.com/skaffold/releases/latest/skaffold-darwin-arm64)\n\nSimply download the appropriate binary and add it to your `PATH`. Or, copy+paste one of the following commands in your terminal:\n\n```bash\n# For macOS on x86_64 (amd64)\ncurl -Lo skaffold https://storage.googleapis.com/skaffold/releases/latest/skaffold-darwin-amd64 && \nsudo install skaffold /usr/local/bin/\n\n```\n\n```bash\n# For macOS on ARMv8 (arm64)\ncurl -Lo skaffold https://storage.googleapis.com/skaffold/releases/latest/skaffold-darwin-arm64 && \nsudo install skaffold /usr/local/bin/\n\n```\n\nWe also release a **bleeding edge** build, built from the latest commit:\n\n- Darwin x86_64 (amd64): [https://storage.googleapis.com/skaffold/builds/latest/skaffold-darwin-amd64](https://storage.googleapis.com/skaffold/builds/latest/skaffold-darwin-amd64)\n- Darwin ARMv8 (arm64): [https://storage.googleapis.com/skaffold/builds/latest/skaffold-darwin-arm64](https://storage.googleapis.com/skaffold/builds/latest/skaffold-darwin-arm64)\n\n```bash\n# For macOS on x86_64 (amd64)\ncurl -Lo skaffold https://storage.googleapis.com/skaffold/builds/latest/skaffold-darwin-amd64 && \nsudo install skaffold /usr/local/bin/\n\n```\n\n```bash\n# For macOS on ARMv8 (arm64)\ncurl -Lo skaffold https://storage.googleapis.com/skaffold/builds/latest/skaffold-darwin-arm64 && \nsudo install skaffold /usr/local/bin/\n\n```\n\n## Package Managers\n\nSkaffold is also kept up to date on a few central package managers:\n\n### Homebrew\n\n```bash\nbrew install skaffold\n\n```\n\n### MacPorts\n\n```bash\nsudo port install skaffold\n\n```\n\nThe latest **stable** release binary can be found here:\n\n[https://storage.googleapis.com/skaffold/releases/latest/skaffold-windows-amd64.exe](https://storage.googleapis.com/skaffold/releases/latest/skaffold-windows-amd64.exe)\n\nSimply download it and place it in your `PATH` as `skaffold.exe`.\n\nWe also release a **bleeding edge** build, built from the latest commit:\n\n[https://storage.googleapis.com/skaffold/builds/latest/skaffold-windows-amd64.exe](https://storage.googleapis.com/skaffold/builds/latest/skaffold-windows-amd64.exe)\n\n### Scoop\n\nSkaffold can be installed using the [Scoop package manager](https://scoop.sh/) from the [extras bucket](https://github.com/lukesampson/scoop-extras#readme). This package is not maintained by the Skaffold team.\n\n```powershell\nscoop bucket add extras\nscoop install skaffold\n\n```\n\n### Chocolatey\n\nSkaffold can be installed using the [Chocolatey package manager](https://chocolatey.org/packages/skaffold). This package is not maintained by the Skaffold team.\n\n#### Caution\n\nChocolatey’s installation mechanism interferes with `Ctrl` + `C` handling and [prevents Skaffold from cleaning up deployments](https://github.com/GoogleContainerTools/skaffold/issues/4815). This cannot be fixed by Skaffold. For more information about this defect see [chocolatey/shimgen#32](https://github.com/chocolatey/shimgen/issues/32).\n\n```bash\nchoco install -y skaffold\n\n```\n\n## Google Cloud SDK\n\nIf you have the Google Cloud SDK installed on your machine, you can quickly install Skaffold as a bundled component.\n\nMake sure your gcloud installation and the components are up to date:\n\n`gcloud components update`\n\nThen, install Skaffold:\n\n`gcloud components install skaffold`\n\n## Docker\n\n### Stable binary\n\nFor the latest **stable** release, you can use:\n\n`docker run gcr.io/k8s-skaffold/skaffold:latest skaffold <command>`\n\n### Bleeding edge binary\n\nFor the latest **bleeding edge** build:\n\n`docker run gcr.io/k8s-skaffold/skaffold:edge skaffold <command>`\n\n## Last modified\n\nLast modified January 23, 2025: [release: v2.14.0 (#9668) (f132ab25)](https://github.com/GoogleContainerTools/skaffold/commit/f132ab25adf1599c7fbdce733144991126565386)\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/install", "title": "Installing Skaffold", "description": "This page provides instructions on how to install Skaffold on various platforms and through different methods.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:00:27", "type": "overview", "page_metadata": {"generator": "Hugo 0.99.1", "twitter:title": "Installing Skaffold", "ogUrl": "https://skaffold.dev/docs/install/", "description": "\n\n\n    Note\n    To keep Skaffold up to date, update checks are made to Google servers to see if a new version of\nSkaffold is available.\nYou can turn …", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogSiteName": "Skaffold", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "language": "en", "og:title": "Installing Skaffold", "ogTitle": "Installing Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:description": "Easy and Repeatable Container & Kubernetes Development", "robots": "index, follow", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "og:type": "website", "og:url": "https://skaffold.dev/docs/install/", "twitter:card": "summary", "title": "Installing Skaffold | Skaffold", "og:site_name": "Skaffold", "scrapeId": "1d65eacd-2918-44c7-8d0b-52c59dafa268", "sourceURL": "https://skaffold.dev/docs/install", "url": "https://skaffold.dev/docs/install/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I note in skaffold?\n\nAssistant: To note in skaffold, here's what you do:\nTo keep Skaffold up to date, update checks are made to Google servers to see if a new version of Skaffold is available.\n\nYou can turn this update check off by following [these instructions](https://skaffold.dev/docs/references/privacy/#update-check).\n\nTo help prioritize features and work on improving Skaffold, we collect anonymized Skaffold usage data.\nYou can opt out of data collection by following [these instructions](https://skaffold.dev/docs/resources/telemetry/).\n\nYour use of this software is subject to the [Google Privacy Policy](https://policies.google.com/privacy)..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/install", "title": "Installing Skaffold", "description": "This page provides instructions on how to install Skaffold on various platforms and through different methods.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:00:27", "type": "section_detail", "page_metadata": {"generator": "Hugo 0.99.1", "twitter:title": "Installing Skaffold", "ogUrl": "https://skaffold.dev/docs/install/", "description": "\n\n\n    Note\n    To keep Skaffold up to date, update checks are made to Google servers to see if a new version of\nSkaffold is available.\nYou can turn …", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogSiteName": "Skaffold", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "language": "en", "og:title": "Installing Skaffold", "ogTitle": "Installing Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:description": "Easy and Repeatable Container & Kubernetes Development", "robots": "index, follow", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "og:type": "website", "og:url": "https://skaffold.dev/docs/install/", "twitter:card": "summary", "title": "Installing Skaffold | Skaffold", "og:site_name": "Skaffold", "scrapeId": "1d65eacd-2918-44c7-8d0b-52c59dafa268", "sourceURL": "https://skaffold.dev/docs/install", "url": "https://skaffold.dev/docs/install/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I managed ide in skaffold?\n\nAssistant: To managed ide in skaffold, here's what you do:\n- [CLOUD CODE](https://skaffold.dev/docs/install/#)\n- [GOOGLE CLOUD SHELL](https://skaffold.dev/docs/install/#)\n\n[Cloud Code](https://cloud.google.com/code) provides a managed experience of using Skaffold in supported IDEs. You can install the `Cloud Code` extension for [Visual Studio Code](https://skaffold.dev/docs/install/%5Bhttps://cloud.google.com/code/docs/vscode/quickstart-k8s#installing%5D(https://cloud.google.com/code/docs/vscode/install#installing)) or the plugin for [JetBrains IDEs](https://cloud.google.com/code/docs/intellij/quickstart-k8s#installing_the_plugin). It manages and keeps Skaffold up-to-date, along with other common dependencies, and works with any kubernetes cluster.\n\nGoogle Cloud Platform’s [_Cloud Shell_](http://cloud.google.com/shell) provides a free [browser-based terminal/CLI and editor](https://cloud.google.com/shell#product-demo) with Skaffold, Minikube, and Docker pre-installed. (Requires a [Google Account](https://accounts.google.com/SignUp).)\n\nCloud Shell is a great way to try Skaffold out.\n\n[![Open in Cloud Shell](https://gstatic.com/cloudssh/images/open-btn.svg)](https://ssh.cloud.google.com/cloudshell/editor?shellonly=true&cloudshell_git_repo=https%3A%2F%2Fgithub.com%2FGoogleContainerTools%2Fskaffold&cloudshell_working_dir=examples%2Fgetting-started).\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/install", "title": "Installing Skaffold", "description": "This page provides instructions on how to install Skaffold on various platforms and through different methods.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:00:27", "type": "section_detail", "page_metadata": {"generator": "Hugo 0.99.1", "twitter:title": "Installing Skaffold", "ogUrl": "https://skaffold.dev/docs/install/", "description": "\n\n\n    Note\n    To keep Skaffold up to date, update checks are made to Google servers to see if a new version of\nSkaffold is available.\nYou can turn …", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogSiteName": "Skaffold", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "language": "en", "og:title": "Installing Skaffold", "ogTitle": "Installing Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:description": "Easy and Repeatable Container & Kubernetes Development", "robots": "index, follow", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "og:type": "website", "og:url": "https://skaffold.dev/docs/install/", "twitter:card": "summary", "title": "Installing Skaffold | Skaffold", "og:site_name": "Skaffold", "scrapeId": "1d65eacd-2918-44c7-8d0b-52c59dafa268", "sourceURL": "https://skaffold.dev/docs/install", "url": "https://skaffold.dev/docs/install/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I standalone binary in skaffold?\n\nAssistant: To standalone binary in skaffold, here's what you do:\n- [LINUX](https://skaffold.dev/docs/install/#)\n- [MACOS](https://skaffold.dev/docs/install/#)\n- [WINDOWS](https://skaffold.dev/docs/install/#)\n- [GCLOUD](https://skaffold.dev/docs/install/#)\n- [DOCKER](https://skaffold.dev/docs/install/#)\n\nThe latest **stable** binaries can be found here:\n\n- Linux x86_64 (amd64): [https://storage.googleapis.com/skaffold/releases/latest/skaffold-linux-amd64](https://storage.googleapis.com/skaffold/releases/latest/skaffold-linux-amd64)\n- Linux ARMv8 (arm64): [https://storage.googleapis.com/skaffold/releases/latest/skaffold-linux-arm64](https://storage.googleapis.com/skaffold/releases/latest/skaffold-linux-arm64)\n\nSimply download the appropriate binary and add it to your `PATH`. Or, copy+paste one of the following commands in your terminal:\n\n```bash\n# For Linux x86_64 (amd64)\ncurl -Lo skaffold https://storage.googleapis.com/skaffold/releases/latest/skaffold-linux-amd64 && \nsudo install skaffold /usr/local/bin/\n\n```\n\n```bash\n# For Linux ARMv8 (arm64)\ncurl -Lo skaffold https://storage.googleapis.com/skaffold/releases/latest/skaffold-linux-arm64 && \nsudo install skaffold /usr/local/bin/\n\n```\n\nWe also release a **bleeding edge** build, built from the latest commit:\n\n- Linux x86_64 (amd64): [https://storage.googleapis.com/skaffold/builds/latest/skaffold-linux-amd64](https://storage.googleapis.com/skaffold/builds/latest/skaffold-linux-amd64)\n- Linux ARMv8 (arm64): [https://storage.googleapis.com/skaffold/builds/latest/skaffold-linux-arm64](https://storage.googleapis.com/skaffold/builds/latest/skaffold-linux-arm64)\n\n```bash\n# For Linux on x86_64 (amd64)\ncurl -Lo skaffold https://storage.googleapis.com/skaffold/builds/latest/skaffold-linux-amd64 && \nsudo install skaffold /usr/local/bin/\n\n```\n\n```bash\n# For Linux on ARMv8 (arm64)\ncurl -Lo skaffold https://storage.googleapis.com/skaffold/builds/latest/skaffold-linux-arm64 && \nsudo install skaffold /usr/local/bin/\n\n```\n\nThe latest **stable** binaries can be found here:\n\n- Darwin x86_64 (amd64): [https://storage.googleapis.com/skaffold/releases/latest/skaffold-darwin-amd64](https://storage.googleapis.com/skaffold/releases/latest/skaffold-darwin-amd64)\n- Darwin ARMv8 (arm64): [https://storage.googleapis.com/skaffold/releases/latest/skaffold-darwin-arm64](https://storage.googleapis.com/skaffold/releases/latest/skaffold-darwin-arm64)\n\nSimply download the appropriate binary and add it to your `PATH`. Or, copy+paste one of the following commands in your terminal:\n\n```bash\n# For macOS on x86_64 (amd64)\ncurl -Lo skaffold https://storage.googleapis.com/skaffold/releases/latest/skaffold-darwin-amd64 && \nsudo install skaffold /usr/local/bin/\n\n```\n\n```bash\n# For macOS on ARMv8 (arm64)\ncurl -Lo skaffold https://storage.googleapis.com/skaffold/releases/latest/skaffold-darwin-arm64 && \nsudo install skaffold /usr/local/bin/\n\n```\n\nWe also release a **bleeding edge** build, built from the latest commit:\n\n- Darwin x86_64 (amd64): [https://storage.googleapis.com/skaffold/builds/latest/skaffold-darwin-amd64](https://storage.googleapis.com/skaffold/builds/latest/skaffold-darwin-amd64)\n- Darwin ARMv8 (arm64): [https://storage.googleapis.com/skaffold/builds/latest/skaffold-darwin-arm64](https://storage.googleapis.com/skaffold/builds/latest/skaffold-darwin-arm64)\n\n```bash\n# For macOS on x86_64 (amd64)\ncurl -Lo skaffold https://storage.googleapis.com/skaffold/builds/latest/skaffold-darwin-amd64 && \nsudo install skaffold /usr/local/bin/\n\n```\n\n```bash\n# For macOS on ARMv8 (arm64)\ncurl -Lo skaffold https://storage.googleapis.com/skaffold/builds/latest/skaffold-darwin-arm64 && \nsudo install skaffold /usr/local/bin/\n\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/install", "title": "Installing Skaffold", "description": "This page provides instructions on how to install Skaffold on various platforms and through different methods.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:00:27", "type": "section_detail", "page_metadata": {"generator": "Hugo 0.99.1", "twitter:title": "Installing Skaffold", "ogUrl": "https://skaffold.dev/docs/install/", "description": "\n\n\n    Note\n    To keep Skaffold up to date, update checks are made to Google servers to see if a new version of\nSkaffold is available.\nYou can turn …", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogSiteName": "Skaffold", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "language": "en", "og:title": "Installing Skaffold", "ogTitle": "Installing Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:description": "Easy and Repeatable Container & Kubernetes Development", "robots": "index, follow", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "og:type": "website", "og:url": "https://skaffold.dev/docs/install/", "twitter:card": "summary", "title": "Installing Skaffold | Skaffold", "og:site_name": "Skaffold", "scrapeId": "1d65eacd-2918-44c7-8d0b-52c59dafa268", "sourceURL": "https://skaffold.dev/docs/install", "url": "https://skaffold.dev/docs/install/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I package managers in skaffold?\n\nAssistant: To package managers in skaffold, here's what you do:\nSkaffold is also kept up to date on a few central package managers:\n\n### Homebrew\n\n```bash\nbrew install skaffold\n\n```\n\n### MacPorts\n\n```bash\nsudo port install skaffold\n\n```\n\nThe latest **stable** release binary can be found here:\n\n[https://storage.googleapis.com/skaffold/releases/latest/skaffold-windows-amd64.exe](https://storage.googleapis.com/skaffold/releases/latest/skaffold-windows-amd64.exe)\n\nSimply download it and place it in your `PATH` as `skaffold.exe`.\n\nWe also release a **bleeding edge** build, built from the latest commit:\n\n[https://storage.googleapis.com/skaffold/builds/latest/skaffold-windows-amd64.exe](https://storage.googleapis.com/skaffold/builds/latest/skaffold-windows-amd64.exe)\n\n### Scoop\n\nSkaffold can be installed using the [Scoop package manager](https://scoop.sh/) from the [extras bucket](https://github.com/lukesampson/scoop-extras#readme). This package is not maintained by the Skaffold team.\n\n```powershell\nscoop bucket add extras\nscoop install skaffold\n\n```\n\n### Chocolatey\n\nSkaffold can be installed using the [Chocolatey package manager](https://chocolatey.org/packages/skaffold). This package is not maintained by the Skaffold team.\n\n#### Caution\n\nChocolatey’s installation mechanism interferes with `Ctrl` + `C` handling and [prevents Skaffold from cleaning up deployments](https://github.com/GoogleContainerTools/skaffold/issues/4815). This cannot be fixed by Skaffold. For more information about this defect see [chocolatey/shimgen#32](https://github.com/chocolatey/shimgen/issues/32).\n\n```bash\nchoco install -y skaffold\n\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/install", "title": "Installing Skaffold", "description": "This page provides instructions on how to install Skaffold on various platforms and through different methods.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:00:27", "type": "section_detail", "page_metadata": {"generator": "Hugo 0.99.1", "twitter:title": "Installing Skaffold", "ogUrl": "https://skaffold.dev/docs/install/", "description": "\n\n\n    Note\n    To keep Skaffold up to date, update checks are made to Google servers to see if a new version of\nSkaffold is available.\nYou can turn …", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogSiteName": "Skaffold", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "language": "en", "og:title": "Installing Skaffold", "ogTitle": "Installing Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:description": "Easy and Repeatable Container & Kubernetes Development", "robots": "index, follow", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "og:type": "website", "og:url": "https://skaffold.dev/docs/install/", "twitter:card": "summary", "title": "Installing Skaffold | Skaffold", "og:site_name": "Skaffold", "scrapeId": "1d65eacd-2918-44c7-8d0b-52c59dafa268", "sourceURL": "https://skaffold.dev/docs/install", "url": "https://skaffold.dev/docs/install/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I google cloud sdk in skaffold?\n\nAssistant: To google cloud sdk in skaffold, here's what you do:\nIf you have the Google Cloud SDK installed on your machine, you can quickly install Skaffold as a bundled component.\n\nMake sure your gcloud installation and the components are up to date:\n\n`gcloud components update`\n\nThen, install Skaffold:\n\n`gcloud components install skaffold`.\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/install", "title": "Installing Skaffold", "description": "This page provides instructions on how to install Skaffold on various platforms and through different methods.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:00:27", "type": "section_detail", "page_metadata": {"generator": "Hugo 0.99.1", "twitter:title": "Installing Skaffold", "ogUrl": "https://skaffold.dev/docs/install/", "description": "\n\n\n    Note\n    To keep Skaffold up to date, update checks are made to Google servers to see if a new version of\nSkaffold is available.\nYou can turn …", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogSiteName": "Skaffold", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "language": "en", "og:title": "Installing Skaffold", "ogTitle": "Installing Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:description": "Easy and Repeatable Container & Kubernetes Development", "robots": "index, follow", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "og:type": "website", "og:url": "https://skaffold.dev/docs/install/", "twitter:card": "summary", "title": "Installing Skaffold | Skaffold", "og:site_name": "Skaffold", "scrapeId": "1d65eacd-2918-44c7-8d0b-52c59dafa268", "sourceURL": "https://skaffold.dev/docs/install", "url": "https://skaffold.dev/docs/install/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I docker in skaffold?\n\nAssistant: To docker in skaffold, here's what you do:\n### Stable binary\n\nFor the latest **stable** release, you can use:\n\n`docker run gcr.io/k8s-skaffold/skaffold:latest skaffold <command>`\n\n### Bleeding edge binary\n\nFor the latest **bleeding edge** build:\n\n`docker run gcr.io/k8s-skaffold/skaffold:edge skaffold <command>`.\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/install", "title": "Installing Skaffold", "description": "This page provides instructions on how to install Skaffold on various platforms and through different methods.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:00:27", "type": "section_detail", "page_metadata": {"generator": "Hugo 0.99.1", "twitter:title": "Installing Skaffold", "ogUrl": "https://skaffold.dev/docs/install/", "description": "\n\n\n    Note\n    To keep Skaffold up to date, update checks are made to Google servers to see if a new version of\nSkaffold is available.\nYou can turn …", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogSiteName": "Skaffold", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "language": "en", "og:title": "Installing Skaffold", "ogTitle": "Installing Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:description": "Easy and Repeatable Container & Kubernetes Development", "robots": "index, follow", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "og:type": "website", "og:url": "https://skaffold.dev/docs/install/", "twitter:card": "summary", "title": "Installing Skaffold | Skaffold", "og:site_name": "Skaffold", "scrapeId": "1d65eacd-2918-44c7-8d0b-52c59dafa268", "sourceURL": "https://skaffold.dev/docs/install", "url": "https://skaffold.dev/docs/install/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I last modified in skaffold?\n\nAssistant: To last modified in skaffold, here's what you do:\nLast modified January 23, 2025: [release: v2.14.0 (#9668) (f132ab25)](https://github.com/GoogleContainerTools/skaffold/commit/f132ab25adf1599c7fbdce733144991126565386).\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/install", "title": "Installing Skaffold", "description": "This page provides instructions on how to install Skaffold on various platforms and through different methods.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:00:27", "type": "section_detail", "page_metadata": {"generator": "Hugo 0.99.1", "twitter:title": "Installing Skaffold", "ogUrl": "https://skaffold.dev/docs/install/", "description": "\n\n\n    Note\n    To keep Skaffold up to date, update checks are made to Google servers to see if a new version of\nSkaffold is available.\nYou can turn …", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogSiteName": "Skaffold", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "language": "en", "og:title": "Installing Skaffold", "ogTitle": "Installing Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:description": "Easy and Repeatable Container & Kubernetes Development", "robots": "index, follow", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "og:type": "website", "og:url": "https://skaffold.dev/docs/install/", "twitter:card": "summary", "title": "Installing Skaffold | Skaffold", "og:site_name": "Skaffold", "scrapeId": "1d65eacd-2918-44c7-8d0b-52c59dafa268", "sourceURL": "https://skaffold.dev/docs/install", "url": "https://skaffold.dev/docs/install/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you give me some code examples for Installing Skaffold in skaffold?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Install Skaffold on Linux x86_64 (amd64)**:\n\n```yaml\ncurl -Lo skaffold https://storage.googleapis.com/skaffold/releases/latest/skaffold-linux-amd64 && \nsudo install skaffold /usr/local/bin/\n```\n\nThis snippet shows you how to install skaffold on linux x86_64 (amd64), which is an important aspect of installing skaffold.\n\n**Install Skaffold on Linux ARMv8 (arm64)**:\n\n```yaml\ncurl -Lo skaffold https://storage.googleapis.com/skaffold/releases/latest/skaffold-linux-arm64 && \nsudo install skaffold /usr/local/bin/\n```\n\nThis snippet shows you how to install skaffold on linux armv8 (arm64), which is an important aspect of installing skaffold.\n\n**Install Skaffold on macOS x86_64 (amd64)**:\n\n```yaml\ncurl -Lo skaffold https://storage.googleapis.com/skaffold/releases/latest/skaffold-darwin-amd64 && \nsudo install skaffold /usr/local/bin/\n```\n\nThis snippet shows you how to install skaffold on macos x86_64 (amd64), which is an important aspect of installing skaffold.\n\n**Install Skaffold on macOS ARMv8 (arm64)**:\n\n```yaml\ncurl -Lo skaffold https://storage.googleapis.com/skaffold/releases/latest/skaffold-darwin-arm64 && \nsudo install skaffold /usr/local/bin/\n```\n\nThis snippet shows you how to install skaffold on macos armv8 (arm64), which is an important aspect of installing skaffold.\n\n**Install Skaffold using Homebrew**:\n\n```yaml\nbrew install skaffold\n```\n\nThis snippet shows you how to install skaffold using homebrew, which is an important aspect of installing skaffold.\n\n**Install Skaffold using MacPorts**:\n\n```yaml\nsudo port install skaffold\n```\n\nThis snippet shows you how to install skaffold using macports, which is an important aspect of installing skaffold.\n\n**Install Skaffold using Scoop**:\n\n```yaml\nscoop bucket add extras\nscoop install skaffold\n```\n\nThis snippet shows you how to install skaffold using scoop, which is an important aspect of installing skaffold.\n\n**Install Skaffold using Chocolatey**:\n\n```yaml\nchoco install -y skaffold\n```\n\nThis snippet shows you how to install skaffold using chocolatey, which is an important aspect of installing skaffold.\n\n**Install Skaffold using Google Cloud SDK**:\n\n```yaml\ngcloud components update\ngcloud components install skaffold\n```\n\nThis snippet shows you how to install skaffold using google cloud sdk, which is an important aspect of installing skaffold.\n\n**Run Skaffold stable binary**:\n\n```yaml\ndocker run gcr.io/k8s-skaffold/skaffold:latest skaffold <command>\n```\n\nThis snippet shows you how to run skaffold stable binary, which is an important aspect of installing skaffold.\n\n**Run Skaffold bleeding edge binary**:\n\n```yaml\ndocker run gcr.io/k8s-skaffold/skaffold:edge skaffold <command>\n```\n\nThis snippet shows you how to run skaffold bleeding edge binary, which is an important aspect of installing skaffold.\n\n", "metadata": {"source_url": "https://skaffold.dev/docs/install", "title": "Installing Skaffold", "description": "This page provides instructions on how to install Skaffold on various platforms and through different methods.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:00:27", "type": "code_examples", "page_metadata": {"generator": "Hugo 0.99.1", "twitter:title": "Installing Skaffold", "ogUrl": "https://skaffold.dev/docs/install/", "description": "\n\n\n    Note\n    To keep Skaffold up to date, update checks are made to Google servers to see if a new version of\nSkaffold is available.\nYou can turn …", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogSiteName": "Skaffold", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "language": "en", "og:title": "Installing Skaffold", "ogTitle": "Installing Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:description": "Easy and Repeatable Container & Kubernetes Development", "robots": "index, follow", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "og:type": "website", "og:url": "https://skaffold.dev/docs/install/", "twitter:card": "summary", "title": "Installing Skaffold | Skaffold", "og:site_name": "Skaffold", "scrapeId": "1d65eacd-2918-44c7-8d0b-52c59dafa268", "sourceURL": "https://skaffold.dev/docs/install", "url": "https://skaffold.dev/docs/install/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: What are some tips for using Installing Skaffold in skaffold effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nTo keep Skaffold up to date, update checks are made to Google servers to see if a new version of Skaffold is available.\n\nYou can turn off the update check by following the provided instructions.\n\nYou can opt out of data collection by following the provided instructions.\n\nYour use of this software is subject to the Google Privacy Policy.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://skaffold.dev/docs/install", "title": "Installing Skaffold", "description": "This page provides instructions on how to install Skaffold on various platforms and through different methods.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:00:27", "type": "best_practices", "page_metadata": {"generator": "Hugo 0.99.1", "twitter:title": "Installing Skaffold", "ogUrl": "https://skaffold.dev/docs/install/", "description": "\n\n\n    Note\n    To keep Skaffold up to date, update checks are made to Google servers to see if a new version of\nSkaffold is available.\nYou can turn …", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogSiteName": "Skaffold", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "language": "en", "og:title": "Installing Skaffold", "ogTitle": "Installing Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:description": "Easy and Repeatable Container & Kubernetes Development", "robots": "index, follow", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "og:type": "website", "og:url": "https://skaffold.dev/docs/install/", "twitter:card": "summary", "title": "Installing Skaffold | Skaffold", "og:site_name": "Skaffold", "scrapeId": "1d65eacd-2918-44c7-8d0b-52c59dafa268", "sourceURL": "https://skaffold.dev/docs/install", "url": "https://skaffold.dev/docs/install/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what Local build is in skaffold?\n\nAssistant: Sure, I'd be happy to explain Local build in skaffold.\n\n# Local build\n\nLocal build execution is the default execution context. Skaffold will use your locally-installed build tools (such as Docker, Bazel, Maven or Gradle) to execute the build.Here's a quick rundown of what this is about:\n\n## Configuration\n\nTo configure the local execution explicitly, add build type `local` to the build section of `skaffold.yaml`\n\n```yaml\nbuild:\n  local: {}\n```\n\nThe following options can optionally be configured:\n\n| Option | Description | Default |\n| --- | --- | --- |\n| `push` | should images be pushed to a registry. If not specified, images are pushed only if the current Kubernetes context connects to a remote cluster. | `` |\n| `tryImportMissing` | whether to attempt to import artifacts from Docker (either a local or remote registry) if not in the cache. | `false` |\n| `useDockerCLI` | use `docker` command-line interface instead of Docker Engine APIs. | `false` |\n| `useBuildkit` | use BuildKit to build Docker images. If unspecified, uses the Docker default. | `` |\n| `concurrency` | how many artifacts can be built concurrently. 0 means “no-limit”. | `1` |\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/builders/build-environments/local", "title": "Local build", "description": "Local build execution is the default execution context. Skaffold will use your locally-installed build tools (such as Docker, Bazel, Maven or Gradle) to execute the build.", "has_code_examples": true, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 03:00:39", "type": "overview", "page_metadata": {"ogTitle": "Local build", "og:title": "Local build", "ogDescription": "Local build execution is the default execution context. Skaffold will use your locally-installed build tools (such as Docker, Bazel, Maven or Gradle) to execute the build.\nConfiguration To configure the local execution explicitly, add build type local to the build section of skaffold.yaml\nbuild:local:{}The following options can optionally be configured:\n @media (min-width: 992px) { table { max-width: 80%; } } td.desc { width: 100%; } td.default { white-space: nowrap; }     Option Description Default     push should images be pushed to a registry.", "og:type": "article", "modifiedTime": "2025-01-23T10:14:58-05:00", "twitter:title": "Local build", "description": "Local build execution is the default execution context.\nSkaffold will use your locally-installed build tools (such as Docker, Bazel, Maven or Gradle) …", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "generator": "Hugo 0.99.1", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:url": "https://skaffold.dev/docs/builders/build-environments/local/", "twitter:card": "summary", "twitter:description": "Local build execution is the default execution context. Skaffold will use your locally-installed build tools (such as Docker, Bazel, Maven or Gradle) to execute the build.\nConfiguration To configure the local execution explicitly, add build type local to the build section of skaffold.yaml\nbuild:local:{}The following options can optionally be configured:\n @media (min-width: 992px) { table { max-width: 80%; } } td.desc { width: 100%; } td.default { white-space: nowrap; }     Option Description Default     push should images be pushed to a registry.", "og:site_name": "Skaffold", "ogSiteName": "Skaffold", "ogUrl": "https://skaffold.dev/docs/builders/build-environments/local/", "article:section": "docs", "language": "en", "article:modified_time": "2025-01-23T10:14:58-05:00", "robots": "index, follow", "title": "Local build | Skaffold", "og:description": "Local build execution is the default execution context. Skaffold will use your locally-installed build tools (such as Docker, Bazel, Maven or Gradle) to execute the build.\nConfiguration To configure the local execution explicitly, add build type local to the build section of skaffold.yaml\nbuild:local:{}The following options can optionally be configured:\n @media (min-width: 992px) { table { max-width: 80%; } } td.desc { width: 100%; } td.default { white-space: nowrap; }     Option Description Default     push should images be pushed to a registry.", "scrapeId": "27ee4873-acd2-4610-b7ec-1574a6fd8f81", "sourceURL": "https://skaffold.dev/docs/builders/build-environments/local", "url": "https://skaffold.dev/docs/builders/build-environments/local/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I configuration in skaffold?\n\nAssistant: To configuration in skaffold, here's what you do:\nTo configure the local execution explicitly, add build type `local` to the build section of `skaffold.yaml`\n\n```yaml\nbuild:\n  local: {}\n```\n\nThe following options can optionally be configured:\n\n| Option | Description | Default |\n| --- | --- | --- |\n| `push` | should images be pushed to a registry. If not specified, images are pushed only if the current Kubernetes context connects to a remote cluster. | `` |\n| `tryImportMissing` | whether to attempt to import artifacts from Docker (either a local or remote registry) if not in the cache. | `false` |\n| `useDockerCLI` | use `docker` command-line interface instead of Docker Engine APIs. | `false` |\n| `useBuildkit` | use BuildKit to build Docker images. If unspecified, uses the Docker default. | `` |\n| `concurrency` | how many artifacts can be built concurrently. 0 means “no-limit”. | `1` |.\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/builders/build-environments/local", "title": "Local build", "description": "Local build execution is the default execution context. Skaffold will use your locally-installed build tools (such as Docker, Bazel, Maven or Gradle) to execute the build.", "has_code_examples": true, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 03:00:39", "type": "section_detail", "page_metadata": {"ogTitle": "Local build", "og:title": "Local build", "ogDescription": "Local build execution is the default execution context. Skaffold will use your locally-installed build tools (such as Docker, Bazel, Maven or Gradle) to execute the build.\nConfiguration To configure the local execution explicitly, add build type local to the build section of skaffold.yaml\nbuild:local:{}The following options can optionally be configured:\n @media (min-width: 992px) { table { max-width: 80%; } } td.desc { width: 100%; } td.default { white-space: nowrap; }     Option Description Default     push should images be pushed to a registry.", "og:type": "article", "modifiedTime": "2025-01-23T10:14:58-05:00", "twitter:title": "Local build", "description": "Local build execution is the default execution context.\nSkaffold will use your locally-installed build tools (such as Docker, Bazel, Maven or Gradle) …", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "generator": "Hugo 0.99.1", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:url": "https://skaffold.dev/docs/builders/build-environments/local/", "twitter:card": "summary", "twitter:description": "Local build execution is the default execution context. Skaffold will use your locally-installed build tools (such as Docker, Bazel, Maven or Gradle) to execute the build.\nConfiguration To configure the local execution explicitly, add build type local to the build section of skaffold.yaml\nbuild:local:{}The following options can optionally be configured:\n @media (min-width: 992px) { table { max-width: 80%; } } td.desc { width: 100%; } td.default { white-space: nowrap; }     Option Description Default     push should images be pushed to a registry.", "og:site_name": "Skaffold", "ogSiteName": "Skaffold", "ogUrl": "https://skaffold.dev/docs/builders/build-environments/local/", "article:section": "docs", "language": "en", "article:modified_time": "2025-01-23T10:14:58-05:00", "robots": "index, follow", "title": "Local build | Skaffold", "og:description": "Local build execution is the default execution context. Skaffold will use your locally-installed build tools (such as Docker, Bazel, Maven or Gradle) to execute the build.\nConfiguration To configure the local execution explicitly, add build type local to the build section of skaffold.yaml\nbuild:local:{}The following options can optionally be configured:\n @media (min-width: 992px) { table { max-width: 80%; } } td.desc { width: 100%; } td.default { white-space: nowrap; }     Option Description Default     push should images be pushed to a registry.", "scrapeId": "27ee4873-acd2-4610-b7ec-1574a6fd8f81", "sourceURL": "https://skaffold.dev/docs/builders/build-environments/local", "url": "https://skaffold.dev/docs/builders/build-environments/local/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you give me some code examples for Local build in skaffold?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Skaffold YAML Configuration**:\n\n```yaml\nbuild:\n  local: {}\n```\n\nThis snippet shows you how to skaffold yaml configuration, which is an important aspect of local build.\n\n", "metadata": {"source_url": "https://skaffold.dev/docs/builders/build-environments/local", "title": "Local build", "description": "Local build execution is the default execution context. Skaffold will use your locally-installed build tools (such as Docker, Bazel, Maven or Gradle) to execute the build.", "has_code_examples": true, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 03:00:39", "type": "code_examples", "page_metadata": {"ogTitle": "Local build", "og:title": "Local build", "ogDescription": "Local build execution is the default execution context. Skaffold will use your locally-installed build tools (such as Docker, Bazel, Maven or Gradle) to execute the build.\nConfiguration To configure the local execution explicitly, add build type local to the build section of skaffold.yaml\nbuild:local:{}The following options can optionally be configured:\n @media (min-width: 992px) { table { max-width: 80%; } } td.desc { width: 100%; } td.default { white-space: nowrap; }     Option Description Default     push should images be pushed to a registry.", "og:type": "article", "modifiedTime": "2025-01-23T10:14:58-05:00", "twitter:title": "Local build", "description": "Local build execution is the default execution context.\nSkaffold will use your locally-installed build tools (such as Docker, Bazel, Maven or Gradle) …", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "generator": "Hugo 0.99.1", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:url": "https://skaffold.dev/docs/builders/build-environments/local/", "twitter:card": "summary", "twitter:description": "Local build execution is the default execution context. Skaffold will use your locally-installed build tools (such as Docker, Bazel, Maven or Gradle) to execute the build.\nConfiguration To configure the local execution explicitly, add build type local to the build section of skaffold.yaml\nbuild:local:{}The following options can optionally be configured:\n @media (min-width: 992px) { table { max-width: 80%; } } td.desc { width: 100%; } td.default { white-space: nowrap; }     Option Description Default     push should images be pushed to a registry.", "og:site_name": "Skaffold", "ogSiteName": "Skaffold", "ogUrl": "https://skaffold.dev/docs/builders/build-environments/local/", "article:section": "docs", "language": "en", "article:modified_time": "2025-01-23T10:14:58-05:00", "robots": "index, follow", "title": "Local build | Skaffold", "og:description": "Local build execution is the default execution context. Skaffold will use your locally-installed build tools (such as Docker, Bazel, Maven or Gradle) to execute the build.\nConfiguration To configure the local execution explicitly, add build type local to the build section of skaffold.yaml\nbuild:local:{}The following options can optionally be configured:\n @media (min-width: 992px) { table { max-width: 80%; } } td.desc { width: 100%; } td.default { white-space: nowrap; }     Option Description Default     push should images be pushed to a registry.", "scrapeId": "27ee4873-acd2-4610-b7ec-1574a6fd8f81", "sourceURL": "https://skaffold.dev/docs/builders/build-environments/local", "url": "https://skaffold.dev/docs/builders/build-environments/local/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: What are some tips for using Local build in skaffold effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nWhen deploying to a local cluster, Skaffold defaults `push` to `false` to speed up builds.\n\nSet `concurrency` to `0` to enable full parallelism, though this may consume significant resources.\n\nUse `tryImportMissing: true` to avoid building an image when the tagged image already exists in the destination.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://skaffold.dev/docs/builders/build-environments/local", "title": "Local build", "description": "Local build execution is the default execution context. Skaffold will use your locally-installed build tools (such as Docker, Bazel, Maven or Gradle) to execute the build.", "has_code_examples": true, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 03:00:39", "type": "best_practices", "page_metadata": {"ogTitle": "Local build", "og:title": "Local build", "ogDescription": "Local build execution is the default execution context. Skaffold will use your locally-installed build tools (such as Docker, Bazel, Maven or Gradle) to execute the build.\nConfiguration To configure the local execution explicitly, add build type local to the build section of skaffold.yaml\nbuild:local:{}The following options can optionally be configured:\n @media (min-width: 992px) { table { max-width: 80%; } } td.desc { width: 100%; } td.default { white-space: nowrap; }     Option Description Default     push should images be pushed to a registry.", "og:type": "article", "modifiedTime": "2025-01-23T10:14:58-05:00", "twitter:title": "Local build", "description": "Local build execution is the default execution context.\nSkaffold will use your locally-installed build tools (such as Docker, Bazel, Maven or Gradle) …", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "generator": "Hugo 0.99.1", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:url": "https://skaffold.dev/docs/builders/build-environments/local/", "twitter:card": "summary", "twitter:description": "Local build execution is the default execution context. Skaffold will use your locally-installed build tools (such as Docker, Bazel, Maven or Gradle) to execute the build.\nConfiguration To configure the local execution explicitly, add build type local to the build section of skaffold.yaml\nbuild:local:{}The following options can optionally be configured:\n @media (min-width: 992px) { table { max-width: 80%; } } td.desc { width: 100%; } td.default { white-space: nowrap; }     Option Description Default     push should images be pushed to a registry.", "og:site_name": "Skaffold", "ogSiteName": "Skaffold", "ogUrl": "https://skaffold.dev/docs/builders/build-environments/local/", "article:section": "docs", "language": "en", "article:modified_time": "2025-01-23T10:14:58-05:00", "robots": "index, follow", "title": "Local build | Skaffold", "og:description": "Local build execution is the default execution context. Skaffold will use your locally-installed build tools (such as Docker, Bazel, Maven or Gradle) to execute the build.\nConfiguration To configure the local execution explicitly, add build type local to the build section of skaffold.yaml\nbuild:local:{}The following options can optionally be configured:\n @media (min-width: 992px) { table { max-width: 80%; } } td.desc { width: 100%; } td.default { white-space: nowrap; }     Option Description Default     push should images be pushed to a registry.", "scrapeId": "27ee4873-acd2-4610-b7ec-1574a6fd8f81", "sourceURL": "https://skaffold.dev/docs/builders/build-environments/local", "url": "https://skaffold.dev/docs/builders/build-environments/local/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what Upgrading from Skaffold v1 to Skaffold v2 [NEW] is in skaffold?\n\nAssistant: Sure, I'd be happy to explain Upgrading from Skaffold v1 to Skaffold v2 [NEW] in skaffold.\n\n# Upgrading from Skaffold v1 to Skaffold v2 [NEW]\n\nThis documentation covers the changes and upgrades from Skaffold v1 to Skaffold v2, including the new render phase, schema updates, and compatibility notes.Here's a quick rundown of what this is about:\n\n## Introduction\n\nIn Skaffold v2 what was previously the `deploy` phase of Skaffold is now split into a new `render` phase and `deploy` phase. This clear boundary of separation between render and deploy phases allowed the team to simplify our code and CLI allowing us to clean up previously confusing or redundant flags like `skaffold deploy --render-only`, `skaffold deploy --skip-render`.\n\n## New Schema Version\n\nThis release comes with a new schema version `v3alpha1`. This schema introduced a new `manifests` section which declares all resources an application deploys e.g helm charts, kubernetes yaml, kustomize directories and kpt configuration. This decoupling of manifests declaration from the deploy section allows manifests to be used across deploy tools.\n\n## Upgrading from Skaffold v1 to v2\n\nUpgrading from skaffold `v1.*.*` to skaffold `v2.0.0-beta3` should not require any manual skaffold.yaml changes or CLI command modification for most common use cases. Skaffold `v2` includes the same CLI surface as `v1` and has backwards compatibility for all previous skaffold.yaml schema `apiVersion` for example - `v2beta*`, `v1beta*` and `v1alpha*`.\n\n## Updating skaffold.yaml\n\nIf you wish to update your skaffold.yaml to the latest `apiVersion` ( `apiVersion: v3alpha1`) run `skaffold fix` which will output an updated skaffold.yaml with the schema fields updated for `v3alpha1`. With this new `v3alpha1` configuration schema you can access the new v2 functionality via the `v3alpha1` configuration fields.\n\n## Example Usage of skaffold fix\n\nExample usage of `skaffold fix`:\n\n```console\n$ cat skaffold.yaml | head -1\napiVersion: skaffold/v2beta29\n$ skaffold fix\napiVersion: skaffold/v3alpha1\nkind: Config\nbuild:\n  artifacts:\n  - image: skaffold-example\nmanifests:\n  rawYaml:\n  - k8s-*\ndeploy:\n  kubectl: {}\n```\n\n## Features No Longer Supported\n\nThe list of features that were supported in skaffold `v1` but are no longer support or require manual changes for `v2.0.0-beta3` include:\n\n- `v1` `kpt` deployer usage is not upgradeable via `skaffold fix` given the numerous changes made to the `kpt` workflow. Manual changes might be required to get users pipelines working as expected.\n- using multiple renderers WITH the `kpt` deployer being one of them (using combinations of any other renderer(s) works as it did previously).\n\n## Known Issues and Compatibility\n\nOutside of the above, there are currently no known other regressions when migrating from skaffold v1 -> v2 but areas that are most likely to have possible issues/incompatibility include:\n\n- `helm` renderer/deployer usage (see [helm docs](https://skaffold.dev/docs/renderers/helm/) for more details)\n- v1 `kpt` deployer usage\n- `skaffold render` flags usage (see [render docs](https://skaffold.dev/docs/renderers/) and [render schema](https://skaffold.dev/docs/references/yaml/#manifests) for more details)\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/upgrading", "title": "Upgrading from Skaffold v1 to Skaffold v2 [NEW]", "description": "This documentation covers the changes and upgrades from Skaffold v1 to Skaffold v2, including the new render phase, schema updates, and compatibility notes.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:01:03", "type": "overview", "page_metadata": {"og:description": "Easy and Repeatable Container & Kubernetes Development", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:title": "Upgrading from Skaffold v1 to Skaffold v2 [NEW]", "robots": "index, follow", "description": "In Skaffold v2 what was previously the deploy phase of Skaffold is now split into a new render phase and deploy phase.  This clear boundary of …", "og:site_name": "Skaffold", "ogSiteName": "Skaffold", "ogTitle": "Upgrading from Skaffold v1 to Skaffold v2 [NEW]", "title": "Upgrading from Skaffold v1 to Skaffold v2 [NEW] | Skaffold", "twitter:card": "summary", "generator": "Hugo 0.99.1", "og:type": "website", "language": "en", "og:url": "https://skaffold.dev/docs/upgrading/", "twitter:title": "Upgrading from Skaffold v1 to Skaffold v2 [NEW]", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "ogUrl": "https://skaffold.dev/docs/upgrading/", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "scrapeId": "7ce5ce06-338f-470a-b109-8fefd6565b26", "sourceURL": "https://skaffold.dev/docs/upgrading", "url": "https://skaffold.dev/docs/upgrading/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I introduction in skaffold?\n\nAssistant: To introduction in skaffold, here's what you do:\nIn Skaffold v2 what was previously the `deploy` phase of Skaffold is now split into a new `render` phase and `deploy` phase. This clear boundary of separation between render and deploy phases allowed the team to simplify our code and CLI allowing us to clean up previously confusing or redundant flags like `skaffold deploy --render-only`, `skaffold deploy --skip-render`..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/upgrading", "title": "Upgrading from Skaffold v1 to Skaffold v2 [NEW]", "description": "This documentation covers the changes and upgrades from Skaffold v1 to Skaffold v2, including the new render phase, schema updates, and compatibility notes.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:01:03", "type": "section_detail", "page_metadata": {"og:description": "Easy and Repeatable Container & Kubernetes Development", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:title": "Upgrading from Skaffold v1 to Skaffold v2 [NEW]", "robots": "index, follow", "description": "In Skaffold v2 what was previously the deploy phase of Skaffold is now split into a new render phase and deploy phase.  This clear boundary of …", "og:site_name": "Skaffold", "ogSiteName": "Skaffold", "ogTitle": "Upgrading from Skaffold v1 to Skaffold v2 [NEW]", "title": "Upgrading from Skaffold v1 to Skaffold v2 [NEW] | Skaffold", "twitter:card": "summary", "generator": "Hugo 0.99.1", "og:type": "website", "language": "en", "og:url": "https://skaffold.dev/docs/upgrading/", "twitter:title": "Upgrading from Skaffold v1 to Skaffold v2 [NEW]", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "ogUrl": "https://skaffold.dev/docs/upgrading/", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "scrapeId": "7ce5ce06-338f-470a-b109-8fefd6565b26", "sourceURL": "https://skaffold.dev/docs/upgrading", "url": "https://skaffold.dev/docs/upgrading/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I new schema version in skaffold?\n\nAssistant: To new schema version in skaffold, here's what you do:\nThis release comes with a new schema version `v3alpha1`. This schema introduced a new `manifests` section which declares all resources an application deploys e.g helm charts, kubernetes yaml, kustomize directories and kpt configuration. This decoupling of manifests declaration from the deploy section allows manifests to be used across deploy tools..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/upgrading", "title": "Upgrading from Skaffold v1 to Skaffold v2 [NEW]", "description": "This documentation covers the changes and upgrades from Skaffold v1 to Skaffold v2, including the new render phase, schema updates, and compatibility notes.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:01:03", "type": "section_detail", "page_metadata": {"og:description": "Easy and Repeatable Container & Kubernetes Development", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:title": "Upgrading from Skaffold v1 to Skaffold v2 [NEW]", "robots": "index, follow", "description": "In Skaffold v2 what was previously the deploy phase of Skaffold is now split into a new render phase and deploy phase.  This clear boundary of …", "og:site_name": "Skaffold", "ogSiteName": "Skaffold", "ogTitle": "Upgrading from Skaffold v1 to Skaffold v2 [NEW]", "title": "Upgrading from Skaffold v1 to Skaffold v2 [NEW] | Skaffold", "twitter:card": "summary", "generator": "Hugo 0.99.1", "og:type": "website", "language": "en", "og:url": "https://skaffold.dev/docs/upgrading/", "twitter:title": "Upgrading from Skaffold v1 to Skaffold v2 [NEW]", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "ogUrl": "https://skaffold.dev/docs/upgrading/", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "scrapeId": "7ce5ce06-338f-470a-b109-8fefd6565b26", "sourceURL": "https://skaffold.dev/docs/upgrading", "url": "https://skaffold.dev/docs/upgrading/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I upgrading from skaffold v1 to v2 in skaffold?\n\nAssistant: To upgrading from skaffold v1 to v2 in skaffold, here's what you do:\nUpgrading from skaffold `v1.*.*` to skaffold `v2.0.0-beta3` should not require any manual skaffold.yaml changes or CLI command modification for most common use cases. Skaffold `v2` includes the same CLI surface as `v1` and has backwards compatibility for all previous skaffold.yaml schema `apiVersion` for example - `v2beta*`, `v1beta*` and `v1alpha*`..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/upgrading", "title": "Upgrading from Skaffold v1 to Skaffold v2 [NEW]", "description": "This documentation covers the changes and upgrades from Skaffold v1 to Skaffold v2, including the new render phase, schema updates, and compatibility notes.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:01:03", "type": "section_detail", "page_metadata": {"og:description": "Easy and Repeatable Container & Kubernetes Development", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:title": "Upgrading from Skaffold v1 to Skaffold v2 [NEW]", "robots": "index, follow", "description": "In Skaffold v2 what was previously the deploy phase of Skaffold is now split into a new render phase and deploy phase.  This clear boundary of …", "og:site_name": "Skaffold", "ogSiteName": "Skaffold", "ogTitle": "Upgrading from Skaffold v1 to Skaffold v2 [NEW]", "title": "Upgrading from Skaffold v1 to Skaffold v2 [NEW] | Skaffold", "twitter:card": "summary", "generator": "Hugo 0.99.1", "og:type": "website", "language": "en", "og:url": "https://skaffold.dev/docs/upgrading/", "twitter:title": "Upgrading from Skaffold v1 to Skaffold v2 [NEW]", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "ogUrl": "https://skaffold.dev/docs/upgrading/", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "scrapeId": "7ce5ce06-338f-470a-b109-8fefd6565b26", "sourceURL": "https://skaffold.dev/docs/upgrading", "url": "https://skaffold.dev/docs/upgrading/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I updating skaffold.yaml in skaffold?\n\nAssistant: To updating skaffold.yaml in skaffold, here's what you do:\nIf you wish to update your skaffold.yaml to the latest `apiVersion` ( `apiVersion: v3alpha1`) run `skaffold fix` which will output an updated skaffold.yaml with the schema fields updated for `v3alpha1`. With this new `v3alpha1` configuration schema you can access the new v2 functionality via the `v3alpha1` configuration fields..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/upgrading", "title": "Upgrading from Skaffold v1 to Skaffold v2 [NEW]", "description": "This documentation covers the changes and upgrades from Skaffold v1 to Skaffold v2, including the new render phase, schema updates, and compatibility notes.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:01:03", "type": "section_detail", "page_metadata": {"og:description": "Easy and Repeatable Container & Kubernetes Development", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:title": "Upgrading from Skaffold v1 to Skaffold v2 [NEW]", "robots": "index, follow", "description": "In Skaffold v2 what was previously the deploy phase of Skaffold is now split into a new render phase and deploy phase.  This clear boundary of …", "og:site_name": "Skaffold", "ogSiteName": "Skaffold", "ogTitle": "Upgrading from Skaffold v1 to Skaffold v2 [NEW]", "title": "Upgrading from Skaffold v1 to Skaffold v2 [NEW] | Skaffold", "twitter:card": "summary", "generator": "Hugo 0.99.1", "og:type": "website", "language": "en", "og:url": "https://skaffold.dev/docs/upgrading/", "twitter:title": "Upgrading from Skaffold v1 to Skaffold v2 [NEW]", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "ogUrl": "https://skaffold.dev/docs/upgrading/", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "scrapeId": "7ce5ce06-338f-470a-b109-8fefd6565b26", "sourceURL": "https://skaffold.dev/docs/upgrading", "url": "https://skaffold.dev/docs/upgrading/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I example usage of skaffold fix in skaffold?\n\nAssistant: To example usage of skaffold fix in skaffold, here's what you do:\nExample usage of `skaffold fix`:\n\n```console\n$ cat skaffold.yaml | head -1\napiVersion: skaffold/v2beta29\n$ skaffold fix\napiVersion: skaffold/v3alpha1\nkind: Config\nbuild:\n  artifacts:\n  - image: skaffold-example\nmanifests:\n  rawYaml:\n  - k8s-*\ndeploy:\n  kubectl: {}\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/upgrading", "title": "Upgrading from Skaffold v1 to Skaffold v2 [NEW]", "description": "This documentation covers the changes and upgrades from Skaffold v1 to Skaffold v2, including the new render phase, schema updates, and compatibility notes.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:01:03", "type": "section_detail", "page_metadata": {"og:description": "Easy and Repeatable Container & Kubernetes Development", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:title": "Upgrading from Skaffold v1 to Skaffold v2 [NEW]", "robots": "index, follow", "description": "In Skaffold v2 what was previously the deploy phase of Skaffold is now split into a new render phase and deploy phase.  This clear boundary of …", "og:site_name": "Skaffold", "ogSiteName": "Skaffold", "ogTitle": "Upgrading from Skaffold v1 to Skaffold v2 [NEW]", "title": "Upgrading from Skaffold v1 to Skaffold v2 [NEW] | Skaffold", "twitter:card": "summary", "generator": "Hugo 0.99.1", "og:type": "website", "language": "en", "og:url": "https://skaffold.dev/docs/upgrading/", "twitter:title": "Upgrading from Skaffold v1 to Skaffold v2 [NEW]", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "ogUrl": "https://skaffold.dev/docs/upgrading/", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "scrapeId": "7ce5ce06-338f-470a-b109-8fefd6565b26", "sourceURL": "https://skaffold.dev/docs/upgrading", "url": "https://skaffold.dev/docs/upgrading/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I features no longer supported in skaffold?\n\nAssistant: To features no longer supported in skaffold, here's what you do:\nThe list of features that were supported in skaffold `v1` but are no longer support or require manual changes for `v2.0.0-beta3` include:\n\n- `v1` `kpt` deployer usage is not upgradeable via `skaffold fix` given the numerous changes made to the `kpt` workflow. Manual changes might be required to get users pipelines working as expected.\n- using multiple renderers WITH the `kpt` deployer being one of them (using combinations of any other renderer(s) works as it did previously)..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/upgrading", "title": "Upgrading from Skaffold v1 to Skaffold v2 [NEW]", "description": "This documentation covers the changes and upgrades from Skaffold v1 to Skaffold v2, including the new render phase, schema updates, and compatibility notes.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:01:03", "type": "section_detail", "page_metadata": {"og:description": "Easy and Repeatable Container & Kubernetes Development", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:title": "Upgrading from Skaffold v1 to Skaffold v2 [NEW]", "robots": "index, follow", "description": "In Skaffold v2 what was previously the deploy phase of Skaffold is now split into a new render phase and deploy phase.  This clear boundary of …", "og:site_name": "Skaffold", "ogSiteName": "Skaffold", "ogTitle": "Upgrading from Skaffold v1 to Skaffold v2 [NEW]", "title": "Upgrading from Skaffold v1 to Skaffold v2 [NEW] | Skaffold", "twitter:card": "summary", "generator": "Hugo 0.99.1", "og:type": "website", "language": "en", "og:url": "https://skaffold.dev/docs/upgrading/", "twitter:title": "Upgrading from Skaffold v1 to Skaffold v2 [NEW]", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "ogUrl": "https://skaffold.dev/docs/upgrading/", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "scrapeId": "7ce5ce06-338f-470a-b109-8fefd6565b26", "sourceURL": "https://skaffold.dev/docs/upgrading", "url": "https://skaffold.dev/docs/upgrading/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I known issues and compatibility in skaffold?\n\nAssistant: To known issues and compatibility in skaffold, here's what you do:\nOutside of the above, there are currently no known other regressions when migrating from skaffold v1 -> v2 but areas that are most likely to have possible issues/incompatibility include:\n\n- `helm` renderer/deployer usage (see [helm docs](https://skaffold.dev/docs/renderers/helm/) for more details)\n- v1 `kpt` deployer usage\n- `skaffold render` flags usage (see [render docs](https://skaffold.dev/docs/renderers/) and [render schema](https://skaffold.dev/docs/references/yaml/#manifests) for more details).\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/upgrading", "title": "Upgrading from Skaffold v1 to Skaffold v2 [NEW]", "description": "This documentation covers the changes and upgrades from Skaffold v1 to Skaffold v2, including the new render phase, schema updates, and compatibility notes.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:01:03", "type": "section_detail", "page_metadata": {"og:description": "Easy and Repeatable Container & Kubernetes Development", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:title": "Upgrading from Skaffold v1 to Skaffold v2 [NEW]", "robots": "index, follow", "description": "In Skaffold v2 what was previously the deploy phase of Skaffold is now split into a new render phase and deploy phase.  This clear boundary of …", "og:site_name": "Skaffold", "ogSiteName": "Skaffold", "ogTitle": "Upgrading from Skaffold v1 to Skaffold v2 [NEW]", "title": "Upgrading from Skaffold v1 to Skaffold v2 [NEW] | Skaffold", "twitter:card": "summary", "generator": "Hugo 0.99.1", "og:type": "website", "language": "en", "og:url": "https://skaffold.dev/docs/upgrading/", "twitter:title": "Upgrading from Skaffold v1 to Skaffold v2 [NEW]", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "ogUrl": "https://skaffold.dev/docs/upgrading/", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "scrapeId": "7ce5ce06-338f-470a-b109-8fefd6565b26", "sourceURL": "https://skaffold.dev/docs/upgrading", "url": "https://skaffold.dev/docs/upgrading/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you give me some code examples for Upgrading from Skaffold v1 to Skaffold v2 [NEW] in skaffold?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Example usage of skaffold fix**:\n\n```yaml\n```console\n$ cat skaffold.yaml | head -1\napiVersion: skaffold/v2beta29\n$ skaffold fix\napiVersion: skaffold/v3alpha1\nkind: Config\nbuild:\n  artifacts:\n  - image: skaffold-example\nmanifests:\n  rawYaml:\n  - k8s-*\ndeploy:\n  kubectl: {}\n```\n```\n\nThis snippet shows you how to example usage of skaffold fix, which is an important aspect of upgrading from skaffold v1 to skaffold v2 [new].\n\n", "metadata": {"source_url": "https://skaffold.dev/docs/upgrading", "title": "Upgrading from Skaffold v1 to Skaffold v2 [NEW]", "description": "This documentation covers the changes and upgrades from Skaffold v1 to Skaffold v2, including the new render phase, schema updates, and compatibility notes.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:01:03", "type": "code_examples", "page_metadata": {"og:description": "Easy and Repeatable Container & Kubernetes Development", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:title": "Upgrading from Skaffold v1 to Skaffold v2 [NEW]", "robots": "index, follow", "description": "In Skaffold v2 what was previously the deploy phase of Skaffold is now split into a new render phase and deploy phase.  This clear boundary of …", "og:site_name": "Skaffold", "ogSiteName": "Skaffold", "ogTitle": "Upgrading from Skaffold v1 to Skaffold v2 [NEW]", "title": "Upgrading from Skaffold v1 to Skaffold v2 [NEW] | Skaffold", "twitter:card": "summary", "generator": "Hugo 0.99.1", "og:type": "website", "language": "en", "og:url": "https://skaffold.dev/docs/upgrading/", "twitter:title": "Upgrading from Skaffold v1 to Skaffold v2 [NEW]", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "ogUrl": "https://skaffold.dev/docs/upgrading/", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "scrapeId": "7ce5ce06-338f-470a-b109-8fefd6565b26", "sourceURL": "https://skaffold.dev/docs/upgrading", "url": "https://skaffold.dev/docs/upgrading/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: What are some tips for using Upgrading from Skaffold v1 to Skaffold v2 [NEW] in skaffold effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nIf you encounter any issues using skaffold `v2.0.0-beta3`, particularly any regressions that used to work differently or succeed in `v1`, please file an issue at [GoogleContainerTools/skaffold](https://github.com/GoogleContainerTools/skaffold/issues).\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://skaffold.dev/docs/upgrading", "title": "Upgrading from Skaffold v1 to Skaffold v2 [NEW]", "description": "This documentation covers the changes and upgrades from Skaffold v1 to Skaffold v2, including the new render phase, schema updates, and compatibility notes.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:01:03", "type": "best_practices", "page_metadata": {"og:description": "Easy and Repeatable Container & Kubernetes Development", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:title": "Upgrading from Skaffold v1 to Skaffold v2 [NEW]", "robots": "index, follow", "description": "In Skaffold v2 what was previously the deploy phase of Skaffold is now split into a new render phase and deploy phase.  This clear boundary of …", "og:site_name": "Skaffold", "ogSiteName": "Skaffold", "ogTitle": "Upgrading from Skaffold v1 to Skaffold v2 [NEW]", "title": "Upgrading from Skaffold v1 to Skaffold v2 [NEW] | Skaffold", "twitter:card": "summary", "generator": "Hugo 0.99.1", "og:type": "website", "language": "en", "og:url": "https://skaffold.dev/docs/upgrading/", "twitter:title": "Upgrading from Skaffold v1 to Skaffold v2 [NEW]", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "ogUrl": "https://skaffold.dev/docs/upgrading/", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "scrapeId": "7ce5ce06-338f-470a-b109-8fefd6565b26", "sourceURL": "https://skaffold.dev/docs/upgrading", "url": "https://skaffold.dev/docs/upgrading/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what Container Structure Test is in skaffold?\n\nAssistant: Sure, I'd be happy to explain Container Structure Test in skaffold.\n\n# Container Structure Test\n\nThis page covers how to validate built container images using Skaffold's integrated testing phase, specifically focusing on container-structure-tests.Here's a quick rundown of what this is about:\n\n## Overview\n\nIt’s common practice to validate built container images before deploying them to our cluster. To do this, Skaffold has an integrated testing phase between the build and deploy phases of the pipeline. Natively, Skaffold has support for running container-structure-tests on built images, which validate the structural integrity of container images. The container-structure-test binary must be installed to run these tests.\n\n## Structure Tests in Skaffold\n\nStructure tests are defined per image in the Skaffold config. Every time an artifact is rebuilt, Skaffold runs the associated structure tests on that image. If the tests fail, Skaffold will not continue on to the deploy stage. If frequent tests are prohibitive, long-running tests should be moved to a dedicated Skaffold profile. Users can opt out of running container structure tests by using the --skip-tests flag.\n\n## Example\n\nThis following example shows the test section from a skaffold.yaml. It instructs Skaffold to run all container structure tests in the structure-test folder relative to the Skaffold root directory:\n\n```yaml\ntest:\n  - image: gcr.io/k8s-skaffold/skaffold-example\n    structureTests:\n      - './structure-test/*'\n```\n\nThe files matched by the structureTests key are container-structure-test test configurations, such as:\n\n```yaml\nschemaVersion: 2.0.0\n\nfileExistenceTests:\n  - name: 'no go binary'\n    path: '/usr/bin/go'\n    shouldExist: false\n```\n\nFor a reference how to write container structure tests, see its documentation.\n\n## Restricting Structure Tests\n\nIn order to restrict the executed structure tests, a profile section can override the file pattern:\n\n```yaml\nprofiles:\n  - name: quickcheck\n    test:\n      - image: gcr.io/k8s-skaffold/skaffold-example\n        structureTests:\n          - './structure-test/profile_structure_test.yaml'\n```\n\nUser can customize container-structure-test behavior by passing a list of configuration flags as a value of structureTestsArgs yaml property in skaffold.yaml, e.g.: \n\n```yaml\ntest:\n  - image: gcr.io/k8s-skaffold/skaffold-example\n    structureTests:\n      - './structure-test/*'\n    structureTestsArgs:\n      - --driver=tar\n      - -q\n      - --no-color\n      -  --test-report=TEST_REPORT_NAME\n```\n\nTo execute the tests once, run `skaffold test --profile quickcheck`.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/testers/structure", "title": "Container Structure Test", "description": "This page covers how to validate built container images using Skaffold's integrated testing phase, specifically focusing on container-structure-tests.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:01:33", "type": "overview", "page_metadata": {"ogDescription": "It’s common practice to validate built container images before deploying them to our cluster. To do this, Skaffold has an integrated testing phase between the build and deploy phases of the pipeline. Natively, Skaffold has support for running container-structure-tests on built images, which validate the structural integrity of container images. The container-structure-test binary must be installed to run these tests.\nStructure tests are defined per image in the Skaffold config. Every time an artifact is rebuilt, Skaffold runs the associated structure tests on that image.", "ogSiteName": "Skaffold", "og:url": "https://skaffold.dev/docs/testers/structure/", "og:type": "article", "ogUrl": "https://skaffold.dev/docs/testers/structure/", "twitter:card": "summary", "og:description": "It’s common practice to validate built container images before deploying them to our cluster. To do this, Skaffold has an integrated testing phase between the build and deploy phases of the pipeline. Natively, Skaffold has support for running container-structure-tests on built images, which validate the structural integrity of container images. The container-structure-test binary must be installed to run these tests.\nStructure tests are defined per image in the Skaffold config. Every time an artifact is rebuilt, Skaffold runs the associated structure tests on that image.", "modifiedTime": "2025-01-23T10:14:58-05:00", "article:section": "docs", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "description": "It’s common practice to validate built container images before deploying them to our cluster.\nTo do this, Skaffold has an integrated testing …", "twitter:description": "It’s common practice to validate built container images before deploying them to our cluster. To do this, Skaffold has an integrated testing phase between the build and deploy phases of the pipeline. Natively, Skaffold has support for running container-structure-tests on built images, which validate the structural integrity of container images. The container-structure-test binary must be installed to run these tests.\nStructure tests are defined per image in the Skaffold config. Every time an artifact is rebuilt, Skaffold runs the associated structure tests on that image.", "ogTitle": "Container Structure Test", "twitter:title": "Container Structure Test", "generator": "Hugo 0.99.1", "og:title": "Container Structure Test", "title": "Container Structure Test | Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "article:modified_time": "2025-01-23T10:14:58-05:00", "language": "en", "robots": "index, follow", "og:site_name": "Skaffold", "scrapeId": "d0fbe3bb-5ab7-4930-af5a-b892df9d6193", "sourceURL": "https://skaffold.dev/docs/testers/structure", "url": "https://skaffold.dev/docs/testers/structure/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I overview in skaffold?\n\nAssistant: To overview in skaffold, here's what you do:\nIt’s common practice to validate built container images before deploying them to our cluster. To do this, Skaffold has an integrated testing phase between the build and deploy phases of the pipeline. Natively, Skaffold has support for running container-structure-tests on built images, which validate the structural integrity of container images. The container-structure-test binary must be installed to run these tests..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/testers/structure", "title": "Container Structure Test", "description": "This page covers how to validate built container images using Skaffold's integrated testing phase, specifically focusing on container-structure-tests.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:01:33", "type": "section_detail", "page_metadata": {"ogDescription": "It’s common practice to validate built container images before deploying them to our cluster. To do this, Skaffold has an integrated testing phase between the build and deploy phases of the pipeline. Natively, Skaffold has support for running container-structure-tests on built images, which validate the structural integrity of container images. The container-structure-test binary must be installed to run these tests.\nStructure tests are defined per image in the Skaffold config. Every time an artifact is rebuilt, Skaffold runs the associated structure tests on that image.", "ogSiteName": "Skaffold", "og:url": "https://skaffold.dev/docs/testers/structure/", "og:type": "article", "ogUrl": "https://skaffold.dev/docs/testers/structure/", "twitter:card": "summary", "og:description": "It’s common practice to validate built container images before deploying them to our cluster. To do this, Skaffold has an integrated testing phase between the build and deploy phases of the pipeline. Natively, Skaffold has support for running container-structure-tests on built images, which validate the structural integrity of container images. The container-structure-test binary must be installed to run these tests.\nStructure tests are defined per image in the Skaffold config. Every time an artifact is rebuilt, Skaffold runs the associated structure tests on that image.", "modifiedTime": "2025-01-23T10:14:58-05:00", "article:section": "docs", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "description": "It’s common practice to validate built container images before deploying them to our cluster.\nTo do this, Skaffold has an integrated testing …", "twitter:description": "It’s common practice to validate built container images before deploying them to our cluster. To do this, Skaffold has an integrated testing phase between the build and deploy phases of the pipeline. Natively, Skaffold has support for running container-structure-tests on built images, which validate the structural integrity of container images. The container-structure-test binary must be installed to run these tests.\nStructure tests are defined per image in the Skaffold config. Every time an artifact is rebuilt, Skaffold runs the associated structure tests on that image.", "ogTitle": "Container Structure Test", "twitter:title": "Container Structure Test", "generator": "Hugo 0.99.1", "og:title": "Container Structure Test", "title": "Container Structure Test | Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "article:modified_time": "2025-01-23T10:14:58-05:00", "language": "en", "robots": "index, follow", "og:site_name": "Skaffold", "scrapeId": "d0fbe3bb-5ab7-4930-af5a-b892df9d6193", "sourceURL": "https://skaffold.dev/docs/testers/structure", "url": "https://skaffold.dev/docs/testers/structure/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I structure tests in skaffold in skaffold?\n\nAssistant: To structure tests in skaffold in skaffold, here's what you do:\nStructure tests are defined per image in the Skaffold config. Every time an artifact is rebuilt, Skaffold runs the associated structure tests on that image. If the tests fail, Skaffold will not continue on to the deploy stage. If frequent tests are prohibitive, long-running tests should be moved to a dedicated Skaffold profile. Users can opt out of running container structure tests by using the --skip-tests flag..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/testers/structure", "title": "Container Structure Test", "description": "This page covers how to validate built container images using Skaffold's integrated testing phase, specifically focusing on container-structure-tests.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:01:33", "type": "section_detail", "page_metadata": {"ogDescription": "It’s common practice to validate built container images before deploying them to our cluster. To do this, Skaffold has an integrated testing phase between the build and deploy phases of the pipeline. Natively, Skaffold has support for running container-structure-tests on built images, which validate the structural integrity of container images. The container-structure-test binary must be installed to run these tests.\nStructure tests are defined per image in the Skaffold config. Every time an artifact is rebuilt, Skaffold runs the associated structure tests on that image.", "ogSiteName": "Skaffold", "og:url": "https://skaffold.dev/docs/testers/structure/", "og:type": "article", "ogUrl": "https://skaffold.dev/docs/testers/structure/", "twitter:card": "summary", "og:description": "It’s common practice to validate built container images before deploying them to our cluster. To do this, Skaffold has an integrated testing phase between the build and deploy phases of the pipeline. Natively, Skaffold has support for running container-structure-tests on built images, which validate the structural integrity of container images. The container-structure-test binary must be installed to run these tests.\nStructure tests are defined per image in the Skaffold config. Every time an artifact is rebuilt, Skaffold runs the associated structure tests on that image.", "modifiedTime": "2025-01-23T10:14:58-05:00", "article:section": "docs", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "description": "It’s common practice to validate built container images before deploying them to our cluster.\nTo do this, Skaffold has an integrated testing …", "twitter:description": "It’s common practice to validate built container images before deploying them to our cluster. To do this, Skaffold has an integrated testing phase between the build and deploy phases of the pipeline. Natively, Skaffold has support for running container-structure-tests on built images, which validate the structural integrity of container images. The container-structure-test binary must be installed to run these tests.\nStructure tests are defined per image in the Skaffold config. Every time an artifact is rebuilt, Skaffold runs the associated structure tests on that image.", "ogTitle": "Container Structure Test", "twitter:title": "Container Structure Test", "generator": "Hugo 0.99.1", "og:title": "Container Structure Test", "title": "Container Structure Test | Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "article:modified_time": "2025-01-23T10:14:58-05:00", "language": "en", "robots": "index, follow", "og:site_name": "Skaffold", "scrapeId": "d0fbe3bb-5ab7-4930-af5a-b892df9d6193", "sourceURL": "https://skaffold.dev/docs/testers/structure", "url": "https://skaffold.dev/docs/testers/structure/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I example in skaffold?\n\nAssistant: To example in skaffold, here's what you do:\nThis following example shows the test section from a skaffold.yaml. It instructs Skaffold to run all container structure tests in the structure-test folder relative to the Skaffold root directory:\n\n```yaml\ntest:\n  - image: gcr.io/k8s-skaffold/skaffold-example\n    structureTests:\n      - './structure-test/*'\n```\n\nThe files matched by the structureTests key are container-structure-test test configurations, such as:\n\n```yaml\nschemaVersion: 2.0.0\n\nfileExistenceTests:\n  - name: 'no go binary'\n    path: '/usr/bin/go'\n    shouldExist: false\n```\n\nFor a reference how to write container structure tests, see its documentation..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/testers/structure", "title": "Container Structure Test", "description": "This page covers how to validate built container images using Skaffold's integrated testing phase, specifically focusing on container-structure-tests.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:01:33", "type": "section_detail", "page_metadata": {"ogDescription": "It’s common practice to validate built container images before deploying them to our cluster. To do this, Skaffold has an integrated testing phase between the build and deploy phases of the pipeline. Natively, Skaffold has support for running container-structure-tests on built images, which validate the structural integrity of container images. The container-structure-test binary must be installed to run these tests.\nStructure tests are defined per image in the Skaffold config. Every time an artifact is rebuilt, Skaffold runs the associated structure tests on that image.", "ogSiteName": "Skaffold", "og:url": "https://skaffold.dev/docs/testers/structure/", "og:type": "article", "ogUrl": "https://skaffold.dev/docs/testers/structure/", "twitter:card": "summary", "og:description": "It’s common practice to validate built container images before deploying them to our cluster. To do this, Skaffold has an integrated testing phase between the build and deploy phases of the pipeline. Natively, Skaffold has support for running container-structure-tests on built images, which validate the structural integrity of container images. The container-structure-test binary must be installed to run these tests.\nStructure tests are defined per image in the Skaffold config. Every time an artifact is rebuilt, Skaffold runs the associated structure tests on that image.", "modifiedTime": "2025-01-23T10:14:58-05:00", "article:section": "docs", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "description": "It’s common practice to validate built container images before deploying them to our cluster.\nTo do this, Skaffold has an integrated testing …", "twitter:description": "It’s common practice to validate built container images before deploying them to our cluster. To do this, Skaffold has an integrated testing phase between the build and deploy phases of the pipeline. Natively, Skaffold has support for running container-structure-tests on built images, which validate the structural integrity of container images. The container-structure-test binary must be installed to run these tests.\nStructure tests are defined per image in the Skaffold config. Every time an artifact is rebuilt, Skaffold runs the associated structure tests on that image.", "ogTitle": "Container Structure Test", "twitter:title": "Container Structure Test", "generator": "Hugo 0.99.1", "og:title": "Container Structure Test", "title": "Container Structure Test | Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "article:modified_time": "2025-01-23T10:14:58-05:00", "language": "en", "robots": "index, follow", "og:site_name": "Skaffold", "scrapeId": "d0fbe3bb-5ab7-4930-af5a-b892df9d6193", "sourceURL": "https://skaffold.dev/docs/testers/structure", "url": "https://skaffold.dev/docs/testers/structure/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I restricting structure tests in skaffold?\n\nAssistant: To restricting structure tests in skaffold, here's what you do:\nIn order to restrict the executed structure tests, a profile section can override the file pattern:\n\n```yaml\nprofiles:\n  - name: quickcheck\n    test:\n      - image: gcr.io/k8s-skaffold/skaffold-example\n        structureTests:\n          - './structure-test/profile_structure_test.yaml'\n```\n\nUser can customize container-structure-test behavior by passing a list of configuration flags as a value of structureTestsArgs yaml property in skaffold.yaml, e.g.: \n\n```yaml\ntest:\n  - image: gcr.io/k8s-skaffold/skaffold-example\n    structureTests:\n      - './structure-test/*'\n    structureTestsArgs:\n      - --driver=tar\n      - -q\n      - --no-color\n      -  --test-report=TEST_REPORT_NAME\n```\n\nTo execute the tests once, run `skaffold test --profile quickcheck`..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/testers/structure", "title": "Container Structure Test", "description": "This page covers how to validate built container images using Skaffold's integrated testing phase, specifically focusing on container-structure-tests.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:01:33", "type": "section_detail", "page_metadata": {"ogDescription": "It’s common practice to validate built container images before deploying them to our cluster. To do this, Skaffold has an integrated testing phase between the build and deploy phases of the pipeline. Natively, Skaffold has support for running container-structure-tests on built images, which validate the structural integrity of container images. The container-structure-test binary must be installed to run these tests.\nStructure tests are defined per image in the Skaffold config. Every time an artifact is rebuilt, Skaffold runs the associated structure tests on that image.", "ogSiteName": "Skaffold", "og:url": "https://skaffold.dev/docs/testers/structure/", "og:type": "article", "ogUrl": "https://skaffold.dev/docs/testers/structure/", "twitter:card": "summary", "og:description": "It’s common practice to validate built container images before deploying them to our cluster. To do this, Skaffold has an integrated testing phase between the build and deploy phases of the pipeline. Natively, Skaffold has support for running container-structure-tests on built images, which validate the structural integrity of container images. The container-structure-test binary must be installed to run these tests.\nStructure tests are defined per image in the Skaffold config. Every time an artifact is rebuilt, Skaffold runs the associated structure tests on that image.", "modifiedTime": "2025-01-23T10:14:58-05:00", "article:section": "docs", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "description": "It’s common practice to validate built container images before deploying them to our cluster.\nTo do this, Skaffold has an integrated testing …", "twitter:description": "It’s common practice to validate built container images before deploying them to our cluster. To do this, Skaffold has an integrated testing phase between the build and deploy phases of the pipeline. Natively, Skaffold has support for running container-structure-tests on built images, which validate the structural integrity of container images. The container-structure-test binary must be installed to run these tests.\nStructure tests are defined per image in the Skaffold config. Every time an artifact is rebuilt, Skaffold runs the associated structure tests on that image.", "ogTitle": "Container Structure Test", "twitter:title": "Container Structure Test", "generator": "Hugo 0.99.1", "og:title": "Container Structure Test", "title": "Container Structure Test | Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "article:modified_time": "2025-01-23T10:14:58-05:00", "language": "en", "robots": "index, follow", "og:site_name": "Skaffold", "scrapeId": "d0fbe3bb-5ab7-4930-af5a-b892df9d6193", "sourceURL": "https://skaffold.dev/docs/testers/structure", "url": "https://skaffold.dev/docs/testers/structure/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you give me some code examples for Container Structure Test in skaffold?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Skaffold Test Section Example**:\n\n```yaml\ntest:\n  - image: gcr.io/k8s-skaffold/skaffold-example\n    structureTests:\n      - './structure-test/*'\n```\n\nThis snippet shows you how to skaffold test section example, which is an important aspect of container structure test.\n\n**Container Structure Test Configuration Example**:\n\n```yaml\nschemaVersion: 2.0.0\n\nfileExistenceTests:\n  - name: 'no go binary'\n    path: '/usr/bin/go'\n    shouldExist: false\n```\n\nThis snippet shows you how to container structure test configuration example, which is an important aspect of container structure test.\n\n**Profile Section Example**:\n\n```yaml\nprofiles:\n  - name: quickcheck\n    test:\n      - image: gcr.io/k8s-skaffold/skaffold-example\n        structureTests:\n          - './structure-test/profile_structure_test.yaml'\n```\n\nThis snippet shows you how to profile section example, which is an important aspect of container structure test.\n\n**Structure Tests Args Example**:\n\n```yaml\ntest:\n  - image: gcr.io/k8s-skaffold/skaffold-example\n    structureTests:\n      - './structure-test/*'\n    structureTestsArgs:\n      - --driver=tar\n      - -q\n      - --no-color\n      -  --test-report=TEST_REPORT_NAME\n```\n\nThis snippet shows you how to structure tests args example, which is an important aspect of container structure test.\n\n", "metadata": {"source_url": "https://skaffold.dev/docs/testers/structure", "title": "Container Structure Test", "description": "This page covers how to validate built container images using Skaffold's integrated testing phase, specifically focusing on container-structure-tests.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:01:33", "type": "code_examples", "page_metadata": {"ogDescription": "It’s common practice to validate built container images before deploying them to our cluster. To do this, Skaffold has an integrated testing phase between the build and deploy phases of the pipeline. Natively, Skaffold has support for running container-structure-tests on built images, which validate the structural integrity of container images. The container-structure-test binary must be installed to run these tests.\nStructure tests are defined per image in the Skaffold config. Every time an artifact is rebuilt, Skaffold runs the associated structure tests on that image.", "ogSiteName": "Skaffold", "og:url": "https://skaffold.dev/docs/testers/structure/", "og:type": "article", "ogUrl": "https://skaffold.dev/docs/testers/structure/", "twitter:card": "summary", "og:description": "It’s common practice to validate built container images before deploying them to our cluster. To do this, Skaffold has an integrated testing phase between the build and deploy phases of the pipeline. Natively, Skaffold has support for running container-structure-tests on built images, which validate the structural integrity of container images. The container-structure-test binary must be installed to run these tests.\nStructure tests are defined per image in the Skaffold config. Every time an artifact is rebuilt, Skaffold runs the associated structure tests on that image.", "modifiedTime": "2025-01-23T10:14:58-05:00", "article:section": "docs", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "description": "It’s common practice to validate built container images before deploying them to our cluster.\nTo do this, Skaffold has an integrated testing …", "twitter:description": "It’s common practice to validate built container images before deploying them to our cluster. To do this, Skaffold has an integrated testing phase between the build and deploy phases of the pipeline. Natively, Skaffold has support for running container-structure-tests on built images, which validate the structural integrity of container images. The container-structure-test binary must be installed to run these tests.\nStructure tests are defined per image in the Skaffold config. Every time an artifact is rebuilt, Skaffold runs the associated structure tests on that image.", "ogTitle": "Container Structure Test", "twitter:title": "Container Structure Test", "generator": "Hugo 0.99.1", "og:title": "Container Structure Test", "title": "Container Structure Test | Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "article:modified_time": "2025-01-23T10:14:58-05:00", "language": "en", "robots": "index, follow", "og:site_name": "Skaffold", "scrapeId": "d0fbe3bb-5ab7-4930-af5a-b892df9d6193", "sourceURL": "https://skaffold.dev/docs/testers/structure", "url": "https://skaffold.dev/docs/testers/structure/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: What are some tips for using Container Structure Test in skaffold effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nIf frequent tests are prohibitive, long-running tests should be moved to a dedicated Skaffold profile.\n\nUsers can opt out of running container structure tests by using the --skip-tests flag.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://skaffold.dev/docs/testers/structure", "title": "Container Structure Test", "description": "This page covers how to validate built container images using Skaffold's integrated testing phase, specifically focusing on container-structure-tests.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:01:33", "type": "best_practices", "page_metadata": {"ogDescription": "It’s common practice to validate built container images before deploying them to our cluster. To do this, Skaffold has an integrated testing phase between the build and deploy phases of the pipeline. Natively, Skaffold has support for running container-structure-tests on built images, which validate the structural integrity of container images. The container-structure-test binary must be installed to run these tests.\nStructure tests are defined per image in the Skaffold config. Every time an artifact is rebuilt, Skaffold runs the associated structure tests on that image.", "ogSiteName": "Skaffold", "og:url": "https://skaffold.dev/docs/testers/structure/", "og:type": "article", "ogUrl": "https://skaffold.dev/docs/testers/structure/", "twitter:card": "summary", "og:description": "It’s common practice to validate built container images before deploying them to our cluster. To do this, Skaffold has an integrated testing phase between the build and deploy phases of the pipeline. Natively, Skaffold has support for running container-structure-tests on built images, which validate the structural integrity of container images. The container-structure-test binary must be installed to run these tests.\nStructure tests are defined per image in the Skaffold config. Every time an artifact is rebuilt, Skaffold runs the associated structure tests on that image.", "modifiedTime": "2025-01-23T10:14:58-05:00", "article:section": "docs", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "description": "It’s common practice to validate built container images before deploying them to our cluster.\nTo do this, Skaffold has an integrated testing …", "twitter:description": "It’s common practice to validate built container images before deploying them to our cluster. To do this, Skaffold has an integrated testing phase between the build and deploy phases of the pipeline. Natively, Skaffold has support for running container-structure-tests on built images, which validate the structural integrity of container images. The container-structure-test binary must be installed to run these tests.\nStructure tests are defined per image in the Skaffold config. Every time an artifact is rebuilt, Skaffold runs the associated structure tests on that image.", "ogTitle": "Container Structure Test", "twitter:title": "Container Structure Test", "generator": "Hugo 0.99.1", "og:title": "Container Structure Test", "title": "Container Structure Test | Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "article:modified_time": "2025-01-23T10:14:58-05:00", "language": "en", "robots": "index, follow", "og:site_name": "Skaffold", "scrapeId": "d0fbe3bb-5ab7-4930-af5a-b892df9d6193", "sourceURL": "https://skaffold.dev/docs/testers/structure", "url": "https://skaffold.dev/docs/testers/structure/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what skaffold dev is in skaffold?\n\nAssistant: Sure, I'd be happy to explain skaffold dev in skaffold.\n\n# skaffold dev\n\n`skaffold dev` enables continuous local development on an application, watching source files for changes and rebuilding images, testing, and redeploying the application.Here's a quick rundown of what this is about:\n\n## Dev loop\n\nWhen `skaffold dev` is run, Skaffold will first do a full build, test, render and deploy of all artifacts specified in the `skaffold.yaml`, similar to `skaffold run`. By default, Skaffold will exit if any of these stages fails. Upon successful build, test, render and deploy, Skaffold will start watching all source file dependencies for all artifacts specified in the project. As changes are made to these source files, Skaffold will rebuild and retest the associated artifacts, and redeploy the new changes to your cluster.\n\nThe `--keep-running-on-failure` flag can be used to keep Skaffold running by suspending the Skaffold session while encountering errors in the first build, test, render, deploy. The user can attempt to fix the errors and then restore the session by pressing any key or exit the session with `Ctrl+C`. The session will be suspended again unless the errors are fixed. Using this flag should result in an better experience for `dev` sessions where errors occur that would otherwise cause Skaffold to exit.\n\nThe dev loop will run until the user cancels the Skaffold process with `Ctrl+C`. Upon receiving this signal, Skaffold will clean up all deployed artifacts on the active cluster, meaning that Skaffold won’t abandon any Kubernetes resources that it created throughout the lifecycle of the run. This can be optionally disabled by using the `--no-prune` flag.\n\n## Precedence of Actions\n\nThe actions performed by Skaffold during the dev loop have precedence over one another, so that behavior is always predictable. The order of actions is:\n\n1. [File Sync](https://skaffold.dev/docs/filesync/)\n2. [Build](https://skaffold.dev/docs/builders/)\n3. [Test](https://skaffold.dev/docs/testers/)\n4. [Deploy](https://skaffold.dev/docs/deployers/)\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/workflows/dev", "title": "skaffold dev", "description": "`skaffold dev` enables continuous local development on an application, watching source files for changes and rebuilding images, testing, and redeploying the application.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:02:09", "type": "overview", "page_metadata": {"twitter:card": "summary", "og:description": "skaffold dev enables continuous local development on an application. While in dev mode, Skaffold will watch an application’s source files, and when it detects changes, will rebuild your images (or sync files to your running containers), push any new images, test built images, and redeploy the application to your cluster.\nskaffold dev is considered Skaffold’s main mode of operation, as it allows you to leverage all of the features of Skaffold in a continuous way while iterating on your application.", "twitter:title": "skaffold dev", "og:url": "https://skaffold.dev/docs/workflows/dev/", "robots": "index, follow", "title": "skaffold dev | Skaffold", "og:site_name": "Skaffold", "article:section": "docs", "ogTitle": "skaffold dev", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "description": "skaffold dev enables continuous local development on an application.\nWhile in dev mode, Skaffold will watch an application’s source files, and …", "og:title": "skaffold dev", "ogUrl": "https://skaffold.dev/docs/workflows/dev/", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "modifiedTime": "2025-01-23T10:14:58-05:00", "generator": "Hugo 0.99.1", "ogSiteName": "Skaffold", "article:modified_time": "2025-01-23T10:14:58-05:00", "ogDescription": "skaffold dev enables continuous local development on an application. While in dev mode, Skaffold will watch an application’s source files, and when it detects changes, will rebuild your images (or sync files to your running containers), push any new images, test built images, and redeploy the application to your cluster.\nskaffold dev is considered Skaffold’s main mode of operation, as it allows you to leverage all of the features of Skaffold in a continuous way while iterating on your application.", "og:type": "article", "language": "en", "twitter:description": "skaffold dev enables continuous local development on an application. While in dev mode, Skaffold will watch an application’s source files, and when it detects changes, will rebuild your images (or sync files to your running containers), push any new images, test built images, and redeploy the application to your cluster.\nskaffold dev is considered Skaffold’s main mode of operation, as it allows you to leverage all of the features of Skaffold in a continuous way while iterating on your application.", "scrapeId": "7798cebf-69b0-4f95-b38b-6ebe6a7b40c3", "sourceURL": "https://skaffold.dev/docs/workflows/dev", "url": "https://skaffold.dev/docs/workflows/dev/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I dev loop in skaffold?\n\nAssistant: To dev loop in skaffold, here's what you do:\nWhen `skaffold dev` is run, Skaffold will first do a full build, test, render and deploy of all artifacts specified in the `skaffold.yaml`, similar to `skaffold run`. By default, Skaffold will exit if any of these stages fails. Upon successful build, test, render and deploy, Skaffold will start watching all source file dependencies for all artifacts specified in the project. As changes are made to these source files, Skaffold will rebuild and retest the associated artifacts, and redeploy the new changes to your cluster.\n\nThe `--keep-running-on-failure` flag can be used to keep Skaffold running by suspending the Skaffold session while encountering errors in the first build, test, render, deploy. The user can attempt to fix the errors and then restore the session by pressing any key or exit the session with `Ctrl+C`. The session will be suspended again unless the errors are fixed. Using this flag should result in an better experience for `dev` sessions where errors occur that would otherwise cause Skaffold to exit.\n\nThe dev loop will run until the user cancels the Skaffold process with `Ctrl+C`. Upon receiving this signal, Skaffold will clean up all deployed artifacts on the active cluster, meaning that Skaffold won’t abandon any Kubernetes resources that it created throughout the lifecycle of the run. This can be optionally disabled by using the `--no-prune` flag..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/workflows/dev", "title": "skaffold dev", "description": "`skaffold dev` enables continuous local development on an application, watching source files for changes and rebuilding images, testing, and redeploying the application.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:02:09", "type": "section_detail", "page_metadata": {"twitter:card": "summary", "og:description": "skaffold dev enables continuous local development on an application. While in dev mode, Skaffold will watch an application’s source files, and when it detects changes, will rebuild your images (or sync files to your running containers), push any new images, test built images, and redeploy the application to your cluster.\nskaffold dev is considered Skaffold’s main mode of operation, as it allows you to leverage all of the features of Skaffold in a continuous way while iterating on your application.", "twitter:title": "skaffold dev", "og:url": "https://skaffold.dev/docs/workflows/dev/", "robots": "index, follow", "title": "skaffold dev | Skaffold", "og:site_name": "Skaffold", "article:section": "docs", "ogTitle": "skaffold dev", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "description": "skaffold dev enables continuous local development on an application.\nWhile in dev mode, Skaffold will watch an application’s source files, and …", "og:title": "skaffold dev", "ogUrl": "https://skaffold.dev/docs/workflows/dev/", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "modifiedTime": "2025-01-23T10:14:58-05:00", "generator": "Hugo 0.99.1", "ogSiteName": "Skaffold", "article:modified_time": "2025-01-23T10:14:58-05:00", "ogDescription": "skaffold dev enables continuous local development on an application. While in dev mode, Skaffold will watch an application’s source files, and when it detects changes, will rebuild your images (or sync files to your running containers), push any new images, test built images, and redeploy the application to your cluster.\nskaffold dev is considered Skaffold’s main mode of operation, as it allows you to leverage all of the features of Skaffold in a continuous way while iterating on your application.", "og:type": "article", "language": "en", "twitter:description": "skaffold dev enables continuous local development on an application. While in dev mode, Skaffold will watch an application’s source files, and when it detects changes, will rebuild your images (or sync files to your running containers), push any new images, test built images, and redeploy the application to your cluster.\nskaffold dev is considered Skaffold’s main mode of operation, as it allows you to leverage all of the features of Skaffold in a continuous way while iterating on your application.", "scrapeId": "7798cebf-69b0-4f95-b38b-6ebe6a7b40c3", "sourceURL": "https://skaffold.dev/docs/workflows/dev", "url": "https://skaffold.dev/docs/workflows/dev/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I precedence of actions in skaffold?\n\nAssistant: To precedence of actions in skaffold, here's what you do:\nThe actions performed by Skaffold during the dev loop have precedence over one another, so that behavior is always predictable. The order of actions is:\n\n1. [File Sync](https://skaffold.dev/docs/filesync/)\n2. [Build](https://skaffold.dev/docs/builders/)\n3. [Test](https://skaffold.dev/docs/testers/)\n4. [Deploy](https://skaffold.dev/docs/deployers/).\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/workflows/dev", "title": "skaffold dev", "description": "`skaffold dev` enables continuous local development on an application, watching source files for changes and rebuilding images, testing, and redeploying the application.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:02:09", "type": "section_detail", "page_metadata": {"twitter:card": "summary", "og:description": "skaffold dev enables continuous local development on an application. While in dev mode, Skaffold will watch an application’s source files, and when it detects changes, will rebuild your images (or sync files to your running containers), push any new images, test built images, and redeploy the application to your cluster.\nskaffold dev is considered Skaffold’s main mode of operation, as it allows you to leverage all of the features of Skaffold in a continuous way while iterating on your application.", "twitter:title": "skaffold dev", "og:url": "https://skaffold.dev/docs/workflows/dev/", "robots": "index, follow", "title": "skaffold dev | Skaffold", "og:site_name": "Skaffold", "article:section": "docs", "ogTitle": "skaffold dev", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "description": "skaffold dev enables continuous local development on an application.\nWhile in dev mode, Skaffold will watch an application’s source files, and …", "og:title": "skaffold dev", "ogUrl": "https://skaffold.dev/docs/workflows/dev/", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "modifiedTime": "2025-01-23T10:14:58-05:00", "generator": "Hugo 0.99.1", "ogSiteName": "Skaffold", "article:modified_time": "2025-01-23T10:14:58-05:00", "ogDescription": "skaffold dev enables continuous local development on an application. While in dev mode, Skaffold will watch an application’s source files, and when it detects changes, will rebuild your images (or sync files to your running containers), push any new images, test built images, and redeploy the application to your cluster.\nskaffold dev is considered Skaffold’s main mode of operation, as it allows you to leverage all of the features of Skaffold in a continuous way while iterating on your application.", "og:type": "article", "language": "en", "twitter:description": "skaffold dev enables continuous local development on an application. While in dev mode, Skaffold will watch an application’s source files, and when it detects changes, will rebuild your images (or sync files to your running containers), push any new images, test built images, and redeploy the application to your cluster.\nskaffold dev is considered Skaffold’s main mode of operation, as it allows you to leverage all of the features of Skaffold in a continuous way while iterating on your application.", "scrapeId": "7798cebf-69b0-4f95-b38b-6ebe6a7b40c3", "sourceURL": "https://skaffold.dev/docs/workflows/dev", "url": "https://skaffold.dev/docs/workflows/dev/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you give me some code examples for skaffold dev in skaffold?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Running `skaffold dev`**:\n\n```yaml\nskaffold dev\n```\n\nThis snippet shows you how to running `skaffold dev`, which is an important aspect of skaffold dev.\n\n**Using `--keep-running-on-failure` flag**:\n\n```yaml\nskaffold dev --keep-running-on-failure\n```\n\nThis snippet shows you how to using `--keep-running-on-failure` flag, which is an important aspect of skaffold dev.\n\n**Using `--no-prune` flag**:\n\n```yaml\nskaffold dev --no-prune\n```\n\nThis snippet shows you how to using `--no-prune` flag, which is an important aspect of skaffold dev.\n\n", "metadata": {"source_url": "https://skaffold.dev/docs/workflows/dev", "title": "skaffold dev", "description": "`skaffold dev` enables continuous local development on an application, watching source files for changes and rebuilding images, testing, and redeploying the application.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:02:09", "type": "code_examples", "page_metadata": {"twitter:card": "summary", "og:description": "skaffold dev enables continuous local development on an application. While in dev mode, Skaffold will watch an application’s source files, and when it detects changes, will rebuild your images (or sync files to your running containers), push any new images, test built images, and redeploy the application to your cluster.\nskaffold dev is considered Skaffold’s main mode of operation, as it allows you to leverage all of the features of Skaffold in a continuous way while iterating on your application.", "twitter:title": "skaffold dev", "og:url": "https://skaffold.dev/docs/workflows/dev/", "robots": "index, follow", "title": "skaffold dev | Skaffold", "og:site_name": "Skaffold", "article:section": "docs", "ogTitle": "skaffold dev", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "description": "skaffold dev enables continuous local development on an application.\nWhile in dev mode, Skaffold will watch an application’s source files, and …", "og:title": "skaffold dev", "ogUrl": "https://skaffold.dev/docs/workflows/dev/", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "modifiedTime": "2025-01-23T10:14:58-05:00", "generator": "Hugo 0.99.1", "ogSiteName": "Skaffold", "article:modified_time": "2025-01-23T10:14:58-05:00", "ogDescription": "skaffold dev enables continuous local development on an application. While in dev mode, Skaffold will watch an application’s source files, and when it detects changes, will rebuild your images (or sync files to your running containers), push any new images, test built images, and redeploy the application to your cluster.\nskaffold dev is considered Skaffold’s main mode of operation, as it allows you to leverage all of the features of Skaffold in a continuous way while iterating on your application.", "og:type": "article", "language": "en", "twitter:description": "skaffold dev enables continuous local development on an application. While in dev mode, Skaffold will watch an application’s source files, and when it detects changes, will rebuild your images (or sync files to your running containers), push any new images, test built images, and redeploy the application to your cluster.\nskaffold dev is considered Skaffold’s main mode of operation, as it allows you to leverage all of the features of Skaffold in a continuous way while iterating on your application.", "scrapeId": "7798cebf-69b0-4f95-b38b-6ebe6a7b40c3", "sourceURL": "https://skaffold.dev/docs/workflows/dev", "url": "https://skaffold.dev/docs/workflows/dev/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: What are some tips for using skaffold dev in skaffold effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nRunning `skaffold dev` is equivalent to running the IDE command `Run on Kubernetes` if you’re using Skaffold with the Cloud Code IDE extensions.\n\nConsider looking at the corresponding guides for VSCode, IntelliJ, and Cloud Shell for additional context.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://skaffold.dev/docs/workflows/dev", "title": "skaffold dev", "description": "`skaffold dev` enables continuous local development on an application, watching source files for changes and rebuilding images, testing, and redeploying the application.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:02:09", "type": "best_practices", "page_metadata": {"twitter:card": "summary", "og:description": "skaffold dev enables continuous local development on an application. While in dev mode, Skaffold will watch an application’s source files, and when it detects changes, will rebuild your images (or sync files to your running containers), push any new images, test built images, and redeploy the application to your cluster.\nskaffold dev is considered Skaffold’s main mode of operation, as it allows you to leverage all of the features of Skaffold in a continuous way while iterating on your application.", "twitter:title": "skaffold dev", "og:url": "https://skaffold.dev/docs/workflows/dev/", "robots": "index, follow", "title": "skaffold dev | Skaffold", "og:site_name": "Skaffold", "article:section": "docs", "ogTitle": "skaffold dev", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "description": "skaffold dev enables continuous local development on an application.\nWhile in dev mode, Skaffold will watch an application’s source files, and …", "og:title": "skaffold dev", "ogUrl": "https://skaffold.dev/docs/workflows/dev/", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "modifiedTime": "2025-01-23T10:14:58-05:00", "generator": "Hugo 0.99.1", "ogSiteName": "Skaffold", "article:modified_time": "2025-01-23T10:14:58-05:00", "ogDescription": "skaffold dev enables continuous local development on an application. While in dev mode, Skaffold will watch an application’s source files, and when it detects changes, will rebuild your images (or sync files to your running containers), push any new images, test built images, and redeploy the application to your cluster.\nskaffold dev is considered Skaffold’s main mode of operation, as it allows you to leverage all of the features of Skaffold in a continuous way while iterating on your application.", "og:type": "article", "language": "en", "twitter:description": "skaffold dev enables continuous local development on an application. While in dev mode, Skaffold will watch an application’s source files, and when it detects changes, will rebuild your images (or sync files to your running containers), push any new images, test built images, and redeploy the application to your cluster.\nskaffold dev is considered Skaffold’s main mode of operation, as it allows you to leverage all of the features of Skaffold in a continuous way while iterating on your application.", "scrapeId": "7798cebf-69b0-4f95-b38b-6ebe6a7b40c3", "sourceURL": "https://skaffold.dev/docs/workflows/dev", "url": "https://skaffold.dev/docs/workflows/dev/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what Custom Test beta is in skaffold?\n\nAssistant: Sure, I'd be happy to explain Custom Test beta in skaffold.\n\n# Custom Test beta\n\nCustom Test allows developers to run custom commands as part of their development pipeline. The command executes in the testing phase of the Skaffold pipeline and works with all supported Skaffold platforms.Here's a quick rundown of what this is about:\n\n## Overview\n\nCustom Test allows developers to run custom commands as part of their development pipeline. The command executes in the testing phase of the Skaffold pipeline. It will run on the local machine where Skaffold is being executed and works with all supported Skaffold platforms. Users can opt out of running custom tests by using the `--skip-tests` flag.\n\nSome example use cases for Custom Test are below:\n\n- Run unit tests\n- Run validation and security scans on images before deploying the image to a cluster for example by running GCP Container Analysis or Anchore Grype.\n\n## Custom Test Behavior\n\nCustom tests are defined on a per image basis in the Skaffold config. Every time an artifact is rebuilt, Skaffold runs the associated custom tests as part of the Skaffold dev loop. Multiple testers can be defined per test. The Skaffold pipeline will be blocked on the custom test to complete or fail. Skaffold will block deployment when the first test fails. For ongoing test failures in the dev loop, Skaffold will stop the loop (not continue with the deploy) but will not exit the loop. Skaffold would surface the errors to the user and will keep the dev loop running. Skaffold will continue watching user specified test dependencies and re-trigger the loop whenever it detects another change.\n\n## Contract between Skaffold and Custom command\n\nSkaffold will pass in the environment variable `$IMAGE` to the custom command to access the image. This variable can be set as a flag value input to the custom command `--flag=$IMAGE`.\n\n## Configuration\n\nTo use a custom command, add a custom field to the corresponding test in the test section of the skaffold.yaml. Supported schema for CustomTest includes:\n\n| Option | Description |\n| --- | --- |\n| `command` | **Required** custom command to be executed. If the command exits with a non-zero return code, the test will be considered to have failed. |\n| `timeoutSeconds` | sets the wait time for skaffold for the command to complete. If unset or 0, Skaffold will wait until the command completes. |\n| `dependencies` | additional test-specific file dependencies; changes to these files will re-run this test.\n\n## Dependencies for a Custom Test\n\nUsers can specify `dependencies` for custom tests so that skaffold knows when to retest during a dev loop. Dependencies can be specified per command. Users could list out directories and/or files (for example test scripts) to watch per command. If no dependencies are specified, only the script file (if the command is a script file) will be watched as a dependency. Test dependencies cannot trigger rebuild of an image.\n\nSupported schema for `dependencies` include:\n\n| Option | Description | Default |\n| --- | --- | --- |\n| `command` | represents a command that skaffold executes to obtain dependencies. The output of this command _must_ be a valid JSON array. | `` |\n| `paths` | locates the file dependencies for the command relative to workspace. Paths should be set to the file dependencies for this command, so that the skaffold file watcher knows when to retest and perform file synchronization. | `[]` |\n| `ignore` | specifies the paths that should be ignored by skaffold’s file watcher. If a file exists in both `paths` and in `ignore`, it will be ignored, and will be excluded from both retest and file synchronization. Will only work in conjunction with `paths`. | `[]` |\n\n## Paths and Ignore\n\n`Paths` and `Ignore` are arrays used to list dependencies. This can be a glob. Any `paths` in `Ignore` will be ignored by the skaffold file watcher, even if they are also specified in `Paths`. `Ignore` will only work in conjunction with `Paths`.\n\n## Command for dependencies\n\nSometimes users might have a command or a script that can provide the dependencies for a given test. Custom tester can ask Skaffold to execute a custom command, which Skaffold can use to get the dependencies for the test for file watching. The command _must_ return dependencies as a JSON array, otherwise skaffold will error out.\n\n## Logging\n\n`STDOUT` and `STDERR` from the custom command script will be redirected and displayed within skaffold logs.\n\n## Usage\n\nCustom tests will be automatically invoked as part of the run and dev commands, but can also be run independently by using the test subcommand. To execute the custom command as an independent test command run: `skaffold test`. To execute custom command as part of the run command run: `skaffold run`. To execute custom command as part of the dev loop run: `skaffold dev`.\n\n## Example\n\nThis following example shows the `customTest` section from a `skaffold.yaml`. It instructs Skaffold to run unit tests (main_test.go) located in the local folder when the main application changes:\n\n```yaml\ntest:\n  - image: custom-test-example\n    custom:\n      - command: ./test.sh\n        timeoutSeconds: 60\n        dependencies:\n          paths:\n          -  \"*_test.go\"\n          -  \"test.sh\"\n      - command: echo Hello world!!\n        dependencies:\n          command: echo [\"main_test.go\"]\n```\n\nA sample `test.sh` file, which runs unit tests when the test changes.\n\n```\n#!/bin/bash\n\nset -e\n\necho \"go custom test $@\"\n\ngo test .\n```\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/testers/custom", "title": "Custom Test beta", "description": "Custom Test allows developers to run custom commands as part of their development pipeline. The command executes in the testing phase of the Skaffold pipeline and works with all supported Skaffold platforms.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 03:03:33", "type": "overview", "page_metadata": {"title": "Custom Test | Skaffold", "ogDescription": "Custom Test allows developers to run custom commands as part of their development pipeline. The command executes in the testing phase of the Skaffold pipeline. It will run on the local machine where Skaffold is being executed and works with all supported Skaffold platforms. Users can opt out of running custom tests by using the --skip-tests flag.\nSome example use cases for Custom Test are below:\n Run unit tests Run validation and security scans on images before deploying the image to a cluster for example by running GCP Container Analysis or Anchore Grype  Custom tests are defined on a per image basis in the Skaffold config.", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "robots": "index, follow", "og:title": "Custom Test", "ogUrl": "https://skaffold.dev/docs/testers/custom/", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:site_name": "Skaffold", "og:url": "https://skaffold.dev/docs/testers/custom/", "twitter:card": "summary", "ogTitle": "Custom Test", "og:description": "Custom Test allows developers to run custom commands as part of their development pipeline. The command executes in the testing phase of the Skaffold pipeline. It will run on the local machine where Skaffold is being executed and works with all supported Skaffold platforms. Users can opt out of running custom tests by using the --skip-tests flag.\nSome example use cases for Custom Test are below:\n Run unit tests Run validation and security scans on images before deploying the image to a cluster for example by running GCP Container Analysis or Anchore Grype  Custom tests are defined on a per image basis in the Skaffold config.", "og:type": "article", "language": "en", "description": "Custom Test allows developers to run custom commands as part of their development pipeline. The command executes in the testing phase of the Skaffold …", "article:section": "docs", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "article:modified_time": "2025-01-23T10:14:58-05:00", "ogSiteName": "Skaffold", "generator": "Hugo 0.99.1", "twitter:title": "Custom Test", "twitter:description": "Custom Test allows developers to run custom commands as part of their development pipeline. The command executes in the testing phase of the Skaffold pipeline. It will run on the local machine where Skaffold is being executed and works with all supported Skaffold platforms. Users can opt out of running custom tests by using the --skip-tests flag.\nSome example use cases for Custom Test are below:\n Run unit tests Run validation and security scans on images before deploying the image to a cluster for example by running GCP Container Analysis or Anchore Grype  Custom tests are defined on a per image basis in the Skaffold config.", "scrapeId": "17739999-edf6-4d1a-b020-05a2dddb5f14", "sourceURL": "https://skaffold.dev/docs/testers/custom", "url": "https://skaffold.dev/docs/testers/custom/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I overview in skaffold?\n\nAssistant: To overview in skaffold, here's what you do:\nCustom Test allows developers to run custom commands as part of their development pipeline. The command executes in the testing phase of the Skaffold pipeline. It will run on the local machine where Skaffold is being executed and works with all supported Skaffold platforms. Users can opt out of running custom tests by using the `--skip-tests` flag.\n\nSome example use cases for Custom Test are below:\n\n- Run unit tests\n- Run validation and security scans on images before deploying the image to a cluster for example by running GCP Container Analysis or Anchore Grype..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/testers/custom", "title": "Custom Test beta", "description": "Custom Test allows developers to run custom commands as part of their development pipeline. The command executes in the testing phase of the Skaffold pipeline and works with all supported Skaffold platforms.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 03:03:33", "type": "section_detail", "page_metadata": {"title": "Custom Test | Skaffold", "ogDescription": "Custom Test allows developers to run custom commands as part of their development pipeline. The command executes in the testing phase of the Skaffold pipeline. It will run on the local machine where Skaffold is being executed and works with all supported Skaffold platforms. Users can opt out of running custom tests by using the --skip-tests flag.\nSome example use cases for Custom Test are below:\n Run unit tests Run validation and security scans on images before deploying the image to a cluster for example by running GCP Container Analysis or Anchore Grype  Custom tests are defined on a per image basis in the Skaffold config.", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "robots": "index, follow", "og:title": "Custom Test", "ogUrl": "https://skaffold.dev/docs/testers/custom/", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:site_name": "Skaffold", "og:url": "https://skaffold.dev/docs/testers/custom/", "twitter:card": "summary", "ogTitle": "Custom Test", "og:description": "Custom Test allows developers to run custom commands as part of their development pipeline. The command executes in the testing phase of the Skaffold pipeline. It will run on the local machine where Skaffold is being executed and works with all supported Skaffold platforms. Users can opt out of running custom tests by using the --skip-tests flag.\nSome example use cases for Custom Test are below:\n Run unit tests Run validation and security scans on images before deploying the image to a cluster for example by running GCP Container Analysis or Anchore Grype  Custom tests are defined on a per image basis in the Skaffold config.", "og:type": "article", "language": "en", "description": "Custom Test allows developers to run custom commands as part of their development pipeline. The command executes in the testing phase of the Skaffold …", "article:section": "docs", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "article:modified_time": "2025-01-23T10:14:58-05:00", "ogSiteName": "Skaffold", "generator": "Hugo 0.99.1", "twitter:title": "Custom Test", "twitter:description": "Custom Test allows developers to run custom commands as part of their development pipeline. The command executes in the testing phase of the Skaffold pipeline. It will run on the local machine where Skaffold is being executed and works with all supported Skaffold platforms. Users can opt out of running custom tests by using the --skip-tests flag.\nSome example use cases for Custom Test are below:\n Run unit tests Run validation and security scans on images before deploying the image to a cluster for example by running GCP Container Analysis or Anchore Grype  Custom tests are defined on a per image basis in the Skaffold config.", "scrapeId": "17739999-edf6-4d1a-b020-05a2dddb5f14", "sourceURL": "https://skaffold.dev/docs/testers/custom", "url": "https://skaffold.dev/docs/testers/custom/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I custom test behavior in skaffold?\n\nAssistant: To custom test behavior in skaffold, here's what you do:\nCustom tests are defined on a per image basis in the Skaffold config. Every time an artifact is rebuilt, Skaffold runs the associated custom tests as part of the Skaffold dev loop. Multiple testers can be defined per test. The Skaffold pipeline will be blocked on the custom test to complete or fail. Skaffold will block deployment when the first test fails. For ongoing test failures in the dev loop, Skaffold will stop the loop (not continue with the deploy) but will not exit the loop. Skaffold would surface the errors to the user and will keep the dev loop running. Skaffold will continue watching user specified test dependencies and re-trigger the loop whenever it detects another change..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/testers/custom", "title": "Custom Test beta", "description": "Custom Test allows developers to run custom commands as part of their development pipeline. The command executes in the testing phase of the Skaffold pipeline and works with all supported Skaffold platforms.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 03:03:33", "type": "section_detail", "page_metadata": {"title": "Custom Test | Skaffold", "ogDescription": "Custom Test allows developers to run custom commands as part of their development pipeline. The command executes in the testing phase of the Skaffold pipeline. It will run on the local machine where Skaffold is being executed and works with all supported Skaffold platforms. Users can opt out of running custom tests by using the --skip-tests flag.\nSome example use cases for Custom Test are below:\n Run unit tests Run validation and security scans on images before deploying the image to a cluster for example by running GCP Container Analysis or Anchore Grype  Custom tests are defined on a per image basis in the Skaffold config.", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "robots": "index, follow", "og:title": "Custom Test", "ogUrl": "https://skaffold.dev/docs/testers/custom/", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:site_name": "Skaffold", "og:url": "https://skaffold.dev/docs/testers/custom/", "twitter:card": "summary", "ogTitle": "Custom Test", "og:description": "Custom Test allows developers to run custom commands as part of their development pipeline. The command executes in the testing phase of the Skaffold pipeline. It will run on the local machine where Skaffold is being executed and works with all supported Skaffold platforms. Users can opt out of running custom tests by using the --skip-tests flag.\nSome example use cases for Custom Test are below:\n Run unit tests Run validation and security scans on images before deploying the image to a cluster for example by running GCP Container Analysis or Anchore Grype  Custom tests are defined on a per image basis in the Skaffold config.", "og:type": "article", "language": "en", "description": "Custom Test allows developers to run custom commands as part of their development pipeline. The command executes in the testing phase of the Skaffold …", "article:section": "docs", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "article:modified_time": "2025-01-23T10:14:58-05:00", "ogSiteName": "Skaffold", "generator": "Hugo 0.99.1", "twitter:title": "Custom Test", "twitter:description": "Custom Test allows developers to run custom commands as part of their development pipeline. The command executes in the testing phase of the Skaffold pipeline. It will run on the local machine where Skaffold is being executed and works with all supported Skaffold platforms. Users can opt out of running custom tests by using the --skip-tests flag.\nSome example use cases for Custom Test are below:\n Run unit tests Run validation and security scans on images before deploying the image to a cluster for example by running GCP Container Analysis or Anchore Grype  Custom tests are defined on a per image basis in the Skaffold config.", "scrapeId": "17739999-edf6-4d1a-b020-05a2dddb5f14", "sourceURL": "https://skaffold.dev/docs/testers/custom", "url": "https://skaffold.dev/docs/testers/custom/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I contract between skaffold and custom command in skaffold?\n\nAssistant: To contract between skaffold and custom command in skaffold, here's what you do:\nSkaffold will pass in the environment variable `$IMAGE` to the custom command to access the image. This variable can be set as a flag value input to the custom command `--flag=$IMAGE`..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/testers/custom", "title": "Custom Test beta", "description": "Custom Test allows developers to run custom commands as part of their development pipeline. The command executes in the testing phase of the Skaffold pipeline and works with all supported Skaffold platforms.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 03:03:33", "type": "section_detail", "page_metadata": {"title": "Custom Test | Skaffold", "ogDescription": "Custom Test allows developers to run custom commands as part of their development pipeline. The command executes in the testing phase of the Skaffold pipeline. It will run on the local machine where Skaffold is being executed and works with all supported Skaffold platforms. Users can opt out of running custom tests by using the --skip-tests flag.\nSome example use cases for Custom Test are below:\n Run unit tests Run validation and security scans on images before deploying the image to a cluster for example by running GCP Container Analysis or Anchore Grype  Custom tests are defined on a per image basis in the Skaffold config.", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "robots": "index, follow", "og:title": "Custom Test", "ogUrl": "https://skaffold.dev/docs/testers/custom/", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:site_name": "Skaffold", "og:url": "https://skaffold.dev/docs/testers/custom/", "twitter:card": "summary", "ogTitle": "Custom Test", "og:description": "Custom Test allows developers to run custom commands as part of their development pipeline. The command executes in the testing phase of the Skaffold pipeline. It will run on the local machine where Skaffold is being executed and works with all supported Skaffold platforms. Users can opt out of running custom tests by using the --skip-tests flag.\nSome example use cases for Custom Test are below:\n Run unit tests Run validation and security scans on images before deploying the image to a cluster for example by running GCP Container Analysis or Anchore Grype  Custom tests are defined on a per image basis in the Skaffold config.", "og:type": "article", "language": "en", "description": "Custom Test allows developers to run custom commands as part of their development pipeline. The command executes in the testing phase of the Skaffold …", "article:section": "docs", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "article:modified_time": "2025-01-23T10:14:58-05:00", "ogSiteName": "Skaffold", "generator": "Hugo 0.99.1", "twitter:title": "Custom Test", "twitter:description": "Custom Test allows developers to run custom commands as part of their development pipeline. The command executes in the testing phase of the Skaffold pipeline. It will run on the local machine where Skaffold is being executed and works with all supported Skaffold platforms. Users can opt out of running custom tests by using the --skip-tests flag.\nSome example use cases for Custom Test are below:\n Run unit tests Run validation and security scans on images before deploying the image to a cluster for example by running GCP Container Analysis or Anchore Grype  Custom tests are defined on a per image basis in the Skaffold config.", "scrapeId": "17739999-edf6-4d1a-b020-05a2dddb5f14", "sourceURL": "https://skaffold.dev/docs/testers/custom", "url": "https://skaffold.dev/docs/testers/custom/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I configuration in skaffold?\n\nAssistant: To configuration in skaffold, here's what you do:\nTo use a custom command, add a custom field to the corresponding test in the test section of the skaffold.yaml. Supported schema for CustomTest includes:\n\n| Option | Description |\n| --- | --- |\n| `command` | **Required** custom command to be executed. If the command exits with a non-zero return code, the test will be considered to have failed. |\n| `timeoutSeconds` | sets the wait time for skaffold for the command to complete. If unset or 0, Skaffold will wait until the command completes. |\n| `dependencies` | additional test-specific file dependencies; changes to these files will re-run this test..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/testers/custom", "title": "Custom Test beta", "description": "Custom Test allows developers to run custom commands as part of their development pipeline. The command executes in the testing phase of the Skaffold pipeline and works with all supported Skaffold platforms.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 03:03:33", "type": "section_detail", "page_metadata": {"title": "Custom Test | Skaffold", "ogDescription": "Custom Test allows developers to run custom commands as part of their development pipeline. The command executes in the testing phase of the Skaffold pipeline. It will run on the local machine where Skaffold is being executed and works with all supported Skaffold platforms. Users can opt out of running custom tests by using the --skip-tests flag.\nSome example use cases for Custom Test are below:\n Run unit tests Run validation and security scans on images before deploying the image to a cluster for example by running GCP Container Analysis or Anchore Grype  Custom tests are defined on a per image basis in the Skaffold config.", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "robots": "index, follow", "og:title": "Custom Test", "ogUrl": "https://skaffold.dev/docs/testers/custom/", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:site_name": "Skaffold", "og:url": "https://skaffold.dev/docs/testers/custom/", "twitter:card": "summary", "ogTitle": "Custom Test", "og:description": "Custom Test allows developers to run custom commands as part of their development pipeline. The command executes in the testing phase of the Skaffold pipeline. It will run on the local machine where Skaffold is being executed and works with all supported Skaffold platforms. Users can opt out of running custom tests by using the --skip-tests flag.\nSome example use cases for Custom Test are below:\n Run unit tests Run validation and security scans on images before deploying the image to a cluster for example by running GCP Container Analysis or Anchore Grype  Custom tests are defined on a per image basis in the Skaffold config.", "og:type": "article", "language": "en", "description": "Custom Test allows developers to run custom commands as part of their development pipeline. The command executes in the testing phase of the Skaffold …", "article:section": "docs", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "article:modified_time": "2025-01-23T10:14:58-05:00", "ogSiteName": "Skaffold", "generator": "Hugo 0.99.1", "twitter:title": "Custom Test", "twitter:description": "Custom Test allows developers to run custom commands as part of their development pipeline. The command executes in the testing phase of the Skaffold pipeline. It will run on the local machine where Skaffold is being executed and works with all supported Skaffold platforms. Users can opt out of running custom tests by using the --skip-tests flag.\nSome example use cases for Custom Test are below:\n Run unit tests Run validation and security scans on images before deploying the image to a cluster for example by running GCP Container Analysis or Anchore Grype  Custom tests are defined on a per image basis in the Skaffold config.", "scrapeId": "17739999-edf6-4d1a-b020-05a2dddb5f14", "sourceURL": "https://skaffold.dev/docs/testers/custom", "url": "https://skaffold.dev/docs/testers/custom/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I dependencies for a custom test in skaffold?\n\nAssistant: To dependencies for a custom test in skaffold, here's what you do:\nUsers can specify `dependencies` for custom tests so that skaffold knows when to retest during a dev loop. Dependencies can be specified per command. Users could list out directories and/or files (for example test scripts) to watch per command. If no dependencies are specified, only the script file (if the command is a script file) will be watched as a dependency. Test dependencies cannot trigger rebuild of an image.\n\nSupported schema for `dependencies` include:\n\n| Option | Description | Default |\n| --- | --- | --- |\n| `command` | represents a command that skaffold executes to obtain dependencies. The output of this command _must_ be a valid JSON array. | `` |\n| `paths` | locates the file dependencies for the command relative to workspace. Paths should be set to the file dependencies for this command, so that the skaffold file watcher knows when to retest and perform file synchronization. | `[]` |\n| `ignore` | specifies the paths that should be ignored by skaffold’s file watcher. If a file exists in both `paths` and in `ignore`, it will be ignored, and will be excluded from both retest and file synchronization. Will only work in conjunction with `paths`. | `[]` |.\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/testers/custom", "title": "Custom Test beta", "description": "Custom Test allows developers to run custom commands as part of their development pipeline. The command executes in the testing phase of the Skaffold pipeline and works with all supported Skaffold platforms.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 03:03:33", "type": "section_detail", "page_metadata": {"title": "Custom Test | Skaffold", "ogDescription": "Custom Test allows developers to run custom commands as part of their development pipeline. The command executes in the testing phase of the Skaffold pipeline. It will run on the local machine where Skaffold is being executed and works with all supported Skaffold platforms. Users can opt out of running custom tests by using the --skip-tests flag.\nSome example use cases for Custom Test are below:\n Run unit tests Run validation and security scans on images before deploying the image to a cluster for example by running GCP Container Analysis or Anchore Grype  Custom tests are defined on a per image basis in the Skaffold config.", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "robots": "index, follow", "og:title": "Custom Test", "ogUrl": "https://skaffold.dev/docs/testers/custom/", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:site_name": "Skaffold", "og:url": "https://skaffold.dev/docs/testers/custom/", "twitter:card": "summary", "ogTitle": "Custom Test", "og:description": "Custom Test allows developers to run custom commands as part of their development pipeline. The command executes in the testing phase of the Skaffold pipeline. It will run on the local machine where Skaffold is being executed and works with all supported Skaffold platforms. Users can opt out of running custom tests by using the --skip-tests flag.\nSome example use cases for Custom Test are below:\n Run unit tests Run validation and security scans on images before deploying the image to a cluster for example by running GCP Container Analysis or Anchore Grype  Custom tests are defined on a per image basis in the Skaffold config.", "og:type": "article", "language": "en", "description": "Custom Test allows developers to run custom commands as part of their development pipeline. The command executes in the testing phase of the Skaffold …", "article:section": "docs", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "article:modified_time": "2025-01-23T10:14:58-05:00", "ogSiteName": "Skaffold", "generator": "Hugo 0.99.1", "twitter:title": "Custom Test", "twitter:description": "Custom Test allows developers to run custom commands as part of their development pipeline. The command executes in the testing phase of the Skaffold pipeline. It will run on the local machine where Skaffold is being executed and works with all supported Skaffold platforms. Users can opt out of running custom tests by using the --skip-tests flag.\nSome example use cases for Custom Test are below:\n Run unit tests Run validation and security scans on images before deploying the image to a cluster for example by running GCP Container Analysis or Anchore Grype  Custom tests are defined on a per image basis in the Skaffold config.", "scrapeId": "17739999-edf6-4d1a-b020-05a2dddb5f14", "sourceURL": "https://skaffold.dev/docs/testers/custom", "url": "https://skaffold.dev/docs/testers/custom/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I paths and ignore in skaffold?\n\nAssistant: To paths and ignore in skaffold, here's what you do:\n`Paths` and `Ignore` are arrays used to list dependencies. This can be a glob. Any `paths` in `Ignore` will be ignored by the skaffold file watcher, even if they are also specified in `Paths`. `Ignore` will only work in conjunction with `Paths`..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/testers/custom", "title": "Custom Test beta", "description": "Custom Test allows developers to run custom commands as part of their development pipeline. The command executes in the testing phase of the Skaffold pipeline and works with all supported Skaffold platforms.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 03:03:33", "type": "section_detail", "page_metadata": {"title": "Custom Test | Skaffold", "ogDescription": "Custom Test allows developers to run custom commands as part of their development pipeline. The command executes in the testing phase of the Skaffold pipeline. It will run on the local machine where Skaffold is being executed and works with all supported Skaffold platforms. Users can opt out of running custom tests by using the --skip-tests flag.\nSome example use cases for Custom Test are below:\n Run unit tests Run validation and security scans on images before deploying the image to a cluster for example by running GCP Container Analysis or Anchore Grype  Custom tests are defined on a per image basis in the Skaffold config.", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "robots": "index, follow", "og:title": "Custom Test", "ogUrl": "https://skaffold.dev/docs/testers/custom/", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:site_name": "Skaffold", "og:url": "https://skaffold.dev/docs/testers/custom/", "twitter:card": "summary", "ogTitle": "Custom Test", "og:description": "Custom Test allows developers to run custom commands as part of their development pipeline. The command executes in the testing phase of the Skaffold pipeline. It will run on the local machine where Skaffold is being executed and works with all supported Skaffold platforms. Users can opt out of running custom tests by using the --skip-tests flag.\nSome example use cases for Custom Test are below:\n Run unit tests Run validation and security scans on images before deploying the image to a cluster for example by running GCP Container Analysis or Anchore Grype  Custom tests are defined on a per image basis in the Skaffold config.", "og:type": "article", "language": "en", "description": "Custom Test allows developers to run custom commands as part of their development pipeline. The command executes in the testing phase of the Skaffold …", "article:section": "docs", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "article:modified_time": "2025-01-23T10:14:58-05:00", "ogSiteName": "Skaffold", "generator": "Hugo 0.99.1", "twitter:title": "Custom Test", "twitter:description": "Custom Test allows developers to run custom commands as part of their development pipeline. The command executes in the testing phase of the Skaffold pipeline. It will run on the local machine where Skaffold is being executed and works with all supported Skaffold platforms. Users can opt out of running custom tests by using the --skip-tests flag.\nSome example use cases for Custom Test are below:\n Run unit tests Run validation and security scans on images before deploying the image to a cluster for example by running GCP Container Analysis or Anchore Grype  Custom tests are defined on a per image basis in the Skaffold config.", "scrapeId": "17739999-edf6-4d1a-b020-05a2dddb5f14", "sourceURL": "https://skaffold.dev/docs/testers/custom", "url": "https://skaffold.dev/docs/testers/custom/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I command for dependencies in skaffold?\n\nAssistant: To command for dependencies in skaffold, here's what you do:\nSometimes users might have a command or a script that can provide the dependencies for a given test. Custom tester can ask Skaffold to execute a custom command, which Skaffold can use to get the dependencies for the test for file watching. The command _must_ return dependencies as a JSON array, otherwise skaffold will error out..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/testers/custom", "title": "Custom Test beta", "description": "Custom Test allows developers to run custom commands as part of their development pipeline. The command executes in the testing phase of the Skaffold pipeline and works with all supported Skaffold platforms.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 03:03:33", "type": "section_detail", "page_metadata": {"title": "Custom Test | Skaffold", "ogDescription": "Custom Test allows developers to run custom commands as part of their development pipeline. The command executes in the testing phase of the Skaffold pipeline. It will run on the local machine where Skaffold is being executed and works with all supported Skaffold platforms. Users can opt out of running custom tests by using the --skip-tests flag.\nSome example use cases for Custom Test are below:\n Run unit tests Run validation and security scans on images before deploying the image to a cluster for example by running GCP Container Analysis or Anchore Grype  Custom tests are defined on a per image basis in the Skaffold config.", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "robots": "index, follow", "og:title": "Custom Test", "ogUrl": "https://skaffold.dev/docs/testers/custom/", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:site_name": "Skaffold", "og:url": "https://skaffold.dev/docs/testers/custom/", "twitter:card": "summary", "ogTitle": "Custom Test", "og:description": "Custom Test allows developers to run custom commands as part of their development pipeline. The command executes in the testing phase of the Skaffold pipeline. It will run on the local machine where Skaffold is being executed and works with all supported Skaffold platforms. Users can opt out of running custom tests by using the --skip-tests flag.\nSome example use cases for Custom Test are below:\n Run unit tests Run validation and security scans on images before deploying the image to a cluster for example by running GCP Container Analysis or Anchore Grype  Custom tests are defined on a per image basis in the Skaffold config.", "og:type": "article", "language": "en", "description": "Custom Test allows developers to run custom commands as part of their development pipeline. The command executes in the testing phase of the Skaffold …", "article:section": "docs", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "article:modified_time": "2025-01-23T10:14:58-05:00", "ogSiteName": "Skaffold", "generator": "Hugo 0.99.1", "twitter:title": "Custom Test", "twitter:description": "Custom Test allows developers to run custom commands as part of their development pipeline. The command executes in the testing phase of the Skaffold pipeline. It will run on the local machine where Skaffold is being executed and works with all supported Skaffold platforms. Users can opt out of running custom tests by using the --skip-tests flag.\nSome example use cases for Custom Test are below:\n Run unit tests Run validation and security scans on images before deploying the image to a cluster for example by running GCP Container Analysis or Anchore Grype  Custom tests are defined on a per image basis in the Skaffold config.", "scrapeId": "17739999-edf6-4d1a-b020-05a2dddb5f14", "sourceURL": "https://skaffold.dev/docs/testers/custom", "url": "https://skaffold.dev/docs/testers/custom/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I logging in skaffold?\n\nAssistant: To logging in skaffold, here's what you do:\n`STDOUT` and `STDERR` from the custom command script will be redirected and displayed within skaffold logs..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/testers/custom", "title": "Custom Test beta", "description": "Custom Test allows developers to run custom commands as part of their development pipeline. The command executes in the testing phase of the Skaffold pipeline and works with all supported Skaffold platforms.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 03:03:33", "type": "section_detail", "page_metadata": {"title": "Custom Test | Skaffold", "ogDescription": "Custom Test allows developers to run custom commands as part of their development pipeline. The command executes in the testing phase of the Skaffold pipeline. It will run on the local machine where Skaffold is being executed and works with all supported Skaffold platforms. Users can opt out of running custom tests by using the --skip-tests flag.\nSome example use cases for Custom Test are below:\n Run unit tests Run validation and security scans on images before deploying the image to a cluster for example by running GCP Container Analysis or Anchore Grype  Custom tests are defined on a per image basis in the Skaffold config.", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "robots": "index, follow", "og:title": "Custom Test", "ogUrl": "https://skaffold.dev/docs/testers/custom/", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:site_name": "Skaffold", "og:url": "https://skaffold.dev/docs/testers/custom/", "twitter:card": "summary", "ogTitle": "Custom Test", "og:description": "Custom Test allows developers to run custom commands as part of their development pipeline. The command executes in the testing phase of the Skaffold pipeline. It will run on the local machine where Skaffold is being executed and works with all supported Skaffold platforms. Users can opt out of running custom tests by using the --skip-tests flag.\nSome example use cases for Custom Test are below:\n Run unit tests Run validation and security scans on images before deploying the image to a cluster for example by running GCP Container Analysis or Anchore Grype  Custom tests are defined on a per image basis in the Skaffold config.", "og:type": "article", "language": "en", "description": "Custom Test allows developers to run custom commands as part of their development pipeline. The command executes in the testing phase of the Skaffold …", "article:section": "docs", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "article:modified_time": "2025-01-23T10:14:58-05:00", "ogSiteName": "Skaffold", "generator": "Hugo 0.99.1", "twitter:title": "Custom Test", "twitter:description": "Custom Test allows developers to run custom commands as part of their development pipeline. The command executes in the testing phase of the Skaffold pipeline. It will run on the local machine where Skaffold is being executed and works with all supported Skaffold platforms. Users can opt out of running custom tests by using the --skip-tests flag.\nSome example use cases for Custom Test are below:\n Run unit tests Run validation and security scans on images before deploying the image to a cluster for example by running GCP Container Analysis or Anchore Grype  Custom tests are defined on a per image basis in the Skaffold config.", "scrapeId": "17739999-edf6-4d1a-b020-05a2dddb5f14", "sourceURL": "https://skaffold.dev/docs/testers/custom", "url": "https://skaffold.dev/docs/testers/custom/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I usage in skaffold?\n\nAssistant: To usage in skaffold, here's what you do:\nCustom tests will be automatically invoked as part of the run and dev commands, but can also be run independently by using the test subcommand. To execute the custom command as an independent test command run: `skaffold test`. To execute custom command as part of the run command run: `skaffold run`. To execute custom command as part of the dev loop run: `skaffold dev`..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/testers/custom", "title": "Custom Test beta", "description": "Custom Test allows developers to run custom commands as part of their development pipeline. The command executes in the testing phase of the Skaffold pipeline and works with all supported Skaffold platforms.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 03:03:33", "type": "section_detail", "page_metadata": {"title": "Custom Test | Skaffold", "ogDescription": "Custom Test allows developers to run custom commands as part of their development pipeline. The command executes in the testing phase of the Skaffold pipeline. It will run on the local machine where Skaffold is being executed and works with all supported Skaffold platforms. Users can opt out of running custom tests by using the --skip-tests flag.\nSome example use cases for Custom Test are below:\n Run unit tests Run validation and security scans on images before deploying the image to a cluster for example by running GCP Container Analysis or Anchore Grype  Custom tests are defined on a per image basis in the Skaffold config.", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "robots": "index, follow", "og:title": "Custom Test", "ogUrl": "https://skaffold.dev/docs/testers/custom/", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:site_name": "Skaffold", "og:url": "https://skaffold.dev/docs/testers/custom/", "twitter:card": "summary", "ogTitle": "Custom Test", "og:description": "Custom Test allows developers to run custom commands as part of their development pipeline. The command executes in the testing phase of the Skaffold pipeline. It will run on the local machine where Skaffold is being executed and works with all supported Skaffold platforms. Users can opt out of running custom tests by using the --skip-tests flag.\nSome example use cases for Custom Test are below:\n Run unit tests Run validation and security scans on images before deploying the image to a cluster for example by running GCP Container Analysis or Anchore Grype  Custom tests are defined on a per image basis in the Skaffold config.", "og:type": "article", "language": "en", "description": "Custom Test allows developers to run custom commands as part of their development pipeline. The command executes in the testing phase of the Skaffold …", "article:section": "docs", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "article:modified_time": "2025-01-23T10:14:58-05:00", "ogSiteName": "Skaffold", "generator": "Hugo 0.99.1", "twitter:title": "Custom Test", "twitter:description": "Custom Test allows developers to run custom commands as part of their development pipeline. The command executes in the testing phase of the Skaffold pipeline. It will run on the local machine where Skaffold is being executed and works with all supported Skaffold platforms. Users can opt out of running custom tests by using the --skip-tests flag.\nSome example use cases for Custom Test are below:\n Run unit tests Run validation and security scans on images before deploying the image to a cluster for example by running GCP Container Analysis or Anchore Grype  Custom tests are defined on a per image basis in the Skaffold config.", "scrapeId": "17739999-edf6-4d1a-b020-05a2dddb5f14", "sourceURL": "https://skaffold.dev/docs/testers/custom", "url": "https://skaffold.dev/docs/testers/custom/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I example in skaffold?\n\nAssistant: To example in skaffold, here's what you do:\nThis following example shows the `customTest` section from a `skaffold.yaml`. It instructs Skaffold to run unit tests (main_test.go) located in the local folder when the main application changes:\n\n```yaml\ntest:\n  - image: custom-test-example\n    custom:\n      - command: ./test.sh\n        timeoutSeconds: 60\n        dependencies:\n          paths:\n          -  \"*_test.go\"\n          -  \"test.sh\"\n      - command: echo Hello world!!\n        dependencies:\n          command: echo [\"main_test.go\"]\n```\n\nA sample `test.sh` file, which runs unit tests when the test changes.\n\n```\n#!/bin/bash\n\nset -e\n\necho \"go custom test $@\"\n\ngo test .\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/testers/custom", "title": "Custom Test beta", "description": "Custom Test allows developers to run custom commands as part of their development pipeline. The command executes in the testing phase of the Skaffold pipeline and works with all supported Skaffold platforms.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 03:03:33", "type": "section_detail", "page_metadata": {"title": "Custom Test | Skaffold", "ogDescription": "Custom Test allows developers to run custom commands as part of their development pipeline. The command executes in the testing phase of the Skaffold pipeline. It will run on the local machine where Skaffold is being executed and works with all supported Skaffold platforms. Users can opt out of running custom tests by using the --skip-tests flag.\nSome example use cases for Custom Test are below:\n Run unit tests Run validation and security scans on images before deploying the image to a cluster for example by running GCP Container Analysis or Anchore Grype  Custom tests are defined on a per image basis in the Skaffold config.", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "robots": "index, follow", "og:title": "Custom Test", "ogUrl": "https://skaffold.dev/docs/testers/custom/", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:site_name": "Skaffold", "og:url": "https://skaffold.dev/docs/testers/custom/", "twitter:card": "summary", "ogTitle": "Custom Test", "og:description": "Custom Test allows developers to run custom commands as part of their development pipeline. The command executes in the testing phase of the Skaffold pipeline. It will run on the local machine where Skaffold is being executed and works with all supported Skaffold platforms. Users can opt out of running custom tests by using the --skip-tests flag.\nSome example use cases for Custom Test are below:\n Run unit tests Run validation and security scans on images before deploying the image to a cluster for example by running GCP Container Analysis or Anchore Grype  Custom tests are defined on a per image basis in the Skaffold config.", "og:type": "article", "language": "en", "description": "Custom Test allows developers to run custom commands as part of their development pipeline. The command executes in the testing phase of the Skaffold …", "article:section": "docs", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "article:modified_time": "2025-01-23T10:14:58-05:00", "ogSiteName": "Skaffold", "generator": "Hugo 0.99.1", "twitter:title": "Custom Test", "twitter:description": "Custom Test allows developers to run custom commands as part of their development pipeline. The command executes in the testing phase of the Skaffold pipeline. It will run on the local machine where Skaffold is being executed and works with all supported Skaffold platforms. Users can opt out of running custom tests by using the --skip-tests flag.\nSome example use cases for Custom Test are below:\n Run unit tests Run validation and security scans on images before deploying the image to a cluster for example by running GCP Container Analysis or Anchore Grype  Custom tests are defined on a per image basis in the Skaffold config.", "scrapeId": "17739999-edf6-4d1a-b020-05a2dddb5f14", "sourceURL": "https://skaffold.dev/docs/testers/custom", "url": "https://skaffold.dev/docs/testers/custom/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you give me some code examples for Custom Test beta in skaffold?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Custom Test Configuration Example**:\n\n```yaml\ncustom:\n  - command: ./test.sh\n    timeoutSeconds: 60\n    dependencies:\n      paths:\n      -  \"*_test.go\"\n      -  \"test.sh\"\n```\n\nThis snippet shows you how to custom test configuration example, which is an important aspect of custom test beta.\n\n**Command for Dependencies Example**:\n\n```yaml\ncustom:\n  - command: echo Hello world!!\n    dependencies:\n      command: echo [\"main_test.go\"]\n```\n\nThis snippet shows you how to command for dependencies example, which is an important aspect of custom test beta.\n\n", "metadata": {"source_url": "https://skaffold.dev/docs/testers/custom", "title": "Custom Test beta", "description": "Custom Test allows developers to run custom commands as part of their development pipeline. The command executes in the testing phase of the Skaffold pipeline and works with all supported Skaffold platforms.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 03:03:33", "type": "code_examples", "page_metadata": {"title": "Custom Test | Skaffold", "ogDescription": "Custom Test allows developers to run custom commands as part of their development pipeline. The command executes in the testing phase of the Skaffold pipeline. It will run on the local machine where Skaffold is being executed and works with all supported Skaffold platforms. Users can opt out of running custom tests by using the --skip-tests flag.\nSome example use cases for Custom Test are below:\n Run unit tests Run validation and security scans on images before deploying the image to a cluster for example by running GCP Container Analysis or Anchore Grype  Custom tests are defined on a per image basis in the Skaffold config.", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "robots": "index, follow", "og:title": "Custom Test", "ogUrl": "https://skaffold.dev/docs/testers/custom/", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:site_name": "Skaffold", "og:url": "https://skaffold.dev/docs/testers/custom/", "twitter:card": "summary", "ogTitle": "Custom Test", "og:description": "Custom Test allows developers to run custom commands as part of their development pipeline. The command executes in the testing phase of the Skaffold pipeline. It will run on the local machine where Skaffold is being executed and works with all supported Skaffold platforms. Users can opt out of running custom tests by using the --skip-tests flag.\nSome example use cases for Custom Test are below:\n Run unit tests Run validation and security scans on images before deploying the image to a cluster for example by running GCP Container Analysis or Anchore Grype  Custom tests are defined on a per image basis in the Skaffold config.", "og:type": "article", "language": "en", "description": "Custom Test allows developers to run custom commands as part of their development pipeline. The command executes in the testing phase of the Skaffold …", "article:section": "docs", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "article:modified_time": "2025-01-23T10:14:58-05:00", "ogSiteName": "Skaffold", "generator": "Hugo 0.99.1", "twitter:title": "Custom Test", "twitter:description": "Custom Test allows developers to run custom commands as part of their development pipeline. The command executes in the testing phase of the Skaffold pipeline. It will run on the local machine where Skaffold is being executed and works with all supported Skaffold platforms. Users can opt out of running custom tests by using the --skip-tests flag.\nSome example use cases for Custom Test are below:\n Run unit tests Run validation and security scans on images before deploying the image to a cluster for example by running GCP Container Analysis or Anchore Grype  Custom tests are defined on a per image basis in the Skaffold config.", "scrapeId": "17739999-edf6-4d1a-b020-05a2dddb5f14", "sourceURL": "https://skaffold.dev/docs/testers/custom", "url": "https://skaffold.dev/docs/testers/custom/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: What are some tips for using Custom Test beta in skaffold effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nUsers can opt out of running custom tests by using the `--skip-tests` flag.\n\nIf no timeout is specified, Skaffold will wait indefinitely until the test command has completed execution.\n\nAdding a file pattern to a test dependency doesn’t automatically enable file sync on it. Refer to the file sync documentation on how to set that up separately.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://skaffold.dev/docs/testers/custom", "title": "Custom Test beta", "description": "Custom Test allows developers to run custom commands as part of their development pipeline. The command executes in the testing phase of the Skaffold pipeline and works with all supported Skaffold platforms.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 03:03:33", "type": "best_practices", "page_metadata": {"title": "Custom Test | Skaffold", "ogDescription": "Custom Test allows developers to run custom commands as part of their development pipeline. The command executes in the testing phase of the Skaffold pipeline. It will run on the local machine where Skaffold is being executed and works with all supported Skaffold platforms. Users can opt out of running custom tests by using the --skip-tests flag.\nSome example use cases for Custom Test are below:\n Run unit tests Run validation and security scans on images before deploying the image to a cluster for example by running GCP Container Analysis or Anchore Grype  Custom tests are defined on a per image basis in the Skaffold config.", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "robots": "index, follow", "og:title": "Custom Test", "ogUrl": "https://skaffold.dev/docs/testers/custom/", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:site_name": "Skaffold", "og:url": "https://skaffold.dev/docs/testers/custom/", "twitter:card": "summary", "ogTitle": "Custom Test", "og:description": "Custom Test allows developers to run custom commands as part of their development pipeline. The command executes in the testing phase of the Skaffold pipeline. It will run on the local machine where Skaffold is being executed and works with all supported Skaffold platforms. Users can opt out of running custom tests by using the --skip-tests flag.\nSome example use cases for Custom Test are below:\n Run unit tests Run validation and security scans on images before deploying the image to a cluster for example by running GCP Container Analysis or Anchore Grype  Custom tests are defined on a per image basis in the Skaffold config.", "og:type": "article", "language": "en", "description": "Custom Test allows developers to run custom commands as part of their development pipeline. The command executes in the testing phase of the Skaffold …", "article:section": "docs", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "article:modified_time": "2025-01-23T10:14:58-05:00", "ogSiteName": "Skaffold", "generator": "Hugo 0.99.1", "twitter:title": "Custom Test", "twitter:description": "Custom Test allows developers to run custom commands as part of their development pipeline. The command executes in the testing phase of the Skaffold pipeline. It will run on the local machine where Skaffold is being executed and works with all supported Skaffold platforms. Users can opt out of running custom tests by using the --skip-tests flag.\nSome example use cases for Custom Test are below:\n Run unit tests Run validation and security scans on images before deploying the image to a cluster for example by running GCP Container Analysis or Anchore Grype  Custom tests are defined on a per image basis in the Skaffold config.", "scrapeId": "17739999-edf6-4d1a-b020-05a2dddb5f14", "sourceURL": "https://skaffold.dev/docs/testers/custom", "url": "https://skaffold.dev/docs/testers/custom/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what Build environments is in skaffold?\n\nAssistant: Sure, I'd be happy to explain Build environments in skaffold.\n\n# Build environments\n\nSkaffold supports various build environments for containerized applications.Here's a quick rundown of what this is about:\n\n## Supported Build Environments\n\nSkaffold supports the following build environments:\n\n- [Local build](https://skaffold.dev/docs/builders/build-environments/local/)\n- [In cluster build](https://skaffold.dev/docs/builders/build-environments/in-cluster/)\n- [Remotely on Google Cloud Build](https://skaffold.dev/docs/builders/build-environments/cloud-build/)\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/builders/build-environments", "title": "Build environments", "description": "Skaffold supports various build environments for containerized applications.", "has_code_examples": false, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 03:03:40", "type": "overview", "page_metadata": {"robots": "index, follow", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "language": "en", "twitter:card": "summary", "title": "Build environments | Skaffold", "description": "Skaffold supports the following build environments:\n\nLocal build\nIn cluster build\nRemotely on Google Cloud Build\n\n", "og:type": "website", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:url": "https://skaffold.dev/docs/builders/build-environments/", "generator": "Hugo 0.99.1", "og:title": "Build environments", "ogUrl": "https://skaffold.dev/docs/builders/build-environments/", "og:site_name": "Skaffold", "ogSiteName": "Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:description": "Easy and Repeatable Container & Kubernetes Development", "twitter:title": "Build environments", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "ogTitle": "Build environments", "scrapeId": "334707b2-ceda-4cc1-8764-62231c115f82", "sourceURL": "https://skaffold.dev/docs/builders/build-environments", "url": "https://skaffold.dev/docs/builders/build-environments/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I supported build environments in skaffold?\n\nAssistant: To supported build environments in skaffold, here's what you do:\nSkaffold supports the following build environments:\n\n- [Local build](https://skaffold.dev/docs/builders/build-environments/local/)\n- [In cluster build](https://skaffold.dev/docs/builders/build-environments/in-cluster/)\n- [Remotely on Google Cloud Build](https://skaffold.dev/docs/builders/build-environments/cloud-build/).\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/builders/build-environments", "title": "Build environments", "description": "Skaffold supports various build environments for containerized applications.", "has_code_examples": false, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 03:03:40", "type": "section_detail", "page_metadata": {"robots": "index, follow", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "language": "en", "twitter:card": "summary", "title": "Build environments | Skaffold", "description": "Skaffold supports the following build environments:\n\nLocal build\nIn cluster build\nRemotely on Google Cloud Build\n\n", "og:type": "website", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:url": "https://skaffold.dev/docs/builders/build-environments/", "generator": "Hugo 0.99.1", "og:title": "Build environments", "ogUrl": "https://skaffold.dev/docs/builders/build-environments/", "og:site_name": "Skaffold", "ogSiteName": "Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:description": "Easy and Repeatable Container & Kubernetes Development", "twitter:title": "Build environments", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "ogTitle": "Build environments", "scrapeId": "334707b2-ceda-4cc1-8764-62231c115f82", "sourceURL": "https://skaffold.dev/docs/builders/build-environments", "url": "https://skaffold.dev/docs/builders/build-environments/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: What are some tips for using Build environments in skaffold effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nEnsure to choose the appropriate build environment based on your deployment needs.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://skaffold.dev/docs/builders/build-environments", "title": "Build environments", "description": "Skaffold supports various build environments for containerized applications.", "has_code_examples": false, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 03:03:40", "type": "best_practices", "page_metadata": {"robots": "index, follow", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "language": "en", "twitter:card": "summary", "title": "Build environments | Skaffold", "description": "Skaffold supports the following build environments:\n\nLocal build\nIn cluster build\nRemotely on Google Cloud Build\n\n", "og:type": "website", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:url": "https://skaffold.dev/docs/builders/build-environments/", "generator": "Hugo 0.99.1", "og:title": "Build environments", "ogUrl": "https://skaffold.dev/docs/builders/build-environments/", "og:site_name": "Skaffold", "ogSiteName": "Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:description": "Easy and Repeatable Container & Kubernetes Development", "twitter:title": "Build environments", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "ogTitle": "Build environments", "scrapeId": "334707b2-ceda-4cc1-8764-62231c115f82", "sourceURL": "https://skaffold.dev/docs/builders/build-environments", "url": "https://skaffold.dev/docs/builders/build-environments/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what In cluster build is in skaffold?\n\nAssistant: Sure, I'd be happy to explain In cluster build in skaffold.\n\n# In cluster build\n\nSkaffold supports building in cluster via Kaniko or Custom Build Script.Here's a quick rundown of what this is about:\n\n## Configuration\n\nTo configure in-cluster Build, add build type `cluster` to the build section of `skaffold.yaml`.\n\n```yaml\nbuild:\n  cluster: {}\n```\n\nThe following options can optionally be configured:\n\n| Option | Description | Default |\n| --- | --- | --- |\n| `HTTP_PROXY` | for kaniko pod. | `` |\n| `HTTPS_PROXY` | for kaniko pod. | `` |\n| `pullSecretPath` | path to the Google Cloud service account secret key file. | `` |\n| `pullSecretName` | name of the Kubernetes secret for pulling base images and pushing the final image. If given, the secret needs to contain the Google Cloud service account secret key under the key `kaniko-secret`. | `kaniko-secret` |\n| `pullSecretMountPath` | path the pull secret will be mounted at within the running container. | `` |\n| `namespace` | Kubernetes namespace. Defaults to current namespace in Kubernetes configuration. | `` |\n| `timeout` | amount of time (in seconds) that this build is allowed to run. Defaults to 20 minutes ( `20m`). | `` |\n| `dockerConfig` | describes how to mount the local Docker configuration into a pod. | `` |\n| `serviceAccount` | describes the Kubernetes service account to use for the pod. Defaults to ‘default’. | `` |\n| `tolerations` | describes the Kubernetes tolerations for the pod. | `[]` |\n| `nodeSelector` | describes the Kubernetes node selector for the pod. | `{}` |\n| `annotations` | describes the Kubernetes annotations for the pod. | `{}` |\n| `labels` | describes the Kubernetes labels for the pod. | `{}` |\n| `runAsUser` | defines the UID to request for running the container. If omitted, no SecurityContext will be specified for the pod and will therefore be inherited from the service account. | `` |\n| `resources` | define the resource requirements for the kaniko pod. | `` |\n| `concurrency` | how many artifacts can be built concurrently. 0 means “no-limit”. | `0` |\n| `volumes` | defines container mounts for ConfigMap and Secret resources. | `[]` |\n| `randomPullSecret` | adds a random UUID postfix to the default name of the pull secret to facilitate parallel builds, e.g. kaniko-secretdocker-cfgfd154022-c761-416f-8eb3-cf8258450b85. | `false` |\n| `randomDockerConfigSecret` | adds a random UUID postfix to the default name of the docker secret to facilitate parallel builds, e.g. docker-cfgfd154022-c761-416f-8eb3-cf8258450b85. | `false` |\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/builders/build-environments/in-cluster", "title": "In cluster build", "description": "Skaffold supports building in cluster via Kaniko or Custom Build Script.", "has_code_examples": true, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 03:05:09", "type": "overview", "page_metadata": {"article:section": "docs", "robots": "index, follow", "ogTitle": "In cluster build", "language": "en", "twitter:description": "Skaffold supports building in cluster via Kaniko or Custom Build Script.\nConfiguration To configure in-cluster Build, add build type cluster to the build section of skaffold.yaml.\nbuild:cluster:{}The following options can optionally be configured:\n @media (min-width: 992px) { table { max-width: 80%; } } td.desc { width: 100%; } td.default { white-space: nowrap; }     Option Description Default     HTTP_PROXY for kaniko pod.    HTTPS_PROXY for kaniko pod.", "og:type": "article", "og:description": "Skaffold supports building in cluster via Kaniko or Custom Build Script.\nConfiguration To configure in-cluster Build, add build type cluster to the build section of skaffold.yaml.\nbuild:cluster:{}The following options can optionally be configured:\n @media (min-width: 992px) { table { max-width: 80%; } } td.desc { width: 100%; } td.default { white-space: nowrap; }     Option Description Default     HTTP_PROXY for kaniko pod.    HTTPS_PROXY for kaniko pod.", "og:url": "https://skaffold.dev/docs/builders/build-environments/in-cluster/", "description": "Skaffold supports building in cluster via Kaniko\nor Custom Build Script.\nConfiguration\nTo configure in-cluster Build, add build type cluster to the …", "og:title": "In cluster build", "article:modified_time": "2025-01-23T10:14:58-05:00", "ogSiteName": "Skaffold", "ogUrl": "https://skaffold.dev/docs/builders/build-environments/in-cluster/", "ogDescription": "Skaffold supports building in cluster via Kaniko or Custom Build Script.\nConfiguration To configure in-cluster Build, add build type cluster to the build section of skaffold.yaml.\nbuild:cluster:{}The following options can optionally be configured:\n @media (min-width: 992px) { table { max-width: 80%; } } td.desc { width: 100%; } td.default { white-space: nowrap; }     Option Description Default     HTTP_PROXY for kaniko pod.    HTTPS_PROXY for kaniko pod.", "modifiedTime": "2025-01-23T10:14:58-05:00", "title": "In cluster build | Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "generator": "Hugo 0.99.1", "og:site_name": "Skaffold", "twitter:card": "summary", "twitter:title": "In cluster build", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "scrapeId": "8520fc61-63ac-4266-b9b7-210b51aa9b9d", "sourceURL": "https://skaffold.dev/docs/builders/build-environments/in-cluster", "url": "https://skaffold.dev/docs/builders/build-environments/in-cluster/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I configuration in skaffold?\n\nAssistant: To configuration in skaffold, here's what you do:\nTo configure in-cluster Build, add build type `cluster` to the build section of `skaffold.yaml`.\n\n```yaml\nbuild:\n  cluster: {}\n```\n\nThe following options can optionally be configured:\n\n| Option | Description | Default |\n| --- | --- | --- |\n| `HTTP_PROXY` | for kaniko pod. | `` |\n| `HTTPS_PROXY` | for kaniko pod. | `` |\n| `pullSecretPath` | path to the Google Cloud service account secret key file. | `` |\n| `pullSecretName` | name of the Kubernetes secret for pulling base images and pushing the final image. If given, the secret needs to contain the Google Cloud service account secret key under the key `kaniko-secret`. | `kaniko-secret` |\n| `pullSecretMountPath` | path the pull secret will be mounted at within the running container. | `` |\n| `namespace` | Kubernetes namespace. Defaults to current namespace in Kubernetes configuration. | `` |\n| `timeout` | amount of time (in seconds) that this build is allowed to run. Defaults to 20 minutes ( `20m`). | `` |\n| `dockerConfig` | describes how to mount the local Docker configuration into a pod. | `` |\n| `serviceAccount` | describes the Kubernetes service account to use for the pod. Defaults to ‘default’. | `` |\n| `tolerations` | describes the Kubernetes tolerations for the pod. | `[]` |\n| `nodeSelector` | describes the Kubernetes node selector for the pod. | `{}` |\n| `annotations` | describes the Kubernetes annotations for the pod. | `{}` |\n| `labels` | describes the Kubernetes labels for the pod. | `{}` |\n| `runAsUser` | defines the UID to request for running the container. If omitted, no SecurityContext will be specified for the pod and will therefore be inherited from the service account. | `` |\n| `resources` | define the resource requirements for the kaniko pod. | `` |\n| `concurrency` | how many artifacts can be built concurrently. 0 means “no-limit”. | `0` |\n| `volumes` | defines container mounts for ConfigMap and Secret resources. | `[]` |\n| `randomPullSecret` | adds a random UUID postfix to the default name of the pull secret to facilitate parallel builds, e.g. kaniko-secretdocker-cfgfd154022-c761-416f-8eb3-cf8258450b85. | `false` |\n| `randomDockerConfigSecret` | adds a random UUID postfix to the default name of the docker secret to facilitate parallel builds, e.g. docker-cfgfd154022-c761-416f-8eb3-cf8258450b85. | `false` |.\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/builders/build-environments/in-cluster", "title": "In cluster build", "description": "Skaffold supports building in cluster via Kaniko or Custom Build Script.", "has_code_examples": true, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 03:05:09", "type": "section_detail", "page_metadata": {"article:section": "docs", "robots": "index, follow", "ogTitle": "In cluster build", "language": "en", "twitter:description": "Skaffold supports building in cluster via Kaniko or Custom Build Script.\nConfiguration To configure in-cluster Build, add build type cluster to the build section of skaffold.yaml.\nbuild:cluster:{}The following options can optionally be configured:\n @media (min-width: 992px) { table { max-width: 80%; } } td.desc { width: 100%; } td.default { white-space: nowrap; }     Option Description Default     HTTP_PROXY for kaniko pod.    HTTPS_PROXY for kaniko pod.", "og:type": "article", "og:description": "Skaffold supports building in cluster via Kaniko or Custom Build Script.\nConfiguration To configure in-cluster Build, add build type cluster to the build section of skaffold.yaml.\nbuild:cluster:{}The following options can optionally be configured:\n @media (min-width: 992px) { table { max-width: 80%; } } td.desc { width: 100%; } td.default { white-space: nowrap; }     Option Description Default     HTTP_PROXY for kaniko pod.    HTTPS_PROXY for kaniko pod.", "og:url": "https://skaffold.dev/docs/builders/build-environments/in-cluster/", "description": "Skaffold supports building in cluster via Kaniko\nor Custom Build Script.\nConfiguration\nTo configure in-cluster Build, add build type cluster to the …", "og:title": "In cluster build", "article:modified_time": "2025-01-23T10:14:58-05:00", "ogSiteName": "Skaffold", "ogUrl": "https://skaffold.dev/docs/builders/build-environments/in-cluster/", "ogDescription": "Skaffold supports building in cluster via Kaniko or Custom Build Script.\nConfiguration To configure in-cluster Build, add build type cluster to the build section of skaffold.yaml.\nbuild:cluster:{}The following options can optionally be configured:\n @media (min-width: 992px) { table { max-width: 80%; } } td.desc { width: 100%; } td.default { white-space: nowrap; }     Option Description Default     HTTP_PROXY for kaniko pod.    HTTPS_PROXY for kaniko pod.", "modifiedTime": "2025-01-23T10:14:58-05:00", "title": "In cluster build | Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "generator": "Hugo 0.99.1", "og:site_name": "Skaffold", "twitter:card": "summary", "twitter:title": "In cluster build", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "scrapeId": "8520fc61-63ac-4266-b9b7-210b51aa9b9d", "sourceURL": "https://skaffold.dev/docs/builders/build-environments/in-cluster", "url": "https://skaffold.dev/docs/builders/build-environments/in-cluster/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you give me some code examples for In cluster build in skaffold?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Skaffold YAML Configuration**:\n\n```yaml\nbuild:\n  cluster: {}\n```\n\nThis snippet shows you how to skaffold yaml configuration, which is an important aspect of in cluster build.\n\n", "metadata": {"source_url": "https://skaffold.dev/docs/builders/build-environments/in-cluster", "title": "In cluster build", "description": "Skaffold supports building in cluster via Kaniko or Custom Build Script.", "has_code_examples": true, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 03:05:09", "type": "code_examples", "page_metadata": {"article:section": "docs", "robots": "index, follow", "ogTitle": "In cluster build", "language": "en", "twitter:description": "Skaffold supports building in cluster via Kaniko or Custom Build Script.\nConfiguration To configure in-cluster Build, add build type cluster to the build section of skaffold.yaml.\nbuild:cluster:{}The following options can optionally be configured:\n @media (min-width: 992px) { table { max-width: 80%; } } td.desc { width: 100%; } td.default { white-space: nowrap; }     Option Description Default     HTTP_PROXY for kaniko pod.    HTTPS_PROXY for kaniko pod.", "og:type": "article", "og:description": "Skaffold supports building in cluster via Kaniko or Custom Build Script.\nConfiguration To configure in-cluster Build, add build type cluster to the build section of skaffold.yaml.\nbuild:cluster:{}The following options can optionally be configured:\n @media (min-width: 992px) { table { max-width: 80%; } } td.desc { width: 100%; } td.default { white-space: nowrap; }     Option Description Default     HTTP_PROXY for kaniko pod.    HTTPS_PROXY for kaniko pod.", "og:url": "https://skaffold.dev/docs/builders/build-environments/in-cluster/", "description": "Skaffold supports building in cluster via Kaniko\nor Custom Build Script.\nConfiguration\nTo configure in-cluster Build, add build type cluster to the …", "og:title": "In cluster build", "article:modified_time": "2025-01-23T10:14:58-05:00", "ogSiteName": "Skaffold", "ogUrl": "https://skaffold.dev/docs/builders/build-environments/in-cluster/", "ogDescription": "Skaffold supports building in cluster via Kaniko or Custom Build Script.\nConfiguration To configure in-cluster Build, add build type cluster to the build section of skaffold.yaml.\nbuild:cluster:{}The following options can optionally be configured:\n @media (min-width: 992px) { table { max-width: 80%; } } td.desc { width: 100%; } td.default { white-space: nowrap; }     Option Description Default     HTTP_PROXY for kaniko pod.    HTTPS_PROXY for kaniko pod.", "modifiedTime": "2025-01-23T10:14:58-05:00", "title": "In cluster build | Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "generator": "Hugo 0.99.1", "og:site_name": "Skaffold", "twitter:card": "summary", "twitter:title": "In cluster build", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "scrapeId": "8520fc61-63ac-4266-b9b7-210b51aa9b9d", "sourceURL": "https://skaffold.dev/docs/builders/build-environments/in-cluster", "url": "https://skaffold.dev/docs/builders/build-environments/in-cluster/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: What are some tips for using In cluster build in skaffold effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nSkaffold can build multiple artifacts in parallel by setting a value higher than `1` to `concurrency`.\n\nFor in-cluster builds, the default is to build all the artifacts in parallel. If your cluster is too small, you might want to reduce the `concurrency`.\n\nSetting `concurrency` to `1` will cause artifacts to be built sequentially.\n\nWhen artifacts are built in parallel, the build logs are still printed in sequence to make them easier to read.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://skaffold.dev/docs/builders/build-environments/in-cluster", "title": "In cluster build", "description": "Skaffold supports building in cluster via Kaniko or Custom Build Script.", "has_code_examples": true, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 03:05:09", "type": "best_practices", "page_metadata": {"article:section": "docs", "robots": "index, follow", "ogTitle": "In cluster build", "language": "en", "twitter:description": "Skaffold supports building in cluster via Kaniko or Custom Build Script.\nConfiguration To configure in-cluster Build, add build type cluster to the build section of skaffold.yaml.\nbuild:cluster:{}The following options can optionally be configured:\n @media (min-width: 992px) { table { max-width: 80%; } } td.desc { width: 100%; } td.default { white-space: nowrap; }     Option Description Default     HTTP_PROXY for kaniko pod.    HTTPS_PROXY for kaniko pod.", "og:type": "article", "og:description": "Skaffold supports building in cluster via Kaniko or Custom Build Script.\nConfiguration To configure in-cluster Build, add build type cluster to the build section of skaffold.yaml.\nbuild:cluster:{}The following options can optionally be configured:\n @media (min-width: 992px) { table { max-width: 80%; } } td.desc { width: 100%; } td.default { white-space: nowrap; }     Option Description Default     HTTP_PROXY for kaniko pod.    HTTPS_PROXY for kaniko pod.", "og:url": "https://skaffold.dev/docs/builders/build-environments/in-cluster/", "description": "Skaffold supports building in cluster via Kaniko\nor Custom Build Script.\nConfiguration\nTo configure in-cluster Build, add build type cluster to the …", "og:title": "In cluster build", "article:modified_time": "2025-01-23T10:14:58-05:00", "ogSiteName": "Skaffold", "ogUrl": "https://skaffold.dev/docs/builders/build-environments/in-cluster/", "ogDescription": "Skaffold supports building in cluster via Kaniko or Custom Build Script.\nConfiguration To configure in-cluster Build, add build type cluster to the build section of skaffold.yaml.\nbuild:cluster:{}The following options can optionally be configured:\n @media (min-width: 992px) { table { max-width: 80%; } } td.desc { width: 100%; } td.default { white-space: nowrap; }     Option Description Default     HTTP_PROXY for kaniko pod.    HTTPS_PROXY for kaniko pod.", "modifiedTime": "2025-01-23T10:14:58-05:00", "title": "In cluster build | Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "generator": "Hugo 0.99.1", "og:site_name": "Skaffold", "twitter:card": "summary", "twitter:title": "In cluster build", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "scrapeId": "8520fc61-63ac-4266-b9b7-210b51aa9b9d", "sourceURL": "https://skaffold.dev/docs/builders/build-environments/in-cluster", "url": "https://skaffold.dev/docs/builders/build-environments/in-cluster/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what Jib Build is in skaffold?\n\nAssistant: Sure, I'd be happy to explain Jib Build in skaffold.\n\n# Jib Build\n\nJib is a set of plugins for Maven and Gradle for building optimized OCI-compliant container images for Java applications without a Docker daemon.Here's a quick rundown of what this is about:\n\n## Jib Maven and Gradle locally\n\n**Configuration**\n\nTo use Jib, add a `jib` field to each artifact you specify in the `artifacts` part of the `build` section. `context` should be a path to your Maven or Gradle project.\n\n#### Note\n\nYour project must be configured to use Jib already.\n\nThe `jib` type offers the following options:\n\n| Option | Description | Default |\n| --- | --- | --- |\n| `project` | selects which sub-project to build for multi-module builds. | `` |\n| `args` | additional build flags passed to the builder. | `[]` |\n| `type` | the Jib builder type; normally determined automatically. Valid types are `maven`: for Maven. `gradle`: for Gradle. | `` |\n| `fromImage` | overrides the configured jib base image. | `` |\n\nSkaffold’s jib support chooses the underlying builder (Maven or Gradle) based on the presence of standard build files in the `artifact`’s `context` directory:\n\n- _Maven_: `pom.xml`, or `.mvn` directory.\n- _Gradle_: `build.gradle`, `gradle.properties`, `settings.gradle`, or the Gradle wrapper script ( `gradlew`, `gradlew.bat`, or `gradlew.cmd`).\n\n**Artifact Dependency**\n\nYou can define dependency on other artifacts using the `requires` keyword. This can be useful to specify another artifact image as the `fromImage`.\n\n```yaml\nbuild:\n  artifacts:\n  - image: image1 # jib artifact\n    jib:\n      fromImage: image2\n    requires:\n    - image: image2\n  - image: image2 # base image artifact\n```\n\n**Example**\n\nSee the [Skaffold-Jib demo project](https://github.com/GoogleContainerTools/skaffold/blob/main/examples/jib/) for an example.\n\n### Multi-Module Projects\n\nSkaffold can be configured for _multi-module projects_ too. A multi-module project has several _modules_ (Maven terminology) or _sub-projects_ (Gradle terminology) that each produce a separate container image.\n\n#### Maven\n\nTo build a Maven multi-module project, first identify the sub-projects (also called _modules_ in Maven) that should produce a container image. Then for each such sub-project:\n\n- Create a Skaffold `artifact` in the `skaffold.yaml`.\n- Set the `artifact`’s `context` field to the root project location.\n- Add a `jib` element and set its `project` field to the sub-project’s `:artifactId`, `groupId:artifactId`, or the relative path to the sub-project _within the project_.\n\n#### Updating from earlier versions\n\nSkaffold had required Maven multi-module projects bind a Jib `build` or `dockerBuild` goal to the **package** phase. These bindings are no longer required with Jib 1.4.0 and should be removed.\n\n#### Gradle\n\nTo build a multi-module project with Gradle, first identify the sub-projects that should produce a container image. Then for each such sub-project:\n\n- Create a Skaffold `artifact` in the `skaffold.yaml`.\n- Set the `artifact`’s `context` field to the root project location.\n- Add a `jib` element and set its `project` field to the sub-project’s name.\n\n## Remotely with Google Cloud Build\n\nSkaffold can build artifacts using Jib remotely on [Google Cloud Build](https://skaffold.dev/docs/builders/#remotely-on-google-cloud-build).\n\n**Configuration**\n\nTo configure, add `googleCloudBuild` to `build` section to `skaffold.yaml`. The following options can optionally be configured:\n\n| Option | Description | Default |\n| --- | --- | --- |\n| `projectId` | ID of your Cloud Platform Project. If it is not provided, Skaffold will guess it from the image name. For example, given the artifact image name `gcr.io/myproject/image`, Skaffold will use the `myproject` GCP project. | `` |\n| `diskSizeGb` | disk size of the VM that runs the build. See [Cloud Build Reference](https://cloud.google.com/cloud-build/docs/api/reference/rest/v1/projects.builds#buildoptions). | `` |\n| `machineType` | type of the VM that runs the build. See [Cloud Build Reference](https://cloud.google.com/cloud-build/docs/api/reference/rest/v1/projects.builds#buildoptions). | `` |\n| `timeout` | amount of time (in seconds) that this build should be allowed to run. See [Cloud Build Reference](https://cloud.google.com/cloud-build/docs/api/reference/rest/v1/projects.builds#resource-build). | `` |\n| `logging` | specifies the logging mode. Valid modes are: `LOGGING_UNSPECIFIED`: The service determines the logging mode. `LEGACY`: Stackdriver logging and Cloud Storage logging are enabled (default). `GCS_ONLY`: Only Cloud Storage logging is enabled. See [Cloud Build Reference](https://cloud.google.com/cloud-build/docs/api/reference/rest/v1/projects.builds#loggingmode). | `` |\n| `logStreamingOption` | specifies the behavior when writing build logs to Google Cloud Storage. Valid options are: `STREAM_DEFAULT`: Service may automatically determine build log streaming behavior. `STREAM_ON`: Build logs should be streamed to Google Cloud Storage. `STREAM_OFF`: Build logs should not be streamed to Google Cloud Storage; they will be written when the build is completed. See [Cloud Build Reference](https://cloud.google.com/cloud-build/docs/api/reference/rest/v1/projects.builds#logstreamingoption). | `` |\n| `dockerImage` | image that runs a Docker build. See [Cloud Builders](https://cloud.google.com/cloud-build/docs/cloud-builders). | `gcr.io/cloud-builders/docker` |\n| `kanikoImage` | image that runs a Kaniko build. See [Cloud Builders](https://cloud.google.com/cloud-build/docs/cloud-builders). | `gcr.io/kaniko-project/executor` |\n| `mavenImage` | image that runs a Maven build. See [Cloud Builders](https://cloud.google.com/cloud-build/docs/cloud-builders). | `gcr.io/cloud-builders/mvn` |\n| `gradleImage` | image that runs a Gradle build. See [Cloud Builders](https://cloud.google.com/cloud-build/docs/cloud-builders). | `gcr.io/cloud-builders/gradle` |\n| `packImage` | image that runs a Cloud Native Buildpacks build. See [Cloud Builders](https://cloud.google.com/cloud-build/docs/cloud-builders). | `gcr.io/k8s-skaffold/pack` |\n| `koImage` | image that runs a ko build. The image must contain Skaffold, Go, and a shell (runnable as `sh`) that supports here documents. See [Cloud Builders](https://cloud.google.com/cloud-build/docs/cloud-builders). | `gcr.io/k8s-skaffold/skaffold` |\n| `bucket` | specifies the Cloud Storage bucket to store the staged build sources. | `` |\n| `concurrency` | how many artifacts can be built concurrently. 0 means “no-limit”. | `0` |\n| `workerPool` | configures a pool of workers to run the build. | `` |\n| `region` | configures the region to run the build. If WorkerPool is configured, the region will be deduced from the WorkerPool configuration. If neither WorkerPool nor Region is configured, the build will be run in global(non-regional). See [Cloud Build locations](https://cloud.google.com/build/docs/locations). | `` |\n| `platformEmulatorInstallStep` | specifies a pre-build step to install the required tooling for QEMU emulation on the GoogleCloudBuild containers. This enables performing cross-platform builds on GoogleCloudBuild. If unspecified, Skaffold uses the `docker/binfmt` image by default. | `` |\n| `serviceAccount` | Google Cloud platform service account used by Cloud Build. If unspecified, it defaults to the Cloud Build service account generated when the Cloud Build API is enabled. | `` |\n\n**Example**\n\nFollowing configuration instructs skaffold to build `gcr.io/k8s-skaffold/project1` with Google Cloud Build using Jib builder:\n\n```yaml\nbuild:\n  artifacts:\n  - image: gcr.io/k8s-skaffold/project1\n    jib: {}\n  googleCloudBuild:\n    projectId: YOUR-GCP-PROJECT\n```\n\n## Advanced usage\n\n### Additional arguments\n\nThe `jib` build artifact supports an [`args`](https://skaffold.dev/docs/references/yaml/#build-artifacts-jib-args) field to provide additional arguments to the Maven or Gradle command-line. For example, a Gradle user may choose to use:\n\n```\nartifacts:\n- image: jib-gradle-image\n  jib:\n    args: [--no-daemon]\n```\n\n### Using the `custom` builder\n\nSome users may have more complicated builds that may be better suited to using the [`custom` builder](https://skaffold.dev/docs/builders/builder-types/custom/). For example, the `jib` builder normally invokes the `prepare-package` goal rather than `package` as Jib packages the `.class` files rather than package in the jar. But some plugins require the `package` goal.\n\n```\nartifacts:\n- image: jib-gradle-image\n  custom:\n    buildCommand: mvn -Dimage=$IMAGE package $(if [ $PUSH_IMAGE = true ]; then echo jib:build; else echo jib:dockerBuild; fi)\n    dependencies:\n      paths:\n      - src/**\n```\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/builders/builder-types/jib", "title": "Jib Build", "description": "Jib is a set of plugins for Maven and Gradle for building optimized OCI-compliant container images for Java applications without a Docker daemon.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:06:05", "type": "overview", "page_metadata": {"og:type": "article", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "ogDescription": "Jib is a set of plugins for Maven and Gradle for building optimized OCI-compliant container images for Java applications without a Docker daemon.\nSkaffold can help build artifacts using Jib; Jib builds the container images and then pushes them to the local Docker daemon or to remote registries as instructed by Skaffold.\nSkaffold requires using Jib v1.4.0 or later.\nSkaffold supports building with Jib\n locally and remotely on Google Cloud Build  Jib Maven and Gradle locally Configuration", "article:section": "docs", "ogUrl": "https://skaffold.dev/docs/builders/builder-types/jib/", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:title": "Jib Build", "ogSiteName": "Skaffold", "modifiedTime": "2025-01-23T10:14:58-05:00", "generator": "Hugo 0.99.1", "language": "en", "og:url": "https://skaffold.dev/docs/builders/builder-types/jib/", "og:site_name": "Skaffold", "twitter:title": "Jib Build", "description": "Jib is a set of plugins for\nMaven and\nGradle\nfor building optimized OCI-compliant container images for Java applications\nwithout a Docker daemon. …", "twitter:description": "Jib is a set of plugins for Maven and Gradle for building optimized OCI-compliant container images for Java applications without a Docker daemon.\nSkaffold can help build artifacts using Jib; Jib builds the container images and then pushes them to the local Docker daemon or to remote registries as instructed by Skaffold.\nSkaffold requires using Jib v1.4.0 or later.\nSkaffold supports building with Jib\n locally and remotely on Google Cloud Build  Jib Maven and Gradle locally Configuration", "robots": "index, follow", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "title": "Jib Build | Skaffold", "og:description": "Jib is a set of plugins for Maven and Gradle for building optimized OCI-compliant container images for Java applications without a Docker daemon.\nSkaffold can help build artifacts using Jib; Jib builds the container images and then pushes them to the local Docker daemon or to remote registries as instructed by Skaffold.\nSkaffold requires using Jib v1.4.0 or later.\nSkaffold supports building with Jib\n locally and remotely on Google Cloud Build  Jib Maven and Gradle locally Configuration", "ogTitle": "Jib Build", "twitter:card": "summary", "scrapeId": "79d647ab-82b5-4aa2-80ff-81384426a4b3", "sourceURL": "https://skaffold.dev/docs/builders/builder-types/jib", "url": "https://skaffold.dev/docs/builders/builder-types/jib/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I jib maven and gradle locally in skaffold?\n\nAssistant: To jib maven and gradle locally in skaffold, here's what you do:\n**Configuration**\n\nTo use Jib, add a `jib` field to each artifact you specify in the `artifacts` part of the `build` section. `context` should be a path to your Maven or Gradle project.\n\n#### Note\n\nYour project must be configured to use Jib already.\n\nThe `jib` type offers the following options:\n\n| Option | Description | Default |\n| --- | --- | --- |\n| `project` | selects which sub-project to build for multi-module builds. | `` |\n| `args` | additional build flags passed to the builder. | `[]` |\n| `type` | the Jib builder type; normally determined automatically. Valid types are `maven`: for Maven. `gradle`: for Gradle. | `` |\n| `fromImage` | overrides the configured jib base image. | `` |\n\nSkaffold’s jib support chooses the underlying builder (Maven or Gradle) based on the presence of standard build files in the `artifact`’s `context` directory:\n\n- _Maven_: `pom.xml`, or `.mvn` directory.\n- _Gradle_: `build.gradle`, `gradle.properties`, `settings.gradle`, or the Gradle wrapper script ( `gradlew`, `gradlew.bat`, or `gradlew.cmd`).\n\n**Artifact Dependency**\n\nYou can define dependency on other artifacts using the `requires` keyword. This can be useful to specify another artifact image as the `fromImage`.\n\n```yaml\nbuild:\n  artifacts:\n  - image: image1 # jib artifact\n    jib:\n      fromImage: image2\n    requires:\n    - image: image2\n  - image: image2 # base image artifact\n```\n\n**Example**\n\nSee the [Skaffold-Jib demo project](https://github.com/GoogleContainerTools/skaffold/blob/main/examples/jib/) for an example.\n\n### Multi-Module Projects\n\nSkaffold can be configured for _multi-module projects_ too. A multi-module project has several _modules_ (Maven terminology) or _sub-projects_ (Gradle terminology) that each produce a separate container image.\n\n#### Maven\n\nTo build a Maven multi-module project, first identify the sub-projects (also called _modules_ in Maven) that should produce a container image. Then for each such sub-project:\n\n- Create a Skaffold `artifact` in the `skaffold.yaml`.\n- Set the `artifact`’s `context` field to the root project location.\n- Add a `jib` element and set its `project` field to the sub-project’s `:artifactId`, `groupId:artifactId`, or the relative path to the sub-project _within the project_.\n\n#### Updating from earlier versions\n\nSkaffold had required Maven multi-module projects bind a Jib `build` or `dockerBuild` goal to the **package** phase. These bindings are no longer required with Jib 1.4.0 and should be removed.\n\n#### Gradle\n\nTo build a multi-module project with Gradle, first identify the sub-projects that should produce a container image. Then for each such sub-project:\n\n- Create a Skaffold `artifact` in the `skaffold.yaml`.\n- Set the `artifact`’s `context` field to the root project location.\n- Add a `jib` element and set its `project` field to the sub-project’s name..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/builders/builder-types/jib", "title": "Jib Build", "description": "Jib is a set of plugins for Maven and Gradle for building optimized OCI-compliant container images for Java applications without a Docker daemon.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:06:05", "type": "section_detail", "page_metadata": {"og:type": "article", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "ogDescription": "Jib is a set of plugins for Maven and Gradle for building optimized OCI-compliant container images for Java applications without a Docker daemon.\nSkaffold can help build artifacts using Jib; Jib builds the container images and then pushes them to the local Docker daemon or to remote registries as instructed by Skaffold.\nSkaffold requires using Jib v1.4.0 or later.\nSkaffold supports building with Jib\n locally and remotely on Google Cloud Build  Jib Maven and Gradle locally Configuration", "article:section": "docs", "ogUrl": "https://skaffold.dev/docs/builders/builder-types/jib/", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:title": "Jib Build", "ogSiteName": "Skaffold", "modifiedTime": "2025-01-23T10:14:58-05:00", "generator": "Hugo 0.99.1", "language": "en", "og:url": "https://skaffold.dev/docs/builders/builder-types/jib/", "og:site_name": "Skaffold", "twitter:title": "Jib Build", "description": "Jib is a set of plugins for\nMaven and\nGradle\nfor building optimized OCI-compliant container images for Java applications\nwithout a Docker daemon. …", "twitter:description": "Jib is a set of plugins for Maven and Gradle for building optimized OCI-compliant container images for Java applications without a Docker daemon.\nSkaffold can help build artifacts using Jib; Jib builds the container images and then pushes them to the local Docker daemon or to remote registries as instructed by Skaffold.\nSkaffold requires using Jib v1.4.0 or later.\nSkaffold supports building with Jib\n locally and remotely on Google Cloud Build  Jib Maven and Gradle locally Configuration", "robots": "index, follow", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "title": "Jib Build | Skaffold", "og:description": "Jib is a set of plugins for Maven and Gradle for building optimized OCI-compliant container images for Java applications without a Docker daemon.\nSkaffold can help build artifacts using Jib; Jib builds the container images and then pushes them to the local Docker daemon or to remote registries as instructed by Skaffold.\nSkaffold requires using Jib v1.4.0 or later.\nSkaffold supports building with Jib\n locally and remotely on Google Cloud Build  Jib Maven and Gradle locally Configuration", "ogTitle": "Jib Build", "twitter:card": "summary", "scrapeId": "79d647ab-82b5-4aa2-80ff-81384426a4b3", "sourceURL": "https://skaffold.dev/docs/builders/builder-types/jib", "url": "https://skaffold.dev/docs/builders/builder-types/jib/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I remotely with google cloud build in skaffold?\n\nAssistant: To remotely with google cloud build in skaffold, here's what you do:\nSkaffold can build artifacts using Jib remotely on [Google Cloud Build](https://skaffold.dev/docs/builders/#remotely-on-google-cloud-build).\n\n**Configuration**\n\nTo configure, add `googleCloudBuild` to `build` section to `skaffold.yaml`. The following options can optionally be configured:\n\n| Option | Description | Default |\n| --- | --- | --- |\n| `projectId` | ID of your Cloud Platform Project. If it is not provided, Skaffold will guess it from the image name. For example, given the artifact image name `gcr.io/myproject/image`, Skaffold will use the `myproject` GCP project. | `` |\n| `diskSizeGb` | disk size of the VM that runs the build. See [Cloud Build Reference](https://cloud.google.com/cloud-build/docs/api/reference/rest/v1/projects.builds#buildoptions). | `` |\n| `machineType` | type of the VM that runs the build. See [Cloud Build Reference](https://cloud.google.com/cloud-build/docs/api/reference/rest/v1/projects.builds#buildoptions). | `` |\n| `timeout` | amount of time (in seconds) that this build should be allowed to run. See [Cloud Build Reference](https://cloud.google.com/cloud-build/docs/api/reference/rest/v1/projects.builds#resource-build). | `` |\n| `logging` | specifies the logging mode. Valid modes are: `LOGGING_UNSPECIFIED`: The service determines the logging mode. `LEGACY`: Stackdriver logging and Cloud Storage logging are enabled (default). `GCS_ONLY`: Only Cloud Storage logging is enabled. See [Cloud Build Reference](https://cloud.google.com/cloud-build/docs/api/reference/rest/v1/projects.builds#loggingmode). | `` |\n| `logStreamingOption` | specifies the behavior when writing build logs to Google Cloud Storage. Valid options are: `STREAM_DEFAULT`: Service may automatically determine build log streaming behavior. `STREAM_ON`: Build logs should be streamed to Google Cloud Storage. `STREAM_OFF`: Build logs should not be streamed to Google Cloud Storage; they will be written when the build is completed. See [Cloud Build Reference](https://cloud.google.com/cloud-build/docs/api/reference/rest/v1/projects.builds#logstreamingoption). | `` |\n| `dockerImage` | image that runs a Docker build. See [Cloud Builders](https://cloud.google.com/cloud-build/docs/cloud-builders). | `gcr.io/cloud-builders/docker` |\n| `kanikoImage` | image that runs a Kaniko build. See [Cloud Builders](https://cloud.google.com/cloud-build/docs/cloud-builders). | `gcr.io/kaniko-project/executor` |\n| `mavenImage` | image that runs a Maven build. See [Cloud Builders](https://cloud.google.com/cloud-build/docs/cloud-builders). | `gcr.io/cloud-builders/mvn` |\n| `gradleImage` | image that runs a Gradle build. See [Cloud Builders](https://cloud.google.com/cloud-build/docs/cloud-builders). | `gcr.io/cloud-builders/gradle` |\n| `packImage` | image that runs a Cloud Native Buildpacks build. See [Cloud Builders](https://cloud.google.com/cloud-build/docs/cloud-builders). | `gcr.io/k8s-skaffold/pack` |\n| `koImage` | image that runs a ko build. The image must contain Skaffold, Go, and a shell (runnable as `sh`) that supports here documents. See [Cloud Builders](https://cloud.google.com/cloud-build/docs/cloud-builders). | `gcr.io/k8s-skaffold/skaffold` |\n| `bucket` | specifies the Cloud Storage bucket to store the staged build sources. | `` |\n| `concurrency` | how many artifacts can be built concurrently. 0 means “no-limit”. | `0` |\n| `workerPool` | configures a pool of workers to run the build. | `` |\n| `region` | configures the region to run the build. If WorkerPool is configured, the region will be deduced from the WorkerPool configuration. If neither WorkerPool nor Region is configured, the build will be run in global(non-regional). See [Cloud Build locations](https://cloud.google.com/build/docs/locations). | `` |\n| `platformEmulatorInstallStep` | specifies a pre-build step to install the required tooling for QEMU emulation on the GoogleCloudBuild containers. This enables performing cross-platform builds on GoogleCloudBuild. If unspecified, Skaffold uses the `docker/binfmt` image by default. | `` |\n| `serviceAccount` | Google Cloud platform service account used by Cloud Build. If unspecified, it defaults to the Cloud Build service account generated when the Cloud Build API is enabled. | `` |\n\n**Example**\n\nFollowing configuration instructs skaffold to build `gcr.io/k8s-skaffold/project1` with Google Cloud Build using Jib builder:\n\n```yaml\nbuild:\n  artifacts:\n  - image: gcr.io/k8s-skaffold/project1\n    jib: {}\n  googleCloudBuild:\n    projectId: YOUR-GCP-PROJECT\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/builders/builder-types/jib", "title": "Jib Build", "description": "Jib is a set of plugins for Maven and Gradle for building optimized OCI-compliant container images for Java applications without a Docker daemon.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:06:05", "type": "section_detail", "page_metadata": {"og:type": "article", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "ogDescription": "Jib is a set of plugins for Maven and Gradle for building optimized OCI-compliant container images for Java applications without a Docker daemon.\nSkaffold can help build artifacts using Jib; Jib builds the container images and then pushes them to the local Docker daemon or to remote registries as instructed by Skaffold.\nSkaffold requires using Jib v1.4.0 or later.\nSkaffold supports building with Jib\n locally and remotely on Google Cloud Build  Jib Maven and Gradle locally Configuration", "article:section": "docs", "ogUrl": "https://skaffold.dev/docs/builders/builder-types/jib/", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:title": "Jib Build", "ogSiteName": "Skaffold", "modifiedTime": "2025-01-23T10:14:58-05:00", "generator": "Hugo 0.99.1", "language": "en", "og:url": "https://skaffold.dev/docs/builders/builder-types/jib/", "og:site_name": "Skaffold", "twitter:title": "Jib Build", "description": "Jib is a set of plugins for\nMaven and\nGradle\nfor building optimized OCI-compliant container images for Java applications\nwithout a Docker daemon. …", "twitter:description": "Jib is a set of plugins for Maven and Gradle for building optimized OCI-compliant container images for Java applications without a Docker daemon.\nSkaffold can help build artifacts using Jib; Jib builds the container images and then pushes them to the local Docker daemon or to remote registries as instructed by Skaffold.\nSkaffold requires using Jib v1.4.0 or later.\nSkaffold supports building with Jib\n locally and remotely on Google Cloud Build  Jib Maven and Gradle locally Configuration", "robots": "index, follow", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "title": "Jib Build | Skaffold", "og:description": "Jib is a set of plugins for Maven and Gradle for building optimized OCI-compliant container images for Java applications without a Docker daemon.\nSkaffold can help build artifacts using Jib; Jib builds the container images and then pushes them to the local Docker daemon or to remote registries as instructed by Skaffold.\nSkaffold requires using Jib v1.4.0 or later.\nSkaffold supports building with Jib\n locally and remotely on Google Cloud Build  Jib Maven and Gradle locally Configuration", "ogTitle": "Jib Build", "twitter:card": "summary", "scrapeId": "79d647ab-82b5-4aa2-80ff-81384426a4b3", "sourceURL": "https://skaffold.dev/docs/builders/builder-types/jib", "url": "https://skaffold.dev/docs/builders/builder-types/jib/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I advanced usage in skaffold?\n\nAssistant: To advanced usage in skaffold, here's what you do:\n### Additional arguments\n\nThe `jib` build artifact supports an [`args`](https://skaffold.dev/docs/references/yaml/#build-artifacts-jib-args) field to provide additional arguments to the Maven or Gradle command-line. For example, a Gradle user may choose to use:\n\n```\nartifacts:\n- image: jib-gradle-image\n  jib:\n    args: [--no-daemon]\n```\n\n### Using the `custom` builder\n\nSome users may have more complicated builds that may be better suited to using the [`custom` builder](https://skaffold.dev/docs/builders/builder-types/custom/). For example, the `jib` builder normally invokes the `prepare-package` goal rather than `package` as Jib packages the `.class` files rather than package in the jar. But some plugins require the `package` goal.\n\n```\nartifacts:\n- image: jib-gradle-image\n  custom:\n    buildCommand: mvn -Dimage=$IMAGE package $(if [ $PUSH_IMAGE = true ]; then echo jib:build; else echo jib:dockerBuild; fi)\n    dependencies:\n      paths:\n      - src/**\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/builders/builder-types/jib", "title": "Jib Build", "description": "Jib is a set of plugins for Maven and Gradle for building optimized OCI-compliant container images for Java applications without a Docker daemon.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:06:05", "type": "section_detail", "page_metadata": {"og:type": "article", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "ogDescription": "Jib is a set of plugins for Maven and Gradle for building optimized OCI-compliant container images for Java applications without a Docker daemon.\nSkaffold can help build artifacts using Jib; Jib builds the container images and then pushes them to the local Docker daemon or to remote registries as instructed by Skaffold.\nSkaffold requires using Jib v1.4.0 or later.\nSkaffold supports building with Jib\n locally and remotely on Google Cloud Build  Jib Maven and Gradle locally Configuration", "article:section": "docs", "ogUrl": "https://skaffold.dev/docs/builders/builder-types/jib/", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:title": "Jib Build", "ogSiteName": "Skaffold", "modifiedTime": "2025-01-23T10:14:58-05:00", "generator": "Hugo 0.99.1", "language": "en", "og:url": "https://skaffold.dev/docs/builders/builder-types/jib/", "og:site_name": "Skaffold", "twitter:title": "Jib Build", "description": "Jib is a set of plugins for\nMaven and\nGradle\nfor building optimized OCI-compliant container images for Java applications\nwithout a Docker daemon. …", "twitter:description": "Jib is a set of plugins for Maven and Gradle for building optimized OCI-compliant container images for Java applications without a Docker daemon.\nSkaffold can help build artifacts using Jib; Jib builds the container images and then pushes them to the local Docker daemon or to remote registries as instructed by Skaffold.\nSkaffold requires using Jib v1.4.0 or later.\nSkaffold supports building with Jib\n locally and remotely on Google Cloud Build  Jib Maven and Gradle locally Configuration", "robots": "index, follow", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "title": "Jib Build | Skaffold", "og:description": "Jib is a set of plugins for Maven and Gradle for building optimized OCI-compliant container images for Java applications without a Docker daemon.\nSkaffold can help build artifacts using Jib; Jib builds the container images and then pushes them to the local Docker daemon or to remote registries as instructed by Skaffold.\nSkaffold requires using Jib v1.4.0 or later.\nSkaffold supports building with Jib\n locally and remotely on Google Cloud Build  Jib Maven and Gradle locally Configuration", "ogTitle": "Jib Build", "twitter:card": "summary", "scrapeId": "79d647ab-82b5-4aa2-80ff-81384426a4b3", "sourceURL": "https://skaffold.dev/docs/builders/builder-types/jib", "url": "https://skaffold.dev/docs/builders/builder-types/jib/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you give me some code examples for Jib Build in skaffold?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Artifact Dependency Example**:\n\n```yaml\n```yaml\nbuild:\n  artifacts:\n  - image: image1 # jib artifact\n    jib:\n      fromImage: image2\n    requires:\n    - image: image2\n  - image: image2 # base image artifact\n```\n```\n\nThis snippet shows you how to artifact dependency example, which is an important aspect of jib build.\n\n**Google Cloud Build Example**:\n\n```yaml\n```yaml\nbuild:\n  artifacts:\n  - image: gcr.io/k8s-skaffold/project1\n    jib: {}\n  googleCloudBuild:\n    projectId: YOUR-GCP-PROJECT\n```\n```\n\nThis snippet shows you how to google cloud build example, which is an important aspect of jib build.\n\n**Additional Arguments Example**:\n\n```yaml\n```\nartifacts:\n- image: jib-gradle-image\n  jib:\n    args: [--no-daemon]\n```\n```\n\nThis snippet shows you how to additional arguments example, which is an important aspect of jib build.\n\n**Custom Builder Example**:\n\n```yaml\n```\nartifacts:\n- image: jib-gradle-image\n  custom:\n    buildCommand: mvn -Dimage=$IMAGE package $(if [ $PUSH_IMAGE = true ]; then echo jib:build; else echo jib:dockerBuild; fi)\n    dependencies:\n      paths:\n      - src/**\n```\n```\n\nThis snippet shows you how to custom builder example, which is an important aspect of jib build.\n\n", "metadata": {"source_url": "https://skaffold.dev/docs/builders/builder-types/jib", "title": "Jib Build", "description": "Jib is a set of plugins for Maven and Gradle for building optimized OCI-compliant container images for Java applications without a Docker daemon.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:06:05", "type": "code_examples", "page_metadata": {"og:type": "article", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "ogDescription": "Jib is a set of plugins for Maven and Gradle for building optimized OCI-compliant container images for Java applications without a Docker daemon.\nSkaffold can help build artifacts using Jib; Jib builds the container images and then pushes them to the local Docker daemon or to remote registries as instructed by Skaffold.\nSkaffold requires using Jib v1.4.0 or later.\nSkaffold supports building with Jib\n locally and remotely on Google Cloud Build  Jib Maven and Gradle locally Configuration", "article:section": "docs", "ogUrl": "https://skaffold.dev/docs/builders/builder-types/jib/", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:title": "Jib Build", "ogSiteName": "Skaffold", "modifiedTime": "2025-01-23T10:14:58-05:00", "generator": "Hugo 0.99.1", "language": "en", "og:url": "https://skaffold.dev/docs/builders/builder-types/jib/", "og:site_name": "Skaffold", "twitter:title": "Jib Build", "description": "Jib is a set of plugins for\nMaven and\nGradle\nfor building optimized OCI-compliant container images for Java applications\nwithout a Docker daemon. …", "twitter:description": "Jib is a set of plugins for Maven and Gradle for building optimized OCI-compliant container images for Java applications without a Docker daemon.\nSkaffold can help build artifacts using Jib; Jib builds the container images and then pushes them to the local Docker daemon or to remote registries as instructed by Skaffold.\nSkaffold requires using Jib v1.4.0 or later.\nSkaffold supports building with Jib\n locally and remotely on Google Cloud Build  Jib Maven and Gradle locally Configuration", "robots": "index, follow", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "title": "Jib Build | Skaffold", "og:description": "Jib is a set of plugins for Maven and Gradle for building optimized OCI-compliant container images for Java applications without a Docker daemon.\nSkaffold can help build artifacts using Jib; Jib builds the container images and then pushes them to the local Docker daemon or to remote registries as instructed by Skaffold.\nSkaffold requires using Jib v1.4.0 or later.\nSkaffold supports building with Jib\n locally and remotely on Google Cloud Build  Jib Maven and Gradle locally Configuration", "ogTitle": "Jib Build", "twitter:card": "summary", "scrapeId": "79d647ab-82b5-4aa2-80ff-81384426a4b3", "sourceURL": "https://skaffold.dev/docs/builders/builder-types/jib", "url": "https://skaffold.dev/docs/builders/builder-types/jib/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: What are some tips for using Jib Build in skaffold effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nEnsure your project is configured to use Jib before adding it to Skaffold.\n\nFor multi-module projects, correctly identify sub-projects and set the appropriate context and project fields in Skaffold.\n\nWhen using Google Cloud Build, configure the necessary options in the `googleCloudBuild` section of `skaffold.yaml`.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://skaffold.dev/docs/builders/builder-types/jib", "title": "Jib Build", "description": "Jib is a set of plugins for Maven and Gradle for building optimized OCI-compliant container images for Java applications without a Docker daemon.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:06:05", "type": "best_practices", "page_metadata": {"og:type": "article", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "ogDescription": "Jib is a set of plugins for Maven and Gradle for building optimized OCI-compliant container images for Java applications without a Docker daemon.\nSkaffold can help build artifacts using Jib; Jib builds the container images and then pushes them to the local Docker daemon or to remote registries as instructed by Skaffold.\nSkaffold requires using Jib v1.4.0 or later.\nSkaffold supports building with Jib\n locally and remotely on Google Cloud Build  Jib Maven and Gradle locally Configuration", "article:section": "docs", "ogUrl": "https://skaffold.dev/docs/builders/builder-types/jib/", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:title": "Jib Build", "ogSiteName": "Skaffold", "modifiedTime": "2025-01-23T10:14:58-05:00", "generator": "Hugo 0.99.1", "language": "en", "og:url": "https://skaffold.dev/docs/builders/builder-types/jib/", "og:site_name": "Skaffold", "twitter:title": "Jib Build", "description": "Jib is a set of plugins for\nMaven and\nGradle\nfor building optimized OCI-compliant container images for Java applications\nwithout a Docker daemon. …", "twitter:description": "Jib is a set of plugins for Maven and Gradle for building optimized OCI-compliant container images for Java applications without a Docker daemon.\nSkaffold can help build artifacts using Jib; Jib builds the container images and then pushes them to the local Docker daemon or to remote registries as instructed by Skaffold.\nSkaffold requires using Jib v1.4.0 or later.\nSkaffold supports building with Jib\n locally and remotely on Google Cloud Build  Jib Maven and Gradle locally Configuration", "robots": "index, follow", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "title": "Jib Build | Skaffold", "og:description": "Jib is a set of plugins for Maven and Gradle for building optimized OCI-compliant container images for Java applications without a Docker daemon.\nSkaffold can help build artifacts using Jib; Jib builds the container images and then pushes them to the local Docker daemon or to remote registries as instructed by Skaffold.\nSkaffold requires using Jib v1.4.0 or later.\nSkaffold supports building with Jib\n locally and remotely on Google Cloud Build  Jib Maven and Gradle locally Configuration", "ogTitle": "Jib Build", "twitter:card": "summary", "scrapeId": "79d647ab-82b5-4aa2-80ff-81384426a4b3", "sourceURL": "https://skaffold.dev/docs/builders/builder-types/jib", "url": "https://skaffold.dev/docs/builders/builder-types/jib/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what Kubectl beta is in skaffold?\n\nAssistant: Sure, I'd be happy to explain Kubectl beta in skaffold.\n\n# Kubectl beta\n\n`kubectl` is Kubernetes command-line tool for deploying and managing applications on Kubernetes clusters.Here's a quick rundown of what this is about:\n\n## Deploying with kubectl\n\n`kubectl` is Kubernetes command-line tool for deploying and managing applications on Kubernetes clusters.\n\nSkaffold can work with `kubectl` to deploy artifacts on any Kubernetes cluster, including Google Kubernetes Engine clusters and local Minikube clusters.\n\n## Configuration\n\nTo use `kubectl`, add deploy type `kubectl` to the `deploy` section of `skaffold.yaml`.\n\nThe `kubectl` type offers the following options:\n\n| Option | Description | Default |\n| --- | --- | --- |\n| `flags` | additional flags passed to `kubectl`. | `` |\n| `remoteManifests` | Kubernetes manifests in remote clusters. | `[]` |\n| `defaultNamespace` | default namespace passed to kubectl on deployment if no other override is given. | `` |\n| `hooks` | describes a set of lifecycle hooks that are executed before and after every deploy. | `` |\n\n`flags` section offers the following options:\n\n| Option | Description | Default |\n| --- | --- | --- |\n| `global` | additional flags passed on every command. | `[]` |\n| `apply` | additional flags passed on creations ( `kubectl apply`). | `[]` |\n| `delete` | additional flags passed on deletions ( `kubectl delete`). | `[]` |\n| `disableValidation` | passes the `--validate=false` flag to supported `kubectl` commands when enabled. | `false` |\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/deployers/kubectl", "title": "Kubectl beta", "description": "`kubectl` is Kubernetes command-line tool for deploying and managing applications on Kubernetes clusters.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:06:17", "type": "overview", "page_metadata": {"generator": "Hugo 0.99.1", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "modifiedTime": "2025-01-23T10:14:58-05:00", "ogSiteName": "Skaffold", "language": "en", "twitter:description": "Deploying with kubectl kubectl is Kubernetes command-line tool for deploying and managing applications on Kubernetes clusters.\nSkaffold can work with kubectl to deploy artifacts on any Kubernetes cluster, including Google Kubernetes Engine clusters and local Minikube clusters.\nConfiguration To use kubectl, add deploy type kubectl to the deploy section of skaffold.yaml.\nThe kubectl type offers the following options:\n @media (min-width: 992px) { table { max-width: 80%; } } td.desc { width: 100%; } td.", "title": "Kubectl | Skaffold", "robots": "index, follow", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:site_name": "Skaffold", "ogUrl": "https://skaffold.dev/docs/deployers/kubectl/", "og:type": "article", "twitter:card": "summary", "twitter:title": "Kubectl", "og:description": "Deploying with kubectl kubectl is Kubernetes command-line tool for deploying and managing applications on Kubernetes clusters.\nSkaffold can work with kubectl to deploy artifacts on any Kubernetes cluster, including Google Kubernetes Engine clusters and local Minikube clusters.\nConfiguration To use kubectl, add deploy type kubectl to the deploy section of skaffold.yaml.\nThe kubectl type offers the following options:\n @media (min-width: 992px) { table { max-width: 80%; } } td.desc { width: 100%; } td.", "og:url": "https://skaffold.dev/docs/deployers/kubectl/", "description": "Deploying with kubectl\nkubectl is Kubernetes\ncommand-line tool\nfor deploying and managing\napplications on Kubernetes clusters.\nSkaffold can work with …", "article:section": "docs", "ogTitle": "Kubectl", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "ogDescription": "Deploying with kubectl kubectl is Kubernetes command-line tool for deploying and managing applications on Kubernetes clusters.\nSkaffold can work with kubectl to deploy artifacts on any Kubernetes cluster, including Google Kubernetes Engine clusters and local Minikube clusters.\nConfiguration To use kubectl, add deploy type kubectl to the deploy section of skaffold.yaml.\nThe kubectl type offers the following options:\n @media (min-width: 992px) { table { max-width: 80%; } } td.desc { width: 100%; } td.", "og:title": "Kubectl", "scrapeId": "8d19c990-45a5-4c09-8129-575f7a99e22f", "sourceURL": "https://skaffold.dev/docs/deployers/kubectl", "url": "https://skaffold.dev/docs/deployers/kubectl/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I deploying with kubectl in skaffold?\n\nAssistant: To deploying with kubectl in skaffold, here's what you do:\n`kubectl` is Kubernetes command-line tool for deploying and managing applications on Kubernetes clusters.\n\nSkaffold can work with `kubectl` to deploy artifacts on any Kubernetes cluster, including Google Kubernetes Engine clusters and local Minikube clusters..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/deployers/kubectl", "title": "Kubectl beta", "description": "`kubectl` is Kubernetes command-line tool for deploying and managing applications on Kubernetes clusters.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:06:17", "type": "section_detail", "page_metadata": {"generator": "Hugo 0.99.1", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "modifiedTime": "2025-01-23T10:14:58-05:00", "ogSiteName": "Skaffold", "language": "en", "twitter:description": "Deploying with kubectl kubectl is Kubernetes command-line tool for deploying and managing applications on Kubernetes clusters.\nSkaffold can work with kubectl to deploy artifacts on any Kubernetes cluster, including Google Kubernetes Engine clusters and local Minikube clusters.\nConfiguration To use kubectl, add deploy type kubectl to the deploy section of skaffold.yaml.\nThe kubectl type offers the following options:\n @media (min-width: 992px) { table { max-width: 80%; } } td.desc { width: 100%; } td.", "title": "Kubectl | Skaffold", "robots": "index, follow", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:site_name": "Skaffold", "ogUrl": "https://skaffold.dev/docs/deployers/kubectl/", "og:type": "article", "twitter:card": "summary", "twitter:title": "Kubectl", "og:description": "Deploying with kubectl kubectl is Kubernetes command-line tool for deploying and managing applications on Kubernetes clusters.\nSkaffold can work with kubectl to deploy artifacts on any Kubernetes cluster, including Google Kubernetes Engine clusters and local Minikube clusters.\nConfiguration To use kubectl, add deploy type kubectl to the deploy section of skaffold.yaml.\nThe kubectl type offers the following options:\n @media (min-width: 992px) { table { max-width: 80%; } } td.desc { width: 100%; } td.", "og:url": "https://skaffold.dev/docs/deployers/kubectl/", "description": "Deploying with kubectl\nkubectl is Kubernetes\ncommand-line tool\nfor deploying and managing\napplications on Kubernetes clusters.\nSkaffold can work with …", "article:section": "docs", "ogTitle": "Kubectl", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "ogDescription": "Deploying with kubectl kubectl is Kubernetes command-line tool for deploying and managing applications on Kubernetes clusters.\nSkaffold can work with kubectl to deploy artifacts on any Kubernetes cluster, including Google Kubernetes Engine clusters and local Minikube clusters.\nConfiguration To use kubectl, add deploy type kubectl to the deploy section of skaffold.yaml.\nThe kubectl type offers the following options:\n @media (min-width: 992px) { table { max-width: 80%; } } td.desc { width: 100%; } td.", "og:title": "Kubectl", "scrapeId": "8d19c990-45a5-4c09-8129-575f7a99e22f", "sourceURL": "https://skaffold.dev/docs/deployers/kubectl", "url": "https://skaffold.dev/docs/deployers/kubectl/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I configuration in skaffold?\n\nAssistant: To configuration in skaffold, here's what you do:\nTo use `kubectl`, add deploy type `kubectl` to the `deploy` section of `skaffold.yaml`.\n\nThe `kubectl` type offers the following options:\n\n| Option | Description | Default |\n| --- | --- | --- |\n| `flags` | additional flags passed to `kubectl`. | `` |\n| `remoteManifests` | Kubernetes manifests in remote clusters. | `[]` |\n| `defaultNamespace` | default namespace passed to kubectl on deployment if no other override is given. | `` |\n| `hooks` | describes a set of lifecycle hooks that are executed before and after every deploy. | `` |\n\n`flags` section offers the following options:\n\n| Option | Description | Default |\n| --- | --- | --- |\n| `global` | additional flags passed on every command. | `[]` |\n| `apply` | additional flags passed on creations ( `kubectl apply`). | `[]` |\n| `delete` | additional flags passed on deletions ( `kubectl delete`). | `[]` |\n| `disableValidation` | passes the `--validate=false` flag to supported `kubectl` commands when enabled. | `false` |.\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/deployers/kubectl", "title": "Kubectl beta", "description": "`kubectl` is Kubernetes command-line tool for deploying and managing applications on Kubernetes clusters.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:06:17", "type": "section_detail", "page_metadata": {"generator": "Hugo 0.99.1", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "modifiedTime": "2025-01-23T10:14:58-05:00", "ogSiteName": "Skaffold", "language": "en", "twitter:description": "Deploying with kubectl kubectl is Kubernetes command-line tool for deploying and managing applications on Kubernetes clusters.\nSkaffold can work with kubectl to deploy artifacts on any Kubernetes cluster, including Google Kubernetes Engine clusters and local Minikube clusters.\nConfiguration To use kubectl, add deploy type kubectl to the deploy section of skaffold.yaml.\nThe kubectl type offers the following options:\n @media (min-width: 992px) { table { max-width: 80%; } } td.desc { width: 100%; } td.", "title": "Kubectl | Skaffold", "robots": "index, follow", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:site_name": "Skaffold", "ogUrl": "https://skaffold.dev/docs/deployers/kubectl/", "og:type": "article", "twitter:card": "summary", "twitter:title": "Kubectl", "og:description": "Deploying with kubectl kubectl is Kubernetes command-line tool for deploying and managing applications on Kubernetes clusters.\nSkaffold can work with kubectl to deploy artifacts on any Kubernetes cluster, including Google Kubernetes Engine clusters and local Minikube clusters.\nConfiguration To use kubectl, add deploy type kubectl to the deploy section of skaffold.yaml.\nThe kubectl type offers the following options:\n @media (min-width: 992px) { table { max-width: 80%; } } td.desc { width: 100%; } td.", "og:url": "https://skaffold.dev/docs/deployers/kubectl/", "description": "Deploying with kubectl\nkubectl is Kubernetes\ncommand-line tool\nfor deploying and managing\napplications on Kubernetes clusters.\nSkaffold can work with …", "article:section": "docs", "ogTitle": "Kubectl", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "ogDescription": "Deploying with kubectl kubectl is Kubernetes command-line tool for deploying and managing applications on Kubernetes clusters.\nSkaffold can work with kubectl to deploy artifacts on any Kubernetes cluster, including Google Kubernetes Engine clusters and local Minikube clusters.\nConfiguration To use kubectl, add deploy type kubectl to the deploy section of skaffold.yaml.\nThe kubectl type offers the following options:\n @media (min-width: 992px) { table { max-width: 80%; } } td.desc { width: 100%; } td.", "og:title": "Kubectl", "scrapeId": "8d19c990-45a5-4c09-8129-575f7a99e22f", "sourceURL": "https://skaffold.dev/docs/deployers/kubectl", "url": "https://skaffold.dev/docs/deployers/kubectl/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you give me some code examples for Kubectl beta in skaffold?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Example**:\n\n```yaml\n```yaml\ndeploy:\n  kubectl: {}\n```\n```\n\nThis snippet shows you how to example, which is an important aspect of kubectl beta.\n\n", "metadata": {"source_url": "https://skaffold.dev/docs/deployers/kubectl", "title": "Kubectl beta", "description": "`kubectl` is Kubernetes command-line tool for deploying and managing applications on Kubernetes clusters.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:06:17", "type": "code_examples", "page_metadata": {"generator": "Hugo 0.99.1", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "modifiedTime": "2025-01-23T10:14:58-05:00", "ogSiteName": "Skaffold", "language": "en", "twitter:description": "Deploying with kubectl kubectl is Kubernetes command-line tool for deploying and managing applications on Kubernetes clusters.\nSkaffold can work with kubectl to deploy artifacts on any Kubernetes cluster, including Google Kubernetes Engine clusters and local Minikube clusters.\nConfiguration To use kubectl, add deploy type kubectl to the deploy section of skaffold.yaml.\nThe kubectl type offers the following options:\n @media (min-width: 992px) { table { max-width: 80%; } } td.desc { width: 100%; } td.", "title": "Kubectl | Skaffold", "robots": "index, follow", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:site_name": "Skaffold", "ogUrl": "https://skaffold.dev/docs/deployers/kubectl/", "og:type": "article", "twitter:card": "summary", "twitter:title": "Kubectl", "og:description": "Deploying with kubectl kubectl is Kubernetes command-line tool for deploying and managing applications on Kubernetes clusters.\nSkaffold can work with kubectl to deploy artifacts on any Kubernetes cluster, including Google Kubernetes Engine clusters and local Minikube clusters.\nConfiguration To use kubectl, add deploy type kubectl to the deploy section of skaffold.yaml.\nThe kubectl type offers the following options:\n @media (min-width: 992px) { table { max-width: 80%; } } td.desc { width: 100%; } td.", "og:url": "https://skaffold.dev/docs/deployers/kubectl/", "description": "Deploying with kubectl\nkubectl is Kubernetes\ncommand-line tool\nfor deploying and managing\napplications on Kubernetes clusters.\nSkaffold can work with …", "article:section": "docs", "ogTitle": "Kubectl", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "ogDescription": "Deploying with kubectl kubectl is Kubernetes command-line tool for deploying and managing applications on Kubernetes clusters.\nSkaffold can work with kubectl to deploy artifacts on any Kubernetes cluster, including Google Kubernetes Engine clusters and local Minikube clusters.\nConfiguration To use kubectl, add deploy type kubectl to the deploy section of skaffold.yaml.\nThe kubectl type offers the following options:\n @media (min-width: 992px) { table { max-width: 80%; } } td.desc { width: 100%; } td.", "og:title": "Kubectl", "scrapeId": "8d19c990-45a5-4c09-8129-575f7a99e22f", "sourceURL": "https://skaffold.dev/docs/deployers/kubectl", "url": "https://skaffold.dev/docs/deployers/kubectl/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: What are some tips for using Kubectl beta in skaffold effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nkubectl CLI must be installed on your machine. Skaffold will not install it.\n\nIt has to be installed in a version that’s compatible with your cluster.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://skaffold.dev/docs/deployers/kubectl", "title": "Kubectl beta", "description": "`kubectl` is Kubernetes command-line tool for deploying and managing applications on Kubernetes clusters.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:06:17", "type": "best_practices", "page_metadata": {"generator": "Hugo 0.99.1", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "modifiedTime": "2025-01-23T10:14:58-05:00", "ogSiteName": "Skaffold", "language": "en", "twitter:description": "Deploying with kubectl kubectl is Kubernetes command-line tool for deploying and managing applications on Kubernetes clusters.\nSkaffold can work with kubectl to deploy artifacts on any Kubernetes cluster, including Google Kubernetes Engine clusters and local Minikube clusters.\nConfiguration To use kubectl, add deploy type kubectl to the deploy section of skaffold.yaml.\nThe kubectl type offers the following options:\n @media (min-width: 992px) { table { max-width: 80%; } } td.desc { width: 100%; } td.", "title": "Kubectl | Skaffold", "robots": "index, follow", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:site_name": "Skaffold", "ogUrl": "https://skaffold.dev/docs/deployers/kubectl/", "og:type": "article", "twitter:card": "summary", "twitter:title": "Kubectl", "og:description": "Deploying with kubectl kubectl is Kubernetes command-line tool for deploying and managing applications on Kubernetes clusters.\nSkaffold can work with kubectl to deploy artifacts on any Kubernetes cluster, including Google Kubernetes Engine clusters and local Minikube clusters.\nConfiguration To use kubectl, add deploy type kubectl to the deploy section of skaffold.yaml.\nThe kubectl type offers the following options:\n @media (min-width: 992px) { table { max-width: 80%; } } td.desc { width: 100%; } td.", "og:url": "https://skaffold.dev/docs/deployers/kubectl/", "description": "Deploying with kubectl\nkubectl is Kubernetes\ncommand-line tool\nfor deploying and managing\napplications on Kubernetes clusters.\nSkaffold can work with …", "article:section": "docs", "ogTitle": "Kubectl", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "ogDescription": "Deploying with kubectl kubectl is Kubernetes command-line tool for deploying and managing applications on Kubernetes clusters.\nSkaffold can work with kubectl to deploy artifacts on any Kubernetes cluster, including Google Kubernetes Engine clusters and local Minikube clusters.\nConfiguration To use kubectl, add deploy type kubectl to the deploy section of skaffold.yaml.\nThe kubectl type offers the following options:\n @media (min-width: 992px) { table { max-width: 80%; } } td.desc { width: 100%; } td.", "og:title": "Kubectl", "scrapeId": "8d19c990-45a5-4c09-8129-575f7a99e22f", "sourceURL": "https://skaffold.dev/docs/deployers/kubectl", "url": "https://skaffold.dev/docs/deployers/kubectl/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what Quickstart is in skaffold?\n\nAssistant: Sure, I'd be happy to explain Quickstart in skaffold.\n\n# Quickstart\n\nFollow this tutorial if you’re using the Skaffold standalone binary. It walks through running Skaffold on a small Kubernetes app built with Docker inside minikube and deployed with kubectl.Here's a quick rundown of what this is about:\n\n## Set up\n\nThis tutorial requires Skaffold, minikube, and kubectl.\n\n1. [Install Skaffold](https://skaffold.dev/docs/install/).\n2. [Install kubectl](https://kubernetes.io/docs/tasks/tools/install-kubectl/).\n3. [Install minikube](https://minikube.sigs.k8s.io/docs/start/).\n\nThis tutorial uses minikube because Skaffold knows how to build the app using the Docker daemon hosted inside minikube. This means we don’t need a registry to host the app’s container images.\n\n## Clone the sample app\n\nLet’s get a sample application set up to use Skaffold.\n\n1. Clone the Skaffold repository:\n\n```bash\ngit clone https://github.com/GoogleContainerTools/skaffold\n```\n\n2. Change to the `examples/buildpacks-node-tutorial` directory.\n\n```bash\ncd skaffold/examples/buildpacks-node-tutorial\n```\n\n## Initialize Skaffold\n\nYour working directory is the application directory, `skaffold/examples/buildpacks-node-tutorial`. This will be our root Skaffold directory.\n\nThis sample application is written in Node, but Skaffold is language-agnostic and works with any containerized application.\n\n### Bootstrap Skaffold configuration\n\n1. Run the following command to generate a `skaffold.yaml` config file:\n\n```bash\nskaffold init\n```\n\n2. When prompted to choose the builder, press enter to accept the default selection.\n3. When asked which builders you would like to create Kubernetes resources for, press enter to accept the default selection.\n4. When asked if you want to write this configuration to skaffold.yaml, type “y” for yes.\n5. Open your new **skaffold.yaml**, generated at `skaffold/examples/buildpacks-node-tutorial/skaffold.yaml`. All of your Skaffold configuration lives in this file. We will go into more detail about how it works in later steps.\n\n## Use Skaffold for continuous development\n\nSkaffold speeds up your development loop by automatically building and deploying the application whenever your code changes.\n\n### Start minikube\n\n1. To see this in action, let’s start up minikube so Skaffold has a cluster to run your application.\n\n```bash\nminikube start --profile custom\nskaffold config set --global local-cluster true\neval $(minikube -p custom docker-env)\n```\n\nThis may take several minutes.\n\n### Use `skaffold dev`\n\n1. Run the following command to begin using Skaffold for continuous development:\n\n```bash\nskaffold dev\n```\n\nNotice how Skaffold automatically builds and deploys your application. You should see the following application output in your terminal:\n\n```terminal\nExample app listening on port 3000!\n```\n\nTo browse to the web page, open a new terminal and run:\n\n```terminal\nminikube tunnel -p custom\n```\n\nNow open your browser at `http://localhost:3000`. This displays the content of `public/index.html` file.\n\nSkaffold is now watching for any file changes, and will rebuild your application automatically. Let’s see this in action.\n\n2. Open `skaffold/examples/buildpacks-node-tutorial/src/index.js` and change line 10 to the following:\n\n```\napp.listen(port, () => console.log(`Example app listening on port ${port}! This is version 2.`))\n```\n\nNotice how Skaffold automatically hot reloads your code changes to your application running in minikube, intelligently syncing only the file you changed. Your application is now automatically deployed with the changes you made, as it prints the following to your terminal:\n\n```terminal\nExample app listening on port 3000! This is version 2.\n```\n\n### Exit dev mode\n\n1. Let’s stop continuous dev mode by pressing the following keys in your terminal:\n\n```terminal\nCtrl+C\n```\n\nSkaffold will clean up all deployed artifacts and end dev mode.\n\n## Use Skaffold for continuous integration\n\nWhile Skaffold shines for continuous development, it can also be used for continuous integration (CI). Let’s use Skaffold to build and test a container image.\n\n### Build an image\n\nYour CI pipelines can run `skaffold build` to build, tag, and push your container images to a registry.\n\n1. Try this out by running the following command:\n\n```bash\nexport STATE=$(git rev-list -1 HEAD --abbrev-commit)\nskaffold build --file-output build-$STATE.json\n```\n\nSkaffold writes the output of the build to a JSON file, which we’ll pass to our continuous delivery (CD) process in the next step.\n\n### Test an image\n\nSkaffold can also run tests against your images before deploying them. Let’s try this out by creating a simple custom test.\n\n1. Open your `skaffold.yaml` and add the following test configuration to the bottom, without any additional indentation:\n\n```\ntest:\n- image: skaffold-buildpacks-node\n  custom:\n    - command: echo This is a custom test commmand!\n```\n\nNow you have a simple custom test set up that will run a bash command and await a successful response.\n\n2. Run the following command to execute this test with Skaffold:\n\n```bash\nskaffold test --build-artifacts build-$STATE.json\n```\n\n## Use Skaffold for continuous delivery\n\nLet’s learn how Skaffold can handle continuous delivery (CD).\n\n### Deploy in a single step\n\n1. For simple deployments, run `skaffold deploy`:\n\n```bash\nskaffold deploy -a build-$STATE.json\n```\n\nSkaffold hydrates your Kubernetes manifest with the image you built and tagged in the previous step, and deploys the application.\n\n### Render and apply in separate steps\n\nFor GitOps delivery workflows, you may want to decompose your deployments into separate render and apply phases. That way, you can commit your hydrated Kubernetes manifests to source control before they are applied.\n\n1. Run the following command to render a hydrated manifest:\n\n```bash\nskaffold render -a build-$STATE.json --output render.yaml --digest-source local\n```\n\nOpen `skaffold/examples/buildpacks-node-tutorial/render.yaml` to check out the hydrated manifest.\n\n2. Next, run the following command to apply your hydrated manifest:\n\n```bash\nskaffold apply render.yaml\n```\n\nYou have now successfully deployed your application in two ways.\n\n## What’s next\n\nFor getting started with your project, see the [Getting Started With Your Project](https://skaffold.dev/docs/workflows/getting-started-with-your-project/) workflow.\n\nFor more in-depth topics of Skaffold, explore [Configuration](https://skaffold.dev/docs/design/config/), [Skaffold Pipeline](https://skaffold.dev/docs/pipeline-stages/), and [Architecture and Design](https://skaffold.dev/docs/design/).\n\nTo learn more about how Skaffold builds, tags, and deploys your app, see the How-to Guides on using [Builders](https://skaffold.dev/docs/builders/), [Taggers](https://skaffold.dev/docs/taggers/), and [Deployers](https://skaffold.dev/docs/deployers/).\n\n[Skaffold Tutorials](https://skaffold.dev/docs/tutorials/) details some of the common use cases of Skaffold.\n\nQuestions? See our [Community section](https://skaffold.dev/docs/resources/#Community) for ways to get in touch.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/quickstart", "title": "Quickstart", "description": "Follow this tutorial if you’re using the Skaffold standalone binary. It walks through running Skaffold on a small Kubernetes app built with Docker inside minikube and deployed with kubectl.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:08:09", "type": "overview", "page_metadata": {"viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "description": "\n    \n    \n\n    Follow this tutorial if you’re using the Skaffold standalone binary. It walks through running Skaffold on a small Kubernetes app …", "og:site_name": "Skaffold", "ogTitle": "Quickstart", "og:type": "website", "robots": "index, follow", "twitter:title": "Quickstart", "ogSiteName": "Skaffold", "og:url": "https://skaffold.dev/docs/quickstart/", "generator": "Hugo 0.99.1", "og:title": "Quickstart", "ogUrl": "https://skaffold.dev/docs/quickstart/", "title": "Quickstart | Skaffold", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "language": "en", "og:description": "Easy and Repeatable Container & Kubernetes Development", "twitter:card": "summary", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "scrapeId": "8351492f-bb5d-4c0e-84aa-38887bf51557", "sourceURL": "https://skaffold.dev/docs/quickstart", "url": "https://skaffold.dev/docs/quickstart/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I set up in skaffold?\n\nAssistant: To set up in skaffold, here's what you do:\nThis tutorial requires Skaffold, minikube, and kubectl.\n\n1. [Install Skaffold](https://skaffold.dev/docs/install/).\n2. [Install kubectl](https://kubernetes.io/docs/tasks/tools/install-kubectl/).\n3. [Install minikube](https://minikube.sigs.k8s.io/docs/start/).\n\nThis tutorial uses minikube because Skaffold knows how to build the app using the Docker daemon hosted inside minikube. This means we don’t need a registry to host the app’s container images..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/quickstart", "title": "Quickstart", "description": "Follow this tutorial if you’re using the Skaffold standalone binary. It walks through running Skaffold on a small Kubernetes app built with Docker inside minikube and deployed with kubectl.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:08:09", "type": "section_detail", "page_metadata": {"viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "description": "\n    \n    \n\n    Follow this tutorial if you’re using the Skaffold standalone binary. It walks through running Skaffold on a small Kubernetes app …", "og:site_name": "Skaffold", "ogTitle": "Quickstart", "og:type": "website", "robots": "index, follow", "twitter:title": "Quickstart", "ogSiteName": "Skaffold", "og:url": "https://skaffold.dev/docs/quickstart/", "generator": "Hugo 0.99.1", "og:title": "Quickstart", "ogUrl": "https://skaffold.dev/docs/quickstart/", "title": "Quickstart | Skaffold", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "language": "en", "og:description": "Easy and Repeatable Container & Kubernetes Development", "twitter:card": "summary", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "scrapeId": "8351492f-bb5d-4c0e-84aa-38887bf51557", "sourceURL": "https://skaffold.dev/docs/quickstart", "url": "https://skaffold.dev/docs/quickstart/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I clone the sample app in skaffold?\n\nAssistant: To clone the sample app in skaffold, here's what you do:\nLet’s get a sample application set up to use Skaffold.\n\n1. Clone the Skaffold repository:\n\n```bash\ngit clone https://github.com/GoogleContainerTools/skaffold\n```\n\n2. Change to the `examples/buildpacks-node-tutorial` directory.\n\n```bash\ncd skaffold/examples/buildpacks-node-tutorial\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/quickstart", "title": "Quickstart", "description": "Follow this tutorial if you’re using the Skaffold standalone binary. It walks through running Skaffold on a small Kubernetes app built with Docker inside minikube and deployed with kubectl.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:08:09", "type": "section_detail", "page_metadata": {"viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "description": "\n    \n    \n\n    Follow this tutorial if you’re using the Skaffold standalone binary. It walks through running Skaffold on a small Kubernetes app …", "og:site_name": "Skaffold", "ogTitle": "Quickstart", "og:type": "website", "robots": "index, follow", "twitter:title": "Quickstart", "ogSiteName": "Skaffold", "og:url": "https://skaffold.dev/docs/quickstart/", "generator": "Hugo 0.99.1", "og:title": "Quickstart", "ogUrl": "https://skaffold.dev/docs/quickstart/", "title": "Quickstart | Skaffold", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "language": "en", "og:description": "Easy and Repeatable Container & Kubernetes Development", "twitter:card": "summary", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "scrapeId": "8351492f-bb5d-4c0e-84aa-38887bf51557", "sourceURL": "https://skaffold.dev/docs/quickstart", "url": "https://skaffold.dev/docs/quickstart/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I initialize skaffold in skaffold?\n\nAssistant: To initialize skaffold in skaffold, here's what you do:\nYour working directory is the application directory, `skaffold/examples/buildpacks-node-tutorial`. This will be our root Skaffold directory.\n\nThis sample application is written in Node, but Skaffold is language-agnostic and works with any containerized application.\n\n### Bootstrap Skaffold configuration\n\n1. Run the following command to generate a `skaffold.yaml` config file:\n\n```bash\nskaffold init\n```\n\n2. When prompted to choose the builder, press enter to accept the default selection.\n3. When asked which builders you would like to create Kubernetes resources for, press enter to accept the default selection.\n4. When asked if you want to write this configuration to skaffold.yaml, type “y” for yes.\n5. Open your new **skaffold.yaml**, generated at `skaffold/examples/buildpacks-node-tutorial/skaffold.yaml`. All of your Skaffold configuration lives in this file. We will go into more detail about how it works in later steps..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/quickstart", "title": "Quickstart", "description": "Follow this tutorial if you’re using the Skaffold standalone binary. It walks through running Skaffold on a small Kubernetes app built with Docker inside minikube and deployed with kubectl.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:08:09", "type": "section_detail", "page_metadata": {"viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "description": "\n    \n    \n\n    Follow this tutorial if you’re using the Skaffold standalone binary. It walks through running Skaffold on a small Kubernetes app …", "og:site_name": "Skaffold", "ogTitle": "Quickstart", "og:type": "website", "robots": "index, follow", "twitter:title": "Quickstart", "ogSiteName": "Skaffold", "og:url": "https://skaffold.dev/docs/quickstart/", "generator": "Hugo 0.99.1", "og:title": "Quickstart", "ogUrl": "https://skaffold.dev/docs/quickstart/", "title": "Quickstart | Skaffold", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "language": "en", "og:description": "Easy and Repeatable Container & Kubernetes Development", "twitter:card": "summary", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "scrapeId": "8351492f-bb5d-4c0e-84aa-38887bf51557", "sourceURL": "https://skaffold.dev/docs/quickstart", "url": "https://skaffold.dev/docs/quickstart/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I use skaffold for continuous development in skaffold?\n\nAssistant: To use skaffold for continuous development in skaffold, here's what you do:\nSkaffold speeds up your development loop by automatically building and deploying the application whenever your code changes.\n\n### Start minikube\n\n1. To see this in action, let’s start up minikube so Skaffold has a cluster to run your application.\n\n```bash\nminikube start --profile custom\nskaffold config set --global local-cluster true\neval $(minikube -p custom docker-env)\n```\n\nThis may take several minutes.\n\n### Use `skaffold dev`\n\n1. Run the following command to begin using Skaffold for continuous development:\n\n```bash\nskaffold dev\n```\n\nNotice how Skaffold automatically builds and deploys your application. You should see the following application output in your terminal:\n\n```terminal\nExample app listening on port 3000!\n```\n\nTo browse to the web page, open a new terminal and run:\n\n```terminal\nminikube tunnel -p custom\n```\n\nNow open your browser at `http://localhost:3000`. This displays the content of `public/index.html` file.\n\nSkaffold is now watching for any file changes, and will rebuild your application automatically. Let’s see this in action.\n\n2. Open `skaffold/examples/buildpacks-node-tutorial/src/index.js` and change line 10 to the following:\n\n```\napp.listen(port, () => console.log(`Example app listening on port ${port}! This is version 2.`))\n```\n\nNotice how Skaffold automatically hot reloads your code changes to your application running in minikube, intelligently syncing only the file you changed. Your application is now automatically deployed with the changes you made, as it prints the following to your terminal:\n\n```terminal\nExample app listening on port 3000! This is version 2.\n```\n\n### Exit dev mode\n\n1. Let’s stop continuous dev mode by pressing the following keys in your terminal:\n\n```terminal\nCtrl+C\n```\n\nSkaffold will clean up all deployed artifacts and end dev mode..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/quickstart", "title": "Quickstart", "description": "Follow this tutorial if you’re using the Skaffold standalone binary. It walks through running Skaffold on a small Kubernetes app built with Docker inside minikube and deployed with kubectl.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:08:09", "type": "section_detail", "page_metadata": {"viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "description": "\n    \n    \n\n    Follow this tutorial if you’re using the Skaffold standalone binary. It walks through running Skaffold on a small Kubernetes app …", "og:site_name": "Skaffold", "ogTitle": "Quickstart", "og:type": "website", "robots": "index, follow", "twitter:title": "Quickstart", "ogSiteName": "Skaffold", "og:url": "https://skaffold.dev/docs/quickstart/", "generator": "Hugo 0.99.1", "og:title": "Quickstart", "ogUrl": "https://skaffold.dev/docs/quickstart/", "title": "Quickstart | Skaffold", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "language": "en", "og:description": "Easy and Repeatable Container & Kubernetes Development", "twitter:card": "summary", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "scrapeId": "8351492f-bb5d-4c0e-84aa-38887bf51557", "sourceURL": "https://skaffold.dev/docs/quickstart", "url": "https://skaffold.dev/docs/quickstart/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I use skaffold for continuous integration in skaffold?\n\nAssistant: To use skaffold for continuous integration in skaffold, here's what you do:\nWhile Skaffold shines for continuous development, it can also be used for continuous integration (CI). Let’s use Skaffold to build and test a container image.\n\n### Build an image\n\nYour CI pipelines can run `skaffold build` to build, tag, and push your container images to a registry.\n\n1. Try this out by running the following command:\n\n```bash\nexport STATE=$(git rev-list -1 HEAD --abbrev-commit)\nskaffold build --file-output build-$STATE.json\n```\n\nSkaffold writes the output of the build to a JSON file, which we’ll pass to our continuous delivery (CD) process in the next step.\n\n### Test an image\n\nSkaffold can also run tests against your images before deploying them. Let’s try this out by creating a simple custom test.\n\n1. Open your `skaffold.yaml` and add the following test configuration to the bottom, without any additional indentation:\n\n```\ntest:\n- image: skaffold-buildpacks-node\n  custom:\n    - command: echo This is a custom test commmand!\n```\n\nNow you have a simple custom test set up that will run a bash command and await a successful response.\n\n2. Run the following command to execute this test with Skaffold:\n\n```bash\nskaffold test --build-artifacts build-$STATE.json\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/quickstart", "title": "Quickstart", "description": "Follow this tutorial if you’re using the Skaffold standalone binary. It walks through running Skaffold on a small Kubernetes app built with Docker inside minikube and deployed with kubectl.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:08:09", "type": "section_detail", "page_metadata": {"viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "description": "\n    \n    \n\n    Follow this tutorial if you’re using the Skaffold standalone binary. It walks through running Skaffold on a small Kubernetes app …", "og:site_name": "Skaffold", "ogTitle": "Quickstart", "og:type": "website", "robots": "index, follow", "twitter:title": "Quickstart", "ogSiteName": "Skaffold", "og:url": "https://skaffold.dev/docs/quickstart/", "generator": "Hugo 0.99.1", "og:title": "Quickstart", "ogUrl": "https://skaffold.dev/docs/quickstart/", "title": "Quickstart | Skaffold", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "language": "en", "og:description": "Easy and Repeatable Container & Kubernetes Development", "twitter:card": "summary", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "scrapeId": "8351492f-bb5d-4c0e-84aa-38887bf51557", "sourceURL": "https://skaffold.dev/docs/quickstart", "url": "https://skaffold.dev/docs/quickstart/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I use skaffold for continuous delivery in skaffold?\n\nAssistant: To use skaffold for continuous delivery in skaffold, here's what you do:\nLet’s learn how Skaffold can handle continuous delivery (CD).\n\n### Deploy in a single step\n\n1. For simple deployments, run `skaffold deploy`:\n\n```bash\nskaffold deploy -a build-$STATE.json\n```\n\nSkaffold hydrates your Kubernetes manifest with the image you built and tagged in the previous step, and deploys the application.\n\n### Render and apply in separate steps\n\nFor GitOps delivery workflows, you may want to decompose your deployments into separate render and apply phases. That way, you can commit your hydrated Kubernetes manifests to source control before they are applied.\n\n1. Run the following command to render a hydrated manifest:\n\n```bash\nskaffold render -a build-$STATE.json --output render.yaml --digest-source local\n```\n\nOpen `skaffold/examples/buildpacks-node-tutorial/render.yaml` to check out the hydrated manifest.\n\n2. Next, run the following command to apply your hydrated manifest:\n\n```bash\nskaffold apply render.yaml\n```\n\nYou have now successfully deployed your application in two ways..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/quickstart", "title": "Quickstart", "description": "Follow this tutorial if you’re using the Skaffold standalone binary. It walks through running Skaffold on a small Kubernetes app built with Docker inside minikube and deployed with kubectl.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:08:09", "type": "section_detail", "page_metadata": {"viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "description": "\n    \n    \n\n    Follow this tutorial if you’re using the Skaffold standalone binary. It walks through running Skaffold on a small Kubernetes app …", "og:site_name": "Skaffold", "ogTitle": "Quickstart", "og:type": "website", "robots": "index, follow", "twitter:title": "Quickstart", "ogSiteName": "Skaffold", "og:url": "https://skaffold.dev/docs/quickstart/", "generator": "Hugo 0.99.1", "og:title": "Quickstart", "ogUrl": "https://skaffold.dev/docs/quickstart/", "title": "Quickstart | Skaffold", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "language": "en", "og:description": "Easy and Repeatable Container & Kubernetes Development", "twitter:card": "summary", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "scrapeId": "8351492f-bb5d-4c0e-84aa-38887bf51557", "sourceURL": "https://skaffold.dev/docs/quickstart", "url": "https://skaffold.dev/docs/quickstart/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I what’s next in skaffold?\n\nAssistant: To what’s next in skaffold, here's what you do:\nFor getting started with your project, see the [Getting Started With Your Project](https://skaffold.dev/docs/workflows/getting-started-with-your-project/) workflow.\n\nFor more in-depth topics of Skaffold, explore [Configuration](https://skaffold.dev/docs/design/config/), [Skaffold Pipeline](https://skaffold.dev/docs/pipeline-stages/), and [Architecture and Design](https://skaffold.dev/docs/design/).\n\nTo learn more about how Skaffold builds, tags, and deploys your app, see the How-to Guides on using [Builders](https://skaffold.dev/docs/builders/), [Taggers](https://skaffold.dev/docs/taggers/), and [Deployers](https://skaffold.dev/docs/deployers/).\n\n[Skaffold Tutorials](https://skaffold.dev/docs/tutorials/) details some of the common use cases of Skaffold.\n\nQuestions? See our [Community section](https://skaffold.dev/docs/resources/#Community) for ways to get in touch..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/quickstart", "title": "Quickstart", "description": "Follow this tutorial if you’re using the Skaffold standalone binary. It walks through running Skaffold on a small Kubernetes app built with Docker inside minikube and deployed with kubectl.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:08:09", "type": "section_detail", "page_metadata": {"viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "description": "\n    \n    \n\n    Follow this tutorial if you’re using the Skaffold standalone binary. It walks through running Skaffold on a small Kubernetes app …", "og:site_name": "Skaffold", "ogTitle": "Quickstart", "og:type": "website", "robots": "index, follow", "twitter:title": "Quickstart", "ogSiteName": "Skaffold", "og:url": "https://skaffold.dev/docs/quickstart/", "generator": "Hugo 0.99.1", "og:title": "Quickstart", "ogUrl": "https://skaffold.dev/docs/quickstart/", "title": "Quickstart | Skaffold", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "language": "en", "og:description": "Easy and Repeatable Container & Kubernetes Development", "twitter:card": "summary", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "scrapeId": "8351492f-bb5d-4c0e-84aa-38887bf51557", "sourceURL": "https://skaffold.dev/docs/quickstart", "url": "https://skaffold.dev/docs/quickstart/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you give me some code examples for Quickstart in skaffold?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Clone the Skaffold repository**:\n\n```yaml\ngit clone https://github.com/GoogleContainerTools/skaffold\n```\n\nThis snippet shows you how to clone the skaffold repository, which is an important aspect of quickstart.\n\n**Change to the examples directory**:\n\n```yaml\ncd skaffold/examples/buildpacks-node-tutorial\n```\n\nThis snippet shows you how to change to the examples directory, which is an important aspect of quickstart.\n\n**Generate a skaffold.yaml config file**:\n\n```yaml\nskaffold init\n```\n\nThis snippet shows you how to generate a skaffold.yaml config file, which is an important aspect of quickstart.\n\n**Start minikube**:\n\n```yaml\nminikube start --profile custom\nskaffold config set --global local-cluster true\neval $(minikube -p custom docker-env)\n```\n\nThis snippet shows you how to start minikube, which is an important aspect of quickstart.\n\n", "metadata": {"source_url": "https://skaffold.dev/docs/quickstart", "title": "Quickstart", "description": "Follow this tutorial if you’re using the Skaffold standalone binary. It walks through running Skaffold on a small Kubernetes app built with Docker inside minikube and deployed with kubectl.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:08:09", "type": "code_examples", "page_metadata": {"viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "description": "\n    \n    \n\n    Follow this tutorial if you’re using the Skaffold standalone binary. It walks through running Skaffold on a small Kubernetes app …", "og:site_name": "Skaffold", "ogTitle": "Quickstart", "og:type": "website", "robots": "index, follow", "twitter:title": "Quickstart", "ogSiteName": "Skaffold", "og:url": "https://skaffold.dev/docs/quickstart/", "generator": "Hugo 0.99.1", "og:title": "Quickstart", "ogUrl": "https://skaffold.dev/docs/quickstart/", "title": "Quickstart | Skaffold", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "language": "en", "og:description": "Easy and Repeatable Container & Kubernetes Development", "twitter:card": "summary", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "scrapeId": "8351492f-bb5d-4c0e-84aa-38887bf51557", "sourceURL": "https://skaffold.dev/docs/quickstart", "url": "https://skaffold.dev/docs/quickstart/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: What are some tips for using Quickstart in skaffold effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nIf you are looking to generate a new project templated to use Skaffold best-practices and features, see the Google Cloud Solutions Template.\n\nAside from Docker and kubectl, Skaffold also supports a variety of other tools and workflows; see Tutorials for more information.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://skaffold.dev/docs/quickstart", "title": "Quickstart", "description": "Follow this tutorial if you’re using the Skaffold standalone binary. It walks through running Skaffold on a small Kubernetes app built with Docker inside minikube and deployed with kubectl.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:08:09", "type": "best_practices", "page_metadata": {"viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "description": "\n    \n    \n\n    Follow this tutorial if you’re using the Skaffold standalone binary. It walks through running Skaffold on a small Kubernetes app …", "og:site_name": "Skaffold", "ogTitle": "Quickstart", "og:type": "website", "robots": "index, follow", "twitter:title": "Quickstart", "ogSiteName": "Skaffold", "og:url": "https://skaffold.dev/docs/quickstart/", "generator": "Hugo 0.99.1", "og:title": "Quickstart", "ogUrl": "https://skaffold.dev/docs/quickstart/", "title": "Quickstart | Skaffold", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "language": "en", "og:description": "Easy and Repeatable Container & Kubernetes Development", "twitter:card": "summary", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "scrapeId": "8351492f-bb5d-4c0e-84aa-38887bf51557", "sourceURL": "https://skaffold.dev/docs/quickstart", "url": "https://skaffold.dev/docs/quickstart/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what Rendering with raw YAML is in skaffold?\n\nAssistant: Sure, I'd be happy to explain Rendering with raw YAML in skaffold.\n\n# Rendering with raw YAML\n\nInstructions on using the rawYaml renderer in Skaffold for projects without a render engine.Here's a quick rundown of what this is about:\n\n## Rendering with raw YAML\n\nIn the case that your project does not currently use a render engine (helm, kustomize, kpt, etc), the `rawYaml` renderer should be used. This instructs skaffold to only do its own yaml field replacement ( `image:` and `labels:` modifications) and not to use any additional render engine.\n\n## Configuration\n\nTo use `rawYaml`, add render type `rawYaml` to the `manifests` section of `skaffold.yaml`. The `rawYaml` configuration accepts a list of paths to your manifests with glob syntax supported.\n\n## Example\n\nThe following `manifests` section instructs Skaffold to render artifacts using `rawYaml`. Each entry should point to YAML manifest file and supports glob syntax:\n\n```yaml\nmanifests:\n   rawYaml:\n      - k8s-*\n```\n\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/renderers/rawyaml", "title": "Rendering with raw YAML", "description": "Instructions on using the rawYaml renderer in Skaffold for projects without a render engine.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:09:24", "type": "overview", "page_metadata": {"title": "Raw YAML | Skaffold", "og:type": "article", "twitter:description": "Rendering with raw YAML In the case that your project does not currently use a render engine (helm, kustomize, kpt, etc), the rawYaml renderer should be used. This instructs skaffold to only do it’s own yaml field replacement (image: and labels: modifications) and not to use any additional render engine.\nConfiguration To use rawYaml, add render type rawYaml to the manifests section of skaffold.yaml.\nThe rawYaml configuration accepts a list of paths to your manifests with glob syntax supported.", "language": "en", "twitter:title": "Raw YAML", "article:modified_time": "2025-01-23T10:14:58-05:00", "generator": "Hugo 0.99.1", "ogUrl": "https://skaffold.dev/docs/renderers/rawyaml/", "description": "Rendering with raw YAML\nIn the case that your project does not currently use a render engine\n(helm, kustomize, kpt, etc), the rawYaml renderer should …", "og:url": "https://skaffold.dev/docs/renderers/rawyaml/", "twitter:card": "summary", "ogTitle": "Raw YAML", "og:site_name": "Skaffold", "ogDescription": "Rendering with raw YAML In the case that your project does not currently use a render engine (helm, kustomize, kpt, etc), the rawYaml renderer should be used. This instructs skaffold to only do it’s own yaml field replacement (image: and labels: modifications) and not to use any additional render engine.\nConfiguration To use rawYaml, add render type rawYaml to the manifests section of skaffold.yaml.\nThe rawYaml configuration accepts a list of paths to your manifests with glob syntax supported.", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:title": "Raw YAML", "robots": "index, follow", "og:description": "Rendering with raw YAML In the case that your project does not currently use a render engine (helm, kustomize, kpt, etc), the rawYaml renderer should be used. This instructs skaffold to only do it’s own yaml field replacement (image: and labels: modifications) and not to use any additional render engine.\nConfiguration To use rawYaml, add render type rawYaml to the manifests section of skaffold.yaml.\nThe rawYaml configuration accepts a list of paths to your manifests with glob syntax supported.", "ogSiteName": "Skaffold", "article:section": "docs", "scrapeId": "76db3db8-ddca-4823-8140-4ce14d34a120", "sourceURL": "https://skaffold.dev/docs/renderers/rawyaml", "url": "https://skaffold.dev/docs/renderers/rawyaml/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I rendering with raw yaml in skaffold?\n\nAssistant: To rendering with raw yaml in skaffold, here's what you do:\nIn the case that your project does not currently use a render engine (helm, kustomize, kpt, etc), the `rawYaml` renderer should be used. This instructs skaffold to only do its own yaml field replacement ( `image:` and `labels:` modifications) and not to use any additional render engine..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/renderers/rawyaml", "title": "Rendering with raw YAML", "description": "Instructions on using the rawYaml renderer in Skaffold for projects without a render engine.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:09:24", "type": "section_detail", "page_metadata": {"title": "Raw YAML | Skaffold", "og:type": "article", "twitter:description": "Rendering with raw YAML In the case that your project does not currently use a render engine (helm, kustomize, kpt, etc), the rawYaml renderer should be used. This instructs skaffold to only do it’s own yaml field replacement (image: and labels: modifications) and not to use any additional render engine.\nConfiguration To use rawYaml, add render type rawYaml to the manifests section of skaffold.yaml.\nThe rawYaml configuration accepts a list of paths to your manifests with glob syntax supported.", "language": "en", "twitter:title": "Raw YAML", "article:modified_time": "2025-01-23T10:14:58-05:00", "generator": "Hugo 0.99.1", "ogUrl": "https://skaffold.dev/docs/renderers/rawyaml/", "description": "Rendering with raw YAML\nIn the case that your project does not currently use a render engine\n(helm, kustomize, kpt, etc), the rawYaml renderer should …", "og:url": "https://skaffold.dev/docs/renderers/rawyaml/", "twitter:card": "summary", "ogTitle": "Raw YAML", "og:site_name": "Skaffold", "ogDescription": "Rendering with raw YAML In the case that your project does not currently use a render engine (helm, kustomize, kpt, etc), the rawYaml renderer should be used. This instructs skaffold to only do it’s own yaml field replacement (image: and labels: modifications) and not to use any additional render engine.\nConfiguration To use rawYaml, add render type rawYaml to the manifests section of skaffold.yaml.\nThe rawYaml configuration accepts a list of paths to your manifests with glob syntax supported.", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:title": "Raw YAML", "robots": "index, follow", "og:description": "Rendering with raw YAML In the case that your project does not currently use a render engine (helm, kustomize, kpt, etc), the rawYaml renderer should be used. This instructs skaffold to only do it’s own yaml field replacement (image: and labels: modifications) and not to use any additional render engine.\nConfiguration To use rawYaml, add render type rawYaml to the manifests section of skaffold.yaml.\nThe rawYaml configuration accepts a list of paths to your manifests with glob syntax supported.", "ogSiteName": "Skaffold", "article:section": "docs", "scrapeId": "76db3db8-ddca-4823-8140-4ce14d34a120", "sourceURL": "https://skaffold.dev/docs/renderers/rawyaml", "url": "https://skaffold.dev/docs/renderers/rawyaml/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I configuration in skaffold?\n\nAssistant: To configuration in skaffold, here's what you do:\nTo use `rawYaml`, add render type `rawYaml` to the `manifests` section of `skaffold.yaml`. The `rawYaml` configuration accepts a list of paths to your manifests with glob syntax supported..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/renderers/rawyaml", "title": "Rendering with raw YAML", "description": "Instructions on using the rawYaml renderer in Skaffold for projects without a render engine.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:09:24", "type": "section_detail", "page_metadata": {"title": "Raw YAML | Skaffold", "og:type": "article", "twitter:description": "Rendering with raw YAML In the case that your project does not currently use a render engine (helm, kustomize, kpt, etc), the rawYaml renderer should be used. This instructs skaffold to only do it’s own yaml field replacement (image: and labels: modifications) and not to use any additional render engine.\nConfiguration To use rawYaml, add render type rawYaml to the manifests section of skaffold.yaml.\nThe rawYaml configuration accepts a list of paths to your manifests with glob syntax supported.", "language": "en", "twitter:title": "Raw YAML", "article:modified_time": "2025-01-23T10:14:58-05:00", "generator": "Hugo 0.99.1", "ogUrl": "https://skaffold.dev/docs/renderers/rawyaml/", "description": "Rendering with raw YAML\nIn the case that your project does not currently use a render engine\n(helm, kustomize, kpt, etc), the rawYaml renderer should …", "og:url": "https://skaffold.dev/docs/renderers/rawyaml/", "twitter:card": "summary", "ogTitle": "Raw YAML", "og:site_name": "Skaffold", "ogDescription": "Rendering with raw YAML In the case that your project does not currently use a render engine (helm, kustomize, kpt, etc), the rawYaml renderer should be used. This instructs skaffold to only do it’s own yaml field replacement (image: and labels: modifications) and not to use any additional render engine.\nConfiguration To use rawYaml, add render type rawYaml to the manifests section of skaffold.yaml.\nThe rawYaml configuration accepts a list of paths to your manifests with glob syntax supported.", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:title": "Raw YAML", "robots": "index, follow", "og:description": "Rendering with raw YAML In the case that your project does not currently use a render engine (helm, kustomize, kpt, etc), the rawYaml renderer should be used. This instructs skaffold to only do it’s own yaml field replacement (image: and labels: modifications) and not to use any additional render engine.\nConfiguration To use rawYaml, add render type rawYaml to the manifests section of skaffold.yaml.\nThe rawYaml configuration accepts a list of paths to your manifests with glob syntax supported.", "ogSiteName": "Skaffold", "article:section": "docs", "scrapeId": "76db3db8-ddca-4823-8140-4ce14d34a120", "sourceURL": "https://skaffold.dev/docs/renderers/rawyaml", "url": "https://skaffold.dev/docs/renderers/rawyaml/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I example in skaffold?\n\nAssistant: To example in skaffold, here's what you do:\nThe following `manifests` section instructs Skaffold to render artifacts using `rawYaml`. Each entry should point to YAML manifest file and supports glob syntax:\n\n```yaml\nmanifests:\n   rawYaml:\n      - k8s-*\n```\n.\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/renderers/rawyaml", "title": "Rendering with raw YAML", "description": "Instructions on using the rawYaml renderer in Skaffold for projects without a render engine.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:09:24", "type": "section_detail", "page_metadata": {"title": "Raw YAML | Skaffold", "og:type": "article", "twitter:description": "Rendering with raw YAML In the case that your project does not currently use a render engine (helm, kustomize, kpt, etc), the rawYaml renderer should be used. This instructs skaffold to only do it’s own yaml field replacement (image: and labels: modifications) and not to use any additional render engine.\nConfiguration To use rawYaml, add render type rawYaml to the manifests section of skaffold.yaml.\nThe rawYaml configuration accepts a list of paths to your manifests with glob syntax supported.", "language": "en", "twitter:title": "Raw YAML", "article:modified_time": "2025-01-23T10:14:58-05:00", "generator": "Hugo 0.99.1", "ogUrl": "https://skaffold.dev/docs/renderers/rawyaml/", "description": "Rendering with raw YAML\nIn the case that your project does not currently use a render engine\n(helm, kustomize, kpt, etc), the rawYaml renderer should …", "og:url": "https://skaffold.dev/docs/renderers/rawyaml/", "twitter:card": "summary", "ogTitle": "Raw YAML", "og:site_name": "Skaffold", "ogDescription": "Rendering with raw YAML In the case that your project does not currently use a render engine (helm, kustomize, kpt, etc), the rawYaml renderer should be used. This instructs skaffold to only do it’s own yaml field replacement (image: and labels: modifications) and not to use any additional render engine.\nConfiguration To use rawYaml, add render type rawYaml to the manifests section of skaffold.yaml.\nThe rawYaml configuration accepts a list of paths to your manifests with glob syntax supported.", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:title": "Raw YAML", "robots": "index, follow", "og:description": "Rendering with raw YAML In the case that your project does not currently use a render engine (helm, kustomize, kpt, etc), the rawYaml renderer should be used. This instructs skaffold to only do it’s own yaml field replacement (image: and labels: modifications) and not to use any additional render engine.\nConfiguration To use rawYaml, add render type rawYaml to the manifests section of skaffold.yaml.\nThe rawYaml configuration accepts a list of paths to your manifests with glob syntax supported.", "ogSiteName": "Skaffold", "article:section": "docs", "scrapeId": "76db3db8-ddca-4823-8140-4ce14d34a120", "sourceURL": "https://skaffold.dev/docs/renderers/rawyaml", "url": "https://skaffold.dev/docs/renderers/rawyaml/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you give me some code examples for Rendering with raw YAML in skaffold?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Skaffold YAML Configuration Example**:\n\n```yaml\nmanifests:\n   rawYaml:\n      - k8s-*\n```\n\nThis snippet shows you how to skaffold yaml configuration example, which is an important aspect of rendering with raw yaml.\n\n", "metadata": {"source_url": "https://skaffold.dev/docs/renderers/rawyaml", "title": "Rendering with raw YAML", "description": "Instructions on using the rawYaml renderer in Skaffold for projects without a render engine.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:09:24", "type": "code_examples", "page_metadata": {"title": "Raw YAML | Skaffold", "og:type": "article", "twitter:description": "Rendering with raw YAML In the case that your project does not currently use a render engine (helm, kustomize, kpt, etc), the rawYaml renderer should be used. This instructs skaffold to only do it’s own yaml field replacement (image: and labels: modifications) and not to use any additional render engine.\nConfiguration To use rawYaml, add render type rawYaml to the manifests section of skaffold.yaml.\nThe rawYaml configuration accepts a list of paths to your manifests with glob syntax supported.", "language": "en", "twitter:title": "Raw YAML", "article:modified_time": "2025-01-23T10:14:58-05:00", "generator": "Hugo 0.99.1", "ogUrl": "https://skaffold.dev/docs/renderers/rawyaml/", "description": "Rendering with raw YAML\nIn the case that your project does not currently use a render engine\n(helm, kustomize, kpt, etc), the rawYaml renderer should …", "og:url": "https://skaffold.dev/docs/renderers/rawyaml/", "twitter:card": "summary", "ogTitle": "Raw YAML", "og:site_name": "Skaffold", "ogDescription": "Rendering with raw YAML In the case that your project does not currently use a render engine (helm, kustomize, kpt, etc), the rawYaml renderer should be used. This instructs skaffold to only do it’s own yaml field replacement (image: and labels: modifications) and not to use any additional render engine.\nConfiguration To use rawYaml, add render type rawYaml to the manifests section of skaffold.yaml.\nThe rawYaml configuration accepts a list of paths to your manifests with glob syntax supported.", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:title": "Raw YAML", "robots": "index, follow", "og:description": "Rendering with raw YAML In the case that your project does not currently use a render engine (helm, kustomize, kpt, etc), the rawYaml renderer should be used. This instructs skaffold to only do it’s own yaml field replacement (image: and labels: modifications) and not to use any additional render engine.\nConfiguration To use rawYaml, add render type rawYaml to the manifests section of skaffold.yaml.\nThe rawYaml configuration accepts a list of paths to your manifests with glob syntax supported.", "ogSiteName": "Skaffold", "article:section": "docs", "scrapeId": "76db3db8-ddca-4823-8140-4ce14d34a120", "sourceURL": "https://skaffold.dev/docs/renderers/rawyaml", "url": "https://skaffold.dev/docs/renderers/rawyaml/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: What are some tips for using Rendering with raw YAML in skaffold effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nUse the `rawYaml` renderer when no other render engine is in use to ensure proper YAML field replacements.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://skaffold.dev/docs/renderers/rawyaml", "title": "Rendering with raw YAML", "description": "Instructions on using the rawYaml renderer in Skaffold for projects without a render engine.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:09:24", "type": "best_practices", "page_metadata": {"title": "Raw YAML | Skaffold", "og:type": "article", "twitter:description": "Rendering with raw YAML In the case that your project does not currently use a render engine (helm, kustomize, kpt, etc), the rawYaml renderer should be used. This instructs skaffold to only do it’s own yaml field replacement (image: and labels: modifications) and not to use any additional render engine.\nConfiguration To use rawYaml, add render type rawYaml to the manifests section of skaffold.yaml.\nThe rawYaml configuration accepts a list of paths to your manifests with glob syntax supported.", "language": "en", "twitter:title": "Raw YAML", "article:modified_time": "2025-01-23T10:14:58-05:00", "generator": "Hugo 0.99.1", "ogUrl": "https://skaffold.dev/docs/renderers/rawyaml/", "description": "Rendering with raw YAML\nIn the case that your project does not currently use a render engine\n(helm, kustomize, kpt, etc), the rawYaml renderer should …", "og:url": "https://skaffold.dev/docs/renderers/rawyaml/", "twitter:card": "summary", "ogTitle": "Raw YAML", "og:site_name": "Skaffold", "ogDescription": "Rendering with raw YAML In the case that your project does not currently use a render engine (helm, kustomize, kpt, etc), the rawYaml renderer should be used. This instructs skaffold to only do it’s own yaml field replacement (image: and labels: modifications) and not to use any additional render engine.\nConfiguration To use rawYaml, add render type rawYaml to the manifests section of skaffold.yaml.\nThe rawYaml configuration accepts a list of paths to your manifests with glob syntax supported.", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:title": "Raw YAML", "robots": "index, follow", "og:description": "Rendering with raw YAML In the case that your project does not currently use a render engine (helm, kustomize, kpt, etc), the rawYaml renderer should be used. This instructs skaffold to only do it’s own yaml field replacement (image: and labels: modifications) and not to use any additional render engine.\nConfiguration To use rawYaml, add render type rawYaml to the manifests section of skaffold.yaml.\nThe rawYaml configuration accepts a list of paths to your manifests with glob syntax supported.", "ogSiteName": "Skaffold", "article:section": "docs", "scrapeId": "76db3db8-ddca-4823-8140-4ce14d34a120", "sourceURL": "https://skaffold.dev/docs/renderers/rawyaml", "url": "https://skaffold.dev/docs/renderers/rawyaml/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what skaffold.yaml is in skaffold?\n\nAssistant: Sure, I'd be happy to explain skaffold.yaml in skaffold.\n\n# skaffold.yaml\n\nDocumentation for the skaffold.yaml file used in Skaffold configurations.Here's a quick rundown of what this is about:\n\n## YAML anchors\n\nAnchors can be defined by having top-level keys starting with a dot, e.g. `.common_stuff: &alias_name`. You can then reuse the value using `*alias_name`.\n\n## Organizing multiple configurations\n\nMultiple configurations can define dependencies on each other to construct an arbitrarily nested tree of project component dependencies. Management of multiple configurations can be simplified by grouping them together in the same file (separated by --- in YAML).\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml", "title": "skaffold.yaml", "description": "Documentation for the skaffold.yaml file used in Skaffold configurations.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:11:02", "type": "overview", "page_metadata": {"robots": "index, follow", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "generator": "Hugo 0.99.1", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "twitter:card": "summary", "og:title": "skaffold.yaml", "ogTitle": "skaffold.yaml", "og:site_name": "Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:description": "Easy and Repeatable Container & Kubernetes Development", "twitter:title": "skaffold.yaml", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "title": "skaffold.yaml | Skaffold", "language": "en", "og:type": "website", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "og:url": "https://skaffold.dev/docs/references/yaml/", "ogSiteName": "Skaffold", "scrapeId": "2fa924f9-28d4-41bb-9c1d-a2ecb7b0ff17", "sourceURL": "https://skaffold.dev/docs/references/yaml", "url": "https://skaffold.dev/docs/references/yaml/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I yaml anchors in skaffold?\n\nAssistant: To yaml anchors in skaffold, here's what you do:\nAnchors can be defined by having top-level keys starting with a dot, e.g. `.common_stuff: &alias_name`. You can then reuse the value using `*alias_name`..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml", "title": "skaffold.yaml", "description": "Documentation for the skaffold.yaml file used in Skaffold configurations.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:11:02", "type": "section_detail", "page_metadata": {"robots": "index, follow", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "generator": "Hugo 0.99.1", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "twitter:card": "summary", "og:title": "skaffold.yaml", "ogTitle": "skaffold.yaml", "og:site_name": "Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:description": "Easy and Repeatable Container & Kubernetes Development", "twitter:title": "skaffold.yaml", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "title": "skaffold.yaml | Skaffold", "language": "en", "og:type": "website", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "og:url": "https://skaffold.dev/docs/references/yaml/", "ogSiteName": "Skaffold", "scrapeId": "2fa924f9-28d4-41bb-9c1d-a2ecb7b0ff17", "sourceURL": "https://skaffold.dev/docs/references/yaml", "url": "https://skaffold.dev/docs/references/yaml/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I organizing multiple configurations in skaffold?\n\nAssistant: To organizing multiple configurations in skaffold, here's what you do:\nMultiple configurations can define dependencies on each other to construct an arbitrarily nested tree of project component dependencies. Management of multiple configurations can be simplified by grouping them together in the same file (separated by --- in YAML)..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml", "title": "skaffold.yaml", "description": "Documentation for the skaffold.yaml file used in Skaffold configurations.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:11:02", "type": "section_detail", "page_metadata": {"robots": "index, follow", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "generator": "Hugo 0.99.1", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "twitter:card": "summary", "og:title": "skaffold.yaml", "ogTitle": "skaffold.yaml", "og:site_name": "Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:description": "Easy and Repeatable Container & Kubernetes Development", "twitter:title": "skaffold.yaml", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "title": "skaffold.yaml | Skaffold", "language": "en", "og:type": "website", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "og:url": "https://skaffold.dev/docs/references/yaml/", "ogSiteName": "Skaffold", "scrapeId": "2fa924f9-28d4-41bb-9c1d-a2ecb7b0ff17", "sourceURL": "https://skaffold.dev/docs/references/yaml", "url": "https://skaffold.dev/docs/references/yaml/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: What are some tips for using skaffold.yaml in skaffold effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nThe Cloud Code IDE extensions provide authoring assistance for skaffold.yaml files in the form of schema based validation, diagnostics, quick documentation, code completions, and snippets.\n\nTo use this schema, you need Skaffold version 2.14.0 or later.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml", "title": "skaffold.yaml", "description": "Documentation for the skaffold.yaml file used in Skaffold configurations.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:11:02", "type": "best_practices", "page_metadata": {"robots": "index, follow", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "generator": "Hugo 0.99.1", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "twitter:card": "summary", "og:title": "skaffold.yaml", "ogTitle": "skaffold.yaml", "og:site_name": "Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:description": "Easy and Repeatable Container & Kubernetes Development", "twitter:title": "skaffold.yaml", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "title": "skaffold.yaml | Skaffold", "language": "en", "og:type": "website", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "og:url": "https://skaffold.dev/docs/references/yaml/", "ogSiteName": "Skaffold", "scrapeId": "2fa924f9-28d4-41bb-9c1d-a2ecb7b0ff17", "sourceURL": "https://skaffold.dev/docs/references/yaml", "url": "https://skaffold.dev/docs/references/yaml/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what Skaffold API is in skaffold?\n\nAssistant: Sure, I'd be happy to explain Skaffold API in skaffold.\n\n# Skaffold API\n\nSkaffold exposes an API for retrieving information about the state of the process and to provide fine-grained control over the execution.Here's a quick rundown of what this is about:\n\n## Overview\n\nSkaffold exposes an API for retrieving information about the state of the process and to provide fine-grained control over the execution. For a detailed description of the Skaffold API, refer to the official documentation.\n\n## API Access\n\nThe same API is exposed two ways, through gRPC and HTTP, for which the generated reference can be found below:\n\n- gRPC API: [gRPC API](https://skaffold.dev/docs/references/api/grpc/)\n- HTTP API: [HTTP API](https://skaffold.dev/docs/references/api/swagger/)\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/references/api", "title": "Skaffold API", "description": "Skaffold exposes an API for retrieving information about the state of the process and to provide fine-grained control over the execution.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:13:36", "type": "overview", "page_metadata": {"ogDescription": "Easy and Repeatable Container & Kubernetes Development", "language": "en", "ogSiteName": "Skaffold", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "twitter:card": "summary", "ogTitle": "API", "title": "API | Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:type": "website", "robots": "index, follow", "og:url": "https://skaffold.dev/docs/references/api/", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "twitter:title": "API", "ogUrl": "https://skaffold.dev/docs/references/api/", "og:title": "API", "og:description": "Easy and Repeatable Container & Kubernetes Development", "og:site_name": "Skaffold", "generator": "Hugo 0.99.1", "description": "Skaffold exposes an API for retrieving information about the state of the process and to provide fine-grained control over the execution.\nFor a …", "scrapeId": "a9ffb259-ac08-42d1-b25e-c10beffd0a84", "sourceURL": "https://skaffold.dev/docs/references/api", "url": "https://skaffold.dev/docs/references/api/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I overview in skaffold?\n\nAssistant: To overview in skaffold, here's what you do:\nSkaffold exposes an API for retrieving information about the state of the process and to provide fine-grained control over the execution. For a detailed description of the Skaffold API, refer to the official documentation..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/api", "title": "Skaffold API", "description": "Skaffold exposes an API for retrieving information about the state of the process and to provide fine-grained control over the execution.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:13:36", "type": "section_detail", "page_metadata": {"ogDescription": "Easy and Repeatable Container & Kubernetes Development", "language": "en", "ogSiteName": "Skaffold", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "twitter:card": "summary", "ogTitle": "API", "title": "API | Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:type": "website", "robots": "index, follow", "og:url": "https://skaffold.dev/docs/references/api/", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "twitter:title": "API", "ogUrl": "https://skaffold.dev/docs/references/api/", "og:title": "API", "og:description": "Easy and Repeatable Container & Kubernetes Development", "og:site_name": "Skaffold", "generator": "Hugo 0.99.1", "description": "Skaffold exposes an API for retrieving information about the state of the process and to provide fine-grained control over the execution.\nFor a …", "scrapeId": "a9ffb259-ac08-42d1-b25e-c10beffd0a84", "sourceURL": "https://skaffold.dev/docs/references/api", "url": "https://skaffold.dev/docs/references/api/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I api access in skaffold?\n\nAssistant: To api access in skaffold, here's what you do:\nThe same API is exposed two ways, through gRPC and HTTP, for which the generated reference can be found below:\n\n- gRPC API: [gRPC API](https://skaffold.dev/docs/references/api/grpc/)\n- HTTP API: [HTTP API](https://skaffold.dev/docs/references/api/swagger/).\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/api", "title": "Skaffold API", "description": "Skaffold exposes an API for retrieving information about the state of the process and to provide fine-grained control over the execution.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:13:36", "type": "section_detail", "page_metadata": {"ogDescription": "Easy and Repeatable Container & Kubernetes Development", "language": "en", "ogSiteName": "Skaffold", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "twitter:card": "summary", "ogTitle": "API", "title": "API | Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:type": "website", "robots": "index, follow", "og:url": "https://skaffold.dev/docs/references/api/", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "twitter:title": "API", "ogUrl": "https://skaffold.dev/docs/references/api/", "og:title": "API", "og:description": "Easy and Repeatable Container & Kubernetes Development", "og:site_name": "Skaffold", "generator": "Hugo 0.99.1", "description": "Skaffold exposes an API for retrieving information about the state of the process and to provide fine-grained control over the execution.\nFor a …", "scrapeId": "a9ffb259-ac08-42d1-b25e-c10beffd0a84", "sourceURL": "https://skaffold.dev/docs/references/api", "url": "https://skaffold.dev/docs/references/api/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: What are some tips for using Skaffold API in skaffold effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nRefer to the official documentation for detailed API descriptions.\n\nUse the gRPC API for more efficient communication if applicable.\n\nCheck the HTTP API for easier integration with web applications.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://skaffold.dev/docs/references/api", "title": "Skaffold API", "description": "Skaffold exposes an API for retrieving information about the state of the process and to provide fine-grained control over the execution.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:13:36", "type": "best_practices", "page_metadata": {"ogDescription": "Easy and Repeatable Container & Kubernetes Development", "language": "en", "ogSiteName": "Skaffold", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "twitter:card": "summary", "ogTitle": "API", "title": "API | Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:type": "website", "robots": "index, follow", "og:url": "https://skaffold.dev/docs/references/api/", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "twitter:title": "API", "ogUrl": "https://skaffold.dev/docs/references/api/", "og:title": "API", "og:description": "Easy and Repeatable Container & Kubernetes Development", "og:site_name": "Skaffold", "generator": "Hugo 0.99.1", "description": "Skaffold exposes an API for retrieving information about the state of the process and to provide fine-grained control over the execution.\nFor a …", "scrapeId": "a9ffb259-ac08-42d1-b25e-c10beffd0a84", "sourceURL": "https://skaffold.dev/docs/references/api", "url": "https://skaffold.dev/docs/references/api/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what API V2 is in skaffold?\n\nAssistant: Sure, I'd be happy to explain API V2 in skaffold.\n\n# API V2\n\nSkaffold exposes an API for retrieving information about the state of the process and to provide fine-grained control over the execution.Here's a quick rundown of what this is about:\n\n## Overview\n\nSkaffold exposes an API for retrieving information about the state of the process and to provide fine-grained control over the execution. For a detailed description of the Skaffold API, refer to the official documentation.\n\n## API Access\n\nThe same API is exposed two ways, through gRPC and HTTP, for which the generated reference can be found below:\n\n- gRPC API\n- HTTP API\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/references/api-v2", "title": "API V2", "description": "Skaffold exposes an API for retrieving information about the state of the process and to provide fine-grained control over the execution.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:14:09", "type": "overview", "page_metadata": {"language": "en", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:url": "https://skaffold.dev/docs/references/api-v2/", "og:description": "Easy and Repeatable Container & Kubernetes Development", "robots": "index, follow", "generator": "Hugo 0.99.1", "title": "API V2 | Skaffold", "og:site_name": "Skaffold", "ogTitle": "API V2", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "ogSiteName": "Skaffold", "ogUrl": "https://skaffold.dev/docs/references/api-v2/", "description": "Skaffold exposes an API for retrieving information about the state of the process and to provide fine-grained control over the execution.\nFor a …", "og:title": "API V2", "og:type": "website", "twitter:title": "API V2", "twitter:card": "summary", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "scrapeId": "8d730377-1771-4b5a-83fe-e5858ae317b3", "sourceURL": "https://skaffold.dev/docs/references/api-v2", "url": "https://skaffold.dev/docs/references/api-v2/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I overview in skaffold?\n\nAssistant: To overview in skaffold, here's what you do:\nSkaffold exposes an API for retrieving information about the state of the process and to provide fine-grained control over the execution. For a detailed description of the Skaffold API, refer to the official documentation..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/api-v2", "title": "API V2", "description": "Skaffold exposes an API for retrieving information about the state of the process and to provide fine-grained control over the execution.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:14:09", "type": "section_detail", "page_metadata": {"language": "en", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:url": "https://skaffold.dev/docs/references/api-v2/", "og:description": "Easy and Repeatable Container & Kubernetes Development", "robots": "index, follow", "generator": "Hugo 0.99.1", "title": "API V2 | Skaffold", "og:site_name": "Skaffold", "ogTitle": "API V2", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "ogSiteName": "Skaffold", "ogUrl": "https://skaffold.dev/docs/references/api-v2/", "description": "Skaffold exposes an API for retrieving information about the state of the process and to provide fine-grained control over the execution.\nFor a …", "og:title": "API V2", "og:type": "website", "twitter:title": "API V2", "twitter:card": "summary", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "scrapeId": "8d730377-1771-4b5a-83fe-e5858ae317b3", "sourceURL": "https://skaffold.dev/docs/references/api-v2", "url": "https://skaffold.dev/docs/references/api-v2/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I api access in skaffold?\n\nAssistant: To api access in skaffold, here's what you do:\nThe same API is exposed two ways, through gRPC and HTTP, for which the generated reference can be found below:\n\n- gRPC API\n- HTTP API.\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/api-v2", "title": "API V2", "description": "Skaffold exposes an API for retrieving information about the state of the process and to provide fine-grained control over the execution.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:14:09", "type": "section_detail", "page_metadata": {"language": "en", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:url": "https://skaffold.dev/docs/references/api-v2/", "og:description": "Easy and Repeatable Container & Kubernetes Development", "robots": "index, follow", "generator": "Hugo 0.99.1", "title": "API V2 | Skaffold", "og:site_name": "Skaffold", "ogTitle": "API V2", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "ogSiteName": "Skaffold", "ogUrl": "https://skaffold.dev/docs/references/api-v2/", "description": "Skaffold exposes an API for retrieving information about the state of the process and to provide fine-grained control over the execution.\nFor a …", "og:title": "API V2", "og:type": "website", "twitter:title": "API V2", "twitter:card": "summary", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "scrapeId": "8d730377-1771-4b5a-83fe-e5858ae317b3", "sourceURL": "https://skaffold.dev/docs/references/api-v2", "url": "https://skaffold.dev/docs/references/api-v2/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: What are some tips for using API V2 in skaffold effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nRefer to the official Skaffold API documentation for detailed descriptions and usage.\n\nUse the gRPC API for more efficient communication in environments that support it.\n\nConsider using the HTTP API for easier integration with web-based tools.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://skaffold.dev/docs/references/api-v2", "title": "API V2", "description": "Skaffold exposes an API for retrieving information about the state of the process and to provide fine-grained control over the execution.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:14:09", "type": "best_practices", "page_metadata": {"language": "en", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:url": "https://skaffold.dev/docs/references/api-v2/", "og:description": "Easy and Repeatable Container & Kubernetes Development", "robots": "index, follow", "generator": "Hugo 0.99.1", "title": "API V2 | Skaffold", "og:site_name": "Skaffold", "ogTitle": "API V2", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "ogSiteName": "Skaffold", "ogUrl": "https://skaffold.dev/docs/references/api-v2/", "description": "Skaffold exposes an API for retrieving information about the state of the process and to provide fine-grained control over the execution.\nFor a …", "og:title": "API V2", "og:type": "website", "twitter:title": "API V2", "twitter:card": "summary", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "scrapeId": "8d730377-1771-4b5a-83fe-e5858ae317b3", "sourceURL": "https://skaffold.dev/docs/references/api-v2", "url": "https://skaffold.dev/docs/references/api-v2/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what Bazel is in skaffold?\n\nAssistant: Sure, I'd be happy to explain Bazel in skaffold.\n\n# Bazel\n\nBazel is a fast, scalable, multi-language, and extensible build system that can be used with Skaffold to build artifacts locally.Here's a quick rundown of what this is about:\n\n## Configuration\n\nTo use Bazel, `bazel` field to each artifact you specify in the `artifacts` part of the `build` section, and use the build type `local`. `context` should be a path containing the bazel files ( `WORKSPACE` and `BUILD`). The following options can optionally be configured:\n\n| Option | Description | Default |\n| --- | --- | --- |\n| `target` | **Required** `bazel build` target to run. | `` |\n| `args` | additional args to pass to `bazel build`. | `[]` |\n| `platforms` | configure the –platforms flag for `bazel build` based on the configured skaffold target platform. | `` |\n\n## Not any Bazel target can be used\n\nThe target specified must produce a .tar bundle compatible with docker load. See [https://github.com/bazelbuild/rules_docker#using-with-docker-locally](https://github.com/bazelbuild/rules_docker#using-with-docker-locally)\n\n## Example\n\nThe following `build` section instructs Skaffold to build a Docker image `gcr.io/k8s-skaffold/example` with Bazel:\n\n```yaml\nbuild:\n  artifacts:\n  - image: gcr.io/k8s-skaffold/example\n    bazel:\n      target: //:example.tar\n```\n\nThe following `build` section shows how to use Skaffold’s cross-platform support to pass `--platforms` to Bazel. In this example, the Bazel project defines the `//platforms:linux-x86_64` `//platforms:linux-arm64` targets. Skaffold will pass `--platforms=//platforms:linux-x86_64` to `bazel build` if its target build platform matches `linux/amd64`, `--platforms=//platforms:linux-arm64` if its target build platform matches `linux/arm64`, and will not pass `--platforms` otherwise.\n\n```yaml\nbuild:\n  artifacts:\n    - image: gcr.io/k8s-skaffold/example\n      bazel:\n        target: //:example.tar\n        platforms:\n          - platform: linux/amd64\n            target: //platforms:linux-x86_64\n          - platform: linux/arm64\n            target: //platforms:linux-arm64\n```\n\nNote that Skaffold does not support intelligently selecting the most specific variant for platforms with variants. For example, specifying `linux/arm64` and `linux/arm64/v8` will not work. In this example it would be better to specify `linux/arm64/v7` and `linux/arm64/v8` instead.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/builders/builder-types/bazel", "title": "Bazel", "description": "Bazel is a fast, scalable, multi-language, and extensible build system that can be used with Skaffold to build artifacts locally.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:14:39", "type": "overview", "page_metadata": {"article:section": "docs", "generator": "Hugo 0.99.1", "robots": "index, follow", "og:type": "article", "article:modified_time": "2025-01-23T10:14:58-05:00", "ogDescription": "Bazel is a fast, scalable, multi-language, and extensible build system.\nSkaffold can help build artifacts using Bazel locally; after Bazel finishes building container images, they will be loaded into the local Docker daemon.\nConfiguration\nTo use Bazel, bazel field to each artifact you specify in the artifacts part of the build section, and use the build type local. context should be a path containing the bazel files (WORKSPACE and BUILD). The following options can optionally be configured:", "ogSiteName": "Skaffold", "description": "Bazel is a fast, scalable, multi-language, and\nextensible build system.\nSkaffold can help build artifacts using Bazel locally; after Bazel finishes …", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "language": "en", "og:description": "Bazel is a fast, scalable, multi-language, and extensible build system.\nSkaffold can help build artifacts using Bazel locally; after Bazel finishes building container images, they will be loaded into the local Docker daemon.\nConfiguration\nTo use Bazel, bazel field to each artifact you specify in the artifacts part of the build section, and use the build type local. context should be a path containing the bazel files (WORKSPACE and BUILD). The following options can optionally be configured:", "ogUrl": "https://skaffold.dev/docs/builders/builder-types/bazel/", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "modifiedTime": "2025-01-23T10:14:58-05:00", "title": "Bazel | Skaffold", "og:url": "https://skaffold.dev/docs/builders/builder-types/bazel/", "ogTitle": "Bazel", "og:site_name": "Skaffold", "twitter:card": "summary", "og:title": "Bazel", "twitter:title": "Bazel", "twitter:description": "Bazel is a fast, scalable, multi-language, and extensible build system.\nSkaffold can help build artifacts using Bazel locally; after Bazel finishes building container images, they will be loaded into the local Docker daemon.\nConfiguration\nTo use Bazel, bazel field to each artifact you specify in the artifacts part of the build section, and use the build type local. context should be a path containing the bazel files (WORKSPACE and BUILD). The following options can optionally be configured:", "scrapeId": "b33e4a79-62c0-4334-b91e-398219cfe32a", "sourceURL": "https://skaffold.dev/docs/builders/builder-types/bazel", "url": "https://skaffold.dev/docs/builders/builder-types/bazel/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I configuration in skaffold?\n\nAssistant: To configuration in skaffold, here's what you do:\nTo use Bazel, `bazel` field to each artifact you specify in the `artifacts` part of the `build` section, and use the build type `local`. `context` should be a path containing the bazel files ( `WORKSPACE` and `BUILD`). The following options can optionally be configured:\n\n| Option | Description | Default |\n| --- | --- | --- |\n| `target` | **Required** `bazel build` target to run. | `` |\n| `args` | additional args to pass to `bazel build`. | `[]` |\n| `platforms` | configure the –platforms flag for `bazel build` based on the configured skaffold target platform. | `` |.\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/builders/builder-types/bazel", "title": "Bazel", "description": "Bazel is a fast, scalable, multi-language, and extensible build system that can be used with Skaffold to build artifacts locally.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:14:39", "type": "section_detail", "page_metadata": {"article:section": "docs", "generator": "Hugo 0.99.1", "robots": "index, follow", "og:type": "article", "article:modified_time": "2025-01-23T10:14:58-05:00", "ogDescription": "Bazel is a fast, scalable, multi-language, and extensible build system.\nSkaffold can help build artifacts using Bazel locally; after Bazel finishes building container images, they will be loaded into the local Docker daemon.\nConfiguration\nTo use Bazel, bazel field to each artifact you specify in the artifacts part of the build section, and use the build type local. context should be a path containing the bazel files (WORKSPACE and BUILD). The following options can optionally be configured:", "ogSiteName": "Skaffold", "description": "Bazel is a fast, scalable, multi-language, and\nextensible build system.\nSkaffold can help build artifacts using Bazel locally; after Bazel finishes …", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "language": "en", "og:description": "Bazel is a fast, scalable, multi-language, and extensible build system.\nSkaffold can help build artifacts using Bazel locally; after Bazel finishes building container images, they will be loaded into the local Docker daemon.\nConfiguration\nTo use Bazel, bazel field to each artifact you specify in the artifacts part of the build section, and use the build type local. context should be a path containing the bazel files (WORKSPACE and BUILD). The following options can optionally be configured:", "ogUrl": "https://skaffold.dev/docs/builders/builder-types/bazel/", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "modifiedTime": "2025-01-23T10:14:58-05:00", "title": "Bazel | Skaffold", "og:url": "https://skaffold.dev/docs/builders/builder-types/bazel/", "ogTitle": "Bazel", "og:site_name": "Skaffold", "twitter:card": "summary", "og:title": "Bazel", "twitter:title": "Bazel", "twitter:description": "Bazel is a fast, scalable, multi-language, and extensible build system.\nSkaffold can help build artifacts using Bazel locally; after Bazel finishes building container images, they will be loaded into the local Docker daemon.\nConfiguration\nTo use Bazel, bazel field to each artifact you specify in the artifacts part of the build section, and use the build type local. context should be a path containing the bazel files (WORKSPACE and BUILD). The following options can optionally be configured:", "scrapeId": "b33e4a79-62c0-4334-b91e-398219cfe32a", "sourceURL": "https://skaffold.dev/docs/builders/builder-types/bazel", "url": "https://skaffold.dev/docs/builders/builder-types/bazel/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I not any bazel target can be used in skaffold?\n\nAssistant: To not any bazel target can be used in skaffold, here's what you do:\nThe target specified must produce a .tar bundle compatible with docker load. See [https://github.com/bazelbuild/rules_docker#using-with-docker-locally](https://github.com/bazelbuild/rules_docker#using-with-docker-locally).\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/builders/builder-types/bazel", "title": "Bazel", "description": "Bazel is a fast, scalable, multi-language, and extensible build system that can be used with Skaffold to build artifacts locally.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:14:39", "type": "section_detail", "page_metadata": {"article:section": "docs", "generator": "Hugo 0.99.1", "robots": "index, follow", "og:type": "article", "article:modified_time": "2025-01-23T10:14:58-05:00", "ogDescription": "Bazel is a fast, scalable, multi-language, and extensible build system.\nSkaffold can help build artifacts using Bazel locally; after Bazel finishes building container images, they will be loaded into the local Docker daemon.\nConfiguration\nTo use Bazel, bazel field to each artifact you specify in the artifacts part of the build section, and use the build type local. context should be a path containing the bazel files (WORKSPACE and BUILD). The following options can optionally be configured:", "ogSiteName": "Skaffold", "description": "Bazel is a fast, scalable, multi-language, and\nextensible build system.\nSkaffold can help build artifacts using Bazel locally; after Bazel finishes …", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "language": "en", "og:description": "Bazel is a fast, scalable, multi-language, and extensible build system.\nSkaffold can help build artifacts using Bazel locally; after Bazel finishes building container images, they will be loaded into the local Docker daemon.\nConfiguration\nTo use Bazel, bazel field to each artifact you specify in the artifacts part of the build section, and use the build type local. context should be a path containing the bazel files (WORKSPACE and BUILD). The following options can optionally be configured:", "ogUrl": "https://skaffold.dev/docs/builders/builder-types/bazel/", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "modifiedTime": "2025-01-23T10:14:58-05:00", "title": "Bazel | Skaffold", "og:url": "https://skaffold.dev/docs/builders/builder-types/bazel/", "ogTitle": "Bazel", "og:site_name": "Skaffold", "twitter:card": "summary", "og:title": "Bazel", "twitter:title": "Bazel", "twitter:description": "Bazel is a fast, scalable, multi-language, and extensible build system.\nSkaffold can help build artifacts using Bazel locally; after Bazel finishes building container images, they will be loaded into the local Docker daemon.\nConfiguration\nTo use Bazel, bazel field to each artifact you specify in the artifacts part of the build section, and use the build type local. context should be a path containing the bazel files (WORKSPACE and BUILD). The following options can optionally be configured:", "scrapeId": "b33e4a79-62c0-4334-b91e-398219cfe32a", "sourceURL": "https://skaffold.dev/docs/builders/builder-types/bazel", "url": "https://skaffold.dev/docs/builders/builder-types/bazel/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I example in skaffold?\n\nAssistant: To example in skaffold, here's what you do:\nThe following `build` section instructs Skaffold to build a Docker image `gcr.io/k8s-skaffold/example` with Bazel:\n\n```yaml\nbuild:\n  artifacts:\n  - image: gcr.io/k8s-skaffold/example\n    bazel:\n      target: //:example.tar\n```\n\nThe following `build` section shows how to use Skaffold’s cross-platform support to pass `--platforms` to Bazel. In this example, the Bazel project defines the `//platforms:linux-x86_64` `//platforms:linux-arm64` targets. Skaffold will pass `--platforms=//platforms:linux-x86_64` to `bazel build` if its target build platform matches `linux/amd64`, `--platforms=//platforms:linux-arm64` if its target build platform matches `linux/arm64`, and will not pass `--platforms` otherwise.\n\n```yaml\nbuild:\n  artifacts:\n    - image: gcr.io/k8s-skaffold/example\n      bazel:\n        target: //:example.tar\n        platforms:\n          - platform: linux/amd64\n            target: //platforms:linux-x86_64\n          - platform: linux/arm64\n            target: //platforms:linux-arm64\n```\n\nNote that Skaffold does not support intelligently selecting the most specific variant for platforms with variants. For example, specifying `linux/arm64` and `linux/arm64/v8` will not work. In this example it would be better to specify `linux/arm64/v7` and `linux/arm64/v8` instead..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/builders/builder-types/bazel", "title": "Bazel", "description": "Bazel is a fast, scalable, multi-language, and extensible build system that can be used with Skaffold to build artifacts locally.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:14:39", "type": "section_detail", "page_metadata": {"article:section": "docs", "generator": "Hugo 0.99.1", "robots": "index, follow", "og:type": "article", "article:modified_time": "2025-01-23T10:14:58-05:00", "ogDescription": "Bazel is a fast, scalable, multi-language, and extensible build system.\nSkaffold can help build artifacts using Bazel locally; after Bazel finishes building container images, they will be loaded into the local Docker daemon.\nConfiguration\nTo use Bazel, bazel field to each artifact you specify in the artifacts part of the build section, and use the build type local. context should be a path containing the bazel files (WORKSPACE and BUILD). The following options can optionally be configured:", "ogSiteName": "Skaffold", "description": "Bazel is a fast, scalable, multi-language, and\nextensible build system.\nSkaffold can help build artifacts using Bazel locally; after Bazel finishes …", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "language": "en", "og:description": "Bazel is a fast, scalable, multi-language, and extensible build system.\nSkaffold can help build artifacts using Bazel locally; after Bazel finishes building container images, they will be loaded into the local Docker daemon.\nConfiguration\nTo use Bazel, bazel field to each artifact you specify in the artifacts part of the build section, and use the build type local. context should be a path containing the bazel files (WORKSPACE and BUILD). The following options can optionally be configured:", "ogUrl": "https://skaffold.dev/docs/builders/builder-types/bazel/", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "modifiedTime": "2025-01-23T10:14:58-05:00", "title": "Bazel | Skaffold", "og:url": "https://skaffold.dev/docs/builders/builder-types/bazel/", "ogTitle": "Bazel", "og:site_name": "Skaffold", "twitter:card": "summary", "og:title": "Bazel", "twitter:title": "Bazel", "twitter:description": "Bazel is a fast, scalable, multi-language, and extensible build system.\nSkaffold can help build artifacts using Bazel locally; after Bazel finishes building container images, they will be loaded into the local Docker daemon.\nConfiguration\nTo use Bazel, bazel field to each artifact you specify in the artifacts part of the build section, and use the build type local. context should be a path containing the bazel files (WORKSPACE and BUILD). The following options can optionally be configured:", "scrapeId": "b33e4a79-62c0-4334-b91e-398219cfe32a", "sourceURL": "https://skaffold.dev/docs/builders/builder-types/bazel", "url": "https://skaffold.dev/docs/builders/builder-types/bazel/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you give me some code examples for Bazel in skaffold?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Bazel Build Example**:\n\n```yaml\n```yaml\nbuild:\n  artifacts:\n  - image: gcr.io/k8s-skaffold/example\n    bazel:\n      target: //:example.tar\n```\n```\n\nThis snippet shows you how to bazel build example, which is an important aspect of bazel.\n\n**Cross-Platform Support Example**:\n\n```yaml\n```yaml\nbuild:\n  artifacts:\n    - image: gcr.io/k8s-skaffold/example\n      bazel:\n        target: //:example.tar\n        platforms:\n          - platform: linux/amd64\n            target: //platforms:linux-x86_64\n          - platform: linux/arm64\n            target: //platforms:linux-arm64\n```\n```\n\nThis snippet shows you how to cross-platform support example, which is an important aspect of bazel.\n\n", "metadata": {"source_url": "https://skaffold.dev/docs/builders/builder-types/bazel", "title": "Bazel", "description": "Bazel is a fast, scalable, multi-language, and extensible build system that can be used with Skaffold to build artifacts locally.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:14:39", "type": "code_examples", "page_metadata": {"article:section": "docs", "generator": "Hugo 0.99.1", "robots": "index, follow", "og:type": "article", "article:modified_time": "2025-01-23T10:14:58-05:00", "ogDescription": "Bazel is a fast, scalable, multi-language, and extensible build system.\nSkaffold can help build artifacts using Bazel locally; after Bazel finishes building container images, they will be loaded into the local Docker daemon.\nConfiguration\nTo use Bazel, bazel field to each artifact you specify in the artifacts part of the build section, and use the build type local. context should be a path containing the bazel files (WORKSPACE and BUILD). The following options can optionally be configured:", "ogSiteName": "Skaffold", "description": "Bazel is a fast, scalable, multi-language, and\nextensible build system.\nSkaffold can help build artifacts using Bazel locally; after Bazel finishes …", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "language": "en", "og:description": "Bazel is a fast, scalable, multi-language, and extensible build system.\nSkaffold can help build artifacts using Bazel locally; after Bazel finishes building container images, they will be loaded into the local Docker daemon.\nConfiguration\nTo use Bazel, bazel field to each artifact you specify in the artifacts part of the build section, and use the build type local. context should be a path containing the bazel files (WORKSPACE and BUILD). The following options can optionally be configured:", "ogUrl": "https://skaffold.dev/docs/builders/builder-types/bazel/", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "modifiedTime": "2025-01-23T10:14:58-05:00", "title": "Bazel | Skaffold", "og:url": "https://skaffold.dev/docs/builders/builder-types/bazel/", "ogTitle": "Bazel", "og:site_name": "Skaffold", "twitter:card": "summary", "og:title": "Bazel", "twitter:title": "Bazel", "twitter:description": "Bazel is a fast, scalable, multi-language, and extensible build system.\nSkaffold can help build artifacts using Bazel locally; after Bazel finishes building container images, they will be loaded into the local Docker daemon.\nConfiguration\nTo use Bazel, bazel field to each artifact you specify in the artifacts part of the build section, and use the build type local. context should be a path containing the bazel files (WORKSPACE and BUILD). The following options can optionally be configured:", "scrapeId": "b33e4a79-62c0-4334-b91e-398219cfe32a", "sourceURL": "https://skaffold.dev/docs/builders/builder-types/bazel", "url": "https://skaffold.dev/docs/builders/builder-types/bazel/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: What are some tips for using Bazel in skaffold effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nThe target specified must produce a .tar bundle compatible with docker load.\n\nSkaffold does not support intelligently selecting the most specific variant for platforms with variants. It is better to specify `linux/arm64/v7` and `linux/arm64/v8` instead of `linux/arm64` and `linux/arm64/v8`.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://skaffold.dev/docs/builders/builder-types/bazel", "title": "Bazel", "description": "Bazel is a fast, scalable, multi-language, and extensible build system that can be used with Skaffold to build artifacts locally.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:14:39", "type": "best_practices", "page_metadata": {"article:section": "docs", "generator": "Hugo 0.99.1", "robots": "index, follow", "og:type": "article", "article:modified_time": "2025-01-23T10:14:58-05:00", "ogDescription": "Bazel is a fast, scalable, multi-language, and extensible build system.\nSkaffold can help build artifacts using Bazel locally; after Bazel finishes building container images, they will be loaded into the local Docker daemon.\nConfiguration\nTo use Bazel, bazel field to each artifact you specify in the artifacts part of the build section, and use the build type local. context should be a path containing the bazel files (WORKSPACE and BUILD). The following options can optionally be configured:", "ogSiteName": "Skaffold", "description": "Bazel is a fast, scalable, multi-language, and\nextensible build system.\nSkaffold can help build artifacts using Bazel locally; after Bazel finishes …", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "language": "en", "og:description": "Bazel is a fast, scalable, multi-language, and extensible build system.\nSkaffold can help build artifacts using Bazel locally; after Bazel finishes building container images, they will be loaded into the local Docker daemon.\nConfiguration\nTo use Bazel, bazel field to each artifact you specify in the artifacts part of the build section, and use the build type local. context should be a path containing the bazel files (WORKSPACE and BUILD). The following options can optionally be configured:", "ogUrl": "https://skaffold.dev/docs/builders/builder-types/bazel/", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "modifiedTime": "2025-01-23T10:14:58-05:00", "title": "Bazel | Skaffold", "og:url": "https://skaffold.dev/docs/builders/builder-types/bazel/", "ogTitle": "Bazel", "og:site_name": "Skaffold", "twitter:card": "summary", "og:title": "Bazel", "twitter:title": "Bazel", "twitter:description": "Bazel is a fast, scalable, multi-language, and extensible build system.\nSkaffold can help build artifacts using Bazel locally; after Bazel finishes building container images, they will be loaded into the local Docker daemon.\nConfiguration\nTo use Bazel, bazel field to each artifact you specify in the artifacts part of the build section, and use the build type local. context should be a path containing the bazel files (WORKSPACE and BUILD). The following options can optionally be configured:", "scrapeId": "b33e4a79-62c0-4334-b91e-398219cfe32a", "sourceURL": "https://skaffold.dev/docs/builders/builder-types/bazel", "url": "https://skaffold.dev/docs/builders/builder-types/bazel/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what Debugging With Skaffold is in skaffold?\n\nAssistant: Sure, I'd be happy to explain Debugging With Skaffold in skaffold.\n\n# Debugging With Skaffold\n\nSkaffold lets you set breakpoints and step through your application, even when deployed to remote Kubernetes clusters, as if the code were running locally on your machine. Skaffold detects the language runtimes of your container images, reconfigures the pods for debugging, forwards debugging ports, and then monitors for when debuggable containers come online. IDE integrations like Cloud Code leverage Skaffold’s events to automatically set up debugging sessions.Here's a quick rundown of what this is about:\n\n## (Recommended) Debugging using Cloud Code\n\nThe easiest way to debug using Skaffold is by using the [Cloud Code IDE extension](https://skaffold.dev/docs/install/#managed-ide) for Visual Studio Code, JetBrains IDEs, and Cloud Shell. Cloud Code will automatically configure container images for debugging so you can debug Kubernetes services just like how you would debug a local service in your IDE.\n\nFor more information, see the corresponding documentation for [VS Code](https://cloud.google.com/code/docs/vscode/debug), [IntelliJ](https://cloud.google.com/code/docs/intellij/kubernetes-debugging) and [Cloud Shell](https://cloud.google.com/code/docs/shell/debug).\n\n## Detailed debugger configuration and setup\n\nThis section describes how Skaffold configures the container image for debugging for the supported language runtimes, and how to setup with certain IDEs.\n\nNote that many debuggers may require additional information for the location of source files.\nWe are looking for ways to identify this information and to pass it back if found.\n\n- [GO](https://skaffold.dev/docs/workflows/debug/#)\n- [NODEJS](https://skaffold.dev/docs/workflows/debug/#)\n- [JAVA](https://skaffold.dev/docs/workflows/debug/#)\n- [PYTHON](https://skaffold.dev/docs/workflows/debug/#)\n- [.NETCORE](https://skaffold.dev/docs/workflows/debug/#)\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/workflows/debug", "title": "Debugging With Skaffold", "description": "Skaffold lets you set breakpoints and step through your application, even when deployed to remote Kubernetes clusters, as if the code were running locally on your machine. Skaffold detects the language runtimes of your container images, reconfigures the pods for debugging, forwards debugging ports, and then monitors for when debuggable containers come online. IDE integrations like Cloud Code leverage Skaffold’s events to automatically set up debugging sessions.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:15:15", "type": "overview", "page_metadata": {"ogTitle": "Debugging With Skaffold", "article:section": "docs", "og:site_name": "Skaffold", "twitter:description": "Skaffold lets you set breakpoints and step through your application, even when deployed to remote Kubernetes clusters, as if the code were running locally on your machine. Skaffold detects the language runtimes of your container images, reconfigures the pods for debugging, forwards debugging ports, and then monitors for when debuggable containers come online. IDE integrations like Cloud Code leverage Skaffold’s events to automatically set up debugging sessions.\nDebugging is currently supported for five language runtimes.", "twitter:card": "summary", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:description": "Skaffold lets you set breakpoints and step through your application, even when deployed to remote Kubernetes clusters, as if the code were running locally on your machine. Skaffold detects the language runtimes of your container images, reconfigures the pods for debugging, forwards debugging ports, and then monitors for when debuggable containers come online. IDE integrations like Cloud Code leverage Skaffold’s events to automatically set up debugging sessions.\nDebugging is currently supported for five language runtimes.", "ogUrl": "https://skaffold.dev/docs/workflows/debug/", "title": "Debugging With Skaffold | Skaffold", "ogSiteName": "Skaffold", "og:url": "https://skaffold.dev/docs/workflows/debug/", "generator": "Hugo 0.99.1", "article:modified_time": "2025-01-23T10:14:58-05:00", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:type": "article", "language": "en", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "robots": "index, follow", "description": "Skaffold lets you set breakpoints and step through your application, even when deployed to remote Kubernetes clusters, as if the code were running …", "twitter:title": "Debugging With Skaffold", "ogDescription": "Skaffold lets you set breakpoints and step through your application, even when deployed to remote Kubernetes clusters, as if the code were running locally on your machine. Skaffold detects the language runtimes of your container images, reconfigures the pods for debugging, forwards debugging ports, and then monitors for when debuggable containers come online. IDE integrations like Cloud Code leverage Skaffold’s events to automatically set up debugging sessions.\nDebugging is currently supported for five language runtimes.", "og:title": "Debugging With Skaffold", "scrapeId": "5d8424e5-bae9-452f-8ed9-08c9aec4628e", "sourceURL": "https://skaffold.dev/docs/workflows/debug", "url": "https://skaffold.dev/docs/workflows/debug/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I (recommended) debugging using cloud code in skaffold?\n\nAssistant: To (recommended) debugging using cloud code in skaffold, here's what you do:\nThe easiest way to debug using Skaffold is by using the [Cloud Code IDE extension](https://skaffold.dev/docs/install/#managed-ide) for Visual Studio Code, JetBrains IDEs, and Cloud Shell. Cloud Code will automatically configure container images for debugging so you can debug Kubernetes services just like how you would debug a local service in your IDE.\n\nFor more information, see the corresponding documentation for [VS Code](https://cloud.google.com/code/docs/vscode/debug), [IntelliJ](https://cloud.google.com/code/docs/intellij/kubernetes-debugging) and [Cloud Shell](https://cloud.google.com/code/docs/shell/debug)..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/workflows/debug", "title": "Debugging With Skaffold", "description": "Skaffold lets you set breakpoints and step through your application, even when deployed to remote Kubernetes clusters, as if the code were running locally on your machine. Skaffold detects the language runtimes of your container images, reconfigures the pods for debugging, forwards debugging ports, and then monitors for when debuggable containers come online. IDE integrations like Cloud Code leverage Skaffold’s events to automatically set up debugging sessions.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:15:15", "type": "section_detail", "page_metadata": {"ogTitle": "Debugging With Skaffold", "article:section": "docs", "og:site_name": "Skaffold", "twitter:description": "Skaffold lets you set breakpoints and step through your application, even when deployed to remote Kubernetes clusters, as if the code were running locally on your machine. Skaffold detects the language runtimes of your container images, reconfigures the pods for debugging, forwards debugging ports, and then monitors for when debuggable containers come online. IDE integrations like Cloud Code leverage Skaffold’s events to automatically set up debugging sessions.\nDebugging is currently supported for five language runtimes.", "twitter:card": "summary", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:description": "Skaffold lets you set breakpoints and step through your application, even when deployed to remote Kubernetes clusters, as if the code were running locally on your machine. Skaffold detects the language runtimes of your container images, reconfigures the pods for debugging, forwards debugging ports, and then monitors for when debuggable containers come online. IDE integrations like Cloud Code leverage Skaffold’s events to automatically set up debugging sessions.\nDebugging is currently supported for five language runtimes.", "ogUrl": "https://skaffold.dev/docs/workflows/debug/", "title": "Debugging With Skaffold | Skaffold", "ogSiteName": "Skaffold", "og:url": "https://skaffold.dev/docs/workflows/debug/", "generator": "Hugo 0.99.1", "article:modified_time": "2025-01-23T10:14:58-05:00", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:type": "article", "language": "en", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "robots": "index, follow", "description": "Skaffold lets you set breakpoints and step through your application, even when deployed to remote Kubernetes clusters, as if the code were running …", "twitter:title": "Debugging With Skaffold", "ogDescription": "Skaffold lets you set breakpoints and step through your application, even when deployed to remote Kubernetes clusters, as if the code were running locally on your machine. Skaffold detects the language runtimes of your container images, reconfigures the pods for debugging, forwards debugging ports, and then monitors for when debuggable containers come online. IDE integrations like Cloud Code leverage Skaffold’s events to automatically set up debugging sessions.\nDebugging is currently supported for five language runtimes.", "og:title": "Debugging With Skaffold", "scrapeId": "5d8424e5-bae9-452f-8ed9-08c9aec4628e", "sourceURL": "https://skaffold.dev/docs/workflows/debug", "url": "https://skaffold.dev/docs/workflows/debug/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I detailed debugger configuration and setup in skaffold?\n\nAssistant: To detailed debugger configuration and setup in skaffold, here's what you do:\nThis section describes how Skaffold configures the container image for debugging for the supported language runtimes, and how to setup with certain IDEs.\n\nNote that many debuggers may require additional information for the location of source files.\nWe are looking for ways to identify this information and to pass it back if found.\n\n- [GO](https://skaffold.dev/docs/workflows/debug/#)\n- [NODEJS](https://skaffold.dev/docs/workflows/debug/#)\n- [JAVA](https://skaffold.dev/docs/workflows/debug/#)\n- [PYTHON](https://skaffold.dev/docs/workflows/debug/#)\n- [.NETCORE](https://skaffold.dev/docs/workflows/debug/#).\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/workflows/debug", "title": "Debugging With Skaffold", "description": "Skaffold lets you set breakpoints and step through your application, even when deployed to remote Kubernetes clusters, as if the code were running locally on your machine. Skaffold detects the language runtimes of your container images, reconfigures the pods for debugging, forwards debugging ports, and then monitors for when debuggable containers come online. IDE integrations like Cloud Code leverage Skaffold’s events to automatically set up debugging sessions.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:15:15", "type": "section_detail", "page_metadata": {"ogTitle": "Debugging With Skaffold", "article:section": "docs", "og:site_name": "Skaffold", "twitter:description": "Skaffold lets you set breakpoints and step through your application, even when deployed to remote Kubernetes clusters, as if the code were running locally on your machine. Skaffold detects the language runtimes of your container images, reconfigures the pods for debugging, forwards debugging ports, and then monitors for when debuggable containers come online. IDE integrations like Cloud Code leverage Skaffold’s events to automatically set up debugging sessions.\nDebugging is currently supported for five language runtimes.", "twitter:card": "summary", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:description": "Skaffold lets you set breakpoints and step through your application, even when deployed to remote Kubernetes clusters, as if the code were running locally on your machine. Skaffold detects the language runtimes of your container images, reconfigures the pods for debugging, forwards debugging ports, and then monitors for when debuggable containers come online. IDE integrations like Cloud Code leverage Skaffold’s events to automatically set up debugging sessions.\nDebugging is currently supported for five language runtimes.", "ogUrl": "https://skaffold.dev/docs/workflows/debug/", "title": "Debugging With Skaffold | Skaffold", "ogSiteName": "Skaffold", "og:url": "https://skaffold.dev/docs/workflows/debug/", "generator": "Hugo 0.99.1", "article:modified_time": "2025-01-23T10:14:58-05:00", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:type": "article", "language": "en", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "robots": "index, follow", "description": "Skaffold lets you set breakpoints and step through your application, even when deployed to remote Kubernetes clusters, as if the code were running …", "twitter:title": "Debugging With Skaffold", "ogDescription": "Skaffold lets you set breakpoints and step through your application, even when deployed to remote Kubernetes clusters, as if the code were running locally on your machine. Skaffold detects the language runtimes of your container images, reconfigures the pods for debugging, forwards debugging ports, and then monitors for when debuggable containers come online. IDE integrations like Cloud Code leverage Skaffold’s events to automatically set up debugging sessions.\nDebugging is currently supported for five language runtimes.", "og:title": "Debugging With Skaffold", "scrapeId": "5d8424e5-bae9-452f-8ed9-08c9aec4628e", "sourceURL": "https://skaffold.dev/docs/workflows/debug", "url": "https://skaffold.dev/docs/workflows/debug/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you give me some code examples for Debugging With Skaffold in skaffold?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Skaffold debug using the VS Code Go extension**:\n\n```yaml\n{\n    \"name\": \"Skaffold Debug\",\n    \"type\": \"go\",\n    \"request\": \"attach\",\n    \"mode\": \"remote\",\n    \"host\": \"localhost\",\n    \"port\": 56268,\n    \"cwd\": \"${workspaceFolder}\",\n    \"remotePath\": \"/go\"\n}\n```\n\nThis snippet shows you how to skaffold debug using the vs code go extension, which is an important aspect of debugging with skaffold.\n\n**Skaffold debug using the substitutePath property**:\n\n```yaml\n{\n    \"name\": \"Skaffold Debug\",\n    \"type\": \"go\",\n    \"request\": \"attach\",\n    \"mode\": \"remote\",\n    \"host\": \"localhost\",\n    \"port\": 56268,\n    \"substitutePath\": [\\\n        {\\\n            \"from\": \"${workspaceFolder}\",\\\n            \"to\": \"/go\",\\\n        },\\\n    ],\n}\n```\n\nThis snippet shows you how to skaffold debug using the substitutepath property, which is an important aspect of debugging with skaffold.\n\n**NodeJS application entrypoint**:\n\n```yaml\nnode --inspect=9229 <app.js>\n```\n\nThis snippet shows you how to nodejs application entrypoint, which is an important aspect of debugging with skaffold.\n\n", "metadata": {"source_url": "https://skaffold.dev/docs/workflows/debug", "title": "Debugging With Skaffold", "description": "Skaffold lets you set breakpoints and step through your application, even when deployed to remote Kubernetes clusters, as if the code were running locally on your machine. Skaffold detects the language runtimes of your container images, reconfigures the pods for debugging, forwards debugging ports, and then monitors for when debuggable containers come online. IDE integrations like Cloud Code leverage Skaffold’s events to automatically set up debugging sessions.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:15:15", "type": "code_examples", "page_metadata": {"ogTitle": "Debugging With Skaffold", "article:section": "docs", "og:site_name": "Skaffold", "twitter:description": "Skaffold lets you set breakpoints and step through your application, even when deployed to remote Kubernetes clusters, as if the code were running locally on your machine. Skaffold detects the language runtimes of your container images, reconfigures the pods for debugging, forwards debugging ports, and then monitors for when debuggable containers come online. IDE integrations like Cloud Code leverage Skaffold’s events to automatically set up debugging sessions.\nDebugging is currently supported for five language runtimes.", "twitter:card": "summary", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:description": "Skaffold lets you set breakpoints and step through your application, even when deployed to remote Kubernetes clusters, as if the code were running locally on your machine. Skaffold detects the language runtimes of your container images, reconfigures the pods for debugging, forwards debugging ports, and then monitors for when debuggable containers come online. IDE integrations like Cloud Code leverage Skaffold’s events to automatically set up debugging sessions.\nDebugging is currently supported for five language runtimes.", "ogUrl": "https://skaffold.dev/docs/workflows/debug/", "title": "Debugging With Skaffold | Skaffold", "ogSiteName": "Skaffold", "og:url": "https://skaffold.dev/docs/workflows/debug/", "generator": "Hugo 0.99.1", "article:modified_time": "2025-01-23T10:14:58-05:00", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:type": "article", "language": "en", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "robots": "index, follow", "description": "Skaffold lets you set breakpoints and step through your application, even when deployed to remote Kubernetes clusters, as if the code were running …", "twitter:title": "Debugging With Skaffold", "ogDescription": "Skaffold lets you set breakpoints and step through your application, even when deployed to remote Kubernetes clusters, as if the code were running locally on your machine. Skaffold detects the language runtimes of your container images, reconfigures the pods for debugging, forwards debugging ports, and then monitors for when debuggable containers come online. IDE integrations like Cloud Code leverage Skaffold’s events to automatically set up debugging sessions.\nDebugging is currently supported for five language runtimes.", "og:title": "Debugging With Skaffold", "scrapeId": "5d8424e5-bae9-452f-8ed9-08c9aec4628e", "sourceURL": "https://skaffold.dev/docs/workflows/debug", "url": "https://skaffold.dev/docs/workflows/debug/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: What are some tips for using Debugging With Skaffold in skaffold effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nDebugging is currently supported for five language runtimes: Go, NodeJS, Java, Python, and .NET Core.\n\nFor Go applications, ensure to use Go Modules and configure IDE settings accordingly.\n\nWhen using VS Code for Go, configure local and remote source paths correctly to avoid misconfiguration errors.\n\nFor Python, ensure to use the correct launcher scripts and avoid shell constructs in command lines.\n\nFor .NET Core, ensure to use the correct configuration options to disable optimizations.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://skaffold.dev/docs/workflows/debug", "title": "Debugging With Skaffold", "description": "Skaffold lets you set breakpoints and step through your application, even when deployed to remote Kubernetes clusters, as if the code were running locally on your machine. Skaffold detects the language runtimes of your container images, reconfigures the pods for debugging, forwards debugging ports, and then monitors for when debuggable containers come online. IDE integrations like Cloud Code leverage Skaffold’s events to automatically set up debugging sessions.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:15:15", "type": "best_practices", "page_metadata": {"ogTitle": "Debugging With Skaffold", "article:section": "docs", "og:site_name": "Skaffold", "twitter:description": "Skaffold lets you set breakpoints and step through your application, even when deployed to remote Kubernetes clusters, as if the code were running locally on your machine. Skaffold detects the language runtimes of your container images, reconfigures the pods for debugging, forwards debugging ports, and then monitors for when debuggable containers come online. IDE integrations like Cloud Code leverage Skaffold’s events to automatically set up debugging sessions.\nDebugging is currently supported for five language runtimes.", "twitter:card": "summary", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:description": "Skaffold lets you set breakpoints and step through your application, even when deployed to remote Kubernetes clusters, as if the code were running locally on your machine. Skaffold detects the language runtimes of your container images, reconfigures the pods for debugging, forwards debugging ports, and then monitors for when debuggable containers come online. IDE integrations like Cloud Code leverage Skaffold’s events to automatically set up debugging sessions.\nDebugging is currently supported for five language runtimes.", "ogUrl": "https://skaffold.dev/docs/workflows/debug/", "title": "Debugging With Skaffold | Skaffold", "ogSiteName": "Skaffold", "og:url": "https://skaffold.dev/docs/workflows/debug/", "generator": "Hugo 0.99.1", "article:modified_time": "2025-01-23T10:14:58-05:00", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:type": "article", "language": "en", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "robots": "index, follow", "description": "Skaffold lets you set breakpoints and step through your application, even when deployed to remote Kubernetes clusters, as if the code were running …", "twitter:title": "Debugging With Skaffold", "ogDescription": "Skaffold lets you set breakpoints and step through your application, even when deployed to remote Kubernetes clusters, as if the code were running locally on your machine. Skaffold detects the language runtimes of your container images, reconfigures the pods for debugging, forwards debugging ports, and then monitors for when debuggable containers come online. IDE integrations like Cloud Code leverage Skaffold’s events to automatically set up debugging sessions.\nDebugging is currently supported for five language runtimes.", "og:title": "Debugging With Skaffold", "scrapeId": "5d8424e5-bae9-452f-8ed9-08c9aec4628e", "sourceURL": "https://skaffold.dev/docs/workflows/debug", "url": "https://skaffold.dev/docs/workflows/debug/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what Google Cloud Build is in skaffold?\n\nAssistant: Sure, I'd be happy to explain Google Cloud Build in skaffold.\n\n# Google Cloud Build\n\nSkaffold supports building remotely with Google Cloud Build.Here's a quick rundown of what this is about:\n\n## Overview\n\nSkaffold supports building remotely with Google Cloud Build.\n\n[Cloud Build](https://cloud.google.com/cloud-build/) is a\n[Google Cloud Platform](https://cloud.google.com/) service that executes\nyour builds using Google infrastructure. To get started with Cloud\nBuild, see [Cloud Build Quickstart](https://cloud.google.com/cloud-build/docs/quickstart-docker).\n\nSkaffold automatically connects to Cloud Build and runs your builds\nwith it. After Cloud Build finishes building your artifacts, they are\nsaved to the specified remote registry, such as\n[Google Container Registry](https://cloud.google.com/container-registry/).\n\nSkaffold’s Cloud Build process differs from the gcloud command\n[`gcloud builds submit`](https://cloud.google.com/sdk/gcloud/reference/builds/submit).\nSkaffold does the following:\n\n- Creates a list of dependent files\n- Uploads a tar file of the dependent files to Google Cloud Storage\n- Submits the tar file to Cloud Build\n- Generates a single-step `cloudbuild.yaml`\n- Starts the build\n\nSkaffold does not honor `.gitignore` or `.gcloudignore` exclusions. If you need to ignore files, use `.dockerignore`.\nAny `cloudbuild.yaml` found will not be used in the build process.\n\n## Configuration\n\nTo use Cloud Build, add build type `googleCloudBuild` to the `build`\nsection of `skaffold.yaml`.\n\n```yaml\nbuild:\n  googleCloudBuild: {}\n```\n\nThe following options can optionally be configured:\n\n| Option | Description | Default |\n| --- | --- | --- |\n| `projectId` | ID of your Cloud Platform Project. If it is not provided, Skaffold will guess it from the image name. For example, given the artifact image name `gcr.io/myproject/image`, Skaffold will use the `myproject` GCP project. | `` |\n| `diskSizeGb` | disk size of the VM that runs the build. See [Cloud Build Reference](https://cloud.google.com/cloud-build/docs/api/reference/rest/v1/projects.builds#buildoptions). | `` |\n| `machineType` | type of the VM that runs the build. See [Cloud Build Reference](https://cloud.google.com/cloud-build/docs/api/reference/rest/v1/projects.builds#buildoptions). | `` |\n| `timeout` | amount of time (in seconds) that this build should be allowed to run. See [Cloud Build Reference](https://cloud.google.com/cloud-build/docs/api/reference/rest/v1/projects.builds#resource-build). | `` |\n| `logging` | specifies the logging mode. Valid modes are: `LOGGING_UNSPECIFIED`: The service determines the logging mode. `LEGACY`: Stackdriver logging and Cloud Storage logging are enabled (default). `GCS_ONLY`: Only Cloud Storage logging is enabled. See [Cloud Build Reference](https://cloud.google.com/cloud-build/docs/api/reference/rest/v1/projects.builds#loggingmode). | `` |\n| `logStreamingOption` | specifies the behavior when writing build logs to Google Cloud Storage. Valid options are: `STREAM_DEFAULT`: Service may automatically determine build log streaming behavior. `STREAM_ON`: Build logs should be streamed to Google Cloud Storage. `STREAM_OFF`: Build logs should not be streamed to Google Cloud Storage; they will be written when the build is completed. See [Cloud Build Reference](https://cloud.google.com/cloud-build/docs/api/reference/rest/v1/projects.builds#logstreamingoption). | `` |\n| `dockerImage` | image that runs a Docker build. See [Cloud Builders](https://cloud.google.com/cloud-build/docs/cloud-builders). | `gcr.io/cloud-builders/docker` |\n| `kanikoImage` | image that runs a Kaniko build. See [Cloud Builders](https://cloud.google.com/cloud-build/docs/cloud-builders). | `gcr.io/kaniko-project/executor` |\n| `mavenImage` | image that runs a Maven build. See [Cloud Builders](https://cloud.google.com/cloud-build/docs/cloud-builders). | `gcr.io/cloud-builders/mvn` |\n| `gradleImage` | image that runs a Gradle build. See [Cloud Builders](https://cloud.google.com/cloud-build/docs/cloud-builders). | `gcr.io/cloud-builders/gradle` |\n| `packImage` | image that runs a Cloud Native Buildpacks build. See [Cloud Builders](https://cloud.google.com/cloud-build/docs/cloud-builders). | `gcr.io/k8s-skaffold/pack` |\n| `koImage` | image that runs a ko build. The image must contain Skaffold, Go, and a shell (runnable as `sh`) that supports here documents. See [Cloud Builders](https://cloud.google.com/cloud-build/docs/cloud-builders). | `gcr.io/k8s-skaffold/skaffold` |\n| `bucket` | specifies the Cloud Storage bucket to store the staged build sources. | `` |\n| `concurrency` | how many artifacts can be built concurrently. 0 means “no-limit”. | `0` |\n| `workerPool` | configures a pool of workers to run the build. | `` |\n| `region` | configures the region to run the build. If WorkerPool is configured, the region will be deduced from the WorkerPool configuration. If neither WorkerPool nor Region is configured, the build will be run in global(non-regional). See [Cloud Build locations](https://cloud.google.com/build/docs/locations). | `` |\n| `platformEmulatorInstallStep` | specifies a pre-build step to install the required tooling for QEMU emulation on the GoogleCloudBuild containers. This enables performing cross-platform builds on GoogleCloudBuild. If unspecified, Skaffold uses the `docker/binfmt` image by default. | `` |\n| `serviceAccount` | Google Cloud platform service account used by Cloud Build. If unspecified, it defaults to the Cloud Build service account generated when the Cloud Build API is enabled. | `` |\n\n## Faster builds\n\nBy default, Cloud Build (invoked by Skaffold) builds all artifacts in parallel. Set `concurrency` to a non-zero\nvalue to specify the maximum number of artifacts to build concurrently. Consider reducing `concurrency` if you\nhit a quota restriction.\n\n#### Note\n\nWhen Skaffold builds artifacts in parallel, it still prints the build logs in sequence to make them easier to read.\n\n## Restrictions\n\nSkaffold currently supports the following [builder types](https://skaffold.dev/docs/builders/builder-types/)\nwhen building remotely with Cloud Build:\n\n- [Docker](https://skaffold.dev/docs/builders/builder-types/docker/#dockerfile-remotely-with-google-cloud-build)\n- [Jib](https://skaffold.dev/docs/builders/builder-types/jib/#remotely-with-google-cloud-build)\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/builders/build-environments/cloud-build", "title": "Google Cloud Build", "description": "Skaffold supports building remotely with Google Cloud Build.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:15:44", "type": "overview", "page_metadata": {"article:section": "docs", "twitter:card": "summary", "og:type": "article", "ogSiteName": "Skaffold", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:title": "Google Cloud Build", "title": "Google Cloud Build | Skaffold", "article:modified_time": "2025-01-23T10:14:58-05:00", "twitter:title": "Google Cloud Build", "ogUrl": "https://skaffold.dev/docs/builders/build-environments/cloud-build/", "language": "en", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "robots": "index, follow", "ogDescription": "Skaffold supports building remotely with Google Cloud Build.\nCloud Build is a Google Cloud Platform service that executes your builds using Google infrastructure. To get started with Cloud Build, see Cloud Build Quickstart.\nSkaffold automatically connects to Cloud Build and runs your builds with it. After Cloud Build finishes building your artifacts, they are saved to the specified remote registry, such as Google Container Registry.\nSkaffold’s Cloud Build process differs from the gcloud command gcloud builds submit.", "og:description": "Skaffold supports building remotely with Google Cloud Build.\nCloud Build is a Google Cloud Platform service that executes your builds using Google infrastructure. To get started with Cloud Build, see Cloud Build Quickstart.\nSkaffold automatically connects to Cloud Build and runs your builds with it. After Cloud Build finishes building your artifacts, they are saved to the specified remote registry, such as Google Container Registry.\nSkaffold’s Cloud Build process differs from the gcloud command gcloud builds submit.", "generator": "Hugo 0.99.1", "ogTitle": "Google Cloud Build", "description": "Skaffold supports building remotely with Google Cloud Build.\nCloud Build is a\nGoogle Cloud Platform service that executes\nyour builds using Google …", "og:url": "https://skaffold.dev/docs/builders/build-environments/cloud-build/", "og:site_name": "Skaffold", "twitter:description": "Skaffold supports building remotely with Google Cloud Build.\nCloud Build is a Google Cloud Platform service that executes your builds using Google infrastructure. To get started with Cloud Build, see Cloud Build Quickstart.\nSkaffold automatically connects to Cloud Build and runs your builds with it. After Cloud Build finishes building your artifacts, they are saved to the specified remote registry, such as Google Container Registry.\nSkaffold’s Cloud Build process differs from the gcloud command gcloud builds submit.", "scrapeId": "be3cb3d3-229e-4ebf-b2ea-1024d32f9c4d", "sourceURL": "https://skaffold.dev/docs/builders/build-environments/cloud-build", "url": "https://skaffold.dev/docs/builders/build-environments/cloud-build/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I overview in skaffold?\n\nAssistant: To overview in skaffold, here's what you do:\nSkaffold supports building remotely with Google Cloud Build.\n\n[Cloud Build](https://cloud.google.com/cloud-build/) is a\n[Google Cloud Platform](https://cloud.google.com/) service that executes\nyour builds using Google infrastructure. To get started with Cloud\nBuild, see [Cloud Build Quickstart](https://cloud.google.com/cloud-build/docs/quickstart-docker).\n\nSkaffold automatically connects to Cloud Build and runs your builds\nwith it. After Cloud Build finishes building your artifacts, they are\nsaved to the specified remote registry, such as\n[Google Container Registry](https://cloud.google.com/container-registry/).\n\nSkaffold’s Cloud Build process differs from the gcloud command\n[`gcloud builds submit`](https://cloud.google.com/sdk/gcloud/reference/builds/submit).\nSkaffold does the following:\n\n- Creates a list of dependent files\n- Uploads a tar file of the dependent files to Google Cloud Storage\n- Submits the tar file to Cloud Build\n- Generates a single-step `cloudbuild.yaml`\n- Starts the build\n\nSkaffold does not honor `.gitignore` or `.gcloudignore` exclusions. If you need to ignore files, use `.dockerignore`.\nAny `cloudbuild.yaml` found will not be used in the build process..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/builders/build-environments/cloud-build", "title": "Google Cloud Build", "description": "Skaffold supports building remotely with Google Cloud Build.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:15:44", "type": "section_detail", "page_metadata": {"article:section": "docs", "twitter:card": "summary", "og:type": "article", "ogSiteName": "Skaffold", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:title": "Google Cloud Build", "title": "Google Cloud Build | Skaffold", "article:modified_time": "2025-01-23T10:14:58-05:00", "twitter:title": "Google Cloud Build", "ogUrl": "https://skaffold.dev/docs/builders/build-environments/cloud-build/", "language": "en", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "robots": "index, follow", "ogDescription": "Skaffold supports building remotely with Google Cloud Build.\nCloud Build is a Google Cloud Platform service that executes your builds using Google infrastructure. To get started with Cloud Build, see Cloud Build Quickstart.\nSkaffold automatically connects to Cloud Build and runs your builds with it. After Cloud Build finishes building your artifacts, they are saved to the specified remote registry, such as Google Container Registry.\nSkaffold’s Cloud Build process differs from the gcloud command gcloud builds submit.", "og:description": "Skaffold supports building remotely with Google Cloud Build.\nCloud Build is a Google Cloud Platform service that executes your builds using Google infrastructure. To get started with Cloud Build, see Cloud Build Quickstart.\nSkaffold automatically connects to Cloud Build and runs your builds with it. After Cloud Build finishes building your artifacts, they are saved to the specified remote registry, such as Google Container Registry.\nSkaffold’s Cloud Build process differs from the gcloud command gcloud builds submit.", "generator": "Hugo 0.99.1", "ogTitle": "Google Cloud Build", "description": "Skaffold supports building remotely with Google Cloud Build.\nCloud Build is a\nGoogle Cloud Platform service that executes\nyour builds using Google …", "og:url": "https://skaffold.dev/docs/builders/build-environments/cloud-build/", "og:site_name": "Skaffold", "twitter:description": "Skaffold supports building remotely with Google Cloud Build.\nCloud Build is a Google Cloud Platform service that executes your builds using Google infrastructure. To get started with Cloud Build, see Cloud Build Quickstart.\nSkaffold automatically connects to Cloud Build and runs your builds with it. After Cloud Build finishes building your artifacts, they are saved to the specified remote registry, such as Google Container Registry.\nSkaffold’s Cloud Build process differs from the gcloud command gcloud builds submit.", "scrapeId": "be3cb3d3-229e-4ebf-b2ea-1024d32f9c4d", "sourceURL": "https://skaffold.dev/docs/builders/build-environments/cloud-build", "url": "https://skaffold.dev/docs/builders/build-environments/cloud-build/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I configuration in skaffold?\n\nAssistant: To configuration in skaffold, here's what you do:\nTo use Cloud Build, add build type `googleCloudBuild` to the `build`\nsection of `skaffold.yaml`.\n\n```yaml\nbuild:\n  googleCloudBuild: {}\n```\n\nThe following options can optionally be configured:\n\n| Option | Description | Default |\n| --- | --- | --- |\n| `projectId` | ID of your Cloud Platform Project. If it is not provided, Skaffold will guess it from the image name. For example, given the artifact image name `gcr.io/myproject/image`, Skaffold will use the `myproject` GCP project. | `` |\n| `diskSizeGb` | disk size of the VM that runs the build. See [Cloud Build Reference](https://cloud.google.com/cloud-build/docs/api/reference/rest/v1/projects.builds#buildoptions). | `` |\n| `machineType` | type of the VM that runs the build. See [Cloud Build Reference](https://cloud.google.com/cloud-build/docs/api/reference/rest/v1/projects.builds#buildoptions). | `` |\n| `timeout` | amount of time (in seconds) that this build should be allowed to run. See [Cloud Build Reference](https://cloud.google.com/cloud-build/docs/api/reference/rest/v1/projects.builds#resource-build). | `` |\n| `logging` | specifies the logging mode. Valid modes are: `LOGGING_UNSPECIFIED`: The service determines the logging mode. `LEGACY`: Stackdriver logging and Cloud Storage logging are enabled (default). `GCS_ONLY`: Only Cloud Storage logging is enabled. See [Cloud Build Reference](https://cloud.google.com/cloud-build/docs/api/reference/rest/v1/projects.builds#loggingmode). | `` |\n| `logStreamingOption` | specifies the behavior when writing build logs to Google Cloud Storage. Valid options are: `STREAM_DEFAULT`: Service may automatically determine build log streaming behavior. `STREAM_ON`: Build logs should be streamed to Google Cloud Storage. `STREAM_OFF`: Build logs should not be streamed to Google Cloud Storage; they will be written when the build is completed. See [Cloud Build Reference](https://cloud.google.com/cloud-build/docs/api/reference/rest/v1/projects.builds#logstreamingoption). | `` |\n| `dockerImage` | image that runs a Docker build. See [Cloud Builders](https://cloud.google.com/cloud-build/docs/cloud-builders). | `gcr.io/cloud-builders/docker` |\n| `kanikoImage` | image that runs a Kaniko build. See [Cloud Builders](https://cloud.google.com/cloud-build/docs/cloud-builders). | `gcr.io/kaniko-project/executor` |\n| `mavenImage` | image that runs a Maven build. See [Cloud Builders](https://cloud.google.com/cloud-build/docs/cloud-builders). | `gcr.io/cloud-builders/mvn` |\n| `gradleImage` | image that runs a Gradle build. See [Cloud Builders](https://cloud.google.com/cloud-build/docs/cloud-builders). | `gcr.io/cloud-builders/gradle` |\n| `packImage` | image that runs a Cloud Native Buildpacks build. See [Cloud Builders](https://cloud.google.com/cloud-build/docs/cloud-builders). | `gcr.io/k8s-skaffold/pack` |\n| `koImage` | image that runs a ko build. The image must contain Skaffold, Go, and a shell (runnable as `sh`) that supports here documents. See [Cloud Builders](https://cloud.google.com/cloud-build/docs/cloud-builders). | `gcr.io/k8s-skaffold/skaffold` |\n| `bucket` | specifies the Cloud Storage bucket to store the staged build sources. | `` |\n| `concurrency` | how many artifacts can be built concurrently. 0 means “no-limit”. | `0` |\n| `workerPool` | configures a pool of workers to run the build. | `` |\n| `region` | configures the region to run the build. If WorkerPool is configured, the region will be deduced from the WorkerPool configuration. If neither WorkerPool nor Region is configured, the build will be run in global(non-regional). See [Cloud Build locations](https://cloud.google.com/build/docs/locations). | `` |\n| `platformEmulatorInstallStep` | specifies a pre-build step to install the required tooling for QEMU emulation on the GoogleCloudBuild containers. This enables performing cross-platform builds on GoogleCloudBuild. If unspecified, Skaffold uses the `docker/binfmt` image by default. | `` |\n| `serviceAccount` | Google Cloud platform service account used by Cloud Build. If unspecified, it defaults to the Cloud Build service account generated when the Cloud Build API is enabled. | `` |.\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/builders/build-environments/cloud-build", "title": "Google Cloud Build", "description": "Skaffold supports building remotely with Google Cloud Build.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:15:44", "type": "section_detail", "page_metadata": {"article:section": "docs", "twitter:card": "summary", "og:type": "article", "ogSiteName": "Skaffold", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:title": "Google Cloud Build", "title": "Google Cloud Build | Skaffold", "article:modified_time": "2025-01-23T10:14:58-05:00", "twitter:title": "Google Cloud Build", "ogUrl": "https://skaffold.dev/docs/builders/build-environments/cloud-build/", "language": "en", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "robots": "index, follow", "ogDescription": "Skaffold supports building remotely with Google Cloud Build.\nCloud Build is a Google Cloud Platform service that executes your builds using Google infrastructure. To get started with Cloud Build, see Cloud Build Quickstart.\nSkaffold automatically connects to Cloud Build and runs your builds with it. After Cloud Build finishes building your artifacts, they are saved to the specified remote registry, such as Google Container Registry.\nSkaffold’s Cloud Build process differs from the gcloud command gcloud builds submit.", "og:description": "Skaffold supports building remotely with Google Cloud Build.\nCloud Build is a Google Cloud Platform service that executes your builds using Google infrastructure. To get started with Cloud Build, see Cloud Build Quickstart.\nSkaffold automatically connects to Cloud Build and runs your builds with it. After Cloud Build finishes building your artifacts, they are saved to the specified remote registry, such as Google Container Registry.\nSkaffold’s Cloud Build process differs from the gcloud command gcloud builds submit.", "generator": "Hugo 0.99.1", "ogTitle": "Google Cloud Build", "description": "Skaffold supports building remotely with Google Cloud Build.\nCloud Build is a\nGoogle Cloud Platform service that executes\nyour builds using Google …", "og:url": "https://skaffold.dev/docs/builders/build-environments/cloud-build/", "og:site_name": "Skaffold", "twitter:description": "Skaffold supports building remotely with Google Cloud Build.\nCloud Build is a Google Cloud Platform service that executes your builds using Google infrastructure. To get started with Cloud Build, see Cloud Build Quickstart.\nSkaffold automatically connects to Cloud Build and runs your builds with it. After Cloud Build finishes building your artifacts, they are saved to the specified remote registry, such as Google Container Registry.\nSkaffold’s Cloud Build process differs from the gcloud command gcloud builds submit.", "scrapeId": "be3cb3d3-229e-4ebf-b2ea-1024d32f9c4d", "sourceURL": "https://skaffold.dev/docs/builders/build-environments/cloud-build", "url": "https://skaffold.dev/docs/builders/build-environments/cloud-build/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I faster builds in skaffold?\n\nAssistant: To faster builds in skaffold, here's what you do:\nBy default, Cloud Build (invoked by Skaffold) builds all artifacts in parallel. Set `concurrency` to a non-zero\nvalue to specify the maximum number of artifacts to build concurrently. Consider reducing `concurrency` if you\nhit a quota restriction.\n\n#### Note\n\nWhen Skaffold builds artifacts in parallel, it still prints the build logs in sequence to make them easier to read..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/builders/build-environments/cloud-build", "title": "Google Cloud Build", "description": "Skaffold supports building remotely with Google Cloud Build.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:15:44", "type": "section_detail", "page_metadata": {"article:section": "docs", "twitter:card": "summary", "og:type": "article", "ogSiteName": "Skaffold", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:title": "Google Cloud Build", "title": "Google Cloud Build | Skaffold", "article:modified_time": "2025-01-23T10:14:58-05:00", "twitter:title": "Google Cloud Build", "ogUrl": "https://skaffold.dev/docs/builders/build-environments/cloud-build/", "language": "en", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "robots": "index, follow", "ogDescription": "Skaffold supports building remotely with Google Cloud Build.\nCloud Build is a Google Cloud Platform service that executes your builds using Google infrastructure. To get started with Cloud Build, see Cloud Build Quickstart.\nSkaffold automatically connects to Cloud Build and runs your builds with it. After Cloud Build finishes building your artifacts, they are saved to the specified remote registry, such as Google Container Registry.\nSkaffold’s Cloud Build process differs from the gcloud command gcloud builds submit.", "og:description": "Skaffold supports building remotely with Google Cloud Build.\nCloud Build is a Google Cloud Platform service that executes your builds using Google infrastructure. To get started with Cloud Build, see Cloud Build Quickstart.\nSkaffold automatically connects to Cloud Build and runs your builds with it. After Cloud Build finishes building your artifacts, they are saved to the specified remote registry, such as Google Container Registry.\nSkaffold’s Cloud Build process differs from the gcloud command gcloud builds submit.", "generator": "Hugo 0.99.1", "ogTitle": "Google Cloud Build", "description": "Skaffold supports building remotely with Google Cloud Build.\nCloud Build is a\nGoogle Cloud Platform service that executes\nyour builds using Google …", "og:url": "https://skaffold.dev/docs/builders/build-environments/cloud-build/", "og:site_name": "Skaffold", "twitter:description": "Skaffold supports building remotely with Google Cloud Build.\nCloud Build is a Google Cloud Platform service that executes your builds using Google infrastructure. To get started with Cloud Build, see Cloud Build Quickstart.\nSkaffold automatically connects to Cloud Build and runs your builds with it. After Cloud Build finishes building your artifacts, they are saved to the specified remote registry, such as Google Container Registry.\nSkaffold’s Cloud Build process differs from the gcloud command gcloud builds submit.", "scrapeId": "be3cb3d3-229e-4ebf-b2ea-1024d32f9c4d", "sourceURL": "https://skaffold.dev/docs/builders/build-environments/cloud-build", "url": "https://skaffold.dev/docs/builders/build-environments/cloud-build/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I restrictions in skaffold?\n\nAssistant: To restrictions in skaffold, here's what you do:\nSkaffold currently supports the following [builder types](https://skaffold.dev/docs/builders/builder-types/)\nwhen building remotely with Cloud Build:\n\n- [Docker](https://skaffold.dev/docs/builders/builder-types/docker/#dockerfile-remotely-with-google-cloud-build)\n- [Jib](https://skaffold.dev/docs/builders/builder-types/jib/#remotely-with-google-cloud-build).\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/builders/build-environments/cloud-build", "title": "Google Cloud Build", "description": "Skaffold supports building remotely with Google Cloud Build.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:15:44", "type": "section_detail", "page_metadata": {"article:section": "docs", "twitter:card": "summary", "og:type": "article", "ogSiteName": "Skaffold", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:title": "Google Cloud Build", "title": "Google Cloud Build | Skaffold", "article:modified_time": "2025-01-23T10:14:58-05:00", "twitter:title": "Google Cloud Build", "ogUrl": "https://skaffold.dev/docs/builders/build-environments/cloud-build/", "language": "en", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "robots": "index, follow", "ogDescription": "Skaffold supports building remotely with Google Cloud Build.\nCloud Build is a Google Cloud Platform service that executes your builds using Google infrastructure. To get started with Cloud Build, see Cloud Build Quickstart.\nSkaffold automatically connects to Cloud Build and runs your builds with it. After Cloud Build finishes building your artifacts, they are saved to the specified remote registry, such as Google Container Registry.\nSkaffold’s Cloud Build process differs from the gcloud command gcloud builds submit.", "og:description": "Skaffold supports building remotely with Google Cloud Build.\nCloud Build is a Google Cloud Platform service that executes your builds using Google infrastructure. To get started with Cloud Build, see Cloud Build Quickstart.\nSkaffold automatically connects to Cloud Build and runs your builds with it. After Cloud Build finishes building your artifacts, they are saved to the specified remote registry, such as Google Container Registry.\nSkaffold’s Cloud Build process differs from the gcloud command gcloud builds submit.", "generator": "Hugo 0.99.1", "ogTitle": "Google Cloud Build", "description": "Skaffold supports building remotely with Google Cloud Build.\nCloud Build is a\nGoogle Cloud Platform service that executes\nyour builds using Google …", "og:url": "https://skaffold.dev/docs/builders/build-environments/cloud-build/", "og:site_name": "Skaffold", "twitter:description": "Skaffold supports building remotely with Google Cloud Build.\nCloud Build is a Google Cloud Platform service that executes your builds using Google infrastructure. To get started with Cloud Build, see Cloud Build Quickstart.\nSkaffold automatically connects to Cloud Build and runs your builds with it. After Cloud Build finishes building your artifacts, they are saved to the specified remote registry, such as Google Container Registry.\nSkaffold’s Cloud Build process differs from the gcloud command gcloud builds submit.", "scrapeId": "be3cb3d3-229e-4ebf-b2ea-1024d32f9c4d", "sourceURL": "https://skaffold.dev/docs/builders/build-environments/cloud-build", "url": "https://skaffold.dev/docs/builders/build-environments/cloud-build/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you give me some code examples for Google Cloud Build in skaffold?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Skaffold Configuration Example**:\n\n```yaml\n```yaml\nbuild:\n  googleCloudBuild: {}\n```\n```\n\nThis snippet shows you how to skaffold configuration example, which is an important aspect of google cloud build.\n\n", "metadata": {"source_url": "https://skaffold.dev/docs/builders/build-environments/cloud-build", "title": "Google Cloud Build", "description": "Skaffold supports building remotely with Google Cloud Build.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:15:44", "type": "code_examples", "page_metadata": {"article:section": "docs", "twitter:card": "summary", "og:type": "article", "ogSiteName": "Skaffold", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:title": "Google Cloud Build", "title": "Google Cloud Build | Skaffold", "article:modified_time": "2025-01-23T10:14:58-05:00", "twitter:title": "Google Cloud Build", "ogUrl": "https://skaffold.dev/docs/builders/build-environments/cloud-build/", "language": "en", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "robots": "index, follow", "ogDescription": "Skaffold supports building remotely with Google Cloud Build.\nCloud Build is a Google Cloud Platform service that executes your builds using Google infrastructure. To get started with Cloud Build, see Cloud Build Quickstart.\nSkaffold automatically connects to Cloud Build and runs your builds with it. After Cloud Build finishes building your artifacts, they are saved to the specified remote registry, such as Google Container Registry.\nSkaffold’s Cloud Build process differs from the gcloud command gcloud builds submit.", "og:description": "Skaffold supports building remotely with Google Cloud Build.\nCloud Build is a Google Cloud Platform service that executes your builds using Google infrastructure. To get started with Cloud Build, see Cloud Build Quickstart.\nSkaffold automatically connects to Cloud Build and runs your builds with it. After Cloud Build finishes building your artifacts, they are saved to the specified remote registry, such as Google Container Registry.\nSkaffold’s Cloud Build process differs from the gcloud command gcloud builds submit.", "generator": "Hugo 0.99.1", "ogTitle": "Google Cloud Build", "description": "Skaffold supports building remotely with Google Cloud Build.\nCloud Build is a\nGoogle Cloud Platform service that executes\nyour builds using Google …", "og:url": "https://skaffold.dev/docs/builders/build-environments/cloud-build/", "og:site_name": "Skaffold", "twitter:description": "Skaffold supports building remotely with Google Cloud Build.\nCloud Build is a Google Cloud Platform service that executes your builds using Google infrastructure. To get started with Cloud Build, see Cloud Build Quickstart.\nSkaffold automatically connects to Cloud Build and runs your builds with it. After Cloud Build finishes building your artifacts, they are saved to the specified remote registry, such as Google Container Registry.\nSkaffold’s Cloud Build process differs from the gcloud command gcloud builds submit.", "scrapeId": "be3cb3d3-229e-4ebf-b2ea-1024d32f9c4d", "sourceURL": "https://skaffold.dev/docs/builders/build-environments/cloud-build", "url": "https://skaffold.dev/docs/builders/build-environments/cloud-build/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: What are some tips for using Google Cloud Build in skaffold effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nSet `concurrency` to a non-zero value to specify the maximum number of artifacts to build concurrently. Consider reducing `concurrency` if you hit a quota restriction.\n\nWhen Skaffold builds artifacts in parallel, it still prints the build logs in sequence to make them easier to read.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://skaffold.dev/docs/builders/build-environments/cloud-build", "title": "Google Cloud Build", "description": "Skaffold supports building remotely with Google Cloud Build.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:15:44", "type": "best_practices", "page_metadata": {"article:section": "docs", "twitter:card": "summary", "og:type": "article", "ogSiteName": "Skaffold", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:title": "Google Cloud Build", "title": "Google Cloud Build | Skaffold", "article:modified_time": "2025-01-23T10:14:58-05:00", "twitter:title": "Google Cloud Build", "ogUrl": "https://skaffold.dev/docs/builders/build-environments/cloud-build/", "language": "en", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "robots": "index, follow", "ogDescription": "Skaffold supports building remotely with Google Cloud Build.\nCloud Build is a Google Cloud Platform service that executes your builds using Google infrastructure. To get started with Cloud Build, see Cloud Build Quickstart.\nSkaffold automatically connects to Cloud Build and runs your builds with it. After Cloud Build finishes building your artifacts, they are saved to the specified remote registry, such as Google Container Registry.\nSkaffold’s Cloud Build process differs from the gcloud command gcloud builds submit.", "og:description": "Skaffold supports building remotely with Google Cloud Build.\nCloud Build is a Google Cloud Platform service that executes your builds using Google infrastructure. To get started with Cloud Build, see Cloud Build Quickstart.\nSkaffold automatically connects to Cloud Build and runs your builds with it. After Cloud Build finishes building your artifacts, they are saved to the specified remote registry, such as Google Container Registry.\nSkaffold’s Cloud Build process differs from the gcloud command gcloud builds submit.", "generator": "Hugo 0.99.1", "ogTitle": "Google Cloud Build", "description": "Skaffold supports building remotely with Google Cloud Build.\nCloud Build is a\nGoogle Cloud Platform service that executes\nyour builds using Google …", "og:url": "https://skaffold.dev/docs/builders/build-environments/cloud-build/", "og:site_name": "Skaffold", "twitter:description": "Skaffold supports building remotely with Google Cloud Build.\nCloud Build is a Google Cloud Platform service that executes your builds using Google infrastructure. To get started with Cloud Build, see Cloud Build Quickstart.\nSkaffold automatically connects to Cloud Build and runs your builds with it. After Cloud Build finishes building your artifacts, they are saved to the specified remote registry, such as Google Container Registry.\nSkaffold’s Cloud Build process differs from the gcloud command gcloud builds submit.", "scrapeId": "be3cb3d3-229e-4ebf-b2ea-1024d32f9c4d", "sourceURL": "https://skaffold.dev/docs/builders/build-environments/cloud-build", "url": "https://skaffold.dev/docs/builders/build-environments/cloud-build/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what Sample Documentation Page is in skaffold?\n\nAssistant: Sure, I'd be happy to explain Sample Documentation Page in skaffold.\n\n# Sample Documentation Page\n\nThis page provides an overview of the sample documentation structure.Here's a quick rundown of what this is about:\n\n## Introduction\n\nThis section introduces the main concepts and objectives of the documentation.\n\n## Installation\n\nFollow these steps to install the software:\n1. Download the installer from the official website.\n2. Run the installer and follow the on-screen instructions.\n\n## Usage\n\nThis section explains how to use the software effectively.\n\n## Troubleshooting\n\nCommon issues and their solutions are discussed in this section.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/references/api-v2/grpc", "title": "Sample Documentation Page", "description": "This page provides an overview of the sample documentation structure.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:17:30", "type": "overview", "page_metadata": {"favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogUrl": "https://skaffold.dev/docs/references/api-v2/grpc/", "og:title": "gRPC API", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "description": "", "ogTitle": "gRPC API", "og:site_name": "Skaffold", "twitter:title": "gRPC API", "twitter:description": "This is a generated reference for the Skaffold API gRPC layer.\nWe also generate the reference doc for the HTTP layer.\n\nv2/skaffold.proto You can find the source for v2/skaffold.proto on Github.\nServices \nSkaffoldV2Service Describes all the methods for the Skaffold API\n   Method Name Request Type Response Type Description     GetState .google.protobuf.Empty State Returns the state of the current Skaffold execution   Events .", "og:description": "This is a generated reference for the Skaffold API gRPC layer.\nWe also generate the reference doc for the HTTP layer.\n\nv2/skaffold.proto You can find the source for v2/skaffold.proto on Github.\nServices \nSkaffoldV2Service Describes all the methods for the Skaffold API\n   Method Name Request Type Response Type Description     GetState .google.protobuf.Empty State Returns the state of the current Skaffold execution   Events .", "article:modified_time": "2025-01-23T10:14:58-05:00", "ogSiteName": "Skaffold", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:type": "article", "article:section": "docs", "robots": "index, follow", "title": "gRPC API | Skaffold", "twitter:card": "summary", "ogDescription": "This is a generated reference for the Skaffold API gRPC layer.\nWe also generate the reference doc for the HTTP layer.\n\nv2/skaffold.proto You can find the source for v2/skaffold.proto on Github.\nServices \nSkaffoldV2Service Describes all the methods for the Skaffold API\n   Method Name Request Type Response Type Description     GetState .google.protobuf.Empty State Returns the state of the current Skaffold execution   Events .", "language": "en", "generator": "Hugo 0.99.1", "og:url": "https://skaffold.dev/docs/references/api-v2/grpc/", "scrapeId": "287da511-cdb3-48bf-86d0-3b52b8347db0", "sourceURL": "https://skaffold.dev/docs/references/api-v2/grpc", "url": "https://skaffold.dev/docs/references/api-v2/grpc/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I introduction in skaffold?\n\nAssistant: To introduction in skaffold, here's what you do:\nThis section introduces the main concepts and objectives of the documentation..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/api-v2/grpc", "title": "Sample Documentation Page", "description": "This page provides an overview of the sample documentation structure.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:17:30", "type": "section_detail", "page_metadata": {"favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogUrl": "https://skaffold.dev/docs/references/api-v2/grpc/", "og:title": "gRPC API", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "description": "", "ogTitle": "gRPC API", "og:site_name": "Skaffold", "twitter:title": "gRPC API", "twitter:description": "This is a generated reference for the Skaffold API gRPC layer.\nWe also generate the reference doc for the HTTP layer.\n\nv2/skaffold.proto You can find the source for v2/skaffold.proto on Github.\nServices \nSkaffoldV2Service Describes all the methods for the Skaffold API\n   Method Name Request Type Response Type Description     GetState .google.protobuf.Empty State Returns the state of the current Skaffold execution   Events .", "og:description": "This is a generated reference for the Skaffold API gRPC layer.\nWe also generate the reference doc for the HTTP layer.\n\nv2/skaffold.proto You can find the source for v2/skaffold.proto on Github.\nServices \nSkaffoldV2Service Describes all the methods for the Skaffold API\n   Method Name Request Type Response Type Description     GetState .google.protobuf.Empty State Returns the state of the current Skaffold execution   Events .", "article:modified_time": "2025-01-23T10:14:58-05:00", "ogSiteName": "Skaffold", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:type": "article", "article:section": "docs", "robots": "index, follow", "title": "gRPC API | Skaffold", "twitter:card": "summary", "ogDescription": "This is a generated reference for the Skaffold API gRPC layer.\nWe also generate the reference doc for the HTTP layer.\n\nv2/skaffold.proto You can find the source for v2/skaffold.proto on Github.\nServices \nSkaffoldV2Service Describes all the methods for the Skaffold API\n   Method Name Request Type Response Type Description     GetState .google.protobuf.Empty State Returns the state of the current Skaffold execution   Events .", "language": "en", "generator": "Hugo 0.99.1", "og:url": "https://skaffold.dev/docs/references/api-v2/grpc/", "scrapeId": "287da511-cdb3-48bf-86d0-3b52b8347db0", "sourceURL": "https://skaffold.dev/docs/references/api-v2/grpc", "url": "https://skaffold.dev/docs/references/api-v2/grpc/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I installation in skaffold?\n\nAssistant: To installation in skaffold, here's what you do:\nFollow these steps to install the software:\n1. Download the installer from the official website.\n2. Run the installer and follow the on-screen instructions..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/api-v2/grpc", "title": "Sample Documentation Page", "description": "This page provides an overview of the sample documentation structure.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:17:30", "type": "section_detail", "page_metadata": {"favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogUrl": "https://skaffold.dev/docs/references/api-v2/grpc/", "og:title": "gRPC API", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "description": "", "ogTitle": "gRPC API", "og:site_name": "Skaffold", "twitter:title": "gRPC API", "twitter:description": "This is a generated reference for the Skaffold API gRPC layer.\nWe also generate the reference doc for the HTTP layer.\n\nv2/skaffold.proto You can find the source for v2/skaffold.proto on Github.\nServices \nSkaffoldV2Service Describes all the methods for the Skaffold API\n   Method Name Request Type Response Type Description     GetState .google.protobuf.Empty State Returns the state of the current Skaffold execution   Events .", "og:description": "This is a generated reference for the Skaffold API gRPC layer.\nWe also generate the reference doc for the HTTP layer.\n\nv2/skaffold.proto You can find the source for v2/skaffold.proto on Github.\nServices \nSkaffoldV2Service Describes all the methods for the Skaffold API\n   Method Name Request Type Response Type Description     GetState .google.protobuf.Empty State Returns the state of the current Skaffold execution   Events .", "article:modified_time": "2025-01-23T10:14:58-05:00", "ogSiteName": "Skaffold", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:type": "article", "article:section": "docs", "robots": "index, follow", "title": "gRPC API | Skaffold", "twitter:card": "summary", "ogDescription": "This is a generated reference for the Skaffold API gRPC layer.\nWe also generate the reference doc for the HTTP layer.\n\nv2/skaffold.proto You can find the source for v2/skaffold.proto on Github.\nServices \nSkaffoldV2Service Describes all the methods for the Skaffold API\n   Method Name Request Type Response Type Description     GetState .google.protobuf.Empty State Returns the state of the current Skaffold execution   Events .", "language": "en", "generator": "Hugo 0.99.1", "og:url": "https://skaffold.dev/docs/references/api-v2/grpc/", "scrapeId": "287da511-cdb3-48bf-86d0-3b52b8347db0", "sourceURL": "https://skaffold.dev/docs/references/api-v2/grpc", "url": "https://skaffold.dev/docs/references/api-v2/grpc/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I usage in skaffold?\n\nAssistant: To usage in skaffold, here's what you do:\nThis section explains how to use the software effectively..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/api-v2/grpc", "title": "Sample Documentation Page", "description": "This page provides an overview of the sample documentation structure.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:17:30", "type": "section_detail", "page_metadata": {"favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogUrl": "https://skaffold.dev/docs/references/api-v2/grpc/", "og:title": "gRPC API", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "description": "", "ogTitle": "gRPC API", "og:site_name": "Skaffold", "twitter:title": "gRPC API", "twitter:description": "This is a generated reference for the Skaffold API gRPC layer.\nWe also generate the reference doc for the HTTP layer.\n\nv2/skaffold.proto You can find the source for v2/skaffold.proto on Github.\nServices \nSkaffoldV2Service Describes all the methods for the Skaffold API\n   Method Name Request Type Response Type Description     GetState .google.protobuf.Empty State Returns the state of the current Skaffold execution   Events .", "og:description": "This is a generated reference for the Skaffold API gRPC layer.\nWe also generate the reference doc for the HTTP layer.\n\nv2/skaffold.proto You can find the source for v2/skaffold.proto on Github.\nServices \nSkaffoldV2Service Describes all the methods for the Skaffold API\n   Method Name Request Type Response Type Description     GetState .google.protobuf.Empty State Returns the state of the current Skaffold execution   Events .", "article:modified_time": "2025-01-23T10:14:58-05:00", "ogSiteName": "Skaffold", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:type": "article", "article:section": "docs", "robots": "index, follow", "title": "gRPC API | Skaffold", "twitter:card": "summary", "ogDescription": "This is a generated reference for the Skaffold API gRPC layer.\nWe also generate the reference doc for the HTTP layer.\n\nv2/skaffold.proto You can find the source for v2/skaffold.proto on Github.\nServices \nSkaffoldV2Service Describes all the methods for the Skaffold API\n   Method Name Request Type Response Type Description     GetState .google.protobuf.Empty State Returns the state of the current Skaffold execution   Events .", "language": "en", "generator": "Hugo 0.99.1", "og:url": "https://skaffold.dev/docs/references/api-v2/grpc/", "scrapeId": "287da511-cdb3-48bf-86d0-3b52b8347db0", "sourceURL": "https://skaffold.dev/docs/references/api-v2/grpc", "url": "https://skaffold.dev/docs/references/api-v2/grpc/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I troubleshooting in skaffold?\n\nAssistant: To troubleshooting in skaffold, here's what you do:\nCommon issues and their solutions are discussed in this section..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/api-v2/grpc", "title": "Sample Documentation Page", "description": "This page provides an overview of the sample documentation structure.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:17:30", "type": "section_detail", "page_metadata": {"favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogUrl": "https://skaffold.dev/docs/references/api-v2/grpc/", "og:title": "gRPC API", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "description": "", "ogTitle": "gRPC API", "og:site_name": "Skaffold", "twitter:title": "gRPC API", "twitter:description": "This is a generated reference for the Skaffold API gRPC layer.\nWe also generate the reference doc for the HTTP layer.\n\nv2/skaffold.proto You can find the source for v2/skaffold.proto on Github.\nServices \nSkaffoldV2Service Describes all the methods for the Skaffold API\n   Method Name Request Type Response Type Description     GetState .google.protobuf.Empty State Returns the state of the current Skaffold execution   Events .", "og:description": "This is a generated reference for the Skaffold API gRPC layer.\nWe also generate the reference doc for the HTTP layer.\n\nv2/skaffold.proto You can find the source for v2/skaffold.proto on Github.\nServices \nSkaffoldV2Service Describes all the methods for the Skaffold API\n   Method Name Request Type Response Type Description     GetState .google.protobuf.Empty State Returns the state of the current Skaffold execution   Events .", "article:modified_time": "2025-01-23T10:14:58-05:00", "ogSiteName": "Skaffold", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:type": "article", "article:section": "docs", "robots": "index, follow", "title": "gRPC API | Skaffold", "twitter:card": "summary", "ogDescription": "This is a generated reference for the Skaffold API gRPC layer.\nWe also generate the reference doc for the HTTP layer.\n\nv2/skaffold.proto You can find the source for v2/skaffold.proto on Github.\nServices \nSkaffoldV2Service Describes all the methods for the Skaffold API\n   Method Name Request Type Response Type Description     GetState .google.protobuf.Empty State Returns the state of the current Skaffold execution   Events .", "language": "en", "generator": "Hugo 0.99.1", "og:url": "https://skaffold.dev/docs/references/api-v2/grpc/", "scrapeId": "287da511-cdb3-48bf-86d0-3b52b8347db0", "sourceURL": "https://skaffold.dev/docs/references/api-v2/grpc", "url": "https://skaffold.dev/docs/references/api-v2/grpc/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you give me some code examples for Sample Documentation Page in skaffold?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Basic Installation Command**:\n\n```yaml\n$ sudo apt-get install sample-software\n```\n\nThis snippet shows you how to basic installation command, which is an important aspect of sample documentation page.\n\n**Configuration Example**:\n\n```yaml\n{\n  \"setting1\": \"value1\",\n  \"setting2\": \"value2\"\n}\n```\n\nThis snippet shows you how to configuration example, which is an important aspect of sample documentation page.\n\n", "metadata": {"source_url": "https://skaffold.dev/docs/references/api-v2/grpc", "title": "Sample Documentation Page", "description": "This page provides an overview of the sample documentation structure.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:17:30", "type": "code_examples", "page_metadata": {"favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogUrl": "https://skaffold.dev/docs/references/api-v2/grpc/", "og:title": "gRPC API", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "description": "", "ogTitle": "gRPC API", "og:site_name": "Skaffold", "twitter:title": "gRPC API", "twitter:description": "This is a generated reference for the Skaffold API gRPC layer.\nWe also generate the reference doc for the HTTP layer.\n\nv2/skaffold.proto You can find the source for v2/skaffold.proto on Github.\nServices \nSkaffoldV2Service Describes all the methods for the Skaffold API\n   Method Name Request Type Response Type Description     GetState .google.protobuf.Empty State Returns the state of the current Skaffold execution   Events .", "og:description": "This is a generated reference for the Skaffold API gRPC layer.\nWe also generate the reference doc for the HTTP layer.\n\nv2/skaffold.proto You can find the source for v2/skaffold.proto on Github.\nServices \nSkaffoldV2Service Describes all the methods for the Skaffold API\n   Method Name Request Type Response Type Description     GetState .google.protobuf.Empty State Returns the state of the current Skaffold execution   Events .", "article:modified_time": "2025-01-23T10:14:58-05:00", "ogSiteName": "Skaffold", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:type": "article", "article:section": "docs", "robots": "index, follow", "title": "gRPC API | Skaffold", "twitter:card": "summary", "ogDescription": "This is a generated reference for the Skaffold API gRPC layer.\nWe also generate the reference doc for the HTTP layer.\n\nv2/skaffold.proto You can find the source for v2/skaffold.proto on Github.\nServices \nSkaffoldV2Service Describes all the methods for the Skaffold API\n   Method Name Request Type Response Type Description     GetState .google.protobuf.Empty State Returns the state of the current Skaffold execution   Events .", "language": "en", "generator": "Hugo 0.99.1", "og:url": "https://skaffold.dev/docs/references/api-v2/grpc/", "scrapeId": "287da511-cdb3-48bf-86d0-3b52b8347db0", "sourceURL": "https://skaffold.dev/docs/references/api-v2/grpc", "url": "https://skaffold.dev/docs/references/api-v2/grpc/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: What are some tips for using Sample Documentation Page in skaffold effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nAlways read the installation instructions carefully.\n\nKeep your software updated to the latest version.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://skaffold.dev/docs/references/api-v2/grpc", "title": "Sample Documentation Page", "description": "This page provides an overview of the sample documentation structure.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:17:30", "type": "best_practices", "page_metadata": {"favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogUrl": "https://skaffold.dev/docs/references/api-v2/grpc/", "og:title": "gRPC API", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "description": "", "ogTitle": "gRPC API", "og:site_name": "Skaffold", "twitter:title": "gRPC API", "twitter:description": "This is a generated reference for the Skaffold API gRPC layer.\nWe also generate the reference doc for the HTTP layer.\n\nv2/skaffold.proto You can find the source for v2/skaffold.proto on Github.\nServices \nSkaffoldV2Service Describes all the methods for the Skaffold API\n   Method Name Request Type Response Type Description     GetState .google.protobuf.Empty State Returns the state of the current Skaffold execution   Events .", "og:description": "This is a generated reference for the Skaffold API gRPC layer.\nWe also generate the reference doc for the HTTP layer.\n\nv2/skaffold.proto You can find the source for v2/skaffold.proto on Github.\nServices \nSkaffoldV2Service Describes all the methods for the Skaffold API\n   Method Name Request Type Response Type Description     GetState .google.protobuf.Empty State Returns the state of the current Skaffold execution   Events .", "article:modified_time": "2025-01-23T10:14:58-05:00", "ogSiteName": "Skaffold", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:type": "article", "article:section": "docs", "robots": "index, follow", "title": "gRPC API | Skaffold", "twitter:card": "summary", "ogDescription": "This is a generated reference for the Skaffold API gRPC layer.\nWe also generate the reference doc for the HTTP layer.\n\nv2/skaffold.proto You can find the source for v2/skaffold.proto on Github.\nServices \nSkaffoldV2Service Describes all the methods for the Skaffold API\n   Method Name Request Type Response Type Description     GetState .google.protobuf.Empty State Returns the state of the current Skaffold execution   Events .", "language": "en", "generator": "Hugo 0.99.1", "og:url": "https://skaffold.dev/docs/references/api-v2/grpc/", "scrapeId": "287da511-cdb3-48bf-86d0-3b52b8347db0", "sourceURL": "https://skaffold.dev/docs/references/api-v2/grpc", "url": "https://skaffold.dev/docs/references/api-v2/grpc/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what gRPC API is in skaffold?\n\nAssistant: Sure, I'd be happy to explain gRPC API in skaffold.\n\n# gRPC API\n\nThis is a generated reference for the Skaffold API gRPC layer.Here's a quick rundown of what this is about:\n\n## v1/skaffold.proto\n\nYou can find the source for v1/skaffold.proto on Github.\n\n## Services\n\nDescribes all the methods for the Skaffold API\n\n| Method Name | Request Type | Response Type | Description |\n| --- | --- | --- | --- |\n| GetState | [.google.protobuf.Empty](https://skaffold.dev/docs/references/api/grpc/#google.protobuf.Empty) | [State](https://skaffold.dev/docs/references/api/grpc/#proto.State) | Returns the state of the current Skaffold execution |\n| EventLog | [LogEntry](https://skaffold.dev/docs/references/api/grpc/#proto.LogEntry) stream | [LogEntry](https://skaffold.dev/docs/references/api/grpc/#proto.LogEntry) stream | DEPRECATED. Events should be used instead. TODO remove ( [https://github.com/GoogleContainerTools/skaffold/issues/3168](https://github.com/GoogleContainerTools/skaffold/issues/3168)) |\n| Events | [.google.protobuf.Empty](https://skaffold.dev/docs/references/api/grpc/#google.protobuf.Empty) | [LogEntry](https://skaffold.dev/docs/references/api/grpc/#proto.LogEntry) stream | Returns all the events of the current Skaffold execution from the start |\n| Execute | [UserIntentRequest](https://skaffold.dev/docs/references/api/grpc/#proto.UserIntentRequest) | [.google.protobuf.Empty](https://skaffold.dev/docs/references/api/grpc/#google.protobuf.Empty) | Allows for a single execution of some or all of the phases (build, sync, deploy) in case autoBuild, autoDeploy or autoSync are disabled. |\n| AutoBuild | [TriggerRequest](https://skaffold.dev/docs/references/api/grpc/#proto.TriggerRequest) | [.google.protobuf.Empty](https://skaffold.dev/docs/references/api/grpc/#google.protobuf.Empty) | Allows for enabling or disabling automatic build trigger |\n| AutoSync | [TriggerRequest](https://skaffold.dev/docs/references/api/grpc/#proto.TriggerRequest) | [.google.protobuf.Empty](https://skaffold.dev/docs/references/api/grpc/#google.protobuf.Empty) | Allows for enabling or disabling automatic sync trigger |\n| AutoDeploy | [TriggerRequest](https://skaffold.dev/docs/references/api/grpc/#proto.TriggerRequest) | [.google.protobuf.Empty](https://skaffold.dev/docs/references/api/grpc/#google.protobuf.Empty) | Allows for enabling or disabling automatic deploy trigger |\n| Handle | [Event](https://skaffold.dev/docs/references/api/grpc/#proto.Event) | [.google.protobuf.Empty](https://skaffold.dev/docs/references/api/grpc/#google.protobuf.Empty) | EXPERIMENTAL. It allows for custom events to be implemented in custom builders for example.\n\n## Data types\n\nVarious data types used in the Skaffold API.\n\n## ActionableErr\n\n`ActionableErr` defines an error that occurred along with an optional list of suggestions\n\n| Field | Type | Label | Description |\n| --- | --- | --- | --- |\n| errCode | [enums.StatusCode](https://skaffold.dev/docs/references/api/grpc/#proto.enums.StatusCode) |  | error code representing the error |\n| message | [string](https://skaffold.dev/docs/references/api/grpc/#string) |  | message describing the error. |\n| suggestions | [Suggestion](https://skaffold.dev/docs/references/api/grpc/#proto.Suggestion) | repeated | list of suggestions |\n\n## BuildEvent\n\n`BuildEvent` describes the build status per artifact, and will be emitted by Skaffold anytime a build starts or finishes, successfully or not.\nIf the build fails, an error will be attached to the event.\n\n| Field | Type | Label | Description |\n| --- | --- | --- | --- |\n| artifact | [string](https://skaffold.dev/docs/references/api/grpc/#string) |  | artifact name |\n| status | [string](https://skaffold.dev/docs/references/api/grpc/#string) |  | artifact build status oneof: InProgress, Completed, Failed |\n| err | [string](https://skaffold.dev/docs/references/api/grpc/#string) |  | Deprecated. Use actionableErr.message. error when build status is Failed. |\n| errCode | [enums.StatusCode](https://skaffold.dev/docs/references/api/grpc/#proto.enums.StatusCode) |  | Deprecated. Use actionableErr.errCode. status code representing success or failure |\n| actionableErr | [ActionableErr](https://skaffold.dev/docs/references/api/grpc/#proto.ActionableErr) |  | actionable error message |\n| hostPlatform | [string](https://skaffold.dev/docs/references/api/grpc/#string) |  | architecture of the host machine. For example `linux/amd64` |\n| targetPlatforms | [string](https://skaffold.dev/docs/references/api/grpc/#string) |  | comma-delimited list of build target architectures. For example `linux/amd64,linux/arm64` |\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/references/api/grpc", "title": "gRPC API", "description": "This is a generated reference for the Skaffold API gRPC layer.", "has_code_examples": false, "has_best_practices": false, "section_count": 5, "timestamp": "2025-03-01 03:18:20", "type": "overview", "page_metadata": {"language": "en", "robots": "index, follow", "og:title": "gRPC API", "ogUrl": "https://skaffold.dev/docs/references/api/grpc/", "title": "gRPC API | Skaffold", "og:site_name": "Skaffold", "description": "", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "twitter:title": "gRPC API", "og:type": "article", "article:section": "docs", "ogDescription": "This is a generated reference for the Skaffold API gRPC layer.\nWe also generate the reference doc for the HTTP layer.\n\nv1/skaffold.proto You can find the source for v1/skaffold.proto on Github.\nServices \nSkaffoldService Describes all the methods for the Skaffold API\n   Method Name Request Type Response Type Description     GetState .google.protobuf.Empty State Returns the state of the current Skaffold execution   EventLog LogEntry stream LogEntry stream DEPRECATED.", "og:description": "This is a generated reference for the Skaffold API gRPC layer.\nWe also generate the reference doc for the HTTP layer.\n\nv1/skaffold.proto You can find the source for v1/skaffold.proto on Github.\nServices \nSkaffoldService Describes all the methods for the Skaffold API\n   Method Name Request Type Response Type Description     GetState .google.protobuf.Empty State Returns the state of the current Skaffold execution   EventLog LogEntry stream LogEntry stream DEPRECATED.", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:url": "https://skaffold.dev/docs/references/api/grpc/", "ogTitle": "gRPC API", "twitter:description": "This is a generated reference for the Skaffold API gRPC layer.\nWe also generate the reference doc for the HTTP layer.\n\nv1/skaffold.proto You can find the source for v1/skaffold.proto on Github.\nServices \nSkaffoldService Describes all the methods for the Skaffold API\n   Method Name Request Type Response Type Description     GetState .google.protobuf.Empty State Returns the state of the current Skaffold execution   EventLog LogEntry stream LogEntry stream DEPRECATED.", "article:modified_time": "2025-01-23T10:14:58-05:00", "ogSiteName": "Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "twitter:card": "summary", "generator": "Hugo 0.99.1", "scrapeId": "14a982dd-7bab-4b7a-aef4-155a2c289d9e", "sourceURL": "https://skaffold.dev/docs/references/api/grpc", "url": "https://skaffold.dev/docs/references/api/grpc/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I v1/skaffold.proto in skaffold?\n\nAssistant: To v1/skaffold.proto in skaffold, here's what you do:\nYou can find the source for v1/skaffold.proto on Github..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/api/grpc", "title": "gRPC API", "description": "This is a generated reference for the Skaffold API gRPC layer.", "has_code_examples": false, "has_best_practices": false, "section_count": 5, "timestamp": "2025-03-01 03:18:20", "type": "section_detail", "page_metadata": {"language": "en", "robots": "index, follow", "og:title": "gRPC API", "ogUrl": "https://skaffold.dev/docs/references/api/grpc/", "title": "gRPC API | Skaffold", "og:site_name": "Skaffold", "description": "", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "twitter:title": "gRPC API", "og:type": "article", "article:section": "docs", "ogDescription": "This is a generated reference for the Skaffold API gRPC layer.\nWe also generate the reference doc for the HTTP layer.\n\nv1/skaffold.proto You can find the source for v1/skaffold.proto on Github.\nServices \nSkaffoldService Describes all the methods for the Skaffold API\n   Method Name Request Type Response Type Description     GetState .google.protobuf.Empty State Returns the state of the current Skaffold execution   EventLog LogEntry stream LogEntry stream DEPRECATED.", "og:description": "This is a generated reference for the Skaffold API gRPC layer.\nWe also generate the reference doc for the HTTP layer.\n\nv1/skaffold.proto You can find the source for v1/skaffold.proto on Github.\nServices \nSkaffoldService Describes all the methods for the Skaffold API\n   Method Name Request Type Response Type Description     GetState .google.protobuf.Empty State Returns the state of the current Skaffold execution   EventLog LogEntry stream LogEntry stream DEPRECATED.", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:url": "https://skaffold.dev/docs/references/api/grpc/", "ogTitle": "gRPC API", "twitter:description": "This is a generated reference for the Skaffold API gRPC layer.\nWe also generate the reference doc for the HTTP layer.\n\nv1/skaffold.proto You can find the source for v1/skaffold.proto on Github.\nServices \nSkaffoldService Describes all the methods for the Skaffold API\n   Method Name Request Type Response Type Description     GetState .google.protobuf.Empty State Returns the state of the current Skaffold execution   EventLog LogEntry stream LogEntry stream DEPRECATED.", "article:modified_time": "2025-01-23T10:14:58-05:00", "ogSiteName": "Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "twitter:card": "summary", "generator": "Hugo 0.99.1", "scrapeId": "14a982dd-7bab-4b7a-aef4-155a2c289d9e", "sourceURL": "https://skaffold.dev/docs/references/api/grpc", "url": "https://skaffold.dev/docs/references/api/grpc/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I services in skaffold?\n\nAssistant: To services in skaffold, here's what you do:\nDescribes all the methods for the Skaffold API\n\n| Method Name | Request Type | Response Type | Description |\n| --- | --- | --- | --- |\n| GetState | [.google.protobuf.Empty](https://skaffold.dev/docs/references/api/grpc/#google.protobuf.Empty) | [State](https://skaffold.dev/docs/references/api/grpc/#proto.State) | Returns the state of the current Skaffold execution |\n| EventLog | [LogEntry](https://skaffold.dev/docs/references/api/grpc/#proto.LogEntry) stream | [LogEntry](https://skaffold.dev/docs/references/api/grpc/#proto.LogEntry) stream | DEPRECATED. Events should be used instead. TODO remove ( [https://github.com/GoogleContainerTools/skaffold/issues/3168](https://github.com/GoogleContainerTools/skaffold/issues/3168)) |\n| Events | [.google.protobuf.Empty](https://skaffold.dev/docs/references/api/grpc/#google.protobuf.Empty) | [LogEntry](https://skaffold.dev/docs/references/api/grpc/#proto.LogEntry) stream | Returns all the events of the current Skaffold execution from the start |\n| Execute | [UserIntentRequest](https://skaffold.dev/docs/references/api/grpc/#proto.UserIntentRequest) | [.google.protobuf.Empty](https://skaffold.dev/docs/references/api/grpc/#google.protobuf.Empty) | Allows for a single execution of some or all of the phases (build, sync, deploy) in case autoBuild, autoDeploy or autoSync are disabled. |\n| AutoBuild | [TriggerRequest](https://skaffold.dev/docs/references/api/grpc/#proto.TriggerRequest) | [.google.protobuf.Empty](https://skaffold.dev/docs/references/api/grpc/#google.protobuf.Empty) | Allows for enabling or disabling automatic build trigger |\n| AutoSync | [TriggerRequest](https://skaffold.dev/docs/references/api/grpc/#proto.TriggerRequest) | [.google.protobuf.Empty](https://skaffold.dev/docs/references/api/grpc/#google.protobuf.Empty) | Allows for enabling or disabling automatic sync trigger |\n| AutoDeploy | [TriggerRequest](https://skaffold.dev/docs/references/api/grpc/#proto.TriggerRequest) | [.google.protobuf.Empty](https://skaffold.dev/docs/references/api/grpc/#google.protobuf.Empty) | Allows for enabling or disabling automatic deploy trigger |\n| Handle | [Event](https://skaffold.dev/docs/references/api/grpc/#proto.Event) | [.google.protobuf.Empty](https://skaffold.dev/docs/references/api/grpc/#google.protobuf.Empty) | EXPERIMENTAL. It allows for custom events to be implemented in custom builders for example..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/api/grpc", "title": "gRPC API", "description": "This is a generated reference for the Skaffold API gRPC layer.", "has_code_examples": false, "has_best_practices": false, "section_count": 5, "timestamp": "2025-03-01 03:18:20", "type": "section_detail", "page_metadata": {"language": "en", "robots": "index, follow", "og:title": "gRPC API", "ogUrl": "https://skaffold.dev/docs/references/api/grpc/", "title": "gRPC API | Skaffold", "og:site_name": "Skaffold", "description": "", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "twitter:title": "gRPC API", "og:type": "article", "article:section": "docs", "ogDescription": "This is a generated reference for the Skaffold API gRPC layer.\nWe also generate the reference doc for the HTTP layer.\n\nv1/skaffold.proto You can find the source for v1/skaffold.proto on Github.\nServices \nSkaffoldService Describes all the methods for the Skaffold API\n   Method Name Request Type Response Type Description     GetState .google.protobuf.Empty State Returns the state of the current Skaffold execution   EventLog LogEntry stream LogEntry stream DEPRECATED.", "og:description": "This is a generated reference for the Skaffold API gRPC layer.\nWe also generate the reference doc for the HTTP layer.\n\nv1/skaffold.proto You can find the source for v1/skaffold.proto on Github.\nServices \nSkaffoldService Describes all the methods for the Skaffold API\n   Method Name Request Type Response Type Description     GetState .google.protobuf.Empty State Returns the state of the current Skaffold execution   EventLog LogEntry stream LogEntry stream DEPRECATED.", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:url": "https://skaffold.dev/docs/references/api/grpc/", "ogTitle": "gRPC API", "twitter:description": "This is a generated reference for the Skaffold API gRPC layer.\nWe also generate the reference doc for the HTTP layer.\n\nv1/skaffold.proto You can find the source for v1/skaffold.proto on Github.\nServices \nSkaffoldService Describes all the methods for the Skaffold API\n   Method Name Request Type Response Type Description     GetState .google.protobuf.Empty State Returns the state of the current Skaffold execution   EventLog LogEntry stream LogEntry stream DEPRECATED.", "article:modified_time": "2025-01-23T10:14:58-05:00", "ogSiteName": "Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "twitter:card": "summary", "generator": "Hugo 0.99.1", "scrapeId": "14a982dd-7bab-4b7a-aef4-155a2c289d9e", "sourceURL": "https://skaffold.dev/docs/references/api/grpc", "url": "https://skaffold.dev/docs/references/api/grpc/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I data types in skaffold?\n\nAssistant: To data types in skaffold, here's what you do:\nVarious data types used in the Skaffold API..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/api/grpc", "title": "gRPC API", "description": "This is a generated reference for the Skaffold API gRPC layer.", "has_code_examples": false, "has_best_practices": false, "section_count": 5, "timestamp": "2025-03-01 03:18:20", "type": "section_detail", "page_metadata": {"language": "en", "robots": "index, follow", "og:title": "gRPC API", "ogUrl": "https://skaffold.dev/docs/references/api/grpc/", "title": "gRPC API | Skaffold", "og:site_name": "Skaffold", "description": "", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "twitter:title": "gRPC API", "og:type": "article", "article:section": "docs", "ogDescription": "This is a generated reference for the Skaffold API gRPC layer.\nWe also generate the reference doc for the HTTP layer.\n\nv1/skaffold.proto You can find the source for v1/skaffold.proto on Github.\nServices \nSkaffoldService Describes all the methods for the Skaffold API\n   Method Name Request Type Response Type Description     GetState .google.protobuf.Empty State Returns the state of the current Skaffold execution   EventLog LogEntry stream LogEntry stream DEPRECATED.", "og:description": "This is a generated reference for the Skaffold API gRPC layer.\nWe also generate the reference doc for the HTTP layer.\n\nv1/skaffold.proto You can find the source for v1/skaffold.proto on Github.\nServices \nSkaffoldService Describes all the methods for the Skaffold API\n   Method Name Request Type Response Type Description     GetState .google.protobuf.Empty State Returns the state of the current Skaffold execution   EventLog LogEntry stream LogEntry stream DEPRECATED.", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:url": "https://skaffold.dev/docs/references/api/grpc/", "ogTitle": "gRPC API", "twitter:description": "This is a generated reference for the Skaffold API gRPC layer.\nWe also generate the reference doc for the HTTP layer.\n\nv1/skaffold.proto You can find the source for v1/skaffold.proto on Github.\nServices \nSkaffoldService Describes all the methods for the Skaffold API\n   Method Name Request Type Response Type Description     GetState .google.protobuf.Empty State Returns the state of the current Skaffold execution   EventLog LogEntry stream LogEntry stream DEPRECATED.", "article:modified_time": "2025-01-23T10:14:58-05:00", "ogSiteName": "Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "twitter:card": "summary", "generator": "Hugo 0.99.1", "scrapeId": "14a982dd-7bab-4b7a-aef4-155a2c289d9e", "sourceURL": "https://skaffold.dev/docs/references/api/grpc", "url": "https://skaffold.dev/docs/references/api/grpc/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I actionableerr in skaffold?\n\nAssistant: To actionableerr in skaffold, here's what you do:\n`ActionableErr` defines an error that occurred along with an optional list of suggestions\n\n| Field | Type | Label | Description |\n| --- | --- | --- | --- |\n| errCode | [enums.StatusCode](https://skaffold.dev/docs/references/api/grpc/#proto.enums.StatusCode) |  | error code representing the error |\n| message | [string](https://skaffold.dev/docs/references/api/grpc/#string) |  | message describing the error. |\n| suggestions | [Suggestion](https://skaffold.dev/docs/references/api/grpc/#proto.Suggestion) | repeated | list of suggestions |.\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/api/grpc", "title": "gRPC API", "description": "This is a generated reference for the Skaffold API gRPC layer.", "has_code_examples": false, "has_best_practices": false, "section_count": 5, "timestamp": "2025-03-01 03:18:20", "type": "section_detail", "page_metadata": {"language": "en", "robots": "index, follow", "og:title": "gRPC API", "ogUrl": "https://skaffold.dev/docs/references/api/grpc/", "title": "gRPC API | Skaffold", "og:site_name": "Skaffold", "description": "", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "twitter:title": "gRPC API", "og:type": "article", "article:section": "docs", "ogDescription": "This is a generated reference for the Skaffold API gRPC layer.\nWe also generate the reference doc for the HTTP layer.\n\nv1/skaffold.proto You can find the source for v1/skaffold.proto on Github.\nServices \nSkaffoldService Describes all the methods for the Skaffold API\n   Method Name Request Type Response Type Description     GetState .google.protobuf.Empty State Returns the state of the current Skaffold execution   EventLog LogEntry stream LogEntry stream DEPRECATED.", "og:description": "This is a generated reference for the Skaffold API gRPC layer.\nWe also generate the reference doc for the HTTP layer.\n\nv1/skaffold.proto You can find the source for v1/skaffold.proto on Github.\nServices \nSkaffoldService Describes all the methods for the Skaffold API\n   Method Name Request Type Response Type Description     GetState .google.protobuf.Empty State Returns the state of the current Skaffold execution   EventLog LogEntry stream LogEntry stream DEPRECATED.", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:url": "https://skaffold.dev/docs/references/api/grpc/", "ogTitle": "gRPC API", "twitter:description": "This is a generated reference for the Skaffold API gRPC layer.\nWe also generate the reference doc for the HTTP layer.\n\nv1/skaffold.proto You can find the source for v1/skaffold.proto on Github.\nServices \nSkaffoldService Describes all the methods for the Skaffold API\n   Method Name Request Type Response Type Description     GetState .google.protobuf.Empty State Returns the state of the current Skaffold execution   EventLog LogEntry stream LogEntry stream DEPRECATED.", "article:modified_time": "2025-01-23T10:14:58-05:00", "ogSiteName": "Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "twitter:card": "summary", "generator": "Hugo 0.99.1", "scrapeId": "14a982dd-7bab-4b7a-aef4-155a2c289d9e", "sourceURL": "https://skaffold.dev/docs/references/api/grpc", "url": "https://skaffold.dev/docs/references/api/grpc/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I buildevent in skaffold?\n\nAssistant: To buildevent in skaffold, here's what you do:\n`BuildEvent` describes the build status per artifact, and will be emitted by Skaffold anytime a build starts or finishes, successfully or not.\nIf the build fails, an error will be attached to the event.\n\n| Field | Type | Label | Description |\n| --- | --- | --- | --- |\n| artifact | [string](https://skaffold.dev/docs/references/api/grpc/#string) |  | artifact name |\n| status | [string](https://skaffold.dev/docs/references/api/grpc/#string) |  | artifact build status oneof: InProgress, Completed, Failed |\n| err | [string](https://skaffold.dev/docs/references/api/grpc/#string) |  | Deprecated. Use actionableErr.message. error when build status is Failed. |\n| errCode | [enums.StatusCode](https://skaffold.dev/docs/references/api/grpc/#proto.enums.StatusCode) |  | Deprecated. Use actionableErr.errCode. status code representing success or failure |\n| actionableErr | [ActionableErr](https://skaffold.dev/docs/references/api/grpc/#proto.ActionableErr) |  | actionable error message |\n| hostPlatform | [string](https://skaffold.dev/docs/references/api/grpc/#string) |  | architecture of the host machine. For example `linux/amd64` |\n| targetPlatforms | [string](https://skaffold.dev/docs/references/api/grpc/#string) |  | comma-delimited list of build target architectures. For example `linux/amd64,linux/arm64` |.\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/api/grpc", "title": "gRPC API", "description": "This is a generated reference for the Skaffold API gRPC layer.", "has_code_examples": false, "has_best_practices": false, "section_count": 5, "timestamp": "2025-03-01 03:18:20", "type": "section_detail", "page_metadata": {"language": "en", "robots": "index, follow", "og:title": "gRPC API", "ogUrl": "https://skaffold.dev/docs/references/api/grpc/", "title": "gRPC API | Skaffold", "og:site_name": "Skaffold", "description": "", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "twitter:title": "gRPC API", "og:type": "article", "article:section": "docs", "ogDescription": "This is a generated reference for the Skaffold API gRPC layer.\nWe also generate the reference doc for the HTTP layer.\n\nv1/skaffold.proto You can find the source for v1/skaffold.proto on Github.\nServices \nSkaffoldService Describes all the methods for the Skaffold API\n   Method Name Request Type Response Type Description     GetState .google.protobuf.Empty State Returns the state of the current Skaffold execution   EventLog LogEntry stream LogEntry stream DEPRECATED.", "og:description": "This is a generated reference for the Skaffold API gRPC layer.\nWe also generate the reference doc for the HTTP layer.\n\nv1/skaffold.proto You can find the source for v1/skaffold.proto on Github.\nServices \nSkaffoldService Describes all the methods for the Skaffold API\n   Method Name Request Type Response Type Description     GetState .google.protobuf.Empty State Returns the state of the current Skaffold execution   EventLog LogEntry stream LogEntry stream DEPRECATED.", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:url": "https://skaffold.dev/docs/references/api/grpc/", "ogTitle": "gRPC API", "twitter:description": "This is a generated reference for the Skaffold API gRPC layer.\nWe also generate the reference doc for the HTTP layer.\n\nv1/skaffold.proto You can find the source for v1/skaffold.proto on Github.\nServices \nSkaffoldService Describes all the methods for the Skaffold API\n   Method Name Request Type Response Type Description     GetState .google.protobuf.Empty State Returns the state of the current Skaffold execution   EventLog LogEntry stream LogEntry stream DEPRECATED.", "article:modified_time": "2025-01-23T10:14:58-05:00", "ogSiteName": "Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "twitter:card": "summary", "generator": "Hugo 0.99.1", "scrapeId": "14a982dd-7bab-4b7a-aef4-155a2c289d9e", "sourceURL": "https://skaffold.dev/docs/references/api/grpc", "url": "https://skaffold.dev/docs/references/api/grpc/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what Guides is in skaffold?\n\nAssistant: Sure, I'd be happy to explain Guides in skaffold.\n\n# Guides\n\nA collection of guides for running Skaffold through Cloud Code and related workflows.Here's a quick rundown of what this is about:\n\n## Cloud Code Guides\n\nIf you’re running Skaffold through Cloud Code then you can additionally checkout these guides:\n\n- how-to guides for Cloud Code for VSCode\n- how-to guides for Cloud Code for Intellij\n\n## Skaffold Workflows\n\n- Getting Started With Your Project\n- skaffold dev\n- Debugging With Skaffold\n- Continuous Delivery\n- Managing ARM workloads [NEW]\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/workflows", "title": "Guides", "description": "A collection of guides for running Skaffold through Cloud Code and related workflows.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:18:26", "type": "overview", "page_metadata": {"ogDescription": "Easy and Repeatable Container & Kubernetes Development", "title": "Guides | Skaffold", "og:url": "https://skaffold.dev/docs/workflows/", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "twitter:title": "Guides", "generator": "Hugo 0.99.1", "robots": "index, follow", "og:site_name": "Skaffold", "og:type": "website", "ogUrl": "https://skaffold.dev/docs/workflows/", "description": "\n\n\n    \n    If you’re running Skaffold through Cloud Code then you can additionally checkout these guides:\n\nhow-to guides for Cloud Code for …", "language": "en", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:title": "Guides", "twitter:card": "summary", "og:description": "Easy and Repeatable Container & Kubernetes Development", "ogSiteName": "Skaffold", "ogTitle": "Guides", "scrapeId": "4206ca99-c5e6-4377-8986-7157d4337620", "sourceURL": "https://skaffold.dev/docs/workflows", "url": "https://skaffold.dev/docs/workflows/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I cloud code guides in skaffold?\n\nAssistant: To cloud code guides in skaffold, here's what you do:\nIf you’re running Skaffold through Cloud Code then you can additionally checkout these guides:\n\n- how-to guides for Cloud Code for VSCode\n- how-to guides for Cloud Code for Intellij.\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/workflows", "title": "Guides", "description": "A collection of guides for running Skaffold through Cloud Code and related workflows.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:18:26", "type": "section_detail", "page_metadata": {"ogDescription": "Easy and Repeatable Container & Kubernetes Development", "title": "Guides | Skaffold", "og:url": "https://skaffold.dev/docs/workflows/", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "twitter:title": "Guides", "generator": "Hugo 0.99.1", "robots": "index, follow", "og:site_name": "Skaffold", "og:type": "website", "ogUrl": "https://skaffold.dev/docs/workflows/", "description": "\n\n\n    \n    If you’re running Skaffold through Cloud Code then you can additionally checkout these guides:\n\nhow-to guides for Cloud Code for …", "language": "en", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:title": "Guides", "twitter:card": "summary", "og:description": "Easy and Repeatable Container & Kubernetes Development", "ogSiteName": "Skaffold", "ogTitle": "Guides", "scrapeId": "4206ca99-c5e6-4377-8986-7157d4337620", "sourceURL": "https://skaffold.dev/docs/workflows", "url": "https://skaffold.dev/docs/workflows/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I skaffold workflows in skaffold?\n\nAssistant: To skaffold workflows in skaffold, here's what you do:\n- Getting Started With Your Project\n- skaffold dev\n- Debugging With Skaffold\n- Continuous Delivery\n- Managing ARM workloads [NEW].\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/workflows", "title": "Guides", "description": "A collection of guides for running Skaffold through Cloud Code and related workflows.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:18:26", "type": "section_detail", "page_metadata": {"ogDescription": "Easy and Repeatable Container & Kubernetes Development", "title": "Guides | Skaffold", "og:url": "https://skaffold.dev/docs/workflows/", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "twitter:title": "Guides", "generator": "Hugo 0.99.1", "robots": "index, follow", "og:site_name": "Skaffold", "og:type": "website", "ogUrl": "https://skaffold.dev/docs/workflows/", "description": "\n\n\n    \n    If you’re running Skaffold through Cloud Code then you can additionally checkout these guides:\n\nhow-to guides for Cloud Code for …", "language": "en", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:title": "Guides", "twitter:card": "summary", "og:description": "Easy and Repeatable Container & Kubernetes Development", "ogSiteName": "Skaffold", "ogTitle": "Guides", "scrapeId": "4206ca99-c5e6-4377-8986-7157d4337620", "sourceURL": "https://skaffold.dev/docs/workflows", "url": "https://skaffold.dev/docs/workflows/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: What are some tips for using Guides in skaffold effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nCheck out the how-to guides for Cloud Code for VSCode and Intellij for additional support.\n\nRefer to the Skaffold workflows for best practices in project management and debugging.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://skaffold.dev/docs/workflows", "title": "Guides", "description": "A collection of guides for running Skaffold through Cloud Code and related workflows.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:18:26", "type": "best_practices", "page_metadata": {"ogDescription": "Easy and Repeatable Container & Kubernetes Development", "title": "Guides | Skaffold", "og:url": "https://skaffold.dev/docs/workflows/", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "twitter:title": "Guides", "generator": "Hugo 0.99.1", "robots": "index, follow", "og:site_name": "Skaffold", "og:type": "website", "ogUrl": "https://skaffold.dev/docs/workflows/", "description": "\n\n\n    \n    If you’re running Skaffold through Cloud Code then you can additionally checkout these guides:\n\nhow-to guides for Cloud Code for …", "language": "en", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:title": "Guides", "twitter:card": "summary", "og:description": "Easy and Repeatable Container & Kubernetes Development", "ogSiteName": "Skaffold", "ogTitle": "Guides", "scrapeId": "4206ca99-c5e6-4377-8986-7157d4337620", "sourceURL": "https://skaffold.dev/docs/workflows", "url": "https://skaffold.dev/docs/workflows/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what Kpt [NEW] beta is in skaffold?\n\nAssistant: Sure, I'd be happy to explain Kpt [NEW] beta in skaffold.\n\n# Kpt [NEW] beta\n\nThis documentation covers the new functionality in Skaffold V2 that integrates kpt for manifest transformations and validations.Here's a quick rundown of what this is about:\n\n## manifests.transform and manifests.validate functionality powered by kpt\n\nWith Skaffold V2, skaffold now has a new `render` phase and associated `manifests` top level config field. Along with these changes, a `manifests.transform` and a `manifests.validate` field were added which allows users to specify `kpt` manifest transformations and validations to be done in the `render` phase. `manifests.transform` allows users to create a pipeline of manifest transformations which transform manifests via the specified container. For more information on the `manifests.transform` functionality see, the docs for `kpt` `mutators` [here](https://kpt.dev/book/04-using-functions/01-declarative-function-execution). For a list of `kpt` supported containers to use in the `manifests.transform` schema see the list [here](https://catalog.kpt.dev/) with the tag `mutator`. `manifests.validate` allows users to create a pipeline of manifest validations that run serially, checking the yaml manifests for the specified validation test. For more information on the `manifests.validate` functionality, see the docs for `kpt` `validators` [here](https://kpt.dev/book/04-using-functions/01-declarative-function-execution). For a list of `kpt` supported containers to use in the `manifests.validate` schema see the list [here](https://catalog.kpt.dev/) with the tag `validator`.\n\nConceptually these top level fields remove the necessity of a separate Kptfile allowing more users to adopt the powerful rendering functionality `kpt` enables. Functionally, these fields are identical to having a seperate `Kptfile` with the `manifests.transform` -> `pipeline.mutators` and `manifests.validate` -> `pipeline.validators`.\n\n## Rendering with kpt using a Kptfile\n\n[`kpt`](https://kpt.dev/) allows Kubernetes developers to customize raw, template-free YAML files for multiple purposes. Skaffold can work with `kpt` by calling its command-line interface.\n\n### Configuration\n\nTo use kpt with Skaffold, add render type `kpt` to the `manifests` section of `skaffold.yaml`.\n\nThe `kpt` configuration accepts a list of paths to folders containing a Kptfile.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/renderers/kpt", "title": "Kpt [NEW] beta", "description": "This documentation covers the new functionality in Skaffold V2 that integrates kpt for manifest transformations and validations.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:20:07", "type": "overview", "page_metadata": {"twitter:title": "Kpt [NEW]", "article:section": "docs", "og:title": "Kpt [NEW]", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:url": "https://skaffold.dev/docs/renderers/kpt/", "description": "\n\n\n    Note\n    kpt CLI must be installed on your machine for the below functionality. Skaffold will not\ninstall it.\n\n\nmanifests.transform and …", "modifiedTime": "2025-01-23T10:14:58-05:00", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "twitter:card": "summary", "ogSiteName": "Skaffold", "title": "Kpt [NEW] | Skaffold", "robots": "index, follow", "article:modified_time": "2025-01-23T10:14:58-05:00", "language": "en", "ogTitle": "Kpt [NEW]", "generator": "Hugo 0.99.1", "og:description": "Note kpt CLI must be installed on your machine for the below functionality. Skaffold will not install it.  manifests.transform and manifests.validate functionality powered by kpt With Skaffold V2, skaffold now has a new render phase and associated manifests top level config field. Along with these changes, a manifests.transform and a manifests.validate field were added which allows users to specify kpt manifest transformations and validations to be done in the render phase.", "og:site_name": "Skaffold", "ogDescription": "Note kpt CLI must be installed on your machine for the below functionality. Skaffold will not install it.  manifests.transform and manifests.validate functionality powered by kpt With Skaffold V2, skaffold now has a new render phase and associated manifests top level config field. Along with these changes, a manifests.transform and a manifests.validate field were added which allows users to specify kpt manifest transformations and validations to be done in the render phase.", "ogUrl": "https://skaffold.dev/docs/renderers/kpt/", "og:type": "article", "twitter:description": "Note kpt CLI must be installed on your machine for the below functionality. Skaffold will not install it.  manifests.transform and manifests.validate functionality powered by kpt With Skaffold V2, skaffold now has a new render phase and associated manifests top level config field. Along with these changes, a manifests.transform and a manifests.validate field were added which allows users to specify kpt manifest transformations and validations to be done in the render phase.", "scrapeId": "0dba432c-37cb-4fd9-80bd-d6afa11ef6ce", "sourceURL": "https://skaffold.dev/docs/renderers/kpt", "url": "https://skaffold.dev/docs/renderers/kpt/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I manifests.transform and manifests.validate functionality powered by kpt in skaffold?\n\nAssistant: To manifests.transform and manifests.validate functionality powered by kpt in skaffold, here's what you do:\nWith Skaffold V2, skaffold now has a new `render` phase and associated `manifests` top level config field. Along with these changes, a `manifests.transform` and a `manifests.validate` field were added which allows users to specify `kpt` manifest transformations and validations to be done in the `render` phase. `manifests.transform` allows users to create a pipeline of manifest transformations which transform manifests via the specified container. For more information on the `manifests.transform` functionality see, the docs for `kpt` `mutators` [here](https://kpt.dev/book/04-using-functions/01-declarative-function-execution). For a list of `kpt` supported containers to use in the `manifests.transform` schema see the list [here](https://catalog.kpt.dev/) with the tag `mutator`. `manifests.validate` allows users to create a pipeline of manifest validations that run serially, checking the yaml manifests for the specified validation test. For more information on the `manifests.validate` functionality, see the docs for `kpt` `validators` [here](https://kpt.dev/book/04-using-functions/01-declarative-function-execution). For a list of `kpt` supported containers to use in the `manifests.validate` schema see the list [here](https://catalog.kpt.dev/) with the tag `validator`.\n\nConceptually these top level fields remove the necessity of a separate Kptfile allowing more users to adopt the powerful rendering functionality `kpt` enables. Functionally, these fields are identical to having a seperate `Kptfile` with the `manifests.transform` -> `pipeline.mutators` and `manifests.validate` -> `pipeline.validators`..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/renderers/kpt", "title": "Kpt [NEW] beta", "description": "This documentation covers the new functionality in Skaffold V2 that integrates kpt for manifest transformations and validations.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:20:07", "type": "section_detail", "page_metadata": {"twitter:title": "Kpt [NEW]", "article:section": "docs", "og:title": "Kpt [NEW]", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:url": "https://skaffold.dev/docs/renderers/kpt/", "description": "\n\n\n    Note\n    kpt CLI must be installed on your machine for the below functionality. Skaffold will not\ninstall it.\n\n\nmanifests.transform and …", "modifiedTime": "2025-01-23T10:14:58-05:00", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "twitter:card": "summary", "ogSiteName": "Skaffold", "title": "Kpt [NEW] | Skaffold", "robots": "index, follow", "article:modified_time": "2025-01-23T10:14:58-05:00", "language": "en", "ogTitle": "Kpt [NEW]", "generator": "Hugo 0.99.1", "og:description": "Note kpt CLI must be installed on your machine for the below functionality. Skaffold will not install it.  manifests.transform and manifests.validate functionality powered by kpt With Skaffold V2, skaffold now has a new render phase and associated manifests top level config field. Along with these changes, a manifests.transform and a manifests.validate field were added which allows users to specify kpt manifest transformations and validations to be done in the render phase.", "og:site_name": "Skaffold", "ogDescription": "Note kpt CLI must be installed on your machine for the below functionality. Skaffold will not install it.  manifests.transform and manifests.validate functionality powered by kpt With Skaffold V2, skaffold now has a new render phase and associated manifests top level config field. Along with these changes, a manifests.transform and a manifests.validate field were added which allows users to specify kpt manifest transformations and validations to be done in the render phase.", "ogUrl": "https://skaffold.dev/docs/renderers/kpt/", "og:type": "article", "twitter:description": "Note kpt CLI must be installed on your machine for the below functionality. Skaffold will not install it.  manifests.transform and manifests.validate functionality powered by kpt With Skaffold V2, skaffold now has a new render phase and associated manifests top level config field. Along with these changes, a manifests.transform and a manifests.validate field were added which allows users to specify kpt manifest transformations and validations to be done in the render phase.", "scrapeId": "0dba432c-37cb-4fd9-80bd-d6afa11ef6ce", "sourceURL": "https://skaffold.dev/docs/renderers/kpt", "url": "https://skaffold.dev/docs/renderers/kpt/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I rendering with kpt using a kptfile in skaffold?\n\nAssistant: To rendering with kpt using a kptfile in skaffold, here's what you do:\n[`kpt`](https://kpt.dev/) allows Kubernetes developers to customize raw, template-free YAML files for multiple purposes. Skaffold can work with `kpt` by calling its command-line interface.\n\n### Configuration\n\nTo use kpt with Skaffold, add render type `kpt` to the `manifests` section of `skaffold.yaml`.\n\nThe `kpt` configuration accepts a list of paths to folders containing a Kptfile..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/renderers/kpt", "title": "Kpt [NEW] beta", "description": "This documentation covers the new functionality in Skaffold V2 that integrates kpt for manifest transformations and validations.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:20:07", "type": "section_detail", "page_metadata": {"twitter:title": "Kpt [NEW]", "article:section": "docs", "og:title": "Kpt [NEW]", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:url": "https://skaffold.dev/docs/renderers/kpt/", "description": "\n\n\n    Note\n    kpt CLI must be installed on your machine for the below functionality. Skaffold will not\ninstall it.\n\n\nmanifests.transform and …", "modifiedTime": "2025-01-23T10:14:58-05:00", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "twitter:card": "summary", "ogSiteName": "Skaffold", "title": "Kpt [NEW] | Skaffold", "robots": "index, follow", "article:modified_time": "2025-01-23T10:14:58-05:00", "language": "en", "ogTitle": "Kpt [NEW]", "generator": "Hugo 0.99.1", "og:description": "Note kpt CLI must be installed on your machine for the below functionality. Skaffold will not install it.  manifests.transform and manifests.validate functionality powered by kpt With Skaffold V2, skaffold now has a new render phase and associated manifests top level config field. Along with these changes, a manifests.transform and a manifests.validate field were added which allows users to specify kpt manifest transformations and validations to be done in the render phase.", "og:site_name": "Skaffold", "ogDescription": "Note kpt CLI must be installed on your machine for the below functionality. Skaffold will not install it.  manifests.transform and manifests.validate functionality powered by kpt With Skaffold V2, skaffold now has a new render phase and associated manifests top level config field. Along with these changes, a manifests.transform and a manifests.validate field were added which allows users to specify kpt manifest transformations and validations to be done in the render phase.", "ogUrl": "https://skaffold.dev/docs/renderers/kpt/", "og:type": "article", "twitter:description": "Note kpt CLI must be installed on your machine for the below functionality. Skaffold will not install it.  manifests.transform and manifests.validate functionality powered by kpt With Skaffold V2, skaffold now has a new render phase and associated manifests top level config field. Along with these changes, a manifests.transform and a manifests.validate field were added which allows users to specify kpt manifest transformations and validations to be done in the render phase.", "scrapeId": "0dba432c-37cb-4fd9-80bd-d6afa11ef6ce", "sourceURL": "https://skaffold.dev/docs/renderers/kpt", "url": "https://skaffold.dev/docs/renderers/kpt/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you give me some code examples for Kpt [NEW] beta in skaffold?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Example Skaffold Configuration**:\n\n```yaml\napiVersion: skaffold/v3alpha1\nkind: Config\nmetadata:\n  name: guestbook\nmanifests:\n  rawYaml:\n    - kpt-k8s-pod.yaml\n  transform:\n    - name: set-annotations\n      configMap:\n        - \"author:fake-author\"\n    - name: create-setters\n      configMap:\n        - \"app:guestbook\"\n    - name: apply-setters\n      configMap:\n        - \"app:guestbook-fake-author\"\n  validate:\n    - name: kubeval:v0.1\n\n```\n\nThis snippet shows you how to example skaffold configuration, which is an important aspect of kpt [new] beta.\n\n", "metadata": {"source_url": "https://skaffold.dev/docs/renderers/kpt", "title": "Kpt [NEW] beta", "description": "This documentation covers the new functionality in Skaffold V2 that integrates kpt for manifest transformations and validations.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:20:07", "type": "code_examples", "page_metadata": {"twitter:title": "Kpt [NEW]", "article:section": "docs", "og:title": "Kpt [NEW]", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:url": "https://skaffold.dev/docs/renderers/kpt/", "description": "\n\n\n    Note\n    kpt CLI must be installed on your machine for the below functionality. Skaffold will not\ninstall it.\n\n\nmanifests.transform and …", "modifiedTime": "2025-01-23T10:14:58-05:00", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "twitter:card": "summary", "ogSiteName": "Skaffold", "title": "Kpt [NEW] | Skaffold", "robots": "index, follow", "article:modified_time": "2025-01-23T10:14:58-05:00", "language": "en", "ogTitle": "Kpt [NEW]", "generator": "Hugo 0.99.1", "og:description": "Note kpt CLI must be installed on your machine for the below functionality. Skaffold will not install it.  manifests.transform and manifests.validate functionality powered by kpt With Skaffold V2, skaffold now has a new render phase and associated manifests top level config field. Along with these changes, a manifests.transform and a manifests.validate field were added which allows users to specify kpt manifest transformations and validations to be done in the render phase.", "og:site_name": "Skaffold", "ogDescription": "Note kpt CLI must be installed on your machine for the below functionality. Skaffold will not install it.  manifests.transform and manifests.validate functionality powered by kpt With Skaffold V2, skaffold now has a new render phase and associated manifests top level config field. Along with these changes, a manifests.transform and a manifests.validate field were added which allows users to specify kpt manifest transformations and validations to be done in the render phase.", "ogUrl": "https://skaffold.dev/docs/renderers/kpt/", "og:type": "article", "twitter:description": "Note kpt CLI must be installed on your machine for the below functionality. Skaffold will not install it.  manifests.transform and manifests.validate functionality powered by kpt With Skaffold V2, skaffold now has a new render phase and associated manifests top level config field. Along with these changes, a manifests.transform and a manifests.validate field were added which allows users to specify kpt manifest transformations and validations to be done in the render phase.", "scrapeId": "0dba432c-37cb-4fd9-80bd-d6afa11ef6ce", "sourceURL": "https://skaffold.dev/docs/renderers/kpt", "url": "https://skaffold.dev/docs/renderers/kpt/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: What are some tips for using Kpt [NEW] beta in skaffold effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nEnsure kpt CLI is installed on your machine for the functionality to work as Skaffold will not install it.\n\nUse the `manifests.transform` and `manifests.validate` fields to streamline your configuration without needing a separate Kptfile.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://skaffold.dev/docs/renderers/kpt", "title": "Kpt [NEW] beta", "description": "This documentation covers the new functionality in Skaffold V2 that integrates kpt for manifest transformations and validations.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:20:07", "type": "best_practices", "page_metadata": {"twitter:title": "Kpt [NEW]", "article:section": "docs", "og:title": "Kpt [NEW]", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:url": "https://skaffold.dev/docs/renderers/kpt/", "description": "\n\n\n    Note\n    kpt CLI must be installed on your machine for the below functionality. Skaffold will not\ninstall it.\n\n\nmanifests.transform and …", "modifiedTime": "2025-01-23T10:14:58-05:00", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "twitter:card": "summary", "ogSiteName": "Skaffold", "title": "Kpt [NEW] | Skaffold", "robots": "index, follow", "article:modified_time": "2025-01-23T10:14:58-05:00", "language": "en", "ogTitle": "Kpt [NEW]", "generator": "Hugo 0.99.1", "og:description": "Note kpt CLI must be installed on your machine for the below functionality. Skaffold will not install it.  manifests.transform and manifests.validate functionality powered by kpt With Skaffold V2, skaffold now has a new render phase and associated manifests top level config field. Along with these changes, a manifests.transform and a manifests.validate field were added which allows users to specify kpt manifest transformations and validations to be done in the render phase.", "og:site_name": "Skaffold", "ogDescription": "Note kpt CLI must be installed on your machine for the below functionality. Skaffold will not install it.  manifests.transform and manifests.validate functionality powered by kpt With Skaffold V2, skaffold now has a new render phase and associated manifests top level config field. Along with these changes, a manifests.transform and a manifests.validate field were added which allows users to specify kpt manifest transformations and validations to be done in the render phase.", "ogUrl": "https://skaffold.dev/docs/renderers/kpt/", "og:type": "article", "twitter:description": "Note kpt CLI must be installed on your machine for the below functionality. Skaffold will not install it.  manifests.transform and manifests.validate functionality powered by kpt With Skaffold V2, skaffold now has a new render phase and associated manifests top level config field. Along with these changes, a manifests.transform and a manifests.validate field were added which allows users to specify kpt manifest transformations and validations to be done in the render phase.", "scrapeId": "0dba432c-37cb-4fd9-80bd-d6afa11ef6ce", "sourceURL": "https://skaffold.dev/docs/renderers/kpt", "url": "https://skaffold.dev/docs/renderers/kpt/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what Kpt [UPDATED] beta is in skaffold?\n\nAssistant: Sure, I'd be happy to explain Kpt [UPDATED] beta in skaffold.\n\n# Kpt [UPDATED] beta\n\nRendering with kpt allows Kubernetes developers to customize raw, template-free YAML files for multiple purposes. Skaffold can work with kpt by calling its command-line interface.Here's a quick rundown of what this is about:\n\n## Rendering with kpt\n\n`kpt` allows Kubernetes developers to customize raw, template-free YAML files for multiple purposes. Skaffold can work with `kpt` by calling its command-line interface.\n\n## Configuration\n\nTo use kpt with Skaffold, add deploy type `kpt` to the `deploy` section of `skaffold.yaml`.\n\nThe `kpt` type offers the following options:\n\n| Option | Description | Default |\n| --- | --- | --- |\n| `dir` | equivalent to the dir in `kpt live apply <dir>`. If not provided, skaffold deploys from the default hydrated path `<WORKDIR>/.kpt-pipeline`. | `` |\n| `applyFlags` | additional flags passed to `kpt live apply`. | `[]` |\n| `flags` | kpt global flags. | `[]` |\n| `name` | _alpha_ inventory object name. | `` |\n| `inventoryID` | _alpha_ inventory ID which annotates the resources being lively applied by kpt. | `` |\n| `namespace` | _alpha_ sets the inventory namespace. | `` |\n| `force` | used in `kpt live init`, which forces the inventory values to be updated, even if they are already set. | `false` |\n| `defaultNamespace` | default namespace passed to kpt on deployment if no other override is given. | `` |\n\nEach entry in `paths` should point to a folder with a kustomization file.\n\n`flags` section offers the following options:\n\n| Option | Description | Default |\n| --- | --- | --- |\n| `global` | additional flags passed on every command. | `[]` |\n| `apply` | additional flags passed on creations ( `kubectl apply`). | `[]` |\n| `delete` | additional flags passed on deletions ( `kubectl delete`). | `[]` |\n| `disableValidation` | passes the `--validate=false` flag to supported `kubectl` commands when enabled. | `false` |\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/deployers/kpt", "title": "Kpt [UPDATED] beta", "description": "Rendering with kpt allows Kubernetes developers to customize raw, template-free YAML files for multiple purposes. Skaffold can work with kpt by calling its command-line interface.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:20:19", "type": "overview", "page_metadata": {"ogSiteName": "Skaffold", "og:site_name": "Skaffold", "og:url": "https://skaffold.dev/docs/deployers/kpt/", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:title": "Kpt [UPDATED]", "twitter:description": "Rendering with kpt kpt allows Kubernetes developers to customize raw, template-free YAML files for multiple purposes. Skaffold can work with kpt by calling its command-line interface.\nConfiguration To use kpt with Skaffold, add deploy type kpt to the deploy section of skaffold.yaml.\nThe kpt type offers the following options:\n @media (min-width: 992px) { table { max-width: 80%; } } td.desc { width: 100%; } td.default { white-space: nowrap; }     Option Description Default     dir equivalent to the dir in kpt live apply <dir>.", "language": "en", "title": "Kpt [UPDATED] | Skaffold", "modifiedTime": "2025-01-23T10:14:58-05:00", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:type": "article", "twitter:title": "Kpt [UPDATED]", "ogDescription": "Rendering with kpt kpt allows Kubernetes developers to customize raw, template-free YAML files for multiple purposes. Skaffold can work with kpt by calling its command-line interface.\nConfiguration To use kpt with Skaffold, add deploy type kpt to the deploy section of skaffold.yaml.\nThe kpt type offers the following options:\n @media (min-width: 992px) { table { max-width: 80%; } } td.desc { width: 100%; } td.default { white-space: nowrap; }     Option Description Default     dir equivalent to the dir in kpt live apply <dir>.", "og:description": "Rendering with kpt kpt allows Kubernetes developers to customize raw, template-free YAML files for multiple purposes. Skaffold can work with kpt by calling its command-line interface.\nConfiguration To use kpt with Skaffold, add deploy type kpt to the deploy section of skaffold.yaml.\nThe kpt type offers the following options:\n @media (min-width: 992px) { table { max-width: 80%; } } td.desc { width: 100%; } td.default { white-space: nowrap; }     Option Description Default     dir equivalent to the dir in kpt live apply <dir>.", "description": "Rendering with kpt\nkpt allows Kubernetes\ndevelopers to customize raw, template-free YAML files for multiple purposes.\nSkaffold can work with kpt by …", "article:section": "docs", "article:modified_time": "2025-01-23T10:14:58-05:00", "ogTitle": "Kpt [UPDATED]", "twitter:card": "summary", "robots": "index, follow", "generator": "Hugo 0.99.1", "ogUrl": "https://skaffold.dev/docs/deployers/kpt/", "scrapeId": "3b341a0e-b9cb-4fb8-9019-e03b5c7019e2", "sourceURL": "https://skaffold.dev/docs/deployers/kpt", "url": "https://skaffold.dev/docs/deployers/kpt/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I rendering with kpt in skaffold?\n\nAssistant: To rendering with kpt in skaffold, here's what you do:\n`kpt` allows Kubernetes developers to customize raw, template-free YAML files for multiple purposes. Skaffold can work with `kpt` by calling its command-line interface..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/deployers/kpt", "title": "Kpt [UPDATED] beta", "description": "Rendering with kpt allows Kubernetes developers to customize raw, template-free YAML files for multiple purposes. Skaffold can work with kpt by calling its command-line interface.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:20:19", "type": "section_detail", "page_metadata": {"ogSiteName": "Skaffold", "og:site_name": "Skaffold", "og:url": "https://skaffold.dev/docs/deployers/kpt/", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:title": "Kpt [UPDATED]", "twitter:description": "Rendering with kpt kpt allows Kubernetes developers to customize raw, template-free YAML files for multiple purposes. Skaffold can work with kpt by calling its command-line interface.\nConfiguration To use kpt with Skaffold, add deploy type kpt to the deploy section of skaffold.yaml.\nThe kpt type offers the following options:\n @media (min-width: 992px) { table { max-width: 80%; } } td.desc { width: 100%; } td.default { white-space: nowrap; }     Option Description Default     dir equivalent to the dir in kpt live apply <dir>.", "language": "en", "title": "Kpt [UPDATED] | Skaffold", "modifiedTime": "2025-01-23T10:14:58-05:00", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:type": "article", "twitter:title": "Kpt [UPDATED]", "ogDescription": "Rendering with kpt kpt allows Kubernetes developers to customize raw, template-free YAML files for multiple purposes. Skaffold can work with kpt by calling its command-line interface.\nConfiguration To use kpt with Skaffold, add deploy type kpt to the deploy section of skaffold.yaml.\nThe kpt type offers the following options:\n @media (min-width: 992px) { table { max-width: 80%; } } td.desc { width: 100%; } td.default { white-space: nowrap; }     Option Description Default     dir equivalent to the dir in kpt live apply <dir>.", "og:description": "Rendering with kpt kpt allows Kubernetes developers to customize raw, template-free YAML files for multiple purposes. Skaffold can work with kpt by calling its command-line interface.\nConfiguration To use kpt with Skaffold, add deploy type kpt to the deploy section of skaffold.yaml.\nThe kpt type offers the following options:\n @media (min-width: 992px) { table { max-width: 80%; } } td.desc { width: 100%; } td.default { white-space: nowrap; }     Option Description Default     dir equivalent to the dir in kpt live apply <dir>.", "description": "Rendering with kpt\nkpt allows Kubernetes\ndevelopers to customize raw, template-free YAML files for multiple purposes.\nSkaffold can work with kpt by …", "article:section": "docs", "article:modified_time": "2025-01-23T10:14:58-05:00", "ogTitle": "Kpt [UPDATED]", "twitter:card": "summary", "robots": "index, follow", "generator": "Hugo 0.99.1", "ogUrl": "https://skaffold.dev/docs/deployers/kpt/", "scrapeId": "3b341a0e-b9cb-4fb8-9019-e03b5c7019e2", "sourceURL": "https://skaffold.dev/docs/deployers/kpt", "url": "https://skaffold.dev/docs/deployers/kpt/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I configuration in skaffold?\n\nAssistant: To configuration in skaffold, here's what you do:\nTo use kpt with Skaffold, add deploy type `kpt` to the `deploy` section of `skaffold.yaml`.\n\nThe `kpt` type offers the following options:\n\n| Option | Description | Default |\n| --- | --- | --- |\n| `dir` | equivalent to the dir in `kpt live apply <dir>`. If not provided, skaffold deploys from the default hydrated path `<WORKDIR>/.kpt-pipeline`. | `` |\n| `applyFlags` | additional flags passed to `kpt live apply`. | `[]` |\n| `flags` | kpt global flags. | `[]` |\n| `name` | _alpha_ inventory object name. | `` |\n| `inventoryID` | _alpha_ inventory ID which annotates the resources being lively applied by kpt. | `` |\n| `namespace` | _alpha_ sets the inventory namespace. | `` |\n| `force` | used in `kpt live init`, which forces the inventory values to be updated, even if they are already set. | `false` |\n| `defaultNamespace` | default namespace passed to kpt on deployment if no other override is given. | `` |\n\nEach entry in `paths` should point to a folder with a kustomization file.\n\n`flags` section offers the following options:\n\n| Option | Description | Default |\n| --- | --- | --- |\n| `global` | additional flags passed on every command. | `[]` |\n| `apply` | additional flags passed on creations ( `kubectl apply`). | `[]` |\n| `delete` | additional flags passed on deletions ( `kubectl delete`). | `[]` |\n| `disableValidation` | passes the `--validate=false` flag to supported `kubectl` commands when enabled. | `false` |.\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/deployers/kpt", "title": "Kpt [UPDATED] beta", "description": "Rendering with kpt allows Kubernetes developers to customize raw, template-free YAML files for multiple purposes. Skaffold can work with kpt by calling its command-line interface.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:20:19", "type": "section_detail", "page_metadata": {"ogSiteName": "Skaffold", "og:site_name": "Skaffold", "og:url": "https://skaffold.dev/docs/deployers/kpt/", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:title": "Kpt [UPDATED]", "twitter:description": "Rendering with kpt kpt allows Kubernetes developers to customize raw, template-free YAML files for multiple purposes. Skaffold can work with kpt by calling its command-line interface.\nConfiguration To use kpt with Skaffold, add deploy type kpt to the deploy section of skaffold.yaml.\nThe kpt type offers the following options:\n @media (min-width: 992px) { table { max-width: 80%; } } td.desc { width: 100%; } td.default { white-space: nowrap; }     Option Description Default     dir equivalent to the dir in kpt live apply <dir>.", "language": "en", "title": "Kpt [UPDATED] | Skaffold", "modifiedTime": "2025-01-23T10:14:58-05:00", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:type": "article", "twitter:title": "Kpt [UPDATED]", "ogDescription": "Rendering with kpt kpt allows Kubernetes developers to customize raw, template-free YAML files for multiple purposes. Skaffold can work with kpt by calling its command-line interface.\nConfiguration To use kpt with Skaffold, add deploy type kpt to the deploy section of skaffold.yaml.\nThe kpt type offers the following options:\n @media (min-width: 992px) { table { max-width: 80%; } } td.desc { width: 100%; } td.default { white-space: nowrap; }     Option Description Default     dir equivalent to the dir in kpt live apply <dir>.", "og:description": "Rendering with kpt kpt allows Kubernetes developers to customize raw, template-free YAML files for multiple purposes. Skaffold can work with kpt by calling its command-line interface.\nConfiguration To use kpt with Skaffold, add deploy type kpt to the deploy section of skaffold.yaml.\nThe kpt type offers the following options:\n @media (min-width: 992px) { table { max-width: 80%; } } td.desc { width: 100%; } td.default { white-space: nowrap; }     Option Description Default     dir equivalent to the dir in kpt live apply <dir>.", "description": "Rendering with kpt\nkpt allows Kubernetes\ndevelopers to customize raw, template-free YAML files for multiple purposes.\nSkaffold can work with kpt by …", "article:section": "docs", "article:modified_time": "2025-01-23T10:14:58-05:00", "ogTitle": "Kpt [UPDATED]", "twitter:card": "summary", "robots": "index, follow", "generator": "Hugo 0.99.1", "ogUrl": "https://skaffold.dev/docs/deployers/kpt/", "scrapeId": "3b341a0e-b9cb-4fb8-9019-e03b5c7019e2", "sourceURL": "https://skaffold.dev/docs/deployers/kpt", "url": "https://skaffold.dev/docs/deployers/kpt/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you give me some code examples for Kpt [UPDATED] beta in skaffold?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Example Skaffold Deploy Section**:\n\n```yaml\ndeploy:\n  kpt: {}\n```\n\nThis snippet shows you how to example skaffold deploy section, which is an important aspect of kpt [updated] beta.\n\n", "metadata": {"source_url": "https://skaffold.dev/docs/deployers/kpt", "title": "Kpt [UPDATED] beta", "description": "Rendering with kpt allows Kubernetes developers to customize raw, template-free YAML files for multiple purposes. Skaffold can work with kpt by calling its command-line interface.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:20:19", "type": "code_examples", "page_metadata": {"ogSiteName": "Skaffold", "og:site_name": "Skaffold", "og:url": "https://skaffold.dev/docs/deployers/kpt/", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:title": "Kpt [UPDATED]", "twitter:description": "Rendering with kpt kpt allows Kubernetes developers to customize raw, template-free YAML files for multiple purposes. Skaffold can work with kpt by calling its command-line interface.\nConfiguration To use kpt with Skaffold, add deploy type kpt to the deploy section of skaffold.yaml.\nThe kpt type offers the following options:\n @media (min-width: 992px) { table { max-width: 80%; } } td.desc { width: 100%; } td.default { white-space: nowrap; }     Option Description Default     dir equivalent to the dir in kpt live apply <dir>.", "language": "en", "title": "Kpt [UPDATED] | Skaffold", "modifiedTime": "2025-01-23T10:14:58-05:00", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:type": "article", "twitter:title": "Kpt [UPDATED]", "ogDescription": "Rendering with kpt kpt allows Kubernetes developers to customize raw, template-free YAML files for multiple purposes. Skaffold can work with kpt by calling its command-line interface.\nConfiguration To use kpt with Skaffold, add deploy type kpt to the deploy section of skaffold.yaml.\nThe kpt type offers the following options:\n @media (min-width: 992px) { table { max-width: 80%; } } td.desc { width: 100%; } td.default { white-space: nowrap; }     Option Description Default     dir equivalent to the dir in kpt live apply <dir>.", "og:description": "Rendering with kpt kpt allows Kubernetes developers to customize raw, template-free YAML files for multiple purposes. Skaffold can work with kpt by calling its command-line interface.\nConfiguration To use kpt with Skaffold, add deploy type kpt to the deploy section of skaffold.yaml.\nThe kpt type offers the following options:\n @media (min-width: 992px) { table { max-width: 80%; } } td.desc { width: 100%; } td.default { white-space: nowrap; }     Option Description Default     dir equivalent to the dir in kpt live apply <dir>.", "description": "Rendering with kpt\nkpt allows Kubernetes\ndevelopers to customize raw, template-free YAML files for multiple purposes.\nSkaffold can work with kpt by …", "article:section": "docs", "article:modified_time": "2025-01-23T10:14:58-05:00", "ogTitle": "Kpt [UPDATED]", "twitter:card": "summary", "robots": "index, follow", "generator": "Hugo 0.99.1", "ogUrl": "https://skaffold.dev/docs/deployers/kpt/", "scrapeId": "3b341a0e-b9cb-4fb8-9019-e03b5c7019e2", "sourceURL": "https://skaffold.dev/docs/deployers/kpt", "url": "https://skaffold.dev/docs/deployers/kpt/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: What are some tips for using Kpt [UPDATED] beta in skaffold effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nkpt CLI must be installed on your machine. Skaffold will not install it.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://skaffold.dev/docs/deployers/kpt", "title": "Kpt [UPDATED] beta", "description": "Rendering with kpt allows Kubernetes developers to customize raw, template-free YAML files for multiple purposes. Skaffold can work with kpt by calling its command-line interface.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:20:19", "type": "best_practices", "page_metadata": {"ogSiteName": "Skaffold", "og:site_name": "Skaffold", "og:url": "https://skaffold.dev/docs/deployers/kpt/", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:title": "Kpt [UPDATED]", "twitter:description": "Rendering with kpt kpt allows Kubernetes developers to customize raw, template-free YAML files for multiple purposes. Skaffold can work with kpt by calling its command-line interface.\nConfiguration To use kpt with Skaffold, add deploy type kpt to the deploy section of skaffold.yaml.\nThe kpt type offers the following options:\n @media (min-width: 992px) { table { max-width: 80%; } } td.desc { width: 100%; } td.default { white-space: nowrap; }     Option Description Default     dir equivalent to the dir in kpt live apply <dir>.", "language": "en", "title": "Kpt [UPDATED] | Skaffold", "modifiedTime": "2025-01-23T10:14:58-05:00", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:type": "article", "twitter:title": "Kpt [UPDATED]", "ogDescription": "Rendering with kpt kpt allows Kubernetes developers to customize raw, template-free YAML files for multiple purposes. Skaffold can work with kpt by calling its command-line interface.\nConfiguration To use kpt with Skaffold, add deploy type kpt to the deploy section of skaffold.yaml.\nThe kpt type offers the following options:\n @media (min-width: 992px) { table { max-width: 80%; } } td.desc { width: 100%; } td.default { white-space: nowrap; }     Option Description Default     dir equivalent to the dir in kpt live apply <dir>.", "og:description": "Rendering with kpt kpt allows Kubernetes developers to customize raw, template-free YAML files for multiple purposes. Skaffold can work with kpt by calling its command-line interface.\nConfiguration To use kpt with Skaffold, add deploy type kpt to the deploy section of skaffold.yaml.\nThe kpt type offers the following options:\n @media (min-width: 992px) { table { max-width: 80%; } } td.desc { width: 100%; } td.default { white-space: nowrap; }     Option Description Default     dir equivalent to the dir in kpt live apply <dir>.", "description": "Rendering with kpt\nkpt allows Kubernetes\ndevelopers to customize raw, template-free YAML files for multiple purposes.\nSkaffold can work with kpt by …", "article:section": "docs", "article:modified_time": "2025-01-23T10:14:58-05:00", "ogTitle": "Kpt [UPDATED]", "twitter:card": "summary", "robots": "index, follow", "generator": "Hugo 0.99.1", "ogUrl": "https://skaffold.dev/docs/deployers/kpt/", "scrapeId": "3b341a0e-b9cb-4fb8-9019-e03b5c7019e2", "sourceURL": "https://skaffold.dev/docs/deployers/kpt", "url": "https://skaffold.dev/docs/deployers/kpt/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what Kustomize beta is in skaffold?\n\nAssistant: Sure, I'd be happy to explain Kustomize beta in skaffold.\n\n# Kustomize beta\n\nRendering with kustomize allows Kubernetes developers to customize raw, template-free YAML files for multiple purposes. Skaffold can work with kustomize by calling its command-line interface.Here's a quick rundown of what this is about:\n\n## Rendering with kustomize\n\n`kustomize` allows Kubernetes developers to customize raw, template-free YAML files for multiple purposes. Skaffold can work with `kustomize` by calling its command-line interface.\n\n## Configuration\n\nTo use kustomize with Skaffold, add render type `kustomize` to the `manifests` section of `skaffold.yaml`. The `kustomize` configuration accepts a list of paths to folders containing a kustomize.yaml file.\n\n## Example\n\nThe following `manifests` section instructs Skaffold to render artifacts using kustomize. Each entry should point to a folder with a kustomize.yaml file.\n\n## Note\n\nkustomize CLI must be installed on your machine. Skaffold will not install it.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/renderers/kustomize", "title": "Kustomize beta", "description": "Rendering with kustomize allows Kubernetes developers to customize raw, template-free YAML files for multiple purposes. Skaffold can work with kustomize by calling its command-line interface.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:20:28", "type": "overview", "page_metadata": {"ogTitle": "Kustomize", "ogSiteName": "Skaffold", "og:type": "article", "ogUrl": "https://skaffold.dev/docs/renderers/kustomize/", "article:section": "docs", "robots": "index, follow", "twitter:card": "summary", "og:description": "Rendering with kustomize kustomize allows Kubernetes developers to customize raw, template-free YAML files for multiple purposes. Skaffold can work with kustomize by calling its command-line interface.\nConfiguration To use kustomize with Skaffold, add render type kustomize to the manifests section of skaffold.yaml.\nThe kustomize configuration accepts a list of paths to folders containing a kustomize.yaml file.\nExample The following manifests section instructs Skaffold to render artifacts using kustomize. Each entry should point to a folder with a kustomize.", "og:url": "https://skaffold.dev/docs/renderers/kustomize/", "article:modified_time": "2025-01-23T10:14:58-05:00", "twitter:title": "Kustomize", "title": "Kustomize | Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "generator": "Hugo 0.99.1", "twitter:description": "Rendering with kustomize kustomize allows Kubernetes developers to customize raw, template-free YAML files for multiple purposes. Skaffold can work with kustomize by calling its command-line interface.\nConfiguration To use kustomize with Skaffold, add render type kustomize to the manifests section of skaffold.yaml.\nThe kustomize configuration accepts a list of paths to folders containing a kustomize.yaml file.\nExample The following manifests section instructs Skaffold to render artifacts using kustomize. Each entry should point to a folder with a kustomize.", "language": "en", "modifiedTime": "2025-01-23T10:14:58-05:00", "ogDescription": "Rendering with kustomize kustomize allows Kubernetes developers to customize raw, template-free YAML files for multiple purposes. Skaffold can work with kustomize by calling its command-line interface.\nConfiguration To use kustomize with Skaffold, add render type kustomize to the manifests section of skaffold.yaml.\nThe kustomize configuration accepts a list of paths to folders containing a kustomize.yaml file.\nExample The following manifests section instructs Skaffold to render artifacts using kustomize. Each entry should point to a folder with a kustomize.", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "description": "Rendering with kustomize\nkustomize allows Kubernetes\ndevelopers to customize raw, template-free YAML files for multiple purposes.\nSkaffold can work …", "og:title": "Kustomize", "og:site_name": "Skaffold", "scrapeId": "27695dcc-6bbc-4e81-a301-bc89ed34bc19", "sourceURL": "https://skaffold.dev/docs/renderers/kustomize", "url": "https://skaffold.dev/docs/renderers/kustomize/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I rendering with kustomize in skaffold?\n\nAssistant: To rendering with kustomize in skaffold, here's what you do:\n`kustomize` allows Kubernetes developers to customize raw, template-free YAML files for multiple purposes. Skaffold can work with `kustomize` by calling its command-line interface..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/renderers/kustomize", "title": "Kustomize beta", "description": "Rendering with kustomize allows Kubernetes developers to customize raw, template-free YAML files for multiple purposes. Skaffold can work with kustomize by calling its command-line interface.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:20:28", "type": "section_detail", "page_metadata": {"ogTitle": "Kustomize", "ogSiteName": "Skaffold", "og:type": "article", "ogUrl": "https://skaffold.dev/docs/renderers/kustomize/", "article:section": "docs", "robots": "index, follow", "twitter:card": "summary", "og:description": "Rendering with kustomize kustomize allows Kubernetes developers to customize raw, template-free YAML files for multiple purposes. Skaffold can work with kustomize by calling its command-line interface.\nConfiguration To use kustomize with Skaffold, add render type kustomize to the manifests section of skaffold.yaml.\nThe kustomize configuration accepts a list of paths to folders containing a kustomize.yaml file.\nExample The following manifests section instructs Skaffold to render artifacts using kustomize. Each entry should point to a folder with a kustomize.", "og:url": "https://skaffold.dev/docs/renderers/kustomize/", "article:modified_time": "2025-01-23T10:14:58-05:00", "twitter:title": "Kustomize", "title": "Kustomize | Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "generator": "Hugo 0.99.1", "twitter:description": "Rendering with kustomize kustomize allows Kubernetes developers to customize raw, template-free YAML files for multiple purposes. Skaffold can work with kustomize by calling its command-line interface.\nConfiguration To use kustomize with Skaffold, add render type kustomize to the manifests section of skaffold.yaml.\nThe kustomize configuration accepts a list of paths to folders containing a kustomize.yaml file.\nExample The following manifests section instructs Skaffold to render artifacts using kustomize. Each entry should point to a folder with a kustomize.", "language": "en", "modifiedTime": "2025-01-23T10:14:58-05:00", "ogDescription": "Rendering with kustomize kustomize allows Kubernetes developers to customize raw, template-free YAML files for multiple purposes. Skaffold can work with kustomize by calling its command-line interface.\nConfiguration To use kustomize with Skaffold, add render type kustomize to the manifests section of skaffold.yaml.\nThe kustomize configuration accepts a list of paths to folders containing a kustomize.yaml file.\nExample The following manifests section instructs Skaffold to render artifacts using kustomize. Each entry should point to a folder with a kustomize.", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "description": "Rendering with kustomize\nkustomize allows Kubernetes\ndevelopers to customize raw, template-free YAML files for multiple purposes.\nSkaffold can work …", "og:title": "Kustomize", "og:site_name": "Skaffold", "scrapeId": "27695dcc-6bbc-4e81-a301-bc89ed34bc19", "sourceURL": "https://skaffold.dev/docs/renderers/kustomize", "url": "https://skaffold.dev/docs/renderers/kustomize/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I configuration in skaffold?\n\nAssistant: To configuration in skaffold, here's what you do:\nTo use kustomize with Skaffold, add render type `kustomize` to the `manifests` section of `skaffold.yaml`. The `kustomize` configuration accepts a list of paths to folders containing a kustomize.yaml file..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/renderers/kustomize", "title": "Kustomize beta", "description": "Rendering with kustomize allows Kubernetes developers to customize raw, template-free YAML files for multiple purposes. Skaffold can work with kustomize by calling its command-line interface.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:20:28", "type": "section_detail", "page_metadata": {"ogTitle": "Kustomize", "ogSiteName": "Skaffold", "og:type": "article", "ogUrl": "https://skaffold.dev/docs/renderers/kustomize/", "article:section": "docs", "robots": "index, follow", "twitter:card": "summary", "og:description": "Rendering with kustomize kustomize allows Kubernetes developers to customize raw, template-free YAML files for multiple purposes. Skaffold can work with kustomize by calling its command-line interface.\nConfiguration To use kustomize with Skaffold, add render type kustomize to the manifests section of skaffold.yaml.\nThe kustomize configuration accepts a list of paths to folders containing a kustomize.yaml file.\nExample The following manifests section instructs Skaffold to render artifacts using kustomize. Each entry should point to a folder with a kustomize.", "og:url": "https://skaffold.dev/docs/renderers/kustomize/", "article:modified_time": "2025-01-23T10:14:58-05:00", "twitter:title": "Kustomize", "title": "Kustomize | Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "generator": "Hugo 0.99.1", "twitter:description": "Rendering with kustomize kustomize allows Kubernetes developers to customize raw, template-free YAML files for multiple purposes. Skaffold can work with kustomize by calling its command-line interface.\nConfiguration To use kustomize with Skaffold, add render type kustomize to the manifests section of skaffold.yaml.\nThe kustomize configuration accepts a list of paths to folders containing a kustomize.yaml file.\nExample The following manifests section instructs Skaffold to render artifacts using kustomize. Each entry should point to a folder with a kustomize.", "language": "en", "modifiedTime": "2025-01-23T10:14:58-05:00", "ogDescription": "Rendering with kustomize kustomize allows Kubernetes developers to customize raw, template-free YAML files for multiple purposes. Skaffold can work with kustomize by calling its command-line interface.\nConfiguration To use kustomize with Skaffold, add render type kustomize to the manifests section of skaffold.yaml.\nThe kustomize configuration accepts a list of paths to folders containing a kustomize.yaml file.\nExample The following manifests section instructs Skaffold to render artifacts using kustomize. Each entry should point to a folder with a kustomize.", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "description": "Rendering with kustomize\nkustomize allows Kubernetes\ndevelopers to customize raw, template-free YAML files for multiple purposes.\nSkaffold can work …", "og:title": "Kustomize", "og:site_name": "Skaffold", "scrapeId": "27695dcc-6bbc-4e81-a301-bc89ed34bc19", "sourceURL": "https://skaffold.dev/docs/renderers/kustomize", "url": "https://skaffold.dev/docs/renderers/kustomize/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I example in skaffold?\n\nAssistant: To example in skaffold, here's what you do:\nThe following `manifests` section instructs Skaffold to render artifacts using kustomize. Each entry should point to a folder with a kustomize.yaml file..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/renderers/kustomize", "title": "Kustomize beta", "description": "Rendering with kustomize allows Kubernetes developers to customize raw, template-free YAML files for multiple purposes. Skaffold can work with kustomize by calling its command-line interface.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:20:28", "type": "section_detail", "page_metadata": {"ogTitle": "Kustomize", "ogSiteName": "Skaffold", "og:type": "article", "ogUrl": "https://skaffold.dev/docs/renderers/kustomize/", "article:section": "docs", "robots": "index, follow", "twitter:card": "summary", "og:description": "Rendering with kustomize kustomize allows Kubernetes developers to customize raw, template-free YAML files for multiple purposes. Skaffold can work with kustomize by calling its command-line interface.\nConfiguration To use kustomize with Skaffold, add render type kustomize to the manifests section of skaffold.yaml.\nThe kustomize configuration accepts a list of paths to folders containing a kustomize.yaml file.\nExample The following manifests section instructs Skaffold to render artifacts using kustomize. Each entry should point to a folder with a kustomize.", "og:url": "https://skaffold.dev/docs/renderers/kustomize/", "article:modified_time": "2025-01-23T10:14:58-05:00", "twitter:title": "Kustomize", "title": "Kustomize | Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "generator": "Hugo 0.99.1", "twitter:description": "Rendering with kustomize kustomize allows Kubernetes developers to customize raw, template-free YAML files for multiple purposes. Skaffold can work with kustomize by calling its command-line interface.\nConfiguration To use kustomize with Skaffold, add render type kustomize to the manifests section of skaffold.yaml.\nThe kustomize configuration accepts a list of paths to folders containing a kustomize.yaml file.\nExample The following manifests section instructs Skaffold to render artifacts using kustomize. Each entry should point to a folder with a kustomize.", "language": "en", "modifiedTime": "2025-01-23T10:14:58-05:00", "ogDescription": "Rendering with kustomize kustomize allows Kubernetes developers to customize raw, template-free YAML files for multiple purposes. Skaffold can work with kustomize by calling its command-line interface.\nConfiguration To use kustomize with Skaffold, add render type kustomize to the manifests section of skaffold.yaml.\nThe kustomize configuration accepts a list of paths to folders containing a kustomize.yaml file.\nExample The following manifests section instructs Skaffold to render artifacts using kustomize. Each entry should point to a folder with a kustomize.", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "description": "Rendering with kustomize\nkustomize allows Kubernetes\ndevelopers to customize raw, template-free YAML files for multiple purposes.\nSkaffold can work …", "og:title": "Kustomize", "og:site_name": "Skaffold", "scrapeId": "27695dcc-6bbc-4e81-a301-bc89ed34bc19", "sourceURL": "https://skaffold.dev/docs/renderers/kustomize", "url": "https://skaffold.dev/docs/renderers/kustomize/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I note in skaffold?\n\nAssistant: To note in skaffold, here's what you do:\nkustomize CLI must be installed on your machine. Skaffold will not install it..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/renderers/kustomize", "title": "Kustomize beta", "description": "Rendering with kustomize allows Kubernetes developers to customize raw, template-free YAML files for multiple purposes. Skaffold can work with kustomize by calling its command-line interface.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:20:28", "type": "section_detail", "page_metadata": {"ogTitle": "Kustomize", "ogSiteName": "Skaffold", "og:type": "article", "ogUrl": "https://skaffold.dev/docs/renderers/kustomize/", "article:section": "docs", "robots": "index, follow", "twitter:card": "summary", "og:description": "Rendering with kustomize kustomize allows Kubernetes developers to customize raw, template-free YAML files for multiple purposes. Skaffold can work with kustomize by calling its command-line interface.\nConfiguration To use kustomize with Skaffold, add render type kustomize to the manifests section of skaffold.yaml.\nThe kustomize configuration accepts a list of paths to folders containing a kustomize.yaml file.\nExample The following manifests section instructs Skaffold to render artifacts using kustomize. Each entry should point to a folder with a kustomize.", "og:url": "https://skaffold.dev/docs/renderers/kustomize/", "article:modified_time": "2025-01-23T10:14:58-05:00", "twitter:title": "Kustomize", "title": "Kustomize | Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "generator": "Hugo 0.99.1", "twitter:description": "Rendering with kustomize kustomize allows Kubernetes developers to customize raw, template-free YAML files for multiple purposes. Skaffold can work with kustomize by calling its command-line interface.\nConfiguration To use kustomize with Skaffold, add render type kustomize to the manifests section of skaffold.yaml.\nThe kustomize configuration accepts a list of paths to folders containing a kustomize.yaml file.\nExample The following manifests section instructs Skaffold to render artifacts using kustomize. Each entry should point to a folder with a kustomize.", "language": "en", "modifiedTime": "2025-01-23T10:14:58-05:00", "ogDescription": "Rendering with kustomize kustomize allows Kubernetes developers to customize raw, template-free YAML files for multiple purposes. Skaffold can work with kustomize by calling its command-line interface.\nConfiguration To use kustomize with Skaffold, add render type kustomize to the manifests section of skaffold.yaml.\nThe kustomize configuration accepts a list of paths to folders containing a kustomize.yaml file.\nExample The following manifests section instructs Skaffold to render artifacts using kustomize. Each entry should point to a folder with a kustomize.", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "description": "Rendering with kustomize\nkustomize allows Kubernetes\ndevelopers to customize raw, template-free YAML files for multiple purposes.\nSkaffold can work …", "og:title": "Kustomize", "og:site_name": "Skaffold", "scrapeId": "27695dcc-6bbc-4e81-a301-bc89ed34bc19", "sourceURL": "https://skaffold.dev/docs/renderers/kustomize", "url": "https://skaffold.dev/docs/renderers/kustomize/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you give me some code examples for Kustomize beta in skaffold?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Skaffold manifests section example**:\n\n```yaml\nmanifests:\n   kustomize:\n      paths:\n       - path/to/folder-with-kustomize-dot-yaml\n\n```\n\nThis snippet shows you how to skaffold manifests section example, which is an important aspect of kustomize beta.\n\n", "metadata": {"source_url": "https://skaffold.dev/docs/renderers/kustomize", "title": "Kustomize beta", "description": "Rendering with kustomize allows Kubernetes developers to customize raw, template-free YAML files for multiple purposes. Skaffold can work with kustomize by calling its command-line interface.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:20:28", "type": "code_examples", "page_metadata": {"ogTitle": "Kustomize", "ogSiteName": "Skaffold", "og:type": "article", "ogUrl": "https://skaffold.dev/docs/renderers/kustomize/", "article:section": "docs", "robots": "index, follow", "twitter:card": "summary", "og:description": "Rendering with kustomize kustomize allows Kubernetes developers to customize raw, template-free YAML files for multiple purposes. Skaffold can work with kustomize by calling its command-line interface.\nConfiguration To use kustomize with Skaffold, add render type kustomize to the manifests section of skaffold.yaml.\nThe kustomize configuration accepts a list of paths to folders containing a kustomize.yaml file.\nExample The following manifests section instructs Skaffold to render artifacts using kustomize. Each entry should point to a folder with a kustomize.", "og:url": "https://skaffold.dev/docs/renderers/kustomize/", "article:modified_time": "2025-01-23T10:14:58-05:00", "twitter:title": "Kustomize", "title": "Kustomize | Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "generator": "Hugo 0.99.1", "twitter:description": "Rendering with kustomize kustomize allows Kubernetes developers to customize raw, template-free YAML files for multiple purposes. Skaffold can work with kustomize by calling its command-line interface.\nConfiguration To use kustomize with Skaffold, add render type kustomize to the manifests section of skaffold.yaml.\nThe kustomize configuration accepts a list of paths to folders containing a kustomize.yaml file.\nExample The following manifests section instructs Skaffold to render artifacts using kustomize. Each entry should point to a folder with a kustomize.", "language": "en", "modifiedTime": "2025-01-23T10:14:58-05:00", "ogDescription": "Rendering with kustomize kustomize allows Kubernetes developers to customize raw, template-free YAML files for multiple purposes. Skaffold can work with kustomize by calling its command-line interface.\nConfiguration To use kustomize with Skaffold, add render type kustomize to the manifests section of skaffold.yaml.\nThe kustomize configuration accepts a list of paths to folders containing a kustomize.yaml file.\nExample The following manifests section instructs Skaffold to render artifacts using kustomize. Each entry should point to a folder with a kustomize.", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "description": "Rendering with kustomize\nkustomize allows Kubernetes\ndevelopers to customize raw, template-free YAML files for multiple purposes.\nSkaffold can work …", "og:title": "Kustomize", "og:site_name": "Skaffold", "scrapeId": "27695dcc-6bbc-4e81-a301-bc89ed34bc19", "sourceURL": "https://skaffold.dev/docs/renderers/kustomize", "url": "https://skaffold.dev/docs/renderers/kustomize/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: What are some tips for using Kustomize beta in skaffold effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nEnsure kustomize CLI is installed on your machine as Skaffold will not install it.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://skaffold.dev/docs/renderers/kustomize", "title": "Kustomize beta", "description": "Rendering with kustomize allows Kubernetes developers to customize raw, template-free YAML files for multiple purposes. Skaffold can work with kustomize by calling its command-line interface.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:20:28", "type": "best_practices", "page_metadata": {"ogTitle": "Kustomize", "ogSiteName": "Skaffold", "og:type": "article", "ogUrl": "https://skaffold.dev/docs/renderers/kustomize/", "article:section": "docs", "robots": "index, follow", "twitter:card": "summary", "og:description": "Rendering with kustomize kustomize allows Kubernetes developers to customize raw, template-free YAML files for multiple purposes. Skaffold can work with kustomize by calling its command-line interface.\nConfiguration To use kustomize with Skaffold, add render type kustomize to the manifests section of skaffold.yaml.\nThe kustomize configuration accepts a list of paths to folders containing a kustomize.yaml file.\nExample The following manifests section instructs Skaffold to render artifacts using kustomize. Each entry should point to a folder with a kustomize.", "og:url": "https://skaffold.dev/docs/renderers/kustomize/", "article:modified_time": "2025-01-23T10:14:58-05:00", "twitter:title": "Kustomize", "title": "Kustomize | Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "generator": "Hugo 0.99.1", "twitter:description": "Rendering with kustomize kustomize allows Kubernetes developers to customize raw, template-free YAML files for multiple purposes. Skaffold can work with kustomize by calling its command-line interface.\nConfiguration To use kustomize with Skaffold, add render type kustomize to the manifests section of skaffold.yaml.\nThe kustomize configuration accepts a list of paths to folders containing a kustomize.yaml file.\nExample The following manifests section instructs Skaffold to render artifacts using kustomize. Each entry should point to a folder with a kustomize.", "language": "en", "modifiedTime": "2025-01-23T10:14:58-05:00", "ogDescription": "Rendering with kustomize kustomize allows Kubernetes developers to customize raw, template-free YAML files for multiple purposes. Skaffold can work with kustomize by calling its command-line interface.\nConfiguration To use kustomize with Skaffold, add render type kustomize to the manifests section of skaffold.yaml.\nThe kustomize configuration accepts a list of paths to folders containing a kustomize.yaml file.\nExample The following manifests section instructs Skaffold to render artifacts using kustomize. Each entry should point to a folder with a kustomize.", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "description": "Rendering with kustomize\nkustomize allows Kubernetes\ndevelopers to customize raw, template-free YAML files for multiple purposes.\nSkaffold can work …", "og:title": "Kustomize", "og:site_name": "Skaffold", "scrapeId": "27695dcc-6bbc-4e81-a301-bc89ed34bc19", "sourceURL": "https://skaffold.dev/docs/renderers/kustomize", "url": "https://skaffold.dev/docs/renderers/kustomize/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what Continuous Delivery is in skaffold?\n\nAssistant: Sure, I'd be happy to explain Continuous Delivery in skaffold.\n\n# Continuous Delivery\n\nThis page covers the use of Skaffold for Continuous Delivery, detailing commands and workflows for deploying applications using Skaffold in CI/CD pipelines.Here's a quick rundown of what this is about:\n\n## Run entire pipeline end-to-end\n\n`skaffold run` is a single command for a one-off deployment. It runs through every major phase of the Skaffold lifecycle: building your application images, tagging these images (and optionally pushing them to a remote registry), deploying your application to the target cluster, and monitoring the created resources for readiness.\n\nWe recommend `skaffold run` for the simplest Continuous Delivery setup, where it is sufficient to have a single step that deploys from version control to a cluster.\n\nFor more sophisticated Continuous Delivery pipelines, Skaffold offers building blocks:\n\n- [status-check](https://skaffold.dev/docs/status-check/) - wait for `deployments` to stabilize and succeed only if all deployments are successful\n- [`skaffold build`](https://skaffold.dev/docs/workflows/ci-cd/#skaffold-build-skaffold-deploy) \\- build, tag and push artifacts to a registry\n- [`skaffold deploy`](https://skaffold.dev/docs/workflows/ci-cd/#skaffold-build-skaffold-deploy) \\- deploy built artifacts to a cluster\n- [`skaffold render`](https://skaffold.dev/docs/workflows/ci-cd/#skaffold-render-skaffold-apply) \\- export the transformed Kubernetes manifests\n- [`skaffold apply`](https://skaffold.dev/docs/workflows/ci-cd/#skaffold-render-skaffold-apply) \\- send hydrated Kubernetes manifests to the API server to create resources on the target cluster\n\n## Traditional continuous delivery\n\n`skaffold build` will build your project’s artifacts, and push the build images to the specified registry. If your project is already configured to run with Skaffold, `skaffold build` can be a very lightweight way of setting up builds for your CI pipeline. Passing the `--file-output` flag to Skaffold build will also write out your built artifacts in JSON format to a file on disk, which can then by passed to `skaffold deploy` later on. This is a great way of “committing” your artifacts when they have reached a state that you’re comfortable with, especially for projects with multiple artifacts for multiple services.\n\nExample using the current git state as a unique file ID to “commit” build state:\n\nStoring the build result in a commit specific JSON file:\n\n```bash\nexport STATE=$(git rev-list -1 HEAD --abbrev-commit)\nskaffold build --file-output build-$STATE.json\n```\n\noutputs the tag generation and cache output from Skaffold:\n\n```bash\nGenerating tags...\n - gcr.io/k8s-skaffold/skaffold-example:v0.41.0-17-g3ad238db\nChecking cache...\n - gcr.io/k8s-skaffold/skaffold-example: Found. Tagging\n```\n\nThe content of the JSON file\n\n```bash\ncat build-$STATE.json\n```\n\nlooks like:\n\n```json\n{\"builds\":[{\"imageName\":\"gcr.io/k8s-skaffold/skaffold-example\",\"tag\":\"gcr.io/k8s-skaffold/skaffold-example:v0.41.0-17-g3ad238db@sha256:eeffb639f53368c4039b02a4d337bde44e3acc728b309a84353d4857ee95c369\"}]}\n```\n\nWe can then use this build result file to deploy with Skaffold:\n\n```bash\nskaffold deploy -a build-$STATE.json\n```\n\nand as we’d expect, we see a bit of deploy-related output from Skaffold:\n\n```bash\nTags used in deployment:\n - gcr.io/k8s-skaffold/skaffold-example -> gcr.io/k8s-skaffold/skaffold-example:v0.41.0-17-g3ad238db@sha256:eeffb639f53368c4039b02a4d337bde44e3acc728b309a84353d4857ee95c369\nStarting deploy...\n - pod/getting-started configured\n```\n\n## Separation of rendering and deployment\n\nSkaffold allows separating the generation of fully-hydrated Kubernetes manifests from the actual deployment of those manifests, using the `skaffold render` and `skaffold apply` commands.\n\n`skaffold render` builds all application images from your artifacts, templates the newly-generated image tags into your Kubernetes manifests (based on your project’s deployment configuration), and then prints out the final hydrated manifests to a file or your terminal. This allows you to capture the full, declarative state of your application in configuration, such that _applying_ the changes to your cluster can be done as a separate step.\n\n`skaffold apply` consumes one or more fully-hydrated Kubernetes manifests, and then sends the results directly to the Kubernetes control plane via `kubectl` to create resources on the target cluster. After creating the resources on your cluster, `skaffold apply` uses Skaffold’s built-in health checking to monitor the created resources for readiness. See [resource health checks](https://skaffold.dev/docs/status-check/) for more information on how Skaffold’s resource health checking works.\n\n_Note: `skaffold apply` always uses `kubectl` to deploy resources to a target cluster, regardless of deployment configuration in the provided skaffold.yaml. Only a small subset of deploy configuration is honored when running `skaffold apply`:_\n\n- deploy.statusCheckDeadlineSeconds\n- deploy.kubeContext\n- deploy.logs.prefix\n- deploy.kubectl.flags\n- deploy.kubectl.defaultNamespace\n- deploy.kustomize.flags\n- deploy.kustomize.defaultNamespace\n\n#### Note\n\n`skaffold apply` attempts to honor the deployment configuration mentioned above. But when conflicting configuration is detected in a multi-configuration project, `skaffold apply` will not work.\n\n`skaffold apply` works with any arbitrary Kubernetes YAML, whether it was generated by Skaffold or not, making it an ideal counterpart to `skaffold render`.\n\n## GitOps-style continuous delivery\n\nYou can use this separation of rendering and deploying to enable GitOps CD pipelines.\n\nGitOps-based CD pipelines traditionally see fully-hydrated Kubernetes manifests committed to a configuration Git repository (separate from the application source), which triggers a deployment pipeline that applies the changes to resources on the cluster.\n\n### Example: Hydrate manifests then deploy/apply to cluster\n\nFirst, use `skaffold render` to hydrate the Kubernetes resource file with a newly-built image tag:\n\n```code\n$ skaffold render --output render.yaml\n```\n\n```yaml\n# render.yaml\napiVersion: v1\nkind: Pod\nmetadata:\n  name: getting-started\n  namespace: default\nspec:\n  containers:\n  - image: gcr.io/k8s-skaffold/skaffold-example:v1.19.0-89-gdbedd2a20-dirty\n    name: getting-started\n```\n\nThen, we can apply this output directly to the cluster:\n\n```code\n$ skaffold apply render.yaml\n```\n\nStarting deploy...\n - pod/getting-started created\nWaiting for deployments to stabilize...\nDeployments stabilized in 49.277055ms\n\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/workflows/ci-cd", "title": "Continuous Delivery", "description": "This page covers the use of Skaffold for Continuous Delivery, detailing commands and workflows for deploying applications using Skaffold in CI/CD pipelines.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:32:04", "type": "overview", "page_metadata": {"generator": "Hugo 0.99.1", "og:description": "Note Skaffold is used under the hood to power Google Cloud Platform’s Cloud Deploy API. See the docs here for more information on how to use Skaffold + Cloud Deploy for CI/CD  Skaffold provides several features and sub-command “building blocks” that make it very useful for integrating with (or creating entirely new) CI/CD pipelines. The ability to use the same skaffold.yaml for iterative development and continuous delivery eases handing off an application from a development team to an ops team.", "ogUrl": "https://skaffold.dev/docs/workflows/ci-cd/", "article:modified_time": "2025-01-23T10:14:58-05:00", "article:section": "docs", "robots": "index, follow", "ogSiteName": "Skaffold", "ogDescription": "Note Skaffold is used under the hood to power Google Cloud Platform’s Cloud Deploy API. See the docs here for more information on how to use Skaffold + Cloud Deploy for CI/CD  Skaffold provides several features and sub-command “building blocks” that make it very useful for integrating with (or creating entirely new) CI/CD pipelines. The ability to use the same skaffold.yaml for iterative development and continuous delivery eases handing off an application from a development team to an ops team.", "description": "\n\n\n    Note\n    Skaffold is used under the hood to power Google Cloud Platform’s Cloud Deploy API.  See the docs here for more information on …", "twitter:card": "summary", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:type": "article", "og:title": "Continuous Delivery", "og:url": "https://skaffold.dev/docs/workflows/ci-cd/", "title": "Continuous Delivery | Skaffold", "twitter:description": "Note Skaffold is used under the hood to power Google Cloud Platform’s Cloud Deploy API. See the docs here for more information on how to use Skaffold + Cloud Deploy for CI/CD  Skaffold provides several features and sub-command “building blocks” that make it very useful for integrating with (or creating entirely new) CI/CD pipelines. The ability to use the same skaffold.yaml for iterative development and continuous delivery eases handing off an application from a development team to an ops team.", "ogTitle": "Continuous Delivery", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:site_name": "Skaffold", "twitter:title": "Continuous Delivery", "language": "en", "scrapeId": "056e0227-7326-49a2-92c8-5984640f6b9a", "sourceURL": "https://skaffold.dev/docs/workflows/ci-cd", "url": "https://skaffold.dev/docs/workflows/ci-cd/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I run entire pipeline end-to-end in skaffold?\n\nAssistant: To run entire pipeline end-to-end in skaffold, here's what you do:\n`skaffold run` is a single command for a one-off deployment. It runs through every major phase of the Skaffold lifecycle: building your application images, tagging these images (and optionally pushing them to a remote registry), deploying your application to the target cluster, and monitoring the created resources for readiness.\n\nWe recommend `skaffold run` for the simplest Continuous Delivery setup, where it is sufficient to have a single step that deploys from version control to a cluster.\n\nFor more sophisticated Continuous Delivery pipelines, Skaffold offers building blocks:\n\n- [status-check](https://skaffold.dev/docs/status-check/) - wait for `deployments` to stabilize and succeed only if all deployments are successful\n- [`skaffold build`](https://skaffold.dev/docs/workflows/ci-cd/#skaffold-build-skaffold-deploy) \\- build, tag and push artifacts to a registry\n- [`skaffold deploy`](https://skaffold.dev/docs/workflows/ci-cd/#skaffold-build-skaffold-deploy) \\- deploy built artifacts to a cluster\n- [`skaffold render`](https://skaffold.dev/docs/workflows/ci-cd/#skaffold-render-skaffold-apply) \\- export the transformed Kubernetes manifests\n- [`skaffold apply`](https://skaffold.dev/docs/workflows/ci-cd/#skaffold-render-skaffold-apply) \\- send hydrated Kubernetes manifests to the API server to create resources on the target cluster.\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/workflows/ci-cd", "title": "Continuous Delivery", "description": "This page covers the use of Skaffold for Continuous Delivery, detailing commands and workflows for deploying applications using Skaffold in CI/CD pipelines.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:32:04", "type": "section_detail", "page_metadata": {"generator": "Hugo 0.99.1", "og:description": "Note Skaffold is used under the hood to power Google Cloud Platform’s Cloud Deploy API. See the docs here for more information on how to use Skaffold + Cloud Deploy for CI/CD  Skaffold provides several features and sub-command “building blocks” that make it very useful for integrating with (or creating entirely new) CI/CD pipelines. The ability to use the same skaffold.yaml for iterative development and continuous delivery eases handing off an application from a development team to an ops team.", "ogUrl": "https://skaffold.dev/docs/workflows/ci-cd/", "article:modified_time": "2025-01-23T10:14:58-05:00", "article:section": "docs", "robots": "index, follow", "ogSiteName": "Skaffold", "ogDescription": "Note Skaffold is used under the hood to power Google Cloud Platform’s Cloud Deploy API. See the docs here for more information on how to use Skaffold + Cloud Deploy for CI/CD  Skaffold provides several features and sub-command “building blocks” that make it very useful for integrating with (or creating entirely new) CI/CD pipelines. The ability to use the same skaffold.yaml for iterative development and continuous delivery eases handing off an application from a development team to an ops team.", "description": "\n\n\n    Note\n    Skaffold is used under the hood to power Google Cloud Platform’s Cloud Deploy API.  See the docs here for more information on …", "twitter:card": "summary", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:type": "article", "og:title": "Continuous Delivery", "og:url": "https://skaffold.dev/docs/workflows/ci-cd/", "title": "Continuous Delivery | Skaffold", "twitter:description": "Note Skaffold is used under the hood to power Google Cloud Platform’s Cloud Deploy API. See the docs here for more information on how to use Skaffold + Cloud Deploy for CI/CD  Skaffold provides several features and sub-command “building blocks” that make it very useful for integrating with (or creating entirely new) CI/CD pipelines. The ability to use the same skaffold.yaml for iterative development and continuous delivery eases handing off an application from a development team to an ops team.", "ogTitle": "Continuous Delivery", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:site_name": "Skaffold", "twitter:title": "Continuous Delivery", "language": "en", "scrapeId": "056e0227-7326-49a2-92c8-5984640f6b9a", "sourceURL": "https://skaffold.dev/docs/workflows/ci-cd", "url": "https://skaffold.dev/docs/workflows/ci-cd/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I traditional continuous delivery in skaffold?\n\nAssistant: To traditional continuous delivery in skaffold, here's what you do:\n`skaffold build` will build your project’s artifacts, and push the build images to the specified registry. If your project is already configured to run with Skaffold, `skaffold build` can be a very lightweight way of setting up builds for your CI pipeline. Passing the `--file-output` flag to Skaffold build will also write out your built artifacts in JSON format to a file on disk, which can then by passed to `skaffold deploy` later on. This is a great way of “committing” your artifacts when they have reached a state that you’re comfortable with, especially for projects with multiple artifacts for multiple services.\n\nExample using the current git state as a unique file ID to “commit” build state:\n\nStoring the build result in a commit specific JSON file:\n\n```bash\nexport STATE=$(git rev-list -1 HEAD --abbrev-commit)\nskaffold build --file-output build-$STATE.json\n```\n\noutputs the tag generation and cache output from Skaffold:\n\n```bash\nGenerating tags...\n - gcr.io/k8s-skaffold/skaffold-example:v0.41.0-17-g3ad238db\nChecking cache...\n - gcr.io/k8s-skaffold/skaffold-example: Found. Tagging\n```\n\nThe content of the JSON file\n\n```bash\ncat build-$STATE.json\n```\n\nlooks like:\n\n```json\n{\"builds\":[{\"imageName\":\"gcr.io/k8s-skaffold/skaffold-example\",\"tag\":\"gcr.io/k8s-skaffold/skaffold-example:v0.41.0-17-g3ad238db@sha256:eeffb639f53368c4039b02a4d337bde44e3acc728b309a84353d4857ee95c369\"}]}\n```\n\nWe can then use this build result file to deploy with Skaffold:\n\n```bash\nskaffold deploy -a build-$STATE.json\n```\n\nand as we’d expect, we see a bit of deploy-related output from Skaffold:\n\n```bash\nTags used in deployment:\n - gcr.io/k8s-skaffold/skaffold-example -> gcr.io/k8s-skaffold/skaffold-example:v0.41.0-17-g3ad238db@sha256:eeffb639f53368c4039b02a4d337bde44e3acc728b309a84353d4857ee95c369\nStarting deploy...\n - pod/getting-started configured\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/workflows/ci-cd", "title": "Continuous Delivery", "description": "This page covers the use of Skaffold for Continuous Delivery, detailing commands and workflows for deploying applications using Skaffold in CI/CD pipelines.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:32:04", "type": "section_detail", "page_metadata": {"generator": "Hugo 0.99.1", "og:description": "Note Skaffold is used under the hood to power Google Cloud Platform’s Cloud Deploy API. See the docs here for more information on how to use Skaffold + Cloud Deploy for CI/CD  Skaffold provides several features and sub-command “building blocks” that make it very useful for integrating with (or creating entirely new) CI/CD pipelines. The ability to use the same skaffold.yaml for iterative development and continuous delivery eases handing off an application from a development team to an ops team.", "ogUrl": "https://skaffold.dev/docs/workflows/ci-cd/", "article:modified_time": "2025-01-23T10:14:58-05:00", "article:section": "docs", "robots": "index, follow", "ogSiteName": "Skaffold", "ogDescription": "Note Skaffold is used under the hood to power Google Cloud Platform’s Cloud Deploy API. See the docs here for more information on how to use Skaffold + Cloud Deploy for CI/CD  Skaffold provides several features and sub-command “building blocks” that make it very useful for integrating with (or creating entirely new) CI/CD pipelines. The ability to use the same skaffold.yaml for iterative development and continuous delivery eases handing off an application from a development team to an ops team.", "description": "\n\n\n    Note\n    Skaffold is used under the hood to power Google Cloud Platform’s Cloud Deploy API.  See the docs here for more information on …", "twitter:card": "summary", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:type": "article", "og:title": "Continuous Delivery", "og:url": "https://skaffold.dev/docs/workflows/ci-cd/", "title": "Continuous Delivery | Skaffold", "twitter:description": "Note Skaffold is used under the hood to power Google Cloud Platform’s Cloud Deploy API. See the docs here for more information on how to use Skaffold + Cloud Deploy for CI/CD  Skaffold provides several features and sub-command “building blocks” that make it very useful for integrating with (or creating entirely new) CI/CD pipelines. The ability to use the same skaffold.yaml for iterative development and continuous delivery eases handing off an application from a development team to an ops team.", "ogTitle": "Continuous Delivery", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:site_name": "Skaffold", "twitter:title": "Continuous Delivery", "language": "en", "scrapeId": "056e0227-7326-49a2-92c8-5984640f6b9a", "sourceURL": "https://skaffold.dev/docs/workflows/ci-cd", "url": "https://skaffold.dev/docs/workflows/ci-cd/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I separation of rendering and deployment in skaffold?\n\nAssistant: To separation of rendering and deployment in skaffold, here's what you do:\nSkaffold allows separating the generation of fully-hydrated Kubernetes manifests from the actual deployment of those manifests, using the `skaffold render` and `skaffold apply` commands.\n\n`skaffold render` builds all application images from your artifacts, templates the newly-generated image tags into your Kubernetes manifests (based on your project’s deployment configuration), and then prints out the final hydrated manifests to a file or your terminal. This allows you to capture the full, declarative state of your application in configuration, such that _applying_ the changes to your cluster can be done as a separate step.\n\n`skaffold apply` consumes one or more fully-hydrated Kubernetes manifests, and then sends the results directly to the Kubernetes control plane via `kubectl` to create resources on the target cluster. After creating the resources on your cluster, `skaffold apply` uses Skaffold’s built-in health checking to monitor the created resources for readiness. See [resource health checks](https://skaffold.dev/docs/status-check/) for more information on how Skaffold’s resource health checking works.\n\n_Note: `skaffold apply` always uses `kubectl` to deploy resources to a target cluster, regardless of deployment configuration in the provided skaffold.yaml. Only a small subset of deploy configuration is honored when running `skaffold apply`:_\n\n- deploy.statusCheckDeadlineSeconds\n- deploy.kubeContext\n- deploy.logs.prefix\n- deploy.kubectl.flags\n- deploy.kubectl.defaultNamespace\n- deploy.kustomize.flags\n- deploy.kustomize.defaultNamespace\n\n#### Note\n\n`skaffold apply` attempts to honor the deployment configuration mentioned above. But when conflicting configuration is detected in a multi-configuration project, `skaffold apply` will not work.\n\n`skaffold apply` works with any arbitrary Kubernetes YAML, whether it was generated by Skaffold or not, making it an ideal counterpart to `skaffold render`..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/workflows/ci-cd", "title": "Continuous Delivery", "description": "This page covers the use of Skaffold for Continuous Delivery, detailing commands and workflows for deploying applications using Skaffold in CI/CD pipelines.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:32:04", "type": "section_detail", "page_metadata": {"generator": "Hugo 0.99.1", "og:description": "Note Skaffold is used under the hood to power Google Cloud Platform’s Cloud Deploy API. See the docs here for more information on how to use Skaffold + Cloud Deploy for CI/CD  Skaffold provides several features and sub-command “building blocks” that make it very useful for integrating with (or creating entirely new) CI/CD pipelines. The ability to use the same skaffold.yaml for iterative development and continuous delivery eases handing off an application from a development team to an ops team.", "ogUrl": "https://skaffold.dev/docs/workflows/ci-cd/", "article:modified_time": "2025-01-23T10:14:58-05:00", "article:section": "docs", "robots": "index, follow", "ogSiteName": "Skaffold", "ogDescription": "Note Skaffold is used under the hood to power Google Cloud Platform’s Cloud Deploy API. See the docs here for more information on how to use Skaffold + Cloud Deploy for CI/CD  Skaffold provides several features and sub-command “building blocks” that make it very useful for integrating with (or creating entirely new) CI/CD pipelines. The ability to use the same skaffold.yaml for iterative development and continuous delivery eases handing off an application from a development team to an ops team.", "description": "\n\n\n    Note\n    Skaffold is used under the hood to power Google Cloud Platform’s Cloud Deploy API.  See the docs here for more information on …", "twitter:card": "summary", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:type": "article", "og:title": "Continuous Delivery", "og:url": "https://skaffold.dev/docs/workflows/ci-cd/", "title": "Continuous Delivery | Skaffold", "twitter:description": "Note Skaffold is used under the hood to power Google Cloud Platform’s Cloud Deploy API. See the docs here for more information on how to use Skaffold + Cloud Deploy for CI/CD  Skaffold provides several features and sub-command “building blocks” that make it very useful for integrating with (or creating entirely new) CI/CD pipelines. The ability to use the same skaffold.yaml for iterative development and continuous delivery eases handing off an application from a development team to an ops team.", "ogTitle": "Continuous Delivery", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:site_name": "Skaffold", "twitter:title": "Continuous Delivery", "language": "en", "scrapeId": "056e0227-7326-49a2-92c8-5984640f6b9a", "sourceURL": "https://skaffold.dev/docs/workflows/ci-cd", "url": "https://skaffold.dev/docs/workflows/ci-cd/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I gitops-style continuous delivery in skaffold?\n\nAssistant: To gitops-style continuous delivery in skaffold, here's what you do:\nYou can use this separation of rendering and deploying to enable GitOps CD pipelines.\n\nGitOps-based CD pipelines traditionally see fully-hydrated Kubernetes manifests committed to a configuration Git repository (separate from the application source), which triggers a deployment pipeline that applies the changes to resources on the cluster.\n\n### Example: Hydrate manifests then deploy/apply to cluster\n\nFirst, use `skaffold render` to hydrate the Kubernetes resource file with a newly-built image tag:\n\n```code\n$ skaffold render --output render.yaml\n```\n\n```yaml\n# render.yaml\napiVersion: v1\nkind: Pod\nmetadata:\n  name: getting-started\n  namespace: default\nspec:\n  containers:\n  - image: gcr.io/k8s-skaffold/skaffold-example:v1.19.0-89-gdbedd2a20-dirty\n    name: getting-started\n```\n\nThen, we can apply this output directly to the cluster:\n\n```code\n$ skaffold apply render.yaml\n```\n\nStarting deploy...\n - pod/getting-started created\nWaiting for deployments to stabilize...\nDeployments stabilized in 49.277055ms\n.\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/workflows/ci-cd", "title": "Continuous Delivery", "description": "This page covers the use of Skaffold for Continuous Delivery, detailing commands and workflows for deploying applications using Skaffold in CI/CD pipelines.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:32:04", "type": "section_detail", "page_metadata": {"generator": "Hugo 0.99.1", "og:description": "Note Skaffold is used under the hood to power Google Cloud Platform’s Cloud Deploy API. See the docs here for more information on how to use Skaffold + Cloud Deploy for CI/CD  Skaffold provides several features and sub-command “building blocks” that make it very useful for integrating with (or creating entirely new) CI/CD pipelines. The ability to use the same skaffold.yaml for iterative development and continuous delivery eases handing off an application from a development team to an ops team.", "ogUrl": "https://skaffold.dev/docs/workflows/ci-cd/", "article:modified_time": "2025-01-23T10:14:58-05:00", "article:section": "docs", "robots": "index, follow", "ogSiteName": "Skaffold", "ogDescription": "Note Skaffold is used under the hood to power Google Cloud Platform’s Cloud Deploy API. See the docs here for more information on how to use Skaffold + Cloud Deploy for CI/CD  Skaffold provides several features and sub-command “building blocks” that make it very useful for integrating with (or creating entirely new) CI/CD pipelines. The ability to use the same skaffold.yaml for iterative development and continuous delivery eases handing off an application from a development team to an ops team.", "description": "\n\n\n    Note\n    Skaffold is used under the hood to power Google Cloud Platform’s Cloud Deploy API.  See the docs here for more information on …", "twitter:card": "summary", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:type": "article", "og:title": "Continuous Delivery", "og:url": "https://skaffold.dev/docs/workflows/ci-cd/", "title": "Continuous Delivery | Skaffold", "twitter:description": "Note Skaffold is used under the hood to power Google Cloud Platform’s Cloud Deploy API. See the docs here for more information on how to use Skaffold + Cloud Deploy for CI/CD  Skaffold provides several features and sub-command “building blocks” that make it very useful for integrating with (or creating entirely new) CI/CD pipelines. The ability to use the same skaffold.yaml for iterative development and continuous delivery eases handing off an application from a development team to an ops team.", "ogTitle": "Continuous Delivery", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:site_name": "Skaffold", "twitter:title": "Continuous Delivery", "language": "en", "scrapeId": "056e0227-7326-49a2-92c8-5984640f6b9a", "sourceURL": "https://skaffold.dev/docs/workflows/ci-cd", "url": "https://skaffold.dev/docs/workflows/ci-cd/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you give me some code examples for Continuous Delivery in skaffold?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Store build result in a commit specific JSON file**:\n\n```yaml\nexport STATE=$(git rev-list -1 HEAD --abbrev-commit)\nskaffold build --file-output build-$STATE.json\n```\n\nThis snippet shows you how to store build result in a commit specific json file, which is an important aspect of continuous delivery.\n\n**Output of the JSON file**:\n\n```yaml\ncat build-$STATE.json\n\n{\"builds\":[{\"imageName\":\"gcr.io/k8s-skaffold/skaffold-example\",\"tag\":\"gcr.io/k8s-skaffold/skaffold-example:v0.41.0-17-g3ad238db@sha256:eeffb639f53368c4039b02a4d337bde44e3acc728b309a84353d4857ee95c369\"}]}\n```\n\nThis snippet shows you how to output of the json file, which is an important aspect of continuous delivery.\n\n", "metadata": {"source_url": "https://skaffold.dev/docs/workflows/ci-cd", "title": "Continuous Delivery", "description": "This page covers the use of Skaffold for Continuous Delivery, detailing commands and workflows for deploying applications using Skaffold in CI/CD pipelines.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:32:04", "type": "code_examples", "page_metadata": {"generator": "Hugo 0.99.1", "og:description": "Note Skaffold is used under the hood to power Google Cloud Platform’s Cloud Deploy API. See the docs here for more information on how to use Skaffold + Cloud Deploy for CI/CD  Skaffold provides several features and sub-command “building blocks” that make it very useful for integrating with (or creating entirely new) CI/CD pipelines. The ability to use the same skaffold.yaml for iterative development and continuous delivery eases handing off an application from a development team to an ops team.", "ogUrl": "https://skaffold.dev/docs/workflows/ci-cd/", "article:modified_time": "2025-01-23T10:14:58-05:00", "article:section": "docs", "robots": "index, follow", "ogSiteName": "Skaffold", "ogDescription": "Note Skaffold is used under the hood to power Google Cloud Platform’s Cloud Deploy API. See the docs here for more information on how to use Skaffold + Cloud Deploy for CI/CD  Skaffold provides several features and sub-command “building blocks” that make it very useful for integrating with (or creating entirely new) CI/CD pipelines. The ability to use the same skaffold.yaml for iterative development and continuous delivery eases handing off an application from a development team to an ops team.", "description": "\n\n\n    Note\n    Skaffold is used under the hood to power Google Cloud Platform’s Cloud Deploy API.  See the docs here for more information on …", "twitter:card": "summary", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:type": "article", "og:title": "Continuous Delivery", "og:url": "https://skaffold.dev/docs/workflows/ci-cd/", "title": "Continuous Delivery | Skaffold", "twitter:description": "Note Skaffold is used under the hood to power Google Cloud Platform’s Cloud Deploy API. See the docs here for more information on how to use Skaffold + Cloud Deploy for CI/CD  Skaffold provides several features and sub-command “building blocks” that make it very useful for integrating with (or creating entirely new) CI/CD pipelines. The ability to use the same skaffold.yaml for iterative development and continuous delivery eases handing off an application from a development team to an ops team.", "ogTitle": "Continuous Delivery", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:site_name": "Skaffold", "twitter:title": "Continuous Delivery", "language": "en", "scrapeId": "056e0227-7326-49a2-92c8-5984640f6b9a", "sourceURL": "https://skaffold.dev/docs/workflows/ci-cd", "url": "https://skaffold.dev/docs/workflows/ci-cd/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: What are some tips for using Continuous Delivery in skaffold effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nUse `skaffold run` for the simplest Continuous Delivery setup.\n\nFor more sophisticated pipelines, utilize Skaffold's building blocks like `status-check`, `skaffold build`, `skaffold deploy`, `skaffold render`, and `skaffold apply`.\n\nUse the `--file-output` flag with `skaffold build` to write built artifacts in JSON format for later deployment.\n\nSeparate rendering and deployment using `skaffold render` and `skaffold apply` for better control over your CI/CD process.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://skaffold.dev/docs/workflows/ci-cd", "title": "Continuous Delivery", "description": "This page covers the use of Skaffold for Continuous Delivery, detailing commands and workflows for deploying applications using Skaffold in CI/CD pipelines.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:32:04", "type": "best_practices", "page_metadata": {"generator": "Hugo 0.99.1", "og:description": "Note Skaffold is used under the hood to power Google Cloud Platform’s Cloud Deploy API. See the docs here for more information on how to use Skaffold + Cloud Deploy for CI/CD  Skaffold provides several features and sub-command “building blocks” that make it very useful for integrating with (or creating entirely new) CI/CD pipelines. The ability to use the same skaffold.yaml for iterative development and continuous delivery eases handing off an application from a development team to an ops team.", "ogUrl": "https://skaffold.dev/docs/workflows/ci-cd/", "article:modified_time": "2025-01-23T10:14:58-05:00", "article:section": "docs", "robots": "index, follow", "ogSiteName": "Skaffold", "ogDescription": "Note Skaffold is used under the hood to power Google Cloud Platform’s Cloud Deploy API. See the docs here for more information on how to use Skaffold + Cloud Deploy for CI/CD  Skaffold provides several features and sub-command “building blocks” that make it very useful for integrating with (or creating entirely new) CI/CD pipelines. The ability to use the same skaffold.yaml for iterative development and continuous delivery eases handing off an application from a development team to an ops team.", "description": "\n\n\n    Note\n    Skaffold is used under the hood to power Google Cloud Platform’s Cloud Deploy API.  See the docs here for more information on …", "twitter:card": "summary", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:type": "article", "og:title": "Continuous Delivery", "og:url": "https://skaffold.dev/docs/workflows/ci-cd/", "title": "Continuous Delivery | Skaffold", "twitter:description": "Note Skaffold is used under the hood to power Google Cloud Platform’s Cloud Deploy API. See the docs here for more information on how to use Skaffold + Cloud Deploy for CI/CD  Skaffold provides several features and sub-command “building blocks” that make it very useful for integrating with (or creating entirely new) CI/CD pipelines. The ability to use the same skaffold.yaml for iterative development and continuous delivery eases handing off an application from a development team to an ops team.", "ogTitle": "Continuous Delivery", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:site_name": "Skaffold", "twitter:title": "Continuous Delivery", "language": "en", "scrapeId": "056e0227-7326-49a2-92c8-5984640f6b9a", "sourceURL": "https://skaffold.dev/docs/workflows/ci-cd", "url": "https://skaffold.dev/docs/workflows/ci-cd/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what Cross-platform and multi-platform build support is in skaffold?\n\nAssistant: Sure, I'd be happy to explain Cross-platform and multi-platform build support in skaffold.\n\n# Cross-platform and multi-platform build support\n\nSkaffold selectively supports building for an architecture that is different than the development machine architecture (cross-platform build) or building for multiple architectures (multiple-platform build).Here's a quick rundown of what this is about:\n\n## Overview\n\nSkaffold selectively supports building for an architecture that is different than the development machine architecture (cross-platform build) or building for multiple architectures (multiple-platform build). The target platforms for an artifact can be specified in one of the following ways:\n\n## Specifying Target Platforms\n\nThe target platforms for an artifact can be specified in one of the following ways:\n\n- The pipeline’s `platforms` property in the `skaffold.yaml` file.\n\n```yaml\nbuild:\n  platforms: [\"linux/arm64\"]\n  artifacts:\n    - image: example\n```\n\n- The artifact’s `platforms` constraints in the `skaffold.yaml` file. This overrides the value specified in the pipeline’s `platforms` property.\n\n```yaml\nbuild:\n  artifacts:\n    - image: app1\n      platforms: [\"linux/arm64\"]\n    - image: app2\n      platforms: [\"linux/amd64\"]\n```\n\n- The CLI flag `--platform` which overrides the values set in both the previous ways.\n\n```cmd\nskaffold build --platform=linux/arm64,linux/amd64\n```\n\nAdditionally, for `skaffold dev`, `skaffold debug` and `skaffold run` commands, where the build output gets deployed immediately, skaffold checks the platform for the kubernetes cluster nodes and attempts to build artifacts for that target platform.\n\n## Build Support Summary\n\nThe final list of target platforms need to ultimately be supported by the target builder, otherwise it’ll fail the build. The cross-platform build support for the various builders can be summarized in the following table:\n\n|  | Local Build | In Cluster Build | Remote on Google Cloud Build |\n| --- | --- | --- | --- |\n| **Dockerfile** | Cross-platform and multi-platform supported | Cross-platform supported but platform should match cluster node running the pod. | Cross-platform and multi-platform supported |\n| **Jib Maven and Gradle** | Cross-platform and multi-platform supported | - | Cross-platform and multi-platform supported |\n| **Cloud Native Buildpacks** | Only supports `linux/amd64` | - | Only supports `linux/amd64` |\n| **Bazel** | Cross-platform supported | - | - |\n| **ko** | Cross-platform and multi-platform supported | - | Cross-platform and multi-platform supported |\n| **Custom Script** | Cross-platform and multi-platform supported but requires user to implement it in the build script | Cross-platform and multi-platform supported but requires user to implement it in the build script | - |\n\n## Note\n\nSkaffold supports multi-platform image builds natively for the [jib builder](https://skaffold.dev/docs/builders/builder-types/jib/), the [ko builder](https://skaffold.dev/docs/builders/builder-types/ko/) and the [custom builder](https://skaffold.dev/docs/builders/builder-types/custom/). For other builders that support building cross-architecture images, Skaffold will iteratively build a single platform image for each target architecture and stitch them together into a multi-platform image, and push it to the registry.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/builders/cross-platform", "title": "Cross-platform and multi-platform build support", "description": "Skaffold selectively supports building for an architecture that is different than the development machine architecture (cross-platform build) or building for multiple architectures (multiple-platform build).", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:32:20", "type": "overview", "page_metadata": {"twitter:description": "Skaffold selectively supports building for an architecture that is different than the development machine architecture (cross-platform build) or building for multiple architectures (multiple-platform build). The target platforms for an artifact can be specified in one of the following ways:\n The pipeline’s platforms property in the skaffold.yaml file.  build:platforms:[\"linux/arm64\"]artifacts:- image:example  The artifact’s platforms constraints in the skaffold.yaml file. This overrides the value specified in the pipeline’s platforms property.  build:artifacts:- image:app1platforms:[\"linux/arm64\"]- image:app2platforms:[\"linux/amd64\"]  The CLI flag --platform which overrides the values set in both the previous ways.", "title": "Cross-platform and multi-platform build support | Skaffold", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:url": "https://skaffold.dev/docs/builders/cross-platform/", "ogDescription": "Skaffold selectively supports building for an architecture that is different than the development machine architecture (cross-platform build) or building for multiple architectures (multiple-platform build). The target platforms for an artifact can be specified in one of the following ways:\n The pipeline’s platforms property in the skaffold.yaml file.  build:platforms:[\"linux/arm64\"]artifacts:- image:example  The artifact’s platforms constraints in the skaffold.yaml file. This overrides the value specified in the pipeline’s platforms property.  build:artifacts:- image:app1platforms:[\"linux/arm64\"]- image:app2platforms:[\"linux/amd64\"]  The CLI flag --platform which overrides the values set in both the previous ways.", "ogSiteName": "Skaffold", "modifiedTime": "2025-01-23T10:14:58-05:00", "article:modified_time": "2025-01-23T10:14:58-05:00", "generator": "Hugo 0.99.1", "description": "Skaffold selectively supports building for an architecture that is different than the development machine architecture (cross-platform build) or …", "article:section": "docs", "ogUrl": "https://skaffold.dev/docs/builders/cross-platform/", "og:description": "Skaffold selectively supports building for an architecture that is different than the development machine architecture (cross-platform build) or building for multiple architectures (multiple-platform build). The target platforms for an artifact can be specified in one of the following ways:\n The pipeline’s platforms property in the skaffold.yaml file.  build:platforms:[\"linux/arm64\"]artifacts:- image:example  The artifact’s platforms constraints in the skaffold.yaml file. This overrides the value specified in the pipeline’s platforms property.  build:artifacts:- image:app1platforms:[\"linux/arm64\"]- image:app2platforms:[\"linux/amd64\"]  The CLI flag --platform which overrides the values set in both the previous ways.", "og:type": "article", "robots": "index, follow", "twitter:title": "Cross-platform and multi-platform build support", "language": "en", "og:title": "Cross-platform and multi-platform build support", "og:site_name": "Skaffold", "ogTitle": "Cross-platform and multi-platform build support", "twitter:card": "summary", "scrapeId": "3339c69f-9454-4387-a4d9-a5ed8692b700", "sourceURL": "https://skaffold.dev/docs/builders/cross-platform", "url": "https://skaffold.dev/docs/builders/cross-platform/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I overview in skaffold?\n\nAssistant: To overview in skaffold, here's what you do:\nSkaffold selectively supports building for an architecture that is different than the development machine architecture (cross-platform build) or building for multiple architectures (multiple-platform build). The target platforms for an artifact can be specified in one of the following ways:.\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/builders/cross-platform", "title": "Cross-platform and multi-platform build support", "description": "Skaffold selectively supports building for an architecture that is different than the development machine architecture (cross-platform build) or building for multiple architectures (multiple-platform build).", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:32:20", "type": "section_detail", "page_metadata": {"twitter:description": "Skaffold selectively supports building for an architecture that is different than the development machine architecture (cross-platform build) or building for multiple architectures (multiple-platform build). The target platforms for an artifact can be specified in one of the following ways:\n The pipeline’s platforms property in the skaffold.yaml file.  build:platforms:[\"linux/arm64\"]artifacts:- image:example  The artifact’s platforms constraints in the skaffold.yaml file. This overrides the value specified in the pipeline’s platforms property.  build:artifacts:- image:app1platforms:[\"linux/arm64\"]- image:app2platforms:[\"linux/amd64\"]  The CLI flag --platform which overrides the values set in both the previous ways.", "title": "Cross-platform and multi-platform build support | Skaffold", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:url": "https://skaffold.dev/docs/builders/cross-platform/", "ogDescription": "Skaffold selectively supports building for an architecture that is different than the development machine architecture (cross-platform build) or building for multiple architectures (multiple-platform build). The target platforms for an artifact can be specified in one of the following ways:\n The pipeline’s platforms property in the skaffold.yaml file.  build:platforms:[\"linux/arm64\"]artifacts:- image:example  The artifact’s platforms constraints in the skaffold.yaml file. This overrides the value specified in the pipeline’s platforms property.  build:artifacts:- image:app1platforms:[\"linux/arm64\"]- image:app2platforms:[\"linux/amd64\"]  The CLI flag --platform which overrides the values set in both the previous ways.", "ogSiteName": "Skaffold", "modifiedTime": "2025-01-23T10:14:58-05:00", "article:modified_time": "2025-01-23T10:14:58-05:00", "generator": "Hugo 0.99.1", "description": "Skaffold selectively supports building for an architecture that is different than the development machine architecture (cross-platform build) or …", "article:section": "docs", "ogUrl": "https://skaffold.dev/docs/builders/cross-platform/", "og:description": "Skaffold selectively supports building for an architecture that is different than the development machine architecture (cross-platform build) or building for multiple architectures (multiple-platform build). The target platforms for an artifact can be specified in one of the following ways:\n The pipeline’s platforms property in the skaffold.yaml file.  build:platforms:[\"linux/arm64\"]artifacts:- image:example  The artifact’s platforms constraints in the skaffold.yaml file. This overrides the value specified in the pipeline’s platforms property.  build:artifacts:- image:app1platforms:[\"linux/arm64\"]- image:app2platforms:[\"linux/amd64\"]  The CLI flag --platform which overrides the values set in both the previous ways.", "og:type": "article", "robots": "index, follow", "twitter:title": "Cross-platform and multi-platform build support", "language": "en", "og:title": "Cross-platform and multi-platform build support", "og:site_name": "Skaffold", "ogTitle": "Cross-platform and multi-platform build support", "twitter:card": "summary", "scrapeId": "3339c69f-9454-4387-a4d9-a5ed8692b700", "sourceURL": "https://skaffold.dev/docs/builders/cross-platform", "url": "https://skaffold.dev/docs/builders/cross-platform/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I specifying target platforms in skaffold?\n\nAssistant: To specifying target platforms in skaffold, here's what you do:\nThe target platforms for an artifact can be specified in one of the following ways:\n\n- The pipeline’s `platforms` property in the `skaffold.yaml` file.\n\n```yaml\nbuild:\n  platforms: [\"linux/arm64\"]\n  artifacts:\n    - image: example\n```\n\n- The artifact’s `platforms` constraints in the `skaffold.yaml` file. This overrides the value specified in the pipeline’s `platforms` property.\n\n```yaml\nbuild:\n  artifacts:\n    - image: app1\n      platforms: [\"linux/arm64\"]\n    - image: app2\n      platforms: [\"linux/amd64\"]\n```\n\n- The CLI flag `--platform` which overrides the values set in both the previous ways.\n\n```cmd\nskaffold build --platform=linux/arm64,linux/amd64\n```\n\nAdditionally, for `skaffold dev`, `skaffold debug` and `skaffold run` commands, where the build output gets deployed immediately, skaffold checks the platform for the kubernetes cluster nodes and attempts to build artifacts for that target platform..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/builders/cross-platform", "title": "Cross-platform and multi-platform build support", "description": "Skaffold selectively supports building for an architecture that is different than the development machine architecture (cross-platform build) or building for multiple architectures (multiple-platform build).", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:32:20", "type": "section_detail", "page_metadata": {"twitter:description": "Skaffold selectively supports building for an architecture that is different than the development machine architecture (cross-platform build) or building for multiple architectures (multiple-platform build). The target platforms for an artifact can be specified in one of the following ways:\n The pipeline’s platforms property in the skaffold.yaml file.  build:platforms:[\"linux/arm64\"]artifacts:- image:example  The artifact’s platforms constraints in the skaffold.yaml file. This overrides the value specified in the pipeline’s platforms property.  build:artifacts:- image:app1platforms:[\"linux/arm64\"]- image:app2platforms:[\"linux/amd64\"]  The CLI flag --platform which overrides the values set in both the previous ways.", "title": "Cross-platform and multi-platform build support | Skaffold", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:url": "https://skaffold.dev/docs/builders/cross-platform/", "ogDescription": "Skaffold selectively supports building for an architecture that is different than the development machine architecture (cross-platform build) or building for multiple architectures (multiple-platform build). The target platforms for an artifact can be specified in one of the following ways:\n The pipeline’s platforms property in the skaffold.yaml file.  build:platforms:[\"linux/arm64\"]artifacts:- image:example  The artifact’s platforms constraints in the skaffold.yaml file. This overrides the value specified in the pipeline’s platforms property.  build:artifacts:- image:app1platforms:[\"linux/arm64\"]- image:app2platforms:[\"linux/amd64\"]  The CLI flag --platform which overrides the values set in both the previous ways.", "ogSiteName": "Skaffold", "modifiedTime": "2025-01-23T10:14:58-05:00", "article:modified_time": "2025-01-23T10:14:58-05:00", "generator": "Hugo 0.99.1", "description": "Skaffold selectively supports building for an architecture that is different than the development machine architecture (cross-platform build) or …", "article:section": "docs", "ogUrl": "https://skaffold.dev/docs/builders/cross-platform/", "og:description": "Skaffold selectively supports building for an architecture that is different than the development machine architecture (cross-platform build) or building for multiple architectures (multiple-platform build). The target platforms for an artifact can be specified in one of the following ways:\n The pipeline’s platforms property in the skaffold.yaml file.  build:platforms:[\"linux/arm64\"]artifacts:- image:example  The artifact’s platforms constraints in the skaffold.yaml file. This overrides the value specified in the pipeline’s platforms property.  build:artifacts:- image:app1platforms:[\"linux/arm64\"]- image:app2platforms:[\"linux/amd64\"]  The CLI flag --platform which overrides the values set in both the previous ways.", "og:type": "article", "robots": "index, follow", "twitter:title": "Cross-platform and multi-platform build support", "language": "en", "og:title": "Cross-platform and multi-platform build support", "og:site_name": "Skaffold", "ogTitle": "Cross-platform and multi-platform build support", "twitter:card": "summary", "scrapeId": "3339c69f-9454-4387-a4d9-a5ed8692b700", "sourceURL": "https://skaffold.dev/docs/builders/cross-platform", "url": "https://skaffold.dev/docs/builders/cross-platform/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I build support summary in skaffold?\n\nAssistant: To build support summary in skaffold, here's what you do:\nThe final list of target platforms need to ultimately be supported by the target builder, otherwise it’ll fail the build. The cross-platform build support for the various builders can be summarized in the following table:\n\n|  | Local Build | In Cluster Build | Remote on Google Cloud Build |\n| --- | --- | --- | --- |\n| **Dockerfile** | Cross-platform and multi-platform supported | Cross-platform supported but platform should match cluster node running the pod. | Cross-platform and multi-platform supported |\n| **Jib Maven and Gradle** | Cross-platform and multi-platform supported | - | Cross-platform and multi-platform supported |\n| **Cloud Native Buildpacks** | Only supports `linux/amd64` | - | Only supports `linux/amd64` |\n| **Bazel** | Cross-platform supported | - | - |\n| **ko** | Cross-platform and multi-platform supported | - | Cross-platform and multi-platform supported |\n| **Custom Script** | Cross-platform and multi-platform supported but requires user to implement it in the build script | Cross-platform and multi-platform supported but requires user to implement it in the build script | - |.\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/builders/cross-platform", "title": "Cross-platform and multi-platform build support", "description": "Skaffold selectively supports building for an architecture that is different than the development machine architecture (cross-platform build) or building for multiple architectures (multiple-platform build).", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:32:20", "type": "section_detail", "page_metadata": {"twitter:description": "Skaffold selectively supports building for an architecture that is different than the development machine architecture (cross-platform build) or building for multiple architectures (multiple-platform build). The target platforms for an artifact can be specified in one of the following ways:\n The pipeline’s platforms property in the skaffold.yaml file.  build:platforms:[\"linux/arm64\"]artifacts:- image:example  The artifact’s platforms constraints in the skaffold.yaml file. This overrides the value specified in the pipeline’s platforms property.  build:artifacts:- image:app1platforms:[\"linux/arm64\"]- image:app2platforms:[\"linux/amd64\"]  The CLI flag --platform which overrides the values set in both the previous ways.", "title": "Cross-platform and multi-platform build support | Skaffold", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:url": "https://skaffold.dev/docs/builders/cross-platform/", "ogDescription": "Skaffold selectively supports building for an architecture that is different than the development machine architecture (cross-platform build) or building for multiple architectures (multiple-platform build). The target platforms for an artifact can be specified in one of the following ways:\n The pipeline’s platforms property in the skaffold.yaml file.  build:platforms:[\"linux/arm64\"]artifacts:- image:example  The artifact’s platforms constraints in the skaffold.yaml file. This overrides the value specified in the pipeline’s platforms property.  build:artifacts:- image:app1platforms:[\"linux/arm64\"]- image:app2platforms:[\"linux/amd64\"]  The CLI flag --platform which overrides the values set in both the previous ways.", "ogSiteName": "Skaffold", "modifiedTime": "2025-01-23T10:14:58-05:00", "article:modified_time": "2025-01-23T10:14:58-05:00", "generator": "Hugo 0.99.1", "description": "Skaffold selectively supports building for an architecture that is different than the development machine architecture (cross-platform build) or …", "article:section": "docs", "ogUrl": "https://skaffold.dev/docs/builders/cross-platform/", "og:description": "Skaffold selectively supports building for an architecture that is different than the development machine architecture (cross-platform build) or building for multiple architectures (multiple-platform build). The target platforms for an artifact can be specified in one of the following ways:\n The pipeline’s platforms property in the skaffold.yaml file.  build:platforms:[\"linux/arm64\"]artifacts:- image:example  The artifact’s platforms constraints in the skaffold.yaml file. This overrides the value specified in the pipeline’s platforms property.  build:artifacts:- image:app1platforms:[\"linux/arm64\"]- image:app2platforms:[\"linux/amd64\"]  The CLI flag --platform which overrides the values set in both the previous ways.", "og:type": "article", "robots": "index, follow", "twitter:title": "Cross-platform and multi-platform build support", "language": "en", "og:title": "Cross-platform and multi-platform build support", "og:site_name": "Skaffold", "ogTitle": "Cross-platform and multi-platform build support", "twitter:card": "summary", "scrapeId": "3339c69f-9454-4387-a4d9-a5ed8692b700", "sourceURL": "https://skaffold.dev/docs/builders/cross-platform", "url": "https://skaffold.dev/docs/builders/cross-platform/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I note in skaffold?\n\nAssistant: To note in skaffold, here's what you do:\nSkaffold supports multi-platform image builds natively for the [jib builder](https://skaffold.dev/docs/builders/builder-types/jib/), the [ko builder](https://skaffold.dev/docs/builders/builder-types/ko/) and the [custom builder](https://skaffold.dev/docs/builders/builder-types/custom/). For other builders that support building cross-architecture images, Skaffold will iteratively build a single platform image for each target architecture and stitch them together into a multi-platform image, and push it to the registry..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/builders/cross-platform", "title": "Cross-platform and multi-platform build support", "description": "Skaffold selectively supports building for an architecture that is different than the development machine architecture (cross-platform build) or building for multiple architectures (multiple-platform build).", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:32:20", "type": "section_detail", "page_metadata": {"twitter:description": "Skaffold selectively supports building for an architecture that is different than the development machine architecture (cross-platform build) or building for multiple architectures (multiple-platform build). The target platforms for an artifact can be specified in one of the following ways:\n The pipeline’s platforms property in the skaffold.yaml file.  build:platforms:[\"linux/arm64\"]artifacts:- image:example  The artifact’s platforms constraints in the skaffold.yaml file. This overrides the value specified in the pipeline’s platforms property.  build:artifacts:- image:app1platforms:[\"linux/arm64\"]- image:app2platforms:[\"linux/amd64\"]  The CLI flag --platform which overrides the values set in both the previous ways.", "title": "Cross-platform and multi-platform build support | Skaffold", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:url": "https://skaffold.dev/docs/builders/cross-platform/", "ogDescription": "Skaffold selectively supports building for an architecture that is different than the development machine architecture (cross-platform build) or building for multiple architectures (multiple-platform build). The target platforms for an artifact can be specified in one of the following ways:\n The pipeline’s platforms property in the skaffold.yaml file.  build:platforms:[\"linux/arm64\"]artifacts:- image:example  The artifact’s platforms constraints in the skaffold.yaml file. This overrides the value specified in the pipeline’s platforms property.  build:artifacts:- image:app1platforms:[\"linux/arm64\"]- image:app2platforms:[\"linux/amd64\"]  The CLI flag --platform which overrides the values set in both the previous ways.", "ogSiteName": "Skaffold", "modifiedTime": "2025-01-23T10:14:58-05:00", "article:modified_time": "2025-01-23T10:14:58-05:00", "generator": "Hugo 0.99.1", "description": "Skaffold selectively supports building for an architecture that is different than the development machine architecture (cross-platform build) or …", "article:section": "docs", "ogUrl": "https://skaffold.dev/docs/builders/cross-platform/", "og:description": "Skaffold selectively supports building for an architecture that is different than the development machine architecture (cross-platform build) or building for multiple architectures (multiple-platform build). The target platforms for an artifact can be specified in one of the following ways:\n The pipeline’s platforms property in the skaffold.yaml file.  build:platforms:[\"linux/arm64\"]artifacts:- image:example  The artifact’s platforms constraints in the skaffold.yaml file. This overrides the value specified in the pipeline’s platforms property.  build:artifacts:- image:app1platforms:[\"linux/arm64\"]- image:app2platforms:[\"linux/amd64\"]  The CLI flag --platform which overrides the values set in both the previous ways.", "og:type": "article", "robots": "index, follow", "twitter:title": "Cross-platform and multi-platform build support", "language": "en", "og:title": "Cross-platform and multi-platform build support", "og:site_name": "Skaffold", "ogTitle": "Cross-platform and multi-platform build support", "twitter:card": "summary", "scrapeId": "3339c69f-9454-4387-a4d9-a5ed8692b700", "sourceURL": "https://skaffold.dev/docs/builders/cross-platform", "url": "https://skaffold.dev/docs/builders/cross-platform/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you give me some code examples for Cross-platform and multi-platform build support in skaffold?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Pipeline Platforms Property Example**:\n\n```yaml\nbuild:\n  platforms: [\"linux/arm64\"]\n  artifacts:\n    - image: example\n\n```\n\nThis snippet shows you how to pipeline platforms property example, which is an important aspect of cross-platform and multi-platform build support.\n\n**Artifact Platforms Constraints Example**:\n\n```yaml\nbuild:\n  artifacts:\n    - image: app1\n      platforms: [\"linux/arm64\"]\n    - image: app2\n      platforms: [\"linux/amd64\"]\n\n```\n\nThis snippet shows you how to artifact platforms constraints example, which is an important aspect of cross-platform and multi-platform build support.\n\n**CLI Flag Example**:\n\n```yaml\nskaffold build --platform=linux/arm64,linux/amd64\n```\n\nThis snippet shows you how to cli flag example, which is an important aspect of cross-platform and multi-platform build support.\n\n", "metadata": {"source_url": "https://skaffold.dev/docs/builders/cross-platform", "title": "Cross-platform and multi-platform build support", "description": "Skaffold selectively supports building for an architecture that is different than the development machine architecture (cross-platform build) or building for multiple architectures (multiple-platform build).", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:32:20", "type": "code_examples", "page_metadata": {"twitter:description": "Skaffold selectively supports building for an architecture that is different than the development machine architecture (cross-platform build) or building for multiple architectures (multiple-platform build). The target platforms for an artifact can be specified in one of the following ways:\n The pipeline’s platforms property in the skaffold.yaml file.  build:platforms:[\"linux/arm64\"]artifacts:- image:example  The artifact’s platforms constraints in the skaffold.yaml file. This overrides the value specified in the pipeline’s platforms property.  build:artifacts:- image:app1platforms:[\"linux/arm64\"]- image:app2platforms:[\"linux/amd64\"]  The CLI flag --platform which overrides the values set in both the previous ways.", "title": "Cross-platform and multi-platform build support | Skaffold", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:url": "https://skaffold.dev/docs/builders/cross-platform/", "ogDescription": "Skaffold selectively supports building for an architecture that is different than the development machine architecture (cross-platform build) or building for multiple architectures (multiple-platform build). The target platforms for an artifact can be specified in one of the following ways:\n The pipeline’s platforms property in the skaffold.yaml file.  build:platforms:[\"linux/arm64\"]artifacts:- image:example  The artifact’s platforms constraints in the skaffold.yaml file. This overrides the value specified in the pipeline’s platforms property.  build:artifacts:- image:app1platforms:[\"linux/arm64\"]- image:app2platforms:[\"linux/amd64\"]  The CLI flag --platform which overrides the values set in both the previous ways.", "ogSiteName": "Skaffold", "modifiedTime": "2025-01-23T10:14:58-05:00", "article:modified_time": "2025-01-23T10:14:58-05:00", "generator": "Hugo 0.99.1", "description": "Skaffold selectively supports building for an architecture that is different than the development machine architecture (cross-platform build) or …", "article:section": "docs", "ogUrl": "https://skaffold.dev/docs/builders/cross-platform/", "og:description": "Skaffold selectively supports building for an architecture that is different than the development machine architecture (cross-platform build) or building for multiple architectures (multiple-platform build). The target platforms for an artifact can be specified in one of the following ways:\n The pipeline’s platforms property in the skaffold.yaml file.  build:platforms:[\"linux/arm64\"]artifacts:- image:example  The artifact’s platforms constraints in the skaffold.yaml file. This overrides the value specified in the pipeline’s platforms property.  build:artifacts:- image:app1platforms:[\"linux/arm64\"]- image:app2platforms:[\"linux/amd64\"]  The CLI flag --platform which overrides the values set in both the previous ways.", "og:type": "article", "robots": "index, follow", "twitter:title": "Cross-platform and multi-platform build support", "language": "en", "og:title": "Cross-platform and multi-platform build support", "og:site_name": "Skaffold", "ogTitle": "Cross-platform and multi-platform build support", "twitter:card": "summary", "scrapeId": "3339c69f-9454-4387-a4d9-a5ed8692b700", "sourceURL": "https://skaffold.dev/docs/builders/cross-platform", "url": "https://skaffold.dev/docs/builders/cross-platform/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: What are some tips for using Cross-platform and multi-platform build support in skaffold effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nEnsure the final list of target platforms is supported by the target builder to avoid build failures.\n\nFor multi-platform image builds, use builders that support this feature natively like Jib, ko, and custom builders.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://skaffold.dev/docs/builders/cross-platform", "title": "Cross-platform and multi-platform build support", "description": "Skaffold selectively supports building for an architecture that is different than the development machine architecture (cross-platform build) or building for multiple architectures (multiple-platform build).", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:32:20", "type": "best_practices", "page_metadata": {"twitter:description": "Skaffold selectively supports building for an architecture that is different than the development machine architecture (cross-platform build) or building for multiple architectures (multiple-platform build). The target platforms for an artifact can be specified in one of the following ways:\n The pipeline’s platforms property in the skaffold.yaml file.  build:platforms:[\"linux/arm64\"]artifacts:- image:example  The artifact’s platforms constraints in the skaffold.yaml file. This overrides the value specified in the pipeline’s platforms property.  build:artifacts:- image:app1platforms:[\"linux/arm64\"]- image:app2platforms:[\"linux/amd64\"]  The CLI flag --platform which overrides the values set in both the previous ways.", "title": "Cross-platform and multi-platform build support | Skaffold", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:url": "https://skaffold.dev/docs/builders/cross-platform/", "ogDescription": "Skaffold selectively supports building for an architecture that is different than the development machine architecture (cross-platform build) or building for multiple architectures (multiple-platform build). The target platforms for an artifact can be specified in one of the following ways:\n The pipeline’s platforms property in the skaffold.yaml file.  build:platforms:[\"linux/arm64\"]artifacts:- image:example  The artifact’s platforms constraints in the skaffold.yaml file. This overrides the value specified in the pipeline’s platforms property.  build:artifacts:- image:app1platforms:[\"linux/arm64\"]- image:app2platforms:[\"linux/amd64\"]  The CLI flag --platform which overrides the values set in both the previous ways.", "ogSiteName": "Skaffold", "modifiedTime": "2025-01-23T10:14:58-05:00", "article:modified_time": "2025-01-23T10:14:58-05:00", "generator": "Hugo 0.99.1", "description": "Skaffold selectively supports building for an architecture that is different than the development machine architecture (cross-platform build) or …", "article:section": "docs", "ogUrl": "https://skaffold.dev/docs/builders/cross-platform/", "og:description": "Skaffold selectively supports building for an architecture that is different than the development machine architecture (cross-platform build) or building for multiple architectures (multiple-platform build). The target platforms for an artifact can be specified in one of the following ways:\n The pipeline’s platforms property in the skaffold.yaml file.  build:platforms:[\"linux/arm64\"]artifacts:- image:example  The artifact’s platforms constraints in the skaffold.yaml file. This overrides the value specified in the pipeline’s platforms property.  build:artifacts:- image:app1platforms:[\"linux/arm64\"]- image:app2platforms:[\"linux/amd64\"]  The CLI flag --platform which overrides the values set in both the previous ways.", "og:type": "article", "robots": "index, follow", "twitter:title": "Cross-platform and multi-platform build support", "language": "en", "og:title": "Cross-platform and multi-platform build support", "og:site_name": "Skaffold", "ogTitle": "Cross-platform and multi-platform build support", "twitter:card": "summary", "scrapeId": "3339c69f-9454-4387-a4d9-a5ed8692b700", "sourceURL": "https://skaffold.dev/docs/builders/cross-platform", "url": "https://skaffold.dev/docs/builders/cross-platform/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what Custom Build Script is in skaffold?\n\nAssistant: Sure, I'd be happy to explain Custom Build Script in skaffold.\n\n# Custom Build Script\n\nCustom build scripts allow Skaffold users the flexibility to build artifacts with any builder they desire.Here's a quick rundown of what this is about:\n\n## Contract between Skaffold and Custom Build Script\n\nSkaffold will pass in the following additional environment variables to the custom build script:\n\n| Environment Variable | Description | Expectation |\n| --- | --- | --- |\n| $IMAGE | The fully qualified image name. For example, “gcr.io/image1:tag” | The custom build script is expected to build this image and tag it with the name provided in $IMAGE. The image should also be pushed if `$PUSH_IMAGE=true`. |\n| $PUSH_IMAGE | Set to true if the image in `$IMAGE` is expected to exist in a remote registry. Set to false if the image is expected to exist locally. | The custom build script will push the image `$IMAGE` if `$PUSH_IMAGE=true` |\n| $BUILD_CONTEXT | An absolute path to the directory this artifact is meant to be built from. Specified by artifact `context` in the skaffold.yaml. | None. |\n| $PLATFORMS | A comma-separated string of platforms to build the image for. For example, `linux/arm64,linux/amd64`. | If there’s only a single platform specified the custom build script should build for that platform. If multiple platforms are specified then the custom build script should build a multi-arch image comprising all those platforms. |\n| $SKIP_TEST | Whether to skip the tests after building. | None. |\n| Local environment variables | The current state of the local environment (e.g. `$HOST`, `$PATH)`. Determined by the golang [os.Environ](https://golang.org/pkg/os#Environ) function. | None. |\n\nAs described above, the custom build script is expected to:\n\n1. Build and tag the `$IMAGE` image\n2. Push the image if `$PUSH_IMAGE=true`\n\nOnce the build script has finished executing, Skaffold will try to obtain the digest of the newly built image from a remote registry (if `$PUSH_IMAGE=true`) or the local daemon (if `$PUSH_IMAGE=false`). If Skaffold fails to obtain the digest, it will error out.\n\n## Configuration\n\nTo use a custom build script, add a `custom` field to each corresponding artifact in the `build` section of the `skaffold.yaml`.\nSupported schema for `custom` includes:\n\n| Option | Description |\n| --- | --- |\n| `buildCommand` | command executed to build the image. |\n| `dependencies` | file dependencies that skaffold should watch for both rebuilding and file syncing for this artifact. |\n\n`buildCommand` is _required_ and points Skaffold to the custom build script which will be executed to build the artifact.\nThe [Go templates](https://golang.org/pkg/text/template/) syntax can be used to inject environment variables into the build command. For example: `buildCommand: ./build.sh --flag={{ .SOME_FLAG }}` will replace `{{ .SOME_FLAG }}` with the value of the `SOME_FLAG` environment variable.\n\n## Artifact Dependency\n\nYou can define dependency on other artifacts using the `requires` keyword. Skaffold will provide each required artifact’s built image as an environment variable keyed on the `alias` field that can be referenced directly in the build script.\n\n```yaml\nbuild:\n  artifacts:\n  - image: image1\n    custom:\n      # environment variable $IMG2 will be set to the build of image2\n      buildCommand: |\n        cat <<EOF | docker build --tag=$IMAGE --build-arg $IMG2 -\n        FROM busybox\n        ARG IMG2\n        RUN echo 'Got ARG IMG2=$IMG2'\n        EOF\n    requires:\n    - image: image2\n      alias: IMG2\n  - image: image2\n    custom:\n      buildCommand: echo 'FROM busybox' | docker build --tag=$IMAGE -\n```\n\n## Custom Build Script Locally\n\nIn addition to these [environment variables](https://skaffold.dev/docs/builders/builder-types/custom/#contract-between-skaffold-and-custom-build-script) Skaffold will pass in the following additional environment variables for local builder:\n\n| Environment Variable | Description | Expectation |\n| --- | --- | --- |\n| Docker daemon environment variables | Inform the custom builder of which docker daemon endpoint we are using. Allows custom build scripts to work with tools like Minikube. For Minikube, this is the output of `minikube docker-env`. | None. |\n\n**Configuration**\n\nTo configure custom build script locally, in addition to adding a [`custom` field](https://skaffold.dev/docs/builders/builder-types/custom/#configuration) to each corresponding artifact in the `build` add `local` to you `build` config.\n\n## Custom Build Script in Cluster\n\nIn addition to these [environment variables](https://skaffold.dev/docs/builders/builder-types/custom/#contract-between-skaffold-and-custom-build-script) Skaffold will pass in the following additional environment variables for cluster builder:\n\n| Environment Variable | Description | Expectation |\n| --- | --- | --- |\n| $KUBECONTEXT | The expected kubecontext in which the image will be built. | None. |\n| $NAMESPACE | The expected namespace in which the image will be built. | None. |\n| $PULL_SECRET_NAME | The name of the secret with authentication required to pull a base image/push the final image built on cluster. | None. |\n| $DOCKER_CONFIG_SECRET_NAME | The secret containing any required docker authentication for custom builds on cluster. | None. |\n| $TIMEOUT | The amount of time an on cluster build is allowed to run. | None. |\n\n**Configuration**\n\nTo configure custom build script in cluster, in addition to adding a [`custom` field](https://skaffold.dev/docs/builders/builder-types/custom/#configuration) to each corresponding artifact in the `build`, add `cluster` to your `build` config.\n\n## Custom Build Script on Google Cloud Build\n\nThis configuration is currently not supported.\n\n## Dependencies for a Custom Artifact\n\n`dependencies` tells the skaffold file watcher which files should be watched to trigger rebuilds and file syncs. Supported schema for `dependencies` includes:\n\n| Option | Description | Default |\n| --- | --- | --- |\n| `dockerfile` | should be set if the artifact is built from a Dockerfile, from which skaffold can determine dependencies. | `` |\n| `command` | represents a custom command that skaffold executes to obtain dependencies. The output of this command _must_ be a valid JSON array. | `` |\n| `paths` | should be set to the file dependencies for this artifact, so that the skaffold file watcher knows when to rebuild and perform file synchronization. | `[]` |\n| `ignore` | specifies the paths that should be ignored by skaffold’s file watcher. If a file exists in both `paths` and in `ignore`, it will be ignored, and will be excluded from both rebuilds and file synchronization. Will only work in conjunction with `paths`. | `[]` |\n\n#### Paths and Ignore\n\n`Paths` and `Ignore` are arrays used to list dependencies.\nAny paths in `Ignore` will be ignored by the skaffold file watcher, even if they are also specified in `Paths`.\n`Ignore` will only work in conjunction with `Paths`, and with none of the other custom artifact dependency types.\n\n```yaml\ncustom:\n  buildCommand: ./build.sh\n  dependencies:\n    paths:\n    - pkg/**\n    - src/*.go\n    ignore:\n    - vendor/**\n```\n\n## Dockerfile\n\nSkaffold can calculate dependencies from a Dockerfile for a custom artifact.\nPassing in the path to the Dockerfile and any build args, if necessary, will allow skaffold to do dependency calculation.\n\n| Option | Description | Default |\n| --- | --- | --- |\n| `path` | locates the Dockerfile relative to workspace. | `` |\n| `buildArgs` | key/value pairs used to resolve values of `ARG` instructions in a Dockerfile. Values can be constants or environment variables via the go template syntax. | `{}` |\n\n```yaml\ncustom:\n  buildCommand: ./build.sh\n  dependencies:\n    dockerfile:\n      path: path/to/Dockerfile\n      buildArgs:\n        file: foo\n```\n\n## Warning\n\n`buildArgs` are not passed to the custom build script. They are only used to resolve values of `ARG` instructions in the the given Dockerfile when listing the dependencies.\n\n## Dependencies from a command\n\nSometimes you might have a builder that can provide the dependencies for a given artifact.\nFor example bazel has the `bazel query deps` command.\nCustom artifact builders can ask Skaffold to execute a custom command, which Skaffold can use to get the dependencies for the artifact for file watching.\n\nThe command _must_ return dependencies as a JSON array, otherwise skaffold will error out.\n\nFor example, the following configuration is valid, as executing the dependency command returns a valid JSON array.\n\n```yaml\ncustom:\n  buildCommand: ./build.sh\n  dependencies:\n    command: echo [\"file1\",\"file2\",\"file3\"]\n```\n\n## File Sync\n\nSyncable files must be included in both the `paths` section of `dependencies`, so that the skaffold file watcher knows to watch them, and the `sync` section, so that skaffold knows to sync them.\n\n## Logging\n\n`STDOUT` and `STDERR` from the custom build script will be redirected and displayed within skaffold logs.\n\n## Example\n\nThe following `build` section instructs Skaffold to build an image `gcr.io/k8s-skaffold/example` with a custom build script `build.sh`:\n\n```yaml\nbuild:\n  artifacts:\n    - image: example\n      custom:\n        buildCommand: ./build.sh\n        dependencies:\n          paths:\n            - .\n          ignore:\n            - README*\n```\n\nA sample `build.sh` file, which builds an image with bazel and docker:\n\n```yaml\n#!/bin/bash\n\nbazel build //:skaffold_example.tar\nTAR_PATH=$(bazel info bazel-bin)\ndocker load -i $TAR_PATH/skaffold_example.tar\n\nimage=$(echo $IMAGE)\n\nif [ ! -z \"$image\" ]; then\n  pack build $image\n  if $PUSH_IMAGE\n  then\n    docker push $image\n  fi\nfi\n```\n\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/builders/builder-types/custom", "title": "Custom Build Script", "description": "Custom build scripts allow Skaffold users the flexibility to build artifacts with any builder they desire.", "has_code_examples": true, "has_best_practices": true, "section_count": 13, "timestamp": "2025-03-01 03:33:03", "type": "overview", "page_metadata": {"title": "Custom Build Script | Skaffold", "ogSiteName": "Skaffold", "og:description": "Custom build scripts allow Skaffold users the flexibility to build artifacts with any builder they desire. Users can write a custom build script which must abide by the following contract for Skaffold to work as expected:\nContract between Skaffold and Custom Build Script Skaffold will pass in the following additional environment variables to the custom build script:\n   Environment Variable Description Expectation     $IMAGE The fully qualified image name.", "ogTitle": "Custom Build Script", "generator": "Hugo 0.99.1", "og:title": "Custom Build Script", "description": "Custom build scripts allow Skaffold users the flexibility to build artifacts with any builder they desire.\nUsers can write a custom build script which …", "article:modified_time": "2025-01-23T10:14:58-05:00", "ogUrl": "https://skaffold.dev/docs/builders/builder-types/custom/", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:site_name": "Skaffold", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "twitter:description": "Custom build scripts allow Skaffold users the flexibility to build artifacts with any builder they desire. Users can write a custom build script which must abide by the following contract for Skaffold to work as expected:\nContract between Skaffold and Custom Build Script Skaffold will pass in the following additional environment variables to the custom build script:\n   Environment Variable Description Expectation     $IMAGE The fully qualified image name.", "language": "en", "twitter:card": "summary", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:type": "article", "robots": "index, follow", "og:url": "https://skaffold.dev/docs/builders/builder-types/custom/", "twitter:title": "Custom Build Script", "ogDescription": "Custom build scripts allow Skaffold users the flexibility to build artifacts with any builder they desire. Users can write a custom build script which must abide by the following contract for Skaffold to work as expected:\nContract between Skaffold and Custom Build Script Skaffold will pass in the following additional environment variables to the custom build script:\n   Environment Variable Description Expectation     $IMAGE The fully qualified image name.", "article:section": "docs", "scrapeId": "caa8cf47-45d9-4eb4-9e51-54b144b6d927", "sourceURL": "https://skaffold.dev/docs/builders/builder-types/custom", "url": "https://skaffold.dev/docs/builders/builder-types/custom/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I contract between skaffold and custom build script in skaffold?\n\nAssistant: To contract between skaffold and custom build script in skaffold, here's what you do:\nSkaffold will pass in the following additional environment variables to the custom build script:\n\n| Environment Variable | Description | Expectation |\n| --- | --- | --- |\n| $IMAGE | The fully qualified image name. For example, “gcr.io/image1:tag” | The custom build script is expected to build this image and tag it with the name provided in $IMAGE. The image should also be pushed if `$PUSH_IMAGE=true`. |\n| $PUSH_IMAGE | Set to true if the image in `$IMAGE` is expected to exist in a remote registry. Set to false if the image is expected to exist locally. | The custom build script will push the image `$IMAGE` if `$PUSH_IMAGE=true` |\n| $BUILD_CONTEXT | An absolute path to the directory this artifact is meant to be built from. Specified by artifact `context` in the skaffold.yaml. | None. |\n| $PLATFORMS | A comma-separated string of platforms to build the image for. For example, `linux/arm64,linux/amd64`. | If there’s only a single platform specified the custom build script should build for that platform. If multiple platforms are specified then the custom build script should build a multi-arch image comprising all those platforms. |\n| $SKIP_TEST | Whether to skip the tests after building. | None. |\n| Local environment variables | The current state of the local environment (e.g. `$HOST`, `$PATH)`. Determined by the golang [os.Environ](https://golang.org/pkg/os#Environ) function. | None. |\n\nAs described above, the custom build script is expected to:\n\n1. Build and tag the `$IMAGE` image\n2. Push the image if `$PUSH_IMAGE=true`\n\nOnce the build script has finished executing, Skaffold will try to obtain the digest of the newly built image from a remote registry (if `$PUSH_IMAGE=true`) or the local daemon (if `$PUSH_IMAGE=false`). If Skaffold fails to obtain the digest, it will error out..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/builders/builder-types/custom", "title": "Custom Build Script", "description": "Custom build scripts allow Skaffold users the flexibility to build artifacts with any builder they desire.", "has_code_examples": true, "has_best_practices": true, "section_count": 13, "timestamp": "2025-03-01 03:33:03", "type": "section_detail", "page_metadata": {"title": "Custom Build Script | Skaffold", "ogSiteName": "Skaffold", "og:description": "Custom build scripts allow Skaffold users the flexibility to build artifacts with any builder they desire. Users can write a custom build script which must abide by the following contract for Skaffold to work as expected:\nContract between Skaffold and Custom Build Script Skaffold will pass in the following additional environment variables to the custom build script:\n   Environment Variable Description Expectation     $IMAGE The fully qualified image name.", "ogTitle": "Custom Build Script", "generator": "Hugo 0.99.1", "og:title": "Custom Build Script", "description": "Custom build scripts allow Skaffold users the flexibility to build artifacts with any builder they desire.\nUsers can write a custom build script which …", "article:modified_time": "2025-01-23T10:14:58-05:00", "ogUrl": "https://skaffold.dev/docs/builders/builder-types/custom/", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:site_name": "Skaffold", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "twitter:description": "Custom build scripts allow Skaffold users the flexibility to build artifacts with any builder they desire. Users can write a custom build script which must abide by the following contract for Skaffold to work as expected:\nContract between Skaffold and Custom Build Script Skaffold will pass in the following additional environment variables to the custom build script:\n   Environment Variable Description Expectation     $IMAGE The fully qualified image name.", "language": "en", "twitter:card": "summary", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:type": "article", "robots": "index, follow", "og:url": "https://skaffold.dev/docs/builders/builder-types/custom/", "twitter:title": "Custom Build Script", "ogDescription": "Custom build scripts allow Skaffold users the flexibility to build artifacts with any builder they desire. Users can write a custom build script which must abide by the following contract for Skaffold to work as expected:\nContract between Skaffold and Custom Build Script Skaffold will pass in the following additional environment variables to the custom build script:\n   Environment Variable Description Expectation     $IMAGE The fully qualified image name.", "article:section": "docs", "scrapeId": "caa8cf47-45d9-4eb4-9e51-54b144b6d927", "sourceURL": "https://skaffold.dev/docs/builders/builder-types/custom", "url": "https://skaffold.dev/docs/builders/builder-types/custom/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I configuration in skaffold?\n\nAssistant: To configuration in skaffold, here's what you do:\nTo use a custom build script, add a `custom` field to each corresponding artifact in the `build` section of the `skaffold.yaml`.\nSupported schema for `custom` includes:\n\n| Option | Description |\n| --- | --- |\n| `buildCommand` | command executed to build the image. |\n| `dependencies` | file dependencies that skaffold should watch for both rebuilding and file syncing for this artifact. |\n\n`buildCommand` is _required_ and points Skaffold to the custom build script which will be executed to build the artifact.\nThe [Go templates](https://golang.org/pkg/text/template/) syntax can be used to inject environment variables into the build command. For example: `buildCommand: ./build.sh --flag={{ .SOME_FLAG }}` will replace `{{ .SOME_FLAG }}` with the value of the `SOME_FLAG` environment variable..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/builders/builder-types/custom", "title": "Custom Build Script", "description": "Custom build scripts allow Skaffold users the flexibility to build artifacts with any builder they desire.", "has_code_examples": true, "has_best_practices": true, "section_count": 13, "timestamp": "2025-03-01 03:33:03", "type": "section_detail", "page_metadata": {"title": "Custom Build Script | Skaffold", "ogSiteName": "Skaffold", "og:description": "Custom build scripts allow Skaffold users the flexibility to build artifacts with any builder they desire. Users can write a custom build script which must abide by the following contract for Skaffold to work as expected:\nContract between Skaffold and Custom Build Script Skaffold will pass in the following additional environment variables to the custom build script:\n   Environment Variable Description Expectation     $IMAGE The fully qualified image name.", "ogTitle": "Custom Build Script", "generator": "Hugo 0.99.1", "og:title": "Custom Build Script", "description": "Custom build scripts allow Skaffold users the flexibility to build artifacts with any builder they desire.\nUsers can write a custom build script which …", "article:modified_time": "2025-01-23T10:14:58-05:00", "ogUrl": "https://skaffold.dev/docs/builders/builder-types/custom/", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:site_name": "Skaffold", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "twitter:description": "Custom build scripts allow Skaffold users the flexibility to build artifacts with any builder they desire. Users can write a custom build script which must abide by the following contract for Skaffold to work as expected:\nContract between Skaffold and Custom Build Script Skaffold will pass in the following additional environment variables to the custom build script:\n   Environment Variable Description Expectation     $IMAGE The fully qualified image name.", "language": "en", "twitter:card": "summary", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:type": "article", "robots": "index, follow", "og:url": "https://skaffold.dev/docs/builders/builder-types/custom/", "twitter:title": "Custom Build Script", "ogDescription": "Custom build scripts allow Skaffold users the flexibility to build artifacts with any builder they desire. Users can write a custom build script which must abide by the following contract for Skaffold to work as expected:\nContract between Skaffold and Custom Build Script Skaffold will pass in the following additional environment variables to the custom build script:\n   Environment Variable Description Expectation     $IMAGE The fully qualified image name.", "article:section": "docs", "scrapeId": "caa8cf47-45d9-4eb4-9e51-54b144b6d927", "sourceURL": "https://skaffold.dev/docs/builders/builder-types/custom", "url": "https://skaffold.dev/docs/builders/builder-types/custom/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I artifact dependency in skaffold?\n\nAssistant: To artifact dependency in skaffold, here's what you do:\nYou can define dependency on other artifacts using the `requires` keyword. Skaffold will provide each required artifact’s built image as an environment variable keyed on the `alias` field that can be referenced directly in the build script.\n\n```yaml\nbuild:\n  artifacts:\n  - image: image1\n    custom:\n      # environment variable $IMG2 will be set to the build of image2\n      buildCommand: |\n        cat <<EOF | docker build --tag=$IMAGE --build-arg $IMG2 -\n        FROM busybox\n        ARG IMG2\n        RUN echo 'Got ARG IMG2=$IMG2'\n        EOF\n    requires:\n    - image: image2\n      alias: IMG2\n  - image: image2\n    custom:\n      buildCommand: echo 'FROM busybox' | docker build --tag=$IMAGE -\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/builders/builder-types/custom", "title": "Custom Build Script", "description": "Custom build scripts allow Skaffold users the flexibility to build artifacts with any builder they desire.", "has_code_examples": true, "has_best_practices": true, "section_count": 13, "timestamp": "2025-03-01 03:33:03", "type": "section_detail", "page_metadata": {"title": "Custom Build Script | Skaffold", "ogSiteName": "Skaffold", "og:description": "Custom build scripts allow Skaffold users the flexibility to build artifacts with any builder they desire. Users can write a custom build script which must abide by the following contract for Skaffold to work as expected:\nContract between Skaffold and Custom Build Script Skaffold will pass in the following additional environment variables to the custom build script:\n   Environment Variable Description Expectation     $IMAGE The fully qualified image name.", "ogTitle": "Custom Build Script", "generator": "Hugo 0.99.1", "og:title": "Custom Build Script", "description": "Custom build scripts allow Skaffold users the flexibility to build artifacts with any builder they desire.\nUsers can write a custom build script which …", "article:modified_time": "2025-01-23T10:14:58-05:00", "ogUrl": "https://skaffold.dev/docs/builders/builder-types/custom/", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:site_name": "Skaffold", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "twitter:description": "Custom build scripts allow Skaffold users the flexibility to build artifacts with any builder they desire. Users can write a custom build script which must abide by the following contract for Skaffold to work as expected:\nContract between Skaffold and Custom Build Script Skaffold will pass in the following additional environment variables to the custom build script:\n   Environment Variable Description Expectation     $IMAGE The fully qualified image name.", "language": "en", "twitter:card": "summary", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:type": "article", "robots": "index, follow", "og:url": "https://skaffold.dev/docs/builders/builder-types/custom/", "twitter:title": "Custom Build Script", "ogDescription": "Custom build scripts allow Skaffold users the flexibility to build artifacts with any builder they desire. Users can write a custom build script which must abide by the following contract for Skaffold to work as expected:\nContract between Skaffold and Custom Build Script Skaffold will pass in the following additional environment variables to the custom build script:\n   Environment Variable Description Expectation     $IMAGE The fully qualified image name.", "article:section": "docs", "scrapeId": "caa8cf47-45d9-4eb4-9e51-54b144b6d927", "sourceURL": "https://skaffold.dev/docs/builders/builder-types/custom", "url": "https://skaffold.dev/docs/builders/builder-types/custom/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I custom build script locally in skaffold?\n\nAssistant: To custom build script locally in skaffold, here's what you do:\nIn addition to these [environment variables](https://skaffold.dev/docs/builders/builder-types/custom/#contract-between-skaffold-and-custom-build-script) Skaffold will pass in the following additional environment variables for local builder:\n\n| Environment Variable | Description | Expectation |\n| --- | --- | --- |\n| Docker daemon environment variables | Inform the custom builder of which docker daemon endpoint we are using. Allows custom build scripts to work with tools like Minikube. For Minikube, this is the output of `minikube docker-env`. | None. |\n\n**Configuration**\n\nTo configure custom build script locally, in addition to adding a [`custom` field](https://skaffold.dev/docs/builders/builder-types/custom/#configuration) to each corresponding artifact in the `build` add `local` to you `build` config..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/builders/builder-types/custom", "title": "Custom Build Script", "description": "Custom build scripts allow Skaffold users the flexibility to build artifacts with any builder they desire.", "has_code_examples": true, "has_best_practices": true, "section_count": 13, "timestamp": "2025-03-01 03:33:03", "type": "section_detail", "page_metadata": {"title": "Custom Build Script | Skaffold", "ogSiteName": "Skaffold", "og:description": "Custom build scripts allow Skaffold users the flexibility to build artifacts with any builder they desire. Users can write a custom build script which must abide by the following contract for Skaffold to work as expected:\nContract between Skaffold and Custom Build Script Skaffold will pass in the following additional environment variables to the custom build script:\n   Environment Variable Description Expectation     $IMAGE The fully qualified image name.", "ogTitle": "Custom Build Script", "generator": "Hugo 0.99.1", "og:title": "Custom Build Script", "description": "Custom build scripts allow Skaffold users the flexibility to build artifacts with any builder they desire.\nUsers can write a custom build script which …", "article:modified_time": "2025-01-23T10:14:58-05:00", "ogUrl": "https://skaffold.dev/docs/builders/builder-types/custom/", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:site_name": "Skaffold", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "twitter:description": "Custom build scripts allow Skaffold users the flexibility to build artifacts with any builder they desire. Users can write a custom build script which must abide by the following contract for Skaffold to work as expected:\nContract between Skaffold and Custom Build Script Skaffold will pass in the following additional environment variables to the custom build script:\n   Environment Variable Description Expectation     $IMAGE The fully qualified image name.", "language": "en", "twitter:card": "summary", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:type": "article", "robots": "index, follow", "og:url": "https://skaffold.dev/docs/builders/builder-types/custom/", "twitter:title": "Custom Build Script", "ogDescription": "Custom build scripts allow Skaffold users the flexibility to build artifacts with any builder they desire. Users can write a custom build script which must abide by the following contract for Skaffold to work as expected:\nContract between Skaffold and Custom Build Script Skaffold will pass in the following additional environment variables to the custom build script:\n   Environment Variable Description Expectation     $IMAGE The fully qualified image name.", "article:section": "docs", "scrapeId": "caa8cf47-45d9-4eb4-9e51-54b144b6d927", "sourceURL": "https://skaffold.dev/docs/builders/builder-types/custom", "url": "https://skaffold.dev/docs/builders/builder-types/custom/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I custom build script in cluster in skaffold?\n\nAssistant: To custom build script in cluster in skaffold, here's what you do:\nIn addition to these [environment variables](https://skaffold.dev/docs/builders/builder-types/custom/#contract-between-skaffold-and-custom-build-script) Skaffold will pass in the following additional environment variables for cluster builder:\n\n| Environment Variable | Description | Expectation |\n| --- | --- | --- |\n| $KUBECONTEXT | The expected kubecontext in which the image will be built. | None. |\n| $NAMESPACE | The expected namespace in which the image will be built. | None. |\n| $PULL_SECRET_NAME | The name of the secret with authentication required to pull a base image/push the final image built on cluster. | None. |\n| $DOCKER_CONFIG_SECRET_NAME | The secret containing any required docker authentication for custom builds on cluster. | None. |\n| $TIMEOUT | The amount of time an on cluster build is allowed to run. | None. |\n\n**Configuration**\n\nTo configure custom build script in cluster, in addition to adding a [`custom` field](https://skaffold.dev/docs/builders/builder-types/custom/#configuration) to each corresponding artifact in the `build`, add `cluster` to your `build` config..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/builders/builder-types/custom", "title": "Custom Build Script", "description": "Custom build scripts allow Skaffold users the flexibility to build artifacts with any builder they desire.", "has_code_examples": true, "has_best_practices": true, "section_count": 13, "timestamp": "2025-03-01 03:33:03", "type": "section_detail", "page_metadata": {"title": "Custom Build Script | Skaffold", "ogSiteName": "Skaffold", "og:description": "Custom build scripts allow Skaffold users the flexibility to build artifacts with any builder they desire. Users can write a custom build script which must abide by the following contract for Skaffold to work as expected:\nContract between Skaffold and Custom Build Script Skaffold will pass in the following additional environment variables to the custom build script:\n   Environment Variable Description Expectation     $IMAGE The fully qualified image name.", "ogTitle": "Custom Build Script", "generator": "Hugo 0.99.1", "og:title": "Custom Build Script", "description": "Custom build scripts allow Skaffold users the flexibility to build artifacts with any builder they desire.\nUsers can write a custom build script which …", "article:modified_time": "2025-01-23T10:14:58-05:00", "ogUrl": "https://skaffold.dev/docs/builders/builder-types/custom/", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:site_name": "Skaffold", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "twitter:description": "Custom build scripts allow Skaffold users the flexibility to build artifacts with any builder they desire. Users can write a custom build script which must abide by the following contract for Skaffold to work as expected:\nContract between Skaffold and Custom Build Script Skaffold will pass in the following additional environment variables to the custom build script:\n   Environment Variable Description Expectation     $IMAGE The fully qualified image name.", "language": "en", "twitter:card": "summary", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:type": "article", "robots": "index, follow", "og:url": "https://skaffold.dev/docs/builders/builder-types/custom/", "twitter:title": "Custom Build Script", "ogDescription": "Custom build scripts allow Skaffold users the flexibility to build artifacts with any builder they desire. Users can write a custom build script which must abide by the following contract for Skaffold to work as expected:\nContract between Skaffold and Custom Build Script Skaffold will pass in the following additional environment variables to the custom build script:\n   Environment Variable Description Expectation     $IMAGE The fully qualified image name.", "article:section": "docs", "scrapeId": "caa8cf47-45d9-4eb4-9e51-54b144b6d927", "sourceURL": "https://skaffold.dev/docs/builders/builder-types/custom", "url": "https://skaffold.dev/docs/builders/builder-types/custom/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I custom build script on google cloud build in skaffold?\n\nAssistant: To custom build script on google cloud build in skaffold, here's what you do:\nThis configuration is currently not supported..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/builders/builder-types/custom", "title": "Custom Build Script", "description": "Custom build scripts allow Skaffold users the flexibility to build artifacts with any builder they desire.", "has_code_examples": true, "has_best_practices": true, "section_count": 13, "timestamp": "2025-03-01 03:33:03", "type": "section_detail", "page_metadata": {"title": "Custom Build Script | Skaffold", "ogSiteName": "Skaffold", "og:description": "Custom build scripts allow Skaffold users the flexibility to build artifacts with any builder they desire. Users can write a custom build script which must abide by the following contract for Skaffold to work as expected:\nContract between Skaffold and Custom Build Script Skaffold will pass in the following additional environment variables to the custom build script:\n   Environment Variable Description Expectation     $IMAGE The fully qualified image name.", "ogTitle": "Custom Build Script", "generator": "Hugo 0.99.1", "og:title": "Custom Build Script", "description": "Custom build scripts allow Skaffold users the flexibility to build artifacts with any builder they desire.\nUsers can write a custom build script which …", "article:modified_time": "2025-01-23T10:14:58-05:00", "ogUrl": "https://skaffold.dev/docs/builders/builder-types/custom/", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:site_name": "Skaffold", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "twitter:description": "Custom build scripts allow Skaffold users the flexibility to build artifacts with any builder they desire. Users can write a custom build script which must abide by the following contract for Skaffold to work as expected:\nContract between Skaffold and Custom Build Script Skaffold will pass in the following additional environment variables to the custom build script:\n   Environment Variable Description Expectation     $IMAGE The fully qualified image name.", "language": "en", "twitter:card": "summary", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:type": "article", "robots": "index, follow", "og:url": "https://skaffold.dev/docs/builders/builder-types/custom/", "twitter:title": "Custom Build Script", "ogDescription": "Custom build scripts allow Skaffold users the flexibility to build artifacts with any builder they desire. Users can write a custom build script which must abide by the following contract for Skaffold to work as expected:\nContract between Skaffold and Custom Build Script Skaffold will pass in the following additional environment variables to the custom build script:\n   Environment Variable Description Expectation     $IMAGE The fully qualified image name.", "article:section": "docs", "scrapeId": "caa8cf47-45d9-4eb4-9e51-54b144b6d927", "sourceURL": "https://skaffold.dev/docs/builders/builder-types/custom", "url": "https://skaffold.dev/docs/builders/builder-types/custom/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I dependencies for a custom artifact in skaffold?\n\nAssistant: To dependencies for a custom artifact in skaffold, here's what you do:\n`dependencies` tells the skaffold file watcher which files should be watched to trigger rebuilds and file syncs. Supported schema for `dependencies` includes:\n\n| Option | Description | Default |\n| --- | --- | --- |\n| `dockerfile` | should be set if the artifact is built from a Dockerfile, from which skaffold can determine dependencies. | `` |\n| `command` | represents a custom command that skaffold executes to obtain dependencies. The output of this command _must_ be a valid JSON array. | `` |\n| `paths` | should be set to the file dependencies for this artifact, so that the skaffold file watcher knows when to rebuild and perform file synchronization. | `[]` |\n| `ignore` | specifies the paths that should be ignored by skaffold’s file watcher. If a file exists in both `paths` and in `ignore`, it will be ignored, and will be excluded from both rebuilds and file synchronization. Will only work in conjunction with `paths`. | `[]` |\n\n#### Paths and Ignore\n\n`Paths` and `Ignore` are arrays used to list dependencies.\nAny paths in `Ignore` will be ignored by the skaffold file watcher, even if they are also specified in `Paths`.\n`Ignore` will only work in conjunction with `Paths`, and with none of the other custom artifact dependency types.\n\n```yaml\ncustom:\n  buildCommand: ./build.sh\n  dependencies:\n    paths:\n    - pkg/**\n    - src/*.go\n    ignore:\n    - vendor/**\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/builders/builder-types/custom", "title": "Custom Build Script", "description": "Custom build scripts allow Skaffold users the flexibility to build artifacts with any builder they desire.", "has_code_examples": true, "has_best_practices": true, "section_count": 13, "timestamp": "2025-03-01 03:33:03", "type": "section_detail", "page_metadata": {"title": "Custom Build Script | Skaffold", "ogSiteName": "Skaffold", "og:description": "Custom build scripts allow Skaffold users the flexibility to build artifacts with any builder they desire. Users can write a custom build script which must abide by the following contract for Skaffold to work as expected:\nContract between Skaffold and Custom Build Script Skaffold will pass in the following additional environment variables to the custom build script:\n   Environment Variable Description Expectation     $IMAGE The fully qualified image name.", "ogTitle": "Custom Build Script", "generator": "Hugo 0.99.1", "og:title": "Custom Build Script", "description": "Custom build scripts allow Skaffold users the flexibility to build artifacts with any builder they desire.\nUsers can write a custom build script which …", "article:modified_time": "2025-01-23T10:14:58-05:00", "ogUrl": "https://skaffold.dev/docs/builders/builder-types/custom/", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:site_name": "Skaffold", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "twitter:description": "Custom build scripts allow Skaffold users the flexibility to build artifacts with any builder they desire. Users can write a custom build script which must abide by the following contract for Skaffold to work as expected:\nContract between Skaffold and Custom Build Script Skaffold will pass in the following additional environment variables to the custom build script:\n   Environment Variable Description Expectation     $IMAGE The fully qualified image name.", "language": "en", "twitter:card": "summary", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:type": "article", "robots": "index, follow", "og:url": "https://skaffold.dev/docs/builders/builder-types/custom/", "twitter:title": "Custom Build Script", "ogDescription": "Custom build scripts allow Skaffold users the flexibility to build artifacts with any builder they desire. Users can write a custom build script which must abide by the following contract for Skaffold to work as expected:\nContract between Skaffold and Custom Build Script Skaffold will pass in the following additional environment variables to the custom build script:\n   Environment Variable Description Expectation     $IMAGE The fully qualified image name.", "article:section": "docs", "scrapeId": "caa8cf47-45d9-4eb4-9e51-54b144b6d927", "sourceURL": "https://skaffold.dev/docs/builders/builder-types/custom", "url": "https://skaffold.dev/docs/builders/builder-types/custom/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I dockerfile in skaffold?\n\nAssistant: To dockerfile in skaffold, here's what you do:\nSkaffold can calculate dependencies from a Dockerfile for a custom artifact.\nPassing in the path to the Dockerfile and any build args, if necessary, will allow skaffold to do dependency calculation.\n\n| Option | Description | Default |\n| --- | --- | --- |\n| `path` | locates the Dockerfile relative to workspace. | `` |\n| `buildArgs` | key/value pairs used to resolve values of `ARG` instructions in a Dockerfile. Values can be constants or environment variables via the go template syntax. | `{}` |\n\n```yaml\ncustom:\n  buildCommand: ./build.sh\n  dependencies:\n    dockerfile:\n      path: path/to/Dockerfile\n      buildArgs:\n        file: foo\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/builders/builder-types/custom", "title": "Custom Build Script", "description": "Custom build scripts allow Skaffold users the flexibility to build artifacts with any builder they desire.", "has_code_examples": true, "has_best_practices": true, "section_count": 13, "timestamp": "2025-03-01 03:33:03", "type": "section_detail", "page_metadata": {"title": "Custom Build Script | Skaffold", "ogSiteName": "Skaffold", "og:description": "Custom build scripts allow Skaffold users the flexibility to build artifacts with any builder they desire. Users can write a custom build script which must abide by the following contract for Skaffold to work as expected:\nContract between Skaffold and Custom Build Script Skaffold will pass in the following additional environment variables to the custom build script:\n   Environment Variable Description Expectation     $IMAGE The fully qualified image name.", "ogTitle": "Custom Build Script", "generator": "Hugo 0.99.1", "og:title": "Custom Build Script", "description": "Custom build scripts allow Skaffold users the flexibility to build artifacts with any builder they desire.\nUsers can write a custom build script which …", "article:modified_time": "2025-01-23T10:14:58-05:00", "ogUrl": "https://skaffold.dev/docs/builders/builder-types/custom/", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:site_name": "Skaffold", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "twitter:description": "Custom build scripts allow Skaffold users the flexibility to build artifacts with any builder they desire. Users can write a custom build script which must abide by the following contract for Skaffold to work as expected:\nContract between Skaffold and Custom Build Script Skaffold will pass in the following additional environment variables to the custom build script:\n   Environment Variable Description Expectation     $IMAGE The fully qualified image name.", "language": "en", "twitter:card": "summary", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:type": "article", "robots": "index, follow", "og:url": "https://skaffold.dev/docs/builders/builder-types/custom/", "twitter:title": "Custom Build Script", "ogDescription": "Custom build scripts allow Skaffold users the flexibility to build artifacts with any builder they desire. Users can write a custom build script which must abide by the following contract for Skaffold to work as expected:\nContract between Skaffold and Custom Build Script Skaffold will pass in the following additional environment variables to the custom build script:\n   Environment Variable Description Expectation     $IMAGE The fully qualified image name.", "article:section": "docs", "scrapeId": "caa8cf47-45d9-4eb4-9e51-54b144b6d927", "sourceURL": "https://skaffold.dev/docs/builders/builder-types/custom", "url": "https://skaffold.dev/docs/builders/builder-types/custom/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I warning in skaffold?\n\nAssistant: To warning in skaffold, here's what you do:\n`buildArgs` are not passed to the custom build script. They are only used to resolve values of `ARG` instructions in the the given Dockerfile when listing the dependencies..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/builders/builder-types/custom", "title": "Custom Build Script", "description": "Custom build scripts allow Skaffold users the flexibility to build artifacts with any builder they desire.", "has_code_examples": true, "has_best_practices": true, "section_count": 13, "timestamp": "2025-03-01 03:33:03", "type": "section_detail", "page_metadata": {"title": "Custom Build Script | Skaffold", "ogSiteName": "Skaffold", "og:description": "Custom build scripts allow Skaffold users the flexibility to build artifacts with any builder they desire. Users can write a custom build script which must abide by the following contract for Skaffold to work as expected:\nContract between Skaffold and Custom Build Script Skaffold will pass in the following additional environment variables to the custom build script:\n   Environment Variable Description Expectation     $IMAGE The fully qualified image name.", "ogTitle": "Custom Build Script", "generator": "Hugo 0.99.1", "og:title": "Custom Build Script", "description": "Custom build scripts allow Skaffold users the flexibility to build artifacts with any builder they desire.\nUsers can write a custom build script which …", "article:modified_time": "2025-01-23T10:14:58-05:00", "ogUrl": "https://skaffold.dev/docs/builders/builder-types/custom/", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:site_name": "Skaffold", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "twitter:description": "Custom build scripts allow Skaffold users the flexibility to build artifacts with any builder they desire. Users can write a custom build script which must abide by the following contract for Skaffold to work as expected:\nContract between Skaffold and Custom Build Script Skaffold will pass in the following additional environment variables to the custom build script:\n   Environment Variable Description Expectation     $IMAGE The fully qualified image name.", "language": "en", "twitter:card": "summary", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:type": "article", "robots": "index, follow", "og:url": "https://skaffold.dev/docs/builders/builder-types/custom/", "twitter:title": "Custom Build Script", "ogDescription": "Custom build scripts allow Skaffold users the flexibility to build artifacts with any builder they desire. Users can write a custom build script which must abide by the following contract for Skaffold to work as expected:\nContract between Skaffold and Custom Build Script Skaffold will pass in the following additional environment variables to the custom build script:\n   Environment Variable Description Expectation     $IMAGE The fully qualified image name.", "article:section": "docs", "scrapeId": "caa8cf47-45d9-4eb4-9e51-54b144b6d927", "sourceURL": "https://skaffold.dev/docs/builders/builder-types/custom", "url": "https://skaffold.dev/docs/builders/builder-types/custom/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I dependencies from a command in skaffold?\n\nAssistant: To dependencies from a command in skaffold, here's what you do:\nSometimes you might have a builder that can provide the dependencies for a given artifact.\nFor example bazel has the `bazel query deps` command.\nCustom artifact builders can ask Skaffold to execute a custom command, which Skaffold can use to get the dependencies for the artifact for file watching.\n\nThe command _must_ return dependencies as a JSON array, otherwise skaffold will error out.\n\nFor example, the following configuration is valid, as executing the dependency command returns a valid JSON array.\n\n```yaml\ncustom:\n  buildCommand: ./build.sh\n  dependencies:\n    command: echo [\"file1\",\"file2\",\"file3\"]\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/builders/builder-types/custom", "title": "Custom Build Script", "description": "Custom build scripts allow Skaffold users the flexibility to build artifacts with any builder they desire.", "has_code_examples": true, "has_best_practices": true, "section_count": 13, "timestamp": "2025-03-01 03:33:03", "type": "section_detail", "page_metadata": {"title": "Custom Build Script | Skaffold", "ogSiteName": "Skaffold", "og:description": "Custom build scripts allow Skaffold users the flexibility to build artifacts with any builder they desire. Users can write a custom build script which must abide by the following contract for Skaffold to work as expected:\nContract between Skaffold and Custom Build Script Skaffold will pass in the following additional environment variables to the custom build script:\n   Environment Variable Description Expectation     $IMAGE The fully qualified image name.", "ogTitle": "Custom Build Script", "generator": "Hugo 0.99.1", "og:title": "Custom Build Script", "description": "Custom build scripts allow Skaffold users the flexibility to build artifacts with any builder they desire.\nUsers can write a custom build script which …", "article:modified_time": "2025-01-23T10:14:58-05:00", "ogUrl": "https://skaffold.dev/docs/builders/builder-types/custom/", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:site_name": "Skaffold", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "twitter:description": "Custom build scripts allow Skaffold users the flexibility to build artifacts with any builder they desire. Users can write a custom build script which must abide by the following contract for Skaffold to work as expected:\nContract between Skaffold and Custom Build Script Skaffold will pass in the following additional environment variables to the custom build script:\n   Environment Variable Description Expectation     $IMAGE The fully qualified image name.", "language": "en", "twitter:card": "summary", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:type": "article", "robots": "index, follow", "og:url": "https://skaffold.dev/docs/builders/builder-types/custom/", "twitter:title": "Custom Build Script", "ogDescription": "Custom build scripts allow Skaffold users the flexibility to build artifacts with any builder they desire. Users can write a custom build script which must abide by the following contract for Skaffold to work as expected:\nContract between Skaffold and Custom Build Script Skaffold will pass in the following additional environment variables to the custom build script:\n   Environment Variable Description Expectation     $IMAGE The fully qualified image name.", "article:section": "docs", "scrapeId": "caa8cf47-45d9-4eb4-9e51-54b144b6d927", "sourceURL": "https://skaffold.dev/docs/builders/builder-types/custom", "url": "https://skaffold.dev/docs/builders/builder-types/custom/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I file sync in skaffold?\n\nAssistant: To file sync in skaffold, here's what you do:\nSyncable files must be included in both the `paths` section of `dependencies`, so that the skaffold file watcher knows to watch them, and the `sync` section, so that skaffold knows to sync them..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/builders/builder-types/custom", "title": "Custom Build Script", "description": "Custom build scripts allow Skaffold users the flexibility to build artifacts with any builder they desire.", "has_code_examples": true, "has_best_practices": true, "section_count": 13, "timestamp": "2025-03-01 03:33:03", "type": "section_detail", "page_metadata": {"title": "Custom Build Script | Skaffold", "ogSiteName": "Skaffold", "og:description": "Custom build scripts allow Skaffold users the flexibility to build artifacts with any builder they desire. Users can write a custom build script which must abide by the following contract for Skaffold to work as expected:\nContract between Skaffold and Custom Build Script Skaffold will pass in the following additional environment variables to the custom build script:\n   Environment Variable Description Expectation     $IMAGE The fully qualified image name.", "ogTitle": "Custom Build Script", "generator": "Hugo 0.99.1", "og:title": "Custom Build Script", "description": "Custom build scripts allow Skaffold users the flexibility to build artifacts with any builder they desire.\nUsers can write a custom build script which …", "article:modified_time": "2025-01-23T10:14:58-05:00", "ogUrl": "https://skaffold.dev/docs/builders/builder-types/custom/", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:site_name": "Skaffold", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "twitter:description": "Custom build scripts allow Skaffold users the flexibility to build artifacts with any builder they desire. Users can write a custom build script which must abide by the following contract for Skaffold to work as expected:\nContract between Skaffold and Custom Build Script Skaffold will pass in the following additional environment variables to the custom build script:\n   Environment Variable Description Expectation     $IMAGE The fully qualified image name.", "language": "en", "twitter:card": "summary", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:type": "article", "robots": "index, follow", "og:url": "https://skaffold.dev/docs/builders/builder-types/custom/", "twitter:title": "Custom Build Script", "ogDescription": "Custom build scripts allow Skaffold users the flexibility to build artifacts with any builder they desire. Users can write a custom build script which must abide by the following contract for Skaffold to work as expected:\nContract between Skaffold and Custom Build Script Skaffold will pass in the following additional environment variables to the custom build script:\n   Environment Variable Description Expectation     $IMAGE The fully qualified image name.", "article:section": "docs", "scrapeId": "caa8cf47-45d9-4eb4-9e51-54b144b6d927", "sourceURL": "https://skaffold.dev/docs/builders/builder-types/custom", "url": "https://skaffold.dev/docs/builders/builder-types/custom/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I logging in skaffold?\n\nAssistant: To logging in skaffold, here's what you do:\n`STDOUT` and `STDERR` from the custom build script will be redirected and displayed within skaffold logs..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/builders/builder-types/custom", "title": "Custom Build Script", "description": "Custom build scripts allow Skaffold users the flexibility to build artifacts with any builder they desire.", "has_code_examples": true, "has_best_practices": true, "section_count": 13, "timestamp": "2025-03-01 03:33:03", "type": "section_detail", "page_metadata": {"title": "Custom Build Script | Skaffold", "ogSiteName": "Skaffold", "og:description": "Custom build scripts allow Skaffold users the flexibility to build artifacts with any builder they desire. Users can write a custom build script which must abide by the following contract for Skaffold to work as expected:\nContract between Skaffold and Custom Build Script Skaffold will pass in the following additional environment variables to the custom build script:\n   Environment Variable Description Expectation     $IMAGE The fully qualified image name.", "ogTitle": "Custom Build Script", "generator": "Hugo 0.99.1", "og:title": "Custom Build Script", "description": "Custom build scripts allow Skaffold users the flexibility to build artifacts with any builder they desire.\nUsers can write a custom build script which …", "article:modified_time": "2025-01-23T10:14:58-05:00", "ogUrl": "https://skaffold.dev/docs/builders/builder-types/custom/", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:site_name": "Skaffold", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "twitter:description": "Custom build scripts allow Skaffold users the flexibility to build artifacts with any builder they desire. Users can write a custom build script which must abide by the following contract for Skaffold to work as expected:\nContract between Skaffold and Custom Build Script Skaffold will pass in the following additional environment variables to the custom build script:\n   Environment Variable Description Expectation     $IMAGE The fully qualified image name.", "language": "en", "twitter:card": "summary", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:type": "article", "robots": "index, follow", "og:url": "https://skaffold.dev/docs/builders/builder-types/custom/", "twitter:title": "Custom Build Script", "ogDescription": "Custom build scripts allow Skaffold users the flexibility to build artifacts with any builder they desire. Users can write a custom build script which must abide by the following contract for Skaffold to work as expected:\nContract between Skaffold and Custom Build Script Skaffold will pass in the following additional environment variables to the custom build script:\n   Environment Variable Description Expectation     $IMAGE The fully qualified image name.", "article:section": "docs", "scrapeId": "caa8cf47-45d9-4eb4-9e51-54b144b6d927", "sourceURL": "https://skaffold.dev/docs/builders/builder-types/custom", "url": "https://skaffold.dev/docs/builders/builder-types/custom/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I example in skaffold?\n\nAssistant: To example in skaffold, here's what you do:\nThe following `build` section instructs Skaffold to build an image `gcr.io/k8s-skaffold/example` with a custom build script `build.sh`:\n\n```yaml\nbuild:\n  artifacts:\n    - image: example\n      custom:\n        buildCommand: ./build.sh\n        dependencies:\n          paths:\n            - .\n          ignore:\n            - README*\n```\n\nA sample `build.sh` file, which builds an image with bazel and docker:\n\n```yaml\n#!/bin/bash\n\nbazel build //:skaffold_example.tar\nTAR_PATH=$(bazel info bazel-bin)\ndocker load -i $TAR_PATH/skaffold_example.tar\n\nimage=$(echo $IMAGE)\n\nif [ ! -z \"$image\" ]; then\n  pack build $image\n  if $PUSH_IMAGE\n  then\n    docker push $image\n  fi\nfi\n```\n.\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/builders/builder-types/custom", "title": "Custom Build Script", "description": "Custom build scripts allow Skaffold users the flexibility to build artifacts with any builder they desire.", "has_code_examples": true, "has_best_practices": true, "section_count": 13, "timestamp": "2025-03-01 03:33:03", "type": "section_detail", "page_metadata": {"title": "Custom Build Script | Skaffold", "ogSiteName": "Skaffold", "og:description": "Custom build scripts allow Skaffold users the flexibility to build artifacts with any builder they desire. Users can write a custom build script which must abide by the following contract for Skaffold to work as expected:\nContract between Skaffold and Custom Build Script Skaffold will pass in the following additional environment variables to the custom build script:\n   Environment Variable Description Expectation     $IMAGE The fully qualified image name.", "ogTitle": "Custom Build Script", "generator": "Hugo 0.99.1", "og:title": "Custom Build Script", "description": "Custom build scripts allow Skaffold users the flexibility to build artifacts with any builder they desire.\nUsers can write a custom build script which …", "article:modified_time": "2025-01-23T10:14:58-05:00", "ogUrl": "https://skaffold.dev/docs/builders/builder-types/custom/", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:site_name": "Skaffold", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "twitter:description": "Custom build scripts allow Skaffold users the flexibility to build artifacts with any builder they desire. Users can write a custom build script which must abide by the following contract for Skaffold to work as expected:\nContract between Skaffold and Custom Build Script Skaffold will pass in the following additional environment variables to the custom build script:\n   Environment Variable Description Expectation     $IMAGE The fully qualified image name.", "language": "en", "twitter:card": "summary", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:type": "article", "robots": "index, follow", "og:url": "https://skaffold.dev/docs/builders/builder-types/custom/", "twitter:title": "Custom Build Script", "ogDescription": "Custom build scripts allow Skaffold users the flexibility to build artifacts with any builder they desire. Users can write a custom build script which must abide by the following contract for Skaffold to work as expected:\nContract between Skaffold and Custom Build Script Skaffold will pass in the following additional environment variables to the custom build script:\n   Environment Variable Description Expectation     $IMAGE The fully qualified image name.", "article:section": "docs", "scrapeId": "caa8cf47-45d9-4eb4-9e51-54b144b6d927", "sourceURL": "https://skaffold.dev/docs/builders/builder-types/custom", "url": "https://skaffold.dev/docs/builders/builder-types/custom/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you give me some code examples for Custom Build Script in skaffold?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Custom Build Script Example**:\n\n```yaml\n```yaml\nbuild:\n  artifacts:\n    - image: image1\n      custom:\n        # environment variable $IMG2 will be set to the build of image2\n        buildCommand: |\n          cat <<EOF | docker build --tag=$IMAGE --build-arg $IMG2 -\n          FROM busybox\n          ARG IMG2\n          RUN echo 'Got ARG IMG2=$IMG2'\n          EOF\n      requires:\n      - image: image2\n        alias: IMG2\n    - image: image2\n      custom:\n        buildCommand: echo 'FROM busybox' | docker build --tag=$IMAGE -\n```\n```\n\nThis snippet shows you how to custom build script example, which is an important aspect of custom build script.\n\n**Custom Build Script Locally Example**:\n\n```yaml\n```yaml\ncustom:\n  buildCommand: ./build.sh\n  dependencies:\n    paths:\n    - pkg/**\n    - src/*.go\n    ignore:\n    - vendor/**\n```\n```\n\nThis snippet shows you how to custom build script locally example, which is an important aspect of custom build script.\n\n**Dockerfile Dependency Example**:\n\n```yaml\n```yaml\ncustom:\n  buildCommand: ./build.sh\n  dependencies:\n    dockerfile:\n      path: path/to/Dockerfile\n      buildArgs:\n        file: foo\n```\n```\n\nThis snippet shows you how to dockerfile dependency example, which is an important aspect of custom build script.\n\n**Dependencies from Command Example**:\n\n```yaml\n```yaml\ncustom:\n  buildCommand: ./build.sh\n  dependencies:\n    command: echo [\"file1\",\"file2\",\"file3\"]\n```\n```\n\nThis snippet shows you how to dependencies from command example, which is an important aspect of custom build script.\n\n**Example Build Section**:\n\n```yaml\n```yaml\nbuild:\n  artifacts:\n    - image: example\n      custom:\n        buildCommand: ./build.sh\n        dependencies:\n          paths:\n            - .\n          ignore:\n            - README*\n```\n```\n\nThis snippet shows you how to example build section, which is an important aspect of custom build script.\n\n**Sample build.sh File**:\n\n```yaml\n```yaml\n#!/bin/bash\n\nbazel build //:skaffold_example.tar\nTAR_PATH=$(bazel info bazel-bin)\ndocker load -i $TAR_PATH/skaffold_example.tar\n\nimage=$(echo $IMAGE)\n\nif [ ! -z \"$image\" ]; then\n  pack build $image\n  if $PUSH_IMAGE\n  then\n    docker push $image\n  fi\nfi\n```\n```\n\nThis snippet shows you how to sample build.sh file, which is an important aspect of custom build script.\n\n", "metadata": {"source_url": "https://skaffold.dev/docs/builders/builder-types/custom", "title": "Custom Build Script", "description": "Custom build scripts allow Skaffold users the flexibility to build artifacts with any builder they desire.", "has_code_examples": true, "has_best_practices": true, "section_count": 13, "timestamp": "2025-03-01 03:33:03", "type": "code_examples", "page_metadata": {"title": "Custom Build Script | Skaffold", "ogSiteName": "Skaffold", "og:description": "Custom build scripts allow Skaffold users the flexibility to build artifacts with any builder they desire. Users can write a custom build script which must abide by the following contract for Skaffold to work as expected:\nContract between Skaffold and Custom Build Script Skaffold will pass in the following additional environment variables to the custom build script:\n   Environment Variable Description Expectation     $IMAGE The fully qualified image name.", "ogTitle": "Custom Build Script", "generator": "Hugo 0.99.1", "og:title": "Custom Build Script", "description": "Custom build scripts allow Skaffold users the flexibility to build artifacts with any builder they desire.\nUsers can write a custom build script which …", "article:modified_time": "2025-01-23T10:14:58-05:00", "ogUrl": "https://skaffold.dev/docs/builders/builder-types/custom/", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:site_name": "Skaffold", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "twitter:description": "Custom build scripts allow Skaffold users the flexibility to build artifacts with any builder they desire. Users can write a custom build script which must abide by the following contract for Skaffold to work as expected:\nContract between Skaffold and Custom Build Script Skaffold will pass in the following additional environment variables to the custom build script:\n   Environment Variable Description Expectation     $IMAGE The fully qualified image name.", "language": "en", "twitter:card": "summary", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:type": "article", "robots": "index, follow", "og:url": "https://skaffold.dev/docs/builders/builder-types/custom/", "twitter:title": "Custom Build Script", "ogDescription": "Custom build scripts allow Skaffold users the flexibility to build artifacts with any builder they desire. Users can write a custom build script which must abide by the following contract for Skaffold to work as expected:\nContract between Skaffold and Custom Build Script Skaffold will pass in the following additional environment variables to the custom build script:\n   Environment Variable Description Expectation     $IMAGE The fully qualified image name.", "article:section": "docs", "scrapeId": "caa8cf47-45d9-4eb4-9e51-54b144b6d927", "sourceURL": "https://skaffold.dev/docs/builders/builder-types/custom", "url": "https://skaffold.dev/docs/builders/builder-types/custom/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: What are some tips for using Custom Build Script in skaffold effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nEnsure that the custom build script adheres to the contract defined by Skaffold to avoid errors during execution.\n\nUse Go templates to inject environment variables into the build command for flexibility.\n\nDefine dependencies clearly to ensure that Skaffold can watch for changes and trigger rebuilds appropriately.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://skaffold.dev/docs/builders/builder-types/custom", "title": "Custom Build Script", "description": "Custom build scripts allow Skaffold users the flexibility to build artifacts with any builder they desire.", "has_code_examples": true, "has_best_practices": true, "section_count": 13, "timestamp": "2025-03-01 03:33:03", "type": "best_practices", "page_metadata": {"title": "Custom Build Script | Skaffold", "ogSiteName": "Skaffold", "og:description": "Custom build scripts allow Skaffold users the flexibility to build artifacts with any builder they desire. Users can write a custom build script which must abide by the following contract for Skaffold to work as expected:\nContract between Skaffold and Custom Build Script Skaffold will pass in the following additional environment variables to the custom build script:\n   Environment Variable Description Expectation     $IMAGE The fully qualified image name.", "ogTitle": "Custom Build Script", "generator": "Hugo 0.99.1", "og:title": "Custom Build Script", "description": "Custom build scripts allow Skaffold users the flexibility to build artifacts with any builder they desire.\nUsers can write a custom build script which …", "article:modified_time": "2025-01-23T10:14:58-05:00", "ogUrl": "https://skaffold.dev/docs/builders/builder-types/custom/", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:site_name": "Skaffold", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "twitter:description": "Custom build scripts allow Skaffold users the flexibility to build artifacts with any builder they desire. Users can write a custom build script which must abide by the following contract for Skaffold to work as expected:\nContract between Skaffold and Custom Build Script Skaffold will pass in the following additional environment variables to the custom build script:\n   Environment Variable Description Expectation     $IMAGE The fully qualified image name.", "language": "en", "twitter:card": "summary", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:type": "article", "robots": "index, follow", "og:url": "https://skaffold.dev/docs/builders/builder-types/custom/", "twitter:title": "Custom Build Script", "ogDescription": "Custom build scripts allow Skaffold users the flexibility to build artifacts with any builder they desire. Users can write a custom build script which must abide by the following contract for Skaffold to work as expected:\nContract between Skaffold and Custom Build Script Skaffold will pass in the following additional environment variables to the custom build script:\n   Environment Variable Description Expectation     $IMAGE The fully qualified image name.", "article:section": "docs", "scrapeId": "caa8cf47-45d9-4eb4-9e51-54b144b6d927", "sourceURL": "https://skaffold.dev/docs/builders/builder-types/custom", "url": "https://skaffold.dev/docs/builders/builder-types/custom/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what Helm [UPDATED] beta is in skaffold?\n\nAssistant: Sure, I'd be happy to explain Helm [UPDATED] beta in skaffold.\n\n# Helm [UPDATED] beta\n\n`helm` is a package manager for Kubernetes that helps you manage Kubernetes applications. Skaffold natively supports iterative development for projects configured to use helm.Here's a quick rundown of what this is about:\n\n## Configuring your Helm Project with Skaffold\n\nSkaffold supports projects set up to render and/or deploy with Helm, but certain aspects of the project need to be configured correctly in order for Skaffold to work properly. This guide should demystify some of the nuance around using Skaffold with Helm to help you get started quickly.\n\n## No more `artifactOverrides` or `imageStrategy`\n\nSkaffold no longer requires the intricate configuring of `artifactOverrides` or `imageStrategy` fields. See docs [here](https://skaffold.dev/docs/deployers/helm/#image-reference-strategies) on how old `artifactOverrides` and `imageStrategy` values translate to `setValueTemplates` entries in the latest Skaffold schemas ( `apiVersion: skaffold/v3alpha1` or skaffold binary version `v2.0.0` onwards).\n\n## How `helm` render support works in Skaffold\n\nIn the latest version of Skaffold, the primary methods of using `helm` templating with Skaffold involve the `deploy.helm.setValueTemplates` and the `deploy.helm.setValues` fields. `deploy.helm.setValues` supplies the key:value pair to substitute from a users `values.yaml` file (a standard `helm` file for rendering). `deploy.helm.setValueTemplates` does a similar thing only the key:value value comes from an environment variable instead of a given value. Depending on how a user’s `values.yaml` and how `charts/templates` specify `image: $IMAGE_TEMPLATE`, the docs [here](https://skaffold.dev/docs/deployers/helm/#image-reference-strategies) explain the proper `setValueTemplates` to use. When migrating from schema version `v2beta29` or less, Skaffold will automatically configure these values to continue to work.\n\n`helm` deploy support in Skaffold is accomplished by calling `helm install ...` with the appropriate `--set` flags for the variables Skaffold will inject as well as uses the `skaffold` binary as a `helm` `--post-renderer`. Using `skaffold` as a post-renderer is done to inject Skaffold specific labels primarily the `run-id` label which Skaffold uses to tag K8s objects it will manage via it’s status checking.\n\nThis works by having Skaffold run `helm install ...` taking into consideration all of the supplied flags, skaffold.yaml configuration, etc. and creating an intermediate yaml manifest with all helm replacements except that the fully qualified image from the current run is NOT added but instead a placeholder with the artifact name - eg: `skaffold-helm-image`. Then the skaffold post-renderer is called to convert `image: skaffold-helm-image` -\\> `image: gcr.io/example-repo/skaffold-helm-image:latest@sha256:<sha256-hash>` in specified locations (specific allowlisted k8s objects and/or k8s object fields). This above replacement is nearly identical to how it works for values.yaml files using only the `image` key in `values.yaml` - eg:\n`image: \"{{.Values.image}}\"\n\nWhen using `image.repository` + `image.tag` or `image.registry` + `image.repository` + `image.tag` - eg:\n`image: \"{{.Values.image.repository}}:{{.Values.image.tag}}\"` `image: \"{{.Values.image.registry}}/{{.Values.image.repository}}:{{.Values.image.tag}}\"`\nthere is some specialized logic that the skaffold `post-renderer` uses to properly handling these cases. See the docs [here](https://skaffold.dev/docs/deployers/helm/#image-reference-strategies) on the correct way to specify these for Skaffold using `setValueTemplates`.\n\n## Image Configuration\n\nThe normal Helm convention for defining image references is through the `values.yaml` file. Often, image information is configured through an `image` stanza in the values file, which might look something like this:\n\n`project_root/values.yaml`\n\n```yaml\nimage:\n  repository: gcr.io/my-repo # default repo\n  tag: v1.2.0 # default tag\n  pullPolicy: IfNotPresent # default PullPolicy\nimage2:\n  repository: gcr.io/my-repo-2 # default repo\n  tag: latest # default tag\n  pullPolicy: IfNotPresent # default PullPolicy\n```\n\nThis images would then be referenced in a templated resource file, maybe like this:\n\n`project_root/templates/deployment.yaml:`\n\n```yaml\nspec:\n  template:\n    spec:\n      containers:\n        - name: {{ .Chart.Name }}\n          image: {{ .Values.image.repository }}:{{ .Values.image.tag}}\n          imagePullPolicy: {{ .Values.image.pullPolicy }}\n        - name: {{ .Chart.Name }}\n          image: {{ .Values.image2.repository }}:{{ .Values.image2.tag}}\n          imagePullPolicy: {{ .Values.image2.pullPolicy }}\n```\n\n**IMPORTANT: To get Skaffold to work with Helm, the `image` key must be configured in the skaffold.yaml.**\n\nAssociating the Helm image key allows Skaffold to track the image being built, and then configure Helm to substitute it in the proper resource definitions to be deployed to your cluster. In practice, this looks something like this:\n\n```yaml\nbuild:\n  artifacts:\n    - image: myFirstImage # must match in setValueTemplates\n    - image: mySecondImage # must match in setValueTemplates\ndeply:\n  helm:\n    releases:\n    - name: my-release\n      setValueTemplates:\n        image.repository: \"{{.IMAGE_REPO_myFirstImage}}\"\n        image.tag: \"{{.IMAGE_TAG_myFirstImage}}@{{.IMAGE_DIGEST_myFirstImage}}\"\n        image2.repository: \"{{.IMAGE_REPO_mySecondImage}}\"\n        image2.tag: \"{{.IMAGE_TAG_mySecondImage}}@{{.IMAGE_DIGEST_mySecondImage}}\"\n      setValues:\n        image.pullPolicy: \"IfNotPresent\"\n        image2.pullPolicy: \"IfNotPresent\"\n```\n\nThe `setValues` configuration binds a Helm key to the specified value. The `setValueTemplates` configuration binds a Helm key to an environment variable. Skaffold generates useful environment variables (available via `setValueTemplates`) for each build artifact (value in build.artifacts[x].image). Currenty these include:\n\n| Helm Template Value | Example Value |\n| --- | --- |\n| `{{.IMAGE_FULLY_QUALIFIED_<artifact-name>}}` | `gcr.io/example-repo/myImage:latest@sha256:<sha256-hash>` |\n| `{{.IMAGE_REPO_<artifact-name>}}` | `gcr.io/example-repo/myImage` |\n| `{{.IMAGE_TAG_<artifact-name>}}` | `latest` |\n| `{{.IMAGE_DIGEST_<artifact-name>}}` | `sha256:<sha256-hash>` |\n| `{{.IMAGE_DOMAIN_<artifact-name>}}` | `gcr.io` |\n| `{{.IMAGE_REPO_NO_DOMAIN_<artifact-name>}}` | `example-repo` |\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/deployers/helm", "title": "Helm [UPDATED] beta", "description": "`helm` is a package manager for Kubernetes that helps you manage Kubernetes applications. Skaffold natively supports iterative development for projects configured to use helm.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:33:37", "type": "overview", "page_metadata": {"ogDescription": "helm is a package manager for Kubernetes that helps you manage Kubernetes applications. Skaffold natively supports iterative development for projects configured to use helm.\nNote To use helm with Skaffold, the helm binary must be installed on your machine. Skaffold will not install it for you.  Configuring your Helm Project with Skaffold Skaffold supports projects set up to render and/or deploy with Helm, but certain aspects of the project need to be configured correctly in order for Skaffold to work properly.", "description": "helm is a package manager for Kubernetes that helps you\nmanage Kubernetes applications. Skaffold natively supports iterative development\nfor projects …", "language": "en", "og:title": "Helm [UPDATED]", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "twitter:description": "helm is a package manager for Kubernetes that helps you manage Kubernetes applications. Skaffold natively supports iterative development for projects configured to use helm.\nNote To use helm with Skaffold, the helm binary must be installed on your machine. Skaffold will not install it for you.  Configuring your Helm Project with Skaffold Skaffold supports projects set up to render and/or deploy with Helm, but certain aspects of the project need to be configured correctly in order for Skaffold to work properly.", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:description": "helm is a package manager for Kubernetes that helps you manage Kubernetes applications. Skaffold natively supports iterative development for projects configured to use helm.\nNote To use helm with Skaffold, the helm binary must be installed on your machine. Skaffold will not install it for you.  Configuring your Helm Project with Skaffold Skaffold supports projects set up to render and/or deploy with Helm, but certain aspects of the project need to be configured correctly in order for Skaffold to work properly.", "article:modified_time": "2025-01-23T10:14:58-05:00", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:site_name": "Skaffold", "ogUrl": "https://skaffold.dev/docs/deployers/helm/", "generator": "Hugo 0.99.1", "twitter:card": "summary", "ogTitle": "Helm [UPDATED]", "article:section": "docs", "ogSiteName": "Skaffold", "twitter:title": "Helm [UPDATED]", "og:type": "article", "og:url": "https://skaffold.dev/docs/deployers/helm/", "robots": "index, follow", "title": "Helm [UPDATED] | Skaffold", "scrapeId": "235861c9-98b8-4573-8624-6f05548c90b6", "sourceURL": "https://skaffold.dev/docs/deployers/helm", "url": "https://skaffold.dev/docs/deployers/helm/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I configuring your helm project with skaffold in skaffold?\n\nAssistant: To configuring your helm project with skaffold in skaffold, here's what you do:\nSkaffold supports projects set up to render and/or deploy with Helm, but certain aspects of the project need to be configured correctly in order for Skaffold to work properly. This guide should demystify some of the nuance around using Skaffold with Helm to help you get started quickly..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/deployers/helm", "title": "Helm [UPDATED] beta", "description": "`helm` is a package manager for Kubernetes that helps you manage Kubernetes applications. Skaffold natively supports iterative development for projects configured to use helm.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:33:37", "type": "section_detail", "page_metadata": {"ogDescription": "helm is a package manager for Kubernetes that helps you manage Kubernetes applications. Skaffold natively supports iterative development for projects configured to use helm.\nNote To use helm with Skaffold, the helm binary must be installed on your machine. Skaffold will not install it for you.  Configuring your Helm Project with Skaffold Skaffold supports projects set up to render and/or deploy with Helm, but certain aspects of the project need to be configured correctly in order for Skaffold to work properly.", "description": "helm is a package manager for Kubernetes that helps you\nmanage Kubernetes applications. Skaffold natively supports iterative development\nfor projects …", "language": "en", "og:title": "Helm [UPDATED]", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "twitter:description": "helm is a package manager for Kubernetes that helps you manage Kubernetes applications. Skaffold natively supports iterative development for projects configured to use helm.\nNote To use helm with Skaffold, the helm binary must be installed on your machine. Skaffold will not install it for you.  Configuring your Helm Project with Skaffold Skaffold supports projects set up to render and/or deploy with Helm, but certain aspects of the project need to be configured correctly in order for Skaffold to work properly.", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:description": "helm is a package manager for Kubernetes that helps you manage Kubernetes applications. Skaffold natively supports iterative development for projects configured to use helm.\nNote To use helm with Skaffold, the helm binary must be installed on your machine. Skaffold will not install it for you.  Configuring your Helm Project with Skaffold Skaffold supports projects set up to render and/or deploy with Helm, but certain aspects of the project need to be configured correctly in order for Skaffold to work properly.", "article:modified_time": "2025-01-23T10:14:58-05:00", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:site_name": "Skaffold", "ogUrl": "https://skaffold.dev/docs/deployers/helm/", "generator": "Hugo 0.99.1", "twitter:card": "summary", "ogTitle": "Helm [UPDATED]", "article:section": "docs", "ogSiteName": "Skaffold", "twitter:title": "Helm [UPDATED]", "og:type": "article", "og:url": "https://skaffold.dev/docs/deployers/helm/", "robots": "index, follow", "title": "Helm [UPDATED] | Skaffold", "scrapeId": "235861c9-98b8-4573-8624-6f05548c90b6", "sourceURL": "https://skaffold.dev/docs/deployers/helm", "url": "https://skaffold.dev/docs/deployers/helm/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I no more `artifactoverrides` or `imagestrategy` in skaffold?\n\nAssistant: To no more `artifactoverrides` or `imagestrategy` in skaffold, here's what you do:\nSkaffold no longer requires the intricate configuring of `artifactOverrides` or `imageStrategy` fields. See docs [here](https://skaffold.dev/docs/deployers/helm/#image-reference-strategies) on how old `artifactOverrides` and `imageStrategy` values translate to `setValueTemplates` entries in the latest Skaffold schemas ( `apiVersion: skaffold/v3alpha1` or skaffold binary version `v2.0.0` onwards)..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/deployers/helm", "title": "Helm [UPDATED] beta", "description": "`helm` is a package manager for Kubernetes that helps you manage Kubernetes applications. Skaffold natively supports iterative development for projects configured to use helm.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:33:37", "type": "section_detail", "page_metadata": {"ogDescription": "helm is a package manager for Kubernetes that helps you manage Kubernetes applications. Skaffold natively supports iterative development for projects configured to use helm.\nNote To use helm with Skaffold, the helm binary must be installed on your machine. Skaffold will not install it for you.  Configuring your Helm Project with Skaffold Skaffold supports projects set up to render and/or deploy with Helm, but certain aspects of the project need to be configured correctly in order for Skaffold to work properly.", "description": "helm is a package manager for Kubernetes that helps you\nmanage Kubernetes applications. Skaffold natively supports iterative development\nfor projects …", "language": "en", "og:title": "Helm [UPDATED]", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "twitter:description": "helm is a package manager for Kubernetes that helps you manage Kubernetes applications. Skaffold natively supports iterative development for projects configured to use helm.\nNote To use helm with Skaffold, the helm binary must be installed on your machine. Skaffold will not install it for you.  Configuring your Helm Project with Skaffold Skaffold supports projects set up to render and/or deploy with Helm, but certain aspects of the project need to be configured correctly in order for Skaffold to work properly.", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:description": "helm is a package manager for Kubernetes that helps you manage Kubernetes applications. Skaffold natively supports iterative development for projects configured to use helm.\nNote To use helm with Skaffold, the helm binary must be installed on your machine. Skaffold will not install it for you.  Configuring your Helm Project with Skaffold Skaffold supports projects set up to render and/or deploy with Helm, but certain aspects of the project need to be configured correctly in order for Skaffold to work properly.", "article:modified_time": "2025-01-23T10:14:58-05:00", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:site_name": "Skaffold", "ogUrl": "https://skaffold.dev/docs/deployers/helm/", "generator": "Hugo 0.99.1", "twitter:card": "summary", "ogTitle": "Helm [UPDATED]", "article:section": "docs", "ogSiteName": "Skaffold", "twitter:title": "Helm [UPDATED]", "og:type": "article", "og:url": "https://skaffold.dev/docs/deployers/helm/", "robots": "index, follow", "title": "Helm [UPDATED] | Skaffold", "scrapeId": "235861c9-98b8-4573-8624-6f05548c90b6", "sourceURL": "https://skaffold.dev/docs/deployers/helm", "url": "https://skaffold.dev/docs/deployers/helm/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I how `helm` render support works in skaffold in skaffold?\n\nAssistant: To how `helm` render support works in skaffold in skaffold, here's what you do:\nIn the latest version of Skaffold, the primary methods of using `helm` templating with Skaffold involve the `deploy.helm.setValueTemplates` and the `deploy.helm.setValues` fields. `deploy.helm.setValues` supplies the key:value pair to substitute from a users `values.yaml` file (a standard `helm` file for rendering). `deploy.helm.setValueTemplates` does a similar thing only the key:value value comes from an environment variable instead of a given value. Depending on how a user’s `values.yaml` and how `charts/templates` specify `image: $IMAGE_TEMPLATE`, the docs [here](https://skaffold.dev/docs/deployers/helm/#image-reference-strategies) explain the proper `setValueTemplates` to use. When migrating from schema version `v2beta29` or less, Skaffold will automatically configure these values to continue to work.\n\n`helm` deploy support in Skaffold is accomplished by calling `helm install ...` with the appropriate `--set` flags for the variables Skaffold will inject as well as uses the `skaffold` binary as a `helm` `--post-renderer`. Using `skaffold` as a post-renderer is done to inject Skaffold specific labels primarily the `run-id` label which Skaffold uses to tag K8s objects it will manage via it’s status checking.\n\nThis works by having Skaffold run `helm install ...` taking into consideration all of the supplied flags, skaffold.yaml configuration, etc. and creating an intermediate yaml manifest with all helm replacements except that the fully qualified image from the current run is NOT added but instead a placeholder with the artifact name - eg: `skaffold-helm-image`. Then the skaffold post-renderer is called to convert `image: skaffold-helm-image` -\\> `image: gcr.io/example-repo/skaffold-helm-image:latest@sha256:<sha256-hash>` in specified locations (specific allowlisted k8s objects and/or k8s object fields). This above replacement is nearly identical to how it works for values.yaml files using only the `image` key in `values.yaml` - eg:\n`image: \"{{.Values.image}}\"\n\nWhen using `image.repository` + `image.tag` or `image.registry` + `image.repository` + `image.tag` - eg:\n`image: \"{{.Values.image.repository}}:{{.Values.image.tag}}\"` `image: \"{{.Values.image.registry}}/{{.Values.image.repository}}:{{.Values.image.tag}}\"`\nthere is some specialized logic that the skaffold `post-renderer` uses to properly handling these cases. See the docs [here](https://skaffold.dev/docs/deployers/helm/#image-reference-strategies) on the correct way to specify these for Skaffold using `setValueTemplates`..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/deployers/helm", "title": "Helm [UPDATED] beta", "description": "`helm` is a package manager for Kubernetes that helps you manage Kubernetes applications. Skaffold natively supports iterative development for projects configured to use helm.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:33:37", "type": "section_detail", "page_metadata": {"ogDescription": "helm is a package manager for Kubernetes that helps you manage Kubernetes applications. Skaffold natively supports iterative development for projects configured to use helm.\nNote To use helm with Skaffold, the helm binary must be installed on your machine. Skaffold will not install it for you.  Configuring your Helm Project with Skaffold Skaffold supports projects set up to render and/or deploy with Helm, but certain aspects of the project need to be configured correctly in order for Skaffold to work properly.", "description": "helm is a package manager for Kubernetes that helps you\nmanage Kubernetes applications. Skaffold natively supports iterative development\nfor projects …", "language": "en", "og:title": "Helm [UPDATED]", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "twitter:description": "helm is a package manager for Kubernetes that helps you manage Kubernetes applications. Skaffold natively supports iterative development for projects configured to use helm.\nNote To use helm with Skaffold, the helm binary must be installed on your machine. Skaffold will not install it for you.  Configuring your Helm Project with Skaffold Skaffold supports projects set up to render and/or deploy with Helm, but certain aspects of the project need to be configured correctly in order for Skaffold to work properly.", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:description": "helm is a package manager for Kubernetes that helps you manage Kubernetes applications. Skaffold natively supports iterative development for projects configured to use helm.\nNote To use helm with Skaffold, the helm binary must be installed on your machine. Skaffold will not install it for you.  Configuring your Helm Project with Skaffold Skaffold supports projects set up to render and/or deploy with Helm, but certain aspects of the project need to be configured correctly in order for Skaffold to work properly.", "article:modified_time": "2025-01-23T10:14:58-05:00", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:site_name": "Skaffold", "ogUrl": "https://skaffold.dev/docs/deployers/helm/", "generator": "Hugo 0.99.1", "twitter:card": "summary", "ogTitle": "Helm [UPDATED]", "article:section": "docs", "ogSiteName": "Skaffold", "twitter:title": "Helm [UPDATED]", "og:type": "article", "og:url": "https://skaffold.dev/docs/deployers/helm/", "robots": "index, follow", "title": "Helm [UPDATED] | Skaffold", "scrapeId": "235861c9-98b8-4573-8624-6f05548c90b6", "sourceURL": "https://skaffold.dev/docs/deployers/helm", "url": "https://skaffold.dev/docs/deployers/helm/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I image configuration in skaffold?\n\nAssistant: To image configuration in skaffold, here's what you do:\nThe normal Helm convention for defining image references is through the `values.yaml` file. Often, image information is configured through an `image` stanza in the values file, which might look something like this:\n\n`project_root/values.yaml`\n\n```yaml\nimage:\n  repository: gcr.io/my-repo # default repo\n  tag: v1.2.0 # default tag\n  pullPolicy: IfNotPresent # default PullPolicy\nimage2:\n  repository: gcr.io/my-repo-2 # default repo\n  tag: latest # default tag\n  pullPolicy: IfNotPresent # default PullPolicy\n```\n\nThis images would then be referenced in a templated resource file, maybe like this:\n\n`project_root/templates/deployment.yaml:`\n\n```yaml\nspec:\n  template:\n    spec:\n      containers:\n        - name: {{ .Chart.Name }}\n          image: {{ .Values.image.repository }}:{{ .Values.image.tag}}\n          imagePullPolicy: {{ .Values.image.pullPolicy }}\n        - name: {{ .Chart.Name }}\n          image: {{ .Values.image2.repository }}:{{ .Values.image2.tag}}\n          imagePullPolicy: {{ .Values.image2.pullPolicy }}\n```\n\n**IMPORTANT: To get Skaffold to work with Helm, the `image` key must be configured in the skaffold.yaml.**\n\nAssociating the Helm image key allows Skaffold to track the image being built, and then configure Helm to substitute it in the proper resource definitions to be deployed to your cluster. In practice, this looks something like this:\n\n```yaml\nbuild:\n  artifacts:\n    - image: myFirstImage # must match in setValueTemplates\n    - image: mySecondImage # must match in setValueTemplates\ndeply:\n  helm:\n    releases:\n    - name: my-release\n      setValueTemplates:\n        image.repository: \"{{.IMAGE_REPO_myFirstImage}}\"\n        image.tag: \"{{.IMAGE_TAG_myFirstImage}}@{{.IMAGE_DIGEST_myFirstImage}}\"\n        image2.repository: \"{{.IMAGE_REPO_mySecondImage}}\"\n        image2.tag: \"{{.IMAGE_TAG_mySecondImage}}@{{.IMAGE_DIGEST_mySecondImage}}\"\n      setValues:\n        image.pullPolicy: \"IfNotPresent\"\n        image2.pullPolicy: \"IfNotPresent\"\n```\n\nThe `setValues` configuration binds a Helm key to the specified value. The `setValueTemplates` configuration binds a Helm key to an environment variable. Skaffold generates useful environment variables (available via `setValueTemplates`) for each build artifact (value in build.artifacts[x].image). Currenty these include:\n\n| Helm Template Value | Example Value |\n| --- | --- |\n| `{{.IMAGE_FULLY_QUALIFIED_<artifact-name>}}` | `gcr.io/example-repo/myImage:latest@sha256:<sha256-hash>` |\n| `{{.IMAGE_REPO_<artifact-name>}}` | `gcr.io/example-repo/myImage` |\n| `{{.IMAGE_TAG_<artifact-name>}}` | `latest` |\n| `{{.IMAGE_DIGEST_<artifact-name>}}` | `sha256:<sha256-hash>` |\n| `{{.IMAGE_DOMAIN_<artifact-name>}}` | `gcr.io` |\n| `{{.IMAGE_REPO_NO_DOMAIN_<artifact-name>}}` | `example-repo` |.\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/deployers/helm", "title": "Helm [UPDATED] beta", "description": "`helm` is a package manager for Kubernetes that helps you manage Kubernetes applications. Skaffold natively supports iterative development for projects configured to use helm.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:33:37", "type": "section_detail", "page_metadata": {"ogDescription": "helm is a package manager for Kubernetes that helps you manage Kubernetes applications. Skaffold natively supports iterative development for projects configured to use helm.\nNote To use helm with Skaffold, the helm binary must be installed on your machine. Skaffold will not install it for you.  Configuring your Helm Project with Skaffold Skaffold supports projects set up to render and/or deploy with Helm, but certain aspects of the project need to be configured correctly in order for Skaffold to work properly.", "description": "helm is a package manager for Kubernetes that helps you\nmanage Kubernetes applications. Skaffold natively supports iterative development\nfor projects …", "language": "en", "og:title": "Helm [UPDATED]", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "twitter:description": "helm is a package manager for Kubernetes that helps you manage Kubernetes applications. Skaffold natively supports iterative development for projects configured to use helm.\nNote To use helm with Skaffold, the helm binary must be installed on your machine. Skaffold will not install it for you.  Configuring your Helm Project with Skaffold Skaffold supports projects set up to render and/or deploy with Helm, but certain aspects of the project need to be configured correctly in order for Skaffold to work properly.", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:description": "helm is a package manager for Kubernetes that helps you manage Kubernetes applications. Skaffold natively supports iterative development for projects configured to use helm.\nNote To use helm with Skaffold, the helm binary must be installed on your machine. Skaffold will not install it for you.  Configuring your Helm Project with Skaffold Skaffold supports projects set up to render and/or deploy with Helm, but certain aspects of the project need to be configured correctly in order for Skaffold to work properly.", "article:modified_time": "2025-01-23T10:14:58-05:00", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:site_name": "Skaffold", "ogUrl": "https://skaffold.dev/docs/deployers/helm/", "generator": "Hugo 0.99.1", "twitter:card": "summary", "ogTitle": "Helm [UPDATED]", "article:section": "docs", "ogSiteName": "Skaffold", "twitter:title": "Helm [UPDATED]", "og:type": "article", "og:url": "https://skaffold.dev/docs/deployers/helm/", "robots": "index, follow", "title": "Helm [UPDATED] | Skaffold", "scrapeId": "235861c9-98b8-4573-8624-6f05548c90b6", "sourceURL": "https://skaffold.dev/docs/deployers/helm", "url": "https://skaffold.dev/docs/deployers/helm/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you give me some code examples for Helm [UPDATED] beta in skaffold?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**values.yaml example**:\n\n```yaml\nimage:\n  repository: gcr.io/my-repo # default repo\n  tag: v1.2.0 # default tag\n  pullPolicy: IfNotPresent # default PullPolicy\nimage2:\n  repository: gcr.io/my-repo-2 # default repo\n  tag: latest # default tag\n  pullPolicy: IfNotPresent # default PullPolicy\n```\n\nThis snippet shows you how to values.yaml example, which is an important aspect of helm [updated] beta.\n\n**deployment.yaml example**:\n\n```yaml\nspec:\n  template:\n    spec:\n      containers:\n        - name: {{ .Chart.Name }}\n          image: {{ .Values.image.repository }}:{{ .Values.image.tag}}\n          imagePullPolicy: {{ .Values.image.pullPolicy }}\n        - name: {{ .Chart.Name }}\n          image: {{ .Values.image2.repository }}:{{ .Values.image2.tag}}\n          imagePullPolicy: {{ .Values.image2.pullPolicy }}\n```\n\nThis snippet shows you how to deployment.yaml example, which is an important aspect of helm [updated] beta.\n\n**skaffold.yaml example**:\n\n```yaml\nbuild:\n  artifacts:\n    - image: myFirstImage # must match in setValueTemplates\n    - image: mySecondImage # must match in setValueTemplates\ndeply:\n  helm:\n    releases:\n    - name: my-release\n      setValueTemplates:\n        image.repository: \"{{.IMAGE_REPO_myFirstImage}}\"\n        image.tag: \"{{.IMAGE_TAG_myFirstImage}}@{{.IMAGE_DIGEST_myFirstImage}}\"\n        image2.repository: \"{{.IMAGE_REPO_mySecondImage}}\"\n        image2.tag: \"{{.IMAGE_TAG_mySecondImage}}@{{.IMAGE_DIGEST_mySecondImage}}\"\n      setValues:\n        image.pullPolicy: \"IfNotPresent\"\n        image2.pullPolicy: \"IfNotPresent\"\n```\n\nThis snippet shows you how to skaffold.yaml example, which is an important aspect of helm [updated] beta.\n\n", "metadata": {"source_url": "https://skaffold.dev/docs/deployers/helm", "title": "Helm [UPDATED] beta", "description": "`helm` is a package manager for Kubernetes that helps you manage Kubernetes applications. Skaffold natively supports iterative development for projects configured to use helm.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:33:37", "type": "code_examples", "page_metadata": {"ogDescription": "helm is a package manager for Kubernetes that helps you manage Kubernetes applications. Skaffold natively supports iterative development for projects configured to use helm.\nNote To use helm with Skaffold, the helm binary must be installed on your machine. Skaffold will not install it for you.  Configuring your Helm Project with Skaffold Skaffold supports projects set up to render and/or deploy with Helm, but certain aspects of the project need to be configured correctly in order for Skaffold to work properly.", "description": "helm is a package manager for Kubernetes that helps you\nmanage Kubernetes applications. Skaffold natively supports iterative development\nfor projects …", "language": "en", "og:title": "Helm [UPDATED]", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "twitter:description": "helm is a package manager for Kubernetes that helps you manage Kubernetes applications. Skaffold natively supports iterative development for projects configured to use helm.\nNote To use helm with Skaffold, the helm binary must be installed on your machine. Skaffold will not install it for you.  Configuring your Helm Project with Skaffold Skaffold supports projects set up to render and/or deploy with Helm, but certain aspects of the project need to be configured correctly in order for Skaffold to work properly.", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:description": "helm is a package manager for Kubernetes that helps you manage Kubernetes applications. Skaffold natively supports iterative development for projects configured to use helm.\nNote To use helm with Skaffold, the helm binary must be installed on your machine. Skaffold will not install it for you.  Configuring your Helm Project with Skaffold Skaffold supports projects set up to render and/or deploy with Helm, but certain aspects of the project need to be configured correctly in order for Skaffold to work properly.", "article:modified_time": "2025-01-23T10:14:58-05:00", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:site_name": "Skaffold", "ogUrl": "https://skaffold.dev/docs/deployers/helm/", "generator": "Hugo 0.99.1", "twitter:card": "summary", "ogTitle": "Helm [UPDATED]", "article:section": "docs", "ogSiteName": "Skaffold", "twitter:title": "Helm [UPDATED]", "og:type": "article", "og:url": "https://skaffold.dev/docs/deployers/helm/", "robots": "index, follow", "title": "Helm [UPDATED] | Skaffold", "scrapeId": "235861c9-98b8-4573-8624-6f05548c90b6", "sourceURL": "https://skaffold.dev/docs/deployers/helm", "url": "https://skaffold.dev/docs/deployers/helm/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: What are some tips for using Helm [UPDATED] beta in skaffold effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nTo use `helm` with Skaffold, the `helm` binary must be installed on your machine. Skaffold will not install it for you.\n\nStarting in Skaffold `v2.1.0`, Skaffold will output additional `setValueTemplates`.\n\nSanitize the artifact name from invalid go template characters by replacing `/`, `-`, `.`, or `:` with `_` in the `setValueTemplates` field.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://skaffold.dev/docs/deployers/helm", "title": "Helm [UPDATED] beta", "description": "`helm` is a package manager for Kubernetes that helps you manage Kubernetes applications. Skaffold natively supports iterative development for projects configured to use helm.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:33:37", "type": "best_practices", "page_metadata": {"ogDescription": "helm is a package manager for Kubernetes that helps you manage Kubernetes applications. Skaffold natively supports iterative development for projects configured to use helm.\nNote To use helm with Skaffold, the helm binary must be installed on your machine. Skaffold will not install it for you.  Configuring your Helm Project with Skaffold Skaffold supports projects set up to render and/or deploy with Helm, but certain aspects of the project need to be configured correctly in order for Skaffold to work properly.", "description": "helm is a package manager for Kubernetes that helps you\nmanage Kubernetes applications. Skaffold natively supports iterative development\nfor projects …", "language": "en", "og:title": "Helm [UPDATED]", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "twitter:description": "helm is a package manager for Kubernetes that helps you manage Kubernetes applications. Skaffold natively supports iterative development for projects configured to use helm.\nNote To use helm with Skaffold, the helm binary must be installed on your machine. Skaffold will not install it for you.  Configuring your Helm Project with Skaffold Skaffold supports projects set up to render and/or deploy with Helm, but certain aspects of the project need to be configured correctly in order for Skaffold to work properly.", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:description": "helm is a package manager for Kubernetes that helps you manage Kubernetes applications. Skaffold natively supports iterative development for projects configured to use helm.\nNote To use helm with Skaffold, the helm binary must be installed on your machine. Skaffold will not install it for you.  Configuring your Helm Project with Skaffold Skaffold supports projects set up to render and/or deploy with Helm, but certain aspects of the project need to be configured correctly in order for Skaffold to work properly.", "article:modified_time": "2025-01-23T10:14:58-05:00", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:site_name": "Skaffold", "ogUrl": "https://skaffold.dev/docs/deployers/helm/", "generator": "Hugo 0.99.1", "twitter:card": "summary", "ogTitle": "Helm [UPDATED]", "article:section": "docs", "ogSiteName": "Skaffold", "twitter:title": "Helm [UPDATED]", "og:type": "article", "og:url": "https://skaffold.dev/docs/deployers/helm/", "robots": "index, follow", "title": "Helm [UPDATED] | Skaffold", "scrapeId": "235861c9-98b8-4573-8624-6f05548c90b6", "sourceURL": "https://skaffold.dev/docs/deployers/helm", "url": "https://skaffold.dev/docs/deployers/helm/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what Helm [UPDATED] beta is in skaffold?\n\nAssistant: Sure, I'd be happy to explain Helm [UPDATED] beta in skaffold.\n\n# Helm [UPDATED] beta\n\n`helm` is a package manager for Kubernetes that helps you manage Kubernetes applications. Skaffold natively supports iterative development for projects configured to use helm.Here's a quick rundown of what this is about:\n\n## Configuring your Helm Project with Skaffold\n\nSkaffold supports projects set up to render and/or deploy with Helm, but certain aspects of the project need to be configured correctly in order for Skaffold to work properly. This guide should demystify some of the nuance around using Skaffold with Helm to help you get started quickly.\n\n## No more `artifactOverrides` or `imageStrategy`\n\nSkaffold no longer requires the intricate configuring of `artifactOverrides` or `imageStrategy` fields. See docs [here](https://skaffold.dev/docs/renderers/helm/#image-reference-strategies) on how old `artifactOverrides` and `imageStrategy` values translate to `setValueTemplates` entries in the latest Skaffold schemas ( `apiVersion: skaffold/v3alpha1` or skaffold binary version `v2.0.0` onwards).\n\n## How `helm` render support works in Skaffold\n\nIn the latest version of Skaffold, the primary methods of using `helm` templating with Skaffold involve the `deploy.helm.setValueTemplates` and the `deploy.helm.setValues` fields. `deploy.helm.setValues` supplies the key:value pair to substitute from a users `values.yaml` file (a standard `helm` file for rendering). `deploy.helm.setValueTemplates` does a similar thing only the key:value value comes from an environment variable instead of a given value. Depending on how a user’s `values.yaml` and how `charts/templates` specify `image: $IMAGE_TEMPLATE`, the docs [here](https://skaffold.dev/docs/renderers/helm/#image-reference-strategies) explain the proper `setValueTemplates` to use. When migrating from schema version `v2beta29` or less, Skaffold will automatically configure these values to continue to work.\n\n`helm` deploy support in Skaffold is accomplished by calling `helm template ...` with the appropriate `--set` flags for the variables Skaffold will inject as well as uses the `skaffold` binary as a `helm` `--post-renderer`. Using `skaffold` as a post-renderer is done to inject Skaffold specific labels primarily the `run-id` label which Skaffold uses to tag K8s objects it will manage via it’s status checking.\n\nThis works by having Skaffold run `helm template ...` taking into consideration all of the supplied flags, skaffold.yaml configuration, etc. and creating an intermediate yaml manifest with all helm replacements except that the fully qualified image from the current run is NOT added but instead a placeholder with the artifact name - eg: `skaffold-helm-image`. Then the skaffold post-renderer is called to convert `image: skaffold-helm-image` -\\> `image: gcr.io/example-repo/skaffold-helm-image:latest@sha256:<sha256-hash>` in specified locations (specific allowlisted k8s objects and/or k8s object fields). This above replacement is nearly identical to how it works for values.yaml files using only the `image` key in `values.yaml` - eg:\n`image: \"{{.Values.image}}\"\n\nWhen using `image.repository` + `image.tag` or `image.registry` + `image.repository` + `image.tag` - eg:\n`image: \"{{.Values.image.repository}}:{{.Values.image.tag}}\"` `image: \"{{.Values.image.registry}}/{{.Values.image.repository}}:{{.Values.image.tag}}\"`\nthere is some specialized logic that the skaffold `post-renderer` uses to properly handling these cases. See the docs [here](https://skaffold.dev/docs/renderers/helm/#image-reference-strategies) on the correct way to specify these for Skaffold using `setValueTemplates`.\n\n#### Note\n\nStarting in Skaffold `v2.1.0`, Skaffold will output additional `setValueTemplates`.\n\n## Image Configuration\n\nThe normal Helm convention for defining image references is through the `values.yaml` file. Often, image information is configured through an `image` stanza in the values file, which might look something like this:\n\n`project_root/values.yaml`\n\n```yaml\nimage:\n  repository: gcr.io/my-repo # default repo\n  tag: v1.2.0 # default tag\n  pullPolicy: IfNotPresent # default PullPolicy\nimage2:\n  repository: gcr.io/my-repo-2 # default repo\n  tag: latest # default tag\n  pullPolicy: IfNotPresent # default PullPolicy\n```\n\nThis images would then be referenced in a templated resource file, maybe like this:\n\n`project_root/templates/deployment.yaml:`\n\n```yaml\nspec:\n  template:\n    spec:\n      containers:\n        - name: {{ .Chart.Name }}\n          image: {{ .Values.image.repository }}:{{ .Values.image.tag}}\n          imagePullPolicy: {{ .Values.image.pullPolicy }}\n        - name: {{ .Chart.Name }}\n          image: {{ .Values.image2.repository }}:{{ .Values.image2.tag}}\n          imagePullPolicy: {{ .Values.image2.pullPolicy }}\n```\n\n**IMPORTANT: To get Skaffold to work with Helm, the `image` key must be configured in the skaffold.yaml.**\n\nAssociating the Helm image key allows Skaffold to track the image being built, and then configure Helm to substitute it in the proper resource definitions to be deployed to your cluster. In practice, this looks something like this:\n\n```yaml\nbuild:\n  artifacts:\n    - image: myFirstImage # must match in setValueTemplates\n    - image: mySecondImage # must match in setValueTemplates\nmanifests:\n  helm:\n    releases:\n    - name: my-release\n      setValueTemplates:\n        image.repository: \"{{.IMAGE_REPO_myFirstImage}}\"\n        image.tag: \"{{.IMAGE_TAG_myFirstImage}}\"\n        image2.repository: \"{{.IMAGE_REPO_mySecondImage}}\"\n        image2.tag: \"{{.IMAGE_TAG_mySecondImage}}\"\n      setValues:\n        image.pullPolicy: \"IfNotPresent\"\n        image2.pullPolicy: \"IfNotPresent\"\n```\n\nThe `setValues` configuration binds a Helm key to the specified value. The `setValueTemplates` configuration binds a Helm key to an environment variable. Skaffold generates useful environment variables (available via `setValueTemplates`) for each build artifact (value in build.artifacts[x].image). Currenty these include:\n\n| Helm Template Value | Example Value |\n| --- | --- |\n| `{{.IMAGE_FULLY_QUALIFIED_<artifact-name>}}` | `gcr.io/example-repo/myImage:latest@sha256:<sha256-hash>` |\n| `{{.IMAGE_REPO_<artifact-name>}}` | `gcr.io/example-repo/myImage` |\n| `{{.IMAGE_TAG_<artifact-name>}}` | `latest` |\n| `{{.IMAGE_DIGEST_<artifact-name>}}` | `sha256:<sha256-hash>` |\n| `{{.IMAGE_DOMAIN_<artifact-name>}}` | `gcr.io` |\n| `{{.IMAGE_REPO_NO_DOMAIN_<artifact-name>}}` | `example-repo` |\n\n## Sanitizing the artifact name from invalid go template characters\n\nThe `<artifact-name>` (eg: `{{.IMAGE_FULLY_QUALIFIED_<artifact-name>}}`) when used with `setValueTemplates` cannot have `/`, `-`, `.`, or `:` characters. If you have an artifact name with these characters (eg: `localhost/nginx` or `gcr.io/foo-image/foo`), change them to use `_` in place of these characters in the `setValueTemplates` field.\n\n| Artifact name | Sanitized Name |\n| --- | --- |\n| `localhost/nginx` | `localhost_nginx` |\n| `gcr.io/example-repo/myImage` | `gcr_io_example_repo_myImage` |\n| `gcr.io/example-repo/myImage:1234_container` | `gcr_io_example_repo_myImage_1234_container` |\n\nExample\n\n```yaml\nbuild:\n  artifacts:\n    - image: localhost/nginx  # must match in setValueTemplates w/ `/` & `-` changed to `_`\nmanifests:\n  helm:\n    releases:\n      - name: my-chart\n        chartPath: helm\n        setValueTemplates:\n          image: {{.IMAGE_FULLY_QUALIFIED_localhost_nginx}}\n```\n\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/renderers/helm", "title": "Helm [UPDATED] beta", "description": "`helm` is a package manager for Kubernetes that helps you manage Kubernetes applications. Skaffold natively supports iterative development for projects configured to use helm.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:35:19", "type": "overview", "page_metadata": {"og:url": "https://skaffold.dev/docs/renderers/helm/", "generator": "Hugo 0.99.1", "og:description": "helm is a package manager for Kubernetes that helps you manage Kubernetes applications. Skaffold natively supports iterative development for projects configured to use helm.\nNote To use helm with Skaffold, the helm binary must be installed on your machine. Skaffold will not install it for you.  Configuring your Helm Project with Skaffold Skaffold supports projects set up to render and/or deploy with Helm, but certain aspects of the project need to be configured correctly in order for Skaffold to work properly.", "twitter:card": "summary", "twitter:title": "Helm [UPDATED]", "title": "Helm [UPDATED] | Skaffold", "ogTitle": "Helm [UPDATED]", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "article:section": "docs", "ogUrl": "https://skaffold.dev/docs/renderers/helm/", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogDescription": "helm is a package manager for Kubernetes that helps you manage Kubernetes applications. Skaffold natively supports iterative development for projects configured to use helm.\nNote To use helm with Skaffold, the helm binary must be installed on your machine. Skaffold will not install it for you.  Configuring your Helm Project with Skaffold Skaffold supports projects set up to render and/or deploy with Helm, but certain aspects of the project need to be configured correctly in order for Skaffold to work properly.", "og:site_name": "Skaffold", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:title": "Helm [UPDATED]", "description": "helm is a package manager for Kubernetes that helps you\nmanage Kubernetes applications. Skaffold natively supports iterative development\nfor projects …", "language": "en", "ogSiteName": "Skaffold", "twitter:description": "helm is a package manager for Kubernetes that helps you manage Kubernetes applications. Skaffold natively supports iterative development for projects configured to use helm.\nNote To use helm with Skaffold, the helm binary must be installed on your machine. Skaffold will not install it for you.  Configuring your Helm Project with Skaffold Skaffold supports projects set up to render and/or deploy with Helm, but certain aspects of the project need to be configured correctly in order for Skaffold to work properly.", "og:type": "article", "modifiedTime": "2025-01-23T10:14:58-05:00", "robots": "index, follow", "scrapeId": "2b4df09d-db81-4454-8c71-961142d0bdc4", "sourceURL": "https://skaffold.dev/docs/renderers/helm", "url": "https://skaffold.dev/docs/renderers/helm/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I configuring your helm project with skaffold in skaffold?\n\nAssistant: To configuring your helm project with skaffold in skaffold, here's what you do:\nSkaffold supports projects set up to render and/or deploy with Helm, but certain aspects of the project need to be configured correctly in order for Skaffold to work properly. This guide should demystify some of the nuance around using Skaffold with Helm to help you get started quickly..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/renderers/helm", "title": "Helm [UPDATED] beta", "description": "`helm` is a package manager for Kubernetes that helps you manage Kubernetes applications. Skaffold natively supports iterative development for projects configured to use helm.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:35:19", "type": "section_detail", "page_metadata": {"og:url": "https://skaffold.dev/docs/renderers/helm/", "generator": "Hugo 0.99.1", "og:description": "helm is a package manager for Kubernetes that helps you manage Kubernetes applications. Skaffold natively supports iterative development for projects configured to use helm.\nNote To use helm with Skaffold, the helm binary must be installed on your machine. Skaffold will not install it for you.  Configuring your Helm Project with Skaffold Skaffold supports projects set up to render and/or deploy with Helm, but certain aspects of the project need to be configured correctly in order for Skaffold to work properly.", "twitter:card": "summary", "twitter:title": "Helm [UPDATED]", "title": "Helm [UPDATED] | Skaffold", "ogTitle": "Helm [UPDATED]", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "article:section": "docs", "ogUrl": "https://skaffold.dev/docs/renderers/helm/", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogDescription": "helm is a package manager for Kubernetes that helps you manage Kubernetes applications. Skaffold natively supports iterative development for projects configured to use helm.\nNote To use helm with Skaffold, the helm binary must be installed on your machine. Skaffold will not install it for you.  Configuring your Helm Project with Skaffold Skaffold supports projects set up to render and/or deploy with Helm, but certain aspects of the project need to be configured correctly in order for Skaffold to work properly.", "og:site_name": "Skaffold", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:title": "Helm [UPDATED]", "description": "helm is a package manager for Kubernetes that helps you\nmanage Kubernetes applications. Skaffold natively supports iterative development\nfor projects …", "language": "en", "ogSiteName": "Skaffold", "twitter:description": "helm is a package manager for Kubernetes that helps you manage Kubernetes applications. Skaffold natively supports iterative development for projects configured to use helm.\nNote To use helm with Skaffold, the helm binary must be installed on your machine. Skaffold will not install it for you.  Configuring your Helm Project with Skaffold Skaffold supports projects set up to render and/or deploy with Helm, but certain aspects of the project need to be configured correctly in order for Skaffold to work properly.", "og:type": "article", "modifiedTime": "2025-01-23T10:14:58-05:00", "robots": "index, follow", "scrapeId": "2b4df09d-db81-4454-8c71-961142d0bdc4", "sourceURL": "https://skaffold.dev/docs/renderers/helm", "url": "https://skaffold.dev/docs/renderers/helm/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I no more `artifactoverrides` or `imagestrategy` in skaffold?\n\nAssistant: To no more `artifactoverrides` or `imagestrategy` in skaffold, here's what you do:\nSkaffold no longer requires the intricate configuring of `artifactOverrides` or `imageStrategy` fields. See docs [here](https://skaffold.dev/docs/renderers/helm/#image-reference-strategies) on how old `artifactOverrides` and `imageStrategy` values translate to `setValueTemplates` entries in the latest Skaffold schemas ( `apiVersion: skaffold/v3alpha1` or skaffold binary version `v2.0.0` onwards)..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/renderers/helm", "title": "Helm [UPDATED] beta", "description": "`helm` is a package manager for Kubernetes that helps you manage Kubernetes applications. Skaffold natively supports iterative development for projects configured to use helm.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:35:19", "type": "section_detail", "page_metadata": {"og:url": "https://skaffold.dev/docs/renderers/helm/", "generator": "Hugo 0.99.1", "og:description": "helm is a package manager for Kubernetes that helps you manage Kubernetes applications. Skaffold natively supports iterative development for projects configured to use helm.\nNote To use helm with Skaffold, the helm binary must be installed on your machine. Skaffold will not install it for you.  Configuring your Helm Project with Skaffold Skaffold supports projects set up to render and/or deploy with Helm, but certain aspects of the project need to be configured correctly in order for Skaffold to work properly.", "twitter:card": "summary", "twitter:title": "Helm [UPDATED]", "title": "Helm [UPDATED] | Skaffold", "ogTitle": "Helm [UPDATED]", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "article:section": "docs", "ogUrl": "https://skaffold.dev/docs/renderers/helm/", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogDescription": "helm is a package manager for Kubernetes that helps you manage Kubernetes applications. Skaffold natively supports iterative development for projects configured to use helm.\nNote To use helm with Skaffold, the helm binary must be installed on your machine. Skaffold will not install it for you.  Configuring your Helm Project with Skaffold Skaffold supports projects set up to render and/or deploy with Helm, but certain aspects of the project need to be configured correctly in order for Skaffold to work properly.", "og:site_name": "Skaffold", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:title": "Helm [UPDATED]", "description": "helm is a package manager for Kubernetes that helps you\nmanage Kubernetes applications. Skaffold natively supports iterative development\nfor projects …", "language": "en", "ogSiteName": "Skaffold", "twitter:description": "helm is a package manager for Kubernetes that helps you manage Kubernetes applications. Skaffold natively supports iterative development for projects configured to use helm.\nNote To use helm with Skaffold, the helm binary must be installed on your machine. Skaffold will not install it for you.  Configuring your Helm Project with Skaffold Skaffold supports projects set up to render and/or deploy with Helm, but certain aspects of the project need to be configured correctly in order for Skaffold to work properly.", "og:type": "article", "modifiedTime": "2025-01-23T10:14:58-05:00", "robots": "index, follow", "scrapeId": "2b4df09d-db81-4454-8c71-961142d0bdc4", "sourceURL": "https://skaffold.dev/docs/renderers/helm", "url": "https://skaffold.dev/docs/renderers/helm/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I how `helm` render support works in skaffold in skaffold?\n\nAssistant: To how `helm` render support works in skaffold in skaffold, here's what you do:\nIn the latest version of Skaffold, the primary methods of using `helm` templating with Skaffold involve the `deploy.helm.setValueTemplates` and the `deploy.helm.setValues` fields. `deploy.helm.setValues` supplies the key:value pair to substitute from a users `values.yaml` file (a standard `helm` file for rendering). `deploy.helm.setValueTemplates` does a similar thing only the key:value value comes from an environment variable instead of a given value. Depending on how a user’s `values.yaml` and how `charts/templates` specify `image: $IMAGE_TEMPLATE`, the docs [here](https://skaffold.dev/docs/renderers/helm/#image-reference-strategies) explain the proper `setValueTemplates` to use. When migrating from schema version `v2beta29` or less, Skaffold will automatically configure these values to continue to work.\n\n`helm` deploy support in Skaffold is accomplished by calling `helm template ...` with the appropriate `--set` flags for the variables Skaffold will inject as well as uses the `skaffold` binary as a `helm` `--post-renderer`. Using `skaffold` as a post-renderer is done to inject Skaffold specific labels primarily the `run-id` label which Skaffold uses to tag K8s objects it will manage via it’s status checking.\n\nThis works by having Skaffold run `helm template ...` taking into consideration all of the supplied flags, skaffold.yaml configuration, etc. and creating an intermediate yaml manifest with all helm replacements except that the fully qualified image from the current run is NOT added but instead a placeholder with the artifact name - eg: `skaffold-helm-image`. Then the skaffold post-renderer is called to convert `image: skaffold-helm-image` -\\> `image: gcr.io/example-repo/skaffold-helm-image:latest@sha256:<sha256-hash>` in specified locations (specific allowlisted k8s objects and/or k8s object fields). This above replacement is nearly identical to how it works for values.yaml files using only the `image` key in `values.yaml` - eg:\n`image: \"{{.Values.image}}\"\n\nWhen using `image.repository` + `image.tag` or `image.registry` + `image.repository` + `image.tag` - eg:\n`image: \"{{.Values.image.repository}}:{{.Values.image.tag}}\"` `image: \"{{.Values.image.registry}}/{{.Values.image.repository}}:{{.Values.image.tag}}\"`\nthere is some specialized logic that the skaffold `post-renderer` uses to properly handling these cases. See the docs [here](https://skaffold.dev/docs/renderers/helm/#image-reference-strategies) on the correct way to specify these for Skaffold using `setValueTemplates`.\n\n#### Note\n\nStarting in Skaffold `v2.1.0`, Skaffold will output additional `setValueTemplates`..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/renderers/helm", "title": "Helm [UPDATED] beta", "description": "`helm` is a package manager for Kubernetes that helps you manage Kubernetes applications. Skaffold natively supports iterative development for projects configured to use helm.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:35:19", "type": "section_detail", "page_metadata": {"og:url": "https://skaffold.dev/docs/renderers/helm/", "generator": "Hugo 0.99.1", "og:description": "helm is a package manager for Kubernetes that helps you manage Kubernetes applications. Skaffold natively supports iterative development for projects configured to use helm.\nNote To use helm with Skaffold, the helm binary must be installed on your machine. Skaffold will not install it for you.  Configuring your Helm Project with Skaffold Skaffold supports projects set up to render and/or deploy with Helm, but certain aspects of the project need to be configured correctly in order for Skaffold to work properly.", "twitter:card": "summary", "twitter:title": "Helm [UPDATED]", "title": "Helm [UPDATED] | Skaffold", "ogTitle": "Helm [UPDATED]", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "article:section": "docs", "ogUrl": "https://skaffold.dev/docs/renderers/helm/", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogDescription": "helm is a package manager for Kubernetes that helps you manage Kubernetes applications. Skaffold natively supports iterative development for projects configured to use helm.\nNote To use helm with Skaffold, the helm binary must be installed on your machine. Skaffold will not install it for you.  Configuring your Helm Project with Skaffold Skaffold supports projects set up to render and/or deploy with Helm, but certain aspects of the project need to be configured correctly in order for Skaffold to work properly.", "og:site_name": "Skaffold", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:title": "Helm [UPDATED]", "description": "helm is a package manager for Kubernetes that helps you\nmanage Kubernetes applications. Skaffold natively supports iterative development\nfor projects …", "language": "en", "ogSiteName": "Skaffold", "twitter:description": "helm is a package manager for Kubernetes that helps you manage Kubernetes applications. Skaffold natively supports iterative development for projects configured to use helm.\nNote To use helm with Skaffold, the helm binary must be installed on your machine. Skaffold will not install it for you.  Configuring your Helm Project with Skaffold Skaffold supports projects set up to render and/or deploy with Helm, but certain aspects of the project need to be configured correctly in order for Skaffold to work properly.", "og:type": "article", "modifiedTime": "2025-01-23T10:14:58-05:00", "robots": "index, follow", "scrapeId": "2b4df09d-db81-4454-8c71-961142d0bdc4", "sourceURL": "https://skaffold.dev/docs/renderers/helm", "url": "https://skaffold.dev/docs/renderers/helm/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I image configuration in skaffold?\n\nAssistant: To image configuration in skaffold, here's what you do:\nThe normal Helm convention for defining image references is through the `values.yaml` file. Often, image information is configured through an `image` stanza in the values file, which might look something like this:\n\n`project_root/values.yaml`\n\n```yaml\nimage:\n  repository: gcr.io/my-repo # default repo\n  tag: v1.2.0 # default tag\n  pullPolicy: IfNotPresent # default PullPolicy\nimage2:\n  repository: gcr.io/my-repo-2 # default repo\n  tag: latest # default tag\n  pullPolicy: IfNotPresent # default PullPolicy\n```\n\nThis images would then be referenced in a templated resource file, maybe like this:\n\n`project_root/templates/deployment.yaml:`\n\n```yaml\nspec:\n  template:\n    spec:\n      containers:\n        - name: {{ .Chart.Name }}\n          image: {{ .Values.image.repository }}:{{ .Values.image.tag}}\n          imagePullPolicy: {{ .Values.image.pullPolicy }}\n        - name: {{ .Chart.Name }}\n          image: {{ .Values.image2.repository }}:{{ .Values.image2.tag}}\n          imagePullPolicy: {{ .Values.image2.pullPolicy }}\n```\n\n**IMPORTANT: To get Skaffold to work with Helm, the `image` key must be configured in the skaffold.yaml.**\n\nAssociating the Helm image key allows Skaffold to track the image being built, and then configure Helm to substitute it in the proper resource definitions to be deployed to your cluster. In practice, this looks something like this:\n\n```yaml\nbuild:\n  artifacts:\n    - image: myFirstImage # must match in setValueTemplates\n    - image: mySecondImage # must match in setValueTemplates\nmanifests:\n  helm:\n    releases:\n    - name: my-release\n      setValueTemplates:\n        image.repository: \"{{.IMAGE_REPO_myFirstImage}}\"\n        image.tag: \"{{.IMAGE_TAG_myFirstImage}}\"\n        image2.repository: \"{{.IMAGE_REPO_mySecondImage}}\"\n        image2.tag: \"{{.IMAGE_TAG_mySecondImage}}\"\n      setValues:\n        image.pullPolicy: \"IfNotPresent\"\n        image2.pullPolicy: \"IfNotPresent\"\n```\n\nThe `setValues` configuration binds a Helm key to the specified value. The `setValueTemplates` configuration binds a Helm key to an environment variable. Skaffold generates useful environment variables (available via `setValueTemplates`) for each build artifact (value in build.artifacts[x].image). Currenty these include:\n\n| Helm Template Value | Example Value |\n| --- | --- |\n| `{{.IMAGE_FULLY_QUALIFIED_<artifact-name>}}` | `gcr.io/example-repo/myImage:latest@sha256:<sha256-hash>` |\n| `{{.IMAGE_REPO_<artifact-name>}}` | `gcr.io/example-repo/myImage` |\n| `{{.IMAGE_TAG_<artifact-name>}}` | `latest` |\n| `{{.IMAGE_DIGEST_<artifact-name>}}` | `sha256:<sha256-hash>` |\n| `{{.IMAGE_DOMAIN_<artifact-name>}}` | `gcr.io` |\n| `{{.IMAGE_REPO_NO_DOMAIN_<artifact-name>}}` | `example-repo` |.\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/renderers/helm", "title": "Helm [UPDATED] beta", "description": "`helm` is a package manager for Kubernetes that helps you manage Kubernetes applications. Skaffold natively supports iterative development for projects configured to use helm.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:35:19", "type": "section_detail", "page_metadata": {"og:url": "https://skaffold.dev/docs/renderers/helm/", "generator": "Hugo 0.99.1", "og:description": "helm is a package manager for Kubernetes that helps you manage Kubernetes applications. Skaffold natively supports iterative development for projects configured to use helm.\nNote To use helm with Skaffold, the helm binary must be installed on your machine. Skaffold will not install it for you.  Configuring your Helm Project with Skaffold Skaffold supports projects set up to render and/or deploy with Helm, but certain aspects of the project need to be configured correctly in order for Skaffold to work properly.", "twitter:card": "summary", "twitter:title": "Helm [UPDATED]", "title": "Helm [UPDATED] | Skaffold", "ogTitle": "Helm [UPDATED]", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "article:section": "docs", "ogUrl": "https://skaffold.dev/docs/renderers/helm/", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogDescription": "helm is a package manager for Kubernetes that helps you manage Kubernetes applications. Skaffold natively supports iterative development for projects configured to use helm.\nNote To use helm with Skaffold, the helm binary must be installed on your machine. Skaffold will not install it for you.  Configuring your Helm Project with Skaffold Skaffold supports projects set up to render and/or deploy with Helm, but certain aspects of the project need to be configured correctly in order for Skaffold to work properly.", "og:site_name": "Skaffold", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:title": "Helm [UPDATED]", "description": "helm is a package manager for Kubernetes that helps you\nmanage Kubernetes applications. Skaffold natively supports iterative development\nfor projects …", "language": "en", "ogSiteName": "Skaffold", "twitter:description": "helm is a package manager for Kubernetes that helps you manage Kubernetes applications. Skaffold natively supports iterative development for projects configured to use helm.\nNote To use helm with Skaffold, the helm binary must be installed on your machine. Skaffold will not install it for you.  Configuring your Helm Project with Skaffold Skaffold supports projects set up to render and/or deploy with Helm, but certain aspects of the project need to be configured correctly in order for Skaffold to work properly.", "og:type": "article", "modifiedTime": "2025-01-23T10:14:58-05:00", "robots": "index, follow", "scrapeId": "2b4df09d-db81-4454-8c71-961142d0bdc4", "sourceURL": "https://skaffold.dev/docs/renderers/helm", "url": "https://skaffold.dev/docs/renderers/helm/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I sanitizing the artifact name from invalid go template characters in skaffold?\n\nAssistant: To sanitizing the artifact name from invalid go template characters in skaffold, here's what you do:\nThe `<artifact-name>` (eg: `{{.IMAGE_FULLY_QUALIFIED_<artifact-name>}}`) when used with `setValueTemplates` cannot have `/`, `-`, `.`, or `:` characters. If you have an artifact name with these characters (eg: `localhost/nginx` or `gcr.io/foo-image/foo`), change them to use `_` in place of these characters in the `setValueTemplates` field.\n\n| Artifact name | Sanitized Name |\n| --- | --- |\n| `localhost/nginx` | `localhost_nginx` |\n| `gcr.io/example-repo/myImage` | `gcr_io_example_repo_myImage` |\n| `gcr.io/example-repo/myImage:1234_container` | `gcr_io_example_repo_myImage_1234_container` |\n\nExample\n\n```yaml\nbuild:\n  artifacts:\n    - image: localhost/nginx  # must match in setValueTemplates w/ `/` & `-` changed to `_`\nmanifests:\n  helm:\n    releases:\n      - name: my-chart\n        chartPath: helm\n        setValueTemplates:\n          image: {{.IMAGE_FULLY_QUALIFIED_localhost_nginx}}\n```\n.\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/renderers/helm", "title": "Helm [UPDATED] beta", "description": "`helm` is a package manager for Kubernetes that helps you manage Kubernetes applications. Skaffold natively supports iterative development for projects configured to use helm.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:35:19", "type": "section_detail", "page_metadata": {"og:url": "https://skaffold.dev/docs/renderers/helm/", "generator": "Hugo 0.99.1", "og:description": "helm is a package manager for Kubernetes that helps you manage Kubernetes applications. Skaffold natively supports iterative development for projects configured to use helm.\nNote To use helm with Skaffold, the helm binary must be installed on your machine. Skaffold will not install it for you.  Configuring your Helm Project with Skaffold Skaffold supports projects set up to render and/or deploy with Helm, but certain aspects of the project need to be configured correctly in order for Skaffold to work properly.", "twitter:card": "summary", "twitter:title": "Helm [UPDATED]", "title": "Helm [UPDATED] | Skaffold", "ogTitle": "Helm [UPDATED]", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "article:section": "docs", "ogUrl": "https://skaffold.dev/docs/renderers/helm/", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogDescription": "helm is a package manager for Kubernetes that helps you manage Kubernetes applications. Skaffold natively supports iterative development for projects configured to use helm.\nNote To use helm with Skaffold, the helm binary must be installed on your machine. Skaffold will not install it for you.  Configuring your Helm Project with Skaffold Skaffold supports projects set up to render and/or deploy with Helm, but certain aspects of the project need to be configured correctly in order for Skaffold to work properly.", "og:site_name": "Skaffold", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:title": "Helm [UPDATED]", "description": "helm is a package manager for Kubernetes that helps you\nmanage Kubernetes applications. Skaffold natively supports iterative development\nfor projects …", "language": "en", "ogSiteName": "Skaffold", "twitter:description": "helm is a package manager for Kubernetes that helps you manage Kubernetes applications. Skaffold natively supports iterative development for projects configured to use helm.\nNote To use helm with Skaffold, the helm binary must be installed on your machine. Skaffold will not install it for you.  Configuring your Helm Project with Skaffold Skaffold supports projects set up to render and/or deploy with Helm, but certain aspects of the project need to be configured correctly in order for Skaffold to work properly.", "og:type": "article", "modifiedTime": "2025-01-23T10:14:58-05:00", "robots": "index, follow", "scrapeId": "2b4df09d-db81-4454-8c71-961142d0bdc4", "sourceURL": "https://skaffold.dev/docs/renderers/helm", "url": "https://skaffold.dev/docs/renderers/helm/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you give me some code examples for Helm [UPDATED] beta in skaffold?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Example values.yaml**:\n\n```yaml\n```yaml\nimage:\n  repository: gcr.io/my-repo # default repo\n  tag: v1.2.0 # default tag\n  pullPolicy: IfNotPresent # default PullPolicy\nimage2:\n  repository: gcr.io/my-repo-2 # default repo\n  tag: latest # default tag\n  pullPolicy: IfNotPresent # default PullPolicy\n```\n```\n\nThis snippet shows you how to example values.yaml, which is an important aspect of helm [updated] beta.\n\n**Example deployment.yaml**:\n\n```yaml\n```yaml\nspec:\n  template:\n    spec:\n      containers:\n        - name: {{ .Chart.Name }}\n          image: {{ .Values.image.repository }}:{{ .Values.image.tag}}\n          imagePullPolicy: {{ .Values.image.pullPolicy }}\n        - name: {{ .Chart.Name }}\n          image: {{ .Values.image2.repository }}:{{ .Values.image2.tag}}\n          imagePullPolicy: {{ .Values.image2.pullPolicy }}\n```\n```\n\nThis snippet shows you how to example deployment.yaml, which is an important aspect of helm [updated] beta.\n\n**Example skaffold.yaml**:\n\n```yaml\n```yaml\nbuild:\n  artifacts:\n    - image: myFirstImage # must match in setValueTemplates\n    - image: mySecondImage # must match in setValueTemplates\nmanifests:\n  helm:\n    releases:\n    - name: my-release\n      setValueTemplates:\n        image.repository: \"{{.IMAGE_REPO_myFirstImage}}\"\n        image.tag: \"{{.IMAGE_TAG_myFirstImage}}\"\n        image2.repository: \"{{.IMAGE_REPO_mySecondImage}}\"\n        image2.tag: \"{{.IMAGE_TAG_mySecondImage}}\"\n      setValues:\n        image.pullPolicy: \"IfNotPresent\"\n        image2.pullPolicy: \"IfNotPresent\"\n```\n```\n\nThis snippet shows you how to example skaffold.yaml, which is an important aspect of helm [updated] beta.\n\n**Example helm template command**:\n\n```yaml\n```\nhelm template <chart> <chart-path> --set-string image=<artifact-name>,image2=<artifact-name> --post-renderer=<path-to-skaffold-binary-from-original-invocation>\n```\n```\n\nThis snippet shows you how to example helm template command, which is an important aspect of helm [updated] beta.\n\n", "metadata": {"source_url": "https://skaffold.dev/docs/renderers/helm", "title": "Helm [UPDATED] beta", "description": "`helm` is a package manager for Kubernetes that helps you manage Kubernetes applications. Skaffold natively supports iterative development for projects configured to use helm.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:35:19", "type": "code_examples", "page_metadata": {"og:url": "https://skaffold.dev/docs/renderers/helm/", "generator": "Hugo 0.99.1", "og:description": "helm is a package manager for Kubernetes that helps you manage Kubernetes applications. Skaffold natively supports iterative development for projects configured to use helm.\nNote To use helm with Skaffold, the helm binary must be installed on your machine. Skaffold will not install it for you.  Configuring your Helm Project with Skaffold Skaffold supports projects set up to render and/or deploy with Helm, but certain aspects of the project need to be configured correctly in order for Skaffold to work properly.", "twitter:card": "summary", "twitter:title": "Helm [UPDATED]", "title": "Helm [UPDATED] | Skaffold", "ogTitle": "Helm [UPDATED]", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "article:section": "docs", "ogUrl": "https://skaffold.dev/docs/renderers/helm/", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogDescription": "helm is a package manager for Kubernetes that helps you manage Kubernetes applications. Skaffold natively supports iterative development for projects configured to use helm.\nNote To use helm with Skaffold, the helm binary must be installed on your machine. Skaffold will not install it for you.  Configuring your Helm Project with Skaffold Skaffold supports projects set up to render and/or deploy with Helm, but certain aspects of the project need to be configured correctly in order for Skaffold to work properly.", "og:site_name": "Skaffold", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:title": "Helm [UPDATED]", "description": "helm is a package manager for Kubernetes that helps you\nmanage Kubernetes applications. Skaffold natively supports iterative development\nfor projects …", "language": "en", "ogSiteName": "Skaffold", "twitter:description": "helm is a package manager for Kubernetes that helps you manage Kubernetes applications. Skaffold natively supports iterative development for projects configured to use helm.\nNote To use helm with Skaffold, the helm binary must be installed on your machine. Skaffold will not install it for you.  Configuring your Helm Project with Skaffold Skaffold supports projects set up to render and/or deploy with Helm, but certain aspects of the project need to be configured correctly in order for Skaffold to work properly.", "og:type": "article", "modifiedTime": "2025-01-23T10:14:58-05:00", "robots": "index, follow", "scrapeId": "2b4df09d-db81-4454-8c71-961142d0bdc4", "sourceURL": "https://skaffold.dev/docs/renderers/helm", "url": "https://skaffold.dev/docs/renderers/helm/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: What are some tips for using Helm [UPDATED] beta in skaffold effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nTo use `helm` with Skaffold, the `helm` binary must be installed on your machine. Skaffold will not install it for you.\n\nStarting in Skaffold `v2.1.0`, Skaffold will output additional `setValueTemplates`.\n\nIMPORTANT: To get Skaffold to work with Helm, the `image` key must be configured in the skaffold.yaml.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://skaffold.dev/docs/renderers/helm", "title": "Helm [UPDATED] beta", "description": "`helm` is a package manager for Kubernetes that helps you manage Kubernetes applications. Skaffold natively supports iterative development for projects configured to use helm.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:35:19", "type": "best_practices", "page_metadata": {"og:url": "https://skaffold.dev/docs/renderers/helm/", "generator": "Hugo 0.99.1", "og:description": "helm is a package manager for Kubernetes that helps you manage Kubernetes applications. Skaffold natively supports iterative development for projects configured to use helm.\nNote To use helm with Skaffold, the helm binary must be installed on your machine. Skaffold will not install it for you.  Configuring your Helm Project with Skaffold Skaffold supports projects set up to render and/or deploy with Helm, but certain aspects of the project need to be configured correctly in order for Skaffold to work properly.", "twitter:card": "summary", "twitter:title": "Helm [UPDATED]", "title": "Helm [UPDATED] | Skaffold", "ogTitle": "Helm [UPDATED]", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "article:section": "docs", "ogUrl": "https://skaffold.dev/docs/renderers/helm/", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogDescription": "helm is a package manager for Kubernetes that helps you manage Kubernetes applications. Skaffold natively supports iterative development for projects configured to use helm.\nNote To use helm with Skaffold, the helm binary must be installed on your machine. Skaffold will not install it for you.  Configuring your Helm Project with Skaffold Skaffold supports projects set up to render and/or deploy with Helm, but certain aspects of the project need to be configured correctly in order for Skaffold to work properly.", "og:site_name": "Skaffold", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:title": "Helm [UPDATED]", "description": "helm is a package manager for Kubernetes that helps you\nmanage Kubernetes applications. Skaffold natively supports iterative development\nfor projects …", "language": "en", "ogSiteName": "Skaffold", "twitter:description": "helm is a package manager for Kubernetes that helps you manage Kubernetes applications. Skaffold natively supports iterative development for projects configured to use helm.\nNote To use helm with Skaffold, the helm binary must be installed on your machine. Skaffold will not install it for you.  Configuring your Helm Project with Skaffold Skaffold supports projects set up to render and/or deploy with Helm, but certain aspects of the project need to be configured correctly in order for Skaffold to work properly.", "og:type": "article", "modifiedTime": "2025-01-23T10:14:58-05:00", "robots": "index, follow", "scrapeId": "2b4df09d-db81-4454-8c71-961142d0bdc4", "sourceURL": "https://skaffold.dev/docs/renderers/helm", "url": "https://skaffold.dev/docs/renderers/helm/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what HTTP API is in skaffold?\n\nAssistant: Sure, I'd be happy to explain HTTP API in skaffold.\n\n# HTTP API\n\nThis is a generated reference for the Skaffold API HTTP layer.", "metadata": {"source_url": "https://skaffold.dev/docs/references/api-v2/swagger", "title": "HTTP API", "description": "This is a generated reference for the Skaffold API HTTP layer.", "has_code_examples": false, "has_best_practices": false, "section_count": 0, "timestamp": "2025-03-01 03:35:29", "type": "overview", "page_metadata": {"twitter:description": "This is a generated reference for the Skaffold API HTTP layer.\nWe also generate the reference doc for the gRPC layer.\n    const DisableTryItOutPlugin = function () { return { statePlugins: { spec: { wrapSelectors: { allowTryItOutFor: () = () = false } } } } } window.onload = function () { // Begin Swagger UI call region const ui = SwaggerUIBundle({ url: \"/api-v2/skaffold.swagger.json\", dom_id: '#swagger-ui', deepLinking: true, presets: [ SwaggerUIBundle.", "ogUrl": "https://skaffold.dev/docs/references/api-v2/swagger/", "modifiedTime": "2025-01-23T10:14:58-05:00", "ogTitle": "HTTP API", "ogSiteName": "Skaffold", "og:description": "This is a generated reference for the Skaffold API HTTP layer.\nWe also generate the reference doc for the gRPC layer.\n    const DisableTryItOutPlugin = function () { return { statePlugins: { spec: { wrapSelectors: { allowTryItOutFor: () = () = false } } } } } window.onload = function () { // Begin Swagger UI call region const ui = SwaggerUIBundle({ url: \"/api-v2/skaffold.swagger.json\", dom_id: '#swagger-ui', deepLinking: true, presets: [ SwaggerUIBundle.", "robots": "index, follow", "language": "en", "description": "This is a generated reference for the Skaffold API HTTP layer.\nWe also generate the reference doc for the gRPC layer.\n\n\n\n", "og:title": "HTTP API", "article:section": "docs", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:site_name": "Skaffold", "twitter:card": "summary", "og:type": "article", "og:url": "https://skaffold.dev/docs/references/api-v2/swagger/", "title": "HTTP API | Skaffold", "twitter:title": "HTTP API", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "ogDescription": "This is a generated reference for the Skaffold API HTTP layer.\nWe also generate the reference doc for the gRPC layer.\n    const DisableTryItOutPlugin = function () { return { statePlugins: { spec: { wrapSelectors: { allowTryItOutFor: () = () = false } } } } } window.onload = function () { // Begin Swagger UI call region const ui = SwaggerUIBundle({ url: \"/api-v2/skaffold.swagger.json\", dom_id: '#swagger-ui', deepLinking: true, presets: [ SwaggerUIBundle.", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "generator": "Hugo 0.99.1", "scrapeId": "7ce43070-cf04-4604-8a7e-b90caea3722a", "sourceURL": "https://skaffold.dev/docs/references/api-v2/swagger", "url": "https://skaffold.dev/docs/references/api-v2/swagger/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what HTTP API is in skaffold?\n\nAssistant: Sure, I'd be happy to explain HTTP API in skaffold.\n\n# HTTP API\n\nThis is a generated reference for the Skaffold API HTTP layer.Here's a quick rundown of what this is about:\n\n## Version Information\n\nversion not set\n\n## API Documentation Links\n\n- [Skaffold API Swagger JSON](https://skaffold.dev/api/skaffold.swagger.json)\n- v1/skaffold.proto\n\n## Schemes\n\nhttp, https\n\n## SkaffoldService Endpoints\n\n- **PUT** [/v1/build/auto_execute](https://skaffold.dev/docs/references/api/swagger/#/SkaffoldService/AutoBuild): Allows for enabling or disabling automatic build trigger.\n- **PUT** [/v1/deploy/auto_execute](https://skaffold.dev/docs/references/api/swagger/#/SkaffoldService/AutoDeploy): Allows for enabling or disabling automatic deploy trigger.\n- **GET** [/v1/event_log](https://skaffold.dev/docs/references/api/swagger/#/SkaffoldService/EventLog): DEPRECATED. Events should be used instead. TODO remove (https://github.com/GoogleContainerTools/skaffold/issues/3168).\n- **GET** [/v1/events](https://skaffold.dev/docs/references/api/swagger/#/SkaffoldService/Events): Returns all the events of the current Skaffold execution from the start.\n- **POST** [/v1/events/handle](https://skaffold.dev/docs/references/api/swagger/#/SkaffoldService/Handle): EXPERIMENTAL. It allows for custom events to be implemented in custom builders for example.\n- **POST** [/v1/execute](https://skaffold.dev/docs/references/api/swagger/#/SkaffoldService/Execute): Allows for a single execution of some or all of the phases (build, sync, deploy) in case autoBuild, autoDeploy or autoSync are disabled.\n- **GET** [/v1/state](https://skaffold.dev/docs/references/api/swagger/#/SkaffoldService/GetState): Returns the state of the current Skaffold execution.\n- **PUT** [/v1/sync/auto_execute](https://skaffold.dev/docs/references/api/swagger/#/SkaffoldService/AutoSync): Allows for enabling or disabling automatic sync trigger.\n\n## Models\n\n- BuildMetadataImageBuilder\n- DeployMetadataDeployer\n- TestMetadataTester\n- enumsBuildType\n- enumsBuilderType\n- enumsClusterType\n- enumsDeployerType\n- enumsStatusCode\n- enumsSuggestionCode\n- enumsTesterType\n- protoActionableErr\n- protoBuildEvent\n- protoBuildMetadata\n- protoBuildState\n- protoDebuggingContainerEvent\n- protoDeployEvent\n- protoDeployMetadata\n- protoDeployState\n- protoDevLoopEvent\n- protoEvent\n- protoFileSyncEvent\n- protoFileSyncState\n- protoIntOrString\n- protoIntent\n- protoLogEntry\n- protoMetaEvent\n- protoMetadata\n- protoPortEvent\n- protoResourceStatusCheckEvent\n- protoState\n- protoStatusCheckEvent\n- protoStatusCheckState\n- protoSuggestion\n- protoTerminationEvent\n- protoTestEvent\n- protoTestMetadata\n- protoTestState\n- protoTriggerState\n- protobufAny\n- runtimeStreamError\n\n## Last Modified\n\nLast modified January 23, 2025: [release: v2.14.0 (#9668) (f132ab25)](https://github.com/GoogleContainerTools/skaffold/commit/f132ab25adf1599c7fbdce733144991126565386)\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/references/api/swagger", "title": "HTTP API", "description": "This is a generated reference for the Skaffold API HTTP layer.", "has_code_examples": false, "has_best_practices": false, "section_count": 6, "timestamp": "2025-03-01 03:36:02", "type": "overview", "page_metadata": {"og:title": "HTTP API", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:description": "This is a generated reference for the Skaffold API HTTP layer.\nWe also generate the reference doc for the gRPC layer.\n    const DisableTryItOutPlugin = function () { return { statePlugins: { spec: { wrapSelectors: { allowTryItOutFor: () = () = false } } } } } window.onload = function () { // Begin Swagger UI call region const ui = SwaggerUIBundle({ url: \"/api/skaffold.swagger.json\", dom_id: '#swagger-ui', deepLinking: true, presets: [ SwaggerUIBundle.", "og:url": "https://skaffold.dev/docs/references/api/swagger/", "ogDescription": "This is a generated reference for the Skaffold API HTTP layer.\nWe also generate the reference doc for the gRPC layer.\n    const DisableTryItOutPlugin = function () { return { statePlugins: { spec: { wrapSelectors: { allowTryItOutFor: () = () = false } } } } } window.onload = function () { // Begin Swagger UI call region const ui = SwaggerUIBundle({ url: \"/api/skaffold.swagger.json\", dom_id: '#swagger-ui', deepLinking: true, presets: [ SwaggerUIBundle.", "ogUrl": "https://skaffold.dev/docs/references/api/swagger/", "generator": "Hugo 0.99.1", "og:site_name": "Skaffold", "twitter:card": "summary", "article:section": "docs", "twitter:title": "HTTP API", "robots": "index, follow", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "twitter:description": "This is a generated reference for the Skaffold API HTTP layer.\nWe also generate the reference doc for the gRPC layer.\n    const DisableTryItOutPlugin = function () { return { statePlugins: { spec: { wrapSelectors: { allowTryItOutFor: () = () = false } } } } } window.onload = function () { // Begin Swagger UI call region const ui = SwaggerUIBundle({ url: \"/api/skaffold.swagger.json\", dom_id: '#swagger-ui', deepLinking: true, presets: [ SwaggerUIBundle.", "article:modified_time": "2025-01-23T10:14:58-05:00", "ogTitle": "HTTP API", "ogSiteName": "Skaffold", "og:type": "article", "title": "HTTP API | Skaffold", "description": "This is a generated reference for the Skaffold API HTTP layer.\nWe also generate the reference doc for the gRPC layer.\n\n\n\n", "language": "en", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "scrapeId": "2bdb40eb-ae3b-43a8-97de-df41dab3b6e2", "sourceURL": "https://skaffold.dev/docs/references/api/swagger", "url": "https://skaffold.dev/docs/references/api/swagger/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I version information in skaffold?\n\nAssistant: To version information in skaffold, here's what you do:\nversion not set.\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/api/swagger", "title": "HTTP API", "description": "This is a generated reference for the Skaffold API HTTP layer.", "has_code_examples": false, "has_best_practices": false, "section_count": 6, "timestamp": "2025-03-01 03:36:02", "type": "section_detail", "page_metadata": {"og:title": "HTTP API", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:description": "This is a generated reference for the Skaffold API HTTP layer.\nWe also generate the reference doc for the gRPC layer.\n    const DisableTryItOutPlugin = function () { return { statePlugins: { spec: { wrapSelectors: { allowTryItOutFor: () = () = false } } } } } window.onload = function () { // Begin Swagger UI call region const ui = SwaggerUIBundle({ url: \"/api/skaffold.swagger.json\", dom_id: '#swagger-ui', deepLinking: true, presets: [ SwaggerUIBundle.", "og:url": "https://skaffold.dev/docs/references/api/swagger/", "ogDescription": "This is a generated reference for the Skaffold API HTTP layer.\nWe also generate the reference doc for the gRPC layer.\n    const DisableTryItOutPlugin = function () { return { statePlugins: { spec: { wrapSelectors: { allowTryItOutFor: () = () = false } } } } } window.onload = function () { // Begin Swagger UI call region const ui = SwaggerUIBundle({ url: \"/api/skaffold.swagger.json\", dom_id: '#swagger-ui', deepLinking: true, presets: [ SwaggerUIBundle.", "ogUrl": "https://skaffold.dev/docs/references/api/swagger/", "generator": "Hugo 0.99.1", "og:site_name": "Skaffold", "twitter:card": "summary", "article:section": "docs", "twitter:title": "HTTP API", "robots": "index, follow", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "twitter:description": "This is a generated reference for the Skaffold API HTTP layer.\nWe also generate the reference doc for the gRPC layer.\n    const DisableTryItOutPlugin = function () { return { statePlugins: { spec: { wrapSelectors: { allowTryItOutFor: () = () = false } } } } } window.onload = function () { // Begin Swagger UI call region const ui = SwaggerUIBundle({ url: \"/api/skaffold.swagger.json\", dom_id: '#swagger-ui', deepLinking: true, presets: [ SwaggerUIBundle.", "article:modified_time": "2025-01-23T10:14:58-05:00", "ogTitle": "HTTP API", "ogSiteName": "Skaffold", "og:type": "article", "title": "HTTP API | Skaffold", "description": "This is a generated reference for the Skaffold API HTTP layer.\nWe also generate the reference doc for the gRPC layer.\n\n\n\n", "language": "en", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "scrapeId": "2bdb40eb-ae3b-43a8-97de-df41dab3b6e2", "sourceURL": "https://skaffold.dev/docs/references/api/swagger", "url": "https://skaffold.dev/docs/references/api/swagger/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I api documentation links in skaffold?\n\nAssistant: To api documentation links in skaffold, here's what you do:\n- [Skaffold API Swagger JSON](https://skaffold.dev/api/skaffold.swagger.json)\n- v1/skaffold.proto.\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/api/swagger", "title": "HTTP API", "description": "This is a generated reference for the Skaffold API HTTP layer.", "has_code_examples": false, "has_best_practices": false, "section_count": 6, "timestamp": "2025-03-01 03:36:02", "type": "section_detail", "page_metadata": {"og:title": "HTTP API", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:description": "This is a generated reference for the Skaffold API HTTP layer.\nWe also generate the reference doc for the gRPC layer.\n    const DisableTryItOutPlugin = function () { return { statePlugins: { spec: { wrapSelectors: { allowTryItOutFor: () = () = false } } } } } window.onload = function () { // Begin Swagger UI call region const ui = SwaggerUIBundle({ url: \"/api/skaffold.swagger.json\", dom_id: '#swagger-ui', deepLinking: true, presets: [ SwaggerUIBundle.", "og:url": "https://skaffold.dev/docs/references/api/swagger/", "ogDescription": "This is a generated reference for the Skaffold API HTTP layer.\nWe also generate the reference doc for the gRPC layer.\n    const DisableTryItOutPlugin = function () { return { statePlugins: { spec: { wrapSelectors: { allowTryItOutFor: () = () = false } } } } } window.onload = function () { // Begin Swagger UI call region const ui = SwaggerUIBundle({ url: \"/api/skaffold.swagger.json\", dom_id: '#swagger-ui', deepLinking: true, presets: [ SwaggerUIBundle.", "ogUrl": "https://skaffold.dev/docs/references/api/swagger/", "generator": "Hugo 0.99.1", "og:site_name": "Skaffold", "twitter:card": "summary", "article:section": "docs", "twitter:title": "HTTP API", "robots": "index, follow", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "twitter:description": "This is a generated reference for the Skaffold API HTTP layer.\nWe also generate the reference doc for the gRPC layer.\n    const DisableTryItOutPlugin = function () { return { statePlugins: { spec: { wrapSelectors: { allowTryItOutFor: () = () = false } } } } } window.onload = function () { // Begin Swagger UI call region const ui = SwaggerUIBundle({ url: \"/api/skaffold.swagger.json\", dom_id: '#swagger-ui', deepLinking: true, presets: [ SwaggerUIBundle.", "article:modified_time": "2025-01-23T10:14:58-05:00", "ogTitle": "HTTP API", "ogSiteName": "Skaffold", "og:type": "article", "title": "HTTP API | Skaffold", "description": "This is a generated reference for the Skaffold API HTTP layer.\nWe also generate the reference doc for the gRPC layer.\n\n\n\n", "language": "en", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "scrapeId": "2bdb40eb-ae3b-43a8-97de-df41dab3b6e2", "sourceURL": "https://skaffold.dev/docs/references/api/swagger", "url": "https://skaffold.dev/docs/references/api/swagger/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I schemes in skaffold?\n\nAssistant: To schemes in skaffold, here's what you do:\nhttp, https.\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/api/swagger", "title": "HTTP API", "description": "This is a generated reference for the Skaffold API HTTP layer.", "has_code_examples": false, "has_best_practices": false, "section_count": 6, "timestamp": "2025-03-01 03:36:02", "type": "section_detail", "page_metadata": {"og:title": "HTTP API", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:description": "This is a generated reference for the Skaffold API HTTP layer.\nWe also generate the reference doc for the gRPC layer.\n    const DisableTryItOutPlugin = function () { return { statePlugins: { spec: { wrapSelectors: { allowTryItOutFor: () = () = false } } } } } window.onload = function () { // Begin Swagger UI call region const ui = SwaggerUIBundle({ url: \"/api/skaffold.swagger.json\", dom_id: '#swagger-ui', deepLinking: true, presets: [ SwaggerUIBundle.", "og:url": "https://skaffold.dev/docs/references/api/swagger/", "ogDescription": "This is a generated reference for the Skaffold API HTTP layer.\nWe also generate the reference doc for the gRPC layer.\n    const DisableTryItOutPlugin = function () { return { statePlugins: { spec: { wrapSelectors: { allowTryItOutFor: () = () = false } } } } } window.onload = function () { // Begin Swagger UI call region const ui = SwaggerUIBundle({ url: \"/api/skaffold.swagger.json\", dom_id: '#swagger-ui', deepLinking: true, presets: [ SwaggerUIBundle.", "ogUrl": "https://skaffold.dev/docs/references/api/swagger/", "generator": "Hugo 0.99.1", "og:site_name": "Skaffold", "twitter:card": "summary", "article:section": "docs", "twitter:title": "HTTP API", "robots": "index, follow", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "twitter:description": "This is a generated reference for the Skaffold API HTTP layer.\nWe also generate the reference doc for the gRPC layer.\n    const DisableTryItOutPlugin = function () { return { statePlugins: { spec: { wrapSelectors: { allowTryItOutFor: () = () = false } } } } } window.onload = function () { // Begin Swagger UI call region const ui = SwaggerUIBundle({ url: \"/api/skaffold.swagger.json\", dom_id: '#swagger-ui', deepLinking: true, presets: [ SwaggerUIBundle.", "article:modified_time": "2025-01-23T10:14:58-05:00", "ogTitle": "HTTP API", "ogSiteName": "Skaffold", "og:type": "article", "title": "HTTP API | Skaffold", "description": "This is a generated reference for the Skaffold API HTTP layer.\nWe also generate the reference doc for the gRPC layer.\n\n\n\n", "language": "en", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "scrapeId": "2bdb40eb-ae3b-43a8-97de-df41dab3b6e2", "sourceURL": "https://skaffold.dev/docs/references/api/swagger", "url": "https://skaffold.dev/docs/references/api/swagger/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I skaffoldservice endpoints in skaffold?\n\nAssistant: To skaffoldservice endpoints in skaffold, here's what you do:\n- **PUT** [/v1/build/auto_execute](https://skaffold.dev/docs/references/api/swagger/#/SkaffoldService/AutoBuild): Allows for enabling or disabling automatic build trigger.\n- **PUT** [/v1/deploy/auto_execute](https://skaffold.dev/docs/references/api/swagger/#/SkaffoldService/AutoDeploy): Allows for enabling or disabling automatic deploy trigger.\n- **GET** [/v1/event_log](https://skaffold.dev/docs/references/api/swagger/#/SkaffoldService/EventLog): DEPRECATED. Events should be used instead. TODO remove (https://github.com/GoogleContainerTools/skaffold/issues/3168).\n- **GET** [/v1/events](https://skaffold.dev/docs/references/api/swagger/#/SkaffoldService/Events): Returns all the events of the current Skaffold execution from the start.\n- **POST** [/v1/events/handle](https://skaffold.dev/docs/references/api/swagger/#/SkaffoldService/Handle): EXPERIMENTAL. It allows for custom events to be implemented in custom builders for example.\n- **POST** [/v1/execute](https://skaffold.dev/docs/references/api/swagger/#/SkaffoldService/Execute): Allows for a single execution of some or all of the phases (build, sync, deploy) in case autoBuild, autoDeploy or autoSync are disabled.\n- **GET** [/v1/state](https://skaffold.dev/docs/references/api/swagger/#/SkaffoldService/GetState): Returns the state of the current Skaffold execution.\n- **PUT** [/v1/sync/auto_execute](https://skaffold.dev/docs/references/api/swagger/#/SkaffoldService/AutoSync): Allows for enabling or disabling automatic sync trigger..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/api/swagger", "title": "HTTP API", "description": "This is a generated reference for the Skaffold API HTTP layer.", "has_code_examples": false, "has_best_practices": false, "section_count": 6, "timestamp": "2025-03-01 03:36:02", "type": "section_detail", "page_metadata": {"og:title": "HTTP API", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:description": "This is a generated reference for the Skaffold API HTTP layer.\nWe also generate the reference doc for the gRPC layer.\n    const DisableTryItOutPlugin = function () { return { statePlugins: { spec: { wrapSelectors: { allowTryItOutFor: () = () = false } } } } } window.onload = function () { // Begin Swagger UI call region const ui = SwaggerUIBundle({ url: \"/api/skaffold.swagger.json\", dom_id: '#swagger-ui', deepLinking: true, presets: [ SwaggerUIBundle.", "og:url": "https://skaffold.dev/docs/references/api/swagger/", "ogDescription": "This is a generated reference for the Skaffold API HTTP layer.\nWe also generate the reference doc for the gRPC layer.\n    const DisableTryItOutPlugin = function () { return { statePlugins: { spec: { wrapSelectors: { allowTryItOutFor: () = () = false } } } } } window.onload = function () { // Begin Swagger UI call region const ui = SwaggerUIBundle({ url: \"/api/skaffold.swagger.json\", dom_id: '#swagger-ui', deepLinking: true, presets: [ SwaggerUIBundle.", "ogUrl": "https://skaffold.dev/docs/references/api/swagger/", "generator": "Hugo 0.99.1", "og:site_name": "Skaffold", "twitter:card": "summary", "article:section": "docs", "twitter:title": "HTTP API", "robots": "index, follow", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "twitter:description": "This is a generated reference for the Skaffold API HTTP layer.\nWe also generate the reference doc for the gRPC layer.\n    const DisableTryItOutPlugin = function () { return { statePlugins: { spec: { wrapSelectors: { allowTryItOutFor: () = () = false } } } } } window.onload = function () { // Begin Swagger UI call region const ui = SwaggerUIBundle({ url: \"/api/skaffold.swagger.json\", dom_id: '#swagger-ui', deepLinking: true, presets: [ SwaggerUIBundle.", "article:modified_time": "2025-01-23T10:14:58-05:00", "ogTitle": "HTTP API", "ogSiteName": "Skaffold", "og:type": "article", "title": "HTTP API | Skaffold", "description": "This is a generated reference for the Skaffold API HTTP layer.\nWe also generate the reference doc for the gRPC layer.\n\n\n\n", "language": "en", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "scrapeId": "2bdb40eb-ae3b-43a8-97de-df41dab3b6e2", "sourceURL": "https://skaffold.dev/docs/references/api/swagger", "url": "https://skaffold.dev/docs/references/api/swagger/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I models in skaffold?\n\nAssistant: To models in skaffold, here's what you do:\n- BuildMetadataImageBuilder\n- DeployMetadataDeployer\n- TestMetadataTester\n- enumsBuildType\n- enumsBuilderType\n- enumsClusterType\n- enumsDeployerType\n- enumsStatusCode\n- enumsSuggestionCode\n- enumsTesterType\n- protoActionableErr\n- protoBuildEvent\n- protoBuildMetadata\n- protoBuildState\n- protoDebuggingContainerEvent\n- protoDeployEvent\n- protoDeployMetadata\n- protoDeployState\n- protoDevLoopEvent\n- protoEvent\n- protoFileSyncEvent\n- protoFileSyncState\n- protoIntOrString\n- protoIntent\n- protoLogEntry\n- protoMetaEvent\n- protoMetadata\n- protoPortEvent\n- protoResourceStatusCheckEvent\n- protoState\n- protoStatusCheckEvent\n- protoStatusCheckState\n- protoSuggestion\n- protoTerminationEvent\n- protoTestEvent\n- protoTestMetadata\n- protoTestState\n- protoTriggerState\n- protobufAny\n- runtimeStreamError.\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/api/swagger", "title": "HTTP API", "description": "This is a generated reference for the Skaffold API HTTP layer.", "has_code_examples": false, "has_best_practices": false, "section_count": 6, "timestamp": "2025-03-01 03:36:02", "type": "section_detail", "page_metadata": {"og:title": "HTTP API", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:description": "This is a generated reference for the Skaffold API HTTP layer.\nWe also generate the reference doc for the gRPC layer.\n    const DisableTryItOutPlugin = function () { return { statePlugins: { spec: { wrapSelectors: { allowTryItOutFor: () = () = false } } } } } window.onload = function () { // Begin Swagger UI call region const ui = SwaggerUIBundle({ url: \"/api/skaffold.swagger.json\", dom_id: '#swagger-ui', deepLinking: true, presets: [ SwaggerUIBundle.", "og:url": "https://skaffold.dev/docs/references/api/swagger/", "ogDescription": "This is a generated reference for the Skaffold API HTTP layer.\nWe also generate the reference doc for the gRPC layer.\n    const DisableTryItOutPlugin = function () { return { statePlugins: { spec: { wrapSelectors: { allowTryItOutFor: () = () = false } } } } } window.onload = function () { // Begin Swagger UI call region const ui = SwaggerUIBundle({ url: \"/api/skaffold.swagger.json\", dom_id: '#swagger-ui', deepLinking: true, presets: [ SwaggerUIBundle.", "ogUrl": "https://skaffold.dev/docs/references/api/swagger/", "generator": "Hugo 0.99.1", "og:site_name": "Skaffold", "twitter:card": "summary", "article:section": "docs", "twitter:title": "HTTP API", "robots": "index, follow", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "twitter:description": "This is a generated reference for the Skaffold API HTTP layer.\nWe also generate the reference doc for the gRPC layer.\n    const DisableTryItOutPlugin = function () { return { statePlugins: { spec: { wrapSelectors: { allowTryItOutFor: () = () = false } } } } } window.onload = function () { // Begin Swagger UI call region const ui = SwaggerUIBundle({ url: \"/api/skaffold.swagger.json\", dom_id: '#swagger-ui', deepLinking: true, presets: [ SwaggerUIBundle.", "article:modified_time": "2025-01-23T10:14:58-05:00", "ogTitle": "HTTP API", "ogSiteName": "Skaffold", "og:type": "article", "title": "HTTP API | Skaffold", "description": "This is a generated reference for the Skaffold API HTTP layer.\nWe also generate the reference doc for the gRPC layer.\n\n\n\n", "language": "en", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "scrapeId": "2bdb40eb-ae3b-43a8-97de-df41dab3b6e2", "sourceURL": "https://skaffold.dev/docs/references/api/swagger", "url": "https://skaffold.dev/docs/references/api/swagger/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I last modified in skaffold?\n\nAssistant: To last modified in skaffold, here's what you do:\nLast modified January 23, 2025: [release: v2.14.0 (#9668) (f132ab25)](https://github.com/GoogleContainerTools/skaffold/commit/f132ab25adf1599c7fbdce733144991126565386).\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/api/swagger", "title": "HTTP API", "description": "This is a generated reference for the Skaffold API HTTP layer.", "has_code_examples": false, "has_best_practices": false, "section_count": 6, "timestamp": "2025-03-01 03:36:02", "type": "section_detail", "page_metadata": {"og:title": "HTTP API", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:description": "This is a generated reference for the Skaffold API HTTP layer.\nWe also generate the reference doc for the gRPC layer.\n    const DisableTryItOutPlugin = function () { return { statePlugins: { spec: { wrapSelectors: { allowTryItOutFor: () = () = false } } } } } window.onload = function () { // Begin Swagger UI call region const ui = SwaggerUIBundle({ url: \"/api/skaffold.swagger.json\", dom_id: '#swagger-ui', deepLinking: true, presets: [ SwaggerUIBundle.", "og:url": "https://skaffold.dev/docs/references/api/swagger/", "ogDescription": "This is a generated reference for the Skaffold API HTTP layer.\nWe also generate the reference doc for the gRPC layer.\n    const DisableTryItOutPlugin = function () { return { statePlugins: { spec: { wrapSelectors: { allowTryItOutFor: () = () = false } } } } } window.onload = function () { // Begin Swagger UI call region const ui = SwaggerUIBundle({ url: \"/api/skaffold.swagger.json\", dom_id: '#swagger-ui', deepLinking: true, presets: [ SwaggerUIBundle.", "ogUrl": "https://skaffold.dev/docs/references/api/swagger/", "generator": "Hugo 0.99.1", "og:site_name": "Skaffold", "twitter:card": "summary", "article:section": "docs", "twitter:title": "HTTP API", "robots": "index, follow", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "twitter:description": "This is a generated reference for the Skaffold API HTTP layer.\nWe also generate the reference doc for the gRPC layer.\n    const DisableTryItOutPlugin = function () { return { statePlugins: { spec: { wrapSelectors: { allowTryItOutFor: () = () = false } } } } } window.onload = function () { // Begin Swagger UI call region const ui = SwaggerUIBundle({ url: \"/api/skaffold.swagger.json\", dom_id: '#swagger-ui', deepLinking: true, presets: [ SwaggerUIBundle.", "article:modified_time": "2025-01-23T10:14:58-05:00", "ogTitle": "HTTP API", "ogSiteName": "Skaffold", "og:type": "article", "title": "HTTP API | Skaffold", "description": "This is a generated reference for the Skaffold API HTTP layer.\nWe also generate the reference doc for the gRPC layer.\n\n\n\n", "language": "en", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "scrapeId": "2bdb40eb-ae3b-43a8-97de-df41dab3b6e2", "sourceURL": "https://skaffold.dev/docs/references/api/swagger", "url": "https://skaffold.dev/docs/references/api/swagger/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what Skaffold Pipeline is in skaffold?\n\nAssistant: Sure, I'd be happy to explain Skaffold Pipeline in skaffold.\n\n# Skaffold Pipeline\n\nThis page covers the configuration of Skaffold using the Skaffold configuration file, skaffold.yaml, detailing its components, file resolution, multiple configuration support, configuration dependencies, and profile activation.Here's a quick rundown of what this is about:\n\n## Skaffold Configuration Components\n\nYou can configure Skaffold with the Skaffold configuration file, `skaffold.yaml`. A single configuration consists of several different components:\n\n| Component | Description |\n| --- | --- |\n| `apiVersion` | The Skaffold API version you would like to use. The current API version is skaffold/v4beta12<br>. |\n| `kind` | The Skaffold configuration file has the kind `Config`. |\n| `metadata` | Holds additional properties like the `name` of this configuration. |\n| `build` | Specifies how Skaffold builds artifacts. You have control over what tool Skaffold can use, how Skaffold tags artifacts and how Skaffold pushes artifacts. Skaffold supports using local Docker daemon, Google Cloud Build, Kaniko, or Bazel to build artifacts. See [Builders](https://skaffold.dev/docs/builders) and [Taggers](https://skaffold.dev/docs/taggers/) for more information. |\n| `test` | Specifies how Skaffold tests artifacts. Skaffold supports [container-structure-tests](https://github.com/GoogleContainerTools/container-structure-test) to test built artifacts and custom tests to run custom commands as part of the development pipeline. See [Testers](https://skaffold.dev/docs/testers/) for more information. |\n| `deploy` | Specifies how Skaffold deploys artifacts. Skaffold supports using `kubectl`, `helm`, or `kustomize` to deploy artifacts. See [Deployers](https://skaffold.dev/docs/deployers/) for more information. |\n| `profiles` | Profile is a set of settings that, when activated, overrides the current configuration. You can use Profile to override the `build`, `test` and `deploy` sections. |\n| `requires` | Specifies a list of other skaffold configurations to import into the current config.\n\n## File Resolution\n\nThe Skaffold configuration file often references other files and directories. These files and directories are resolved relative to the current directory _and not to the location of_ _the Skaffold configuration file_. There are two important exceptions:\n\n1. Files referenced from a build artifact definition are resolved relative to the build artifact’s _context_ directory. When omitted, the context directory defaults to the current directory.\n2. For [configurations resolved as dependencies](https://skaffold.dev/docs/design/config/#configuration-dependencies%22), paths are always resolved relative to the directory containing the imported configuration file.\n\nFor example, consider a project with the following layout:\n\n```\n.\n├── frontend\n│   └── Dockerfile\n├── helm\n│   └── project\n│       └── dev-values.yaml\n└── skaffold.yaml\n```\n\nThe config file might look like:\n\n```yaml\napiVersion: skaffold/v2beta11\nkind: Config\nbuild:\n  artifacts:\n  - image: app\n    context: frontend\n    docker:\n      dockerfile: \"Dockerfile\"\ndeply:\n  helm:\n    releases:\n    - name: project\n      chartPath: helm/project\n      valuesFiles:\n      - \"helm/project/dev-values.yaml\"\n```\n\nIn this example, the `Dockerfile` for building `app` is resolved relative to `app`’s context directory, whereas the Helm chart’s location and its values-files are relative to the current directory in `helm/project`.\n\nWe generally recommend placing the configuration file in the root directory of the Skaffold project.\n\n## Multiple Configuration Support\n\nA single `skaffold.yaml` file can define multiple skaffold configurations in the schema described above using the separator `---`. If these configuration objects define the `metadata.name` property then we consider them as `modules`, that can then be activated by name.\n\nConsider a `skaffold.yaml` defined as:\n\n```yaml\napiVersion: skaffold/vX\nkind: Config\nmetadata:\n  name: cfg1\nbuild:\n  # build definition\ndeploy:\n  # deploy definition\n\n---\n\napiVersion: skaffold/vX\nkind: Config\nmetadata:\n  name: cfg2\nbuild:\n  # build definition\ndeploy:\n  # deploy definition\n```\n\nHere `cfg1` and `cfg2` are independent skaffold modules. Running `skaffold dev` for instance will execute actions from both these modules. You could also run `skaffold dev --module cfg1` to only activate the `cfg1` module and skip `cfg2`.\n\n## Configuration Dependencies\n\nIn addition to authoring configurations in a `skaffold.yaml` file, we can also import other existing configurations as dependencies. Skaffold manages all imported and defined configurations in the same session. It also ensures all artifacts in a required config are built prior to those in current config (provided the artifacts have dependencies defined); and all deploys in required configs are applied prior to those in current config.\n\n#### Note:\n\nRunning `skaffold <command> --module <config-name>` will filter to the specified target module, but also include the transitive closure of all other configurations in its dependency graph. For instance, if a module `cfg1` imported another module `cfg2` as a dependency while `cfg2` imported `cfg3` and `cfg4`, then running `skaffold dev --module cfg1` would activate all of `cfg1`, `cfg2`, `cfg3` and `cfg4` and execute them in dependency order.\n\n## Local Config Dependency\n\nConsider the same `skaffold.yaml` defined above. Modules `cfg1` and `cfg2` from the above file can be imported as dependencies in your current config definition, via:\n\n```yaml\napiVersion: skaffold/v2beta11\nkind: Config\nrequires:\n  - configs: [\"cfg1\", \"cfg2\"]\n    path: path/to/other/skaffold.yaml\nbuild:\n  # build definition\ndeploy:\n  # deploy definition\n```\n\nIf the `configs` list isn’t defined then it imports all the configs defined in the file pointed by `path`. Additionally, if the `path` to the configuration isn’t defined it assumes that all the required configs are defined in the same file as the current config.\n\n#### Note:\n\nIn imported configurations, files are resolved relative to the location of imported Skaffold configuration file.\n\n## Remote Config Dependency\n\nThe required skaffold config can live in a remote git repository or in Google Cloud Storage:\n\n```yaml\napiVersion: skaffold/v4beta7\nkind: Config\nrequires:\n  - configs: [\"cfg1\", \"cfg2\"]\n    git:\n      repo: http://github.com/GoogleContainerTools/skaffold.git\n      path: getting-started/skaffold.yaml\n      ref: main\n  - configs: [\"cfg3\"]\n    googleCloudStorage:\n      source: gs://my-bucket/dir1/*\n      path: config/skaffold.yaml\n```\n\nThe environment variable `SKAFFOLD_REMOTE_CACHE_DIR` or flag `--remote-cache-dir` specifies the download location for all remote dependency contents. If undefined then it defaults to `~/.skaffold/remote-cache`. The remote cache directory consists of subdirectories with the contents retrieved from the remote dependency. For git dependencies the subdirectory name is a hash of the repo `uri` and the `branch/ref`. For Google Cloud Storage dependencies the subdirectory name is a hash of the `source`.\n\nThe remote config gets treated like a local config after substituting the path with the actual path in the cache directory.\n\n## Profile Activation in Required Configs\n\nProfiles specified by the `--profile` flag are also propagated to all configurations imported as dependencies, if they define them. This behavior can be disabled by setting the `--propagate-profiles` flag to `false`.\n\nYou can additionally set up more granular and conditional profile activations across dependencies through the `activeProfiles` stanza:\n\n```yaml\napiVersion: skaffold/v2beta11\nkind: Config\nmetadata:\n    name: cfg\nrequires:\n  - path: ./path/to/required/skaffold.yaml\n    configs: [cfg1, cfg2]\n    activeProfiles:\n     - name: profile1\n       activatedBy: [profile2, profile3]\n```\n\nHere, `profile1` is a profile that needs to exist in both configs `cfg1` and `cfg2`; while `profile2` and `profile3` are profiles defined in the current config `cfg`. If the current config is activated with either `profile2` or `profile3` then the required configs `cfg1` and `cfg2` are imported with `profile1` applied. If the `activatedBy` clause is omitted then that `profile1` always gets applied for the imported configs.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/design/config", "title": "Skaffold Pipeline", "description": "This page covers the configuration of Skaffold using the Skaffold configuration file, skaffold.yaml, detailing its components, file resolution, multiple configuration support, configuration dependencies, and profile activation.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:37:45", "type": "overview", "page_metadata": {"viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "language": "en", "og:title": "Skaffold Pipeline", "ogSiteName": "Skaffold", "article:section": "docs", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:url": "https://skaffold.dev/docs/design/config/", "twitter:title": "Skaffold Pipeline", "og:description": "You can configure Skaffold with the Skaffold configuration file, skaffold.yaml. A single configuration consists of several different components:\n   Component Description     apiVersion The Skaffold API version you would like to use. The current API version is skaffold/v4beta12 .   kind The Skaffold configuration file has the kind Config.   metadata Holds additional properties like the name of this configuration.   build Specifies how Skaffold builds artifacts.", "description": "You can configure Skaffold with the Skaffold configuration file,\nskaffold.yaml.  A single configuration consists of several different components: …", "generator": "Hugo 0.99.1", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:site_name": "Skaffold", "title": "Skaffold Pipeline | Skaffold", "ogTitle": "Skaffold Pipeline", "twitter:description": "You can configure Skaffold with the Skaffold configuration file, skaffold.yaml. A single configuration consists of several different components:\n   Component Description     apiVersion The Skaffold API version you would like to use. The current API version is skaffold/v4beta12 .   kind The Skaffold configuration file has the kind Config.   metadata Holds additional properties like the name of this configuration.   build Specifies how Skaffold builds artifacts.", "robots": "index, follow", "og:type": "article", "ogDescription": "You can configure Skaffold with the Skaffold configuration file, skaffold.yaml. A single configuration consists of several different components:\n   Component Description     apiVersion The Skaffold API version you would like to use. The current API version is skaffold/v4beta12 .   kind The Skaffold configuration file has the kind Config.   metadata Holds additional properties like the name of this configuration.   build Specifies how Skaffold builds artifacts.", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogUrl": "https://skaffold.dev/docs/design/config/", "twitter:card": "summary", "scrapeId": "54396c07-9508-4043-b305-30ad6bf20b33", "sourceURL": "https://skaffold.dev/docs/design/config", "url": "https://skaffold.dev/docs/design/config/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I skaffold configuration components in skaffold?\n\nAssistant: To skaffold configuration components in skaffold, here's what you do:\nYou can configure Skaffold with the Skaffold configuration file, `skaffold.yaml`. A single configuration consists of several different components:\n\n| Component | Description |\n| --- | --- |\n| `apiVersion` | The Skaffold API version you would like to use. The current API version is skaffold/v4beta12<br>. |\n| `kind` | The Skaffold configuration file has the kind `Config`. |\n| `metadata` | Holds additional properties like the `name` of this configuration. |\n| `build` | Specifies how Skaffold builds artifacts. You have control over what tool Skaffold can use, how Skaffold tags artifacts and how Skaffold pushes artifacts. Skaffold supports using local Docker daemon, Google Cloud Build, Kaniko, or Bazel to build artifacts. See [Builders](https://skaffold.dev/docs/builders) and [Taggers](https://skaffold.dev/docs/taggers/) for more information. |\n| `test` | Specifies how Skaffold tests artifacts. Skaffold supports [container-structure-tests](https://github.com/GoogleContainerTools/container-structure-test) to test built artifacts and custom tests to run custom commands as part of the development pipeline. See [Testers](https://skaffold.dev/docs/testers/) for more information. |\n| `deploy` | Specifies how Skaffold deploys artifacts. Skaffold supports using `kubectl`, `helm`, or `kustomize` to deploy artifacts. See [Deployers](https://skaffold.dev/docs/deployers/) for more information. |\n| `profiles` | Profile is a set of settings that, when activated, overrides the current configuration. You can use Profile to override the `build`, `test` and `deploy` sections. |\n| `requires` | Specifies a list of other skaffold configurations to import into the current config..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/design/config", "title": "Skaffold Pipeline", "description": "This page covers the configuration of Skaffold using the Skaffold configuration file, skaffold.yaml, detailing its components, file resolution, multiple configuration support, configuration dependencies, and profile activation.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:37:45", "type": "section_detail", "page_metadata": {"viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "language": "en", "og:title": "Skaffold Pipeline", "ogSiteName": "Skaffold", "article:section": "docs", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:url": "https://skaffold.dev/docs/design/config/", "twitter:title": "Skaffold Pipeline", "og:description": "You can configure Skaffold with the Skaffold configuration file, skaffold.yaml. A single configuration consists of several different components:\n   Component Description     apiVersion The Skaffold API version you would like to use. The current API version is skaffold/v4beta12 .   kind The Skaffold configuration file has the kind Config.   metadata Holds additional properties like the name of this configuration.   build Specifies how Skaffold builds artifacts.", "description": "You can configure Skaffold with the Skaffold configuration file,\nskaffold.yaml.  A single configuration consists of several different components: …", "generator": "Hugo 0.99.1", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:site_name": "Skaffold", "title": "Skaffold Pipeline | Skaffold", "ogTitle": "Skaffold Pipeline", "twitter:description": "You can configure Skaffold with the Skaffold configuration file, skaffold.yaml. A single configuration consists of several different components:\n   Component Description     apiVersion The Skaffold API version you would like to use. The current API version is skaffold/v4beta12 .   kind The Skaffold configuration file has the kind Config.   metadata Holds additional properties like the name of this configuration.   build Specifies how Skaffold builds artifacts.", "robots": "index, follow", "og:type": "article", "ogDescription": "You can configure Skaffold with the Skaffold configuration file, skaffold.yaml. A single configuration consists of several different components:\n   Component Description     apiVersion The Skaffold API version you would like to use. The current API version is skaffold/v4beta12 .   kind The Skaffold configuration file has the kind Config.   metadata Holds additional properties like the name of this configuration.   build Specifies how Skaffold builds artifacts.", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogUrl": "https://skaffold.dev/docs/design/config/", "twitter:card": "summary", "scrapeId": "54396c07-9508-4043-b305-30ad6bf20b33", "sourceURL": "https://skaffold.dev/docs/design/config", "url": "https://skaffold.dev/docs/design/config/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I file resolution in skaffold?\n\nAssistant: To file resolution in skaffold, here's what you do:\nThe Skaffold configuration file often references other files and directories. These files and directories are resolved relative to the current directory _and not to the location of_ _the Skaffold configuration file_. There are two important exceptions:\n\n1. Files referenced from a build artifact definition are resolved relative to the build artifact’s _context_ directory. When omitted, the context directory defaults to the current directory.\n2. For [configurations resolved as dependencies](https://skaffold.dev/docs/design/config/#configuration-dependencies%22), paths are always resolved relative to the directory containing the imported configuration file.\n\nFor example, consider a project with the following layout:\n\n```\n.\n├── frontend\n│   └── Dockerfile\n├── helm\n│   └── project\n│       └── dev-values.yaml\n└── skaffold.yaml\n```\n\nThe config file might look like:\n\n```yaml\napiVersion: skaffold/v2beta11\nkind: Config\nbuild:\n  artifacts:\n  - image: app\n    context: frontend\n    docker:\n      dockerfile: \"Dockerfile\"\ndeply:\n  helm:\n    releases:\n    - name: project\n      chartPath: helm/project\n      valuesFiles:\n      - \"helm/project/dev-values.yaml\"\n```\n\nIn this example, the `Dockerfile` for building `app` is resolved relative to `app`’s context directory, whereas the Helm chart’s location and its values-files are relative to the current directory in `helm/project`.\n\nWe generally recommend placing the configuration file in the root directory of the Skaffold project..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/design/config", "title": "Skaffold Pipeline", "description": "This page covers the configuration of Skaffold using the Skaffold configuration file, skaffold.yaml, detailing its components, file resolution, multiple configuration support, configuration dependencies, and profile activation.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:37:45", "type": "section_detail", "page_metadata": {"viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "language": "en", "og:title": "Skaffold Pipeline", "ogSiteName": "Skaffold", "article:section": "docs", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:url": "https://skaffold.dev/docs/design/config/", "twitter:title": "Skaffold Pipeline", "og:description": "You can configure Skaffold with the Skaffold configuration file, skaffold.yaml. A single configuration consists of several different components:\n   Component Description     apiVersion The Skaffold API version you would like to use. The current API version is skaffold/v4beta12 .   kind The Skaffold configuration file has the kind Config.   metadata Holds additional properties like the name of this configuration.   build Specifies how Skaffold builds artifacts.", "description": "You can configure Skaffold with the Skaffold configuration file,\nskaffold.yaml.  A single configuration consists of several different components: …", "generator": "Hugo 0.99.1", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:site_name": "Skaffold", "title": "Skaffold Pipeline | Skaffold", "ogTitle": "Skaffold Pipeline", "twitter:description": "You can configure Skaffold with the Skaffold configuration file, skaffold.yaml. A single configuration consists of several different components:\n   Component Description     apiVersion The Skaffold API version you would like to use. The current API version is skaffold/v4beta12 .   kind The Skaffold configuration file has the kind Config.   metadata Holds additional properties like the name of this configuration.   build Specifies how Skaffold builds artifacts.", "robots": "index, follow", "og:type": "article", "ogDescription": "You can configure Skaffold with the Skaffold configuration file, skaffold.yaml. A single configuration consists of several different components:\n   Component Description     apiVersion The Skaffold API version you would like to use. The current API version is skaffold/v4beta12 .   kind The Skaffold configuration file has the kind Config.   metadata Holds additional properties like the name of this configuration.   build Specifies how Skaffold builds artifacts.", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogUrl": "https://skaffold.dev/docs/design/config/", "twitter:card": "summary", "scrapeId": "54396c07-9508-4043-b305-30ad6bf20b33", "sourceURL": "https://skaffold.dev/docs/design/config", "url": "https://skaffold.dev/docs/design/config/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I multiple configuration support in skaffold?\n\nAssistant: To multiple configuration support in skaffold, here's what you do:\nA single `skaffold.yaml` file can define multiple skaffold configurations in the schema described above using the separator `---`. If these configuration objects define the `metadata.name` property then we consider them as `modules`, that can then be activated by name.\n\nConsider a `skaffold.yaml` defined as:\n\n```yaml\napiVersion: skaffold/vX\nkind: Config\nmetadata:\n  name: cfg1\nbuild:\n  # build definition\ndeploy:\n  # deploy definition\n\n---\n\napiVersion: skaffold/vX\nkind: Config\nmetadata:\n  name: cfg2\nbuild:\n  # build definition\ndeploy:\n  # deploy definition\n```\n\nHere `cfg1` and `cfg2` are independent skaffold modules. Running `skaffold dev` for instance will execute actions from both these modules. You could also run `skaffold dev --module cfg1` to only activate the `cfg1` module and skip `cfg2`..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/design/config", "title": "Skaffold Pipeline", "description": "This page covers the configuration of Skaffold using the Skaffold configuration file, skaffold.yaml, detailing its components, file resolution, multiple configuration support, configuration dependencies, and profile activation.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:37:45", "type": "section_detail", "page_metadata": {"viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "language": "en", "og:title": "Skaffold Pipeline", "ogSiteName": "Skaffold", "article:section": "docs", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:url": "https://skaffold.dev/docs/design/config/", "twitter:title": "Skaffold Pipeline", "og:description": "You can configure Skaffold with the Skaffold configuration file, skaffold.yaml. A single configuration consists of several different components:\n   Component Description     apiVersion The Skaffold API version you would like to use. The current API version is skaffold/v4beta12 .   kind The Skaffold configuration file has the kind Config.   metadata Holds additional properties like the name of this configuration.   build Specifies how Skaffold builds artifacts.", "description": "You can configure Skaffold with the Skaffold configuration file,\nskaffold.yaml.  A single configuration consists of several different components: …", "generator": "Hugo 0.99.1", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:site_name": "Skaffold", "title": "Skaffold Pipeline | Skaffold", "ogTitle": "Skaffold Pipeline", "twitter:description": "You can configure Skaffold with the Skaffold configuration file, skaffold.yaml. A single configuration consists of several different components:\n   Component Description     apiVersion The Skaffold API version you would like to use. The current API version is skaffold/v4beta12 .   kind The Skaffold configuration file has the kind Config.   metadata Holds additional properties like the name of this configuration.   build Specifies how Skaffold builds artifacts.", "robots": "index, follow", "og:type": "article", "ogDescription": "You can configure Skaffold with the Skaffold configuration file, skaffold.yaml. A single configuration consists of several different components:\n   Component Description     apiVersion The Skaffold API version you would like to use. The current API version is skaffold/v4beta12 .   kind The Skaffold configuration file has the kind Config.   metadata Holds additional properties like the name of this configuration.   build Specifies how Skaffold builds artifacts.", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogUrl": "https://skaffold.dev/docs/design/config/", "twitter:card": "summary", "scrapeId": "54396c07-9508-4043-b305-30ad6bf20b33", "sourceURL": "https://skaffold.dev/docs/design/config", "url": "https://skaffold.dev/docs/design/config/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I configuration dependencies in skaffold?\n\nAssistant: To configuration dependencies in skaffold, here's what you do:\nIn addition to authoring configurations in a `skaffold.yaml` file, we can also import other existing configurations as dependencies. Skaffold manages all imported and defined configurations in the same session. It also ensures all artifacts in a required config are built prior to those in current config (provided the artifacts have dependencies defined); and all deploys in required configs are applied prior to those in current config.\n\n#### Note:\n\nRunning `skaffold <command> --module <config-name>` will filter to the specified target module, but also include the transitive closure of all other configurations in its dependency graph. For instance, if a module `cfg1` imported another module `cfg2` as a dependency while `cfg2` imported `cfg3` and `cfg4`, then running `skaffold dev --module cfg1` would activate all of `cfg1`, `cfg2`, `cfg3` and `cfg4` and execute them in dependency order..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/design/config", "title": "Skaffold Pipeline", "description": "This page covers the configuration of Skaffold using the Skaffold configuration file, skaffold.yaml, detailing its components, file resolution, multiple configuration support, configuration dependencies, and profile activation.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:37:45", "type": "section_detail", "page_metadata": {"viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "language": "en", "og:title": "Skaffold Pipeline", "ogSiteName": "Skaffold", "article:section": "docs", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:url": "https://skaffold.dev/docs/design/config/", "twitter:title": "Skaffold Pipeline", "og:description": "You can configure Skaffold with the Skaffold configuration file, skaffold.yaml. A single configuration consists of several different components:\n   Component Description     apiVersion The Skaffold API version you would like to use. The current API version is skaffold/v4beta12 .   kind The Skaffold configuration file has the kind Config.   metadata Holds additional properties like the name of this configuration.   build Specifies how Skaffold builds artifacts.", "description": "You can configure Skaffold with the Skaffold configuration file,\nskaffold.yaml.  A single configuration consists of several different components: …", "generator": "Hugo 0.99.1", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:site_name": "Skaffold", "title": "Skaffold Pipeline | Skaffold", "ogTitle": "Skaffold Pipeline", "twitter:description": "You can configure Skaffold with the Skaffold configuration file, skaffold.yaml. A single configuration consists of several different components:\n   Component Description     apiVersion The Skaffold API version you would like to use. The current API version is skaffold/v4beta12 .   kind The Skaffold configuration file has the kind Config.   metadata Holds additional properties like the name of this configuration.   build Specifies how Skaffold builds artifacts.", "robots": "index, follow", "og:type": "article", "ogDescription": "You can configure Skaffold with the Skaffold configuration file, skaffold.yaml. A single configuration consists of several different components:\n   Component Description     apiVersion The Skaffold API version you would like to use. The current API version is skaffold/v4beta12 .   kind The Skaffold configuration file has the kind Config.   metadata Holds additional properties like the name of this configuration.   build Specifies how Skaffold builds artifacts.", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogUrl": "https://skaffold.dev/docs/design/config/", "twitter:card": "summary", "scrapeId": "54396c07-9508-4043-b305-30ad6bf20b33", "sourceURL": "https://skaffold.dev/docs/design/config", "url": "https://skaffold.dev/docs/design/config/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I local config dependency in skaffold?\n\nAssistant: To local config dependency in skaffold, here's what you do:\nConsider the same `skaffold.yaml` defined above. Modules `cfg1` and `cfg2` from the above file can be imported as dependencies in your current config definition, via:\n\n```yaml\napiVersion: skaffold/v2beta11\nkind: Config\nrequires:\n  - configs: [\"cfg1\", \"cfg2\"]\n    path: path/to/other/skaffold.yaml\nbuild:\n  # build definition\ndeploy:\n  # deploy definition\n```\n\nIf the `configs` list isn’t defined then it imports all the configs defined in the file pointed by `path`. Additionally, if the `path` to the configuration isn’t defined it assumes that all the required configs are defined in the same file as the current config.\n\n#### Note:\n\nIn imported configurations, files are resolved relative to the location of imported Skaffold configuration file..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/design/config", "title": "Skaffold Pipeline", "description": "This page covers the configuration of Skaffold using the Skaffold configuration file, skaffold.yaml, detailing its components, file resolution, multiple configuration support, configuration dependencies, and profile activation.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:37:45", "type": "section_detail", "page_metadata": {"viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "language": "en", "og:title": "Skaffold Pipeline", "ogSiteName": "Skaffold", "article:section": "docs", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:url": "https://skaffold.dev/docs/design/config/", "twitter:title": "Skaffold Pipeline", "og:description": "You can configure Skaffold with the Skaffold configuration file, skaffold.yaml. A single configuration consists of several different components:\n   Component Description     apiVersion The Skaffold API version you would like to use. The current API version is skaffold/v4beta12 .   kind The Skaffold configuration file has the kind Config.   metadata Holds additional properties like the name of this configuration.   build Specifies how Skaffold builds artifacts.", "description": "You can configure Skaffold with the Skaffold configuration file,\nskaffold.yaml.  A single configuration consists of several different components: …", "generator": "Hugo 0.99.1", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:site_name": "Skaffold", "title": "Skaffold Pipeline | Skaffold", "ogTitle": "Skaffold Pipeline", "twitter:description": "You can configure Skaffold with the Skaffold configuration file, skaffold.yaml. A single configuration consists of several different components:\n   Component Description     apiVersion The Skaffold API version you would like to use. The current API version is skaffold/v4beta12 .   kind The Skaffold configuration file has the kind Config.   metadata Holds additional properties like the name of this configuration.   build Specifies how Skaffold builds artifacts.", "robots": "index, follow", "og:type": "article", "ogDescription": "You can configure Skaffold with the Skaffold configuration file, skaffold.yaml. A single configuration consists of several different components:\n   Component Description     apiVersion The Skaffold API version you would like to use. The current API version is skaffold/v4beta12 .   kind The Skaffold configuration file has the kind Config.   metadata Holds additional properties like the name of this configuration.   build Specifies how Skaffold builds artifacts.", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogUrl": "https://skaffold.dev/docs/design/config/", "twitter:card": "summary", "scrapeId": "54396c07-9508-4043-b305-30ad6bf20b33", "sourceURL": "https://skaffold.dev/docs/design/config", "url": "https://skaffold.dev/docs/design/config/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I remote config dependency in skaffold?\n\nAssistant: To remote config dependency in skaffold, here's what you do:\nThe required skaffold config can live in a remote git repository or in Google Cloud Storage:\n\n```yaml\napiVersion: skaffold/v4beta7\nkind: Config\nrequires:\n  - configs: [\"cfg1\", \"cfg2\"]\n    git:\n      repo: http://github.com/GoogleContainerTools/skaffold.git\n      path: getting-started/skaffold.yaml\n      ref: main\n  - configs: [\"cfg3\"]\n    googleCloudStorage:\n      source: gs://my-bucket/dir1/*\n      path: config/skaffold.yaml\n```\n\nThe environment variable `SKAFFOLD_REMOTE_CACHE_DIR` or flag `--remote-cache-dir` specifies the download location for all remote dependency contents. If undefined then it defaults to `~/.skaffold/remote-cache`. The remote cache directory consists of subdirectories with the contents retrieved from the remote dependency. For git dependencies the subdirectory name is a hash of the repo `uri` and the `branch/ref`. For Google Cloud Storage dependencies the subdirectory name is a hash of the `source`.\n\nThe remote config gets treated like a local config after substituting the path with the actual path in the cache directory..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/design/config", "title": "Skaffold Pipeline", "description": "This page covers the configuration of Skaffold using the Skaffold configuration file, skaffold.yaml, detailing its components, file resolution, multiple configuration support, configuration dependencies, and profile activation.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:37:45", "type": "section_detail", "page_metadata": {"viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "language": "en", "og:title": "Skaffold Pipeline", "ogSiteName": "Skaffold", "article:section": "docs", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:url": "https://skaffold.dev/docs/design/config/", "twitter:title": "Skaffold Pipeline", "og:description": "You can configure Skaffold with the Skaffold configuration file, skaffold.yaml. A single configuration consists of several different components:\n   Component Description     apiVersion The Skaffold API version you would like to use. The current API version is skaffold/v4beta12 .   kind The Skaffold configuration file has the kind Config.   metadata Holds additional properties like the name of this configuration.   build Specifies how Skaffold builds artifacts.", "description": "You can configure Skaffold with the Skaffold configuration file,\nskaffold.yaml.  A single configuration consists of several different components: …", "generator": "Hugo 0.99.1", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:site_name": "Skaffold", "title": "Skaffold Pipeline | Skaffold", "ogTitle": "Skaffold Pipeline", "twitter:description": "You can configure Skaffold with the Skaffold configuration file, skaffold.yaml. A single configuration consists of several different components:\n   Component Description     apiVersion The Skaffold API version you would like to use. The current API version is skaffold/v4beta12 .   kind The Skaffold configuration file has the kind Config.   metadata Holds additional properties like the name of this configuration.   build Specifies how Skaffold builds artifacts.", "robots": "index, follow", "og:type": "article", "ogDescription": "You can configure Skaffold with the Skaffold configuration file, skaffold.yaml. A single configuration consists of several different components:\n   Component Description     apiVersion The Skaffold API version you would like to use. The current API version is skaffold/v4beta12 .   kind The Skaffold configuration file has the kind Config.   metadata Holds additional properties like the name of this configuration.   build Specifies how Skaffold builds artifacts.", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogUrl": "https://skaffold.dev/docs/design/config/", "twitter:card": "summary", "scrapeId": "54396c07-9508-4043-b305-30ad6bf20b33", "sourceURL": "https://skaffold.dev/docs/design/config", "url": "https://skaffold.dev/docs/design/config/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I profile activation in required configs in skaffold?\n\nAssistant: To profile activation in required configs in skaffold, here's what you do:\nProfiles specified by the `--profile` flag are also propagated to all configurations imported as dependencies, if they define them. This behavior can be disabled by setting the `--propagate-profiles` flag to `false`.\n\nYou can additionally set up more granular and conditional profile activations across dependencies through the `activeProfiles` stanza:\n\n```yaml\napiVersion: skaffold/v2beta11\nkind: Config\nmetadata:\n    name: cfg\nrequires:\n  - path: ./path/to/required/skaffold.yaml\n    configs: [cfg1, cfg2]\n    activeProfiles:\n     - name: profile1\n       activatedBy: [profile2, profile3]\n```\n\nHere, `profile1` is a profile that needs to exist in both configs `cfg1` and `cfg2`; while `profile2` and `profile3` are profiles defined in the current config `cfg`. If the current config is activated with either `profile2` or `profile3` then the required configs `cfg1` and `cfg2` are imported with `profile1` applied. If the `activatedBy` clause is omitted then that `profile1` always gets applied for the imported configs..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/design/config", "title": "Skaffold Pipeline", "description": "This page covers the configuration of Skaffold using the Skaffold configuration file, skaffold.yaml, detailing its components, file resolution, multiple configuration support, configuration dependencies, and profile activation.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:37:45", "type": "section_detail", "page_metadata": {"viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "language": "en", "og:title": "Skaffold Pipeline", "ogSiteName": "Skaffold", "article:section": "docs", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:url": "https://skaffold.dev/docs/design/config/", "twitter:title": "Skaffold Pipeline", "og:description": "You can configure Skaffold with the Skaffold configuration file, skaffold.yaml. A single configuration consists of several different components:\n   Component Description     apiVersion The Skaffold API version you would like to use. The current API version is skaffold/v4beta12 .   kind The Skaffold configuration file has the kind Config.   metadata Holds additional properties like the name of this configuration.   build Specifies how Skaffold builds artifacts.", "description": "You can configure Skaffold with the Skaffold configuration file,\nskaffold.yaml.  A single configuration consists of several different components: …", "generator": "Hugo 0.99.1", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:site_name": "Skaffold", "title": "Skaffold Pipeline | Skaffold", "ogTitle": "Skaffold Pipeline", "twitter:description": "You can configure Skaffold with the Skaffold configuration file, skaffold.yaml. A single configuration consists of several different components:\n   Component Description     apiVersion The Skaffold API version you would like to use. The current API version is skaffold/v4beta12 .   kind The Skaffold configuration file has the kind Config.   metadata Holds additional properties like the name of this configuration.   build Specifies how Skaffold builds artifacts.", "robots": "index, follow", "og:type": "article", "ogDescription": "You can configure Skaffold with the Skaffold configuration file, skaffold.yaml. A single configuration consists of several different components:\n   Component Description     apiVersion The Skaffold API version you would like to use. The current API version is skaffold/v4beta12 .   kind The Skaffold configuration file has the kind Config.   metadata Holds additional properties like the name of this configuration.   build Specifies how Skaffold builds artifacts.", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogUrl": "https://skaffold.dev/docs/design/config/", "twitter:card": "summary", "scrapeId": "54396c07-9508-4043-b305-30ad6bf20b33", "sourceURL": "https://skaffold.dev/docs/design/config", "url": "https://skaffold.dev/docs/design/config/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you give me some code examples for Skaffold Pipeline in skaffold?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Example Skaffold Configuration**:\n\n```yaml\n```yaml\napiVersion: skaffold/v2beta11\nkind: Config\nbuild:\n  artifacts:\n  - image: app\n    context: frontend\n    docker:\n      dockerfile: \"Dockerfile\"\ndeply:\n  helm:\n    releases:\n    - name: project\n      chartPath: helm/project\n      valuesFiles:\n      - \"helm/project/dev-values.yaml\"\n```\n```\n\nThis snippet shows you how to example skaffold configuration, which is an important aspect of skaffold pipeline.\n\n**Multiple Skaffold Configurations**:\n\n```yaml\n```yaml\napiVersion: skaffold/vX\nkind: Config\nmetadata:\n  name: cfg1\nbuild:\n  # build definition\ndeploy:\n  # deploy definition\n\n---\n\napiVersion: skaffold/vX\nkind: Config\nmetadata:\n  name: cfg2\nbuild:\n  # build definition\ndeploy:\n  # deploy definition\n```\n```\n\nThis snippet shows you how to multiple skaffold configurations, which is an important aspect of skaffold pipeline.\n\n**Local Config Dependency Example**:\n\n```yaml\n```yaml\napiVersion: skaffold/v2beta11\nkind: Config\nrequires:\n  - configs: [\"cfg1\", \"cfg2\"]\n    path: path/to/other/skaffold.yaml\nbuild:\n  # build definition\ndeploy:\n  # deploy definition\n```\n```\n\nThis snippet shows you how to local config dependency example, which is an important aspect of skaffold pipeline.\n\n**Remote Config Dependency Example**:\n\n```yaml\n```yaml\napiVersion: skaffold/v4beta7\nkind: Config\nrequires:\n  - configs: [\"cfg1\", \"cfg2\"]\n    git:\n      repo: http://github.com/GoogleContainerTools/skaffold.git\n      path: getting-started/skaffold.yaml\n      ref: main\n  - configs: [\"cfg3\"]\n    googleCloudStorage:\n      source: gs://my-bucket/dir1/*\n      path: config/skaffold.yaml\n```\n```\n\nThis snippet shows you how to remote config dependency example, which is an important aspect of skaffold pipeline.\n\n**Profile Activation Example**:\n\n```yaml\n```yaml\napiVersion: skaffold/v2beta11\nkind: Config\nmetadata:\n    name: cfg\nrequires:\n  - path: ./path/to/required/skaffold.yaml\n    configs: [cfg1, cfg2]\n    activeProfiles:\n     - name: profile1\n       activatedBy: [profile2, profile3]\n```\n```\n\nThis snippet shows you how to profile activation example, which is an important aspect of skaffold pipeline.\n\n", "metadata": {"source_url": "https://skaffold.dev/docs/design/config", "title": "Skaffold Pipeline", "description": "This page covers the configuration of Skaffold using the Skaffold configuration file, skaffold.yaml, detailing its components, file resolution, multiple configuration support, configuration dependencies, and profile activation.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:37:45", "type": "code_examples", "page_metadata": {"viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "language": "en", "og:title": "Skaffold Pipeline", "ogSiteName": "Skaffold", "article:section": "docs", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:url": "https://skaffold.dev/docs/design/config/", "twitter:title": "Skaffold Pipeline", "og:description": "You can configure Skaffold with the Skaffold configuration file, skaffold.yaml. A single configuration consists of several different components:\n   Component Description     apiVersion The Skaffold API version you would like to use. The current API version is skaffold/v4beta12 .   kind The Skaffold configuration file has the kind Config.   metadata Holds additional properties like the name of this configuration.   build Specifies how Skaffold builds artifacts.", "description": "You can configure Skaffold with the Skaffold configuration file,\nskaffold.yaml.  A single configuration consists of several different components: …", "generator": "Hugo 0.99.1", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:site_name": "Skaffold", "title": "Skaffold Pipeline | Skaffold", "ogTitle": "Skaffold Pipeline", "twitter:description": "You can configure Skaffold with the Skaffold configuration file, skaffold.yaml. A single configuration consists of several different components:\n   Component Description     apiVersion The Skaffold API version you would like to use. The current API version is skaffold/v4beta12 .   kind The Skaffold configuration file has the kind Config.   metadata Holds additional properties like the name of this configuration.   build Specifies how Skaffold builds artifacts.", "robots": "index, follow", "og:type": "article", "ogDescription": "You can configure Skaffold with the Skaffold configuration file, skaffold.yaml. A single configuration consists of several different components:\n   Component Description     apiVersion The Skaffold API version you would like to use. The current API version is skaffold/v4beta12 .   kind The Skaffold configuration file has the kind Config.   metadata Holds additional properties like the name of this configuration.   build Specifies how Skaffold builds artifacts.", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogUrl": "https://skaffold.dev/docs/design/config/", "twitter:card": "summary", "scrapeId": "54396c07-9508-4043-b305-30ad6bf20b33", "sourceURL": "https://skaffold.dev/docs/design/config", "url": "https://skaffold.dev/docs/design/config/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: What are some tips for using Skaffold Pipeline in skaffold effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nWe generally recommend placing the configuration file in the root directory of the Skaffold project.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://skaffold.dev/docs/design/config", "title": "Skaffold Pipeline", "description": "This page covers the configuration of Skaffold using the Skaffold configuration file, skaffold.yaml, detailing its components, file resolution, multiple configuration support, configuration dependencies, and profile activation.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:37:45", "type": "best_practices", "page_metadata": {"viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "language": "en", "og:title": "Skaffold Pipeline", "ogSiteName": "Skaffold", "article:section": "docs", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:url": "https://skaffold.dev/docs/design/config/", "twitter:title": "Skaffold Pipeline", "og:description": "You can configure Skaffold with the Skaffold configuration file, skaffold.yaml. A single configuration consists of several different components:\n   Component Description     apiVersion The Skaffold API version you would like to use. The current API version is skaffold/v4beta12 .   kind The Skaffold configuration file has the kind Config.   metadata Holds additional properties like the name of this configuration.   build Specifies how Skaffold builds artifacts.", "description": "You can configure Skaffold with the Skaffold configuration file,\nskaffold.yaml.  A single configuration consists of several different components: …", "generator": "Hugo 0.99.1", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:site_name": "Skaffold", "title": "Skaffold Pipeline | Skaffold", "ogTitle": "Skaffold Pipeline", "twitter:description": "You can configure Skaffold with the Skaffold configuration file, skaffold.yaml. A single configuration consists of several different components:\n   Component Description     apiVersion The Skaffold API version you would like to use. The current API version is skaffold/v4beta12 .   kind The Skaffold configuration file has the kind Config.   metadata Holds additional properties like the name of this configuration.   build Specifies how Skaffold builds artifacts.", "robots": "index, follow", "og:type": "article", "ogDescription": "You can configure Skaffold with the Skaffold configuration file, skaffold.yaml. A single configuration consists of several different components:\n   Component Description     apiVersion The Skaffold API version you would like to use. The current API version is skaffold/v4beta12 .   kind The Skaffold configuration file has the kind Config.   metadata Holds additional properties like the name of this configuration.   build Specifies how Skaffold builds artifacts.", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogUrl": "https://skaffold.dev/docs/design/config/", "twitter:card": "summary", "scrapeId": "54396c07-9508-4043-b305-30ad6bf20b33", "sourceURL": "https://skaffold.dev/docs/design/config", "url": "https://skaffold.dev/docs/design/config/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what Skaffold Pipeline Stages is in skaffold?\n\nAssistant: Sure, I'd be happy to explain Skaffold Pipeline Stages in skaffold.\n\n# Skaffold Pipeline Stages\n\nSkaffold features a multi-stage workflow that collects source code, builds artifacts, tags them, and deploys them to a Kubernetes cluster.Here's a quick rundown of what this is about:\n\n## Skaffold Pipeline stages\n\n| Skaffold Pipeline stages | Description |  |\n| --- | --- | --- |\n| [Init](https://skaffold.dev/docs/init/) | generate a starting point for Skaffold configuration |  |\n| [Build](https://skaffold.dev/docs/builders/) | build images with different builders |  |\n| [Render](https://skaffold.dev/docs/renderers/) | render manifests with different renderers |  |\n| [Tag](https://skaffold.dev/docs/taggers/) | tag images based on different policies |  |\n| [Test](https://skaffold.dev/docs/testers/) | run tests with testers |  |\n| [Deploy](https://skaffold.dev/docs/deployers/) | deploy with kubectl, kustomize or helm |  |\n| [Verify](https://skaffold.dev/docs/verify/) | verify deployments with specified test containers |  |\n| [File Sync](https://skaffold.dev/docs/filesync/) | sync changed files directly to containers |  |\n| [Log Tailing](https://skaffold.dev/docs/log-tailing/) | tail logs from workloads |  |\n| [Port Forwarding](https://skaffold.dev/docs/port-forwarding/) | forward ports from services and arbitrary resources to localhost |  |\n| [Deploy Status Checking](https://skaffold.dev/docs/status-check/) | wait for deployed resources to stabilize |  |\n| [Lifecycle Hooks](https://skaffold.dev/docs/lifecycle-hooks/) | run code triggered by different events during the skaffold process lifecycle |  |\n| [Cleanup](https://skaffold.dev/docs/cleanup/) | cleanup manifests and images |  \n\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/pipeline-stages", "title": "Skaffold Pipeline Stages", "description": "Skaffold features a multi-stage workflow that collects source code, builds artifacts, tags them, and deploys them to a Kubernetes cluster.", "has_code_examples": false, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 03:37:57", "type": "overview", "page_metadata": {"language": "en", "ogSiteName": "Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:url": "https://skaffold.dev/docs/pipeline-stages/", "robots": "index, follow", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "og:title": "Skaffold Pipeline Stages", "ogTitle": "Skaffold Pipeline Stages", "generator": "Hugo 0.99.1", "twitter:card": "summary", "twitter:title": "Skaffold Pipeline Stages", "description": "Skaffold features a multi-stage workflow:\n\nWhen you start Skaffold, it collects source code in your project and builds\nartifacts with the tool of your …", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogUrl": "https://skaffold.dev/docs/pipeline-stages/", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "og:description": "Easy and Repeatable Container & Kubernetes Development", "og:site_name": "Skaffold", "title": "Skaffold Pipeline Stages | Skaffold", "og:type": "website", "scrapeId": "009d3c35-21d5-473b-81b0-3c95ff692380", "sourceURL": "https://skaffold.dev/docs/pipeline-stages", "url": "https://skaffold.dev/docs/pipeline-stages/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I skaffold pipeline stages in skaffold?\n\nAssistant: To skaffold pipeline stages in skaffold, here's what you do:\n| Skaffold Pipeline stages | Description |  |\n| --- | --- | --- |\n| [Init](https://skaffold.dev/docs/init/) | generate a starting point for Skaffold configuration |  |\n| [Build](https://skaffold.dev/docs/builders/) | build images with different builders |  |\n| [Render](https://skaffold.dev/docs/renderers/) | render manifests with different renderers |  |\n| [Tag](https://skaffold.dev/docs/taggers/) | tag images based on different policies |  |\n| [Test](https://skaffold.dev/docs/testers/) | run tests with testers |  |\n| [Deploy](https://skaffold.dev/docs/deployers/) | deploy with kubectl, kustomize or helm |  |\n| [Verify](https://skaffold.dev/docs/verify/) | verify deployments with specified test containers |  |\n| [File Sync](https://skaffold.dev/docs/filesync/) | sync changed files directly to containers |  |\n| [Log Tailing](https://skaffold.dev/docs/log-tailing/) | tail logs from workloads |  |\n| [Port Forwarding](https://skaffold.dev/docs/port-forwarding/) | forward ports from services and arbitrary resources to localhost |  |\n| [Deploy Status Checking](https://skaffold.dev/docs/status-check/) | wait for deployed resources to stabilize |  |\n| [Lifecycle Hooks](https://skaffold.dev/docs/lifecycle-hooks/) | run code triggered by different events during the skaffold process lifecycle |  |\n| [Cleanup](https://skaffold.dev/docs/cleanup/) | cleanup manifests and images |  \n.\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/pipeline-stages", "title": "Skaffold Pipeline Stages", "description": "Skaffold features a multi-stage workflow that collects source code, builds artifacts, tags them, and deploys them to a Kubernetes cluster.", "has_code_examples": false, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 03:37:57", "type": "section_detail", "page_metadata": {"language": "en", "ogSiteName": "Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:url": "https://skaffold.dev/docs/pipeline-stages/", "robots": "index, follow", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "og:title": "Skaffold Pipeline Stages", "ogTitle": "Skaffold Pipeline Stages", "generator": "Hugo 0.99.1", "twitter:card": "summary", "twitter:title": "Skaffold Pipeline Stages", "description": "Skaffold features a multi-stage workflow:\n\nWhen you start Skaffold, it collects source code in your project and builds\nartifacts with the tool of your …", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogUrl": "https://skaffold.dev/docs/pipeline-stages/", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "og:description": "Easy and Repeatable Container & Kubernetes Development", "og:site_name": "Skaffold", "title": "Skaffold Pipeline Stages | Skaffold", "og:type": "website", "scrapeId": "009d3c35-21d5-473b-81b0-3c95ff692380", "sourceURL": "https://skaffold.dev/docs/pipeline-stages", "url": "https://skaffold.dev/docs/pipeline-stages/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: What are some tips for using Skaffold Pipeline Stages in skaffold effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nSkaffold allows you to skip stages, which is useful when running Kubernetes locally with Minikube, as it will not push artifacts to a remote repository.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://skaffold.dev/docs/pipeline-stages", "title": "Skaffold Pipeline Stages", "description": "Skaffold features a multi-stage workflow that collects source code, builds artifacts, tags them, and deploys them to a Kubernetes cluster.", "has_code_examples": false, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 03:37:57", "type": "best_practices", "page_metadata": {"language": "en", "ogSiteName": "Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:url": "https://skaffold.dev/docs/pipeline-stages/", "robots": "index, follow", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "og:title": "Skaffold Pipeline Stages", "ogTitle": "Skaffold Pipeline Stages", "generator": "Hugo 0.99.1", "twitter:card": "summary", "twitter:title": "Skaffold Pipeline Stages", "description": "Skaffold features a multi-stage workflow:\n\nWhen you start Skaffold, it collects source code in your project and builds\nartifacts with the tool of your …", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogUrl": "https://skaffold.dev/docs/pipeline-stages/", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "og:description": "Easy and Repeatable Container & Kubernetes Development", "og:site_name": "Skaffold", "title": "Skaffold Pipeline Stages | Skaffold", "og:type": "website", "scrapeId": "009d3c35-21d5-473b-81b0-3c95ff692380", "sourceURL": "https://skaffold.dev/docs/pipeline-stages", "url": "https://skaffold.dev/docs/pipeline-stages/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what Init beta is in skaffold?\n\nAssistant: Sure, I'd be happy to explain Init beta in skaffold.\n\n# Init beta\n\n`skaffold init` helps you get started using Skaffold by running you through a wizard and generating the required `skaffold.yaml` file in the root of your project directory.Here's a quick rundown of what this is about:\n\n## Build Config Initialization\n\n`skaffold init` currently supports build detection for those builders:\n\n1. [Docker](https://skaffold.dev/docs/builders/builder-types/docker/)\n2. [Jib](https://skaffold.dev/docs/builders/builder-types/jib/)\n3. [Ko](https://skaffold.dev/docs/builders/builder-types/ko/)\n4. [Buildpacks](https://skaffold.dev/docs/builders/builder-types/buildpacks/)\n\n`skaffold init` walks your project directory and looks for any build configuration files such as `Dockerfile`, `build.gradle/pom.xml`, `package.json`, `requirements.txt` or `go.mod`. `init` skips files that are larger than 500MB.\n\nIf there are multiple build configuration files, Skaffold will prompt you to pair your build configuration files with any images detected in your deploy configuration.\n\nE.g. For an application with [two microservices](https://github.com/GoogleContainerTools/skaffold/tree/main/examples/microservices):\n\n```bash\nskaffold init\n```\n\n![microservices](https://skaffold.dev/images/microservices-init-flow.png)\n\n#### Note\n\nYou can choose `None (image not built from these sources)` if none of the suggested options are correct, or this image is not built by any of your source code.\n\nIf this image is one you want Skaffold to build, you’ll need to manually set up the build configuration for this artifact.\n\n`skaffold` init also recognizes Maven and Gradle projects, and will auto-suggest the [`jib`](https://skaffold.dev/docs/builders/#/local#jib-maven-and-gradle) builder.\n\nYou can try this out on our example [jib project](https://github.com/GoogleContainerTools/skaffold/tree/main/examples/jib-multimodule)\n\n```bash\nskaffold init\n```\n\n![jib-multimodule](https://skaffold.dev/images/jib-multimodule-init-flow.png)\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/init", "title": "Init beta", "description": "`skaffold init` helps you get started using Skaffold by running you through a wizard and generating the required `skaffold.yaml` file in the root of your project directory.", "has_code_examples": true, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 03:38:17", "type": "overview", "page_metadata": {"twitter:title": "Init", "ogTitle": "Init", "ogDescription": "skaffold init helps you get started using Skaffold by running you through a wizard and generating the required skaffold.yaml file in the root of your project directory.\nThe generated skaffold.yaml defines your build and deploy config.\nBuild Config Initialization skaffold init currently supports build detection for those builders:\n Docker Jib Ko Buildpacks  skaffold init walks your project directory and looks for any build configuration files such as Dockerfile, build.", "ogSiteName": "Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "language": "en", "generator": "Hugo 0.99.1", "description": "skaffold init helps you get started using Skaffold by running you through a wizard and\ngenerating the required skaffold.yaml file in the root of your …", "og:title": "Init", "og:type": "article", "og:url": "https://skaffold.dev/docs/init/", "twitter:card": "summary", "og:site_name": "Skaffold", "article:section": "docs", "robots": "index, follow", "twitter:description": "skaffold init helps you get started using Skaffold by running you through a wizard and generating the required skaffold.yaml file in the root of your project directory.\nThe generated skaffold.yaml defines your build and deploy config.\nBuild Config Initialization skaffold init currently supports build detection for those builders:\n Docker Jib Ko Buildpacks  skaffold init walks your project directory and looks for any build configuration files such as Dockerfile, build.", "og:description": "skaffold init helps you get started using Skaffold by running you through a wizard and generating the required skaffold.yaml file in the root of your project directory.\nThe generated skaffold.yaml defines your build and deploy config.\nBuild Config Initialization skaffold init currently supports build detection for those builders:\n Docker Jib Ko Buildpacks  skaffold init walks your project directory and looks for any build configuration files such as Dockerfile, build.", "article:modified_time": "2025-01-23T10:14:58-05:00", "modifiedTime": "2025-01-23T10:14:58-05:00", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "title": "Init | Skaffold", "ogUrl": "https://skaffold.dev/docs/init/", "scrapeId": "22ece139-f02a-4bba-92db-42dc4dbbb3a6", "sourceURL": "https://skaffold.dev/docs/init", "url": "https://skaffold.dev/docs/init/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I build config initialization in skaffold?\n\nAssistant: To build config initialization in skaffold, here's what you do:\n`skaffold init` currently supports build detection for those builders:\n\n1. [Docker](https://skaffold.dev/docs/builders/builder-types/docker/)\n2. [Jib](https://skaffold.dev/docs/builders/builder-types/jib/)\n3. [Ko](https://skaffold.dev/docs/builders/builder-types/ko/)\n4. [Buildpacks](https://skaffold.dev/docs/builders/builder-types/buildpacks/)\n\n`skaffold init` walks your project directory and looks for any build configuration files such as `Dockerfile`, `build.gradle/pom.xml`, `package.json`, `requirements.txt` or `go.mod`. `init` skips files that are larger than 500MB.\n\nIf there are multiple build configuration files, Skaffold will prompt you to pair your build configuration files with any images detected in your deploy configuration.\n\nE.g. For an application with [two microservices](https://github.com/GoogleContainerTools/skaffold/tree/main/examples/microservices):\n\n```bash\nskaffold init\n```\n\n![microservices](https://skaffold.dev/images/microservices-init-flow.png)\n\n#### Note\n\nYou can choose `None (image not built from these sources)` if none of the suggested options are correct, or this image is not built by any of your source code.\n\nIf this image is one you want Skaffold to build, you’ll need to manually set up the build configuration for this artifact.\n\n`skaffold` init also recognizes Maven and Gradle projects, and will auto-suggest the [`jib`](https://skaffold.dev/docs/builders/#/local#jib-maven-and-gradle) builder.\n\nYou can try this out on our example [jib project](https://github.com/GoogleContainerTools/skaffold/tree/main/examples/jib-multimodule)\n\n```bash\nskaffold init\n```\n\n![jib-multimodule](https://skaffold.dev/images/jib-multimodule-init-flow.png).\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/init", "title": "Init beta", "description": "`skaffold init` helps you get started using Skaffold by running you through a wizard and generating the required `skaffold.yaml` file in the root of your project directory.", "has_code_examples": true, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 03:38:17", "type": "section_detail", "page_metadata": {"twitter:title": "Init", "ogTitle": "Init", "ogDescription": "skaffold init helps you get started using Skaffold by running you through a wizard and generating the required skaffold.yaml file in the root of your project directory.\nThe generated skaffold.yaml defines your build and deploy config.\nBuild Config Initialization skaffold init currently supports build detection for those builders:\n Docker Jib Ko Buildpacks  skaffold init walks your project directory and looks for any build configuration files such as Dockerfile, build.", "ogSiteName": "Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "language": "en", "generator": "Hugo 0.99.1", "description": "skaffold init helps you get started using Skaffold by running you through a wizard and\ngenerating the required skaffold.yaml file in the root of your …", "og:title": "Init", "og:type": "article", "og:url": "https://skaffold.dev/docs/init/", "twitter:card": "summary", "og:site_name": "Skaffold", "article:section": "docs", "robots": "index, follow", "twitter:description": "skaffold init helps you get started using Skaffold by running you through a wizard and generating the required skaffold.yaml file in the root of your project directory.\nThe generated skaffold.yaml defines your build and deploy config.\nBuild Config Initialization skaffold init currently supports build detection for those builders:\n Docker Jib Ko Buildpacks  skaffold init walks your project directory and looks for any build configuration files such as Dockerfile, build.", "og:description": "skaffold init helps you get started using Skaffold by running you through a wizard and generating the required skaffold.yaml file in the root of your project directory.\nThe generated skaffold.yaml defines your build and deploy config.\nBuild Config Initialization skaffold init currently supports build detection for those builders:\n Docker Jib Ko Buildpacks  skaffold init walks your project directory and looks for any build configuration files such as Dockerfile, build.", "article:modified_time": "2025-01-23T10:14:58-05:00", "modifiedTime": "2025-01-23T10:14:58-05:00", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "title": "Init | Skaffold", "ogUrl": "https://skaffold.dev/docs/init/", "scrapeId": "22ece139-f02a-4bba-92db-42dc4dbbb3a6", "sourceURL": "https://skaffold.dev/docs/init", "url": "https://skaffold.dev/docs/init/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you give me some code examples for Init beta in skaffold?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Deploy Config Initialization - kubectl**:\n\n```yaml\n```yaml\ndeploy:\n  kubectl:\n    manifests:\n    - leeroy-app/kubernetes/deployment.yaml\n    - leeroy-web/kubernetes/deployment.yaml\n```\n```\n\nThis snippet shows you how to deploy config initialization - kubectl, which is an important aspect of init beta.\n\n**Deploy Config Initialization - kustomize**:\n\n```yaml\n```yaml\napp/      # application source code, along with build configuration\n  main.go\n  Dockerfile\n...\nbase/     # base deploy configuration\n  kustomization.yaml\n  deployment.yaml\noverlays/ # one or more nested directories, each with modified environment configuration\n  dev/\n    deployment.yaml\n    kustomization.yaml\n  prod/\n...\n```\n```\n\nThis snippet shows you how to deploy config initialization - kustomize, which is an important aspect of init beta.\n\n**Analyze API**:\n\n```yaml\n```bash\nskaffold init --analyze | jq\n```\n```\n\nThis snippet shows you how to analyze api, which is an important aspect of init beta.\n\n**Generate API**:\n\n```yaml\n```bash\nskaffold init \\\n  -a '{\"builder\":\"Docker\",\"payload\":{\"path\":\"leeroy-app/Dockerfile\"},\"image\":\"gcr.io/k8s-skaffold/leeroy-app\"}' \\\n  -a '{\"builder\":\"Docker\",\"payload\":{\"path\":\"leeroy-web/Dockerfile\"},\"image\":\"gcr.io/k8s-skaffold/leeroy-web\",\"context\":\"path/to/context\"}'\n```\n```\n\nThis snippet shows you how to generate api, which is an important aspect of init beta.\n\n", "metadata": {"source_url": "https://skaffold.dev/docs/init", "title": "Init beta", "description": "`skaffold init` helps you get started using Skaffold by running you through a wizard and generating the required `skaffold.yaml` file in the root of your project directory.", "has_code_examples": true, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 03:38:17", "type": "code_examples", "page_metadata": {"twitter:title": "Init", "ogTitle": "Init", "ogDescription": "skaffold init helps you get started using Skaffold by running you through a wizard and generating the required skaffold.yaml file in the root of your project directory.\nThe generated skaffold.yaml defines your build and deploy config.\nBuild Config Initialization skaffold init currently supports build detection for those builders:\n Docker Jib Ko Buildpacks  skaffold init walks your project directory and looks for any build configuration files such as Dockerfile, build.", "ogSiteName": "Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "language": "en", "generator": "Hugo 0.99.1", "description": "skaffold init helps you get started using Skaffold by running you through a wizard and\ngenerating the required skaffold.yaml file in the root of your …", "og:title": "Init", "og:type": "article", "og:url": "https://skaffold.dev/docs/init/", "twitter:card": "summary", "og:site_name": "Skaffold", "article:section": "docs", "robots": "index, follow", "twitter:description": "skaffold init helps you get started using Skaffold by running you through a wizard and generating the required skaffold.yaml file in the root of your project directory.\nThe generated skaffold.yaml defines your build and deploy config.\nBuild Config Initialization skaffold init currently supports build detection for those builders:\n Docker Jib Ko Buildpacks  skaffold init walks your project directory and looks for any build configuration files such as Dockerfile, build.", "og:description": "skaffold init helps you get started using Skaffold by running you through a wizard and generating the required skaffold.yaml file in the root of your project directory.\nThe generated skaffold.yaml defines your build and deploy config.\nBuild Config Initialization skaffold init currently supports build detection for those builders:\n Docker Jib Ko Buildpacks  skaffold init walks your project directory and looks for any build configuration files such as Dockerfile, build.", "article:modified_time": "2025-01-23T10:14:58-05:00", "modifiedTime": "2025-01-23T10:14:58-05:00", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "title": "Init | Skaffold", "ogUrl": "https://skaffold.dev/docs/init/", "scrapeId": "22ece139-f02a-4bba-92db-42dc4dbbb3a6", "sourceURL": "https://skaffold.dev/docs/init", "url": "https://skaffold.dev/docs/init/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: What are some tips for using Init beta in skaffold effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nIt is highly recommended to match your project structure to the recommended base/ and overlay/ structure from Kustomize.\n\nSkaffold will attempt to choose a default overlay, and put each other overlay into its own profile.\n\nOrder is guaranteed, since Skaffold’s directory parsing is always deterministic.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://skaffold.dev/docs/init", "title": "Init beta", "description": "`skaffold init` helps you get started using Skaffold by running you through a wizard and generating the required `skaffold.yaml` file in the root of your project directory.", "has_code_examples": true, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 03:38:17", "type": "best_practices", "page_metadata": {"twitter:title": "Init", "ogTitle": "Init", "ogDescription": "skaffold init helps you get started using Skaffold by running you through a wizard and generating the required skaffold.yaml file in the root of your project directory.\nThe generated skaffold.yaml defines your build and deploy config.\nBuild Config Initialization skaffold init currently supports build detection for those builders:\n Docker Jib Ko Buildpacks  skaffold init walks your project directory and looks for any build configuration files such as Dockerfile, build.", "ogSiteName": "Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "language": "en", "generator": "Hugo 0.99.1", "description": "skaffold init helps you get started using Skaffold by running you through a wizard and\ngenerating the required skaffold.yaml file in the root of your …", "og:title": "Init", "og:type": "article", "og:url": "https://skaffold.dev/docs/init/", "twitter:card": "summary", "og:site_name": "Skaffold", "article:section": "docs", "robots": "index, follow", "twitter:description": "skaffold init helps you get started using Skaffold by running you through a wizard and generating the required skaffold.yaml file in the root of your project directory.\nThe generated skaffold.yaml defines your build and deploy config.\nBuild Config Initialization skaffold init currently supports build detection for those builders:\n Docker Jib Ko Buildpacks  skaffold init walks your project directory and looks for any build configuration files such as Dockerfile, build.", "og:description": "skaffold init helps you get started using Skaffold by running you through a wizard and generating the required skaffold.yaml file in the root of your project directory.\nThe generated skaffold.yaml defines your build and deploy config.\nBuild Config Initialization skaffold init currently supports build detection for those builders:\n Docker Jib Ko Buildpacks  skaffold init walks your project directory and looks for any build configuration files such as Dockerfile, build.", "article:modified_time": "2025-01-23T10:14:58-05:00", "modifiedTime": "2025-01-23T10:14:58-05:00", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "title": "Init | Skaffold", "ogUrl": "https://skaffold.dev/docs/init/", "scrapeId": "22ece139-f02a-4bba-92db-42dc4dbbb3a6", "sourceURL": "https://skaffold.dev/docs/init", "url": "https://skaffold.dev/docs/init/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what Build is in skaffold?\n\nAssistant: Sure, I'd be happy to explain Build in skaffold.\n\n# Build\n\nSkaffold supports different tools for building images across different build environments.Here's a quick rundown of what this is about:\n\n## Supported Build Tools\n\nSkaffold supports different tools for building images across different build environments. The following table summarizes the supported tools and their compatibility with various build environments.\n\n## Configuration\n\nThe build section in the Skaffold configuration file, skaffold.yaml, controls how artifacts are built. To use a specific tool for building artifacts, add the value representing the tool and options for using that tool to the build section. For detailed per-builder Skaffold Configuration options, see skaffold.yaml References.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/builders", "title": "Build", "description": "Skaffold supports different tools for building images across different build environments.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:38:23", "type": "overview", "page_metadata": {"viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "robots": "index, follow", "og:title": "Build", "og:url": "https://skaffold.dev/docs/builders/", "generator": "Hugo 0.99.1", "og:description": "Easy and Repeatable Container & Kubernetes Development", "og:type": "website", "language": "en", "title": "Build | Skaffold", "ogUrl": "https://skaffold.dev/docs/builders/", "description": "Skaffold supports different tools for building images across different build environments.\n\n\n\n\nLocal Build\nIn Cluster Build\nRemote on Google Cloud …", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "ogSiteName": "Skaffold", "og:site_name": "Skaffold", "ogTitle": "Build", "twitter:card": "summary", "twitter:title": "Build", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "scrapeId": "72427aca-198f-4e3e-85ab-b0b3450185d8", "sourceURL": "https://skaffold.dev/docs/builders", "url": "https://skaffold.dev/docs/builders/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I supported build tools in skaffold?\n\nAssistant: To supported build tools in skaffold, here's what you do:\nSkaffold supports different tools for building images across different build environments. The following table summarizes the supported tools and their compatibility with various build environments..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/builders", "title": "Build", "description": "Skaffold supports different tools for building images across different build environments.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:38:23", "type": "section_detail", "page_metadata": {"viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "robots": "index, follow", "og:title": "Build", "og:url": "https://skaffold.dev/docs/builders/", "generator": "Hugo 0.99.1", "og:description": "Easy and Repeatable Container & Kubernetes Development", "og:type": "website", "language": "en", "title": "Build | Skaffold", "ogUrl": "https://skaffold.dev/docs/builders/", "description": "Skaffold supports different tools for building images across different build environments.\n\n\n\n\nLocal Build\nIn Cluster Build\nRemote on Google Cloud …", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "ogSiteName": "Skaffold", "og:site_name": "Skaffold", "ogTitle": "Build", "twitter:card": "summary", "twitter:title": "Build", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "scrapeId": "72427aca-198f-4e3e-85ab-b0b3450185d8", "sourceURL": "https://skaffold.dev/docs/builders", "url": "https://skaffold.dev/docs/builders/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I configuration in skaffold?\n\nAssistant: To configuration in skaffold, here's what you do:\nThe build section in the Skaffold configuration file, skaffold.yaml, controls how artifacts are built. To use a specific tool for building artifacts, add the value representing the tool and options for using that tool to the build section. For detailed per-builder Skaffold Configuration options, see skaffold.yaml References..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/builders", "title": "Build", "description": "Skaffold supports different tools for building images across different build environments.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:38:23", "type": "section_detail", "page_metadata": {"viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "robots": "index, follow", "og:title": "Build", "og:url": "https://skaffold.dev/docs/builders/", "generator": "Hugo 0.99.1", "og:description": "Easy and Repeatable Container & Kubernetes Development", "og:type": "website", "language": "en", "title": "Build | Skaffold", "ogUrl": "https://skaffold.dev/docs/builders/", "description": "Skaffold supports different tools for building images across different build environments.\n\n\n\n\nLocal Build\nIn Cluster Build\nRemote on Google Cloud …", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "ogSiteName": "Skaffold", "og:site_name": "Skaffold", "ogTitle": "Build", "twitter:card": "summary", "twitter:title": "Build", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "scrapeId": "72427aca-198f-4e3e-85ab-b0b3450185d8", "sourceURL": "https://skaffold.dev/docs/builders", "url": "https://skaffold.dev/docs/builders/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: What are some tips for using Build in skaffold effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nRefer to the Skaffold documentation for detailed per-builder configuration options.\n\nEnsure to check the compatibility of the build tools with your chosen build environment.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://skaffold.dev/docs/builders", "title": "Build", "description": "Skaffold supports different tools for building images across different build environments.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:38:23", "type": "best_practices", "page_metadata": {"viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "robots": "index, follow", "og:title": "Build", "og:url": "https://skaffold.dev/docs/builders/", "generator": "Hugo 0.99.1", "og:description": "Easy and Repeatable Container & Kubernetes Development", "og:type": "website", "language": "en", "title": "Build | Skaffold", "ogUrl": "https://skaffold.dev/docs/builders/", "description": "Skaffold supports different tools for building images across different build environments.\n\n\n\n\nLocal Build\nIn Cluster Build\nRemote on Google Cloud …", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "ogSiteName": "Skaffold", "og:site_name": "Skaffold", "ogTitle": "Build", "twitter:card": "summary", "twitter:title": "Build", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "scrapeId": "72427aca-198f-4e3e-85ab-b0b3450185d8", "sourceURL": "https://skaffold.dev/docs/builders", "url": "https://skaffold.dev/docs/builders/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what Deploy [UPDATED] is in skaffold?\n\nAssistant: Sure, I'd be happy to explain Deploy [UPDATED] in skaffold.\n\n# Deploy [UPDATED]\n\nThis page covers the deployment process of applications to Kubernetes using Skaffold, including the steps involved and supported deployers.Here's a quick rundown of what this is about:\n\n## Deployment Steps\n\nWhen Skaffold deploys your application to Kubernetes, it goes through these steps:\n\nIn the default case (no manifest provided using the kubectl or kpt deployer), skaffold deploy will do the following:\n\n- the Skaffold renderer _renders_ the final Kubernetes manifests: Skaffold replaces untagged image names in the Kubernetes manifests with the final tagged image names. It also might go through the extra intermediate step of expanding templates (for helm) or calculating overlays (for kustomize). Additionally some deployers (docker) do not render manifests as such don’t use this phase.\n- the Skaffold deployer _deploys_ the final Kubernetes manifests to the cluster (or to local docker for the docker deployer)\n- the Skaffold deployer performs [status checks](https://skaffold.dev/docs/status-check/) and waits for the deployed resources to stabilize.\n\n## Supported Deployers\n\nSkaffold supports the following tools for deploying applications:\n\n- [`kubectl`](https://skaffold.dev/docs/deployers/kubectl/)\n- [`helm`](https://skaffold.dev/docs/deployers/helm/)\n- [`kpt`](https://skaffold.dev/docs/deployers/kpt/)\n- [`docker`](https://skaffold.dev/docs/deployers/docker/) (does not deploy to Kubernetes: see documentation for more details)\n\nSkaffold’s deploy configuration is set through the `deploy` section of the `skaffold.yaml`. See each deployer’s page for more information on how to configure them for use in Skaffold. It’s also possible to use a combination of multiple deployers in a single project.\n\n## Further Reading\n\nFor a detailed discussion on Skaffold configuration, see [Skaffold Concepts](https://skaffold.dev/docs/design/config/) and [skaffold.yaml References](https://skaffold.dev/docs/references/yaml/).\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/deployers", "title": "Deploy [UPDATED]", "description": "This page covers the deployment process of applications to Kubernetes using Skaffold, including the steps involved and supported deployers.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:38:44", "type": "overview", "page_metadata": {"og:url": "https://skaffold.dev/docs/deployers/", "og:site_name": "Skaffold", "og:type": "website", "ogUrl": "https://skaffold.dev/docs/deployers/", "ogSiteName": "Skaffold", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "description": "When Skaffold deploys your application to Kubernetes, it goes through these steps:\nIn the default case (no manifest provided using the kubectl or kpt …", "og:title": "Deploy [UPDATED]", "robots": "index, follow", "og:description": "Easy and Repeatable Container & Kubernetes Development", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "title": "Deploy [UPDATED] | Skaffold", "language": "en", "twitter:card": "summary", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "twitter:title": "Deploy [UPDATED]", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "ogTitle": "Deploy [UPDATED]", "generator": "Hugo 0.99.1", "scrapeId": "f5f2e8e6-41e2-4200-ab28-76090eb97a28", "sourceURL": "https://skaffold.dev/docs/deployers", "url": "https://skaffold.dev/docs/deployers/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I deployment steps in skaffold?\n\nAssistant: To deployment steps in skaffold, here's what you do:\nWhen Skaffold deploys your application to Kubernetes, it goes through these steps:\n\nIn the default case (no manifest provided using the kubectl or kpt deployer), skaffold deploy will do the following:\n\n- the Skaffold renderer _renders_ the final Kubernetes manifests: Skaffold replaces untagged image names in the Kubernetes manifests with the final tagged image names. It also might go through the extra intermediate step of expanding templates (for helm) or calculating overlays (for kustomize). Additionally some deployers (docker) do not render manifests as such don’t use this phase.\n- the Skaffold deployer _deploys_ the final Kubernetes manifests to the cluster (or to local docker for the docker deployer)\n- the Skaffold deployer performs [status checks](https://skaffold.dev/docs/status-check/) and waits for the deployed resources to stabilize..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/deployers", "title": "Deploy [UPDATED]", "description": "This page covers the deployment process of applications to Kubernetes using Skaffold, including the steps involved and supported deployers.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:38:44", "type": "section_detail", "page_metadata": {"og:url": "https://skaffold.dev/docs/deployers/", "og:site_name": "Skaffold", "og:type": "website", "ogUrl": "https://skaffold.dev/docs/deployers/", "ogSiteName": "Skaffold", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "description": "When Skaffold deploys your application to Kubernetes, it goes through these steps:\nIn the default case (no manifest provided using the kubectl or kpt …", "og:title": "Deploy [UPDATED]", "robots": "index, follow", "og:description": "Easy and Repeatable Container & Kubernetes Development", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "title": "Deploy [UPDATED] | Skaffold", "language": "en", "twitter:card": "summary", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "twitter:title": "Deploy [UPDATED]", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "ogTitle": "Deploy [UPDATED]", "generator": "Hugo 0.99.1", "scrapeId": "f5f2e8e6-41e2-4200-ab28-76090eb97a28", "sourceURL": "https://skaffold.dev/docs/deployers", "url": "https://skaffold.dev/docs/deployers/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I supported deployers in skaffold?\n\nAssistant: To supported deployers in skaffold, here's what you do:\nSkaffold supports the following tools for deploying applications:\n\n- [`kubectl`](https://skaffold.dev/docs/deployers/kubectl/)\n- [`helm`](https://skaffold.dev/docs/deployers/helm/)\n- [`kpt`](https://skaffold.dev/docs/deployers/kpt/)\n- [`docker`](https://skaffold.dev/docs/deployers/docker/) (does not deploy to Kubernetes: see documentation for more details)\n\nSkaffold’s deploy configuration is set through the `deploy` section of the `skaffold.yaml`. See each deployer’s page for more information on how to configure them for use in Skaffold. It’s also possible to use a combination of multiple deployers in a single project..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/deployers", "title": "Deploy [UPDATED]", "description": "This page covers the deployment process of applications to Kubernetes using Skaffold, including the steps involved and supported deployers.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:38:44", "type": "section_detail", "page_metadata": {"og:url": "https://skaffold.dev/docs/deployers/", "og:site_name": "Skaffold", "og:type": "website", "ogUrl": "https://skaffold.dev/docs/deployers/", "ogSiteName": "Skaffold", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "description": "When Skaffold deploys your application to Kubernetes, it goes through these steps:\nIn the default case (no manifest provided using the kubectl or kpt …", "og:title": "Deploy [UPDATED]", "robots": "index, follow", "og:description": "Easy and Repeatable Container & Kubernetes Development", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "title": "Deploy [UPDATED] | Skaffold", "language": "en", "twitter:card": "summary", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "twitter:title": "Deploy [UPDATED]", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "ogTitle": "Deploy [UPDATED]", "generator": "Hugo 0.99.1", "scrapeId": "f5f2e8e6-41e2-4200-ab28-76090eb97a28", "sourceURL": "https://skaffold.dev/docs/deployers", "url": "https://skaffold.dev/docs/deployers/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I further reading in skaffold?\n\nAssistant: To further reading in skaffold, here's what you do:\nFor a detailed discussion on Skaffold configuration, see [Skaffold Concepts](https://skaffold.dev/docs/design/config/) and [skaffold.yaml References](https://skaffold.dev/docs/references/yaml/)..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/deployers", "title": "Deploy [UPDATED]", "description": "This page covers the deployment process of applications to Kubernetes using Skaffold, including the steps involved and supported deployers.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:38:44", "type": "section_detail", "page_metadata": {"og:url": "https://skaffold.dev/docs/deployers/", "og:site_name": "Skaffold", "og:type": "website", "ogUrl": "https://skaffold.dev/docs/deployers/", "ogSiteName": "Skaffold", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "description": "When Skaffold deploys your application to Kubernetes, it goes through these steps:\nIn the default case (no manifest provided using the kubectl or kpt …", "og:title": "Deploy [UPDATED]", "robots": "index, follow", "og:description": "Easy and Repeatable Container & Kubernetes Development", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "title": "Deploy [UPDATED] | Skaffold", "language": "en", "twitter:card": "summary", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "twitter:title": "Deploy [UPDATED]", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "ogTitle": "Deploy [UPDATED]", "generator": "Hugo 0.99.1", "scrapeId": "f5f2e8e6-41e2-4200-ab28-76090eb97a28", "sourceURL": "https://skaffold.dev/docs/deployers", "url": "https://skaffold.dev/docs/deployers/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: What are some tips for using Deploy [UPDATED] in skaffold effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nEnsure to check the documentation for each deployer for specific configuration details.\n\nConsider using a combination of multiple deployers in a single project for flexibility.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://skaffold.dev/docs/deployers", "title": "Deploy [UPDATED]", "description": "This page covers the deployment process of applications to Kubernetes using Skaffold, including the steps involved and supported deployers.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:38:44", "type": "best_practices", "page_metadata": {"og:url": "https://skaffold.dev/docs/deployers/", "og:site_name": "Skaffold", "og:type": "website", "ogUrl": "https://skaffold.dev/docs/deployers/", "ogSiteName": "Skaffold", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "description": "When Skaffold deploys your application to Kubernetes, it goes through these steps:\nIn the default case (no manifest provided using the kubectl or kpt …", "og:title": "Deploy [UPDATED]", "robots": "index, follow", "og:description": "Easy and Repeatable Container & Kubernetes Development", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "title": "Deploy [UPDATED] | Skaffold", "language": "en", "twitter:card": "summary", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "twitter:title": "Deploy [UPDATED]", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "ogTitle": "Deploy [UPDATED]", "generator": "Hugo 0.99.1", "scrapeId": "f5f2e8e6-41e2-4200-ab28-76090eb97a28", "sourceURL": "https://skaffold.dev/docs/deployers", "url": "https://skaffold.dev/docs/deployers/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what Render [NEW] is in skaffold?\n\nAssistant: Sure, I'd be happy to explain Render [NEW] in skaffold.\n\n# Render [NEW]\n\nThis page covers the rendering process of applications to Kubernetes using Skaffold, including supported renderers and configuration details.Here's a quick rundown of what this is about:\n\n## Rendering Process\n\nWhen Skaffold renders your application to Kubernetes, it goes through the following process:\n\n- the Skaffold renderer _renders_ the final Kubernetes manifests: Skaffold replaces untagged image names in the Kubernetes manifests with the final tagged image names.\nIt also might go through the extra intermediate step of expanding templates (for helm) or calculating overlays (for kustomize).\n\n## Supported Renderers\n\nSkaffold supports the following tools for rendering applications:\n\n- [`rawYaml`](https://skaffold.dev/docs/renderers/rawyaml/) \\- use this if you don’t currently use a rendering tool\n- [`helm`](https://skaffold.dev/docs/renderers/helm/)\n- [`kpt`](https://skaffold.dev/docs/renderers/kpt/)\n- [`kustomize`](https://skaffold.dev/docs/renderers/kustomize/)\n\nSkaffold’s render configuration is set through the `manifests` section of the `skaffold.yaml`. See each renderer’s page for more information on how to configure them for use in Skaffold. It’s also possible to use a combination of multiple renderers in a single project.\n\n## Further Reading\n\nFor a detailed discussion on Skaffold configuration, see [Skaffold Concepts](https://skaffold.dev/docs/design/config/) and [skaffold.yaml References](https://skaffold.dev/docs/references/yaml/).\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/renderers", "title": "Render [NEW]", "description": "This page covers the rendering process of applications to Kubernetes using Skaffold, including supported renderers and configuration details.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:39:00", "type": "overview", "page_metadata": {"title": "Render [NEW] | Skaffold", "ogTitle": "Render [NEW]", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "ogUrl": "https://skaffold.dev/docs/renderers/", "ogSiteName": "Skaffold", "generator": "Hugo 0.99.1", "description": "When Skaffold renders your application to Kubernetes, it goes through the following process:\n\nthe Skaffold renderer renders the final Kubernetes …", "twitter:card": "summary", "og:title": "Render [NEW]", "og:type": "website", "robots": "index, follow", "og:description": "Easy and Repeatable Container & Kubernetes Development", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:url": "https://skaffold.dev/docs/renderers/", "twitter:title": "Render [NEW]", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "language": "en", "og:site_name": "Skaffold", "scrapeId": "1970afb8-cc18-42a0-84b5-5a0807d1475e", "sourceURL": "https://skaffold.dev/docs/renderers", "url": "https://skaffold.dev/docs/renderers/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I rendering process in skaffold?\n\nAssistant: To rendering process in skaffold, here's what you do:\nWhen Skaffold renders your application to Kubernetes, it goes through the following process:\n\n- the Skaffold renderer _renders_ the final Kubernetes manifests: Skaffold replaces untagged image names in the Kubernetes manifests with the final tagged image names.\nIt also might go through the extra intermediate step of expanding templates (for helm) or calculating overlays (for kustomize)..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/renderers", "title": "Render [NEW]", "description": "This page covers the rendering process of applications to Kubernetes using Skaffold, including supported renderers and configuration details.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:39:00", "type": "section_detail", "page_metadata": {"title": "Render [NEW] | Skaffold", "ogTitle": "Render [NEW]", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "ogUrl": "https://skaffold.dev/docs/renderers/", "ogSiteName": "Skaffold", "generator": "Hugo 0.99.1", "description": "When Skaffold renders your application to Kubernetes, it goes through the following process:\n\nthe Skaffold renderer renders the final Kubernetes …", "twitter:card": "summary", "og:title": "Render [NEW]", "og:type": "website", "robots": "index, follow", "og:description": "Easy and Repeatable Container & Kubernetes Development", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:url": "https://skaffold.dev/docs/renderers/", "twitter:title": "Render [NEW]", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "language": "en", "og:site_name": "Skaffold", "scrapeId": "1970afb8-cc18-42a0-84b5-5a0807d1475e", "sourceURL": "https://skaffold.dev/docs/renderers", "url": "https://skaffold.dev/docs/renderers/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I supported renderers in skaffold?\n\nAssistant: To supported renderers in skaffold, here's what you do:\nSkaffold supports the following tools for rendering applications:\n\n- [`rawYaml`](https://skaffold.dev/docs/renderers/rawyaml/) \\- use this if you don’t currently use a rendering tool\n- [`helm`](https://skaffold.dev/docs/renderers/helm/)\n- [`kpt`](https://skaffold.dev/docs/renderers/kpt/)\n- [`kustomize`](https://skaffold.dev/docs/renderers/kustomize/)\n\nSkaffold’s render configuration is set through the `manifests` section of the `skaffold.yaml`. See each renderer’s page for more information on how to configure them for use in Skaffold. It’s also possible to use a combination of multiple renderers in a single project..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/renderers", "title": "Render [NEW]", "description": "This page covers the rendering process of applications to Kubernetes using Skaffold, including supported renderers and configuration details.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:39:00", "type": "section_detail", "page_metadata": {"title": "Render [NEW] | Skaffold", "ogTitle": "Render [NEW]", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "ogUrl": "https://skaffold.dev/docs/renderers/", "ogSiteName": "Skaffold", "generator": "Hugo 0.99.1", "description": "When Skaffold renders your application to Kubernetes, it goes through the following process:\n\nthe Skaffold renderer renders the final Kubernetes …", "twitter:card": "summary", "og:title": "Render [NEW]", "og:type": "website", "robots": "index, follow", "og:description": "Easy and Repeatable Container & Kubernetes Development", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:url": "https://skaffold.dev/docs/renderers/", "twitter:title": "Render [NEW]", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "language": "en", "og:site_name": "Skaffold", "scrapeId": "1970afb8-cc18-42a0-84b5-5a0807d1475e", "sourceURL": "https://skaffold.dev/docs/renderers", "url": "https://skaffold.dev/docs/renderers/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I further reading in skaffold?\n\nAssistant: To further reading in skaffold, here's what you do:\nFor a detailed discussion on Skaffold configuration, see [Skaffold Concepts](https://skaffold.dev/docs/design/config/) and [skaffold.yaml References](https://skaffold.dev/docs/references/yaml/)..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/renderers", "title": "Render [NEW]", "description": "This page covers the rendering process of applications to Kubernetes using Skaffold, including supported renderers and configuration details.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:39:00", "type": "section_detail", "page_metadata": {"title": "Render [NEW] | Skaffold", "ogTitle": "Render [NEW]", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "ogUrl": "https://skaffold.dev/docs/renderers/", "ogSiteName": "Skaffold", "generator": "Hugo 0.99.1", "description": "When Skaffold renders your application to Kubernetes, it goes through the following process:\n\nthe Skaffold renderer renders the final Kubernetes …", "twitter:card": "summary", "og:title": "Render [NEW]", "og:type": "website", "robots": "index, follow", "og:description": "Easy and Repeatable Container & Kubernetes Development", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:url": "https://skaffold.dev/docs/renderers/", "twitter:title": "Render [NEW]", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "language": "en", "og:site_name": "Skaffold", "scrapeId": "1970afb8-cc18-42a0-84b5-5a0807d1475e", "sourceURL": "https://skaffold.dev/docs/renderers", "url": "https://skaffold.dev/docs/renderers/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: What are some tips for using Render [NEW] in skaffold effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nSkaffold supports multiple renderers, allowing flexibility in how applications are rendered to Kubernetes.\n\nRefer to the specific renderer's documentation for configuration details.\n\nConsider using a combination of multiple renderers in a single project for more complex setups.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://skaffold.dev/docs/renderers", "title": "Render [NEW]", "description": "This page covers the rendering process of applications to Kubernetes using Skaffold, including supported renderers and configuration details.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:39:00", "type": "best_practices", "page_metadata": {"title": "Render [NEW] | Skaffold", "ogTitle": "Render [NEW]", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "ogUrl": "https://skaffold.dev/docs/renderers/", "ogSiteName": "Skaffold", "generator": "Hugo 0.99.1", "description": "When Skaffold renders your application to Kubernetes, it goes through the following process:\n\nthe Skaffold renderer renders the final Kubernetes …", "twitter:card": "summary", "og:title": "Render [NEW]", "og:type": "website", "robots": "index, follow", "og:description": "Easy and Repeatable Container & Kubernetes Development", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:url": "https://skaffold.dev/docs/renderers/", "twitter:title": "Render [NEW]", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "language": "en", "og:site_name": "Skaffold", "scrapeId": "1970afb8-cc18-42a0-84b5-5a0807d1475e", "sourceURL": "https://skaffold.dev/docs/renderers", "url": "https://skaffold.dev/docs/renderers/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what Test is in skaffold?\n\nAssistant: Sure, I'd be happy to explain Test in skaffold.\n\n# Test\n\nSkaffold has an integrated testing phase between the build and deploy phases of the pipeline. Skaffold supports the below types of tests.Here's a quick rundown of what this is about:\n\n## Skaffold Testers\n\n| Skaffold testers | Description |\n| --- | --- |\n| [Custom Test](https://skaffold.dev/docs/testers/custom/) | Enables users to run custom commands in the testing phase of the Skaffold pipeline |\n| [Container Structure Test](https://skaffold.dev/docs/testers/structure/) | Enables users to validate built container images before deploying them to their cluster |\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/testers", "title": "Test", "description": "Skaffold has an integrated testing phase between the build and deploy phases of the pipeline. Skaffold supports the below types of tests.", "has_code_examples": false, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 03:39:10", "type": "overview", "page_metadata": {"og:site_name": "Skaffold", "twitter:title": "Test", "og:title": "Test", "og:description": "Easy and Repeatable Container & Kubernetes Development", "ogSiteName": "Skaffold", "ogUrl": "https://skaffold.dev/docs/testers/", "generator": "Hugo 0.99.1", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "language": "en", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "og:type": "website", "title": "Test | Skaffold", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "robots": "index, follow", "description": "Skaffold has an integrated testing phase between the build and deploy phases of the pipeline. Skaffold supports the below types of tests.\n\n\n\nSkaffold …", "og:url": "https://skaffold.dev/docs/testers/", "ogTitle": "Test", "twitter:card": "summary", "scrapeId": "5504ce21-4405-4feb-8c24-07dda0b23ee3", "sourceURL": "https://skaffold.dev/docs/testers", "url": "https://skaffold.dev/docs/testers/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I skaffold testers in skaffold?\n\nAssistant: To skaffold testers in skaffold, here's what you do:\n| Skaffold testers | Description |\n| --- | --- |\n| [Custom Test](https://skaffold.dev/docs/testers/custom/) | Enables users to run custom commands in the testing phase of the Skaffold pipeline |\n| [Container Structure Test](https://skaffold.dev/docs/testers/structure/) | Enables users to validate built container images before deploying them to their cluster |.\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/testers", "title": "Test", "description": "Skaffold has an integrated testing phase between the build and deploy phases of the pipeline. Skaffold supports the below types of tests.", "has_code_examples": false, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 03:39:10", "type": "section_detail", "page_metadata": {"og:site_name": "Skaffold", "twitter:title": "Test", "og:title": "Test", "og:description": "Easy and Repeatable Container & Kubernetes Development", "ogSiteName": "Skaffold", "ogUrl": "https://skaffold.dev/docs/testers/", "generator": "Hugo 0.99.1", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "language": "en", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "og:type": "website", "title": "Test | Skaffold", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "robots": "index, follow", "description": "Skaffold has an integrated testing phase between the build and deploy phases of the pipeline. Skaffold supports the below types of tests.\n\n\n\nSkaffold …", "og:url": "https://skaffold.dev/docs/testers/", "ogTitle": "Test", "twitter:card": "summary", "scrapeId": "5504ce21-4405-4feb-8c24-07dda0b23ee3", "sourceURL": "https://skaffold.dev/docs/testers", "url": "https://skaffold.dev/docs/testers/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: What are some tips for using Test in skaffold effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nEnsure to validate built container images before deploying them to your cluster.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://skaffold.dev/docs/testers", "title": "Test", "description": "Skaffold has an integrated testing phase between the build and deploy phases of the pipeline. Skaffold supports the below types of tests.", "has_code_examples": false, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 03:39:10", "type": "best_practices", "page_metadata": {"og:site_name": "Skaffold", "twitter:title": "Test", "og:title": "Test", "og:description": "Easy and Repeatable Container & Kubernetes Development", "ogSiteName": "Skaffold", "ogUrl": "https://skaffold.dev/docs/testers/", "generator": "Hugo 0.99.1", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "language": "en", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "og:type": "website", "title": "Test | Skaffold", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "robots": "index, follow", "description": "Skaffold has an integrated testing phase between the build and deploy phases of the pipeline. Skaffold supports the below types of tests.\n\n\n\nSkaffold …", "og:url": "https://skaffold.dev/docs/testers/", "ogTitle": "Test", "twitter:card": "summary", "scrapeId": "5504ce21-4405-4feb-8c24-07dda0b23ee3", "sourceURL": "https://skaffold.dev/docs/testers", "url": "https://skaffold.dev/docs/testers/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what Skaffold Tagging Policies is in skaffold?\n\nAssistant: Sure, I'd be happy to explain Skaffold Tagging Policies in skaffold.\n\n# Skaffold Tagging Policies\n\nThis page covers the various tagging policies supported by Skaffold for tagging images, including configuration examples and details on how each tagger works.Here's a quick rundown of what this is about:\n\n## Tag\n\nSkaffold supports multiple taggers or tag policies for tagging images:\n\n- the `gitCommit` tagger uses git commits/references.\n- the `inputDigest` tagger uses a digest of the artifact source files.\n- the `envTemplate` tagger uses environment variables.\n- the `dateTime` tagger uses current date and time, with a configurable pattern.\n- the `customTemplate` tagger uses a combination of the existing taggers as components in a template.\n- the `sha256` tagger uses `latest`.\n\nThe default tagger, if none is specified in the `skaffold.yaml`, is the `gitCommit` tagger.\n\nThe tags can be overridden with a fixed tag with the `--tag` option on the command-line.\n\n## Configuration\n\nThe tag policy is specified in the `tagPolicy` field of the `build` section of the `skaffold.yaml` configuration file.\n\n```yaml\nbuild:\n  tagPolicy:\n    gitCommit: {}\n  artifacts:\n  - image: gcr.io/k8s-skaffold/example\n```\n\nFor a detailed discussion on Skaffold configuration, see [Skaffold Concepts](https://skaffold.dev/docs/design/config/) and [skaffold.yaml References](https://skaffold.dev/docs/references/yaml/).\n\n## How tagging works\n\n- Image tags are computed before the images are built.\n- No matter the tagger, Skaffold always uses immutable references in Kubernetes manifests.\nWhich reference is used depends on whether the images are pushed to a registry or loaded directly into the cluster (such as via the Docker daemon):\n  - **When images are pushed**, their immutable digest is available. Skaffold then references images both by tag and digest. Something like `image:tag@sha256:abacabac...`.\n  - **When images are loaded directly into the cluster**, such as loading into the cluster’s Docker daemon, digests are not available. We have the tags and the imageIDs. Since imageIDs can’t be used in Kubernetes manifests, Skaffold creates an additional immutable, local only, tag with the same name as the imageID and uses that in manifests. Something like `image:abecfabecfabecf...`.\n- Skaffold never references images just by their tags because those tags are mutable and can lead to cases where Kubernetes will use an outdated version of the image.\n\n## `gitCommit`: uses git commits/references as tags\n\n`gitCommit` is the default tag policy of Skaffold: if you do not specify the `tagPolicy` field in the `build` section, Skaffold will use Git information to tag artifacts.\n\nThe `gitCommit` tagger will look at the Git workspace that contains the artifact’s `context` directory and tag according to those rules:\n\n- If the workspace is on a Git tag, that tag is used to tag images\n- If the workspace is on a Git commit, the short commit is used\n- If the workspace has uncommitted changes, a `-dirty` suffix is appended to the image tag\n\n## Example\n\nThe following `build` section instructs Skaffold to build a Docker image `gcr.io/k8s-skaffold/example` with the `gitCommit` tag policy specified explicitly:\n\n```yaml\nbuild:\n  tagPolicy:\n    gitCommit: {}\n  artifacts:\n  - image: gcr.io/k8s-skaffold/example\n```\n\n## Configuration\n\n| Option | Description | Default |\n| --- | --- | --- |\n| `variant` | determines the behavior of the git tagger. Valid variants are: `Tags` (default): use git tags or fall back to abbreviated commit hash. `CommitSha`: use the full git commit sha. `AbbrevCommitSha`: use the abbreviated git commit sha. `TreeSha`: use the full tree hash of the artifact workingdir. `AbbrevTreeSha`: use the abbreviated tree hash of the artifact workingdir. | `` |\n| `prefix` | adds a fixed prefix to the tag. | `` |\n| `ignoreChanges` | specifies whether to omit the `-dirty` postfix if there are uncommitted changes. | `false` |\n\n## `inputDigest`: uses a digest of the artifact source to tag images\n\nThe `inputDigest` tagger tags images with a digest of the artifact source files. The source files are the dependencies calculated by the configured builder.\n\n## Example\n\nThe following `build` section instructs Skaffold to build a Docker image `gcr.io/k8s-skaffold/example` with the `inputDigest` tag policy:\n\n```yaml\nbuild:\n  tagPolicy:\n    inputDigest: {}\n  artifacts:\n  - image: gcr.io/k8s-skaffold/example\n```\n\n## Configuration\n\n`inputDigest` tag policy features no options.\n\n## `envTemplate`: uses values of environment variables as tags\n\n`envTemplate` allows you to use environment variables in tags. This policy requires that you specify a tag template, where part of template can be replaced with values of environment variables during the tagging process.\n\nThe following `build` section, for example, instructs Skaffold to build a Docker image `gcr.io/k8s-skaffold/example` with the `envTemplate` tag policy. The tag template is `{{.FOO}}`; when Skaffold finishes building the image, it will check the list of available environment variables in the system for the variable `FOO`, and use its value to tag the image.\n\n## **Deprecated**\n\nThe use of `IMAGE_NAME` as a built-in variable whose value is the `imageName` field in the `artifacts` part of the `build` section has been deprecated. Please use the envTemplate to express solely the tag value for the image.\n\n## Example\n\n```yaml\nbuild:\n  tagPolicy:\n    envTemplate:\n      template: \"{{.FOO}}\"\n  artifacts:\n  - image: gcr.io/k8s-skaffold/example\n```\n\nSuppose the value of the `FOO` environment variable is `v1`, the image built will be `gcr.io/k8s-skaffold/example:v1`.\n\n## Configuration\n\nThe tag template uses the [Go Programming Language Syntax](https://golang.org/pkg/text/template/).\nAs showcased in the example, `envTemplate` tag policy features one **required** parameter, `template`, which is the tag template to use. To learn more about templating support in Skaffold.yaml see [Templated fields](https://skaffold.dev/docs/environment/templating/)\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/taggers", "title": "Skaffold Tagging Policies", "description": "This page covers the various tagging policies supported by Skaffold for tagging images, including configuration examples and details on how each tagger works.", "has_code_examples": true, "has_best_practices": true, "section_count": 13, "timestamp": "2025-03-01 03:41:09", "type": "overview", "page_metadata": {"favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:title": "Tag", "description": "Skaffold supports multiple taggers or tag policies for tagging images:\n\nthe gitCommit tagger uses git commits/references.\nthe inputDigest tagger uses …", "ogUrl": "https://skaffold.dev/docs/taggers/", "ogSiteName": "Skaffold", "generator": "Hugo 0.99.1", "og:description": "Skaffold supports multiple taggers or tag policies for tagging images:\n the gitCommit tagger uses git commits/references. the inputDigest tagger uses a digest of the artifact source files. the envTemplate tagger uses environment variables. the dateTime tagger uses current date and time, with a configurable pattern. the customTemplate tagger uses a combination of the existing taggers as components in a template. the sha256 tagger uses latest.  The default tagger, if none is specified in the skaffold.", "twitter:title": "Tag", "ogDescription": "Skaffold supports multiple taggers or tag policies for tagging images:\n the gitCommit tagger uses git commits/references. the inputDigest tagger uses a digest of the artifact source files. the envTemplate tagger uses environment variables. the dateTime tagger uses current date and time, with a configurable pattern. the customTemplate tagger uses a combination of the existing taggers as components in a template. the sha256 tagger uses latest.  The default tagger, if none is specified in the skaffold.", "robots": "index, follow", "og:url": "https://skaffold.dev/docs/taggers/", "og:type": "article", "article:section": "docs", "twitter:description": "Skaffold supports multiple taggers or tag policies for tagging images:\n the gitCommit tagger uses git commits/references. the inputDigest tagger uses a digest of the artifact source files. the envTemplate tagger uses environment variables. the dateTime tagger uses current date and time, with a configurable pattern. the customTemplate tagger uses a combination of the existing taggers as components in a template. the sha256 tagger uses latest.  The default tagger, if none is specified in the skaffold.", "title": "Tag | Skaffold", "twitter:card": "summary", "ogTitle": "Tag", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:site_name": "Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "language": "en", "scrapeId": "663ffc81-58de-4575-8e32-97c766f7e325", "sourceURL": "https://skaffold.dev/docs/taggers", "url": "https://skaffold.dev/docs/taggers/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I tag in skaffold?\n\nAssistant: To tag in skaffold, here's what you do:\nSkaffold supports multiple taggers or tag policies for tagging images:\n\n- the `gitCommit` tagger uses git commits/references.\n- the `inputDigest` tagger uses a digest of the artifact source files.\n- the `envTemplate` tagger uses environment variables.\n- the `dateTime` tagger uses current date and time, with a configurable pattern.\n- the `customTemplate` tagger uses a combination of the existing taggers as components in a template.\n- the `sha256` tagger uses `latest`.\n\nThe default tagger, if none is specified in the `skaffold.yaml`, is the `gitCommit` tagger.\n\nThe tags can be overridden with a fixed tag with the `--tag` option on the command-line..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/taggers", "title": "Skaffold Tagging Policies", "description": "This page covers the various tagging policies supported by Skaffold for tagging images, including configuration examples and details on how each tagger works.", "has_code_examples": true, "has_best_practices": true, "section_count": 13, "timestamp": "2025-03-01 03:41:09", "type": "section_detail", "page_metadata": {"favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:title": "Tag", "description": "Skaffold supports multiple taggers or tag policies for tagging images:\n\nthe gitCommit tagger uses git commits/references.\nthe inputDigest tagger uses …", "ogUrl": "https://skaffold.dev/docs/taggers/", "ogSiteName": "Skaffold", "generator": "Hugo 0.99.1", "og:description": "Skaffold supports multiple taggers or tag policies for tagging images:\n the gitCommit tagger uses git commits/references. the inputDigest tagger uses a digest of the artifact source files. the envTemplate tagger uses environment variables. the dateTime tagger uses current date and time, with a configurable pattern. the customTemplate tagger uses a combination of the existing taggers as components in a template. the sha256 tagger uses latest.  The default tagger, if none is specified in the skaffold.", "twitter:title": "Tag", "ogDescription": "Skaffold supports multiple taggers or tag policies for tagging images:\n the gitCommit tagger uses git commits/references. the inputDigest tagger uses a digest of the artifact source files. the envTemplate tagger uses environment variables. the dateTime tagger uses current date and time, with a configurable pattern. the customTemplate tagger uses a combination of the existing taggers as components in a template. the sha256 tagger uses latest.  The default tagger, if none is specified in the skaffold.", "robots": "index, follow", "og:url": "https://skaffold.dev/docs/taggers/", "og:type": "article", "article:section": "docs", "twitter:description": "Skaffold supports multiple taggers or tag policies for tagging images:\n the gitCommit tagger uses git commits/references. the inputDigest tagger uses a digest of the artifact source files. the envTemplate tagger uses environment variables. the dateTime tagger uses current date and time, with a configurable pattern. the customTemplate tagger uses a combination of the existing taggers as components in a template. the sha256 tagger uses latest.  The default tagger, if none is specified in the skaffold.", "title": "Tag | Skaffold", "twitter:card": "summary", "ogTitle": "Tag", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:site_name": "Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "language": "en", "scrapeId": "663ffc81-58de-4575-8e32-97c766f7e325", "sourceURL": "https://skaffold.dev/docs/taggers", "url": "https://skaffold.dev/docs/taggers/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I configuration in skaffold?\n\nAssistant: To configuration in skaffold, here's what you do:\nThe tag policy is specified in the `tagPolicy` field of the `build` section of the `skaffold.yaml` configuration file.\n\n```yaml\nbuild:\n  tagPolicy:\n    gitCommit: {}\n  artifacts:\n  - image: gcr.io/k8s-skaffold/example\n```\n\nFor a detailed discussion on Skaffold configuration, see [Skaffold Concepts](https://skaffold.dev/docs/design/config/) and [skaffold.yaml References](https://skaffold.dev/docs/references/yaml/)..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/taggers", "title": "Skaffold Tagging Policies", "description": "This page covers the various tagging policies supported by Skaffold for tagging images, including configuration examples and details on how each tagger works.", "has_code_examples": true, "has_best_practices": true, "section_count": 13, "timestamp": "2025-03-01 03:41:09", "type": "section_detail", "page_metadata": {"favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:title": "Tag", "description": "Skaffold supports multiple taggers or tag policies for tagging images:\n\nthe gitCommit tagger uses git commits/references.\nthe inputDigest tagger uses …", "ogUrl": "https://skaffold.dev/docs/taggers/", "ogSiteName": "Skaffold", "generator": "Hugo 0.99.1", "og:description": "Skaffold supports multiple taggers or tag policies for tagging images:\n the gitCommit tagger uses git commits/references. the inputDigest tagger uses a digest of the artifact source files. the envTemplate tagger uses environment variables. the dateTime tagger uses current date and time, with a configurable pattern. the customTemplate tagger uses a combination of the existing taggers as components in a template. the sha256 tagger uses latest.  The default tagger, if none is specified in the skaffold.", "twitter:title": "Tag", "ogDescription": "Skaffold supports multiple taggers or tag policies for tagging images:\n the gitCommit tagger uses git commits/references. the inputDigest tagger uses a digest of the artifact source files. the envTemplate tagger uses environment variables. the dateTime tagger uses current date and time, with a configurable pattern. the customTemplate tagger uses a combination of the existing taggers as components in a template. the sha256 tagger uses latest.  The default tagger, if none is specified in the skaffold.", "robots": "index, follow", "og:url": "https://skaffold.dev/docs/taggers/", "og:type": "article", "article:section": "docs", "twitter:description": "Skaffold supports multiple taggers or tag policies for tagging images:\n the gitCommit tagger uses git commits/references. the inputDigest tagger uses a digest of the artifact source files. the envTemplate tagger uses environment variables. the dateTime tagger uses current date and time, with a configurable pattern. the customTemplate tagger uses a combination of the existing taggers as components in a template. the sha256 tagger uses latest.  The default tagger, if none is specified in the skaffold.", "title": "Tag | Skaffold", "twitter:card": "summary", "ogTitle": "Tag", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:site_name": "Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "language": "en", "scrapeId": "663ffc81-58de-4575-8e32-97c766f7e325", "sourceURL": "https://skaffold.dev/docs/taggers", "url": "https://skaffold.dev/docs/taggers/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I how tagging works in skaffold?\n\nAssistant: To how tagging works in skaffold, here's what you do:\n- Image tags are computed before the images are built.\n- No matter the tagger, Skaffold always uses immutable references in Kubernetes manifests.\nWhich reference is used depends on whether the images are pushed to a registry or loaded directly into the cluster (such as via the Docker daemon):\n  - **When images are pushed**, their immutable digest is available. Skaffold then references images both by tag and digest. Something like `image:tag@sha256:abacabac...`.\n  - **When images are loaded directly into the cluster**, such as loading into the cluster’s Docker daemon, digests are not available. We have the tags and the imageIDs. Since imageIDs can’t be used in Kubernetes manifests, Skaffold creates an additional immutable, local only, tag with the same name as the imageID and uses that in manifests. Something like `image:abecfabecfabecf...`.\n- Skaffold never references images just by their tags because those tags are mutable and can lead to cases where Kubernetes will use an outdated version of the image..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/taggers", "title": "Skaffold Tagging Policies", "description": "This page covers the various tagging policies supported by Skaffold for tagging images, including configuration examples and details on how each tagger works.", "has_code_examples": true, "has_best_practices": true, "section_count": 13, "timestamp": "2025-03-01 03:41:09", "type": "section_detail", "page_metadata": {"favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:title": "Tag", "description": "Skaffold supports multiple taggers or tag policies for tagging images:\n\nthe gitCommit tagger uses git commits/references.\nthe inputDigest tagger uses …", "ogUrl": "https://skaffold.dev/docs/taggers/", "ogSiteName": "Skaffold", "generator": "Hugo 0.99.1", "og:description": "Skaffold supports multiple taggers or tag policies for tagging images:\n the gitCommit tagger uses git commits/references. the inputDigest tagger uses a digest of the artifact source files. the envTemplate tagger uses environment variables. the dateTime tagger uses current date and time, with a configurable pattern. the customTemplate tagger uses a combination of the existing taggers as components in a template. the sha256 tagger uses latest.  The default tagger, if none is specified in the skaffold.", "twitter:title": "Tag", "ogDescription": "Skaffold supports multiple taggers or tag policies for tagging images:\n the gitCommit tagger uses git commits/references. the inputDigest tagger uses a digest of the artifact source files. the envTemplate tagger uses environment variables. the dateTime tagger uses current date and time, with a configurable pattern. the customTemplate tagger uses a combination of the existing taggers as components in a template. the sha256 tagger uses latest.  The default tagger, if none is specified in the skaffold.", "robots": "index, follow", "og:url": "https://skaffold.dev/docs/taggers/", "og:type": "article", "article:section": "docs", "twitter:description": "Skaffold supports multiple taggers or tag policies for tagging images:\n the gitCommit tagger uses git commits/references. the inputDigest tagger uses a digest of the artifact source files. the envTemplate tagger uses environment variables. the dateTime tagger uses current date and time, with a configurable pattern. the customTemplate tagger uses a combination of the existing taggers as components in a template. the sha256 tagger uses latest.  The default tagger, if none is specified in the skaffold.", "title": "Tag | Skaffold", "twitter:card": "summary", "ogTitle": "Tag", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:site_name": "Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "language": "en", "scrapeId": "663ffc81-58de-4575-8e32-97c766f7e325", "sourceURL": "https://skaffold.dev/docs/taggers", "url": "https://skaffold.dev/docs/taggers/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I `gitcommit`: uses git commits/references as tags in skaffold?\n\nAssistant: To `gitcommit`: uses git commits/references as tags in skaffold, here's what you do:\n`gitCommit` is the default tag policy of Skaffold: if you do not specify the `tagPolicy` field in the `build` section, Skaffold will use Git information to tag artifacts.\n\nThe `gitCommit` tagger will look at the Git workspace that contains the artifact’s `context` directory and tag according to those rules:\n\n- If the workspace is on a Git tag, that tag is used to tag images\n- If the workspace is on a Git commit, the short commit is used\n- If the workspace has uncommitted changes, a `-dirty` suffix is appended to the image tag.\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/taggers", "title": "Skaffold Tagging Policies", "description": "This page covers the various tagging policies supported by Skaffold for tagging images, including configuration examples and details on how each tagger works.", "has_code_examples": true, "has_best_practices": true, "section_count": 13, "timestamp": "2025-03-01 03:41:09", "type": "section_detail", "page_metadata": {"favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:title": "Tag", "description": "Skaffold supports multiple taggers or tag policies for tagging images:\n\nthe gitCommit tagger uses git commits/references.\nthe inputDigest tagger uses …", "ogUrl": "https://skaffold.dev/docs/taggers/", "ogSiteName": "Skaffold", "generator": "Hugo 0.99.1", "og:description": "Skaffold supports multiple taggers or tag policies for tagging images:\n the gitCommit tagger uses git commits/references. the inputDigest tagger uses a digest of the artifact source files. the envTemplate tagger uses environment variables. the dateTime tagger uses current date and time, with a configurable pattern. the customTemplate tagger uses a combination of the existing taggers as components in a template. the sha256 tagger uses latest.  The default tagger, if none is specified in the skaffold.", "twitter:title": "Tag", "ogDescription": "Skaffold supports multiple taggers or tag policies for tagging images:\n the gitCommit tagger uses git commits/references. the inputDigest tagger uses a digest of the artifact source files. the envTemplate tagger uses environment variables. the dateTime tagger uses current date and time, with a configurable pattern. the customTemplate tagger uses a combination of the existing taggers as components in a template. the sha256 tagger uses latest.  The default tagger, if none is specified in the skaffold.", "robots": "index, follow", "og:url": "https://skaffold.dev/docs/taggers/", "og:type": "article", "article:section": "docs", "twitter:description": "Skaffold supports multiple taggers or tag policies for tagging images:\n the gitCommit tagger uses git commits/references. the inputDigest tagger uses a digest of the artifact source files. the envTemplate tagger uses environment variables. the dateTime tagger uses current date and time, with a configurable pattern. the customTemplate tagger uses a combination of the existing taggers as components in a template. the sha256 tagger uses latest.  The default tagger, if none is specified in the skaffold.", "title": "Tag | Skaffold", "twitter:card": "summary", "ogTitle": "Tag", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:site_name": "Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "language": "en", "scrapeId": "663ffc81-58de-4575-8e32-97c766f7e325", "sourceURL": "https://skaffold.dev/docs/taggers", "url": "https://skaffold.dev/docs/taggers/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I example in skaffold?\n\nAssistant: To example in skaffold, here's what you do:\nThe following `build` section instructs Skaffold to build a Docker image `gcr.io/k8s-skaffold/example` with the `gitCommit` tag policy specified explicitly:\n\n```yaml\nbuild:\n  tagPolicy:\n    gitCommit: {}\n  artifacts:\n  - image: gcr.io/k8s-skaffold/example\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/taggers", "title": "Skaffold Tagging Policies", "description": "This page covers the various tagging policies supported by Skaffold for tagging images, including configuration examples and details on how each tagger works.", "has_code_examples": true, "has_best_practices": true, "section_count": 13, "timestamp": "2025-03-01 03:41:09", "type": "section_detail", "page_metadata": {"favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:title": "Tag", "description": "Skaffold supports multiple taggers or tag policies for tagging images:\n\nthe gitCommit tagger uses git commits/references.\nthe inputDigest tagger uses …", "ogUrl": "https://skaffold.dev/docs/taggers/", "ogSiteName": "Skaffold", "generator": "Hugo 0.99.1", "og:description": "Skaffold supports multiple taggers or tag policies for tagging images:\n the gitCommit tagger uses git commits/references. the inputDigest tagger uses a digest of the artifact source files. the envTemplate tagger uses environment variables. the dateTime tagger uses current date and time, with a configurable pattern. the customTemplate tagger uses a combination of the existing taggers as components in a template. the sha256 tagger uses latest.  The default tagger, if none is specified in the skaffold.", "twitter:title": "Tag", "ogDescription": "Skaffold supports multiple taggers or tag policies for tagging images:\n the gitCommit tagger uses git commits/references. the inputDigest tagger uses a digest of the artifact source files. the envTemplate tagger uses environment variables. the dateTime tagger uses current date and time, with a configurable pattern. the customTemplate tagger uses a combination of the existing taggers as components in a template. the sha256 tagger uses latest.  The default tagger, if none is specified in the skaffold.", "robots": "index, follow", "og:url": "https://skaffold.dev/docs/taggers/", "og:type": "article", "article:section": "docs", "twitter:description": "Skaffold supports multiple taggers or tag policies for tagging images:\n the gitCommit tagger uses git commits/references. the inputDigest tagger uses a digest of the artifact source files. the envTemplate tagger uses environment variables. the dateTime tagger uses current date and time, with a configurable pattern. the customTemplate tagger uses a combination of the existing taggers as components in a template. the sha256 tagger uses latest.  The default tagger, if none is specified in the skaffold.", "title": "Tag | Skaffold", "twitter:card": "summary", "ogTitle": "Tag", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:site_name": "Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "language": "en", "scrapeId": "663ffc81-58de-4575-8e32-97c766f7e325", "sourceURL": "https://skaffold.dev/docs/taggers", "url": "https://skaffold.dev/docs/taggers/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I configuration in skaffold?\n\nAssistant: To configuration in skaffold, here's what you do:\n| Option | Description | Default |\n| --- | --- | --- |\n| `variant` | determines the behavior of the git tagger. Valid variants are: `Tags` (default): use git tags or fall back to abbreviated commit hash. `CommitSha`: use the full git commit sha. `AbbrevCommitSha`: use the abbreviated git commit sha. `TreeSha`: use the full tree hash of the artifact workingdir. `AbbrevTreeSha`: use the abbreviated tree hash of the artifact workingdir. | `` |\n| `prefix` | adds a fixed prefix to the tag. | `` |\n| `ignoreChanges` | specifies whether to omit the `-dirty` postfix if there are uncommitted changes. | `false` |.\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/taggers", "title": "Skaffold Tagging Policies", "description": "This page covers the various tagging policies supported by Skaffold for tagging images, including configuration examples and details on how each tagger works.", "has_code_examples": true, "has_best_practices": true, "section_count": 13, "timestamp": "2025-03-01 03:41:09", "type": "section_detail", "page_metadata": {"favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:title": "Tag", "description": "Skaffold supports multiple taggers or tag policies for tagging images:\n\nthe gitCommit tagger uses git commits/references.\nthe inputDigest tagger uses …", "ogUrl": "https://skaffold.dev/docs/taggers/", "ogSiteName": "Skaffold", "generator": "Hugo 0.99.1", "og:description": "Skaffold supports multiple taggers or tag policies for tagging images:\n the gitCommit tagger uses git commits/references. the inputDigest tagger uses a digest of the artifact source files. the envTemplate tagger uses environment variables. the dateTime tagger uses current date and time, with a configurable pattern. the customTemplate tagger uses a combination of the existing taggers as components in a template. the sha256 tagger uses latest.  The default tagger, if none is specified in the skaffold.", "twitter:title": "Tag", "ogDescription": "Skaffold supports multiple taggers or tag policies for tagging images:\n the gitCommit tagger uses git commits/references. the inputDigest tagger uses a digest of the artifact source files. the envTemplate tagger uses environment variables. the dateTime tagger uses current date and time, with a configurable pattern. the customTemplate tagger uses a combination of the existing taggers as components in a template. the sha256 tagger uses latest.  The default tagger, if none is specified in the skaffold.", "robots": "index, follow", "og:url": "https://skaffold.dev/docs/taggers/", "og:type": "article", "article:section": "docs", "twitter:description": "Skaffold supports multiple taggers or tag policies for tagging images:\n the gitCommit tagger uses git commits/references. the inputDigest tagger uses a digest of the artifact source files. the envTemplate tagger uses environment variables. the dateTime tagger uses current date and time, with a configurable pattern. the customTemplate tagger uses a combination of the existing taggers as components in a template. the sha256 tagger uses latest.  The default tagger, if none is specified in the skaffold.", "title": "Tag | Skaffold", "twitter:card": "summary", "ogTitle": "Tag", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:site_name": "Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "language": "en", "scrapeId": "663ffc81-58de-4575-8e32-97c766f7e325", "sourceURL": "https://skaffold.dev/docs/taggers", "url": "https://skaffold.dev/docs/taggers/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I `inputdigest`: uses a digest of the artifact source to tag images in skaffold?\n\nAssistant: To `inputdigest`: uses a digest of the artifact source to tag images in skaffold, here's what you do:\nThe `inputDigest` tagger tags images with a digest of the artifact source files. The source files are the dependencies calculated by the configured builder..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/taggers", "title": "Skaffold Tagging Policies", "description": "This page covers the various tagging policies supported by Skaffold for tagging images, including configuration examples and details on how each tagger works.", "has_code_examples": true, "has_best_practices": true, "section_count": 13, "timestamp": "2025-03-01 03:41:09", "type": "section_detail", "page_metadata": {"favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:title": "Tag", "description": "Skaffold supports multiple taggers or tag policies for tagging images:\n\nthe gitCommit tagger uses git commits/references.\nthe inputDigest tagger uses …", "ogUrl": "https://skaffold.dev/docs/taggers/", "ogSiteName": "Skaffold", "generator": "Hugo 0.99.1", "og:description": "Skaffold supports multiple taggers or tag policies for tagging images:\n the gitCommit tagger uses git commits/references. the inputDigest tagger uses a digest of the artifact source files. the envTemplate tagger uses environment variables. the dateTime tagger uses current date and time, with a configurable pattern. the customTemplate tagger uses a combination of the existing taggers as components in a template. the sha256 tagger uses latest.  The default tagger, if none is specified in the skaffold.", "twitter:title": "Tag", "ogDescription": "Skaffold supports multiple taggers or tag policies for tagging images:\n the gitCommit tagger uses git commits/references. the inputDigest tagger uses a digest of the artifact source files. the envTemplate tagger uses environment variables. the dateTime tagger uses current date and time, with a configurable pattern. the customTemplate tagger uses a combination of the existing taggers as components in a template. the sha256 tagger uses latest.  The default tagger, if none is specified in the skaffold.", "robots": "index, follow", "og:url": "https://skaffold.dev/docs/taggers/", "og:type": "article", "article:section": "docs", "twitter:description": "Skaffold supports multiple taggers or tag policies for tagging images:\n the gitCommit tagger uses git commits/references. the inputDigest tagger uses a digest of the artifact source files. the envTemplate tagger uses environment variables. the dateTime tagger uses current date and time, with a configurable pattern. the customTemplate tagger uses a combination of the existing taggers as components in a template. the sha256 tagger uses latest.  The default tagger, if none is specified in the skaffold.", "title": "Tag | Skaffold", "twitter:card": "summary", "ogTitle": "Tag", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:site_name": "Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "language": "en", "scrapeId": "663ffc81-58de-4575-8e32-97c766f7e325", "sourceURL": "https://skaffold.dev/docs/taggers", "url": "https://skaffold.dev/docs/taggers/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I example in skaffold?\n\nAssistant: To example in skaffold, here's what you do:\nThe following `build` section instructs Skaffold to build a Docker image `gcr.io/k8s-skaffold/example` with the `inputDigest` tag policy:\n\n```yaml\nbuild:\n  tagPolicy:\n    inputDigest: {}\n  artifacts:\n  - image: gcr.io/k8s-skaffold/example\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/taggers", "title": "Skaffold Tagging Policies", "description": "This page covers the various tagging policies supported by Skaffold for tagging images, including configuration examples and details on how each tagger works.", "has_code_examples": true, "has_best_practices": true, "section_count": 13, "timestamp": "2025-03-01 03:41:09", "type": "section_detail", "page_metadata": {"favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:title": "Tag", "description": "Skaffold supports multiple taggers or tag policies for tagging images:\n\nthe gitCommit tagger uses git commits/references.\nthe inputDigest tagger uses …", "ogUrl": "https://skaffold.dev/docs/taggers/", "ogSiteName": "Skaffold", "generator": "Hugo 0.99.1", "og:description": "Skaffold supports multiple taggers or tag policies for tagging images:\n the gitCommit tagger uses git commits/references. the inputDigest tagger uses a digest of the artifact source files. the envTemplate tagger uses environment variables. the dateTime tagger uses current date and time, with a configurable pattern. the customTemplate tagger uses a combination of the existing taggers as components in a template. the sha256 tagger uses latest.  The default tagger, if none is specified in the skaffold.", "twitter:title": "Tag", "ogDescription": "Skaffold supports multiple taggers or tag policies for tagging images:\n the gitCommit tagger uses git commits/references. the inputDigest tagger uses a digest of the artifact source files. the envTemplate tagger uses environment variables. the dateTime tagger uses current date and time, with a configurable pattern. the customTemplate tagger uses a combination of the existing taggers as components in a template. the sha256 tagger uses latest.  The default tagger, if none is specified in the skaffold.", "robots": "index, follow", "og:url": "https://skaffold.dev/docs/taggers/", "og:type": "article", "article:section": "docs", "twitter:description": "Skaffold supports multiple taggers or tag policies for tagging images:\n the gitCommit tagger uses git commits/references. the inputDigest tagger uses a digest of the artifact source files. the envTemplate tagger uses environment variables. the dateTime tagger uses current date and time, with a configurable pattern. the customTemplate tagger uses a combination of the existing taggers as components in a template. the sha256 tagger uses latest.  The default tagger, if none is specified in the skaffold.", "title": "Tag | Skaffold", "twitter:card": "summary", "ogTitle": "Tag", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:site_name": "Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "language": "en", "scrapeId": "663ffc81-58de-4575-8e32-97c766f7e325", "sourceURL": "https://skaffold.dev/docs/taggers", "url": "https://skaffold.dev/docs/taggers/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I configuration in skaffold?\n\nAssistant: To configuration in skaffold, here's what you do:\n`inputDigest` tag policy features no options..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/taggers", "title": "Skaffold Tagging Policies", "description": "This page covers the various tagging policies supported by Skaffold for tagging images, including configuration examples and details on how each tagger works.", "has_code_examples": true, "has_best_practices": true, "section_count": 13, "timestamp": "2025-03-01 03:41:09", "type": "section_detail", "page_metadata": {"favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:title": "Tag", "description": "Skaffold supports multiple taggers or tag policies for tagging images:\n\nthe gitCommit tagger uses git commits/references.\nthe inputDigest tagger uses …", "ogUrl": "https://skaffold.dev/docs/taggers/", "ogSiteName": "Skaffold", "generator": "Hugo 0.99.1", "og:description": "Skaffold supports multiple taggers or tag policies for tagging images:\n the gitCommit tagger uses git commits/references. the inputDigest tagger uses a digest of the artifact source files. the envTemplate tagger uses environment variables. the dateTime tagger uses current date and time, with a configurable pattern. the customTemplate tagger uses a combination of the existing taggers as components in a template. the sha256 tagger uses latest.  The default tagger, if none is specified in the skaffold.", "twitter:title": "Tag", "ogDescription": "Skaffold supports multiple taggers or tag policies for tagging images:\n the gitCommit tagger uses git commits/references. the inputDigest tagger uses a digest of the artifact source files. the envTemplate tagger uses environment variables. the dateTime tagger uses current date and time, with a configurable pattern. the customTemplate tagger uses a combination of the existing taggers as components in a template. the sha256 tagger uses latest.  The default tagger, if none is specified in the skaffold.", "robots": "index, follow", "og:url": "https://skaffold.dev/docs/taggers/", "og:type": "article", "article:section": "docs", "twitter:description": "Skaffold supports multiple taggers or tag policies for tagging images:\n the gitCommit tagger uses git commits/references. the inputDigest tagger uses a digest of the artifact source files. the envTemplate tagger uses environment variables. the dateTime tagger uses current date and time, with a configurable pattern. the customTemplate tagger uses a combination of the existing taggers as components in a template. the sha256 tagger uses latest.  The default tagger, if none is specified in the skaffold.", "title": "Tag | Skaffold", "twitter:card": "summary", "ogTitle": "Tag", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:site_name": "Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "language": "en", "scrapeId": "663ffc81-58de-4575-8e32-97c766f7e325", "sourceURL": "https://skaffold.dev/docs/taggers", "url": "https://skaffold.dev/docs/taggers/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I `envtemplate`: uses values of environment variables as tags in skaffold?\n\nAssistant: To `envtemplate`: uses values of environment variables as tags in skaffold, here's what you do:\n`envTemplate` allows you to use environment variables in tags. This policy requires that you specify a tag template, where part of template can be replaced with values of environment variables during the tagging process.\n\nThe following `build` section, for example, instructs Skaffold to build a Docker image `gcr.io/k8s-skaffold/example` with the `envTemplate` tag policy. The tag template is `{{.FOO}}`; when Skaffold finishes building the image, it will check the list of available environment variables in the system for the variable `FOO`, and use its value to tag the image..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/taggers", "title": "Skaffold Tagging Policies", "description": "This page covers the various tagging policies supported by Skaffold for tagging images, including configuration examples and details on how each tagger works.", "has_code_examples": true, "has_best_practices": true, "section_count": 13, "timestamp": "2025-03-01 03:41:09", "type": "section_detail", "page_metadata": {"favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:title": "Tag", "description": "Skaffold supports multiple taggers or tag policies for tagging images:\n\nthe gitCommit tagger uses git commits/references.\nthe inputDigest tagger uses …", "ogUrl": "https://skaffold.dev/docs/taggers/", "ogSiteName": "Skaffold", "generator": "Hugo 0.99.1", "og:description": "Skaffold supports multiple taggers or tag policies for tagging images:\n the gitCommit tagger uses git commits/references. the inputDigest tagger uses a digest of the artifact source files. the envTemplate tagger uses environment variables. the dateTime tagger uses current date and time, with a configurable pattern. the customTemplate tagger uses a combination of the existing taggers as components in a template. the sha256 tagger uses latest.  The default tagger, if none is specified in the skaffold.", "twitter:title": "Tag", "ogDescription": "Skaffold supports multiple taggers or tag policies for tagging images:\n the gitCommit tagger uses git commits/references. the inputDigest tagger uses a digest of the artifact source files. the envTemplate tagger uses environment variables. the dateTime tagger uses current date and time, with a configurable pattern. the customTemplate tagger uses a combination of the existing taggers as components in a template. the sha256 tagger uses latest.  The default tagger, if none is specified in the skaffold.", "robots": "index, follow", "og:url": "https://skaffold.dev/docs/taggers/", "og:type": "article", "article:section": "docs", "twitter:description": "Skaffold supports multiple taggers or tag policies for tagging images:\n the gitCommit tagger uses git commits/references. the inputDigest tagger uses a digest of the artifact source files. the envTemplate tagger uses environment variables. the dateTime tagger uses current date and time, with a configurable pattern. the customTemplate tagger uses a combination of the existing taggers as components in a template. the sha256 tagger uses latest.  The default tagger, if none is specified in the skaffold.", "title": "Tag | Skaffold", "twitter:card": "summary", "ogTitle": "Tag", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:site_name": "Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "language": "en", "scrapeId": "663ffc81-58de-4575-8e32-97c766f7e325", "sourceURL": "https://skaffold.dev/docs/taggers", "url": "https://skaffold.dev/docs/taggers/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I **deprecated** in skaffold?\n\nAssistant: To **deprecated** in skaffold, here's what you do:\nThe use of `IMAGE_NAME` as a built-in variable whose value is the `imageName` field in the `artifacts` part of the `build` section has been deprecated. Please use the envTemplate to express solely the tag value for the image..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/taggers", "title": "Skaffold Tagging Policies", "description": "This page covers the various tagging policies supported by Skaffold for tagging images, including configuration examples and details on how each tagger works.", "has_code_examples": true, "has_best_practices": true, "section_count": 13, "timestamp": "2025-03-01 03:41:09", "type": "section_detail", "page_metadata": {"favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:title": "Tag", "description": "Skaffold supports multiple taggers or tag policies for tagging images:\n\nthe gitCommit tagger uses git commits/references.\nthe inputDigest tagger uses …", "ogUrl": "https://skaffold.dev/docs/taggers/", "ogSiteName": "Skaffold", "generator": "Hugo 0.99.1", "og:description": "Skaffold supports multiple taggers or tag policies for tagging images:\n the gitCommit tagger uses git commits/references. the inputDigest tagger uses a digest of the artifact source files. the envTemplate tagger uses environment variables. the dateTime tagger uses current date and time, with a configurable pattern. the customTemplate tagger uses a combination of the existing taggers as components in a template. the sha256 tagger uses latest.  The default tagger, if none is specified in the skaffold.", "twitter:title": "Tag", "ogDescription": "Skaffold supports multiple taggers or tag policies for tagging images:\n the gitCommit tagger uses git commits/references. the inputDigest tagger uses a digest of the artifact source files. the envTemplate tagger uses environment variables. the dateTime tagger uses current date and time, with a configurable pattern. the customTemplate tagger uses a combination of the existing taggers as components in a template. the sha256 tagger uses latest.  The default tagger, if none is specified in the skaffold.", "robots": "index, follow", "og:url": "https://skaffold.dev/docs/taggers/", "og:type": "article", "article:section": "docs", "twitter:description": "Skaffold supports multiple taggers or tag policies for tagging images:\n the gitCommit tagger uses git commits/references. the inputDigest tagger uses a digest of the artifact source files. the envTemplate tagger uses environment variables. the dateTime tagger uses current date and time, with a configurable pattern. the customTemplate tagger uses a combination of the existing taggers as components in a template. the sha256 tagger uses latest.  The default tagger, if none is specified in the skaffold.", "title": "Tag | Skaffold", "twitter:card": "summary", "ogTitle": "Tag", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:site_name": "Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "language": "en", "scrapeId": "663ffc81-58de-4575-8e32-97c766f7e325", "sourceURL": "https://skaffold.dev/docs/taggers", "url": "https://skaffold.dev/docs/taggers/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I example in skaffold?\n\nAssistant: To example in skaffold, here's what you do:\n```yaml\nbuild:\n  tagPolicy:\n    envTemplate:\n      template: \"{{.FOO}}\"\n  artifacts:\n  - image: gcr.io/k8s-skaffold/example\n```\n\nSuppose the value of the `FOO` environment variable is `v1`, the image built will be `gcr.io/k8s-skaffold/example:v1`..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/taggers", "title": "Skaffold Tagging Policies", "description": "This page covers the various tagging policies supported by Skaffold for tagging images, including configuration examples and details on how each tagger works.", "has_code_examples": true, "has_best_practices": true, "section_count": 13, "timestamp": "2025-03-01 03:41:09", "type": "section_detail", "page_metadata": {"favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:title": "Tag", "description": "Skaffold supports multiple taggers or tag policies for tagging images:\n\nthe gitCommit tagger uses git commits/references.\nthe inputDigest tagger uses …", "ogUrl": "https://skaffold.dev/docs/taggers/", "ogSiteName": "Skaffold", "generator": "Hugo 0.99.1", "og:description": "Skaffold supports multiple taggers or tag policies for tagging images:\n the gitCommit tagger uses git commits/references. the inputDigest tagger uses a digest of the artifact source files. the envTemplate tagger uses environment variables. the dateTime tagger uses current date and time, with a configurable pattern. the customTemplate tagger uses a combination of the existing taggers as components in a template. the sha256 tagger uses latest.  The default tagger, if none is specified in the skaffold.", "twitter:title": "Tag", "ogDescription": "Skaffold supports multiple taggers or tag policies for tagging images:\n the gitCommit tagger uses git commits/references. the inputDigest tagger uses a digest of the artifact source files. the envTemplate tagger uses environment variables. the dateTime tagger uses current date and time, with a configurable pattern. the customTemplate tagger uses a combination of the existing taggers as components in a template. the sha256 tagger uses latest.  The default tagger, if none is specified in the skaffold.", "robots": "index, follow", "og:url": "https://skaffold.dev/docs/taggers/", "og:type": "article", "article:section": "docs", "twitter:description": "Skaffold supports multiple taggers or tag policies for tagging images:\n the gitCommit tagger uses git commits/references. the inputDigest tagger uses a digest of the artifact source files. the envTemplate tagger uses environment variables. the dateTime tagger uses current date and time, with a configurable pattern. the customTemplate tagger uses a combination of the existing taggers as components in a template. the sha256 tagger uses latest.  The default tagger, if none is specified in the skaffold.", "title": "Tag | Skaffold", "twitter:card": "summary", "ogTitle": "Tag", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:site_name": "Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "language": "en", "scrapeId": "663ffc81-58de-4575-8e32-97c766f7e325", "sourceURL": "https://skaffold.dev/docs/taggers", "url": "https://skaffold.dev/docs/taggers/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I configuration in skaffold?\n\nAssistant: To configuration in skaffold, here's what you do:\nThe tag template uses the [Go Programming Language Syntax](https://golang.org/pkg/text/template/).\nAs showcased in the example, `envTemplate` tag policy features one **required** parameter, `template`, which is the tag template to use. To learn more about templating support in Skaffold.yaml see [Templated fields](https://skaffold.dev/docs/environment/templating/).\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/taggers", "title": "Skaffold Tagging Policies", "description": "This page covers the various tagging policies supported by Skaffold for tagging images, including configuration examples and details on how each tagger works.", "has_code_examples": true, "has_best_practices": true, "section_count": 13, "timestamp": "2025-03-01 03:41:09", "type": "section_detail", "page_metadata": {"favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:title": "Tag", "description": "Skaffold supports multiple taggers or tag policies for tagging images:\n\nthe gitCommit tagger uses git commits/references.\nthe inputDigest tagger uses …", "ogUrl": "https://skaffold.dev/docs/taggers/", "ogSiteName": "Skaffold", "generator": "Hugo 0.99.1", "og:description": "Skaffold supports multiple taggers or tag policies for tagging images:\n the gitCommit tagger uses git commits/references. the inputDigest tagger uses a digest of the artifact source files. the envTemplate tagger uses environment variables. the dateTime tagger uses current date and time, with a configurable pattern. the customTemplate tagger uses a combination of the existing taggers as components in a template. the sha256 tagger uses latest.  The default tagger, if none is specified in the skaffold.", "twitter:title": "Tag", "ogDescription": "Skaffold supports multiple taggers or tag policies for tagging images:\n the gitCommit tagger uses git commits/references. the inputDigest tagger uses a digest of the artifact source files. the envTemplate tagger uses environment variables. the dateTime tagger uses current date and time, with a configurable pattern. the customTemplate tagger uses a combination of the existing taggers as components in a template. the sha256 tagger uses latest.  The default tagger, if none is specified in the skaffold.", "robots": "index, follow", "og:url": "https://skaffold.dev/docs/taggers/", "og:type": "article", "article:section": "docs", "twitter:description": "Skaffold supports multiple taggers or tag policies for tagging images:\n the gitCommit tagger uses git commits/references. the inputDigest tagger uses a digest of the artifact source files. the envTemplate tagger uses environment variables. the dateTime tagger uses current date and time, with a configurable pattern. the customTemplate tagger uses a combination of the existing taggers as components in a template. the sha256 tagger uses latest.  The default tagger, if none is specified in the skaffold.", "title": "Tag | Skaffold", "twitter:card": "summary", "ogTitle": "Tag", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:site_name": "Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "language": "en", "scrapeId": "663ffc81-58de-4575-8e32-97c766f7e325", "sourceURL": "https://skaffold.dev/docs/taggers", "url": "https://skaffold.dev/docs/taggers/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you give me some code examples for Skaffold Tagging Policies in skaffold?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Example of `gitCommit` tag policy**:\n\n```yaml\n```yaml\nbuild:\n  tagPolicy:\n    gitCommit: {}\n  artifacts:\n  - image: gcr.io/k8s-skaffold/example\n```\n```\n\nThis snippet shows you how to example of `gitcommit` tag policy, which is an important aspect of skaffold tagging policies.\n\n**Example of `inputDigest` tag policy**:\n\n```yaml\n```yaml\nbuild:\n  tagPolicy:\n    inputDigest: {}\n  artifacts:\n  - image: gcr.io/k8s-skaffold/example\n```\n```\n\nThis snippet shows you how to example of `inputdigest` tag policy, which is an important aspect of skaffold tagging policies.\n\n**Example of `envTemplate` tag policy**:\n\n```yaml\n```yaml\nbuild:\n  tagPolicy:\n    envTemplate:\n      template: \"{{.FOO}}\"\n  artifacts:\n  - image: gcr.io/k8s-skaffold/example\n```\n```\n\nThis snippet shows you how to example of `envtemplate` tag policy, which is an important aspect of skaffold tagging policies.\n\n**Example of `dateTime` tag policy**:\n\n```yaml\n```yaml\nbuild:\n  tagPolicy:\n    dateTime:\n      format: \"2006-01-02_15-04-05.999_MST\"\n      timezone: \"Local\"\n  artifacts:\n  - image: gcr.io/k8s-skaffold/example\n```\n```\n\nThis snippet shows you how to example of `datetime` tag policy, which is an important aspect of skaffold tagging policies.\n\n**Example of `customTemplate` tag policy**:\n\n```yaml\n```yaml\nbuild:\n  tagPolicy:\n    customTemplate:\n      template: \"{{.FOO}}_{{.BAR}}\"\n      components:\n      - name: FOO\n        dateTime:\n          format: \"2006-01-02\"\n          timezone: \"UTC\"\n      - name: BAR\n        gitCommit:\n          variant: AbbrevCommitSha\n  artifacts:\n  - image: gcr.io/k8s-skaffold/example\n```\n```\n\nThis snippet shows you how to example of `customtemplate` tag policy, which is an important aspect of skaffold tagging policies.\n\n**Example of `sha256` tag policy**:\n\n```yaml\n```yaml\nbuild:\n  tagPolicy:\n    sha256: {}\n  artifacts:\n  - image: gcr.io/k8s-skaffold/example\n```\n```\n\nThis snippet shows you how to example of `sha256` tag policy, which is an important aspect of skaffold tagging policies.\n\n", "metadata": {"source_url": "https://skaffold.dev/docs/taggers", "title": "Skaffold Tagging Policies", "description": "This page covers the various tagging policies supported by Skaffold for tagging images, including configuration examples and details on how each tagger works.", "has_code_examples": true, "has_best_practices": true, "section_count": 13, "timestamp": "2025-03-01 03:41:09", "type": "code_examples", "page_metadata": {"favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:title": "Tag", "description": "Skaffold supports multiple taggers or tag policies for tagging images:\n\nthe gitCommit tagger uses git commits/references.\nthe inputDigest tagger uses …", "ogUrl": "https://skaffold.dev/docs/taggers/", "ogSiteName": "Skaffold", "generator": "Hugo 0.99.1", "og:description": "Skaffold supports multiple taggers or tag policies for tagging images:\n the gitCommit tagger uses git commits/references. the inputDigest tagger uses a digest of the artifact source files. the envTemplate tagger uses environment variables. the dateTime tagger uses current date and time, with a configurable pattern. the customTemplate tagger uses a combination of the existing taggers as components in a template. the sha256 tagger uses latest.  The default tagger, if none is specified in the skaffold.", "twitter:title": "Tag", "ogDescription": "Skaffold supports multiple taggers or tag policies for tagging images:\n the gitCommit tagger uses git commits/references. the inputDigest tagger uses a digest of the artifact source files. the envTemplate tagger uses environment variables. the dateTime tagger uses current date and time, with a configurable pattern. the customTemplate tagger uses a combination of the existing taggers as components in a template. the sha256 tagger uses latest.  The default tagger, if none is specified in the skaffold.", "robots": "index, follow", "og:url": "https://skaffold.dev/docs/taggers/", "og:type": "article", "article:section": "docs", "twitter:description": "Skaffold supports multiple taggers or tag policies for tagging images:\n the gitCommit tagger uses git commits/references. the inputDigest tagger uses a digest of the artifact source files. the envTemplate tagger uses environment variables. the dateTime tagger uses current date and time, with a configurable pattern. the customTemplate tagger uses a combination of the existing taggers as components in a template. the sha256 tagger uses latest.  The default tagger, if none is specified in the skaffold.", "title": "Tag | Skaffold", "twitter:card": "summary", "ogTitle": "Tag", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:site_name": "Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "language": "en", "scrapeId": "663ffc81-58de-4575-8e32-97c766f7e325", "sourceURL": "https://skaffold.dev/docs/taggers", "url": "https://skaffold.dev/docs/taggers/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: What are some tips for using Skaffold Tagging Policies in skaffold effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nThe default tagger is `gitCommit` if none is specified in the `skaffold.yaml`.\n\nTags can be overridden with a fixed tag using the `--tag` option on the command-line.\n\nSkaffold never references images just by their tags because those tags are mutable and can lead to outdated versions being used.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://skaffold.dev/docs/taggers", "title": "Skaffold Tagging Policies", "description": "This page covers the various tagging policies supported by Skaffold for tagging images, including configuration examples and details on how each tagger works.", "has_code_examples": true, "has_best_practices": true, "section_count": 13, "timestamp": "2025-03-01 03:41:09", "type": "best_practices", "page_metadata": {"favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:title": "Tag", "description": "Skaffold supports multiple taggers or tag policies for tagging images:\n\nthe gitCommit tagger uses git commits/references.\nthe inputDigest tagger uses …", "ogUrl": "https://skaffold.dev/docs/taggers/", "ogSiteName": "Skaffold", "generator": "Hugo 0.99.1", "og:description": "Skaffold supports multiple taggers or tag policies for tagging images:\n the gitCommit tagger uses git commits/references. the inputDigest tagger uses a digest of the artifact source files. the envTemplate tagger uses environment variables. the dateTime tagger uses current date and time, with a configurable pattern. the customTemplate tagger uses a combination of the existing taggers as components in a template. the sha256 tagger uses latest.  The default tagger, if none is specified in the skaffold.", "twitter:title": "Tag", "ogDescription": "Skaffold supports multiple taggers or tag policies for tagging images:\n the gitCommit tagger uses git commits/references. the inputDigest tagger uses a digest of the artifact source files. the envTemplate tagger uses environment variables. the dateTime tagger uses current date and time, with a configurable pattern. the customTemplate tagger uses a combination of the existing taggers as components in a template. the sha256 tagger uses latest.  The default tagger, if none is specified in the skaffold.", "robots": "index, follow", "og:url": "https://skaffold.dev/docs/taggers/", "og:type": "article", "article:section": "docs", "twitter:description": "Skaffold supports multiple taggers or tag policies for tagging images:\n the gitCommit tagger uses git commits/references. the inputDigest tagger uses a digest of the artifact source files. the envTemplate tagger uses environment variables. the dateTime tagger uses current date and time, with a configurable pattern. the customTemplate tagger uses a combination of the existing taggers as components in a template. the sha256 tagger uses latest.  The default tagger, if none is specified in the skaffold.", "title": "Tag | Skaffold", "twitter:card": "summary", "ogTitle": "Tag", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:site_name": "Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "language": "en", "scrapeId": "663ffc81-58de-4575-8e32-97c766f7e325", "sourceURL": "https://skaffold.dev/docs/taggers", "url": "https://skaffold.dev/docs/taggers/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what File Sync is in skaffold?\n\nAssistant: Sure, I'd be happy to explain File Sync in skaffold.\n\n# File Sync\n\nSkaffold supports copying changed files to a deployed container to avoid the need to rebuild, redeploy, and restart the corresponding pod.Here's a quick rundown of what this is about:\n\n## Overview\n\nSkaffold supports copying changed files to a deployed container so as to avoid the need to rebuild, redeploy, and restart the corresponding pod. The file copying is enabled by adding a `sync` section with _sync rules_ to the `artifact` in the `skaffold.yaml`. Under the hood, Skaffold creates a tar file with changed files that match the sync rules. This tar file is sent to and extracted on the corresponding containers.\n\n## Types of Sync\n\nMultiple types of sync are supported by Skaffold:\n\n- `manual`: The user must specify both the files in their local workspace and the destination in the running container. This sync mode is supported by every type of artifact.\n\n- `infer`: The destinations for each changed file is inferred from the builder. The docker and kaniko builders examine instructions in a Dockerfile. This inference is also supported for custom artifacts that **explicitly declare a dependency on a Dockerfile.** The ko builder can sync static content using this sync mode.\n\n- `auto`: Skaffold automatically configures the sync. This mode is only supported by Jib and Buildpacks artifacts. Auto sync mode is enabled by default for Buildpacks artifacts.\n\n## Manual sync mode\n\nA manual sync rule must specify the `src` and `dest` field. The `src` field is a glob pattern to match files relative to the artifact _context_ directory, which may contain `**` to match nested files. The `dest` field is the absolute or relative destination path in the container. If the destination is a relative path, an absolute path will be inferred by prepending the path with the container’s `WORKDIR`. By default, matched files are transplanted with their whole directory hierarchy below the artifact context directory onto the destination. The optional `strip` field can cut off some levels from the directory hierarchy.\n\n## Example of Manual Sync\n\nThe following example showcases manual filesync:\n\n```yaml\nbuild:\n  artifacts:\n    - image: gcr.io/k8s-skaffold/node-example\n      context: node\n      sync:\n        manual:\n          # sync a single file into the `/etc` folder\n          - src: '.filebaserc'\n            dest: /etc\n\n          # sync files directly below `static-html` into `static/`\n          - src: 'static-html/*.html'\n            dest: static\n\n          # sync any `png` file into the assets folder\n          - src: '**/*.png'\n            dest: assets\n\n          # sync all `md` files from `content/en` into `content`\n          - src: 'content/en/**/*.md'\n            dest: content\n            strip: 'content/en/'\n```\n\n- The first rule synchronizes the file `.filebaserc` to the `/etc` folder in the container.\n- The second rule synchronizes all `html` files in the `static-html` folder into the `<WORKDIR>/static` folder in the container. Note that this pattern does not match files in sub-folders below `static-html` (e.g. `static-html/a.html` but not `static-html/sub/a.html`).\n- The third rule synchronizes all `png` files from any sub-folder into the `assets` folder on the container. For example, `img.png` ↷ `assets/img.png` or `sub/img.png` ↷ `assets/sub/img.png`.\n- The last rule synchronizes all `md` files below the `content/en` directory into the `content` folder on the container. The `strip` directive ensures that only the directory hierarchy below `content/en` is re-created at the destination. For example, `content/en/index.md` ↷ `content/index.md` or `content/en/sub/index.md` ↷ `content/sub/index.md`.\n\n## Inferred sync mode\n\nFor Docker artifacts, Skaffold knows how to infer the desired destination from the artifact’s `Dockerfile` by examining the `ADD` and `COPY` instructions. For Ko artifacts, Skaffold infers the destination from the structure of your codebase. To enable syncing, you specify which files are eligible for syncing in the sync rules. The sync rules for inferred sync mode is a list of glob patterns.\n\n## Example of Inferred Sync\n\nThe following example showcases this filesync mode for Docker artifacts:\n\nGiven this Dockerfile:\n\n```Dockerfile\nFROM hugo\n\nADD .filebaserc /etc/\nADD assets assets/\nCOPY static-html static/\nCOPY content/en content/\n```\n\nAnd a `skaffold.yaml` with the following sync configuration:\n\n```yaml\nbuild:\n  artifacts:\n    - image: gcr.io/k8s-skaffold/node-example\n      context: node\n      sync:\n        infer:\n        - '.filebaserc'\n        - 'static-html/*.html'\n        - '**/*.png'\n        - 'content/en/**/*.md'\n```\n\n- The first rule synchronizes the file `.filebaserc` to `/etc/.filebaserc` in the container.\n- The second rule synchronizes all `html` files in the `static-html` folder into the `<WORKDIR>/static` folder in the container. Note that this pattern does not match files in sub-folders below `static-html` (e.g. `static-html/a.html` but not `static-html/sub/a.html`).\n- The third rule synchronizes any `png`. For example if `assest/img.png` ↷ `assets/img.png` or `static-html/imgs/demo.png` ↷ `static/imgs/demo.png`.\n- The last rule enables synchronization for all `md` files below the `content/en`. For example, `content/en/sub/index.md` ↷ `content/sub/index.md` but _not_ `content/en_GB/index.md`.\n\n## Auto sync mode\n\nIn auto sync mode, Skaffold automatically generates sync rules for known file types. Changes to other file types will result in a complete rebuild.\n\n## Buildpacks\n\nSkaffold works with Cloud Native Buildpacks builders to automatically sync and relaunch applications on changes to certain types of files. The GCP Buildpacks builder ( [gcr.io/buildpacks/builder:v1](https://github.com/GoogleCloudPlatform/buildpacks)) supports syncing the following types of source files:\n\n- Go: \\*.go\n- Java: \\*.java, \\*.kt, \\*.scala, \\*.groovy, \\*.clj\n- NodeJS: \\*.js, \\*.mjs, \\*.coffee, \\*.litcoffee, \\*.json\n\nThe GCP Buildpacks builder will detect the changed files and automatically rebuild and relaunch the application. Changes to other file types trigger an image rebuild.\n\n## Disable Auto Sync for Buildpacks\n\nTo disable auto sync, set `sync.auto = false`:\n\n```\nartifacts:\n- image: xxx\n  buildpacks:\n    builder: gcr.io/buildpacks/builder:v1\n  sync:\n    auto: false   # disable buildpacks auto-sync\n```\n\n\n## How it works\n\nSkaffold requires special collaboration from buildpacks for the `auto` sync to work. Cloud Native Buildpacks set a `io.buildpacks.build.metadata` label on the images they create. This labels points to json description of the [Bill-of-Materials, aka BOM](https://github.com/buildpacks/spec/blob/main/buildpack.md#bill-of-materials-toml) of the build. In the BOM, under the `metadata.devmode.sync` key, Buildpacks that want to collaborate with Skaffold have to output the sync rules based on their exploration of the source and the build process they had to apply to it. Those sync rules will then be used by Skaffold without the user having to configure them manually.\n\n## Jib\n\nJib integration with Skaffold allows for zero-config `auto` sync. In this mode, Jib will sync your class files, resource files, and Jib’s “extra directories” files to a remote container as changes are made. It can only be used with Jib in the default build mode (exploded) for non-WAR applications. It was primarily designed around [Spring Boot Developer Tools](https://docs.spring.io/spring-boot/docs/current/reference/html/using-spring-boot.html#using-boot-devtools), but can work with any embedded server that can reload/restart.\n\n## Limitations\n\nFile sync has some limitations:\n\n- File sync can only update files that can be modified by the container’s configured User ID.\n- File sync requires the `tar` command to be available in the container.\n- Only local source files can be synchronized: files created by the builder will not be copied.\n- It is currently not allowed to mix `manual`, `infer` and `auto` sync modes. If you have a use-case for this, please let us know!\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/filesync", "title": "File Sync", "description": "Skaffold supports copying changed files to a deployed container to avoid the need to rebuild, redeploy, and restart the corresponding pod.", "has_code_examples": true, "has_best_practices": true, "section_count": 12, "timestamp": "2025-03-01 03:41:42", "type": "overview", "page_metadata": {"robots": "index, follow", "og:type": "article", "description": "Skaffold supports copying changed files to a deployed container so as to avoid the need to rebuild, redeploy, and restart the corresponding pod.\nThe …", "title": "File Sync | Skaffold", "og:title": "File Sync", "generator": "Hugo 0.99.1", "twitter:card": "summary", "ogSiteName": "Skaffold", "twitter:description": "Skaffold supports copying changed files to a deployed container so as to avoid the need to rebuild, redeploy, and restart the corresponding pod. The file copying is enabled by adding a sync section with sync rules to the artifact in the skaffold.yaml. Under the hood, Skaffold creates a tar file with changed files that match the sync rules. This tar file is sent to and extracted on the corresponding containers.", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:url": "https://skaffold.dev/docs/filesync/", "twitter:title": "File Sync", "og:site_name": "Skaffold", "ogTitle": "File Sync", "language": "en", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:description": "Skaffold supports copying changed files to a deployed container so as to avoid the need to rebuild, redeploy, and restart the corresponding pod. The file copying is enabled by adding a sync section with sync rules to the artifact in the skaffold.yaml. Under the hood, Skaffold creates a tar file with changed files that match the sync rules. This tar file is sent to and extracted on the corresponding containers.", "ogUrl": "https://skaffold.dev/docs/filesync/", "article:section": "docs", "article:modified_time": "2025-01-23T10:14:58-05:00", "ogDescription": "Skaffold supports copying changed files to a deployed container so as to avoid the need to rebuild, redeploy, and restart the corresponding pod. The file copying is enabled by adding a sync section with sync rules to the artifact in the skaffold.yaml. Under the hood, Skaffold creates a tar file with changed files that match the sync rules. This tar file is sent to and extracted on the corresponding containers.", "modifiedTime": "2025-01-23T10:14:58-05:00", "scrapeId": "427736c8-32f2-4b3d-8c5b-c2174f8c4046", "sourceURL": "https://skaffold.dev/docs/filesync", "url": "https://skaffold.dev/docs/filesync/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I overview in skaffold?\n\nAssistant: To overview in skaffold, here's what you do:\nSkaffold supports copying changed files to a deployed container so as to avoid the need to rebuild, redeploy, and restart the corresponding pod. The file copying is enabled by adding a `sync` section with _sync rules_ to the `artifact` in the `skaffold.yaml`. Under the hood, Skaffold creates a tar file with changed files that match the sync rules. This tar file is sent to and extracted on the corresponding containers..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/filesync", "title": "File Sync", "description": "Skaffold supports copying changed files to a deployed container to avoid the need to rebuild, redeploy, and restart the corresponding pod.", "has_code_examples": true, "has_best_practices": true, "section_count": 12, "timestamp": "2025-03-01 03:41:42", "type": "section_detail", "page_metadata": {"robots": "index, follow", "og:type": "article", "description": "Skaffold supports copying changed files to a deployed container so as to avoid the need to rebuild, redeploy, and restart the corresponding pod.\nThe …", "title": "File Sync | Skaffold", "og:title": "File Sync", "generator": "Hugo 0.99.1", "twitter:card": "summary", "ogSiteName": "Skaffold", "twitter:description": "Skaffold supports copying changed files to a deployed container so as to avoid the need to rebuild, redeploy, and restart the corresponding pod. The file copying is enabled by adding a sync section with sync rules to the artifact in the skaffold.yaml. Under the hood, Skaffold creates a tar file with changed files that match the sync rules. This tar file is sent to and extracted on the corresponding containers.", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:url": "https://skaffold.dev/docs/filesync/", "twitter:title": "File Sync", "og:site_name": "Skaffold", "ogTitle": "File Sync", "language": "en", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:description": "Skaffold supports copying changed files to a deployed container so as to avoid the need to rebuild, redeploy, and restart the corresponding pod. The file copying is enabled by adding a sync section with sync rules to the artifact in the skaffold.yaml. Under the hood, Skaffold creates a tar file with changed files that match the sync rules. This tar file is sent to and extracted on the corresponding containers.", "ogUrl": "https://skaffold.dev/docs/filesync/", "article:section": "docs", "article:modified_time": "2025-01-23T10:14:58-05:00", "ogDescription": "Skaffold supports copying changed files to a deployed container so as to avoid the need to rebuild, redeploy, and restart the corresponding pod. The file copying is enabled by adding a sync section with sync rules to the artifact in the skaffold.yaml. Under the hood, Skaffold creates a tar file with changed files that match the sync rules. This tar file is sent to and extracted on the corresponding containers.", "modifiedTime": "2025-01-23T10:14:58-05:00", "scrapeId": "427736c8-32f2-4b3d-8c5b-c2174f8c4046", "sourceURL": "https://skaffold.dev/docs/filesync", "url": "https://skaffold.dev/docs/filesync/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I types of sync in skaffold?\n\nAssistant: To types of sync in skaffold, here's what you do:\nMultiple types of sync are supported by Skaffold:\n\n- `manual`: The user must specify both the files in their local workspace and the destination in the running container. This sync mode is supported by every type of artifact.\n\n- `infer`: The destinations for each changed file is inferred from the builder. The docker and kaniko builders examine instructions in a Dockerfile. This inference is also supported for custom artifacts that **explicitly declare a dependency on a Dockerfile.** The ko builder can sync static content using this sync mode.\n\n- `auto`: Skaffold automatically configures the sync. This mode is only supported by Jib and Buildpacks artifacts. Auto sync mode is enabled by default for Buildpacks artifacts..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/filesync", "title": "File Sync", "description": "Skaffold supports copying changed files to a deployed container to avoid the need to rebuild, redeploy, and restart the corresponding pod.", "has_code_examples": true, "has_best_practices": true, "section_count": 12, "timestamp": "2025-03-01 03:41:42", "type": "section_detail", "page_metadata": {"robots": "index, follow", "og:type": "article", "description": "Skaffold supports copying changed files to a deployed container so as to avoid the need to rebuild, redeploy, and restart the corresponding pod.\nThe …", "title": "File Sync | Skaffold", "og:title": "File Sync", "generator": "Hugo 0.99.1", "twitter:card": "summary", "ogSiteName": "Skaffold", "twitter:description": "Skaffold supports copying changed files to a deployed container so as to avoid the need to rebuild, redeploy, and restart the corresponding pod. The file copying is enabled by adding a sync section with sync rules to the artifact in the skaffold.yaml. Under the hood, Skaffold creates a tar file with changed files that match the sync rules. This tar file is sent to and extracted on the corresponding containers.", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:url": "https://skaffold.dev/docs/filesync/", "twitter:title": "File Sync", "og:site_name": "Skaffold", "ogTitle": "File Sync", "language": "en", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:description": "Skaffold supports copying changed files to a deployed container so as to avoid the need to rebuild, redeploy, and restart the corresponding pod. The file copying is enabled by adding a sync section with sync rules to the artifact in the skaffold.yaml. Under the hood, Skaffold creates a tar file with changed files that match the sync rules. This tar file is sent to and extracted on the corresponding containers.", "ogUrl": "https://skaffold.dev/docs/filesync/", "article:section": "docs", "article:modified_time": "2025-01-23T10:14:58-05:00", "ogDescription": "Skaffold supports copying changed files to a deployed container so as to avoid the need to rebuild, redeploy, and restart the corresponding pod. The file copying is enabled by adding a sync section with sync rules to the artifact in the skaffold.yaml. Under the hood, Skaffold creates a tar file with changed files that match the sync rules. This tar file is sent to and extracted on the corresponding containers.", "modifiedTime": "2025-01-23T10:14:58-05:00", "scrapeId": "427736c8-32f2-4b3d-8c5b-c2174f8c4046", "sourceURL": "https://skaffold.dev/docs/filesync", "url": "https://skaffold.dev/docs/filesync/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I manual sync mode in skaffold?\n\nAssistant: To manual sync mode in skaffold, here's what you do:\nA manual sync rule must specify the `src` and `dest` field. The `src` field is a glob pattern to match files relative to the artifact _context_ directory, which may contain `**` to match nested files. The `dest` field is the absolute or relative destination path in the container. If the destination is a relative path, an absolute path will be inferred by prepending the path with the container’s `WORKDIR`. By default, matched files are transplanted with their whole directory hierarchy below the artifact context directory onto the destination. The optional `strip` field can cut off some levels from the directory hierarchy..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/filesync", "title": "File Sync", "description": "Skaffold supports copying changed files to a deployed container to avoid the need to rebuild, redeploy, and restart the corresponding pod.", "has_code_examples": true, "has_best_practices": true, "section_count": 12, "timestamp": "2025-03-01 03:41:42", "type": "section_detail", "page_metadata": {"robots": "index, follow", "og:type": "article", "description": "Skaffold supports copying changed files to a deployed container so as to avoid the need to rebuild, redeploy, and restart the corresponding pod.\nThe …", "title": "File Sync | Skaffold", "og:title": "File Sync", "generator": "Hugo 0.99.1", "twitter:card": "summary", "ogSiteName": "Skaffold", "twitter:description": "Skaffold supports copying changed files to a deployed container so as to avoid the need to rebuild, redeploy, and restart the corresponding pod. The file copying is enabled by adding a sync section with sync rules to the artifact in the skaffold.yaml. Under the hood, Skaffold creates a tar file with changed files that match the sync rules. This tar file is sent to and extracted on the corresponding containers.", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:url": "https://skaffold.dev/docs/filesync/", "twitter:title": "File Sync", "og:site_name": "Skaffold", "ogTitle": "File Sync", "language": "en", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:description": "Skaffold supports copying changed files to a deployed container so as to avoid the need to rebuild, redeploy, and restart the corresponding pod. The file copying is enabled by adding a sync section with sync rules to the artifact in the skaffold.yaml. Under the hood, Skaffold creates a tar file with changed files that match the sync rules. This tar file is sent to and extracted on the corresponding containers.", "ogUrl": "https://skaffold.dev/docs/filesync/", "article:section": "docs", "article:modified_time": "2025-01-23T10:14:58-05:00", "ogDescription": "Skaffold supports copying changed files to a deployed container so as to avoid the need to rebuild, redeploy, and restart the corresponding pod. The file copying is enabled by adding a sync section with sync rules to the artifact in the skaffold.yaml. Under the hood, Skaffold creates a tar file with changed files that match the sync rules. This tar file is sent to and extracted on the corresponding containers.", "modifiedTime": "2025-01-23T10:14:58-05:00", "scrapeId": "427736c8-32f2-4b3d-8c5b-c2174f8c4046", "sourceURL": "https://skaffold.dev/docs/filesync", "url": "https://skaffold.dev/docs/filesync/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I example of manual sync in skaffold?\n\nAssistant: To example of manual sync in skaffold, here's what you do:\nThe following example showcases manual filesync:\n\n```yaml\nbuild:\n  artifacts:\n    - image: gcr.io/k8s-skaffold/node-example\n      context: node\n      sync:\n        manual:\n          # sync a single file into the `/etc` folder\n          - src: '.filebaserc'\n            dest: /etc\n\n          # sync files directly below `static-html` into `static/`\n          - src: 'static-html/*.html'\n            dest: static\n\n          # sync any `png` file into the assets folder\n          - src: '**/*.png'\n            dest: assets\n\n          # sync all `md` files from `content/en` into `content`\n          - src: 'content/en/**/*.md'\n            dest: content\n            strip: 'content/en/'\n```\n\n- The first rule synchronizes the file `.filebaserc` to the `/etc` folder in the container.\n- The second rule synchronizes all `html` files in the `static-html` folder into the `<WORKDIR>/static` folder in the container. Note that this pattern does not match files in sub-folders below `static-html` (e.g. `static-html/a.html` but not `static-html/sub/a.html`).\n- The third rule synchronizes all `png` files from any sub-folder into the `assets` folder on the container. For example, `img.png` ↷ `assets/img.png` or `sub/img.png` ↷ `assets/sub/img.png`.\n- The last rule synchronizes all `md` files below the `content/en` directory into the `content` folder on the container. The `strip` directive ensures that only the directory hierarchy below `content/en` is re-created at the destination. For example, `content/en/index.md` ↷ `content/index.md` or `content/en/sub/index.md` ↷ `content/sub/index.md`..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/filesync", "title": "File Sync", "description": "Skaffold supports copying changed files to a deployed container to avoid the need to rebuild, redeploy, and restart the corresponding pod.", "has_code_examples": true, "has_best_practices": true, "section_count": 12, "timestamp": "2025-03-01 03:41:42", "type": "section_detail", "page_metadata": {"robots": "index, follow", "og:type": "article", "description": "Skaffold supports copying changed files to a deployed container so as to avoid the need to rebuild, redeploy, and restart the corresponding pod.\nThe …", "title": "File Sync | Skaffold", "og:title": "File Sync", "generator": "Hugo 0.99.1", "twitter:card": "summary", "ogSiteName": "Skaffold", "twitter:description": "Skaffold supports copying changed files to a deployed container so as to avoid the need to rebuild, redeploy, and restart the corresponding pod. The file copying is enabled by adding a sync section with sync rules to the artifact in the skaffold.yaml. Under the hood, Skaffold creates a tar file with changed files that match the sync rules. This tar file is sent to and extracted on the corresponding containers.", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:url": "https://skaffold.dev/docs/filesync/", "twitter:title": "File Sync", "og:site_name": "Skaffold", "ogTitle": "File Sync", "language": "en", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:description": "Skaffold supports copying changed files to a deployed container so as to avoid the need to rebuild, redeploy, and restart the corresponding pod. The file copying is enabled by adding a sync section with sync rules to the artifact in the skaffold.yaml. Under the hood, Skaffold creates a tar file with changed files that match the sync rules. This tar file is sent to and extracted on the corresponding containers.", "ogUrl": "https://skaffold.dev/docs/filesync/", "article:section": "docs", "article:modified_time": "2025-01-23T10:14:58-05:00", "ogDescription": "Skaffold supports copying changed files to a deployed container so as to avoid the need to rebuild, redeploy, and restart the corresponding pod. The file copying is enabled by adding a sync section with sync rules to the artifact in the skaffold.yaml. Under the hood, Skaffold creates a tar file with changed files that match the sync rules. This tar file is sent to and extracted on the corresponding containers.", "modifiedTime": "2025-01-23T10:14:58-05:00", "scrapeId": "427736c8-32f2-4b3d-8c5b-c2174f8c4046", "sourceURL": "https://skaffold.dev/docs/filesync", "url": "https://skaffold.dev/docs/filesync/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I inferred sync mode in skaffold?\n\nAssistant: To inferred sync mode in skaffold, here's what you do:\nFor Docker artifacts, Skaffold knows how to infer the desired destination from the artifact’s `Dockerfile` by examining the `ADD` and `COPY` instructions. For Ko artifacts, Skaffold infers the destination from the structure of your codebase. To enable syncing, you specify which files are eligible for syncing in the sync rules. The sync rules for inferred sync mode is a list of glob patterns..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/filesync", "title": "File Sync", "description": "Skaffold supports copying changed files to a deployed container to avoid the need to rebuild, redeploy, and restart the corresponding pod.", "has_code_examples": true, "has_best_practices": true, "section_count": 12, "timestamp": "2025-03-01 03:41:42", "type": "section_detail", "page_metadata": {"robots": "index, follow", "og:type": "article", "description": "Skaffold supports copying changed files to a deployed container so as to avoid the need to rebuild, redeploy, and restart the corresponding pod.\nThe …", "title": "File Sync | Skaffold", "og:title": "File Sync", "generator": "Hugo 0.99.1", "twitter:card": "summary", "ogSiteName": "Skaffold", "twitter:description": "Skaffold supports copying changed files to a deployed container so as to avoid the need to rebuild, redeploy, and restart the corresponding pod. The file copying is enabled by adding a sync section with sync rules to the artifact in the skaffold.yaml. Under the hood, Skaffold creates a tar file with changed files that match the sync rules. This tar file is sent to and extracted on the corresponding containers.", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:url": "https://skaffold.dev/docs/filesync/", "twitter:title": "File Sync", "og:site_name": "Skaffold", "ogTitle": "File Sync", "language": "en", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:description": "Skaffold supports copying changed files to a deployed container so as to avoid the need to rebuild, redeploy, and restart the corresponding pod. The file copying is enabled by adding a sync section with sync rules to the artifact in the skaffold.yaml. Under the hood, Skaffold creates a tar file with changed files that match the sync rules. This tar file is sent to and extracted on the corresponding containers.", "ogUrl": "https://skaffold.dev/docs/filesync/", "article:section": "docs", "article:modified_time": "2025-01-23T10:14:58-05:00", "ogDescription": "Skaffold supports copying changed files to a deployed container so as to avoid the need to rebuild, redeploy, and restart the corresponding pod. The file copying is enabled by adding a sync section with sync rules to the artifact in the skaffold.yaml. Under the hood, Skaffold creates a tar file with changed files that match the sync rules. This tar file is sent to and extracted on the corresponding containers.", "modifiedTime": "2025-01-23T10:14:58-05:00", "scrapeId": "427736c8-32f2-4b3d-8c5b-c2174f8c4046", "sourceURL": "https://skaffold.dev/docs/filesync", "url": "https://skaffold.dev/docs/filesync/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I example of inferred sync in skaffold?\n\nAssistant: To example of inferred sync in skaffold, here's what you do:\nThe following example showcases this filesync mode for Docker artifacts:\n\nGiven this Dockerfile:\n\n```Dockerfile\nFROM hugo\n\nADD .filebaserc /etc/\nADD assets assets/\nCOPY static-html static/\nCOPY content/en content/\n```\n\nAnd a `skaffold.yaml` with the following sync configuration:\n\n```yaml\nbuild:\n  artifacts:\n    - image: gcr.io/k8s-skaffold/node-example\n      context: node\n      sync:\n        infer:\n        - '.filebaserc'\n        - 'static-html/*.html'\n        - '**/*.png'\n        - 'content/en/**/*.md'\n```\n\n- The first rule synchronizes the file `.filebaserc` to `/etc/.filebaserc` in the container.\n- The second rule synchronizes all `html` files in the `static-html` folder into the `<WORKDIR>/static` folder in the container. Note that this pattern does not match files in sub-folders below `static-html` (e.g. `static-html/a.html` but not `static-html/sub/a.html`).\n- The third rule synchronizes any `png`. For example if `assest/img.png` ↷ `assets/img.png` or `static-html/imgs/demo.png` ↷ `static/imgs/demo.png`.\n- The last rule enables synchronization for all `md` files below the `content/en`. For example, `content/en/sub/index.md` ↷ `content/sub/index.md` but _not_ `content/en_GB/index.md`..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/filesync", "title": "File Sync", "description": "Skaffold supports copying changed files to a deployed container to avoid the need to rebuild, redeploy, and restart the corresponding pod.", "has_code_examples": true, "has_best_practices": true, "section_count": 12, "timestamp": "2025-03-01 03:41:42", "type": "section_detail", "page_metadata": {"robots": "index, follow", "og:type": "article", "description": "Skaffold supports copying changed files to a deployed container so as to avoid the need to rebuild, redeploy, and restart the corresponding pod.\nThe …", "title": "File Sync | Skaffold", "og:title": "File Sync", "generator": "Hugo 0.99.1", "twitter:card": "summary", "ogSiteName": "Skaffold", "twitter:description": "Skaffold supports copying changed files to a deployed container so as to avoid the need to rebuild, redeploy, and restart the corresponding pod. The file copying is enabled by adding a sync section with sync rules to the artifact in the skaffold.yaml. Under the hood, Skaffold creates a tar file with changed files that match the sync rules. This tar file is sent to and extracted on the corresponding containers.", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:url": "https://skaffold.dev/docs/filesync/", "twitter:title": "File Sync", "og:site_name": "Skaffold", "ogTitle": "File Sync", "language": "en", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:description": "Skaffold supports copying changed files to a deployed container so as to avoid the need to rebuild, redeploy, and restart the corresponding pod. The file copying is enabled by adding a sync section with sync rules to the artifact in the skaffold.yaml. Under the hood, Skaffold creates a tar file with changed files that match the sync rules. This tar file is sent to and extracted on the corresponding containers.", "ogUrl": "https://skaffold.dev/docs/filesync/", "article:section": "docs", "article:modified_time": "2025-01-23T10:14:58-05:00", "ogDescription": "Skaffold supports copying changed files to a deployed container so as to avoid the need to rebuild, redeploy, and restart the corresponding pod. The file copying is enabled by adding a sync section with sync rules to the artifact in the skaffold.yaml. Under the hood, Skaffold creates a tar file with changed files that match the sync rules. This tar file is sent to and extracted on the corresponding containers.", "modifiedTime": "2025-01-23T10:14:58-05:00", "scrapeId": "427736c8-32f2-4b3d-8c5b-c2174f8c4046", "sourceURL": "https://skaffold.dev/docs/filesync", "url": "https://skaffold.dev/docs/filesync/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I auto sync mode in skaffold?\n\nAssistant: To auto sync mode in skaffold, here's what you do:\nIn auto sync mode, Skaffold automatically generates sync rules for known file types. Changes to other file types will result in a complete rebuild..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/filesync", "title": "File Sync", "description": "Skaffold supports copying changed files to a deployed container to avoid the need to rebuild, redeploy, and restart the corresponding pod.", "has_code_examples": true, "has_best_practices": true, "section_count": 12, "timestamp": "2025-03-01 03:41:42", "type": "section_detail", "page_metadata": {"robots": "index, follow", "og:type": "article", "description": "Skaffold supports copying changed files to a deployed container so as to avoid the need to rebuild, redeploy, and restart the corresponding pod.\nThe …", "title": "File Sync | Skaffold", "og:title": "File Sync", "generator": "Hugo 0.99.1", "twitter:card": "summary", "ogSiteName": "Skaffold", "twitter:description": "Skaffold supports copying changed files to a deployed container so as to avoid the need to rebuild, redeploy, and restart the corresponding pod. The file copying is enabled by adding a sync section with sync rules to the artifact in the skaffold.yaml. Under the hood, Skaffold creates a tar file with changed files that match the sync rules. This tar file is sent to and extracted on the corresponding containers.", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:url": "https://skaffold.dev/docs/filesync/", "twitter:title": "File Sync", "og:site_name": "Skaffold", "ogTitle": "File Sync", "language": "en", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:description": "Skaffold supports copying changed files to a deployed container so as to avoid the need to rebuild, redeploy, and restart the corresponding pod. The file copying is enabled by adding a sync section with sync rules to the artifact in the skaffold.yaml. Under the hood, Skaffold creates a tar file with changed files that match the sync rules. This tar file is sent to and extracted on the corresponding containers.", "ogUrl": "https://skaffold.dev/docs/filesync/", "article:section": "docs", "article:modified_time": "2025-01-23T10:14:58-05:00", "ogDescription": "Skaffold supports copying changed files to a deployed container so as to avoid the need to rebuild, redeploy, and restart the corresponding pod. The file copying is enabled by adding a sync section with sync rules to the artifact in the skaffold.yaml. Under the hood, Skaffold creates a tar file with changed files that match the sync rules. This tar file is sent to and extracted on the corresponding containers.", "modifiedTime": "2025-01-23T10:14:58-05:00", "scrapeId": "427736c8-32f2-4b3d-8c5b-c2174f8c4046", "sourceURL": "https://skaffold.dev/docs/filesync", "url": "https://skaffold.dev/docs/filesync/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I buildpacks in skaffold?\n\nAssistant: To buildpacks in skaffold, here's what you do:\nSkaffold works with Cloud Native Buildpacks builders to automatically sync and relaunch applications on changes to certain types of files. The GCP Buildpacks builder ( [gcr.io/buildpacks/builder:v1](https://github.com/GoogleCloudPlatform/buildpacks)) supports syncing the following types of source files:\n\n- Go: \\*.go\n- Java: \\*.java, \\*.kt, \\*.scala, \\*.groovy, \\*.clj\n- NodeJS: \\*.js, \\*.mjs, \\*.coffee, \\*.litcoffee, \\*.json\n\nThe GCP Buildpacks builder will detect the changed files and automatically rebuild and relaunch the application. Changes to other file types trigger an image rebuild..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/filesync", "title": "File Sync", "description": "Skaffold supports copying changed files to a deployed container to avoid the need to rebuild, redeploy, and restart the corresponding pod.", "has_code_examples": true, "has_best_practices": true, "section_count": 12, "timestamp": "2025-03-01 03:41:42", "type": "section_detail", "page_metadata": {"robots": "index, follow", "og:type": "article", "description": "Skaffold supports copying changed files to a deployed container so as to avoid the need to rebuild, redeploy, and restart the corresponding pod.\nThe …", "title": "File Sync | Skaffold", "og:title": "File Sync", "generator": "Hugo 0.99.1", "twitter:card": "summary", "ogSiteName": "Skaffold", "twitter:description": "Skaffold supports copying changed files to a deployed container so as to avoid the need to rebuild, redeploy, and restart the corresponding pod. The file copying is enabled by adding a sync section with sync rules to the artifact in the skaffold.yaml. Under the hood, Skaffold creates a tar file with changed files that match the sync rules. This tar file is sent to and extracted on the corresponding containers.", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:url": "https://skaffold.dev/docs/filesync/", "twitter:title": "File Sync", "og:site_name": "Skaffold", "ogTitle": "File Sync", "language": "en", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:description": "Skaffold supports copying changed files to a deployed container so as to avoid the need to rebuild, redeploy, and restart the corresponding pod. The file copying is enabled by adding a sync section with sync rules to the artifact in the skaffold.yaml. Under the hood, Skaffold creates a tar file with changed files that match the sync rules. This tar file is sent to and extracted on the corresponding containers.", "ogUrl": "https://skaffold.dev/docs/filesync/", "article:section": "docs", "article:modified_time": "2025-01-23T10:14:58-05:00", "ogDescription": "Skaffold supports copying changed files to a deployed container so as to avoid the need to rebuild, redeploy, and restart the corresponding pod. The file copying is enabled by adding a sync section with sync rules to the artifact in the skaffold.yaml. Under the hood, Skaffold creates a tar file with changed files that match the sync rules. This tar file is sent to and extracted on the corresponding containers.", "modifiedTime": "2025-01-23T10:14:58-05:00", "scrapeId": "427736c8-32f2-4b3d-8c5b-c2174f8c4046", "sourceURL": "https://skaffold.dev/docs/filesync", "url": "https://skaffold.dev/docs/filesync/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I disable auto sync for buildpacks in skaffold?\n\nAssistant: To disable auto sync for buildpacks in skaffold, here's what you do:\nTo disable auto sync, set `sync.auto = false`:\n\n```\nartifacts:\n- image: xxx\n  buildpacks:\n    builder: gcr.io/buildpacks/builder:v1\n  sync:\n    auto: false   # disable buildpacks auto-sync\n```\n.\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/filesync", "title": "File Sync", "description": "Skaffold supports copying changed files to a deployed container to avoid the need to rebuild, redeploy, and restart the corresponding pod.", "has_code_examples": true, "has_best_practices": true, "section_count": 12, "timestamp": "2025-03-01 03:41:42", "type": "section_detail", "page_metadata": {"robots": "index, follow", "og:type": "article", "description": "Skaffold supports copying changed files to a deployed container so as to avoid the need to rebuild, redeploy, and restart the corresponding pod.\nThe …", "title": "File Sync | Skaffold", "og:title": "File Sync", "generator": "Hugo 0.99.1", "twitter:card": "summary", "ogSiteName": "Skaffold", "twitter:description": "Skaffold supports copying changed files to a deployed container so as to avoid the need to rebuild, redeploy, and restart the corresponding pod. The file copying is enabled by adding a sync section with sync rules to the artifact in the skaffold.yaml. Under the hood, Skaffold creates a tar file with changed files that match the sync rules. This tar file is sent to and extracted on the corresponding containers.", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:url": "https://skaffold.dev/docs/filesync/", "twitter:title": "File Sync", "og:site_name": "Skaffold", "ogTitle": "File Sync", "language": "en", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:description": "Skaffold supports copying changed files to a deployed container so as to avoid the need to rebuild, redeploy, and restart the corresponding pod. The file copying is enabled by adding a sync section with sync rules to the artifact in the skaffold.yaml. Under the hood, Skaffold creates a tar file with changed files that match the sync rules. This tar file is sent to and extracted on the corresponding containers.", "ogUrl": "https://skaffold.dev/docs/filesync/", "article:section": "docs", "article:modified_time": "2025-01-23T10:14:58-05:00", "ogDescription": "Skaffold supports copying changed files to a deployed container so as to avoid the need to rebuild, redeploy, and restart the corresponding pod. The file copying is enabled by adding a sync section with sync rules to the artifact in the skaffold.yaml. Under the hood, Skaffold creates a tar file with changed files that match the sync rules. This tar file is sent to and extracted on the corresponding containers.", "modifiedTime": "2025-01-23T10:14:58-05:00", "scrapeId": "427736c8-32f2-4b3d-8c5b-c2174f8c4046", "sourceURL": "https://skaffold.dev/docs/filesync", "url": "https://skaffold.dev/docs/filesync/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I how it works in skaffold?\n\nAssistant: To how it works in skaffold, here's what you do:\nSkaffold requires special collaboration from buildpacks for the `auto` sync to work. Cloud Native Buildpacks set a `io.buildpacks.build.metadata` label on the images they create. This labels points to json description of the [Bill-of-Materials, aka BOM](https://github.com/buildpacks/spec/blob/main/buildpack.md#bill-of-materials-toml) of the build. In the BOM, under the `metadata.devmode.sync` key, Buildpacks that want to collaborate with Skaffold have to output the sync rules based on their exploration of the source and the build process they had to apply to it. Those sync rules will then be used by Skaffold without the user having to configure them manually..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/filesync", "title": "File Sync", "description": "Skaffold supports copying changed files to a deployed container to avoid the need to rebuild, redeploy, and restart the corresponding pod.", "has_code_examples": true, "has_best_practices": true, "section_count": 12, "timestamp": "2025-03-01 03:41:42", "type": "section_detail", "page_metadata": {"robots": "index, follow", "og:type": "article", "description": "Skaffold supports copying changed files to a deployed container so as to avoid the need to rebuild, redeploy, and restart the corresponding pod.\nThe …", "title": "File Sync | Skaffold", "og:title": "File Sync", "generator": "Hugo 0.99.1", "twitter:card": "summary", "ogSiteName": "Skaffold", "twitter:description": "Skaffold supports copying changed files to a deployed container so as to avoid the need to rebuild, redeploy, and restart the corresponding pod. The file copying is enabled by adding a sync section with sync rules to the artifact in the skaffold.yaml. Under the hood, Skaffold creates a tar file with changed files that match the sync rules. This tar file is sent to and extracted on the corresponding containers.", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:url": "https://skaffold.dev/docs/filesync/", "twitter:title": "File Sync", "og:site_name": "Skaffold", "ogTitle": "File Sync", "language": "en", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:description": "Skaffold supports copying changed files to a deployed container so as to avoid the need to rebuild, redeploy, and restart the corresponding pod. The file copying is enabled by adding a sync section with sync rules to the artifact in the skaffold.yaml. Under the hood, Skaffold creates a tar file with changed files that match the sync rules. This tar file is sent to and extracted on the corresponding containers.", "ogUrl": "https://skaffold.dev/docs/filesync/", "article:section": "docs", "article:modified_time": "2025-01-23T10:14:58-05:00", "ogDescription": "Skaffold supports copying changed files to a deployed container so as to avoid the need to rebuild, redeploy, and restart the corresponding pod. The file copying is enabled by adding a sync section with sync rules to the artifact in the skaffold.yaml. Under the hood, Skaffold creates a tar file with changed files that match the sync rules. This tar file is sent to and extracted on the corresponding containers.", "modifiedTime": "2025-01-23T10:14:58-05:00", "scrapeId": "427736c8-32f2-4b3d-8c5b-c2174f8c4046", "sourceURL": "https://skaffold.dev/docs/filesync", "url": "https://skaffold.dev/docs/filesync/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I jib in skaffold?\n\nAssistant: To jib in skaffold, here's what you do:\nJib integration with Skaffold allows for zero-config `auto` sync. In this mode, Jib will sync your class files, resource files, and Jib’s “extra directories” files to a remote container as changes are made. It can only be used with Jib in the default build mode (exploded) for non-WAR applications. It was primarily designed around [Spring Boot Developer Tools](https://docs.spring.io/spring-boot/docs/current/reference/html/using-spring-boot.html#using-boot-devtools), but can work with any embedded server that can reload/restart..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/filesync", "title": "File Sync", "description": "Skaffold supports copying changed files to a deployed container to avoid the need to rebuild, redeploy, and restart the corresponding pod.", "has_code_examples": true, "has_best_practices": true, "section_count": 12, "timestamp": "2025-03-01 03:41:42", "type": "section_detail", "page_metadata": {"robots": "index, follow", "og:type": "article", "description": "Skaffold supports copying changed files to a deployed container so as to avoid the need to rebuild, redeploy, and restart the corresponding pod.\nThe …", "title": "File Sync | Skaffold", "og:title": "File Sync", "generator": "Hugo 0.99.1", "twitter:card": "summary", "ogSiteName": "Skaffold", "twitter:description": "Skaffold supports copying changed files to a deployed container so as to avoid the need to rebuild, redeploy, and restart the corresponding pod. The file copying is enabled by adding a sync section with sync rules to the artifact in the skaffold.yaml. Under the hood, Skaffold creates a tar file with changed files that match the sync rules. This tar file is sent to and extracted on the corresponding containers.", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:url": "https://skaffold.dev/docs/filesync/", "twitter:title": "File Sync", "og:site_name": "Skaffold", "ogTitle": "File Sync", "language": "en", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:description": "Skaffold supports copying changed files to a deployed container so as to avoid the need to rebuild, redeploy, and restart the corresponding pod. The file copying is enabled by adding a sync section with sync rules to the artifact in the skaffold.yaml. Under the hood, Skaffold creates a tar file with changed files that match the sync rules. This tar file is sent to and extracted on the corresponding containers.", "ogUrl": "https://skaffold.dev/docs/filesync/", "article:section": "docs", "article:modified_time": "2025-01-23T10:14:58-05:00", "ogDescription": "Skaffold supports copying changed files to a deployed container so as to avoid the need to rebuild, redeploy, and restart the corresponding pod. The file copying is enabled by adding a sync section with sync rules to the artifact in the skaffold.yaml. Under the hood, Skaffold creates a tar file with changed files that match the sync rules. This tar file is sent to and extracted on the corresponding containers.", "modifiedTime": "2025-01-23T10:14:58-05:00", "scrapeId": "427736c8-32f2-4b3d-8c5b-c2174f8c4046", "sourceURL": "https://skaffold.dev/docs/filesync", "url": "https://skaffold.dev/docs/filesync/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I limitations in skaffold?\n\nAssistant: To limitations in skaffold, here's what you do:\nFile sync has some limitations:\n\n- File sync can only update files that can be modified by the container’s configured User ID.\n- File sync requires the `tar` command to be available in the container.\n- Only local source files can be synchronized: files created by the builder will not be copied.\n- It is currently not allowed to mix `manual`, `infer` and `auto` sync modes. If you have a use-case for this, please let us know!.\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/filesync", "title": "File Sync", "description": "Skaffold supports copying changed files to a deployed container to avoid the need to rebuild, redeploy, and restart the corresponding pod.", "has_code_examples": true, "has_best_practices": true, "section_count": 12, "timestamp": "2025-03-01 03:41:42", "type": "section_detail", "page_metadata": {"robots": "index, follow", "og:type": "article", "description": "Skaffold supports copying changed files to a deployed container so as to avoid the need to rebuild, redeploy, and restart the corresponding pod.\nThe …", "title": "File Sync | Skaffold", "og:title": "File Sync", "generator": "Hugo 0.99.1", "twitter:card": "summary", "ogSiteName": "Skaffold", "twitter:description": "Skaffold supports copying changed files to a deployed container so as to avoid the need to rebuild, redeploy, and restart the corresponding pod. The file copying is enabled by adding a sync section with sync rules to the artifact in the skaffold.yaml. Under the hood, Skaffold creates a tar file with changed files that match the sync rules. This tar file is sent to and extracted on the corresponding containers.", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:url": "https://skaffold.dev/docs/filesync/", "twitter:title": "File Sync", "og:site_name": "Skaffold", "ogTitle": "File Sync", "language": "en", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:description": "Skaffold supports copying changed files to a deployed container so as to avoid the need to rebuild, redeploy, and restart the corresponding pod. The file copying is enabled by adding a sync section with sync rules to the artifact in the skaffold.yaml. Under the hood, Skaffold creates a tar file with changed files that match the sync rules. This tar file is sent to and extracted on the corresponding containers.", "ogUrl": "https://skaffold.dev/docs/filesync/", "article:section": "docs", "article:modified_time": "2025-01-23T10:14:58-05:00", "ogDescription": "Skaffold supports copying changed files to a deployed container so as to avoid the need to rebuild, redeploy, and restart the corresponding pod. The file copying is enabled by adding a sync section with sync rules to the artifact in the skaffold.yaml. Under the hood, Skaffold creates a tar file with changed files that match the sync rules. This tar file is sent to and extracted on the corresponding containers.", "modifiedTime": "2025-01-23T10:14:58-05:00", "scrapeId": "427736c8-32f2-4b3d-8c5b-c2174f8c4046", "sourceURL": "https://skaffold.dev/docs/filesync", "url": "https://skaffold.dev/docs/filesync/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you give me some code examples for File Sync in skaffold?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Manual Sync Example**:\n\n```yaml\n```yaml\nbuild:\n  artifacts:\n    - image: gcr.io/k8s-skaffold/node-example\n      context: node\n      sync:\n        manual:\n          - src: '.filebaserc'\n            dest: /etc\n          - src: 'static-html/*.html'\n            dest: static\n          - src: '**/*.png'\n            dest: assets\n          - src: 'content/en/**/*.md'\n            dest: content\n            strip: 'content/en/'\n```\n```\n\nThis snippet shows you how to manual sync example, which is an important aspect of file sync.\n\n**Inferred Sync Example**:\n\n```yaml\nGiven this Dockerfile:\n\n```Dockerfile\nFROM hugo\n\nADD .filebaserc /etc/\nADD assets assets/\nCOPY static-html static/\nCOPY content/en content/\n```\n\nAnd a `skaffold.yaml` with the following sync configuration:\n\n```yaml\nbuild:\n  artifacts:\n    - image: gcr.io/k8s-skaffold/node-example\n      context: node\n      sync:\n        infer:\n        - '.filebaserc'\n        - 'static-html/*.html'\n        - '**/*.png'\n        - 'content/en/**/*.md'\n```\n```\n\nThis snippet shows you how to inferred sync example, which is an important aspect of file sync.\n\n**Disable Auto Sync for Buildpacks**:\n\n```yaml\n```\nartifacts:\n- image: xxx\n  buildpacks:\n    builder: gcr.io/buildpacks/builder:v1\n  sync:\n    auto: false   # disable buildpacks auto-sync\n```\n```\n\nThis snippet shows you how to disable auto sync for buildpacks, which is an important aspect of file sync.\n\n", "metadata": {"source_url": "https://skaffold.dev/docs/filesync", "title": "File Sync", "description": "Skaffold supports copying changed files to a deployed container to avoid the need to rebuild, redeploy, and restart the corresponding pod.", "has_code_examples": true, "has_best_practices": true, "section_count": 12, "timestamp": "2025-03-01 03:41:42", "type": "code_examples", "page_metadata": {"robots": "index, follow", "og:type": "article", "description": "Skaffold supports copying changed files to a deployed container so as to avoid the need to rebuild, redeploy, and restart the corresponding pod.\nThe …", "title": "File Sync | Skaffold", "og:title": "File Sync", "generator": "Hugo 0.99.1", "twitter:card": "summary", "ogSiteName": "Skaffold", "twitter:description": "Skaffold supports copying changed files to a deployed container so as to avoid the need to rebuild, redeploy, and restart the corresponding pod. The file copying is enabled by adding a sync section with sync rules to the artifact in the skaffold.yaml. Under the hood, Skaffold creates a tar file with changed files that match the sync rules. This tar file is sent to and extracted on the corresponding containers.", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:url": "https://skaffold.dev/docs/filesync/", "twitter:title": "File Sync", "og:site_name": "Skaffold", "ogTitle": "File Sync", "language": "en", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:description": "Skaffold supports copying changed files to a deployed container so as to avoid the need to rebuild, redeploy, and restart the corresponding pod. The file copying is enabled by adding a sync section with sync rules to the artifact in the skaffold.yaml. Under the hood, Skaffold creates a tar file with changed files that match the sync rules. This tar file is sent to and extracted on the corresponding containers.", "ogUrl": "https://skaffold.dev/docs/filesync/", "article:section": "docs", "article:modified_time": "2025-01-23T10:14:58-05:00", "ogDescription": "Skaffold supports copying changed files to a deployed container so as to avoid the need to rebuild, redeploy, and restart the corresponding pod. The file copying is enabled by adding a sync section with sync rules to the artifact in the skaffold.yaml. Under the hood, Skaffold creates a tar file with changed files that match the sync rules. This tar file is sent to and extracted on the corresponding containers.", "modifiedTime": "2025-01-23T10:14:58-05:00", "scrapeId": "427736c8-32f2-4b3d-8c5b-c2174f8c4046", "sourceURL": "https://skaffold.dev/docs/filesync", "url": "https://skaffold.dev/docs/filesync/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: What are some tips for using File Sync in skaffold effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nFile sync can only update files that can be modified by the container’s configured User ID.\n\nFile sync requires the `tar` command to be available in the container.\n\nOnly local source files can be synchronized: files created by the builder will not be copied.\n\nIt is currently not allowed to mix `manual`, `infer` and `auto` sync modes.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://skaffold.dev/docs/filesync", "title": "File Sync", "description": "Skaffold supports copying changed files to a deployed container to avoid the need to rebuild, redeploy, and restart the corresponding pod.", "has_code_examples": true, "has_best_practices": true, "section_count": 12, "timestamp": "2025-03-01 03:41:42", "type": "best_practices", "page_metadata": {"robots": "index, follow", "og:type": "article", "description": "Skaffold supports copying changed files to a deployed container so as to avoid the need to rebuild, redeploy, and restart the corresponding pod.\nThe …", "title": "File Sync | Skaffold", "og:title": "File Sync", "generator": "Hugo 0.99.1", "twitter:card": "summary", "ogSiteName": "Skaffold", "twitter:description": "Skaffold supports copying changed files to a deployed container so as to avoid the need to rebuild, redeploy, and restart the corresponding pod. The file copying is enabled by adding a sync section with sync rules to the artifact in the skaffold.yaml. Under the hood, Skaffold creates a tar file with changed files that match the sync rules. This tar file is sent to and extracted on the corresponding containers.", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:url": "https://skaffold.dev/docs/filesync/", "twitter:title": "File Sync", "og:site_name": "Skaffold", "ogTitle": "File Sync", "language": "en", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:description": "Skaffold supports copying changed files to a deployed container so as to avoid the need to rebuild, redeploy, and restart the corresponding pod. The file copying is enabled by adding a sync section with sync rules to the artifact in the skaffold.yaml. Under the hood, Skaffold creates a tar file with changed files that match the sync rules. This tar file is sent to and extracted on the corresponding containers.", "ogUrl": "https://skaffold.dev/docs/filesync/", "article:section": "docs", "article:modified_time": "2025-01-23T10:14:58-05:00", "ogDescription": "Skaffold supports copying changed files to a deployed container so as to avoid the need to rebuild, redeploy, and restart the corresponding pod. The file copying is enabled by adding a sync section with sync rules to the artifact in the skaffold.yaml. Under the hood, Skaffold creates a tar file with changed files that match the sync rules. This tar file is sent to and extracted on the corresponding containers.", "modifiedTime": "2025-01-23T10:14:58-05:00", "scrapeId": "427736c8-32f2-4b3d-8c5b-c2174f8c4046", "sourceURL": "https://skaffold.dev/docs/filesync", "url": "https://skaffold.dev/docs/filesync/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what Log Tailing is in skaffold?\n\nAssistant: Sure, I'd be happy to explain Log Tailing in skaffold.\n\n# Log Tailing\n\nSkaffold has built-in support for tailing logs for containers built and deployed by Skaffold on your cluster to your local machine when running in either dev, debug or run mode.Here's a quick rundown of what this is about:\n\n## Log Structure\n\nTo view log structure, run `skaffold run --tail` in [`examples/microservices`](https://github.com/GoogleContainerTools/skaffold/tree/main/examples/microservices)\n\n```bash\nskaffold run --tail\n```\n\nwill produce an output like this\n\n![logging-output](https://skaffold.dev/images/logging-output.png)\n\nFor every log line, skaffold will prefix the pod name and container name if they’re not the same.\n\n![logging-output](https://skaffold.dev/images/log-line-single.png)\n\nIn the above example, `leeroy-web-75ff54dc77-9shwm` is the pod name and `leeroy-web` is container name defined in the spec for this deployment\n\n```yaml\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: leeroy-web\n  labels:\n    app: leeroy-web\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: leeroy-web\n  template:\n    metadata:\n      labels:\n        app: leeroy-web\n    spec:\n      containers:\n        - name: leeroy-web\n          image: gcr.io/k8s-skaffold/leeroy-web\n          ports:\n            - containerPort: 8080\n``` \n\nSkaffold will choose a unique color for each container to make it easy for users to read the logs.\n\n## JSON Parsing\n\nIn some cases, logs may simply be JSON objects.\nIf you know this ahead of time and know that you’d like to only get specific fields from these objects,\nyou can add a `deploy.logs.jsonParse` stanza to your `skaffold.yaml` file to configure which fields you’d like to see.\n\n```yaml\napiVersion: skaffold/v2beta27\nkind: Config\nbuild:\n  artifacts:\n  - image: skaffold-example\ndeploy:\n  logs:\n    jsonParse:\n      fields: [\"message\", \"severity\"]\n  kubectl:\n    manifests:\n      - k8s-*\n```\n\nIn the above example, only the fields `message` and `severity` will be gathered from the incoming JSON logs.\nSo, if the logs coming through were structured like so:\n\n```\n[getting-started] {\"timestampSeconds\":1643740871,\"timestampNanos\":446000000,\"severity\":\"INFO\",\"thread\":\"main\",\"message\":\"Hello World!\",\"context\":\"default\"}\n```\n\nwith the `deploy.logs.jsonParse` config added, they would look like this:\n\n```\n[getting-started] message: Hello World!, severity: INFO\n```\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/log-tailing", "title": "Log Tailing", "description": "Skaffold has built-in support for tailing logs for containers built and deployed by Skaffold on your cluster to your local machine when running in either dev, debug or run mode.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:42:00", "type": "overview", "page_metadata": {"og:description": "Skaffold has built-in support for tailing logs for containers built and deployed by Skaffold on your cluster to your local machine when running in either dev, debug or run mode.\nNote Log Tailing is enabled by default for dev and debug.\nLog Tailing is disabled by default for run mode; it can be enabled with the --tail flag.  Log Structure To view log structure, run skaffold run --tail in examples/microservices", "twitter:description": "Skaffold has built-in support for tailing logs for containers built and deployed by Skaffold on your cluster to your local machine when running in either dev, debug or run mode.\nNote Log Tailing is enabled by default for dev and debug.\nLog Tailing is disabled by default for run mode; it can be enabled with the --tail flag.  Log Structure To view log structure, run skaffold run --tail in examples/microservices", "ogTitle": "Log Tailing", "robots": "index, follow", "article:modified_time": "2025-01-23T10:14:58-05:00", "ogUrl": "https://skaffold.dev/docs/log-tailing/", "language": "en", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "twitter:card": "summary", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:title": "Log Tailing", "generator": "Hugo 0.99.1", "description": "Skaffold has built-in support for tailing logs for containers built and deployed by Skaffold on your cluster\nto your local machine when running in …", "og:url": "https://skaffold.dev/docs/log-tailing/", "title": "Log Tailing | Skaffold", "article:section": "docs", "og:site_name": "Skaffold", "og:type": "article", "ogDescription": "Skaffold has built-in support for tailing logs for containers built and deployed by Skaffold on your cluster to your local machine when running in either dev, debug or run mode.\nNote Log Tailing is enabled by default for dev and debug.\nLog Tailing is disabled by default for run mode; it can be enabled with the --tail flag.  Log Structure To view log structure, run skaffold run --tail in examples/microservices", "ogSiteName": "Skaffold", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "twitter:title": "Log Tailing", "scrapeId": "9c74e1b1-cd55-4031-89ec-fceea63219ca", "sourceURL": "https://skaffold.dev/docs/log-tailing", "url": "https://skaffold.dev/docs/log-tailing/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I log structure in skaffold?\n\nAssistant: To log structure in skaffold, here's what you do:\nTo view log structure, run `skaffold run --tail` in [`examples/microservices`](https://github.com/GoogleContainerTools/skaffold/tree/main/examples/microservices)\n\n```bash\nskaffold run --tail\n```\n\nwill produce an output like this\n\n![logging-output](https://skaffold.dev/images/logging-output.png)\n\nFor every log line, skaffold will prefix the pod name and container name if they’re not the same.\n\n![logging-output](https://skaffold.dev/images/log-line-single.png)\n\nIn the above example, `leeroy-web-75ff54dc77-9shwm` is the pod name and `leeroy-web` is container name defined in the spec for this deployment\n\n```yaml\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: leeroy-web\n  labels:\n    app: leeroy-web\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: leeroy-web\n  template:\n    metadata:\n      labels:\n        app: leeroy-web\n    spec:\n      containers:\n        - name: leeroy-web\n          image: gcr.io/k8s-skaffold/leeroy-web\n          ports:\n            - containerPort: 8080\n``` \n\nSkaffold will choose a unique color for each container to make it easy for users to read the logs..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/log-tailing", "title": "Log Tailing", "description": "Skaffold has built-in support for tailing logs for containers built and deployed by Skaffold on your cluster to your local machine when running in either dev, debug or run mode.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:42:00", "type": "section_detail", "page_metadata": {"og:description": "Skaffold has built-in support for tailing logs for containers built and deployed by Skaffold on your cluster to your local machine when running in either dev, debug or run mode.\nNote Log Tailing is enabled by default for dev and debug.\nLog Tailing is disabled by default for run mode; it can be enabled with the --tail flag.  Log Structure To view log structure, run skaffold run --tail in examples/microservices", "twitter:description": "Skaffold has built-in support for tailing logs for containers built and deployed by Skaffold on your cluster to your local machine when running in either dev, debug or run mode.\nNote Log Tailing is enabled by default for dev and debug.\nLog Tailing is disabled by default for run mode; it can be enabled with the --tail flag.  Log Structure To view log structure, run skaffold run --tail in examples/microservices", "ogTitle": "Log Tailing", "robots": "index, follow", "article:modified_time": "2025-01-23T10:14:58-05:00", "ogUrl": "https://skaffold.dev/docs/log-tailing/", "language": "en", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "twitter:card": "summary", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:title": "Log Tailing", "generator": "Hugo 0.99.1", "description": "Skaffold has built-in support for tailing logs for containers built and deployed by Skaffold on your cluster\nto your local machine when running in …", "og:url": "https://skaffold.dev/docs/log-tailing/", "title": "Log Tailing | Skaffold", "article:section": "docs", "og:site_name": "Skaffold", "og:type": "article", "ogDescription": "Skaffold has built-in support for tailing logs for containers built and deployed by Skaffold on your cluster to your local machine when running in either dev, debug or run mode.\nNote Log Tailing is enabled by default for dev and debug.\nLog Tailing is disabled by default for run mode; it can be enabled with the --tail flag.  Log Structure To view log structure, run skaffold run --tail in examples/microservices", "ogSiteName": "Skaffold", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "twitter:title": "Log Tailing", "scrapeId": "9c74e1b1-cd55-4031-89ec-fceea63219ca", "sourceURL": "https://skaffold.dev/docs/log-tailing", "url": "https://skaffold.dev/docs/log-tailing/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I json parsing in skaffold?\n\nAssistant: To json parsing in skaffold, here's what you do:\nIn some cases, logs may simply be JSON objects.\nIf you know this ahead of time and know that you’d like to only get specific fields from these objects,\nyou can add a `deploy.logs.jsonParse` stanza to your `skaffold.yaml` file to configure which fields you’d like to see.\n\n```yaml\napiVersion: skaffold/v2beta27\nkind: Config\nbuild:\n  artifacts:\n  - image: skaffold-example\ndeploy:\n  logs:\n    jsonParse:\n      fields: [\"message\", \"severity\"]\n  kubectl:\n    manifests:\n      - k8s-*\n```\n\nIn the above example, only the fields `message` and `severity` will be gathered from the incoming JSON logs.\nSo, if the logs coming through were structured like so:\n\n```\n[getting-started] {\"timestampSeconds\":1643740871,\"timestampNanos\":446000000,\"severity\":\"INFO\",\"thread\":\"main\",\"message\":\"Hello World!\",\"context\":\"default\"}\n```\n\nwith the `deploy.logs.jsonParse` config added, they would look like this:\n\n```\n[getting-started] message: Hello World!, severity: INFO\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/log-tailing", "title": "Log Tailing", "description": "Skaffold has built-in support for tailing logs for containers built and deployed by Skaffold on your cluster to your local machine when running in either dev, debug or run mode.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:42:00", "type": "section_detail", "page_metadata": {"og:description": "Skaffold has built-in support for tailing logs for containers built and deployed by Skaffold on your cluster to your local machine when running in either dev, debug or run mode.\nNote Log Tailing is enabled by default for dev and debug.\nLog Tailing is disabled by default for run mode; it can be enabled with the --tail flag.  Log Structure To view log structure, run skaffold run --tail in examples/microservices", "twitter:description": "Skaffold has built-in support for tailing logs for containers built and deployed by Skaffold on your cluster to your local machine when running in either dev, debug or run mode.\nNote Log Tailing is enabled by default for dev and debug.\nLog Tailing is disabled by default for run mode; it can be enabled with the --tail flag.  Log Structure To view log structure, run skaffold run --tail in examples/microservices", "ogTitle": "Log Tailing", "robots": "index, follow", "article:modified_time": "2025-01-23T10:14:58-05:00", "ogUrl": "https://skaffold.dev/docs/log-tailing/", "language": "en", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "twitter:card": "summary", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:title": "Log Tailing", "generator": "Hugo 0.99.1", "description": "Skaffold has built-in support for tailing logs for containers built and deployed by Skaffold on your cluster\nto your local machine when running in …", "og:url": "https://skaffold.dev/docs/log-tailing/", "title": "Log Tailing | Skaffold", "article:section": "docs", "og:site_name": "Skaffold", "og:type": "article", "ogDescription": "Skaffold has built-in support for tailing logs for containers built and deployed by Skaffold on your cluster to your local machine when running in either dev, debug or run mode.\nNote Log Tailing is enabled by default for dev and debug.\nLog Tailing is disabled by default for run mode; it can be enabled with the --tail flag.  Log Structure To view log structure, run skaffold run --tail in examples/microservices", "ogSiteName": "Skaffold", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "twitter:title": "Log Tailing", "scrapeId": "9c74e1b1-cd55-4031-89ec-fceea63219ca", "sourceURL": "https://skaffold.dev/docs/log-tailing", "url": "https://skaffold.dev/docs/log-tailing/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you give me some code examples for Log Tailing in skaffold?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Log Tailing Command**:\n\n```yaml\nskaffold run --tail\n```\n\nThis snippet shows you how to log tailing command, which is an important aspect of log tailing.\n\n**Deployment YAML Example**:\n\n```yaml\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: leeroy-web\n  labels:\n    app: leeroy-web\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: leeroy-web\n  template:\n    metadata:\n      labels:\n        app: leeroy-web\n    spec:\n      containers:\n        - name: leeroy-web\n          image: gcr.io/k8s-skaffold/leeroy-web\n          ports:\n            - containerPort: 8080\n\n```\n\nThis snippet shows you how to deployment yaml example, which is an important aspect of log tailing.\n\n", "metadata": {"source_url": "https://skaffold.dev/docs/log-tailing", "title": "Log Tailing", "description": "Skaffold has built-in support for tailing logs for containers built and deployed by Skaffold on your cluster to your local machine when running in either dev, debug or run mode.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:42:00", "type": "code_examples", "page_metadata": {"og:description": "Skaffold has built-in support for tailing logs for containers built and deployed by Skaffold on your cluster to your local machine when running in either dev, debug or run mode.\nNote Log Tailing is enabled by default for dev and debug.\nLog Tailing is disabled by default for run mode; it can be enabled with the --tail flag.  Log Structure To view log structure, run skaffold run --tail in examples/microservices", "twitter:description": "Skaffold has built-in support for tailing logs for containers built and deployed by Skaffold on your cluster to your local machine when running in either dev, debug or run mode.\nNote Log Tailing is enabled by default for dev and debug.\nLog Tailing is disabled by default for run mode; it can be enabled with the --tail flag.  Log Structure To view log structure, run skaffold run --tail in examples/microservices", "ogTitle": "Log Tailing", "robots": "index, follow", "article:modified_time": "2025-01-23T10:14:58-05:00", "ogUrl": "https://skaffold.dev/docs/log-tailing/", "language": "en", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "twitter:card": "summary", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:title": "Log Tailing", "generator": "Hugo 0.99.1", "description": "Skaffold has built-in support for tailing logs for containers built and deployed by Skaffold on your cluster\nto your local machine when running in …", "og:url": "https://skaffold.dev/docs/log-tailing/", "title": "Log Tailing | Skaffold", "article:section": "docs", "og:site_name": "Skaffold", "og:type": "article", "ogDescription": "Skaffold has built-in support for tailing logs for containers built and deployed by Skaffold on your cluster to your local machine when running in either dev, debug or run mode.\nNote Log Tailing is enabled by default for dev and debug.\nLog Tailing is disabled by default for run mode; it can be enabled with the --tail flag.  Log Structure To view log structure, run skaffold run --tail in examples/microservices", "ogSiteName": "Skaffold", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "twitter:title": "Log Tailing", "scrapeId": "9c74e1b1-cd55-4031-89ec-fceea63219ca", "sourceURL": "https://skaffold.dev/docs/log-tailing", "url": "https://skaffold.dev/docs/log-tailing/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: What are some tips for using Log Tailing in skaffold effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nLog Tailing is enabled by default for dev and debug modes.\n\nLog Tailing is disabled by default for run mode; it can be enabled with the --tail flag.\n\nSkaffold will choose a unique color for each container to make it easy for users to read the logs.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://skaffold.dev/docs/log-tailing", "title": "Log Tailing", "description": "Skaffold has built-in support for tailing logs for containers built and deployed by Skaffold on your cluster to your local machine when running in either dev, debug or run mode.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:42:00", "type": "best_practices", "page_metadata": {"og:description": "Skaffold has built-in support for tailing logs for containers built and deployed by Skaffold on your cluster to your local machine when running in either dev, debug or run mode.\nNote Log Tailing is enabled by default for dev and debug.\nLog Tailing is disabled by default for run mode; it can be enabled with the --tail flag.  Log Structure To view log structure, run skaffold run --tail in examples/microservices", "twitter:description": "Skaffold has built-in support for tailing logs for containers built and deployed by Skaffold on your cluster to your local machine when running in either dev, debug or run mode.\nNote Log Tailing is enabled by default for dev and debug.\nLog Tailing is disabled by default for run mode; it can be enabled with the --tail flag.  Log Structure To view log structure, run skaffold run --tail in examples/microservices", "ogTitle": "Log Tailing", "robots": "index, follow", "article:modified_time": "2025-01-23T10:14:58-05:00", "ogUrl": "https://skaffold.dev/docs/log-tailing/", "language": "en", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "twitter:card": "summary", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:title": "Log Tailing", "generator": "Hugo 0.99.1", "description": "Skaffold has built-in support for tailing logs for containers built and deployed by Skaffold on your cluster\nto your local machine when running in …", "og:url": "https://skaffold.dev/docs/log-tailing/", "title": "Log Tailing | Skaffold", "article:section": "docs", "og:site_name": "Skaffold", "og:type": "article", "ogDescription": "Skaffold has built-in support for tailing logs for containers built and deployed by Skaffold on your cluster to your local machine when running in either dev, debug or run mode.\nNote Log Tailing is enabled by default for dev and debug.\nLog Tailing is disabled by default for run mode; it can be enabled with the --tail flag.  Log Structure To view log structure, run skaffold run --tail in examples/microservices", "ogSiteName": "Skaffold", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "twitter:title": "Log Tailing", "scrapeId": "9c74e1b1-cd55-4031-89ec-fceea63219ca", "sourceURL": "https://skaffold.dev/docs/log-tailing", "url": "https://skaffold.dev/docs/log-tailing/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what Verify [NEW] is in skaffold?\n\nAssistant: Sure, I'd be happy to explain Verify [NEW] in skaffold.\n\n# Verify [NEW]\n\nSkaffold `v2.0.0` + supports running post-deployment verification tests. You define these tests as a list of test containers that are either standalone or built by Skaffold. Skaffold runs these containers after the deploy stage and monitors them for success or failure.Here's a quick rundown of what this is about:\n\n## Execution modes\n\nYou can run post-deployment verification tests in the following execution environments:\n\n- A local Docker environment\n- A Kubernetes cluster environment\n\n### Local\n\nWhen Skaffold runs a post-deployment verifications test in the local execution mode, it uses the `docker` CLI to run the test container on the host machine. This is the default execution mode.\n\n### Kubernetes cluster\n\nWhen Skaffold runs a post-deployment verification test in the Kubernetes cluster execution mode, it uses the `kubectl` CLI to run the test container as a Kubernetes Job.\n\nThere are two ways to optionally customize the Skaffold-generated Kubernetes Job:\n\n- To selectively overwrite the configuration of the Skaffold-generated Kubernetes Job with inline JSON, use the `overrides` configuration option. This is similar to the `--overrides` option provided by `kubectl run`.\n- To use your own Kubernetes Job manifest and have Skaffold replace the containers with those specified in the `containers` stanza of your `verify` configuration, use the `jobManifestPath` configuration option.\n\n## Examples\n\nBelow is an example of a `skaffold.yaml` file with a `verify` configuration that runs three successful verification tests against deployments:\n\n- A user-built `integration-test-container`, run in the Kubernetes cluster execution mode with optional `overrides` specified.\n- A user-built `metrics-test-container`, run in the Kubernetes cluster execution mode with optional `jobManifestPath` specified.\n- A simple health check done via “off the shelf” alpine using its installed `wget`, run in the local execution mode.\n\n```yaml\napiVersion: skaffold/v4beta4\nkind: Config\nbuild:\n  artifacts:\n    - image: integration-test-container\n      context: integration-test-container\n    - image: metrics-test-container\n      context: metrics-test-container\nverify:\n- name: integration-test-container\n  container:\n    name: integration-test-container\n    image: integration-test-container\n  executionMode:\n    kubernetesCluster: {}\n      # [optional]\n      # overrides: '{ \"apiVersion\": \"batch/v1\", \"spec\": { ... } }'\n- name: metrics-test-container\n  container:\n    name: metrics-test-container\n    image: metrics-test-container\n  executionMode:\n    kubernetesCluster: {}\n      # [optional]\n      # jobManifestPath: path/to/my/job\n- name: alpine-wget\n  container:\n    name: alpine-wget\n    image: alpine:3.15.4\n    command: [\"/bin/sh\"]\n    args: [\"-c\", \"wget http://www.google.com\"]\n```\n\nRunning `skaffold verify` against this `skaffold.yaml` (and associated Dockerfiles where relevant) yields:\n\n```console\n$ skaffold verify -a build.artifacts\nTags used in verification:\n - integration-test-container -> gcr.io/aprindle-test-cluster/integration-test-container:latest@sha256:6d6da2378765cd9dda71cbd20f3cf5818c92d49ab98a2554de12d034613dfa6a\n - metrics-test-container -> gcr.io/aprindle-test-cluster/metrics-test-container:latest@sha256:3fbce881177ead1c2ae00d58974fd6959c648d7691593f6448892c04139355f7\n3.15.4: Pulling from library/alpine\nDigest: sha256:4edbd2beb5f78b1014028f4fbb99f3237d9561100b6881aabbf5acce2c4f9454\nStatus: Downloaded newer image for alpine:3.15.4\n[integration-test-container] Integration Test 1/4 Running ...\n[metrics-test-container] Metrics test in progress...\n[metrics-test-container] Metrics test passed!\n[alpine-wget] Connecting to www.google.com (142.251.46.196:80)\n[alpine-wget] saving to 'index.html'\n[alpine-wget] index.html           100% |********************************| 13990  0:00:00 ETA\n[alpine-wget] 'index.html' saved\n[integration-test-container] Integration Test 1/4 Passed!\n[integration-test-container] Integration Test 2/4 Running...!\n[integration-test-container] Integration Test 2/4 Passed!\n[integration-test-container] Integration Test 3/4 Running...!\n[integration-test-container] Integration Test 3/4 Passed!\n[integration-test-container] Integration Test 4/4 Running...!\n[integration-test-container] Integration Test 4/4 Passed!\n$ echo $?\n0\n```\n\nand `skaffold verify` will exit with error code `0`\n\nIf a test fails, for example changing the `alpine-wget` test to point to a URL that doesn’t exist:\n\n```yaml\n- name: alpine-wget\n  container:\n    name: alpine-wget\n    image: alpine:3.15.4\n    command: [\"/bin/sh\"]\n    args: [\"-c\", \"wget http://incorrect-url\"]\n```\n\nThe following will occur (simulating a single test failure on one of the three tests):\n\n```console\n$ skaffold verify -a build.artifacts\nTags used in verification:\n - integration-test-container -> gcr.io/aprindle-test-cluster/integration-test-container:latest@sha256:6d6da2378765cd9dda71cbd20f3cf5818c92d49ab98a2554de12d034613dfa6a\n - metrics-test-container -> gcr.io/aprindle-test-cluster/metrics-test-container:latest@sha256:3fbce881177ead1c2ae00d58974fd6959c648d7691593f6448892c04139355f7\n3.15.4: Pulling from library/alpine\nDigest: sha256:4edbd2beb5f78b1014028f4fbb99f3237d9561100b6881aabbf5acce2c4f9454\nStatus: Image is up to date for alpine:3.15.4\n[integration-test-container] Integration Test 1/4 Running ...\n[metrics-test-container] Metrics test in progress...\n[metrics-test-container] Metrics test passed!\n[integration-test-container] Integration Test 1/4 Passed!\n[alpine-wget] wget: bad address 'incorrect-url'\n[integration-test-container] Integration Test 2/4 Running...!\n[integration-test-container] Integration Test 2/4 Passed!\n[integration-test-container] Integration Test 3/4 Running...!\n[integration-test-container] Integration Test 3/4 Passed!\n[integration-test-container] Integration Test 4/4 Running...!\n[integration-test-container] Integration Test 4/4 Passed!\n1 error(s) occurred:\n* verify test failed: \"alpine-wget\" running container image \"alpine:3.15.4\" errored during run with status code: 1\n$ echo $?\n1\n```\n\nand `skaffold verify` will exit with error code `1`.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/verify", "title": "Verify [NEW]", "description": "Skaffold `v2.0.0` + supports running post-deployment verification tests. You define these tests as a list of test containers that are either standalone or built by Skaffold. Skaffold runs these containers after the deploy stage and monitors them for success or failure.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:42:31", "type": "overview", "page_metadata": {"og:url": "https://skaffold.dev/docs/verify/", "og:description": "Skaffold v2.0.0+ supports running post-deployment verification tests. You define these tests as a list of test containers that are either standalone or built by Skaffold. Skaffold runs these containers after the deploy stage and monitors them for success or failure.\nYou can configure and execute post-deployment verification tests using the verify command and associated skaffold.yaml schema configuration.\nExecution modes You can run post-deployment verification tests in the following execution environments:", "og:title": "Verify [NEW]", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "description": "Skaffold v2.0.0+ supports running post-deployment verification tests. You define these tests as a list of test containers that are either standalone …", "ogTitle": "Verify [NEW]", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "ogDescription": "Skaffold v2.0.0+ supports running post-deployment verification tests. You define these tests as a list of test containers that are either standalone or built by Skaffold. Skaffold runs these containers after the deploy stage and monitors them for success or failure.\nYou can configure and execute post-deployment verification tests using the verify command and associated skaffold.yaml schema configuration.\nExecution modes You can run post-deployment verification tests in the following execution environments:", "generator": "Hugo 0.99.1", "article:modified_time": "2025-01-23T10:14:58-05:00", "twitter:card": "summary", "og:site_name": "Skaffold", "article:section": "docs", "og:type": "article", "ogSiteName": "Skaffold", "ogUrl": "https://skaffold.dev/docs/verify/", "modifiedTime": "2025-01-23T10:14:58-05:00", "twitter:title": "Verify [NEW]", "robots": "index, follow", "twitter:description": "Skaffold v2.0.0+ supports running post-deployment verification tests. You define these tests as a list of test containers that are either standalone or built by Skaffold. Skaffold runs these containers after the deploy stage and monitors them for success or failure.\nYou can configure and execute post-deployment verification tests using the verify command and associated skaffold.yaml schema configuration.\nExecution modes You can run post-deployment verification tests in the following execution environments:", "title": "Verify [NEW] | Skaffold", "language": "en", "scrapeId": "367212d6-1e55-43bc-8c26-fff321e52e26", "sourceURL": "https://skaffold.dev/docs/verify", "url": "https://skaffold.dev/docs/verify/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I execution modes in skaffold?\n\nAssistant: To execution modes in skaffold, here's what you do:\nYou can run post-deployment verification tests in the following execution environments:\n\n- A local Docker environment\n- A Kubernetes cluster environment\n\n### Local\n\nWhen Skaffold runs a post-deployment verifications test in the local execution mode, it uses the `docker` CLI to run the test container on the host machine. This is the default execution mode.\n\n### Kubernetes cluster\n\nWhen Skaffold runs a post-deployment verification test in the Kubernetes cluster execution mode, it uses the `kubectl` CLI to run the test container as a Kubernetes Job.\n\nThere are two ways to optionally customize the Skaffold-generated Kubernetes Job:\n\n- To selectively overwrite the configuration of the Skaffold-generated Kubernetes Job with inline JSON, use the `overrides` configuration option. This is similar to the `--overrides` option provided by `kubectl run`.\n- To use your own Kubernetes Job manifest and have Skaffold replace the containers with those specified in the `containers` stanza of your `verify` configuration, use the `jobManifestPath` configuration option..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/verify", "title": "Verify [NEW]", "description": "Skaffold `v2.0.0` + supports running post-deployment verification tests. You define these tests as a list of test containers that are either standalone or built by Skaffold. Skaffold runs these containers after the deploy stage and monitors them for success or failure.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:42:31", "type": "section_detail", "page_metadata": {"og:url": "https://skaffold.dev/docs/verify/", "og:description": "Skaffold v2.0.0+ supports running post-deployment verification tests. You define these tests as a list of test containers that are either standalone or built by Skaffold. Skaffold runs these containers after the deploy stage and monitors them for success or failure.\nYou can configure and execute post-deployment verification tests using the verify command and associated skaffold.yaml schema configuration.\nExecution modes You can run post-deployment verification tests in the following execution environments:", "og:title": "Verify [NEW]", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "description": "Skaffold v2.0.0+ supports running post-deployment verification tests. You define these tests as a list of test containers that are either standalone …", "ogTitle": "Verify [NEW]", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "ogDescription": "Skaffold v2.0.0+ supports running post-deployment verification tests. You define these tests as a list of test containers that are either standalone or built by Skaffold. Skaffold runs these containers after the deploy stage and monitors them for success or failure.\nYou can configure and execute post-deployment verification tests using the verify command and associated skaffold.yaml schema configuration.\nExecution modes You can run post-deployment verification tests in the following execution environments:", "generator": "Hugo 0.99.1", "article:modified_time": "2025-01-23T10:14:58-05:00", "twitter:card": "summary", "og:site_name": "Skaffold", "article:section": "docs", "og:type": "article", "ogSiteName": "Skaffold", "ogUrl": "https://skaffold.dev/docs/verify/", "modifiedTime": "2025-01-23T10:14:58-05:00", "twitter:title": "Verify [NEW]", "robots": "index, follow", "twitter:description": "Skaffold v2.0.0+ supports running post-deployment verification tests. You define these tests as a list of test containers that are either standalone or built by Skaffold. Skaffold runs these containers after the deploy stage and monitors them for success or failure.\nYou can configure and execute post-deployment verification tests using the verify command and associated skaffold.yaml schema configuration.\nExecution modes You can run post-deployment verification tests in the following execution environments:", "title": "Verify [NEW] | Skaffold", "language": "en", "scrapeId": "367212d6-1e55-43bc-8c26-fff321e52e26", "sourceURL": "https://skaffold.dev/docs/verify", "url": "https://skaffold.dev/docs/verify/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I examples in skaffold?\n\nAssistant: To examples in skaffold, here's what you do:\nBelow is an example of a `skaffold.yaml` file with a `verify` configuration that runs three successful verification tests against deployments:\n\n- A user-built `integration-test-container`, run in the Kubernetes cluster execution mode with optional `overrides` specified.\n- A user-built `metrics-test-container`, run in the Kubernetes cluster execution mode with optional `jobManifestPath` specified.\n- A simple health check done via “off the shelf” alpine using its installed `wget`, run in the local execution mode.\n\n```yaml\napiVersion: skaffold/v4beta4\nkind: Config\nbuild:\n  artifacts:\n    - image: integration-test-container\n      context: integration-test-container\n    - image: metrics-test-container\n      context: metrics-test-container\nverify:\n- name: integration-test-container\n  container:\n    name: integration-test-container\n    image: integration-test-container\n  executionMode:\n    kubernetesCluster: {}\n      # [optional]\n      # overrides: '{ \"apiVersion\": \"batch/v1\", \"spec\": { ... } }'\n- name: metrics-test-container\n  container:\n    name: metrics-test-container\n    image: metrics-test-container\n  executionMode:\n    kubernetesCluster: {}\n      # [optional]\n      # jobManifestPath: path/to/my/job\n- name: alpine-wget\n  container:\n    name: alpine-wget\n    image: alpine:3.15.4\n    command: [\"/bin/sh\"]\n    args: [\"-c\", \"wget http://www.google.com\"]\n```\n\nRunning `skaffold verify` against this `skaffold.yaml` (and associated Dockerfiles where relevant) yields:\n\n```console\n$ skaffold verify -a build.artifacts\nTags used in verification:\n - integration-test-container -> gcr.io/aprindle-test-cluster/integration-test-container:latest@sha256:6d6da2378765cd9dda71cbd20f3cf5818c92d49ab98a2554de12d034613dfa6a\n - metrics-test-container -> gcr.io/aprindle-test-cluster/metrics-test-container:latest@sha256:3fbce881177ead1c2ae00d58974fd6959c648d7691593f6448892c04139355f7\n3.15.4: Pulling from library/alpine\nDigest: sha256:4edbd2beb5f78b1014028f4fbb99f3237d9561100b6881aabbf5acce2c4f9454\nStatus: Downloaded newer image for alpine:3.15.4\n[integration-test-container] Integration Test 1/4 Running ...\n[metrics-test-container] Metrics test in progress...\n[metrics-test-container] Metrics test passed!\n[alpine-wget] Connecting to www.google.com (142.251.46.196:80)\n[alpine-wget] saving to 'index.html'\n[alpine-wget] index.html           100% |********************************| 13990  0:00:00 ETA\n[alpine-wget] 'index.html' saved\n[integration-test-container] Integration Test 1/4 Passed!\n[integration-test-container] Integration Test 2/4 Running...!\n[integration-test-container] Integration Test 2/4 Passed!\n[integration-test-container] Integration Test 3/4 Running...!\n[integration-test-container] Integration Test 3/4 Passed!\n[integration-test-container] Integration Test 4/4 Running...!\n[integration-test-container] Integration Test 4/4 Passed!\n$ echo $?\n0\n```\n\nand `skaffold verify` will exit with error code `0`\n\nIf a test fails, for example changing the `alpine-wget` test to point to a URL that doesn’t exist:\n\n```yaml\n- name: alpine-wget\n  container:\n    name: alpine-wget\n    image: alpine:3.15.4\n    command: [\"/bin/sh\"]\n    args: [\"-c\", \"wget http://incorrect-url\"]\n```\n\nThe following will occur (simulating a single test failure on one of the three tests):\n\n```console\n$ skaffold verify -a build.artifacts\nTags used in verification:\n - integration-test-container -> gcr.io/aprindle-test-cluster/integration-test-container:latest@sha256:6d6da2378765cd9dda71cbd20f3cf5818c92d49ab98a2554de12d034613dfa6a\n - metrics-test-container -> gcr.io/aprindle-test-cluster/metrics-test-container:latest@sha256:3fbce881177ead1c2ae00d58974fd6959c648d7691593f6448892c04139355f7\n3.15.4: Pulling from library/alpine\nDigest: sha256:4edbd2beb5f78b1014028f4fbb99f3237d9561100b6881aabbf5acce2c4f9454\nStatus: Image is up to date for alpine:3.15.4\n[integration-test-container] Integration Test 1/4 Running ...\n[metrics-test-container] Metrics test in progress...\n[metrics-test-container] Metrics test passed!\n[integration-test-container] Integration Test 1/4 Passed!\n[alpine-wget] wget: bad address 'incorrect-url'\n[integration-test-container] Integration Test 2/4 Running...!\n[integration-test-container] Integration Test 2/4 Passed!\n[integration-test-container] Integration Test 3/4 Running...!\n[integration-test-container] Integration Test 3/4 Passed!\n[integration-test-container] Integration Test 4/4 Running...!\n[integration-test-container] Integration Test 4/4 Passed!\n1 error(s) occurred:\n* verify test failed: \"alpine-wget\" running container image \"alpine:3.15.4\" errored during run with status code: 1\n$ echo $?\n1\n```\n\nand `skaffold verify` will exit with error code `1`..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/verify", "title": "Verify [NEW]", "description": "Skaffold `v2.0.0` + supports running post-deployment verification tests. You define these tests as a list of test containers that are either standalone or built by Skaffold. Skaffold runs these containers after the deploy stage and monitors them for success or failure.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:42:31", "type": "section_detail", "page_metadata": {"og:url": "https://skaffold.dev/docs/verify/", "og:description": "Skaffold v2.0.0+ supports running post-deployment verification tests. You define these tests as a list of test containers that are either standalone or built by Skaffold. Skaffold runs these containers after the deploy stage and monitors them for success or failure.\nYou can configure and execute post-deployment verification tests using the verify command and associated skaffold.yaml schema configuration.\nExecution modes You can run post-deployment verification tests in the following execution environments:", "og:title": "Verify [NEW]", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "description": "Skaffold v2.0.0+ supports running post-deployment verification tests. You define these tests as a list of test containers that are either standalone …", "ogTitle": "Verify [NEW]", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "ogDescription": "Skaffold v2.0.0+ supports running post-deployment verification tests. You define these tests as a list of test containers that are either standalone or built by Skaffold. Skaffold runs these containers after the deploy stage and monitors them for success or failure.\nYou can configure and execute post-deployment verification tests using the verify command and associated skaffold.yaml schema configuration.\nExecution modes You can run post-deployment verification tests in the following execution environments:", "generator": "Hugo 0.99.1", "article:modified_time": "2025-01-23T10:14:58-05:00", "twitter:card": "summary", "og:site_name": "Skaffold", "article:section": "docs", "og:type": "article", "ogSiteName": "Skaffold", "ogUrl": "https://skaffold.dev/docs/verify/", "modifiedTime": "2025-01-23T10:14:58-05:00", "twitter:title": "Verify [NEW]", "robots": "index, follow", "twitter:description": "Skaffold v2.0.0+ supports running post-deployment verification tests. You define these tests as a list of test containers that are either standalone or built by Skaffold. Skaffold runs these containers after the deploy stage and monitors them for success or failure.\nYou can configure and execute post-deployment verification tests using the verify command and associated skaffold.yaml schema configuration.\nExecution modes You can run post-deployment verification tests in the following execution environments:", "title": "Verify [NEW] | Skaffold", "language": "en", "scrapeId": "367212d6-1e55-43bc-8c26-fff321e52e26", "sourceURL": "https://skaffold.dev/docs/verify", "url": "https://skaffold.dev/docs/verify/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you give me some code examples for Verify [NEW] in skaffold?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**skaffold.yaml example**:\n\n```yaml\napiVersion: skaffold/v4beta4\nkind: Config\nbuild:\n  artifacts:\n    - image: integration-test-container\n      context: integration-test-container\n    - image: metrics-test-container\n      context: metrics-test-container\nverify:\n- name: integration-test-container\n  container:\n    name: integration-test-container\n    image: integration-test-container\n  executionMode:\n    kubernetesCluster: {}\n      # [optional]\n      # overrides: '{ \"apiVersion\": \"batch/v1\", \"spec\": { ... } }'\n- name: metrics-test-container\n  container:\n    name: metrics-test-container\n    image: metrics-test-container\n  executionMode:\n    kubernetesCluster: {}\n      # [optional]\n      # jobManifestPath: path/to/my/job\n- name: alpine-wget\n  container:\n    name: alpine-wget\n    image: alpine:3.15.4\n    command: [\"/bin/sh\"]\n    args: [\"-c\", \"wget http://www.google.com\"]\n```\n\nThis snippet shows you how to skaffold.yaml example, which is an important aspect of verify [new].\n\n", "metadata": {"source_url": "https://skaffold.dev/docs/verify", "title": "Verify [NEW]", "description": "Skaffold `v2.0.0` + supports running post-deployment verification tests. You define these tests as a list of test containers that are either standalone or built by Skaffold. Skaffold runs these containers after the deploy stage and monitors them for success or failure.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:42:31", "type": "code_examples", "page_metadata": {"og:url": "https://skaffold.dev/docs/verify/", "og:description": "Skaffold v2.0.0+ supports running post-deployment verification tests. You define these tests as a list of test containers that are either standalone or built by Skaffold. Skaffold runs these containers after the deploy stage and monitors them for success or failure.\nYou can configure and execute post-deployment verification tests using the verify command and associated skaffold.yaml schema configuration.\nExecution modes You can run post-deployment verification tests in the following execution environments:", "og:title": "Verify [NEW]", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "description": "Skaffold v2.0.0+ supports running post-deployment verification tests. You define these tests as a list of test containers that are either standalone …", "ogTitle": "Verify [NEW]", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "ogDescription": "Skaffold v2.0.0+ supports running post-deployment verification tests. You define these tests as a list of test containers that are either standalone or built by Skaffold. Skaffold runs these containers after the deploy stage and monitors them for success or failure.\nYou can configure and execute post-deployment verification tests using the verify command and associated skaffold.yaml schema configuration.\nExecution modes You can run post-deployment verification tests in the following execution environments:", "generator": "Hugo 0.99.1", "article:modified_time": "2025-01-23T10:14:58-05:00", "twitter:card": "summary", "og:site_name": "Skaffold", "article:section": "docs", "og:type": "article", "ogSiteName": "Skaffold", "ogUrl": "https://skaffold.dev/docs/verify/", "modifiedTime": "2025-01-23T10:14:58-05:00", "twitter:title": "Verify [NEW]", "robots": "index, follow", "twitter:description": "Skaffold v2.0.0+ supports running post-deployment verification tests. You define these tests as a list of test containers that are either standalone or built by Skaffold. Skaffold runs these containers after the deploy stage and monitors them for success or failure.\nYou can configure and execute post-deployment verification tests using the verify command and associated skaffold.yaml schema configuration.\nExecution modes You can run post-deployment verification tests in the following execution environments:", "title": "Verify [NEW] | Skaffold", "language": "en", "scrapeId": "367212d6-1e55-43bc-8c26-fff321e52e26", "sourceURL": "https://skaffold.dev/docs/verify", "url": "https://skaffold.dev/docs/verify/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: What are some tips for using Verify [NEW] in skaffold effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nUse the `overrides` configuration option to customize the Skaffold-generated Kubernetes Job.\n\nUse the `jobManifestPath` configuration option to specify your own Kubernetes Job manifest.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://skaffold.dev/docs/verify", "title": "Verify [NEW]", "description": "Skaffold `v2.0.0` + supports running post-deployment verification tests. You define these tests as a list of test containers that are either standalone or built by Skaffold. Skaffold runs these containers after the deploy stage and monitors them for success or failure.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:42:31", "type": "best_practices", "page_metadata": {"og:url": "https://skaffold.dev/docs/verify/", "og:description": "Skaffold v2.0.0+ supports running post-deployment verification tests. You define these tests as a list of test containers that are either standalone or built by Skaffold. Skaffold runs these containers after the deploy stage and monitors them for success or failure.\nYou can configure and execute post-deployment verification tests using the verify command and associated skaffold.yaml schema configuration.\nExecution modes You can run post-deployment verification tests in the following execution environments:", "og:title": "Verify [NEW]", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "description": "Skaffold v2.0.0+ supports running post-deployment verification tests. You define these tests as a list of test containers that are either standalone …", "ogTitle": "Verify [NEW]", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "ogDescription": "Skaffold v2.0.0+ supports running post-deployment verification tests. You define these tests as a list of test containers that are either standalone or built by Skaffold. Skaffold runs these containers after the deploy stage and monitors them for success or failure.\nYou can configure and execute post-deployment verification tests using the verify command and associated skaffold.yaml schema configuration.\nExecution modes You can run post-deployment verification tests in the following execution environments:", "generator": "Hugo 0.99.1", "article:modified_time": "2025-01-23T10:14:58-05:00", "twitter:card": "summary", "og:site_name": "Skaffold", "article:section": "docs", "og:type": "article", "ogSiteName": "Skaffold", "ogUrl": "https://skaffold.dev/docs/verify/", "modifiedTime": "2025-01-23T10:14:58-05:00", "twitter:title": "Verify [NEW]", "robots": "index, follow", "twitter:description": "Skaffold v2.0.0+ supports running post-deployment verification tests. You define these tests as a list of test containers that are either standalone or built by Skaffold. Skaffold runs these containers after the deploy stage and monitors them for success or failure.\nYou can configure and execute post-deployment verification tests using the verify command and associated skaffold.yaml schema configuration.\nExecution modes You can run post-deployment verification tests in the following execution environments:", "title": "Verify [NEW] | Skaffold", "language": "en", "scrapeId": "367212d6-1e55-43bc-8c26-fff321e52e26", "sourceURL": "https://skaffold.dev/docs/verify", "url": "https://skaffold.dev/docs/verify/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what Deploy Status Checking is in skaffold?\n\nAssistant: Sure, I'd be happy to explain Deploy Status Checking in skaffold.\n\n# Deploy Status Checking\n\nThis page describes how Skaffold’s deployment status checking waits for deployed resources to become ready, and reports errors if they fails to stabilize within a certain time period.Here's a quick rundown of what this is about:\n\n## Overview\n\nCommands that trigger a deployment, like `skaffold dev`, `skaffold deploy`, `skaffold run`, and `skaffold apply`, monitor select Kubernetes resources and wait for them to become ready.\n\nSkaffold monitors the status of the following resource types:\n\n- [`Pod`](https://kubernetes.io/docs/concepts/workloads/pods/): check that the pod and its containers are in a `Ready` state.\n- [`Deployment`](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/): check the output of `kubectl rollout status deployment` command\n- [`Stateful Sets`](https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/): check the output of `kubectl rollout status statefulset` command\n\n#### Note\n\n- Status checking is enabled by default; it can be disabled with the `--status-check=false` flag, or by setting the `statusCheck` field of the deployment config stanza in the `skaffold.yaml` to false.\n\n- If there are multiple skaffold `modules` active, then setting `statusCheck` field of the deployment config stanza will only disable status-check for that config. However using the `--status-check=false` flag will disable it for all modules.\n\n- Deployed resource logs are suppressed until status-check passes. If you need the detailed logs to diagnose a status failure then rerun with the `--status-check=false` flag.\n\n## Configuring timeout for `status-check`\n\nYou can also configure the time for deployments to stabilize with the `statusCheckDeadlineSeconds` config field in the `skaffold.yaml`.\n\nFor example, to configure deployments to stabilize within 5 minutes:\n\n```yaml\ndeploy:\n  statusCheckDeadlineSeconds: 300\n  kubectl: {}\n```\n\nWith the `--status-check` flag, for each `Deployment` resource, `skaffold deploy` will wait for the time specified by [`progressDeadlineSeconds`](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#progress-deadline-seconds) from the deployment configuration.\n\nIf the `Deployment.spec.progressDeadlineSeconds` is not set, Skaffold will either wait for the time specified in the `statusCheckDeadlineSeconds` field of the deployment config stanza in the `skaffold.yaml`, or default to 10 minutes if this is not specified.\n\nIn the case that both `statusCheckDeadlineSeconds` and `Deployment.spec.progressDeadlineSeconds` are set, precedence is given to `Deployment.spec.progressDeadline` **only if it is less than** `statusCheckDeadlineSeconds`.\n\n## Configuring failure behavior for `status-check`\n\nYou can also configure status checking’s failure tolerance with the `tolerateFailuresUntilDeadline` config field in the `skaffold.yaml` as well as the flag `--tolerate-failures-until-deadline`.\n\nThe `tolerateFailuresUntilDeadline` modifies the status check to no longer exit when a single deployment fails (desired for local dev) but to instead tolerate failures until the status check deadline is reached (either default 10 minute deadline or specified via `statusCheckDeadlineSeconds`). As such it should normally be used with the `statusCheckDeadlineSeconds` option so that the deadline is known/set by the user. This is useful in CI/CD use cases where deployments may fail/flap for a time period while different services initialize but eventually are healthy and stable. Using this command essentially makes it so that skaffold waits for all deployed resources to be successful or times out, not exiting on any single deployment failure (which might go away) as the status check does by default.\n\n## Configuring `status-check` for multiple deployers or multiple modules\n\nIf you define multiple deployers, say `kubectl`, `helm`, and `kustomize`, all in the same skaffold config, or compose a multi-config project by importing other configs as dependencies, then the `status-check` can be run in one of two ways:\n\n- _Single status check after all deployers are run_. This is the default and it runs a single `status-check` at the end for resources deployed from all deployers across all skaffold configs.\n- _Per-deployer status check_. This can be enabled by using the `--iterative-status-check=true` flag. This will run a `status-check` iteratively after every individual deployer runs. This can be especially useful when there are startup dependencies between services, or you need to strictly enforce the time and order in which resources are deployed.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/status-check", "title": "Deploy Status Checking", "description": "This page describes how Skaffold’s deployment status checking waits for deployed resources to become ready, and reports errors if they fails to stabilize within a certain time period.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:43:05", "type": "overview", "page_metadata": {"ogTitle": "Deploy Status Checking", "og:site_name": "Skaffold", "description": "This page describes how Skaffold’s deployment status checking waits for deployed resources to become ready, and reports errors if they fails to …", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:description": "This page describes how Skaffold’s deployment status checking waits for deployed resources to become ready, and reports errors if they fails to stabilize within a certain time period.\nOverview Commands that trigger a deployment, like skaffold dev, skaffold deploy, skaffold run, and skaffold apply, monitor select Kubernetes resources and wait for them to become ready.\nSkaffold monitors the status of the following resource types:\n Pod: check that the pod and its containers are in a Ready state.", "title": "Deploy Status Checking | Skaffold", "og:type": "article", "article:section": "docs", "ogUrl": "https://skaffold.dev/docs/status-check/", "og:title": "Deploy Status Checking", "og:url": "https://skaffold.dev/docs/status-check/", "article:modified_time": "2025-01-23T10:14:58-05:00", "ogDescription": "This page describes how Skaffold’s deployment status checking waits for deployed resources to become ready, and reports errors if they fails to stabilize within a certain time period.\nOverview Commands that trigger a deployment, like skaffold dev, skaffold deploy, skaffold run, and skaffold apply, monitor select Kubernetes resources and wait for them to become ready.\nSkaffold monitors the status of the following resource types:\n Pod: check that the pod and its containers are in a Ready state.", "twitter:title": "Deploy Status Checking", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "twitter:description": "This page describes how Skaffold’s deployment status checking waits for deployed resources to become ready, and reports errors if they fails to stabilize within a certain time period.\nOverview Commands that trigger a deployment, like skaffold dev, skaffold deploy, skaffold run, and skaffold apply, monitor select Kubernetes resources and wait for them to become ready.\nSkaffold monitors the status of the following resource types:\n Pod: check that the pod and its containers are in a Ready state.", "language": "en", "modifiedTime": "2025-01-23T10:14:58-05:00", "twitter:card": "summary", "robots": "index, follow", "ogSiteName": "Skaffold", "generator": "Hugo 0.99.1", "scrapeId": "8e89dc45-a4db-487a-bfcb-2f1cf6ffaead", "sourceURL": "https://skaffold.dev/docs/status-check", "url": "https://skaffold.dev/docs/status-check/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I overview in skaffold?\n\nAssistant: To overview in skaffold, here's what you do:\nCommands that trigger a deployment, like `skaffold dev`, `skaffold deploy`, `skaffold run`, and `skaffold apply`, monitor select Kubernetes resources and wait for them to become ready.\n\nSkaffold monitors the status of the following resource types:\n\n- [`Pod`](https://kubernetes.io/docs/concepts/workloads/pods/): check that the pod and its containers are in a `Ready` state.\n- [`Deployment`](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/): check the output of `kubectl rollout status deployment` command\n- [`Stateful Sets`](https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/): check the output of `kubectl rollout status statefulset` command\n\n#### Note\n\n- Status checking is enabled by default; it can be disabled with the `--status-check=false` flag, or by setting the `statusCheck` field of the deployment config stanza in the `skaffold.yaml` to false.\n\n- If there are multiple skaffold `modules` active, then setting `statusCheck` field of the deployment config stanza will only disable status-check for that config. However using the `--status-check=false` flag will disable it for all modules.\n\n- Deployed resource logs are suppressed until status-check passes. If you need the detailed logs to diagnose a status failure then rerun with the `--status-check=false` flag..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/status-check", "title": "Deploy Status Checking", "description": "This page describes how Skaffold’s deployment status checking waits for deployed resources to become ready, and reports errors if they fails to stabilize within a certain time period.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:43:05", "type": "section_detail", "page_metadata": {"ogTitle": "Deploy Status Checking", "og:site_name": "Skaffold", "description": "This page describes how Skaffold’s deployment status checking waits for deployed resources to become ready, and reports errors if they fails to …", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:description": "This page describes how Skaffold’s deployment status checking waits for deployed resources to become ready, and reports errors if they fails to stabilize within a certain time period.\nOverview Commands that trigger a deployment, like skaffold dev, skaffold deploy, skaffold run, and skaffold apply, monitor select Kubernetes resources and wait for them to become ready.\nSkaffold monitors the status of the following resource types:\n Pod: check that the pod and its containers are in a Ready state.", "title": "Deploy Status Checking | Skaffold", "og:type": "article", "article:section": "docs", "ogUrl": "https://skaffold.dev/docs/status-check/", "og:title": "Deploy Status Checking", "og:url": "https://skaffold.dev/docs/status-check/", "article:modified_time": "2025-01-23T10:14:58-05:00", "ogDescription": "This page describes how Skaffold’s deployment status checking waits for deployed resources to become ready, and reports errors if they fails to stabilize within a certain time period.\nOverview Commands that trigger a deployment, like skaffold dev, skaffold deploy, skaffold run, and skaffold apply, monitor select Kubernetes resources and wait for them to become ready.\nSkaffold monitors the status of the following resource types:\n Pod: check that the pod and its containers are in a Ready state.", "twitter:title": "Deploy Status Checking", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "twitter:description": "This page describes how Skaffold’s deployment status checking waits for deployed resources to become ready, and reports errors if they fails to stabilize within a certain time period.\nOverview Commands that trigger a deployment, like skaffold dev, skaffold deploy, skaffold run, and skaffold apply, monitor select Kubernetes resources and wait for them to become ready.\nSkaffold monitors the status of the following resource types:\n Pod: check that the pod and its containers are in a Ready state.", "language": "en", "modifiedTime": "2025-01-23T10:14:58-05:00", "twitter:card": "summary", "robots": "index, follow", "ogSiteName": "Skaffold", "generator": "Hugo 0.99.1", "scrapeId": "8e89dc45-a4db-487a-bfcb-2f1cf6ffaead", "sourceURL": "https://skaffold.dev/docs/status-check", "url": "https://skaffold.dev/docs/status-check/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I configuring timeout for `status-check` in skaffold?\n\nAssistant: To configuring timeout for `status-check` in skaffold, here's what you do:\nYou can also configure the time for deployments to stabilize with the `statusCheckDeadlineSeconds` config field in the `skaffold.yaml`.\n\nFor example, to configure deployments to stabilize within 5 minutes:\n\n```yaml\ndeploy:\n  statusCheckDeadlineSeconds: 300\n  kubectl: {}\n```\n\nWith the `--status-check` flag, for each `Deployment` resource, `skaffold deploy` will wait for the time specified by [`progressDeadlineSeconds`](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#progress-deadline-seconds) from the deployment configuration.\n\nIf the `Deployment.spec.progressDeadlineSeconds` is not set, Skaffold will either wait for the time specified in the `statusCheckDeadlineSeconds` field of the deployment config stanza in the `skaffold.yaml`, or default to 10 minutes if this is not specified.\n\nIn the case that both `statusCheckDeadlineSeconds` and `Deployment.spec.progressDeadlineSeconds` are set, precedence is given to `Deployment.spec.progressDeadline` **only if it is less than** `statusCheckDeadlineSeconds`..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/status-check", "title": "Deploy Status Checking", "description": "This page describes how Skaffold’s deployment status checking waits for deployed resources to become ready, and reports errors if they fails to stabilize within a certain time period.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:43:05", "type": "section_detail", "page_metadata": {"ogTitle": "Deploy Status Checking", "og:site_name": "Skaffold", "description": "This page describes how Skaffold’s deployment status checking waits for deployed resources to become ready, and reports errors if they fails to …", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:description": "This page describes how Skaffold’s deployment status checking waits for deployed resources to become ready, and reports errors if they fails to stabilize within a certain time period.\nOverview Commands that trigger a deployment, like skaffold dev, skaffold deploy, skaffold run, and skaffold apply, monitor select Kubernetes resources and wait for them to become ready.\nSkaffold monitors the status of the following resource types:\n Pod: check that the pod and its containers are in a Ready state.", "title": "Deploy Status Checking | Skaffold", "og:type": "article", "article:section": "docs", "ogUrl": "https://skaffold.dev/docs/status-check/", "og:title": "Deploy Status Checking", "og:url": "https://skaffold.dev/docs/status-check/", "article:modified_time": "2025-01-23T10:14:58-05:00", "ogDescription": "This page describes how Skaffold’s deployment status checking waits for deployed resources to become ready, and reports errors if they fails to stabilize within a certain time period.\nOverview Commands that trigger a deployment, like skaffold dev, skaffold deploy, skaffold run, and skaffold apply, monitor select Kubernetes resources and wait for them to become ready.\nSkaffold monitors the status of the following resource types:\n Pod: check that the pod and its containers are in a Ready state.", "twitter:title": "Deploy Status Checking", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "twitter:description": "This page describes how Skaffold’s deployment status checking waits for deployed resources to become ready, and reports errors if they fails to stabilize within a certain time period.\nOverview Commands that trigger a deployment, like skaffold dev, skaffold deploy, skaffold run, and skaffold apply, monitor select Kubernetes resources and wait for them to become ready.\nSkaffold monitors the status of the following resource types:\n Pod: check that the pod and its containers are in a Ready state.", "language": "en", "modifiedTime": "2025-01-23T10:14:58-05:00", "twitter:card": "summary", "robots": "index, follow", "ogSiteName": "Skaffold", "generator": "Hugo 0.99.1", "scrapeId": "8e89dc45-a4db-487a-bfcb-2f1cf6ffaead", "sourceURL": "https://skaffold.dev/docs/status-check", "url": "https://skaffold.dev/docs/status-check/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I configuring failure behavior for `status-check` in skaffold?\n\nAssistant: To configuring failure behavior for `status-check` in skaffold, here's what you do:\nYou can also configure status checking’s failure tolerance with the `tolerateFailuresUntilDeadline` config field in the `skaffold.yaml` as well as the flag `--tolerate-failures-until-deadline`.\n\nThe `tolerateFailuresUntilDeadline` modifies the status check to no longer exit when a single deployment fails (desired for local dev) but to instead tolerate failures until the status check deadline is reached (either default 10 minute deadline or specified via `statusCheckDeadlineSeconds`). As such it should normally be used with the `statusCheckDeadlineSeconds` option so that the deadline is known/set by the user. This is useful in CI/CD use cases where deployments may fail/flap for a time period while different services initialize but eventually are healthy and stable. Using this command essentially makes it so that skaffold waits for all deployed resources to be successful or times out, not exiting on any single deployment failure (which might go away) as the status check does by default..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/status-check", "title": "Deploy Status Checking", "description": "This page describes how Skaffold’s deployment status checking waits for deployed resources to become ready, and reports errors if they fails to stabilize within a certain time period.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:43:05", "type": "section_detail", "page_metadata": {"ogTitle": "Deploy Status Checking", "og:site_name": "Skaffold", "description": "This page describes how Skaffold’s deployment status checking waits for deployed resources to become ready, and reports errors if they fails to …", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:description": "This page describes how Skaffold’s deployment status checking waits for deployed resources to become ready, and reports errors if they fails to stabilize within a certain time period.\nOverview Commands that trigger a deployment, like skaffold dev, skaffold deploy, skaffold run, and skaffold apply, monitor select Kubernetes resources and wait for them to become ready.\nSkaffold monitors the status of the following resource types:\n Pod: check that the pod and its containers are in a Ready state.", "title": "Deploy Status Checking | Skaffold", "og:type": "article", "article:section": "docs", "ogUrl": "https://skaffold.dev/docs/status-check/", "og:title": "Deploy Status Checking", "og:url": "https://skaffold.dev/docs/status-check/", "article:modified_time": "2025-01-23T10:14:58-05:00", "ogDescription": "This page describes how Skaffold’s deployment status checking waits for deployed resources to become ready, and reports errors if they fails to stabilize within a certain time period.\nOverview Commands that trigger a deployment, like skaffold dev, skaffold deploy, skaffold run, and skaffold apply, monitor select Kubernetes resources and wait for them to become ready.\nSkaffold monitors the status of the following resource types:\n Pod: check that the pod and its containers are in a Ready state.", "twitter:title": "Deploy Status Checking", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "twitter:description": "This page describes how Skaffold’s deployment status checking waits for deployed resources to become ready, and reports errors if they fails to stabilize within a certain time period.\nOverview Commands that trigger a deployment, like skaffold dev, skaffold deploy, skaffold run, and skaffold apply, monitor select Kubernetes resources and wait for them to become ready.\nSkaffold monitors the status of the following resource types:\n Pod: check that the pod and its containers are in a Ready state.", "language": "en", "modifiedTime": "2025-01-23T10:14:58-05:00", "twitter:card": "summary", "robots": "index, follow", "ogSiteName": "Skaffold", "generator": "Hugo 0.99.1", "scrapeId": "8e89dc45-a4db-487a-bfcb-2f1cf6ffaead", "sourceURL": "https://skaffold.dev/docs/status-check", "url": "https://skaffold.dev/docs/status-check/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I configuring `status-check` for multiple deployers or multiple modules in skaffold?\n\nAssistant: To configuring `status-check` for multiple deployers or multiple modules in skaffold, here's what you do:\nIf you define multiple deployers, say `kubectl`, `helm`, and `kustomize`, all in the same skaffold config, or compose a multi-config project by importing other configs as dependencies, then the `status-check` can be run in one of two ways:\n\n- _Single status check after all deployers are run_. This is the default and it runs a single `status-check` at the end for resources deployed from all deployers across all skaffold configs.\n- _Per-deployer status check_. This can be enabled by using the `--iterative-status-check=true` flag. This will run a `status-check` iteratively after every individual deployer runs. This can be especially useful when there are startup dependencies between services, or you need to strictly enforce the time and order in which resources are deployed..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/status-check", "title": "Deploy Status Checking", "description": "This page describes how Skaffold’s deployment status checking waits for deployed resources to become ready, and reports errors if they fails to stabilize within a certain time period.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:43:05", "type": "section_detail", "page_metadata": {"ogTitle": "Deploy Status Checking", "og:site_name": "Skaffold", "description": "This page describes how Skaffold’s deployment status checking waits for deployed resources to become ready, and reports errors if they fails to …", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:description": "This page describes how Skaffold’s deployment status checking waits for deployed resources to become ready, and reports errors if they fails to stabilize within a certain time period.\nOverview Commands that trigger a deployment, like skaffold dev, skaffold deploy, skaffold run, and skaffold apply, monitor select Kubernetes resources and wait for them to become ready.\nSkaffold monitors the status of the following resource types:\n Pod: check that the pod and its containers are in a Ready state.", "title": "Deploy Status Checking | Skaffold", "og:type": "article", "article:section": "docs", "ogUrl": "https://skaffold.dev/docs/status-check/", "og:title": "Deploy Status Checking", "og:url": "https://skaffold.dev/docs/status-check/", "article:modified_time": "2025-01-23T10:14:58-05:00", "ogDescription": "This page describes how Skaffold’s deployment status checking waits for deployed resources to become ready, and reports errors if they fails to stabilize within a certain time period.\nOverview Commands that trigger a deployment, like skaffold dev, skaffold deploy, skaffold run, and skaffold apply, monitor select Kubernetes resources and wait for them to become ready.\nSkaffold monitors the status of the following resource types:\n Pod: check that the pod and its containers are in a Ready state.", "twitter:title": "Deploy Status Checking", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "twitter:description": "This page describes how Skaffold’s deployment status checking waits for deployed resources to become ready, and reports errors if they fails to stabilize within a certain time period.\nOverview Commands that trigger a deployment, like skaffold dev, skaffold deploy, skaffold run, and skaffold apply, monitor select Kubernetes resources and wait for them to become ready.\nSkaffold monitors the status of the following resource types:\n Pod: check that the pod and its containers are in a Ready state.", "language": "en", "modifiedTime": "2025-01-23T10:14:58-05:00", "twitter:card": "summary", "robots": "index, follow", "ogSiteName": "Skaffold", "generator": "Hugo 0.99.1", "scrapeId": "8e89dc45-a4db-487a-bfcb-2f1cf6ffaead", "sourceURL": "https://skaffold.dev/docs/status-check", "url": "https://skaffold.dev/docs/status-check/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you give me some code examples for Deploy Status Checking in skaffold?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Deployment Stabilization Log**:\n\n```yaml\nWaiting for deployments to stabilize\n - default:deployment/leeroy-app Waiting for rollout to finish: 0 of 1 updated replicas are available...\n - default:deployment/leeroy-web Waiting for rollout to finish: 0 of 1 updated replicas are available...\n - default:deployment/leeroy-web is ready. [1/2 deployment(s) still pending]\n - default:deployment/leeroy-app is ready.\nDeployments stabilized in 2.168799605s\n\n```\n\nThis snippet shows you how to deployment stabilization log, which is an important aspect of deploy status checking.\n\n**Configuring Deployment Timeout**:\n\n```yaml\n```yaml\ndeploy:\n  statusCheckDeadlineSeconds: 300\n  kubectl: {}\n```\n```\n\nThis snippet shows you how to configuring deployment timeout, which is an important aspect of deploy status checking.\n\n**Deployment Example with Progress Deadline**:\n\n```yaml\n```yaml\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: getting-started\nspec:\n  progressDeadlineSeconds: 300\n  template:\n    spec:\n      containers:\n      - name: cannot-run\n        image: gcr.io/k8s-skaffold/getting-started-foo\n```\n```\n\nThis snippet shows you how to deployment example with progress deadline, which is an important aspect of deploy status checking.\n\n**Skaffold Deploy Command**:\n\n```yaml\n```code\nskaffold deploy --status-check\n```\n```\n\nThis snippet shows you how to skaffold deploy command, which is an important aspect of deploy status checking.\n\n**Deployment Failure Log**:\n\n```yaml\nTags used in deployment:\nStarting deploy...\nkubectl client version: 1.11+\nkubectl version 1.12.0 or greater is recommended for use with Skaffold\n - deployment.apps/getting-started created\nWaiting for deployments to stabilize\n - default:deployment/getting-started Waiting for rollout to finish: 0 of 1 updated replicas are available...\n - default:deployment/getting-started failed. Error: received Ctrl-C or deployments could not stabilize within 1m: kubectl rollout status command interrupted.\nFATA[0006] 1/1 deployment(s) failed\n```\n```\n\nThis snippet shows you how to deployment failure log, which is an important aspect of deploy status checking.\n\n", "metadata": {"source_url": "https://skaffold.dev/docs/status-check", "title": "Deploy Status Checking", "description": "This page describes how Skaffold’s deployment status checking waits for deployed resources to become ready, and reports errors if they fails to stabilize within a certain time period.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:43:05", "type": "code_examples", "page_metadata": {"ogTitle": "Deploy Status Checking", "og:site_name": "Skaffold", "description": "This page describes how Skaffold’s deployment status checking waits for deployed resources to become ready, and reports errors if they fails to …", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:description": "This page describes how Skaffold’s deployment status checking waits for deployed resources to become ready, and reports errors if they fails to stabilize within a certain time period.\nOverview Commands that trigger a deployment, like skaffold dev, skaffold deploy, skaffold run, and skaffold apply, monitor select Kubernetes resources and wait for them to become ready.\nSkaffold monitors the status of the following resource types:\n Pod: check that the pod and its containers are in a Ready state.", "title": "Deploy Status Checking | Skaffold", "og:type": "article", "article:section": "docs", "ogUrl": "https://skaffold.dev/docs/status-check/", "og:title": "Deploy Status Checking", "og:url": "https://skaffold.dev/docs/status-check/", "article:modified_time": "2025-01-23T10:14:58-05:00", "ogDescription": "This page describes how Skaffold’s deployment status checking waits for deployed resources to become ready, and reports errors if they fails to stabilize within a certain time period.\nOverview Commands that trigger a deployment, like skaffold dev, skaffold deploy, skaffold run, and skaffold apply, monitor select Kubernetes resources and wait for them to become ready.\nSkaffold monitors the status of the following resource types:\n Pod: check that the pod and its containers are in a Ready state.", "twitter:title": "Deploy Status Checking", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "twitter:description": "This page describes how Skaffold’s deployment status checking waits for deployed resources to become ready, and reports errors if they fails to stabilize within a certain time period.\nOverview Commands that trigger a deployment, like skaffold dev, skaffold deploy, skaffold run, and skaffold apply, monitor select Kubernetes resources and wait for them to become ready.\nSkaffold monitors the status of the following resource types:\n Pod: check that the pod and its containers are in a Ready state.", "language": "en", "modifiedTime": "2025-01-23T10:14:58-05:00", "twitter:card": "summary", "robots": "index, follow", "ogSiteName": "Skaffold", "generator": "Hugo 0.99.1", "scrapeId": "8e89dc45-a4db-487a-bfcb-2f1cf6ffaead", "sourceURL": "https://skaffold.dev/docs/status-check", "url": "https://skaffold.dev/docs/status-check/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: What are some tips for using Deploy Status Checking in skaffold effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nStatus checking is enabled by default; it can be disabled with the `--status-check=false` flag, or by setting the `statusCheck` field of the deployment config stanza in the `skaffold.yaml` to false.\n\nIf there are multiple skaffold `modules` active, then setting `statusCheck` field of the deployment config stanza will only disable status-check for that config. However using the `--status-check=false` flag will disable it for all modules.\n\nDeployed resource logs are suppressed until status-check passes. If you need the detailed logs to diagnose a status failure then rerun with the `--status-check=false` flag.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://skaffold.dev/docs/status-check", "title": "Deploy Status Checking", "description": "This page describes how Skaffold’s deployment status checking waits for deployed resources to become ready, and reports errors if they fails to stabilize within a certain time period.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:43:05", "type": "best_practices", "page_metadata": {"ogTitle": "Deploy Status Checking", "og:site_name": "Skaffold", "description": "This page describes how Skaffold’s deployment status checking waits for deployed resources to become ready, and reports errors if they fails to …", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:description": "This page describes how Skaffold’s deployment status checking waits for deployed resources to become ready, and reports errors if they fails to stabilize within a certain time period.\nOverview Commands that trigger a deployment, like skaffold dev, skaffold deploy, skaffold run, and skaffold apply, monitor select Kubernetes resources and wait for them to become ready.\nSkaffold monitors the status of the following resource types:\n Pod: check that the pod and its containers are in a Ready state.", "title": "Deploy Status Checking | Skaffold", "og:type": "article", "article:section": "docs", "ogUrl": "https://skaffold.dev/docs/status-check/", "og:title": "Deploy Status Checking", "og:url": "https://skaffold.dev/docs/status-check/", "article:modified_time": "2025-01-23T10:14:58-05:00", "ogDescription": "This page describes how Skaffold’s deployment status checking waits for deployed resources to become ready, and reports errors if they fails to stabilize within a certain time period.\nOverview Commands that trigger a deployment, like skaffold dev, skaffold deploy, skaffold run, and skaffold apply, monitor select Kubernetes resources and wait for them to become ready.\nSkaffold monitors the status of the following resource types:\n Pod: check that the pod and its containers are in a Ready state.", "twitter:title": "Deploy Status Checking", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "twitter:description": "This page describes how Skaffold’s deployment status checking waits for deployed resources to become ready, and reports errors if they fails to stabilize within a certain time period.\nOverview Commands that trigger a deployment, like skaffold dev, skaffold deploy, skaffold run, and skaffold apply, monitor select Kubernetes resources and wait for them to become ready.\nSkaffold monitors the status of the following resource types:\n Pod: check that the pod and its containers are in a Ready state.", "language": "en", "modifiedTime": "2025-01-23T10:14:58-05:00", "twitter:card": "summary", "robots": "index, follow", "ogSiteName": "Skaffold", "generator": "Hugo 0.99.1", "scrapeId": "8e89dc45-a4db-487a-bfcb-2f1cf6ffaead", "sourceURL": "https://skaffold.dev/docs/status-check", "url": "https://skaffold.dev/docs/status-check/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what Lifecycle Hooks is in skaffold?\n\nAssistant: Sure, I'd be happy to explain Lifecycle Hooks in skaffold.\n\n# Lifecycle Hooks\n\nThis page describes how to use the lifecycle hook framework to run code triggered by different events during the skaffold process lifecycle.Here's a quick rundown of what this is about:\n\n## Overview\n\nWe identify three distinct phases in skaffold - `build`, `sync` and `deploy`. Skaffold can trigger a hook `before` or `after` executing each phase. There are two types of `hooks` that can be defined - `host` hooks and `container` hooks.\n\n## Host hooks\n\nHost hooks are executed on the runner and can be defined for the following phases:\n\n### `before-build` and `after-build`\n\nBuild hooks are executed before and after each artifact is built.\nIf an artifact is not built, such as happens when the image was found in the Skaffold image cache, then the build hooks will not be executed.\nTo force the build hooks, run Skaffold with `--cache-artifacts=false` option.\n\nExample: _skaffold.yaml_ snippet\n\n```yaml\nbuild:\n  artifacts:\n  - image: hooks-example\n    hooks:\n      before:\n        - command: [\"sh\", \"-c\", \"./hook.sh\"]\n          os: [darwin, linux]\n        - command: [\"cmd.exe\", \"/C\", \"hook.bat\"]\n          os: [windows]\n      after:\n        - command: [\"sh\", \"-c\", \"./hook.sh\"]\n          os: [darwin, linux]\n        - command: [\"cmd.exe\", \"/C\", \"hook.bat\"]\n          os: [windows]\n```\n\nThis config snippet defines that `hook.sh` (for `darwin` or `linux` OS) or `hook.bat` (for `windows` OS) will be executed `before` and `after` each build for artifact `hooks-example`.\n\n### `before-sync` and `after-sync`\n\nExample: _skaffold.yaml_ snippet\n\n```yaml\nbuild:\n  artifacts:\n  - image: hooks-example\n    sync:\n      auto: {}\n      hooks:\n        before:\n          - host:\n              command: [\"sh\", \"-c\", \"./hook.sh\"]\n              os: [darwin, linux]\n          - host:\n              command: [\"cmd.exe\", \"/C\", \"hook.bat\"]\n              os: [windows]\n        after:\n          - host:\n              command: [\"sh\", \"-c\", \"./hook.sh\"]\n              os: [darwin, linux]\n          - host:\n              command: [\"cmd.exe\", \"/C\", \"hook.bat\"]\n              os: [windows]\n```\n\nThis config snippet defines that `hook.sh` (for `darwin` or `linux` OS) or `hook.bat` (for `windows` OS) will be executed `before` and `after` each file sync operation for artifact `hooks-example`.\n\n### `before-deploy` and `after-deploy`\n\nExample: _skaffold.yaml_ snippet\n\n```yaml\ndeploy:\n  kubectl:\n    manifests:\n      - deployment.yaml\n    hooks:\n      before:\n        - host:\n            command: [\"sh\", \"-c\", \"echo pre-deploy host hook running on $(hostname)!\"]\n            os: [darwin, linux]\n      after:\n        - host:\n            command: [\"sh\", \"-c\", \"echo post-deploy host hook running on $(hostname)!\"]\n```\n\nThis config snippet defines a simple `echo` command to run before and after each `kubectl` deploy.\n\n### Environment variables\n\nThe following environment variables will be available for the corresponding phase host hooks, that can be resolved in both inline commands or scripts.\n\n| Environment variable | Description | Availability |\n| --- | --- | --- |\n| $SKAFFOLD_IMAGE | The fully qualified image name. For example, “gcr.io/image1:tag” | Build, Sync |\n| $SKAFFOLD_PUSH_IMAGE | Set to true if the image in $IMAGE is expected to exist in a remote registry. Set to false if the image is expected to exist locally. | Build |\n| $SKAFFOLD_IMAGE_REPO | The image repo. For example, “gcr.io/image1” | Build |\n| $SKAFFOLD_IMAGE_TAG | The image tag. For example, “tag” | Build |\n| $SKAFFOLD_BUILD_CONTEXT | An absolute path to the directory this artifact is meant to be built from. Specified by artifact context in the skaffold.yaml. | Build |\n| $SKAFFOLD_FILES_ADDED_OR_MODIFIED | Semi-colon delimited list of absolute path to all files synced or to be synced in current dev loop that have been added or modified | Sync |\n| $SKAFFOLD_FILES_DELETED | Semi-colon delimited list of absolute path to all files synced or to be synced in current dev loop that have been deleted | Sync |\n| $SKAFFOLD_RUN_ID | Run specific UUID label for deployed or to be deployed resources | Deploy |\n| $SKAFFOLD_DEFAULT_REPO | The resolved default repository | All |\n| $SKAFFOLD_RPC_PORT | TCP port to expose event API | All |\n| $SKAFFOLD_HTTP_PORT | TCP port to expose event REST API over HTTP | All |\n| $SKAFFOLD_KUBE_CONTEXT | The resolved Kubernetes context | Sync, Deploy |\n| $SKAFFOLD_MULTI_LEVEL_REPO | The multi-level support of the repository | All |\n| $SKAFFOLD_NAMESPACES | Comma separated list of Kubernetes namespaces | Sync, Deploy |\n| $SKAFFOLD_WORK_DIR | The workspace root directory | All |\n| Local environment variables | The current state of the local environment (e.g. $HOST, $PATH). Determined by the golang os.Environ function. | All |\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/lifecycle-hooks", "title": "Lifecycle Hooks", "description": "This page describes how to use the lifecycle hook framework to run code triggered by different events during the skaffold process lifecycle.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:43:40", "type": "overview", "page_metadata": {"ogDescription": "This page describes how to use the lifecycle hook framework to run code triggered by different events during the skaffold process lifecycle.\nOverview We identify three distinct phases in skaffold - build, sync and deploy. Skaffold can trigger a hook before or after executing each phase. There are two types of hooks that can be defined - host hooks and container hooks.\nHost hooks Host hooks are executed on the runner and can be defined for the following phases:", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:description": "This page describes how to use the lifecycle hook framework to run code triggered by different events during the skaffold process lifecycle.\nOverview We identify three distinct phases in skaffold - build, sync and deploy. Skaffold can trigger a hook before or after executing each phase. There are two types of hooks that can be defined - host hooks and container hooks.\nHost hooks Host hooks are executed on the runner and can be defined for the following phases:", "twitter:title": "Lifecycle Hooks", "og:type": "article", "og:url": "https://skaffold.dev/docs/lifecycle-hooks/", "article:modified_time": "2025-01-23T10:14:58-05:00", "description": "This page describes how to use the lifecycle hook framework to run code triggered by different events during the skaffold process lifecycle.\nOverview …", "article:section": "docs", "og:title": "Lifecycle Hooks", "ogUrl": "https://skaffold.dev/docs/lifecycle-hooks/", "generator": "Hugo 0.99.1", "og:site_name": "Skaffold", "ogTitle": "Lifecycle Hooks", "language": "en", "twitter:card": "summary", "title": "Lifecycle Hooks | Skaffold", "twitter:description": "This page describes how to use the lifecycle hook framework to run code triggered by different events during the skaffold process lifecycle.\nOverview We identify three distinct phases in skaffold - build, sync and deploy. Skaffold can trigger a hook before or after executing each phase. There are two types of hooks that can be defined - host hooks and container hooks.\nHost hooks Host hooks are executed on the runner and can be defined for the following phases:", "ogSiteName": "Skaffold", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "modifiedTime": "2025-01-23T10:14:58-05:00", "robots": "index, follow", "scrapeId": "fb25d03b-8481-4174-a2c0-24caf499f66b", "sourceURL": "https://skaffold.dev/docs/lifecycle-hooks", "url": "https://skaffold.dev/docs/lifecycle-hooks/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I overview in skaffold?\n\nAssistant: To overview in skaffold, here's what you do:\nWe identify three distinct phases in skaffold - `build`, `sync` and `deploy`. Skaffold can trigger a hook `before` or `after` executing each phase. There are two types of `hooks` that can be defined - `host` hooks and `container` hooks..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/lifecycle-hooks", "title": "Lifecycle Hooks", "description": "This page describes how to use the lifecycle hook framework to run code triggered by different events during the skaffold process lifecycle.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:43:40", "type": "section_detail", "page_metadata": {"ogDescription": "This page describes how to use the lifecycle hook framework to run code triggered by different events during the skaffold process lifecycle.\nOverview We identify three distinct phases in skaffold - build, sync and deploy. Skaffold can trigger a hook before or after executing each phase. There are two types of hooks that can be defined - host hooks and container hooks.\nHost hooks Host hooks are executed on the runner and can be defined for the following phases:", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:description": "This page describes how to use the lifecycle hook framework to run code triggered by different events during the skaffold process lifecycle.\nOverview We identify three distinct phases in skaffold - build, sync and deploy. Skaffold can trigger a hook before or after executing each phase. There are two types of hooks that can be defined - host hooks and container hooks.\nHost hooks Host hooks are executed on the runner and can be defined for the following phases:", "twitter:title": "Lifecycle Hooks", "og:type": "article", "og:url": "https://skaffold.dev/docs/lifecycle-hooks/", "article:modified_time": "2025-01-23T10:14:58-05:00", "description": "This page describes how to use the lifecycle hook framework to run code triggered by different events during the skaffold process lifecycle.\nOverview …", "article:section": "docs", "og:title": "Lifecycle Hooks", "ogUrl": "https://skaffold.dev/docs/lifecycle-hooks/", "generator": "Hugo 0.99.1", "og:site_name": "Skaffold", "ogTitle": "Lifecycle Hooks", "language": "en", "twitter:card": "summary", "title": "Lifecycle Hooks | Skaffold", "twitter:description": "This page describes how to use the lifecycle hook framework to run code triggered by different events during the skaffold process lifecycle.\nOverview We identify three distinct phases in skaffold - build, sync and deploy. Skaffold can trigger a hook before or after executing each phase. There are two types of hooks that can be defined - host hooks and container hooks.\nHost hooks Host hooks are executed on the runner and can be defined for the following phases:", "ogSiteName": "Skaffold", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "modifiedTime": "2025-01-23T10:14:58-05:00", "robots": "index, follow", "scrapeId": "fb25d03b-8481-4174-a2c0-24caf499f66b", "sourceURL": "https://skaffold.dev/docs/lifecycle-hooks", "url": "https://skaffold.dev/docs/lifecycle-hooks/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I host hooks in skaffold?\n\nAssistant: To host hooks in skaffold, here's what you do:\nHost hooks are executed on the runner and can be defined for the following phases:\n\n### `before-build` and `after-build`\n\nBuild hooks are executed before and after each artifact is built.\nIf an artifact is not built, such as happens when the image was found in the Skaffold image cache, then the build hooks will not be executed.\nTo force the build hooks, run Skaffold with `--cache-artifacts=false` option.\n\nExample: _skaffold.yaml_ snippet\n\n```yaml\nbuild:\n  artifacts:\n  - image: hooks-example\n    hooks:\n      before:\n        - command: [\"sh\", \"-c\", \"./hook.sh\"]\n          os: [darwin, linux]\n        - command: [\"cmd.exe\", \"/C\", \"hook.bat\"]\n          os: [windows]\n      after:\n        - command: [\"sh\", \"-c\", \"./hook.sh\"]\n          os: [darwin, linux]\n        - command: [\"cmd.exe\", \"/C\", \"hook.bat\"]\n          os: [windows]\n```\n\nThis config snippet defines that `hook.sh` (for `darwin` or `linux` OS) or `hook.bat` (for `windows` OS) will be executed `before` and `after` each build for artifact `hooks-example`.\n\n### `before-sync` and `after-sync`\n\nExample: _skaffold.yaml_ snippet\n\n```yaml\nbuild:\n  artifacts:\n  - image: hooks-example\n    sync:\n      auto: {}\n      hooks:\n        before:\n          - host:\n              command: [\"sh\", \"-c\", \"./hook.sh\"]\n              os: [darwin, linux]\n          - host:\n              command: [\"cmd.exe\", \"/C\", \"hook.bat\"]\n              os: [windows]\n        after:\n          - host:\n              command: [\"sh\", \"-c\", \"./hook.sh\"]\n              os: [darwin, linux]\n          - host:\n              command: [\"cmd.exe\", \"/C\", \"hook.bat\"]\n              os: [windows]\n```\n\nThis config snippet defines that `hook.sh` (for `darwin` or `linux` OS) or `hook.bat` (for `windows` OS) will be executed `before` and `after` each file sync operation for artifact `hooks-example`.\n\n### `before-deploy` and `after-deploy`\n\nExample: _skaffold.yaml_ snippet\n\n```yaml\ndeploy:\n  kubectl:\n    manifests:\n      - deployment.yaml\n    hooks:\n      before:\n        - host:\n            command: [\"sh\", \"-c\", \"echo pre-deploy host hook running on $(hostname)!\"]\n            os: [darwin, linux]\n      after:\n        - host:\n            command: [\"sh\", \"-c\", \"echo post-deploy host hook running on $(hostname)!\"]\n```\n\nThis config snippet defines a simple `echo` command to run before and after each `kubectl` deploy.\n\n### Environment variables\n\nThe following environment variables will be available for the corresponding phase host hooks, that can be resolved in both inline commands or scripts.\n\n| Environment variable | Description | Availability |\n| --- | --- | --- |\n| $SKAFFOLD_IMAGE | The fully qualified image name. For example, “gcr.io/image1:tag” | Build, Sync |\n| $SKAFFOLD_PUSH_IMAGE | Set to true if the image in $IMAGE is expected to exist in a remote registry. Set to false if the image is expected to exist locally. | Build |\n| $SKAFFOLD_IMAGE_REPO | The image repo. For example, “gcr.io/image1” | Build |\n| $SKAFFOLD_IMAGE_TAG | The image tag. For example, “tag” | Build |\n| $SKAFFOLD_BUILD_CONTEXT | An absolute path to the directory this artifact is meant to be built from. Specified by artifact context in the skaffold.yaml. | Build |\n| $SKAFFOLD_FILES_ADDED_OR_MODIFIED | Semi-colon delimited list of absolute path to all files synced or to be synced in current dev loop that have been added or modified | Sync |\n| $SKAFFOLD_FILES_DELETED | Semi-colon delimited list of absolute path to all files synced or to be synced in current dev loop that have been deleted | Sync |\n| $SKAFFOLD_RUN_ID | Run specific UUID label for deployed or to be deployed resources | Deploy |\n| $SKAFFOLD_DEFAULT_REPO | The resolved default repository | All |\n| $SKAFFOLD_RPC_PORT | TCP port to expose event API | All |\n| $SKAFFOLD_HTTP_PORT | TCP port to expose event REST API over HTTP | All |\n| $SKAFFOLD_KUBE_CONTEXT | The resolved Kubernetes context | Sync, Deploy |\n| $SKAFFOLD_MULTI_LEVEL_REPO | The multi-level support of the repository | All |\n| $SKAFFOLD_NAMESPACES | Comma separated list of Kubernetes namespaces | Sync, Deploy |\n| $SKAFFOLD_WORK_DIR | The workspace root directory | All |\n| Local environment variables | The current state of the local environment (e.g. $HOST, $PATH). Determined by the golang os.Environ function. | All |.\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/lifecycle-hooks", "title": "Lifecycle Hooks", "description": "This page describes how to use the lifecycle hook framework to run code triggered by different events during the skaffold process lifecycle.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:43:40", "type": "section_detail", "page_metadata": {"ogDescription": "This page describes how to use the lifecycle hook framework to run code triggered by different events during the skaffold process lifecycle.\nOverview We identify three distinct phases in skaffold - build, sync and deploy. Skaffold can trigger a hook before or after executing each phase. There are two types of hooks that can be defined - host hooks and container hooks.\nHost hooks Host hooks are executed on the runner and can be defined for the following phases:", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:description": "This page describes how to use the lifecycle hook framework to run code triggered by different events during the skaffold process lifecycle.\nOverview We identify three distinct phases in skaffold - build, sync and deploy. Skaffold can trigger a hook before or after executing each phase. There are two types of hooks that can be defined - host hooks and container hooks.\nHost hooks Host hooks are executed on the runner and can be defined for the following phases:", "twitter:title": "Lifecycle Hooks", "og:type": "article", "og:url": "https://skaffold.dev/docs/lifecycle-hooks/", "article:modified_time": "2025-01-23T10:14:58-05:00", "description": "This page describes how to use the lifecycle hook framework to run code triggered by different events during the skaffold process lifecycle.\nOverview …", "article:section": "docs", "og:title": "Lifecycle Hooks", "ogUrl": "https://skaffold.dev/docs/lifecycle-hooks/", "generator": "Hugo 0.99.1", "og:site_name": "Skaffold", "ogTitle": "Lifecycle Hooks", "language": "en", "twitter:card": "summary", "title": "Lifecycle Hooks | Skaffold", "twitter:description": "This page describes how to use the lifecycle hook framework to run code triggered by different events during the skaffold process lifecycle.\nOverview We identify three distinct phases in skaffold - build, sync and deploy. Skaffold can trigger a hook before or after executing each phase. There are two types of hooks that can be defined - host hooks and container hooks.\nHost hooks Host hooks are executed on the runner and can be defined for the following phases:", "ogSiteName": "Skaffold", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "modifiedTime": "2025-01-23T10:14:58-05:00", "robots": "index, follow", "scrapeId": "fb25d03b-8481-4174-a2c0-24caf499f66b", "sourceURL": "https://skaffold.dev/docs/lifecycle-hooks", "url": "https://skaffold.dev/docs/lifecycle-hooks/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you give me some code examples for Lifecycle Hooks in skaffold?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**before-build and after-build**:\n\n```yaml\n```yaml\nbuild:\n  artifacts:\n  - image: hooks-example\n    hooks:\n      before:\n        - command: [\"sh\", \"-c\", \"./hook.sh\"]\n          os: [darwin, linux]\n        - command: [\"cmd.exe\", \"/C\", \"hook.bat\"]\n          os: [windows]\n      after:\n        - command: [\"sh\", \"-c\", \"./hook.sh\"]\n          os: [darwin, linux]\n        - command: [\"cmd.exe\", \"/C\", \"hook.bat\"]\n          os: [windows]\n```\n```\n\nThis snippet shows you how to before-build and after-build, which is an important aspect of lifecycle hooks.\n\n**before-sync and after-sync**:\n\n```yaml\n```yaml\nbuild:\n  artifacts:\n  - image: hooks-example\n    sync:\n      auto: {}\n      hooks:\n        before:\n          - host:\n              command: [\"sh\", \"-c\", \"./hook.sh\"]\n              os: [darwin, linux]\n          - host:\n              command: [\"cmd.exe\", \"/C\", \"hook.bat\"]\n              os: [windows]\n        after:\n          - host:\n              command: [\"sh\", \"-c\", \"./hook.sh\"]\n              os: [darwin, linux]\n          - host:\n              command: [\"cmd.exe\", \"/C\", \"hook.bat\"]\n              os: [windows]\n```\n```\n\nThis snippet shows you how to before-sync and after-sync, which is an important aspect of lifecycle hooks.\n\n**before-deploy and after-deploy (host hooks)**:\n\n```yaml\n```yaml\ndeploy:\n  kubectl:\n    manifests:\n      - deployment.yaml\n    hooks:\n      before:\n        - host:\n            command: [\"sh\", \"-c\", \"echo pre-deploy host hook running on $(hostname)!\"]\n            os: [darwin, linux]\n      after:\n        - host:\n            command: [\"sh\", \"-c\", \"echo post-deploy host hook running on $(hostname)!\"]\n```\n```\n\nThis snippet shows you how to before-deploy and after-deploy (host hooks), which is an important aspect of lifecycle hooks.\n\n**before-sync and after-sync (container hooks)**:\n\n```yaml\n```yaml\nbuild:\n  artifacts:\n  - image: hooks-example\n    sync:\n      auto: {}\n      hooks:\n        before:\n          - container:\n              command: [\"sh\", \"-c\", \"echo before sync hook\"]\n        after:\n          - container:\n              command: [\"sh\", \"-c\", \"echo after sync hook\"]\n```\n```\n\nThis snippet shows you how to before-sync and after-sync (container hooks), which is an important aspect of lifecycle hooks.\n\n**before-deploy and after-deploy (container hooks)**:\n\n```yaml\n```yaml\ndeploy:\n  kubectl:\n    manifests:\n      - deployment.yaml\n    hooks:\n      before:\n        - container:\n            command: [\"sh\", \"-c\", \"echo pre-deploy container hook running on $(hostname)!\"]\n            containerName: hooks-example*\n            podName: hooks-example-deployment*\n      after:\n        - container:\n            command: [\"sh\", \"-c\", \"echo post-deploy container hook running on $(hostname)!\"]\n            containerName: hooks-example*\n            podName: hooks-example-deployment*\n```\n```\n\nThis snippet shows you how to before-deploy and after-deploy (container hooks), which is an important aspect of lifecycle hooks.\n\n", "metadata": {"source_url": "https://skaffold.dev/docs/lifecycle-hooks", "title": "Lifecycle Hooks", "description": "This page describes how to use the lifecycle hook framework to run code triggered by different events during the skaffold process lifecycle.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:43:40", "type": "code_examples", "page_metadata": {"ogDescription": "This page describes how to use the lifecycle hook framework to run code triggered by different events during the skaffold process lifecycle.\nOverview We identify three distinct phases in skaffold - build, sync and deploy. Skaffold can trigger a hook before or after executing each phase. There are two types of hooks that can be defined - host hooks and container hooks.\nHost hooks Host hooks are executed on the runner and can be defined for the following phases:", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:description": "This page describes how to use the lifecycle hook framework to run code triggered by different events during the skaffold process lifecycle.\nOverview We identify three distinct phases in skaffold - build, sync and deploy. Skaffold can trigger a hook before or after executing each phase. There are two types of hooks that can be defined - host hooks and container hooks.\nHost hooks Host hooks are executed on the runner and can be defined for the following phases:", "twitter:title": "Lifecycle Hooks", "og:type": "article", "og:url": "https://skaffold.dev/docs/lifecycle-hooks/", "article:modified_time": "2025-01-23T10:14:58-05:00", "description": "This page describes how to use the lifecycle hook framework to run code triggered by different events during the skaffold process lifecycle.\nOverview …", "article:section": "docs", "og:title": "Lifecycle Hooks", "ogUrl": "https://skaffold.dev/docs/lifecycle-hooks/", "generator": "Hugo 0.99.1", "og:site_name": "Skaffold", "ogTitle": "Lifecycle Hooks", "language": "en", "twitter:card": "summary", "title": "Lifecycle Hooks | Skaffold", "twitter:description": "This page describes how to use the lifecycle hook framework to run code triggered by different events during the skaffold process lifecycle.\nOverview We identify three distinct phases in skaffold - build, sync and deploy. Skaffold can trigger a hook before or after executing each phase. There are two types of hooks that can be defined - host hooks and container hooks.\nHost hooks Host hooks are executed on the runner and can be defined for the following phases:", "ogSiteName": "Skaffold", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "modifiedTime": "2025-01-23T10:14:58-05:00", "robots": "index, follow", "scrapeId": "fb25d03b-8481-4174-a2c0-24caf499f66b", "sourceURL": "https://skaffold.dev/docs/lifecycle-hooks", "url": "https://skaffold.dev/docs/lifecycle-hooks/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: What are some tips for using Lifecycle Hooks in skaffold effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nTo force the build hooks, run Skaffold with `--cache-artifacts=false` option.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://skaffold.dev/docs/lifecycle-hooks", "title": "Lifecycle Hooks", "description": "This page describes how to use the lifecycle hook framework to run code triggered by different events during the skaffold process lifecycle.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:43:40", "type": "best_practices", "page_metadata": {"ogDescription": "This page describes how to use the lifecycle hook framework to run code triggered by different events during the skaffold process lifecycle.\nOverview We identify three distinct phases in skaffold - build, sync and deploy. Skaffold can trigger a hook before or after executing each phase. There are two types of hooks that can be defined - host hooks and container hooks.\nHost hooks Host hooks are executed on the runner and can be defined for the following phases:", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:description": "This page describes how to use the lifecycle hook framework to run code triggered by different events during the skaffold process lifecycle.\nOverview We identify three distinct phases in skaffold - build, sync and deploy. Skaffold can trigger a hook before or after executing each phase. There are two types of hooks that can be defined - host hooks and container hooks.\nHost hooks Host hooks are executed on the runner and can be defined for the following phases:", "twitter:title": "Lifecycle Hooks", "og:type": "article", "og:url": "https://skaffold.dev/docs/lifecycle-hooks/", "article:modified_time": "2025-01-23T10:14:58-05:00", "description": "This page describes how to use the lifecycle hook framework to run code triggered by different events during the skaffold process lifecycle.\nOverview …", "article:section": "docs", "og:title": "Lifecycle Hooks", "ogUrl": "https://skaffold.dev/docs/lifecycle-hooks/", "generator": "Hugo 0.99.1", "og:site_name": "Skaffold", "ogTitle": "Lifecycle Hooks", "language": "en", "twitter:card": "summary", "title": "Lifecycle Hooks | Skaffold", "twitter:description": "This page describes how to use the lifecycle hook framework to run code triggered by different events during the skaffold process lifecycle.\nOverview We identify three distinct phases in skaffold - build, sync and deploy. Skaffold can trigger a hook before or after executing each phase. There are two types of hooks that can be defined - host hooks and container hooks.\nHost hooks Host hooks are executed on the runner and can be defined for the following phases:", "ogSiteName": "Skaffold", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "modifiedTime": "2025-01-23T10:14:58-05:00", "robots": "index, follow", "scrapeId": "fb25d03b-8481-4174-a2c0-24caf499f66b", "sourceURL": "https://skaffold.dev/docs/lifecycle-hooks", "url": "https://skaffold.dev/docs/lifecycle-hooks/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what Port Forwarding is in skaffold?\n\nAssistant: Sure, I'd be happy to explain Port Forwarding in skaffold.\n\n# Port Forwarding\n\nSkaffold has built-in support for forwarding ports from exposed Kubernetes resources on your cluster to your local machine when running in dev, debug, deploy, or run modes.Here's a quick rundown of what this is about:\n\n## Automatic Port Forwarding\n\nSkaffold supports automatic port forwarding the following classes of resources:\n\n- `user`: explicit port-forwards defined in the `skaffold.yaml` (called [_user-defined port forwards_](https://skaffold.dev/docs/port-forwarding/#UDPF))\n- `services`: ports exposed on services deployed by Skaffold.\n- `debug`: debugging ports as enabled by `skaffold debug` for Skaffold-built images.\n- `pods`: all `containerPort` s on deployed pods for Skaffold-built images.\n\nSkaffold enables certain classes of forwards by default depending on the Skaffold command used. These defaults can be overridden with the `--port-forward` flag, and port-forwarding can be disabled with `--port-forward=off`.\n\n| Command-line | Default modes |\n| --- | --- |\n| `skaffold dev` | `user` |\n| `skaffold dev --port-forward` | `user`, `services` |\n| `skaffold dev --port-forward=off` | _no ports forwarded_ |\n| `skaffold debug` | `user`, `debug` |\n| `skaffold debug --port-forward` | `user`, `services`, `debug`( _see note below_) |\n| `skaffold debug --port-forward=off` | _no ports forwarded_ |\n| `skaffold deploy` | `off` |\n| `skaffold deploy --port-forward` | `user`, `services` |\n| `skaffold run` | `off` |\n| `skaffold run --port-forward` | `user`, `services` |\n\n#### Compatibility Note\n\nNote that `skaffold debug --port-forward` previously enabled the equivalent of `pods` as Skaffold did not have an equivalent of `debug`. We have replaced `pods` as it caused confusion.\n\n## User-Defined Port Forwarding\n\nUsers can define additional resources to port forward in the skaffold config, to enable port forwarding for\n\n- additional resource types supported by `kubectl port-forward` e.g. `Deployment` or `ReplicaSet`.\n- additional pods running containers which run images not built by Skaffold.\n\nFor example:\n\n```yaml\nportForward:\n- resourceType: deployment\n  resourceName: myDep\n  namespace: mynamespace\n  port: 8080\n  localPort: 9000 # *Optional*\n```\n\nFor this example, Skaffold will attempt to forward port 8080 to `localhost:9000`. If port 9000 is unavailable, Skaffold will forward to a random open port.\n\n#### Note about forwarding System Ports\n\nSkaffold will request matching local ports only when the remote port is `> 1023`. So a service on port `8080` would still map to port `8080` (if available), but a service on port `80` will be mapped to some port `≥ 1024`.\n\nUser-defined port-forwards in the `skaffold.yaml` are unaffected and can bind to system ports.\n\n#### Note about user-defined port-forwarding for Docker deployments\n\nWhen [deploying to Docker](https://skaffold.dev/docs/deployers/docker/) with a user-defined port-forward in the `skaffold.yaml`, the `resourceType` of `portForward` must be set to `container`. Otherwise, Skaffold will not tell the Docker daemon to expose that port.\n\nSkaffold will run `kubectl port-forward` on each of these resources in addition to the automatic port forwarding described above. Acceptable resource types include: `Service`, `Pod` and Controller resource type that has a pod spec: `ReplicaSet`, `ReplicationController`, `Deployment`, `StatefulSet`, `DaemonSet`, `Job`, `CronJob`.\n\n## Field Definitions\n\n| Field | Values | Mandatory |\n| --- | --- | --- |\n| resourceType | `pod`, `service`, `deployment`, `replicaset`, `statefulset`, `replicationcontroller`, `daemonset`, `job`, `cronjob`, `container` | Yes |\n| resourceName | Name of the resource to forward. | Yes |\n| namespace | The namespace of the resource to port forward. | No. Defaults to current namespace, or `default` if no current namespace is defined |\n| port | Port is the resource port that will be forwarded. | Yes |\n| address | Address is the address on which the forward will be bound. | No. Defaults to `127.0.0.1` |\n| localPort | LocalPort is the local port to forward too. | No. Defaults to value set for `port`. |\n\nSkaffold will run `kubectl port-forward` on all user defined resources. `kubectl port-forward` will select one pod created by that resource to forward too.\n\nFor example, forwarding a deployment that creates 3 replicas could look like this:\n\n```yaml\nportForward:\n- resourceType: deployment\n  resourceName: myDep\n  namespace: mynamespace\n  port: 8080\n  localPort: 9000\n```\n\n![portforward_deployment](https://skaffold.dev/images/portforward.png)\n\nIf you want the port forward to to be available from other hosts and not from the local host only, you can bind the port forward to the address `0.0.0.0`:\n\n```yaml\nportForward:\n- resourceType: deployment\n  resourceName: myDep\n  namespace: mynamespace\n  port: 8080\n  address: 0.0.0.0\n  localPort: 9000\n```\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/port-forwarding", "title": "Port Forwarding", "description": "Skaffold has built-in support for forwarding ports from exposed Kubernetes resources on your cluster to your local machine when running in dev, debug, deploy, or run modes.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:44:09", "type": "overview", "page_metadata": {"og:url": "https://skaffold.dev/docs/port-forwarding/", "ogTitle": "Port Forwarding", "twitter:title": "Port Forwarding", "og:type": "article", "article:section": "docs", "og:site_name": "Skaffold", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:description": "Skaffold has built-in support for forwarding ports from exposed Kubernetes resources on your cluster to your local machine when running in dev, debug, deploy, or run modes.\nAutomatic Port Forwarding Skaffold supports automatic port forwarding the following classes of resources:\n user: explicit port-forwards defined in the skaffold.yaml (called user-defined port forwards) services: ports exposed on services deployed by Skaffold. debug: debugging ports as enabled by skaffold debug for Skaffold-built images.", "twitter:card": "summary", "modifiedTime": "2025-01-23T10:14:58-05:00", "ogDescription": "Skaffold has built-in support for forwarding ports from exposed Kubernetes resources on your cluster to your local machine when running in dev, debug, deploy, or run modes.\nAutomatic Port Forwarding Skaffold supports automatic port forwarding the following classes of resources:\n user: explicit port-forwards defined in the skaffold.yaml (called user-defined port forwards) services: ports exposed on services deployed by Skaffold. debug: debugging ports as enabled by skaffold debug for Skaffold-built images.", "ogUrl": "https://skaffold.dev/docs/port-forwarding/", "ogSiteName": "Skaffold", "language": "en", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "robots": "index, follow", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:title": "Port Forwarding", "description": "Skaffold has built-in support for forwarding ports from exposed Kubernetes resources on your cluster\nto your local machine when running in dev, debug, …", "title": "Port Forwarding | Skaffold", "twitter:description": "Skaffold has built-in support for forwarding ports from exposed Kubernetes resources on your cluster to your local machine when running in dev, debug, deploy, or run modes.\nAutomatic Port Forwarding Skaffold supports automatic port forwarding the following classes of resources:\n user: explicit port-forwards defined in the skaffold.yaml (called user-defined port forwards) services: ports exposed on services deployed by Skaffold. debug: debugging ports as enabled by skaffold debug for Skaffold-built images.", "generator": "Hugo 0.99.1", "scrapeId": "859ff287-fc01-4587-a500-1ff2ab093da6", "sourceURL": "https://skaffold.dev/docs/port-forwarding", "url": "https://skaffold.dev/docs/port-forwarding/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I automatic port forwarding in skaffold?\n\nAssistant: To automatic port forwarding in skaffold, here's what you do:\nSkaffold supports automatic port forwarding the following classes of resources:\n\n- `user`: explicit port-forwards defined in the `skaffold.yaml` (called [_user-defined port forwards_](https://skaffold.dev/docs/port-forwarding/#UDPF))\n- `services`: ports exposed on services deployed by Skaffold.\n- `debug`: debugging ports as enabled by `skaffold debug` for Skaffold-built images.\n- `pods`: all `containerPort` s on deployed pods for Skaffold-built images.\n\nSkaffold enables certain classes of forwards by default depending on the Skaffold command used. These defaults can be overridden with the `--port-forward` flag, and port-forwarding can be disabled with `--port-forward=off`.\n\n| Command-line | Default modes |\n| --- | --- |\n| `skaffold dev` | `user` |\n| `skaffold dev --port-forward` | `user`, `services` |\n| `skaffold dev --port-forward=off` | _no ports forwarded_ |\n| `skaffold debug` | `user`, `debug` |\n| `skaffold debug --port-forward` | `user`, `services`, `debug`( _see note below_) |\n| `skaffold debug --port-forward=off` | _no ports forwarded_ |\n| `skaffold deploy` | `off` |\n| `skaffold deploy --port-forward` | `user`, `services` |\n| `skaffold run` | `off` |\n| `skaffold run --port-forward` | `user`, `services` |\n\n#### Compatibility Note\n\nNote that `skaffold debug --port-forward` previously enabled the equivalent of `pods` as Skaffold did not have an equivalent of `debug`. We have replaced `pods` as it caused confusion..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/port-forwarding", "title": "Port Forwarding", "description": "Skaffold has built-in support for forwarding ports from exposed Kubernetes resources on your cluster to your local machine when running in dev, debug, deploy, or run modes.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:44:09", "type": "section_detail", "page_metadata": {"og:url": "https://skaffold.dev/docs/port-forwarding/", "ogTitle": "Port Forwarding", "twitter:title": "Port Forwarding", "og:type": "article", "article:section": "docs", "og:site_name": "Skaffold", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:description": "Skaffold has built-in support for forwarding ports from exposed Kubernetes resources on your cluster to your local machine when running in dev, debug, deploy, or run modes.\nAutomatic Port Forwarding Skaffold supports automatic port forwarding the following classes of resources:\n user: explicit port-forwards defined in the skaffold.yaml (called user-defined port forwards) services: ports exposed on services deployed by Skaffold. debug: debugging ports as enabled by skaffold debug for Skaffold-built images.", "twitter:card": "summary", "modifiedTime": "2025-01-23T10:14:58-05:00", "ogDescription": "Skaffold has built-in support for forwarding ports from exposed Kubernetes resources on your cluster to your local machine when running in dev, debug, deploy, or run modes.\nAutomatic Port Forwarding Skaffold supports automatic port forwarding the following classes of resources:\n user: explicit port-forwards defined in the skaffold.yaml (called user-defined port forwards) services: ports exposed on services deployed by Skaffold. debug: debugging ports as enabled by skaffold debug for Skaffold-built images.", "ogUrl": "https://skaffold.dev/docs/port-forwarding/", "ogSiteName": "Skaffold", "language": "en", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "robots": "index, follow", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:title": "Port Forwarding", "description": "Skaffold has built-in support for forwarding ports from exposed Kubernetes resources on your cluster\nto your local machine when running in dev, debug, …", "title": "Port Forwarding | Skaffold", "twitter:description": "Skaffold has built-in support for forwarding ports from exposed Kubernetes resources on your cluster to your local machine when running in dev, debug, deploy, or run modes.\nAutomatic Port Forwarding Skaffold supports automatic port forwarding the following classes of resources:\n user: explicit port-forwards defined in the skaffold.yaml (called user-defined port forwards) services: ports exposed on services deployed by Skaffold. debug: debugging ports as enabled by skaffold debug for Skaffold-built images.", "generator": "Hugo 0.99.1", "scrapeId": "859ff287-fc01-4587-a500-1ff2ab093da6", "sourceURL": "https://skaffold.dev/docs/port-forwarding", "url": "https://skaffold.dev/docs/port-forwarding/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I user-defined port forwarding in skaffold?\n\nAssistant: To user-defined port forwarding in skaffold, here's what you do:\nUsers can define additional resources to port forward in the skaffold config, to enable port forwarding for\n\n- additional resource types supported by `kubectl port-forward` e.g. `Deployment` or `ReplicaSet`.\n- additional pods running containers which run images not built by Skaffold.\n\nFor example:\n\n```yaml\nportForward:\n- resourceType: deployment\n  resourceName: myDep\n  namespace: mynamespace\n  port: 8080\n  localPort: 9000 # *Optional*\n```\n\nFor this example, Skaffold will attempt to forward port 8080 to `localhost:9000`. If port 9000 is unavailable, Skaffold will forward to a random open port.\n\n#### Note about forwarding System Ports\n\nSkaffold will request matching local ports only when the remote port is `> 1023`. So a service on port `8080` would still map to port `8080` (if available), but a service on port `80` will be mapped to some port `≥ 1024`.\n\nUser-defined port-forwards in the `skaffold.yaml` are unaffected and can bind to system ports.\n\n#### Note about user-defined port-forwarding for Docker deployments\n\nWhen [deploying to Docker](https://skaffold.dev/docs/deployers/docker/) with a user-defined port-forward in the `skaffold.yaml`, the `resourceType` of `portForward` must be set to `container`. Otherwise, Skaffold will not tell the Docker daemon to expose that port.\n\nSkaffold will run `kubectl port-forward` on each of these resources in addition to the automatic port forwarding described above. Acceptable resource types include: `Service`, `Pod` and Controller resource type that has a pod spec: `ReplicaSet`, `ReplicationController`, `Deployment`, `StatefulSet`, `DaemonSet`, `Job`, `CronJob`..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/port-forwarding", "title": "Port Forwarding", "description": "Skaffold has built-in support for forwarding ports from exposed Kubernetes resources on your cluster to your local machine when running in dev, debug, deploy, or run modes.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:44:09", "type": "section_detail", "page_metadata": {"og:url": "https://skaffold.dev/docs/port-forwarding/", "ogTitle": "Port Forwarding", "twitter:title": "Port Forwarding", "og:type": "article", "article:section": "docs", "og:site_name": "Skaffold", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:description": "Skaffold has built-in support for forwarding ports from exposed Kubernetes resources on your cluster to your local machine when running in dev, debug, deploy, or run modes.\nAutomatic Port Forwarding Skaffold supports automatic port forwarding the following classes of resources:\n user: explicit port-forwards defined in the skaffold.yaml (called user-defined port forwards) services: ports exposed on services deployed by Skaffold. debug: debugging ports as enabled by skaffold debug for Skaffold-built images.", "twitter:card": "summary", "modifiedTime": "2025-01-23T10:14:58-05:00", "ogDescription": "Skaffold has built-in support for forwarding ports from exposed Kubernetes resources on your cluster to your local machine when running in dev, debug, deploy, or run modes.\nAutomatic Port Forwarding Skaffold supports automatic port forwarding the following classes of resources:\n user: explicit port-forwards defined in the skaffold.yaml (called user-defined port forwards) services: ports exposed on services deployed by Skaffold. debug: debugging ports as enabled by skaffold debug for Skaffold-built images.", "ogUrl": "https://skaffold.dev/docs/port-forwarding/", "ogSiteName": "Skaffold", "language": "en", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "robots": "index, follow", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:title": "Port Forwarding", "description": "Skaffold has built-in support for forwarding ports from exposed Kubernetes resources on your cluster\nto your local machine when running in dev, debug, …", "title": "Port Forwarding | Skaffold", "twitter:description": "Skaffold has built-in support for forwarding ports from exposed Kubernetes resources on your cluster to your local machine when running in dev, debug, deploy, or run modes.\nAutomatic Port Forwarding Skaffold supports automatic port forwarding the following classes of resources:\n user: explicit port-forwards defined in the skaffold.yaml (called user-defined port forwards) services: ports exposed on services deployed by Skaffold. debug: debugging ports as enabled by skaffold debug for Skaffold-built images.", "generator": "Hugo 0.99.1", "scrapeId": "859ff287-fc01-4587-a500-1ff2ab093da6", "sourceURL": "https://skaffold.dev/docs/port-forwarding", "url": "https://skaffold.dev/docs/port-forwarding/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I field definitions in skaffold?\n\nAssistant: To field definitions in skaffold, here's what you do:\n| Field | Values | Mandatory |\n| --- | --- | --- |\n| resourceType | `pod`, `service`, `deployment`, `replicaset`, `statefulset`, `replicationcontroller`, `daemonset`, `job`, `cronjob`, `container` | Yes |\n| resourceName | Name of the resource to forward. | Yes |\n| namespace | The namespace of the resource to port forward. | No. Defaults to current namespace, or `default` if no current namespace is defined |\n| port | Port is the resource port that will be forwarded. | Yes |\n| address | Address is the address on which the forward will be bound. | No. Defaults to `127.0.0.1` |\n| localPort | LocalPort is the local port to forward too. | No. Defaults to value set for `port`. |\n\nSkaffold will run `kubectl port-forward` on all user defined resources. `kubectl port-forward` will select one pod created by that resource to forward too.\n\nFor example, forwarding a deployment that creates 3 replicas could look like this:\n\n```yaml\nportForward:\n- resourceType: deployment\n  resourceName: myDep\n  namespace: mynamespace\n  port: 8080\n  localPort: 9000\n```\n\n![portforward_deployment](https://skaffold.dev/images/portforward.png)\n\nIf you want the port forward to to be available from other hosts and not from the local host only, you can bind the port forward to the address `0.0.0.0`:\n\n```yaml\nportForward:\n- resourceType: deployment\n  resourceName: myDep\n  namespace: mynamespace\n  port: 8080\n  address: 0.0.0.0\n  localPort: 9000\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/port-forwarding", "title": "Port Forwarding", "description": "Skaffold has built-in support for forwarding ports from exposed Kubernetes resources on your cluster to your local machine when running in dev, debug, deploy, or run modes.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:44:09", "type": "section_detail", "page_metadata": {"og:url": "https://skaffold.dev/docs/port-forwarding/", "ogTitle": "Port Forwarding", "twitter:title": "Port Forwarding", "og:type": "article", "article:section": "docs", "og:site_name": "Skaffold", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:description": "Skaffold has built-in support for forwarding ports from exposed Kubernetes resources on your cluster to your local machine when running in dev, debug, deploy, or run modes.\nAutomatic Port Forwarding Skaffold supports automatic port forwarding the following classes of resources:\n user: explicit port-forwards defined in the skaffold.yaml (called user-defined port forwards) services: ports exposed on services deployed by Skaffold. debug: debugging ports as enabled by skaffold debug for Skaffold-built images.", "twitter:card": "summary", "modifiedTime": "2025-01-23T10:14:58-05:00", "ogDescription": "Skaffold has built-in support for forwarding ports from exposed Kubernetes resources on your cluster to your local machine when running in dev, debug, deploy, or run modes.\nAutomatic Port Forwarding Skaffold supports automatic port forwarding the following classes of resources:\n user: explicit port-forwards defined in the skaffold.yaml (called user-defined port forwards) services: ports exposed on services deployed by Skaffold. debug: debugging ports as enabled by skaffold debug for Skaffold-built images.", "ogUrl": "https://skaffold.dev/docs/port-forwarding/", "ogSiteName": "Skaffold", "language": "en", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "robots": "index, follow", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:title": "Port Forwarding", "description": "Skaffold has built-in support for forwarding ports from exposed Kubernetes resources on your cluster\nto your local machine when running in dev, debug, …", "title": "Port Forwarding | Skaffold", "twitter:description": "Skaffold has built-in support for forwarding ports from exposed Kubernetes resources on your cluster to your local machine when running in dev, debug, deploy, or run modes.\nAutomatic Port Forwarding Skaffold supports automatic port forwarding the following classes of resources:\n user: explicit port-forwards defined in the skaffold.yaml (called user-defined port forwards) services: ports exposed on services deployed by Skaffold. debug: debugging ports as enabled by skaffold debug for Skaffold-built images.", "generator": "Hugo 0.99.1", "scrapeId": "859ff287-fc01-4587-a500-1ff2ab093da6", "sourceURL": "https://skaffold.dev/docs/port-forwarding", "url": "https://skaffold.dev/docs/port-forwarding/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you give me some code examples for Port Forwarding in skaffold?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**User-Defined Port Forwarding Example**:\n\n```yaml\nportForward:\n- resourceType: deployment\n  resourceName: myDep\n  namespace: mynamespace\n  port: 8080\n  localPort: 9000 # *Optional*\n```\n\nThis snippet shows you how to user-defined port forwarding example, which is an important aspect of port forwarding.\n\n**Forwarding a Deployment Example**:\n\n```yaml\nportForward:\n- resourceType: deployment\n  resourceName: myDep\n  namespace: mynamespace\n  port: 8080\n  localPort: 9000\n```\n\nThis snippet shows you how to forwarding a deployment example, which is an important aspect of port forwarding.\n\n**Binding to All Hosts Example**:\n\n```yaml\nportForward:\n- resourceType: deployment\n  resourceName: myDep\n  namespace: mynamespace\n  port: 8080\n  address: 0.0.0.0\n  localPort: 9000\n```\n\nThis snippet shows you how to binding to all hosts example, which is an important aspect of port forwarding.\n\n", "metadata": {"source_url": "https://skaffold.dev/docs/port-forwarding", "title": "Port Forwarding", "description": "Skaffold has built-in support for forwarding ports from exposed Kubernetes resources on your cluster to your local machine when running in dev, debug, deploy, or run modes.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:44:09", "type": "code_examples", "page_metadata": {"og:url": "https://skaffold.dev/docs/port-forwarding/", "ogTitle": "Port Forwarding", "twitter:title": "Port Forwarding", "og:type": "article", "article:section": "docs", "og:site_name": "Skaffold", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:description": "Skaffold has built-in support for forwarding ports from exposed Kubernetes resources on your cluster to your local machine when running in dev, debug, deploy, or run modes.\nAutomatic Port Forwarding Skaffold supports automatic port forwarding the following classes of resources:\n user: explicit port-forwards defined in the skaffold.yaml (called user-defined port forwards) services: ports exposed on services deployed by Skaffold. debug: debugging ports as enabled by skaffold debug for Skaffold-built images.", "twitter:card": "summary", "modifiedTime": "2025-01-23T10:14:58-05:00", "ogDescription": "Skaffold has built-in support for forwarding ports from exposed Kubernetes resources on your cluster to your local machine when running in dev, debug, deploy, or run modes.\nAutomatic Port Forwarding Skaffold supports automatic port forwarding the following classes of resources:\n user: explicit port-forwards defined in the skaffold.yaml (called user-defined port forwards) services: ports exposed on services deployed by Skaffold. debug: debugging ports as enabled by skaffold debug for Skaffold-built images.", "ogUrl": "https://skaffold.dev/docs/port-forwarding/", "ogSiteName": "Skaffold", "language": "en", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "robots": "index, follow", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:title": "Port Forwarding", "description": "Skaffold has built-in support for forwarding ports from exposed Kubernetes resources on your cluster\nto your local machine when running in dev, debug, …", "title": "Port Forwarding | Skaffold", "twitter:description": "Skaffold has built-in support for forwarding ports from exposed Kubernetes resources on your cluster to your local machine when running in dev, debug, deploy, or run modes.\nAutomatic Port Forwarding Skaffold supports automatic port forwarding the following classes of resources:\n user: explicit port-forwards defined in the skaffold.yaml (called user-defined port forwards) services: ports exposed on services deployed by Skaffold. debug: debugging ports as enabled by skaffold debug for Skaffold-built images.", "generator": "Hugo 0.99.1", "scrapeId": "859ff287-fc01-4587-a500-1ff2ab093da6", "sourceURL": "https://skaffold.dev/docs/port-forwarding", "url": "https://skaffold.dev/docs/port-forwarding/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: What are some tips for using Port Forwarding in skaffold effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nSkaffold will request matching local ports only when the remote port is > 1023.\n\nUser-defined port-forwards in the skaffold.yaml are unaffected and can bind to system ports.\n\nWhen deploying to Docker with a user-defined port-forward in the skaffold.yaml, the resourceType of portForward must be set to container.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://skaffold.dev/docs/port-forwarding", "title": "Port Forwarding", "description": "Skaffold has built-in support for forwarding ports from exposed Kubernetes resources on your cluster to your local machine when running in dev, debug, deploy, or run modes.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:44:09", "type": "best_practices", "page_metadata": {"og:url": "https://skaffold.dev/docs/port-forwarding/", "ogTitle": "Port Forwarding", "twitter:title": "Port Forwarding", "og:type": "article", "article:section": "docs", "og:site_name": "Skaffold", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:description": "Skaffold has built-in support for forwarding ports from exposed Kubernetes resources on your cluster to your local machine when running in dev, debug, deploy, or run modes.\nAutomatic Port Forwarding Skaffold supports automatic port forwarding the following classes of resources:\n user: explicit port-forwards defined in the skaffold.yaml (called user-defined port forwards) services: ports exposed on services deployed by Skaffold. debug: debugging ports as enabled by skaffold debug for Skaffold-built images.", "twitter:card": "summary", "modifiedTime": "2025-01-23T10:14:58-05:00", "ogDescription": "Skaffold has built-in support for forwarding ports from exposed Kubernetes resources on your cluster to your local machine when running in dev, debug, deploy, or run modes.\nAutomatic Port Forwarding Skaffold supports automatic port forwarding the following classes of resources:\n user: explicit port-forwards defined in the skaffold.yaml (called user-defined port forwards) services: ports exposed on services deployed by Skaffold. debug: debugging ports as enabled by skaffold debug for Skaffold-built images.", "ogUrl": "https://skaffold.dev/docs/port-forwarding/", "ogSiteName": "Skaffold", "language": "en", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "robots": "index, follow", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:title": "Port Forwarding", "description": "Skaffold has built-in support for forwarding ports from exposed Kubernetes resources on your cluster\nto your local machine when running in dev, debug, …", "title": "Port Forwarding | Skaffold", "twitter:description": "Skaffold has built-in support for forwarding ports from exposed Kubernetes resources on your cluster to your local machine when running in dev, debug, deploy, or run modes.\nAutomatic Port Forwarding Skaffold supports automatic port forwarding the following classes of resources:\n user: explicit port-forwards defined in the skaffold.yaml (called user-defined port forwards) services: ports exposed on services deployed by Skaffold. debug: debugging ports as enabled by skaffold debug for Skaffold-built images.", "generator": "Hugo 0.99.1", "scrapeId": "859ff287-fc01-4587-a500-1ff2ab093da6", "sourceURL": "https://skaffold.dev/docs/port-forwarding", "url": "https://skaffold.dev/docs/port-forwarding/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what Cleanup is in skaffold?\n\nAssistant: Sure, I'd be happy to explain Cleanup in skaffold.\n\n# Cleanup\n\nSkaffold offers cleanup functionality to negate side effects from image builders and deployers in local and deployment environments.Here's a quick rundown of what this is about:\n\n## Kubernetes resource cleanup\n\nAfter running `skaffold run` or `skaffold deploy` and deploying your application to a cluster, running `skaffold delete` will remove all the resources you deployed.\nCleanup is enabled by default, it can be turned off by `--cleanup=false`.\n\n## Ctrl + C\n\nWhen running `skaffold dev` or `skaffold debug`, pressing `Ctrl+C` ( `SIGINT` signal) will kick off the cleanup process which will mimic the behavior of `skaffold delete`.\nIf for some reason the Skaffold process was unable to catch the `SIGINT` signal, `skaffold delete` can always be run later to clean up the deployed Kubernetes resources.\n\n## Image pruning\n\nImages that are built by Skaffold and stored on the local Docker daemon can easily pile up, taking up a significant amount of disk space.\nTo avoid this, users can turn on image pruning that deletes the images built by Skaffold on `SIGTERM` from `skaffold dev` and `skaffold debug`.\n\n## Note\n\nImage pruning is only available if artifact caching is disabled.\nAs artifact caching is enabled by default, image pruning is disabled by default.\nTo enable image pruning, you can run Skaffold with both `--no-prune=false` and `--cache-artifacts=false`.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/cleanup", "title": "Cleanup", "description": "Skaffold offers cleanup functionality to negate side effects from image builders and deployers in local and deployment environments.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:44:47", "type": "overview", "page_metadata": {"modifiedTime": "2025-01-23T10:14:58-05:00", "og:site_name": "Skaffold", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "twitter:description": "Skaffold works with image builders and deployers that both have side effects on both your local and deployment environments:\n resources are created in one or more namespaces in a Kubernetes cluster images might be created on the local Docker daemon images might be pushed to registries application might have arbitrary side effects  Skaffold offers cleanup functionality to negate some of these side effects:\n Kubernetes resource cleanup - skaffold delete, and automatic cleanup on Ctrl+C for skaffold dev and skaffold debug Image pruning - for local Docker daemon images only, automatically on Ctrl+C for skaffold dev and skaffold debug  For pushed images in registries and application side effects the user has to take care of cleanup.", "title": "Cleanup | Skaffold", "og:title": "Cleanup", "twitter:title": "Cleanup", "og:url": "https://skaffold.dev/docs/cleanup/", "article:section": "docs", "og:description": "Skaffold works with image builders and deployers that both have side effects on both your local and deployment environments:\n resources are created in one or more namespaces in a Kubernetes cluster images might be created on the local Docker daemon images might be pushed to registries application might have arbitrary side effects  Skaffold offers cleanup functionality to negate some of these side effects:\n Kubernetes resource cleanup - skaffold delete, and automatic cleanup on Ctrl+C for skaffold dev and skaffold debug Image pruning - for local Docker daemon images only, automatically on Ctrl+C for skaffold dev and skaffold debug  For pushed images in registries and application side effects the user has to take care of cleanup.", "ogTitle": "Cleanup", "ogUrl": "https://skaffold.dev/docs/cleanup/", "description": "Skaffold works with image builders and deployers\nthat both have side effects on both your local and deployment environments:\n\nresources are created in …", "ogDescription": "Skaffold works with image builders and deployers that both have side effects on both your local and deployment environments:\n resources are created in one or more namespaces in a Kubernetes cluster images might be created on the local Docker daemon images might be pushed to registries application might have arbitrary side effects  Skaffold offers cleanup functionality to negate some of these side effects:\n Kubernetes resource cleanup - skaffold delete, and automatic cleanup on Ctrl+C for skaffold dev and skaffold debug Image pruning - for local Docker daemon images only, automatically on Ctrl+C for skaffold dev and skaffold debug  For pushed images in registries and application side effects the user has to take care of cleanup.", "generator": "Hugo 0.99.1", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "language": "en", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:type": "article", "twitter:card": "summary", "robots": "index, follow", "ogSiteName": "Skaffold", "scrapeId": "641bba31-168a-40ae-b988-8c588eb55b6b", "sourceURL": "https://skaffold.dev/docs/cleanup", "url": "https://skaffold.dev/docs/cleanup/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I kubernetes resource cleanup in skaffold?\n\nAssistant: To kubernetes resource cleanup in skaffold, here's what you do:\nAfter running `skaffold run` or `skaffold deploy` and deploying your application to a cluster, running `skaffold delete` will remove all the resources you deployed.\nCleanup is enabled by default, it can be turned off by `--cleanup=false`..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/cleanup", "title": "Cleanup", "description": "Skaffold offers cleanup functionality to negate side effects from image builders and deployers in local and deployment environments.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:44:47", "type": "section_detail", "page_metadata": {"modifiedTime": "2025-01-23T10:14:58-05:00", "og:site_name": "Skaffold", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "twitter:description": "Skaffold works with image builders and deployers that both have side effects on both your local and deployment environments:\n resources are created in one or more namespaces in a Kubernetes cluster images might be created on the local Docker daemon images might be pushed to registries application might have arbitrary side effects  Skaffold offers cleanup functionality to negate some of these side effects:\n Kubernetes resource cleanup - skaffold delete, and automatic cleanup on Ctrl+C for skaffold dev and skaffold debug Image pruning - for local Docker daemon images only, automatically on Ctrl+C for skaffold dev and skaffold debug  For pushed images in registries and application side effects the user has to take care of cleanup.", "title": "Cleanup | Skaffold", "og:title": "Cleanup", "twitter:title": "Cleanup", "og:url": "https://skaffold.dev/docs/cleanup/", "article:section": "docs", "og:description": "Skaffold works with image builders and deployers that both have side effects on both your local and deployment environments:\n resources are created in one or more namespaces in a Kubernetes cluster images might be created on the local Docker daemon images might be pushed to registries application might have arbitrary side effects  Skaffold offers cleanup functionality to negate some of these side effects:\n Kubernetes resource cleanup - skaffold delete, and automatic cleanup on Ctrl+C for skaffold dev and skaffold debug Image pruning - for local Docker daemon images only, automatically on Ctrl+C for skaffold dev and skaffold debug  For pushed images in registries and application side effects the user has to take care of cleanup.", "ogTitle": "Cleanup", "ogUrl": "https://skaffold.dev/docs/cleanup/", "description": "Skaffold works with image builders and deployers\nthat both have side effects on both your local and deployment environments:\n\nresources are created in …", "ogDescription": "Skaffold works with image builders and deployers that both have side effects on both your local and deployment environments:\n resources are created in one or more namespaces in a Kubernetes cluster images might be created on the local Docker daemon images might be pushed to registries application might have arbitrary side effects  Skaffold offers cleanup functionality to negate some of these side effects:\n Kubernetes resource cleanup - skaffold delete, and automatic cleanup on Ctrl+C for skaffold dev and skaffold debug Image pruning - for local Docker daemon images only, automatically on Ctrl+C for skaffold dev and skaffold debug  For pushed images in registries and application side effects the user has to take care of cleanup.", "generator": "Hugo 0.99.1", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "language": "en", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:type": "article", "twitter:card": "summary", "robots": "index, follow", "ogSiteName": "Skaffold", "scrapeId": "641bba31-168a-40ae-b988-8c588eb55b6b", "sourceURL": "https://skaffold.dev/docs/cleanup", "url": "https://skaffold.dev/docs/cleanup/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I ctrl + c in skaffold?\n\nAssistant: To ctrl + c in skaffold, here's what you do:\nWhen running `skaffold dev` or `skaffold debug`, pressing `Ctrl+C` ( `SIGINT` signal) will kick off the cleanup process which will mimic the behavior of `skaffold delete`.\nIf for some reason the Skaffold process was unable to catch the `SIGINT` signal, `skaffold delete` can always be run later to clean up the deployed Kubernetes resources..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/cleanup", "title": "Cleanup", "description": "Skaffold offers cleanup functionality to negate side effects from image builders and deployers in local and deployment environments.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:44:47", "type": "section_detail", "page_metadata": {"modifiedTime": "2025-01-23T10:14:58-05:00", "og:site_name": "Skaffold", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "twitter:description": "Skaffold works with image builders and deployers that both have side effects on both your local and deployment environments:\n resources are created in one or more namespaces in a Kubernetes cluster images might be created on the local Docker daemon images might be pushed to registries application might have arbitrary side effects  Skaffold offers cleanup functionality to negate some of these side effects:\n Kubernetes resource cleanup - skaffold delete, and automatic cleanup on Ctrl+C for skaffold dev and skaffold debug Image pruning - for local Docker daemon images only, automatically on Ctrl+C for skaffold dev and skaffold debug  For pushed images in registries and application side effects the user has to take care of cleanup.", "title": "Cleanup | Skaffold", "og:title": "Cleanup", "twitter:title": "Cleanup", "og:url": "https://skaffold.dev/docs/cleanup/", "article:section": "docs", "og:description": "Skaffold works with image builders and deployers that both have side effects on both your local and deployment environments:\n resources are created in one or more namespaces in a Kubernetes cluster images might be created on the local Docker daemon images might be pushed to registries application might have arbitrary side effects  Skaffold offers cleanup functionality to negate some of these side effects:\n Kubernetes resource cleanup - skaffold delete, and automatic cleanup on Ctrl+C for skaffold dev and skaffold debug Image pruning - for local Docker daemon images only, automatically on Ctrl+C for skaffold dev and skaffold debug  For pushed images in registries and application side effects the user has to take care of cleanup.", "ogTitle": "Cleanup", "ogUrl": "https://skaffold.dev/docs/cleanup/", "description": "Skaffold works with image builders and deployers\nthat both have side effects on both your local and deployment environments:\n\nresources are created in …", "ogDescription": "Skaffold works with image builders and deployers that both have side effects on both your local and deployment environments:\n resources are created in one or more namespaces in a Kubernetes cluster images might be created on the local Docker daemon images might be pushed to registries application might have arbitrary side effects  Skaffold offers cleanup functionality to negate some of these side effects:\n Kubernetes resource cleanup - skaffold delete, and automatic cleanup on Ctrl+C for skaffold dev and skaffold debug Image pruning - for local Docker daemon images only, automatically on Ctrl+C for skaffold dev and skaffold debug  For pushed images in registries and application side effects the user has to take care of cleanup.", "generator": "Hugo 0.99.1", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "language": "en", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:type": "article", "twitter:card": "summary", "robots": "index, follow", "ogSiteName": "Skaffold", "scrapeId": "641bba31-168a-40ae-b988-8c588eb55b6b", "sourceURL": "https://skaffold.dev/docs/cleanup", "url": "https://skaffold.dev/docs/cleanup/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I image pruning in skaffold?\n\nAssistant: To image pruning in skaffold, here's what you do:\nImages that are built by Skaffold and stored on the local Docker daemon can easily pile up, taking up a significant amount of disk space.\nTo avoid this, users can turn on image pruning that deletes the images built by Skaffold on `SIGTERM` from `skaffold dev` and `skaffold debug`..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/cleanup", "title": "Cleanup", "description": "Skaffold offers cleanup functionality to negate side effects from image builders and deployers in local and deployment environments.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:44:47", "type": "section_detail", "page_metadata": {"modifiedTime": "2025-01-23T10:14:58-05:00", "og:site_name": "Skaffold", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "twitter:description": "Skaffold works with image builders and deployers that both have side effects on both your local and deployment environments:\n resources are created in one or more namespaces in a Kubernetes cluster images might be created on the local Docker daemon images might be pushed to registries application might have arbitrary side effects  Skaffold offers cleanup functionality to negate some of these side effects:\n Kubernetes resource cleanup - skaffold delete, and automatic cleanup on Ctrl+C for skaffold dev and skaffold debug Image pruning - for local Docker daemon images only, automatically on Ctrl+C for skaffold dev and skaffold debug  For pushed images in registries and application side effects the user has to take care of cleanup.", "title": "Cleanup | Skaffold", "og:title": "Cleanup", "twitter:title": "Cleanup", "og:url": "https://skaffold.dev/docs/cleanup/", "article:section": "docs", "og:description": "Skaffold works with image builders and deployers that both have side effects on both your local and deployment environments:\n resources are created in one or more namespaces in a Kubernetes cluster images might be created on the local Docker daemon images might be pushed to registries application might have arbitrary side effects  Skaffold offers cleanup functionality to negate some of these side effects:\n Kubernetes resource cleanup - skaffold delete, and automatic cleanup on Ctrl+C for skaffold dev and skaffold debug Image pruning - for local Docker daemon images only, automatically on Ctrl+C for skaffold dev and skaffold debug  For pushed images in registries and application side effects the user has to take care of cleanup.", "ogTitle": "Cleanup", "ogUrl": "https://skaffold.dev/docs/cleanup/", "description": "Skaffold works with image builders and deployers\nthat both have side effects on both your local and deployment environments:\n\nresources are created in …", "ogDescription": "Skaffold works with image builders and deployers that both have side effects on both your local and deployment environments:\n resources are created in one or more namespaces in a Kubernetes cluster images might be created on the local Docker daemon images might be pushed to registries application might have arbitrary side effects  Skaffold offers cleanup functionality to negate some of these side effects:\n Kubernetes resource cleanup - skaffold delete, and automatic cleanup on Ctrl+C for skaffold dev and skaffold debug Image pruning - for local Docker daemon images only, automatically on Ctrl+C for skaffold dev and skaffold debug  For pushed images in registries and application side effects the user has to take care of cleanup.", "generator": "Hugo 0.99.1", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "language": "en", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:type": "article", "twitter:card": "summary", "robots": "index, follow", "ogSiteName": "Skaffold", "scrapeId": "641bba31-168a-40ae-b988-8c588eb55b6b", "sourceURL": "https://skaffold.dev/docs/cleanup", "url": "https://skaffold.dev/docs/cleanup/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I note in skaffold?\n\nAssistant: To note in skaffold, here's what you do:\nImage pruning is only available if artifact caching is disabled.\nAs artifact caching is enabled by default, image pruning is disabled by default.\nTo enable image pruning, you can run Skaffold with both `--no-prune=false` and `--cache-artifacts=false`..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/cleanup", "title": "Cleanup", "description": "Skaffold offers cleanup functionality to negate side effects from image builders and deployers in local and deployment environments.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:44:47", "type": "section_detail", "page_metadata": {"modifiedTime": "2025-01-23T10:14:58-05:00", "og:site_name": "Skaffold", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "twitter:description": "Skaffold works with image builders and deployers that both have side effects on both your local and deployment environments:\n resources are created in one or more namespaces in a Kubernetes cluster images might be created on the local Docker daemon images might be pushed to registries application might have arbitrary side effects  Skaffold offers cleanup functionality to negate some of these side effects:\n Kubernetes resource cleanup - skaffold delete, and automatic cleanup on Ctrl+C for skaffold dev and skaffold debug Image pruning - for local Docker daemon images only, automatically on Ctrl+C for skaffold dev and skaffold debug  For pushed images in registries and application side effects the user has to take care of cleanup.", "title": "Cleanup | Skaffold", "og:title": "Cleanup", "twitter:title": "Cleanup", "og:url": "https://skaffold.dev/docs/cleanup/", "article:section": "docs", "og:description": "Skaffold works with image builders and deployers that both have side effects on both your local and deployment environments:\n resources are created in one or more namespaces in a Kubernetes cluster images might be created on the local Docker daemon images might be pushed to registries application might have arbitrary side effects  Skaffold offers cleanup functionality to negate some of these side effects:\n Kubernetes resource cleanup - skaffold delete, and automatic cleanup on Ctrl+C for skaffold dev and skaffold debug Image pruning - for local Docker daemon images only, automatically on Ctrl+C for skaffold dev and skaffold debug  For pushed images in registries and application side effects the user has to take care of cleanup.", "ogTitle": "Cleanup", "ogUrl": "https://skaffold.dev/docs/cleanup/", "description": "Skaffold works with image builders and deployers\nthat both have side effects on both your local and deployment environments:\n\nresources are created in …", "ogDescription": "Skaffold works with image builders and deployers that both have side effects on both your local and deployment environments:\n resources are created in one or more namespaces in a Kubernetes cluster images might be created on the local Docker daemon images might be pushed to registries application might have arbitrary side effects  Skaffold offers cleanup functionality to negate some of these side effects:\n Kubernetes resource cleanup - skaffold delete, and automatic cleanup on Ctrl+C for skaffold dev and skaffold debug Image pruning - for local Docker daemon images only, automatically on Ctrl+C for skaffold dev and skaffold debug  For pushed images in registries and application side effects the user has to take care of cleanup.", "generator": "Hugo 0.99.1", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "language": "en", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:type": "article", "twitter:card": "summary", "robots": "index, follow", "ogSiteName": "Skaffold", "scrapeId": "641bba31-168a-40ae-b988-8c588eb55b6b", "sourceURL": "https://skaffold.dev/docs/cleanup", "url": "https://skaffold.dev/docs/cleanup/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you give me some code examples for Cleanup in skaffold?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Skaffold command for enabling image pruning**:\n\n```yaml\nskaffold dev --no-prune=false --cache-artifacts=false\n```\n\nThis snippet shows you how to skaffold command for enabling image pruning, which is an important aspect of cleanup.\n\n**Output of Skaffold dev command**:\n\n```yaml\nListing files to watch...\n - gcr.io/k8s-skaffold/skaffold-example\nGenerating tags...\n - gcr.io/k8s-skaffold/skaffold-example -> gcr.io/k8s-skaffold/skaffold-example:v0.41.0-148-gd2f3e0539\nBuilding [gcr.io/k8s-skaffold/skaffold-example]...\nSending build context to Docker daemon  3.072kB\nStep 1/6 : FROM golang:1.12.9-alpine3.10 as builder\n ---> e0d646523991\nStep 2/6 : COPY main.go .\n ---> Using cache\n ---> 964ce43c7a63\nStep 3/6 : RUN go build -o /app main.go\n ---> Using cache\n ---> 1fece4643da6\nStep 4/6 : FROM alpine:3.10\n ---> 961769676411\nStep 5/6 : CMD [\"./app\"]\n ---> Using cache\n ---> 256b146875d2\nStep 6/6 : COPY --from=builder /app .\n ---> Using cache\n ---> f7a2f5c3a2f6\nSuccessfully built f7a2f5c3a2f6\nSuccessfully tagged gcr.io/k8s-skaffold/skaffold-example:v0.41.0-148-gd2f3e0539\nTags used in deployment:\n - gcr.io/k8s-skaffold/skaffold-example -> gcr.io/k8s-skaffold/skaffold-example:v0.41.0-148-gd2f3e0539@sha256:00d7fa06c313f7d06ad3d4701026e0ee65f8f437c703172f160df37c0059b3b1\nStarting deploy...\n - pod/getting-started created\nWatching for changes...\n[getting-started] Hello world!\n[getting-started] Hello world!\n[getting-started] Hello world!\n```\n\nThis snippet shows you how to output of skaffold dev command, which is an important aspect of cleanup.\n\n**Output after hitting Ctrl+C**:\n\n```yaml\n^CCleaning up...\n - pod \"getting-started\" deleted\nPruning images...\nuntagged image gcr.io/k8s-skaffold/skaffold-example:v0.41.0-148-gd2f3e0539\nuntagged image gcr.io/k8s-skaffold/skaffold-example:v0.41.0-58-g8c428b975\nuntagged image gcr.io/k8s-skaffold/skaffold-example@sha256:00d7fa06c313f7d06ad3d4701026e0ee65f8f437c703172f160df37c0059b3b1\ndeleted image sha256:f7a2f5c3a2f6721989598d09a09ad70134936db398d93303ebb3545de2d32e22\ndeleted image sha256:c069434a51c8d96f68a95c13bbccd3512849f9ccfe5defbb80af7e342a48bbba\n```\n\nThis snippet shows you how to output after hitting ctrl+c, which is an important aspect of cleanup.\n\n", "metadata": {"source_url": "https://skaffold.dev/docs/cleanup", "title": "Cleanup", "description": "Skaffold offers cleanup functionality to negate side effects from image builders and deployers in local and deployment environments.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:44:47", "type": "code_examples", "page_metadata": {"modifiedTime": "2025-01-23T10:14:58-05:00", "og:site_name": "Skaffold", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "twitter:description": "Skaffold works with image builders and deployers that both have side effects on both your local and deployment environments:\n resources are created in one or more namespaces in a Kubernetes cluster images might be created on the local Docker daemon images might be pushed to registries application might have arbitrary side effects  Skaffold offers cleanup functionality to negate some of these side effects:\n Kubernetes resource cleanup - skaffold delete, and automatic cleanup on Ctrl+C for skaffold dev and skaffold debug Image pruning - for local Docker daemon images only, automatically on Ctrl+C for skaffold dev and skaffold debug  For pushed images in registries and application side effects the user has to take care of cleanup.", "title": "Cleanup | Skaffold", "og:title": "Cleanup", "twitter:title": "Cleanup", "og:url": "https://skaffold.dev/docs/cleanup/", "article:section": "docs", "og:description": "Skaffold works with image builders and deployers that both have side effects on both your local and deployment environments:\n resources are created in one or more namespaces in a Kubernetes cluster images might be created on the local Docker daemon images might be pushed to registries application might have arbitrary side effects  Skaffold offers cleanup functionality to negate some of these side effects:\n Kubernetes resource cleanup - skaffold delete, and automatic cleanup on Ctrl+C for skaffold dev and skaffold debug Image pruning - for local Docker daemon images only, automatically on Ctrl+C for skaffold dev and skaffold debug  For pushed images in registries and application side effects the user has to take care of cleanup.", "ogTitle": "Cleanup", "ogUrl": "https://skaffold.dev/docs/cleanup/", "description": "Skaffold works with image builders and deployers\nthat both have side effects on both your local and deployment environments:\n\nresources are created in …", "ogDescription": "Skaffold works with image builders and deployers that both have side effects on both your local and deployment environments:\n resources are created in one or more namespaces in a Kubernetes cluster images might be created on the local Docker daemon images might be pushed to registries application might have arbitrary side effects  Skaffold offers cleanup functionality to negate some of these side effects:\n Kubernetes resource cleanup - skaffold delete, and automatic cleanup on Ctrl+C for skaffold dev and skaffold debug Image pruning - for local Docker daemon images only, automatically on Ctrl+C for skaffold dev and skaffold debug  For pushed images in registries and application side effects the user has to take care of cleanup.", "generator": "Hugo 0.99.1", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "language": "en", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:type": "article", "twitter:card": "summary", "robots": "index, follow", "ogSiteName": "Skaffold", "scrapeId": "641bba31-168a-40ae-b988-8c588eb55b6b", "sourceURL": "https://skaffold.dev/docs/cleanup", "url": "https://skaffold.dev/docs/cleanup/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: What are some tips for using Cleanup in skaffold effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nCleanup is enabled by default, it can be turned off by `--cleanup=false`.\n\nImage pruning is only available if artifact caching is disabled.\n\nTo enable image pruning, run Skaffold with both `--no-prune=false` and `--cache-artifacts=false`.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://skaffold.dev/docs/cleanup", "title": "Cleanup", "description": "Skaffold offers cleanup functionality to negate side effects from image builders and deployers in local and deployment environments.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:44:47", "type": "best_practices", "page_metadata": {"modifiedTime": "2025-01-23T10:14:58-05:00", "og:site_name": "Skaffold", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "twitter:description": "Skaffold works with image builders and deployers that both have side effects on both your local and deployment environments:\n resources are created in one or more namespaces in a Kubernetes cluster images might be created on the local Docker daemon images might be pushed to registries application might have arbitrary side effects  Skaffold offers cleanup functionality to negate some of these side effects:\n Kubernetes resource cleanup - skaffold delete, and automatic cleanup on Ctrl+C for skaffold dev and skaffold debug Image pruning - for local Docker daemon images only, automatically on Ctrl+C for skaffold dev and skaffold debug  For pushed images in registries and application side effects the user has to take care of cleanup.", "title": "Cleanup | Skaffold", "og:title": "Cleanup", "twitter:title": "Cleanup", "og:url": "https://skaffold.dev/docs/cleanup/", "article:section": "docs", "og:description": "Skaffold works with image builders and deployers that both have side effects on both your local and deployment environments:\n resources are created in one or more namespaces in a Kubernetes cluster images might be created on the local Docker daemon images might be pushed to registries application might have arbitrary side effects  Skaffold offers cleanup functionality to negate some of these side effects:\n Kubernetes resource cleanup - skaffold delete, and automatic cleanup on Ctrl+C for skaffold dev and skaffold debug Image pruning - for local Docker daemon images only, automatically on Ctrl+C for skaffold dev and skaffold debug  For pushed images in registries and application side effects the user has to take care of cleanup.", "ogTitle": "Cleanup", "ogUrl": "https://skaffold.dev/docs/cleanup/", "description": "Skaffold works with image builders and deployers\nthat both have side effects on both your local and deployment environments:\n\nresources are created in …", "ogDescription": "Skaffold works with image builders and deployers that both have side effects on both your local and deployment environments:\n resources are created in one or more namespaces in a Kubernetes cluster images might be created on the local Docker daemon images might be pushed to registries application might have arbitrary side effects  Skaffold offers cleanup functionality to negate some of these side effects:\n Kubernetes resource cleanup - skaffold delete, and automatic cleanup on Ctrl+C for skaffold dev and skaffold debug Image pruning - for local Docker daemon images only, automatically on Ctrl+C for skaffold dev and skaffold debug  For pushed images in registries and application side effects the user has to take care of cleanup.", "generator": "Hugo 0.99.1", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "language": "en", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:type": "article", "twitter:card": "summary", "robots": "index, follow", "ogSiteName": "Skaffold", "scrapeId": "641bba31-168a-40ae-b988-8c588eb55b6b", "sourceURL": "https://skaffold.dev/docs/cleanup", "url": "https://skaffold.dev/docs/cleanup/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what Custom Actions is in skaffold?\n\nAssistant: Sure, I'd be happy to explain Custom Actions in skaffold.\n\n# Custom Actions\n\nThis page covers how to define and execute custom actions in Skaffold using a Skaffold config file.Here's a quick rundown of what this is about:\n\n## Defining Custom Actions\n\nA Skaffold config file can define one or more Custom Actions using the [`customActions` stanza](https://skaffold.dev/docs/references/yaml/#customActions). Each action and container must be identified by an unique name across modules/configurations. **NOTE:** Two different [profiles](https://skaffold.dev/docs/environment/profiles/) can have an action each, with the same name.\n\nTherefore, a configuration for a Custom Action named `update-infra`, with two containers, `update-db-schema` and `setup-external-proxy`, will be defined like this in a `skaffold.yaml` file:\n\n```yaml\napiVersion: skaffold/v4beta5\nkind: Config\n\ncustomActions:\n  - name: update-infra\n    containers:\n      - name: update-db-schema\n        image: gcr.io/my-registry/db-updater:latest\n      - name: setup-external-proxy\n        image: gcr.io/my-registry/proxy:latest\n```\n\nRunning `skaffold exec update-infra` with the previous configuration will trigger the execution of the `update-infra` action, as a [local (Docker) action](https://skaffold.dev/docs/custom-actions/#local-docker), creating and running a container for `update-db-schema` (using the `gcr.io/my-registry/db-updater:latest` image), and `setup-external-proxy` (using the `gcr.io/my-registry/proxy:latest` image). The output will look like this:\n\n```console\n$ skaffold exec update-infra\nStarting execution for update-infra\n...\n[setup-external-proxy] updating proxy version...\n[setup-external-proxy] copying proxy rules...\n[setup-external-proxy] starting proxy...\n[update-db-schema] starting db update...\n[update-db-schema] db schema update completed\n[setup-external-proxy] proxy configured\n```\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/custom-actions", "title": "Custom Actions", "description": "This page covers how to define and execute custom actions in Skaffold using a Skaffold config file.", "has_code_examples": true, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 03:45:32", "type": "overview", "page_metadata": {"ogUrl": "https://skaffold.dev/docs/custom-actions/", "ogDescription": "With Skaffold you can define generic actions in a declarative way using a Skaffold config file (skaffold.yaml), and execute them with the skaffold exec <action-name> command.\nA generic action (a.k.a. Custom Action), defines a list of containers that will be executed in parallel when the action is invoked. A Custom Action execution is considered successful if all its containers end without errors, and considered as failed if one or more of its containers report an error.", "title": "Custom Actions | Skaffold", "generator": "Hugo 0.99.1", "og:type": "article", "article:section": "docs", "og:site_name": "Skaffold", "twitter:card": "summary", "article:modified_time": "2025-01-23T10:14:58-05:00", "twitter:title": "Custom Actions", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:url": "https://skaffold.dev/docs/custom-actions/", "twitter:description": "With Skaffold you can define generic actions in a declarative way using a Skaffold config file (skaffold.yaml), and execute them with the skaffold exec <action-name> command.\nA generic action (a.k.a. Custom Action), defines a list of containers that will be executed in parallel when the action is invoked. A Custom Action execution is considered successful if all its containers end without errors, and considered as failed if one or more of its containers report an error.", "og:title": "Custom Actions", "robots": "index, follow", "ogSiteName": "Skaffold", "ogTitle": "Custom Actions", "modifiedTime": "2025-01-23T10:14:58-05:00", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "description": "With Skaffold you can define generic actions in a declarative way using a Skaffold config file (skaffold.yaml), and execute them with the skaffold …", "og:description": "With Skaffold you can define generic actions in a declarative way using a Skaffold config file (skaffold.yaml), and execute them with the skaffold exec <action-name> command.\nA generic action (a.k.a. Custom Action), defines a list of containers that will be executed in parallel when the action is invoked. A Custom Action execution is considered successful if all its containers end without errors, and considered as failed if one or more of its containers report an error.", "language": "en", "scrapeId": "fcdc5bf6-4447-473c-9fae-2ef2f82aee18", "sourceURL": "https://skaffold.dev/docs/custom-actions", "url": "https://skaffold.dev/docs/custom-actions/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I defining custom actions in skaffold?\n\nAssistant: To defining custom actions in skaffold, here's what you do:\nA Skaffold config file can define one or more Custom Actions using the [`customActions` stanza](https://skaffold.dev/docs/references/yaml/#customActions). Each action and container must be identified by an unique name across modules/configurations. **NOTE:** Two different [profiles](https://skaffold.dev/docs/environment/profiles/) can have an action each, with the same name.\n\nTherefore, a configuration for a Custom Action named `update-infra`, with two containers, `update-db-schema` and `setup-external-proxy`, will be defined like this in a `skaffold.yaml` file:\n\n```yaml\napiVersion: skaffold/v4beta5\nkind: Config\n\ncustomActions:\n  - name: update-infra\n    containers:\n      - name: update-db-schema\n        image: gcr.io/my-registry/db-updater:latest\n      - name: setup-external-proxy\n        image: gcr.io/my-registry/proxy:latest\n```\n\nRunning `skaffold exec update-infra` with the previous configuration will trigger the execution of the `update-infra` action, as a [local (Docker) action](https://skaffold.dev/docs/custom-actions/#local-docker), creating and running a container for `update-db-schema` (using the `gcr.io/my-registry/db-updater:latest` image), and `setup-external-proxy` (using the `gcr.io/my-registry/proxy:latest` image). The output will look like this:\n\n```console\n$ skaffold exec update-infra\nStarting execution for update-infra\n...\n[setup-external-proxy] updating proxy version...\n[setup-external-proxy] copying proxy rules...\n[setup-external-proxy] starting proxy...\n[update-db-schema] starting db update...\n[update-db-schema] db schema update completed\n[setup-external-proxy] proxy configured\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/custom-actions", "title": "Custom Actions", "description": "This page covers how to define and execute custom actions in Skaffold using a Skaffold config file.", "has_code_examples": true, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 03:45:32", "type": "section_detail", "page_metadata": {"ogUrl": "https://skaffold.dev/docs/custom-actions/", "ogDescription": "With Skaffold you can define generic actions in a declarative way using a Skaffold config file (skaffold.yaml), and execute them with the skaffold exec <action-name> command.\nA generic action (a.k.a. Custom Action), defines a list of containers that will be executed in parallel when the action is invoked. A Custom Action execution is considered successful if all its containers end without errors, and considered as failed if one or more of its containers report an error.", "title": "Custom Actions | Skaffold", "generator": "Hugo 0.99.1", "og:type": "article", "article:section": "docs", "og:site_name": "Skaffold", "twitter:card": "summary", "article:modified_time": "2025-01-23T10:14:58-05:00", "twitter:title": "Custom Actions", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:url": "https://skaffold.dev/docs/custom-actions/", "twitter:description": "With Skaffold you can define generic actions in a declarative way using a Skaffold config file (skaffold.yaml), and execute them with the skaffold exec <action-name> command.\nA generic action (a.k.a. Custom Action), defines a list of containers that will be executed in parallel when the action is invoked. A Custom Action execution is considered successful if all its containers end without errors, and considered as failed if one or more of its containers report an error.", "og:title": "Custom Actions", "robots": "index, follow", "ogSiteName": "Skaffold", "ogTitle": "Custom Actions", "modifiedTime": "2025-01-23T10:14:58-05:00", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "description": "With Skaffold you can define generic actions in a declarative way using a Skaffold config file (skaffold.yaml), and execute them with the skaffold …", "og:description": "With Skaffold you can define generic actions in a declarative way using a Skaffold config file (skaffold.yaml), and execute them with the skaffold exec <action-name> command.\nA generic action (a.k.a. Custom Action), defines a list of containers that will be executed in parallel when the action is invoked. A Custom Action execution is considered successful if all its containers end without errors, and considered as failed if one or more of its containers report an error.", "language": "en", "scrapeId": "fcdc5bf6-4447-473c-9fae-2ef2f82aee18", "sourceURL": "https://skaffold.dev/docs/custom-actions", "url": "https://skaffold.dev/docs/custom-actions/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you give me some code examples for Custom Actions in skaffold?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Skaffold YAML Configuration for Custom Action**:\n\n```yaml\napiVersion: skaffold/v4beta5\nkind: Config\n\ncustomActions:\n  - name: update-infra\n    containers:\n      - name: update-db-schema\n        image: gcr.io/my-registry/db-updater:latest\n      - name: setup-external-proxy\n        image: gcr.io/my-registry/proxy:latest\n\n```\n\nThis snippet shows you how to skaffold yaml configuration for custom action, which is an important aspect of custom actions.\n\n**Skaffold Exec Command Output**:\n\n```yaml\n$ skaffold exec update-infra\nStarting execution for update-infra\n...\n[setup-external-proxy] updating proxy version...\n[setup-external-proxy] copying proxy rules...\n[setup-external-proxy] starting proxy...\n[update-db-schema] starting db update...\n[update-db-schema] db schema update completed\n[setup-external-proxy] proxy configured\n\n```\n\nThis snippet shows you how to skaffold exec command output, which is an important aspect of custom actions.\n\n**Skaffold YAML Configuration with Timeout**:\n\n```yaml\napiVersion: skaffold/v4beta5\nkind: Config\n\ncustomActions:\n  - name: update-infra\n    timeout: 10 # <- 10 seconds timeout.\n    containers:\n      - name: update-db-schema\n        image: gcr.io/my-registry/db-updater:latest\n      - name: setup-external-proxy\n        image: gcr.io/my-registry/proxy:latest\n\n```\n\nThis snippet shows you how to skaffold yaml configuration with timeout, which is an important aspect of custom actions.\n\n**Skaffold Exec Command Output with Timeout**:\n\n```yaml\n$ skaffold exec update-infra\nStarting execution for update-infra\n...\n[setup-external-proxy] updating proxy version...\n[setup-external-proxy] copying proxy rules...\n[setup-external-proxy] starting proxy...\n[update-db-schema] starting db update...\ncontext deadline exceeded\n\n```\n\nThis snippet shows you how to skaffold exec command output with timeout, which is an important aspect of custom actions.\n\n**Skaffold YAML Configuration with Fail Strategy**:\n\n```yaml\napiVersion: skaffold/v4beta5\nkind: Config\n\ncustomActions:\n  - name: update-infra\n    containers:\n      - name: update-db-schema\n        image: gcr.io/my-registry/db-updater:latest\n      - name: setup-external-proxy\n        image: gcr.io/my-registry/proxy:latest\n\n```\n\nThis snippet shows you how to skaffold yaml configuration with fail strategy, which is an important aspect of custom actions.\n\n**Skaffold Exec Command Output with Fail Strategy**:\n\n```yaml\n$ skaffold exec update-infra\nStarting execution for update-infra\n...\n[setup-external-proxy] updating proxy version...\n[setup-external-proxy] copying proxy rules...\n[setup-external-proxy] starting proxy...\n[update-db-schema] starting db update...\n\"update-db-schema\" running container image \"gcr.io/my-registry/db-updater:latest\" errored during run with status code: 1\n\n```\n\nThis snippet shows you how to skaffold exec command output with fail strategy, which is an important aspect of custom actions.\n\n**Skaffold YAML Configuration with Fail-Safe Strategy**:\n\n```yaml\napiVersion: skaffold/v4beta5\nkind: Config\n\ncustomActions:\n  - name: update-infra\n    failFast: false # <- Set to false, making it fail-safe.\n    containers:\n      - name: update-db-schema\n        image: gcr.io/my-registry/db-updater:latest\n      - name: setup-external-proxy\n        image: gcr.io/my-registry/proxy:latest\n\n```\n\nThis snippet shows you how to skaffold yaml configuration with fail-safe strategy, which is an important aspect of custom actions.\n\n**Skaffold Exec Command Output with Fail-Safe Strategy**:\n\n```yaml\nStarting execution for update-infra\n...\n[setup-external-proxy] updating proxy version...\n[setup-external-proxy] copying proxy rules...\n[setup-external-proxy] starting proxy...\n[update-db-schema] starting db update...\n[setup-external-proxy] proxy configured\n1 error(s) occurred:\n* \"update-db-schema\" running container image \"gcr.io/my-registry/db-updater:latest\" errored during run with status code: 1\n\n```\n\nThis snippet shows you how to skaffold exec command output with fail-safe strategy, which is an important aspect of custom actions.\n\n**Skaffold YAML Configuration for Remote Execution Mode**:\n\n```yaml\napiVersion: skaffold/v4beta5\nkind: Config\n\ncustomActions:\n  - name: update-infra\n    executionMode:\n      kubernetesCluster: {} # <- Indicates Skaffold to run the action with K8s jobs.\n    containers:\n      - name: update-db-schema\n        image: gcr.io/my-registry/db-updater:latest\n      - name: setup-external-proxy\n        image: gcr.io/my-registry/proxy:latest\n\n```\n\nThis snippet shows you how to skaffold yaml configuration for remote execution mode, which is an important aspect of custom actions.\n\n**Skaffold Job Template**:\n\n```yaml\napiVersion: batch/v1\nkind: Job\nmetadata:\n  name: # <- Container name defined in skaffold.yaml.\nspec:\n  template:\n    spec:\n      containers: # <- Only one container, the one defined in the skaffold.yaml.\n      # ...\n      restartPolicy: Never\n  backoffLimit: 0\n\n```\n\nThis snippet shows you how to skaffold job template, which is an important aspect of custom actions.\n\n**Skaffold YAML Configuration with Build Artifacts**:\n\n```yaml\napiVersion: skaffold/v4beta5\nkind: Config\n\nbuild:\n  artifacts:\n    - image: local-db-updater # <- Image build by Skaffold.\n      # ...\n\ncustomActions:\n  - name: update-infra\n    containers:\n      - name: update-db-schema\n        image: local-db-updater # <- Image build by Skaffold.\n      - name: setup-external-proxy\n        image: gcr.io/my-registry/proxy:latest\n\n```\n\nThis snippet shows you how to skaffold yaml configuration with build artifacts, which is an important aspect of custom actions.\n\n**Skaffold Build Command Output**:\n\n```yaml\n$ skaffold build --file-output=build.json\n\n```\n\nThis snippet shows you how to skaffold build command output, which is an important aspect of custom actions.\n\n**Skaffold Exec Command with Build Artifacts**:\n\n```yaml\n$ skaffold exec update-infra --build-artifacts=build.json\n\n```\n\nThis snippet shows you how to skaffold exec command with build artifacts, which is an important aspect of custom actions.\n\n", "metadata": {"source_url": "https://skaffold.dev/docs/custom-actions", "title": "Custom Actions", "description": "This page covers how to define and execute custom actions in Skaffold using a Skaffold config file.", "has_code_examples": true, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 03:45:32", "type": "code_examples", "page_metadata": {"ogUrl": "https://skaffold.dev/docs/custom-actions/", "ogDescription": "With Skaffold you can define generic actions in a declarative way using a Skaffold config file (skaffold.yaml), and execute them with the skaffold exec <action-name> command.\nA generic action (a.k.a. Custom Action), defines a list of containers that will be executed in parallel when the action is invoked. A Custom Action execution is considered successful if all its containers end without errors, and considered as failed if one or more of its containers report an error.", "title": "Custom Actions | Skaffold", "generator": "Hugo 0.99.1", "og:type": "article", "article:section": "docs", "og:site_name": "Skaffold", "twitter:card": "summary", "article:modified_time": "2025-01-23T10:14:58-05:00", "twitter:title": "Custom Actions", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:url": "https://skaffold.dev/docs/custom-actions/", "twitter:description": "With Skaffold you can define generic actions in a declarative way using a Skaffold config file (skaffold.yaml), and execute them with the skaffold exec <action-name> command.\nA generic action (a.k.a. Custom Action), defines a list of containers that will be executed in parallel when the action is invoked. A Custom Action execution is considered successful if all its containers end without errors, and considered as failed if one or more of its containers report an error.", "og:title": "Custom Actions", "robots": "index, follow", "ogSiteName": "Skaffold", "ogTitle": "Custom Actions", "modifiedTime": "2025-01-23T10:14:58-05:00", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "description": "With Skaffold you can define generic actions in a declarative way using a Skaffold config file (skaffold.yaml), and execute them with the skaffold …", "og:description": "With Skaffold you can define generic actions in a declarative way using a Skaffold config file (skaffold.yaml), and execute them with the skaffold exec <action-name> command.\nA generic action (a.k.a. Custom Action), defines a list of containers that will be executed in parallel when the action is invoked. A Custom Action execution is considered successful if all its containers end without errors, and considered as failed if one or more of its containers report an error.", "language": "en", "scrapeId": "fcdc5bf6-4447-473c-9fae-2ef2f82aee18", "sourceURL": "https://skaffold.dev/docs/custom-actions", "url": "https://skaffold.dev/docs/custom-actions/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: What are some tips for using Custom Actions in skaffold effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nCustom Actions are meant to run specific, completable tasks; they are not meant to execute your main application.\n\nUse unique names for actions and containers across modules/configurations.\n\nConsider setting a timeout for Custom Actions to prevent long-running tasks.\n\nUtilize the fail-fast strategy for critical actions to stop execution on the first failure.\n\nExplore the execution modes to choose the best environment for your Custom Actions.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://skaffold.dev/docs/custom-actions", "title": "Custom Actions", "description": "This page covers how to define and execute custom actions in Skaffold using a Skaffold config file.", "has_code_examples": true, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 03:45:32", "type": "best_practices", "page_metadata": {"ogUrl": "https://skaffold.dev/docs/custom-actions/", "ogDescription": "With Skaffold you can define generic actions in a declarative way using a Skaffold config file (skaffold.yaml), and execute them with the skaffold exec <action-name> command.\nA generic action (a.k.a. Custom Action), defines a list of containers that will be executed in parallel when the action is invoked. A Custom Action execution is considered successful if all its containers end without errors, and considered as failed if one or more of its containers report an error.", "title": "Custom Actions | Skaffold", "generator": "Hugo 0.99.1", "og:type": "article", "article:section": "docs", "og:site_name": "Skaffold", "twitter:card": "summary", "article:modified_time": "2025-01-23T10:14:58-05:00", "twitter:title": "Custom Actions", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:url": "https://skaffold.dev/docs/custom-actions/", "twitter:description": "With Skaffold you can define generic actions in a declarative way using a Skaffold config file (skaffold.yaml), and execute them with the skaffold exec <action-name> command.\nA generic action (a.k.a. Custom Action), defines a list of containers that will be executed in parallel when the action is invoked. A Custom Action execution is considered successful if all its containers end without errors, and considered as failed if one or more of its containers report an error.", "og:title": "Custom Actions", "robots": "index, follow", "ogSiteName": "Skaffold", "ogTitle": "Custom Actions", "modifiedTime": "2025-01-23T10:14:58-05:00", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "description": "With Skaffold you can define generic actions in a declarative way using a Skaffold config file (skaffold.yaml), and execute them with the skaffold …", "og:description": "With Skaffold you can define generic actions in a declarative way using a Skaffold config file (skaffold.yaml), and execute them with the skaffold exec <action-name> command.\nA generic action (a.k.a. Custom Action), defines a list of containers that will be executed in parallel when the action is invoked. A Custom Action execution is considered successful if all its containers end without errors, and considered as failed if one or more of its containers report an error.", "language": "en", "scrapeId": "fcdc5bf6-4447-473c-9fae-2ef2f82aee18", "sourceURL": "https://skaffold.dev/docs/custom-actions", "url": "https://skaffold.dev/docs/custom-actions/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what Architecture and Design is in skaffold?\n\nAssistant: Sure, I'd be happy to explain Architecture and Design in skaffold.\n\n# Architecture and Design\n\nSkaffold is designed with pluggability in mind, allowing integration with various tools for building, testing, tagging, and deploying applications.Here's a quick rundown of what this is about:\n\n## Architecture Overview\n\nSkaffold is designed with pluggability in mind. The architecture allows you to use Skaffold with the tool you prefer. Skaffold provides built-in support for the following tools:\n\n- **Build**\n  - Dockerfile locally, in-cluster with kaniko or on cloud using Google Cloud Build\n  - Jib Maven and Jib Gradle locally or on cloud using Google Cloud Build\n  - Bazel locally\n  - Cloud Native Buildpacks locally or on cloud using Google Cloud Build\n  - Custom script locally or in-cluster\n- **Test**\n  - [container-structure-test](https://github.com/GoogleContainerTools/container-structure-test)\n- **Tag**\n  - Git tagger\n  - Sha256 tagger\n  - Input Digest tagger\n  - Env Template tagger\n  - DateTime tagger\n- **Deploy**\n  - Kubernetes Command-Line Interface ( `kubectl`)\n  - [Helm](https://helm.sh/)\n  - [kustomize](https://github.com/kubernetes-sigs/kustomize)\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/design", "title": "Architecture and Design", "description": "Skaffold is designed with pluggability in mind, allowing integration with various tools for building, testing, tagging, and deploying applications.", "has_code_examples": true, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 03:45:44", "type": "overview", "page_metadata": {"ogTitle": "Architecture and Design", "og:type": "website", "twitter:title": "Architecture and Design", "description": "Skaffold is designed with pluggability in mind:\n\nThe architecture allows you to use Skaffold with the tool you prefer. Skaffold\nprovides built-in …", "ogUrl": "https://skaffold.dev/docs/design/", "language": "en", "title": "Architecture and Design | Skaffold", "og:description": "Easy and Repeatable Container & Kubernetes Development", "og:url": "https://skaffold.dev/docs/design/", "ogSiteName": "Skaffold", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "generator": "Hugo 0.99.1", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:site_name": "Skaffold", "robots": "index, follow", "og:title": "Architecture and Design", "twitter:card": "summary", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "scrapeId": "64f6aed3-915b-4966-b8b5-5659f92063c7", "sourceURL": "https://skaffold.dev/docs/design", "url": "https://skaffold.dev/docs/design/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I architecture overview in skaffold?\n\nAssistant: To architecture overview in skaffold, here's what you do:\nSkaffold is designed with pluggability in mind. The architecture allows you to use Skaffold with the tool you prefer. Skaffold provides built-in support for the following tools:\n\n- **Build**\n  - Dockerfile locally, in-cluster with kaniko or on cloud using Google Cloud Build\n  - Jib Maven and Jib Gradle locally or on cloud using Google Cloud Build\n  - Bazel locally\n  - Cloud Native Buildpacks locally or on cloud using Google Cloud Build\n  - Custom script locally or in-cluster\n- **Test**\n  - [container-structure-test](https://github.com/GoogleContainerTools/container-structure-test)\n- **Tag**\n  - Git tagger\n  - Sha256 tagger\n  - Input Digest tagger\n  - Env Template tagger\n  - DateTime tagger\n- **Deploy**\n  - Kubernetes Command-Line Interface ( `kubectl`)\n  - [Helm](https://helm.sh/)\n  - [kustomize](https://github.com/kubernetes-sigs/kustomize).\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/design", "title": "Architecture and Design", "description": "Skaffold is designed with pluggability in mind, allowing integration with various tools for building, testing, tagging, and deploying applications.", "has_code_examples": true, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 03:45:44", "type": "section_detail", "page_metadata": {"ogTitle": "Architecture and Design", "og:type": "website", "twitter:title": "Architecture and Design", "description": "Skaffold is designed with pluggability in mind:\n\nThe architecture allows you to use Skaffold with the tool you prefer. Skaffold\nprovides built-in …", "ogUrl": "https://skaffold.dev/docs/design/", "language": "en", "title": "Architecture and Design | Skaffold", "og:description": "Easy and Repeatable Container & Kubernetes Development", "og:url": "https://skaffold.dev/docs/design/", "ogSiteName": "Skaffold", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "generator": "Hugo 0.99.1", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:site_name": "Skaffold", "robots": "index, follow", "og:title": "Architecture and Design", "twitter:card": "summary", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "scrapeId": "64f6aed3-915b-4966-b8b5-5659f92063c7", "sourceURL": "https://skaffold.dev/docs/design", "url": "https://skaffold.dev/docs/design/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you give me some code examples for Architecture and Design in skaffold?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Local Development Workflow**:\n\n```yaml\nYou may want to use local Docker daemon for building artifacts, and deploy them to a Minikube local Kubernetes cluster with `kubectl`.\n```\n\nThis snippet shows you how to local development workflow, which is an important aspect of architecture and design.\n\n**Production Workflow**:\n\n```yaml\nFor production applications, you might find it more appropriate to build with Google Cloud Build and deploy using Helm.\n```\n\nThis snippet shows you how to production workflow, which is an important aspect of architecture and design.\n\n", "metadata": {"source_url": "https://skaffold.dev/docs/design", "title": "Architecture and Design", "description": "Skaffold is designed with pluggability in mind, allowing integration with various tools for building, testing, tagging, and deploying applications.", "has_code_examples": true, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 03:45:44", "type": "code_examples", "page_metadata": {"ogTitle": "Architecture and Design", "og:type": "website", "twitter:title": "Architecture and Design", "description": "Skaffold is designed with pluggability in mind:\n\nThe architecture allows you to use Skaffold with the tool you prefer. Skaffold\nprovides built-in …", "ogUrl": "https://skaffold.dev/docs/design/", "language": "en", "title": "Architecture and Design | Skaffold", "og:description": "Easy and Repeatable Container & Kubernetes Development", "og:url": "https://skaffold.dev/docs/design/", "ogSiteName": "Skaffold", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "generator": "Hugo 0.99.1", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:site_name": "Skaffold", "robots": "index, follow", "og:title": "Architecture and Design", "twitter:card": "summary", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "scrapeId": "64f6aed3-915b-4966-b8b5-5659f92063c7", "sourceURL": "https://skaffold.dev/docs/design", "url": "https://skaffold.dev/docs/design/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: What are some tips for using Architecture and Design in skaffold effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nYou can combine the tools as you see fit in Skaffold.\n\nFor experimental projects, use local Docker daemon for building artifacts.\n\nFor production applications, consider using Google Cloud Build and Helm for deployment.\n\nSkaffold supports development profiles, allowing you to specify multiple profiles in your configuration.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://skaffold.dev/docs/design", "title": "Architecture and Design", "description": "Skaffold is designed with pluggability in mind, allowing integration with various tools for building, testing, tagging, and deploying applications.", "has_code_examples": true, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 03:45:44", "type": "best_practices", "page_metadata": {"ogTitle": "Architecture and Design", "og:type": "website", "twitter:title": "Architecture and Design", "description": "Skaffold is designed with pluggability in mind:\n\nThe architecture allows you to use Skaffold with the tool you prefer. Skaffold\nprovides built-in …", "ogUrl": "https://skaffold.dev/docs/design/", "language": "en", "title": "Architecture and Design | Skaffold", "og:description": "Easy and Repeatable Container & Kubernetes Development", "og:url": "https://skaffold.dev/docs/design/", "ogSiteName": "Skaffold", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "generator": "Hugo 0.99.1", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:site_name": "Skaffold", "robots": "index, follow", "og:title": "Architecture and Design", "twitter:card": "summary", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "scrapeId": "64f6aed3-915b-4966-b8b5-5659f92063c7", "sourceURL": "https://skaffold.dev/docs/design", "url": "https://skaffold.dev/docs/design/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what Cloud Native Buildpacks is in skaffold?\n\nAssistant: Sure, I'd be happy to explain Cloud Native Buildpacks in skaffold.\n\n# Cloud Native Buildpacks\n\nCloud Native Buildpacks enable building a container image from source code without the need for a Dockerfile.Here's a quick rundown of what this is about:\n\n## Configuration\n\nTo use Buildpacks, add a `buildpack` field to each artifact you specify in the `artifacts` part of the `build` section. `context` should be a path to your source.\n\n#### Note\n\nIn Skaffold 1.11 (schema `v2beta5`), the singular `buildpack` field was renamed to `buildpacks`.\n\nThe following options can optionally be configured:\n\n| Option | Description | Default |\n| --- | --- | --- |\n| `builder` | builder image used. | `` |\n| `runImage` | overrides the stack’s default run image. | `` |\n| `env` | environment variables, in the `key=value` form, passed to the build. Values can use the go template syntax. | `[]` |\n| `buildpacks` | a list of strings, where each string is a specific buildpack to use with the builder. If you specify buildpacks the builder image automatic detection will be ignored. These buildpacks will be used to build the Image from your source code. Order matters. | `[]` |\n| `trustBuilder` | indicates that the builder should be trusted. | `false` |\n| `clearCache` | removes old cache volume associated with the specific image and supplies a clean cache volume for build. | `false` |\n| `projectDescriptor` | path to the project descriptor file. | `project.toml` |\n| `dependencies` | file dependencies that skaffold should watch for both rebuilding and file syncing for this artifact. | `` |\n| `volumes` | support mounting host volumes into the container. | `` | \n\n**Builder**\n\n`builder` is _required_ and tells Skaffold which [Builder](https://buildpacks.io/docs/app-developer-guide/build-an-app/) to use.\n\n**Run Image**\n\n`runImage` is _optional_ and will override the default [Run Image](https://buildpacks.io/docs/concepts/components/stack/).\n\n**Artifact Dependency**\n\nYou can define dependency on other artifacts using the `requires` keyword. This can be useful to specify another artifact image as the `builder` or `runImage`.\n\n## User defined environment variables\n\n`env` makes it possible to configure specific environment variables for buildpacks. Many buildpacks use environment variables to adjust their detection and the build phases, such as selecting specific versions of language runtimes. Note that user’s current environment is not passed through to buildpacks.\n\n## Example\n\nThe following `build` section, instructs Skaffold to build a Docker image with buildpacks:\n\n```yaml\napiVersion: skaffold/v2beta5\nkind: Config\nbuild:\n  artifacts:\n  - image: gcr.io/k8s-skaffold/skaffold-buildpacks\n    buildpacks:\n      builder: \"gcr.io/buildpacks/builder:v1\"\n```\n\n## Dependencies\n\n`dependencies` tells the skaffold file watcher which files should be watched to trigger rebuilds and file syncs. Supported schema for `dependencies` includes:\n\n| Option | Description | Default |\n| --- | --- | --- |\n| `paths` | should be set to the file dependencies for this artifact, so that the skaffold file watcher knows when to rebuild and perform file synchronization. | `[]` |\n| `ignore` | specifies the paths that should be ignored by skaffold’s file watcher. If a file exists in both `paths` and in `ignore`, it will be ignored, and will be excluded from both rebuilds and file synchronization. Will only work in conjunction with `paths`. | `[]` |\n\nBy default, every file in the artifact’s `context` will be watched.\n\n## Paths and Ignore\n\n`Paths` and `Ignore` are arrays used to list dependencies. Any paths in `Ignore` will be ignored by the skaffold file watcher, even if they are also specified in `Paths`. `Ignore` will only work in conjunction with `Paths`, and with none of the other custom artifact dependency types.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/builders/builder-types/buildpacks", "title": "Cloud Native Buildpacks", "description": "Cloud Native Buildpacks enable building a container image from source code without the need for a Dockerfile.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:46:11", "type": "overview", "page_metadata": {"ogSiteName": "Skaffold", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:description": "Cloud Native Buildpacks enable building a container image from source code without the need for a Dockerfile.\nSkaffold supports building with Cloud Native Buildpacks, requiring only a local Docker daemon. Skaffold performs the build inside a container using the builder specified in the buildpack config.\nOn successful build completion, the built image will be pushed to the remote registry. You can choose to skip this step.\nConfiguration To use Buildpacks, add a buildpack field to each artifact you specify in the artifacts part of the build section.", "description": "Cloud Native Buildpacks enable building\na container image from source code without the need for a Dockerfile.\nSkaffold supports building with Cloud …", "og:type": "article", "generator": "Hugo 0.99.1", "title": "Cloud Native Buildpacks | Skaffold", "ogUrl": "https://skaffold.dev/docs/builders/builder-types/buildpacks/", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:url": "https://skaffold.dev/docs/builders/builder-types/buildpacks/", "article:section": "docs", "ogDescription": "Cloud Native Buildpacks enable building a container image from source code without the need for a Dockerfile.\nSkaffold supports building with Cloud Native Buildpacks, requiring only a local Docker daemon. Skaffold performs the build inside a container using the builder specified in the buildpack config.\nOn successful build completion, the built image will be pushed to the remote registry. You can choose to skip this step.\nConfiguration To use Buildpacks, add a buildpack field to each artifact you specify in the artifacts part of the build section.", "ogTitle": "Cloud Native Buildpacks", "og:title": "Cloud Native Buildpacks", "og:site_name": "Skaffold", "twitter:description": "Cloud Native Buildpacks enable building a container image from source code without the need for a Dockerfile.\nSkaffold supports building with Cloud Native Buildpacks, requiring only a local Docker daemon. Skaffold performs the build inside a container using the builder specified in the buildpack config.\nOn successful build completion, the built image will be pushed to the remote registry. You can choose to skip this step.\nConfiguration To use Buildpacks, add a buildpack field to each artifact you specify in the artifacts part of the build section.", "robots": "index, follow", "twitter:title": "Cloud Native Buildpacks", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "language": "en", "twitter:card": "summary", "scrapeId": "9db2e95a-801c-4936-8f87-e11da4ee8b11", "sourceURL": "https://skaffold.dev/docs/builders/builder-types/buildpacks", "url": "https://skaffold.dev/docs/builders/builder-types/buildpacks/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I configuration in skaffold?\n\nAssistant: To configuration in skaffold, here's what you do:\nTo use Buildpacks, add a `buildpack` field to each artifact you specify in the `artifacts` part of the `build` section. `context` should be a path to your source.\n\n#### Note\n\nIn Skaffold 1.11 (schema `v2beta5`), the singular `buildpack` field was renamed to `buildpacks`.\n\nThe following options can optionally be configured:\n\n| Option | Description | Default |\n| --- | --- | --- |\n| `builder` | builder image used. | `` |\n| `runImage` | overrides the stack’s default run image. | `` |\n| `env` | environment variables, in the `key=value` form, passed to the build. Values can use the go template syntax. | `[]` |\n| `buildpacks` | a list of strings, where each string is a specific buildpack to use with the builder. If you specify buildpacks the builder image automatic detection will be ignored. These buildpacks will be used to build the Image from your source code. Order matters. | `[]` |\n| `trustBuilder` | indicates that the builder should be trusted. | `false` |\n| `clearCache` | removes old cache volume associated with the specific image and supplies a clean cache volume for build. | `false` |\n| `projectDescriptor` | path to the project descriptor file. | `project.toml` |\n| `dependencies` | file dependencies that skaffold should watch for both rebuilding and file syncing for this artifact. | `` |\n| `volumes` | support mounting host volumes into the container. | `` | \n\n**Builder**\n\n`builder` is _required_ and tells Skaffold which [Builder](https://buildpacks.io/docs/app-developer-guide/build-an-app/) to use.\n\n**Run Image**\n\n`runImage` is _optional_ and will override the default [Run Image](https://buildpacks.io/docs/concepts/components/stack/).\n\n**Artifact Dependency**\n\nYou can define dependency on other artifacts using the `requires` keyword. This can be useful to specify another artifact image as the `builder` or `runImage`..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/builders/builder-types/buildpacks", "title": "Cloud Native Buildpacks", "description": "Cloud Native Buildpacks enable building a container image from source code without the need for a Dockerfile.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:46:11", "type": "section_detail", "page_metadata": {"ogSiteName": "Skaffold", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:description": "Cloud Native Buildpacks enable building a container image from source code without the need for a Dockerfile.\nSkaffold supports building with Cloud Native Buildpacks, requiring only a local Docker daemon. Skaffold performs the build inside a container using the builder specified in the buildpack config.\nOn successful build completion, the built image will be pushed to the remote registry. You can choose to skip this step.\nConfiguration To use Buildpacks, add a buildpack field to each artifact you specify in the artifacts part of the build section.", "description": "Cloud Native Buildpacks enable building\na container image from source code without the need for a Dockerfile.\nSkaffold supports building with Cloud …", "og:type": "article", "generator": "Hugo 0.99.1", "title": "Cloud Native Buildpacks | Skaffold", "ogUrl": "https://skaffold.dev/docs/builders/builder-types/buildpacks/", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:url": "https://skaffold.dev/docs/builders/builder-types/buildpacks/", "article:section": "docs", "ogDescription": "Cloud Native Buildpacks enable building a container image from source code without the need for a Dockerfile.\nSkaffold supports building with Cloud Native Buildpacks, requiring only a local Docker daemon. Skaffold performs the build inside a container using the builder specified in the buildpack config.\nOn successful build completion, the built image will be pushed to the remote registry. You can choose to skip this step.\nConfiguration To use Buildpacks, add a buildpack field to each artifact you specify in the artifacts part of the build section.", "ogTitle": "Cloud Native Buildpacks", "og:title": "Cloud Native Buildpacks", "og:site_name": "Skaffold", "twitter:description": "Cloud Native Buildpacks enable building a container image from source code without the need for a Dockerfile.\nSkaffold supports building with Cloud Native Buildpacks, requiring only a local Docker daemon. Skaffold performs the build inside a container using the builder specified in the buildpack config.\nOn successful build completion, the built image will be pushed to the remote registry. You can choose to skip this step.\nConfiguration To use Buildpacks, add a buildpack field to each artifact you specify in the artifacts part of the build section.", "robots": "index, follow", "twitter:title": "Cloud Native Buildpacks", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "language": "en", "twitter:card": "summary", "scrapeId": "9db2e95a-801c-4936-8f87-e11da4ee8b11", "sourceURL": "https://skaffold.dev/docs/builders/builder-types/buildpacks", "url": "https://skaffold.dev/docs/builders/builder-types/buildpacks/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I user defined environment variables in skaffold?\n\nAssistant: To user defined environment variables in skaffold, here's what you do:\n`env` makes it possible to configure specific environment variables for buildpacks. Many buildpacks use environment variables to adjust their detection and the build phases, such as selecting specific versions of language runtimes. Note that user’s current environment is not passed through to buildpacks..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/builders/builder-types/buildpacks", "title": "Cloud Native Buildpacks", "description": "Cloud Native Buildpacks enable building a container image from source code without the need for a Dockerfile.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:46:11", "type": "section_detail", "page_metadata": {"ogSiteName": "Skaffold", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:description": "Cloud Native Buildpacks enable building a container image from source code without the need for a Dockerfile.\nSkaffold supports building with Cloud Native Buildpacks, requiring only a local Docker daemon. Skaffold performs the build inside a container using the builder specified in the buildpack config.\nOn successful build completion, the built image will be pushed to the remote registry. You can choose to skip this step.\nConfiguration To use Buildpacks, add a buildpack field to each artifact you specify in the artifacts part of the build section.", "description": "Cloud Native Buildpacks enable building\na container image from source code without the need for a Dockerfile.\nSkaffold supports building with Cloud …", "og:type": "article", "generator": "Hugo 0.99.1", "title": "Cloud Native Buildpacks | Skaffold", "ogUrl": "https://skaffold.dev/docs/builders/builder-types/buildpacks/", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:url": "https://skaffold.dev/docs/builders/builder-types/buildpacks/", "article:section": "docs", "ogDescription": "Cloud Native Buildpacks enable building a container image from source code without the need for a Dockerfile.\nSkaffold supports building with Cloud Native Buildpacks, requiring only a local Docker daemon. Skaffold performs the build inside a container using the builder specified in the buildpack config.\nOn successful build completion, the built image will be pushed to the remote registry. You can choose to skip this step.\nConfiguration To use Buildpacks, add a buildpack field to each artifact you specify in the artifacts part of the build section.", "ogTitle": "Cloud Native Buildpacks", "og:title": "Cloud Native Buildpacks", "og:site_name": "Skaffold", "twitter:description": "Cloud Native Buildpacks enable building a container image from source code without the need for a Dockerfile.\nSkaffold supports building with Cloud Native Buildpacks, requiring only a local Docker daemon. Skaffold performs the build inside a container using the builder specified in the buildpack config.\nOn successful build completion, the built image will be pushed to the remote registry. You can choose to skip this step.\nConfiguration To use Buildpacks, add a buildpack field to each artifact you specify in the artifacts part of the build section.", "robots": "index, follow", "twitter:title": "Cloud Native Buildpacks", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "language": "en", "twitter:card": "summary", "scrapeId": "9db2e95a-801c-4936-8f87-e11da4ee8b11", "sourceURL": "https://skaffold.dev/docs/builders/builder-types/buildpacks", "url": "https://skaffold.dev/docs/builders/builder-types/buildpacks/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I example in skaffold?\n\nAssistant: To example in skaffold, here's what you do:\nThe following `build` section, instructs Skaffold to build a Docker image with buildpacks:\n\n```yaml\napiVersion: skaffold/v2beta5\nkind: Config\nbuild:\n  artifacts:\n  - image: gcr.io/k8s-skaffold/skaffold-buildpacks\n    buildpacks:\n      builder: \"gcr.io/buildpacks/builder:v1\"\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/builders/builder-types/buildpacks", "title": "Cloud Native Buildpacks", "description": "Cloud Native Buildpacks enable building a container image from source code without the need for a Dockerfile.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:46:11", "type": "section_detail", "page_metadata": {"ogSiteName": "Skaffold", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:description": "Cloud Native Buildpacks enable building a container image from source code without the need for a Dockerfile.\nSkaffold supports building with Cloud Native Buildpacks, requiring only a local Docker daemon. Skaffold performs the build inside a container using the builder specified in the buildpack config.\nOn successful build completion, the built image will be pushed to the remote registry. You can choose to skip this step.\nConfiguration To use Buildpacks, add a buildpack field to each artifact you specify in the artifacts part of the build section.", "description": "Cloud Native Buildpacks enable building\na container image from source code without the need for a Dockerfile.\nSkaffold supports building with Cloud …", "og:type": "article", "generator": "Hugo 0.99.1", "title": "Cloud Native Buildpacks | Skaffold", "ogUrl": "https://skaffold.dev/docs/builders/builder-types/buildpacks/", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:url": "https://skaffold.dev/docs/builders/builder-types/buildpacks/", "article:section": "docs", "ogDescription": "Cloud Native Buildpacks enable building a container image from source code without the need for a Dockerfile.\nSkaffold supports building with Cloud Native Buildpacks, requiring only a local Docker daemon. Skaffold performs the build inside a container using the builder specified in the buildpack config.\nOn successful build completion, the built image will be pushed to the remote registry. You can choose to skip this step.\nConfiguration To use Buildpacks, add a buildpack field to each artifact you specify in the artifacts part of the build section.", "ogTitle": "Cloud Native Buildpacks", "og:title": "Cloud Native Buildpacks", "og:site_name": "Skaffold", "twitter:description": "Cloud Native Buildpacks enable building a container image from source code without the need for a Dockerfile.\nSkaffold supports building with Cloud Native Buildpacks, requiring only a local Docker daemon. Skaffold performs the build inside a container using the builder specified in the buildpack config.\nOn successful build completion, the built image will be pushed to the remote registry. You can choose to skip this step.\nConfiguration To use Buildpacks, add a buildpack field to each artifact you specify in the artifacts part of the build section.", "robots": "index, follow", "twitter:title": "Cloud Native Buildpacks", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "language": "en", "twitter:card": "summary", "scrapeId": "9db2e95a-801c-4936-8f87-e11da4ee8b11", "sourceURL": "https://skaffold.dev/docs/builders/builder-types/buildpacks", "url": "https://skaffold.dev/docs/builders/builder-types/buildpacks/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I dependencies in skaffold?\n\nAssistant: To dependencies in skaffold, here's what you do:\n`dependencies` tells the skaffold file watcher which files should be watched to trigger rebuilds and file syncs. Supported schema for `dependencies` includes:\n\n| Option | Description | Default |\n| --- | --- | --- |\n| `paths` | should be set to the file dependencies for this artifact, so that the skaffold file watcher knows when to rebuild and perform file synchronization. | `[]` |\n| `ignore` | specifies the paths that should be ignored by skaffold’s file watcher. If a file exists in both `paths` and in `ignore`, it will be ignored, and will be excluded from both rebuilds and file synchronization. Will only work in conjunction with `paths`. | `[]` |\n\nBy default, every file in the artifact’s `context` will be watched..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/builders/builder-types/buildpacks", "title": "Cloud Native Buildpacks", "description": "Cloud Native Buildpacks enable building a container image from source code without the need for a Dockerfile.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:46:11", "type": "section_detail", "page_metadata": {"ogSiteName": "Skaffold", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:description": "Cloud Native Buildpacks enable building a container image from source code without the need for a Dockerfile.\nSkaffold supports building with Cloud Native Buildpacks, requiring only a local Docker daemon. Skaffold performs the build inside a container using the builder specified in the buildpack config.\nOn successful build completion, the built image will be pushed to the remote registry. You can choose to skip this step.\nConfiguration To use Buildpacks, add a buildpack field to each artifact you specify in the artifacts part of the build section.", "description": "Cloud Native Buildpacks enable building\na container image from source code without the need for a Dockerfile.\nSkaffold supports building with Cloud …", "og:type": "article", "generator": "Hugo 0.99.1", "title": "Cloud Native Buildpacks | Skaffold", "ogUrl": "https://skaffold.dev/docs/builders/builder-types/buildpacks/", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:url": "https://skaffold.dev/docs/builders/builder-types/buildpacks/", "article:section": "docs", "ogDescription": "Cloud Native Buildpacks enable building a container image from source code without the need for a Dockerfile.\nSkaffold supports building with Cloud Native Buildpacks, requiring only a local Docker daemon. Skaffold performs the build inside a container using the builder specified in the buildpack config.\nOn successful build completion, the built image will be pushed to the remote registry. You can choose to skip this step.\nConfiguration To use Buildpacks, add a buildpack field to each artifact you specify in the artifacts part of the build section.", "ogTitle": "Cloud Native Buildpacks", "og:title": "Cloud Native Buildpacks", "og:site_name": "Skaffold", "twitter:description": "Cloud Native Buildpacks enable building a container image from source code without the need for a Dockerfile.\nSkaffold supports building with Cloud Native Buildpacks, requiring only a local Docker daemon. Skaffold performs the build inside a container using the builder specified in the buildpack config.\nOn successful build completion, the built image will be pushed to the remote registry. You can choose to skip this step.\nConfiguration To use Buildpacks, add a buildpack field to each artifact you specify in the artifacts part of the build section.", "robots": "index, follow", "twitter:title": "Cloud Native Buildpacks", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "language": "en", "twitter:card": "summary", "scrapeId": "9db2e95a-801c-4936-8f87-e11da4ee8b11", "sourceURL": "https://skaffold.dev/docs/builders/builder-types/buildpacks", "url": "https://skaffold.dev/docs/builders/builder-types/buildpacks/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I paths and ignore in skaffold?\n\nAssistant: To paths and ignore in skaffold, here's what you do:\n`Paths` and `Ignore` are arrays used to list dependencies. Any paths in `Ignore` will be ignored by the skaffold file watcher, even if they are also specified in `Paths`. `Ignore` will only work in conjunction with `Paths`, and with none of the other custom artifact dependency types..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/builders/builder-types/buildpacks", "title": "Cloud Native Buildpacks", "description": "Cloud Native Buildpacks enable building a container image from source code without the need for a Dockerfile.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:46:11", "type": "section_detail", "page_metadata": {"ogSiteName": "Skaffold", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:description": "Cloud Native Buildpacks enable building a container image from source code without the need for a Dockerfile.\nSkaffold supports building with Cloud Native Buildpacks, requiring only a local Docker daemon. Skaffold performs the build inside a container using the builder specified in the buildpack config.\nOn successful build completion, the built image will be pushed to the remote registry. You can choose to skip this step.\nConfiguration To use Buildpacks, add a buildpack field to each artifact you specify in the artifacts part of the build section.", "description": "Cloud Native Buildpacks enable building\na container image from source code without the need for a Dockerfile.\nSkaffold supports building with Cloud …", "og:type": "article", "generator": "Hugo 0.99.1", "title": "Cloud Native Buildpacks | Skaffold", "ogUrl": "https://skaffold.dev/docs/builders/builder-types/buildpacks/", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:url": "https://skaffold.dev/docs/builders/builder-types/buildpacks/", "article:section": "docs", "ogDescription": "Cloud Native Buildpacks enable building a container image from source code without the need for a Dockerfile.\nSkaffold supports building with Cloud Native Buildpacks, requiring only a local Docker daemon. Skaffold performs the build inside a container using the builder specified in the buildpack config.\nOn successful build completion, the built image will be pushed to the remote registry. You can choose to skip this step.\nConfiguration To use Buildpacks, add a buildpack field to each artifact you specify in the artifacts part of the build section.", "ogTitle": "Cloud Native Buildpacks", "og:title": "Cloud Native Buildpacks", "og:site_name": "Skaffold", "twitter:description": "Cloud Native Buildpacks enable building a container image from source code without the need for a Dockerfile.\nSkaffold supports building with Cloud Native Buildpacks, requiring only a local Docker daemon. Skaffold performs the build inside a container using the builder specified in the buildpack config.\nOn successful build completion, the built image will be pushed to the remote registry. You can choose to skip this step.\nConfiguration To use Buildpacks, add a buildpack field to each artifact you specify in the artifacts part of the build section.", "robots": "index, follow", "twitter:title": "Cloud Native Buildpacks", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "language": "en", "twitter:card": "summary", "scrapeId": "9db2e95a-801c-4936-8f87-e11da4ee8b11", "sourceURL": "https://skaffold.dev/docs/builders/builder-types/buildpacks", "url": "https://skaffold.dev/docs/builders/builder-types/buildpacks/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you give me some code examples for Cloud Native Buildpacks in skaffold?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Artifact Dependency Example**:\n\n```yaml\n```yaml\nbuild:\n  artifacts:\n  - image: image1 # buildpacks artifact\n    buildpacks:\n      builder: image2\n      runImage: image3\n    requires:\n      - image: image2\n      - image: image3\n  - image: image2 # builder artifact\n  - image: image3 # run image artifact\n  local: {}\n```\n```\n\nThis snippet shows you how to artifact dependency example, which is an important aspect of cloud native buildpacks.\n\n**Dependencies Example**:\n\n```yaml\n```yaml\nbuildpack:\n  builder: \"gcr.io/buildpacks/builder:v1\"\n  dependencies:\n    paths:\n    - pkg/**\n    - src/*.go\n    ignore:\n    - vendor/**\n```\n```\n\nThis snippet shows you how to dependencies example, which is an important aspect of cloud native buildpacks.\n\n", "metadata": {"source_url": "https://skaffold.dev/docs/builders/builder-types/buildpacks", "title": "Cloud Native Buildpacks", "description": "Cloud Native Buildpacks enable building a container image from source code without the need for a Dockerfile.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:46:11", "type": "code_examples", "page_metadata": {"ogSiteName": "Skaffold", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:description": "Cloud Native Buildpacks enable building a container image from source code without the need for a Dockerfile.\nSkaffold supports building with Cloud Native Buildpacks, requiring only a local Docker daemon. Skaffold performs the build inside a container using the builder specified in the buildpack config.\nOn successful build completion, the built image will be pushed to the remote registry. You can choose to skip this step.\nConfiguration To use Buildpacks, add a buildpack field to each artifact you specify in the artifacts part of the build section.", "description": "Cloud Native Buildpacks enable building\na container image from source code without the need for a Dockerfile.\nSkaffold supports building with Cloud …", "og:type": "article", "generator": "Hugo 0.99.1", "title": "Cloud Native Buildpacks | Skaffold", "ogUrl": "https://skaffold.dev/docs/builders/builder-types/buildpacks/", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:url": "https://skaffold.dev/docs/builders/builder-types/buildpacks/", "article:section": "docs", "ogDescription": "Cloud Native Buildpacks enable building a container image from source code without the need for a Dockerfile.\nSkaffold supports building with Cloud Native Buildpacks, requiring only a local Docker daemon. Skaffold performs the build inside a container using the builder specified in the buildpack config.\nOn successful build completion, the built image will be pushed to the remote registry. You can choose to skip this step.\nConfiguration To use Buildpacks, add a buildpack field to each artifact you specify in the artifacts part of the build section.", "ogTitle": "Cloud Native Buildpacks", "og:title": "Cloud Native Buildpacks", "og:site_name": "Skaffold", "twitter:description": "Cloud Native Buildpacks enable building a container image from source code without the need for a Dockerfile.\nSkaffold supports building with Cloud Native Buildpacks, requiring only a local Docker daemon. Skaffold performs the build inside a container using the builder specified in the buildpack config.\nOn successful build completion, the built image will be pushed to the remote registry. You can choose to skip this step.\nConfiguration To use Buildpacks, add a buildpack field to each artifact you specify in the artifacts part of the build section.", "robots": "index, follow", "twitter:title": "Cloud Native Buildpacks", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "language": "en", "twitter:card": "summary", "scrapeId": "9db2e95a-801c-4936-8f87-e11da4ee8b11", "sourceURL": "https://skaffold.dev/docs/builders/builder-types/buildpacks", "url": "https://skaffold.dev/docs/builders/builder-types/buildpacks/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: What are some tips for using Cloud Native Buildpacks in skaffold effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nEnsure to specify the `builder` field as it is required for Skaffold to know which builder to use.\n\nUse the `runImage` field to override the default run image if necessary.\n\nDefine dependencies using the `requires` keyword to manage artifact relationships effectively.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://skaffold.dev/docs/builders/builder-types/buildpacks", "title": "Cloud Native Buildpacks", "description": "Cloud Native Buildpacks enable building a container image from source code without the need for a Dockerfile.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:46:11", "type": "best_practices", "page_metadata": {"ogSiteName": "Skaffold", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:description": "Cloud Native Buildpacks enable building a container image from source code without the need for a Dockerfile.\nSkaffold supports building with Cloud Native Buildpacks, requiring only a local Docker daemon. Skaffold performs the build inside a container using the builder specified in the buildpack config.\nOn successful build completion, the built image will be pushed to the remote registry. You can choose to skip this step.\nConfiguration To use Buildpacks, add a buildpack field to each artifact you specify in the artifacts part of the build section.", "description": "Cloud Native Buildpacks enable building\na container image from source code without the need for a Dockerfile.\nSkaffold supports building with Cloud …", "og:type": "article", "generator": "Hugo 0.99.1", "title": "Cloud Native Buildpacks | Skaffold", "ogUrl": "https://skaffold.dev/docs/builders/builder-types/buildpacks/", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:url": "https://skaffold.dev/docs/builders/builder-types/buildpacks/", "article:section": "docs", "ogDescription": "Cloud Native Buildpacks enable building a container image from source code without the need for a Dockerfile.\nSkaffold supports building with Cloud Native Buildpacks, requiring only a local Docker daemon. Skaffold performs the build inside a container using the builder specified in the buildpack config.\nOn successful build completion, the built image will be pushed to the remote registry. You can choose to skip this step.\nConfiguration To use Buildpacks, add a buildpack field to each artifact you specify in the artifacts part of the build section.", "ogTitle": "Cloud Native Buildpacks", "og:title": "Cloud Native Buildpacks", "og:site_name": "Skaffold", "twitter:description": "Cloud Native Buildpacks enable building a container image from source code without the need for a Dockerfile.\nSkaffold supports building with Cloud Native Buildpacks, requiring only a local Docker daemon. Skaffold performs the build inside a container using the builder specified in the buildpack config.\nOn successful build completion, the built image will be pushed to the remote registry. You can choose to skip this step.\nConfiguration To use Buildpacks, add a buildpack field to each artifact you specify in the artifacts part of the build section.", "robots": "index, follow", "twitter:title": "Cloud Native Buildpacks", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "language": "en", "twitter:card": "summary", "scrapeId": "9db2e95a-801c-4936-8f87-e11da4ee8b11", "sourceURL": "https://skaffold.dev/docs/builders/builder-types/buildpacks", "url": "https://skaffold.dev/docs/builders/builder-types/buildpacks/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what Docker beta is in skaffold?\n\nAssistant: Sure, I'd be happy to explain Docker beta in skaffold.\n\n# Docker beta\n\nThis feature is currently experimental and subject to change.Here's a quick rundown of what this is about:\n\n## Deploying applications to a local Docker daemon\n\nFor simple container-based applications that don’t rely on Kubernetes resource types, Skaffold can “deploy” these applications by running application containers directly in your local Docker daemon. This enables application developers who are not yet ready to make the jump to Kubernetes to take advantage of the streamlined development experience Skaffold provides.\n\nAdditionally, deploying to Docker bypasses the overhead of pushing images to a remote registry, and provides a faster time to running application than traditional Kubernetes deployments.\n\n## Configuration\n\nTo deploy to your local Docker daemon, specify the `docker` deploy type in the `deploy` section of your `skaffold.yaml`.\n\nThe `docker` deploy type offers the following options:\n\n| Option | Description | Default |\n| --- | --- | --- |\n| `useCompose` | tells skaffold whether or not to deploy using `docker-compose`. | `false` |\n| `images` | **Required** container images to run in Docker. | `[]` |\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/deployers/docker", "title": "Docker beta", "description": "This feature is currently experimental and subject to change.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:46:35", "type": "overview", "page_metadata": {"generator": "Hugo 0.99.1", "og:description": "Note This feature is currently experimental and subject to change.  Deploying applications to a local Docker daemon For simple container-based applications that don’t rely on Kubernetes resource types, Skaffold can “deploy” these applications by running application containers directly in your local Docker daemon. This enables application developers who are not yet ready to make the jump to Kubernetes to take advantage of the streamlined development experience Skaffold provides.", "language": "en", "ogSiteName": "Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "ogTitle": "Docker", "robots": "index, follow", "og:url": "https://skaffold.dev/docs/deployers/docker/", "twitter:description": "Note This feature is currently experimental and subject to change.  Deploying applications to a local Docker daemon For simple container-based applications that don’t rely on Kubernetes resource types, Skaffold can “deploy” these applications by running application containers directly in your local Docker daemon. This enables application developers who are not yet ready to make the jump to Kubernetes to take advantage of the streamlined development experience Skaffold provides.", "description": "\n\n\n    Note\n    This feature is currently experimental and subject to change.\n\n\nDeploying applications to a local Docker daemon\nFor simple …", "og:title": "Docker", "twitter:card": "summary", "ogUrl": "https://skaffold.dev/docs/deployers/docker/", "modifiedTime": "2025-01-23T10:14:58-05:00", "article:section": "docs", "og:type": "article", "title": "Docker | Skaffold", "ogDescription": "Note This feature is currently experimental and subject to change.  Deploying applications to a local Docker daemon For simple container-based applications that don’t rely on Kubernetes resource types, Skaffold can “deploy” these applications by running application containers directly in your local Docker daemon. This enables application developers who are not yet ready to make the jump to Kubernetes to take advantage of the streamlined development experience Skaffold provides.", "article:modified_time": "2025-01-23T10:14:58-05:00", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "twitter:title": "Docker", "og:site_name": "Skaffold", "scrapeId": "f240b02a-8b68-454e-adf4-ae5b5bf5d0f2", "sourceURL": "https://skaffold.dev/docs/deployers/docker", "url": "https://skaffold.dev/docs/deployers/docker/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I deploying applications to a local docker daemon in skaffold?\n\nAssistant: To deploying applications to a local docker daemon in skaffold, here's what you do:\nFor simple container-based applications that don’t rely on Kubernetes resource types, Skaffold can “deploy” these applications by running application containers directly in your local Docker daemon. This enables application developers who are not yet ready to make the jump to Kubernetes to take advantage of the streamlined development experience Skaffold provides.\n\nAdditionally, deploying to Docker bypasses the overhead of pushing images to a remote registry, and provides a faster time to running application than traditional Kubernetes deployments..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/deployers/docker", "title": "Docker beta", "description": "This feature is currently experimental and subject to change.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:46:35", "type": "section_detail", "page_metadata": {"generator": "Hugo 0.99.1", "og:description": "Note This feature is currently experimental and subject to change.  Deploying applications to a local Docker daemon For simple container-based applications that don’t rely on Kubernetes resource types, Skaffold can “deploy” these applications by running application containers directly in your local Docker daemon. This enables application developers who are not yet ready to make the jump to Kubernetes to take advantage of the streamlined development experience Skaffold provides.", "language": "en", "ogSiteName": "Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "ogTitle": "Docker", "robots": "index, follow", "og:url": "https://skaffold.dev/docs/deployers/docker/", "twitter:description": "Note This feature is currently experimental and subject to change.  Deploying applications to a local Docker daemon For simple container-based applications that don’t rely on Kubernetes resource types, Skaffold can “deploy” these applications by running application containers directly in your local Docker daemon. This enables application developers who are not yet ready to make the jump to Kubernetes to take advantage of the streamlined development experience Skaffold provides.", "description": "\n\n\n    Note\n    This feature is currently experimental and subject to change.\n\n\nDeploying applications to a local Docker daemon\nFor simple …", "og:title": "Docker", "twitter:card": "summary", "ogUrl": "https://skaffold.dev/docs/deployers/docker/", "modifiedTime": "2025-01-23T10:14:58-05:00", "article:section": "docs", "og:type": "article", "title": "Docker | Skaffold", "ogDescription": "Note This feature is currently experimental and subject to change.  Deploying applications to a local Docker daemon For simple container-based applications that don’t rely on Kubernetes resource types, Skaffold can “deploy” these applications by running application containers directly in your local Docker daemon. This enables application developers who are not yet ready to make the jump to Kubernetes to take advantage of the streamlined development experience Skaffold provides.", "article:modified_time": "2025-01-23T10:14:58-05:00", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "twitter:title": "Docker", "og:site_name": "Skaffold", "scrapeId": "f240b02a-8b68-454e-adf4-ae5b5bf5d0f2", "sourceURL": "https://skaffold.dev/docs/deployers/docker", "url": "https://skaffold.dev/docs/deployers/docker/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I configuration in skaffold?\n\nAssistant: To configuration in skaffold, here's what you do:\nTo deploy to your local Docker daemon, specify the `docker` deploy type in the `deploy` section of your `skaffold.yaml`.\n\nThe `docker` deploy type offers the following options:\n\n| Option | Description | Default |\n| --- | --- | --- |\n| `useCompose` | tells skaffold whether or not to deploy using `docker-compose`. | `false` |\n| `images` | **Required** container images to run in Docker. | `[]` |.\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/deployers/docker", "title": "Docker beta", "description": "This feature is currently experimental and subject to change.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:46:35", "type": "section_detail", "page_metadata": {"generator": "Hugo 0.99.1", "og:description": "Note This feature is currently experimental and subject to change.  Deploying applications to a local Docker daemon For simple container-based applications that don’t rely on Kubernetes resource types, Skaffold can “deploy” these applications by running application containers directly in your local Docker daemon. This enables application developers who are not yet ready to make the jump to Kubernetes to take advantage of the streamlined development experience Skaffold provides.", "language": "en", "ogSiteName": "Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "ogTitle": "Docker", "robots": "index, follow", "og:url": "https://skaffold.dev/docs/deployers/docker/", "twitter:description": "Note This feature is currently experimental and subject to change.  Deploying applications to a local Docker daemon For simple container-based applications that don’t rely on Kubernetes resource types, Skaffold can “deploy” these applications by running application containers directly in your local Docker daemon. This enables application developers who are not yet ready to make the jump to Kubernetes to take advantage of the streamlined development experience Skaffold provides.", "description": "\n\n\n    Note\n    This feature is currently experimental and subject to change.\n\n\nDeploying applications to a local Docker daemon\nFor simple …", "og:title": "Docker", "twitter:card": "summary", "ogUrl": "https://skaffold.dev/docs/deployers/docker/", "modifiedTime": "2025-01-23T10:14:58-05:00", "article:section": "docs", "og:type": "article", "title": "Docker | Skaffold", "ogDescription": "Note This feature is currently experimental and subject to change.  Deploying applications to a local Docker daemon For simple container-based applications that don’t rely on Kubernetes resource types, Skaffold can “deploy” these applications by running application containers directly in your local Docker daemon. This enables application developers who are not yet ready to make the jump to Kubernetes to take advantage of the streamlined development experience Skaffold provides.", "article:modified_time": "2025-01-23T10:14:58-05:00", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "twitter:title": "Docker", "og:site_name": "Skaffold", "scrapeId": "f240b02a-8b68-454e-adf4-ae5b5bf5d0f2", "sourceURL": "https://skaffold.dev/docs/deployers/docker", "url": "https://skaffold.dev/docs/deployers/docker/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you give me some code examples for Docker beta in skaffold?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Example**:\n\n```yaml\nbuild:\n  artifacts:\n  - image: my-image\ndeploy:\n  docker:\n    images: [my-image]\n\n```\n\nThis snippet shows you how to example, which is an important aspect of docker beta.\n\n", "metadata": {"source_url": "https://skaffold.dev/docs/deployers/docker", "title": "Docker beta", "description": "This feature is currently experimental and subject to change.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:46:35", "type": "code_examples", "page_metadata": {"generator": "Hugo 0.99.1", "og:description": "Note This feature is currently experimental and subject to change.  Deploying applications to a local Docker daemon For simple container-based applications that don’t rely on Kubernetes resource types, Skaffold can “deploy” these applications by running application containers directly in your local Docker daemon. This enables application developers who are not yet ready to make the jump to Kubernetes to take advantage of the streamlined development experience Skaffold provides.", "language": "en", "ogSiteName": "Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "ogTitle": "Docker", "robots": "index, follow", "og:url": "https://skaffold.dev/docs/deployers/docker/", "twitter:description": "Note This feature is currently experimental and subject to change.  Deploying applications to a local Docker daemon For simple container-based applications that don’t rely on Kubernetes resource types, Skaffold can “deploy” these applications by running application containers directly in your local Docker daemon. This enables application developers who are not yet ready to make the jump to Kubernetes to take advantage of the streamlined development experience Skaffold provides.", "description": "\n\n\n    Note\n    This feature is currently experimental and subject to change.\n\n\nDeploying applications to a local Docker daemon\nFor simple …", "og:title": "Docker", "twitter:card": "summary", "ogUrl": "https://skaffold.dev/docs/deployers/docker/", "modifiedTime": "2025-01-23T10:14:58-05:00", "article:section": "docs", "og:type": "article", "title": "Docker | Skaffold", "ogDescription": "Note This feature is currently experimental and subject to change.  Deploying applications to a local Docker daemon For simple container-based applications that don’t rely on Kubernetes resource types, Skaffold can “deploy” these applications by running application containers directly in your local Docker daemon. This enables application developers who are not yet ready to make the jump to Kubernetes to take advantage of the streamlined development experience Skaffold provides.", "article:modified_time": "2025-01-23T10:14:58-05:00", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "twitter:title": "Docker", "og:site_name": "Skaffold", "scrapeId": "f240b02a-8b68-454e-adf4-ae5b5bf5d0f2", "sourceURL": "https://skaffold.dev/docs/deployers/docker", "url": "https://skaffold.dev/docs/deployers/docker/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: What are some tips for using Docker beta in skaffold effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nImages listed to be deployed with the `docker` deployer must also have a corresponding build artifact built by Skaffold.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://skaffold.dev/docs/deployers/docker", "title": "Docker beta", "description": "This feature is currently experimental and subject to change.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:46:35", "type": "best_practices", "page_metadata": {"generator": "Hugo 0.99.1", "og:description": "Note This feature is currently experimental and subject to change.  Deploying applications to a local Docker daemon For simple container-based applications that don’t rely on Kubernetes resource types, Skaffold can “deploy” these applications by running application containers directly in your local Docker daemon. This enables application developers who are not yet ready to make the jump to Kubernetes to take advantage of the streamlined development experience Skaffold provides.", "language": "en", "ogSiteName": "Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "ogTitle": "Docker", "robots": "index, follow", "og:url": "https://skaffold.dev/docs/deployers/docker/", "twitter:description": "Note This feature is currently experimental and subject to change.  Deploying applications to a local Docker daemon For simple container-based applications that don’t rely on Kubernetes resource types, Skaffold can “deploy” these applications by running application containers directly in your local Docker daemon. This enables application developers who are not yet ready to make the jump to Kubernetes to take advantage of the streamlined development experience Skaffold provides.", "description": "\n\n\n    Note\n    This feature is currently experimental and subject to change.\n\n\nDeploying applications to a local Docker daemon\nFor simple …", "og:title": "Docker", "twitter:card": "summary", "ogUrl": "https://skaffold.dev/docs/deployers/docker/", "modifiedTime": "2025-01-23T10:14:58-05:00", "article:section": "docs", "og:type": "article", "title": "Docker | Skaffold", "ogDescription": "Note This feature is currently experimental and subject to change.  Deploying applications to a local Docker daemon For simple container-based applications that don’t rely on Kubernetes resource types, Skaffold can “deploy” these applications by running application containers directly in your local Docker daemon. This enables application developers who are not yet ready to make the jump to Kubernetes to take advantage of the streamlined development experience Skaffold provides.", "article:modified_time": "2025-01-23T10:14:58-05:00", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "twitter:title": "Docker", "og:site_name": "Skaffold", "scrapeId": "f240b02a-8b68-454e-adf4-ae5b5bf5d0f2", "sourceURL": "https://skaffold.dev/docs/deployers/docker", "url": "https://skaffold.dev/docs/deployers/docker/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what Global Configuration is in skaffold?\n\nAssistant: Sure, I'd be happy to explain Global Configuration in skaffold.\n\n# Global Configuration\n\nSome context specific settings can be configured in a global configuration file, which defaults to `~/.skaffold/config`. Options can be configured globally or for specific Kubernetes contexts.Here's a quick rundown of what this is about:\n\n## Options\n\n| Option | Type | Description |\n| --- | --- | --- |\n| `default-repo` | string | The image registry where built artifact images are published (see [image name rewriting](https://skaffold.dev/docs/environment/image-registries/)). |\n| `multi-level-repo` | boolean | If true, do not replace ‘.’ and ‘/’ with ‘\\_’ in image name. |\n| `debug-helpers-registry` | string | The image registry where debug support images are retrieved (see [debugging](https://skaffold.dev/docs/workflows/debug/)). |\n| `insecure-registries` | list of strings | A list of image registries that may be accessed without TLS. |\n| `k3d-disable-load` | boolean | If true, do not use `k3d import image` to load images locally. |\n| `kind-disable-load` | boolean | If true, do not use `kind load` to load images locally. |\n| `local-cluster` | boolean | If true, do not try to push images after building. By default, contexts with names `docker-for-desktop`, `docker-desktop`, or `minikube` are treated as local. |\n| `update-check` | boolean | Check for a more recent version of Skaffold. |\n| `collect-metrics` | boolean | Collect anonymized usage data.\n\n## Example Usage\n\nFor example, to treat any context as local by default:\n\n```bash\nskaffold config set --global local-cluster true\n```\n\nThis will create a global configuration file at `~/.skaffold/config` with `local-cluster` set to `true`.\n\n## YAML Configuration\n\n```yaml\nglobal:\n  local-cluster: true\nkubeContexts: []\n```\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/design/global-config", "title": "Global Configuration", "description": "Some context specific settings can be configured in a global configuration file, which defaults to `~/.skaffold/config`. Options can be configured globally or for specific Kubernetes contexts.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:46:49", "type": "overview", "page_metadata": {"og:description": "Some context specific settings can be configured in a global configuration file, which defaults to ~/.skaffold/config. Options can be configured globally or for specific Kubernetes contexts. Context name matching supports regex, e.g.: .*-cluster.*-regex.*-test.*\nThe options are:\n   Option Type Description     default-repo string The image registry where built artifact images are published (see image name rewriting).   multi-level-repo boolean If true, do not replace ‘.", "generator": "Hugo 0.99.1", "article:section": "docs", "twitter:title": "Global Configuration", "modifiedTime": "2025-01-23T10:14:58-05:00", "article:modified_time": "2025-01-23T10:14:58-05:00", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:url": "https://skaffold.dev/docs/design/global-config/", "twitter:card": "summary", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "description": "Some context specific settings can be configured in a global configuration file, which defaults to ~/.skaffold/config. Options can be configured …", "robots": "index, follow", "ogDescription": "Some context specific settings can be configured in a global configuration file, which defaults to ~/.skaffold/config. Options can be configured globally or for specific Kubernetes contexts. Context name matching supports regex, e.g.: .*-cluster.*-regex.*-test.*\nThe options are:\n   Option Type Description     default-repo string The image registry where built artifact images are published (see image name rewriting).   multi-level-repo boolean If true, do not replace ‘.", "ogUrl": "https://skaffold.dev/docs/design/global-config/", "language": "en", "og:title": "Global Configuration", "og:type": "article", "og:site_name": "Skaffold", "ogTitle": "Global Configuration", "title": "Global Configuration | Skaffold", "twitter:description": "Some context specific settings can be configured in a global configuration file, which defaults to ~/.skaffold/config. Options can be configured globally or for specific Kubernetes contexts. Context name matching supports regex, e.g.: .*-cluster.*-regex.*-test.*\nThe options are:\n   Option Type Description     default-repo string The image registry where built artifact images are published (see image name rewriting).   multi-level-repo boolean If true, do not replace ‘.", "ogSiteName": "Skaffold", "scrapeId": "edd6c675-17e4-4357-83e1-5acabca64cae", "sourceURL": "https://skaffold.dev/docs/design/global-config", "url": "https://skaffold.dev/docs/design/global-config/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I options in skaffold?\n\nAssistant: To options in skaffold, here's what you do:\n| Option | Type | Description |\n| --- | --- | --- |\n| `default-repo` | string | The image registry where built artifact images are published (see [image name rewriting](https://skaffold.dev/docs/environment/image-registries/)). |\n| `multi-level-repo` | boolean | If true, do not replace ‘.’ and ‘/’ with ‘\\_’ in image name. |\n| `debug-helpers-registry` | string | The image registry where debug support images are retrieved (see [debugging](https://skaffold.dev/docs/workflows/debug/)). |\n| `insecure-registries` | list of strings | A list of image registries that may be accessed without TLS. |\n| `k3d-disable-load` | boolean | If true, do not use `k3d import image` to load images locally. |\n| `kind-disable-load` | boolean | If true, do not use `kind load` to load images locally. |\n| `local-cluster` | boolean | If true, do not try to push images after building. By default, contexts with names `docker-for-desktop`, `docker-desktop`, or `minikube` are treated as local. |\n| `update-check` | boolean | Check for a more recent version of Skaffold. |\n| `collect-metrics` | boolean | Collect anonymized usage data..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/design/global-config", "title": "Global Configuration", "description": "Some context specific settings can be configured in a global configuration file, which defaults to `~/.skaffold/config`. Options can be configured globally or for specific Kubernetes contexts.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:46:49", "type": "section_detail", "page_metadata": {"og:description": "Some context specific settings can be configured in a global configuration file, which defaults to ~/.skaffold/config. Options can be configured globally or for specific Kubernetes contexts. Context name matching supports regex, e.g.: .*-cluster.*-regex.*-test.*\nThe options are:\n   Option Type Description     default-repo string The image registry where built artifact images are published (see image name rewriting).   multi-level-repo boolean If true, do not replace ‘.", "generator": "Hugo 0.99.1", "article:section": "docs", "twitter:title": "Global Configuration", "modifiedTime": "2025-01-23T10:14:58-05:00", "article:modified_time": "2025-01-23T10:14:58-05:00", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:url": "https://skaffold.dev/docs/design/global-config/", "twitter:card": "summary", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "description": "Some context specific settings can be configured in a global configuration file, which defaults to ~/.skaffold/config. Options can be configured …", "robots": "index, follow", "ogDescription": "Some context specific settings can be configured in a global configuration file, which defaults to ~/.skaffold/config. Options can be configured globally or for specific Kubernetes contexts. Context name matching supports regex, e.g.: .*-cluster.*-regex.*-test.*\nThe options are:\n   Option Type Description     default-repo string The image registry where built artifact images are published (see image name rewriting).   multi-level-repo boolean If true, do not replace ‘.", "ogUrl": "https://skaffold.dev/docs/design/global-config/", "language": "en", "og:title": "Global Configuration", "og:type": "article", "og:site_name": "Skaffold", "ogTitle": "Global Configuration", "title": "Global Configuration | Skaffold", "twitter:description": "Some context specific settings can be configured in a global configuration file, which defaults to ~/.skaffold/config. Options can be configured globally or for specific Kubernetes contexts. Context name matching supports regex, e.g.: .*-cluster.*-regex.*-test.*\nThe options are:\n   Option Type Description     default-repo string The image registry where built artifact images are published (see image name rewriting).   multi-level-repo boolean If true, do not replace ‘.", "ogSiteName": "Skaffold", "scrapeId": "edd6c675-17e4-4357-83e1-5acabca64cae", "sourceURL": "https://skaffold.dev/docs/design/global-config", "url": "https://skaffold.dev/docs/design/global-config/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I example usage in skaffold?\n\nAssistant: To example usage in skaffold, here's what you do:\nFor example, to treat any context as local by default:\n\n```bash\nskaffold config set --global local-cluster true\n```\n\nThis will create a global configuration file at `~/.skaffold/config` with `local-cluster` set to `true`..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/design/global-config", "title": "Global Configuration", "description": "Some context specific settings can be configured in a global configuration file, which defaults to `~/.skaffold/config`. Options can be configured globally or for specific Kubernetes contexts.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:46:49", "type": "section_detail", "page_metadata": {"og:description": "Some context specific settings can be configured in a global configuration file, which defaults to ~/.skaffold/config. Options can be configured globally or for specific Kubernetes contexts. Context name matching supports regex, e.g.: .*-cluster.*-regex.*-test.*\nThe options are:\n   Option Type Description     default-repo string The image registry where built artifact images are published (see image name rewriting).   multi-level-repo boolean If true, do not replace ‘.", "generator": "Hugo 0.99.1", "article:section": "docs", "twitter:title": "Global Configuration", "modifiedTime": "2025-01-23T10:14:58-05:00", "article:modified_time": "2025-01-23T10:14:58-05:00", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:url": "https://skaffold.dev/docs/design/global-config/", "twitter:card": "summary", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "description": "Some context specific settings can be configured in a global configuration file, which defaults to ~/.skaffold/config. Options can be configured …", "robots": "index, follow", "ogDescription": "Some context specific settings can be configured in a global configuration file, which defaults to ~/.skaffold/config. Options can be configured globally or for specific Kubernetes contexts. Context name matching supports regex, e.g.: .*-cluster.*-regex.*-test.*\nThe options are:\n   Option Type Description     default-repo string The image registry where built artifact images are published (see image name rewriting).   multi-level-repo boolean If true, do not replace ‘.", "ogUrl": "https://skaffold.dev/docs/design/global-config/", "language": "en", "og:title": "Global Configuration", "og:type": "article", "og:site_name": "Skaffold", "ogTitle": "Global Configuration", "title": "Global Configuration | Skaffold", "twitter:description": "Some context specific settings can be configured in a global configuration file, which defaults to ~/.skaffold/config. Options can be configured globally or for specific Kubernetes contexts. Context name matching supports regex, e.g.: .*-cluster.*-regex.*-test.*\nThe options are:\n   Option Type Description     default-repo string The image registry where built artifact images are published (see image name rewriting).   multi-level-repo boolean If true, do not replace ‘.", "ogSiteName": "Skaffold", "scrapeId": "edd6c675-17e4-4357-83e1-5acabca64cae", "sourceURL": "https://skaffold.dev/docs/design/global-config", "url": "https://skaffold.dev/docs/design/global-config/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I yaml configuration in skaffold?\n\nAssistant: To yaml configuration in skaffold, here's what you do:\n```yaml\nglobal:\n  local-cluster: true\nkubeContexts: []\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/design/global-config", "title": "Global Configuration", "description": "Some context specific settings can be configured in a global configuration file, which defaults to `~/.skaffold/config`. Options can be configured globally or for specific Kubernetes contexts.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:46:49", "type": "section_detail", "page_metadata": {"og:description": "Some context specific settings can be configured in a global configuration file, which defaults to ~/.skaffold/config. Options can be configured globally or for specific Kubernetes contexts. Context name matching supports regex, e.g.: .*-cluster.*-regex.*-test.*\nThe options are:\n   Option Type Description     default-repo string The image registry where built artifact images are published (see image name rewriting).   multi-level-repo boolean If true, do not replace ‘.", "generator": "Hugo 0.99.1", "article:section": "docs", "twitter:title": "Global Configuration", "modifiedTime": "2025-01-23T10:14:58-05:00", "article:modified_time": "2025-01-23T10:14:58-05:00", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:url": "https://skaffold.dev/docs/design/global-config/", "twitter:card": "summary", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "description": "Some context specific settings can be configured in a global configuration file, which defaults to ~/.skaffold/config. Options can be configured …", "robots": "index, follow", "ogDescription": "Some context specific settings can be configured in a global configuration file, which defaults to ~/.skaffold/config. Options can be configured globally or for specific Kubernetes contexts. Context name matching supports regex, e.g.: .*-cluster.*-regex.*-test.*\nThe options are:\n   Option Type Description     default-repo string The image registry where built artifact images are published (see image name rewriting).   multi-level-repo boolean If true, do not replace ‘.", "ogUrl": "https://skaffold.dev/docs/design/global-config/", "language": "en", "og:title": "Global Configuration", "og:type": "article", "og:site_name": "Skaffold", "ogTitle": "Global Configuration", "title": "Global Configuration | Skaffold", "twitter:description": "Some context specific settings can be configured in a global configuration file, which defaults to ~/.skaffold/config. Options can be configured globally or for specific Kubernetes contexts. Context name matching supports regex, e.g.: .*-cluster.*-regex.*-test.*\nThe options are:\n   Option Type Description     default-repo string The image registry where built artifact images are published (see image name rewriting).   multi-level-repo boolean If true, do not replace ‘.", "ogSiteName": "Skaffold", "scrapeId": "edd6c675-17e4-4357-83e1-5acabca64cae", "sourceURL": "https://skaffold.dev/docs/design/global-config", "url": "https://skaffold.dev/docs/design/global-config/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you give me some code examples for Global Configuration in skaffold?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Set Local Cluster**:\n\n```yaml\nskaffold config set --global local-cluster true\n```\n\nThis snippet shows you how to set local cluster, which is an important aspect of global configuration.\n\n**YAML Configuration Example**:\n\n```yaml\nglobal:\n  local-cluster: true\nkubeContexts: []\n```\n\nThis snippet shows you how to yaml configuration example, which is an important aspect of global configuration.\n\n", "metadata": {"source_url": "https://skaffold.dev/docs/design/global-config", "title": "Global Configuration", "description": "Some context specific settings can be configured in a global configuration file, which defaults to `~/.skaffold/config`. Options can be configured globally or for specific Kubernetes contexts.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:46:49", "type": "code_examples", "page_metadata": {"og:description": "Some context specific settings can be configured in a global configuration file, which defaults to ~/.skaffold/config. Options can be configured globally or for specific Kubernetes contexts. Context name matching supports regex, e.g.: .*-cluster.*-regex.*-test.*\nThe options are:\n   Option Type Description     default-repo string The image registry where built artifact images are published (see image name rewriting).   multi-level-repo boolean If true, do not replace ‘.", "generator": "Hugo 0.99.1", "article:section": "docs", "twitter:title": "Global Configuration", "modifiedTime": "2025-01-23T10:14:58-05:00", "article:modified_time": "2025-01-23T10:14:58-05:00", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:url": "https://skaffold.dev/docs/design/global-config/", "twitter:card": "summary", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "description": "Some context specific settings can be configured in a global configuration file, which defaults to ~/.skaffold/config. Options can be configured …", "robots": "index, follow", "ogDescription": "Some context specific settings can be configured in a global configuration file, which defaults to ~/.skaffold/config. Options can be configured globally or for specific Kubernetes contexts. Context name matching supports regex, e.g.: .*-cluster.*-regex.*-test.*\nThe options are:\n   Option Type Description     default-repo string The image registry where built artifact images are published (see image name rewriting).   multi-level-repo boolean If true, do not replace ‘.", "ogUrl": "https://skaffold.dev/docs/design/global-config/", "language": "en", "og:title": "Global Configuration", "og:type": "article", "og:site_name": "Skaffold", "ogTitle": "Global Configuration", "title": "Global Configuration | Skaffold", "twitter:description": "Some context specific settings can be configured in a global configuration file, which defaults to ~/.skaffold/config. Options can be configured globally or for specific Kubernetes contexts. Context name matching supports regex, e.g.: .*-cluster.*-regex.*-test.*\nThe options are:\n   Option Type Description     default-repo string The image registry where built artifact images are published (see image name rewriting).   multi-level-repo boolean If true, do not replace ‘.", "ogSiteName": "Skaffold", "scrapeId": "edd6c675-17e4-4357-83e1-5acabca64cae", "sourceURL": "https://skaffold.dev/docs/design/global-config", "url": "https://skaffold.dev/docs/design/global-config/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: What are some tips for using Global Configuration in skaffold effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nContext name matching supports regex, e.g.: `.*-cluster.*-regex.*-test.*`\n\nEnsure to check for a more recent version of Skaffold using the `update-check` option.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://skaffold.dev/docs/design/global-config", "title": "Global Configuration", "description": "Some context specific settings can be configured in a global configuration file, which defaults to `~/.skaffold/config`. Options can be configured globally or for specific Kubernetes contexts.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:46:49", "type": "best_practices", "page_metadata": {"og:description": "Some context specific settings can be configured in a global configuration file, which defaults to ~/.skaffold/config. Options can be configured globally or for specific Kubernetes contexts. Context name matching supports regex, e.g.: .*-cluster.*-regex.*-test.*\nThe options are:\n   Option Type Description     default-repo string The image registry where built artifact images are published (see image name rewriting).   multi-level-repo boolean If true, do not replace ‘.", "generator": "Hugo 0.99.1", "article:section": "docs", "twitter:title": "Global Configuration", "modifiedTime": "2025-01-23T10:14:58-05:00", "article:modified_time": "2025-01-23T10:14:58-05:00", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:url": "https://skaffold.dev/docs/design/global-config/", "twitter:card": "summary", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "description": "Some context specific settings can be configured in a global configuration file, which defaults to ~/.skaffold/config. Options can be configured …", "robots": "index, follow", "ogDescription": "Some context specific settings can be configured in a global configuration file, which defaults to ~/.skaffold/config. Options can be configured globally or for specific Kubernetes contexts. Context name matching supports regex, e.g.: .*-cluster.*-regex.*-test.*\nThe options are:\n   Option Type Description     default-repo string The image registry where built artifact images are published (see image name rewriting).   multi-level-repo boolean If true, do not replace ‘.", "ogUrl": "https://skaffold.dev/docs/design/global-config/", "language": "en", "og:title": "Global Configuration", "og:type": "article", "og:site_name": "Skaffold", "ogTitle": "Global Configuration", "title": "Global Configuration | Skaffold", "twitter:description": "Some context specific settings can be configured in a global configuration file, which defaults to ~/.skaffold/config. Options can be configured globally or for specific Kubernetes contexts. Context name matching supports regex, e.g.: .*-cluster.*-regex.*-test.*\nThe options are:\n   Option Type Description     default-repo string The image registry where built artifact images are published (see image name rewriting).   multi-level-repo boolean If true, do not replace ‘.", "ogSiteName": "Skaffold", "scrapeId": "edd6c675-17e4-4357-83e1-5acabca64cae", "sourceURL": "https://skaffold.dev/docs/design/global-config", "url": "https://skaffold.dev/docs/design/global-config/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what Load environment variables from a file is in skaffold?\n\nAssistant: Sure, I'd be happy to explain Load environment variables from a file in skaffold.\n\n# Load environment variables from a file\n\nIn Skaffold, a `skaffold.env` file can be defined in the project root directory to specify environment variables that Skaffold will load into the process. This provides a more organized and manageable way of setting environment variables, rather than passing them as command line arguments.Here's a quick rundown of what this is about:\n\n## skaffold.env File Format\n\nThe `skaffold.env` file should be in the format of `KEY=value` pairs, with one pair per line. Skaffold will automatically load these variables into the environment before running any commands.\n\n## Example skaaffold.env File\n\nHere is an example `skaffold.env` file:\n\n```txt\nENV_VAR_1=value1\nENV_VAR_2=value2\n```\n\n#### Note\n\nValues set in a `skaffold.env` file will not overwrite existing environment variables in the process.\n\n## Setting Skaffold Flags with Environment Variables\n\nIn addition to loading environment variables from the `skaffold.env` file, Skaffold also allows users to set flags using environment variables. To set a flag using an environment variable, use the `SKAFFOLD_` prefix and convert the flag name to uppercase.\n\n## Example Usage in skaaffold.env File\n\nFor example, to set the `--cache-artifacts` flag to `true`, the equivalent environment variable would be `SKAFFOLD_CACHE_ARTIFACTS=true`.\n\nHere is an example usage in the `skaffold.env` file:\n\n```txt\nSKAFFOLD_CACHE_ARTIFACTS=true\nSKAFFOLD_NAMESPACE=mynamespace\n```\n\n#### Note\n\nIf a flag is set both in the `skaffold.env` file and as a command line argument, the value specified in the command line argument will take precedence.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/environment/env-file", "title": "Load environment variables from a file", "description": "In Skaffold, a `skaffold.env` file can be defined in the project root directory to specify environment variables that Skaffold will load into the process. This provides a more organized and manageable way of setting environment variables, rather than passing them as command line arguments.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:47:02", "type": "overview", "page_metadata": {"og:type": "article", "modifiedTime": "2025-01-23T10:14:58-05:00", "twitter:title": "Load environment variables from a file", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "article:modified_time": "2025-01-23T10:14:58-05:00", "ogDescription": "In Skaffold, a skaffold.env file can be defined in the project root directory to specify environment variables that Skaffold will load into the process. This provides a more organized and manageable way of setting environment variables, rather than passing them as command line arguments.\nThe skaffold.env file should be in the format of KEY=value pairs, with one pair per line. Skaffold will automatically load these variables into the environment before running any commands.", "twitter:card": "summary", "ogSiteName": "Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "generator": "Hugo 0.99.1", "og:description": "In Skaffold, a skaffold.env file can be defined in the project root directory to specify environment variables that Skaffold will load into the process. This provides a more organized and manageable way of setting environment variables, rather than passing them as command line arguments.\nThe skaffold.env file should be in the format of KEY=value pairs, with one pair per line. Skaffold will automatically load these variables into the environment before running any commands.", "og:title": "Load environment variables from a file", "description": "In Skaffold, a skaffold.env file can be defined in the project root directory to specify environment variables that Skaffold will load into the …", "article:section": "docs", "language": "en", "title": "Load environment variables from a file | Skaffold", "ogTitle": "Load environment variables from a file", "ogUrl": "https://skaffold.dev/docs/environment/env-file/", "og:url": "https://skaffold.dev/docs/environment/env-file/", "og:site_name": "Skaffold", "twitter:description": "In Skaffold, a skaffold.env file can be defined in the project root directory to specify environment variables that Skaffold will load into the process. This provides a more organized and manageable way of setting environment variables, rather than passing them as command line arguments.\nThe skaffold.env file should be in the format of KEY=value pairs, with one pair per line. Skaffold will automatically load these variables into the environment before running any commands.", "robots": "index, follow", "scrapeId": "eb4e3f01-37ec-40e6-947f-aed350f61646", "sourceURL": "https://skaffold.dev/docs/environment/env-file", "url": "https://skaffold.dev/docs/environment/env-file/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I skaffold.env file format in skaffold?\n\nAssistant: To skaffold.env file format in skaffold, here's what you do:\nThe `skaffold.env` file should be in the format of `KEY=value` pairs, with one pair per line. Skaffold will automatically load these variables into the environment before running any commands..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/environment/env-file", "title": "Load environment variables from a file", "description": "In Skaffold, a `skaffold.env` file can be defined in the project root directory to specify environment variables that Skaffold will load into the process. This provides a more organized and manageable way of setting environment variables, rather than passing them as command line arguments.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:47:02", "type": "section_detail", "page_metadata": {"og:type": "article", "modifiedTime": "2025-01-23T10:14:58-05:00", "twitter:title": "Load environment variables from a file", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "article:modified_time": "2025-01-23T10:14:58-05:00", "ogDescription": "In Skaffold, a skaffold.env file can be defined in the project root directory to specify environment variables that Skaffold will load into the process. This provides a more organized and manageable way of setting environment variables, rather than passing them as command line arguments.\nThe skaffold.env file should be in the format of KEY=value pairs, with one pair per line. Skaffold will automatically load these variables into the environment before running any commands.", "twitter:card": "summary", "ogSiteName": "Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "generator": "Hugo 0.99.1", "og:description": "In Skaffold, a skaffold.env file can be defined in the project root directory to specify environment variables that Skaffold will load into the process. This provides a more organized and manageable way of setting environment variables, rather than passing them as command line arguments.\nThe skaffold.env file should be in the format of KEY=value pairs, with one pair per line. Skaffold will automatically load these variables into the environment before running any commands.", "og:title": "Load environment variables from a file", "description": "In Skaffold, a skaffold.env file can be defined in the project root directory to specify environment variables that Skaffold will load into the …", "article:section": "docs", "language": "en", "title": "Load environment variables from a file | Skaffold", "ogTitle": "Load environment variables from a file", "ogUrl": "https://skaffold.dev/docs/environment/env-file/", "og:url": "https://skaffold.dev/docs/environment/env-file/", "og:site_name": "Skaffold", "twitter:description": "In Skaffold, a skaffold.env file can be defined in the project root directory to specify environment variables that Skaffold will load into the process. This provides a more organized and manageable way of setting environment variables, rather than passing them as command line arguments.\nThe skaffold.env file should be in the format of KEY=value pairs, with one pair per line. Skaffold will automatically load these variables into the environment before running any commands.", "robots": "index, follow", "scrapeId": "eb4e3f01-37ec-40e6-947f-aed350f61646", "sourceURL": "https://skaffold.dev/docs/environment/env-file", "url": "https://skaffold.dev/docs/environment/env-file/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I example skaaffold.env file in skaffold?\n\nAssistant: To example skaaffold.env file in skaffold, here's what you do:\nHere is an example `skaffold.env` file:\n\n```txt\nENV_VAR_1=value1\nENV_VAR_2=value2\n```\n\n#### Note\n\nValues set in a `skaffold.env` file will not overwrite existing environment variables in the process..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/environment/env-file", "title": "Load environment variables from a file", "description": "In Skaffold, a `skaffold.env` file can be defined in the project root directory to specify environment variables that Skaffold will load into the process. This provides a more organized and manageable way of setting environment variables, rather than passing them as command line arguments.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:47:02", "type": "section_detail", "page_metadata": {"og:type": "article", "modifiedTime": "2025-01-23T10:14:58-05:00", "twitter:title": "Load environment variables from a file", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "article:modified_time": "2025-01-23T10:14:58-05:00", "ogDescription": "In Skaffold, a skaffold.env file can be defined in the project root directory to specify environment variables that Skaffold will load into the process. This provides a more organized and manageable way of setting environment variables, rather than passing them as command line arguments.\nThe skaffold.env file should be in the format of KEY=value pairs, with one pair per line. Skaffold will automatically load these variables into the environment before running any commands.", "twitter:card": "summary", "ogSiteName": "Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "generator": "Hugo 0.99.1", "og:description": "In Skaffold, a skaffold.env file can be defined in the project root directory to specify environment variables that Skaffold will load into the process. This provides a more organized and manageable way of setting environment variables, rather than passing them as command line arguments.\nThe skaffold.env file should be in the format of KEY=value pairs, with one pair per line. Skaffold will automatically load these variables into the environment before running any commands.", "og:title": "Load environment variables from a file", "description": "In Skaffold, a skaffold.env file can be defined in the project root directory to specify environment variables that Skaffold will load into the …", "article:section": "docs", "language": "en", "title": "Load environment variables from a file | Skaffold", "ogTitle": "Load environment variables from a file", "ogUrl": "https://skaffold.dev/docs/environment/env-file/", "og:url": "https://skaffold.dev/docs/environment/env-file/", "og:site_name": "Skaffold", "twitter:description": "In Skaffold, a skaffold.env file can be defined in the project root directory to specify environment variables that Skaffold will load into the process. This provides a more organized and manageable way of setting environment variables, rather than passing them as command line arguments.\nThe skaffold.env file should be in the format of KEY=value pairs, with one pair per line. Skaffold will automatically load these variables into the environment before running any commands.", "robots": "index, follow", "scrapeId": "eb4e3f01-37ec-40e6-947f-aed350f61646", "sourceURL": "https://skaffold.dev/docs/environment/env-file", "url": "https://skaffold.dev/docs/environment/env-file/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I setting skaffold flags with environment variables in skaffold?\n\nAssistant: To setting skaffold flags with environment variables in skaffold, here's what you do:\nIn addition to loading environment variables from the `skaffold.env` file, Skaffold also allows users to set flags using environment variables. To set a flag using an environment variable, use the `SKAFFOLD_` prefix and convert the flag name to uppercase..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/environment/env-file", "title": "Load environment variables from a file", "description": "In Skaffold, a `skaffold.env` file can be defined in the project root directory to specify environment variables that Skaffold will load into the process. This provides a more organized and manageable way of setting environment variables, rather than passing them as command line arguments.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:47:02", "type": "section_detail", "page_metadata": {"og:type": "article", "modifiedTime": "2025-01-23T10:14:58-05:00", "twitter:title": "Load environment variables from a file", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "article:modified_time": "2025-01-23T10:14:58-05:00", "ogDescription": "In Skaffold, a skaffold.env file can be defined in the project root directory to specify environment variables that Skaffold will load into the process. This provides a more organized and manageable way of setting environment variables, rather than passing them as command line arguments.\nThe skaffold.env file should be in the format of KEY=value pairs, with one pair per line. Skaffold will automatically load these variables into the environment before running any commands.", "twitter:card": "summary", "ogSiteName": "Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "generator": "Hugo 0.99.1", "og:description": "In Skaffold, a skaffold.env file can be defined in the project root directory to specify environment variables that Skaffold will load into the process. This provides a more organized and manageable way of setting environment variables, rather than passing them as command line arguments.\nThe skaffold.env file should be in the format of KEY=value pairs, with one pair per line. Skaffold will automatically load these variables into the environment before running any commands.", "og:title": "Load environment variables from a file", "description": "In Skaffold, a skaffold.env file can be defined in the project root directory to specify environment variables that Skaffold will load into the …", "article:section": "docs", "language": "en", "title": "Load environment variables from a file | Skaffold", "ogTitle": "Load environment variables from a file", "ogUrl": "https://skaffold.dev/docs/environment/env-file/", "og:url": "https://skaffold.dev/docs/environment/env-file/", "og:site_name": "Skaffold", "twitter:description": "In Skaffold, a skaffold.env file can be defined in the project root directory to specify environment variables that Skaffold will load into the process. This provides a more organized and manageable way of setting environment variables, rather than passing them as command line arguments.\nThe skaffold.env file should be in the format of KEY=value pairs, with one pair per line. Skaffold will automatically load these variables into the environment before running any commands.", "robots": "index, follow", "scrapeId": "eb4e3f01-37ec-40e6-947f-aed350f61646", "sourceURL": "https://skaffold.dev/docs/environment/env-file", "url": "https://skaffold.dev/docs/environment/env-file/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I example usage in skaaffold.env file in skaffold?\n\nAssistant: To example usage in skaaffold.env file in skaffold, here's what you do:\nFor example, to set the `--cache-artifacts` flag to `true`, the equivalent environment variable would be `SKAFFOLD_CACHE_ARTIFACTS=true`.\n\nHere is an example usage in the `skaffold.env` file:\n\n```txt\nSKAFFOLD_CACHE_ARTIFACTS=true\nSKAFFOLD_NAMESPACE=mynamespace\n```\n\n#### Note\n\nIf a flag is set both in the `skaffold.env` file and as a command line argument, the value specified in the command line argument will take precedence..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/environment/env-file", "title": "Load environment variables from a file", "description": "In Skaffold, a `skaffold.env` file can be defined in the project root directory to specify environment variables that Skaffold will load into the process. This provides a more organized and manageable way of setting environment variables, rather than passing them as command line arguments.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:47:02", "type": "section_detail", "page_metadata": {"og:type": "article", "modifiedTime": "2025-01-23T10:14:58-05:00", "twitter:title": "Load environment variables from a file", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "article:modified_time": "2025-01-23T10:14:58-05:00", "ogDescription": "In Skaffold, a skaffold.env file can be defined in the project root directory to specify environment variables that Skaffold will load into the process. This provides a more organized and manageable way of setting environment variables, rather than passing them as command line arguments.\nThe skaffold.env file should be in the format of KEY=value pairs, with one pair per line. Skaffold will automatically load these variables into the environment before running any commands.", "twitter:card": "summary", "ogSiteName": "Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "generator": "Hugo 0.99.1", "og:description": "In Skaffold, a skaffold.env file can be defined in the project root directory to specify environment variables that Skaffold will load into the process. This provides a more organized and manageable way of setting environment variables, rather than passing them as command line arguments.\nThe skaffold.env file should be in the format of KEY=value pairs, with one pair per line. Skaffold will automatically load these variables into the environment before running any commands.", "og:title": "Load environment variables from a file", "description": "In Skaffold, a skaffold.env file can be defined in the project root directory to specify environment variables that Skaffold will load into the …", "article:section": "docs", "language": "en", "title": "Load environment variables from a file | Skaffold", "ogTitle": "Load environment variables from a file", "ogUrl": "https://skaffold.dev/docs/environment/env-file/", "og:url": "https://skaffold.dev/docs/environment/env-file/", "og:site_name": "Skaffold", "twitter:description": "In Skaffold, a skaffold.env file can be defined in the project root directory to specify environment variables that Skaffold will load into the process. This provides a more organized and manageable way of setting environment variables, rather than passing them as command line arguments.\nThe skaffold.env file should be in the format of KEY=value pairs, with one pair per line. Skaffold will automatically load these variables into the environment before running any commands.", "robots": "index, follow", "scrapeId": "eb4e3f01-37ec-40e6-947f-aed350f61646", "sourceURL": "https://skaffold.dev/docs/environment/env-file", "url": "https://skaffold.dev/docs/environment/env-file/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you give me some code examples for Load environment variables from a file in skaffold?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Example skaaffold.env File**:\n\n```yaml\nENV_VAR_1=value1\nENV_VAR_2=value2\n```\n\nThis snippet shows you how to example skaaffold.env file, which is an important aspect of load environment variables from a file.\n\n**Example Usage in skaaffold.env File**:\n\n```yaml\nSKAFFOLD_CACHE_ARTIFACTS=true\nSKAFFOLD_NAMESPACE=mynamespace\n```\n\nThis snippet shows you how to example usage in skaaffold.env file, which is an important aspect of load environment variables from a file.\n\n", "metadata": {"source_url": "https://skaffold.dev/docs/environment/env-file", "title": "Load environment variables from a file", "description": "In Skaffold, a `skaffold.env` file can be defined in the project root directory to specify environment variables that Skaffold will load into the process. This provides a more organized and manageable way of setting environment variables, rather than passing them as command line arguments.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:47:02", "type": "code_examples", "page_metadata": {"og:type": "article", "modifiedTime": "2025-01-23T10:14:58-05:00", "twitter:title": "Load environment variables from a file", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "article:modified_time": "2025-01-23T10:14:58-05:00", "ogDescription": "In Skaffold, a skaffold.env file can be defined in the project root directory to specify environment variables that Skaffold will load into the process. This provides a more organized and manageable way of setting environment variables, rather than passing them as command line arguments.\nThe skaffold.env file should be in the format of KEY=value pairs, with one pair per line. Skaffold will automatically load these variables into the environment before running any commands.", "twitter:card": "summary", "ogSiteName": "Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "generator": "Hugo 0.99.1", "og:description": "In Skaffold, a skaffold.env file can be defined in the project root directory to specify environment variables that Skaffold will load into the process. This provides a more organized and manageable way of setting environment variables, rather than passing them as command line arguments.\nThe skaffold.env file should be in the format of KEY=value pairs, with one pair per line. Skaffold will automatically load these variables into the environment before running any commands.", "og:title": "Load environment variables from a file", "description": "In Skaffold, a skaffold.env file can be defined in the project root directory to specify environment variables that Skaffold will load into the …", "article:section": "docs", "language": "en", "title": "Load environment variables from a file | Skaffold", "ogTitle": "Load environment variables from a file", "ogUrl": "https://skaffold.dev/docs/environment/env-file/", "og:url": "https://skaffold.dev/docs/environment/env-file/", "og:site_name": "Skaffold", "twitter:description": "In Skaffold, a skaffold.env file can be defined in the project root directory to specify environment variables that Skaffold will load into the process. This provides a more organized and manageable way of setting environment variables, rather than passing them as command line arguments.\nThe skaffold.env file should be in the format of KEY=value pairs, with one pair per line. Skaffold will automatically load these variables into the environment before running any commands.", "robots": "index, follow", "scrapeId": "eb4e3f01-37ec-40e6-947f-aed350f61646", "sourceURL": "https://skaffold.dev/docs/environment/env-file", "url": "https://skaffold.dev/docs/environment/env-file/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: What are some tips for using Load environment variables from a file in skaffold effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nValues set in a `skaffold.env` file will not overwrite existing environment variables in the process.\n\nIf a flag is set both in the `skaffold.env` file and as a command line argument, the value specified in the command line argument will take precedence.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://skaffold.dev/docs/environment/env-file", "title": "Load environment variables from a file", "description": "In Skaffold, a `skaffold.env` file can be defined in the project root directory to specify environment variables that Skaffold will load into the process. This provides a more organized and manageable way of setting environment variables, rather than passing them as command line arguments.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:47:02", "type": "best_practices", "page_metadata": {"og:type": "article", "modifiedTime": "2025-01-23T10:14:58-05:00", "twitter:title": "Load environment variables from a file", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "article:modified_time": "2025-01-23T10:14:58-05:00", "ogDescription": "In Skaffold, a skaffold.env file can be defined in the project root directory to specify environment variables that Skaffold will load into the process. This provides a more organized and manageable way of setting environment variables, rather than passing them as command line arguments.\nThe skaffold.env file should be in the format of KEY=value pairs, with one pair per line. Skaffold will automatically load these variables into the environment before running any commands.", "twitter:card": "summary", "ogSiteName": "Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "generator": "Hugo 0.99.1", "og:description": "In Skaffold, a skaffold.env file can be defined in the project root directory to specify environment variables that Skaffold will load into the process. This provides a more organized and manageable way of setting environment variables, rather than passing them as command line arguments.\nThe skaffold.env file should be in the format of KEY=value pairs, with one pair per line. Skaffold will automatically load these variables into the environment before running any commands.", "og:title": "Load environment variables from a file", "description": "In Skaffold, a skaffold.env file can be defined in the project root directory to specify environment variables that Skaffold will load into the …", "article:section": "docs", "language": "en", "title": "Load environment variables from a file | Skaffold", "ogTitle": "Load environment variables from a file", "ogUrl": "https://skaffold.dev/docs/environment/env-file/", "og:url": "https://skaffold.dev/docs/environment/env-file/", "og:site_name": "Skaffold", "twitter:description": "In Skaffold, a skaffold.env file can be defined in the project root directory to specify environment variables that Skaffold will load into the process. This provides a more organized and manageable way of setting environment variables, rather than passing them as command line arguments.\nThe skaffold.env file should be in the format of KEY=value pairs, with one pair per line. Skaffold will automatically load these variables into the environment before running any commands.", "robots": "index, follow", "scrapeId": "eb4e3f01-37ec-40e6-947f-aed350f61646", "sourceURL": "https://skaffold.dev/docs/environment/env-file", "url": "https://skaffold.dev/docs/environment/env-file/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what Managing ARM workloads [NEW] is in skaffold?\n\nAssistant: Sure, I'd be happy to explain Managing ARM workloads [NEW] in skaffold.\n\n# Managing ARM workloads [NEW]\n\nSkaffold has a lot of intelligence built-in to simplify working with ARM workloads. Whether developing on an Apple Silicon Macbook that uses an ARM based chip, or deploying to a GKE Kubernetes cluster having ARM nodes, Skaffold can take away the complexities that arise when the architecture of your development machine and Kubernetes cluster don’t match.Here's a quick rundown of what this is about:\n\n## Why is image architecture important?\n\nContainer images are built targeting specific Instruction Set Architectures like `amd64`, `arm64`, etc. **You must use container images that are compatible with the architecture of the node where you intend to run the workloads.** For example, to deploy to a GKE cluster running ARM nodes, the image needs to be built for `linux/arm64` platform.\n\nAll image builders build for different default architecture and not all support cross-architecture builds. For instance [Docker](https://skaffold.dev/docs/builders/builder-types/docker/) will build the image for the same architecture as the host machine, whereas [Buildpacks](https://skaffold.dev/docs/builders/builder-types/buildpacks/) will always build it for `amd64`.\n\nAdditionally, the following combination of development machine and cluster node architectures can make it difficult to build and deploy images correctly:\n\n- Dev machine architecture is `amd64` while the target cluster runs `arm64` nodes.\n- Dev machine architecture is `arm64` (say Apple Silicon Macbooks) while the target cluster runs `amd64` nodes.\n- The target cluster runs both `arm64` and `amd64` nodes (mixed node pools).\n\n🎉 _Skaffold provides an opionated way to handle all these cases effectively._ 🎉\n\n## Skaffold can set the image architecture automatically\n\nWhen running Skaffold in an interactive mode like `skaffold dev`, `skaffold debug` or `skaffold run` where the intention is to build an image from the application code, and immediately deploy it to a Kubernetes cluster, Skaffold will check the active Kubernetes cluster node architecture and provide that as an argument to the respective image builder. If the cluster has multiple architecture nodes, then Skaffold will also create appropriate Kubernetes [`affinity`](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity) rules so that the Kubernetes Pods with these images are assigned to matching architecture nodes.\n\n#### Note\n\nSkaffold will create platform node `affinity` rules only for clusters having multiple architecture nodes. You can also force this using the flag `--enable-platform-node-affinity=true` to always create these affinity rules in the Kubernetes manifests for built images.\n\n## Testing in a sample Golang project\n\nLet’s test this in a [sample Golang](https://github.com/GoogleContainerTools/skaffold/tree/main/examples/cross-platform-builds) project:\n\n- The `skaffold.yaml` file defines a single [Docker build artifact](https://github.com/GoogleContainerTools/skaffold/blob/main/examples/cross-platform-builds/Dockerfile) and deploys it in a [`Kubernetes Pod`](https://github.com/GoogleContainerTools/skaffold/blob/main/examples/cross-platform-builds/k8s-pod.yaml).\n\n- First set the active Kubernetes context to a cluster having only `linux/amd64` nodes, and run:\n\n```cmd\nskaffold dev --default-repo=your/container/registy\n```\n\nSkaffold will detect the cluster node platform `linux/amd64` and build the image for this platform:\n\n```cmd\nskaffold dev --default-repo=gcr.io/k8s-skaffold\nListing files to watch...\n- skaffold-example\nGenerating tags...\n- skaffold-example -> gcr.io/k8s-skaffold/skaffold-example:latest\nStarting build...\nBuilding [skaffold-example]...\nTarget platforms: [linux/amd64]\n...\nBuild [skaffold-example] succeeded\nStarting deploy...\n- pod/getting-started created\nWaiting for deployments to stabilize...\n- pods is ready.\nDeployments stabilized in 7.42 seconds\nPress Ctrl+C to exit\nWatching for changes...\n[getting-started] Hello world! Running on linux/amd64\n```\n\n- Now set the active Kubernetes context to a cluster containing only `linux/arm64` nodes. See [here](https://cloud.google.com/kubernetes-engine/docs/how-to/prepare-arm-workloads-for-deployment) to know how you can create an ARM GKE cluster.\n\nRe-running the `dev` command will now build a `linux/arm64` image.\n\n```cmd\nskaffold dev --default-repo=gcr.io/k8s-skaffold\n...\n...\n[getting-started] Hello world! Running on linux/arm64\n```\n\n- Now set the active Kubernetes context to a cluster containing both `linux/arm64` and `linux/amd64` nodes. You can create a GKE cluster with 2 node pools, one having `linux/amd64` nodes, and the other having `linux/arm64` nodes.\n\nRe-run the `dev` command but with an explicit platform target this time via the `--platform` flag. If we don’t provide the target platform explicitly then Skaffold will choose one between `linux/amd64` and `linux/arm64`, trying to match your local dev machine architecture.\n\n```cmd\nskaffold dev --default-repo=your/container/registy --platform=linux/amd64\n```\n\nSkaffold will build a `linux/amd64` image and insert a `nodeAffinity` definition to the `Pod` so that it gets scheduled on the matching architecture node.\n\n```cmd\nskaffold dev --default-repo=gcr.io/k8s-skaffold --platform=linux/amd64\n...\n...\n[getting-started] Hello world! Running on linux/amd64\n```\n\n- Validate that the `nodeAffinity` was applied by running the command (skip `| jq` if you don’t have `jq` installed):\n\n```cmd\nkubectl get pod getting-started  -o=jsonpath='{.spec.affinity}' | jq\n{\n    \"nodeAffinity\": {\n      \"requiredDuringSchedulingIgnoredDuringExecution\": {\n        \"nodeSelectorTerms\": [\\\n          {\\\n            \"matchExpressions\": [\\\n              {\\\n                \"key\": \"kubernetes.io/os\",\\\n                \"operator\": \"In\",\\\n                \"values\": [\\\n                  \"linux\"\\\n                ]\\\n              },\\\n              {\\\n                \"key\": \"kubernetes.io/arch\",\\\n                \"operator\": \"In\",\\\n                \"values\": [\\\n                  \"amd64\"\\\n                ]\\\n              }\\\n            ]\\\n          }\\\n        ]\n      }\n    }\n}\n```\n\nThis example will run the same whether you’re using an `arm64` machine (say an Apple Silicon Macbook) or an `amd64` machine.\n\nSkaffold also supports cross-architecture builds on [Google Cloud Build](https://cloud.google.com/build). You can rerun this example, with the additional flag `--profile cloudbuild` to all the `dev` commands to build on `Google Cloud Build` instead of the local Docker daemon.\n\n## What about multi-arch images?\n\nA [multi-arch image](https://www.docker.com/blog/multi-arch-build-and-images-the-simple-way/) is an image that can support multiple architectures. It looks like a single image with a single tag, but is actually a list of images targeting multiple architectures organized by an [image index](https://github.com/opencontainers/image-spec/blob/main/image-index.md). When you deploy a multi-arch image to a cluster, the container runtime automatically chooses the right image that is compatible with the architecture of the node to which it is being deployed. This simplifies targeting multiple clusters of different architecture nodes, and/or mixed-architecture nodes.\n\nSkaffold supports building multi-platform images natively using the [jib builder](https://skaffold.dev/docs/builders/builder-types/jib/), the [ko builder](https://skaffold.dev/docs/builders/builder-types/ko/) and the [custom builder](https://skaffold.dev/docs/builders/builder-types/custom/). For other builders that support building cross-architecture images, Skaffold will iteratively build a single platform image for each target architecture and stitch them together into a multi-platform image, and push it to the registry.\n\n![multi-arch-flow](https://skaffold.dev/images/multi-arch-flow.png)\n\nLet’s test this in the same [sample Golang](https://github.com/GoogleContainerTools/skaffold/tree/main/examples/cross-platform-builds) project as before:\n\n- Run this command to build for the target architectures `linux/amd64` and `linux/arm64`:\n\n```cmd\nskaffold build -t latest --default-repo=your/container/registy --platform=linux/amd64,linux/arm64\n...\nBuilding [skaffold-example]...\nTarget platforms: [linux/amd64,linux/arm64]\n...\n[+] Building 0.3s (13/13) FINISHED\n...\n=> => writing image sha256:10af3142e460566f5791c48758f0040cef6932cbcb0766082dcbb0d8db7653e7\n=> => naming to gcr.io/k8s-skaffold/skaffold-example:latest_linux_amd64\n...\nlatest_linux_amd64: digest: sha256:15bd4f2380e99b3563f8add1aba9691e414d4cc5701363d9c74960a20fb276c4 size: 739\n...\n[+] Building 52.8s (13/13) FINISHED\n...\n=> => writing image sha256:68866691e2d6f079b116e097ae4e67a53eaf89e825b52d6f31f2e9cc566974de\n=> => naming to gcr.io/k8s-skaffold/skaffold-example:latest_linux_arm64\n...\n4e0c2525c370: Pushed\nlatest_linux_arm64: digest: sha256:868d0aec1cc7d2ed1fa1e840f38ff1aa50c3cc3d3232ea17a065618eaec4e82b size: 739\nBuild [skaffold-example] succeeded\n```\n\n- Validate that the image just built was multi-arch, by running the following `docker` command:\n\n```cmd\ndocker manifest inspect your/container/registry/skaffold-example:latest | grep -A 3 \"platform\"\n```\n\nOutputs:\n\n```cmd\n    \"platform\": {\n        \"architecture\": \"amd64\",\n        \"os\": \"linux\"\n    }\n  --\n    \"platform\": {\n        \"architecture\": \"arm64\",\n        \"os\": \"linux\"\n    }\n```\n\n- Now if we render the Kubernetes Pod manifest for this multi-arch image, then it’ll have platform affinity definition targeting both `linux/amd64` and `linux/arm64` architectures.\n\n```cmd\nskaffold render --default-repo=your/container/registry --enable-platform-node-affinity\n```\n\nOutputs:\n\n```cmd\napiVersion: v1\nkind: Pod\nmetadata:\n    name: getting-started\n    namespace: default\nspec:\n    affinity:\n      nodeAffinity:\n        requiredDuringSchedulingIgnoredDuringExecution:\n          nodeSelectorTerms:\n        - matchExpressions:\n          - key: kubernetes.io/os\n            operator: In\n            values:\n            - linux\n          - key: kubernetes.io/arch\n            operator: In\n            values:\n            - amd64\n        - matchExpressions:\n          - key: kubernetes.io/os\n            operator: In\n            values:\n            - linux\n          - key: kubernetes.io/arch\n            operator: In\n            values:\n            - arm64\ncontainers:\n  - image: gcr.io/k8s-skaffold/skaffold-example:latest@sha256:9ecf4e52f7ff64b35deacf9d6eedc03f35d69e0b4bf3679b97ba492f4389f784\n    name: getting-started\n```\n\n#### Note\n\n- Multi-arch images need to be pushed to a container registry, as the local Docker deamon doesn’t yet support storing multi-arch images.\n- For interactive modes like `skaffold dev` and `skaffold debug` requiring fast and repeated `build-render-deploy` iterations, Skaffold will choose only one build architecture and build a single-platform image, even if you specify multiple target platforms.\n- If you need to build a multi-arch image with an interactive mode then use `skaffold run`. This will build the multi-arch image and deploy it to the active Kubernetes cluster.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/workflows/handling-platforms", "title": "Managing ARM workloads [NEW]", "description": "Skaffold has a lot of intelligence built-in to simplify working with ARM workloads. Whether developing on an Apple Silicon Macbook that uses an ARM based chip, or deploying to a GKE Kubernetes cluster having ARM nodes, Skaffold can take away the complexities that arise when the architecture of your development machine and Kubernetes cluster don’t match.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:49:02", "type": "overview", "page_metadata": {"favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "description": "Skaffold has a lot of intelligence built-in to simplify working with ARM workloads. Whether developing on an Apple Silicon Macbook that uses an ARM …", "ogUrl": "https://skaffold.dev/docs/workflows/handling-platforms/", "ogSiteName": "Skaffold", "title": "Managing ARM workloads [NEW] | Skaffold", "ogTitle": "Managing ARM workloads [NEW]", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "article:section": "docs", "twitter:card": "summary", "modifiedTime": "2025-01-23T10:14:58-05:00", "twitter:title": "Managing ARM workloads [NEW]", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:description": "Skaffold has a lot of intelligence built-in to simplify working with ARM workloads. Whether developing on an Apple Silicon Macbook that uses an ARM based chip, or deploying to a GKE Kubernetes cluster having ARM nodes, Skaffold can take away the complexities that arise when the architecture of your development machine and Kubernetes cluster don’t match.\nWhy is image architecture important? Container images are built targeting specific Instruction Set Architectures like amd64, arm64, etc.", "twitter:description": "Skaffold has a lot of intelligence built-in to simplify working with ARM workloads. Whether developing on an Apple Silicon Macbook that uses an ARM based chip, or deploying to a GKE Kubernetes cluster having ARM nodes, Skaffold can take away the complexities that arise when the architecture of your development machine and Kubernetes cluster don’t match.\nWhy is image architecture important? Container images are built targeting specific Instruction Set Architectures like amd64, arm64, etc.", "robots": "index, follow", "og:type": "article", "og:url": "https://skaffold.dev/docs/workflows/handling-platforms/", "language": "en", "ogDescription": "Skaffold has a lot of intelligence built-in to simplify working with ARM workloads. Whether developing on an Apple Silicon Macbook that uses an ARM based chip, or deploying to a GKE Kubernetes cluster having ARM nodes, Skaffold can take away the complexities that arise when the architecture of your development machine and Kubernetes cluster don’t match.\nWhy is image architecture important? Container images are built targeting specific Instruction Set Architectures like amd64, arm64, etc.", "generator": "Hugo 0.99.1", "og:title": "Managing ARM workloads [NEW]", "og:site_name": "Skaffold", "scrapeId": "0dbede63-b498-49f3-b03a-014e59f316e8", "sourceURL": "https://skaffold.dev/docs/workflows/handling-platforms", "url": "https://skaffold.dev/docs/workflows/handling-platforms/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I why is image architecture important? in skaffold?\n\nAssistant: To why is image architecture important? in skaffold, here's what you do:\nContainer images are built targeting specific Instruction Set Architectures like `amd64`, `arm64`, etc. **You must use container images that are compatible with the architecture of the node where you intend to run the workloads.** For example, to deploy to a GKE cluster running ARM nodes, the image needs to be built for `linux/arm64` platform.\n\nAll image builders build for different default architecture and not all support cross-architecture builds. For instance [Docker](https://skaffold.dev/docs/builders/builder-types/docker/) will build the image for the same architecture as the host machine, whereas [Buildpacks](https://skaffold.dev/docs/builders/builder-types/buildpacks/) will always build it for `amd64`.\n\nAdditionally, the following combination of development machine and cluster node architectures can make it difficult to build and deploy images correctly:\n\n- Dev machine architecture is `amd64` while the target cluster runs `arm64` nodes.\n- Dev machine architecture is `arm64` (say Apple Silicon Macbooks) while the target cluster runs `amd64` nodes.\n- The target cluster runs both `arm64` and `amd64` nodes (mixed node pools).\n\n🎉 _Skaffold provides an opionated way to handle all these cases effectively._ 🎉.\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/workflows/handling-platforms", "title": "Managing ARM workloads [NEW]", "description": "Skaffold has a lot of intelligence built-in to simplify working with ARM workloads. Whether developing on an Apple Silicon Macbook that uses an ARM based chip, or deploying to a GKE Kubernetes cluster having ARM nodes, Skaffold can take away the complexities that arise when the architecture of your development machine and Kubernetes cluster don’t match.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:49:02", "type": "section_detail", "page_metadata": {"favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "description": "Skaffold has a lot of intelligence built-in to simplify working with ARM workloads. Whether developing on an Apple Silicon Macbook that uses an ARM …", "ogUrl": "https://skaffold.dev/docs/workflows/handling-platforms/", "ogSiteName": "Skaffold", "title": "Managing ARM workloads [NEW] | Skaffold", "ogTitle": "Managing ARM workloads [NEW]", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "article:section": "docs", "twitter:card": "summary", "modifiedTime": "2025-01-23T10:14:58-05:00", "twitter:title": "Managing ARM workloads [NEW]", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:description": "Skaffold has a lot of intelligence built-in to simplify working with ARM workloads. Whether developing on an Apple Silicon Macbook that uses an ARM based chip, or deploying to a GKE Kubernetes cluster having ARM nodes, Skaffold can take away the complexities that arise when the architecture of your development machine and Kubernetes cluster don’t match.\nWhy is image architecture important? Container images are built targeting specific Instruction Set Architectures like amd64, arm64, etc.", "twitter:description": "Skaffold has a lot of intelligence built-in to simplify working with ARM workloads. Whether developing on an Apple Silicon Macbook that uses an ARM based chip, or deploying to a GKE Kubernetes cluster having ARM nodes, Skaffold can take away the complexities that arise when the architecture of your development machine and Kubernetes cluster don’t match.\nWhy is image architecture important? Container images are built targeting specific Instruction Set Architectures like amd64, arm64, etc.", "robots": "index, follow", "og:type": "article", "og:url": "https://skaffold.dev/docs/workflows/handling-platforms/", "language": "en", "ogDescription": "Skaffold has a lot of intelligence built-in to simplify working with ARM workloads. Whether developing on an Apple Silicon Macbook that uses an ARM based chip, or deploying to a GKE Kubernetes cluster having ARM nodes, Skaffold can take away the complexities that arise when the architecture of your development machine and Kubernetes cluster don’t match.\nWhy is image architecture important? Container images are built targeting specific Instruction Set Architectures like amd64, arm64, etc.", "generator": "Hugo 0.99.1", "og:title": "Managing ARM workloads [NEW]", "og:site_name": "Skaffold", "scrapeId": "0dbede63-b498-49f3-b03a-014e59f316e8", "sourceURL": "https://skaffold.dev/docs/workflows/handling-platforms", "url": "https://skaffold.dev/docs/workflows/handling-platforms/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I skaffold can set the image architecture automatically in skaffold?\n\nAssistant: To skaffold can set the image architecture automatically in skaffold, here's what you do:\nWhen running Skaffold in an interactive mode like `skaffold dev`, `skaffold debug` or `skaffold run` where the intention is to build an image from the application code, and immediately deploy it to a Kubernetes cluster, Skaffold will check the active Kubernetes cluster node architecture and provide that as an argument to the respective image builder. If the cluster has multiple architecture nodes, then Skaffold will also create appropriate Kubernetes [`affinity`](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity) rules so that the Kubernetes Pods with these images are assigned to matching architecture nodes.\n\n#### Note\n\nSkaffold will create platform node `affinity` rules only for clusters having multiple architecture nodes. You can also force this using the flag `--enable-platform-node-affinity=true` to always create these affinity rules in the Kubernetes manifests for built images..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/workflows/handling-platforms", "title": "Managing ARM workloads [NEW]", "description": "Skaffold has a lot of intelligence built-in to simplify working with ARM workloads. Whether developing on an Apple Silicon Macbook that uses an ARM based chip, or deploying to a GKE Kubernetes cluster having ARM nodes, Skaffold can take away the complexities that arise when the architecture of your development machine and Kubernetes cluster don’t match.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:49:02", "type": "section_detail", "page_metadata": {"favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "description": "Skaffold has a lot of intelligence built-in to simplify working with ARM workloads. Whether developing on an Apple Silicon Macbook that uses an ARM …", "ogUrl": "https://skaffold.dev/docs/workflows/handling-platforms/", "ogSiteName": "Skaffold", "title": "Managing ARM workloads [NEW] | Skaffold", "ogTitle": "Managing ARM workloads [NEW]", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "article:section": "docs", "twitter:card": "summary", "modifiedTime": "2025-01-23T10:14:58-05:00", "twitter:title": "Managing ARM workloads [NEW]", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:description": "Skaffold has a lot of intelligence built-in to simplify working with ARM workloads. Whether developing on an Apple Silicon Macbook that uses an ARM based chip, or deploying to a GKE Kubernetes cluster having ARM nodes, Skaffold can take away the complexities that arise when the architecture of your development machine and Kubernetes cluster don’t match.\nWhy is image architecture important? Container images are built targeting specific Instruction Set Architectures like amd64, arm64, etc.", "twitter:description": "Skaffold has a lot of intelligence built-in to simplify working with ARM workloads. Whether developing on an Apple Silicon Macbook that uses an ARM based chip, or deploying to a GKE Kubernetes cluster having ARM nodes, Skaffold can take away the complexities that arise when the architecture of your development machine and Kubernetes cluster don’t match.\nWhy is image architecture important? Container images are built targeting specific Instruction Set Architectures like amd64, arm64, etc.", "robots": "index, follow", "og:type": "article", "og:url": "https://skaffold.dev/docs/workflows/handling-platforms/", "language": "en", "ogDescription": "Skaffold has a lot of intelligence built-in to simplify working with ARM workloads. Whether developing on an Apple Silicon Macbook that uses an ARM based chip, or deploying to a GKE Kubernetes cluster having ARM nodes, Skaffold can take away the complexities that arise when the architecture of your development machine and Kubernetes cluster don’t match.\nWhy is image architecture important? Container images are built targeting specific Instruction Set Architectures like amd64, arm64, etc.", "generator": "Hugo 0.99.1", "og:title": "Managing ARM workloads [NEW]", "og:site_name": "Skaffold", "scrapeId": "0dbede63-b498-49f3-b03a-014e59f316e8", "sourceURL": "https://skaffold.dev/docs/workflows/handling-platforms", "url": "https://skaffold.dev/docs/workflows/handling-platforms/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I testing in a sample golang project in skaffold?\n\nAssistant: To testing in a sample golang project in skaffold, here's what you do:\nLet’s test this in a [sample Golang](https://github.com/GoogleContainerTools/skaffold/tree/main/examples/cross-platform-builds) project:\n\n- The `skaffold.yaml` file defines a single [Docker build artifact](https://github.com/GoogleContainerTools/skaffold/blob/main/examples/cross-platform-builds/Dockerfile) and deploys it in a [`Kubernetes Pod`](https://github.com/GoogleContainerTools/skaffold/blob/main/examples/cross-platform-builds/k8s-pod.yaml).\n\n- First set the active Kubernetes context to a cluster having only `linux/amd64` nodes, and run:\n\n```cmd\nskaffold dev --default-repo=your/container/registy\n```\n\nSkaffold will detect the cluster node platform `linux/amd64` and build the image for this platform:\n\n```cmd\nskaffold dev --default-repo=gcr.io/k8s-skaffold\nListing files to watch...\n- skaffold-example\nGenerating tags...\n- skaffold-example -> gcr.io/k8s-skaffold/skaffold-example:latest\nStarting build...\nBuilding [skaffold-example]...\nTarget platforms: [linux/amd64]\n...\nBuild [skaffold-example] succeeded\nStarting deploy...\n- pod/getting-started created\nWaiting for deployments to stabilize...\n- pods is ready.\nDeployments stabilized in 7.42 seconds\nPress Ctrl+C to exit\nWatching for changes...\n[getting-started] Hello world! Running on linux/amd64\n```\n\n- Now set the active Kubernetes context to a cluster containing only `linux/arm64` nodes. See [here](https://cloud.google.com/kubernetes-engine/docs/how-to/prepare-arm-workloads-for-deployment) to know how you can create an ARM GKE cluster.\n\nRe-running the `dev` command will now build a `linux/arm64` image.\n\n```cmd\nskaffold dev --default-repo=gcr.io/k8s-skaffold\n...\n...\n[getting-started] Hello world! Running on linux/arm64\n```\n\n- Now set the active Kubernetes context to a cluster containing both `linux/arm64` and `linux/amd64` nodes. You can create a GKE cluster with 2 node pools, one having `linux/amd64` nodes, and the other having `linux/arm64` nodes.\n\nRe-run the `dev` command but with an explicit platform target this time via the `--platform` flag. If we don’t provide the target platform explicitly then Skaffold will choose one between `linux/amd64` and `linux/arm64`, trying to match your local dev machine architecture.\n\n```cmd\nskaffold dev --default-repo=your/container/registy --platform=linux/amd64\n```\n\nSkaffold will build a `linux/amd64` image and insert a `nodeAffinity` definition to the `Pod` so that it gets scheduled on the matching architecture node.\n\n```cmd\nskaffold dev --default-repo=gcr.io/k8s-skaffold --platform=linux/amd64\n...\n...\n[getting-started] Hello world! Running on linux/amd64\n```\n\n- Validate that the `nodeAffinity` was applied by running the command (skip `| jq` if you don’t have `jq` installed):\n\n```cmd\nkubectl get pod getting-started  -o=jsonpath='{.spec.affinity}' | jq\n{\n    \"nodeAffinity\": {\n      \"requiredDuringSchedulingIgnoredDuringExecution\": {\n        \"nodeSelectorTerms\": [\\\n          {\\\n            \"matchExpressions\": [\\\n              {\\\n                \"key\": \"kubernetes.io/os\",\\\n                \"operator\": \"In\",\\\n                \"values\": [\\\n                  \"linux\"\\\n                ]\\\n              },\\\n              {\\\n                \"key\": \"kubernetes.io/arch\",\\\n                \"operator\": \"In\",\\\n                \"values\": [\\\n                  \"amd64\"\\\n                ]\\\n              }\\\n            ]\\\n          }\\\n        ]\n      }\n    }\n}\n```\n\nThis example will run the same whether you’re using an `arm64` machine (say an Apple Silicon Macbook) or an `amd64` machine.\n\nSkaffold also supports cross-architecture builds on [Google Cloud Build](https://cloud.google.com/build). You can rerun this example, with the additional flag `--profile cloudbuild` to all the `dev` commands to build on `Google Cloud Build` instead of the local Docker daemon..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/workflows/handling-platforms", "title": "Managing ARM workloads [NEW]", "description": "Skaffold has a lot of intelligence built-in to simplify working with ARM workloads. Whether developing on an Apple Silicon Macbook that uses an ARM based chip, or deploying to a GKE Kubernetes cluster having ARM nodes, Skaffold can take away the complexities that arise when the architecture of your development machine and Kubernetes cluster don’t match.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:49:02", "type": "section_detail", "page_metadata": {"favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "description": "Skaffold has a lot of intelligence built-in to simplify working with ARM workloads. Whether developing on an Apple Silicon Macbook that uses an ARM …", "ogUrl": "https://skaffold.dev/docs/workflows/handling-platforms/", "ogSiteName": "Skaffold", "title": "Managing ARM workloads [NEW] | Skaffold", "ogTitle": "Managing ARM workloads [NEW]", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "article:section": "docs", "twitter:card": "summary", "modifiedTime": "2025-01-23T10:14:58-05:00", "twitter:title": "Managing ARM workloads [NEW]", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:description": "Skaffold has a lot of intelligence built-in to simplify working with ARM workloads. Whether developing on an Apple Silicon Macbook that uses an ARM based chip, or deploying to a GKE Kubernetes cluster having ARM nodes, Skaffold can take away the complexities that arise when the architecture of your development machine and Kubernetes cluster don’t match.\nWhy is image architecture important? Container images are built targeting specific Instruction Set Architectures like amd64, arm64, etc.", "twitter:description": "Skaffold has a lot of intelligence built-in to simplify working with ARM workloads. Whether developing on an Apple Silicon Macbook that uses an ARM based chip, or deploying to a GKE Kubernetes cluster having ARM nodes, Skaffold can take away the complexities that arise when the architecture of your development machine and Kubernetes cluster don’t match.\nWhy is image architecture important? Container images are built targeting specific Instruction Set Architectures like amd64, arm64, etc.", "robots": "index, follow", "og:type": "article", "og:url": "https://skaffold.dev/docs/workflows/handling-platforms/", "language": "en", "ogDescription": "Skaffold has a lot of intelligence built-in to simplify working with ARM workloads. Whether developing on an Apple Silicon Macbook that uses an ARM based chip, or deploying to a GKE Kubernetes cluster having ARM nodes, Skaffold can take away the complexities that arise when the architecture of your development machine and Kubernetes cluster don’t match.\nWhy is image architecture important? Container images are built targeting specific Instruction Set Architectures like amd64, arm64, etc.", "generator": "Hugo 0.99.1", "og:title": "Managing ARM workloads [NEW]", "og:site_name": "Skaffold", "scrapeId": "0dbede63-b498-49f3-b03a-014e59f316e8", "sourceURL": "https://skaffold.dev/docs/workflows/handling-platforms", "url": "https://skaffold.dev/docs/workflows/handling-platforms/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I what about multi-arch images? in skaffold?\n\nAssistant: To what about multi-arch images? in skaffold, here's what you do:\nA [multi-arch image](https://www.docker.com/blog/multi-arch-build-and-images-the-simple-way/) is an image that can support multiple architectures. It looks like a single image with a single tag, but is actually a list of images targeting multiple architectures organized by an [image index](https://github.com/opencontainers/image-spec/blob/main/image-index.md). When you deploy a multi-arch image to a cluster, the container runtime automatically chooses the right image that is compatible with the architecture of the node to which it is being deployed. This simplifies targeting multiple clusters of different architecture nodes, and/or mixed-architecture nodes.\n\nSkaffold supports building multi-platform images natively using the [jib builder](https://skaffold.dev/docs/builders/builder-types/jib/), the [ko builder](https://skaffold.dev/docs/builders/builder-types/ko/) and the [custom builder](https://skaffold.dev/docs/builders/builder-types/custom/). For other builders that support building cross-architecture images, Skaffold will iteratively build a single platform image for each target architecture and stitch them together into a multi-platform image, and push it to the registry.\n\n![multi-arch-flow](https://skaffold.dev/images/multi-arch-flow.png)\n\nLet’s test this in the same [sample Golang](https://github.com/GoogleContainerTools/skaffold/tree/main/examples/cross-platform-builds) project as before:\n\n- Run this command to build for the target architectures `linux/amd64` and `linux/arm64`:\n\n```cmd\nskaffold build -t latest --default-repo=your/container/registy --platform=linux/amd64,linux/arm64\n...\nBuilding [skaffold-example]...\nTarget platforms: [linux/amd64,linux/arm64]\n...\n[+] Building 0.3s (13/13) FINISHED\n...\n=> => writing image sha256:10af3142e460566f5791c48758f0040cef6932cbcb0766082dcbb0d8db7653e7\n=> => naming to gcr.io/k8s-skaffold/skaffold-example:latest_linux_amd64\n...\nlatest_linux_amd64: digest: sha256:15bd4f2380e99b3563f8add1aba9691e414d4cc5701363d9c74960a20fb276c4 size: 739\n...\n[+] Building 52.8s (13/13) FINISHED\n...\n=> => writing image sha256:68866691e2d6f079b116e097ae4e67a53eaf89e825b52d6f31f2e9cc566974de\n=> => naming to gcr.io/k8s-skaffold/skaffold-example:latest_linux_arm64\n...\n4e0c2525c370: Pushed\nlatest_linux_arm64: digest: sha256:868d0aec1cc7d2ed1fa1e840f38ff1aa50c3cc3d3232ea17a065618eaec4e82b size: 739\nBuild [skaffold-example] succeeded\n```\n\n- Validate that the image just built was multi-arch, by running the following `docker` command:\n\n```cmd\ndocker manifest inspect your/container/registry/skaffold-example:latest | grep -A 3 \"platform\"\n```\n\nOutputs:\n\n```cmd\n    \"platform\": {\n        \"architecture\": \"amd64\",\n        \"os\": \"linux\"\n    }\n  --\n    \"platform\": {\n        \"architecture\": \"arm64\",\n        \"os\": \"linux\"\n    }\n```\n\n- Now if we render the Kubernetes Pod manifest for this multi-arch image, then it’ll have platform affinity definition targeting both `linux/amd64` and `linux/arm64` architectures.\n\n```cmd\nskaffold render --default-repo=your/container/registry --enable-platform-node-affinity\n```\n\nOutputs:\n\n```cmd\napiVersion: v1\nkind: Pod\nmetadata:\n    name: getting-started\n    namespace: default\nspec:\n    affinity:\n      nodeAffinity:\n        requiredDuringSchedulingIgnoredDuringExecution:\n          nodeSelectorTerms:\n        - matchExpressions:\n          - key: kubernetes.io/os\n            operator: In\n            values:\n            - linux\n          - key: kubernetes.io/arch\n            operator: In\n            values:\n            - amd64\n        - matchExpressions:\n          - key: kubernetes.io/os\n            operator: In\n            values:\n            - linux\n          - key: kubernetes.io/arch\n            operator: In\n            values:\n            - arm64\ncontainers:\n  - image: gcr.io/k8s-skaffold/skaffold-example:latest@sha256:9ecf4e52f7ff64b35deacf9d6eedc03f35d69e0b4bf3679b97ba492f4389f784\n    name: getting-started\n```\n\n#### Note\n\n- Multi-arch images need to be pushed to a container registry, as the local Docker deamon doesn’t yet support storing multi-arch images.\n- For interactive modes like `skaffold dev` and `skaffold debug` requiring fast and repeated `build-render-deploy` iterations, Skaffold will choose only one build architecture and build a single-platform image, even if you specify multiple target platforms.\n- If you need to build a multi-arch image with an interactive mode then use `skaffold run`. This will build the multi-arch image and deploy it to the active Kubernetes cluster..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/workflows/handling-platforms", "title": "Managing ARM workloads [NEW]", "description": "Skaffold has a lot of intelligence built-in to simplify working with ARM workloads. Whether developing on an Apple Silicon Macbook that uses an ARM based chip, or deploying to a GKE Kubernetes cluster having ARM nodes, Skaffold can take away the complexities that arise when the architecture of your development machine and Kubernetes cluster don’t match.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:49:02", "type": "section_detail", "page_metadata": {"favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "description": "Skaffold has a lot of intelligence built-in to simplify working with ARM workloads. Whether developing on an Apple Silicon Macbook that uses an ARM …", "ogUrl": "https://skaffold.dev/docs/workflows/handling-platforms/", "ogSiteName": "Skaffold", "title": "Managing ARM workloads [NEW] | Skaffold", "ogTitle": "Managing ARM workloads [NEW]", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "article:section": "docs", "twitter:card": "summary", "modifiedTime": "2025-01-23T10:14:58-05:00", "twitter:title": "Managing ARM workloads [NEW]", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:description": "Skaffold has a lot of intelligence built-in to simplify working with ARM workloads. Whether developing on an Apple Silicon Macbook that uses an ARM based chip, or deploying to a GKE Kubernetes cluster having ARM nodes, Skaffold can take away the complexities that arise when the architecture of your development machine and Kubernetes cluster don’t match.\nWhy is image architecture important? Container images are built targeting specific Instruction Set Architectures like amd64, arm64, etc.", "twitter:description": "Skaffold has a lot of intelligence built-in to simplify working with ARM workloads. Whether developing on an Apple Silicon Macbook that uses an ARM based chip, or deploying to a GKE Kubernetes cluster having ARM nodes, Skaffold can take away the complexities that arise when the architecture of your development machine and Kubernetes cluster don’t match.\nWhy is image architecture important? Container images are built targeting specific Instruction Set Architectures like amd64, arm64, etc.", "robots": "index, follow", "og:type": "article", "og:url": "https://skaffold.dev/docs/workflows/handling-platforms/", "language": "en", "ogDescription": "Skaffold has a lot of intelligence built-in to simplify working with ARM workloads. Whether developing on an Apple Silicon Macbook that uses an ARM based chip, or deploying to a GKE Kubernetes cluster having ARM nodes, Skaffold can take away the complexities that arise when the architecture of your development machine and Kubernetes cluster don’t match.\nWhy is image architecture important? Container images are built targeting specific Instruction Set Architectures like amd64, arm64, etc.", "generator": "Hugo 0.99.1", "og:title": "Managing ARM workloads [NEW]", "og:site_name": "Skaffold", "scrapeId": "0dbede63-b498-49f3-b03a-014e59f316e8", "sourceURL": "https://skaffold.dev/docs/workflows/handling-platforms", "url": "https://skaffold.dev/docs/workflows/handling-platforms/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you give me some code examples for Managing ARM workloads [NEW] in skaffold?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Skaffold dev command for amd64**:\n\n```yaml\nskaffold dev --default-repo=your/container/registy\n```\n\nThis snippet shows you how to skaffold dev command for amd64, which is an important aspect of managing arm workloads [new].\n\n**Skaffold dev command output for amd64**:\n\n```yaml\nskaffold dev --default-repo=gcr.io/k8s-skaffold\nListing files to watch...\n- skaffold-example\nGenerating tags...\n- skaffold-example -> gcr.io/k8s-skaffold/skaffold-example:latest\nStarting build...\nBuilding [skaffold-example]...\nTarget platforms: [linux/amd64]\n...\nBuild [skaffold-example] succeeded\nStarting deploy...\n- pod/getting-started created\nWaiting for deployments to stabilize...\n- pods is ready.\nDeployments stabilized in 7.42 seconds\nPress Ctrl+C to exit\nWatching for changes...\n[getting-started] Hello world! Running on linux/amd64\n```\n\nThis snippet shows you how to skaffold dev command output for amd64, which is an important aspect of managing arm workloads [new].\n\n**Skaffold dev command for arm64**:\n\n```yaml\nskaffold dev --default-repo=gcr.io/k8s-skaffold\n```\n\nThis snippet shows you how to skaffold dev command for arm64, which is an important aspect of managing arm workloads [new].\n\n**Skaffold dev command for mixed architecture**:\n\n```yaml\nskaffold dev --default-repo=your/container/registy --platform=linux/amd64\n```\n\nThis snippet shows you how to skaffold dev command for mixed architecture, which is an important aspect of managing arm workloads [new].\n\n**Skaffold dev command output for mixed architecture**:\n\n```yaml\nskaffold dev --default-repo=gcr.io/k8s-skaffold --platform=linux/amd64\n...\n...\n[getting-started] Hello world! Running on linux/amd64\n```\n\nThis snippet shows you how to skaffold dev command output for mixed architecture, which is an important aspect of managing arm workloads [new].\n\n**kubectl get pod command for nodeAffinity**:\n\n```yaml\nkubectl get pod getting-started  -o=jsonpath='{.spec.affinity}' | jq\n```\n\nThis snippet shows you how to kubectl get pod command for nodeaffinity, which is an important aspect of managing arm workloads [new].\n\n**Skaffold build command for multi-arch**:\n\n```yaml\nskaffold build -t latest --default-repo=your/container/registy --platform=linux/amd64,linux/arm64\n```\n\nThis snippet shows you how to skaffold build command for multi-arch, which is an important aspect of managing arm workloads [new].\n\n**Docker manifest inspect command**:\n\n```yaml\ndocker manifest inspect your/container/registry/skaffold-example:latest | grep -A 3 \"platform\"\n```\n\nThis snippet shows you how to docker manifest inspect command, which is an important aspect of managing arm workloads [new].\n\n**Skaffold render command for multi-arch**:\n\n```yaml\nskaffold render --default-repo=your/container/registry --enable-platform-node-affinity\n```\n\nThis snippet shows you how to skaffold render command for multi-arch, which is an important aspect of managing arm workloads [new].\n\n", "metadata": {"source_url": "https://skaffold.dev/docs/workflows/handling-platforms", "title": "Managing ARM workloads [NEW]", "description": "Skaffold has a lot of intelligence built-in to simplify working with ARM workloads. Whether developing on an Apple Silicon Macbook that uses an ARM based chip, or deploying to a GKE Kubernetes cluster having ARM nodes, Skaffold can take away the complexities that arise when the architecture of your development machine and Kubernetes cluster don’t match.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:49:02", "type": "code_examples", "page_metadata": {"favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "description": "Skaffold has a lot of intelligence built-in to simplify working with ARM workloads. Whether developing on an Apple Silicon Macbook that uses an ARM …", "ogUrl": "https://skaffold.dev/docs/workflows/handling-platforms/", "ogSiteName": "Skaffold", "title": "Managing ARM workloads [NEW] | Skaffold", "ogTitle": "Managing ARM workloads [NEW]", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "article:section": "docs", "twitter:card": "summary", "modifiedTime": "2025-01-23T10:14:58-05:00", "twitter:title": "Managing ARM workloads [NEW]", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:description": "Skaffold has a lot of intelligence built-in to simplify working with ARM workloads. Whether developing on an Apple Silicon Macbook that uses an ARM based chip, or deploying to a GKE Kubernetes cluster having ARM nodes, Skaffold can take away the complexities that arise when the architecture of your development machine and Kubernetes cluster don’t match.\nWhy is image architecture important? Container images are built targeting specific Instruction Set Architectures like amd64, arm64, etc.", "twitter:description": "Skaffold has a lot of intelligence built-in to simplify working with ARM workloads. Whether developing on an Apple Silicon Macbook that uses an ARM based chip, or deploying to a GKE Kubernetes cluster having ARM nodes, Skaffold can take away the complexities that arise when the architecture of your development machine and Kubernetes cluster don’t match.\nWhy is image architecture important? Container images are built targeting specific Instruction Set Architectures like amd64, arm64, etc.", "robots": "index, follow", "og:type": "article", "og:url": "https://skaffold.dev/docs/workflows/handling-platforms/", "language": "en", "ogDescription": "Skaffold has a lot of intelligence built-in to simplify working with ARM workloads. Whether developing on an Apple Silicon Macbook that uses an ARM based chip, or deploying to a GKE Kubernetes cluster having ARM nodes, Skaffold can take away the complexities that arise when the architecture of your development machine and Kubernetes cluster don’t match.\nWhy is image architecture important? Container images are built targeting specific Instruction Set Architectures like amd64, arm64, etc.", "generator": "Hugo 0.99.1", "og:title": "Managing ARM workloads [NEW]", "og:site_name": "Skaffold", "scrapeId": "0dbede63-b498-49f3-b03a-014e59f316e8", "sourceURL": "https://skaffold.dev/docs/workflows/handling-platforms", "url": "https://skaffold.dev/docs/workflows/handling-platforms/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: What are some tips for using Managing ARM workloads [NEW] in skaffold effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nUse container images that are compatible with the architecture of the node where you intend to run the workloads.\n\nSkaffold provides an opionated way to handle architecture mismatches effectively.\n\nUse the flag `--enable-platform-node-affinity=true` to always create affinity rules in the Kubernetes manifests for built images.\n\nFor interactive modes requiring fast iterations, use `skaffold run` to build multi-arch images.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://skaffold.dev/docs/workflows/handling-platforms", "title": "Managing ARM workloads [NEW]", "description": "Skaffold has a lot of intelligence built-in to simplify working with ARM workloads. Whether developing on an Apple Silicon Macbook that uses an ARM based chip, or deploying to a GKE Kubernetes cluster having ARM nodes, Skaffold can take away the complexities that arise when the architecture of your development machine and Kubernetes cluster don’t match.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:49:02", "type": "best_practices", "page_metadata": {"favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "description": "Skaffold has a lot of intelligence built-in to simplify working with ARM workloads. Whether developing on an Apple Silicon Macbook that uses an ARM …", "ogUrl": "https://skaffold.dev/docs/workflows/handling-platforms/", "ogSiteName": "Skaffold", "title": "Managing ARM workloads [NEW] | Skaffold", "ogTitle": "Managing ARM workloads [NEW]", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "article:section": "docs", "twitter:card": "summary", "modifiedTime": "2025-01-23T10:14:58-05:00", "twitter:title": "Managing ARM workloads [NEW]", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:description": "Skaffold has a lot of intelligence built-in to simplify working with ARM workloads. Whether developing on an Apple Silicon Macbook that uses an ARM based chip, or deploying to a GKE Kubernetes cluster having ARM nodes, Skaffold can take away the complexities that arise when the architecture of your development machine and Kubernetes cluster don’t match.\nWhy is image architecture important? Container images are built targeting specific Instruction Set Architectures like amd64, arm64, etc.", "twitter:description": "Skaffold has a lot of intelligence built-in to simplify working with ARM workloads. Whether developing on an Apple Silicon Macbook that uses an ARM based chip, or deploying to a GKE Kubernetes cluster having ARM nodes, Skaffold can take away the complexities that arise when the architecture of your development machine and Kubernetes cluster don’t match.\nWhy is image architecture important? Container images are built targeting specific Instruction Set Architectures like amd64, arm64, etc.", "robots": "index, follow", "og:type": "article", "og:url": "https://skaffold.dev/docs/workflows/handling-platforms/", "language": "en", "ogDescription": "Skaffold has a lot of intelligence built-in to simplify working with ARM workloads. Whether developing on an Apple Silicon Macbook that uses an ARM based chip, or deploying to a GKE Kubernetes cluster having ARM nodes, Skaffold can take away the complexities that arise when the architecture of your development machine and Kubernetes cluster don’t match.\nWhy is image architecture important? Container images are built targeting specific Instruction Set Architectures like amd64, arm64, etc.", "generator": "Hugo 0.99.1", "og:title": "Managing ARM workloads [NEW]", "og:site_name": "Skaffold", "scrapeId": "0dbede63-b498-49f3-b03a-014e59f316e8", "sourceURL": "https://skaffold.dev/docs/workflows/handling-platforms", "url": "https://skaffold.dev/docs/workflows/handling-platforms/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what Privacy Settings is in skaffold?\n\nAssistant: Sure, I'd be happy to explain Privacy Settings in skaffold.\n\n# Privacy Settings\n\nThe privacy of our users is very important to us. Your use of this software is subject to the Google Privacy Policy.Here's a quick rundown of what this is about:\n\n## Update check\n\nTo keep Skaffold up to date, update checks are made to Google servers to see if a new version of Skaffold is available. By default, this behavior is enabled. As a side effect this request is logged.\n\nTo disable the update check you have two options:\n\n1. set the `SKAFFOLD_UPDATE_CHECK` environment variable to `false`\n2. turn it off in skaffold’s global config with:\n\n```bash\n    skaffold config set -g update-check false\n\n```\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/references/privacy", "title": "Privacy Settings", "description": "The privacy of our users is very important to us. Your use of this software is subject to the Google Privacy Policy.", "has_code_examples": true, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 03:49:11", "type": "overview", "page_metadata": {"ogDescription": "The privacy of our users is very important to us. Your use of this software is subject to the Google Privacy Policy.\nUpdate check To keep Skaffold up to date, update checks are made to Google servers to see if a new version of Skaffold is available. By default, this behavior is enabled. As a side effect this request is logged.\nTo disable the update check you have two options:", "title": "Privacy Settings | Skaffold", "twitter:description": "The privacy of our users is very important to us. Your use of this software is subject to the Google Privacy Policy.\nUpdate check To keep Skaffold up to date, update checks are made to Google servers to see if a new version of Skaffold is available. By default, this behavior is enabled. As a side effect this request is logged.\nTo disable the update check you have two options:", "og:url": "https://skaffold.dev/docs/references/privacy/", "article:modified_time": "2025-01-23T10:14:58-05:00", "generator": "Hugo 0.99.1", "description": "The privacy of our users is very important to us.\nYour use of this software is subject to the Google Privacy Policy.\nUpdate check\nTo keep Skaffold up …", "twitter:card": "summary", "ogSiteName": "Skaffold", "twitter:title": "Privacy Settings", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:description": "The privacy of our users is very important to us. Your use of this software is subject to the Google Privacy Policy.\nUpdate check To keep Skaffold up to date, update checks are made to Google servers to see if a new version of Skaffold is available. By default, this behavior is enabled. As a side effect this request is logged.\nTo disable the update check you have two options:", "article:section": "docs", "og:type": "article", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:site_name": "Skaffold", "ogUrl": "https://skaffold.dev/docs/references/privacy/", "language": "en", "og:title": "Privacy Settings", "robots": "index, follow", "ogTitle": "Privacy Settings", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "scrapeId": "343bfc0d-4380-4a2a-b594-09ebc7c2f84c", "sourceURL": "https://skaffold.dev/docs/references/privacy", "url": "https://skaffold.dev/docs/references/privacy/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I update check in skaffold?\n\nAssistant: To update check in skaffold, here's what you do:\nTo keep Skaffold up to date, update checks are made to Google servers to see if a new version of Skaffold is available. By default, this behavior is enabled. As a side effect this request is logged.\n\nTo disable the update check you have two options:\n\n1. set the `SKAFFOLD_UPDATE_CHECK` environment variable to `false`\n2. turn it off in skaffold’s global config with:\n\n```bash\n    skaffold config set -g update-check false\n\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/privacy", "title": "Privacy Settings", "description": "The privacy of our users is very important to us. Your use of this software is subject to the Google Privacy Policy.", "has_code_examples": true, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 03:49:11", "type": "section_detail", "page_metadata": {"ogDescription": "The privacy of our users is very important to us. Your use of this software is subject to the Google Privacy Policy.\nUpdate check To keep Skaffold up to date, update checks are made to Google servers to see if a new version of Skaffold is available. By default, this behavior is enabled. As a side effect this request is logged.\nTo disable the update check you have two options:", "title": "Privacy Settings | Skaffold", "twitter:description": "The privacy of our users is very important to us. Your use of this software is subject to the Google Privacy Policy.\nUpdate check To keep Skaffold up to date, update checks are made to Google servers to see if a new version of Skaffold is available. By default, this behavior is enabled. As a side effect this request is logged.\nTo disable the update check you have two options:", "og:url": "https://skaffold.dev/docs/references/privacy/", "article:modified_time": "2025-01-23T10:14:58-05:00", "generator": "Hugo 0.99.1", "description": "The privacy of our users is very important to us.\nYour use of this software is subject to the Google Privacy Policy.\nUpdate check\nTo keep Skaffold up …", "twitter:card": "summary", "ogSiteName": "Skaffold", "twitter:title": "Privacy Settings", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:description": "The privacy of our users is very important to us. Your use of this software is subject to the Google Privacy Policy.\nUpdate check To keep Skaffold up to date, update checks are made to Google servers to see if a new version of Skaffold is available. By default, this behavior is enabled. As a side effect this request is logged.\nTo disable the update check you have two options:", "article:section": "docs", "og:type": "article", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:site_name": "Skaffold", "ogUrl": "https://skaffold.dev/docs/references/privacy/", "language": "en", "og:title": "Privacy Settings", "robots": "index, follow", "ogTitle": "Privacy Settings", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "scrapeId": "343bfc0d-4380-4a2a-b594-09ebc7c2f84c", "sourceURL": "https://skaffold.dev/docs/references/privacy", "url": "https://skaffold.dev/docs/references/privacy/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you give me some code examples for Privacy Settings in skaffold?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Disable update check in Skaffold**:\n\n```yaml\nskaffold config set -g update-check false\n```\n\nThis snippet shows you how to disable update check in skaffold, which is an important aspect of privacy settings.\n\n", "metadata": {"source_url": "https://skaffold.dev/docs/references/privacy", "title": "Privacy Settings", "description": "The privacy of our users is very important to us. Your use of this software is subject to the Google Privacy Policy.", "has_code_examples": true, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 03:49:11", "type": "code_examples", "page_metadata": {"ogDescription": "The privacy of our users is very important to us. Your use of this software is subject to the Google Privacy Policy.\nUpdate check To keep Skaffold up to date, update checks are made to Google servers to see if a new version of Skaffold is available. By default, this behavior is enabled. As a side effect this request is logged.\nTo disable the update check you have two options:", "title": "Privacy Settings | Skaffold", "twitter:description": "The privacy of our users is very important to us. Your use of this software is subject to the Google Privacy Policy.\nUpdate check To keep Skaffold up to date, update checks are made to Google servers to see if a new version of Skaffold is available. By default, this behavior is enabled. As a side effect this request is logged.\nTo disable the update check you have two options:", "og:url": "https://skaffold.dev/docs/references/privacy/", "article:modified_time": "2025-01-23T10:14:58-05:00", "generator": "Hugo 0.99.1", "description": "The privacy of our users is very important to us.\nYour use of this software is subject to the Google Privacy Policy.\nUpdate check\nTo keep Skaffold up …", "twitter:card": "summary", "ogSiteName": "Skaffold", "twitter:title": "Privacy Settings", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:description": "The privacy of our users is very important to us. Your use of this software is subject to the Google Privacy Policy.\nUpdate check To keep Skaffold up to date, update checks are made to Google servers to see if a new version of Skaffold is available. By default, this behavior is enabled. As a side effect this request is logged.\nTo disable the update check you have two options:", "article:section": "docs", "og:type": "article", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:site_name": "Skaffold", "ogUrl": "https://skaffold.dev/docs/references/privacy/", "language": "en", "og:title": "Privacy Settings", "robots": "index, follow", "ogTitle": "Privacy Settings", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "scrapeId": "343bfc0d-4380-4a2a-b594-09ebc7c2f84c", "sourceURL": "https://skaffold.dev/docs/references/privacy", "url": "https://skaffold.dev/docs/references/privacy/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: What are some tips for using Privacy Settings in skaffold effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nYour use of this software is subject to the Google Privacy Policy.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://skaffold.dev/docs/references/privacy", "title": "Privacy Settings", "description": "The privacy of our users is very important to us. Your use of this software is subject to the Google Privacy Policy.", "has_code_examples": true, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 03:49:11", "type": "best_practices", "page_metadata": {"ogDescription": "The privacy of our users is very important to us. Your use of this software is subject to the Google Privacy Policy.\nUpdate check To keep Skaffold up to date, update checks are made to Google servers to see if a new version of Skaffold is available. By default, this behavior is enabled. As a side effect this request is logged.\nTo disable the update check you have two options:", "title": "Privacy Settings | Skaffold", "twitter:description": "The privacy of our users is very important to us. Your use of this software is subject to the Google Privacy Policy.\nUpdate check To keep Skaffold up to date, update checks are made to Google servers to see if a new version of Skaffold is available. By default, this behavior is enabled. As a side effect this request is logged.\nTo disable the update check you have two options:", "og:url": "https://skaffold.dev/docs/references/privacy/", "article:modified_time": "2025-01-23T10:14:58-05:00", "generator": "Hugo 0.99.1", "description": "The privacy of our users is very important to us.\nYour use of this software is subject to the Google Privacy Policy.\nUpdate check\nTo keep Skaffold up …", "twitter:card": "summary", "ogSiteName": "Skaffold", "twitter:title": "Privacy Settings", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:description": "The privacy of our users is very important to us. Your use of this software is subject to the Google Privacy Policy.\nUpdate check To keep Skaffold up to date, update checks are made to Google servers to see if a new version of Skaffold is available. By default, this behavior is enabled. As a side effect this request is logged.\nTo disable the update check you have two options:", "article:section": "docs", "og:type": "article", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:site_name": "Skaffold", "ogUrl": "https://skaffold.dev/docs/references/privacy/", "language": "en", "og:title": "Privacy Settings", "robots": "index, follow", "ogTitle": "Privacy Settings", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "scrapeId": "343bfc0d-4380-4a2a-b594-09ebc7c2f84c", "sourceURL": "https://skaffold.dev/docs/references/privacy", "url": "https://skaffold.dev/docs/references/privacy/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what Deprecation Policy is in skaffold?\n\nAssistant: Sure, I'd be happy to explain Deprecation Policy in skaffold.\n\n# Deprecation Policy\n\nThis document sets out the deprecation policy for Skaffold, and outlines how the Skaffold project will approach the introduction of breaking changes over time.Here's a quick rundown of what this is about:\n\n## Deprecation Policy Overview\n\nDeprecation policy applies only to Stable Builds. Bleeding Edge builds may have less stable implementations.\n\n## Deprecation Notification Periods\n\nDeprecations to a flag or CLI command require the following notification periods, depending on the release track:\n\n| Release Track | Deprecation Period |\n| --- | --- |\n| Alpha (experimental) | 0 releases |\n| Beta (pre-release) | 3 months or 1 release (whichever is longer) |\n| GA (generally available) | 6 months or 1 release (whichever is longer) |\n\n## Breaking Changes\n\nA breaking change is when the primary functionality of a feature changes in a way that the user has to make changes to their workflows/configuration.\n\n- **Breaking config change**: In case of Skaffold’s pipeline config (skaffold.yaml) a breaking change between an old and new version occurs when the skaffold binary cannot parse the input yaml with auto-upgrade. This can happen when the new version removes a feature or when the new version introduces a mandatory field with no default value.\n- **Breaking functional change**: functional changes that force user workflow changes even when the config is the same or upgradeable.\n\n## How do we deprecate things?\n\nA “deprecation event” would coincide with a release.\n\n1. We document the deprecation in the following places if applicable:\n   1. deprecation policy - this document\n   2. [Document on this site](https://skaffold.dev/docs/) changes in relevant sections\n   3. [Release notes](https://github.com/GoogleContainerTools/skaffold/blob/main/CHANGELOG.md)\n   4. [Command help](https://skaffold.dev/docs/references/cli/)\n   5. Log messages\n   6. [skaffold yaml reference](https://skaffold.dev/docs/references/yaml/)\n2. if applicable, [inspired by the Kubernetes policy](https://kubernetes.io/docs/reference/using-api/deprecation-policy/#deprecating-a-flag-or-cli):\n\n> Rule #6: Deprecated CLI elements must emit warnings (optionally disable) when used.\n\n## Current Maturity of Skaffold\n\nSkaffold and its features are considered GA unless specified (in this document, CLI reference, config YAML reference or in docs in skaffold.dev).\n\nSkaffold is constantly evolving with the tools space, we want to be able to experiment and sometimes change things.\nIn order to be transparent about the maturity of feature areas and things that might change we offer the feature level maturity matrix that we keep up to date.\n\n## Skaffold.yaml (pipeline config)\n\nYou can safely depend on the skaffold config with the assumption that skaffold will auto-upgrade to the latest version:\n\n- Removal and other non-upgradeable changes are subject to the deprecation policy for all (even new) features under the config.\n- Auto-upgradeable changes are not considered breaking changes.\n\n## Skaffold Features\n\nWe are committed to design for auto-upgradeable changes in the config.\nHowever the **behavior** of individual component might suffer breaking changes depending on maturity.\n\nThe following is the maturity of the larger feature areas:\n\n| area | maturity | description |\n| --- | --- | --- |\n| [Skaffold API](https://skaffold.dev/docs/design/api) | beta | Control API, Event API and State API |\n| [Build](https://skaffold.dev/docs/builders/) | GA | Build images based on multiple build tools in a configurable way |\n| [Cleanup](https://skaffold.dev/docs/cleanup) | GA | `skaffold delete` removes everything deployed `skaffold run` from the cluster, and prunes locally |\n| [Completion](https://skaffold.dev/docs/references/deprecation/) | GA | generate completion scripts for bash, zsh |\n| [Debug](https://skaffold.dev/docs/workflows/debug) | GA | Language-aware reconfiguration of containers on the fly to become debuggable |\n| [Default-repo](https://skaffold.dev/docs/environment/image-registries/) | GA | specify a default image repository & rewrite image names to default repo |\n| [Deploy](https://skaffold.dev/docs/deployers) | beta | Deploy a set of deployables as your applications and replace the image name with the built images |\n| [Dev](https://skaffold.dev/docs/workflows/dev) | GA | Continuous development |\n| [skaffold fix](https://skaffold.dev/docs/references/deprecation/) | beta | Upgrade an older skaffold config to the current version |\n| [Generate tekton pipelines](https://skaffold.dev/docs/references/deprecation/) | alpha | User can generate a starter tekton pipeline using skaffold |\n| [Global config](https://skaffold.dev/docs/design/global-config/) | GA | store user preferences in a separate preferences file |\n| [Lifecycle Hooks](https://skaffold.dev/docs/lifecycle-hooks/) | beta | Run code triggered by different events during the skaffold process lifecycle. |\n| [Init](https://skaffold.dev/docs/init) | beta | Initialize a skaffold.yaml file based on the contents of the current directory |\n| [Insecure registry handling](https://skaffold.dev/docs/environment/image-registries/#insecure-image-registries) | GA | Target registries for built images which are not secure |\n| [Log tailing](https://skaffold.dev/docs/log-tailing) | GA | automated log tailing of deployed pods |\n| [Port-forwarding](https://skaffold.dev/docs/port-forwarding/) | GA | Port forward application to localhost |\n| [Profiles](https://skaffold.dev/docs/environment/profiles/) | GA | Create different pipeline configurations based on overrides and patches defined in one or more profiles |\n| [Render](https://skaffold.dev/docs/renderers) | beta | Renders a set of resources in your applications and replace the image name with the built images |\n| [skaffold run](https://skaffold.dev/docs/workflows/ci-cd) | GA | One-off build & deployment of the skaffold application |\n| [Filesync](https://skaffold.dev/docs/filesync) | GA | Instead of rebuilding, copy the changed files in the running container |\n| [Tagpolicy](https://skaffold.dev/docs/taggers) | GA | Automated tagging |\n| [Templating](https://skaffold.dev/docs/environment/templating/) | GA | certain fields of skaffold.yaml can be parametrized with environment and built-in variables |\n| [Test](https://skaffold.dev/docs/testers) | GA | Run tests as part of your pipeline |\n| [Test](https://skaffold.dev/docs/testers/structure) | GA | Run structure tests as part of your pipeline |\n| [Trigger](https://skaffold.dev/docs/references/deprecation/) | GA | Feature area: Trigger configured actions when source files change |\n| [skaffold verify](https://skaffold.dev/docs/references/deprecation/) | GA | User can run post deployment tests via skaffold monitored test containers |\n| [version](https://skaffold.dev/docs/references/deprecation/) | GA | get the version string of the current skaffold binary |\n\n## Exceptions\n\nNo policy can cover every possible situation.\nThis policy is a living document, and will evolve over time.\nIn practice, there will be situations that do not fit neatly into this policy, or for which this policy becomes a serious impediment.\nExamples could be getting fixes fast for a serious vulnerability, a destructive bug or requirements that might be imposed by third parties (such as legal requirements).\nSuch situations should be discussed on the given bugs / feature requests and during Skaffold Office Hours, always bearing in mind that Skaffold is committed to being a stable system that, as much as possible, never breaks users.\nExceptions will always be announced in all relevant release notes.\n\n## Current Deprecation Notices\n\n04/07/2021: Release v1.22.0 deprecates the `--render-only` and `--render-output` flags from `skaffold run` and `skaffold dev`, in favor of simply using the `skaffold render` command directly.\n05/05/2021: Release v1.23.0 deprecates the `--add-skaffold-labels` flag from `skaffold render`, and implicitly deprecates the addition of Skaffold-internal labels to any Kubernetes resources hydrated by Skaffold through `skaffold render`.\n\n## Past Deprecation Notices\n\n10/21/2019: With release v0.41.0 we mark for deprecation the `$IMAGES` environment variable passed to custom builders. Variable `$IMAGE` should be used instead.\n**This environment variable flag was removed in version v1.22.0.**\n03/15/2019: With release v0.25.0 we mark for deprecation the `flags` field in kaniko ( `KanikoArtifact.AdditionalFlags`), instead Kaniko’s additional flags will now be represented as unique fields under `kaniko` per artifact ( `KanikoArtifact` type).\n**This field was removed in version 1.0.0.**\n02/15/2019: With release v0.23.0 we mark for deprecation the following env variables in the `envTemplate` tagger:\n- `DIGEST`\n- `DIGEST_ALGO`\n- `DIGEST_HEX`\nCurrently these variables resolve to `_DEPRECATED_<envvar>_`, and the new tagging mechanism adds a digest to the image name thus it shouldn’t break existing configurations.\n**This compatibility behavior was removed in version v1.22.0.**\nLast modified January 23, 2025: [release: v2.14.0 (#9668) (f132ab25)](https://github.com/GoogleContainerTools/skaffold/commit/f132ab25adf1599c7fbdce733144991126565386)\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/references/deprecation", "title": "Deprecation Policy", "description": "This document sets out the deprecation policy for Skaffold, and outlines how the Skaffold project will approach the introduction of breaking changes over time.", "has_code_examples": false, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 03:51:00", "type": "overview", "page_metadata": {"og:type": "article", "og:site_name": "Skaffold", "twitter:title": "Deprecation Policy", "twitter:description": "This document sets out the deprecation policy for Skaffold, and outlines how the Skaffold project will approach the introduction of breaking changes over time.\nDeprecation policy applies only to Stable Builds. Bleeding Edge builds may have less stable implementations.\nDeprecations to a flag or CLI command require the following notification periods, depending on the release track:\n   Release Track Deprecation Period     Alpha (experimental) 0 releases   Beta (pre-release) 3 months or 1 release (whichever is longer)   GA (generally available) 6 months or 1 release (whichever is longer)    Breaking changes A breaking change is when the primary functionality of a feature changes in a way that the user has to make changes to their workflows/configuration.", "og:description": "This document sets out the deprecation policy for Skaffold, and outlines how the Skaffold project will approach the introduction of breaking changes over time.\nDeprecation policy applies only to Stable Builds. Bleeding Edge builds may have less stable implementations.\nDeprecations to a flag or CLI command require the following notification periods, depending on the release track:\n   Release Track Deprecation Period     Alpha (experimental) 0 releases   Beta (pre-release) 3 months or 1 release (whichever is longer)   GA (generally available) 6 months or 1 release (whichever is longer)    Breaking changes A breaking change is when the primary functionality of a feature changes in a way that the user has to make changes to their workflows/configuration.", "ogSiteName": "Skaffold", "description": "This document sets out the deprecation policy for Skaffold, and outlines how the Skaffold project will approach the introduction of breaking changes …", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "twitter:card": "summary", "ogTitle": "Deprecation Policy", "article:modified_time": "2025-01-23T10:14:58-05:00", "article:section": "docs", "ogUrl": "https://skaffold.dev/docs/references/deprecation/", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:title": "Deprecation Policy", "robots": "index, follow", "title": "Deprecation Policy | Skaffold", "language": "en", "generator": "Hugo 0.99.1", "ogDescription": "This document sets out the deprecation policy for Skaffold, and outlines how the Skaffold project will approach the introduction of breaking changes over time.\nDeprecation policy applies only to Stable Builds. Bleeding Edge builds may have less stable implementations.\nDeprecations to a flag or CLI command require the following notification periods, depending on the release track:\n   Release Track Deprecation Period     Alpha (experimental) 0 releases   Beta (pre-release) 3 months or 1 release (whichever is longer)   GA (generally available) 6 months or 1 release (whichever is longer)    Breaking changes A breaking change is when the primary functionality of a feature changes in a way that the user has to make changes to their workflows/configuration.", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:url": "https://skaffold.dev/docs/references/deprecation/", "scrapeId": "3554d367-3544-4df3-9ddc-0012fb874708", "sourceURL": "https://skaffold.dev/docs/references/deprecation", "url": "https://skaffold.dev/docs/references/deprecation/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I deprecation policy overview in skaffold?\n\nAssistant: To deprecation policy overview in skaffold, here's what you do:\nDeprecation policy applies only to Stable Builds. Bleeding Edge builds may have less stable implementations..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/deprecation", "title": "Deprecation Policy", "description": "This document sets out the deprecation policy for Skaffold, and outlines how the Skaffold project will approach the introduction of breaking changes over time.", "has_code_examples": false, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 03:51:00", "type": "section_detail", "page_metadata": {"og:type": "article", "og:site_name": "Skaffold", "twitter:title": "Deprecation Policy", "twitter:description": "This document sets out the deprecation policy for Skaffold, and outlines how the Skaffold project will approach the introduction of breaking changes over time.\nDeprecation policy applies only to Stable Builds. Bleeding Edge builds may have less stable implementations.\nDeprecations to a flag or CLI command require the following notification periods, depending on the release track:\n   Release Track Deprecation Period     Alpha (experimental) 0 releases   Beta (pre-release) 3 months or 1 release (whichever is longer)   GA (generally available) 6 months or 1 release (whichever is longer)    Breaking changes A breaking change is when the primary functionality of a feature changes in a way that the user has to make changes to their workflows/configuration.", "og:description": "This document sets out the deprecation policy for Skaffold, and outlines how the Skaffold project will approach the introduction of breaking changes over time.\nDeprecation policy applies only to Stable Builds. Bleeding Edge builds may have less stable implementations.\nDeprecations to a flag or CLI command require the following notification periods, depending on the release track:\n   Release Track Deprecation Period     Alpha (experimental) 0 releases   Beta (pre-release) 3 months or 1 release (whichever is longer)   GA (generally available) 6 months or 1 release (whichever is longer)    Breaking changes A breaking change is when the primary functionality of a feature changes in a way that the user has to make changes to their workflows/configuration.", "ogSiteName": "Skaffold", "description": "This document sets out the deprecation policy for Skaffold, and outlines how the Skaffold project will approach the introduction of breaking changes …", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "twitter:card": "summary", "ogTitle": "Deprecation Policy", "article:modified_time": "2025-01-23T10:14:58-05:00", "article:section": "docs", "ogUrl": "https://skaffold.dev/docs/references/deprecation/", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:title": "Deprecation Policy", "robots": "index, follow", "title": "Deprecation Policy | Skaffold", "language": "en", "generator": "Hugo 0.99.1", "ogDescription": "This document sets out the deprecation policy for Skaffold, and outlines how the Skaffold project will approach the introduction of breaking changes over time.\nDeprecation policy applies only to Stable Builds. Bleeding Edge builds may have less stable implementations.\nDeprecations to a flag or CLI command require the following notification periods, depending on the release track:\n   Release Track Deprecation Period     Alpha (experimental) 0 releases   Beta (pre-release) 3 months or 1 release (whichever is longer)   GA (generally available) 6 months or 1 release (whichever is longer)    Breaking changes A breaking change is when the primary functionality of a feature changes in a way that the user has to make changes to their workflows/configuration.", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:url": "https://skaffold.dev/docs/references/deprecation/", "scrapeId": "3554d367-3544-4df3-9ddc-0012fb874708", "sourceURL": "https://skaffold.dev/docs/references/deprecation", "url": "https://skaffold.dev/docs/references/deprecation/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I deprecation notification periods in skaffold?\n\nAssistant: To deprecation notification periods in skaffold, here's what you do:\nDeprecations to a flag or CLI command require the following notification periods, depending on the release track:\n\n| Release Track | Deprecation Period |\n| --- | --- |\n| Alpha (experimental) | 0 releases |\n| Beta (pre-release) | 3 months or 1 release (whichever is longer) |\n| GA (generally available) | 6 months or 1 release (whichever is longer) |.\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/deprecation", "title": "Deprecation Policy", "description": "This document sets out the deprecation policy for Skaffold, and outlines how the Skaffold project will approach the introduction of breaking changes over time.", "has_code_examples": false, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 03:51:00", "type": "section_detail", "page_metadata": {"og:type": "article", "og:site_name": "Skaffold", "twitter:title": "Deprecation Policy", "twitter:description": "This document sets out the deprecation policy for Skaffold, and outlines how the Skaffold project will approach the introduction of breaking changes over time.\nDeprecation policy applies only to Stable Builds. Bleeding Edge builds may have less stable implementations.\nDeprecations to a flag or CLI command require the following notification periods, depending on the release track:\n   Release Track Deprecation Period     Alpha (experimental) 0 releases   Beta (pre-release) 3 months or 1 release (whichever is longer)   GA (generally available) 6 months or 1 release (whichever is longer)    Breaking changes A breaking change is when the primary functionality of a feature changes in a way that the user has to make changes to their workflows/configuration.", "og:description": "This document sets out the deprecation policy for Skaffold, and outlines how the Skaffold project will approach the introduction of breaking changes over time.\nDeprecation policy applies only to Stable Builds. Bleeding Edge builds may have less stable implementations.\nDeprecations to a flag or CLI command require the following notification periods, depending on the release track:\n   Release Track Deprecation Period     Alpha (experimental) 0 releases   Beta (pre-release) 3 months or 1 release (whichever is longer)   GA (generally available) 6 months or 1 release (whichever is longer)    Breaking changes A breaking change is when the primary functionality of a feature changes in a way that the user has to make changes to their workflows/configuration.", "ogSiteName": "Skaffold", "description": "This document sets out the deprecation policy for Skaffold, and outlines how the Skaffold project will approach the introduction of breaking changes …", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "twitter:card": "summary", "ogTitle": "Deprecation Policy", "article:modified_time": "2025-01-23T10:14:58-05:00", "article:section": "docs", "ogUrl": "https://skaffold.dev/docs/references/deprecation/", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:title": "Deprecation Policy", "robots": "index, follow", "title": "Deprecation Policy | Skaffold", "language": "en", "generator": "Hugo 0.99.1", "ogDescription": "This document sets out the deprecation policy for Skaffold, and outlines how the Skaffold project will approach the introduction of breaking changes over time.\nDeprecation policy applies only to Stable Builds. Bleeding Edge builds may have less stable implementations.\nDeprecations to a flag or CLI command require the following notification periods, depending on the release track:\n   Release Track Deprecation Period     Alpha (experimental) 0 releases   Beta (pre-release) 3 months or 1 release (whichever is longer)   GA (generally available) 6 months or 1 release (whichever is longer)    Breaking changes A breaking change is when the primary functionality of a feature changes in a way that the user has to make changes to their workflows/configuration.", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:url": "https://skaffold.dev/docs/references/deprecation/", "scrapeId": "3554d367-3544-4df3-9ddc-0012fb874708", "sourceURL": "https://skaffold.dev/docs/references/deprecation", "url": "https://skaffold.dev/docs/references/deprecation/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I breaking changes in skaffold?\n\nAssistant: To breaking changes in skaffold, here's what you do:\nA breaking change is when the primary functionality of a feature changes in a way that the user has to make changes to their workflows/configuration.\n\n- **Breaking config change**: In case of Skaffold’s pipeline config (skaffold.yaml) a breaking change between an old and new version occurs when the skaffold binary cannot parse the input yaml with auto-upgrade. This can happen when the new version removes a feature or when the new version introduces a mandatory field with no default value.\n- **Breaking functional change**: functional changes that force user workflow changes even when the config is the same or upgradeable..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/deprecation", "title": "Deprecation Policy", "description": "This document sets out the deprecation policy for Skaffold, and outlines how the Skaffold project will approach the introduction of breaking changes over time.", "has_code_examples": false, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 03:51:00", "type": "section_detail", "page_metadata": {"og:type": "article", "og:site_name": "Skaffold", "twitter:title": "Deprecation Policy", "twitter:description": "This document sets out the deprecation policy for Skaffold, and outlines how the Skaffold project will approach the introduction of breaking changes over time.\nDeprecation policy applies only to Stable Builds. Bleeding Edge builds may have less stable implementations.\nDeprecations to a flag or CLI command require the following notification periods, depending on the release track:\n   Release Track Deprecation Period     Alpha (experimental) 0 releases   Beta (pre-release) 3 months or 1 release (whichever is longer)   GA (generally available) 6 months or 1 release (whichever is longer)    Breaking changes A breaking change is when the primary functionality of a feature changes in a way that the user has to make changes to their workflows/configuration.", "og:description": "This document sets out the deprecation policy for Skaffold, and outlines how the Skaffold project will approach the introduction of breaking changes over time.\nDeprecation policy applies only to Stable Builds. Bleeding Edge builds may have less stable implementations.\nDeprecations to a flag or CLI command require the following notification periods, depending on the release track:\n   Release Track Deprecation Period     Alpha (experimental) 0 releases   Beta (pre-release) 3 months or 1 release (whichever is longer)   GA (generally available) 6 months or 1 release (whichever is longer)    Breaking changes A breaking change is when the primary functionality of a feature changes in a way that the user has to make changes to their workflows/configuration.", "ogSiteName": "Skaffold", "description": "This document sets out the deprecation policy for Skaffold, and outlines how the Skaffold project will approach the introduction of breaking changes …", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "twitter:card": "summary", "ogTitle": "Deprecation Policy", "article:modified_time": "2025-01-23T10:14:58-05:00", "article:section": "docs", "ogUrl": "https://skaffold.dev/docs/references/deprecation/", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:title": "Deprecation Policy", "robots": "index, follow", "title": "Deprecation Policy | Skaffold", "language": "en", "generator": "Hugo 0.99.1", "ogDescription": "This document sets out the deprecation policy for Skaffold, and outlines how the Skaffold project will approach the introduction of breaking changes over time.\nDeprecation policy applies only to Stable Builds. Bleeding Edge builds may have less stable implementations.\nDeprecations to a flag or CLI command require the following notification periods, depending on the release track:\n   Release Track Deprecation Period     Alpha (experimental) 0 releases   Beta (pre-release) 3 months or 1 release (whichever is longer)   GA (generally available) 6 months or 1 release (whichever is longer)    Breaking changes A breaking change is when the primary functionality of a feature changes in a way that the user has to make changes to their workflows/configuration.", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:url": "https://skaffold.dev/docs/references/deprecation/", "scrapeId": "3554d367-3544-4df3-9ddc-0012fb874708", "sourceURL": "https://skaffold.dev/docs/references/deprecation", "url": "https://skaffold.dev/docs/references/deprecation/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I how do we deprecate things? in skaffold?\n\nAssistant: To how do we deprecate things? in skaffold, here's what you do:\nA “deprecation event” would coincide with a release.\n\n1. We document the deprecation in the following places if applicable:\n   1. deprecation policy - this document\n   2. [Document on this site](https://skaffold.dev/docs/) changes in relevant sections\n   3. [Release notes](https://github.com/GoogleContainerTools/skaffold/blob/main/CHANGELOG.md)\n   4. [Command help](https://skaffold.dev/docs/references/cli/)\n   5. Log messages\n   6. [skaffold yaml reference](https://skaffold.dev/docs/references/yaml/)\n2. if applicable, [inspired by the Kubernetes policy](https://kubernetes.io/docs/reference/using-api/deprecation-policy/#deprecating-a-flag-or-cli):\n\n> Rule #6: Deprecated CLI elements must emit warnings (optionally disable) when used..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/deprecation", "title": "Deprecation Policy", "description": "This document sets out the deprecation policy for Skaffold, and outlines how the Skaffold project will approach the introduction of breaking changes over time.", "has_code_examples": false, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 03:51:00", "type": "section_detail", "page_metadata": {"og:type": "article", "og:site_name": "Skaffold", "twitter:title": "Deprecation Policy", "twitter:description": "This document sets out the deprecation policy for Skaffold, and outlines how the Skaffold project will approach the introduction of breaking changes over time.\nDeprecation policy applies only to Stable Builds. Bleeding Edge builds may have less stable implementations.\nDeprecations to a flag or CLI command require the following notification periods, depending on the release track:\n   Release Track Deprecation Period     Alpha (experimental) 0 releases   Beta (pre-release) 3 months or 1 release (whichever is longer)   GA (generally available) 6 months or 1 release (whichever is longer)    Breaking changes A breaking change is when the primary functionality of a feature changes in a way that the user has to make changes to their workflows/configuration.", "og:description": "This document sets out the deprecation policy for Skaffold, and outlines how the Skaffold project will approach the introduction of breaking changes over time.\nDeprecation policy applies only to Stable Builds. Bleeding Edge builds may have less stable implementations.\nDeprecations to a flag or CLI command require the following notification periods, depending on the release track:\n   Release Track Deprecation Period     Alpha (experimental) 0 releases   Beta (pre-release) 3 months or 1 release (whichever is longer)   GA (generally available) 6 months or 1 release (whichever is longer)    Breaking changes A breaking change is when the primary functionality of a feature changes in a way that the user has to make changes to their workflows/configuration.", "ogSiteName": "Skaffold", "description": "This document sets out the deprecation policy for Skaffold, and outlines how the Skaffold project will approach the introduction of breaking changes …", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "twitter:card": "summary", "ogTitle": "Deprecation Policy", "article:modified_time": "2025-01-23T10:14:58-05:00", "article:section": "docs", "ogUrl": "https://skaffold.dev/docs/references/deprecation/", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:title": "Deprecation Policy", "robots": "index, follow", "title": "Deprecation Policy | Skaffold", "language": "en", "generator": "Hugo 0.99.1", "ogDescription": "This document sets out the deprecation policy for Skaffold, and outlines how the Skaffold project will approach the introduction of breaking changes over time.\nDeprecation policy applies only to Stable Builds. Bleeding Edge builds may have less stable implementations.\nDeprecations to a flag or CLI command require the following notification periods, depending on the release track:\n   Release Track Deprecation Period     Alpha (experimental) 0 releases   Beta (pre-release) 3 months or 1 release (whichever is longer)   GA (generally available) 6 months or 1 release (whichever is longer)    Breaking changes A breaking change is when the primary functionality of a feature changes in a way that the user has to make changes to their workflows/configuration.", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:url": "https://skaffold.dev/docs/references/deprecation/", "scrapeId": "3554d367-3544-4df3-9ddc-0012fb874708", "sourceURL": "https://skaffold.dev/docs/references/deprecation", "url": "https://skaffold.dev/docs/references/deprecation/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I current maturity of skaffold in skaffold?\n\nAssistant: To current maturity of skaffold in skaffold, here's what you do:\nSkaffold and its features are considered GA unless specified (in this document, CLI reference, config YAML reference or in docs in skaffold.dev).\n\nSkaffold is constantly evolving with the tools space, we want to be able to experiment and sometimes change things.\nIn order to be transparent about the maturity of feature areas and things that might change we offer the feature level maturity matrix that we keep up to date..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/deprecation", "title": "Deprecation Policy", "description": "This document sets out the deprecation policy for Skaffold, and outlines how the Skaffold project will approach the introduction of breaking changes over time.", "has_code_examples": false, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 03:51:00", "type": "section_detail", "page_metadata": {"og:type": "article", "og:site_name": "Skaffold", "twitter:title": "Deprecation Policy", "twitter:description": "This document sets out the deprecation policy for Skaffold, and outlines how the Skaffold project will approach the introduction of breaking changes over time.\nDeprecation policy applies only to Stable Builds. Bleeding Edge builds may have less stable implementations.\nDeprecations to a flag or CLI command require the following notification periods, depending on the release track:\n   Release Track Deprecation Period     Alpha (experimental) 0 releases   Beta (pre-release) 3 months or 1 release (whichever is longer)   GA (generally available) 6 months or 1 release (whichever is longer)    Breaking changes A breaking change is when the primary functionality of a feature changes in a way that the user has to make changes to their workflows/configuration.", "og:description": "This document sets out the deprecation policy for Skaffold, and outlines how the Skaffold project will approach the introduction of breaking changes over time.\nDeprecation policy applies only to Stable Builds. Bleeding Edge builds may have less stable implementations.\nDeprecations to a flag or CLI command require the following notification periods, depending on the release track:\n   Release Track Deprecation Period     Alpha (experimental) 0 releases   Beta (pre-release) 3 months or 1 release (whichever is longer)   GA (generally available) 6 months or 1 release (whichever is longer)    Breaking changes A breaking change is when the primary functionality of a feature changes in a way that the user has to make changes to their workflows/configuration.", "ogSiteName": "Skaffold", "description": "This document sets out the deprecation policy for Skaffold, and outlines how the Skaffold project will approach the introduction of breaking changes …", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "twitter:card": "summary", "ogTitle": "Deprecation Policy", "article:modified_time": "2025-01-23T10:14:58-05:00", "article:section": "docs", "ogUrl": "https://skaffold.dev/docs/references/deprecation/", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:title": "Deprecation Policy", "robots": "index, follow", "title": "Deprecation Policy | Skaffold", "language": "en", "generator": "Hugo 0.99.1", "ogDescription": "This document sets out the deprecation policy for Skaffold, and outlines how the Skaffold project will approach the introduction of breaking changes over time.\nDeprecation policy applies only to Stable Builds. Bleeding Edge builds may have less stable implementations.\nDeprecations to a flag or CLI command require the following notification periods, depending on the release track:\n   Release Track Deprecation Period     Alpha (experimental) 0 releases   Beta (pre-release) 3 months or 1 release (whichever is longer)   GA (generally available) 6 months or 1 release (whichever is longer)    Breaking changes A breaking change is when the primary functionality of a feature changes in a way that the user has to make changes to their workflows/configuration.", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:url": "https://skaffold.dev/docs/references/deprecation/", "scrapeId": "3554d367-3544-4df3-9ddc-0012fb874708", "sourceURL": "https://skaffold.dev/docs/references/deprecation", "url": "https://skaffold.dev/docs/references/deprecation/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I skaffold.yaml (pipeline config) in skaffold?\n\nAssistant: To skaffold.yaml (pipeline config) in skaffold, here's what you do:\nYou can safely depend on the skaffold config with the assumption that skaffold will auto-upgrade to the latest version:\n\n- Removal and other non-upgradeable changes are subject to the deprecation policy for all (even new) features under the config.\n- Auto-upgradeable changes are not considered breaking changes..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/deprecation", "title": "Deprecation Policy", "description": "This document sets out the deprecation policy for Skaffold, and outlines how the Skaffold project will approach the introduction of breaking changes over time.", "has_code_examples": false, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 03:51:00", "type": "section_detail", "page_metadata": {"og:type": "article", "og:site_name": "Skaffold", "twitter:title": "Deprecation Policy", "twitter:description": "This document sets out the deprecation policy for Skaffold, and outlines how the Skaffold project will approach the introduction of breaking changes over time.\nDeprecation policy applies only to Stable Builds. Bleeding Edge builds may have less stable implementations.\nDeprecations to a flag or CLI command require the following notification periods, depending on the release track:\n   Release Track Deprecation Period     Alpha (experimental) 0 releases   Beta (pre-release) 3 months or 1 release (whichever is longer)   GA (generally available) 6 months or 1 release (whichever is longer)    Breaking changes A breaking change is when the primary functionality of a feature changes in a way that the user has to make changes to their workflows/configuration.", "og:description": "This document sets out the deprecation policy for Skaffold, and outlines how the Skaffold project will approach the introduction of breaking changes over time.\nDeprecation policy applies only to Stable Builds. Bleeding Edge builds may have less stable implementations.\nDeprecations to a flag or CLI command require the following notification periods, depending on the release track:\n   Release Track Deprecation Period     Alpha (experimental) 0 releases   Beta (pre-release) 3 months or 1 release (whichever is longer)   GA (generally available) 6 months or 1 release (whichever is longer)    Breaking changes A breaking change is when the primary functionality of a feature changes in a way that the user has to make changes to their workflows/configuration.", "ogSiteName": "Skaffold", "description": "This document sets out the deprecation policy for Skaffold, and outlines how the Skaffold project will approach the introduction of breaking changes …", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "twitter:card": "summary", "ogTitle": "Deprecation Policy", "article:modified_time": "2025-01-23T10:14:58-05:00", "article:section": "docs", "ogUrl": "https://skaffold.dev/docs/references/deprecation/", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:title": "Deprecation Policy", "robots": "index, follow", "title": "Deprecation Policy | Skaffold", "language": "en", "generator": "Hugo 0.99.1", "ogDescription": "This document sets out the deprecation policy for Skaffold, and outlines how the Skaffold project will approach the introduction of breaking changes over time.\nDeprecation policy applies only to Stable Builds. Bleeding Edge builds may have less stable implementations.\nDeprecations to a flag or CLI command require the following notification periods, depending on the release track:\n   Release Track Deprecation Period     Alpha (experimental) 0 releases   Beta (pre-release) 3 months or 1 release (whichever is longer)   GA (generally available) 6 months or 1 release (whichever is longer)    Breaking changes A breaking change is when the primary functionality of a feature changes in a way that the user has to make changes to their workflows/configuration.", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:url": "https://skaffold.dev/docs/references/deprecation/", "scrapeId": "3554d367-3544-4df3-9ddc-0012fb874708", "sourceURL": "https://skaffold.dev/docs/references/deprecation", "url": "https://skaffold.dev/docs/references/deprecation/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I skaffold features in skaffold?\n\nAssistant: To skaffold features in skaffold, here's what you do:\nWe are committed to design for auto-upgradeable changes in the config.\nHowever the **behavior** of individual component might suffer breaking changes depending on maturity.\n\nThe following is the maturity of the larger feature areas:\n\n| area | maturity | description |\n| --- | --- | --- |\n| [Skaffold API](https://skaffold.dev/docs/design/api) | beta | Control API, Event API and State API |\n| [Build](https://skaffold.dev/docs/builders/) | GA | Build images based on multiple build tools in a configurable way |\n| [Cleanup](https://skaffold.dev/docs/cleanup) | GA | `skaffold delete` removes everything deployed `skaffold run` from the cluster, and prunes locally |\n| [Completion](https://skaffold.dev/docs/references/deprecation/) | GA | generate completion scripts for bash, zsh |\n| [Debug](https://skaffold.dev/docs/workflows/debug) | GA | Language-aware reconfiguration of containers on the fly to become debuggable |\n| [Default-repo](https://skaffold.dev/docs/environment/image-registries/) | GA | specify a default image repository & rewrite image names to default repo |\n| [Deploy](https://skaffold.dev/docs/deployers) | beta | Deploy a set of deployables as your applications and replace the image name with the built images |\n| [Dev](https://skaffold.dev/docs/workflows/dev) | GA | Continuous development |\n| [skaffold fix](https://skaffold.dev/docs/references/deprecation/) | beta | Upgrade an older skaffold config to the current version |\n| [Generate tekton pipelines](https://skaffold.dev/docs/references/deprecation/) | alpha | User can generate a starter tekton pipeline using skaffold |\n| [Global config](https://skaffold.dev/docs/design/global-config/) | GA | store user preferences in a separate preferences file |\n| [Lifecycle Hooks](https://skaffold.dev/docs/lifecycle-hooks/) | beta | Run code triggered by different events during the skaffold process lifecycle. |\n| [Init](https://skaffold.dev/docs/init) | beta | Initialize a skaffold.yaml file based on the contents of the current directory |\n| [Insecure registry handling](https://skaffold.dev/docs/environment/image-registries/#insecure-image-registries) | GA | Target registries for built images which are not secure |\n| [Log tailing](https://skaffold.dev/docs/log-tailing) | GA | automated log tailing of deployed pods |\n| [Port-forwarding](https://skaffold.dev/docs/port-forwarding/) | GA | Port forward application to localhost |\n| [Profiles](https://skaffold.dev/docs/environment/profiles/) | GA | Create different pipeline configurations based on overrides and patches defined in one or more profiles |\n| [Render](https://skaffold.dev/docs/renderers) | beta | Renders a set of resources in your applications and replace the image name with the built images |\n| [skaffold run](https://skaffold.dev/docs/workflows/ci-cd) | GA | One-off build & deployment of the skaffold application |\n| [Filesync](https://skaffold.dev/docs/filesync) | GA | Instead of rebuilding, copy the changed files in the running container |\n| [Tagpolicy](https://skaffold.dev/docs/taggers) | GA | Automated tagging |\n| [Templating](https://skaffold.dev/docs/environment/templating/) | GA | certain fields of skaffold.yaml can be parametrized with environment and built-in variables |\n| [Test](https://skaffold.dev/docs/testers) | GA | Run tests as part of your pipeline |\n| [Test](https://skaffold.dev/docs/testers/structure) | GA | Run structure tests as part of your pipeline |\n| [Trigger](https://skaffold.dev/docs/references/deprecation/) | GA | Feature area: Trigger configured actions when source files change |\n| [skaffold verify](https://skaffold.dev/docs/references/deprecation/) | GA | User can run post deployment tests via skaffold monitored test containers |\n| [version](https://skaffold.dev/docs/references/deprecation/) | GA | get the version string of the current skaffold binary |.\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/deprecation", "title": "Deprecation Policy", "description": "This document sets out the deprecation policy for Skaffold, and outlines how the Skaffold project will approach the introduction of breaking changes over time.", "has_code_examples": false, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 03:51:00", "type": "section_detail", "page_metadata": {"og:type": "article", "og:site_name": "Skaffold", "twitter:title": "Deprecation Policy", "twitter:description": "This document sets out the deprecation policy for Skaffold, and outlines how the Skaffold project will approach the introduction of breaking changes over time.\nDeprecation policy applies only to Stable Builds. Bleeding Edge builds may have less stable implementations.\nDeprecations to a flag or CLI command require the following notification periods, depending on the release track:\n   Release Track Deprecation Period     Alpha (experimental) 0 releases   Beta (pre-release) 3 months or 1 release (whichever is longer)   GA (generally available) 6 months or 1 release (whichever is longer)    Breaking changes A breaking change is when the primary functionality of a feature changes in a way that the user has to make changes to their workflows/configuration.", "og:description": "This document sets out the deprecation policy for Skaffold, and outlines how the Skaffold project will approach the introduction of breaking changes over time.\nDeprecation policy applies only to Stable Builds. Bleeding Edge builds may have less stable implementations.\nDeprecations to a flag or CLI command require the following notification periods, depending on the release track:\n   Release Track Deprecation Period     Alpha (experimental) 0 releases   Beta (pre-release) 3 months or 1 release (whichever is longer)   GA (generally available) 6 months or 1 release (whichever is longer)    Breaking changes A breaking change is when the primary functionality of a feature changes in a way that the user has to make changes to their workflows/configuration.", "ogSiteName": "Skaffold", "description": "This document sets out the deprecation policy for Skaffold, and outlines how the Skaffold project will approach the introduction of breaking changes …", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "twitter:card": "summary", "ogTitle": "Deprecation Policy", "article:modified_time": "2025-01-23T10:14:58-05:00", "article:section": "docs", "ogUrl": "https://skaffold.dev/docs/references/deprecation/", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:title": "Deprecation Policy", "robots": "index, follow", "title": "Deprecation Policy | Skaffold", "language": "en", "generator": "Hugo 0.99.1", "ogDescription": "This document sets out the deprecation policy for Skaffold, and outlines how the Skaffold project will approach the introduction of breaking changes over time.\nDeprecation policy applies only to Stable Builds. Bleeding Edge builds may have less stable implementations.\nDeprecations to a flag or CLI command require the following notification periods, depending on the release track:\n   Release Track Deprecation Period     Alpha (experimental) 0 releases   Beta (pre-release) 3 months or 1 release (whichever is longer)   GA (generally available) 6 months or 1 release (whichever is longer)    Breaking changes A breaking change is when the primary functionality of a feature changes in a way that the user has to make changes to their workflows/configuration.", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:url": "https://skaffold.dev/docs/references/deprecation/", "scrapeId": "3554d367-3544-4df3-9ddc-0012fb874708", "sourceURL": "https://skaffold.dev/docs/references/deprecation", "url": "https://skaffold.dev/docs/references/deprecation/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I exceptions in skaffold?\n\nAssistant: To exceptions in skaffold, here's what you do:\nNo policy can cover every possible situation.\nThis policy is a living document, and will evolve over time.\nIn practice, there will be situations that do not fit neatly into this policy, or for which this policy becomes a serious impediment.\nExamples could be getting fixes fast for a serious vulnerability, a destructive bug or requirements that might be imposed by third parties (such as legal requirements).\nSuch situations should be discussed on the given bugs / feature requests and during Skaffold Office Hours, always bearing in mind that Skaffold is committed to being a stable system that, as much as possible, never breaks users.\nExceptions will always be announced in all relevant release notes..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/deprecation", "title": "Deprecation Policy", "description": "This document sets out the deprecation policy for Skaffold, and outlines how the Skaffold project will approach the introduction of breaking changes over time.", "has_code_examples": false, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 03:51:00", "type": "section_detail", "page_metadata": {"og:type": "article", "og:site_name": "Skaffold", "twitter:title": "Deprecation Policy", "twitter:description": "This document sets out the deprecation policy for Skaffold, and outlines how the Skaffold project will approach the introduction of breaking changes over time.\nDeprecation policy applies only to Stable Builds. Bleeding Edge builds may have less stable implementations.\nDeprecations to a flag or CLI command require the following notification periods, depending on the release track:\n   Release Track Deprecation Period     Alpha (experimental) 0 releases   Beta (pre-release) 3 months or 1 release (whichever is longer)   GA (generally available) 6 months or 1 release (whichever is longer)    Breaking changes A breaking change is when the primary functionality of a feature changes in a way that the user has to make changes to their workflows/configuration.", "og:description": "This document sets out the deprecation policy for Skaffold, and outlines how the Skaffold project will approach the introduction of breaking changes over time.\nDeprecation policy applies only to Stable Builds. Bleeding Edge builds may have less stable implementations.\nDeprecations to a flag or CLI command require the following notification periods, depending on the release track:\n   Release Track Deprecation Period     Alpha (experimental) 0 releases   Beta (pre-release) 3 months or 1 release (whichever is longer)   GA (generally available) 6 months or 1 release (whichever is longer)    Breaking changes A breaking change is when the primary functionality of a feature changes in a way that the user has to make changes to their workflows/configuration.", "ogSiteName": "Skaffold", "description": "This document sets out the deprecation policy for Skaffold, and outlines how the Skaffold project will approach the introduction of breaking changes …", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "twitter:card": "summary", "ogTitle": "Deprecation Policy", "article:modified_time": "2025-01-23T10:14:58-05:00", "article:section": "docs", "ogUrl": "https://skaffold.dev/docs/references/deprecation/", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:title": "Deprecation Policy", "robots": "index, follow", "title": "Deprecation Policy | Skaffold", "language": "en", "generator": "Hugo 0.99.1", "ogDescription": "This document sets out the deprecation policy for Skaffold, and outlines how the Skaffold project will approach the introduction of breaking changes over time.\nDeprecation policy applies only to Stable Builds. Bleeding Edge builds may have less stable implementations.\nDeprecations to a flag or CLI command require the following notification periods, depending on the release track:\n   Release Track Deprecation Period     Alpha (experimental) 0 releases   Beta (pre-release) 3 months or 1 release (whichever is longer)   GA (generally available) 6 months or 1 release (whichever is longer)    Breaking changes A breaking change is when the primary functionality of a feature changes in a way that the user has to make changes to their workflows/configuration.", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:url": "https://skaffold.dev/docs/references/deprecation/", "scrapeId": "3554d367-3544-4df3-9ddc-0012fb874708", "sourceURL": "https://skaffold.dev/docs/references/deprecation", "url": "https://skaffold.dev/docs/references/deprecation/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I current deprecation notices in skaffold?\n\nAssistant: To current deprecation notices in skaffold, here's what you do:\n04/07/2021: Release v1.22.0 deprecates the `--render-only` and `--render-output` flags from `skaffold run` and `skaffold dev`, in favor of simply using the `skaffold render` command directly.\n05/05/2021: Release v1.23.0 deprecates the `--add-skaffold-labels` flag from `skaffold render`, and implicitly deprecates the addition of Skaffold-internal labels to any Kubernetes resources hydrated by Skaffold through `skaffold render`..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/deprecation", "title": "Deprecation Policy", "description": "This document sets out the deprecation policy for Skaffold, and outlines how the Skaffold project will approach the introduction of breaking changes over time.", "has_code_examples": false, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 03:51:00", "type": "section_detail", "page_metadata": {"og:type": "article", "og:site_name": "Skaffold", "twitter:title": "Deprecation Policy", "twitter:description": "This document sets out the deprecation policy for Skaffold, and outlines how the Skaffold project will approach the introduction of breaking changes over time.\nDeprecation policy applies only to Stable Builds. Bleeding Edge builds may have less stable implementations.\nDeprecations to a flag or CLI command require the following notification periods, depending on the release track:\n   Release Track Deprecation Period     Alpha (experimental) 0 releases   Beta (pre-release) 3 months or 1 release (whichever is longer)   GA (generally available) 6 months or 1 release (whichever is longer)    Breaking changes A breaking change is when the primary functionality of a feature changes in a way that the user has to make changes to their workflows/configuration.", "og:description": "This document sets out the deprecation policy for Skaffold, and outlines how the Skaffold project will approach the introduction of breaking changes over time.\nDeprecation policy applies only to Stable Builds. Bleeding Edge builds may have less stable implementations.\nDeprecations to a flag or CLI command require the following notification periods, depending on the release track:\n   Release Track Deprecation Period     Alpha (experimental) 0 releases   Beta (pre-release) 3 months or 1 release (whichever is longer)   GA (generally available) 6 months or 1 release (whichever is longer)    Breaking changes A breaking change is when the primary functionality of a feature changes in a way that the user has to make changes to their workflows/configuration.", "ogSiteName": "Skaffold", "description": "This document sets out the deprecation policy for Skaffold, and outlines how the Skaffold project will approach the introduction of breaking changes …", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "twitter:card": "summary", "ogTitle": "Deprecation Policy", "article:modified_time": "2025-01-23T10:14:58-05:00", "article:section": "docs", "ogUrl": "https://skaffold.dev/docs/references/deprecation/", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:title": "Deprecation Policy", "robots": "index, follow", "title": "Deprecation Policy | Skaffold", "language": "en", "generator": "Hugo 0.99.1", "ogDescription": "This document sets out the deprecation policy for Skaffold, and outlines how the Skaffold project will approach the introduction of breaking changes over time.\nDeprecation policy applies only to Stable Builds. Bleeding Edge builds may have less stable implementations.\nDeprecations to a flag or CLI command require the following notification periods, depending on the release track:\n   Release Track Deprecation Period     Alpha (experimental) 0 releases   Beta (pre-release) 3 months or 1 release (whichever is longer)   GA (generally available) 6 months or 1 release (whichever is longer)    Breaking changes A breaking change is when the primary functionality of a feature changes in a way that the user has to make changes to their workflows/configuration.", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:url": "https://skaffold.dev/docs/references/deprecation/", "scrapeId": "3554d367-3544-4df3-9ddc-0012fb874708", "sourceURL": "https://skaffold.dev/docs/references/deprecation", "url": "https://skaffold.dev/docs/references/deprecation/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I past deprecation notices in skaffold?\n\nAssistant: To past deprecation notices in skaffold, here's what you do:\n10/21/2019: With release v0.41.0 we mark for deprecation the `$IMAGES` environment variable passed to custom builders. Variable `$IMAGE` should be used instead.\n**This environment variable flag was removed in version v1.22.0.**\n03/15/2019: With release v0.25.0 we mark for deprecation the `flags` field in kaniko ( `KanikoArtifact.AdditionalFlags`), instead Kaniko’s additional flags will now be represented as unique fields under `kaniko` per artifact ( `KanikoArtifact` type).\n**This field was removed in version 1.0.0.**\n02/15/2019: With release v0.23.0 we mark for deprecation the following env variables in the `envTemplate` tagger:\n- `DIGEST`\n- `DIGEST_ALGO`\n- `DIGEST_HEX`\nCurrently these variables resolve to `_DEPRECATED_<envvar>_`, and the new tagging mechanism adds a digest to the image name thus it shouldn’t break existing configurations.\n**This compatibility behavior was removed in version v1.22.0.**\nLast modified January 23, 2025: [release: v2.14.0 (#9668) (f132ab25)](https://github.com/GoogleContainerTools/skaffold/commit/f132ab25adf1599c7fbdce733144991126565386).\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/deprecation", "title": "Deprecation Policy", "description": "This document sets out the deprecation policy for Skaffold, and outlines how the Skaffold project will approach the introduction of breaking changes over time.", "has_code_examples": false, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 03:51:00", "type": "section_detail", "page_metadata": {"og:type": "article", "og:site_name": "Skaffold", "twitter:title": "Deprecation Policy", "twitter:description": "This document sets out the deprecation policy for Skaffold, and outlines how the Skaffold project will approach the introduction of breaking changes over time.\nDeprecation policy applies only to Stable Builds. Bleeding Edge builds may have less stable implementations.\nDeprecations to a flag or CLI command require the following notification periods, depending on the release track:\n   Release Track Deprecation Period     Alpha (experimental) 0 releases   Beta (pre-release) 3 months or 1 release (whichever is longer)   GA (generally available) 6 months or 1 release (whichever is longer)    Breaking changes A breaking change is when the primary functionality of a feature changes in a way that the user has to make changes to their workflows/configuration.", "og:description": "This document sets out the deprecation policy for Skaffold, and outlines how the Skaffold project will approach the introduction of breaking changes over time.\nDeprecation policy applies only to Stable Builds. Bleeding Edge builds may have less stable implementations.\nDeprecations to a flag or CLI command require the following notification periods, depending on the release track:\n   Release Track Deprecation Period     Alpha (experimental) 0 releases   Beta (pre-release) 3 months or 1 release (whichever is longer)   GA (generally available) 6 months or 1 release (whichever is longer)    Breaking changes A breaking change is when the primary functionality of a feature changes in a way that the user has to make changes to their workflows/configuration.", "ogSiteName": "Skaffold", "description": "This document sets out the deprecation policy for Skaffold, and outlines how the Skaffold project will approach the introduction of breaking changes …", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "twitter:card": "summary", "ogTitle": "Deprecation Policy", "article:modified_time": "2025-01-23T10:14:58-05:00", "article:section": "docs", "ogUrl": "https://skaffold.dev/docs/references/deprecation/", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:title": "Deprecation Policy", "robots": "index, follow", "title": "Deprecation Policy | Skaffold", "language": "en", "generator": "Hugo 0.99.1", "ogDescription": "This document sets out the deprecation policy for Skaffold, and outlines how the Skaffold project will approach the introduction of breaking changes over time.\nDeprecation policy applies only to Stable Builds. Bleeding Edge builds may have less stable implementations.\nDeprecations to a flag or CLI command require the following notification periods, depending on the release track:\n   Release Track Deprecation Period     Alpha (experimental) 0 releases   Beta (pre-release) 3 months or 1 release (whichever is longer)   GA (generally available) 6 months or 1 release (whichever is longer)    Breaking changes A breaking change is when the primary functionality of a feature changes in a way that the user has to make changes to their workflows/configuration.", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:url": "https://skaffold.dev/docs/references/deprecation/", "scrapeId": "3554d367-3544-4df3-9ddc-0012fb874708", "sourceURL": "https://skaffold.dev/docs/references/deprecation", "url": "https://skaffold.dev/docs/references/deprecation/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: What are some tips for using Deprecation Policy in skaffold effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nDeprecation policy applies only to Stable Builds. Bleeding Edge builds may have less stable implementations.\n\nA breaking change is when the primary functionality of a feature changes in a way that the user has to make changes to their workflows/configuration.\n\nDeprecations to a flag or CLI command require notification periods depending on the release track.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://skaffold.dev/docs/references/deprecation", "title": "Deprecation Policy", "description": "This document sets out the deprecation policy for Skaffold, and outlines how the Skaffold project will approach the introduction of breaking changes over time.", "has_code_examples": false, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 03:51:00", "type": "best_practices", "page_metadata": {"og:type": "article", "og:site_name": "Skaffold", "twitter:title": "Deprecation Policy", "twitter:description": "This document sets out the deprecation policy for Skaffold, and outlines how the Skaffold project will approach the introduction of breaking changes over time.\nDeprecation policy applies only to Stable Builds. Bleeding Edge builds may have less stable implementations.\nDeprecations to a flag or CLI command require the following notification periods, depending on the release track:\n   Release Track Deprecation Period     Alpha (experimental) 0 releases   Beta (pre-release) 3 months or 1 release (whichever is longer)   GA (generally available) 6 months or 1 release (whichever is longer)    Breaking changes A breaking change is when the primary functionality of a feature changes in a way that the user has to make changes to their workflows/configuration.", "og:description": "This document sets out the deprecation policy for Skaffold, and outlines how the Skaffold project will approach the introduction of breaking changes over time.\nDeprecation policy applies only to Stable Builds. Bleeding Edge builds may have less stable implementations.\nDeprecations to a flag or CLI command require the following notification periods, depending on the release track:\n   Release Track Deprecation Period     Alpha (experimental) 0 releases   Beta (pre-release) 3 months or 1 release (whichever is longer)   GA (generally available) 6 months or 1 release (whichever is longer)    Breaking changes A breaking change is when the primary functionality of a feature changes in a way that the user has to make changes to their workflows/configuration.", "ogSiteName": "Skaffold", "description": "This document sets out the deprecation policy for Skaffold, and outlines how the Skaffold project will approach the introduction of breaking changes …", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "twitter:card": "summary", "ogTitle": "Deprecation Policy", "article:modified_time": "2025-01-23T10:14:58-05:00", "article:section": "docs", "ogUrl": "https://skaffold.dev/docs/references/deprecation/", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:title": "Deprecation Policy", "robots": "index, follow", "title": "Deprecation Policy | Skaffold", "language": "en", "generator": "Hugo 0.99.1", "ogDescription": "This document sets out the deprecation policy for Skaffold, and outlines how the Skaffold project will approach the introduction of breaking changes over time.\nDeprecation policy applies only to Stable Builds. Bleeding Edge builds may have less stable implementations.\nDeprecations to a flag or CLI command require the following notification periods, depending on the release track:\n   Release Track Deprecation Period     Alpha (experimental) 0 releases   Beta (pre-release) 3 months or 1 release (whichever is longer)   GA (generally available) 6 months or 1 release (whichever is longer)    Breaking changes A breaking change is when the primary functionality of a feature changes in a way that the user has to make changes to their workflows/configuration.", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:url": "https://skaffold.dev/docs/references/deprecation/", "scrapeId": "3554d367-3544-4df3-9ddc-0012fb874708", "sourceURL": "https://skaffold.dev/docs/references/deprecation", "url": "https://skaffold.dev/docs/references/deprecation/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what Google Cloud Run [NEW] beta is in skaffold?\n\nAssistant: Sure, I'd be happy to explain Google Cloud Run [NEW] beta in skaffold.\n\n# Google Cloud Run [NEW] beta\n\nThis feature is currently experimental and subject to change. Not all Skaffold features are supported, for example `debug` is currently not supported in Cloud Run (but is on our roadmap).Here's a quick rundown of what this is about:\n\n## Deploying applications to Cloud Run\n\nSkaffold can deploy Services and Jobs to Cloud Run. If this deployer is used, all provided manifests must be valid Cloud Run services, using the `serving.knative.dev/v1` schema, or valid Cloud Run jobs. See the Cloud Run YAML reference for supported fields.\n\n## Environment setup\n\nIn order to use this deployer you’ll need to configure some tools first.\n\nThe deployer uses the `gcloud` CLI to perform its tasks, so be sure it is installed in your environment. It will use the application default credentials to deploy. You can configure this to use your user credentials by running:\n\n```bash\ngcloud auth application-default login\n```\n\nTo enable Log streaming and Port forwarding some extra components are needed from `gcloud`. To install them run the following comand in your terminal:\n\n```bash\ngcloud components install --quiet \\n    alpha \\n    beta \\n    log-streaming \\n    cloud-run-proxy\n```\n\nFrom the previous command, `alpha` and `log-streaming` components are needed for Log streaming, `beta` and `cloud-run-proxy` components are needed for Port forwarding.\n\n## Features\n\nWith Skaffold you can deploy Cloud Run Services and Jobs just referencing them from the `skaffold.yaml` file. The following example illustrates a project using the Cloud Run deployer:\n\nWith the following project folder structure:\n\n```yaml\nresources/\n  cloud-run-service.yaml\n  cloud-run-job.yaml\nskaffold.yaml\n```\n\n`cloud-run-service.yaml` content:\n\n```yaml\napiVersion: serving.knative.dev/v1\nkind: Service\nmetadata:\n  name: cloud-run-service-name # this service will be created in Cloud Run via Skaffold\nspec:\n  template:\n    spec:\n      containers:\n      - image: gcr.io/cloudrun/hello\n```\n\n`cloud-run-job.yaml` content:\n\n```yaml\napiVersion: run.googleapis.com/v1\nkind: Job\nmetadata:\n  name: cloud-run-job-name # this job will be created in Cloud Run via Skaffold\n  annotations:\n    run.googleapis.com/launch-stage: BETA\nspec:\n  template:\n    spec:\n      template:\n        spec:\n          containers:\n          - image: us-docker.pkg.dev/cloudrun/container/job\n```\n\n`skaffold.yaml` content:\n\n```yaml\napiVersion: skaffold/v4beta2\nkind: Config\n\nmanifests:\n  rawYaml:\n    - resources/*\n\ndeploy:\n  cloudrun:\n    projectid: YOUR-GCP-PROJECT\n    region: GCP-REGION\n```\n\nRunning `skaffold run` will deploy one Cloud Run service, and one Cloud Run job in the `YOUR-GCP-PROJECT` project, inside the given `GCP-REGION`.\n\n## Port forwarding\n\nSkaffold will manage automatically the necessary configuration to open the deployed Cloud Run services URLs locally, even if they are private services, using the Cloud Run proxy and Skaffold’s Port Forwarding. To enable this, you will have to either add the `--port-forward` flag running Skaffold, or add a `portForward` stanza in your `skaffold.yaml` file. From the previous example, running `skaffold dev --port-forward` will result in the following output:\n\n```\n...\nDeploying Cloud Run service:\n         cloud-run-job-name\nDeploying Cloud Run service:\n         cloud-run-service-name\nCloud Run Job cloud-run-job-name finished: Job started. 1/2 deployment(s) still pending\ncloud-run-service-name: Service starting: Deploying Revision. Waiting on revision cloud-run-service-name-2246v.\ncloud-run-service-name: Service starting: Deploying Revision. Waiting on revision cloud-run-service-name-2246v.\nCloud Run Service cloud-run-service-name finished: Service started. 0/2 deployment(s) still pending\nForwarding service projects/<YOUR-GCP-PROJECT>/locations/<GCP-REGION>/services/cloud-run-service-name to local port 8080\n...\n```\n\nHere you’ll see the port to use to access the deployed Cloud Run service, in this case you can access it through `localhost:8080`. If you need to change the local port used, you’ll need to add a `portForward` stanza:\n\nUsing the previous example, changing `skaffold.yaml` to:\n\n```yaml\napiVersion: skaffold/v4beta2\nkind: Config\n\nmanifests:\n  rawYaml:\n    - resources/*\n\ndeploy:\n  cloudrun:\n    projectid: YOUR-GCP-PROJECT\n    region: GCP-REGION\n\n# Added to change local port used\nportForward:\n  - resourceType: service\n    resourceName: cloud-run-service-name\n    localPort: 9001\n```\n\nRunning `skaffold dev --port-forward`, will result in:\n\n```\n...\nForwarding service projects/<YOUR-GCP-PROJECT>/locations/<GCP-REGION>/services/cloud-run-service-name to local port 9001\n...\n```\n\nNow you will be able to access the deployed service through `localhost:9001`.\n\n## Log streaming\n\nWhen doing local development, Skaffold will log stream to your console the output from the Cloud Run services deployed. From the previous example, running `skaffold dev --port-forward` or `skaffold run --tail --port-forward` in your terminal, you will see the following output:\n\n```\n...\nCloud Run Service cloud-run-service-name finished: Service started. 0/2 deployment(s) still pending\nForwarding service projects/<YOUR-GCP-PROJECT>/locations/<GCP-REGION>/services/cloud-run-service-name to local port 9001\nNo artifacts found to watch\nPress Ctrl+C to exit\nWatching for changes...\n[cloud-run-service-name] streaming logs from <YOUR-GCP-PROJECT>\n...\n```\n\nNow Skaffold is log streaming the output from the service. If you access it through `localhost:9001`, you’ll see the logs:\n\n```\n...\n[cloud-run-service-name] streaming logs from renzo-friction-log-cloud-run\n[cloud-run-service-name] 2023-01-27 00:52:22 2023/01/27 00:52:22 Hello from Cloud Run! The container started successfully and is listening for HTTP requests on $PORT\n[cloud-run-service-name] 2023-01-27 00:52:22 GET 200 https://cloud-run-service-name-6u2evvstna-uc.a.run.app/\n```\n\n## Configuring Cloud Run\n\nTo deploy to Cloud Run, use the `cloudrun` type in the `deploy` section, together with `manifests.rawYaml` stanza of `skaffold.yaml`.\n\nThe `cloudrun` type offers the following options:\n\n| Option | Description |\n| --- | --- |\n| `projectid` | the GCP Project to use for Cloud Run. If specified, all Services will be deployed to this project. If not specified, each Service will be deployed to the project specified in `metadata.namespace` of the Cloud Run manifest. |\n| `region` | GCP location to use for the Cloud Run Deploy. Must be one of the regions listed in https://cloud.google.com/run/docs/locations. |\n| `hooks` | describes a set of lifecycle host hooks that are executed before and after the Cloud Run deployer.\n\n## Example\n\nThe following `deploy` section instructs Skaffold to deploy the artifacts under `manifests.rawYaml` to Cloud Run:\n\n```yaml\nmanifests:\n  rawYaml: # Here should be the list of all the Cloud Run Services and Jobs to deploy\n    - cloud-run-service.yaml\n\ndeploy:\n  cloudrun:\n    projectid: my-gcp-project\n    region: us-central1\n```\n\n## Cloud Run deployer + Skaffold Local build\n\nWith Skaffold you can configure your project to locally build your images and deploy them to Cloud Run. The following example demonstrates how to set up Skaffold for this:\n\nWith the following project folder structure:\n\n```yaml\nresources/\n  service.yaml\nskaffold.yaml\nDockerfile\n```\n\n`skaffold.yaml` file content:\n\n```yaml\napiVersion: skaffold/v4beta6\nkind: Config\n\nbuild:\n  local:\n    push: true # <- We need to push the images so Cloud Run can deploy them\n\n  platforms: [\"linux/amd64\"] # <- Specific platform supported by Cloud Run\n\n  artifacts:\n    - image: my-img # <- Should match the image name in the Cloud Run service.yaml\n      docker:\n        dockerfile: ./Dockerfile\n\nmanifests:\n  rawYaml:\n    - resources/service.yaml\n\ndeploy:\n  cloudrun:\n    projectid: YOUR-GCP-PROJECT\n    region: GCP-REGION\n```\n\n`resources/service.yaml` file content:\n\n```yaml\napiVersion: serving.knative.dev/v1\nkind: Service\nmetadata:\n  name: cloud-run-service\nspec:\n  template:\n    spec:\n      containers:\n      - image: my-img # <- Same image name from skaffold.yaml file\n```\n\nA simple `Dockerfile` file:\n\n```docker\nFROM gcr.io/cloudrun/hello\n```\n\nRunning a Skaffold command like `skaffold run --default-repo=gcr.io/your-registry` will build your local images, push them to the specified registry, and deploy them to Cloud Run. Please notice the following from the previous example:\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/deployers/cloudrun", "title": "Google Cloud Run [NEW] beta", "description": "This feature is currently experimental and subject to change. Not all Skaffold features are supported, for example `debug` is currently not supported in Cloud Run (but is on our roadmap).", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 03:52:45", "type": "overview", "page_metadata": {"ogTitle": "Google Cloud Run [NEW]", "article:section": "docs", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "ogUrl": "https://skaffold.dev/docs/deployers/cloudrun/", "ogSiteName": "Skaffold", "generator": "Hugo 0.99.1", "robots": "index, follow", "description": "\n\n\n    Note\n    This feature is currently experimental and subject to change. Not all Skaffold features are supported, for example debug is currently …", "og:description": "Note This feature is currently experimental and subject to change. Not all Skaffold features are supported, for example debug is currently not supported in Cloud Run (but is on our roadmap).  Cloud Run is a managed compute platform on Google Cloud that allows you to run containers on Google’s infrastructure. With Skaffold, now you are able to configure your dev loop to build, test, sync and use Cloud Run as the deployer for your images.", "twitter:title": "Google Cloud Run [NEW]", "language": "en", "og:type": "article", "og:title": "Google Cloud Run [NEW]", "og:url": "https://skaffold.dev/docs/deployers/cloudrun/", "twitter:description": "Note This feature is currently experimental and subject to change. Not all Skaffold features are supported, for example debug is currently not supported in Cloud Run (but is on our roadmap).  Cloud Run is a managed compute platform on Google Cloud that allows you to run containers on Google’s infrastructure. With Skaffold, now you are able to configure your dev loop to build, test, sync and use Cloud Run as the deployer for your images.", "ogDescription": "Note This feature is currently experimental and subject to change. Not all Skaffold features are supported, for example debug is currently not supported in Cloud Run (but is on our roadmap).  Cloud Run is a managed compute platform on Google Cloud that allows you to run containers on Google’s infrastructure. With Skaffold, now you are able to configure your dev loop to build, test, sync and use Cloud Run as the deployer for your images.", "modifiedTime": "2025-01-23T10:14:58-05:00", "article:modified_time": "2025-01-23T10:14:58-05:00", "twitter:card": "summary", "title": "Google Cloud Run [NEW] | Skaffold", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:site_name": "Skaffold", "scrapeId": "71d3ffdd-a4ce-435d-9c48-82a3416f99a6", "sourceURL": "https://skaffold.dev/docs/deployers/cloudrun", "url": "https://skaffold.dev/docs/deployers/cloudrun/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I deploying applications to cloud run in skaffold?\n\nAssistant: To deploying applications to cloud run in skaffold, here's what you do:\nSkaffold can deploy Services and Jobs to Cloud Run. If this deployer is used, all provided manifests must be valid Cloud Run services, using the `serving.knative.dev/v1` schema, or valid Cloud Run jobs. See the Cloud Run YAML reference for supported fields..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/deployers/cloudrun", "title": "Google Cloud Run [NEW] beta", "description": "This feature is currently experimental and subject to change. Not all Skaffold features are supported, for example `debug` is currently not supported in Cloud Run (but is on our roadmap).", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 03:52:45", "type": "section_detail", "page_metadata": {"ogTitle": "Google Cloud Run [NEW]", "article:section": "docs", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "ogUrl": "https://skaffold.dev/docs/deployers/cloudrun/", "ogSiteName": "Skaffold", "generator": "Hugo 0.99.1", "robots": "index, follow", "description": "\n\n\n    Note\n    This feature is currently experimental and subject to change. Not all Skaffold features are supported, for example debug is currently …", "og:description": "Note This feature is currently experimental and subject to change. Not all Skaffold features are supported, for example debug is currently not supported in Cloud Run (but is on our roadmap).  Cloud Run is a managed compute platform on Google Cloud that allows you to run containers on Google’s infrastructure. With Skaffold, now you are able to configure your dev loop to build, test, sync and use Cloud Run as the deployer for your images.", "twitter:title": "Google Cloud Run [NEW]", "language": "en", "og:type": "article", "og:title": "Google Cloud Run [NEW]", "og:url": "https://skaffold.dev/docs/deployers/cloudrun/", "twitter:description": "Note This feature is currently experimental and subject to change. Not all Skaffold features are supported, for example debug is currently not supported in Cloud Run (but is on our roadmap).  Cloud Run is a managed compute platform on Google Cloud that allows you to run containers on Google’s infrastructure. With Skaffold, now you are able to configure your dev loop to build, test, sync and use Cloud Run as the deployer for your images.", "ogDescription": "Note This feature is currently experimental and subject to change. Not all Skaffold features are supported, for example debug is currently not supported in Cloud Run (but is on our roadmap).  Cloud Run is a managed compute platform on Google Cloud that allows you to run containers on Google’s infrastructure. With Skaffold, now you are able to configure your dev loop to build, test, sync and use Cloud Run as the deployer for your images.", "modifiedTime": "2025-01-23T10:14:58-05:00", "article:modified_time": "2025-01-23T10:14:58-05:00", "twitter:card": "summary", "title": "Google Cloud Run [NEW] | Skaffold", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:site_name": "Skaffold", "scrapeId": "71d3ffdd-a4ce-435d-9c48-82a3416f99a6", "sourceURL": "https://skaffold.dev/docs/deployers/cloudrun", "url": "https://skaffold.dev/docs/deployers/cloudrun/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I environment setup in skaffold?\n\nAssistant: To environment setup in skaffold, here's what you do:\nIn order to use this deployer you’ll need to configure some tools first.\n\nThe deployer uses the `gcloud` CLI to perform its tasks, so be sure it is installed in your environment. It will use the application default credentials to deploy. You can configure this to use your user credentials by running:\n\n```bash\ngcloud auth application-default login\n```\n\nTo enable Log streaming and Port forwarding some extra components are needed from `gcloud`. To install them run the following comand in your terminal:\n\n```bash\ngcloud components install --quiet \\n    alpha \\n    beta \\n    log-streaming \\n    cloud-run-proxy\n```\n\nFrom the previous command, `alpha` and `log-streaming` components are needed for Log streaming, `beta` and `cloud-run-proxy` components are needed for Port forwarding..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/deployers/cloudrun", "title": "Google Cloud Run [NEW] beta", "description": "This feature is currently experimental and subject to change. Not all Skaffold features are supported, for example `debug` is currently not supported in Cloud Run (but is on our roadmap).", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 03:52:45", "type": "section_detail", "page_metadata": {"ogTitle": "Google Cloud Run [NEW]", "article:section": "docs", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "ogUrl": "https://skaffold.dev/docs/deployers/cloudrun/", "ogSiteName": "Skaffold", "generator": "Hugo 0.99.1", "robots": "index, follow", "description": "\n\n\n    Note\n    This feature is currently experimental and subject to change. Not all Skaffold features are supported, for example debug is currently …", "og:description": "Note This feature is currently experimental and subject to change. Not all Skaffold features are supported, for example debug is currently not supported in Cloud Run (but is on our roadmap).  Cloud Run is a managed compute platform on Google Cloud that allows you to run containers on Google’s infrastructure. With Skaffold, now you are able to configure your dev loop to build, test, sync and use Cloud Run as the deployer for your images.", "twitter:title": "Google Cloud Run [NEW]", "language": "en", "og:type": "article", "og:title": "Google Cloud Run [NEW]", "og:url": "https://skaffold.dev/docs/deployers/cloudrun/", "twitter:description": "Note This feature is currently experimental and subject to change. Not all Skaffold features are supported, for example debug is currently not supported in Cloud Run (but is on our roadmap).  Cloud Run is a managed compute platform on Google Cloud that allows you to run containers on Google’s infrastructure. With Skaffold, now you are able to configure your dev loop to build, test, sync and use Cloud Run as the deployer for your images.", "ogDescription": "Note This feature is currently experimental and subject to change. Not all Skaffold features are supported, for example debug is currently not supported in Cloud Run (but is on our roadmap).  Cloud Run is a managed compute platform on Google Cloud that allows you to run containers on Google’s infrastructure. With Skaffold, now you are able to configure your dev loop to build, test, sync and use Cloud Run as the deployer for your images.", "modifiedTime": "2025-01-23T10:14:58-05:00", "article:modified_time": "2025-01-23T10:14:58-05:00", "twitter:card": "summary", "title": "Google Cloud Run [NEW] | Skaffold", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:site_name": "Skaffold", "scrapeId": "71d3ffdd-a4ce-435d-9c48-82a3416f99a6", "sourceURL": "https://skaffold.dev/docs/deployers/cloudrun", "url": "https://skaffold.dev/docs/deployers/cloudrun/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I features in skaffold?\n\nAssistant: To features in skaffold, here's what you do:\nWith Skaffold you can deploy Cloud Run Services and Jobs just referencing them from the `skaffold.yaml` file. The following example illustrates a project using the Cloud Run deployer:\n\nWith the following project folder structure:\n\n```yaml\nresources/\n  cloud-run-service.yaml\n  cloud-run-job.yaml\nskaffold.yaml\n```\n\n`cloud-run-service.yaml` content:\n\n```yaml\napiVersion: serving.knative.dev/v1\nkind: Service\nmetadata:\n  name: cloud-run-service-name # this service will be created in Cloud Run via Skaffold\nspec:\n  template:\n    spec:\n      containers:\n      - image: gcr.io/cloudrun/hello\n```\n\n`cloud-run-job.yaml` content:\n\n```yaml\napiVersion: run.googleapis.com/v1\nkind: Job\nmetadata:\n  name: cloud-run-job-name # this job will be created in Cloud Run via Skaffold\n  annotations:\n    run.googleapis.com/launch-stage: BETA\nspec:\n  template:\n    spec:\n      template:\n        spec:\n          containers:\n          - image: us-docker.pkg.dev/cloudrun/container/job\n```\n\n`skaffold.yaml` content:\n\n```yaml\napiVersion: skaffold/v4beta2\nkind: Config\n\nmanifests:\n  rawYaml:\n    - resources/*\n\ndeploy:\n  cloudrun:\n    projectid: YOUR-GCP-PROJECT\n    region: GCP-REGION\n```\n\nRunning `skaffold run` will deploy one Cloud Run service, and one Cloud Run job in the `YOUR-GCP-PROJECT` project, inside the given `GCP-REGION`..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/deployers/cloudrun", "title": "Google Cloud Run [NEW] beta", "description": "This feature is currently experimental and subject to change. Not all Skaffold features are supported, for example `debug` is currently not supported in Cloud Run (but is on our roadmap).", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 03:52:45", "type": "section_detail", "page_metadata": {"ogTitle": "Google Cloud Run [NEW]", "article:section": "docs", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "ogUrl": "https://skaffold.dev/docs/deployers/cloudrun/", "ogSiteName": "Skaffold", "generator": "Hugo 0.99.1", "robots": "index, follow", "description": "\n\n\n    Note\n    This feature is currently experimental and subject to change. Not all Skaffold features are supported, for example debug is currently …", "og:description": "Note This feature is currently experimental and subject to change. Not all Skaffold features are supported, for example debug is currently not supported in Cloud Run (but is on our roadmap).  Cloud Run is a managed compute platform on Google Cloud that allows you to run containers on Google’s infrastructure. With Skaffold, now you are able to configure your dev loop to build, test, sync and use Cloud Run as the deployer for your images.", "twitter:title": "Google Cloud Run [NEW]", "language": "en", "og:type": "article", "og:title": "Google Cloud Run [NEW]", "og:url": "https://skaffold.dev/docs/deployers/cloudrun/", "twitter:description": "Note This feature is currently experimental and subject to change. Not all Skaffold features are supported, for example debug is currently not supported in Cloud Run (but is on our roadmap).  Cloud Run is a managed compute platform on Google Cloud that allows you to run containers on Google’s infrastructure. With Skaffold, now you are able to configure your dev loop to build, test, sync and use Cloud Run as the deployer for your images.", "ogDescription": "Note This feature is currently experimental and subject to change. Not all Skaffold features are supported, for example debug is currently not supported in Cloud Run (but is on our roadmap).  Cloud Run is a managed compute platform on Google Cloud that allows you to run containers on Google’s infrastructure. With Skaffold, now you are able to configure your dev loop to build, test, sync and use Cloud Run as the deployer for your images.", "modifiedTime": "2025-01-23T10:14:58-05:00", "article:modified_time": "2025-01-23T10:14:58-05:00", "twitter:card": "summary", "title": "Google Cloud Run [NEW] | Skaffold", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:site_name": "Skaffold", "scrapeId": "71d3ffdd-a4ce-435d-9c48-82a3416f99a6", "sourceURL": "https://skaffold.dev/docs/deployers/cloudrun", "url": "https://skaffold.dev/docs/deployers/cloudrun/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I port forwarding in skaffold?\n\nAssistant: To port forwarding in skaffold, here's what you do:\nSkaffold will manage automatically the necessary configuration to open the deployed Cloud Run services URLs locally, even if they are private services, using the Cloud Run proxy and Skaffold’s Port Forwarding. To enable this, you will have to either add the `--port-forward` flag running Skaffold, or add a `portForward` stanza in your `skaffold.yaml` file. From the previous example, running `skaffold dev --port-forward` will result in the following output:\n\n```\n...\nDeploying Cloud Run service:\n         cloud-run-job-name\nDeploying Cloud Run service:\n         cloud-run-service-name\nCloud Run Job cloud-run-job-name finished: Job started. 1/2 deployment(s) still pending\ncloud-run-service-name: Service starting: Deploying Revision. Waiting on revision cloud-run-service-name-2246v.\ncloud-run-service-name: Service starting: Deploying Revision. Waiting on revision cloud-run-service-name-2246v.\nCloud Run Service cloud-run-service-name finished: Service started. 0/2 deployment(s) still pending\nForwarding service projects/<YOUR-GCP-PROJECT>/locations/<GCP-REGION>/services/cloud-run-service-name to local port 8080\n...\n```\n\nHere you’ll see the port to use to access the deployed Cloud Run service, in this case you can access it through `localhost:8080`. If you need to change the local port used, you’ll need to add a `portForward` stanza:\n\nUsing the previous example, changing `skaffold.yaml` to:\n\n```yaml\napiVersion: skaffold/v4beta2\nkind: Config\n\nmanifests:\n  rawYaml:\n    - resources/*\n\ndeploy:\n  cloudrun:\n    projectid: YOUR-GCP-PROJECT\n    region: GCP-REGION\n\n# Added to change local port used\nportForward:\n  - resourceType: service\n    resourceName: cloud-run-service-name\n    localPort: 9001\n```\n\nRunning `skaffold dev --port-forward`, will result in:\n\n```\n...\nForwarding service projects/<YOUR-GCP-PROJECT>/locations/<GCP-REGION>/services/cloud-run-service-name to local port 9001\n...\n```\n\nNow you will be able to access the deployed service through `localhost:9001`..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/deployers/cloudrun", "title": "Google Cloud Run [NEW] beta", "description": "This feature is currently experimental and subject to change. Not all Skaffold features are supported, for example `debug` is currently not supported in Cloud Run (but is on our roadmap).", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 03:52:45", "type": "section_detail", "page_metadata": {"ogTitle": "Google Cloud Run [NEW]", "article:section": "docs", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "ogUrl": "https://skaffold.dev/docs/deployers/cloudrun/", "ogSiteName": "Skaffold", "generator": "Hugo 0.99.1", "robots": "index, follow", "description": "\n\n\n    Note\n    This feature is currently experimental and subject to change. Not all Skaffold features are supported, for example debug is currently …", "og:description": "Note This feature is currently experimental and subject to change. Not all Skaffold features are supported, for example debug is currently not supported in Cloud Run (but is on our roadmap).  Cloud Run is a managed compute platform on Google Cloud that allows you to run containers on Google’s infrastructure. With Skaffold, now you are able to configure your dev loop to build, test, sync and use Cloud Run as the deployer for your images.", "twitter:title": "Google Cloud Run [NEW]", "language": "en", "og:type": "article", "og:title": "Google Cloud Run [NEW]", "og:url": "https://skaffold.dev/docs/deployers/cloudrun/", "twitter:description": "Note This feature is currently experimental and subject to change. Not all Skaffold features are supported, for example debug is currently not supported in Cloud Run (but is on our roadmap).  Cloud Run is a managed compute platform on Google Cloud that allows you to run containers on Google’s infrastructure. With Skaffold, now you are able to configure your dev loop to build, test, sync and use Cloud Run as the deployer for your images.", "ogDescription": "Note This feature is currently experimental and subject to change. Not all Skaffold features are supported, for example debug is currently not supported in Cloud Run (but is on our roadmap).  Cloud Run is a managed compute platform on Google Cloud that allows you to run containers on Google’s infrastructure. With Skaffold, now you are able to configure your dev loop to build, test, sync and use Cloud Run as the deployer for your images.", "modifiedTime": "2025-01-23T10:14:58-05:00", "article:modified_time": "2025-01-23T10:14:58-05:00", "twitter:card": "summary", "title": "Google Cloud Run [NEW] | Skaffold", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:site_name": "Skaffold", "scrapeId": "71d3ffdd-a4ce-435d-9c48-82a3416f99a6", "sourceURL": "https://skaffold.dev/docs/deployers/cloudrun", "url": "https://skaffold.dev/docs/deployers/cloudrun/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I log streaming in skaffold?\n\nAssistant: To log streaming in skaffold, here's what you do:\nWhen doing local development, Skaffold will log stream to your console the output from the Cloud Run services deployed. From the previous example, running `skaffold dev --port-forward` or `skaffold run --tail --port-forward` in your terminal, you will see the following output:\n\n```\n...\nCloud Run Service cloud-run-service-name finished: Service started. 0/2 deployment(s) still pending\nForwarding service projects/<YOUR-GCP-PROJECT>/locations/<GCP-REGION>/services/cloud-run-service-name to local port 9001\nNo artifacts found to watch\nPress Ctrl+C to exit\nWatching for changes...\n[cloud-run-service-name] streaming logs from <YOUR-GCP-PROJECT>\n...\n```\n\nNow Skaffold is log streaming the output from the service. If you access it through `localhost:9001`, you’ll see the logs:\n\n```\n...\n[cloud-run-service-name] streaming logs from renzo-friction-log-cloud-run\n[cloud-run-service-name] 2023-01-27 00:52:22 2023/01/27 00:52:22 Hello from Cloud Run! The container started successfully and is listening for HTTP requests on $PORT\n[cloud-run-service-name] 2023-01-27 00:52:22 GET 200 https://cloud-run-service-name-6u2evvstna-uc.a.run.app/\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/deployers/cloudrun", "title": "Google Cloud Run [NEW] beta", "description": "This feature is currently experimental and subject to change. Not all Skaffold features are supported, for example `debug` is currently not supported in Cloud Run (but is on our roadmap).", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 03:52:45", "type": "section_detail", "page_metadata": {"ogTitle": "Google Cloud Run [NEW]", "article:section": "docs", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "ogUrl": "https://skaffold.dev/docs/deployers/cloudrun/", "ogSiteName": "Skaffold", "generator": "Hugo 0.99.1", "robots": "index, follow", "description": "\n\n\n    Note\n    This feature is currently experimental and subject to change. Not all Skaffold features are supported, for example debug is currently …", "og:description": "Note This feature is currently experimental and subject to change. Not all Skaffold features are supported, for example debug is currently not supported in Cloud Run (but is on our roadmap).  Cloud Run is a managed compute platform on Google Cloud that allows you to run containers on Google’s infrastructure. With Skaffold, now you are able to configure your dev loop to build, test, sync and use Cloud Run as the deployer for your images.", "twitter:title": "Google Cloud Run [NEW]", "language": "en", "og:type": "article", "og:title": "Google Cloud Run [NEW]", "og:url": "https://skaffold.dev/docs/deployers/cloudrun/", "twitter:description": "Note This feature is currently experimental and subject to change. Not all Skaffold features are supported, for example debug is currently not supported in Cloud Run (but is on our roadmap).  Cloud Run is a managed compute platform on Google Cloud that allows you to run containers on Google’s infrastructure. With Skaffold, now you are able to configure your dev loop to build, test, sync and use Cloud Run as the deployer for your images.", "ogDescription": "Note This feature is currently experimental and subject to change. Not all Skaffold features are supported, for example debug is currently not supported in Cloud Run (but is on our roadmap).  Cloud Run is a managed compute platform on Google Cloud that allows you to run containers on Google’s infrastructure. With Skaffold, now you are able to configure your dev loop to build, test, sync and use Cloud Run as the deployer for your images.", "modifiedTime": "2025-01-23T10:14:58-05:00", "article:modified_time": "2025-01-23T10:14:58-05:00", "twitter:card": "summary", "title": "Google Cloud Run [NEW] | Skaffold", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:site_name": "Skaffold", "scrapeId": "71d3ffdd-a4ce-435d-9c48-82a3416f99a6", "sourceURL": "https://skaffold.dev/docs/deployers/cloudrun", "url": "https://skaffold.dev/docs/deployers/cloudrun/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I configuring cloud run in skaffold?\n\nAssistant: To configuring cloud run in skaffold, here's what you do:\nTo deploy to Cloud Run, use the `cloudrun` type in the `deploy` section, together with `manifests.rawYaml` stanza of `skaffold.yaml`.\n\nThe `cloudrun` type offers the following options:\n\n| Option | Description |\n| --- | --- |\n| `projectid` | the GCP Project to use for Cloud Run. If specified, all Services will be deployed to this project. If not specified, each Service will be deployed to the project specified in `metadata.namespace` of the Cloud Run manifest. |\n| `region` | GCP location to use for the Cloud Run Deploy. Must be one of the regions listed in https://cloud.google.com/run/docs/locations. |\n| `hooks` | describes a set of lifecycle host hooks that are executed before and after the Cloud Run deployer..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/deployers/cloudrun", "title": "Google Cloud Run [NEW] beta", "description": "This feature is currently experimental and subject to change. Not all Skaffold features are supported, for example `debug` is currently not supported in Cloud Run (but is on our roadmap).", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 03:52:45", "type": "section_detail", "page_metadata": {"ogTitle": "Google Cloud Run [NEW]", "article:section": "docs", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "ogUrl": "https://skaffold.dev/docs/deployers/cloudrun/", "ogSiteName": "Skaffold", "generator": "Hugo 0.99.1", "robots": "index, follow", "description": "\n\n\n    Note\n    This feature is currently experimental and subject to change. Not all Skaffold features are supported, for example debug is currently …", "og:description": "Note This feature is currently experimental and subject to change. Not all Skaffold features are supported, for example debug is currently not supported in Cloud Run (but is on our roadmap).  Cloud Run is a managed compute platform on Google Cloud that allows you to run containers on Google’s infrastructure. With Skaffold, now you are able to configure your dev loop to build, test, sync and use Cloud Run as the deployer for your images.", "twitter:title": "Google Cloud Run [NEW]", "language": "en", "og:type": "article", "og:title": "Google Cloud Run [NEW]", "og:url": "https://skaffold.dev/docs/deployers/cloudrun/", "twitter:description": "Note This feature is currently experimental and subject to change. Not all Skaffold features are supported, for example debug is currently not supported in Cloud Run (but is on our roadmap).  Cloud Run is a managed compute platform on Google Cloud that allows you to run containers on Google’s infrastructure. With Skaffold, now you are able to configure your dev loop to build, test, sync and use Cloud Run as the deployer for your images.", "ogDescription": "Note This feature is currently experimental and subject to change. Not all Skaffold features are supported, for example debug is currently not supported in Cloud Run (but is on our roadmap).  Cloud Run is a managed compute platform on Google Cloud that allows you to run containers on Google’s infrastructure. With Skaffold, now you are able to configure your dev loop to build, test, sync and use Cloud Run as the deployer for your images.", "modifiedTime": "2025-01-23T10:14:58-05:00", "article:modified_time": "2025-01-23T10:14:58-05:00", "twitter:card": "summary", "title": "Google Cloud Run [NEW] | Skaffold", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:site_name": "Skaffold", "scrapeId": "71d3ffdd-a4ce-435d-9c48-82a3416f99a6", "sourceURL": "https://skaffold.dev/docs/deployers/cloudrun", "url": "https://skaffold.dev/docs/deployers/cloudrun/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I example in skaffold?\n\nAssistant: To example in skaffold, here's what you do:\nThe following `deploy` section instructs Skaffold to deploy the artifacts under `manifests.rawYaml` to Cloud Run:\n\n```yaml\nmanifests:\n  rawYaml: # Here should be the list of all the Cloud Run Services and Jobs to deploy\n    - cloud-run-service.yaml\n\ndeploy:\n  cloudrun:\n    projectid: my-gcp-project\n    region: us-central1\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/deployers/cloudrun", "title": "Google Cloud Run [NEW] beta", "description": "This feature is currently experimental and subject to change. Not all Skaffold features are supported, for example `debug` is currently not supported in Cloud Run (but is on our roadmap).", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 03:52:45", "type": "section_detail", "page_metadata": {"ogTitle": "Google Cloud Run [NEW]", "article:section": "docs", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "ogUrl": "https://skaffold.dev/docs/deployers/cloudrun/", "ogSiteName": "Skaffold", "generator": "Hugo 0.99.1", "robots": "index, follow", "description": "\n\n\n    Note\n    This feature is currently experimental and subject to change. Not all Skaffold features are supported, for example debug is currently …", "og:description": "Note This feature is currently experimental and subject to change. Not all Skaffold features are supported, for example debug is currently not supported in Cloud Run (but is on our roadmap).  Cloud Run is a managed compute platform on Google Cloud that allows you to run containers on Google’s infrastructure. With Skaffold, now you are able to configure your dev loop to build, test, sync and use Cloud Run as the deployer for your images.", "twitter:title": "Google Cloud Run [NEW]", "language": "en", "og:type": "article", "og:title": "Google Cloud Run [NEW]", "og:url": "https://skaffold.dev/docs/deployers/cloudrun/", "twitter:description": "Note This feature is currently experimental and subject to change. Not all Skaffold features are supported, for example debug is currently not supported in Cloud Run (but is on our roadmap).  Cloud Run is a managed compute platform on Google Cloud that allows you to run containers on Google’s infrastructure. With Skaffold, now you are able to configure your dev loop to build, test, sync and use Cloud Run as the deployer for your images.", "ogDescription": "Note This feature is currently experimental and subject to change. Not all Skaffold features are supported, for example debug is currently not supported in Cloud Run (but is on our roadmap).  Cloud Run is a managed compute platform on Google Cloud that allows you to run containers on Google’s infrastructure. With Skaffold, now you are able to configure your dev loop to build, test, sync and use Cloud Run as the deployer for your images.", "modifiedTime": "2025-01-23T10:14:58-05:00", "article:modified_time": "2025-01-23T10:14:58-05:00", "twitter:card": "summary", "title": "Google Cloud Run [NEW] | Skaffold", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:site_name": "Skaffold", "scrapeId": "71d3ffdd-a4ce-435d-9c48-82a3416f99a6", "sourceURL": "https://skaffold.dev/docs/deployers/cloudrun", "url": "https://skaffold.dev/docs/deployers/cloudrun/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I cloud run deployer + skaffold local build in skaffold?\n\nAssistant: To cloud run deployer + skaffold local build in skaffold, here's what you do:\nWith Skaffold you can configure your project to locally build your images and deploy them to Cloud Run. The following example demonstrates how to set up Skaffold for this:\n\nWith the following project folder structure:\n\n```yaml\nresources/\n  service.yaml\nskaffold.yaml\nDockerfile\n```\n\n`skaffold.yaml` file content:\n\n```yaml\napiVersion: skaffold/v4beta6\nkind: Config\n\nbuild:\n  local:\n    push: true # <- We need to push the images so Cloud Run can deploy them\n\n  platforms: [\"linux/amd64\"] # <- Specific platform supported by Cloud Run\n\n  artifacts:\n    - image: my-img # <- Should match the image name in the Cloud Run service.yaml\n      docker:\n        dockerfile: ./Dockerfile\n\nmanifests:\n  rawYaml:\n    - resources/service.yaml\n\ndeploy:\n  cloudrun:\n    projectid: YOUR-GCP-PROJECT\n    region: GCP-REGION\n```\n\n`resources/service.yaml` file content:\n\n```yaml\napiVersion: serving.knative.dev/v1\nkind: Service\nmetadata:\n  name: cloud-run-service\nspec:\n  template:\n    spec:\n      containers:\n      - image: my-img # <- Same image name from skaffold.yaml file\n```\n\nA simple `Dockerfile` file:\n\n```docker\nFROM gcr.io/cloudrun/hello\n```\n\nRunning a Skaffold command like `skaffold run --default-repo=gcr.io/your-registry` will build your local images, push them to the specified registry, and deploy them to Cloud Run. Please notice the following from the previous example:.\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/deployers/cloudrun", "title": "Google Cloud Run [NEW] beta", "description": "This feature is currently experimental and subject to change. Not all Skaffold features are supported, for example `debug` is currently not supported in Cloud Run (but is on our roadmap).", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 03:52:45", "type": "section_detail", "page_metadata": {"ogTitle": "Google Cloud Run [NEW]", "article:section": "docs", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "ogUrl": "https://skaffold.dev/docs/deployers/cloudrun/", "ogSiteName": "Skaffold", "generator": "Hugo 0.99.1", "robots": "index, follow", "description": "\n\n\n    Note\n    This feature is currently experimental and subject to change. Not all Skaffold features are supported, for example debug is currently …", "og:description": "Note This feature is currently experimental and subject to change. Not all Skaffold features are supported, for example debug is currently not supported in Cloud Run (but is on our roadmap).  Cloud Run is a managed compute platform on Google Cloud that allows you to run containers on Google’s infrastructure. With Skaffold, now you are able to configure your dev loop to build, test, sync and use Cloud Run as the deployer for your images.", "twitter:title": "Google Cloud Run [NEW]", "language": "en", "og:type": "article", "og:title": "Google Cloud Run [NEW]", "og:url": "https://skaffold.dev/docs/deployers/cloudrun/", "twitter:description": "Note This feature is currently experimental and subject to change. Not all Skaffold features are supported, for example debug is currently not supported in Cloud Run (but is on our roadmap).  Cloud Run is a managed compute platform on Google Cloud that allows you to run containers on Google’s infrastructure. With Skaffold, now you are able to configure your dev loop to build, test, sync and use Cloud Run as the deployer for your images.", "ogDescription": "Note This feature is currently experimental and subject to change. Not all Skaffold features are supported, for example debug is currently not supported in Cloud Run (but is on our roadmap).  Cloud Run is a managed compute platform on Google Cloud that allows you to run containers on Google’s infrastructure. With Skaffold, now you are able to configure your dev loop to build, test, sync and use Cloud Run as the deployer for your images.", "modifiedTime": "2025-01-23T10:14:58-05:00", "article:modified_time": "2025-01-23T10:14:58-05:00", "twitter:card": "summary", "title": "Google Cloud Run [NEW] | Skaffold", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:site_name": "Skaffold", "scrapeId": "71d3ffdd-a4ce-435d-9c48-82a3416f99a6", "sourceURL": "https://skaffold.dev/docs/deployers/cloudrun", "url": "https://skaffold.dev/docs/deployers/cloudrun/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you give me some code examples for Google Cloud Run [NEW] beta in skaffold?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**gcloud auth application-default login**:\n\n```yaml\ngcloud auth application-default login\n```\n\nThis snippet shows you how to gcloud auth application-default login, which is an important aspect of google cloud run [new] beta.\n\n**gcloud components install --quiet**:\n\n```yaml\ngcloud components install --quiet \\n    alpha \\n    beta \\n    log-streaming \\n    cloud-run-proxy\n```\n\nThis snippet shows you how to gcloud components install --quiet, which is an important aspect of google cloud run [new] beta.\n\n**cloud-run-service.yaml**:\n\n```yaml\napiVersion: serving.knative.dev/v1\nkind: Service\nmetadata:\n  name: cloud-run-service-name # this service will be created in Cloud Run via Skaffold\nspec:\n  template:\n    spec:\n      containers:\n      - image: gcr.io/cloudrun/hello\n```\n\nThis snippet shows you how to cloud-run-service.yaml, which is an important aspect of google cloud run [new] beta.\n\n**cloud-run-job.yaml**:\n\n```yaml\napiVersion: run.googleapis.com/v1\nkind: Job\nmetadata:\n  name: cloud-run-job-name # this job will be created in Cloud Run via Skaffold\n  annotations:\n    run.googleapis.com/launch-stage: BETA\nspec:\n  template:\n    spec:\n      template:\n        spec:\n          containers:\n          - image: us-docker.pkg.dev/cloudrun/container/job\n```\n\nThis snippet shows you how to cloud-run-job.yaml, which is an important aspect of google cloud run [new] beta.\n\n**skaffold.yaml**:\n\n```yaml\napiVersion: skaffold/v4beta2\nkind: Config\n\nmanifests:\n  rawYaml:\n    - resources/*\n\ndeploy:\n  cloudrun:\n    projectid: YOUR-GCP-PROJECT\n    region: GCP-REGION\n```\n\nThis snippet shows you how to skaffold.yaml, which is an important aspect of google cloud run [new] beta.\n\n**skaffold.yaml (with port forward)**:\n\n```yaml\napiVersion: skaffold/v4beta2\nkind: Config\n\nmanifests:\n  rawYaml:\n    - resources/*\n\ndeploy:\n  cloudrun:\n    projectid: YOUR-GCP-PROJECT\n    region: GCP-REGION\n\n# Added to change local port used\nportForward:\n  - resourceType: service\n    resourceName: cloud-run-service-name\n    localPort: 9001\n```\n\nThis snippet shows you how to skaffold.yaml (with port forward), which is an important aspect of google cloud run [new] beta.\n\n**skaffold.yaml (local build)**:\n\n```yaml\napiVersion: skaffold/v4beta6\nkind: Config\n\nbuild:\n  local:\n    push: true # <- We need to push the images so Cloud Run can deploy them\n\n  platforms: [\"linux/amd64\"] # <- Specific platform supported by Cloud Run\n\n  artifacts:\n    - image: my-img # <- Should match the image name in the Cloud Run service.yaml\n      docker:\n        dockerfile: ./Dockerfile\n\nmanifests:\n  rawYaml:\n    - resources/service.yaml\n\ndeploy:\n  cloudrun:\n    projectid: YOUR-GCP-PROJECT\n    region: GCP-REGION\n```\n\nThis snippet shows you how to skaffold.yaml (local build), which is an important aspect of google cloud run [new] beta.\n\n**Dockerfile**:\n\n```yaml\nFROM gcr.io/cloudrun/hello\n```\n\nThis snippet shows you how to dockerfile, which is an important aspect of google cloud run [new] beta.\n\n", "metadata": {"source_url": "https://skaffold.dev/docs/deployers/cloudrun", "title": "Google Cloud Run [NEW] beta", "description": "This feature is currently experimental and subject to change. Not all Skaffold features are supported, for example `debug` is currently not supported in Cloud Run (but is on our roadmap).", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 03:52:45", "type": "code_examples", "page_metadata": {"ogTitle": "Google Cloud Run [NEW]", "article:section": "docs", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "ogUrl": "https://skaffold.dev/docs/deployers/cloudrun/", "ogSiteName": "Skaffold", "generator": "Hugo 0.99.1", "robots": "index, follow", "description": "\n\n\n    Note\n    This feature is currently experimental and subject to change. Not all Skaffold features are supported, for example debug is currently …", "og:description": "Note This feature is currently experimental and subject to change. Not all Skaffold features are supported, for example debug is currently not supported in Cloud Run (but is on our roadmap).  Cloud Run is a managed compute platform on Google Cloud that allows you to run containers on Google’s infrastructure. With Skaffold, now you are able to configure your dev loop to build, test, sync and use Cloud Run as the deployer for your images.", "twitter:title": "Google Cloud Run [NEW]", "language": "en", "og:type": "article", "og:title": "Google Cloud Run [NEW]", "og:url": "https://skaffold.dev/docs/deployers/cloudrun/", "twitter:description": "Note This feature is currently experimental and subject to change. Not all Skaffold features are supported, for example debug is currently not supported in Cloud Run (but is on our roadmap).  Cloud Run is a managed compute platform on Google Cloud that allows you to run containers on Google’s infrastructure. With Skaffold, now you are able to configure your dev loop to build, test, sync and use Cloud Run as the deployer for your images.", "ogDescription": "Note This feature is currently experimental and subject to change. Not all Skaffold features are supported, for example debug is currently not supported in Cloud Run (but is on our roadmap).  Cloud Run is a managed compute platform on Google Cloud that allows you to run containers on Google’s infrastructure. With Skaffold, now you are able to configure your dev loop to build, test, sync and use Cloud Run as the deployer for your images.", "modifiedTime": "2025-01-23T10:14:58-05:00", "article:modified_time": "2025-01-23T10:14:58-05:00", "twitter:card": "summary", "title": "Google Cloud Run [NEW] | Skaffold", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:site_name": "Skaffold", "scrapeId": "71d3ffdd-a4ce-435d-9c48-82a3416f99a6", "sourceURL": "https://skaffold.dev/docs/deployers/cloudrun", "url": "https://skaffold.dev/docs/deployers/cloudrun/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: What are some tips for using Google Cloud Run [NEW] beta in skaffold effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nEnsure `gcloud` CLI is installed and configured properly before deploying to Cloud Run.\n\nUse application default credentials for deployment, or configure user credentials as needed.\n\nInstall necessary `gcloud` components for log streaming and port forwarding.\n\nWhen using local builds, set the `push` option to `true` to allow Cloud Run to access the images.\n\nSpecify the correct platform for your images to match Cloud Run requirements.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://skaffold.dev/docs/deployers/cloudrun", "title": "Google Cloud Run [NEW] beta", "description": "This feature is currently experimental and subject to change. Not all Skaffold features are supported, for example `debug` is currently not supported in Cloud Run (but is on our roadmap).", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 03:52:45", "type": "best_practices", "page_metadata": {"ogTitle": "Google Cloud Run [NEW]", "article:section": "docs", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "ogUrl": "https://skaffold.dev/docs/deployers/cloudrun/", "ogSiteName": "Skaffold", "generator": "Hugo 0.99.1", "robots": "index, follow", "description": "\n\n\n    Note\n    This feature is currently experimental and subject to change. Not all Skaffold features are supported, for example debug is currently …", "og:description": "Note This feature is currently experimental and subject to change. Not all Skaffold features are supported, for example debug is currently not supported in Cloud Run (but is on our roadmap).  Cloud Run is a managed compute platform on Google Cloud that allows you to run containers on Google’s infrastructure. With Skaffold, now you are able to configure your dev loop to build, test, sync and use Cloud Run as the deployer for your images.", "twitter:title": "Google Cloud Run [NEW]", "language": "en", "og:type": "article", "og:title": "Google Cloud Run [NEW]", "og:url": "https://skaffold.dev/docs/deployers/cloudrun/", "twitter:description": "Note This feature is currently experimental and subject to change. Not all Skaffold features are supported, for example debug is currently not supported in Cloud Run (but is on our roadmap).  Cloud Run is a managed compute platform on Google Cloud that allows you to run containers on Google’s infrastructure. With Skaffold, now you are able to configure your dev loop to build, test, sync and use Cloud Run as the deployer for your images.", "ogDescription": "Note This feature is currently experimental and subject to change. Not all Skaffold features are supported, for example debug is currently not supported in Cloud Run (but is on our roadmap).  Cloud Run is a managed compute platform on Google Cloud that allows you to run containers on Google’s infrastructure. With Skaffold, now you are able to configure your dev loop to build, test, sync and use Cloud Run as the deployer for your images.", "modifiedTime": "2025-01-23T10:14:58-05:00", "article:modified_time": "2025-01-23T10:14:58-05:00", "twitter:card": "summary", "title": "Google Cloud Run [NEW] | Skaffold", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:site_name": "Skaffold", "scrapeId": "71d3ffdd-a4ce-435d-9c48-82a3416f99a6", "sourceURL": "https://skaffold.dev/docs/deployers/cloudrun", "url": "https://skaffold.dev/docs/deployers/cloudrun/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what Image Repository Handling is in skaffold?\n\nAssistant: Sure, I'd be happy to explain Image Repository Handling in skaffold.\n\n# Image Repository Handling\n\nThis page covers how to handle image repositories in Skaffold, including automatic image name prefixing and configuration for insecure registries.Here's a quick rundown of what this is about:\n\n## Default Repository Functionality\n\nSkaffold supports automatically prefixing image names with a user-specified registry to simplify configuration. This is accomplished through the `default-repo` functionality, which can be used in three ways:\n\n1. `--default-repo` flag\n\n   ```bash\n   skaffold dev --default-repo <myrepo>\n   ```\n\n2. `SKAFFOLD_DEFAULT_REPO` environment variable\n\n   ```bash\n   SKAFFOLD_DEFAULT_REPO=<myrepo> skaffold dev\n   ```\n\n3. Skaffold’s global config\n\n   ```bash\n   skaffold config set default-repo <myrepo>\n   ```\n\nIf no `default-repo` is provided, Skaffold will push the image as specified in the YAML without any automated rewriting.\n\n## Image Name Rewriting Strategies\n\nThe image name rewriting strategies are designed to be conflict-free. The full image name is rewritten on top of the default-repo to avoid collisions in the base namespace. The strategies are determined based on the default-repo and the original image repository:\n\n- If the default-repo domain does not contain `gcr.io` or `-docker.pkg.dev`:\n  - **strategy**: escape & concat & truncate to 256\n\n    ```\n    original image: \tgcr.io/k8s-skaffold/skaffold-example1\n    default-repo: \taws_account_id.dkr.ecr.region.amazonaws.com\n    rewritten image: \taws_account_id.dkr.ecr.region.amazonaws.com/gcr_io_k8s-skaffold_skaffold-example1\n    ```\n\n- If the default-repo contains `gcr.io` or `-docker.pkg.dev`:\n  - **strategy**: concat unless prefix matches\n\n  - **example1**: prefix doesn’t match:\n    ```\n    original image: \tgcr.io/k8s-skaffold/skaffold-example1\n    default-repo: \tgcr.io/myproject/myimage\n    rewritten image: \tgcr.io/myproject/myimage/gcr.io/k8s-skaffold/skaffold-example1\n    ```\n\n  - **example2**: prefix matches:\n    ```\n    original image: \tgcr.io/k8s-skaffold/skaffold-example1\n    default-repo: \tgcr.io/k8s-skaffold\n    rewritten image: \tgcr.io/k8s-skaffold/skaffold-example1\n    ```\n\n  - **example3**: shared prefix:\n    ```\n    original image: \tgcr.io/k8s-skaffold/skaffold-example1\n    default-repo: \tgcr.io/k8s-skaffold/myimage\n    rewritten image: \tgcr.io/k8s-skaffold/myimage/skaffold-example1\n    ```\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/environment/image-registries", "title": "Image Repository Handling", "description": "This page covers how to handle image repositories in Skaffold, including automatic image name prefixing and configuration for insecure registries.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 04:01:34", "type": "overview", "page_metadata": {"og:site_name": "Skaffold", "og:type": "article", "twitter:card": "summary", "ogTitle": "Image Repository Handling", "ogUrl": "https://skaffold.dev/docs/environment/image-registries/", "modifiedTime": "2025-01-23T10:14:58-05:00", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogDescription": "Often, a Kubernetes manifest (or skaffold.yaml) makes references to images that push to registries that we might not have access to. Modifying these individual image names manually is tedious, so Skaffold supports automatically prefixing these image names with a registry specified by the user. Using this, any project configured with Skaffold can be run by any user with minimal configuration, and no manual YAML editing!\nThis is accomplished through the default-repo functionality, and can be used one of three ways:", "generator": "Hugo 0.99.1", "og:description": "Often, a Kubernetes manifest (or skaffold.yaml) makes references to images that push to registries that we might not have access to. Modifying these individual image names manually is tedious, so Skaffold supports automatically prefixing these image names with a registry specified by the user. Using this, any project configured with Skaffold can be run by any user with minimal configuration, and no manual YAML editing!\nThis is accomplished through the default-repo functionality, and can be used one of three ways:", "og:url": "https://skaffold.dev/docs/environment/image-registries/", "twitter:description": "Often, a Kubernetes manifest (or skaffold.yaml) makes references to images that push to registries that we might not have access to. Modifying these individual image names manually is tedious, so Skaffold supports automatically prefixing these image names with a registry specified by the user. Using this, any project configured with Skaffold can be run by any user with minimal configuration, and no manual YAML editing!\nThis is accomplished through the default-repo functionality, and can be used one of three ways:", "title": "Image Repository Handling | Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "robots": "index, follow", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:title": "Image Repository Handling", "twitter:title": "Image Repository Handling", "language": "en", "article:section": "docs", "ogSiteName": "Skaffold", "description": "Often, a Kubernetes manifest (or skaffold.yaml) makes references to images that push to\nregistries that we might not have access to. Modifying these …", "scrapeId": "04a0ee82-4af6-4067-b887-0305b003a96e", "sourceURL": "https://skaffold.dev/docs/environment/image-registries", "url": "https://skaffold.dev/docs/environment/image-registries/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I default repository functionality in skaffold?\n\nAssistant: To default repository functionality in skaffold, here's what you do:\nSkaffold supports automatically prefixing image names with a user-specified registry to simplify configuration. This is accomplished through the `default-repo` functionality, which can be used in three ways:\n\n1. `--default-repo` flag\n\n   ```bash\n   skaffold dev --default-repo <myrepo>\n   ```\n\n2. `SKAFFOLD_DEFAULT_REPO` environment variable\n\n   ```bash\n   SKAFFOLD_DEFAULT_REPO=<myrepo> skaffold dev\n   ```\n\n3. Skaffold’s global config\n\n   ```bash\n   skaffold config set default-repo <myrepo>\n   ```\n\nIf no `default-repo` is provided, Skaffold will push the image as specified in the YAML without any automated rewriting..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/environment/image-registries", "title": "Image Repository Handling", "description": "This page covers how to handle image repositories in Skaffold, including automatic image name prefixing and configuration for insecure registries.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 04:01:34", "type": "section_detail", "page_metadata": {"og:site_name": "Skaffold", "og:type": "article", "twitter:card": "summary", "ogTitle": "Image Repository Handling", "ogUrl": "https://skaffold.dev/docs/environment/image-registries/", "modifiedTime": "2025-01-23T10:14:58-05:00", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogDescription": "Often, a Kubernetes manifest (or skaffold.yaml) makes references to images that push to registries that we might not have access to. Modifying these individual image names manually is tedious, so Skaffold supports automatically prefixing these image names with a registry specified by the user. Using this, any project configured with Skaffold can be run by any user with minimal configuration, and no manual YAML editing!\nThis is accomplished through the default-repo functionality, and can be used one of three ways:", "generator": "Hugo 0.99.1", "og:description": "Often, a Kubernetes manifest (or skaffold.yaml) makes references to images that push to registries that we might not have access to. Modifying these individual image names manually is tedious, so Skaffold supports automatically prefixing these image names with a registry specified by the user. Using this, any project configured with Skaffold can be run by any user with minimal configuration, and no manual YAML editing!\nThis is accomplished through the default-repo functionality, and can be used one of three ways:", "og:url": "https://skaffold.dev/docs/environment/image-registries/", "twitter:description": "Often, a Kubernetes manifest (or skaffold.yaml) makes references to images that push to registries that we might not have access to. Modifying these individual image names manually is tedious, so Skaffold supports automatically prefixing these image names with a registry specified by the user. Using this, any project configured with Skaffold can be run by any user with minimal configuration, and no manual YAML editing!\nThis is accomplished through the default-repo functionality, and can be used one of three ways:", "title": "Image Repository Handling | Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "robots": "index, follow", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:title": "Image Repository Handling", "twitter:title": "Image Repository Handling", "language": "en", "article:section": "docs", "ogSiteName": "Skaffold", "description": "Often, a Kubernetes manifest (or skaffold.yaml) makes references to images that push to\nregistries that we might not have access to. Modifying these …", "scrapeId": "04a0ee82-4af6-4067-b887-0305b003a96e", "sourceURL": "https://skaffold.dev/docs/environment/image-registries", "url": "https://skaffold.dev/docs/environment/image-registries/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I image name rewriting strategies in skaffold?\n\nAssistant: To image name rewriting strategies in skaffold, here's what you do:\nThe image name rewriting strategies are designed to be conflict-free. The full image name is rewritten on top of the default-repo to avoid collisions in the base namespace. The strategies are determined based on the default-repo and the original image repository:\n\n- If the default-repo domain does not contain `gcr.io` or `-docker.pkg.dev`:\n  - **strategy**: escape & concat & truncate to 256\n\n    ```\n    original image: \tgcr.io/k8s-skaffold/skaffold-example1\n    default-repo: \taws_account_id.dkr.ecr.region.amazonaws.com\n    rewritten image: \taws_account_id.dkr.ecr.region.amazonaws.com/gcr_io_k8s-skaffold_skaffold-example1\n    ```\n\n- If the default-repo contains `gcr.io` or `-docker.pkg.dev`:\n  - **strategy**: concat unless prefix matches\n\n  - **example1**: prefix doesn’t match:\n    ```\n    original image: \tgcr.io/k8s-skaffold/skaffold-example1\n    default-repo: \tgcr.io/myproject/myimage\n    rewritten image: \tgcr.io/myproject/myimage/gcr.io/k8s-skaffold/skaffold-example1\n    ```\n\n  - **example2**: prefix matches:\n    ```\n    original image: \tgcr.io/k8s-skaffold/skaffold-example1\n    default-repo: \tgcr.io/k8s-skaffold\n    rewritten image: \tgcr.io/k8s-skaffold/skaffold-example1\n    ```\n\n  - **example3**: shared prefix:\n    ```\n    original image: \tgcr.io/k8s-skaffold/skaffold-example1\n    default-repo: \tgcr.io/k8s-skaffold/myimage\n    rewritten image: \tgcr.io/k8s-skaffold/myimage/skaffold-example1\n    ```.\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/environment/image-registries", "title": "Image Repository Handling", "description": "This page covers how to handle image repositories in Skaffold, including automatic image name prefixing and configuration for insecure registries.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 04:01:34", "type": "section_detail", "page_metadata": {"og:site_name": "Skaffold", "og:type": "article", "twitter:card": "summary", "ogTitle": "Image Repository Handling", "ogUrl": "https://skaffold.dev/docs/environment/image-registries/", "modifiedTime": "2025-01-23T10:14:58-05:00", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogDescription": "Often, a Kubernetes manifest (or skaffold.yaml) makes references to images that push to registries that we might not have access to. Modifying these individual image names manually is tedious, so Skaffold supports automatically prefixing these image names with a registry specified by the user. Using this, any project configured with Skaffold can be run by any user with minimal configuration, and no manual YAML editing!\nThis is accomplished through the default-repo functionality, and can be used one of three ways:", "generator": "Hugo 0.99.1", "og:description": "Often, a Kubernetes manifest (or skaffold.yaml) makes references to images that push to registries that we might not have access to. Modifying these individual image names manually is tedious, so Skaffold supports automatically prefixing these image names with a registry specified by the user. Using this, any project configured with Skaffold can be run by any user with minimal configuration, and no manual YAML editing!\nThis is accomplished through the default-repo functionality, and can be used one of three ways:", "og:url": "https://skaffold.dev/docs/environment/image-registries/", "twitter:description": "Often, a Kubernetes manifest (or skaffold.yaml) makes references to images that push to registries that we might not have access to. Modifying these individual image names manually is tedious, so Skaffold supports automatically prefixing these image names with a registry specified by the user. Using this, any project configured with Skaffold can be run by any user with minimal configuration, and no manual YAML editing!\nThis is accomplished through the default-repo functionality, and can be used one of three ways:", "title": "Image Repository Handling | Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "robots": "index, follow", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:title": "Image Repository Handling", "twitter:title": "Image Repository Handling", "language": "en", "article:section": "docs", "ogSiteName": "Skaffold", "description": "Often, a Kubernetes manifest (or skaffold.yaml) makes references to images that push to\nregistries that we might not have access to. Modifying these …", "scrapeId": "04a0ee82-4af6-4067-b887-0305b003a96e", "sourceURL": "https://skaffold.dev/docs/environment/image-registries", "url": "https://skaffold.dev/docs/environment/image-registries/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you give me some code examples for Image Repository Handling in skaffold?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Default Repo Flag Example**:\n\n```yaml\nskaffold dev --default-repo <myrepo>\n```\n\nThis snippet shows you how to default repo flag example, which is an important aspect of image repository handling.\n\n**Environment Variable Example**:\n\n```yaml\nSKAFFOLD_DEFAULT_REPO=<myrepo> skaffold dev\n```\n\nThis snippet shows you how to environment variable example, which is an important aspect of image repository handling.\n\n**Global Config Example**:\n\n```yaml\nskaffold config set default-repo <myrepo>\n```\n\nThis snippet shows you how to global config example, which is an important aspect of image repository handling.\n\n**Insecure Registry Flag Example**:\n\n```yaml\nskaffold dev --insecure-registry insecure1.io --insecure-registry insecure2.io\n```\n\nThis snippet shows you how to insecure registry flag example, which is an important aspect of image repository handling.\n\n**Insecure Registry Environment Variable Example**:\n\n```yaml\nSKAFFOLD_INSECURE_REGISTRY='insecure1.io,insecure2.io' skaffold dev\n```\n\nThis snippet shows you how to insecure registry environment variable example, which is an important aspect of image repository handling.\n\n**Insecure Registries in Skaffold Config Example**:\n\n```yaml\nbuild:\n       insecureRegistries:\n    - insecure1.io\n    - insecure2.io\n```\n\nThis snippet shows you how to insecure registries in skaffold config example, which is an important aspect of image repository handling.\n\n**Set Insecure Registry for Current Context**:\n\n```yaml\nskaffold config set insecure-registries insecure1.io\n```\n\nThis snippet shows you how to set insecure registry for current context, which is an important aspect of image repository handling.\n\n**Set Insecure Registry Globally**:\n\n```yaml\nskaffold config set --global insecure-registries insecure2.io\n```\n\nThis snippet shows you how to set insecure registry globally, which is an important aspect of image repository handling.\n\n", "metadata": {"source_url": "https://skaffold.dev/docs/environment/image-registries", "title": "Image Repository Handling", "description": "This page covers how to handle image repositories in Skaffold, including automatic image name prefixing and configuration for insecure registries.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 04:01:34", "type": "code_examples", "page_metadata": {"og:site_name": "Skaffold", "og:type": "article", "twitter:card": "summary", "ogTitle": "Image Repository Handling", "ogUrl": "https://skaffold.dev/docs/environment/image-registries/", "modifiedTime": "2025-01-23T10:14:58-05:00", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogDescription": "Often, a Kubernetes manifest (or skaffold.yaml) makes references to images that push to registries that we might not have access to. Modifying these individual image names manually is tedious, so Skaffold supports automatically prefixing these image names with a registry specified by the user. Using this, any project configured with Skaffold can be run by any user with minimal configuration, and no manual YAML editing!\nThis is accomplished through the default-repo functionality, and can be used one of three ways:", "generator": "Hugo 0.99.1", "og:description": "Often, a Kubernetes manifest (or skaffold.yaml) makes references to images that push to registries that we might not have access to. Modifying these individual image names manually is tedious, so Skaffold supports automatically prefixing these image names with a registry specified by the user. Using this, any project configured with Skaffold can be run by any user with minimal configuration, and no manual YAML editing!\nThis is accomplished through the default-repo functionality, and can be used one of three ways:", "og:url": "https://skaffold.dev/docs/environment/image-registries/", "twitter:description": "Often, a Kubernetes manifest (or skaffold.yaml) makes references to images that push to registries that we might not have access to. Modifying these individual image names manually is tedious, so Skaffold supports automatically prefixing these image names with a registry specified by the user. Using this, any project configured with Skaffold can be run by any user with minimal configuration, and no manual YAML editing!\nThis is accomplished through the default-repo functionality, and can be used one of three ways:", "title": "Image Repository Handling | Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "robots": "index, follow", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:title": "Image Repository Handling", "twitter:title": "Image Repository Handling", "language": "en", "article:section": "docs", "ogSiteName": "Skaffold", "description": "Often, a Kubernetes manifest (or skaffold.yaml) makes references to images that push to\nregistries that we might not have access to. Modifying these …", "scrapeId": "04a0ee82-4af6-4067-b887-0305b003a96e", "sourceURL": "https://skaffold.dev/docs/environment/image-registries", "url": "https://skaffold.dev/docs/environment/image-registries/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: What are some tips for using Image Repository Handling in skaffold effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nIf no default-repo is provided, Skaffold will not rewrite image names automatically.\n\nMultiple set commands add to the existing list of insecure registries; to clear the list, use `skaffold config unset insecure-registries`.\n\nSkaffold will join the lists of insecure registries if configured via multiple sources.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://skaffold.dev/docs/environment/image-registries", "title": "Image Repository Handling", "description": "This page covers how to handle image repositories in Skaffold, including automatic image name prefixing and configuration for insecure registries.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 04:01:34", "type": "best_practices", "page_metadata": {"og:site_name": "Skaffold", "og:type": "article", "twitter:card": "summary", "ogTitle": "Image Repository Handling", "ogUrl": "https://skaffold.dev/docs/environment/image-registries/", "modifiedTime": "2025-01-23T10:14:58-05:00", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogDescription": "Often, a Kubernetes manifest (or skaffold.yaml) makes references to images that push to registries that we might not have access to. Modifying these individual image names manually is tedious, so Skaffold supports automatically prefixing these image names with a registry specified by the user. Using this, any project configured with Skaffold can be run by any user with minimal configuration, and no manual YAML editing!\nThis is accomplished through the default-repo functionality, and can be used one of three ways:", "generator": "Hugo 0.99.1", "og:description": "Often, a Kubernetes manifest (or skaffold.yaml) makes references to images that push to registries that we might not have access to. Modifying these individual image names manually is tedious, so Skaffold supports automatically prefixing these image names with a registry specified by the user. Using this, any project configured with Skaffold can be run by any user with minimal configuration, and no manual YAML editing!\nThis is accomplished through the default-repo functionality, and can be used one of three ways:", "og:url": "https://skaffold.dev/docs/environment/image-registries/", "twitter:description": "Often, a Kubernetes manifest (or skaffold.yaml) makes references to images that push to registries that we might not have access to. Modifying these individual image names manually is tedious, so Skaffold supports automatically prefixing these image names with a registry specified by the user. Using this, any project configured with Skaffold can be run by any user with minimal configuration, and no manual YAML editing!\nThis is accomplished through the default-repo functionality, and can be used one of three ways:", "title": "Image Repository Handling | Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "robots": "index, follow", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:title": "Image Repository Handling", "twitter:title": "Image Repository Handling", "language": "en", "article:section": "docs", "ogSiteName": "Skaffold", "description": "Often, a Kubernetes manifest (or skaffold.yaml) makes references to images that push to\nregistries that we might not have access to. Modifying these …", "scrapeId": "04a0ee82-4af6-4067-b887-0305b003a96e", "sourceURL": "https://skaffold.dev/docs/environment/image-registries", "url": "https://skaffold.dev/docs/environment/image-registries/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what Kube-context Activation is in skaffold?\n\nAssistant: Sure, I'd be happy to explain Kube-context Activation in skaffold.\n\n# Kube-context Activation\n\nThis page covers how to activate and manage kube-contexts in Skaffold when interacting with Kubernetes clusters.Here's a quick rundown of what this is about:\n\n## Kube-context Activation\n\nWhen interacting with a Kubernetes cluster, just like any other Kubernetes-native tool, Skaffold requires a valid Kubernetes context to be configured. The selected kube-context determines the Kubernetes cluster, the Kubernetes user, and the default namespace. By default, Skaffold uses the _current_ kube-context from your kube-config file.\n\nYou can override this default one of two ways:\n\n1. `--kube-context` flag\n\n```bash\nskaffold dev --kube-context <myrepo>\n```\n\n2. Specify `deploy.kubeContext` configuration in `skaffold.yaml`\n\n```yaml\ndeploy:\n     kubeContext: minikube\n```\n\nThe CLI flag always takes precedence over the config field in the `skaffold.yaml`.\n\n## Kube-context activation and Skaffold profiles\n\nThe kube-context has a double role for Skaffold profiles:\n\n1. A Skaffold profile may be auto-activated by the current kube-context (via `profiles.activation.kubeContext`).\n\n2. A Skaffold profile may change the kube-context (via `profiles.deploy.kubeContext`).\n\nSkaffold ensures that these two roles are not conflicting. To that end, profile activation is done with the original kube-context. If any profile is auto-activated by a matching kube-context, the resulting kube-context must remain unchanged. This rule prevents profile-specific settings for one context to be deployed into a different context.\n\nFor example, given the following profiles:\n\n```yaml\nprofiles:\n  - name: profile-1\n    deploy:\n      kubeContext: docker-for-desktop\n\n  - name: profile-2\n    activation:\n      - kubeContext: minikube\n```\n\nIt is illegal to activate both profiles here, because `profile-2` has an activation by `kube-context` and `profile-1` changes the effective `kube-context`. This happens for\n\n- `skaffold run -p profile-1,profile-2`\n- `skaffold run -p profile-1` if the current kube-context is `minikube`\n\n#### Note\n\nIt is possible to activate conflicting profiles in conjunction with the CLI flag. So the following example is valid `skaffold run --kube-context minikube -p profile-1,profile-2`.\n\n## Limitations\n\nIt is not possible to change the kube-context of a running `skaffold dev` session. To pick up the changes to `kubeContext`, you will need to quit and re-run `skaffold dev`.\n\n## Kubeconfig selection\n\nThe kubeconfig file is only loaded once during Skaffold’s startup phase.\n\n1. If the `--kubeconfig` flag is set, then only that file is loaded.\n2. If `$KUBECONFIG` environment variable is set, then it is used as a list of paths (normal path delimiting rules for your system). These paths are merged.\n3. Otherwise, ${HOME}/.kube/config is used.\n4. If neither `--kubeconfig` or `--kube-context` are given and no kubeconfig file is found, Skaffold will try to guess an in-cluster configuration using the secrets stored in `/var/run/secrets/kubernetes.io/serviceaccount/`. This is useful when Skaffold runs inside a kubernetes Pod and should deploy to the same cluster.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/environment/kube-context", "title": "Kube-context Activation", "description": "This page covers how to activate and manage kube-contexts in Skaffold when interacting with Kubernetes clusters.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 04:04:58", "type": "overview", "page_metadata": {"og:title": "Kube-context Activation", "description": "When interacting with a Kubernetes cluster, just like any other Kubernetes-native tool,\nSkaffold requires a valid Kubernetes context to be configured. …", "modifiedTime": "2025-01-23T10:14:58-05:00", "article:modified_time": "2025-01-23T10:14:58-05:00", "title": "Kube-context Activation | Skaffold", "ogDescription": "When interacting with a Kubernetes cluster, just like any other Kubernetes-native tool, Skaffold requires a valid Kubernetes context to be configured. The selected kube-context determines the Kubernetes cluster, the Kubernetes user, and the default namespace. By default, Skaffold uses the current kube-context from your kube-config file.\nYou can override this default one of two ways:\n  --kube-context flag\nskaffold dev --kube-context <myrepo>   Specify deploy.kubeContext configuration in skaffold.yaml", "og:url": "https://skaffold.dev/docs/environment/kube-context/", "og:site_name": "Skaffold", "twitter:title": "Kube-context Activation", "robots": "index, follow", "twitter:card": "summary", "ogTitle": "Kube-context Activation", "twitter:description": "When interacting with a Kubernetes cluster, just like any other Kubernetes-native tool, Skaffold requires a valid Kubernetes context to be configured. The selected kube-context determines the Kubernetes cluster, the Kubernetes user, and the default namespace. By default, Skaffold uses the current kube-context from your kube-config file.\nYou can override this default one of two ways:\n  --kube-context flag\nskaffold dev --kube-context <myrepo>   Specify deploy.kubeContext configuration in skaffold.yaml", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogSiteName": "Skaffold", "ogUrl": "https://skaffold.dev/docs/environment/kube-context/", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "language": "en", "og:description": "When interacting with a Kubernetes cluster, just like any other Kubernetes-native tool, Skaffold requires a valid Kubernetes context to be configured. The selected kube-context determines the Kubernetes cluster, the Kubernetes user, and the default namespace. By default, Skaffold uses the current kube-context from your kube-config file.\nYou can override this default one of two ways:\n  --kube-context flag\nskaffold dev --kube-context <myrepo>   Specify deploy.kubeContext configuration in skaffold.yaml", "og:type": "article", "article:section": "docs", "generator": "Hugo 0.99.1", "scrapeId": "20421ccd-9ea4-4c0b-ad7c-8ba9df35241c", "sourceURL": "https://skaffold.dev/docs/environment/kube-context", "url": "https://skaffold.dev/docs/environment/kube-context/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I kube-context activation in skaffold?\n\nAssistant: To kube-context activation in skaffold, here's what you do:\nWhen interacting with a Kubernetes cluster, just like any other Kubernetes-native tool, Skaffold requires a valid Kubernetes context to be configured. The selected kube-context determines the Kubernetes cluster, the Kubernetes user, and the default namespace. By default, Skaffold uses the _current_ kube-context from your kube-config file.\n\nYou can override this default one of two ways:\n\n1. `--kube-context` flag\n\n```bash\nskaffold dev --kube-context <myrepo>\n```\n\n2. Specify `deploy.kubeContext` configuration in `skaffold.yaml`\n\n```yaml\ndeploy:\n     kubeContext: minikube\n```\n\nThe CLI flag always takes precedence over the config field in the `skaffold.yaml`..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/environment/kube-context", "title": "Kube-context Activation", "description": "This page covers how to activate and manage kube-contexts in Skaffold when interacting with Kubernetes clusters.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 04:04:58", "type": "section_detail", "page_metadata": {"og:title": "Kube-context Activation", "description": "When interacting with a Kubernetes cluster, just like any other Kubernetes-native tool,\nSkaffold requires a valid Kubernetes context to be configured. …", "modifiedTime": "2025-01-23T10:14:58-05:00", "article:modified_time": "2025-01-23T10:14:58-05:00", "title": "Kube-context Activation | Skaffold", "ogDescription": "When interacting with a Kubernetes cluster, just like any other Kubernetes-native tool, Skaffold requires a valid Kubernetes context to be configured. The selected kube-context determines the Kubernetes cluster, the Kubernetes user, and the default namespace. By default, Skaffold uses the current kube-context from your kube-config file.\nYou can override this default one of two ways:\n  --kube-context flag\nskaffold dev --kube-context <myrepo>   Specify deploy.kubeContext configuration in skaffold.yaml", "og:url": "https://skaffold.dev/docs/environment/kube-context/", "og:site_name": "Skaffold", "twitter:title": "Kube-context Activation", "robots": "index, follow", "twitter:card": "summary", "ogTitle": "Kube-context Activation", "twitter:description": "When interacting with a Kubernetes cluster, just like any other Kubernetes-native tool, Skaffold requires a valid Kubernetes context to be configured. The selected kube-context determines the Kubernetes cluster, the Kubernetes user, and the default namespace. By default, Skaffold uses the current kube-context from your kube-config file.\nYou can override this default one of two ways:\n  --kube-context flag\nskaffold dev --kube-context <myrepo>   Specify deploy.kubeContext configuration in skaffold.yaml", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogSiteName": "Skaffold", "ogUrl": "https://skaffold.dev/docs/environment/kube-context/", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "language": "en", "og:description": "When interacting with a Kubernetes cluster, just like any other Kubernetes-native tool, Skaffold requires a valid Kubernetes context to be configured. The selected kube-context determines the Kubernetes cluster, the Kubernetes user, and the default namespace. By default, Skaffold uses the current kube-context from your kube-config file.\nYou can override this default one of two ways:\n  --kube-context flag\nskaffold dev --kube-context <myrepo>   Specify deploy.kubeContext configuration in skaffold.yaml", "og:type": "article", "article:section": "docs", "generator": "Hugo 0.99.1", "scrapeId": "20421ccd-9ea4-4c0b-ad7c-8ba9df35241c", "sourceURL": "https://skaffold.dev/docs/environment/kube-context", "url": "https://skaffold.dev/docs/environment/kube-context/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I kube-context activation and skaffold profiles in skaffold?\n\nAssistant: To kube-context activation and skaffold profiles in skaffold, here's what you do:\nThe kube-context has a double role for Skaffold profiles:\n\n1. A Skaffold profile may be auto-activated by the current kube-context (via `profiles.activation.kubeContext`).\n\n2. A Skaffold profile may change the kube-context (via `profiles.deploy.kubeContext`).\n\nSkaffold ensures that these two roles are not conflicting. To that end, profile activation is done with the original kube-context. If any profile is auto-activated by a matching kube-context, the resulting kube-context must remain unchanged. This rule prevents profile-specific settings for one context to be deployed into a different context.\n\nFor example, given the following profiles:\n\n```yaml\nprofiles:\n  - name: profile-1\n    deploy:\n      kubeContext: docker-for-desktop\n\n  - name: profile-2\n    activation:\n      - kubeContext: minikube\n```\n\nIt is illegal to activate both profiles here, because `profile-2` has an activation by `kube-context` and `profile-1` changes the effective `kube-context`. This happens for\n\n- `skaffold run -p profile-1,profile-2`\n- `skaffold run -p profile-1` if the current kube-context is `minikube`\n\n#### Note\n\nIt is possible to activate conflicting profiles in conjunction with the CLI flag. So the following example is valid `skaffold run --kube-context minikube -p profile-1,profile-2`..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/environment/kube-context", "title": "Kube-context Activation", "description": "This page covers how to activate and manage kube-contexts in Skaffold when interacting with Kubernetes clusters.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 04:04:58", "type": "section_detail", "page_metadata": {"og:title": "Kube-context Activation", "description": "When interacting with a Kubernetes cluster, just like any other Kubernetes-native tool,\nSkaffold requires a valid Kubernetes context to be configured. …", "modifiedTime": "2025-01-23T10:14:58-05:00", "article:modified_time": "2025-01-23T10:14:58-05:00", "title": "Kube-context Activation | Skaffold", "ogDescription": "When interacting with a Kubernetes cluster, just like any other Kubernetes-native tool, Skaffold requires a valid Kubernetes context to be configured. The selected kube-context determines the Kubernetes cluster, the Kubernetes user, and the default namespace. By default, Skaffold uses the current kube-context from your kube-config file.\nYou can override this default one of two ways:\n  --kube-context flag\nskaffold dev --kube-context <myrepo>   Specify deploy.kubeContext configuration in skaffold.yaml", "og:url": "https://skaffold.dev/docs/environment/kube-context/", "og:site_name": "Skaffold", "twitter:title": "Kube-context Activation", "robots": "index, follow", "twitter:card": "summary", "ogTitle": "Kube-context Activation", "twitter:description": "When interacting with a Kubernetes cluster, just like any other Kubernetes-native tool, Skaffold requires a valid Kubernetes context to be configured. The selected kube-context determines the Kubernetes cluster, the Kubernetes user, and the default namespace. By default, Skaffold uses the current kube-context from your kube-config file.\nYou can override this default one of two ways:\n  --kube-context flag\nskaffold dev --kube-context <myrepo>   Specify deploy.kubeContext configuration in skaffold.yaml", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogSiteName": "Skaffold", "ogUrl": "https://skaffold.dev/docs/environment/kube-context/", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "language": "en", "og:description": "When interacting with a Kubernetes cluster, just like any other Kubernetes-native tool, Skaffold requires a valid Kubernetes context to be configured. The selected kube-context determines the Kubernetes cluster, the Kubernetes user, and the default namespace. By default, Skaffold uses the current kube-context from your kube-config file.\nYou can override this default one of two ways:\n  --kube-context flag\nskaffold dev --kube-context <myrepo>   Specify deploy.kubeContext configuration in skaffold.yaml", "og:type": "article", "article:section": "docs", "generator": "Hugo 0.99.1", "scrapeId": "20421ccd-9ea4-4c0b-ad7c-8ba9df35241c", "sourceURL": "https://skaffold.dev/docs/environment/kube-context", "url": "https://skaffold.dev/docs/environment/kube-context/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I limitations in skaffold?\n\nAssistant: To limitations in skaffold, here's what you do:\nIt is not possible to change the kube-context of a running `skaffold dev` session. To pick up the changes to `kubeContext`, you will need to quit and re-run `skaffold dev`..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/environment/kube-context", "title": "Kube-context Activation", "description": "This page covers how to activate and manage kube-contexts in Skaffold when interacting with Kubernetes clusters.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 04:04:58", "type": "section_detail", "page_metadata": {"og:title": "Kube-context Activation", "description": "When interacting with a Kubernetes cluster, just like any other Kubernetes-native tool,\nSkaffold requires a valid Kubernetes context to be configured. …", "modifiedTime": "2025-01-23T10:14:58-05:00", "article:modified_time": "2025-01-23T10:14:58-05:00", "title": "Kube-context Activation | Skaffold", "ogDescription": "When interacting with a Kubernetes cluster, just like any other Kubernetes-native tool, Skaffold requires a valid Kubernetes context to be configured. The selected kube-context determines the Kubernetes cluster, the Kubernetes user, and the default namespace. By default, Skaffold uses the current kube-context from your kube-config file.\nYou can override this default one of two ways:\n  --kube-context flag\nskaffold dev --kube-context <myrepo>   Specify deploy.kubeContext configuration in skaffold.yaml", "og:url": "https://skaffold.dev/docs/environment/kube-context/", "og:site_name": "Skaffold", "twitter:title": "Kube-context Activation", "robots": "index, follow", "twitter:card": "summary", "ogTitle": "Kube-context Activation", "twitter:description": "When interacting with a Kubernetes cluster, just like any other Kubernetes-native tool, Skaffold requires a valid Kubernetes context to be configured. The selected kube-context determines the Kubernetes cluster, the Kubernetes user, and the default namespace. By default, Skaffold uses the current kube-context from your kube-config file.\nYou can override this default one of two ways:\n  --kube-context flag\nskaffold dev --kube-context <myrepo>   Specify deploy.kubeContext configuration in skaffold.yaml", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogSiteName": "Skaffold", "ogUrl": "https://skaffold.dev/docs/environment/kube-context/", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "language": "en", "og:description": "When interacting with a Kubernetes cluster, just like any other Kubernetes-native tool, Skaffold requires a valid Kubernetes context to be configured. The selected kube-context determines the Kubernetes cluster, the Kubernetes user, and the default namespace. By default, Skaffold uses the current kube-context from your kube-config file.\nYou can override this default one of two ways:\n  --kube-context flag\nskaffold dev --kube-context <myrepo>   Specify deploy.kubeContext configuration in skaffold.yaml", "og:type": "article", "article:section": "docs", "generator": "Hugo 0.99.1", "scrapeId": "20421ccd-9ea4-4c0b-ad7c-8ba9df35241c", "sourceURL": "https://skaffold.dev/docs/environment/kube-context", "url": "https://skaffold.dev/docs/environment/kube-context/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I kubeconfig selection in skaffold?\n\nAssistant: To kubeconfig selection in skaffold, here's what you do:\nThe kubeconfig file is only loaded once during Skaffold’s startup phase.\n\n1. If the `--kubeconfig` flag is set, then only that file is loaded.\n2. If `$KUBECONFIG` environment variable is set, then it is used as a list of paths (normal path delimiting rules for your system). These paths are merged.\n3. Otherwise, ${HOME}/.kube/config is used.\n4. If neither `--kubeconfig` or `--kube-context` are given and no kubeconfig file is found, Skaffold will try to guess an in-cluster configuration using the secrets stored in `/var/run/secrets/kubernetes.io/serviceaccount/`. This is useful when Skaffold runs inside a kubernetes Pod and should deploy to the same cluster..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/environment/kube-context", "title": "Kube-context Activation", "description": "This page covers how to activate and manage kube-contexts in Skaffold when interacting with Kubernetes clusters.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 04:04:58", "type": "section_detail", "page_metadata": {"og:title": "Kube-context Activation", "description": "When interacting with a Kubernetes cluster, just like any other Kubernetes-native tool,\nSkaffold requires a valid Kubernetes context to be configured. …", "modifiedTime": "2025-01-23T10:14:58-05:00", "article:modified_time": "2025-01-23T10:14:58-05:00", "title": "Kube-context Activation | Skaffold", "ogDescription": "When interacting with a Kubernetes cluster, just like any other Kubernetes-native tool, Skaffold requires a valid Kubernetes context to be configured. The selected kube-context determines the Kubernetes cluster, the Kubernetes user, and the default namespace. By default, Skaffold uses the current kube-context from your kube-config file.\nYou can override this default one of two ways:\n  --kube-context flag\nskaffold dev --kube-context <myrepo>   Specify deploy.kubeContext configuration in skaffold.yaml", "og:url": "https://skaffold.dev/docs/environment/kube-context/", "og:site_name": "Skaffold", "twitter:title": "Kube-context Activation", "robots": "index, follow", "twitter:card": "summary", "ogTitle": "Kube-context Activation", "twitter:description": "When interacting with a Kubernetes cluster, just like any other Kubernetes-native tool, Skaffold requires a valid Kubernetes context to be configured. The selected kube-context determines the Kubernetes cluster, the Kubernetes user, and the default namespace. By default, Skaffold uses the current kube-context from your kube-config file.\nYou can override this default one of two ways:\n  --kube-context flag\nskaffold dev --kube-context <myrepo>   Specify deploy.kubeContext configuration in skaffold.yaml", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogSiteName": "Skaffold", "ogUrl": "https://skaffold.dev/docs/environment/kube-context/", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "language": "en", "og:description": "When interacting with a Kubernetes cluster, just like any other Kubernetes-native tool, Skaffold requires a valid Kubernetes context to be configured. The selected kube-context determines the Kubernetes cluster, the Kubernetes user, and the default namespace. By default, Skaffold uses the current kube-context from your kube-config file.\nYou can override this default one of two ways:\n  --kube-context flag\nskaffold dev --kube-context <myrepo>   Specify deploy.kubeContext configuration in skaffold.yaml", "og:type": "article", "article:section": "docs", "generator": "Hugo 0.99.1", "scrapeId": "20421ccd-9ea4-4c0b-ad7c-8ba9df35241c", "sourceURL": "https://skaffold.dev/docs/environment/kube-context", "url": "https://skaffold.dev/docs/environment/kube-context/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you give me some code examples for Kube-context Activation in skaffold?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Kube-context CLI Flag Example**:\n\n```yaml\nskaffold dev --kube-context <myrepo>\n```\n\nThis snippet shows you how to kube-context cli flag example, which is an important aspect of kube-context activation.\n\n**Kube-context in Skaffold YAML Example**:\n\n```yaml\ndeploy:\n     kubeContext: minikube\n```\n\nThis snippet shows you how to kube-context in skaffold yaml example, which is an important aspect of kube-context activation.\n\n**Skaffold Profiles Example**:\n\n```yaml\nprofiles:\n  - name: profile-1\n    deploy:\n      kubeContext: docker-for-desktop\n\n  - name: profile-2\n    activation:\n      - kubeContext: minikube\n```\n\nThis snippet shows you how to skaffold profiles example, which is an important aspect of kube-context activation.\n\n**Skaffold Run Command with Profiles Example**:\n\n```yaml\nskaffold run --kube-context minikube -p profile-1,profile-2\n```\n\nThis snippet shows you how to skaffold run command with profiles example, which is an important aspect of kube-context activation.\n\n", "metadata": {"source_url": "https://skaffold.dev/docs/environment/kube-context", "title": "Kube-context Activation", "description": "This page covers how to activate and manage kube-contexts in Skaffold when interacting with Kubernetes clusters.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 04:04:58", "type": "code_examples", "page_metadata": {"og:title": "Kube-context Activation", "description": "When interacting with a Kubernetes cluster, just like any other Kubernetes-native tool,\nSkaffold requires a valid Kubernetes context to be configured. …", "modifiedTime": "2025-01-23T10:14:58-05:00", "article:modified_time": "2025-01-23T10:14:58-05:00", "title": "Kube-context Activation | Skaffold", "ogDescription": "When interacting with a Kubernetes cluster, just like any other Kubernetes-native tool, Skaffold requires a valid Kubernetes context to be configured. The selected kube-context determines the Kubernetes cluster, the Kubernetes user, and the default namespace. By default, Skaffold uses the current kube-context from your kube-config file.\nYou can override this default one of two ways:\n  --kube-context flag\nskaffold dev --kube-context <myrepo>   Specify deploy.kubeContext configuration in skaffold.yaml", "og:url": "https://skaffold.dev/docs/environment/kube-context/", "og:site_name": "Skaffold", "twitter:title": "Kube-context Activation", "robots": "index, follow", "twitter:card": "summary", "ogTitle": "Kube-context Activation", "twitter:description": "When interacting with a Kubernetes cluster, just like any other Kubernetes-native tool, Skaffold requires a valid Kubernetes context to be configured. The selected kube-context determines the Kubernetes cluster, the Kubernetes user, and the default namespace. By default, Skaffold uses the current kube-context from your kube-config file.\nYou can override this default one of two ways:\n  --kube-context flag\nskaffold dev --kube-context <myrepo>   Specify deploy.kubeContext configuration in skaffold.yaml", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogSiteName": "Skaffold", "ogUrl": "https://skaffold.dev/docs/environment/kube-context/", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "language": "en", "og:description": "When interacting with a Kubernetes cluster, just like any other Kubernetes-native tool, Skaffold requires a valid Kubernetes context to be configured. The selected kube-context determines the Kubernetes cluster, the Kubernetes user, and the default namespace. By default, Skaffold uses the current kube-context from your kube-config file.\nYou can override this default one of two ways:\n  --kube-context flag\nskaffold dev --kube-context <myrepo>   Specify deploy.kubeContext configuration in skaffold.yaml", "og:type": "article", "article:section": "docs", "generator": "Hugo 0.99.1", "scrapeId": "20421ccd-9ea4-4c0b-ad7c-8ba9df35241c", "sourceURL": "https://skaffold.dev/docs/environment/kube-context", "url": "https://skaffold.dev/docs/environment/kube-context/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: What are some tips for using Kube-context Activation in skaffold effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nThe CLI flag always takes precedence over the config field in the skaffold.yaml.\n\nIt is illegal to activate conflicting profiles that change the kube-context.\n\nTo pick up changes to kubeContext, quit and re-run skaffold dev.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://skaffold.dev/docs/environment/kube-context", "title": "Kube-context Activation", "description": "This page covers how to activate and manage kube-contexts in Skaffold when interacting with Kubernetes clusters.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 04:04:58", "type": "best_practices", "page_metadata": {"og:title": "Kube-context Activation", "description": "When interacting with a Kubernetes cluster, just like any other Kubernetes-native tool,\nSkaffold requires a valid Kubernetes context to be configured. …", "modifiedTime": "2025-01-23T10:14:58-05:00", "article:modified_time": "2025-01-23T10:14:58-05:00", "title": "Kube-context Activation | Skaffold", "ogDescription": "When interacting with a Kubernetes cluster, just like any other Kubernetes-native tool, Skaffold requires a valid Kubernetes context to be configured. The selected kube-context determines the Kubernetes cluster, the Kubernetes user, and the default namespace. By default, Skaffold uses the current kube-context from your kube-config file.\nYou can override this default one of two ways:\n  --kube-context flag\nskaffold dev --kube-context <myrepo>   Specify deploy.kubeContext configuration in skaffold.yaml", "og:url": "https://skaffold.dev/docs/environment/kube-context/", "og:site_name": "Skaffold", "twitter:title": "Kube-context Activation", "robots": "index, follow", "twitter:card": "summary", "ogTitle": "Kube-context Activation", "twitter:description": "When interacting with a Kubernetes cluster, just like any other Kubernetes-native tool, Skaffold requires a valid Kubernetes context to be configured. The selected kube-context determines the Kubernetes cluster, the Kubernetes user, and the default namespace. By default, Skaffold uses the current kube-context from your kube-config file.\nYou can override this default one of two ways:\n  --kube-context flag\nskaffold dev --kube-context <myrepo>   Specify deploy.kubeContext configuration in skaffold.yaml", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogSiteName": "Skaffold", "ogUrl": "https://skaffold.dev/docs/environment/kube-context/", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "language": "en", "og:description": "When interacting with a Kubernetes cluster, just like any other Kubernetes-native tool, Skaffold requires a valid Kubernetes context to be configured. The selected kube-context determines the Kubernetes cluster, the Kubernetes user, and the default namespace. By default, Skaffold uses the current kube-context from your kube-config file.\nYou can override this default one of two ways:\n  --kube-context flag\nskaffold dev --kube-context <myrepo>   Specify deploy.kubeContext configuration in skaffold.yaml", "og:type": "article", "article:section": "docs", "generator": "Hugo 0.99.1", "scrapeId": "20421ccd-9ea4-4c0b-ad7c-8ba9df35241c", "sourceURL": "https://skaffold.dev/docs/environment/kube-context", "url": "https://skaffold.dev/docs/environment/kube-context/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what Use Skaffold to build and deploy an application on Kubernetes is in skaffold?\n\nAssistant: Sure, I'd be happy to explain Use Skaffold to build and deploy an application on Kubernetes in skaffold.\n\n# Use Skaffold to build and deploy an application on Kubernetes\n\nThis is a link to an introductory Cloud Shell tutorial. In this tutorial, you will learn how to use Skaffold to bootstrap your configuration, automatically build and deploy applications, and manage Kubernetes manifests.Here's a quick rundown of what this is about:\n\n## Overview\n\nIn this tutorial, you will:\n\n- Use **skaffold init** to bootstrap your Skaffold config.\n- Use **skaffold dev** to automatically build and deploy your application when your code changes.\n- Use **skaffold build** and **skaffold test** to tag, push, and test your container images.\n- Use **skaffold render** and **skaffold apply** to generate and deploy Kubernetes manifests as part of a GitOps workflow.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/tutorials/build-and-deploy-to-kubernetes", "title": "Use Skaffold to build and deploy an application on Kubernetes", "description": "This is a link to an introductory Cloud Shell tutorial. In this tutorial, you will learn how to use Skaffold to bootstrap your configuration, automatically build and deploy applications, and manage Kubernetes manifests.", "has_code_examples": false, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 04:05:04", "type": "overview", "page_metadata": {"twitter:card": "summary", "robots": "index, follow", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "title": "Use Skaffold to build and deploy an application on Kubernetes | Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "ogUrl": "https://skaffold.dev/docs/tutorials/build-and-deploy-to-kubernetes/", "og:url": "https://skaffold.dev/docs/tutorials/build-and-deploy-to-kubernetes/", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:type": "article", "twitter:description": "This is a link to an introductory Cloud Shell tutorial. In this tutorial, you will:\n Use skaffold init to bootstrap your Skaffold config. Use skaffold dev to automatically build and deploy your application when your code changes. Use skaffold build and skaffold test to tag, push, and test your container images. Use skaffold render and skaffold apply to generate and deploy Kubernetes manifests as part of a GitOps workflow.", "modifiedTime": "2025-01-23T10:14:58-05:00", "description": "This is a link to an introductory Cloud Shell tutorial. In this tutorial, you will:\n\nUse skaffold init to bootstrap your Skaffold config.\nUse skaffold …", "og:title": "Use Skaffold to build and deploy an application on Kubernetes", "article:section": "docs", "language": "en", "og:site_name": "Skaffold", "twitter:title": "Use Skaffold to build and deploy an application on Kubernetes", "ogSiteName": "Skaffold", "ogTitle": "Use Skaffold to build and deploy an application on Kubernetes", "ogDescription": "This is a link to an introductory Cloud Shell tutorial. In this tutorial, you will:\n Use skaffold init to bootstrap your Skaffold config. Use skaffold dev to automatically build and deploy your application when your code changes. Use skaffold build and skaffold test to tag, push, and test your container images. Use skaffold render and skaffold apply to generate and deploy Kubernetes manifests as part of a GitOps workflow.", "generator": "Hugo 0.99.1", "og:description": "This is a link to an introductory Cloud Shell tutorial. In this tutorial, you will:\n Use skaffold init to bootstrap your Skaffold config. Use skaffold dev to automatically build and deploy your application when your code changes. Use skaffold build and skaffold test to tag, push, and test your container images. Use skaffold render and skaffold apply to generate and deploy Kubernetes manifests as part of a GitOps workflow.", "scrapeId": "d6002d9f-1884-4e1c-ac73-5be55b8c0aa9", "sourceURL": "https://skaffold.dev/docs/tutorials/build-and-deploy-to-kubernetes", "url": "https://skaffold.dev/docs/tutorials/build-and-deploy-to-kubernetes/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I overview in skaffold?\n\nAssistant: To overview in skaffold, here's what you do:\nIn this tutorial, you will:\n\n- Use **skaffold init** to bootstrap your Skaffold config.\n- Use **skaffold dev** to automatically build and deploy your application when your code changes.\n- Use **skaffold build** and **skaffold test** to tag, push, and test your container images.\n- Use **skaffold render** and **skaffold apply** to generate and deploy Kubernetes manifests as part of a GitOps workflow..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/tutorials/build-and-deploy-to-kubernetes", "title": "Use Skaffold to build and deploy an application on Kubernetes", "description": "This is a link to an introductory Cloud Shell tutorial. In this tutorial, you will learn how to use Skaffold to bootstrap your configuration, automatically build and deploy applications, and manage Kubernetes manifests.", "has_code_examples": false, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 04:05:04", "type": "section_detail", "page_metadata": {"twitter:card": "summary", "robots": "index, follow", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "title": "Use Skaffold to build and deploy an application on Kubernetes | Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "ogUrl": "https://skaffold.dev/docs/tutorials/build-and-deploy-to-kubernetes/", "og:url": "https://skaffold.dev/docs/tutorials/build-and-deploy-to-kubernetes/", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:type": "article", "twitter:description": "This is a link to an introductory Cloud Shell tutorial. In this tutorial, you will:\n Use skaffold init to bootstrap your Skaffold config. Use skaffold dev to automatically build and deploy your application when your code changes. Use skaffold build and skaffold test to tag, push, and test your container images. Use skaffold render and skaffold apply to generate and deploy Kubernetes manifests as part of a GitOps workflow.", "modifiedTime": "2025-01-23T10:14:58-05:00", "description": "This is a link to an introductory Cloud Shell tutorial. In this tutorial, you will:\n\nUse skaffold init to bootstrap your Skaffold config.\nUse skaffold …", "og:title": "Use Skaffold to build and deploy an application on Kubernetes", "article:section": "docs", "language": "en", "og:site_name": "Skaffold", "twitter:title": "Use Skaffold to build and deploy an application on Kubernetes", "ogSiteName": "Skaffold", "ogTitle": "Use Skaffold to build and deploy an application on Kubernetes", "ogDescription": "This is a link to an introductory Cloud Shell tutorial. In this tutorial, you will:\n Use skaffold init to bootstrap your Skaffold config. Use skaffold dev to automatically build and deploy your application when your code changes. Use skaffold build and skaffold test to tag, push, and test your container images. Use skaffold render and skaffold apply to generate and deploy Kubernetes manifests as part of a GitOps workflow.", "generator": "Hugo 0.99.1", "og:description": "This is a link to an introductory Cloud Shell tutorial. In this tutorial, you will:\n Use skaffold init to bootstrap your Skaffold config. Use skaffold dev to automatically build and deploy your application when your code changes. Use skaffold build and skaffold test to tag, push, and test your container images. Use skaffold render and skaffold apply to generate and deploy Kubernetes manifests as part of a GitOps workflow.", "scrapeId": "d6002d9f-1884-4e1c-ac73-5be55b8c0aa9", "sourceURL": "https://skaffold.dev/docs/tutorials/build-and-deploy-to-kubernetes", "url": "https://skaffold.dev/docs/tutorials/build-and-deploy-to-kubernetes/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: What are some tips for using Use Skaffold to build and deploy an application on Kubernetes in skaffold effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nUse the Cloud Shell to easily manage your Kubernetes applications.\n\nRegularly update your Skaffold version to benefit from the latest features and fixes.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://skaffold.dev/docs/tutorials/build-and-deploy-to-kubernetes", "title": "Use Skaffold to build and deploy an application on Kubernetes", "description": "This is a link to an introductory Cloud Shell tutorial. In this tutorial, you will learn how to use Skaffold to bootstrap your configuration, automatically build and deploy applications, and manage Kubernetes manifests.", "has_code_examples": false, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 04:05:04", "type": "best_practices", "page_metadata": {"twitter:card": "summary", "robots": "index, follow", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "title": "Use Skaffold to build and deploy an application on Kubernetes | Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "ogUrl": "https://skaffold.dev/docs/tutorials/build-and-deploy-to-kubernetes/", "og:url": "https://skaffold.dev/docs/tutorials/build-and-deploy-to-kubernetes/", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:type": "article", "twitter:description": "This is a link to an introductory Cloud Shell tutorial. In this tutorial, you will:\n Use skaffold init to bootstrap your Skaffold config. Use skaffold dev to automatically build and deploy your application when your code changes. Use skaffold build and skaffold test to tag, push, and test your container images. Use skaffold render and skaffold apply to generate and deploy Kubernetes manifests as part of a GitOps workflow.", "modifiedTime": "2025-01-23T10:14:58-05:00", "description": "This is a link to an introductory Cloud Shell tutorial. In this tutorial, you will:\n\nUse skaffold init to bootstrap your Skaffold config.\nUse skaffold …", "og:title": "Use Skaffold to build and deploy an application on Kubernetes", "article:section": "docs", "language": "en", "og:site_name": "Skaffold", "twitter:title": "Use Skaffold to build and deploy an application on Kubernetes", "ogSiteName": "Skaffold", "ogTitle": "Use Skaffold to build and deploy an application on Kubernetes", "ogDescription": "This is a link to an introductory Cloud Shell tutorial. In this tutorial, you will:\n Use skaffold init to bootstrap your Skaffold config. Use skaffold dev to automatically build and deploy your application when your code changes. Use skaffold build and skaffold test to tag, push, and test your container images. Use skaffold render and skaffold apply to generate and deploy Kubernetes manifests as part of a GitOps workflow.", "generator": "Hugo 0.99.1", "og:description": "This is a link to an introductory Cloud Shell tutorial. In this tutorial, you will:\n Use skaffold init to bootstrap your Skaffold config. Use skaffold dev to automatically build and deploy your application when your code changes. Use skaffold build and skaffold test to tag, push, and test your container images. Use skaffold render and skaffold apply to generate and deploy Kubernetes manifests as part of a GitOps workflow.", "scrapeId": "d6002d9f-1884-4e1c-ac73-5be55b8c0aa9", "sourceURL": "https://skaffold.dev/docs/tutorials/build-and-deploy-to-kubernetes", "url": "https://skaffold.dev/docs/tutorials/build-and-deploy-to-kubernetes/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what Environment Management is in skaffold?\n\nAssistant: Sure, I'd be happy to explain Environment Management in skaffold.\n\n# Environment Management\n\nManaging various aspects of the environment in Skaffold.Here's a quick rundown of what this is about:\n\n## Environment Variables File\n\nLoading environment variables from a file.\n\n## Image Registry Handling\n\nControlling where your images are pushed.\n\n## kube-context\n\nManaging the active Kubernetes context for your cluster.\n\n## Local Cluster\n\nOffline development with Skaffold and Minikube.\n\n## Env Var Templating\n\nTemplating your skaffold.yaml using environment variables.\n\n## Profiles\n\nCluster-specific skaffold.yaml configuration using profiles.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/environment", "title": "Environment Management", "description": "Managing various aspects of the environment in Skaffold.", "has_code_examples": false, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 04:05:10", "type": "overview", "page_metadata": {"ogUrl": "https://skaffold.dev/docs/environment/", "ogSiteName": "Skaffold", "og:url": "https://skaffold.dev/docs/environment/", "twitter:card": "summary", "title": "Environment Management | Skaffold", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "robots": "index, follow", "twitter:title": "Environment Management", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:description": "Easy and Repeatable Container & Kubernetes Development", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:title": "Environment Management", "generator": "Hugo 0.99.1", "og:site_name": "Skaffold", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "description": "\n\n\nEnvironment Management with Skaffold\n\n\n\n\n\nEnvironment Variables File\nLoading environment variables from a file\n\n\nImage Registry Handling …", "language": "en", "ogTitle": "Environment Management", "og:type": "website", "scrapeId": "64022f3b-ed77-4394-9d4b-8c6e7f46da79", "sourceURL": "https://skaffold.dev/docs/environment", "url": "https://skaffold.dev/docs/environment/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I environment variables file in skaffold?\n\nAssistant: To environment variables file in skaffold, here's what you do:\nLoading environment variables from a file..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/environment", "title": "Environment Management", "description": "Managing various aspects of the environment in Skaffold.", "has_code_examples": false, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 04:05:10", "type": "section_detail", "page_metadata": {"ogUrl": "https://skaffold.dev/docs/environment/", "ogSiteName": "Skaffold", "og:url": "https://skaffold.dev/docs/environment/", "twitter:card": "summary", "title": "Environment Management | Skaffold", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "robots": "index, follow", "twitter:title": "Environment Management", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:description": "Easy and Repeatable Container & Kubernetes Development", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:title": "Environment Management", "generator": "Hugo 0.99.1", "og:site_name": "Skaffold", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "description": "\n\n\nEnvironment Management with Skaffold\n\n\n\n\n\nEnvironment Variables File\nLoading environment variables from a file\n\n\nImage Registry Handling …", "language": "en", "ogTitle": "Environment Management", "og:type": "website", "scrapeId": "64022f3b-ed77-4394-9d4b-8c6e7f46da79", "sourceURL": "https://skaffold.dev/docs/environment", "url": "https://skaffold.dev/docs/environment/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I image registry handling in skaffold?\n\nAssistant: To image registry handling in skaffold, here's what you do:\nControlling where your images are pushed..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/environment", "title": "Environment Management", "description": "Managing various aspects of the environment in Skaffold.", "has_code_examples": false, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 04:05:10", "type": "section_detail", "page_metadata": {"ogUrl": "https://skaffold.dev/docs/environment/", "ogSiteName": "Skaffold", "og:url": "https://skaffold.dev/docs/environment/", "twitter:card": "summary", "title": "Environment Management | Skaffold", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "robots": "index, follow", "twitter:title": "Environment Management", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:description": "Easy and Repeatable Container & Kubernetes Development", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:title": "Environment Management", "generator": "Hugo 0.99.1", "og:site_name": "Skaffold", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "description": "\n\n\nEnvironment Management with Skaffold\n\n\n\n\n\nEnvironment Variables File\nLoading environment variables from a file\n\n\nImage Registry Handling …", "language": "en", "ogTitle": "Environment Management", "og:type": "website", "scrapeId": "64022f3b-ed77-4394-9d4b-8c6e7f46da79", "sourceURL": "https://skaffold.dev/docs/environment", "url": "https://skaffold.dev/docs/environment/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I kube-context in skaffold?\n\nAssistant: To kube-context in skaffold, here's what you do:\nManaging the active Kubernetes context for your cluster..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/environment", "title": "Environment Management", "description": "Managing various aspects of the environment in Skaffold.", "has_code_examples": false, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 04:05:10", "type": "section_detail", "page_metadata": {"ogUrl": "https://skaffold.dev/docs/environment/", "ogSiteName": "Skaffold", "og:url": "https://skaffold.dev/docs/environment/", "twitter:card": "summary", "title": "Environment Management | Skaffold", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "robots": "index, follow", "twitter:title": "Environment Management", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:description": "Easy and Repeatable Container & Kubernetes Development", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:title": "Environment Management", "generator": "Hugo 0.99.1", "og:site_name": "Skaffold", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "description": "\n\n\nEnvironment Management with Skaffold\n\n\n\n\n\nEnvironment Variables File\nLoading environment variables from a file\n\n\nImage Registry Handling …", "language": "en", "ogTitle": "Environment Management", "og:type": "website", "scrapeId": "64022f3b-ed77-4394-9d4b-8c6e7f46da79", "sourceURL": "https://skaffold.dev/docs/environment", "url": "https://skaffold.dev/docs/environment/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I local cluster in skaffold?\n\nAssistant: To local cluster in skaffold, here's what you do:\nOffline development with Skaffold and Minikube..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/environment", "title": "Environment Management", "description": "Managing various aspects of the environment in Skaffold.", "has_code_examples": false, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 04:05:10", "type": "section_detail", "page_metadata": {"ogUrl": "https://skaffold.dev/docs/environment/", "ogSiteName": "Skaffold", "og:url": "https://skaffold.dev/docs/environment/", "twitter:card": "summary", "title": "Environment Management | Skaffold", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "robots": "index, follow", "twitter:title": "Environment Management", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:description": "Easy and Repeatable Container & Kubernetes Development", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:title": "Environment Management", "generator": "Hugo 0.99.1", "og:site_name": "Skaffold", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "description": "\n\n\nEnvironment Management with Skaffold\n\n\n\n\n\nEnvironment Variables File\nLoading environment variables from a file\n\n\nImage Registry Handling …", "language": "en", "ogTitle": "Environment Management", "og:type": "website", "scrapeId": "64022f3b-ed77-4394-9d4b-8c6e7f46da79", "sourceURL": "https://skaffold.dev/docs/environment", "url": "https://skaffold.dev/docs/environment/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I env var templating in skaffold?\n\nAssistant: To env var templating in skaffold, here's what you do:\nTemplating your skaffold.yaml using environment variables..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/environment", "title": "Environment Management", "description": "Managing various aspects of the environment in Skaffold.", "has_code_examples": false, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 04:05:10", "type": "section_detail", "page_metadata": {"ogUrl": "https://skaffold.dev/docs/environment/", "ogSiteName": "Skaffold", "og:url": "https://skaffold.dev/docs/environment/", "twitter:card": "summary", "title": "Environment Management | Skaffold", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "robots": "index, follow", "twitter:title": "Environment Management", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:description": "Easy and Repeatable Container & Kubernetes Development", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:title": "Environment Management", "generator": "Hugo 0.99.1", "og:site_name": "Skaffold", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "description": "\n\n\nEnvironment Management with Skaffold\n\n\n\n\n\nEnvironment Variables File\nLoading environment variables from a file\n\n\nImage Registry Handling …", "language": "en", "ogTitle": "Environment Management", "og:type": "website", "scrapeId": "64022f3b-ed77-4394-9d4b-8c6e7f46da79", "sourceURL": "https://skaffold.dev/docs/environment", "url": "https://skaffold.dev/docs/environment/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I profiles in skaffold?\n\nAssistant: To profiles in skaffold, here's what you do:\nCluster-specific skaffold.yaml configuration using profiles..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/environment", "title": "Environment Management", "description": "Managing various aspects of the environment in Skaffold.", "has_code_examples": false, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 04:05:10", "type": "section_detail", "page_metadata": {"ogUrl": "https://skaffold.dev/docs/environment/", "ogSiteName": "Skaffold", "og:url": "https://skaffold.dev/docs/environment/", "twitter:card": "summary", "title": "Environment Management | Skaffold", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "robots": "index, follow", "twitter:title": "Environment Management", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:description": "Easy and Repeatable Container & Kubernetes Development", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:title": "Environment Management", "generator": "Hugo 0.99.1", "og:site_name": "Skaffold", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "description": "\n\n\nEnvironment Management with Skaffold\n\n\n\n\n\nEnvironment Variables File\nLoading environment variables from a file\n\n\nImage Registry Handling …", "language": "en", "ogTitle": "Environment Management", "og:type": "website", "scrapeId": "64022f3b-ed77-4394-9d4b-8c6e7f46da79", "sourceURL": "https://skaffold.dev/docs/environment", "url": "https://skaffold.dev/docs/environment/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: What are some tips for using Environment Management in skaffold effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nEnsure to keep your environment variables secure and not expose sensitive information in your files.\n\nUse profiles to manage different configurations for various environments effectively.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://skaffold.dev/docs/environment", "title": "Environment Management", "description": "Managing various aspects of the environment in Skaffold.", "has_code_examples": false, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 04:05:10", "type": "best_practices", "page_metadata": {"ogUrl": "https://skaffold.dev/docs/environment/", "ogSiteName": "Skaffold", "og:url": "https://skaffold.dev/docs/environment/", "twitter:card": "summary", "title": "Environment Management | Skaffold", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "robots": "index, follow", "twitter:title": "Environment Management", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:description": "Easy and Repeatable Container & Kubernetes Development", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:title": "Environment Management", "generator": "Hugo 0.99.1", "og:site_name": "Skaffold", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "description": "\n\n\nEnvironment Management with Skaffold\n\n\n\n\n\nEnvironment Variables File\nLoading environment variables from a file\n\n\nImage Registry Handling …", "language": "en", "ogTitle": "Environment Management", "og:type": "website", "scrapeId": "64022f3b-ed77-4394-9d4b-8c6e7f46da79", "sourceURL": "https://skaffold.dev/docs/environment", "url": "https://skaffold.dev/docs/environment/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what Templated Fields is in skaffold?\n\nAssistant: Sure, I'd be happy to explain Templated Fields in skaffold.\n\n# Templated Fields\n\nSkaffold allows for certain fields in the config to be templated via the Go `text/template` package. Environment variables and certain special values computed by Skaffold are available in the templating context.Here's a quick rundown of what this is about:\n\n## Overview\n\nSkaffold allows for certain fields in the config to be templated via the Go `text/template` package. Environment variables and certain special values computed by Skaffold are available in the templating context (defined as “dot” or `.`).\n\n## Go Templates\n\nGo templates are quite powerful, including control flow, arguments, pipelining and variables. Predefined functions in the standard library are complemented in Skaffold by the Sprig template function library.\n\n## Code Example\n\n```yaml\nbuild:\n  tagPolicy:\n    envTemplate:\n      template: \"{{.FOO}}\"\n  artifacts:\n  - image: gcr.io/k8s-skaffold/example\n```\n\n## Example Output\n\nSuppose the value of the `FOO` environment variable is `v1`, the image built will be `gcr.io/k8s-skaffold/example:v1`.\n\n## List of Fields that Support Templating\n\n- `build.artifacts[].docker.buildArgs`\n- `build.artifacts[].ko.{env,flags,labels,ldflags}`\n- `build.tagPolicy.envTemplate.template`\n- `deploy.helm.releases[].chartPath`\n- `deploy.helm.releases[].name`\n- `deploy.helm.releases[].namespace`\n- `deploy.helm.releases[].repo`\n- `deploy.helm.releases[].setValueTemplates`\n- `deploy.helm.releases[].version`\n- `deploy.helm.releases.valuesFiles`\n- `deploy.kubectl.defaultNamespace`\n- `deploy.kustomize.defaultNamespace`\n- `manifests.kustomize.paths.[]`\n- `manifests.helm.releases[].setValueTemplates`\n- `portForward.namespace`\n- `portForward.resourceName`\n_Please note, this list is not exhaustive._\n\n## List of Variables Available for Templating\n\n- all environment variables passed to the Skaffold process at startup\n- For the `envTemplate` tagger:\n  - `IMAGE_NAME`\n- For Helm deployments:\n  - `IMAGE_NAME`, `IMAGE_TAG`, `IMAGE_DIGEST`, `IMAGE_DOMAIN`, `IMAGE_REPO_NO_DOMAIN`\n  - `IMAGE_NAME_<artifact-name>`, `IMAGE_REPO_<artifact-name>`, `IMAGE_TAG_<artifact-name>`, `IMAGE_DIGEST_<artifact-name>`\n  - `IMAGE_NAME2`, `IMAGE_REPO2`, `IMAGE_TAG2`, `IMAGE_DIGEST2`\n  - `IMAGE_NAME<N>`, `IMAGE_REPO<N>`, `IMAGE_TAG<N>`, `IMAGE_DIGEST<N>`\n\n## Local Template Functions\n\nIn addition to the functions listed above, Skaffold locally provides the following:\n- `cmd`: This allows users to use the result from external commands in template, for example `{{cmd \"bash\" \"-c\" \"xxx xxx xxx\"}}` can be used to execute bash script and get the result into the template.\n\n## Usage Examples\n\nThe templating pipelines provided by Go templates can be quite comprehensive when combined with Sprig. For example:\n- The environment variable `SOURCE_DATE_EPOCH` commonly specifies a UNIX timestamp to be used in replacement of the current date and time in compiler `__DATE__` and `__TIME__` macros, so that the embedded timestamps become reproducible. This could be written as:\n`default now .SOURCE_DATE_EPOCH | date \"2006-01-02T15:04:05-0700\"`\n- The idiomatic seven-character abbreviated Git hash is easily accessible:\n`cmd \"bash\" \"-c\" \"git rev-parse HEAD\" | substr 0 7`\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/environment/templating", "title": "Templated Fields", "description": "Skaffold allows for certain fields in the config to be templated via the Go `text/template` package. Environment variables and certain special values computed by Skaffold are available in the templating context.", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 04:08:35", "type": "overview", "page_metadata": {"og:type": "article", "language": "en", "og:description": "Skaffold allows for certain fields in the config to be templated via the Go text/template package. Environment variables and certain special values computed by Skaffold (see below) are available in the templating context (defined as “dot” or .).\nGo templates are quite powerful, including control flow, arguments, pipelining and variables. Predefined functions in the standard library are complemented in Skaffold by the Sprig template function library.\nbuild:tagPolicy:envTemplate:template:\"{{.FOO}}\"artifacts:- image:gcr.io/k8s-skaffold/example Suppose the value of the FOO environment variable is v1, the image built will be gcr.", "ogUrl": "https://skaffold.dev/docs/environment/templating/", "og:url": "https://skaffold.dev/docs/environment/templating/", "robots": "index, follow", "og:site_name": "Skaffold", "twitter:title": "Templated Fields", "description": "Skaffold allows for certain fields in the config to be templated via the Go text/template package.\nEnvironment variables and certain special values …", "article:section": "docs", "ogSiteName": "Skaffold", "generator": "Hugo 0.99.1", "modifiedTime": "2025-01-23T10:14:58-05:00", "ogTitle": "Templated Fields", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "twitter:description": "Skaffold allows for certain fields in the config to be templated via the Go text/template package. Environment variables and certain special values computed by Skaffold (see below) are available in the templating context (defined as “dot” or .).\nGo templates are quite powerful, including control flow, arguments, pipelining and variables. Predefined functions in the standard library are complemented in Skaffold by the Sprig template function library.\nbuild:tagPolicy:envTemplate:template:\"{{.FOO}}\"artifacts:- image:gcr.io/k8s-skaffold/example Suppose the value of the FOO environment variable is v1, the image built will be gcr.", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "title": "Templated Fields | Skaffold", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:title": "Templated Fields", "twitter:card": "summary", "ogDescription": "Skaffold allows for certain fields in the config to be templated via the Go text/template package. Environment variables and certain special values computed by Skaffold (see below) are available in the templating context (defined as “dot” or .).\nGo templates are quite powerful, including control flow, arguments, pipelining and variables. Predefined functions in the standard library are complemented in Skaffold by the Sprig template function library.\nbuild:tagPolicy:envTemplate:template:\"{{.FOO}}\"artifacts:- image:gcr.io/k8s-skaffold/example Suppose the value of the FOO environment variable is v1, the image built will be gcr.", "scrapeId": "30d71fde-1b14-480c-862d-9740d2140c5a", "sourceURL": "https://skaffold.dev/docs/environment/templating", "url": "https://skaffold.dev/docs/environment/templating/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I overview in skaffold?\n\nAssistant: To overview in skaffold, here's what you do:\nSkaffold allows for certain fields in the config to be templated via the Go `text/template` package. Environment variables and certain special values computed by Skaffold are available in the templating context (defined as “dot” or `.`)..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/environment/templating", "title": "Templated Fields", "description": "Skaffold allows for certain fields in the config to be templated via the Go `text/template` package. Environment variables and certain special values computed by Skaffold are available in the templating context.", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 04:08:35", "type": "section_detail", "page_metadata": {"og:type": "article", "language": "en", "og:description": "Skaffold allows for certain fields in the config to be templated via the Go text/template package. Environment variables and certain special values computed by Skaffold (see below) are available in the templating context (defined as “dot” or .).\nGo templates are quite powerful, including control flow, arguments, pipelining and variables. Predefined functions in the standard library are complemented in Skaffold by the Sprig template function library.\nbuild:tagPolicy:envTemplate:template:\"{{.FOO}}\"artifacts:- image:gcr.io/k8s-skaffold/example Suppose the value of the FOO environment variable is v1, the image built will be gcr.", "ogUrl": "https://skaffold.dev/docs/environment/templating/", "og:url": "https://skaffold.dev/docs/environment/templating/", "robots": "index, follow", "og:site_name": "Skaffold", "twitter:title": "Templated Fields", "description": "Skaffold allows for certain fields in the config to be templated via the Go text/template package.\nEnvironment variables and certain special values …", "article:section": "docs", "ogSiteName": "Skaffold", "generator": "Hugo 0.99.1", "modifiedTime": "2025-01-23T10:14:58-05:00", "ogTitle": "Templated Fields", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "twitter:description": "Skaffold allows for certain fields in the config to be templated via the Go text/template package. Environment variables and certain special values computed by Skaffold (see below) are available in the templating context (defined as “dot” or .).\nGo templates are quite powerful, including control flow, arguments, pipelining and variables. Predefined functions in the standard library are complemented in Skaffold by the Sprig template function library.\nbuild:tagPolicy:envTemplate:template:\"{{.FOO}}\"artifacts:- image:gcr.io/k8s-skaffold/example Suppose the value of the FOO environment variable is v1, the image built will be gcr.", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "title": "Templated Fields | Skaffold", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:title": "Templated Fields", "twitter:card": "summary", "ogDescription": "Skaffold allows for certain fields in the config to be templated via the Go text/template package. Environment variables and certain special values computed by Skaffold (see below) are available in the templating context (defined as “dot” or .).\nGo templates are quite powerful, including control flow, arguments, pipelining and variables. Predefined functions in the standard library are complemented in Skaffold by the Sprig template function library.\nbuild:tagPolicy:envTemplate:template:\"{{.FOO}}\"artifacts:- image:gcr.io/k8s-skaffold/example Suppose the value of the FOO environment variable is v1, the image built will be gcr.", "scrapeId": "30d71fde-1b14-480c-862d-9740d2140c5a", "sourceURL": "https://skaffold.dev/docs/environment/templating", "url": "https://skaffold.dev/docs/environment/templating/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I go templates in skaffold?\n\nAssistant: To go templates in skaffold, here's what you do:\nGo templates are quite powerful, including control flow, arguments, pipelining and variables. Predefined functions in the standard library are complemented in Skaffold by the Sprig template function library..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/environment/templating", "title": "Templated Fields", "description": "Skaffold allows for certain fields in the config to be templated via the Go `text/template` package. Environment variables and certain special values computed by Skaffold are available in the templating context.", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 04:08:35", "type": "section_detail", "page_metadata": {"og:type": "article", "language": "en", "og:description": "Skaffold allows for certain fields in the config to be templated via the Go text/template package. Environment variables and certain special values computed by Skaffold (see below) are available in the templating context (defined as “dot” or .).\nGo templates are quite powerful, including control flow, arguments, pipelining and variables. Predefined functions in the standard library are complemented in Skaffold by the Sprig template function library.\nbuild:tagPolicy:envTemplate:template:\"{{.FOO}}\"artifacts:- image:gcr.io/k8s-skaffold/example Suppose the value of the FOO environment variable is v1, the image built will be gcr.", "ogUrl": "https://skaffold.dev/docs/environment/templating/", "og:url": "https://skaffold.dev/docs/environment/templating/", "robots": "index, follow", "og:site_name": "Skaffold", "twitter:title": "Templated Fields", "description": "Skaffold allows for certain fields in the config to be templated via the Go text/template package.\nEnvironment variables and certain special values …", "article:section": "docs", "ogSiteName": "Skaffold", "generator": "Hugo 0.99.1", "modifiedTime": "2025-01-23T10:14:58-05:00", "ogTitle": "Templated Fields", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "twitter:description": "Skaffold allows for certain fields in the config to be templated via the Go text/template package. Environment variables and certain special values computed by Skaffold (see below) are available in the templating context (defined as “dot” or .).\nGo templates are quite powerful, including control flow, arguments, pipelining and variables. Predefined functions in the standard library are complemented in Skaffold by the Sprig template function library.\nbuild:tagPolicy:envTemplate:template:\"{{.FOO}}\"artifacts:- image:gcr.io/k8s-skaffold/example Suppose the value of the FOO environment variable is v1, the image built will be gcr.", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "title": "Templated Fields | Skaffold", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:title": "Templated Fields", "twitter:card": "summary", "ogDescription": "Skaffold allows for certain fields in the config to be templated via the Go text/template package. Environment variables and certain special values computed by Skaffold (see below) are available in the templating context (defined as “dot” or .).\nGo templates are quite powerful, including control flow, arguments, pipelining and variables. Predefined functions in the standard library are complemented in Skaffold by the Sprig template function library.\nbuild:tagPolicy:envTemplate:template:\"{{.FOO}}\"artifacts:- image:gcr.io/k8s-skaffold/example Suppose the value of the FOO environment variable is v1, the image built will be gcr.", "scrapeId": "30d71fde-1b14-480c-862d-9740d2140c5a", "sourceURL": "https://skaffold.dev/docs/environment/templating", "url": "https://skaffold.dev/docs/environment/templating/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I code example in skaffold?\n\nAssistant: To code example in skaffold, here's what you do:\n```yaml\nbuild:\n  tagPolicy:\n    envTemplate:\n      template: \"{{.FOO}}\"\n  artifacts:\n  - image: gcr.io/k8s-skaffold/example\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/environment/templating", "title": "Templated Fields", "description": "Skaffold allows for certain fields in the config to be templated via the Go `text/template` package. Environment variables and certain special values computed by Skaffold are available in the templating context.", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 04:08:35", "type": "section_detail", "page_metadata": {"og:type": "article", "language": "en", "og:description": "Skaffold allows for certain fields in the config to be templated via the Go text/template package. Environment variables and certain special values computed by Skaffold (see below) are available in the templating context (defined as “dot” or .).\nGo templates are quite powerful, including control flow, arguments, pipelining and variables. Predefined functions in the standard library are complemented in Skaffold by the Sprig template function library.\nbuild:tagPolicy:envTemplate:template:\"{{.FOO}}\"artifacts:- image:gcr.io/k8s-skaffold/example Suppose the value of the FOO environment variable is v1, the image built will be gcr.", "ogUrl": "https://skaffold.dev/docs/environment/templating/", "og:url": "https://skaffold.dev/docs/environment/templating/", "robots": "index, follow", "og:site_name": "Skaffold", "twitter:title": "Templated Fields", "description": "Skaffold allows for certain fields in the config to be templated via the Go text/template package.\nEnvironment variables and certain special values …", "article:section": "docs", "ogSiteName": "Skaffold", "generator": "Hugo 0.99.1", "modifiedTime": "2025-01-23T10:14:58-05:00", "ogTitle": "Templated Fields", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "twitter:description": "Skaffold allows for certain fields in the config to be templated via the Go text/template package. Environment variables and certain special values computed by Skaffold (see below) are available in the templating context (defined as “dot” or .).\nGo templates are quite powerful, including control flow, arguments, pipelining and variables. Predefined functions in the standard library are complemented in Skaffold by the Sprig template function library.\nbuild:tagPolicy:envTemplate:template:\"{{.FOO}}\"artifacts:- image:gcr.io/k8s-skaffold/example Suppose the value of the FOO environment variable is v1, the image built will be gcr.", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "title": "Templated Fields | Skaffold", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:title": "Templated Fields", "twitter:card": "summary", "ogDescription": "Skaffold allows for certain fields in the config to be templated via the Go text/template package. Environment variables and certain special values computed by Skaffold (see below) are available in the templating context (defined as “dot” or .).\nGo templates are quite powerful, including control flow, arguments, pipelining and variables. Predefined functions in the standard library are complemented in Skaffold by the Sprig template function library.\nbuild:tagPolicy:envTemplate:template:\"{{.FOO}}\"artifacts:- image:gcr.io/k8s-skaffold/example Suppose the value of the FOO environment variable is v1, the image built will be gcr.", "scrapeId": "30d71fde-1b14-480c-862d-9740d2140c5a", "sourceURL": "https://skaffold.dev/docs/environment/templating", "url": "https://skaffold.dev/docs/environment/templating/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I example output in skaffold?\n\nAssistant: To example output in skaffold, here's what you do:\nSuppose the value of the `FOO` environment variable is `v1`, the image built will be `gcr.io/k8s-skaffold/example:v1`..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/environment/templating", "title": "Templated Fields", "description": "Skaffold allows for certain fields in the config to be templated via the Go `text/template` package. Environment variables and certain special values computed by Skaffold are available in the templating context.", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 04:08:35", "type": "section_detail", "page_metadata": {"og:type": "article", "language": "en", "og:description": "Skaffold allows for certain fields in the config to be templated via the Go text/template package. Environment variables and certain special values computed by Skaffold (see below) are available in the templating context (defined as “dot” or .).\nGo templates are quite powerful, including control flow, arguments, pipelining and variables. Predefined functions in the standard library are complemented in Skaffold by the Sprig template function library.\nbuild:tagPolicy:envTemplate:template:\"{{.FOO}}\"artifacts:- image:gcr.io/k8s-skaffold/example Suppose the value of the FOO environment variable is v1, the image built will be gcr.", "ogUrl": "https://skaffold.dev/docs/environment/templating/", "og:url": "https://skaffold.dev/docs/environment/templating/", "robots": "index, follow", "og:site_name": "Skaffold", "twitter:title": "Templated Fields", "description": "Skaffold allows for certain fields in the config to be templated via the Go text/template package.\nEnvironment variables and certain special values …", "article:section": "docs", "ogSiteName": "Skaffold", "generator": "Hugo 0.99.1", "modifiedTime": "2025-01-23T10:14:58-05:00", "ogTitle": "Templated Fields", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "twitter:description": "Skaffold allows for certain fields in the config to be templated via the Go text/template package. Environment variables and certain special values computed by Skaffold (see below) are available in the templating context (defined as “dot” or .).\nGo templates are quite powerful, including control flow, arguments, pipelining and variables. Predefined functions in the standard library are complemented in Skaffold by the Sprig template function library.\nbuild:tagPolicy:envTemplate:template:\"{{.FOO}}\"artifacts:- image:gcr.io/k8s-skaffold/example Suppose the value of the FOO environment variable is v1, the image built will be gcr.", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "title": "Templated Fields | Skaffold", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:title": "Templated Fields", "twitter:card": "summary", "ogDescription": "Skaffold allows for certain fields in the config to be templated via the Go text/template package. Environment variables and certain special values computed by Skaffold (see below) are available in the templating context (defined as “dot” or .).\nGo templates are quite powerful, including control flow, arguments, pipelining and variables. Predefined functions in the standard library are complemented in Skaffold by the Sprig template function library.\nbuild:tagPolicy:envTemplate:template:\"{{.FOO}}\"artifacts:- image:gcr.io/k8s-skaffold/example Suppose the value of the FOO environment variable is v1, the image built will be gcr.", "scrapeId": "30d71fde-1b14-480c-862d-9740d2140c5a", "sourceURL": "https://skaffold.dev/docs/environment/templating", "url": "https://skaffold.dev/docs/environment/templating/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I list of fields that support templating in skaffold?\n\nAssistant: To list of fields that support templating in skaffold, here's what you do:\n- `build.artifacts[].docker.buildArgs`\n- `build.artifacts[].ko.{env,flags,labels,ldflags}`\n- `build.tagPolicy.envTemplate.template`\n- `deploy.helm.releases[].chartPath`\n- `deploy.helm.releases[].name`\n- `deploy.helm.releases[].namespace`\n- `deploy.helm.releases[].repo`\n- `deploy.helm.releases[].setValueTemplates`\n- `deploy.helm.releases[].version`\n- `deploy.helm.releases.valuesFiles`\n- `deploy.kubectl.defaultNamespace`\n- `deploy.kustomize.defaultNamespace`\n- `manifests.kustomize.paths.[]`\n- `manifests.helm.releases[].setValueTemplates`\n- `portForward.namespace`\n- `portForward.resourceName`\n_Please note, this list is not exhaustive._.\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/environment/templating", "title": "Templated Fields", "description": "Skaffold allows for certain fields in the config to be templated via the Go `text/template` package. Environment variables and certain special values computed by Skaffold are available in the templating context.", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 04:08:35", "type": "section_detail", "page_metadata": {"og:type": "article", "language": "en", "og:description": "Skaffold allows for certain fields in the config to be templated via the Go text/template package. Environment variables and certain special values computed by Skaffold (see below) are available in the templating context (defined as “dot” or .).\nGo templates are quite powerful, including control flow, arguments, pipelining and variables. Predefined functions in the standard library are complemented in Skaffold by the Sprig template function library.\nbuild:tagPolicy:envTemplate:template:\"{{.FOO}}\"artifacts:- image:gcr.io/k8s-skaffold/example Suppose the value of the FOO environment variable is v1, the image built will be gcr.", "ogUrl": "https://skaffold.dev/docs/environment/templating/", "og:url": "https://skaffold.dev/docs/environment/templating/", "robots": "index, follow", "og:site_name": "Skaffold", "twitter:title": "Templated Fields", "description": "Skaffold allows for certain fields in the config to be templated via the Go text/template package.\nEnvironment variables and certain special values …", "article:section": "docs", "ogSiteName": "Skaffold", "generator": "Hugo 0.99.1", "modifiedTime": "2025-01-23T10:14:58-05:00", "ogTitle": "Templated Fields", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "twitter:description": "Skaffold allows for certain fields in the config to be templated via the Go text/template package. Environment variables and certain special values computed by Skaffold (see below) are available in the templating context (defined as “dot” or .).\nGo templates are quite powerful, including control flow, arguments, pipelining and variables. Predefined functions in the standard library are complemented in Skaffold by the Sprig template function library.\nbuild:tagPolicy:envTemplate:template:\"{{.FOO}}\"artifacts:- image:gcr.io/k8s-skaffold/example Suppose the value of the FOO environment variable is v1, the image built will be gcr.", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "title": "Templated Fields | Skaffold", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:title": "Templated Fields", "twitter:card": "summary", "ogDescription": "Skaffold allows for certain fields in the config to be templated via the Go text/template package. Environment variables and certain special values computed by Skaffold (see below) are available in the templating context (defined as “dot” or .).\nGo templates are quite powerful, including control flow, arguments, pipelining and variables. Predefined functions in the standard library are complemented in Skaffold by the Sprig template function library.\nbuild:tagPolicy:envTemplate:template:\"{{.FOO}}\"artifacts:- image:gcr.io/k8s-skaffold/example Suppose the value of the FOO environment variable is v1, the image built will be gcr.", "scrapeId": "30d71fde-1b14-480c-862d-9740d2140c5a", "sourceURL": "https://skaffold.dev/docs/environment/templating", "url": "https://skaffold.dev/docs/environment/templating/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I list of variables available for templating in skaffold?\n\nAssistant: To list of variables available for templating in skaffold, here's what you do:\n- all environment variables passed to the Skaffold process at startup\n- For the `envTemplate` tagger:\n  - `IMAGE_NAME`\n- For Helm deployments:\n  - `IMAGE_NAME`, `IMAGE_TAG`, `IMAGE_DIGEST`, `IMAGE_DOMAIN`, `IMAGE_REPO_NO_DOMAIN`\n  - `IMAGE_NAME_<artifact-name>`, `IMAGE_REPO_<artifact-name>`, `IMAGE_TAG_<artifact-name>`, `IMAGE_DIGEST_<artifact-name>`\n  - `IMAGE_NAME2`, `IMAGE_REPO2`, `IMAGE_TAG2`, `IMAGE_DIGEST2`\n  - `IMAGE_NAME<N>`, `IMAGE_REPO<N>`, `IMAGE_TAG<N>`, `IMAGE_DIGEST<N>`.\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/environment/templating", "title": "Templated Fields", "description": "Skaffold allows for certain fields in the config to be templated via the Go `text/template` package. Environment variables and certain special values computed by Skaffold are available in the templating context.", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 04:08:35", "type": "section_detail", "page_metadata": {"og:type": "article", "language": "en", "og:description": "Skaffold allows for certain fields in the config to be templated via the Go text/template package. Environment variables and certain special values computed by Skaffold (see below) are available in the templating context (defined as “dot” or .).\nGo templates are quite powerful, including control flow, arguments, pipelining and variables. Predefined functions in the standard library are complemented in Skaffold by the Sprig template function library.\nbuild:tagPolicy:envTemplate:template:\"{{.FOO}}\"artifacts:- image:gcr.io/k8s-skaffold/example Suppose the value of the FOO environment variable is v1, the image built will be gcr.", "ogUrl": "https://skaffold.dev/docs/environment/templating/", "og:url": "https://skaffold.dev/docs/environment/templating/", "robots": "index, follow", "og:site_name": "Skaffold", "twitter:title": "Templated Fields", "description": "Skaffold allows for certain fields in the config to be templated via the Go text/template package.\nEnvironment variables and certain special values …", "article:section": "docs", "ogSiteName": "Skaffold", "generator": "Hugo 0.99.1", "modifiedTime": "2025-01-23T10:14:58-05:00", "ogTitle": "Templated Fields", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "twitter:description": "Skaffold allows for certain fields in the config to be templated via the Go text/template package. Environment variables and certain special values computed by Skaffold (see below) are available in the templating context (defined as “dot” or .).\nGo templates are quite powerful, including control flow, arguments, pipelining and variables. Predefined functions in the standard library are complemented in Skaffold by the Sprig template function library.\nbuild:tagPolicy:envTemplate:template:\"{{.FOO}}\"artifacts:- image:gcr.io/k8s-skaffold/example Suppose the value of the FOO environment variable is v1, the image built will be gcr.", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "title": "Templated Fields | Skaffold", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:title": "Templated Fields", "twitter:card": "summary", "ogDescription": "Skaffold allows for certain fields in the config to be templated via the Go text/template package. Environment variables and certain special values computed by Skaffold (see below) are available in the templating context (defined as “dot” or .).\nGo templates are quite powerful, including control flow, arguments, pipelining and variables. Predefined functions in the standard library are complemented in Skaffold by the Sprig template function library.\nbuild:tagPolicy:envTemplate:template:\"{{.FOO}}\"artifacts:- image:gcr.io/k8s-skaffold/example Suppose the value of the FOO environment variable is v1, the image built will be gcr.", "scrapeId": "30d71fde-1b14-480c-862d-9740d2140c5a", "sourceURL": "https://skaffold.dev/docs/environment/templating", "url": "https://skaffold.dev/docs/environment/templating/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I local template functions in skaffold?\n\nAssistant: To local template functions in skaffold, here's what you do:\nIn addition to the functions listed above, Skaffold locally provides the following:\n- `cmd`: This allows users to use the result from external commands in template, for example `{{cmd \"bash\" \"-c\" \"xxx xxx xxx\"}}` can be used to execute bash script and get the result into the template..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/environment/templating", "title": "Templated Fields", "description": "Skaffold allows for certain fields in the config to be templated via the Go `text/template` package. Environment variables and certain special values computed by Skaffold are available in the templating context.", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 04:08:35", "type": "section_detail", "page_metadata": {"og:type": "article", "language": "en", "og:description": "Skaffold allows for certain fields in the config to be templated via the Go text/template package. Environment variables and certain special values computed by Skaffold (see below) are available in the templating context (defined as “dot” or .).\nGo templates are quite powerful, including control flow, arguments, pipelining and variables. Predefined functions in the standard library are complemented in Skaffold by the Sprig template function library.\nbuild:tagPolicy:envTemplate:template:\"{{.FOO}}\"artifacts:- image:gcr.io/k8s-skaffold/example Suppose the value of the FOO environment variable is v1, the image built will be gcr.", "ogUrl": "https://skaffold.dev/docs/environment/templating/", "og:url": "https://skaffold.dev/docs/environment/templating/", "robots": "index, follow", "og:site_name": "Skaffold", "twitter:title": "Templated Fields", "description": "Skaffold allows for certain fields in the config to be templated via the Go text/template package.\nEnvironment variables and certain special values …", "article:section": "docs", "ogSiteName": "Skaffold", "generator": "Hugo 0.99.1", "modifiedTime": "2025-01-23T10:14:58-05:00", "ogTitle": "Templated Fields", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "twitter:description": "Skaffold allows for certain fields in the config to be templated via the Go text/template package. Environment variables and certain special values computed by Skaffold (see below) are available in the templating context (defined as “dot” or .).\nGo templates are quite powerful, including control flow, arguments, pipelining and variables. Predefined functions in the standard library are complemented in Skaffold by the Sprig template function library.\nbuild:tagPolicy:envTemplate:template:\"{{.FOO}}\"artifacts:- image:gcr.io/k8s-skaffold/example Suppose the value of the FOO environment variable is v1, the image built will be gcr.", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "title": "Templated Fields | Skaffold", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:title": "Templated Fields", "twitter:card": "summary", "ogDescription": "Skaffold allows for certain fields in the config to be templated via the Go text/template package. Environment variables and certain special values computed by Skaffold (see below) are available in the templating context (defined as “dot” or .).\nGo templates are quite powerful, including control flow, arguments, pipelining and variables. Predefined functions in the standard library are complemented in Skaffold by the Sprig template function library.\nbuild:tagPolicy:envTemplate:template:\"{{.FOO}}\"artifacts:- image:gcr.io/k8s-skaffold/example Suppose the value of the FOO environment variable is v1, the image built will be gcr.", "scrapeId": "30d71fde-1b14-480c-862d-9740d2140c5a", "sourceURL": "https://skaffold.dev/docs/environment/templating", "url": "https://skaffold.dev/docs/environment/templating/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I usage examples in skaffold?\n\nAssistant: To usage examples in skaffold, here's what you do:\nThe templating pipelines provided by Go templates can be quite comprehensive when combined with Sprig. For example:\n- The environment variable `SOURCE_DATE_EPOCH` commonly specifies a UNIX timestamp to be used in replacement of the current date and time in compiler `__DATE__` and `__TIME__` macros, so that the embedded timestamps become reproducible. This could be written as:\n`default now .SOURCE_DATE_EPOCH | date \"2006-01-02T15:04:05-0700\"`\n- The idiomatic seven-character abbreviated Git hash is easily accessible:\n`cmd \"bash\" \"-c\" \"git rev-parse HEAD\" | substr 0 7`.\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/environment/templating", "title": "Templated Fields", "description": "Skaffold allows for certain fields in the config to be templated via the Go `text/template` package. Environment variables and certain special values computed by Skaffold are available in the templating context.", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 04:08:35", "type": "section_detail", "page_metadata": {"og:type": "article", "language": "en", "og:description": "Skaffold allows for certain fields in the config to be templated via the Go text/template package. Environment variables and certain special values computed by Skaffold (see below) are available in the templating context (defined as “dot” or .).\nGo templates are quite powerful, including control flow, arguments, pipelining and variables. Predefined functions in the standard library are complemented in Skaffold by the Sprig template function library.\nbuild:tagPolicy:envTemplate:template:\"{{.FOO}}\"artifacts:- image:gcr.io/k8s-skaffold/example Suppose the value of the FOO environment variable is v1, the image built will be gcr.", "ogUrl": "https://skaffold.dev/docs/environment/templating/", "og:url": "https://skaffold.dev/docs/environment/templating/", "robots": "index, follow", "og:site_name": "Skaffold", "twitter:title": "Templated Fields", "description": "Skaffold allows for certain fields in the config to be templated via the Go text/template package.\nEnvironment variables and certain special values …", "article:section": "docs", "ogSiteName": "Skaffold", "generator": "Hugo 0.99.1", "modifiedTime": "2025-01-23T10:14:58-05:00", "ogTitle": "Templated Fields", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "twitter:description": "Skaffold allows for certain fields in the config to be templated via the Go text/template package. Environment variables and certain special values computed by Skaffold (see below) are available in the templating context (defined as “dot” or .).\nGo templates are quite powerful, including control flow, arguments, pipelining and variables. Predefined functions in the standard library are complemented in Skaffold by the Sprig template function library.\nbuild:tagPolicy:envTemplate:template:\"{{.FOO}}\"artifacts:- image:gcr.io/k8s-skaffold/example Suppose the value of the FOO environment variable is v1, the image built will be gcr.", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "title": "Templated Fields | Skaffold", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:title": "Templated Fields", "twitter:card": "summary", "ogDescription": "Skaffold allows for certain fields in the config to be templated via the Go text/template package. Environment variables and certain special values computed by Skaffold (see below) are available in the templating context (defined as “dot” or .).\nGo templates are quite powerful, including control flow, arguments, pipelining and variables. Predefined functions in the standard library are complemented in Skaffold by the Sprig template function library.\nbuild:tagPolicy:envTemplate:template:\"{{.FOO}}\"artifacts:- image:gcr.io/k8s-skaffold/example Suppose the value of the FOO environment variable is v1, the image built will be gcr.", "scrapeId": "30d71fde-1b14-480c-862d-9740d2140c5a", "sourceURL": "https://skaffold.dev/docs/environment/templating", "url": "https://skaffold.dev/docs/environment/templating/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you give me some code examples for Templated Fields in skaffold?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Skaffold Configuration Example**:\n\n```yaml\n```yaml\nbuild:\n  tagPolicy:\n    envTemplate:\n      template: \"{{.FOO}}\"\n  artifacts:\n  - image: gcr.io/k8s-skaffold/example\n```\n```\n\nThis snippet shows you how to skaffold configuration example, which is an important aspect of templated fields.\n\n", "metadata": {"source_url": "https://skaffold.dev/docs/environment/templating", "title": "Templated Fields", "description": "Skaffold allows for certain fields in the config to be templated via the Go `text/template` package. Environment variables and certain special values computed by Skaffold are available in the templating context.", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 04:08:35", "type": "code_examples", "page_metadata": {"og:type": "article", "language": "en", "og:description": "Skaffold allows for certain fields in the config to be templated via the Go text/template package. Environment variables and certain special values computed by Skaffold (see below) are available in the templating context (defined as “dot” or .).\nGo templates are quite powerful, including control flow, arguments, pipelining and variables. Predefined functions in the standard library are complemented in Skaffold by the Sprig template function library.\nbuild:tagPolicy:envTemplate:template:\"{{.FOO}}\"artifacts:- image:gcr.io/k8s-skaffold/example Suppose the value of the FOO environment variable is v1, the image built will be gcr.", "ogUrl": "https://skaffold.dev/docs/environment/templating/", "og:url": "https://skaffold.dev/docs/environment/templating/", "robots": "index, follow", "og:site_name": "Skaffold", "twitter:title": "Templated Fields", "description": "Skaffold allows for certain fields in the config to be templated via the Go text/template package.\nEnvironment variables and certain special values …", "article:section": "docs", "ogSiteName": "Skaffold", "generator": "Hugo 0.99.1", "modifiedTime": "2025-01-23T10:14:58-05:00", "ogTitle": "Templated Fields", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "twitter:description": "Skaffold allows for certain fields in the config to be templated via the Go text/template package. Environment variables and certain special values computed by Skaffold (see below) are available in the templating context (defined as “dot” or .).\nGo templates are quite powerful, including control flow, arguments, pipelining and variables. Predefined functions in the standard library are complemented in Skaffold by the Sprig template function library.\nbuild:tagPolicy:envTemplate:template:\"{{.FOO}}\"artifacts:- image:gcr.io/k8s-skaffold/example Suppose the value of the FOO environment variable is v1, the image built will be gcr.", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "title": "Templated Fields | Skaffold", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:title": "Templated Fields", "twitter:card": "summary", "ogDescription": "Skaffold allows for certain fields in the config to be templated via the Go text/template package. Environment variables and certain special values computed by Skaffold (see below) are available in the templating context (defined as “dot” or .).\nGo templates are quite powerful, including control flow, arguments, pipelining and variables. Predefined functions in the standard library are complemented in Skaffold by the Sprig template function library.\nbuild:tagPolicy:envTemplate:template:\"{{.FOO}}\"artifacts:- image:gcr.io/k8s-skaffold/example Suppose the value of the FOO environment variable is v1, the image built will be gcr.", "scrapeId": "30d71fde-1b14-480c-862d-9740d2140c5a", "sourceURL": "https://skaffold.dev/docs/environment/templating", "url": "https://skaffold.dev/docs/environment/templating/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: What are some tips for using Templated Fields in skaffold effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nUse environment variables to dynamically set values in your Skaffold configuration.\n\nLeverage the Sprig template function library for additional functionality in your templates.\n\nEnsure that when using templating for Helm deployments, you follow the naming conventions for artifact variables.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://skaffold.dev/docs/environment/templating", "title": "Templated Fields", "description": "Skaffold allows for certain fields in the config to be templated via the Go `text/template` package. Environment variables and certain special values computed by Skaffold are available in the templating context.", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 04:08:35", "type": "best_practices", "page_metadata": {"og:type": "article", "language": "en", "og:description": "Skaffold allows for certain fields in the config to be templated via the Go text/template package. Environment variables and certain special values computed by Skaffold (see below) are available in the templating context (defined as “dot” or .).\nGo templates are quite powerful, including control flow, arguments, pipelining and variables. Predefined functions in the standard library are complemented in Skaffold by the Sprig template function library.\nbuild:tagPolicy:envTemplate:template:\"{{.FOO}}\"artifacts:- image:gcr.io/k8s-skaffold/example Suppose the value of the FOO environment variable is v1, the image built will be gcr.", "ogUrl": "https://skaffold.dev/docs/environment/templating/", "og:url": "https://skaffold.dev/docs/environment/templating/", "robots": "index, follow", "og:site_name": "Skaffold", "twitter:title": "Templated Fields", "description": "Skaffold allows for certain fields in the config to be templated via the Go text/template package.\nEnvironment variables and certain special values …", "article:section": "docs", "ogSiteName": "Skaffold", "generator": "Hugo 0.99.1", "modifiedTime": "2025-01-23T10:14:58-05:00", "ogTitle": "Templated Fields", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "twitter:description": "Skaffold allows for certain fields in the config to be templated via the Go text/template package. Environment variables and certain special values computed by Skaffold (see below) are available in the templating context (defined as “dot” or .).\nGo templates are quite powerful, including control flow, arguments, pipelining and variables. Predefined functions in the standard library are complemented in Skaffold by the Sprig template function library.\nbuild:tagPolicy:envTemplate:template:\"{{.FOO}}\"artifacts:- image:gcr.io/k8s-skaffold/example Suppose the value of the FOO environment variable is v1, the image built will be gcr.", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "title": "Templated Fields | Skaffold", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:title": "Templated Fields", "twitter:card": "summary", "ogDescription": "Skaffold allows for certain fields in the config to be templated via the Go text/template package. Environment variables and certain special values computed by Skaffold (see below) are available in the templating context (defined as “dot” or .).\nGo templates are quite powerful, including control flow, arguments, pipelining and variables. Predefined functions in the standard library are complemented in Skaffold by the Sprig template function library.\nbuild:tagPolicy:envTemplate:template:\"{{.FOO}}\"artifacts:- image:gcr.io/k8s-skaffold/example Suppose the value of the FOO environment variable is v1, the image built will be gcr.", "scrapeId": "30d71fde-1b14-480c-862d-9740d2140c5a", "sourceURL": "https://skaffold.dev/docs/environment/templating", "url": "https://skaffold.dev/docs/environment/templating/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what Tutorials is in skaffold?\n\nAssistant: Sure, I'd be happy to explain Tutorials in skaffold.\n\n# Tutorials\n\nA collection of tutorials for using Skaffold with Kubernetes and other tools.Here's a quick rundown of what this is about:\n\n## Deploying examples to a remote cluster\n\nWhen deploying to a remote cluster you have to point Skaffold to your default image repository in one of the four ways:\n\n1. flag: `skaffold dev --default-repo <myrepo>`\n2. env var: `SKAFFOLD_DEFAULT_REPO=<myrepo> skaffold dev`\n3. global skaffold config (one time): `skaffold config set --global default-repo <myrepo>`\n4. skaffold config for current kubectl context: `skaffold config set default-repo <myrepo>`\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/tutorials", "title": "Tutorials", "description": "A collection of tutorials for using Skaffold with Kubernetes and other tools.", "has_code_examples": true, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 04:08:56", "type": "overview", "page_metadata": {"twitter:card": "summary", "ogTitle": "Tutorials", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "twitter:title": "Tutorials", "og:title": "Tutorials", "language": "en", "robots": "index, follow", "ogUrl": "https://skaffold.dev/docs/tutorials/", "ogSiteName": "Skaffold", "og:url": "https://skaffold.dev/docs/tutorials/", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "generator": "Hugo 0.99.1", "title": "Tutorials | Skaffold", "og:description": "Easy and Repeatable Container & Kubernetes Development", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "og:site_name": "Skaffold", "og:type": "website", "description": "See the Github Examples page for more examples.\n\n\n\n    Deploying examples to a remote cluster\n    When deploying to a remote cluster you have to point …", "scrapeId": "1c027fa7-8d6a-4d6b-8718-27699e9dd7d9", "sourceURL": "https://skaffold.dev/docs/tutorials", "url": "https://skaffold.dev/docs/tutorials/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I deploying examples to a remote cluster in skaffold?\n\nAssistant: To deploying examples to a remote cluster in skaffold, here's what you do:\nWhen deploying to a remote cluster you have to point Skaffold to your default image repository in one of the four ways:\n\n1. flag: `skaffold dev --default-repo <myrepo>`\n2. env var: `SKAFFOLD_DEFAULT_REPO=<myrepo> skaffold dev`\n3. global skaffold config (one time): `skaffold config set --global default-repo <myrepo>`\n4. skaffold config for current kubectl context: `skaffold config set default-repo <myrepo>`.\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/tutorials", "title": "Tutorials", "description": "A collection of tutorials for using Skaffold with Kubernetes and other tools.", "has_code_examples": true, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 04:08:56", "type": "section_detail", "page_metadata": {"twitter:card": "summary", "ogTitle": "Tutorials", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "twitter:title": "Tutorials", "og:title": "Tutorials", "language": "en", "robots": "index, follow", "ogUrl": "https://skaffold.dev/docs/tutorials/", "ogSiteName": "Skaffold", "og:url": "https://skaffold.dev/docs/tutorials/", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "generator": "Hugo 0.99.1", "title": "Tutorials | Skaffold", "og:description": "Easy and Repeatable Container & Kubernetes Development", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "og:site_name": "Skaffold", "og:type": "website", "description": "See the Github Examples page for more examples.\n\n\n\n    Deploying examples to a remote cluster\n    When deploying to a remote cluster you have to point …", "scrapeId": "1c027fa7-8d6a-4d6b-8718-27699e9dd7d9", "sourceURL": "https://skaffold.dev/docs/tutorials", "url": "https://skaffold.dev/docs/tutorials/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you give me some code examples for Tutorials in skaffold?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Setting Default Repository**:\n\n```yaml\nskaffold dev --default-repo <myrepo>\n```\n\nThis snippet shows you how to setting default repository, which is an important aspect of tutorials.\n\n**Using Environment Variable**:\n\n```yaml\nSKAFFOLD_DEFAULT_REPO=<myrepo> skaffold dev\n```\n\nThis snippet shows you how to using environment variable, which is an important aspect of tutorials.\n\n**Global Skaffold Config**:\n\n```yaml\nskaffold config set --global default-repo <myrepo>\n```\n\nThis snippet shows you how to global skaffold config, which is an important aspect of tutorials.\n\n**Current Context Config**:\n\n```yaml\nskaffold config set default-repo <myrepo>\n```\n\nThis snippet shows you how to current context config, which is an important aspect of tutorials.\n\n", "metadata": {"source_url": "https://skaffold.dev/docs/tutorials", "title": "Tutorials", "description": "A collection of tutorials for using Skaffold with Kubernetes and other tools.", "has_code_examples": true, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 04:08:56", "type": "code_examples", "page_metadata": {"twitter:card": "summary", "ogTitle": "Tutorials", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "twitter:title": "Tutorials", "og:title": "Tutorials", "language": "en", "robots": "index, follow", "ogUrl": "https://skaffold.dev/docs/tutorials/", "ogSiteName": "Skaffold", "og:url": "https://skaffold.dev/docs/tutorials/", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "generator": "Hugo 0.99.1", "title": "Tutorials | Skaffold", "og:description": "Easy and Repeatable Container & Kubernetes Development", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "og:site_name": "Skaffold", "og:type": "website", "description": "See the Github Examples page for more examples.\n\n\n\n    Deploying examples to a remote cluster\n    When deploying to a remote cluster you have to point …", "scrapeId": "1c027fa7-8d6a-4d6b-8718-27699e9dd7d9", "sourceURL": "https://skaffold.dev/docs/tutorials", "url": "https://skaffold.dev/docs/tutorials/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: What are some tips for using Tutorials in skaffold effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nRefer to the Github Examples page for more examples.\n\nCheck the Skaffold documentation for specific tutorials on building and deploying applications.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://skaffold.dev/docs/tutorials", "title": "Tutorials", "description": "A collection of tutorials for using Skaffold with Kubernetes and other tools.", "has_code_examples": true, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 04:08:56", "type": "best_practices", "page_metadata": {"twitter:card": "summary", "ogTitle": "Tutorials", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "twitter:title": "Tutorials", "og:title": "Tutorials", "language": "en", "robots": "index, follow", "ogUrl": "https://skaffold.dev/docs/tutorials/", "ogSiteName": "Skaffold", "og:url": "https://skaffold.dev/docs/tutorials/", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "generator": "Hugo 0.99.1", "title": "Tutorials | Skaffold", "og:description": "Easy and Repeatable Container & Kubernetes Development", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "og:site_name": "Skaffold", "og:type": "website", "description": "See the Github Examples page for more examples.\n\n\n\n    Deploying examples to a remote cluster\n    When deploying to a remote cluster you have to point …", "scrapeId": "1c027fa7-8d6a-4d6b-8718-27699e9dd7d9", "sourceURL": "https://skaffold.dev/docs/tutorials", "url": "https://skaffold.dev/docs/tutorials/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what Defining dependencies between artifacts is in skaffold?\n\nAssistant: Sure, I'd be happy to explain Defining dependencies between artifacts in skaffold.\n\n# Defining dependencies between artifacts\n\nThis page describes how to define dependencies between artifacts and reference them in the docker builder.Here's a quick rundown of what this is about:\n\n## Before you begin\n\nFirst, you will need to have Skaffold and a Kubernetes cluster set up. To learn more about how to set up Skaffold and a Kubernetes cluster, see the quickstart docs.\n\n## Tutorial - Simple artifact dependency\n\nThis tutorial will be based on the simple-artifact-dependency example in our repository.\n\n## Adding an artifact dependency\n\nWe have a `base` artifact which has a single Dockerfile that we build with the docker builder:\n\n```yaml\nFROM alpine:3\nCOPY hello.txt .\nCMD [\"./app\"]\n```\n\nThis artifact is used as the base image for the `app` artifact. We express this dependency in the `skaffold.yaml` using the `requires` expression.\n\n```yaml\napiVersion: skaffold/v2beta9\nkind: Config\nbuild:\n  artifacts:\n  - image: app\n    context: app\n    requires:\n    - image: base\n      alias: BASE\n  - image: base\n    context: base\n```\n\nThe image alias `BASE` is now available as a build-arg in the Dockerfile for `app`:\n\n```yaml\nARG BASE\nFROM golang:1.15-alpine as builder\n...\nFROM $BASE\nCOPY --from=builder /app .\n```\n\n## Build and Deploy\n\nIn the simple-artifact-dependency directory, run:\n\n```text\nskaffold dev\n```\n\nIf this is the first time you’re running this, then it should build the artifacts, starting with `base` and later `app`. Skaffold can handle any arbitrary dependency graph between artifacts and schedule builds in the right order. It’ll also report an error if it detects dependency cycles or self-loops.\n\n```text\nChecking cache...\n - base: Not found. Building\n - app: Not found. Building\n\nBuilding [base]...\n<docker build logs here>\n\nBuilding [app]...\n<docker build logs here>\n```\n\nIt will then deploy a single container pod, while also monitoring for file changes.\n\n```text\nWatching for changes...\n[simple-artifact-dependency-app] Hello World\n[simple-artifact-dependency-app] Hello World\n```\n\nModify the text in file `base/hello.txt` to something else instead:\n\n```text\nHello World!!!\n```\n\nThis will trigger a rebuild for the `base` artifact, and since `app` artifact depends on `base` it’ll also trigger a rebuild for that. After deployment stabilizes, it should now show the logs reflecting this change:\n\n```text\nWatching for changes...\n[simple-artifact-dependency-app] Hello World!!!\n[simple-artifact-dependency-app] Hello World!!!\n```\n\n## Cleanup\n\nHitting `Ctrl + C` on a running Skaffold process should end it and cleanup its deployments. If there are still persisting objects then you can issue `skaffold delete` command to attempt the cleanup again.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/tutorials/artifact-dependencies", "title": "Defining dependencies between artifacts", "description": "This page describes how to define dependencies between artifacts and reference them in the docker builder.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 04:09:44", "type": "overview", "page_metadata": {"description": "This page describes how to define dependencies between artifacts and reference them in the docker builder.\nBefore you begin\nFirst, you will need to …", "og:url": "https://skaffold.dev/docs/tutorials/artifact-dependencies/", "article:section": "docs", "ogSiteName": "Skaffold", "ogUrl": "https://skaffold.dev/docs/tutorials/artifact-dependencies/", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:title": "Defining dependencies between artifacts", "title": "Defining dependencies between artifacts | Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:type": "article", "language": "en", "og:site_name": "Skaffold", "robots": "index, follow", "ogDescription": "This page describes how to define dependencies between artifacts and reference them in the docker builder.\nBefore you begin First, you will need to have Skaffold and a Kubernetes cluster set up. To learn more about how to set up Skaffold and a Kubernetes cluster, see the quickstart docs.\nTutorial - Simple artifact dependency This tutorial will be based on the simple-artifact-dependency example in our repository.\nAdding an artifact dependency We have a base artifact which has a single Dockerfile that we build with the docker builder:", "twitter:title": "Defining dependencies between artifacts", "twitter:card": "summary", "twitter:description": "This page describes how to define dependencies between artifacts and reference them in the docker builder.\nBefore you begin First, you will need to have Skaffold and a Kubernetes cluster set up. To learn more about how to set up Skaffold and a Kubernetes cluster, see the quickstart docs.\nTutorial - Simple artifact dependency This tutorial will be based on the simple-artifact-dependency example in our repository.\nAdding an artifact dependency We have a base artifact which has a single Dockerfile that we build with the docker builder:", "og:description": "This page describes how to define dependencies between artifacts and reference them in the docker builder.\nBefore you begin First, you will need to have Skaffold and a Kubernetes cluster set up. To learn more about how to set up Skaffold and a Kubernetes cluster, see the quickstart docs.\nTutorial - Simple artifact dependency This tutorial will be based on the simple-artifact-dependency example in our repository.\nAdding an artifact dependency We have a base artifact which has a single Dockerfile that we build with the docker builder:", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "modifiedTime": "2025-01-23T10:14:58-05:00", "ogTitle": "Defining dependencies between artifacts", "generator": "Hugo 0.99.1", "scrapeId": "0cf092f1-d392-4fb5-8829-16a9036439f6", "sourceURL": "https://skaffold.dev/docs/tutorials/artifact-dependencies", "url": "https://skaffold.dev/docs/tutorials/artifact-dependencies/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I before you begin in skaffold?\n\nAssistant: To before you begin in skaffold, here's what you do:\nFirst, you will need to have Skaffold and a Kubernetes cluster set up. To learn more about how to set up Skaffold and a Kubernetes cluster, see the quickstart docs..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/tutorials/artifact-dependencies", "title": "Defining dependencies between artifacts", "description": "This page describes how to define dependencies between artifacts and reference them in the docker builder.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 04:09:44", "type": "section_detail", "page_metadata": {"description": "This page describes how to define dependencies between artifacts and reference them in the docker builder.\nBefore you begin\nFirst, you will need to …", "og:url": "https://skaffold.dev/docs/tutorials/artifact-dependencies/", "article:section": "docs", "ogSiteName": "Skaffold", "ogUrl": "https://skaffold.dev/docs/tutorials/artifact-dependencies/", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:title": "Defining dependencies between artifacts", "title": "Defining dependencies between artifacts | Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:type": "article", "language": "en", "og:site_name": "Skaffold", "robots": "index, follow", "ogDescription": "This page describes how to define dependencies between artifacts and reference them in the docker builder.\nBefore you begin First, you will need to have Skaffold and a Kubernetes cluster set up. To learn more about how to set up Skaffold and a Kubernetes cluster, see the quickstart docs.\nTutorial - Simple artifact dependency This tutorial will be based on the simple-artifact-dependency example in our repository.\nAdding an artifact dependency We have a base artifact which has a single Dockerfile that we build with the docker builder:", "twitter:title": "Defining dependencies between artifacts", "twitter:card": "summary", "twitter:description": "This page describes how to define dependencies between artifacts and reference them in the docker builder.\nBefore you begin First, you will need to have Skaffold and a Kubernetes cluster set up. To learn more about how to set up Skaffold and a Kubernetes cluster, see the quickstart docs.\nTutorial - Simple artifact dependency This tutorial will be based on the simple-artifact-dependency example in our repository.\nAdding an artifact dependency We have a base artifact which has a single Dockerfile that we build with the docker builder:", "og:description": "This page describes how to define dependencies between artifacts and reference them in the docker builder.\nBefore you begin First, you will need to have Skaffold and a Kubernetes cluster set up. To learn more about how to set up Skaffold and a Kubernetes cluster, see the quickstart docs.\nTutorial - Simple artifact dependency This tutorial will be based on the simple-artifact-dependency example in our repository.\nAdding an artifact dependency We have a base artifact which has a single Dockerfile that we build with the docker builder:", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "modifiedTime": "2025-01-23T10:14:58-05:00", "ogTitle": "Defining dependencies between artifacts", "generator": "Hugo 0.99.1", "scrapeId": "0cf092f1-d392-4fb5-8829-16a9036439f6", "sourceURL": "https://skaffold.dev/docs/tutorials/artifact-dependencies", "url": "https://skaffold.dev/docs/tutorials/artifact-dependencies/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I tutorial - simple artifact dependency in skaffold?\n\nAssistant: To tutorial - simple artifact dependency in skaffold, here's what you do:\nThis tutorial will be based on the simple-artifact-dependency example in our repository..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/tutorials/artifact-dependencies", "title": "Defining dependencies between artifacts", "description": "This page describes how to define dependencies between artifacts and reference them in the docker builder.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 04:09:44", "type": "section_detail", "page_metadata": {"description": "This page describes how to define dependencies between artifacts and reference them in the docker builder.\nBefore you begin\nFirst, you will need to …", "og:url": "https://skaffold.dev/docs/tutorials/artifact-dependencies/", "article:section": "docs", "ogSiteName": "Skaffold", "ogUrl": "https://skaffold.dev/docs/tutorials/artifact-dependencies/", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:title": "Defining dependencies between artifacts", "title": "Defining dependencies between artifacts | Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:type": "article", "language": "en", "og:site_name": "Skaffold", "robots": "index, follow", "ogDescription": "This page describes how to define dependencies between artifacts and reference them in the docker builder.\nBefore you begin First, you will need to have Skaffold and a Kubernetes cluster set up. To learn more about how to set up Skaffold and a Kubernetes cluster, see the quickstart docs.\nTutorial - Simple artifact dependency This tutorial will be based on the simple-artifact-dependency example in our repository.\nAdding an artifact dependency We have a base artifact which has a single Dockerfile that we build with the docker builder:", "twitter:title": "Defining dependencies between artifacts", "twitter:card": "summary", "twitter:description": "This page describes how to define dependencies between artifacts and reference them in the docker builder.\nBefore you begin First, you will need to have Skaffold and a Kubernetes cluster set up. To learn more about how to set up Skaffold and a Kubernetes cluster, see the quickstart docs.\nTutorial - Simple artifact dependency This tutorial will be based on the simple-artifact-dependency example in our repository.\nAdding an artifact dependency We have a base artifact which has a single Dockerfile that we build with the docker builder:", "og:description": "This page describes how to define dependencies between artifacts and reference them in the docker builder.\nBefore you begin First, you will need to have Skaffold and a Kubernetes cluster set up. To learn more about how to set up Skaffold and a Kubernetes cluster, see the quickstart docs.\nTutorial - Simple artifact dependency This tutorial will be based on the simple-artifact-dependency example in our repository.\nAdding an artifact dependency We have a base artifact which has a single Dockerfile that we build with the docker builder:", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "modifiedTime": "2025-01-23T10:14:58-05:00", "ogTitle": "Defining dependencies between artifacts", "generator": "Hugo 0.99.1", "scrapeId": "0cf092f1-d392-4fb5-8829-16a9036439f6", "sourceURL": "https://skaffold.dev/docs/tutorials/artifact-dependencies", "url": "https://skaffold.dev/docs/tutorials/artifact-dependencies/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I adding an artifact dependency in skaffold?\n\nAssistant: To adding an artifact dependency in skaffold, here's what you do:\nWe have a `base` artifact which has a single Dockerfile that we build with the docker builder:\n\n```yaml\nFROM alpine:3\nCOPY hello.txt .\nCMD [\"./app\"]\n```\n\nThis artifact is used as the base image for the `app` artifact. We express this dependency in the `skaffold.yaml` using the `requires` expression.\n\n```yaml\napiVersion: skaffold/v2beta9\nkind: Config\nbuild:\n  artifacts:\n  - image: app\n    context: app\n    requires:\n    - image: base\n      alias: BASE\n  - image: base\n    context: base\n```\n\nThe image alias `BASE` is now available as a build-arg in the Dockerfile for `app`:\n\n```yaml\nARG BASE\nFROM golang:1.15-alpine as builder\n...\nFROM $BASE\nCOPY --from=builder /app .\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/tutorials/artifact-dependencies", "title": "Defining dependencies between artifacts", "description": "This page describes how to define dependencies between artifacts and reference them in the docker builder.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 04:09:44", "type": "section_detail", "page_metadata": {"description": "This page describes how to define dependencies between artifacts and reference them in the docker builder.\nBefore you begin\nFirst, you will need to …", "og:url": "https://skaffold.dev/docs/tutorials/artifact-dependencies/", "article:section": "docs", "ogSiteName": "Skaffold", "ogUrl": "https://skaffold.dev/docs/tutorials/artifact-dependencies/", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:title": "Defining dependencies between artifacts", "title": "Defining dependencies between artifacts | Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:type": "article", "language": "en", "og:site_name": "Skaffold", "robots": "index, follow", "ogDescription": "This page describes how to define dependencies between artifacts and reference them in the docker builder.\nBefore you begin First, you will need to have Skaffold and a Kubernetes cluster set up. To learn more about how to set up Skaffold and a Kubernetes cluster, see the quickstart docs.\nTutorial - Simple artifact dependency This tutorial will be based on the simple-artifact-dependency example in our repository.\nAdding an artifact dependency We have a base artifact which has a single Dockerfile that we build with the docker builder:", "twitter:title": "Defining dependencies between artifacts", "twitter:card": "summary", "twitter:description": "This page describes how to define dependencies between artifacts and reference them in the docker builder.\nBefore you begin First, you will need to have Skaffold and a Kubernetes cluster set up. To learn more about how to set up Skaffold and a Kubernetes cluster, see the quickstart docs.\nTutorial - Simple artifact dependency This tutorial will be based on the simple-artifact-dependency example in our repository.\nAdding an artifact dependency We have a base artifact which has a single Dockerfile that we build with the docker builder:", "og:description": "This page describes how to define dependencies between artifacts and reference them in the docker builder.\nBefore you begin First, you will need to have Skaffold and a Kubernetes cluster set up. To learn more about how to set up Skaffold and a Kubernetes cluster, see the quickstart docs.\nTutorial - Simple artifact dependency This tutorial will be based on the simple-artifact-dependency example in our repository.\nAdding an artifact dependency We have a base artifact which has a single Dockerfile that we build with the docker builder:", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "modifiedTime": "2025-01-23T10:14:58-05:00", "ogTitle": "Defining dependencies between artifacts", "generator": "Hugo 0.99.1", "scrapeId": "0cf092f1-d392-4fb5-8829-16a9036439f6", "sourceURL": "https://skaffold.dev/docs/tutorials/artifact-dependencies", "url": "https://skaffold.dev/docs/tutorials/artifact-dependencies/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I build and deploy in skaffold?\n\nAssistant: To build and deploy in skaffold, here's what you do:\nIn the simple-artifact-dependency directory, run:\n\n```text\nskaffold dev\n```\n\nIf this is the first time you’re running this, then it should build the artifacts, starting with `base` and later `app`. Skaffold can handle any arbitrary dependency graph between artifacts and schedule builds in the right order. It’ll also report an error if it detects dependency cycles or self-loops.\n\n```text\nChecking cache...\n - base: Not found. Building\n - app: Not found. Building\n\nBuilding [base]...\n<docker build logs here>\n\nBuilding [app]...\n<docker build logs here>\n```\n\nIt will then deploy a single container pod, while also monitoring for file changes.\n\n```text\nWatching for changes...\n[simple-artifact-dependency-app] Hello World\n[simple-artifact-dependency-app] Hello World\n```\n\nModify the text in file `base/hello.txt` to something else instead:\n\n```text\nHello World!!!\n```\n\nThis will trigger a rebuild for the `base` artifact, and since `app` artifact depends on `base` it’ll also trigger a rebuild for that. After deployment stabilizes, it should now show the logs reflecting this change:\n\n```text\nWatching for changes...\n[simple-artifact-dependency-app] Hello World!!!\n[simple-artifact-dependency-app] Hello World!!!\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/tutorials/artifact-dependencies", "title": "Defining dependencies between artifacts", "description": "This page describes how to define dependencies between artifacts and reference them in the docker builder.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 04:09:44", "type": "section_detail", "page_metadata": {"description": "This page describes how to define dependencies between artifacts and reference them in the docker builder.\nBefore you begin\nFirst, you will need to …", "og:url": "https://skaffold.dev/docs/tutorials/artifact-dependencies/", "article:section": "docs", "ogSiteName": "Skaffold", "ogUrl": "https://skaffold.dev/docs/tutorials/artifact-dependencies/", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:title": "Defining dependencies between artifacts", "title": "Defining dependencies between artifacts | Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:type": "article", "language": "en", "og:site_name": "Skaffold", "robots": "index, follow", "ogDescription": "This page describes how to define dependencies between artifacts and reference them in the docker builder.\nBefore you begin First, you will need to have Skaffold and a Kubernetes cluster set up. To learn more about how to set up Skaffold and a Kubernetes cluster, see the quickstart docs.\nTutorial - Simple artifact dependency This tutorial will be based on the simple-artifact-dependency example in our repository.\nAdding an artifact dependency We have a base artifact which has a single Dockerfile that we build with the docker builder:", "twitter:title": "Defining dependencies between artifacts", "twitter:card": "summary", "twitter:description": "This page describes how to define dependencies between artifacts and reference them in the docker builder.\nBefore you begin First, you will need to have Skaffold and a Kubernetes cluster set up. To learn more about how to set up Skaffold and a Kubernetes cluster, see the quickstart docs.\nTutorial - Simple artifact dependency This tutorial will be based on the simple-artifact-dependency example in our repository.\nAdding an artifact dependency We have a base artifact which has a single Dockerfile that we build with the docker builder:", "og:description": "This page describes how to define dependencies between artifacts and reference them in the docker builder.\nBefore you begin First, you will need to have Skaffold and a Kubernetes cluster set up. To learn more about how to set up Skaffold and a Kubernetes cluster, see the quickstart docs.\nTutorial - Simple artifact dependency This tutorial will be based on the simple-artifact-dependency example in our repository.\nAdding an artifact dependency We have a base artifact which has a single Dockerfile that we build with the docker builder:", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "modifiedTime": "2025-01-23T10:14:58-05:00", "ogTitle": "Defining dependencies between artifacts", "generator": "Hugo 0.99.1", "scrapeId": "0cf092f1-d392-4fb5-8829-16a9036439f6", "sourceURL": "https://skaffold.dev/docs/tutorials/artifact-dependencies", "url": "https://skaffold.dev/docs/tutorials/artifact-dependencies/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I cleanup in skaffold?\n\nAssistant: To cleanup in skaffold, here's what you do:\nHitting `Ctrl + C` on a running Skaffold process should end it and cleanup its deployments. If there are still persisting objects then you can issue `skaffold delete` command to attempt the cleanup again..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/tutorials/artifact-dependencies", "title": "Defining dependencies between artifacts", "description": "This page describes how to define dependencies between artifacts and reference them in the docker builder.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 04:09:44", "type": "section_detail", "page_metadata": {"description": "This page describes how to define dependencies between artifacts and reference them in the docker builder.\nBefore you begin\nFirst, you will need to …", "og:url": "https://skaffold.dev/docs/tutorials/artifact-dependencies/", "article:section": "docs", "ogSiteName": "Skaffold", "ogUrl": "https://skaffold.dev/docs/tutorials/artifact-dependencies/", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:title": "Defining dependencies between artifacts", "title": "Defining dependencies between artifacts | Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:type": "article", "language": "en", "og:site_name": "Skaffold", "robots": "index, follow", "ogDescription": "This page describes how to define dependencies between artifacts and reference them in the docker builder.\nBefore you begin First, you will need to have Skaffold and a Kubernetes cluster set up. To learn more about how to set up Skaffold and a Kubernetes cluster, see the quickstart docs.\nTutorial - Simple artifact dependency This tutorial will be based on the simple-artifact-dependency example in our repository.\nAdding an artifact dependency We have a base artifact which has a single Dockerfile that we build with the docker builder:", "twitter:title": "Defining dependencies between artifacts", "twitter:card": "summary", "twitter:description": "This page describes how to define dependencies between artifacts and reference them in the docker builder.\nBefore you begin First, you will need to have Skaffold and a Kubernetes cluster set up. To learn more about how to set up Skaffold and a Kubernetes cluster, see the quickstart docs.\nTutorial - Simple artifact dependency This tutorial will be based on the simple-artifact-dependency example in our repository.\nAdding an artifact dependency We have a base artifact which has a single Dockerfile that we build with the docker builder:", "og:description": "This page describes how to define dependencies between artifacts and reference them in the docker builder.\nBefore you begin First, you will need to have Skaffold and a Kubernetes cluster set up. To learn more about how to set up Skaffold and a Kubernetes cluster, see the quickstart docs.\nTutorial - Simple artifact dependency This tutorial will be based on the simple-artifact-dependency example in our repository.\nAdding an artifact dependency We have a base artifact which has a single Dockerfile that we build with the docker builder:", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "modifiedTime": "2025-01-23T10:14:58-05:00", "ogTitle": "Defining dependencies between artifacts", "generator": "Hugo 0.99.1", "scrapeId": "0cf092f1-d392-4fb5-8829-16a9036439f6", "sourceURL": "https://skaffold.dev/docs/tutorials/artifact-dependencies", "url": "https://skaffold.dev/docs/tutorials/artifact-dependencies/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you give me some code examples for Defining dependencies between artifacts in skaffold?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Base Dockerfile**:\n\n```yaml\nFROM alpine:3\nCOPY hello.txt .\nCMD [\"./app\"]\n\n```\n\nThis snippet shows you how to base dockerfile, which is an important aspect of defining dependencies between artifacts.\n\n**Skaffold Configuration**:\n\n```yaml\napiVersion: skaffold/v2beta9\nkind: Config\nbuild:\n  artifacts:\n  - image: app\n    context: app\n    requires:\n    - image: base\n      alias: BASE\n  - image: base\n    context: base\n\n```\n\nThis snippet shows you how to skaffold configuration, which is an important aspect of defining dependencies between artifacts.\n\n**App Dockerfile**:\n\n```yaml\nARG BASE\nFROM golang:1.15-alpine as builder\n...\nFROM $BASE\nCOPY --from=builder /app .\n\n```\n\nThis snippet shows you how to app dockerfile, which is an important aspect of defining dependencies between artifacts.\n\n**Skaffold Dev Command**:\n\n```yaml\nskaffold dev\n\n```\n\nThis snippet shows you how to skaffold dev command, which is an important aspect of defining dependencies between artifacts.\n\n**Modify Hello.txt**:\n\n```yaml\nHello World!!!\n\n```\n\nThis snippet shows you how to modify hello.txt, which is an important aspect of defining dependencies between artifacts.\n\n**Skaffold Delete Command**:\n\n```yaml\nskaffold delete\n```\n\nThis snippet shows you how to skaffold delete command, which is an important aspect of defining dependencies between artifacts.\n\n", "metadata": {"source_url": "https://skaffold.dev/docs/tutorials/artifact-dependencies", "title": "Defining dependencies between artifacts", "description": "This page describes how to define dependencies between artifacts and reference them in the docker builder.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 04:09:44", "type": "code_examples", "page_metadata": {"description": "This page describes how to define dependencies between artifacts and reference them in the docker builder.\nBefore you begin\nFirst, you will need to …", "og:url": "https://skaffold.dev/docs/tutorials/artifact-dependencies/", "article:section": "docs", "ogSiteName": "Skaffold", "ogUrl": "https://skaffold.dev/docs/tutorials/artifact-dependencies/", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:title": "Defining dependencies between artifacts", "title": "Defining dependencies between artifacts | Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:type": "article", "language": "en", "og:site_name": "Skaffold", "robots": "index, follow", "ogDescription": "This page describes how to define dependencies between artifacts and reference them in the docker builder.\nBefore you begin First, you will need to have Skaffold and a Kubernetes cluster set up. To learn more about how to set up Skaffold and a Kubernetes cluster, see the quickstart docs.\nTutorial - Simple artifact dependency This tutorial will be based on the simple-artifact-dependency example in our repository.\nAdding an artifact dependency We have a base artifact which has a single Dockerfile that we build with the docker builder:", "twitter:title": "Defining dependencies between artifacts", "twitter:card": "summary", "twitter:description": "This page describes how to define dependencies between artifacts and reference them in the docker builder.\nBefore you begin First, you will need to have Skaffold and a Kubernetes cluster set up. To learn more about how to set up Skaffold and a Kubernetes cluster, see the quickstart docs.\nTutorial - Simple artifact dependency This tutorial will be based on the simple-artifact-dependency example in our repository.\nAdding an artifact dependency We have a base artifact which has a single Dockerfile that we build with the docker builder:", "og:description": "This page describes how to define dependencies between artifacts and reference them in the docker builder.\nBefore you begin First, you will need to have Skaffold and a Kubernetes cluster set up. To learn more about how to set up Skaffold and a Kubernetes cluster, see the quickstart docs.\nTutorial - Simple artifact dependency This tutorial will be based on the simple-artifact-dependency example in our repository.\nAdding an artifact dependency We have a base artifact which has a single Dockerfile that we build with the docker builder:", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "modifiedTime": "2025-01-23T10:14:58-05:00", "ogTitle": "Defining dependencies between artifacts", "generator": "Hugo 0.99.1", "scrapeId": "0cf092f1-d392-4fb5-8829-16a9036439f6", "sourceURL": "https://skaffold.dev/docs/tutorials/artifact-dependencies", "url": "https://skaffold.dev/docs/tutorials/artifact-dependencies/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: What are some tips for using Defining dependencies between artifacts in skaffold effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nEnsure Skaffold and a Kubernetes cluster are set up before starting.\n\nUse the `requires` expression in `skaffold.yaml` to define dependencies between artifacts.\n\nMonitor for file changes during deployment to trigger rebuilds as necessary.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://skaffold.dev/docs/tutorials/artifact-dependencies", "title": "Defining dependencies between artifacts", "description": "This page describes how to define dependencies between artifacts and reference them in the docker builder.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 04:09:44", "type": "best_practices", "page_metadata": {"description": "This page describes how to define dependencies between artifacts and reference them in the docker builder.\nBefore you begin\nFirst, you will need to …", "og:url": "https://skaffold.dev/docs/tutorials/artifact-dependencies/", "article:section": "docs", "ogSiteName": "Skaffold", "ogUrl": "https://skaffold.dev/docs/tutorials/artifact-dependencies/", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:title": "Defining dependencies between artifacts", "title": "Defining dependencies between artifacts | Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:type": "article", "language": "en", "og:site_name": "Skaffold", "robots": "index, follow", "ogDescription": "This page describes how to define dependencies between artifacts and reference them in the docker builder.\nBefore you begin First, you will need to have Skaffold and a Kubernetes cluster set up. To learn more about how to set up Skaffold and a Kubernetes cluster, see the quickstart docs.\nTutorial - Simple artifact dependency This tutorial will be based on the simple-artifact-dependency example in our repository.\nAdding an artifact dependency We have a base artifact which has a single Dockerfile that we build with the docker builder:", "twitter:title": "Defining dependencies between artifacts", "twitter:card": "summary", "twitter:description": "This page describes how to define dependencies between artifacts and reference them in the docker builder.\nBefore you begin First, you will need to have Skaffold and a Kubernetes cluster set up. To learn more about how to set up Skaffold and a Kubernetes cluster, see the quickstart docs.\nTutorial - Simple artifact dependency This tutorial will be based on the simple-artifact-dependency example in our repository.\nAdding an artifact dependency We have a base artifact which has a single Dockerfile that we build with the docker builder:", "og:description": "This page describes how to define dependencies between artifacts and reference them in the docker builder.\nBefore you begin First, you will need to have Skaffold and a Kubernetes cluster set up. To learn more about how to set up Skaffold and a Kubernetes cluster, see the quickstart docs.\nTutorial - Simple artifact dependency This tutorial will be based on the simple-artifact-dependency example in our repository.\nAdding an artifact dependency We have a base artifact which has a single Dockerfile that we build with the docker builder:", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "modifiedTime": "2025-01-23T10:14:58-05:00", "ogTitle": "Defining dependencies between artifacts", "generator": "Hugo 0.99.1", "scrapeId": "0cf092f1-d392-4fb5-8829-16a9036439f6", "sourceURL": "https://skaffold.dev/docs/tutorials/artifact-dependencies", "url": "https://skaffold.dev/docs/tutorials/artifact-dependencies/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what Importing configuration as dependencies is in skaffold?\n\nAssistant: Sure, I'd be happy to explain Importing configuration as dependencies in skaffold.\n\n# Importing configuration as dependencies\n\nSkaffold’s config dependencies feature allows you to import configurations defined across multiple skaffold.yaml files (even across repositories) into a single configuration as its dependencies. This helps more readily integrate Skaffold with multi-microservice and multi-repository applications.Here's a quick rundown of what this is about:\n\n## Guided Cloud Shell Tutorials\n\nFor a guided Cloud Shell tutorial on setting up local dependencies, follow the link provided. For a guided Cloud Shell tutorial on setting up remote git dependencies, follow the link provided.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/tutorials/config-dependencies", "title": "Importing configuration as dependencies", "description": "Skaffold’s config dependencies feature allows you to import configurations defined across multiple skaffold.yaml files (even across repositories) into a single configuration as its dependencies. This helps more readily integrate Skaffold with multi-microservice and multi-repository applications.", "has_code_examples": false, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 04:09:50", "type": "overview", "page_metadata": {"modifiedTime": "2025-01-23T10:14:58-05:00", "robots": "index, follow", "og:description": "Skaffold’s config dependencies feature allows you to import configurations defined across multiple skaffold.yaml files (even across repositories) into a single configuration as its dependencies. This helps more readily integrate Skaffold with multi-microservice and multi-repository applications.\nFor a guided Cloud Shell tutorial on setting up local dependencies, follow:\n\nFor a guided Cloud Shell tutorial on setting up remote git dependencies, follow:", "ogSiteName": "Skaffold", "og:type": "article", "twitter:title": "Importing configuration as dependencies", "twitter:description": "Skaffold’s config dependencies feature allows you to import configurations defined across multiple skaffold.yaml files (even across repositories) into a single configuration as its dependencies. This helps more readily integrate Skaffold with multi-microservice and multi-repository applications.\nFor a guided Cloud Shell tutorial on setting up local dependencies, follow:\n\nFor a guided Cloud Shell tutorial on setting up remote git dependencies, follow:", "ogDescription": "Skaffold’s config dependencies feature allows you to import configurations defined across multiple skaffold.yaml files (even across repositories) into a single configuration as its dependencies. This helps more readily integrate Skaffold with multi-microservice and multi-repository applications.\nFor a guided Cloud Shell tutorial on setting up local dependencies, follow:\n\nFor a guided Cloud Shell tutorial on setting up remote git dependencies, follow:", "article:section": "docs", "twitter:card": "summary", "og:url": "https://skaffold.dev/docs/tutorials/config-dependencies/", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogUrl": "https://skaffold.dev/docs/tutorials/config-dependencies/", "og:site_name": "Skaffold", "ogTitle": "Importing configuration as dependencies", "title": "Importing configuration as dependencies | Skaffold", "article:modified_time": "2025-01-23T10:14:58-05:00", "language": "en", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:title": "Importing configuration as dependencies", "generator": "Hugo 0.99.1", "description": "Skaffold’s config dependencies feature allows you to import configurations defined across multiple skaffold.yaml files (even across …", "scrapeId": "242079a7-bbf0-436e-a74c-3d9313c92b8a", "sourceURL": "https://skaffold.dev/docs/tutorials/config-dependencies", "url": "https://skaffold.dev/docs/tutorials/config-dependencies/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I guided cloud shell tutorials in skaffold?\n\nAssistant: To guided cloud shell tutorials in skaffold, here's what you do:\nFor a guided Cloud Shell tutorial on setting up local dependencies, follow the link provided. For a guided Cloud Shell tutorial on setting up remote git dependencies, follow the link provided..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/tutorials/config-dependencies", "title": "Importing configuration as dependencies", "description": "Skaffold’s config dependencies feature allows you to import configurations defined across multiple skaffold.yaml files (even across repositories) into a single configuration as its dependencies. This helps more readily integrate Skaffold with multi-microservice and multi-repository applications.", "has_code_examples": false, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 04:09:50", "type": "section_detail", "page_metadata": {"modifiedTime": "2025-01-23T10:14:58-05:00", "robots": "index, follow", "og:description": "Skaffold’s config dependencies feature allows you to import configurations defined across multiple skaffold.yaml files (even across repositories) into a single configuration as its dependencies. This helps more readily integrate Skaffold with multi-microservice and multi-repository applications.\nFor a guided Cloud Shell tutorial on setting up local dependencies, follow:\n\nFor a guided Cloud Shell tutorial on setting up remote git dependencies, follow:", "ogSiteName": "Skaffold", "og:type": "article", "twitter:title": "Importing configuration as dependencies", "twitter:description": "Skaffold’s config dependencies feature allows you to import configurations defined across multiple skaffold.yaml files (even across repositories) into a single configuration as its dependencies. This helps more readily integrate Skaffold with multi-microservice and multi-repository applications.\nFor a guided Cloud Shell tutorial on setting up local dependencies, follow:\n\nFor a guided Cloud Shell tutorial on setting up remote git dependencies, follow:", "ogDescription": "Skaffold’s config dependencies feature allows you to import configurations defined across multiple skaffold.yaml files (even across repositories) into a single configuration as its dependencies. This helps more readily integrate Skaffold with multi-microservice and multi-repository applications.\nFor a guided Cloud Shell tutorial on setting up local dependencies, follow:\n\nFor a guided Cloud Shell tutorial on setting up remote git dependencies, follow:", "article:section": "docs", "twitter:card": "summary", "og:url": "https://skaffold.dev/docs/tutorials/config-dependencies/", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogUrl": "https://skaffold.dev/docs/tutorials/config-dependencies/", "og:site_name": "Skaffold", "ogTitle": "Importing configuration as dependencies", "title": "Importing configuration as dependencies | Skaffold", "article:modified_time": "2025-01-23T10:14:58-05:00", "language": "en", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:title": "Importing configuration as dependencies", "generator": "Hugo 0.99.1", "description": "Skaffold’s config dependencies feature allows you to import configurations defined across multiple skaffold.yaml files (even across …", "scrapeId": "242079a7-bbf0-436e-a74c-3d9313c92b8a", "sourceURL": "https://skaffold.dev/docs/tutorials/config-dependencies", "url": "https://skaffold.dev/docs/tutorials/config-dependencies/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: What are some tips for using Importing configuration as dependencies in skaffold effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nUtilize Skaffold’s config dependencies feature to integrate multiple configurations effectively.\n\nRefer to the guided Cloud Shell tutorials for practical setup instructions.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://skaffold.dev/docs/tutorials/config-dependencies", "title": "Importing configuration as dependencies", "description": "Skaffold’s config dependencies feature allows you to import configurations defined across multiple skaffold.yaml files (even across repositories) into a single configuration as its dependencies. This helps more readily integrate Skaffold with multi-microservice and multi-repository applications.", "has_code_examples": false, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 04:09:50", "type": "best_practices", "page_metadata": {"modifiedTime": "2025-01-23T10:14:58-05:00", "robots": "index, follow", "og:description": "Skaffold’s config dependencies feature allows you to import configurations defined across multiple skaffold.yaml files (even across repositories) into a single configuration as its dependencies. This helps more readily integrate Skaffold with multi-microservice and multi-repository applications.\nFor a guided Cloud Shell tutorial on setting up local dependencies, follow:\n\nFor a guided Cloud Shell tutorial on setting up remote git dependencies, follow:", "ogSiteName": "Skaffold", "og:type": "article", "twitter:title": "Importing configuration as dependencies", "twitter:description": "Skaffold’s config dependencies feature allows you to import configurations defined across multiple skaffold.yaml files (even across repositories) into a single configuration as its dependencies. This helps more readily integrate Skaffold with multi-microservice and multi-repository applications.\nFor a guided Cloud Shell tutorial on setting up local dependencies, follow:\n\nFor a guided Cloud Shell tutorial on setting up remote git dependencies, follow:", "ogDescription": "Skaffold’s config dependencies feature allows you to import configurations defined across multiple skaffold.yaml files (even across repositories) into a single configuration as its dependencies. This helps more readily integrate Skaffold with multi-microservice and multi-repository applications.\nFor a guided Cloud Shell tutorial on setting up local dependencies, follow:\n\nFor a guided Cloud Shell tutorial on setting up remote git dependencies, follow:", "article:section": "docs", "twitter:card": "summary", "og:url": "https://skaffold.dev/docs/tutorials/config-dependencies/", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogUrl": "https://skaffold.dev/docs/tutorials/config-dependencies/", "og:site_name": "Skaffold", "ogTitle": "Importing configuration as dependencies", "title": "Importing configuration as dependencies | Skaffold", "article:modified_time": "2025-01-23T10:14:58-05:00", "language": "en", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:title": "Importing configuration as dependencies", "generator": "Hugo 0.99.1", "description": "Skaffold’s config dependencies feature allows you to import configurations defined across multiple skaffold.yaml files (even across …", "scrapeId": "242079a7-bbf0-436e-a74c-3d9313c92b8a", "sourceURL": "https://skaffold.dev/docs/tutorials/config-dependencies", "url": "https://skaffold.dev/docs/tutorials/config-dependencies/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what Building Artifacts with a Custom Build Script is in skaffold?\n\nAssistant: Sure, I'd be happy to explain Building Artifacts with a Custom Build Script in skaffold.\n\n# Building Artifacts with a Custom Build Script\n\nThis page describes building Skaffold artifacts using a custom build script, which builds images using ko.Here's a quick rundown of what this is about:\n\n## Before you begin\n\nFirst, you will need to have Skaffold and a Kubernetes cluster set up. To learn more about how to set up Skaffold and a Kubernetes cluster, see the quickstart docs.\n\n## Tutorial - Hello World in Go\n\nThis tutorial will be based on the custom example in our repository.\n\n## Adding a Custom Builder to Your Skaffold Project\n\nWe’ll need to configure your Skaffold config to build artifacts with ko. To do this, we will take advantage of the custom builder in Skaffold.\n\nFirst, add a build.sh file which Skaffold will call to build artifacts:\n\n```yaml\n#!/usr/bin/env bash\nset -e\n\nif ! [ -x \"$(command -v ko)\" ]; then\n    GO111MODULE=on go get -mod=readonly github.com/google/ko/cmd/ko@v0.4.0\nfi\n\noutput=$(ko publish --local --preserve-import-paths --tags= . | tee)\nref=$(echo $output | tail -n1)\n\ndocker tag $ref $IMAGE\nif $PUSH_IMAGE; then\n    docker push $IMAGE\nfi\n```\n\nThen, configure artifacts in your skaffold.yaml to build with build.sh:\n\n```yaml\napiVersion: skaffold/v2alpha1\nkind: Config\nbuild:\n  artifacts:\n  - image: gcr.io/k8s-skaffold/skaffold-custom\n    custom:\n      buildCommand: ./build.sh\n      dependencies:\n        paths:\n        - .\n```\n\nList the file dependencies for each artifact; in the example above, Skaffold watches all files in the build context. For more information about listing dependencies for custom artifacts, see the documentation here.\n\nYou can check custom builder is properly configured by running skaffold build. This command should build the artifacts and exit successfully.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/tutorials/custom-builder", "title": "Building Artifacts with a Custom Build Script", "description": "This page describes building Skaffold artifacts using a custom build script, which builds images using ko.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:10:06", "type": "overview", "page_metadata": {"ogSiteName": "Skaffold", "ogDescription": "This page describes building Skaffold artifacts using a custom build script, which builds images using ko. ko builds containers from Go source code, without the need for a Dockerfile or even installing Docker.\nBefore you begin First, you will need to have Skaffold and a Kubernetes cluster set up. To learn more about how to set up Skaffold and a Kubernetes cluster, see the quickstart docs.\nTutorial - Hello World in Go This tutorial will be based on the custom example in our repository.", "twitter:card": "summary", "modifiedTime": "2025-01-23T10:14:58-05:00", "twitter:description": "This page describes building Skaffold artifacts using a custom build script, which builds images using ko. ko builds containers from Go source code, without the need for a Dockerfile or even installing Docker.\nBefore you begin First, you will need to have Skaffold and a Kubernetes cluster set up. To learn more about how to set up Skaffold and a Kubernetes cluster, see the quickstart docs.\nTutorial - Hello World in Go This tutorial will be based on the custom example in our repository.", "language": "en", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "robots": "index, follow", "og:type": "article", "title": "Building Artifacts with a Custom Build Script | Skaffold", "og:url": "https://skaffold.dev/docs/tutorials/custom-builder/", "twitter:title": "Building Artifacts with a Custom Build Script", "ogTitle": "Building Artifacts with a Custom Build Script", "og:title": "Building Artifacts with a Custom Build Script", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "description": "This page describes building Skaffold artifacts using a custom build script, which builds images using ko.\nko builds containers from Go source code, …", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:site_name": "Skaffold", "ogUrl": "https://skaffold.dev/docs/tutorials/custom-builder/", "article:section": "docs", "og:description": "This page describes building Skaffold artifacts using a custom build script, which builds images using ko. ko builds containers from Go source code, without the need for a Dockerfile or even installing Docker.\nBefore you begin First, you will need to have Skaffold and a Kubernetes cluster set up. To learn more about how to set up Skaffold and a Kubernetes cluster, see the quickstart docs.\nTutorial - Hello World in Go This tutorial will be based on the custom example in our repository.", "generator": "Hugo 0.99.1", "scrapeId": "bd5aa924-0719-4cea-a7d5-6952cfda89cc", "sourceURL": "https://skaffold.dev/docs/tutorials/custom-builder", "url": "https://skaffold.dev/docs/tutorials/custom-builder/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I before you begin in skaffold?\n\nAssistant: To before you begin in skaffold, here's what you do:\nFirst, you will need to have Skaffold and a Kubernetes cluster set up. To learn more about how to set up Skaffold and a Kubernetes cluster, see the quickstart docs..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/tutorials/custom-builder", "title": "Building Artifacts with a Custom Build Script", "description": "This page describes building Skaffold artifacts using a custom build script, which builds images using ko.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:10:06", "type": "section_detail", "page_metadata": {"ogSiteName": "Skaffold", "ogDescription": "This page describes building Skaffold artifacts using a custom build script, which builds images using ko. ko builds containers from Go source code, without the need for a Dockerfile or even installing Docker.\nBefore you begin First, you will need to have Skaffold and a Kubernetes cluster set up. To learn more about how to set up Skaffold and a Kubernetes cluster, see the quickstart docs.\nTutorial - Hello World in Go This tutorial will be based on the custom example in our repository.", "twitter:card": "summary", "modifiedTime": "2025-01-23T10:14:58-05:00", "twitter:description": "This page describes building Skaffold artifacts using a custom build script, which builds images using ko. ko builds containers from Go source code, without the need for a Dockerfile or even installing Docker.\nBefore you begin First, you will need to have Skaffold and a Kubernetes cluster set up. To learn more about how to set up Skaffold and a Kubernetes cluster, see the quickstart docs.\nTutorial - Hello World in Go This tutorial will be based on the custom example in our repository.", "language": "en", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "robots": "index, follow", "og:type": "article", "title": "Building Artifacts with a Custom Build Script | Skaffold", "og:url": "https://skaffold.dev/docs/tutorials/custom-builder/", "twitter:title": "Building Artifacts with a Custom Build Script", "ogTitle": "Building Artifacts with a Custom Build Script", "og:title": "Building Artifacts with a Custom Build Script", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "description": "This page describes building Skaffold artifacts using a custom build script, which builds images using ko.\nko builds containers from Go source code, …", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:site_name": "Skaffold", "ogUrl": "https://skaffold.dev/docs/tutorials/custom-builder/", "article:section": "docs", "og:description": "This page describes building Skaffold artifacts using a custom build script, which builds images using ko. ko builds containers from Go source code, without the need for a Dockerfile or even installing Docker.\nBefore you begin First, you will need to have Skaffold and a Kubernetes cluster set up. To learn more about how to set up Skaffold and a Kubernetes cluster, see the quickstart docs.\nTutorial - Hello World in Go This tutorial will be based on the custom example in our repository.", "generator": "Hugo 0.99.1", "scrapeId": "bd5aa924-0719-4cea-a7d5-6952cfda89cc", "sourceURL": "https://skaffold.dev/docs/tutorials/custom-builder", "url": "https://skaffold.dev/docs/tutorials/custom-builder/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I tutorial - hello world in go in skaffold?\n\nAssistant: To tutorial - hello world in go in skaffold, here's what you do:\nThis tutorial will be based on the custom example in our repository..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/tutorials/custom-builder", "title": "Building Artifacts with a Custom Build Script", "description": "This page describes building Skaffold artifacts using a custom build script, which builds images using ko.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:10:06", "type": "section_detail", "page_metadata": {"ogSiteName": "Skaffold", "ogDescription": "This page describes building Skaffold artifacts using a custom build script, which builds images using ko. ko builds containers from Go source code, without the need for a Dockerfile or even installing Docker.\nBefore you begin First, you will need to have Skaffold and a Kubernetes cluster set up. To learn more about how to set up Skaffold and a Kubernetes cluster, see the quickstart docs.\nTutorial - Hello World in Go This tutorial will be based on the custom example in our repository.", "twitter:card": "summary", "modifiedTime": "2025-01-23T10:14:58-05:00", "twitter:description": "This page describes building Skaffold artifacts using a custom build script, which builds images using ko. ko builds containers from Go source code, without the need for a Dockerfile or even installing Docker.\nBefore you begin First, you will need to have Skaffold and a Kubernetes cluster set up. To learn more about how to set up Skaffold and a Kubernetes cluster, see the quickstart docs.\nTutorial - Hello World in Go This tutorial will be based on the custom example in our repository.", "language": "en", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "robots": "index, follow", "og:type": "article", "title": "Building Artifacts with a Custom Build Script | Skaffold", "og:url": "https://skaffold.dev/docs/tutorials/custom-builder/", "twitter:title": "Building Artifacts with a Custom Build Script", "ogTitle": "Building Artifacts with a Custom Build Script", "og:title": "Building Artifacts with a Custom Build Script", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "description": "This page describes building Skaffold artifacts using a custom build script, which builds images using ko.\nko builds containers from Go source code, …", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:site_name": "Skaffold", "ogUrl": "https://skaffold.dev/docs/tutorials/custom-builder/", "article:section": "docs", "og:description": "This page describes building Skaffold artifacts using a custom build script, which builds images using ko. ko builds containers from Go source code, without the need for a Dockerfile or even installing Docker.\nBefore you begin First, you will need to have Skaffold and a Kubernetes cluster set up. To learn more about how to set up Skaffold and a Kubernetes cluster, see the quickstart docs.\nTutorial - Hello World in Go This tutorial will be based on the custom example in our repository.", "generator": "Hugo 0.99.1", "scrapeId": "bd5aa924-0719-4cea-a7d5-6952cfda89cc", "sourceURL": "https://skaffold.dev/docs/tutorials/custom-builder", "url": "https://skaffold.dev/docs/tutorials/custom-builder/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I adding a custom builder to your skaffold project in skaffold?\n\nAssistant: To adding a custom builder to your skaffold project in skaffold, here's what you do:\nWe’ll need to configure your Skaffold config to build artifacts with ko. To do this, we will take advantage of the custom builder in Skaffold.\n\nFirst, add a build.sh file which Skaffold will call to build artifacts:\n\n```yaml\n#!/usr/bin/env bash\nset -e\n\nif ! [ -x \"$(command -v ko)\" ]; then\n    GO111MODULE=on go get -mod=readonly github.com/google/ko/cmd/ko@v0.4.0\nfi\n\noutput=$(ko publish --local --preserve-import-paths --tags= . | tee)\nref=$(echo $output | tail -n1)\n\ndocker tag $ref $IMAGE\nif $PUSH_IMAGE; then\n    docker push $IMAGE\nfi\n```\n\nThen, configure artifacts in your skaffold.yaml to build with build.sh:\n\n```yaml\napiVersion: skaffold/v2alpha1\nkind: Config\nbuild:\n  artifacts:\n  - image: gcr.io/k8s-skaffold/skaffold-custom\n    custom:\n      buildCommand: ./build.sh\n      dependencies:\n        paths:\n        - .\n```\n\nList the file dependencies for each artifact; in the example above, Skaffold watches all files in the build context. For more information about listing dependencies for custom artifacts, see the documentation here.\n\nYou can check custom builder is properly configured by running skaffold build. This command should build the artifacts and exit successfully..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/tutorials/custom-builder", "title": "Building Artifacts with a Custom Build Script", "description": "This page describes building Skaffold artifacts using a custom build script, which builds images using ko.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:10:06", "type": "section_detail", "page_metadata": {"ogSiteName": "Skaffold", "ogDescription": "This page describes building Skaffold artifacts using a custom build script, which builds images using ko. ko builds containers from Go source code, without the need for a Dockerfile or even installing Docker.\nBefore you begin First, you will need to have Skaffold and a Kubernetes cluster set up. To learn more about how to set up Skaffold and a Kubernetes cluster, see the quickstart docs.\nTutorial - Hello World in Go This tutorial will be based on the custom example in our repository.", "twitter:card": "summary", "modifiedTime": "2025-01-23T10:14:58-05:00", "twitter:description": "This page describes building Skaffold artifacts using a custom build script, which builds images using ko. ko builds containers from Go source code, without the need for a Dockerfile or even installing Docker.\nBefore you begin First, you will need to have Skaffold and a Kubernetes cluster set up. To learn more about how to set up Skaffold and a Kubernetes cluster, see the quickstart docs.\nTutorial - Hello World in Go This tutorial will be based on the custom example in our repository.", "language": "en", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "robots": "index, follow", "og:type": "article", "title": "Building Artifacts with a Custom Build Script | Skaffold", "og:url": "https://skaffold.dev/docs/tutorials/custom-builder/", "twitter:title": "Building Artifacts with a Custom Build Script", "ogTitle": "Building Artifacts with a Custom Build Script", "og:title": "Building Artifacts with a Custom Build Script", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "description": "This page describes building Skaffold artifacts using a custom build script, which builds images using ko.\nko builds containers from Go source code, …", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:site_name": "Skaffold", "ogUrl": "https://skaffold.dev/docs/tutorials/custom-builder/", "article:section": "docs", "og:description": "This page describes building Skaffold artifacts using a custom build script, which builds images using ko. ko builds containers from Go source code, without the need for a Dockerfile or even installing Docker.\nBefore you begin First, you will need to have Skaffold and a Kubernetes cluster set up. To learn more about how to set up Skaffold and a Kubernetes cluster, see the quickstart docs.\nTutorial - Hello World in Go This tutorial will be based on the custom example in our repository.", "generator": "Hugo 0.99.1", "scrapeId": "bd5aa924-0719-4cea-a7d5-6952cfda89cc", "sourceURL": "https://skaffold.dev/docs/tutorials/custom-builder", "url": "https://skaffold.dev/docs/tutorials/custom-builder/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you give me some code examples for Building Artifacts with a Custom Build Script in skaffold?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**build.sh**:\n\n```yaml\n#!/usr/bin/env bash\nset -e\n\nif ! [ -x \"$(command -v ko)\" ]; then\n    GO111MODULE=on go get -mod=readonly github.com/google/ko/cmd/ko@v0.4.0\nfi\n\noutput=$(ko publish --local --preserve-import-paths --tags= . | tee)\nref=$(echo $output | tail -n1)\n\ndocker tag $ref $IMAGE\nif $PUSH_IMAGE; then\n    docker push $IMAGE\nfi\n\n```\n\nThis snippet shows you how to build.sh, which is an important aspect of building artifacts with a custom build script.\n\n", "metadata": {"source_url": "https://skaffold.dev/docs/tutorials/custom-builder", "title": "Building Artifacts with a Custom Build Script", "description": "This page describes building Skaffold artifacts using a custom build script, which builds images using ko.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:10:06", "type": "code_examples", "page_metadata": {"ogSiteName": "Skaffold", "ogDescription": "This page describes building Skaffold artifacts using a custom build script, which builds images using ko. ko builds containers from Go source code, without the need for a Dockerfile or even installing Docker.\nBefore you begin First, you will need to have Skaffold and a Kubernetes cluster set up. To learn more about how to set up Skaffold and a Kubernetes cluster, see the quickstart docs.\nTutorial - Hello World in Go This tutorial will be based on the custom example in our repository.", "twitter:card": "summary", "modifiedTime": "2025-01-23T10:14:58-05:00", "twitter:description": "This page describes building Skaffold artifacts using a custom build script, which builds images using ko. ko builds containers from Go source code, without the need for a Dockerfile or even installing Docker.\nBefore you begin First, you will need to have Skaffold and a Kubernetes cluster set up. To learn more about how to set up Skaffold and a Kubernetes cluster, see the quickstart docs.\nTutorial - Hello World in Go This tutorial will be based on the custom example in our repository.", "language": "en", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "robots": "index, follow", "og:type": "article", "title": "Building Artifacts with a Custom Build Script | Skaffold", "og:url": "https://skaffold.dev/docs/tutorials/custom-builder/", "twitter:title": "Building Artifacts with a Custom Build Script", "ogTitle": "Building Artifacts with a Custom Build Script", "og:title": "Building Artifacts with a Custom Build Script", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "description": "This page describes building Skaffold artifacts using a custom build script, which builds images using ko.\nko builds containers from Go source code, …", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:site_name": "Skaffold", "ogUrl": "https://skaffold.dev/docs/tutorials/custom-builder/", "article:section": "docs", "og:description": "This page describes building Skaffold artifacts using a custom build script, which builds images using ko. ko builds containers from Go source code, without the need for a Dockerfile or even installing Docker.\nBefore you begin First, you will need to have Skaffold and a Kubernetes cluster set up. To learn more about how to set up Skaffold and a Kubernetes cluster, see the quickstart docs.\nTutorial - Hello World in Go This tutorial will be based on the custom example in our repository.", "generator": "Hugo 0.99.1", "scrapeId": "bd5aa924-0719-4cea-a7d5-6952cfda89cc", "sourceURL": "https://skaffold.dev/docs/tutorials/custom-builder", "url": "https://skaffold.dev/docs/tutorials/custom-builder/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: What are some tips for using Building Artifacts with a Custom Build Script in skaffold effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nEnsure Skaffold and a Kubernetes cluster are set up before starting.\n\nUse the custom builder in Skaffold for building artifacts with ko.\n\nCheck the custom builder configuration by running `skaffold build`.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://skaffold.dev/docs/tutorials/custom-builder", "title": "Building Artifacts with a Custom Build Script", "description": "This page describes building Skaffold artifacts using a custom build script, which builds images using ko.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:10:06", "type": "best_practices", "page_metadata": {"ogSiteName": "Skaffold", "ogDescription": "This page describes building Skaffold artifacts using a custom build script, which builds images using ko. ko builds containers from Go source code, without the need for a Dockerfile or even installing Docker.\nBefore you begin First, you will need to have Skaffold and a Kubernetes cluster set up. To learn more about how to set up Skaffold and a Kubernetes cluster, see the quickstart docs.\nTutorial - Hello World in Go This tutorial will be based on the custom example in our repository.", "twitter:card": "summary", "modifiedTime": "2025-01-23T10:14:58-05:00", "twitter:description": "This page describes building Skaffold artifacts using a custom build script, which builds images using ko. ko builds containers from Go source code, without the need for a Dockerfile or even installing Docker.\nBefore you begin First, you will need to have Skaffold and a Kubernetes cluster set up. To learn more about how to set up Skaffold and a Kubernetes cluster, see the quickstart docs.\nTutorial - Hello World in Go This tutorial will be based on the custom example in our repository.", "language": "en", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "robots": "index, follow", "og:type": "article", "title": "Building Artifacts with a Custom Build Script | Skaffold", "og:url": "https://skaffold.dev/docs/tutorials/custom-builder/", "twitter:title": "Building Artifacts with a Custom Build Script", "ogTitle": "Building Artifacts with a Custom Build Script", "og:title": "Building Artifacts with a Custom Build Script", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "description": "This page describes building Skaffold artifacts using a custom build script, which builds images using ko.\nko builds containers from Go source code, …", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:site_name": "Skaffold", "ogUrl": "https://skaffold.dev/docs/tutorials/custom-builder/", "article:section": "docs", "og:description": "This page describes building Skaffold artifacts using a custom build script, which builds images using ko. ko builds containers from Go source code, without the need for a Dockerfile or even installing Docker.\nBefore you begin First, you will need to have Skaffold and a Kubernetes cluster set up. To learn more about how to set up Skaffold and a Kubernetes cluster, see the quickstart docs.\nTutorial - Hello World in Go This tutorial will be based on the custom example in our repository.", "generator": "Hugo 0.99.1", "scrapeId": "bd5aa924-0719-4cea-a7d5-6952cfda89cc", "sourceURL": "https://skaffold.dev/docs/tutorials/custom-builder", "url": "https://skaffold.dev/docs/tutorials/custom-builder/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what Skaffold Developer Journey with Buildpacks Tutorial is in skaffold?\n\nAssistant: Sure, I'd be happy to explain Skaffold Developer Journey with Buildpacks Tutorial in skaffold.\n\n# Skaffold Developer Journey with Buildpacks Tutorial\n\nThis tutorial guides developers on how to transition from local development on minikube to remote development on an enterprise Kubernetes cluster using Skaffold and buildpacks.Here's a quick rundown of what this is about:\n\n## Introduction\n\nSkaffold allows developers to easily transition from local development on minikube to remote development on an enterprise Kubernetes cluster managed by IT. During the transition from local to remote deployment, a security team might ask a developer to patch a library with a specific vulnerability in it. This is where Skaffold’s support for buildpacks comes in handy. In this tutorial, you’ll start out deploying an application locally, swap out buildpacks in the skaffold.yaml file to use the latest libraries, and then deploy the application to a remote Kubernetes cluster.\n\nFor a guided Cloud Shell tutorial on how a developer’s journey might look in adopting Skaffold, follow:\n\n[![Open in Cloud Shell](https://gstatic.com/cloudssh/images/open-btn.svg)](https://ssh.cloud.google.com/cloudshell/editor?cloudshell_git_repo=https://github.com/GoogleContainerTools/skaffold&cloudshell_workspace=examples/dev-journey-buildpacks&cloudshell_tutorial=tutorial.md)\n\n### What you’ll learn\n\n- How to develop on minikube locally and move to an enterprise managed kubernetes cluster with ease\n- How to easily switch buildpack versions to comply with security demands\n\n* * *\n\n**Time to complete**:\nClick the **Start** button to move to the next step.\n\n## Prepare the Environment\n\n### Create a Project\n\nCreate a project called skaffold-tutorial with a valid billing account in the Google Cloud [Manage Resources Console](https://console.cloud.google.com/cloud-resource-manager). In the shell run:\n\n```bash\ngcloud config set project skaffold-tutorial\n```\n\n### Run the Setup Script\n\nRun the start script to prepare the environment. The script will:\n\n- Enable the GCE and GKE APIs, which is needed in order to spin up a GKE cluster\n- Create a network and subnet for the GKE cluster to use\n- Deploy a one node GKE cluster to optimize for cost\n- Install the latest version of skaffold. Although Skaffold is already installed on cloud shell, we’ll install the latest version for good measure.\n\n```bash\nchmod +x start.sh && ./start.sh\n```\n\n**Note:** answer **y** when prompted to enable the GKE and GCE APIs\n\n### Start a Minikube cluster\n\nWe’ll use minikube for local kubernetes development. Minikube is a tool that optimizes kubernetes for local deployments, which makes it perfect for development and testing. Cloud Shell already has minikube installed, but you can install it yourself by running gcloud components install minikube or following [these instructions](https://minikube.sigs.k8s.io/docs/start/).\n\nRun:\n\n```bash\nminikube start\n```\n\n## Run the App to Minikube Using Skaffold\n\n### Deploy the App\n\nStart skaffold in development mode which will constantly monitor the current directory for changes and kick off a new build and deploy whenever changes are detected.\n\n```bash\nskaffold dev\n```\n\n**Important:** note the software versions under the **DETECTING** phase of the buildpack output. These will be important later.\n\nWe will be working in three terminals during this tutorial. The current terminal you’re in will be referred to as **Terminal A**. Open a second terminal, which we will call **Terminal B**. In order to connect to the application to make sure its working, you need to start the minikube load balancer by running:\n\n```bash\nminikube tunnel\n```\n\nOpen a third terminal, which we will refer to as **Terminal C**. Find out the load balancer IP by recording the external IP as **EXTERNAL_IP** after running:\n\n```bash\nkubectl get service\n```\n\nEnsure the app is responding by running:\n\n```bash\ncurl http://EXTERNAL_IP:8080\n```\n\n### Change the App and Trigger a Redeploy\n\nEdit the part of the application responsible for returning the “Hello World!” message you saw previously:\n\n```bash\nvim src/main/java/hello/HelloController.java\n```\n\nChange the return line to **return “Hello, Skaffold!”**.\n\nSwitch back to the **Terminal A** and see that its rebuilding and redeploying the app.\n\nSwitch back to the **Terminal C** and run the following command to watch until only one pod is running:\n\n```bash\nwatch kubectl get pods\n```\n\nOnce there is only one pod running, meaning the latest pod is deployed, see that your app changes are live:\n\n```bash\ncurl http://EXTERNAL_IP:8080\n```\n\n## Updating Buildpacks\n\nPerhaps the best benefit of buildpacks is that it reduces how much work developers need to do to patch their applications if the security team highlights a library vulnerability. [Google Cloud buildpacks](https://cloud.google.com/blog/products/containers-kubernetes/google-cloud-now-supports-buildpacks) use a managed base Ubuntu 18.04 image that is regularly scanned for security vulnerabilities; any detected vulnerabilities are automatically patched. These patches are included in the latest revision of the builder. A builder contains one or more buildpacks supporting several languages. Our skaffold.yaml points to an older builder release, which uses older buildpack versions that may pull in vulnerable libraries. We will be updating the builder release to use the most up-to-date buildpacks.\n\nEdit the skaffold.yaml file:\n\n```bash\nvim skaffold.yaml\n```\n\nUpdate the builder line to **gcr.io/buildpacks/builder:v1**, which will use the latest builder that has more up-to-date buildpacks.\n\nSwitch back to the **Terminal A** and see that its rebuilding and redeploying the app.\n\n**IMPORTANT:** compare the software versions under the **DETECTING** phase of the buildpack output to the ones you saw before. The builder is now using newer buildpack versions.\n\nSwitch back to **Terminal C** and run the following command to watch until only one pod is running:\n\n```bash\nwatch kubectl get pods\n```\n\nOnce there is only one pod running, meaning the latest pod is deployed, see that your app changes are live:\n\n```bash\ncurl http://EXTERNAL_IP:8080\n```\n\n## Deploy the App to Enterprise GKE Cluster Using Skaffold\n\n### Switch kubectl Context to the Enterprise GKE Cluster\n\nSwitch your local kubectl context to the enterprise GKE cluster and get the latest credentials:\n\n```bash\ngcloud container clusters get-credentials $(gcloud config get-value project)-cluster --region us-central1-a\n```\n\nSee that kubectl is now configured to use the remote kubernetes cluster instead of minikube (denoted by the asterisk)\n\n```bash\nkubectl config get-contexts\n```\n\n### Deploy the App\n\nAttempt to deploy the app by running:\n\n```bash\nskaffold dev --default-repo=gcr.io/$(gcloud config get-value project)\n```\n\nSwitch back to **Terminal C** and run the following command to watch until only one pod is running:\n\n```bash\nwatch kubectl get pods\n```\n\nRun the following command. Once an external IP is assigned to the service, record it as **EXTERNAL_IP**:\n\n```bash\nwatch kubectl get service\n```\n\nSee that your app changes are now live on an Internet-accessible IP:\n\n```bash\ncurl http://EXTERNAL_IP:8080\n```\n\n## Congratulations!\n\nThat’s the end of the tutorial. You now know how to seamlessly transition between local kubernetes development and remote development on a kubernetes cluster managed by your enterprise IT team. Along the way you learned how to quickly patch your application libraries to comply with security standards.\n\nI hope this tutorial was informative. Good luck on your journey with Skaffold!\n\nLast modified January 23, 2025: [release: v2.14.0 (#9668) (f132ab25)](https://github.com/GoogleContainerTools/skaffold/commit/f132ab25adf1599c7fbdce733144991126565386)\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/tutorials/developer-journey", "title": "Skaffold Developer Journey with Buildpacks Tutorial", "description": "This tutorial guides developers on how to transition from local development on minikube to remote development on an enterprise Kubernetes cluster using Skaffold and buildpacks.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 04:10:48", "type": "overview", "page_metadata": {"modifiedTime": "2025-01-23T10:14:58-05:00", "ogSiteName": "Skaffold", "twitter:card": "summary", "og:site_name": "Skaffold", "og:type": "article", "ogTitle": "Developer Journey with Buildpacks", "language": "en", "og:description": "Skaffold Developer Journey with Buildpacks Tutorial Introduction What is this project? Skaffold allows developers to easily transition from local development on minikube to remote development on an enterprise Kubernetes cluster managed by IT. During the transition from local to remote deployment, a security team might ask a developer to patch a library with a specific vulnerability in it. This is where Skaffold’s support for buildpacks comes in handy. In this tutorial, you’ll start out deploying an application locally, swap out buildpacks in the skaffold.", "ogUrl": "https://skaffold.dev/docs/tutorials/developer-journey/", "generator": "Hugo 0.99.1", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "article:modified_time": "2025-01-23T10:14:58-05:00", "twitter:title": "Developer Journey with Buildpacks", "twitter:description": "Skaffold Developer Journey with Buildpacks Tutorial Introduction What is this project? Skaffold allows developers to easily transition from local development on minikube to remote development on an enterprise Kubernetes cluster managed by IT. During the transition from local to remote deployment, a security team might ask a developer to patch a library with a specific vulnerability in it. This is where Skaffold’s support for buildpacks comes in handy. In this tutorial, you’ll start out deploying an application locally, swap out buildpacks in the skaffold.", "description": "Skaffold Developer Journey with Buildpacks Tutorial\nIntroduction\nWhat is this project?\nSkaffold allows developers to easily transition from local …", "article:section": "docs", "og:url": "https://skaffold.dev/docs/tutorials/developer-journey/", "robots": "index, follow", "title": "Developer Journey with Buildpacks | Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:title": "Developer Journey with Buildpacks", "ogDescription": "Skaffold Developer Journey with Buildpacks Tutorial Introduction What is this project? Skaffold allows developers to easily transition from local development on minikube to remote development on an enterprise Kubernetes cluster managed by IT. During the transition from local to remote deployment, a security team might ask a developer to patch a library with a specific vulnerability in it. This is where Skaffold’s support for buildpacks comes in handy. In this tutorial, you’ll start out deploying an application locally, swap out buildpacks in the skaffold.", "scrapeId": "22406a3b-ce5d-4a04-9f08-11c121b0bc85", "sourceURL": "https://skaffold.dev/docs/tutorials/developer-journey", "url": "https://skaffold.dev/docs/tutorials/developer-journey/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I introduction in skaffold?\n\nAssistant: To introduction in skaffold, here's what you do:\nSkaffold allows developers to easily transition from local development on minikube to remote development on an enterprise Kubernetes cluster managed by IT. During the transition from local to remote deployment, a security team might ask a developer to patch a library with a specific vulnerability in it. This is where Skaffold’s support for buildpacks comes in handy. In this tutorial, you’ll start out deploying an application locally, swap out buildpacks in the skaffold.yaml file to use the latest libraries, and then deploy the application to a remote Kubernetes cluster.\n\nFor a guided Cloud Shell tutorial on how a developer’s journey might look in adopting Skaffold, follow:\n\n[![Open in Cloud Shell](https://gstatic.com/cloudssh/images/open-btn.svg)](https://ssh.cloud.google.com/cloudshell/editor?cloudshell_git_repo=https://github.com/GoogleContainerTools/skaffold&cloudshell_workspace=examples/dev-journey-buildpacks&cloudshell_tutorial=tutorial.md)\n\n### What you’ll learn\n\n- How to develop on minikube locally and move to an enterprise managed kubernetes cluster with ease\n- How to easily switch buildpack versions to comply with security demands\n\n* * *\n\n**Time to complete**:\nClick the **Start** button to move to the next step..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/tutorials/developer-journey", "title": "Skaffold Developer Journey with Buildpacks Tutorial", "description": "This tutorial guides developers on how to transition from local development on minikube to remote development on an enterprise Kubernetes cluster using Skaffold and buildpacks.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 04:10:48", "type": "section_detail", "page_metadata": {"modifiedTime": "2025-01-23T10:14:58-05:00", "ogSiteName": "Skaffold", "twitter:card": "summary", "og:site_name": "Skaffold", "og:type": "article", "ogTitle": "Developer Journey with Buildpacks", "language": "en", "og:description": "Skaffold Developer Journey with Buildpacks Tutorial Introduction What is this project? Skaffold allows developers to easily transition from local development on minikube to remote development on an enterprise Kubernetes cluster managed by IT. During the transition from local to remote deployment, a security team might ask a developer to patch a library with a specific vulnerability in it. This is where Skaffold’s support for buildpacks comes in handy. In this tutorial, you’ll start out deploying an application locally, swap out buildpacks in the skaffold.", "ogUrl": "https://skaffold.dev/docs/tutorials/developer-journey/", "generator": "Hugo 0.99.1", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "article:modified_time": "2025-01-23T10:14:58-05:00", "twitter:title": "Developer Journey with Buildpacks", "twitter:description": "Skaffold Developer Journey with Buildpacks Tutorial Introduction What is this project? Skaffold allows developers to easily transition from local development on minikube to remote development on an enterprise Kubernetes cluster managed by IT. During the transition from local to remote deployment, a security team might ask a developer to patch a library with a specific vulnerability in it. This is where Skaffold’s support for buildpacks comes in handy. In this tutorial, you’ll start out deploying an application locally, swap out buildpacks in the skaffold.", "description": "Skaffold Developer Journey with Buildpacks Tutorial\nIntroduction\nWhat is this project?\nSkaffold allows developers to easily transition from local …", "article:section": "docs", "og:url": "https://skaffold.dev/docs/tutorials/developer-journey/", "robots": "index, follow", "title": "Developer Journey with Buildpacks | Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:title": "Developer Journey with Buildpacks", "ogDescription": "Skaffold Developer Journey with Buildpacks Tutorial Introduction What is this project? Skaffold allows developers to easily transition from local development on minikube to remote development on an enterprise Kubernetes cluster managed by IT. During the transition from local to remote deployment, a security team might ask a developer to patch a library with a specific vulnerability in it. This is where Skaffold’s support for buildpacks comes in handy. In this tutorial, you’ll start out deploying an application locally, swap out buildpacks in the skaffold.", "scrapeId": "22406a3b-ce5d-4a04-9f08-11c121b0bc85", "sourceURL": "https://skaffold.dev/docs/tutorials/developer-journey", "url": "https://skaffold.dev/docs/tutorials/developer-journey/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I prepare the environment in skaffold?\n\nAssistant: To prepare the environment in skaffold, here's what you do:\n### Create a Project\n\nCreate a project called skaffold-tutorial with a valid billing account in the Google Cloud [Manage Resources Console](https://console.cloud.google.com/cloud-resource-manager). In the shell run:\n\n```bash\ngcloud config set project skaffold-tutorial\n```\n\n### Run the Setup Script\n\nRun the start script to prepare the environment. The script will:\n\n- Enable the GCE and GKE APIs, which is needed in order to spin up a GKE cluster\n- Create a network and subnet for the GKE cluster to use\n- Deploy a one node GKE cluster to optimize for cost\n- Install the latest version of skaffold. Although Skaffold is already installed on cloud shell, we’ll install the latest version for good measure.\n\n```bash\nchmod +x start.sh && ./start.sh\n```\n\n**Note:** answer **y** when prompted to enable the GKE and GCE APIs\n\n### Start a Minikube cluster\n\nWe’ll use minikube for local kubernetes development. Minikube is a tool that optimizes kubernetes for local deployments, which makes it perfect for development and testing. Cloud Shell already has minikube installed, but you can install it yourself by running gcloud components install minikube or following [these instructions](https://minikube.sigs.k8s.io/docs/start/).\n\nRun:\n\n```bash\nminikube start\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/tutorials/developer-journey", "title": "Skaffold Developer Journey with Buildpacks Tutorial", "description": "This tutorial guides developers on how to transition from local development on minikube to remote development on an enterprise Kubernetes cluster using Skaffold and buildpacks.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 04:10:48", "type": "section_detail", "page_metadata": {"modifiedTime": "2025-01-23T10:14:58-05:00", "ogSiteName": "Skaffold", "twitter:card": "summary", "og:site_name": "Skaffold", "og:type": "article", "ogTitle": "Developer Journey with Buildpacks", "language": "en", "og:description": "Skaffold Developer Journey with Buildpacks Tutorial Introduction What is this project? Skaffold allows developers to easily transition from local development on minikube to remote development on an enterprise Kubernetes cluster managed by IT. During the transition from local to remote deployment, a security team might ask a developer to patch a library with a specific vulnerability in it. This is where Skaffold’s support for buildpacks comes in handy. In this tutorial, you’ll start out deploying an application locally, swap out buildpacks in the skaffold.", "ogUrl": "https://skaffold.dev/docs/tutorials/developer-journey/", "generator": "Hugo 0.99.1", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "article:modified_time": "2025-01-23T10:14:58-05:00", "twitter:title": "Developer Journey with Buildpacks", "twitter:description": "Skaffold Developer Journey with Buildpacks Tutorial Introduction What is this project? Skaffold allows developers to easily transition from local development on minikube to remote development on an enterprise Kubernetes cluster managed by IT. During the transition from local to remote deployment, a security team might ask a developer to patch a library with a specific vulnerability in it. This is where Skaffold’s support for buildpacks comes in handy. In this tutorial, you’ll start out deploying an application locally, swap out buildpacks in the skaffold.", "description": "Skaffold Developer Journey with Buildpacks Tutorial\nIntroduction\nWhat is this project?\nSkaffold allows developers to easily transition from local …", "article:section": "docs", "og:url": "https://skaffold.dev/docs/tutorials/developer-journey/", "robots": "index, follow", "title": "Developer Journey with Buildpacks | Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:title": "Developer Journey with Buildpacks", "ogDescription": "Skaffold Developer Journey with Buildpacks Tutorial Introduction What is this project? Skaffold allows developers to easily transition from local development on minikube to remote development on an enterprise Kubernetes cluster managed by IT. During the transition from local to remote deployment, a security team might ask a developer to patch a library with a specific vulnerability in it. This is where Skaffold’s support for buildpacks comes in handy. In this tutorial, you’ll start out deploying an application locally, swap out buildpacks in the skaffold.", "scrapeId": "22406a3b-ce5d-4a04-9f08-11c121b0bc85", "sourceURL": "https://skaffold.dev/docs/tutorials/developer-journey", "url": "https://skaffold.dev/docs/tutorials/developer-journey/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I run the app to minikube using skaffold in skaffold?\n\nAssistant: To run the app to minikube using skaffold in skaffold, here's what you do:\n### Deploy the App\n\nStart skaffold in development mode which will constantly monitor the current directory for changes and kick off a new build and deploy whenever changes are detected.\n\n```bash\nskaffold dev\n```\n\n**Important:** note the software versions under the **DETECTING** phase of the buildpack output. These will be important later.\n\nWe will be working in three terminals during this tutorial. The current terminal you’re in will be referred to as **Terminal A**. Open a second terminal, which we will call **Terminal B**. In order to connect to the application to make sure its working, you need to start the minikube load balancer by running:\n\n```bash\nminikube tunnel\n```\n\nOpen a third terminal, which we will refer to as **Terminal C**. Find out the load balancer IP by recording the external IP as **EXTERNAL_IP** after running:\n\n```bash\nkubectl get service\n```\n\nEnsure the app is responding by running:\n\n```bash\ncurl http://EXTERNAL_IP:8080\n```\n\n### Change the App and Trigger a Redeploy\n\nEdit the part of the application responsible for returning the “Hello World!” message you saw previously:\n\n```bash\nvim src/main/java/hello/HelloController.java\n```\n\nChange the return line to **return “Hello, Skaffold!”**.\n\nSwitch back to the **Terminal A** and see that its rebuilding and redeploying the app.\n\nSwitch back to the **Terminal C** and run the following command to watch until only one pod is running:\n\n```bash\nwatch kubectl get pods\n```\n\nOnce there is only one pod running, meaning the latest pod is deployed, see that your app changes are live:\n\n```bash\ncurl http://EXTERNAL_IP:8080\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/tutorials/developer-journey", "title": "Skaffold Developer Journey with Buildpacks Tutorial", "description": "This tutorial guides developers on how to transition from local development on minikube to remote development on an enterprise Kubernetes cluster using Skaffold and buildpacks.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 04:10:48", "type": "section_detail", "page_metadata": {"modifiedTime": "2025-01-23T10:14:58-05:00", "ogSiteName": "Skaffold", "twitter:card": "summary", "og:site_name": "Skaffold", "og:type": "article", "ogTitle": "Developer Journey with Buildpacks", "language": "en", "og:description": "Skaffold Developer Journey with Buildpacks Tutorial Introduction What is this project? Skaffold allows developers to easily transition from local development on minikube to remote development on an enterprise Kubernetes cluster managed by IT. During the transition from local to remote deployment, a security team might ask a developer to patch a library with a specific vulnerability in it. This is where Skaffold’s support for buildpacks comes in handy. In this tutorial, you’ll start out deploying an application locally, swap out buildpacks in the skaffold.", "ogUrl": "https://skaffold.dev/docs/tutorials/developer-journey/", "generator": "Hugo 0.99.1", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "article:modified_time": "2025-01-23T10:14:58-05:00", "twitter:title": "Developer Journey with Buildpacks", "twitter:description": "Skaffold Developer Journey with Buildpacks Tutorial Introduction What is this project? Skaffold allows developers to easily transition from local development on minikube to remote development on an enterprise Kubernetes cluster managed by IT. During the transition from local to remote deployment, a security team might ask a developer to patch a library with a specific vulnerability in it. This is where Skaffold’s support for buildpacks comes in handy. In this tutorial, you’ll start out deploying an application locally, swap out buildpacks in the skaffold.", "description": "Skaffold Developer Journey with Buildpacks Tutorial\nIntroduction\nWhat is this project?\nSkaffold allows developers to easily transition from local …", "article:section": "docs", "og:url": "https://skaffold.dev/docs/tutorials/developer-journey/", "robots": "index, follow", "title": "Developer Journey with Buildpacks | Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:title": "Developer Journey with Buildpacks", "ogDescription": "Skaffold Developer Journey with Buildpacks Tutorial Introduction What is this project? Skaffold allows developers to easily transition from local development on minikube to remote development on an enterprise Kubernetes cluster managed by IT. During the transition from local to remote deployment, a security team might ask a developer to patch a library with a specific vulnerability in it. This is where Skaffold’s support for buildpacks comes in handy. In this tutorial, you’ll start out deploying an application locally, swap out buildpacks in the skaffold.", "scrapeId": "22406a3b-ce5d-4a04-9f08-11c121b0bc85", "sourceURL": "https://skaffold.dev/docs/tutorials/developer-journey", "url": "https://skaffold.dev/docs/tutorials/developer-journey/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I updating buildpacks in skaffold?\n\nAssistant: To updating buildpacks in skaffold, here's what you do:\nPerhaps the best benefit of buildpacks is that it reduces how much work developers need to do to patch their applications if the security team highlights a library vulnerability. [Google Cloud buildpacks](https://cloud.google.com/blog/products/containers-kubernetes/google-cloud-now-supports-buildpacks) use a managed base Ubuntu 18.04 image that is regularly scanned for security vulnerabilities; any detected vulnerabilities are automatically patched. These patches are included in the latest revision of the builder. A builder contains one or more buildpacks supporting several languages. Our skaffold.yaml points to an older builder release, which uses older buildpack versions that may pull in vulnerable libraries. We will be updating the builder release to use the most up-to-date buildpacks.\n\nEdit the skaffold.yaml file:\n\n```bash\nvim skaffold.yaml\n```\n\nUpdate the builder line to **gcr.io/buildpacks/builder:v1**, which will use the latest builder that has more up-to-date buildpacks.\n\nSwitch back to the **Terminal A** and see that its rebuilding and redeploying the app.\n\n**IMPORTANT:** compare the software versions under the **DETECTING** phase of the buildpack output to the ones you saw before. The builder is now using newer buildpack versions.\n\nSwitch back to **Terminal C** and run the following command to watch until only one pod is running:\n\n```bash\nwatch kubectl get pods\n```\n\nOnce there is only one pod running, meaning the latest pod is deployed, see that your app changes are live:\n\n```bash\ncurl http://EXTERNAL_IP:8080\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/tutorials/developer-journey", "title": "Skaffold Developer Journey with Buildpacks Tutorial", "description": "This tutorial guides developers on how to transition from local development on minikube to remote development on an enterprise Kubernetes cluster using Skaffold and buildpacks.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 04:10:48", "type": "section_detail", "page_metadata": {"modifiedTime": "2025-01-23T10:14:58-05:00", "ogSiteName": "Skaffold", "twitter:card": "summary", "og:site_name": "Skaffold", "og:type": "article", "ogTitle": "Developer Journey with Buildpacks", "language": "en", "og:description": "Skaffold Developer Journey with Buildpacks Tutorial Introduction What is this project? Skaffold allows developers to easily transition from local development on minikube to remote development on an enterprise Kubernetes cluster managed by IT. During the transition from local to remote deployment, a security team might ask a developer to patch a library with a specific vulnerability in it. This is where Skaffold’s support for buildpacks comes in handy. In this tutorial, you’ll start out deploying an application locally, swap out buildpacks in the skaffold.", "ogUrl": "https://skaffold.dev/docs/tutorials/developer-journey/", "generator": "Hugo 0.99.1", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "article:modified_time": "2025-01-23T10:14:58-05:00", "twitter:title": "Developer Journey with Buildpacks", "twitter:description": "Skaffold Developer Journey with Buildpacks Tutorial Introduction What is this project? Skaffold allows developers to easily transition from local development on minikube to remote development on an enterprise Kubernetes cluster managed by IT. During the transition from local to remote deployment, a security team might ask a developer to patch a library with a specific vulnerability in it. This is where Skaffold’s support for buildpacks comes in handy. In this tutorial, you’ll start out deploying an application locally, swap out buildpacks in the skaffold.", "description": "Skaffold Developer Journey with Buildpacks Tutorial\nIntroduction\nWhat is this project?\nSkaffold allows developers to easily transition from local …", "article:section": "docs", "og:url": "https://skaffold.dev/docs/tutorials/developer-journey/", "robots": "index, follow", "title": "Developer Journey with Buildpacks | Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:title": "Developer Journey with Buildpacks", "ogDescription": "Skaffold Developer Journey with Buildpacks Tutorial Introduction What is this project? Skaffold allows developers to easily transition from local development on minikube to remote development on an enterprise Kubernetes cluster managed by IT. During the transition from local to remote deployment, a security team might ask a developer to patch a library with a specific vulnerability in it. This is where Skaffold’s support for buildpacks comes in handy. In this tutorial, you’ll start out deploying an application locally, swap out buildpacks in the skaffold.", "scrapeId": "22406a3b-ce5d-4a04-9f08-11c121b0bc85", "sourceURL": "https://skaffold.dev/docs/tutorials/developer-journey", "url": "https://skaffold.dev/docs/tutorials/developer-journey/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I deploy the app to enterprise gke cluster using skaffold in skaffold?\n\nAssistant: To deploy the app to enterprise gke cluster using skaffold in skaffold, here's what you do:\n### Switch kubectl Context to the Enterprise GKE Cluster\n\nSwitch your local kubectl context to the enterprise GKE cluster and get the latest credentials:\n\n```bash\ngcloud container clusters get-credentials $(gcloud config get-value project)-cluster --region us-central1-a\n```\n\nSee that kubectl is now configured to use the remote kubernetes cluster instead of minikube (denoted by the asterisk)\n\n```bash\nkubectl config get-contexts\n```\n\n### Deploy the App\n\nAttempt to deploy the app by running:\n\n```bash\nskaffold dev --default-repo=gcr.io/$(gcloud config get-value project)\n```\n\nSwitch back to **Terminal C** and run the following command to watch until only one pod is running:\n\n```bash\nwatch kubectl get pods\n```\n\nRun the following command. Once an external IP is assigned to the service, record it as **EXTERNAL_IP**:\n\n```bash\nwatch kubectl get service\n```\n\nSee that your app changes are now live on an Internet-accessible IP:\n\n```bash\ncurl http://EXTERNAL_IP:8080\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/tutorials/developer-journey", "title": "Skaffold Developer Journey with Buildpacks Tutorial", "description": "This tutorial guides developers on how to transition from local development on minikube to remote development on an enterprise Kubernetes cluster using Skaffold and buildpacks.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 04:10:48", "type": "section_detail", "page_metadata": {"modifiedTime": "2025-01-23T10:14:58-05:00", "ogSiteName": "Skaffold", "twitter:card": "summary", "og:site_name": "Skaffold", "og:type": "article", "ogTitle": "Developer Journey with Buildpacks", "language": "en", "og:description": "Skaffold Developer Journey with Buildpacks Tutorial Introduction What is this project? Skaffold allows developers to easily transition from local development on minikube to remote development on an enterprise Kubernetes cluster managed by IT. During the transition from local to remote deployment, a security team might ask a developer to patch a library with a specific vulnerability in it. This is where Skaffold’s support for buildpacks comes in handy. In this tutorial, you’ll start out deploying an application locally, swap out buildpacks in the skaffold.", "ogUrl": "https://skaffold.dev/docs/tutorials/developer-journey/", "generator": "Hugo 0.99.1", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "article:modified_time": "2025-01-23T10:14:58-05:00", "twitter:title": "Developer Journey with Buildpacks", "twitter:description": "Skaffold Developer Journey with Buildpacks Tutorial Introduction What is this project? Skaffold allows developers to easily transition from local development on minikube to remote development on an enterprise Kubernetes cluster managed by IT. During the transition from local to remote deployment, a security team might ask a developer to patch a library with a specific vulnerability in it. This is where Skaffold’s support for buildpacks comes in handy. In this tutorial, you’ll start out deploying an application locally, swap out buildpacks in the skaffold.", "description": "Skaffold Developer Journey with Buildpacks Tutorial\nIntroduction\nWhat is this project?\nSkaffold allows developers to easily transition from local …", "article:section": "docs", "og:url": "https://skaffold.dev/docs/tutorials/developer-journey/", "robots": "index, follow", "title": "Developer Journey with Buildpacks | Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:title": "Developer Journey with Buildpacks", "ogDescription": "Skaffold Developer Journey with Buildpacks Tutorial Introduction What is this project? Skaffold allows developers to easily transition from local development on minikube to remote development on an enterprise Kubernetes cluster managed by IT. During the transition from local to remote deployment, a security team might ask a developer to patch a library with a specific vulnerability in it. This is where Skaffold’s support for buildpacks comes in handy. In this tutorial, you’ll start out deploying an application locally, swap out buildpacks in the skaffold.", "scrapeId": "22406a3b-ce5d-4a04-9f08-11c121b0bc85", "sourceURL": "https://skaffold.dev/docs/tutorials/developer-journey", "url": "https://skaffold.dev/docs/tutorials/developer-journey/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I congratulations! in skaffold?\n\nAssistant: To congratulations! in skaffold, here's what you do:\nThat’s the end of the tutorial. You now know how to seamlessly transition between local kubernetes development and remote development on a kubernetes cluster managed by your enterprise IT team. Along the way you learned how to quickly patch your application libraries to comply with security standards.\n\nI hope this tutorial was informative. Good luck on your journey with Skaffold!\n\nLast modified January 23, 2025: [release: v2.14.0 (#9668) (f132ab25)](https://github.com/GoogleContainerTools/skaffold/commit/f132ab25adf1599c7fbdce733144991126565386).\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/tutorials/developer-journey", "title": "Skaffold Developer Journey with Buildpacks Tutorial", "description": "This tutorial guides developers on how to transition from local development on minikube to remote development on an enterprise Kubernetes cluster using Skaffold and buildpacks.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 04:10:48", "type": "section_detail", "page_metadata": {"modifiedTime": "2025-01-23T10:14:58-05:00", "ogSiteName": "Skaffold", "twitter:card": "summary", "og:site_name": "Skaffold", "og:type": "article", "ogTitle": "Developer Journey with Buildpacks", "language": "en", "og:description": "Skaffold Developer Journey with Buildpacks Tutorial Introduction What is this project? Skaffold allows developers to easily transition from local development on minikube to remote development on an enterprise Kubernetes cluster managed by IT. During the transition from local to remote deployment, a security team might ask a developer to patch a library with a specific vulnerability in it. This is where Skaffold’s support for buildpacks comes in handy. In this tutorial, you’ll start out deploying an application locally, swap out buildpacks in the skaffold.", "ogUrl": "https://skaffold.dev/docs/tutorials/developer-journey/", "generator": "Hugo 0.99.1", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "article:modified_time": "2025-01-23T10:14:58-05:00", "twitter:title": "Developer Journey with Buildpacks", "twitter:description": "Skaffold Developer Journey with Buildpacks Tutorial Introduction What is this project? Skaffold allows developers to easily transition from local development on minikube to remote development on an enterprise Kubernetes cluster managed by IT. During the transition from local to remote deployment, a security team might ask a developer to patch a library with a specific vulnerability in it. This is where Skaffold’s support for buildpacks comes in handy. In this tutorial, you’ll start out deploying an application locally, swap out buildpacks in the skaffold.", "description": "Skaffold Developer Journey with Buildpacks Tutorial\nIntroduction\nWhat is this project?\nSkaffold allows developers to easily transition from local …", "article:section": "docs", "og:url": "https://skaffold.dev/docs/tutorials/developer-journey/", "robots": "index, follow", "title": "Developer Journey with Buildpacks | Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:title": "Developer Journey with Buildpacks", "ogDescription": "Skaffold Developer Journey with Buildpacks Tutorial Introduction What is this project? Skaffold allows developers to easily transition from local development on minikube to remote development on an enterprise Kubernetes cluster managed by IT. During the transition from local to remote deployment, a security team might ask a developer to patch a library with a specific vulnerability in it. This is where Skaffold’s support for buildpacks comes in handy. In this tutorial, you’ll start out deploying an application locally, swap out buildpacks in the skaffold.", "scrapeId": "22406a3b-ce5d-4a04-9f08-11c121b0bc85", "sourceURL": "https://skaffold.dev/docs/tutorials/developer-journey", "url": "https://skaffold.dev/docs/tutorials/developer-journey/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you give me some code examples for Skaffold Developer Journey with Buildpacks Tutorial in skaffold?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Set Project**:\n\n```yaml\ngcloud config set project skaffold-tutorial\n```\n\nThis snippet shows you how to set project, which is an important aspect of skaffold developer journey with buildpacks tutorial.\n\n**Run Setup Script**:\n\n```yaml\nchmod +x start.sh && ./start.sh\n```\n\nThis snippet shows you how to run setup script, which is an important aspect of skaffold developer journey with buildpacks tutorial.\n\n**Start Minikube**:\n\n```yaml\nminikube start\n```\n\nThis snippet shows you how to start minikube, which is an important aspect of skaffold developer journey with buildpacks tutorial.\n\n**Deploy the App**:\n\n```yaml\nskaffold dev\n```\n\nThis snippet shows you how to deploy the app, which is an important aspect of skaffold developer journey with buildpacks tutorial.\n\n**Start Minikube Tunnel**:\n\n```yaml\nminikube tunnel\n```\n\nThis snippet shows you how to start minikube tunnel, which is an important aspect of skaffold developer journey with buildpacks tutorial.\n\n**Get Load Balancer IP**:\n\n```yaml\nkubectl get service\n```\n\nThis snippet shows you how to get load balancer ip, which is an important aspect of skaffold developer journey with buildpacks tutorial.\n\n**Check App Response**:\n\n```yaml\ncurl http://EXTERNAL_IP:8080\n```\n\nThis snippet shows you how to check app response, which is an important aspect of skaffold developer journey with buildpacks tutorial.\n\n**Edit HelloController**:\n\n```yaml\nvim src/main/java/hello/HelloController.java\n```\n\nThis snippet shows you how to edit hellocontroller, which is an important aspect of skaffold developer journey with buildpacks tutorial.\n\n**Watch Pods**:\n\n```yaml\nwatch kubectl get pods\n```\n\nThis snippet shows you how to watch pods, which is an important aspect of skaffold developer journey with buildpacks tutorial.\n\n**Edit skaffold.yaml**:\n\n```yaml\nvim skaffold.yaml\n```\n\nThis snippet shows you how to edit skaffold.yaml, which is an important aspect of skaffold developer journey with buildpacks tutorial.\n\n**Get GKE Credentials**:\n\n```yaml\ngcloud container clusters get-credentials $(gcloud config get-value project)-cluster --region us-central1-a\n```\n\nThis snippet shows you how to get gke credentials, which is an important aspect of skaffold developer journey with buildpacks tutorial.\n\n**Get Contexts**:\n\n```yaml\nkubectl config get-contexts\n```\n\nThis snippet shows you how to get contexts, which is an important aspect of skaffold developer journey with buildpacks tutorial.\n\n**Deploy to GKE**:\n\n```yaml\nskaffold dev --default-repo=gcr.io/$(gcloud config get-value project)\n```\n\nThis snippet shows you how to deploy to gke, which is an important aspect of skaffold developer journey with buildpacks tutorial.\n\n", "metadata": {"source_url": "https://skaffold.dev/docs/tutorials/developer-journey", "title": "Skaffold Developer Journey with Buildpacks Tutorial", "description": "This tutorial guides developers on how to transition from local development on minikube to remote development on an enterprise Kubernetes cluster using Skaffold and buildpacks.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 04:10:48", "type": "code_examples", "page_metadata": {"modifiedTime": "2025-01-23T10:14:58-05:00", "ogSiteName": "Skaffold", "twitter:card": "summary", "og:site_name": "Skaffold", "og:type": "article", "ogTitle": "Developer Journey with Buildpacks", "language": "en", "og:description": "Skaffold Developer Journey with Buildpacks Tutorial Introduction What is this project? Skaffold allows developers to easily transition from local development on minikube to remote development on an enterprise Kubernetes cluster managed by IT. During the transition from local to remote deployment, a security team might ask a developer to patch a library with a specific vulnerability in it. This is where Skaffold’s support for buildpacks comes in handy. In this tutorial, you’ll start out deploying an application locally, swap out buildpacks in the skaffold.", "ogUrl": "https://skaffold.dev/docs/tutorials/developer-journey/", "generator": "Hugo 0.99.1", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "article:modified_time": "2025-01-23T10:14:58-05:00", "twitter:title": "Developer Journey with Buildpacks", "twitter:description": "Skaffold Developer Journey with Buildpacks Tutorial Introduction What is this project? Skaffold allows developers to easily transition from local development on minikube to remote development on an enterprise Kubernetes cluster managed by IT. During the transition from local to remote deployment, a security team might ask a developer to patch a library with a specific vulnerability in it. This is where Skaffold’s support for buildpacks comes in handy. In this tutorial, you’ll start out deploying an application locally, swap out buildpacks in the skaffold.", "description": "Skaffold Developer Journey with Buildpacks Tutorial\nIntroduction\nWhat is this project?\nSkaffold allows developers to easily transition from local …", "article:section": "docs", "og:url": "https://skaffold.dev/docs/tutorials/developer-journey/", "robots": "index, follow", "title": "Developer Journey with Buildpacks | Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:title": "Developer Journey with Buildpacks", "ogDescription": "Skaffold Developer Journey with Buildpacks Tutorial Introduction What is this project? Skaffold allows developers to easily transition from local development on minikube to remote development on an enterprise Kubernetes cluster managed by IT. During the transition from local to remote deployment, a security team might ask a developer to patch a library with a specific vulnerability in it. This is where Skaffold’s support for buildpacks comes in handy. In this tutorial, you’ll start out deploying an application locally, swap out buildpacks in the skaffold.", "scrapeId": "22406a3b-ce5d-4a04-9f08-11c121b0bc85", "sourceURL": "https://skaffold.dev/docs/tutorials/developer-journey", "url": "https://skaffold.dev/docs/tutorials/developer-journey/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: What are some tips for using Skaffold Developer Journey with Buildpacks Tutorial in skaffold effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nNote the software versions under the DETECTING phase of the buildpack output as they will be important later.\n\nAnswer 'y' when prompted to enable the GKE and GCE APIs during setup.\n\nUse minikube for local Kubernetes development as it optimizes Kubernetes for local deployments.\n\nRegularly check for updates to buildpacks to ensure security compliance.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://skaffold.dev/docs/tutorials/developer-journey", "title": "Skaffold Developer Journey with Buildpacks Tutorial", "description": "This tutorial guides developers on how to transition from local development on minikube to remote development on an enterprise Kubernetes cluster using Skaffold and buildpacks.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 04:10:48", "type": "best_practices", "page_metadata": {"modifiedTime": "2025-01-23T10:14:58-05:00", "ogSiteName": "Skaffold", "twitter:card": "summary", "og:site_name": "Skaffold", "og:type": "article", "ogTitle": "Developer Journey with Buildpacks", "language": "en", "og:description": "Skaffold Developer Journey with Buildpacks Tutorial Introduction What is this project? Skaffold allows developers to easily transition from local development on minikube to remote development on an enterprise Kubernetes cluster managed by IT. During the transition from local to remote deployment, a security team might ask a developer to patch a library with a specific vulnerability in it. This is where Skaffold’s support for buildpacks comes in handy. In this tutorial, you’ll start out deploying an application locally, swap out buildpacks in the skaffold.", "ogUrl": "https://skaffold.dev/docs/tutorials/developer-journey/", "generator": "Hugo 0.99.1", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "article:modified_time": "2025-01-23T10:14:58-05:00", "twitter:title": "Developer Journey with Buildpacks", "twitter:description": "Skaffold Developer Journey with Buildpacks Tutorial Introduction What is this project? Skaffold allows developers to easily transition from local development on minikube to remote development on an enterprise Kubernetes cluster managed by IT. During the transition from local to remote deployment, a security team might ask a developer to patch a library with a specific vulnerability in it. This is where Skaffold’s support for buildpacks comes in handy. In this tutorial, you’ll start out deploying an application locally, swap out buildpacks in the skaffold.", "description": "Skaffold Developer Journey with Buildpacks Tutorial\nIntroduction\nWhat is this project?\nSkaffold allows developers to easily transition from local …", "article:section": "docs", "og:url": "https://skaffold.dev/docs/tutorials/developer-journey/", "robots": "index, follow", "title": "Developer Journey with Buildpacks | Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:title": "Developer Journey with Buildpacks", "ogDescription": "Skaffold Developer Journey with Buildpacks Tutorial Introduction What is this project? Skaffold allows developers to easily transition from local development on minikube to remote development on an enterprise Kubernetes cluster managed by IT. During the transition from local to remote deployment, a security team might ask a developer to patch a library with a specific vulnerability in it. This is where Skaffold’s support for buildpacks comes in handy. In this tutorial, you’ll start out deploying an application locally, swap out buildpacks in the skaffold.", "scrapeId": "22406a3b-ce5d-4a04-9f08-11c121b0bc85", "sourceURL": "https://skaffold.dev/docs/tutorials/developer-journey", "url": "https://skaffold.dev/docs/tutorials/developer-journey/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what Go integration test coverage profiles is in skaffold?\n\nAssistant: Sure, I'd be happy to explain Go integration test coverage profiles in skaffold.\n\n# Go integration test coverage profiles\n\nThis tutorial describes how to use Skaffold to collect coverage profile data from Go applications when running integration tests.Here's a quick rundown of what this is about:\n\n## Background\n\nGo 1.20 introduced support for collecting coverage profile data from running Go applications. To enable coverage collection, build the binary with the `-cover` flag. The application records coverage profile data in a local directory set by the `GOCOVERDIR` environment variable.\n\nWhen the application runs on Kubernetes, there is an additional challenge of copying the coverage profile data files to permanent storage before the pod terminates.\n\nBy default, the coverage profile data files are written on application exit. This tutorial shows how you can send a signal to write these files without exiting the application, and then copy the files out of the pods.\n\n## Steps\n\nSkaffold orchestrates the steps of:\n\n1. Building binary and the container image, with support for collecting coverage profiles.\n2. Deploying the application to a Kubernetes cluster.\n3. Running the integration tests.\n4. Sending the signal to write coverage profile data files.\n5. Collecting the counter-data files from the application pods.\n\nFor steps 3-5, this tutorial uses Skaffold lifecycle hooks to run these steps automatically.\n\n## The example application\n\nThis tutorial refers to the files in the `go-integration-coverage` example.\n\nYou may find it helpful to refer to these files as you go through this tutorial.\n\n## Sending signals for writing coverage profile data files\n\nBy default, coverage profile data files are only written on application exit, specifically on return from `main.main()` or by calling `os.Exit()`. This is problematic in a Kubernetes pod, as the application exit triggers pod termination.\n\nTo work around this, add a signal handler to the application. This handler writes the coverage profile data files when it receives the configured signal, using the functions in the built-in `coverage` package. It also clears (resets) the counters, which can be useful if you want separate coverage profile reports for different sets of tests.\n\nThe snippet below is a Go function that sets up a signal handler. It uses the `SIGUSR1` signal, but you can use another signal in your application.\n\n## Building the binary and the container image\n\nTo build the container image with support for coverage profile collection, compile the binary with the `-cover` flag, and optionally also the `-covermode` flag.\n\nThe image must contain the `tar` command to enable copying the counter-data files from the pod.\n\nThe following snippet shows how to configure the image build using the Skaffold ko builder:\n\n## Running the integration tests\n\nThe integration tests can be implemented in a number of ways, since they do not run in-process with the application.\n\nFor instance, you can implement them using Go tests, a shell script with a sequence of `curl` commands against an HTTP server, or other integration and end-to-end test frameworks.\n\nUse Skaffold post-deploy hooks to run the tests automatically after deploying the application. These hooks can run either on the host where you run Skaffold, or in the deployed container.\n\n## Copying coverage profile data files\n\nA `host` post-deploy hook runs a shell script that copies the counter-data files from the pods to the host where you run Skaffold:\n\nFirst, the shell script below locates all pods deployed by the Skaffold run using a selector on the `skaffold.dev/run-id` label.\n\nNext, the script iterates over the pods and uses `kubectl exec` to run `tar` in the containers to package up the counter-data files and pipe them to the host. On the other end of the pipe, `tar` extracts the files to a report directory on the host where you run Skaffold.\n\n## Profiles\n\nThe Go binary must be compiled with the `-cover` flag to collect coverage metrics. However, you may not want to use this flag when compiling for production use.\n\nAdditionally, to simplify metrics reporting, you may want to only specify one replica in the Kubernetes Deployment resource.\n\nSkaffold profiles enable different configurations for different contexts.\n\n## Running the steps\n\nTo run the steps, follow the instructions in the README.md.\n\n## References\n\n- [Go: Coverage profiling support for integration tests](https://go.dev/testing/coverage/)\n- [`runtime/coverage` package in the Go standard library](https://pkg.go.dev/runtime/coverage)\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/tutorials/go-integration-coverage", "title": "Go integration test coverage profiles", "description": "This tutorial describes how to use Skaffold to collect coverage profile data from Go applications when running integration tests.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 04:11:04", "type": "overview", "page_metadata": {"og:type": "article", "og:url": "https://skaffold.dev/docs/tutorials/go-integration-coverage/", "ogDescription": "This tutorial describes how to use Skaffold to collect coverage profile data from Go applications when running integration tests. These more comprehensive tests, often called end-to-end tests, are run against a deployed application, typically testing multiple user journeys.\nBackground Go 1.20 introduced support for collecting coverage profile data from running Go applications. To enable coverage collection, build the binary with the -cover flag. The application records coverage profile data in a local directory set by the GOCOVERDIR environment variable.", "twitter:card": "summary", "generator": "Hugo 0.99.1", "ogSiteName": "Skaffold", "twitter:title": "Go integration test coverage profiles", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:description": "This tutorial describes how to use Skaffold to collect coverage profile data from Go applications when running integration tests. These more comprehensive tests, often called end-to-end tests, are run against a deployed application, typically testing multiple user journeys.\nBackground Go 1.20 introduced support for collecting coverage profile data from running Go applications. To enable coverage collection, build the binary with the -cover flag. The application records coverage profile data in a local directory set by the GOCOVERDIR environment variable.", "ogTitle": "Go integration test coverage profiles", "title": "Go integration test coverage profiles | Skaffold", "article:modified_time": "2025-01-23T10:14:58-05:00", "twitter:description": "This tutorial describes how to use Skaffold to collect coverage profile data from Go applications when running integration tests. These more comprehensive tests, often called end-to-end tests, are run against a deployed application, typically testing multiple user journeys.\nBackground Go 1.20 introduced support for collecting coverage profile data from running Go applications. To enable coverage collection, build the binary with the -cover flag. The application records coverage profile data in a local directory set by the GOCOVERDIR environment variable.", "og:site_name": "Skaffold", "article:section": "docs", "robots": "index, follow", "og:title": "Go integration test coverage profiles", "language": "en", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogUrl": "https://skaffold.dev/docs/tutorials/go-integration-coverage/", "description": "This tutorial describes how to use Skaffold to collect\ncoverage profile data\nfrom Go applications when running\nintegration tests.\nThese more …", "modifiedTime": "2025-01-23T10:14:58-05:00", "scrapeId": "23411697-11a8-43c7-8f11-c05bf8f4c900", "sourceURL": "https://skaffold.dev/docs/tutorials/go-integration-coverage", "url": "https://skaffold.dev/docs/tutorials/go-integration-coverage/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I background in skaffold?\n\nAssistant: To background in skaffold, here's what you do:\nGo 1.20 introduced support for collecting coverage profile data from running Go applications. To enable coverage collection, build the binary with the `-cover` flag. The application records coverage profile data in a local directory set by the `GOCOVERDIR` environment variable.\n\nWhen the application runs on Kubernetes, there is an additional challenge of copying the coverage profile data files to permanent storage before the pod terminates.\n\nBy default, the coverage profile data files are written on application exit. This tutorial shows how you can send a signal to write these files without exiting the application, and then copy the files out of the pods..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/tutorials/go-integration-coverage", "title": "Go integration test coverage profiles", "description": "This tutorial describes how to use Skaffold to collect coverage profile data from Go applications when running integration tests.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 04:11:04", "type": "section_detail", "page_metadata": {"og:type": "article", "og:url": "https://skaffold.dev/docs/tutorials/go-integration-coverage/", "ogDescription": "This tutorial describes how to use Skaffold to collect coverage profile data from Go applications when running integration tests. These more comprehensive tests, often called end-to-end tests, are run against a deployed application, typically testing multiple user journeys.\nBackground Go 1.20 introduced support for collecting coverage profile data from running Go applications. To enable coverage collection, build the binary with the -cover flag. The application records coverage profile data in a local directory set by the GOCOVERDIR environment variable.", "twitter:card": "summary", "generator": "Hugo 0.99.1", "ogSiteName": "Skaffold", "twitter:title": "Go integration test coverage profiles", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:description": "This tutorial describes how to use Skaffold to collect coverage profile data from Go applications when running integration tests. These more comprehensive tests, often called end-to-end tests, are run against a deployed application, typically testing multiple user journeys.\nBackground Go 1.20 introduced support for collecting coverage profile data from running Go applications. To enable coverage collection, build the binary with the -cover flag. The application records coverage profile data in a local directory set by the GOCOVERDIR environment variable.", "ogTitle": "Go integration test coverage profiles", "title": "Go integration test coverage profiles | Skaffold", "article:modified_time": "2025-01-23T10:14:58-05:00", "twitter:description": "This tutorial describes how to use Skaffold to collect coverage profile data from Go applications when running integration tests. These more comprehensive tests, often called end-to-end tests, are run against a deployed application, typically testing multiple user journeys.\nBackground Go 1.20 introduced support for collecting coverage profile data from running Go applications. To enable coverage collection, build the binary with the -cover flag. The application records coverage profile data in a local directory set by the GOCOVERDIR environment variable.", "og:site_name": "Skaffold", "article:section": "docs", "robots": "index, follow", "og:title": "Go integration test coverage profiles", "language": "en", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogUrl": "https://skaffold.dev/docs/tutorials/go-integration-coverage/", "description": "This tutorial describes how to use Skaffold to collect\ncoverage profile data\nfrom Go applications when running\nintegration tests.\nThese more …", "modifiedTime": "2025-01-23T10:14:58-05:00", "scrapeId": "23411697-11a8-43c7-8f11-c05bf8f4c900", "sourceURL": "https://skaffold.dev/docs/tutorials/go-integration-coverage", "url": "https://skaffold.dev/docs/tutorials/go-integration-coverage/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I steps in skaffold?\n\nAssistant: To steps in skaffold, here's what you do:\nSkaffold orchestrates the steps of:\n\n1. Building binary and the container image, with support for collecting coverage profiles.\n2. Deploying the application to a Kubernetes cluster.\n3. Running the integration tests.\n4. Sending the signal to write coverage profile data files.\n5. Collecting the counter-data files from the application pods.\n\nFor steps 3-5, this tutorial uses Skaffold lifecycle hooks to run these steps automatically..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/tutorials/go-integration-coverage", "title": "Go integration test coverage profiles", "description": "This tutorial describes how to use Skaffold to collect coverage profile data from Go applications when running integration tests.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 04:11:04", "type": "section_detail", "page_metadata": {"og:type": "article", "og:url": "https://skaffold.dev/docs/tutorials/go-integration-coverage/", "ogDescription": "This tutorial describes how to use Skaffold to collect coverage profile data from Go applications when running integration tests. These more comprehensive tests, often called end-to-end tests, are run against a deployed application, typically testing multiple user journeys.\nBackground Go 1.20 introduced support for collecting coverage profile data from running Go applications. To enable coverage collection, build the binary with the -cover flag. The application records coverage profile data in a local directory set by the GOCOVERDIR environment variable.", "twitter:card": "summary", "generator": "Hugo 0.99.1", "ogSiteName": "Skaffold", "twitter:title": "Go integration test coverage profiles", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:description": "This tutorial describes how to use Skaffold to collect coverage profile data from Go applications when running integration tests. These more comprehensive tests, often called end-to-end tests, are run against a deployed application, typically testing multiple user journeys.\nBackground Go 1.20 introduced support for collecting coverage profile data from running Go applications. To enable coverage collection, build the binary with the -cover flag. The application records coverage profile data in a local directory set by the GOCOVERDIR environment variable.", "ogTitle": "Go integration test coverage profiles", "title": "Go integration test coverage profiles | Skaffold", "article:modified_time": "2025-01-23T10:14:58-05:00", "twitter:description": "This tutorial describes how to use Skaffold to collect coverage profile data from Go applications when running integration tests. These more comprehensive tests, often called end-to-end tests, are run against a deployed application, typically testing multiple user journeys.\nBackground Go 1.20 introduced support for collecting coverage profile data from running Go applications. To enable coverage collection, build the binary with the -cover flag. The application records coverage profile data in a local directory set by the GOCOVERDIR environment variable.", "og:site_name": "Skaffold", "article:section": "docs", "robots": "index, follow", "og:title": "Go integration test coverage profiles", "language": "en", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogUrl": "https://skaffold.dev/docs/tutorials/go-integration-coverage/", "description": "This tutorial describes how to use Skaffold to collect\ncoverage profile data\nfrom Go applications when running\nintegration tests.\nThese more …", "modifiedTime": "2025-01-23T10:14:58-05:00", "scrapeId": "23411697-11a8-43c7-8f11-c05bf8f4c900", "sourceURL": "https://skaffold.dev/docs/tutorials/go-integration-coverage", "url": "https://skaffold.dev/docs/tutorials/go-integration-coverage/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I the example application in skaffold?\n\nAssistant: To the example application in skaffold, here's what you do:\nThis tutorial refers to the files in the `go-integration-coverage` example.\n\nYou may find it helpful to refer to these files as you go through this tutorial..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/tutorials/go-integration-coverage", "title": "Go integration test coverage profiles", "description": "This tutorial describes how to use Skaffold to collect coverage profile data from Go applications when running integration tests.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 04:11:04", "type": "section_detail", "page_metadata": {"og:type": "article", "og:url": "https://skaffold.dev/docs/tutorials/go-integration-coverage/", "ogDescription": "This tutorial describes how to use Skaffold to collect coverage profile data from Go applications when running integration tests. These more comprehensive tests, often called end-to-end tests, are run against a deployed application, typically testing multiple user journeys.\nBackground Go 1.20 introduced support for collecting coverage profile data from running Go applications. To enable coverage collection, build the binary with the -cover flag. The application records coverage profile data in a local directory set by the GOCOVERDIR environment variable.", "twitter:card": "summary", "generator": "Hugo 0.99.1", "ogSiteName": "Skaffold", "twitter:title": "Go integration test coverage profiles", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:description": "This tutorial describes how to use Skaffold to collect coverage profile data from Go applications when running integration tests. These more comprehensive tests, often called end-to-end tests, are run against a deployed application, typically testing multiple user journeys.\nBackground Go 1.20 introduced support for collecting coverage profile data from running Go applications. To enable coverage collection, build the binary with the -cover flag. The application records coverage profile data in a local directory set by the GOCOVERDIR environment variable.", "ogTitle": "Go integration test coverage profiles", "title": "Go integration test coverage profiles | Skaffold", "article:modified_time": "2025-01-23T10:14:58-05:00", "twitter:description": "This tutorial describes how to use Skaffold to collect coverage profile data from Go applications when running integration tests. These more comprehensive tests, often called end-to-end tests, are run against a deployed application, typically testing multiple user journeys.\nBackground Go 1.20 introduced support for collecting coverage profile data from running Go applications. To enable coverage collection, build the binary with the -cover flag. The application records coverage profile data in a local directory set by the GOCOVERDIR environment variable.", "og:site_name": "Skaffold", "article:section": "docs", "robots": "index, follow", "og:title": "Go integration test coverage profiles", "language": "en", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogUrl": "https://skaffold.dev/docs/tutorials/go-integration-coverage/", "description": "This tutorial describes how to use Skaffold to collect\ncoverage profile data\nfrom Go applications when running\nintegration tests.\nThese more …", "modifiedTime": "2025-01-23T10:14:58-05:00", "scrapeId": "23411697-11a8-43c7-8f11-c05bf8f4c900", "sourceURL": "https://skaffold.dev/docs/tutorials/go-integration-coverage", "url": "https://skaffold.dev/docs/tutorials/go-integration-coverage/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I sending signals for writing coverage profile data files in skaffold?\n\nAssistant: To sending signals for writing coverage profile data files in skaffold, here's what you do:\nBy default, coverage profile data files are only written on application exit, specifically on return from `main.main()` or by calling `os.Exit()`. This is problematic in a Kubernetes pod, as the application exit triggers pod termination.\n\nTo work around this, add a signal handler to the application. This handler writes the coverage profile data files when it receives the configured signal, using the functions in the built-in `coverage` package. It also clears (resets) the counters, which can be useful if you want separate coverage profile reports for different sets of tests.\n\nThe snippet below is a Go function that sets up a signal handler. It uses the `SIGUSR1` signal, but you can use another signal in your application..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/tutorials/go-integration-coverage", "title": "Go integration test coverage profiles", "description": "This tutorial describes how to use Skaffold to collect coverage profile data from Go applications when running integration tests.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 04:11:04", "type": "section_detail", "page_metadata": {"og:type": "article", "og:url": "https://skaffold.dev/docs/tutorials/go-integration-coverage/", "ogDescription": "This tutorial describes how to use Skaffold to collect coverage profile data from Go applications when running integration tests. These more comprehensive tests, often called end-to-end tests, are run against a deployed application, typically testing multiple user journeys.\nBackground Go 1.20 introduced support for collecting coverage profile data from running Go applications. To enable coverage collection, build the binary with the -cover flag. The application records coverage profile data in a local directory set by the GOCOVERDIR environment variable.", "twitter:card": "summary", "generator": "Hugo 0.99.1", "ogSiteName": "Skaffold", "twitter:title": "Go integration test coverage profiles", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:description": "This tutorial describes how to use Skaffold to collect coverage profile data from Go applications when running integration tests. These more comprehensive tests, often called end-to-end tests, are run against a deployed application, typically testing multiple user journeys.\nBackground Go 1.20 introduced support for collecting coverage profile data from running Go applications. To enable coverage collection, build the binary with the -cover flag. The application records coverage profile data in a local directory set by the GOCOVERDIR environment variable.", "ogTitle": "Go integration test coverage profiles", "title": "Go integration test coverage profiles | Skaffold", "article:modified_time": "2025-01-23T10:14:58-05:00", "twitter:description": "This tutorial describes how to use Skaffold to collect coverage profile data from Go applications when running integration tests. These more comprehensive tests, often called end-to-end tests, are run against a deployed application, typically testing multiple user journeys.\nBackground Go 1.20 introduced support for collecting coverage profile data from running Go applications. To enable coverage collection, build the binary with the -cover flag. The application records coverage profile data in a local directory set by the GOCOVERDIR environment variable.", "og:site_name": "Skaffold", "article:section": "docs", "robots": "index, follow", "og:title": "Go integration test coverage profiles", "language": "en", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogUrl": "https://skaffold.dev/docs/tutorials/go-integration-coverage/", "description": "This tutorial describes how to use Skaffold to collect\ncoverage profile data\nfrom Go applications when running\nintegration tests.\nThese more …", "modifiedTime": "2025-01-23T10:14:58-05:00", "scrapeId": "23411697-11a8-43c7-8f11-c05bf8f4c900", "sourceURL": "https://skaffold.dev/docs/tutorials/go-integration-coverage", "url": "https://skaffold.dev/docs/tutorials/go-integration-coverage/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I building the binary and the container image in skaffold?\n\nAssistant: To building the binary and the container image in skaffold, here's what you do:\nTo build the container image with support for coverage profile collection, compile the binary with the `-cover` flag, and optionally also the `-covermode` flag.\n\nThe image must contain the `tar` command to enable copying the counter-data files from the pod.\n\nThe following snippet shows how to configure the image build using the Skaffold ko builder:.\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/tutorials/go-integration-coverage", "title": "Go integration test coverage profiles", "description": "This tutorial describes how to use Skaffold to collect coverage profile data from Go applications when running integration tests.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 04:11:04", "type": "section_detail", "page_metadata": {"og:type": "article", "og:url": "https://skaffold.dev/docs/tutorials/go-integration-coverage/", "ogDescription": "This tutorial describes how to use Skaffold to collect coverage profile data from Go applications when running integration tests. These more comprehensive tests, often called end-to-end tests, are run against a deployed application, typically testing multiple user journeys.\nBackground Go 1.20 introduced support for collecting coverage profile data from running Go applications. To enable coverage collection, build the binary with the -cover flag. The application records coverage profile data in a local directory set by the GOCOVERDIR environment variable.", "twitter:card": "summary", "generator": "Hugo 0.99.1", "ogSiteName": "Skaffold", "twitter:title": "Go integration test coverage profiles", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:description": "This tutorial describes how to use Skaffold to collect coverage profile data from Go applications when running integration tests. These more comprehensive tests, often called end-to-end tests, are run against a deployed application, typically testing multiple user journeys.\nBackground Go 1.20 introduced support for collecting coverage profile data from running Go applications. To enable coverage collection, build the binary with the -cover flag. The application records coverage profile data in a local directory set by the GOCOVERDIR environment variable.", "ogTitle": "Go integration test coverage profiles", "title": "Go integration test coverage profiles | Skaffold", "article:modified_time": "2025-01-23T10:14:58-05:00", "twitter:description": "This tutorial describes how to use Skaffold to collect coverage profile data from Go applications when running integration tests. These more comprehensive tests, often called end-to-end tests, are run against a deployed application, typically testing multiple user journeys.\nBackground Go 1.20 introduced support for collecting coverage profile data from running Go applications. To enable coverage collection, build the binary with the -cover flag. The application records coverage profile data in a local directory set by the GOCOVERDIR environment variable.", "og:site_name": "Skaffold", "article:section": "docs", "robots": "index, follow", "og:title": "Go integration test coverage profiles", "language": "en", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogUrl": "https://skaffold.dev/docs/tutorials/go-integration-coverage/", "description": "This tutorial describes how to use Skaffold to collect\ncoverage profile data\nfrom Go applications when running\nintegration tests.\nThese more …", "modifiedTime": "2025-01-23T10:14:58-05:00", "scrapeId": "23411697-11a8-43c7-8f11-c05bf8f4c900", "sourceURL": "https://skaffold.dev/docs/tutorials/go-integration-coverage", "url": "https://skaffold.dev/docs/tutorials/go-integration-coverage/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I running the integration tests in skaffold?\n\nAssistant: To running the integration tests in skaffold, here's what you do:\nThe integration tests can be implemented in a number of ways, since they do not run in-process with the application.\n\nFor instance, you can implement them using Go tests, a shell script with a sequence of `curl` commands against an HTTP server, or other integration and end-to-end test frameworks.\n\nUse Skaffold post-deploy hooks to run the tests automatically after deploying the application. These hooks can run either on the host where you run Skaffold, or in the deployed container..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/tutorials/go-integration-coverage", "title": "Go integration test coverage profiles", "description": "This tutorial describes how to use Skaffold to collect coverage profile data from Go applications when running integration tests.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 04:11:04", "type": "section_detail", "page_metadata": {"og:type": "article", "og:url": "https://skaffold.dev/docs/tutorials/go-integration-coverage/", "ogDescription": "This tutorial describes how to use Skaffold to collect coverage profile data from Go applications when running integration tests. These more comprehensive tests, often called end-to-end tests, are run against a deployed application, typically testing multiple user journeys.\nBackground Go 1.20 introduced support for collecting coverage profile data from running Go applications. To enable coverage collection, build the binary with the -cover flag. The application records coverage profile data in a local directory set by the GOCOVERDIR environment variable.", "twitter:card": "summary", "generator": "Hugo 0.99.1", "ogSiteName": "Skaffold", "twitter:title": "Go integration test coverage profiles", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:description": "This tutorial describes how to use Skaffold to collect coverage profile data from Go applications when running integration tests. These more comprehensive tests, often called end-to-end tests, are run against a deployed application, typically testing multiple user journeys.\nBackground Go 1.20 introduced support for collecting coverage profile data from running Go applications. To enable coverage collection, build the binary with the -cover flag. The application records coverage profile data in a local directory set by the GOCOVERDIR environment variable.", "ogTitle": "Go integration test coverage profiles", "title": "Go integration test coverage profiles | Skaffold", "article:modified_time": "2025-01-23T10:14:58-05:00", "twitter:description": "This tutorial describes how to use Skaffold to collect coverage profile data from Go applications when running integration tests. These more comprehensive tests, often called end-to-end tests, are run against a deployed application, typically testing multiple user journeys.\nBackground Go 1.20 introduced support for collecting coverage profile data from running Go applications. To enable coverage collection, build the binary with the -cover flag. The application records coverage profile data in a local directory set by the GOCOVERDIR environment variable.", "og:site_name": "Skaffold", "article:section": "docs", "robots": "index, follow", "og:title": "Go integration test coverage profiles", "language": "en", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogUrl": "https://skaffold.dev/docs/tutorials/go-integration-coverage/", "description": "This tutorial describes how to use Skaffold to collect\ncoverage profile data\nfrom Go applications when running\nintegration tests.\nThese more …", "modifiedTime": "2025-01-23T10:14:58-05:00", "scrapeId": "23411697-11a8-43c7-8f11-c05bf8f4c900", "sourceURL": "https://skaffold.dev/docs/tutorials/go-integration-coverage", "url": "https://skaffold.dev/docs/tutorials/go-integration-coverage/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I copying coverage profile data files in skaffold?\n\nAssistant: To copying coverage profile data files in skaffold, here's what you do:\nA `host` post-deploy hook runs a shell script that copies the counter-data files from the pods to the host where you run Skaffold:\n\nFirst, the shell script below locates all pods deployed by the Skaffold run using a selector on the `skaffold.dev/run-id` label.\n\nNext, the script iterates over the pods and uses `kubectl exec` to run `tar` in the containers to package up the counter-data files and pipe them to the host. On the other end of the pipe, `tar` extracts the files to a report directory on the host where you run Skaffold..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/tutorials/go-integration-coverage", "title": "Go integration test coverage profiles", "description": "This tutorial describes how to use Skaffold to collect coverage profile data from Go applications when running integration tests.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 04:11:04", "type": "section_detail", "page_metadata": {"og:type": "article", "og:url": "https://skaffold.dev/docs/tutorials/go-integration-coverage/", "ogDescription": "This tutorial describes how to use Skaffold to collect coverage profile data from Go applications when running integration tests. These more comprehensive tests, often called end-to-end tests, are run against a deployed application, typically testing multiple user journeys.\nBackground Go 1.20 introduced support for collecting coverage profile data from running Go applications. To enable coverage collection, build the binary with the -cover flag. The application records coverage profile data in a local directory set by the GOCOVERDIR environment variable.", "twitter:card": "summary", "generator": "Hugo 0.99.1", "ogSiteName": "Skaffold", "twitter:title": "Go integration test coverage profiles", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:description": "This tutorial describes how to use Skaffold to collect coverage profile data from Go applications when running integration tests. These more comprehensive tests, often called end-to-end tests, are run against a deployed application, typically testing multiple user journeys.\nBackground Go 1.20 introduced support for collecting coverage profile data from running Go applications. To enable coverage collection, build the binary with the -cover flag. The application records coverage profile data in a local directory set by the GOCOVERDIR environment variable.", "ogTitle": "Go integration test coverage profiles", "title": "Go integration test coverage profiles | Skaffold", "article:modified_time": "2025-01-23T10:14:58-05:00", "twitter:description": "This tutorial describes how to use Skaffold to collect coverage profile data from Go applications when running integration tests. These more comprehensive tests, often called end-to-end tests, are run against a deployed application, typically testing multiple user journeys.\nBackground Go 1.20 introduced support for collecting coverage profile data from running Go applications. To enable coverage collection, build the binary with the -cover flag. The application records coverage profile data in a local directory set by the GOCOVERDIR environment variable.", "og:site_name": "Skaffold", "article:section": "docs", "robots": "index, follow", "og:title": "Go integration test coverage profiles", "language": "en", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogUrl": "https://skaffold.dev/docs/tutorials/go-integration-coverage/", "description": "This tutorial describes how to use Skaffold to collect\ncoverage profile data\nfrom Go applications when running\nintegration tests.\nThese more …", "modifiedTime": "2025-01-23T10:14:58-05:00", "scrapeId": "23411697-11a8-43c7-8f11-c05bf8f4c900", "sourceURL": "https://skaffold.dev/docs/tutorials/go-integration-coverage", "url": "https://skaffold.dev/docs/tutorials/go-integration-coverage/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I profiles in skaffold?\n\nAssistant: To profiles in skaffold, here's what you do:\nThe Go binary must be compiled with the `-cover` flag to collect coverage metrics. However, you may not want to use this flag when compiling for production use.\n\nAdditionally, to simplify metrics reporting, you may want to only specify one replica in the Kubernetes Deployment resource.\n\nSkaffold profiles enable different configurations for different contexts..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/tutorials/go-integration-coverage", "title": "Go integration test coverage profiles", "description": "This tutorial describes how to use Skaffold to collect coverage profile data from Go applications when running integration tests.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 04:11:04", "type": "section_detail", "page_metadata": {"og:type": "article", "og:url": "https://skaffold.dev/docs/tutorials/go-integration-coverage/", "ogDescription": "This tutorial describes how to use Skaffold to collect coverage profile data from Go applications when running integration tests. These more comprehensive tests, often called end-to-end tests, are run against a deployed application, typically testing multiple user journeys.\nBackground Go 1.20 introduced support for collecting coverage profile data from running Go applications. To enable coverage collection, build the binary with the -cover flag. The application records coverage profile data in a local directory set by the GOCOVERDIR environment variable.", "twitter:card": "summary", "generator": "Hugo 0.99.1", "ogSiteName": "Skaffold", "twitter:title": "Go integration test coverage profiles", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:description": "This tutorial describes how to use Skaffold to collect coverage profile data from Go applications when running integration tests. These more comprehensive tests, often called end-to-end tests, are run against a deployed application, typically testing multiple user journeys.\nBackground Go 1.20 introduced support for collecting coverage profile data from running Go applications. To enable coverage collection, build the binary with the -cover flag. The application records coverage profile data in a local directory set by the GOCOVERDIR environment variable.", "ogTitle": "Go integration test coverage profiles", "title": "Go integration test coverage profiles | Skaffold", "article:modified_time": "2025-01-23T10:14:58-05:00", "twitter:description": "This tutorial describes how to use Skaffold to collect coverage profile data from Go applications when running integration tests. These more comprehensive tests, often called end-to-end tests, are run against a deployed application, typically testing multiple user journeys.\nBackground Go 1.20 introduced support for collecting coverage profile data from running Go applications. To enable coverage collection, build the binary with the -cover flag. The application records coverage profile data in a local directory set by the GOCOVERDIR environment variable.", "og:site_name": "Skaffold", "article:section": "docs", "robots": "index, follow", "og:title": "Go integration test coverage profiles", "language": "en", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogUrl": "https://skaffold.dev/docs/tutorials/go-integration-coverage/", "description": "This tutorial describes how to use Skaffold to collect\ncoverage profile data\nfrom Go applications when running\nintegration tests.\nThese more …", "modifiedTime": "2025-01-23T10:14:58-05:00", "scrapeId": "23411697-11a8-43c7-8f11-c05bf8f4c900", "sourceURL": "https://skaffold.dev/docs/tutorials/go-integration-coverage", "url": "https://skaffold.dev/docs/tutorials/go-integration-coverage/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I running the steps in skaffold?\n\nAssistant: To running the steps in skaffold, here's what you do:\nTo run the steps, follow the instructions in the README.md..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/tutorials/go-integration-coverage", "title": "Go integration test coverage profiles", "description": "This tutorial describes how to use Skaffold to collect coverage profile data from Go applications when running integration tests.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 04:11:04", "type": "section_detail", "page_metadata": {"og:type": "article", "og:url": "https://skaffold.dev/docs/tutorials/go-integration-coverage/", "ogDescription": "This tutorial describes how to use Skaffold to collect coverage profile data from Go applications when running integration tests. These more comprehensive tests, often called end-to-end tests, are run against a deployed application, typically testing multiple user journeys.\nBackground Go 1.20 introduced support for collecting coverage profile data from running Go applications. To enable coverage collection, build the binary with the -cover flag. The application records coverage profile data in a local directory set by the GOCOVERDIR environment variable.", "twitter:card": "summary", "generator": "Hugo 0.99.1", "ogSiteName": "Skaffold", "twitter:title": "Go integration test coverage profiles", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:description": "This tutorial describes how to use Skaffold to collect coverage profile data from Go applications when running integration tests. These more comprehensive tests, often called end-to-end tests, are run against a deployed application, typically testing multiple user journeys.\nBackground Go 1.20 introduced support for collecting coverage profile data from running Go applications. To enable coverage collection, build the binary with the -cover flag. The application records coverage profile data in a local directory set by the GOCOVERDIR environment variable.", "ogTitle": "Go integration test coverage profiles", "title": "Go integration test coverage profiles | Skaffold", "article:modified_time": "2025-01-23T10:14:58-05:00", "twitter:description": "This tutorial describes how to use Skaffold to collect coverage profile data from Go applications when running integration tests. These more comprehensive tests, often called end-to-end tests, are run against a deployed application, typically testing multiple user journeys.\nBackground Go 1.20 introduced support for collecting coverage profile data from running Go applications. To enable coverage collection, build the binary with the -cover flag. The application records coverage profile data in a local directory set by the GOCOVERDIR environment variable.", "og:site_name": "Skaffold", "article:section": "docs", "robots": "index, follow", "og:title": "Go integration test coverage profiles", "language": "en", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogUrl": "https://skaffold.dev/docs/tutorials/go-integration-coverage/", "description": "This tutorial describes how to use Skaffold to collect\ncoverage profile data\nfrom Go applications when running\nintegration tests.\nThese more …", "modifiedTime": "2025-01-23T10:14:58-05:00", "scrapeId": "23411697-11a8-43c7-8f11-c05bf8f4c900", "sourceURL": "https://skaffold.dev/docs/tutorials/go-integration-coverage", "url": "https://skaffold.dev/docs/tutorials/go-integration-coverage/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I references in skaffold?\n\nAssistant: To references in skaffold, here's what you do:\n- [Go: Coverage profiling support for integration tests](https://go.dev/testing/coverage/)\n- [`runtime/coverage` package in the Go standard library](https://pkg.go.dev/runtime/coverage).\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/tutorials/go-integration-coverage", "title": "Go integration test coverage profiles", "description": "This tutorial describes how to use Skaffold to collect coverage profile data from Go applications when running integration tests.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 04:11:04", "type": "section_detail", "page_metadata": {"og:type": "article", "og:url": "https://skaffold.dev/docs/tutorials/go-integration-coverage/", "ogDescription": "This tutorial describes how to use Skaffold to collect coverage profile data from Go applications when running integration tests. These more comprehensive tests, often called end-to-end tests, are run against a deployed application, typically testing multiple user journeys.\nBackground Go 1.20 introduced support for collecting coverage profile data from running Go applications. To enable coverage collection, build the binary with the -cover flag. The application records coverage profile data in a local directory set by the GOCOVERDIR environment variable.", "twitter:card": "summary", "generator": "Hugo 0.99.1", "ogSiteName": "Skaffold", "twitter:title": "Go integration test coverage profiles", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:description": "This tutorial describes how to use Skaffold to collect coverage profile data from Go applications when running integration tests. These more comprehensive tests, often called end-to-end tests, are run against a deployed application, typically testing multiple user journeys.\nBackground Go 1.20 introduced support for collecting coverage profile data from running Go applications. To enable coverage collection, build the binary with the -cover flag. The application records coverage profile data in a local directory set by the GOCOVERDIR environment variable.", "ogTitle": "Go integration test coverage profiles", "title": "Go integration test coverage profiles | Skaffold", "article:modified_time": "2025-01-23T10:14:58-05:00", "twitter:description": "This tutorial describes how to use Skaffold to collect coverage profile data from Go applications when running integration tests. These more comprehensive tests, often called end-to-end tests, are run against a deployed application, typically testing multiple user journeys.\nBackground Go 1.20 introduced support for collecting coverage profile data from running Go applications. To enable coverage collection, build the binary with the -cover flag. The application records coverage profile data in a local directory set by the GOCOVERDIR environment variable.", "og:site_name": "Skaffold", "article:section": "docs", "robots": "index, follow", "og:title": "Go integration test coverage profiles", "language": "en", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogUrl": "https://skaffold.dev/docs/tutorials/go-integration-coverage/", "description": "This tutorial describes how to use Skaffold to collect\ncoverage profile data\nfrom Go applications when running\nintegration tests.\nThese more …", "modifiedTime": "2025-01-23T10:14:58-05:00", "scrapeId": "23411697-11a8-43c7-8f11-c05bf8f4c900", "sourceURL": "https://skaffold.dev/docs/tutorials/go-integration-coverage", "url": "https://skaffold.dev/docs/tutorials/go-integration-coverage/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you give me some code examples for Go integration test coverage profiles in skaffold?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**SetupCoverageSignalHandler**:\n\n```yaml\n// Note: This snippet omits error handling for brevity.\nfunc SetupCoverageSignalHandler() {\n\tcoverDir, exists := os.LookupEnv(\"GOCOVERDIR\")\n\tif !exists {\n\t\treturn\n\t}\n\tc := make(chan os.Signal)\n\tsignal.Notify(c, syscall.SIGUSR1)\n\tgo func() {\n\t\tfor {\n\t\t\t<-c\n\t\t\tcoverage.WriteCountersDir(coverDir)\n\t\t\tcoverage.ClearCounters() // only works with -covermode=atomic\n\t\t}\n\t}()\n}\n```\n\nThis snippet shows you how to setupcoveragesignalhandler, which is an important aspect of go integration test coverage profiles.\n\n", "metadata": {"source_url": "https://skaffold.dev/docs/tutorials/go-integration-coverage", "title": "Go integration test coverage profiles", "description": "This tutorial describes how to use Skaffold to collect coverage profile data from Go applications when running integration tests.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 04:11:04", "type": "code_examples", "page_metadata": {"og:type": "article", "og:url": "https://skaffold.dev/docs/tutorials/go-integration-coverage/", "ogDescription": "This tutorial describes how to use Skaffold to collect coverage profile data from Go applications when running integration tests. These more comprehensive tests, often called end-to-end tests, are run against a deployed application, typically testing multiple user journeys.\nBackground Go 1.20 introduced support for collecting coverage profile data from running Go applications. To enable coverage collection, build the binary with the -cover flag. The application records coverage profile data in a local directory set by the GOCOVERDIR environment variable.", "twitter:card": "summary", "generator": "Hugo 0.99.1", "ogSiteName": "Skaffold", "twitter:title": "Go integration test coverage profiles", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:description": "This tutorial describes how to use Skaffold to collect coverage profile data from Go applications when running integration tests. These more comprehensive tests, often called end-to-end tests, are run against a deployed application, typically testing multiple user journeys.\nBackground Go 1.20 introduced support for collecting coverage profile data from running Go applications. To enable coverage collection, build the binary with the -cover flag. The application records coverage profile data in a local directory set by the GOCOVERDIR environment variable.", "ogTitle": "Go integration test coverage profiles", "title": "Go integration test coverage profiles | Skaffold", "article:modified_time": "2025-01-23T10:14:58-05:00", "twitter:description": "This tutorial describes how to use Skaffold to collect coverage profile data from Go applications when running integration tests. These more comprehensive tests, often called end-to-end tests, are run against a deployed application, typically testing multiple user journeys.\nBackground Go 1.20 introduced support for collecting coverage profile data from running Go applications. To enable coverage collection, build the binary with the -cover flag. The application records coverage profile data in a local directory set by the GOCOVERDIR environment variable.", "og:site_name": "Skaffold", "article:section": "docs", "robots": "index, follow", "og:title": "Go integration test coverage profiles", "language": "en", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogUrl": "https://skaffold.dev/docs/tutorials/go-integration-coverage/", "description": "This tutorial describes how to use Skaffold to collect\ncoverage profile data\nfrom Go applications when running\nintegration tests.\nThese more …", "modifiedTime": "2025-01-23T10:14:58-05:00", "scrapeId": "23411697-11a8-43c7-8f11-c05bf8f4c900", "sourceURL": "https://skaffold.dev/docs/tutorials/go-integration-coverage", "url": "https://skaffold.dev/docs/tutorials/go-integration-coverage/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: What are some tips for using Go integration test coverage profiles in skaffold effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nThe `GOCOVERDIR` environment variable must be set to enable coverage profile data collection.\n\nUse Skaffold lifecycle hooks to automate the process of running integration tests and collecting coverage data.\n\nEnsure the container image includes the `tar` command for copying coverage data files.\n\nConsider using Skaffold profiles to manage different configurations for development and production environments.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://skaffold.dev/docs/tutorials/go-integration-coverage", "title": "Go integration test coverage profiles", "description": "This tutorial describes how to use Skaffold to collect coverage profile data from Go applications when running integration tests.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 04:11:04", "type": "best_practices", "page_metadata": {"og:type": "article", "og:url": "https://skaffold.dev/docs/tutorials/go-integration-coverage/", "ogDescription": "This tutorial describes how to use Skaffold to collect coverage profile data from Go applications when running integration tests. These more comprehensive tests, often called end-to-end tests, are run against a deployed application, typically testing multiple user journeys.\nBackground Go 1.20 introduced support for collecting coverage profile data from running Go applications. To enable coverage collection, build the binary with the -cover flag. The application records coverage profile data in a local directory set by the GOCOVERDIR environment variable.", "twitter:card": "summary", "generator": "Hugo 0.99.1", "ogSiteName": "Skaffold", "twitter:title": "Go integration test coverage profiles", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:description": "This tutorial describes how to use Skaffold to collect coverage profile data from Go applications when running integration tests. These more comprehensive tests, often called end-to-end tests, are run against a deployed application, typically testing multiple user journeys.\nBackground Go 1.20 introduced support for collecting coverage profile data from running Go applications. To enable coverage collection, build the binary with the -cover flag. The application records coverage profile data in a local directory set by the GOCOVERDIR environment variable.", "ogTitle": "Go integration test coverage profiles", "title": "Go integration test coverage profiles | Skaffold", "article:modified_time": "2025-01-23T10:14:58-05:00", "twitter:description": "This tutorial describes how to use Skaffold to collect coverage profile data from Go applications when running integration tests. These more comprehensive tests, often called end-to-end tests, are run against a deployed application, typically testing multiple user journeys.\nBackground Go 1.20 introduced support for collecting coverage profile data from running Go applications. To enable coverage collection, build the binary with the -cover flag. The application records coverage profile data in a local directory set by the GOCOVERDIR environment variable.", "og:site_name": "Skaffold", "article:section": "docs", "robots": "index, follow", "og:title": "Go integration test coverage profiles", "language": "en", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogUrl": "https://skaffold.dev/docs/tutorials/go-integration-coverage/", "description": "This tutorial describes how to use Skaffold to collect\ncoverage profile data\nfrom Go applications when running\nintegration tests.\nThese more …", "modifiedTime": "2025-01-23T10:14:58-05:00", "scrapeId": "23411697-11a8-43c7-8f11-c05bf8f4c900", "sourceURL": "https://skaffold.dev/docs/tutorials/go-integration-coverage", "url": "https://skaffold.dev/docs/tutorials/go-integration-coverage/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what Override the run image in buildpacks builder is in skaffold?\n\nAssistant: Sure, I'd be happy to explain Override the run image in buildpacks builder in skaffold.\n\n# Override the run image in buildpacks builder\n\nThis is a link to a guided Cloud Shell tutorial using skaffold’s `artifact dependency` feature to override the run image in the buildpacks builder.", "metadata": {"source_url": "https://skaffold.dev/docs/tutorials/buildpacks-override", "title": "Override the run image in buildpacks builder", "description": "This is a link to a guided Cloud Shell tutorial using skaffold’s `artifact dependency` feature to override the run image in the buildpacks builder.", "has_code_examples": false, "has_best_practices": false, "section_count": 0, "timestamp": "2025-03-01 04:11:18", "type": "overview", "page_metadata": {"ogTitle": "Override the run image in buildpacks builder", "description": "This is a link to a guided Cloud Shell tutorial using skaffold’s artifact dependency feature to override the run image in the buildpacks builder …", "twitter:title": "Override the run image in buildpacks builder", "og:description": "This is a link to a guided Cloud Shell tutorial using skaffold’s artifact dependency feature to override the run image in the buildpacks builder:", "ogSiteName": "Skaffold", "ogUrl": "https://skaffold.dev/docs/tutorials/buildpacks-override/", "language": "en", "twitter:description": "This is a link to a guided Cloud Shell tutorial using skaffold’s artifact dependency feature to override the run image in the buildpacks builder:", "og:type": "article", "ogDescription": "This is a link to a guided Cloud Shell tutorial using skaffold’s artifact dependency feature to override the run image in the buildpacks builder:", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "modifiedTime": "2025-01-23T10:14:58-05:00", "og:site_name": "Skaffold", "title": "Override the run image in buildpacks builder | Skaffold", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "twitter:card": "summary", "og:url": "https://skaffold.dev/docs/tutorials/buildpacks-override/", "article:modified_time": "2025-01-23T10:14:58-05:00", "generator": "Hugo 0.99.1", "robots": "index, follow", "article:section": "docs", "og:title": "Override the run image in buildpacks builder", "scrapeId": "e40c4fb7-3ac5-474a-99d3-bde8efc14a70", "sourceURL": "https://skaffold.dev/docs/tutorials/buildpacks-override", "url": "https://skaffold.dev/docs/tutorials/buildpacks-override/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what References is in skaffold?\n\nAssistant: Sure, I'd be happy to explain References in skaffold.\n\n# References\n\nA collection of references related to Skaffold, including CLI, configuration files, APIs, and policies.Here's a quick rundown of what this is about:\n\n## Skaffold References\n\nA list of useful links for Skaffold documentation.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/references", "title": "References", "description": "A collection of references related to Skaffold, including CLI, configuration files, APIs, and policies.", "has_code_examples": false, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 04:11:46", "type": "overview", "page_metadata": {"og:url": "https://skaffold.dev/docs/references/", "twitter:card": "summary", "language": "en", "ogUrl": "https://skaffold.dev/docs/references/", "ogTitle": "References", "ogSiteName": "Skaffold", "og:description": "Easy and Repeatable Container & Kubernetes Development", "og:title": "References", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "og:site_name": "Skaffold", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "generator": "Hugo 0.99.1", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "robots": "index, follow", "twitter:title": "References", "description": "\n\n\nSkaffold References\n\n\n\n\nCLI\n\n\nskaffold.yaml\n\n\ngRPC API\n\n\nHTTP API\n\n\nPrivacy Settings\n\n\nDeprecation Policy\n\n\n\n", "title": "References | Skaffold", "og:type": "website", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "scrapeId": "cf193602-9e49-48e3-ae8b-1204f03cbb53", "sourceURL": "https://skaffold.dev/docs/references", "url": "https://skaffold.dev/docs/references/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I skaffold references in skaffold?\n\nAssistant: To skaffold references in skaffold, here's what you do:\nA list of useful links for Skaffold documentation..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references", "title": "References", "description": "A collection of references related to Skaffold, including CLI, configuration files, APIs, and policies.", "has_code_examples": false, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 04:11:46", "type": "section_detail", "page_metadata": {"og:url": "https://skaffold.dev/docs/references/", "twitter:card": "summary", "language": "en", "ogUrl": "https://skaffold.dev/docs/references/", "ogTitle": "References", "ogSiteName": "Skaffold", "og:description": "Easy and Repeatable Container & Kubernetes Development", "og:title": "References", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "og:site_name": "Skaffold", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "generator": "Hugo 0.99.1", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "robots": "index, follow", "twitter:title": "References", "description": "\n\n\nSkaffold References\n\n\n\n\nCLI\n\n\nskaffold.yaml\n\n\ngRPC API\n\n\nHTTP API\n\n\nPrivacy Settings\n\n\nDeprecation Policy\n\n\n\n", "title": "References | Skaffold", "og:type": "website", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "scrapeId": "cf193602-9e49-48e3-ae8b-1204f03cbb53", "sourceURL": "https://skaffold.dev/docs/references", "url": "https://skaffold.dev/docs/references/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: What are some tips for using References in skaffold effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nCheck the CLI documentation for command usage.\n\nRefer to the skaffold.yaml documentation for configuration details.\n\nExplore the gRPC and HTTP API references for programmatic access.\n\nReview privacy settings to understand data handling.\n\nConsult the deprecation policy for information on deprecated features.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://skaffold.dev/docs/references", "title": "References", "description": "A collection of references related to Skaffold, including CLI, configuration files, APIs, and policies.", "has_code_examples": false, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 04:11:46", "type": "best_practices", "page_metadata": {"og:url": "https://skaffold.dev/docs/references/", "twitter:card": "summary", "language": "en", "ogUrl": "https://skaffold.dev/docs/references/", "ogTitle": "References", "ogSiteName": "Skaffold", "og:description": "Easy and Repeatable Container & Kubernetes Development", "og:title": "References", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "og:site_name": "Skaffold", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "generator": "Hugo 0.99.1", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "robots": "index, follow", "twitter:title": "References", "description": "\n\n\nSkaffold References\n\n\n\n\nCLI\n\n\nskaffold.yaml\n\n\ngRPC API\n\n\nHTTP API\n\n\nPrivacy Settings\n\n\nDeprecation Policy\n\n\n\n", "title": "References | Skaffold", "og:type": "website", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "scrapeId": "cf193602-9e49-48e3-ae8b-1204f03cbb53", "sourceURL": "https://skaffold.dev/docs/references", "url": "https://skaffold.dev/docs/references/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what Resources is in skaffold?\n\nAssistant: Sure, I'd be happy to explain Resources in skaffold.\n\n# Resources\n\nA collection of resources for the Skaffold community, including community links, contributing guidelines, release notes, and roadmap information.Here's a quick rundown of what this is about:\n\n## Community\n\nJoin the Skaffold community and discuss the project at:\n\n- StackOverflow using the [`skaffold` tag](https://stackoverflow.com/questions/tagged/skaffold)\n- The [Skaffold Mailing List](https://groups.google.com/forum#!forum/skaffold-users)\n- The [#Skaffold channel](https://kubernetes.slack.com/messages/CABQMSZA6/) on the Kubernetes Slack\n(sign up at [slack.k8s.io](https://slack.k8s.io/))\n- [Give us feedback](https://skaffold.dev/docs/resources/feedback)!\n\nThe Skaffold Project also holds a monthly meeting on the last\nWednesday of the month at 9:30am PST on [Google Meet](https://meet.google.com/tje-kwpx-ixv)!\nEveryone is welcome to attend! You will receive a calendar invite when you join the [Skaffold Mailing List](https://groups.google.com/forum#!forum/skaffold-users).\n\n## Contributing\n\nSee [Contributing Guide](https://github.com/GoogleContainerTools/skaffold/blob/main/CONTRIBUTING.md),\n[Developing Guide](https://github.com/GoogleContainerTools/skaffold/blob/main/DEVELOPMENT.md),\nand our [Code of Conduct](https://github.com/GoogleContainerTools/skaffold/blob/main/code-of-conduct.md)\non GitHub.\n\n## Release Notes\n\nSee [Release Notes](https://github.com/GoogleContainerTools/skaffold/blob/main/CHANGELOG.md) on Github.\n\n## Roadmap\n\nSee our roadmap [in GitHub](https://github.com/GoogleContainerTools/skaffold/blob/main/ROADMAP.md).\n\nLast modified January 23, 2025: [release: v2.14.0 (#9668) (f132ab25)](https://github.com/GoogleContainerTools/skaffold/commit/f132ab25adf1599c7fbdce733144991126565386)\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/resources", "title": "Resources", "description": "A collection of resources for the Skaffold community, including community links, contributing guidelines, release notes, and roadmap information.", "has_code_examples": false, "has_best_practices": false, "section_count": 4, "timestamp": "2025-03-01 04:16:16", "type": "overview", "page_metadata": {"twitter:description": "Easy and Repeatable Container & Kubernetes Development", "twitter:title": "Resources", "og:type": "website", "ogUrl": "https://skaffold.dev/docs/resources/", "og:url": "https://skaffold.dev/docs/resources/", "ogTitle": "Resources", "ogSiteName": "Skaffold", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "language": "en", "og:title": "Resources", "title": "Resources | Skaffold", "og:site_name": "Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "description": "Community\nJoin the Skaffold community and discuss the project at:\n\nStackOverflow using the skaffold tag\nThe Skaffold Mailing List\nThe #Skaffold …", "generator": "Hugo 0.99.1", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "robots": "index, follow", "og:description": "Easy and Repeatable Container & Kubernetes Development", "twitter:card": "summary", "scrapeId": "75a7eede-5990-40b2-bf46-1280a094fac8", "sourceURL": "https://skaffold.dev/docs/resources", "url": "https://skaffold.dev/docs/resources/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I community in skaffold?\n\nAssistant: To community in skaffold, here's what you do:\nJoin the Skaffold community and discuss the project at:\n\n- StackOverflow using the [`skaffold` tag](https://stackoverflow.com/questions/tagged/skaffold)\n- The [Skaffold Mailing List](https://groups.google.com/forum#!forum/skaffold-users)\n- The [#Skaffold channel](https://kubernetes.slack.com/messages/CABQMSZA6/) on the Kubernetes Slack\n(sign up at [slack.k8s.io](https://slack.k8s.io/))\n- [Give us feedback](https://skaffold.dev/docs/resources/feedback)!\n\nThe Skaffold Project also holds a monthly meeting on the last\nWednesday of the month at 9:30am PST on [Google Meet](https://meet.google.com/tje-kwpx-ixv)!\nEveryone is welcome to attend! You will receive a calendar invite when you join the [Skaffold Mailing List](https://groups.google.com/forum#!forum/skaffold-users)..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/resources", "title": "Resources", "description": "A collection of resources for the Skaffold community, including community links, contributing guidelines, release notes, and roadmap information.", "has_code_examples": false, "has_best_practices": false, "section_count": 4, "timestamp": "2025-03-01 04:16:16", "type": "section_detail", "page_metadata": {"twitter:description": "Easy and Repeatable Container & Kubernetes Development", "twitter:title": "Resources", "og:type": "website", "ogUrl": "https://skaffold.dev/docs/resources/", "og:url": "https://skaffold.dev/docs/resources/", "ogTitle": "Resources", "ogSiteName": "Skaffold", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "language": "en", "og:title": "Resources", "title": "Resources | Skaffold", "og:site_name": "Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "description": "Community\nJoin the Skaffold community and discuss the project at:\n\nStackOverflow using the skaffold tag\nThe Skaffold Mailing List\nThe #Skaffold …", "generator": "Hugo 0.99.1", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "robots": "index, follow", "og:description": "Easy and Repeatable Container & Kubernetes Development", "twitter:card": "summary", "scrapeId": "75a7eede-5990-40b2-bf46-1280a094fac8", "sourceURL": "https://skaffold.dev/docs/resources", "url": "https://skaffold.dev/docs/resources/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I contributing in skaffold?\n\nAssistant: To contributing in skaffold, here's what you do:\nSee [Contributing Guide](https://github.com/GoogleContainerTools/skaffold/blob/main/CONTRIBUTING.md),\n[Developing Guide](https://github.com/GoogleContainerTools/skaffold/blob/main/DEVELOPMENT.md),\nand our [Code of Conduct](https://github.com/GoogleContainerTools/skaffold/blob/main/code-of-conduct.md)\non GitHub..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/resources", "title": "Resources", "description": "A collection of resources for the Skaffold community, including community links, contributing guidelines, release notes, and roadmap information.", "has_code_examples": false, "has_best_practices": false, "section_count": 4, "timestamp": "2025-03-01 04:16:16", "type": "section_detail", "page_metadata": {"twitter:description": "Easy and Repeatable Container & Kubernetes Development", "twitter:title": "Resources", "og:type": "website", "ogUrl": "https://skaffold.dev/docs/resources/", "og:url": "https://skaffold.dev/docs/resources/", "ogTitle": "Resources", "ogSiteName": "Skaffold", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "language": "en", "og:title": "Resources", "title": "Resources | Skaffold", "og:site_name": "Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "description": "Community\nJoin the Skaffold community and discuss the project at:\n\nStackOverflow using the skaffold tag\nThe Skaffold Mailing List\nThe #Skaffold …", "generator": "Hugo 0.99.1", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "robots": "index, follow", "og:description": "Easy and Repeatable Container & Kubernetes Development", "twitter:card": "summary", "scrapeId": "75a7eede-5990-40b2-bf46-1280a094fac8", "sourceURL": "https://skaffold.dev/docs/resources", "url": "https://skaffold.dev/docs/resources/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I release notes in skaffold?\n\nAssistant: To release notes in skaffold, here's what you do:\nSee [Release Notes](https://github.com/GoogleContainerTools/skaffold/blob/main/CHANGELOG.md) on Github..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/resources", "title": "Resources", "description": "A collection of resources for the Skaffold community, including community links, contributing guidelines, release notes, and roadmap information.", "has_code_examples": false, "has_best_practices": false, "section_count": 4, "timestamp": "2025-03-01 04:16:16", "type": "section_detail", "page_metadata": {"twitter:description": "Easy and Repeatable Container & Kubernetes Development", "twitter:title": "Resources", "og:type": "website", "ogUrl": "https://skaffold.dev/docs/resources/", "og:url": "https://skaffold.dev/docs/resources/", "ogTitle": "Resources", "ogSiteName": "Skaffold", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "language": "en", "og:title": "Resources", "title": "Resources | Skaffold", "og:site_name": "Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "description": "Community\nJoin the Skaffold community and discuss the project at:\n\nStackOverflow using the skaffold tag\nThe Skaffold Mailing List\nThe #Skaffold …", "generator": "Hugo 0.99.1", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "robots": "index, follow", "og:description": "Easy and Repeatable Container & Kubernetes Development", "twitter:card": "summary", "scrapeId": "75a7eede-5990-40b2-bf46-1280a094fac8", "sourceURL": "https://skaffold.dev/docs/resources", "url": "https://skaffold.dev/docs/resources/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I roadmap in skaffold?\n\nAssistant: To roadmap in skaffold, here's what you do:\nSee our roadmap [in GitHub](https://github.com/GoogleContainerTools/skaffold/blob/main/ROADMAP.md).\n\nLast modified January 23, 2025: [release: v2.14.0 (#9668) (f132ab25)](https://github.com/GoogleContainerTools/skaffold/commit/f132ab25adf1599c7fbdce733144991126565386).\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/resources", "title": "Resources", "description": "A collection of resources for the Skaffold community, including community links, contributing guidelines, release notes, and roadmap information.", "has_code_examples": false, "has_best_practices": false, "section_count": 4, "timestamp": "2025-03-01 04:16:16", "type": "section_detail", "page_metadata": {"twitter:description": "Easy and Repeatable Container & Kubernetes Development", "twitter:title": "Resources", "og:type": "website", "ogUrl": "https://skaffold.dev/docs/resources/", "og:url": "https://skaffold.dev/docs/resources/", "ogTitle": "Resources", "ogSiteName": "Skaffold", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "language": "en", "og:title": "Resources", "title": "Resources | Skaffold", "og:site_name": "Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "description": "Community\nJoin the Skaffold community and discuss the project at:\n\nStackOverflow using the skaffold tag\nThe Skaffold Mailing List\nThe #Skaffold …", "generator": "Hugo 0.99.1", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "robots": "index, follow", "og:description": "Easy and Repeatable Container & Kubernetes Development", "twitter:card": "summary", "scrapeId": "75a7eede-5990-40b2-bf46-1280a094fac8", "sourceURL": "https://skaffold.dev/docs/resources", "url": "https://skaffold.dev/docs/resources/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what Skaffold Feedback is in skaffold?\n\nAssistant: Sure, I'd be happy to explain Skaffold Feedback in skaffold.\n\n# Skaffold Feedback\n\nYour feedback is very important to us, and a critical part of making Skaffold the best it can be! There are a few easy ways to make your voice heard.Here's a quick rundown of what this is about:\n\n## Quick Survey\n\nTake our [quick 5-question survey](https://forms.gle/BMTbGQXLWSdn7vEs6) to tell us how satisfied you are with Skaffold, and what improvements you think we should make.\n\n## Skaffold Feedback Session\n\nThe Skaffold team actively incorporates user feedback into the product as it evolves. We’re always looking to have conversations with developers like you to learn about the different ways you use Skaffold, and what improvements you think we can make to better suit your workflow.\n\n**What is a feedback session?**\n\nWe periodically schedule hour long video conference sessions with both individual developers and teams to get more personalized feedback. If you’re interested in talking with us, fill out our [feedback form](https://forms.gle/J5h567ncypY2ziq49), and we’ll schedule a session at a time convenient for you. No preparation is needed!\n\n## Note\n\nProviding your information does not guarantee that we will contact you.\n\nIf at any time you wish to opt out of communications from the Skaffold team, you can fill out our [opt out form](https://forms.gle/cnfCXotenyUtF92w6).\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/resources/feedback", "title": "Skaffold Feedback", "description": "Your feedback is very important to us, and a critical part of making Skaffold the best it can be! There are a few easy ways to make your voice heard.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:16:34", "type": "overview", "page_metadata": {"twitter:card": "summary", "ogUrl": "https://skaffold.dev/docs/resources/feedback/", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "generator": "Hugo 0.99.1", "og:site_name": "Skaffold", "ogSiteName": "Skaffold", "title": "Skaffold Feedback | Skaffold", "og:description": "Easy and Repeatable Container & Kubernetes Development", "og:type": "website", "language": "en", "og:url": "https://skaffold.dev/docs/resources/feedback/", "description": "Your feedback is very important to us, and a critical part of making Skaffold the best it can be!\nThere are a few easy ways to make your voice heard. …", "robots": "index, follow", "og:title": "Skaffold Feedback", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "ogTitle": "Skaffold Feedback", "twitter:title": "Skaffold Feedback", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "scrapeId": "052f9b06-f86b-4867-aecf-efb37244c759", "sourceURL": "https://skaffold.dev/docs/resources/feedback", "url": "https://skaffold.dev/docs/resources/feedback/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I quick survey in skaffold?\n\nAssistant: To quick survey in skaffold, here's what you do:\nTake our [quick 5-question survey](https://forms.gle/BMTbGQXLWSdn7vEs6) to tell us how satisfied you are with Skaffold, and what improvements you think we should make..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/resources/feedback", "title": "Skaffold Feedback", "description": "Your feedback is very important to us, and a critical part of making Skaffold the best it can be! There are a few easy ways to make your voice heard.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:16:34", "type": "section_detail", "page_metadata": {"twitter:card": "summary", "ogUrl": "https://skaffold.dev/docs/resources/feedback/", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "generator": "Hugo 0.99.1", "og:site_name": "Skaffold", "ogSiteName": "Skaffold", "title": "Skaffold Feedback | Skaffold", "og:description": "Easy and Repeatable Container & Kubernetes Development", "og:type": "website", "language": "en", "og:url": "https://skaffold.dev/docs/resources/feedback/", "description": "Your feedback is very important to us, and a critical part of making Skaffold the best it can be!\nThere are a few easy ways to make your voice heard. …", "robots": "index, follow", "og:title": "Skaffold Feedback", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "ogTitle": "Skaffold Feedback", "twitter:title": "Skaffold Feedback", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "scrapeId": "052f9b06-f86b-4867-aecf-efb37244c759", "sourceURL": "https://skaffold.dev/docs/resources/feedback", "url": "https://skaffold.dev/docs/resources/feedback/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I skaffold feedback session in skaffold?\n\nAssistant: To skaffold feedback session in skaffold, here's what you do:\nThe Skaffold team actively incorporates user feedback into the product as it evolves. We’re always looking to have conversations with developers like you to learn about the different ways you use Skaffold, and what improvements you think we can make to better suit your workflow.\n\n**What is a feedback session?**\n\nWe periodically schedule hour long video conference sessions with both individual developers and teams to get more personalized feedback. If you’re interested in talking with us, fill out our [feedback form](https://forms.gle/J5h567ncypY2ziq49), and we’ll schedule a session at a time convenient for you. No preparation is needed!.\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/resources/feedback", "title": "Skaffold Feedback", "description": "Your feedback is very important to us, and a critical part of making Skaffold the best it can be! There are a few easy ways to make your voice heard.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:16:34", "type": "section_detail", "page_metadata": {"twitter:card": "summary", "ogUrl": "https://skaffold.dev/docs/resources/feedback/", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "generator": "Hugo 0.99.1", "og:site_name": "Skaffold", "ogSiteName": "Skaffold", "title": "Skaffold Feedback | Skaffold", "og:description": "Easy and Repeatable Container & Kubernetes Development", "og:type": "website", "language": "en", "og:url": "https://skaffold.dev/docs/resources/feedback/", "description": "Your feedback is very important to us, and a critical part of making Skaffold the best it can be!\nThere are a few easy ways to make your voice heard. …", "robots": "index, follow", "og:title": "Skaffold Feedback", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "ogTitle": "Skaffold Feedback", "twitter:title": "Skaffold Feedback", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "scrapeId": "052f9b06-f86b-4867-aecf-efb37244c759", "sourceURL": "https://skaffold.dev/docs/resources/feedback", "url": "https://skaffold.dev/docs/resources/feedback/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I note in skaffold?\n\nAssistant: To note in skaffold, here's what you do:\nProviding your information does not guarantee that we will contact you.\n\nIf at any time you wish to opt out of communications from the Skaffold team, you can fill out our [opt out form](https://forms.gle/cnfCXotenyUtF92w6)..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/resources/feedback", "title": "Skaffold Feedback", "description": "Your feedback is very important to us, and a critical part of making Skaffold the best it can be! There are a few easy ways to make your voice heard.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:16:34", "type": "section_detail", "page_metadata": {"twitter:card": "summary", "ogUrl": "https://skaffold.dev/docs/resources/feedback/", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "generator": "Hugo 0.99.1", "og:site_name": "Skaffold", "ogSiteName": "Skaffold", "title": "Skaffold Feedback | Skaffold", "og:description": "Easy and Repeatable Container & Kubernetes Development", "og:type": "website", "language": "en", "og:url": "https://skaffold.dev/docs/resources/feedback/", "description": "Your feedback is very important to us, and a critical part of making Skaffold the best it can be!\nThere are a few easy ways to make your voice heard. …", "robots": "index, follow", "og:title": "Skaffold Feedback", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "ogTitle": "Skaffold Feedback", "twitter:title": "Skaffold Feedback", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "scrapeId": "052f9b06-f86b-4867-aecf-efb37244c759", "sourceURL": "https://skaffold.dev/docs/resources/feedback", "url": "https://skaffold.dev/docs/resources/feedback/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: What are some tips for using Skaffold Feedback in skaffold effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nParticipate in the quick survey to provide feedback on your satisfaction with Skaffold.\n\nFill out the feedback form to schedule a personalized feedback session with the Skaffold team.\n\nIf you wish to opt out of communications, use the opt out form.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://skaffold.dev/docs/resources/feedback", "title": "Skaffold Feedback", "description": "Your feedback is very important to us, and a critical part of making Skaffold the best it can be! There are a few easy ways to make your voice heard.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:16:34", "type": "best_practices", "page_metadata": {"twitter:card": "summary", "ogUrl": "https://skaffold.dev/docs/resources/feedback/", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "generator": "Hugo 0.99.1", "og:site_name": "Skaffold", "ogSiteName": "Skaffold", "title": "Skaffold Feedback | Skaffold", "og:description": "Easy and Repeatable Container & Kubernetes Development", "og:type": "website", "language": "en", "og:url": "https://skaffold.dev/docs/resources/feedback/", "description": "Your feedback is very important to us, and a critical part of making Skaffold the best it can be!\nThere are a few easy ways to make your voice heard. …", "robots": "index, follow", "og:title": "Skaffold Feedback", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "ogTitle": "Skaffold Feedback", "twitter:title": "Skaffold Feedback", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "scrapeId": "052f9b06-f86b-4867-aecf-efb37244c759", "sourceURL": "https://skaffold.dev/docs/resources/feedback", "url": "https://skaffold.dev/docs/resources/feedback/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what Telemetry is in skaffold?\n\nAssistant: Sure, I'd be happy to explain Telemetry in skaffold.\n\n# Telemetry\n\nTo help prioritize features and work on improving Skaffold, we collect anonymized Skaffold usage data. Usage data does not include any argument values or personal information.Here's a quick rundown of what this is about:\n\n## Opting Out of Telemetry\n\nYou are _opted-in_ by default and you can opt-out at any time with the `skaffold config` command. In order to disable sending usage data, run the following command after you have installed Skaffold:\n\n```bash\nskaffold config set --global collect-metrics false\n```\n\n## Data Collection Breakdown\n\nThe breakdown of data we collect is as follows:\n\n#### Example\n\n```bash\nskaffold dev -v trace --port-forward --cache-artifacts=false --filename=./skaffold.yaml\n```\n\nRunning the above in the [microservices example](https://github.com/GoogleContainerTools/skaffold/tree/main/examples/microservices) after a couple of builds/deploys results in the following metrics being collected:\n\n```json\n[{\\\n    \"ExitCode\": 0,\\\n    \"BuildArtifacts\": 3,\\\n    \"Command\": \"dev\",\\\n    \"Version\": \"v1.19.0\",\\\n    \"OS\": \"darwin\",\\\n    \"Arch\": \"amd64\",\\\n    \"PlatformType\": \"local\",\\\n    \"Deployers\": [\"kubectl\"],\\\n    \"EnumFlags\": {\\\n        \"cache-artifacts\": \"false\",\\\n        \"port-forward\": \"true\"\\\n    },\\\n    \"Builders\": {\\\n        \"docker\": 3\\\n    },\\\n    \"SyncType\": {},\\\n    \"DevIterations\": [{\\\n        \"Intent\": \"build\",\\\n        \"ErrorCode\": 0\\\n    }, {\\\n        \"Intent\": \"build\",\\\n        \"ErrorCode\": 104\\\n    }, {\\\n        \"Intent\": \"build\",\\\n        \"ErrorCode\": 0\\\n    }, {\\\n        \"Intent\": \"deploy\",\\\n        \"ErrorCode\": 300\\\n    }, {\\\n        \"Intent\": \"deploy\",\\\n        \"ErrorCode\": 0\\\n    }],\\\n    \"StartTime\": \"2021-01-25T16:24:38.615012-05:00\",\\\n    \"Duration\": 176315222939,\\\n    \"ErrorCode\": 0\\\n}]\n```\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/resources/telemetry", "title": "Telemetry", "description": "To help prioritize features and work on improving Skaffold, we collect anonymized Skaffold usage data. Usage data does not include any argument values or personal information.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 04:18:01", "type": "overview", "page_metadata": {"ogDescription": "Easy and Repeatable Container & Kubernetes Development", "robots": "index, follow", "twitter:card": "summary", "og:site_name": "Skaffold", "generator": "Hugo 0.99.1", "og:title": "Telemetry", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:url": "https://skaffold.dev/docs/resources/telemetry/", "twitter:title": "Telemetry", "ogSiteName": "Skaffold", "ogUrl": "https://skaffold.dev/docs/resources/telemetry/", "ogTitle": "Telemetry", "og:description": "Easy and Repeatable Container & Kubernetes Development", "og:type": "website", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "description": "\nTo help prioritize features and work on improving Skaffold, we collect anonymized Skaffold usage data.\nUsage data does not include any argument …", "language": "en", "title": "Telemetry | Skaffold", "scrapeId": "6d3c86e3-fd1c-4e5f-8b41-5169e6c30fb0", "sourceURL": "https://skaffold.dev/docs/resources/telemetry", "url": "https://skaffold.dev/docs/resources/telemetry/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I opting out of telemetry in skaffold?\n\nAssistant: To opting out of telemetry in skaffold, here's what you do:\nYou are _opted-in_ by default and you can opt-out at any time with the `skaffold config` command. In order to disable sending usage data, run the following command after you have installed Skaffold:\n\n```bash\nskaffold config set --global collect-metrics false\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/resources/telemetry", "title": "Telemetry", "description": "To help prioritize features and work on improving Skaffold, we collect anonymized Skaffold usage data. Usage data does not include any argument values or personal information.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 04:18:01", "type": "section_detail", "page_metadata": {"ogDescription": "Easy and Repeatable Container & Kubernetes Development", "robots": "index, follow", "twitter:card": "summary", "og:site_name": "Skaffold", "generator": "Hugo 0.99.1", "og:title": "Telemetry", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:url": "https://skaffold.dev/docs/resources/telemetry/", "twitter:title": "Telemetry", "ogSiteName": "Skaffold", "ogUrl": "https://skaffold.dev/docs/resources/telemetry/", "ogTitle": "Telemetry", "og:description": "Easy and Repeatable Container & Kubernetes Development", "og:type": "website", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "description": "\nTo help prioritize features and work on improving Skaffold, we collect anonymized Skaffold usage data.\nUsage data does not include any argument …", "language": "en", "title": "Telemetry | Skaffold", "scrapeId": "6d3c86e3-fd1c-4e5f-8b41-5169e6c30fb0", "sourceURL": "https://skaffold.dev/docs/resources/telemetry", "url": "https://skaffold.dev/docs/resources/telemetry/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I data collection breakdown in skaffold?\n\nAssistant: To data collection breakdown in skaffold, here's what you do:\nThe breakdown of data we collect is as follows:\n\n#### Example\n\n```bash\nskaffold dev -v trace --port-forward --cache-artifacts=false --filename=./skaffold.yaml\n```\n\nRunning the above in the [microservices example](https://github.com/GoogleContainerTools/skaffold/tree/main/examples/microservices) after a couple of builds/deploys results in the following metrics being collected:\n\n```json\n[{\\\n    \"ExitCode\": 0,\\\n    \"BuildArtifacts\": 3,\\\n    \"Command\": \"dev\",\\\n    \"Version\": \"v1.19.0\",\\\n    \"OS\": \"darwin\",\\\n    \"Arch\": \"amd64\",\\\n    \"PlatformType\": \"local\",\\\n    \"Deployers\": [\"kubectl\"],\\\n    \"EnumFlags\": {\\\n        \"cache-artifacts\": \"false\",\\\n        \"port-forward\": \"true\"\\\n    },\\\n    \"Builders\": {\\\n        \"docker\": 3\\\n    },\\\n    \"SyncType\": {},\\\n    \"DevIterations\": [{\\\n        \"Intent\": \"build\",\\\n        \"ErrorCode\": 0\\\n    }, {\\\n        \"Intent\": \"build\",\\\n        \"ErrorCode\": 104\\\n    }, {\\\n        \"Intent\": \"build\",\\\n        \"ErrorCode\": 0\\\n    }, {\\\n        \"Intent\": \"deploy\",\\\n        \"ErrorCode\": 300\\\n    }, {\\\n        \"Intent\": \"deploy\",\\\n        \"ErrorCode\": 0\\\n    }],\\\n    \"StartTime\": \"2021-01-25T16:24:38.615012-05:00\",\\\n    \"Duration\": 176315222939,\\\n    \"ErrorCode\": 0\\\n}]\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/resources/telemetry", "title": "Telemetry", "description": "To help prioritize features and work on improving Skaffold, we collect anonymized Skaffold usage data. Usage data does not include any argument values or personal information.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 04:18:01", "type": "section_detail", "page_metadata": {"ogDescription": "Easy and Repeatable Container & Kubernetes Development", "robots": "index, follow", "twitter:card": "summary", "og:site_name": "Skaffold", "generator": "Hugo 0.99.1", "og:title": "Telemetry", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:url": "https://skaffold.dev/docs/resources/telemetry/", "twitter:title": "Telemetry", "ogSiteName": "Skaffold", "ogUrl": "https://skaffold.dev/docs/resources/telemetry/", "ogTitle": "Telemetry", "og:description": "Easy and Repeatable Container & Kubernetes Development", "og:type": "website", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "description": "\nTo help prioritize features and work on improving Skaffold, we collect anonymized Skaffold usage data.\nUsage data does not include any argument …", "language": "en", "title": "Telemetry | Skaffold", "scrapeId": "6d3c86e3-fd1c-4e5f-8b41-5169e6c30fb0", "sourceURL": "https://skaffold.dev/docs/resources/telemetry", "url": "https://skaffold.dev/docs/resources/telemetry/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you give me some code examples for Telemetry in skaffold?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Disable Metrics Collection**:\n\n```yaml\nskaffold config set --global collect-metrics false\n```\n\nThis snippet shows you how to disable metrics collection, which is an important aspect of telemetry.\n\n**Skaffold Command Example**:\n\n```yaml\nskaffold dev -v trace --port-forward --cache-artifacts=false --filename=./skaffold.yaml\n```\n\nThis snippet shows you how to skaffold command example, which is an important aspect of telemetry.\n\n**Collected Metrics Example**:\n\n```yaml\n[{\\\n    \"ExitCode\": 0,\\\n    \"BuildArtifacts\": 3,\\\n    \"Command\": \"dev\",\\\n    \"Version\": \"v1.19.0\",\\\n    \"OS\": \"darwin\",\\\n    \"Arch\": \"amd64\",\\\n    \"PlatformType\": \"local\",\\\n    \"Deployers\": [\"kubectl\"],\\\n    \"EnumFlags\": {\\\n        \"cache-artifacts\": \"false\",\\\n        \"port-forward\": \"true\"\\\n    },\\\n    \"Builders\": {\\\n        \"docker\": 3\\\n    },\\\n    \"SyncType\": {},\\\n    \"DevIterations\": [{\\\n        \"Intent\": \"build\",\\\n        \"ErrorCode\": 0\\\n    }, {\\\n        \"Intent\": \"build\",\\\n        \"ErrorCode\": 104\\\n    }, {\\\n        \"Intent\": \"build\",\\\n        \"ErrorCode\": 0\\\n    }, {\\\n        \"Intent\": \"deploy\",\\\n        \"ErrorCode\": 300\\\n    }, {\\\n        \"Intent\": \"deploy\",\\\n        \"ErrorCode\": 0\\\n    }],\\\n    \"StartTime\": \"2021-01-25T16:24:38.615012-05:00\",\\\n    \"Duration\": 176315222939,\\\n    \"ErrorCode\": 0\\\n}]\n```\n\nThis snippet shows you how to collected metrics example, which is an important aspect of telemetry.\n\n**Privacy Policy Link**:\n\n```yaml\nThis data is handled in accordance with our privacy policy [https://policies.google.com/privacy](https://policies.google.com/privacy).\n```\n\nThis snippet shows you how to privacy policy link, which is an important aspect of telemetry.\n\n", "metadata": {"source_url": "https://skaffold.dev/docs/resources/telemetry", "title": "Telemetry", "description": "To help prioritize features and work on improving Skaffold, we collect anonymized Skaffold usage data. Usage data does not include any argument values or personal information.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 04:18:01", "type": "code_examples", "page_metadata": {"ogDescription": "Easy and Repeatable Container & Kubernetes Development", "robots": "index, follow", "twitter:card": "summary", "og:site_name": "Skaffold", "generator": "Hugo 0.99.1", "og:title": "Telemetry", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:url": "https://skaffold.dev/docs/resources/telemetry/", "twitter:title": "Telemetry", "ogSiteName": "Skaffold", "ogUrl": "https://skaffold.dev/docs/resources/telemetry/", "ogTitle": "Telemetry", "og:description": "Easy and Repeatable Container & Kubernetes Development", "og:type": "website", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "description": "\nTo help prioritize features and work on improving Skaffold, we collect anonymized Skaffold usage data.\nUsage data does not include any argument …", "language": "en", "title": "Telemetry | Skaffold", "scrapeId": "6d3c86e3-fd1c-4e5f-8b41-5169e6c30fb0", "sourceURL": "https://skaffold.dev/docs/resources/telemetry", "url": "https://skaffold.dev/docs/resources/telemetry/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: What are some tips for using Telemetry in skaffold effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nYou are opted-in by default and can opt-out at any time with the `skaffold config` command.\n\nTo disable sending usage data, run `skaffold config set --global collect-metrics false` after installation.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://skaffold.dev/docs/resources/telemetry", "title": "Telemetry", "description": "To help prioritize features and work on improving Skaffold, we collect anonymized Skaffold usage data. Usage data does not include any argument values or personal information.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 04:18:01", "type": "best_practices", "page_metadata": {"ogDescription": "Easy and Repeatable Container & Kubernetes Development", "robots": "index, follow", "twitter:card": "summary", "og:site_name": "Skaffold", "generator": "Hugo 0.99.1", "og:title": "Telemetry", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:url": "https://skaffold.dev/docs/resources/telemetry/", "twitter:title": "Telemetry", "ogSiteName": "Skaffold", "ogUrl": "https://skaffold.dev/docs/resources/telemetry/", "ogTitle": "Telemetry", "og:description": "Easy and Repeatable Container & Kubernetes Development", "og:type": "website", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "description": "\nTo help prioritize features and work on improving Skaffold, we collect anonymized Skaffold usage data.\nUsage data does not include any argument …", "language": "en", "title": "Telemetry | Skaffold", "scrapeId": "6d3c86e3-fd1c-4e5f-8b41-5169e6c30fb0", "sourceURL": "https://skaffold.dev/docs/resources/telemetry", "url": "https://skaffold.dev/docs/resources/telemetry/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what skaffold.yaml is in skaffold?\n\nAssistant: Sure, I'd be happy to explain skaffold.yaml in skaffold.\n\n# skaffold.yaml\n\nDocumentation for configuring and using skaffold.yaml files in Cloud Code IDE.Here's a quick rundown of what this is about:\n\n## Tip\n\nThe Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based validation, diagnostics, quick documentation, code completions, and snippets, that can make it easier to create and edit these files. You can now navigate the skaffold.yaml reference from an inner element to its upper levels using the tooltip that appears on hover, clicking on the parent element you want to go.\n\n## YAML anchors\n\nAnchors can be defined by having top-level keys starting with a dot, e.g. .common_stuff: &alias_name. You can then reuse the value using *alias_name.\n\n## Organizing multiple configurations\n\nMultiple configurations can define dependencies on each other to construct an arbitrarily nested tree of project component dependencies. Management of multiple configurations can be simplified by grouping them together in the same file (separated by --- in YAML).\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v1beta7", "title": "skaffold.yaml", "description": "Documentation for configuring and using skaffold.yaml files in Cloud Code IDE.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:18:16", "type": "overview", "page_metadata": {"language": "en", "title": "skaffold.yaml | Skaffold", "og:description": "Easy and Repeatable Container & Kubernetes Development", "ogTitle": "skaffold.yaml", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "twitter:card": "summary", "og:url": "https://skaffold.dev/docs/references/yaml/", "robots": "index, follow", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "og:title": "skaffold.yaml", "twitter:title": "skaffold.yaml", "ogSiteName": "Skaffold", "og:site_name": "Skaffold", "generator": "Hugo 0.99.1", "og:type": "website", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "scrapeId": "6d71570d-3467-4b28-bcdb-dfec3e01a8f9", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v1beta7", "url": "https://skaffold.dev/docs/references/yaml/?version=v1beta7", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I tip in skaffold?\n\nAssistant: To tip in skaffold, here's what you do:\nThe Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based validation, diagnostics, quick documentation, code completions, and snippets, that can make it easier to create and edit these files. You can now navigate the skaffold.yaml reference from an inner element to its upper levels using the tooltip that appears on hover, clicking on the parent element you want to go..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v1beta7", "title": "skaffold.yaml", "description": "Documentation for configuring and using skaffold.yaml files in Cloud Code IDE.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:18:16", "type": "section_detail", "page_metadata": {"language": "en", "title": "skaffold.yaml | Skaffold", "og:description": "Easy and Repeatable Container & Kubernetes Development", "ogTitle": "skaffold.yaml", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "twitter:card": "summary", "og:url": "https://skaffold.dev/docs/references/yaml/", "robots": "index, follow", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "og:title": "skaffold.yaml", "twitter:title": "skaffold.yaml", "ogSiteName": "Skaffold", "og:site_name": "Skaffold", "generator": "Hugo 0.99.1", "og:type": "website", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "scrapeId": "6d71570d-3467-4b28-bcdb-dfec3e01a8f9", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v1beta7", "url": "https://skaffold.dev/docs/references/yaml/?version=v1beta7", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I yaml anchors in skaffold?\n\nAssistant: To yaml anchors in skaffold, here's what you do:\nAnchors can be defined by having top-level keys starting with a dot, e.g. .common_stuff: &alias_name. You can then reuse the value using *alias_name..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v1beta7", "title": "skaffold.yaml", "description": "Documentation for configuring and using skaffold.yaml files in Cloud Code IDE.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:18:16", "type": "section_detail", "page_metadata": {"language": "en", "title": "skaffold.yaml | Skaffold", "og:description": "Easy and Repeatable Container & Kubernetes Development", "ogTitle": "skaffold.yaml", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "twitter:card": "summary", "og:url": "https://skaffold.dev/docs/references/yaml/", "robots": "index, follow", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "og:title": "skaffold.yaml", "twitter:title": "skaffold.yaml", "ogSiteName": "Skaffold", "og:site_name": "Skaffold", "generator": "Hugo 0.99.1", "og:type": "website", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "scrapeId": "6d71570d-3467-4b28-bcdb-dfec3e01a8f9", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v1beta7", "url": "https://skaffold.dev/docs/references/yaml/?version=v1beta7", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I organizing multiple configurations in skaffold?\n\nAssistant: To organizing multiple configurations in skaffold, here's what you do:\nMultiple configurations can define dependencies on each other to construct an arbitrarily nested tree of project component dependencies. Management of multiple configurations can be simplified by grouping them together in the same file (separated by --- in YAML)..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v1beta7", "title": "skaffold.yaml", "description": "Documentation for configuring and using skaffold.yaml files in Cloud Code IDE.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:18:16", "type": "section_detail", "page_metadata": {"language": "en", "title": "skaffold.yaml | Skaffold", "og:description": "Easy and Repeatable Container & Kubernetes Development", "ogTitle": "skaffold.yaml", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "twitter:card": "summary", "og:url": "https://skaffold.dev/docs/references/yaml/", "robots": "index, follow", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "og:title": "skaffold.yaml", "twitter:title": "skaffold.yaml", "ogSiteName": "Skaffold", "og:site_name": "Skaffold", "generator": "Hugo 0.99.1", "og:type": "website", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "scrapeId": "6d71570d-3467-4b28-bcdb-dfec3e01a8f9", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v1beta7", "url": "https://skaffold.dev/docs/references/yaml/?version=v1beta7", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: What are some tips for using skaffold.yaml in skaffold effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nUse Cloud Code IDE extensions for authoring assistance with skaffold.yaml files.\n\nUtilize YAML anchors for reusing values in configurations.\n\nGroup multiple configurations in the same file for better management.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v1beta7", "title": "skaffold.yaml", "description": "Documentation for configuring and using skaffold.yaml files in Cloud Code IDE.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:18:16", "type": "best_practices", "page_metadata": {"language": "en", "title": "skaffold.yaml | Skaffold", "og:description": "Easy and Repeatable Container & Kubernetes Development", "ogTitle": "skaffold.yaml", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "twitter:card": "summary", "og:url": "https://skaffold.dev/docs/references/yaml/", "robots": "index, follow", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "og:title": "skaffold.yaml", "twitter:title": "skaffold.yaml", "ogSiteName": "Skaffold", "og:site_name": "Skaffold", "generator": "Hugo 0.99.1", "og:type": "website", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "scrapeId": "6d71570d-3467-4b28-bcdb-dfec3e01a8f9", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v1beta7", "url": "https://skaffold.dev/docs/references/yaml/?version=v1beta7", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what skaffold.yaml is in skaffold?\n\nAssistant: Sure, I'd be happy to explain skaffold.yaml in skaffold.\n\n# skaffold.yaml\n\nThis page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and organization of configurations.Here's a quick rundown of what this is about:\n\n## YAML anchors\n\nAnchors can be defined by having top-level keys starting with a dot, e.g. `.common_stuff: &alias_name`. You can then reuse the value using `*alias_name`.\n\n## Organizing multiple configurations\n\nMultiple configurations can define dependencies on each other to construct an arbitrarily nested tree of project component dependencies. Management of multiple configurations can be simplified by grouping them together in the same file (separated by --- in YAML).\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v1beta2", "title": "skaffold.yaml", "description": "This page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and organization of configurations.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 04:18:54", "type": "overview", "page_metadata": {"og:site_name": "Skaffold", "og:url": "https://skaffold.dev/docs/references/yaml/", "og:description": "Easy and Repeatable Container & Kubernetes Development", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "og:title": "skaffold.yaml", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "generator": "Hugo 0.99.1", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "twitter:card": "summary", "twitter:title": "skaffold.yaml", "title": "skaffold.yaml | Skaffold", "robots": "index, follow", "og:type": "website", "language": "en", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "ogTitle": "skaffold.yaml", "ogSiteName": "Skaffold", "scrapeId": "a8c1fbe6-5fa6-4707-beae-551546903b0a", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v1beta2", "url": "https://skaffold.dev/docs/references/yaml/?version=v1beta2", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I yaml anchors in skaffold?\n\nAssistant: To yaml anchors in skaffold, here's what you do:\nAnchors can be defined by having top-level keys starting with a dot, e.g. `.common_stuff: &alias_name`. You can then reuse the value using `*alias_name`..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v1beta2", "title": "skaffold.yaml", "description": "This page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and organization of configurations.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 04:18:54", "type": "section_detail", "page_metadata": {"og:site_name": "Skaffold", "og:url": "https://skaffold.dev/docs/references/yaml/", "og:description": "Easy and Repeatable Container & Kubernetes Development", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "og:title": "skaffold.yaml", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "generator": "Hugo 0.99.1", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "twitter:card": "summary", "twitter:title": "skaffold.yaml", "title": "skaffold.yaml | Skaffold", "robots": "index, follow", "og:type": "website", "language": "en", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "ogTitle": "skaffold.yaml", "ogSiteName": "Skaffold", "scrapeId": "a8c1fbe6-5fa6-4707-beae-551546903b0a", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v1beta2", "url": "https://skaffold.dev/docs/references/yaml/?version=v1beta2", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I organizing multiple configurations in skaffold?\n\nAssistant: To organizing multiple configurations in skaffold, here's what you do:\nMultiple configurations can define dependencies on each other to construct an arbitrarily nested tree of project component dependencies. Management of multiple configurations can be simplified by grouping them together in the same file (separated by --- in YAML)..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v1beta2", "title": "skaffold.yaml", "description": "This page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and organization of configurations.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 04:18:54", "type": "section_detail", "page_metadata": {"og:site_name": "Skaffold", "og:url": "https://skaffold.dev/docs/references/yaml/", "og:description": "Easy and Repeatable Container & Kubernetes Development", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "og:title": "skaffold.yaml", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "generator": "Hugo 0.99.1", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "twitter:card": "summary", "twitter:title": "skaffold.yaml", "title": "skaffold.yaml | Skaffold", "robots": "index, follow", "og:type": "website", "language": "en", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "ogTitle": "skaffold.yaml", "ogSiteName": "Skaffold", "scrapeId": "a8c1fbe6-5fa6-4707-beae-551546903b0a", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v1beta2", "url": "https://skaffold.dev/docs/references/yaml/?version=v1beta2", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: What are some tips for using skaffold.yaml in skaffold effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nThe Cloud Code IDE extensions provide authoring assistance for `skaffold.yaml` files in the form of schema based validation, diagnostics, quick documentation, code completions, and snippets, that can make it easier to create and edit these files.\n\nYou can navigate the `skaffold.yaml` reference from an inner element to its upper levels using the tooltip that appears on hover, clicking on the parent element you want to go.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v1beta2", "title": "skaffold.yaml", "description": "This page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and organization of configurations.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 04:18:54", "type": "best_practices", "page_metadata": {"og:site_name": "Skaffold", "og:url": "https://skaffold.dev/docs/references/yaml/", "og:description": "Easy and Repeatable Container & Kubernetes Development", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "og:title": "skaffold.yaml", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "generator": "Hugo 0.99.1", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "twitter:card": "summary", "twitter:title": "skaffold.yaml", "title": "skaffold.yaml | Skaffold", "robots": "index, follow", "og:type": "website", "language": "en", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "ogTitle": "skaffold.yaml", "ogSiteName": "Skaffold", "scrapeId": "a8c1fbe6-5fa6-4707-beae-551546903b0a", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v1beta2", "url": "https://skaffold.dev/docs/references/yaml/?version=v1beta2", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what skaffold.yaml is in skaffold?\n\nAssistant: Sure, I'd be happy to explain skaffold.yaml in skaffold.\n\n# skaffold.yaml\n\nThis page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and organization of configurations.Here's a quick rundown of what this is about:\n\n## YAML anchors\n\nAnchors can be defined by having top-level keys starting with a dot, e.g. `.common_stuff: &alias_name`. You can then reuse the value using `*alias_name`.\n\n## Organizing multiple configurations\n\nMultiple configurations can define dependencies on each other to construct an arbitrarily nested tree of project component dependencies. Management of multiple configurations can be simplified by grouping them together in the same file (separated by --- in YAML).\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v2beta14", "title": "skaffold.yaml", "description": "This page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and organization of configurations.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 04:19:06", "type": "overview", "page_metadata": {"robots": "index, follow", "title": "skaffold.yaml | Skaffold", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "ogTitle": "skaffold.yaml", "og:type": "website", "twitter:title": "skaffold.yaml", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "og:title": "skaffold.yaml", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "og:url": "https://skaffold.dev/docs/references/yaml/", "twitter:card": "summary", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "generator": "Hugo 0.99.1", "ogSiteName": "Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:site_name": "Skaffold", "language": "en", "og:description": "Easy and Repeatable Container & Kubernetes Development", "scrapeId": "8997355b-445e-43bd-80ca-c4ea1533c492", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v2beta14", "url": "https://skaffold.dev/docs/references/yaml/?version=v2beta14", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I yaml anchors in skaffold?\n\nAssistant: To yaml anchors in skaffold, here's what you do:\nAnchors can be defined by having top-level keys starting with a dot, e.g. `.common_stuff: &alias_name`. You can then reuse the value using `*alias_name`..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v2beta14", "title": "skaffold.yaml", "description": "This page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and organization of configurations.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 04:19:06", "type": "section_detail", "page_metadata": {"robots": "index, follow", "title": "skaffold.yaml | Skaffold", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "ogTitle": "skaffold.yaml", "og:type": "website", "twitter:title": "skaffold.yaml", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "og:title": "skaffold.yaml", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "og:url": "https://skaffold.dev/docs/references/yaml/", "twitter:card": "summary", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "generator": "Hugo 0.99.1", "ogSiteName": "Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:site_name": "Skaffold", "language": "en", "og:description": "Easy and Repeatable Container & Kubernetes Development", "scrapeId": "8997355b-445e-43bd-80ca-c4ea1533c492", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v2beta14", "url": "https://skaffold.dev/docs/references/yaml/?version=v2beta14", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I organizing multiple configurations in skaffold?\n\nAssistant: To organizing multiple configurations in skaffold, here's what you do:\nMultiple configurations can define dependencies on each other to construct an arbitrarily nested tree of project component dependencies. Management of multiple configurations can be simplified by grouping them together in the same file (separated by --- in YAML)..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v2beta14", "title": "skaffold.yaml", "description": "This page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and organization of configurations.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 04:19:06", "type": "section_detail", "page_metadata": {"robots": "index, follow", "title": "skaffold.yaml | Skaffold", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "ogTitle": "skaffold.yaml", "og:type": "website", "twitter:title": "skaffold.yaml", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "og:title": "skaffold.yaml", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "og:url": "https://skaffold.dev/docs/references/yaml/", "twitter:card": "summary", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "generator": "Hugo 0.99.1", "ogSiteName": "Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:site_name": "Skaffold", "language": "en", "og:description": "Easy and Repeatable Container & Kubernetes Development", "scrapeId": "8997355b-445e-43bd-80ca-c4ea1533c492", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v2beta14", "url": "https://skaffold.dev/docs/references/yaml/?version=v2beta14", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: What are some tips for using skaffold.yaml in skaffold effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nThe Cloud Code IDE extensions provide authoring assistance for `skaffold.yaml` files in the form of schema based validation, diagnostics, quick documentation, code completions, and snippets, that can make it easier to create and edit these files.\n\nYou can navigate the `skaffold.yaml` reference from an inner element to its upper levels using the tooltip that appears on hover, clicking on the parent element you want to go.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v2beta14", "title": "skaffold.yaml", "description": "This page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and organization of configurations.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 04:19:06", "type": "best_practices", "page_metadata": {"robots": "index, follow", "title": "skaffold.yaml | Skaffold", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "ogTitle": "skaffold.yaml", "og:type": "website", "twitter:title": "skaffold.yaml", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "og:title": "skaffold.yaml", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "og:url": "https://skaffold.dev/docs/references/yaml/", "twitter:card": "summary", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "generator": "Hugo 0.99.1", "ogSiteName": "Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:site_name": "Skaffold", "language": "en", "og:description": "Easy and Repeatable Container & Kubernetes Development", "scrapeId": "8997355b-445e-43bd-80ca-c4ea1533c492", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v2beta14", "url": "https://skaffold.dev/docs/references/yaml/?version=v2beta14", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what skaffold.yaml is in skaffold?\n\nAssistant: Sure, I'd be happy to explain skaffold.yaml in skaffold.\n\n# skaffold.yaml\n\nThis page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and configuration management.Here's a quick rundown of what this is about:\n\n## YAML anchors\n\nAnchors can be defined by having top-level keys starting with a dot, e.g. `.common_stuff: &alias_name`. You can then reuse the value using `*alias_name`.\n\n## Organizing multiple configurations\n\nMultiple configurations can define dependencies on each other to construct an arbitrarily nested tree of project component dependencies. Management of multiple configurations can be simplified by grouping them together in the same file (separated by --- in YAML).\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v1alpha5", "title": "skaffold.yaml", "description": "This page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and configuration management.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 04:20:25", "type": "overview", "page_metadata": {"generator": "Hugo 0.99.1", "og:site_name": "Skaffold", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "og:type": "website", "robots": "index, follow", "twitter:title": "skaffold.yaml", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:description": "Easy and Repeatable Container & Kubernetes Development", "twitter:card": "summary", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogTitle": "skaffold.yaml", "og:title": "skaffold.yaml", "language": "en", "og:url": "https://skaffold.dev/docs/references/yaml/", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "title": "skaffold.yaml | Skaffold", "ogSiteName": "Skaffold", "scrapeId": "3d575993-235d-4afb-af61-871cc4e7e161", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v1alpha5", "url": "https://skaffold.dev/docs/references/yaml/?version=v1alpha5", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I yaml anchors in skaffold?\n\nAssistant: To yaml anchors in skaffold, here's what you do:\nAnchors can be defined by having top-level keys starting with a dot, e.g. `.common_stuff: &alias_name`. You can then reuse the value using `*alias_name`..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v1alpha5", "title": "skaffold.yaml", "description": "This page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and configuration management.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 04:20:25", "type": "section_detail", "page_metadata": {"generator": "Hugo 0.99.1", "og:site_name": "Skaffold", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "og:type": "website", "robots": "index, follow", "twitter:title": "skaffold.yaml", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:description": "Easy and Repeatable Container & Kubernetes Development", "twitter:card": "summary", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogTitle": "skaffold.yaml", "og:title": "skaffold.yaml", "language": "en", "og:url": "https://skaffold.dev/docs/references/yaml/", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "title": "skaffold.yaml | Skaffold", "ogSiteName": "Skaffold", "scrapeId": "3d575993-235d-4afb-af61-871cc4e7e161", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v1alpha5", "url": "https://skaffold.dev/docs/references/yaml/?version=v1alpha5", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I organizing multiple configurations in skaffold?\n\nAssistant: To organizing multiple configurations in skaffold, here's what you do:\nMultiple configurations can define dependencies on each other to construct an arbitrarily nested tree of project component dependencies. Management of multiple configurations can be simplified by grouping them together in the same file (separated by --- in YAML)..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v1alpha5", "title": "skaffold.yaml", "description": "This page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and configuration management.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 04:20:25", "type": "section_detail", "page_metadata": {"generator": "Hugo 0.99.1", "og:site_name": "Skaffold", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "og:type": "website", "robots": "index, follow", "twitter:title": "skaffold.yaml", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:description": "Easy and Repeatable Container & Kubernetes Development", "twitter:card": "summary", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogTitle": "skaffold.yaml", "og:title": "skaffold.yaml", "language": "en", "og:url": "https://skaffold.dev/docs/references/yaml/", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "title": "skaffold.yaml | Skaffold", "ogSiteName": "Skaffold", "scrapeId": "3d575993-235d-4afb-af61-871cc4e7e161", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v1alpha5", "url": "https://skaffold.dev/docs/references/yaml/?version=v1alpha5", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: What are some tips for using skaffold.yaml in skaffold effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nThe Cloud Code IDE extensions provide authoring assistance for skaffold.yaml files in the form of schema based validation, diagnostics, quick documentation, code completions, and snippets, that can make it easier to create and edit these files.\n\nYou can navigate the skaffold.yaml reference from an inner element to its upper levels using the tooltip that appears on hover, clicking on the parent element you want to go.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v1alpha5", "title": "skaffold.yaml", "description": "This page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and configuration management.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 04:20:25", "type": "best_practices", "page_metadata": {"generator": "Hugo 0.99.1", "og:site_name": "Skaffold", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "og:type": "website", "robots": "index, follow", "twitter:title": "skaffold.yaml", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:description": "Easy and Repeatable Container & Kubernetes Development", "twitter:card": "summary", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogTitle": "skaffold.yaml", "og:title": "skaffold.yaml", "language": "en", "og:url": "https://skaffold.dev/docs/references/yaml/", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "title": "skaffold.yaml | Skaffold", "ogSiteName": "Skaffold", "scrapeId": "3d575993-235d-4afb-af61-871cc4e7e161", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v1alpha5", "url": "https://skaffold.dev/docs/references/yaml/?version=v1alpha5", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what skaffold.yaml is in skaffold?\n\nAssistant: Sure, I'd be happy to explain skaffold.yaml in skaffold.\n\n# skaffold.yaml\n\nDocumentation for configuring and using skaffold.yaml files in Cloud Code IDE.Here's a quick rundown of what this is about:\n\n## Tip\n\nThe Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based validation, diagnostics, quick documentation, code completions, and snippets, that can make it easier to create and edit these files. You can now navigate the skaffold.yaml reference from an inner element to its upper levels using the tooltip that appears on hover, clicking on the parent element you want to go.\n\n## YAML anchors\n\nAnchors can be defined by having top-level keys starting with a dot, e.g. .common_stuff: &alias_name. You can then reuse the value using *alias_name.\n\n## Organizing multiple configurations\n\nMultiple configurations can define dependencies on each other to construct an arbitrarily nested tree of project component dependencies. Management of multiple configurations can be simplified by grouping them together in the same file (separated by --- in YAML).\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v2beta17", "title": "skaffold.yaml", "description": "Documentation for configuring and using skaffold.yaml files in Cloud Code IDE.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:21:34", "type": "overview", "page_metadata": {"twitter:title": "skaffold.yaml", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "og:url": "https://skaffold.dev/docs/references/yaml/", "og:type": "website", "ogTitle": "skaffold.yaml", "title": "skaffold.yaml | Skaffold", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "og:description": "Easy and Repeatable Container & Kubernetes Development", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "generator": "Hugo 0.99.1", "robots": "index, follow", "ogSiteName": "Skaffold", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "og:title": "skaffold.yaml", "twitter:card": "summary", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "language": "en", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "og:site_name": "Skaffold", "scrapeId": "930fe0e1-8225-4f7a-8b93-030b154c26da", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v2beta17", "url": "https://skaffold.dev/docs/references/yaml/?version=v2beta17", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I tip in skaffold?\n\nAssistant: To tip in skaffold, here's what you do:\nThe Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based validation, diagnostics, quick documentation, code completions, and snippets, that can make it easier to create and edit these files. You can now navigate the skaffold.yaml reference from an inner element to its upper levels using the tooltip that appears on hover, clicking on the parent element you want to go..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v2beta17", "title": "skaffold.yaml", "description": "Documentation for configuring and using skaffold.yaml files in Cloud Code IDE.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:21:34", "type": "section_detail", "page_metadata": {"twitter:title": "skaffold.yaml", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "og:url": "https://skaffold.dev/docs/references/yaml/", "og:type": "website", "ogTitle": "skaffold.yaml", "title": "skaffold.yaml | Skaffold", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "og:description": "Easy and Repeatable Container & Kubernetes Development", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "generator": "Hugo 0.99.1", "robots": "index, follow", "ogSiteName": "Skaffold", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "og:title": "skaffold.yaml", "twitter:card": "summary", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "language": "en", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "og:site_name": "Skaffold", "scrapeId": "930fe0e1-8225-4f7a-8b93-030b154c26da", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v2beta17", "url": "https://skaffold.dev/docs/references/yaml/?version=v2beta17", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I yaml anchors in skaffold?\n\nAssistant: To yaml anchors in skaffold, here's what you do:\nAnchors can be defined by having top-level keys starting with a dot, e.g. .common_stuff: &alias_name. You can then reuse the value using *alias_name..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v2beta17", "title": "skaffold.yaml", "description": "Documentation for configuring and using skaffold.yaml files in Cloud Code IDE.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:21:34", "type": "section_detail", "page_metadata": {"twitter:title": "skaffold.yaml", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "og:url": "https://skaffold.dev/docs/references/yaml/", "og:type": "website", "ogTitle": "skaffold.yaml", "title": "skaffold.yaml | Skaffold", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "og:description": "Easy and Repeatable Container & Kubernetes Development", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "generator": "Hugo 0.99.1", "robots": "index, follow", "ogSiteName": "Skaffold", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "og:title": "skaffold.yaml", "twitter:card": "summary", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "language": "en", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "og:site_name": "Skaffold", "scrapeId": "930fe0e1-8225-4f7a-8b93-030b154c26da", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v2beta17", "url": "https://skaffold.dev/docs/references/yaml/?version=v2beta17", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I organizing multiple configurations in skaffold?\n\nAssistant: To organizing multiple configurations in skaffold, here's what you do:\nMultiple configurations can define dependencies on each other to construct an arbitrarily nested tree of project component dependencies. Management of multiple configurations can be simplified by grouping them together in the same file (separated by --- in YAML)..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v2beta17", "title": "skaffold.yaml", "description": "Documentation for configuring and using skaffold.yaml files in Cloud Code IDE.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:21:34", "type": "section_detail", "page_metadata": {"twitter:title": "skaffold.yaml", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "og:url": "https://skaffold.dev/docs/references/yaml/", "og:type": "website", "ogTitle": "skaffold.yaml", "title": "skaffold.yaml | Skaffold", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "og:description": "Easy and Repeatable Container & Kubernetes Development", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "generator": "Hugo 0.99.1", "robots": "index, follow", "ogSiteName": "Skaffold", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "og:title": "skaffold.yaml", "twitter:card": "summary", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "language": "en", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "og:site_name": "Skaffold", "scrapeId": "930fe0e1-8225-4f7a-8b93-030b154c26da", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v2beta17", "url": "https://skaffold.dev/docs/references/yaml/?version=v2beta17", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: What are some tips for using skaffold.yaml in skaffold effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nUse Cloud Code IDE extensions for authoring assistance with skaffold.yaml files.\n\nUtilize YAML anchors for reusing values in configurations.\n\nGroup multiple configurations in the same file for better management.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v2beta17", "title": "skaffold.yaml", "description": "Documentation for configuring and using skaffold.yaml files in Cloud Code IDE.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:21:34", "type": "best_practices", "page_metadata": {"twitter:title": "skaffold.yaml", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "og:url": "https://skaffold.dev/docs/references/yaml/", "og:type": "website", "ogTitle": "skaffold.yaml", "title": "skaffold.yaml | Skaffold", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "og:description": "Easy and Repeatable Container & Kubernetes Development", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "generator": "Hugo 0.99.1", "robots": "index, follow", "ogSiteName": "Skaffold", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "og:title": "skaffold.yaml", "twitter:card": "summary", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "language": "en", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "og:site_name": "Skaffold", "scrapeId": "930fe0e1-8225-4f7a-8b93-030b154c26da", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v2beta17", "url": "https://skaffold.dev/docs/references/yaml/?version=v2beta17", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what skaffold.yaml is in skaffold?\n\nAssistant: Sure, I'd be happy to explain skaffold.yaml in skaffold.\n\n# skaffold.yaml\n\nDocumentation for configuring and using skaffold.yaml files in Cloud Code IDE extensions.Here's a quick rundown of what this is about:\n\n## Tip\n\nThe Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based validation, diagnostics, quick documentation, code completions, and snippets, that can make it easier to create and edit these files. You can now navigate the skaffold.yaml reference from an inner element to its upper levels using the tooltip that appears on hover, clicking on the parent element you want to go.\n\n## YAML anchors\n\nAnchors can be defined by having top-level keys starting with a dot, e.g. .common_stuff: &alias_name. You can then reuse the value using *alias_name.\n\n## Organizing multiple configurations\n\nMultiple configurations can define dependencies on each other to construct an arbitrarily nested tree of project component dependencies. Management of multiple configurations can be simplified by grouping them together in the same file (separated by --- in YAML).\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v2beta20", "title": "skaffold.yaml", "description": "Documentation for configuring and using skaffold.yaml files in Cloud Code IDE extensions.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:21:57", "type": "overview", "page_metadata": {"language": "en", "generator": "Hugo 0.99.1", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "og:site_name": "Skaffold", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:type": "website", "og:url": "https://skaffold.dev/docs/references/yaml/", "og:title": "skaffold.yaml", "ogSiteName": "Skaffold", "ogTitle": "skaffold.yaml", "twitter:title": "skaffold.yaml", "robots": "index, follow", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "og:description": "Easy and Repeatable Container & Kubernetes Development", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "twitter:card": "summary", "title": "skaffold.yaml | Skaffold", "scrapeId": "82f69ca2-198e-401f-acfb-690b92a70494", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v2beta20", "url": "https://skaffold.dev/docs/references/yaml/?version=v2beta20", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I tip in skaffold?\n\nAssistant: To tip in skaffold, here's what you do:\nThe Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based validation, diagnostics, quick documentation, code completions, and snippets, that can make it easier to create and edit these files. You can now navigate the skaffold.yaml reference from an inner element to its upper levels using the tooltip that appears on hover, clicking on the parent element you want to go..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v2beta20", "title": "skaffold.yaml", "description": "Documentation for configuring and using skaffold.yaml files in Cloud Code IDE extensions.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:21:57", "type": "section_detail", "page_metadata": {"language": "en", "generator": "Hugo 0.99.1", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "og:site_name": "Skaffold", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:type": "website", "og:url": "https://skaffold.dev/docs/references/yaml/", "og:title": "skaffold.yaml", "ogSiteName": "Skaffold", "ogTitle": "skaffold.yaml", "twitter:title": "skaffold.yaml", "robots": "index, follow", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "og:description": "Easy and Repeatable Container & Kubernetes Development", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "twitter:card": "summary", "title": "skaffold.yaml | Skaffold", "scrapeId": "82f69ca2-198e-401f-acfb-690b92a70494", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v2beta20", "url": "https://skaffold.dev/docs/references/yaml/?version=v2beta20", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I yaml anchors in skaffold?\n\nAssistant: To yaml anchors in skaffold, here's what you do:\nAnchors can be defined by having top-level keys starting with a dot, e.g. .common_stuff: &alias_name. You can then reuse the value using *alias_name..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v2beta20", "title": "skaffold.yaml", "description": "Documentation for configuring and using skaffold.yaml files in Cloud Code IDE extensions.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:21:57", "type": "section_detail", "page_metadata": {"language": "en", "generator": "Hugo 0.99.1", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "og:site_name": "Skaffold", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:type": "website", "og:url": "https://skaffold.dev/docs/references/yaml/", "og:title": "skaffold.yaml", "ogSiteName": "Skaffold", "ogTitle": "skaffold.yaml", "twitter:title": "skaffold.yaml", "robots": "index, follow", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "og:description": "Easy and Repeatable Container & Kubernetes Development", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "twitter:card": "summary", "title": "skaffold.yaml | Skaffold", "scrapeId": "82f69ca2-198e-401f-acfb-690b92a70494", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v2beta20", "url": "https://skaffold.dev/docs/references/yaml/?version=v2beta20", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I organizing multiple configurations in skaffold?\n\nAssistant: To organizing multiple configurations in skaffold, here's what you do:\nMultiple configurations can define dependencies on each other to construct an arbitrarily nested tree of project component dependencies. Management of multiple configurations can be simplified by grouping them together in the same file (separated by --- in YAML)..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v2beta20", "title": "skaffold.yaml", "description": "Documentation for configuring and using skaffold.yaml files in Cloud Code IDE extensions.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:21:57", "type": "section_detail", "page_metadata": {"language": "en", "generator": "Hugo 0.99.1", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "og:site_name": "Skaffold", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:type": "website", "og:url": "https://skaffold.dev/docs/references/yaml/", "og:title": "skaffold.yaml", "ogSiteName": "Skaffold", "ogTitle": "skaffold.yaml", "twitter:title": "skaffold.yaml", "robots": "index, follow", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "og:description": "Easy and Repeatable Container & Kubernetes Development", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "twitter:card": "summary", "title": "skaffold.yaml | Skaffold", "scrapeId": "82f69ca2-198e-401f-acfb-690b92a70494", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v2beta20", "url": "https://skaffold.dev/docs/references/yaml/?version=v2beta20", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: What are some tips for using skaffold.yaml in skaffold effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nUse Cloud Code IDE extensions for authoring assistance with skaffold.yaml files.\n\nUtilize YAML anchors for reusing values in configurations.\n\nGroup multiple configurations in the same file for better management.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v2beta20", "title": "skaffold.yaml", "description": "Documentation for configuring and using skaffold.yaml files in Cloud Code IDE extensions.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:21:57", "type": "best_practices", "page_metadata": {"language": "en", "generator": "Hugo 0.99.1", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "og:site_name": "Skaffold", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:type": "website", "og:url": "https://skaffold.dev/docs/references/yaml/", "og:title": "skaffold.yaml", "ogSiteName": "Skaffold", "ogTitle": "skaffold.yaml", "twitter:title": "skaffold.yaml", "robots": "index, follow", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "og:description": "Easy and Repeatable Container & Kubernetes Development", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "twitter:card": "summary", "title": "skaffold.yaml | Skaffold", "scrapeId": "82f69ca2-198e-401f-acfb-690b92a70494", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v2beta20", "url": "https://skaffold.dev/docs/references/yaml/?version=v2beta20", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what skaffold.yaml is in skaffold?\n\nAssistant: Sure, I'd be happy to explain skaffold.yaml in skaffold.\n\n# skaffold.yaml\n\nThis page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and organization of configurations.Here's a quick rundown of what this is about:\n\n## YAML anchors\n\nAnchors can be defined by having top-level keys starting with a dot, e.g. `.common_stuff: &alias_name`. You can then reuse the value using `*alias_name`.\n\n## Organizing multiple configurations\n\nMultiple configurations can define dependencies on each other to construct an arbitrarily nested tree of project component dependencies. Management of multiple configurations can be simplified by grouping them together in the same file (separated by --- in YAML).\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v1beta3", "title": "skaffold.yaml", "description": "This page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and organization of configurations.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 04:22:27", "type": "overview", "page_metadata": {"favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogSiteName": "Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:url": "https://skaffold.dev/docs/references/yaml/", "og:type": "website", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "og:description": "Easy and Repeatable Container & Kubernetes Development", "generator": "Hugo 0.99.1", "twitter:card": "summary", "twitter:title": "skaffold.yaml", "og:site_name": "Skaffold", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "title": "skaffold.yaml | Skaffold", "language": "en", "ogTitle": "skaffold.yaml", "og:title": "skaffold.yaml", "robots": "index, follow", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "scrapeId": "4e7d0cd8-35e0-4dd3-8a6d-1bfdc0a50da2", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v1beta3", "url": "https://skaffold.dev/docs/references/yaml/?version=v1beta3", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I yaml anchors in skaffold?\n\nAssistant: To yaml anchors in skaffold, here's what you do:\nAnchors can be defined by having top-level keys starting with a dot, e.g. `.common_stuff: &alias_name`. You can then reuse the value using `*alias_name`..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v1beta3", "title": "skaffold.yaml", "description": "This page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and organization of configurations.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 04:22:27", "type": "section_detail", "page_metadata": {"favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogSiteName": "Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:url": "https://skaffold.dev/docs/references/yaml/", "og:type": "website", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "og:description": "Easy and Repeatable Container & Kubernetes Development", "generator": "Hugo 0.99.1", "twitter:card": "summary", "twitter:title": "skaffold.yaml", "og:site_name": "Skaffold", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "title": "skaffold.yaml | Skaffold", "language": "en", "ogTitle": "skaffold.yaml", "og:title": "skaffold.yaml", "robots": "index, follow", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "scrapeId": "4e7d0cd8-35e0-4dd3-8a6d-1bfdc0a50da2", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v1beta3", "url": "https://skaffold.dev/docs/references/yaml/?version=v1beta3", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I organizing multiple configurations in skaffold?\n\nAssistant: To organizing multiple configurations in skaffold, here's what you do:\nMultiple configurations can define dependencies on each other to construct an arbitrarily nested tree of project component dependencies. Management of multiple configurations can be simplified by grouping them together in the same file (separated by --- in YAML)..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v1beta3", "title": "skaffold.yaml", "description": "This page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and organization of configurations.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 04:22:27", "type": "section_detail", "page_metadata": {"favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogSiteName": "Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:url": "https://skaffold.dev/docs/references/yaml/", "og:type": "website", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "og:description": "Easy and Repeatable Container & Kubernetes Development", "generator": "Hugo 0.99.1", "twitter:card": "summary", "twitter:title": "skaffold.yaml", "og:site_name": "Skaffold", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "title": "skaffold.yaml | Skaffold", "language": "en", "ogTitle": "skaffold.yaml", "og:title": "skaffold.yaml", "robots": "index, follow", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "scrapeId": "4e7d0cd8-35e0-4dd3-8a6d-1bfdc0a50da2", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v1beta3", "url": "https://skaffold.dev/docs/references/yaml/?version=v1beta3", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: What are some tips for using skaffold.yaml in skaffold effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nThe Cloud Code IDE extensions provide authoring assistance for `skaffold.yaml` files in the form of schema based validation, diagnostics, quick documentation, code completions, and snippets, that can make it easier to create and edit these files.\n\nYou can navigate the `skaffold.yaml` reference from an inner element to its upper levels using the tooltip that appears on hover, clicking on the parent element you want to go.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v1beta3", "title": "skaffold.yaml", "description": "This page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and organization of configurations.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 04:22:27", "type": "best_practices", "page_metadata": {"favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogSiteName": "Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:url": "https://skaffold.dev/docs/references/yaml/", "og:type": "website", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "og:description": "Easy and Repeatable Container & Kubernetes Development", "generator": "Hugo 0.99.1", "twitter:card": "summary", "twitter:title": "skaffold.yaml", "og:site_name": "Skaffold", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "title": "skaffold.yaml | Skaffold", "language": "en", "ogTitle": "skaffold.yaml", "og:title": "skaffold.yaml", "robots": "index, follow", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "scrapeId": "4e7d0cd8-35e0-4dd3-8a6d-1bfdc0a50da2", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v1beta3", "url": "https://skaffold.dev/docs/references/yaml/?version=v1beta3", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what skaffold.yaml is in skaffold?\n\nAssistant: Sure, I'd be happy to explain skaffold.yaml in skaffold.\n\n# skaffold.yaml\n\nThis page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and configuration management.Here's a quick rundown of what this is about:\n\n## YAML anchors\n\nAnchors can be defined by having top-level keys starting with a dot, e.g. `.common_stuff: &alias_name`. You can then reuse the value using `*alias_name`.\n\n## Organizing multiple configurations\n\nMultiple configurations can define dependencies on each other to construct an arbitrarily nested tree of project component dependencies. Management of multiple configurations can be simplified by grouping them together in the same file (separated by --- in YAML).\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v2beta3", "title": "skaffold.yaml", "description": "This page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and configuration management.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 04:22:32", "type": "overview", "page_metadata": {"ogSiteName": "Skaffold", "og:url": "https://skaffold.dev/docs/references/yaml/", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "title": "skaffold.yaml | Skaffold", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "ogTitle": "skaffold.yaml", "og:description": "Easy and Repeatable Container & Kubernetes Development", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "robots": "index, follow", "og:title": "skaffold.yaml", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "generator": "Hugo 0.99.1", "twitter:card": "summary", "og:site_name": "Skaffold", "twitter:title": "skaffold.yaml", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "language": "en", "og:type": "website", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "scrapeId": "6f54fb88-c1c5-4ac4-b7e3-bd7b6046fec4", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v2beta3", "url": "https://skaffold.dev/docs/references/yaml/?version=v2beta3", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I yaml anchors in skaffold?\n\nAssistant: To yaml anchors in skaffold, here's what you do:\nAnchors can be defined by having top-level keys starting with a dot, e.g. `.common_stuff: &alias_name`. You can then reuse the value using `*alias_name`..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v2beta3", "title": "skaffold.yaml", "description": "This page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and configuration management.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 04:22:32", "type": "section_detail", "page_metadata": {"ogSiteName": "Skaffold", "og:url": "https://skaffold.dev/docs/references/yaml/", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "title": "skaffold.yaml | Skaffold", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "ogTitle": "skaffold.yaml", "og:description": "Easy and Repeatable Container & Kubernetes Development", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "robots": "index, follow", "og:title": "skaffold.yaml", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "generator": "Hugo 0.99.1", "twitter:card": "summary", "og:site_name": "Skaffold", "twitter:title": "skaffold.yaml", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "language": "en", "og:type": "website", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "scrapeId": "6f54fb88-c1c5-4ac4-b7e3-bd7b6046fec4", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v2beta3", "url": "https://skaffold.dev/docs/references/yaml/?version=v2beta3", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I organizing multiple configurations in skaffold?\n\nAssistant: To organizing multiple configurations in skaffold, here's what you do:\nMultiple configurations can define dependencies on each other to construct an arbitrarily nested tree of project component dependencies. Management of multiple configurations can be simplified by grouping them together in the same file (separated by --- in YAML)..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v2beta3", "title": "skaffold.yaml", "description": "This page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and configuration management.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 04:22:32", "type": "section_detail", "page_metadata": {"ogSiteName": "Skaffold", "og:url": "https://skaffold.dev/docs/references/yaml/", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "title": "skaffold.yaml | Skaffold", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "ogTitle": "skaffold.yaml", "og:description": "Easy and Repeatable Container & Kubernetes Development", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "robots": "index, follow", "og:title": "skaffold.yaml", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "generator": "Hugo 0.99.1", "twitter:card": "summary", "og:site_name": "Skaffold", "twitter:title": "skaffold.yaml", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "language": "en", "og:type": "website", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "scrapeId": "6f54fb88-c1c5-4ac4-b7e3-bd7b6046fec4", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v2beta3", "url": "https://skaffold.dev/docs/references/yaml/?version=v2beta3", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: What are some tips for using skaffold.yaml in skaffold effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nThe Cloud Code IDE extensions provide authoring assistance for skaffold.yaml files in the form of schema based validation, diagnostics, quick documentation, code completions, and snippets, that can make it easier to create and edit these files.\n\nYou can navigate the skaffold.yaml reference from an inner element to its upper levels using the tooltip that appears on hover, clicking on the parent element you want to go.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v2beta3", "title": "skaffold.yaml", "description": "This page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and configuration management.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 04:22:32", "type": "best_practices", "page_metadata": {"ogSiteName": "Skaffold", "og:url": "https://skaffold.dev/docs/references/yaml/", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "title": "skaffold.yaml | Skaffold", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "ogTitle": "skaffold.yaml", "og:description": "Easy and Repeatable Container & Kubernetes Development", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "robots": "index, follow", "og:title": "skaffold.yaml", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "generator": "Hugo 0.99.1", "twitter:card": "summary", "og:site_name": "Skaffold", "twitter:title": "skaffold.yaml", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "language": "en", "og:type": "website", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "scrapeId": "6f54fb88-c1c5-4ac4-b7e3-bd7b6046fec4", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v2beta3", "url": "https://skaffold.dev/docs/references/yaml/?version=v2beta3", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what skaffold.yaml is in skaffold?\n\nAssistant: Sure, I'd be happy to explain skaffold.yaml in skaffold.\n\n# skaffold.yaml\n\nDocumentation for configuring and using skaffold.yaml files in Cloud Code IDE.Here's a quick rundown of what this is about:\n\n## Tip\n\nThe Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based validation, diagnostics, quick documentation, code completions, and snippets, that can make it easier to create and edit these files. You can now navigate the skaffold.yaml reference from an inner element to its upper levels using the tooltip that appears on hover, clicking on the parent element you want to go.\n\n## YAML anchors\n\nAnchors can be defined by having top-level keys starting with a dot, e.g. .common_stuff: &alias_name. You can then reuse the value using *alias_name.\n\n## Organizing multiple configurations\n\nMultiple configurations can define dependencies on each other to construct an arbitrarily nested tree of project component dependencies. Management of multiple configurations can be simplified by grouping them together in the same file (separated by --- in YAML).\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v2beta15", "title": "skaffold.yaml", "description": "Documentation for configuring and using skaffold.yaml files in Cloud Code IDE.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:22:43", "type": "overview", "page_metadata": {"favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "twitter:card": "summary", "og:title": "skaffold.yaml", "ogSiteName": "Skaffold", "og:url": "https://skaffold.dev/docs/references/yaml/", "og:description": "Easy and Repeatable Container & Kubernetes Development", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "twitter:title": "skaffold.yaml", "generator": "Hugo 0.99.1", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "language": "en", "robots": "index, follow", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "title": "skaffold.yaml | Skaffold", "ogTitle": "skaffold.yaml", "og:site_name": "Skaffold", "og:type": "website", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "scrapeId": "d4e81c54-7dee-43d3-b8eb-cb5d1b34f547", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v2beta15", "url": "https://skaffold.dev/docs/references/yaml/?version=v2beta15", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I tip in skaffold?\n\nAssistant: To tip in skaffold, here's what you do:\nThe Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based validation, diagnostics, quick documentation, code completions, and snippets, that can make it easier to create and edit these files. You can now navigate the skaffold.yaml reference from an inner element to its upper levels using the tooltip that appears on hover, clicking on the parent element you want to go..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v2beta15", "title": "skaffold.yaml", "description": "Documentation for configuring and using skaffold.yaml files in Cloud Code IDE.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:22:43", "type": "section_detail", "page_metadata": {"favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "twitter:card": "summary", "og:title": "skaffold.yaml", "ogSiteName": "Skaffold", "og:url": "https://skaffold.dev/docs/references/yaml/", "og:description": "Easy and Repeatable Container & Kubernetes Development", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "twitter:title": "skaffold.yaml", "generator": "Hugo 0.99.1", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "language": "en", "robots": "index, follow", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "title": "skaffold.yaml | Skaffold", "ogTitle": "skaffold.yaml", "og:site_name": "Skaffold", "og:type": "website", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "scrapeId": "d4e81c54-7dee-43d3-b8eb-cb5d1b34f547", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v2beta15", "url": "https://skaffold.dev/docs/references/yaml/?version=v2beta15", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I yaml anchors in skaffold?\n\nAssistant: To yaml anchors in skaffold, here's what you do:\nAnchors can be defined by having top-level keys starting with a dot, e.g. .common_stuff: &alias_name. You can then reuse the value using *alias_name..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v2beta15", "title": "skaffold.yaml", "description": "Documentation for configuring and using skaffold.yaml files in Cloud Code IDE.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:22:43", "type": "section_detail", "page_metadata": {"favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "twitter:card": "summary", "og:title": "skaffold.yaml", "ogSiteName": "Skaffold", "og:url": "https://skaffold.dev/docs/references/yaml/", "og:description": "Easy and Repeatable Container & Kubernetes Development", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "twitter:title": "skaffold.yaml", "generator": "Hugo 0.99.1", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "language": "en", "robots": "index, follow", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "title": "skaffold.yaml | Skaffold", "ogTitle": "skaffold.yaml", "og:site_name": "Skaffold", "og:type": "website", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "scrapeId": "d4e81c54-7dee-43d3-b8eb-cb5d1b34f547", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v2beta15", "url": "https://skaffold.dev/docs/references/yaml/?version=v2beta15", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I organizing multiple configurations in skaffold?\n\nAssistant: To organizing multiple configurations in skaffold, here's what you do:\nMultiple configurations can define dependencies on each other to construct an arbitrarily nested tree of project component dependencies. Management of multiple configurations can be simplified by grouping them together in the same file (separated by --- in YAML)..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v2beta15", "title": "skaffold.yaml", "description": "Documentation for configuring and using skaffold.yaml files in Cloud Code IDE.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:22:43", "type": "section_detail", "page_metadata": {"favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "twitter:card": "summary", "og:title": "skaffold.yaml", "ogSiteName": "Skaffold", "og:url": "https://skaffold.dev/docs/references/yaml/", "og:description": "Easy and Repeatable Container & Kubernetes Development", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "twitter:title": "skaffold.yaml", "generator": "Hugo 0.99.1", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "language": "en", "robots": "index, follow", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "title": "skaffold.yaml | Skaffold", "ogTitle": "skaffold.yaml", "og:site_name": "Skaffold", "og:type": "website", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "scrapeId": "d4e81c54-7dee-43d3-b8eb-cb5d1b34f547", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v2beta15", "url": "https://skaffold.dev/docs/references/yaml/?version=v2beta15", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: What are some tips for using skaffold.yaml in skaffold effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nUse Cloud Code IDE extensions for authoring assistance with skaffold.yaml files.\n\nUtilize YAML anchors for reusing values in configurations.\n\nGroup multiple configurations in the same file for better management.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v2beta15", "title": "skaffold.yaml", "description": "Documentation for configuring and using skaffold.yaml files in Cloud Code IDE.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:22:43", "type": "best_practices", "page_metadata": {"favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "twitter:card": "summary", "og:title": "skaffold.yaml", "ogSiteName": "Skaffold", "og:url": "https://skaffold.dev/docs/references/yaml/", "og:description": "Easy and Repeatable Container & Kubernetes Development", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "twitter:title": "skaffold.yaml", "generator": "Hugo 0.99.1", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "language": "en", "robots": "index, follow", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "title": "skaffold.yaml | Skaffold", "ogTitle": "skaffold.yaml", "og:site_name": "Skaffold", "og:type": "website", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "scrapeId": "d4e81c54-7dee-43d3-b8eb-cb5d1b34f547", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v2beta15", "url": "https://skaffold.dev/docs/references/yaml/?version=v2beta15", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what skaffold.yaml is in skaffold?\n\nAssistant: Sure, I'd be happy to explain skaffold.yaml in skaffold.\n\n# skaffold.yaml\n\nDocumentation for configuring and using skaffold.yaml files in Cloud Code IDE.Here's a quick rundown of what this is about:\n\n## Tip\n\nThe Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based validation, diagnostics, quick documentation, code completions, and snippets, that can make it easier to create and edit these files. You can now navigate the skaffold.yaml reference from an inner element to its upper levels using the tooltip that appears on hover, clicking on the parent element you want to go.\n\n## YAML anchors\n\nAnchors can be defined by having top-level keys starting with a dot, e.g. .common_stuff: &alias_name. You can then reuse the value using *alias_name.\n\n## Organizing multiple configurations\n\nMultiple configurations can define dependencies on each other to construct an arbitrarily nested tree of project component dependencies. Management of multiple configurations can be simplified by grouping them together in the same file (separated by --- in YAML).\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v2beta2", "title": "skaffold.yaml", "description": "Documentation for configuring and using skaffold.yaml files in Cloud Code IDE.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:23:10", "type": "overview", "page_metadata": {"og:url": "https://skaffold.dev/docs/references/yaml/", "language": "en", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "robots": "index, follow", "og:type": "website", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "ogTitle": "skaffold.yaml", "title": "skaffold.yaml | Skaffold", "generator": "Hugo 0.99.1", "og:description": "Easy and Repeatable Container & Kubernetes Development", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "og:site_name": "Skaffold", "twitter:title": "skaffold.yaml", "ogSiteName": "Skaffold", "og:title": "skaffold.yaml", "twitter:card": "summary", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "scrapeId": "d04d3687-22f1-48a6-b831-b18f4b84c106", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v2beta2", "url": "https://skaffold.dev/docs/references/yaml/?version=v2beta2", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I tip in skaffold?\n\nAssistant: To tip in skaffold, here's what you do:\nThe Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based validation, diagnostics, quick documentation, code completions, and snippets, that can make it easier to create and edit these files. You can now navigate the skaffold.yaml reference from an inner element to its upper levels using the tooltip that appears on hover, clicking on the parent element you want to go..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v2beta2", "title": "skaffold.yaml", "description": "Documentation for configuring and using skaffold.yaml files in Cloud Code IDE.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:23:10", "type": "section_detail", "page_metadata": {"og:url": "https://skaffold.dev/docs/references/yaml/", "language": "en", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "robots": "index, follow", "og:type": "website", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "ogTitle": "skaffold.yaml", "title": "skaffold.yaml | Skaffold", "generator": "Hugo 0.99.1", "og:description": "Easy and Repeatable Container & Kubernetes Development", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "og:site_name": "Skaffold", "twitter:title": "skaffold.yaml", "ogSiteName": "Skaffold", "og:title": "skaffold.yaml", "twitter:card": "summary", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "scrapeId": "d04d3687-22f1-48a6-b831-b18f4b84c106", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v2beta2", "url": "https://skaffold.dev/docs/references/yaml/?version=v2beta2", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I yaml anchors in skaffold?\n\nAssistant: To yaml anchors in skaffold, here's what you do:\nAnchors can be defined by having top-level keys starting with a dot, e.g. .common_stuff: &alias_name. You can then reuse the value using *alias_name..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v2beta2", "title": "skaffold.yaml", "description": "Documentation for configuring and using skaffold.yaml files in Cloud Code IDE.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:23:10", "type": "section_detail", "page_metadata": {"og:url": "https://skaffold.dev/docs/references/yaml/", "language": "en", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "robots": "index, follow", "og:type": "website", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "ogTitle": "skaffold.yaml", "title": "skaffold.yaml | Skaffold", "generator": "Hugo 0.99.1", "og:description": "Easy and Repeatable Container & Kubernetes Development", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "og:site_name": "Skaffold", "twitter:title": "skaffold.yaml", "ogSiteName": "Skaffold", "og:title": "skaffold.yaml", "twitter:card": "summary", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "scrapeId": "d04d3687-22f1-48a6-b831-b18f4b84c106", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v2beta2", "url": "https://skaffold.dev/docs/references/yaml/?version=v2beta2", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I organizing multiple configurations in skaffold?\n\nAssistant: To organizing multiple configurations in skaffold, here's what you do:\nMultiple configurations can define dependencies on each other to construct an arbitrarily nested tree of project component dependencies. Management of multiple configurations can be simplified by grouping them together in the same file (separated by --- in YAML)..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v2beta2", "title": "skaffold.yaml", "description": "Documentation for configuring and using skaffold.yaml files in Cloud Code IDE.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:23:10", "type": "section_detail", "page_metadata": {"og:url": "https://skaffold.dev/docs/references/yaml/", "language": "en", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "robots": "index, follow", "og:type": "website", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "ogTitle": "skaffold.yaml", "title": "skaffold.yaml | Skaffold", "generator": "Hugo 0.99.1", "og:description": "Easy and Repeatable Container & Kubernetes Development", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "og:site_name": "Skaffold", "twitter:title": "skaffold.yaml", "ogSiteName": "Skaffold", "og:title": "skaffold.yaml", "twitter:card": "summary", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "scrapeId": "d04d3687-22f1-48a6-b831-b18f4b84c106", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v2beta2", "url": "https://skaffold.dev/docs/references/yaml/?version=v2beta2", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: What are some tips for using skaffold.yaml in skaffold effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nUse Cloud Code IDE extensions for authoring assistance with skaffold.yaml files.\n\nUtilize YAML anchors for reusing values in configurations.\n\nGroup multiple configurations in the same file for better management.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v2beta2", "title": "skaffold.yaml", "description": "Documentation for configuring and using skaffold.yaml files in Cloud Code IDE.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:23:10", "type": "best_practices", "page_metadata": {"og:url": "https://skaffold.dev/docs/references/yaml/", "language": "en", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "robots": "index, follow", "og:type": "website", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "ogTitle": "skaffold.yaml", "title": "skaffold.yaml | Skaffold", "generator": "Hugo 0.99.1", "og:description": "Easy and Repeatable Container & Kubernetes Development", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "og:site_name": "Skaffold", "twitter:title": "skaffold.yaml", "ogSiteName": "Skaffold", "og:title": "skaffold.yaml", "twitter:card": "summary", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "scrapeId": "d04d3687-22f1-48a6-b831-b18f4b84c106", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v2beta2", "url": "https://skaffold.dev/docs/references/yaml/?version=v2beta2", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what skaffold.yaml is in skaffold?\n\nAssistant: Sure, I'd be happy to explain skaffold.yaml in skaffold.\n\n# skaffold.yaml\n\nDocumentation for the skaffold.yaml configuration file used in Skaffold.Here's a quick rundown of what this is about:\n\n## Tip\n\nThe Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based validation, diagnostics, quick documentation, code completions, and snippets, that can make it easier to create and edit these files. You can now navigate the skaffold.yaml reference from an inner element to its upper levels using the tooltip that appears on hover, clicking on the parent element you want to go.\n\n## Note\n\nImportant: To use this schema, you need Skaffold version v2.0.0 or later. Release Notes.\n\n## YAML anchors\n\nAnchors can be defined by having top-level keys starting with a dot, e.g. .common_stuff: &alias_name. You can then reuse the value using *alias_name.\n\n## Organizing multiple configurations\n\nMultiple configurations can define dependencies on each other to construct an arbitrarily nested tree of project component dependencies. Management of multiple configurations can be simplified by grouping them together in the same file (separated by --- in YAML). Last modified January 23, 2025: release: v2.14.0 (#9668) (f132ab25).\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v3", "title": "skaffold.yaml", "description": "Documentation for the skaffold.yaml configuration file used in Skaffold.", "has_code_examples": false, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 04:24:18", "type": "overview", "page_metadata": {"ogUrl": "https://skaffold.dev/docs/references/yaml/", "og:description": "Easy and Repeatable Container & Kubernetes Development", "title": "skaffold.yaml | Skaffold", "twitter:card": "summary", "og:title": "skaffold.yaml", "ogSiteName": "Skaffold", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "og:site_name": "Skaffold", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "twitter:title": "skaffold.yaml", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:url": "https://skaffold.dev/docs/references/yaml/", "og:type": "website", "generator": "Hugo 0.99.1", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "robots": "index, follow", "ogTitle": "skaffold.yaml", "language": "en", "scrapeId": "6dbc76d5-3928-4f73-b1ec-7e93177c0483", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v3", "url": "https://skaffold.dev/docs/references/yaml/?version=v3", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I tip in skaffold?\n\nAssistant: To tip in skaffold, here's what you do:\nThe Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based validation, diagnostics, quick documentation, code completions, and snippets, that can make it easier to create and edit these files. You can now navigate the skaffold.yaml reference from an inner element to its upper levels using the tooltip that appears on hover, clicking on the parent element you want to go..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v3", "title": "skaffold.yaml", "description": "Documentation for the skaffold.yaml configuration file used in Skaffold.", "has_code_examples": false, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 04:24:18", "type": "section_detail", "page_metadata": {"ogUrl": "https://skaffold.dev/docs/references/yaml/", "og:description": "Easy and Repeatable Container & Kubernetes Development", "title": "skaffold.yaml | Skaffold", "twitter:card": "summary", "og:title": "skaffold.yaml", "ogSiteName": "Skaffold", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "og:site_name": "Skaffold", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "twitter:title": "skaffold.yaml", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:url": "https://skaffold.dev/docs/references/yaml/", "og:type": "website", "generator": "Hugo 0.99.1", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "robots": "index, follow", "ogTitle": "skaffold.yaml", "language": "en", "scrapeId": "6dbc76d5-3928-4f73-b1ec-7e93177c0483", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v3", "url": "https://skaffold.dev/docs/references/yaml/?version=v3", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I note in skaffold?\n\nAssistant: To note in skaffold, here's what you do:\nImportant: To use this schema, you need Skaffold version v2.0.0 or later. Release Notes..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v3", "title": "skaffold.yaml", "description": "Documentation for the skaffold.yaml configuration file used in Skaffold.", "has_code_examples": false, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 04:24:18", "type": "section_detail", "page_metadata": {"ogUrl": "https://skaffold.dev/docs/references/yaml/", "og:description": "Easy and Repeatable Container & Kubernetes Development", "title": "skaffold.yaml | Skaffold", "twitter:card": "summary", "og:title": "skaffold.yaml", "ogSiteName": "Skaffold", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "og:site_name": "Skaffold", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "twitter:title": "skaffold.yaml", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:url": "https://skaffold.dev/docs/references/yaml/", "og:type": "website", "generator": "Hugo 0.99.1", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "robots": "index, follow", "ogTitle": "skaffold.yaml", "language": "en", "scrapeId": "6dbc76d5-3928-4f73-b1ec-7e93177c0483", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v3", "url": "https://skaffold.dev/docs/references/yaml/?version=v3", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I yaml anchors in skaffold?\n\nAssistant: To yaml anchors in skaffold, here's what you do:\nAnchors can be defined by having top-level keys starting with a dot, e.g. .common_stuff: &alias_name. You can then reuse the value using *alias_name..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v3", "title": "skaffold.yaml", "description": "Documentation for the skaffold.yaml configuration file used in Skaffold.", "has_code_examples": false, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 04:24:18", "type": "section_detail", "page_metadata": {"ogUrl": "https://skaffold.dev/docs/references/yaml/", "og:description": "Easy and Repeatable Container & Kubernetes Development", "title": "skaffold.yaml | Skaffold", "twitter:card": "summary", "og:title": "skaffold.yaml", "ogSiteName": "Skaffold", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "og:site_name": "Skaffold", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "twitter:title": "skaffold.yaml", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:url": "https://skaffold.dev/docs/references/yaml/", "og:type": "website", "generator": "Hugo 0.99.1", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "robots": "index, follow", "ogTitle": "skaffold.yaml", "language": "en", "scrapeId": "6dbc76d5-3928-4f73-b1ec-7e93177c0483", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v3", "url": "https://skaffold.dev/docs/references/yaml/?version=v3", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I organizing multiple configurations in skaffold?\n\nAssistant: To organizing multiple configurations in skaffold, here's what you do:\nMultiple configurations can define dependencies on each other to construct an arbitrarily nested tree of project component dependencies. Management of multiple configurations can be simplified by grouping them together in the same file (separated by --- in YAML). Last modified January 23, 2025: release: v2.14.0 (#9668) (f132ab25)..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v3", "title": "skaffold.yaml", "description": "Documentation for the skaffold.yaml configuration file used in Skaffold.", "has_code_examples": false, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 04:24:18", "type": "section_detail", "page_metadata": {"ogUrl": "https://skaffold.dev/docs/references/yaml/", "og:description": "Easy and Repeatable Container & Kubernetes Development", "title": "skaffold.yaml | Skaffold", "twitter:card": "summary", "og:title": "skaffold.yaml", "ogSiteName": "Skaffold", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "og:site_name": "Skaffold", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "twitter:title": "skaffold.yaml", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:url": "https://skaffold.dev/docs/references/yaml/", "og:type": "website", "generator": "Hugo 0.99.1", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "robots": "index, follow", "ogTitle": "skaffold.yaml", "language": "en", "scrapeId": "6dbc76d5-3928-4f73-b1ec-7e93177c0483", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v3", "url": "https://skaffold.dev/docs/references/yaml/?version=v3", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: What are some tips for using skaffold.yaml in skaffold effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nUse Cloud Code IDE extensions for authoring assistance with skaffold.yaml files.\n\nEnsure you are using Skaffold version v2.0.0 or later to utilize the schema.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v3", "title": "skaffold.yaml", "description": "Documentation for the skaffold.yaml configuration file used in Skaffold.", "has_code_examples": false, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 04:24:18", "type": "best_practices", "page_metadata": {"ogUrl": "https://skaffold.dev/docs/references/yaml/", "og:description": "Easy and Repeatable Container & Kubernetes Development", "title": "skaffold.yaml | Skaffold", "twitter:card": "summary", "og:title": "skaffold.yaml", "ogSiteName": "Skaffold", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "og:site_name": "Skaffold", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "twitter:title": "skaffold.yaml", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:url": "https://skaffold.dev/docs/references/yaml/", "og:type": "website", "generator": "Hugo 0.99.1", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "robots": "index, follow", "ogTitle": "skaffold.yaml", "language": "en", "scrapeId": "6dbc76d5-3928-4f73-b1ec-7e93177c0483", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v3", "url": "https://skaffold.dev/docs/references/yaml/?version=v3", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what skaffold.yaml is in skaffold?\n\nAssistant: Sure, I'd be happy to explain skaffold.yaml in skaffold.\n\n# skaffold.yaml\n\nThis page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and configuration management.Here's a quick rundown of what this is about:\n\n## YAML anchors\n\nAnchors can be defined by having top-level keys starting with a dot, e.g. `.common_stuff: &alias_name`. You can then reuse the value using `*alias_name`.\n\n## Organizing multiple configurations\n\nMultiple configurations can define dependencies on each other to construct an arbitrarily nested tree of project component dependencies. Management of multiple configurations can be simplified by grouping them together in the same file (separated by --- in YAML).\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v2beta29", "title": "skaffold.yaml", "description": "This page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and configuration management.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 04:24:35", "type": "overview", "page_metadata": {"ogSiteName": "Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "generator": "Hugo 0.99.1", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "og:site_name": "Skaffold", "twitter:card": "summary", "ogTitle": "skaffold.yaml", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "title": "skaffold.yaml | Skaffold", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "robots": "index, follow", "og:type": "website", "twitter:title": "skaffold.yaml", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "og:description": "Easy and Repeatable Container & Kubernetes Development", "og:title": "skaffold.yaml", "language": "en", "og:url": "https://skaffold.dev/docs/references/yaml/", "scrapeId": "ca13eeda-9e94-40b5-9662-b7b6e2839d3a", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v2beta29", "url": "https://skaffold.dev/docs/references/yaml/?version=v2beta29", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I yaml anchors in skaffold?\n\nAssistant: To yaml anchors in skaffold, here's what you do:\nAnchors can be defined by having top-level keys starting with a dot, e.g. `.common_stuff: &alias_name`. You can then reuse the value using `*alias_name`..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v2beta29", "title": "skaffold.yaml", "description": "This page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and configuration management.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 04:24:35", "type": "section_detail", "page_metadata": {"ogSiteName": "Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "generator": "Hugo 0.99.1", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "og:site_name": "Skaffold", "twitter:card": "summary", "ogTitle": "skaffold.yaml", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "title": "skaffold.yaml | Skaffold", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "robots": "index, follow", "og:type": "website", "twitter:title": "skaffold.yaml", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "og:description": "Easy and Repeatable Container & Kubernetes Development", "og:title": "skaffold.yaml", "language": "en", "og:url": "https://skaffold.dev/docs/references/yaml/", "scrapeId": "ca13eeda-9e94-40b5-9662-b7b6e2839d3a", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v2beta29", "url": "https://skaffold.dev/docs/references/yaml/?version=v2beta29", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I organizing multiple configurations in skaffold?\n\nAssistant: To organizing multiple configurations in skaffold, here's what you do:\nMultiple configurations can define dependencies on each other to construct an arbitrarily nested tree of project component dependencies. Management of multiple configurations can be simplified by grouping them together in the same file (separated by --- in YAML)..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v2beta29", "title": "skaffold.yaml", "description": "This page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and configuration management.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 04:24:35", "type": "section_detail", "page_metadata": {"ogSiteName": "Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "generator": "Hugo 0.99.1", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "og:site_name": "Skaffold", "twitter:card": "summary", "ogTitle": "skaffold.yaml", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "title": "skaffold.yaml | Skaffold", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "robots": "index, follow", "og:type": "website", "twitter:title": "skaffold.yaml", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "og:description": "Easy and Repeatable Container & Kubernetes Development", "og:title": "skaffold.yaml", "language": "en", "og:url": "https://skaffold.dev/docs/references/yaml/", "scrapeId": "ca13eeda-9e94-40b5-9662-b7b6e2839d3a", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v2beta29", "url": "https://skaffold.dev/docs/references/yaml/?version=v2beta29", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: What are some tips for using skaffold.yaml in skaffold effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nThe Cloud Code IDE extensions provide authoring assistance for `skaffold.yaml` files in the form of schema based validation, diagnostics, quick documentation, code completions, and snippets, that can make it easier to create and edit these files.\n\nYou can navigate the `skaffold.yaml` reference from an inner element to its upper levels using the tooltip that appears on hover, clicking on the parent element you want to go.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v2beta29", "title": "skaffold.yaml", "description": "This page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and configuration management.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 04:24:35", "type": "best_practices", "page_metadata": {"ogSiteName": "Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "generator": "Hugo 0.99.1", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "og:site_name": "Skaffold", "twitter:card": "summary", "ogTitle": "skaffold.yaml", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "title": "skaffold.yaml | Skaffold", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "robots": "index, follow", "og:type": "website", "twitter:title": "skaffold.yaml", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "og:description": "Easy and Repeatable Container & Kubernetes Development", "og:title": "skaffold.yaml", "language": "en", "og:url": "https://skaffold.dev/docs/references/yaml/", "scrapeId": "ca13eeda-9e94-40b5-9662-b7b6e2839d3a", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v2beta29", "url": "https://skaffold.dev/docs/references/yaml/?version=v2beta29", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what skaffold.yaml is in skaffold?\n\nAssistant: Sure, I'd be happy to explain skaffold.yaml in skaffold.\n\n# skaffold.yaml\n\nThis page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and configuration management.Here's a quick rundown of what this is about:\n\n## YAML anchors\n\nAnchors can be defined by having top-level keys starting with a dot, e.g. `.common_stuff: &alias_name`. You can then reuse the value using `*alias_name`.\n\n## Organizing multiple configurations\n\nMultiple configurations can define dependencies on each other to construct an arbitrarily nested tree of project component dependencies. Management of multiple configurations can be simplified by grouping them together in the same file (separated by --- in YAML).\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v1beta11", "title": "skaffold.yaml", "description": "This page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and configuration management.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 04:25:19", "type": "overview", "page_metadata": {"description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "language": "en", "ogTitle": "skaffold.yaml", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "generator": "Hugo 0.99.1", "robots": "index, follow", "twitter:title": "skaffold.yaml", "og:description": "Easy and Repeatable Container & Kubernetes Development", "og:url": "https://skaffold.dev/docs/references/yaml/", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "twitter:card": "summary", "og:site_name": "Skaffold", "og:type": "website", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogSiteName": "Skaffold", "title": "skaffold.yaml | Skaffold", "og:title": "skaffold.yaml", "scrapeId": "1cc46933-3821-4759-bbe0-3e791da7cb0b", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v1beta11", "url": "https://skaffold.dev/docs/references/yaml/?version=v1beta11", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I yaml anchors in skaffold?\n\nAssistant: To yaml anchors in skaffold, here's what you do:\nAnchors can be defined by having top-level keys starting with a dot, e.g. `.common_stuff: &alias_name`. You can then reuse the value using `*alias_name`..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v1beta11", "title": "skaffold.yaml", "description": "This page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and configuration management.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 04:25:19", "type": "section_detail", "page_metadata": {"description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "language": "en", "ogTitle": "skaffold.yaml", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "generator": "Hugo 0.99.1", "robots": "index, follow", "twitter:title": "skaffold.yaml", "og:description": "Easy and Repeatable Container & Kubernetes Development", "og:url": "https://skaffold.dev/docs/references/yaml/", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "twitter:card": "summary", "og:site_name": "Skaffold", "og:type": "website", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogSiteName": "Skaffold", "title": "skaffold.yaml | Skaffold", "og:title": "skaffold.yaml", "scrapeId": "1cc46933-3821-4759-bbe0-3e791da7cb0b", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v1beta11", "url": "https://skaffold.dev/docs/references/yaml/?version=v1beta11", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I organizing multiple configurations in skaffold?\n\nAssistant: To organizing multiple configurations in skaffold, here's what you do:\nMultiple configurations can define dependencies on each other to construct an arbitrarily nested tree of project component dependencies. Management of multiple configurations can be simplified by grouping them together in the same file (separated by --- in YAML)..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v1beta11", "title": "skaffold.yaml", "description": "This page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and configuration management.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 04:25:19", "type": "section_detail", "page_metadata": {"description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "language": "en", "ogTitle": "skaffold.yaml", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "generator": "Hugo 0.99.1", "robots": "index, follow", "twitter:title": "skaffold.yaml", "og:description": "Easy and Repeatable Container & Kubernetes Development", "og:url": "https://skaffold.dev/docs/references/yaml/", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "twitter:card": "summary", "og:site_name": "Skaffold", "og:type": "website", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogSiteName": "Skaffold", "title": "skaffold.yaml | Skaffold", "og:title": "skaffold.yaml", "scrapeId": "1cc46933-3821-4759-bbe0-3e791da7cb0b", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v1beta11", "url": "https://skaffold.dev/docs/references/yaml/?version=v1beta11", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: What are some tips for using skaffold.yaml in skaffold effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nThe Cloud Code IDE extensions provide authoring assistance for `skaffold.yaml` files in the form of schema based validation, diagnostics, quick documentation, code completions, and snippets, that can make it easier to create and edit these files.\n\nYou can navigate the `skaffold.yaml` reference from an inner element to its upper levels using the tooltip that appears on hover, clicking on the parent element you want to go.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v1beta11", "title": "skaffold.yaml", "description": "This page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and configuration management.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 04:25:19", "type": "best_practices", "page_metadata": {"description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "language": "en", "ogTitle": "skaffold.yaml", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "generator": "Hugo 0.99.1", "robots": "index, follow", "twitter:title": "skaffold.yaml", "og:description": "Easy and Repeatable Container & Kubernetes Development", "og:url": "https://skaffold.dev/docs/references/yaml/", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "twitter:card": "summary", "og:site_name": "Skaffold", "og:type": "website", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogSiteName": "Skaffold", "title": "skaffold.yaml | Skaffold", "og:title": "skaffold.yaml", "scrapeId": "1cc46933-3821-4759-bbe0-3e791da7cb0b", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v1beta11", "url": "https://skaffold.dev/docs/references/yaml/?version=v1beta11", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what skaffold.yaml is in skaffold?\n\nAssistant: Sure, I'd be happy to explain skaffold.yaml in skaffold.\n\n# skaffold.yaml\n\nDocumentation for the skaffold.yaml configuration file used in Skaffold.Here's a quick rundown of what this is about:\n\n## Tip\n\nThe Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based validation, diagnostics, quick documentation, code completions, and snippets, that can make it easier to create and edit these files. You can now navigate the skaffold.yaml reference from an inner element to its upper levels using the tooltip that appears on hover, clicking on the parent element you want to go.\n\n## YAML anchors\n\nAnchors can be defined by having top-level keys starting with a dot, e.g. .common_stuff: &alias_name. You can then reuse the value using *alias_name.\n\n## Organizing multiple configurations\n\nMultiple configurations can define dependencies on each other to construct an arbitrarily nested tree of project component dependencies. Management of multiple configurations can be simplified by grouping them together in the same file (separated by --- in YAML).\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v1beta1", "title": "skaffold.yaml", "description": "Documentation for the skaffold.yaml configuration file used in Skaffold.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:25:41", "type": "overview", "page_metadata": {"ogDescription": "Easy and Repeatable Container & Kubernetes Development", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "twitter:card": "summary", "twitter:title": "skaffold.yaml", "og:type": "website", "ogTitle": "skaffold.yaml", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "ogSiteName": "Skaffold", "og:title": "skaffold.yaml", "og:site_name": "Skaffold", "og:url": "https://skaffold.dev/docs/references/yaml/", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:description": "Easy and Repeatable Container & Kubernetes Development", "title": "skaffold.yaml | Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "robots": "index, follow", "language": "en", "generator": "Hugo 0.99.1", "scrapeId": "01ebf98a-fe62-4f5e-acf3-c4488a759e7d", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v1beta1", "url": "https://skaffold.dev/docs/references/yaml/?version=v1beta1", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I tip in skaffold?\n\nAssistant: To tip in skaffold, here's what you do:\nThe Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based validation, diagnostics, quick documentation, code completions, and snippets, that can make it easier to create and edit these files. You can now navigate the skaffold.yaml reference from an inner element to its upper levels using the tooltip that appears on hover, clicking on the parent element you want to go..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v1beta1", "title": "skaffold.yaml", "description": "Documentation for the skaffold.yaml configuration file used in Skaffold.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:25:41", "type": "section_detail", "page_metadata": {"ogDescription": "Easy and Repeatable Container & Kubernetes Development", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "twitter:card": "summary", "twitter:title": "skaffold.yaml", "og:type": "website", "ogTitle": "skaffold.yaml", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "ogSiteName": "Skaffold", "og:title": "skaffold.yaml", "og:site_name": "Skaffold", "og:url": "https://skaffold.dev/docs/references/yaml/", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:description": "Easy and Repeatable Container & Kubernetes Development", "title": "skaffold.yaml | Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "robots": "index, follow", "language": "en", "generator": "Hugo 0.99.1", "scrapeId": "01ebf98a-fe62-4f5e-acf3-c4488a759e7d", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v1beta1", "url": "https://skaffold.dev/docs/references/yaml/?version=v1beta1", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I yaml anchors in skaffold?\n\nAssistant: To yaml anchors in skaffold, here's what you do:\nAnchors can be defined by having top-level keys starting with a dot, e.g. .common_stuff: &alias_name. You can then reuse the value using *alias_name..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v1beta1", "title": "skaffold.yaml", "description": "Documentation for the skaffold.yaml configuration file used in Skaffold.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:25:41", "type": "section_detail", "page_metadata": {"ogDescription": "Easy and Repeatable Container & Kubernetes Development", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "twitter:card": "summary", "twitter:title": "skaffold.yaml", "og:type": "website", "ogTitle": "skaffold.yaml", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "ogSiteName": "Skaffold", "og:title": "skaffold.yaml", "og:site_name": "Skaffold", "og:url": "https://skaffold.dev/docs/references/yaml/", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:description": "Easy and Repeatable Container & Kubernetes Development", "title": "skaffold.yaml | Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "robots": "index, follow", "language": "en", "generator": "Hugo 0.99.1", "scrapeId": "01ebf98a-fe62-4f5e-acf3-c4488a759e7d", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v1beta1", "url": "https://skaffold.dev/docs/references/yaml/?version=v1beta1", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I organizing multiple configurations in skaffold?\n\nAssistant: To organizing multiple configurations in skaffold, here's what you do:\nMultiple configurations can define dependencies on each other to construct an arbitrarily nested tree of project component dependencies. Management of multiple configurations can be simplified by grouping them together in the same file (separated by --- in YAML)..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v1beta1", "title": "skaffold.yaml", "description": "Documentation for the skaffold.yaml configuration file used in Skaffold.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:25:41", "type": "section_detail", "page_metadata": {"ogDescription": "Easy and Repeatable Container & Kubernetes Development", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "twitter:card": "summary", "twitter:title": "skaffold.yaml", "og:type": "website", "ogTitle": "skaffold.yaml", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "ogSiteName": "Skaffold", "og:title": "skaffold.yaml", "og:site_name": "Skaffold", "og:url": "https://skaffold.dev/docs/references/yaml/", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:description": "Easy and Repeatable Container & Kubernetes Development", "title": "skaffold.yaml | Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "robots": "index, follow", "language": "en", "generator": "Hugo 0.99.1", "scrapeId": "01ebf98a-fe62-4f5e-acf3-c4488a759e7d", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v1beta1", "url": "https://skaffold.dev/docs/references/yaml/?version=v1beta1", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: What are some tips for using skaffold.yaml in skaffold effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nUse Cloud Code IDE extensions for authoring assistance with skaffold.yaml files.\n\nUtilize YAML anchors for reusing values in configurations.\n\nGroup multiple configurations in the same file for better management.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v1beta1", "title": "skaffold.yaml", "description": "Documentation for the skaffold.yaml configuration file used in Skaffold.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:25:41", "type": "best_practices", "page_metadata": {"ogDescription": "Easy and Repeatable Container & Kubernetes Development", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "twitter:card": "summary", "twitter:title": "skaffold.yaml", "og:type": "website", "ogTitle": "skaffold.yaml", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "ogSiteName": "Skaffold", "og:title": "skaffold.yaml", "og:site_name": "Skaffold", "og:url": "https://skaffold.dev/docs/references/yaml/", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:description": "Easy and Repeatable Container & Kubernetes Development", "title": "skaffold.yaml | Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "robots": "index, follow", "language": "en", "generator": "Hugo 0.99.1", "scrapeId": "01ebf98a-fe62-4f5e-acf3-c4488a759e7d", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v1beta1", "url": "https://skaffold.dev/docs/references/yaml/?version=v1beta1", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what skaffold.yaml is in skaffold?\n\nAssistant: Sure, I'd be happy to explain skaffold.yaml in skaffold.\n\n# skaffold.yaml\n\nThis page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and configuration management.Here's a quick rundown of what this is about:\n\n## Tip\n\nThe Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based validation, diagnostics, quick documentation, code completions, and snippets, that can make it easier to create and edit these files. You can now navigate the skaffold.yaml reference from an inner element to its upper levels using the tooltip that appears on hover, clicking on the parent element you want to go.\n\n## YAML anchors\n\nAnchors can be defined by having top-level keys starting with a dot, e.g. .common_stuff: &alias_name. You can then reuse the value using *alias_name.\n\n## Organizing multiple configurations\n\nMultiple configurations can define dependencies on each other to construct an arbitrarily nested tree of project component dependencies. Management of multiple configurations can be simplified by grouping them together in the same file (separated by --- in YAML).\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v2beta4", "title": "skaffold.yaml", "description": "This page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and configuration management.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:26:11", "type": "overview", "page_metadata": {"generator": "Hugo 0.99.1", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "twitter:card": "summary", "ogTitle": "skaffold.yaml", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:description": "Easy and Repeatable Container & Kubernetes Development", "ogSiteName": "Skaffold", "language": "en", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "twitter:title": "skaffold.yaml", "robots": "index, follow", "og:type": "website", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "og:url": "https://skaffold.dev/docs/references/yaml/", "title": "skaffold.yaml | Skaffold", "og:title": "skaffold.yaml", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "og:site_name": "Skaffold", "scrapeId": "bf6d1c24-41e3-4d45-8d5b-baedf5e7fbc9", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v2beta4", "url": "https://skaffold.dev/docs/references/yaml/?version=v2beta4", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I tip in skaffold?\n\nAssistant: To tip in skaffold, here's what you do:\nThe Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based validation, diagnostics, quick documentation, code completions, and snippets, that can make it easier to create and edit these files. You can now navigate the skaffold.yaml reference from an inner element to its upper levels using the tooltip that appears on hover, clicking on the parent element you want to go..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v2beta4", "title": "skaffold.yaml", "description": "This page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and configuration management.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:26:11", "type": "section_detail", "page_metadata": {"generator": "Hugo 0.99.1", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "twitter:card": "summary", "ogTitle": "skaffold.yaml", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:description": "Easy and Repeatable Container & Kubernetes Development", "ogSiteName": "Skaffold", "language": "en", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "twitter:title": "skaffold.yaml", "robots": "index, follow", "og:type": "website", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "og:url": "https://skaffold.dev/docs/references/yaml/", "title": "skaffold.yaml | Skaffold", "og:title": "skaffold.yaml", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "og:site_name": "Skaffold", "scrapeId": "bf6d1c24-41e3-4d45-8d5b-baedf5e7fbc9", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v2beta4", "url": "https://skaffold.dev/docs/references/yaml/?version=v2beta4", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I yaml anchors in skaffold?\n\nAssistant: To yaml anchors in skaffold, here's what you do:\nAnchors can be defined by having top-level keys starting with a dot, e.g. .common_stuff: &alias_name. You can then reuse the value using *alias_name..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v2beta4", "title": "skaffold.yaml", "description": "This page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and configuration management.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:26:11", "type": "section_detail", "page_metadata": {"generator": "Hugo 0.99.1", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "twitter:card": "summary", "ogTitle": "skaffold.yaml", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:description": "Easy and Repeatable Container & Kubernetes Development", "ogSiteName": "Skaffold", "language": "en", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "twitter:title": "skaffold.yaml", "robots": "index, follow", "og:type": "website", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "og:url": "https://skaffold.dev/docs/references/yaml/", "title": "skaffold.yaml | Skaffold", "og:title": "skaffold.yaml", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "og:site_name": "Skaffold", "scrapeId": "bf6d1c24-41e3-4d45-8d5b-baedf5e7fbc9", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v2beta4", "url": "https://skaffold.dev/docs/references/yaml/?version=v2beta4", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I organizing multiple configurations in skaffold?\n\nAssistant: To organizing multiple configurations in skaffold, here's what you do:\nMultiple configurations can define dependencies on each other to construct an arbitrarily nested tree of project component dependencies. Management of multiple configurations can be simplified by grouping them together in the same file (separated by --- in YAML)..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v2beta4", "title": "skaffold.yaml", "description": "This page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and configuration management.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:26:11", "type": "section_detail", "page_metadata": {"generator": "Hugo 0.99.1", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "twitter:card": "summary", "ogTitle": "skaffold.yaml", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:description": "Easy and Repeatable Container & Kubernetes Development", "ogSiteName": "Skaffold", "language": "en", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "twitter:title": "skaffold.yaml", "robots": "index, follow", "og:type": "website", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "og:url": "https://skaffold.dev/docs/references/yaml/", "title": "skaffold.yaml | Skaffold", "og:title": "skaffold.yaml", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "og:site_name": "Skaffold", "scrapeId": "bf6d1c24-41e3-4d45-8d5b-baedf5e7fbc9", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v2beta4", "url": "https://skaffold.dev/docs/references/yaml/?version=v2beta4", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: What are some tips for using skaffold.yaml in skaffold effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nUse Cloud Code IDE extensions for authoring assistance with skaffold.yaml files.\n\nUtilize YAML anchors for reusing values in configurations.\n\nGroup multiple configurations in the same file for easier management.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v2beta4", "title": "skaffold.yaml", "description": "This page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and configuration management.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:26:11", "type": "best_practices", "page_metadata": {"generator": "Hugo 0.99.1", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "twitter:card": "summary", "ogTitle": "skaffold.yaml", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:description": "Easy and Repeatable Container & Kubernetes Development", "ogSiteName": "Skaffold", "language": "en", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "twitter:title": "skaffold.yaml", "robots": "index, follow", "og:type": "website", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "og:url": "https://skaffold.dev/docs/references/yaml/", "title": "skaffold.yaml | Skaffold", "og:title": "skaffold.yaml", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "og:site_name": "Skaffold", "scrapeId": "bf6d1c24-41e3-4d45-8d5b-baedf5e7fbc9", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v2beta4", "url": "https://skaffold.dev/docs/references/yaml/?version=v2beta4", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what skaffold.yaml is in skaffold?\n\nAssistant: Sure, I'd be happy to explain skaffold.yaml in skaffold.\n\n# skaffold.yaml\n\nDocumentation for configuring and using skaffold.yaml files in Cloud Code IDE.Here's a quick rundown of what this is about:\n\n## Tip\n\nThe Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based validation, diagnostics, quick documentation, code completions, and snippets, that can make it easier to create and edit these files. You can now navigate the skaffold.yaml reference from an inner element to its upper levels using the tooltip that appears on hover, clicking on the parent element you want to go.\n\n## YAML anchors\n\nAnchors can be defined by having top-level keys starting with a dot, e.g. .common_stuff: &alias_name. You can then reuse the value using *alias_name.\n\n## Organizing multiple configurations\n\nMultiple configurations can define dependencies on each other to construct an arbitrarily nested tree of project component dependencies. Management of multiple configurations can be simplified by grouping them together in the same file (separated by --- in YAML).\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v1beta8", "title": "skaffold.yaml", "description": "Documentation for configuring and using skaffold.yaml files in Cloud Code IDE.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:26:22", "type": "overview", "page_metadata": {"twitter:description": "Easy and Repeatable Container & Kubernetes Development", "og:description": "Easy and Repeatable Container & Kubernetes Development", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "ogTitle": "skaffold.yaml", "og:type": "website", "robots": "index, follow", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "twitter:card": "summary", "ogSiteName": "Skaffold", "twitter:title": "skaffold.yaml", "og:url": "https://skaffold.dev/docs/references/yaml/", "generator": "Hugo 0.99.1", "og:title": "skaffold.yaml", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "title": "skaffold.yaml | Skaffold", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "language": "en", "og:site_name": "Skaffold", "scrapeId": "d3db78d7-44a9-4253-993c-d41283232503", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v1beta8", "url": "https://skaffold.dev/docs/references/yaml/?version=v1beta8", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I tip in skaffold?\n\nAssistant: To tip in skaffold, here's what you do:\nThe Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based validation, diagnostics, quick documentation, code completions, and snippets, that can make it easier to create and edit these files. You can now navigate the skaffold.yaml reference from an inner element to its upper levels using the tooltip that appears on hover, clicking on the parent element you want to go..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v1beta8", "title": "skaffold.yaml", "description": "Documentation for configuring and using skaffold.yaml files in Cloud Code IDE.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:26:22", "type": "section_detail", "page_metadata": {"twitter:description": "Easy and Repeatable Container & Kubernetes Development", "og:description": "Easy and Repeatable Container & Kubernetes Development", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "ogTitle": "skaffold.yaml", "og:type": "website", "robots": "index, follow", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "twitter:card": "summary", "ogSiteName": "Skaffold", "twitter:title": "skaffold.yaml", "og:url": "https://skaffold.dev/docs/references/yaml/", "generator": "Hugo 0.99.1", "og:title": "skaffold.yaml", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "title": "skaffold.yaml | Skaffold", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "language": "en", "og:site_name": "Skaffold", "scrapeId": "d3db78d7-44a9-4253-993c-d41283232503", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v1beta8", "url": "https://skaffold.dev/docs/references/yaml/?version=v1beta8", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I yaml anchors in skaffold?\n\nAssistant: To yaml anchors in skaffold, here's what you do:\nAnchors can be defined by having top-level keys starting with a dot, e.g. .common_stuff: &alias_name. You can then reuse the value using *alias_name..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v1beta8", "title": "skaffold.yaml", "description": "Documentation for configuring and using skaffold.yaml files in Cloud Code IDE.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:26:22", "type": "section_detail", "page_metadata": {"twitter:description": "Easy and Repeatable Container & Kubernetes Development", "og:description": "Easy and Repeatable Container & Kubernetes Development", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "ogTitle": "skaffold.yaml", "og:type": "website", "robots": "index, follow", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "twitter:card": "summary", "ogSiteName": "Skaffold", "twitter:title": "skaffold.yaml", "og:url": "https://skaffold.dev/docs/references/yaml/", "generator": "Hugo 0.99.1", "og:title": "skaffold.yaml", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "title": "skaffold.yaml | Skaffold", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "language": "en", "og:site_name": "Skaffold", "scrapeId": "d3db78d7-44a9-4253-993c-d41283232503", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v1beta8", "url": "https://skaffold.dev/docs/references/yaml/?version=v1beta8", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I organizing multiple configurations in skaffold?\n\nAssistant: To organizing multiple configurations in skaffold, here's what you do:\nMultiple configurations can define dependencies on each other to construct an arbitrarily nested tree of project component dependencies. Management of multiple configurations can be simplified by grouping them together in the same file (separated by --- in YAML)..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v1beta8", "title": "skaffold.yaml", "description": "Documentation for configuring and using skaffold.yaml files in Cloud Code IDE.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:26:22", "type": "section_detail", "page_metadata": {"twitter:description": "Easy and Repeatable Container & Kubernetes Development", "og:description": "Easy and Repeatable Container & Kubernetes Development", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "ogTitle": "skaffold.yaml", "og:type": "website", "robots": "index, follow", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "twitter:card": "summary", "ogSiteName": "Skaffold", "twitter:title": "skaffold.yaml", "og:url": "https://skaffold.dev/docs/references/yaml/", "generator": "Hugo 0.99.1", "og:title": "skaffold.yaml", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "title": "skaffold.yaml | Skaffold", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "language": "en", "og:site_name": "Skaffold", "scrapeId": "d3db78d7-44a9-4253-993c-d41283232503", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v1beta8", "url": "https://skaffold.dev/docs/references/yaml/?version=v1beta8", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: What are some tips for using skaffold.yaml in skaffold effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nUse Cloud Code IDE extensions for authoring assistance with skaffold.yaml files.\n\nUtilize YAML anchors for reusing values in configurations.\n\nGroup multiple configurations in the same file for better management.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v1beta8", "title": "skaffold.yaml", "description": "Documentation for configuring and using skaffold.yaml files in Cloud Code IDE.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:26:22", "type": "best_practices", "page_metadata": {"twitter:description": "Easy and Repeatable Container & Kubernetes Development", "og:description": "Easy and Repeatable Container & Kubernetes Development", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "ogTitle": "skaffold.yaml", "og:type": "website", "robots": "index, follow", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "twitter:card": "summary", "ogSiteName": "Skaffold", "twitter:title": "skaffold.yaml", "og:url": "https://skaffold.dev/docs/references/yaml/", "generator": "Hugo 0.99.1", "og:title": "skaffold.yaml", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "title": "skaffold.yaml | Skaffold", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "language": "en", "og:site_name": "Skaffold", "scrapeId": "d3db78d7-44a9-4253-993c-d41283232503", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v1beta8", "url": "https://skaffold.dev/docs/references/yaml/?version=v1beta8", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what skaffold.yaml is in skaffold?\n\nAssistant: Sure, I'd be happy to explain skaffold.yaml in skaffold.\n\n# skaffold.yaml\n\nThis page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and organization of configurations.Here's a quick rundown of what this is about:\n\n## YAML anchors\n\nAnchors can be defined by having top-level keys starting with a dot, e.g. `.common_stuff: &alias_name`. You can then reuse the value using `*alias_name`.\n\n## Organizing multiple configurations\n\nMultiple configurations can define dependencies on each other to construct an arbitrarily nested tree of project component dependencies. Management of multiple configurations can be simplified by grouping them together in the same file (separated by --- in YAML).\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v1beta13", "title": "skaffold.yaml", "description": "This page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and organization of configurations.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 04:26:32", "type": "overview", "page_metadata": {"description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "robots": "index, follow", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "ogSiteName": "Skaffold", "ogTitle": "skaffold.yaml", "og:description": "Easy and Repeatable Container & Kubernetes Development", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "og:type": "website", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:site_name": "Skaffold", "twitter:card": "summary", "og:url": "https://skaffold.dev/docs/references/yaml/", "language": "en", "og:title": "skaffold.yaml", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "twitter:title": "skaffold.yaml", "title": "skaffold.yaml | Skaffold", "generator": "Hugo 0.99.1", "scrapeId": "f116be6c-d2a8-4c42-a7af-a6b58ebaf631", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v1beta13", "url": "https://skaffold.dev/docs/references/yaml/?version=v1beta13", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I yaml anchors in skaffold?\n\nAssistant: To yaml anchors in skaffold, here's what you do:\nAnchors can be defined by having top-level keys starting with a dot, e.g. `.common_stuff: &alias_name`. You can then reuse the value using `*alias_name`..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v1beta13", "title": "skaffold.yaml", "description": "This page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and organization of configurations.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 04:26:32", "type": "section_detail", "page_metadata": {"description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "robots": "index, follow", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "ogSiteName": "Skaffold", "ogTitle": "skaffold.yaml", "og:description": "Easy and Repeatable Container & Kubernetes Development", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "og:type": "website", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:site_name": "Skaffold", "twitter:card": "summary", "og:url": "https://skaffold.dev/docs/references/yaml/", "language": "en", "og:title": "skaffold.yaml", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "twitter:title": "skaffold.yaml", "title": "skaffold.yaml | Skaffold", "generator": "Hugo 0.99.1", "scrapeId": "f116be6c-d2a8-4c42-a7af-a6b58ebaf631", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v1beta13", "url": "https://skaffold.dev/docs/references/yaml/?version=v1beta13", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I organizing multiple configurations in skaffold?\n\nAssistant: To organizing multiple configurations in skaffold, here's what you do:\nMultiple configurations can define dependencies on each other to construct an arbitrarily nested tree of project component dependencies. Management of multiple configurations can be simplified by grouping them together in the same file (separated by --- in YAML)..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v1beta13", "title": "skaffold.yaml", "description": "This page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and organization of configurations.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 04:26:32", "type": "section_detail", "page_metadata": {"description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "robots": "index, follow", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "ogSiteName": "Skaffold", "ogTitle": "skaffold.yaml", "og:description": "Easy and Repeatable Container & Kubernetes Development", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "og:type": "website", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:site_name": "Skaffold", "twitter:card": "summary", "og:url": "https://skaffold.dev/docs/references/yaml/", "language": "en", "og:title": "skaffold.yaml", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "twitter:title": "skaffold.yaml", "title": "skaffold.yaml | Skaffold", "generator": "Hugo 0.99.1", "scrapeId": "f116be6c-d2a8-4c42-a7af-a6b58ebaf631", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v1beta13", "url": "https://skaffold.dev/docs/references/yaml/?version=v1beta13", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: What are some tips for using skaffold.yaml in skaffold effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nThe Cloud Code IDE extensions provide authoring assistance for `skaffold.yaml` files in the form of schema based validation, diagnostics, quick documentation, code completions, and snippets, that can make it easier to create and edit these files.\n\nYou can navigate the `skaffold.yaml` reference from an inner element to its upper levels using the tooltip that appears on hover, clicking on the parent element you want to go.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v1beta13", "title": "skaffold.yaml", "description": "This page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and organization of configurations.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 04:26:32", "type": "best_practices", "page_metadata": {"description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "robots": "index, follow", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "ogSiteName": "Skaffold", "ogTitle": "skaffold.yaml", "og:description": "Easy and Repeatable Container & Kubernetes Development", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "og:type": "website", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:site_name": "Skaffold", "twitter:card": "summary", "og:url": "https://skaffold.dev/docs/references/yaml/", "language": "en", "og:title": "skaffold.yaml", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "twitter:title": "skaffold.yaml", "title": "skaffold.yaml | Skaffold", "generator": "Hugo 0.99.1", "scrapeId": "f116be6c-d2a8-4c42-a7af-a6b58ebaf631", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v1beta13", "url": "https://skaffold.dev/docs/references/yaml/?version=v1beta13", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what skaffold.yaml is in skaffold?\n\nAssistant: Sure, I'd be happy to explain skaffold.yaml in skaffold.\n\n# skaffold.yaml\n\nDocumentation for configuring and using skaffold.yaml files in Cloud Code IDE.Here's a quick rundown of what this is about:\n\n## Tip\n\nThe Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based validation, diagnostics, quick documentation, code completions, and snippets, that can make it easier to create and edit these files. You can now navigate the skaffold.yaml reference from an inner element to its upper levels using the tooltip that appears on hover, clicking on the parent element you want to go.\n\n## YAML anchors\n\nAnchors can be defined by having top-level keys starting with a dot, e.g. .common_stuff: &alias_name. You can then reuse the value using *alias_name.\n\n## Organizing multiple configurations\n\nMultiple configurations can define dependencies on each other to construct an arbitrarily nested tree of project component dependencies. Management of multiple configurations can be simplified by grouping them together in the same file (separated by --- in YAML).\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v2beta6", "title": "skaffold.yaml", "description": "Documentation for configuring and using skaffold.yaml files in Cloud Code IDE.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:27:08", "type": "overview", "page_metadata": {"ogSiteName": "Skaffold", "og:url": "https://skaffold.dev/docs/references/yaml/", "twitter:card": "summary", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:description": "Easy and Repeatable Container & Kubernetes Development", "title": "skaffold.yaml | Skaffold", "robots": "index, follow", "ogTitle": "skaffold.yaml", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "language": "en", "twitter:title": "skaffold.yaml", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:title": "skaffold.yaml", "og:site_name": "Skaffold", "generator": "Hugo 0.99.1", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "og:type": "website", "scrapeId": "e8d0084b-b14b-4b13-a50b-ef1c3cd7d9d8", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v2beta6", "url": "https://skaffold.dev/docs/references/yaml/?version=v2beta6", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I tip in skaffold?\n\nAssistant: To tip in skaffold, here's what you do:\nThe Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based validation, diagnostics, quick documentation, code completions, and snippets, that can make it easier to create and edit these files. You can now navigate the skaffold.yaml reference from an inner element to its upper levels using the tooltip that appears on hover, clicking on the parent element you want to go..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v2beta6", "title": "skaffold.yaml", "description": "Documentation for configuring and using skaffold.yaml files in Cloud Code IDE.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:27:08", "type": "section_detail", "page_metadata": {"ogSiteName": "Skaffold", "og:url": "https://skaffold.dev/docs/references/yaml/", "twitter:card": "summary", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:description": "Easy and Repeatable Container & Kubernetes Development", "title": "skaffold.yaml | Skaffold", "robots": "index, follow", "ogTitle": "skaffold.yaml", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "language": "en", "twitter:title": "skaffold.yaml", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:title": "skaffold.yaml", "og:site_name": "Skaffold", "generator": "Hugo 0.99.1", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "og:type": "website", "scrapeId": "e8d0084b-b14b-4b13-a50b-ef1c3cd7d9d8", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v2beta6", "url": "https://skaffold.dev/docs/references/yaml/?version=v2beta6", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I yaml anchors in skaffold?\n\nAssistant: To yaml anchors in skaffold, here's what you do:\nAnchors can be defined by having top-level keys starting with a dot, e.g. .common_stuff: &alias_name. You can then reuse the value using *alias_name..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v2beta6", "title": "skaffold.yaml", "description": "Documentation for configuring and using skaffold.yaml files in Cloud Code IDE.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:27:08", "type": "section_detail", "page_metadata": {"ogSiteName": "Skaffold", "og:url": "https://skaffold.dev/docs/references/yaml/", "twitter:card": "summary", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:description": "Easy and Repeatable Container & Kubernetes Development", "title": "skaffold.yaml | Skaffold", "robots": "index, follow", "ogTitle": "skaffold.yaml", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "language": "en", "twitter:title": "skaffold.yaml", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:title": "skaffold.yaml", "og:site_name": "Skaffold", "generator": "Hugo 0.99.1", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "og:type": "website", "scrapeId": "e8d0084b-b14b-4b13-a50b-ef1c3cd7d9d8", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v2beta6", "url": "https://skaffold.dev/docs/references/yaml/?version=v2beta6", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I organizing multiple configurations in skaffold?\n\nAssistant: To organizing multiple configurations in skaffold, here's what you do:\nMultiple configurations can define dependencies on each other to construct an arbitrarily nested tree of project component dependencies. Management of multiple configurations can be simplified by grouping them together in the same file (separated by --- in YAML)..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v2beta6", "title": "skaffold.yaml", "description": "Documentation for configuring and using skaffold.yaml files in Cloud Code IDE.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:27:08", "type": "section_detail", "page_metadata": {"ogSiteName": "Skaffold", "og:url": "https://skaffold.dev/docs/references/yaml/", "twitter:card": "summary", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:description": "Easy and Repeatable Container & Kubernetes Development", "title": "skaffold.yaml | Skaffold", "robots": "index, follow", "ogTitle": "skaffold.yaml", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "language": "en", "twitter:title": "skaffold.yaml", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:title": "skaffold.yaml", "og:site_name": "Skaffold", "generator": "Hugo 0.99.1", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "og:type": "website", "scrapeId": "e8d0084b-b14b-4b13-a50b-ef1c3cd7d9d8", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v2beta6", "url": "https://skaffold.dev/docs/references/yaml/?version=v2beta6", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: What are some tips for using skaffold.yaml in skaffold effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nUse Cloud Code IDE extensions for authoring assistance with skaffold.yaml files.\n\nUtilize YAML anchors for reusing values in configurations.\n\nGroup multiple configurations in the same file for better management.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v2beta6", "title": "skaffold.yaml", "description": "Documentation for configuring and using skaffold.yaml files in Cloud Code IDE.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:27:08", "type": "best_practices", "page_metadata": {"ogSiteName": "Skaffold", "og:url": "https://skaffold.dev/docs/references/yaml/", "twitter:card": "summary", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:description": "Easy and Repeatable Container & Kubernetes Development", "title": "skaffold.yaml | Skaffold", "robots": "index, follow", "ogTitle": "skaffold.yaml", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "language": "en", "twitter:title": "skaffold.yaml", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:title": "skaffold.yaml", "og:site_name": "Skaffold", "generator": "Hugo 0.99.1", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "og:type": "website", "scrapeId": "e8d0084b-b14b-4b13-a50b-ef1c3cd7d9d8", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v2beta6", "url": "https://skaffold.dev/docs/references/yaml/?version=v2beta6", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what skaffold.yaml is in skaffold?\n\nAssistant: Sure, I'd be happy to explain skaffold.yaml in skaffold.\n\n# skaffold.yaml\n\nThis page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and configuration management.Here's a quick rundown of what this is about:\n\n## Tip\n\nThe Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based validation, diagnostics, quick documentation, code completions, and snippets, that can make it easier to create and edit these files. You can now navigate the skaffold.yaml reference from an inner element to its upper levels using the tooltip that appears on hover, clicking on the parent element you want to go.\n\n## YAML anchors\n\nAnchors can be defined by having top-level keys starting with a dot, e.g. .common_stuff: &alias_name. You can then reuse the value using *alias_name.\n\n## Organizing multiple configurations\n\nMultiple configurations can define dependencies on each other to construct an arbitrarily nested tree of project component dependencies. Management of multiple configurations can be simplified by grouping them together in the same file (separated by --- in YAML). Last modified January 23, 2025: release: v2.14.0 (#9668) (f132ab25)\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v2beta12", "title": "skaffold.yaml", "description": "This page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and configuration management.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:27:30", "type": "overview", "page_metadata": {"generator": "Hugo 0.99.1", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "robots": "index, follow", "og:title": "skaffold.yaml", "og:url": "https://skaffold.dev/docs/references/yaml/", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "ogTitle": "skaffold.yaml", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "language": "en", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "ogSiteName": "Skaffold", "title": "skaffold.yaml | Skaffold", "og:description": "Easy and Repeatable Container & Kubernetes Development", "og:type": "website", "twitter:card": "summary", "og:site_name": "Skaffold", "twitter:title": "skaffold.yaml", "scrapeId": "fd58e30a-c04a-4e0a-920a-72eccbe87d28", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v2beta12", "url": "https://skaffold.dev/docs/references/yaml/?version=v2beta12", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I tip in skaffold?\n\nAssistant: To tip in skaffold, here's what you do:\nThe Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based validation, diagnostics, quick documentation, code completions, and snippets, that can make it easier to create and edit these files. You can now navigate the skaffold.yaml reference from an inner element to its upper levels using the tooltip that appears on hover, clicking on the parent element you want to go..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v2beta12", "title": "skaffold.yaml", "description": "This page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and configuration management.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:27:30", "type": "section_detail", "page_metadata": {"generator": "Hugo 0.99.1", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "robots": "index, follow", "og:title": "skaffold.yaml", "og:url": "https://skaffold.dev/docs/references/yaml/", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "ogTitle": "skaffold.yaml", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "language": "en", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "ogSiteName": "Skaffold", "title": "skaffold.yaml | Skaffold", "og:description": "Easy and Repeatable Container & Kubernetes Development", "og:type": "website", "twitter:card": "summary", "og:site_name": "Skaffold", "twitter:title": "skaffold.yaml", "scrapeId": "fd58e30a-c04a-4e0a-920a-72eccbe87d28", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v2beta12", "url": "https://skaffold.dev/docs/references/yaml/?version=v2beta12", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I yaml anchors in skaffold?\n\nAssistant: To yaml anchors in skaffold, here's what you do:\nAnchors can be defined by having top-level keys starting with a dot, e.g. .common_stuff: &alias_name. You can then reuse the value using *alias_name..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v2beta12", "title": "skaffold.yaml", "description": "This page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and configuration management.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:27:30", "type": "section_detail", "page_metadata": {"generator": "Hugo 0.99.1", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "robots": "index, follow", "og:title": "skaffold.yaml", "og:url": "https://skaffold.dev/docs/references/yaml/", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "ogTitle": "skaffold.yaml", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "language": "en", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "ogSiteName": "Skaffold", "title": "skaffold.yaml | Skaffold", "og:description": "Easy and Repeatable Container & Kubernetes Development", "og:type": "website", "twitter:card": "summary", "og:site_name": "Skaffold", "twitter:title": "skaffold.yaml", "scrapeId": "fd58e30a-c04a-4e0a-920a-72eccbe87d28", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v2beta12", "url": "https://skaffold.dev/docs/references/yaml/?version=v2beta12", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I organizing multiple configurations in skaffold?\n\nAssistant: To organizing multiple configurations in skaffold, here's what you do:\nMultiple configurations can define dependencies on each other to construct an arbitrarily nested tree of project component dependencies. Management of multiple configurations can be simplified by grouping them together in the same file (separated by --- in YAML). Last modified January 23, 2025: release: v2.14.0 (#9668) (f132ab25).\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v2beta12", "title": "skaffold.yaml", "description": "This page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and configuration management.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:27:30", "type": "section_detail", "page_metadata": {"generator": "Hugo 0.99.1", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "robots": "index, follow", "og:title": "skaffold.yaml", "og:url": "https://skaffold.dev/docs/references/yaml/", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "ogTitle": "skaffold.yaml", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "language": "en", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "ogSiteName": "Skaffold", "title": "skaffold.yaml | Skaffold", "og:description": "Easy and Repeatable Container & Kubernetes Development", "og:type": "website", "twitter:card": "summary", "og:site_name": "Skaffold", "twitter:title": "skaffold.yaml", "scrapeId": "fd58e30a-c04a-4e0a-920a-72eccbe87d28", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v2beta12", "url": "https://skaffold.dev/docs/references/yaml/?version=v2beta12", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: What are some tips for using skaffold.yaml in skaffold effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nUse Cloud Code IDE extensions for authoring assistance with skaffold.yaml files.\n\nUtilize YAML anchors for reusing values in configurations.\n\nGroup multiple configurations in the same file for easier management.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v2beta12", "title": "skaffold.yaml", "description": "This page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and configuration management.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:27:30", "type": "best_practices", "page_metadata": {"generator": "Hugo 0.99.1", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "robots": "index, follow", "og:title": "skaffold.yaml", "og:url": "https://skaffold.dev/docs/references/yaml/", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "ogTitle": "skaffold.yaml", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "language": "en", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "ogSiteName": "Skaffold", "title": "skaffold.yaml | Skaffold", "og:description": "Easy and Repeatable Container & Kubernetes Development", "og:type": "website", "twitter:card": "summary", "og:site_name": "Skaffold", "twitter:title": "skaffold.yaml", "scrapeId": "fd58e30a-c04a-4e0a-920a-72eccbe87d28", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v2beta12", "url": "https://skaffold.dev/docs/references/yaml/?version=v2beta12", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what skaffold.yaml is in skaffold?\n\nAssistant: Sure, I'd be happy to explain skaffold.yaml in skaffold.\n\n# skaffold.yaml\n\nDocumentation for configuring and using skaffold.yaml files in Cloud Code IDE extensions.Here's a quick rundown of what this is about:\n\n## Tip\n\nThe Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based validation, diagnostics, quick documentation, code completions, and snippets, that can make it easier to create and edit these files. You can now navigate the skaffold.yaml reference from an inner element to its upper levels using the tooltip that appears on hover, clicking on the parent element you want to go.\n\n## YAML anchors\n\nAnchors can be defined by having top-level keys starting with a dot, e.g. .common_stuff: &alias_name. You can then reuse the value using *alias_name.\n\n## Organizing multiple configurations\n\nMultiple configurations can define dependencies on each other to construct an arbitrarily nested tree of project component dependencies. Management of multiple configurations can be simplified by grouping them together in the same file (separated by --- in YAML).\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v1beta4", "title": "skaffold.yaml", "description": "Documentation for configuring and using skaffold.yaml files in Cloud Code IDE extensions.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:27:57", "type": "overview", "page_metadata": {"description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "title": "skaffold.yaml | Skaffold", "og:title": "skaffold.yaml", "ogSiteName": "Skaffold", "og:url": "https://skaffold.dev/docs/references/yaml/", "twitter:card": "summary", "og:description": "Easy and Repeatable Container & Kubernetes Development", "twitter:title": "skaffold.yaml", "ogTitle": "skaffold.yaml", "og:site_name": "Skaffold", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "language": "en", "generator": "Hugo 0.99.1", "robots": "index, follow", "og:type": "website", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "scrapeId": "79755406-f080-4f88-8794-fac4e046294a", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v1beta4", "url": "https://skaffold.dev/docs/references/yaml/?version=v1beta4", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I tip in skaffold?\n\nAssistant: To tip in skaffold, here's what you do:\nThe Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based validation, diagnostics, quick documentation, code completions, and snippets, that can make it easier to create and edit these files. You can now navigate the skaffold.yaml reference from an inner element to its upper levels using the tooltip that appears on hover, clicking on the parent element you want to go..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v1beta4", "title": "skaffold.yaml", "description": "Documentation for configuring and using skaffold.yaml files in Cloud Code IDE extensions.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:27:57", "type": "section_detail", "page_metadata": {"description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "title": "skaffold.yaml | Skaffold", "og:title": "skaffold.yaml", "ogSiteName": "Skaffold", "og:url": "https://skaffold.dev/docs/references/yaml/", "twitter:card": "summary", "og:description": "Easy and Repeatable Container & Kubernetes Development", "twitter:title": "skaffold.yaml", "ogTitle": "skaffold.yaml", "og:site_name": "Skaffold", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "language": "en", "generator": "Hugo 0.99.1", "robots": "index, follow", "og:type": "website", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "scrapeId": "79755406-f080-4f88-8794-fac4e046294a", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v1beta4", "url": "https://skaffold.dev/docs/references/yaml/?version=v1beta4", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I yaml anchors in skaffold?\n\nAssistant: To yaml anchors in skaffold, here's what you do:\nAnchors can be defined by having top-level keys starting with a dot, e.g. .common_stuff: &alias_name. You can then reuse the value using *alias_name..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v1beta4", "title": "skaffold.yaml", "description": "Documentation for configuring and using skaffold.yaml files in Cloud Code IDE extensions.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:27:57", "type": "section_detail", "page_metadata": {"description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "title": "skaffold.yaml | Skaffold", "og:title": "skaffold.yaml", "ogSiteName": "Skaffold", "og:url": "https://skaffold.dev/docs/references/yaml/", "twitter:card": "summary", "og:description": "Easy and Repeatable Container & Kubernetes Development", "twitter:title": "skaffold.yaml", "ogTitle": "skaffold.yaml", "og:site_name": "Skaffold", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "language": "en", "generator": "Hugo 0.99.1", "robots": "index, follow", "og:type": "website", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "scrapeId": "79755406-f080-4f88-8794-fac4e046294a", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v1beta4", "url": "https://skaffold.dev/docs/references/yaml/?version=v1beta4", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I organizing multiple configurations in skaffold?\n\nAssistant: To organizing multiple configurations in skaffold, here's what you do:\nMultiple configurations can define dependencies on each other to construct an arbitrarily nested tree of project component dependencies. Management of multiple configurations can be simplified by grouping them together in the same file (separated by --- in YAML)..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v1beta4", "title": "skaffold.yaml", "description": "Documentation for configuring and using skaffold.yaml files in Cloud Code IDE extensions.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:27:57", "type": "section_detail", "page_metadata": {"description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "title": "skaffold.yaml | Skaffold", "og:title": "skaffold.yaml", "ogSiteName": "Skaffold", "og:url": "https://skaffold.dev/docs/references/yaml/", "twitter:card": "summary", "og:description": "Easy and Repeatable Container & Kubernetes Development", "twitter:title": "skaffold.yaml", "ogTitle": "skaffold.yaml", "og:site_name": "Skaffold", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "language": "en", "generator": "Hugo 0.99.1", "robots": "index, follow", "og:type": "website", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "scrapeId": "79755406-f080-4f88-8794-fac4e046294a", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v1beta4", "url": "https://skaffold.dev/docs/references/yaml/?version=v1beta4", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: What are some tips for using skaffold.yaml in skaffold effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nUse Cloud Code IDE extensions for authoring assistance with skaffold.yaml files.\n\nUtilize YAML anchors for reusing values in configurations.\n\nGroup multiple configurations in the same file for better management.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v1beta4", "title": "skaffold.yaml", "description": "Documentation for configuring and using skaffold.yaml files in Cloud Code IDE extensions.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:27:57", "type": "best_practices", "page_metadata": {"description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "title": "skaffold.yaml | Skaffold", "og:title": "skaffold.yaml", "ogSiteName": "Skaffold", "og:url": "https://skaffold.dev/docs/references/yaml/", "twitter:card": "summary", "og:description": "Easy and Repeatable Container & Kubernetes Development", "twitter:title": "skaffold.yaml", "ogTitle": "skaffold.yaml", "og:site_name": "Skaffold", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "language": "en", "generator": "Hugo 0.99.1", "robots": "index, follow", "og:type": "website", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "scrapeId": "79755406-f080-4f88-8794-fac4e046294a", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v1beta4", "url": "https://skaffold.dev/docs/references/yaml/?version=v1beta4", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what skaffold.yaml is in skaffold?\n\nAssistant: Sure, I'd be happy to explain skaffold.yaml in skaffold.\n\n# skaffold.yaml\n\nThis page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and organization of configurations.Here's a quick rundown of what this is about:\n\n## YAML anchors\n\nAnchors can be defined by having top-level keys starting with a dot, e.g. `.common_stuff: &alias_name`. You can then reuse the value using `*alias_name`.\n\n## Organizing multiple configurations\n\nMultiple configurations can define dependencies on each other to construct an arbitrarily nested tree of project component dependencies. Management of multiple configurations can be simplified by grouping them together in the same file (separated by --- in YAML).\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v2beta18", "title": "skaffold.yaml", "description": "This page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and organization of configurations.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 04:29:31", "type": "overview", "page_metadata": {"ogUrl": "https://skaffold.dev/docs/references/yaml/", "og:site_name": "Skaffold", "og:url": "https://skaffold.dev/docs/references/yaml/", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "twitter:card": "summary", "generator": "Hugo 0.99.1", "language": "en", "robots": "index, follow", "og:description": "Easy and Repeatable Container & Kubernetes Development", "title": "skaffold.yaml | Skaffold", "twitter:title": "skaffold.yaml", "og:title": "skaffold.yaml", "ogSiteName": "Skaffold", "og:type": "website", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "ogTitle": "skaffold.yaml", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "scrapeId": "57ac034c-12d8-4f10-93c3-d5df09087418", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v2beta18", "url": "https://skaffold.dev/docs/references/yaml/?version=v2beta18", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I yaml anchors in skaffold?\n\nAssistant: To yaml anchors in skaffold, here's what you do:\nAnchors can be defined by having top-level keys starting with a dot, e.g. `.common_stuff: &alias_name`. You can then reuse the value using `*alias_name`..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v2beta18", "title": "skaffold.yaml", "description": "This page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and organization of configurations.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 04:29:31", "type": "section_detail", "page_metadata": {"ogUrl": "https://skaffold.dev/docs/references/yaml/", "og:site_name": "Skaffold", "og:url": "https://skaffold.dev/docs/references/yaml/", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "twitter:card": "summary", "generator": "Hugo 0.99.1", "language": "en", "robots": "index, follow", "og:description": "Easy and Repeatable Container & Kubernetes Development", "title": "skaffold.yaml | Skaffold", "twitter:title": "skaffold.yaml", "og:title": "skaffold.yaml", "ogSiteName": "Skaffold", "og:type": "website", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "ogTitle": "skaffold.yaml", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "scrapeId": "57ac034c-12d8-4f10-93c3-d5df09087418", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v2beta18", "url": "https://skaffold.dev/docs/references/yaml/?version=v2beta18", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I organizing multiple configurations in skaffold?\n\nAssistant: To organizing multiple configurations in skaffold, here's what you do:\nMultiple configurations can define dependencies on each other to construct an arbitrarily nested tree of project component dependencies. Management of multiple configurations can be simplified by grouping them together in the same file (separated by --- in YAML)..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v2beta18", "title": "skaffold.yaml", "description": "This page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and organization of configurations.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 04:29:31", "type": "section_detail", "page_metadata": {"ogUrl": "https://skaffold.dev/docs/references/yaml/", "og:site_name": "Skaffold", "og:url": "https://skaffold.dev/docs/references/yaml/", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "twitter:card": "summary", "generator": "Hugo 0.99.1", "language": "en", "robots": "index, follow", "og:description": "Easy and Repeatable Container & Kubernetes Development", "title": "skaffold.yaml | Skaffold", "twitter:title": "skaffold.yaml", "og:title": "skaffold.yaml", "ogSiteName": "Skaffold", "og:type": "website", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "ogTitle": "skaffold.yaml", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "scrapeId": "57ac034c-12d8-4f10-93c3-d5df09087418", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v2beta18", "url": "https://skaffold.dev/docs/references/yaml/?version=v2beta18", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: What are some tips for using skaffold.yaml in skaffold effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nThe Cloud Code IDE extensions provide authoring assistance for skaffold.yaml files in the form of schema based validation, diagnostics, quick documentation, code completions, and snippets, that can make it easier to create and edit these files.\n\nYou can navigate the skaffold.yaml reference from an inner element to its upper levels using the tooltip that appears on hover, clicking on the parent element you want to go.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v2beta18", "title": "skaffold.yaml", "description": "This page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and organization of configurations.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 04:29:31", "type": "best_practices", "page_metadata": {"ogUrl": "https://skaffold.dev/docs/references/yaml/", "og:site_name": "Skaffold", "og:url": "https://skaffold.dev/docs/references/yaml/", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "twitter:card": "summary", "generator": "Hugo 0.99.1", "language": "en", "robots": "index, follow", "og:description": "Easy and Repeatable Container & Kubernetes Development", "title": "skaffold.yaml | Skaffold", "twitter:title": "skaffold.yaml", "og:title": "skaffold.yaml", "ogSiteName": "Skaffold", "og:type": "website", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "ogTitle": "skaffold.yaml", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "scrapeId": "57ac034c-12d8-4f10-93c3-d5df09087418", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v2beta18", "url": "https://skaffold.dev/docs/references/yaml/?version=v2beta18", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what skaffold.yaml is in skaffold?\n\nAssistant: Sure, I'd be happy to explain skaffold.yaml in skaffold.\n\n# skaffold.yaml\n\nThis page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and configuration management.Here's a quick rundown of what this is about:\n\n## Tip\n\nThe Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based validation, diagnostics, quick documentation, code completions, and snippets, that can make it easier to create and edit these files. You can now navigate the skaffold.yaml reference from an inner element to its upper levels using the tooltip that appears on hover, clicking on the parent element you want to go.\n\n## YAML anchors\n\nAnchors can be defined by having top-level keys starting with a dot, e.g. .common_stuff: &alias_name. You can then reuse the value using *alias_name.\n\n## Organizing multiple configurations\n\nMultiple configurations can define dependencies on each other to construct an arbitrarily nested tree of project component dependencies. Management of multiple configurations can be simplified by grouping them together in the same file (separated by --- in YAML).\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v1alpha3", "title": "skaffold.yaml", "description": "This page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and configuration management.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:30:04", "type": "overview", "page_metadata": {"robots": "index, follow", "twitter:card": "summary", "og:url": "https://skaffold.dev/docs/references/yaml/", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "og:type": "website", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "language": "en", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "twitter:title": "skaffold.yaml", "ogSiteName": "Skaffold", "og:description": "Easy and Repeatable Container & Kubernetes Development", "ogTitle": "skaffold.yaml", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "og:site_name": "Skaffold", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "title": "skaffold.yaml | Skaffold", "og:title": "skaffold.yaml", "generator": "Hugo 0.99.1", "scrapeId": "fed60305-80e2-483b-a555-3deffa345e7f", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v1alpha3", "url": "https://skaffold.dev/docs/references/yaml/?version=v1alpha3", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I tip in skaffold?\n\nAssistant: To tip in skaffold, here's what you do:\nThe Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based validation, diagnostics, quick documentation, code completions, and snippets, that can make it easier to create and edit these files. You can now navigate the skaffold.yaml reference from an inner element to its upper levels using the tooltip that appears on hover, clicking on the parent element you want to go..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v1alpha3", "title": "skaffold.yaml", "description": "This page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and configuration management.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:30:04", "type": "section_detail", "page_metadata": {"robots": "index, follow", "twitter:card": "summary", "og:url": "https://skaffold.dev/docs/references/yaml/", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "og:type": "website", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "language": "en", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "twitter:title": "skaffold.yaml", "ogSiteName": "Skaffold", "og:description": "Easy and Repeatable Container & Kubernetes Development", "ogTitle": "skaffold.yaml", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "og:site_name": "Skaffold", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "title": "skaffold.yaml | Skaffold", "og:title": "skaffold.yaml", "generator": "Hugo 0.99.1", "scrapeId": "fed60305-80e2-483b-a555-3deffa345e7f", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v1alpha3", "url": "https://skaffold.dev/docs/references/yaml/?version=v1alpha3", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I yaml anchors in skaffold?\n\nAssistant: To yaml anchors in skaffold, here's what you do:\nAnchors can be defined by having top-level keys starting with a dot, e.g. .common_stuff: &alias_name. You can then reuse the value using *alias_name..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v1alpha3", "title": "skaffold.yaml", "description": "This page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and configuration management.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:30:04", "type": "section_detail", "page_metadata": {"robots": "index, follow", "twitter:card": "summary", "og:url": "https://skaffold.dev/docs/references/yaml/", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "og:type": "website", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "language": "en", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "twitter:title": "skaffold.yaml", "ogSiteName": "Skaffold", "og:description": "Easy and Repeatable Container & Kubernetes Development", "ogTitle": "skaffold.yaml", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "og:site_name": "Skaffold", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "title": "skaffold.yaml | Skaffold", "og:title": "skaffold.yaml", "generator": "Hugo 0.99.1", "scrapeId": "fed60305-80e2-483b-a555-3deffa345e7f", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v1alpha3", "url": "https://skaffold.dev/docs/references/yaml/?version=v1alpha3", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I organizing multiple configurations in skaffold?\n\nAssistant: To organizing multiple configurations in skaffold, here's what you do:\nMultiple configurations can define dependencies on each other to construct an arbitrarily nested tree of project component dependencies. Management of multiple configurations can be simplified by grouping them together in the same file (separated by --- in YAML)..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v1alpha3", "title": "skaffold.yaml", "description": "This page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and configuration management.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:30:04", "type": "section_detail", "page_metadata": {"robots": "index, follow", "twitter:card": "summary", "og:url": "https://skaffold.dev/docs/references/yaml/", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "og:type": "website", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "language": "en", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "twitter:title": "skaffold.yaml", "ogSiteName": "Skaffold", "og:description": "Easy and Repeatable Container & Kubernetes Development", "ogTitle": "skaffold.yaml", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "og:site_name": "Skaffold", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "title": "skaffold.yaml | Skaffold", "og:title": "skaffold.yaml", "generator": "Hugo 0.99.1", "scrapeId": "fed60305-80e2-483b-a555-3deffa345e7f", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v1alpha3", "url": "https://skaffold.dev/docs/references/yaml/?version=v1alpha3", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: What are some tips for using skaffold.yaml in skaffold effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nUse Cloud Code IDE extensions for authoring assistance with skaffold.yaml files.\n\nUtilize YAML anchors for reusing values in configurations.\n\nGroup multiple configurations in the same file for easier management.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v1alpha3", "title": "skaffold.yaml", "description": "This page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and configuration management.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:30:04", "type": "best_practices", "page_metadata": {"robots": "index, follow", "twitter:card": "summary", "og:url": "https://skaffold.dev/docs/references/yaml/", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "og:type": "website", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "language": "en", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "twitter:title": "skaffold.yaml", "ogSiteName": "Skaffold", "og:description": "Easy and Repeatable Container & Kubernetes Development", "ogTitle": "skaffold.yaml", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "og:site_name": "Skaffold", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "title": "skaffold.yaml | Skaffold", "og:title": "skaffold.yaml", "generator": "Hugo 0.99.1", "scrapeId": "fed60305-80e2-483b-a555-3deffa345e7f", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v1alpha3", "url": "https://skaffold.dev/docs/references/yaml/?version=v1alpha3", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what skaffold.yaml is in skaffold?\n\nAssistant: Sure, I'd be happy to explain skaffold.yaml in skaffold.\n\n# skaffold.yaml\n\nDocumentation for configuring and using skaffold.yaml files in Cloud Code IDE.Here's a quick rundown of what this is about:\n\n## Tip\n\nThe Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based validation, diagnostics, quick documentation, code completions, and snippets, that can make it easier to create and edit these files. You can now navigate the skaffold.yaml reference from an inner element to its upper levels using the tooltip that appears on hover, clicking on the parent element you want to go.\n\n## YAML anchors\n\nAnchors can be defined by having top-level keys starting with a dot, e.g. .common_stuff: &alias_name. You can then reuse the value using *alias_name.\n\n## Organizing multiple configurations\n\nMultiple configurations can define dependencies on each other to construct an arbitrarily nested tree of project component dependencies. Management of multiple configurations can be simplified by grouping them together in the same file (separated by --- in YAML).\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v1beta10", "title": "skaffold.yaml", "description": "Documentation for configuring and using skaffold.yaml files in Cloud Code IDE.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:30:15", "type": "overview", "page_metadata": {"og:url": "https://skaffold.dev/docs/references/yaml/", "ogTitle": "skaffold.yaml", "og:type": "website", "twitter:title": "skaffold.yaml", "robots": "index, follow", "og:title": "skaffold.yaml", "og:description": "Easy and Repeatable Container & Kubernetes Development", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "og:site_name": "Skaffold", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "ogSiteName": "Skaffold", "generator": "Hugo 0.99.1", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "language": "en", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "title": "skaffold.yaml | Skaffold", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "twitter:card": "summary", "scrapeId": "27a5be61-ca00-4473-b14d-e3584a55d32b", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v1beta10", "url": "https://skaffold.dev/docs/references/yaml/?version=v1beta10", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I tip in skaffold?\n\nAssistant: To tip in skaffold, here's what you do:\nThe Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based validation, diagnostics, quick documentation, code completions, and snippets, that can make it easier to create and edit these files. You can now navigate the skaffold.yaml reference from an inner element to its upper levels using the tooltip that appears on hover, clicking on the parent element you want to go..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v1beta10", "title": "skaffold.yaml", "description": "Documentation for configuring and using skaffold.yaml files in Cloud Code IDE.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:30:15", "type": "section_detail", "page_metadata": {"og:url": "https://skaffold.dev/docs/references/yaml/", "ogTitle": "skaffold.yaml", "og:type": "website", "twitter:title": "skaffold.yaml", "robots": "index, follow", "og:title": "skaffold.yaml", "og:description": "Easy and Repeatable Container & Kubernetes Development", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "og:site_name": "Skaffold", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "ogSiteName": "Skaffold", "generator": "Hugo 0.99.1", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "language": "en", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "title": "skaffold.yaml | Skaffold", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "twitter:card": "summary", "scrapeId": "27a5be61-ca00-4473-b14d-e3584a55d32b", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v1beta10", "url": "https://skaffold.dev/docs/references/yaml/?version=v1beta10", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I yaml anchors in skaffold?\n\nAssistant: To yaml anchors in skaffold, here's what you do:\nAnchors can be defined by having top-level keys starting with a dot, e.g. .common_stuff: &alias_name. You can then reuse the value using *alias_name..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v1beta10", "title": "skaffold.yaml", "description": "Documentation for configuring and using skaffold.yaml files in Cloud Code IDE.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:30:15", "type": "section_detail", "page_metadata": {"og:url": "https://skaffold.dev/docs/references/yaml/", "ogTitle": "skaffold.yaml", "og:type": "website", "twitter:title": "skaffold.yaml", "robots": "index, follow", "og:title": "skaffold.yaml", "og:description": "Easy and Repeatable Container & Kubernetes Development", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "og:site_name": "Skaffold", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "ogSiteName": "Skaffold", "generator": "Hugo 0.99.1", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "language": "en", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "title": "skaffold.yaml | Skaffold", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "twitter:card": "summary", "scrapeId": "27a5be61-ca00-4473-b14d-e3584a55d32b", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v1beta10", "url": "https://skaffold.dev/docs/references/yaml/?version=v1beta10", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I organizing multiple configurations in skaffold?\n\nAssistant: To organizing multiple configurations in skaffold, here's what you do:\nMultiple configurations can define dependencies on each other to construct an arbitrarily nested tree of project component dependencies. Management of multiple configurations can be simplified by grouping them together in the same file (separated by --- in YAML)..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v1beta10", "title": "skaffold.yaml", "description": "Documentation for configuring and using skaffold.yaml files in Cloud Code IDE.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:30:15", "type": "section_detail", "page_metadata": {"og:url": "https://skaffold.dev/docs/references/yaml/", "ogTitle": "skaffold.yaml", "og:type": "website", "twitter:title": "skaffold.yaml", "robots": "index, follow", "og:title": "skaffold.yaml", "og:description": "Easy and Repeatable Container & Kubernetes Development", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "og:site_name": "Skaffold", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "ogSiteName": "Skaffold", "generator": "Hugo 0.99.1", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "language": "en", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "title": "skaffold.yaml | Skaffold", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "twitter:card": "summary", "scrapeId": "27a5be61-ca00-4473-b14d-e3584a55d32b", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v1beta10", "url": "https://skaffold.dev/docs/references/yaml/?version=v1beta10", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: What are some tips for using skaffold.yaml in skaffold effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nUse Cloud Code IDE extensions for authoring assistance with skaffold.yaml files.\n\nUtilize YAML anchors for reusing values in configurations.\n\nGroup multiple configurations in the same file for better management.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v1beta10", "title": "skaffold.yaml", "description": "Documentation for configuring and using skaffold.yaml files in Cloud Code IDE.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:30:15", "type": "best_practices", "page_metadata": {"og:url": "https://skaffold.dev/docs/references/yaml/", "ogTitle": "skaffold.yaml", "og:type": "website", "twitter:title": "skaffold.yaml", "robots": "index, follow", "og:title": "skaffold.yaml", "og:description": "Easy and Repeatable Container & Kubernetes Development", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "og:site_name": "Skaffold", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "ogSiteName": "Skaffold", "generator": "Hugo 0.99.1", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "language": "en", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "title": "skaffold.yaml | Skaffold", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "twitter:card": "summary", "scrapeId": "27a5be61-ca00-4473-b14d-e3584a55d32b", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v1beta10", "url": "https://skaffold.dev/docs/references/yaml/?version=v1beta10", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what skaffold.yaml is in skaffold?\n\nAssistant: Sure, I'd be happy to explain skaffold.yaml in skaffold.\n\n# skaffold.yaml\n\nThis page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and configuration management.Here's a quick rundown of what this is about:\n\n## Tip\n\nThe Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based validation, diagnostics, quick documentation, code completions, and snippets, that can make it easier to create and edit these files. You can now navigate the skaffold.yaml reference from an inner element to its upper levels using the tooltip that appears on hover, clicking on the parent element you want to go.\n\n## YAML anchors\n\nAnchors can be defined by having top-level keys starting with a dot, e.g. .common_stuff: &alias_name. You can then reuse the value using *alias_name.\n\n## Organizing multiple configurations\n\nMultiple configurations can define dependencies on each other to construct an arbitrarily nested tree of project component dependencies. Management of multiple configurations can be simplified by grouping them together in the same file (separated by --- in YAML).\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v2beta8", "title": "skaffold.yaml", "description": "This page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and configuration management.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:30:36", "type": "overview", "page_metadata": {"language": "en", "generator": "Hugo 0.99.1", "og:type": "website", "title": "skaffold.yaml | Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:description": "Easy and Repeatable Container & Kubernetes Development", "twitter:card": "summary", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "og:url": "https://skaffold.dev/docs/references/yaml/", "robots": "index, follow", "og:site_name": "Skaffold", "ogTitle": "skaffold.yaml", "ogSiteName": "Skaffold", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "twitter:title": "skaffold.yaml", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "og:title": "skaffold.yaml", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "scrapeId": "db3db331-ce2b-443f-9933-0e10fd5e5ac3", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v2beta8", "url": "https://skaffold.dev/docs/references/yaml/?version=v2beta8", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I tip in skaffold?\n\nAssistant: To tip in skaffold, here's what you do:\nThe Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based validation, diagnostics, quick documentation, code completions, and snippets, that can make it easier to create and edit these files. You can now navigate the skaffold.yaml reference from an inner element to its upper levels using the tooltip that appears on hover, clicking on the parent element you want to go..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v2beta8", "title": "skaffold.yaml", "description": "This page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and configuration management.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:30:36", "type": "section_detail", "page_metadata": {"language": "en", "generator": "Hugo 0.99.1", "og:type": "website", "title": "skaffold.yaml | Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:description": "Easy and Repeatable Container & Kubernetes Development", "twitter:card": "summary", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "og:url": "https://skaffold.dev/docs/references/yaml/", "robots": "index, follow", "og:site_name": "Skaffold", "ogTitle": "skaffold.yaml", "ogSiteName": "Skaffold", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "twitter:title": "skaffold.yaml", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "og:title": "skaffold.yaml", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "scrapeId": "db3db331-ce2b-443f-9933-0e10fd5e5ac3", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v2beta8", "url": "https://skaffold.dev/docs/references/yaml/?version=v2beta8", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I yaml anchors in skaffold?\n\nAssistant: To yaml anchors in skaffold, here's what you do:\nAnchors can be defined by having top-level keys starting with a dot, e.g. .common_stuff: &alias_name. You can then reuse the value using *alias_name..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v2beta8", "title": "skaffold.yaml", "description": "This page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and configuration management.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:30:36", "type": "section_detail", "page_metadata": {"language": "en", "generator": "Hugo 0.99.1", "og:type": "website", "title": "skaffold.yaml | Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:description": "Easy and Repeatable Container & Kubernetes Development", "twitter:card": "summary", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "og:url": "https://skaffold.dev/docs/references/yaml/", "robots": "index, follow", "og:site_name": "Skaffold", "ogTitle": "skaffold.yaml", "ogSiteName": "Skaffold", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "twitter:title": "skaffold.yaml", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "og:title": "skaffold.yaml", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "scrapeId": "db3db331-ce2b-443f-9933-0e10fd5e5ac3", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v2beta8", "url": "https://skaffold.dev/docs/references/yaml/?version=v2beta8", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I organizing multiple configurations in skaffold?\n\nAssistant: To organizing multiple configurations in skaffold, here's what you do:\nMultiple configurations can define dependencies on each other to construct an arbitrarily nested tree of project component dependencies. Management of multiple configurations can be simplified by grouping them together in the same file (separated by --- in YAML)..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v2beta8", "title": "skaffold.yaml", "description": "This page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and configuration management.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:30:36", "type": "section_detail", "page_metadata": {"language": "en", "generator": "Hugo 0.99.1", "og:type": "website", "title": "skaffold.yaml | Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:description": "Easy and Repeatable Container & Kubernetes Development", "twitter:card": "summary", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "og:url": "https://skaffold.dev/docs/references/yaml/", "robots": "index, follow", "og:site_name": "Skaffold", "ogTitle": "skaffold.yaml", "ogSiteName": "Skaffold", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "twitter:title": "skaffold.yaml", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "og:title": "skaffold.yaml", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "scrapeId": "db3db331-ce2b-443f-9933-0e10fd5e5ac3", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v2beta8", "url": "https://skaffold.dev/docs/references/yaml/?version=v2beta8", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: What are some tips for using skaffold.yaml in skaffold effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nUse Cloud Code IDE extensions for authoring assistance with skaffold.yaml files.\n\nUtilize YAML anchors for reusing values in configurations.\n\nGroup multiple configurations in the same file for easier management.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v2beta8", "title": "skaffold.yaml", "description": "This page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and configuration management.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:30:36", "type": "best_practices", "page_metadata": {"language": "en", "generator": "Hugo 0.99.1", "og:type": "website", "title": "skaffold.yaml | Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:description": "Easy and Repeatable Container & Kubernetes Development", "twitter:card": "summary", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "og:url": "https://skaffold.dev/docs/references/yaml/", "robots": "index, follow", "og:site_name": "Skaffold", "ogTitle": "skaffold.yaml", "ogSiteName": "Skaffold", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "twitter:title": "skaffold.yaml", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "og:title": "skaffold.yaml", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "scrapeId": "db3db331-ce2b-443f-9933-0e10fd5e5ac3", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v2beta8", "url": "https://skaffold.dev/docs/references/yaml/?version=v2beta8", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what skaffold.yaml is in skaffold?\n\nAssistant: Sure, I'd be happy to explain skaffold.yaml in skaffold.\n\n# skaffold.yaml\n\nThis page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and organization of configurations.Here's a quick rundown of what this is about:\n\n## YAML anchors\n\nAnchors can be defined by having top-level keys starting with a dot, e.g. `.common_stuff: &alias_name`. You can then reuse the value using `*alias_name`.\n\n## Organizing multiple configurations\n\nMultiple configurations can define dependencies on each other to construct an arbitrarily nested tree of project component dependencies. Management of multiple configurations can be simplified by grouping them together in the same file (separated by --- in YAML).\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v1beta12", "title": "skaffold.yaml", "description": "This page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and organization of configurations.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 04:30:44", "type": "overview", "page_metadata": {"twitter:title": "skaffold.yaml", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:url": "https://skaffold.dev/docs/references/yaml/", "language": "en", "og:description": "Easy and Repeatable Container & Kubernetes Development", "title": "skaffold.yaml | Skaffold", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "ogSiteName": "Skaffold", "twitter:card": "summary", "robots": "index, follow", "og:site_name": "Skaffold", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:type": "website", "generator": "Hugo 0.99.1", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "ogTitle": "skaffold.yaml", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "og:title": "skaffold.yaml", "scrapeId": "ca0e1013-d10e-4e67-ad02-3d984a10d822", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v1beta12", "url": "https://skaffold.dev/docs/references/yaml/?version=v1beta12", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I yaml anchors in skaffold?\n\nAssistant: To yaml anchors in skaffold, here's what you do:\nAnchors can be defined by having top-level keys starting with a dot, e.g. `.common_stuff: &alias_name`. You can then reuse the value using `*alias_name`..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v1beta12", "title": "skaffold.yaml", "description": "This page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and organization of configurations.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 04:30:44", "type": "section_detail", "page_metadata": {"twitter:title": "skaffold.yaml", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:url": "https://skaffold.dev/docs/references/yaml/", "language": "en", "og:description": "Easy and Repeatable Container & Kubernetes Development", "title": "skaffold.yaml | Skaffold", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "ogSiteName": "Skaffold", "twitter:card": "summary", "robots": "index, follow", "og:site_name": "Skaffold", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:type": "website", "generator": "Hugo 0.99.1", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "ogTitle": "skaffold.yaml", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "og:title": "skaffold.yaml", "scrapeId": "ca0e1013-d10e-4e67-ad02-3d984a10d822", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v1beta12", "url": "https://skaffold.dev/docs/references/yaml/?version=v1beta12", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I organizing multiple configurations in skaffold?\n\nAssistant: To organizing multiple configurations in skaffold, here's what you do:\nMultiple configurations can define dependencies on each other to construct an arbitrarily nested tree of project component dependencies. Management of multiple configurations can be simplified by grouping them together in the same file (separated by --- in YAML)..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v1beta12", "title": "skaffold.yaml", "description": "This page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and organization of configurations.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 04:30:44", "type": "section_detail", "page_metadata": {"twitter:title": "skaffold.yaml", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:url": "https://skaffold.dev/docs/references/yaml/", "language": "en", "og:description": "Easy and Repeatable Container & Kubernetes Development", "title": "skaffold.yaml | Skaffold", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "ogSiteName": "Skaffold", "twitter:card": "summary", "robots": "index, follow", "og:site_name": "Skaffold", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:type": "website", "generator": "Hugo 0.99.1", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "ogTitle": "skaffold.yaml", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "og:title": "skaffold.yaml", "scrapeId": "ca0e1013-d10e-4e67-ad02-3d984a10d822", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v1beta12", "url": "https://skaffold.dev/docs/references/yaml/?version=v1beta12", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: What are some tips for using skaffold.yaml in skaffold effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nThe Cloud Code IDE extensions provide authoring assistance for `skaffold.yaml` files in the form of schema based validation, diagnostics, quick documentation, code completions, and snippets, that can make it easier to create and edit these files.\n\nYou can navigate the `skaffold.yaml` reference from an inner element to its upper levels using the tooltip that appears on hover, clicking on the parent element you want to go.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v1beta12", "title": "skaffold.yaml", "description": "This page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and organization of configurations.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 04:30:44", "type": "best_practices", "page_metadata": {"twitter:title": "skaffold.yaml", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:url": "https://skaffold.dev/docs/references/yaml/", "language": "en", "og:description": "Easy and Repeatable Container & Kubernetes Development", "title": "skaffold.yaml | Skaffold", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "ogSiteName": "Skaffold", "twitter:card": "summary", "robots": "index, follow", "og:site_name": "Skaffold", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:type": "website", "generator": "Hugo 0.99.1", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "ogTitle": "skaffold.yaml", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "og:title": "skaffold.yaml", "scrapeId": "ca0e1013-d10e-4e67-ad02-3d984a10d822", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v1beta12", "url": "https://skaffold.dev/docs/references/yaml/?version=v1beta12", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what skaffold.yaml is in skaffold?\n\nAssistant: Sure, I'd be happy to explain skaffold.yaml in skaffold.\n\n# skaffold.yaml\n\nThis page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and organization of configurations.Here's a quick rundown of what this is about:\n\n## YAML anchors\n\nAnchors can be defined by having top-level keys starting with a dot, e.g. `.common_stuff: &alias_name`. You can then reuse the value using `*alias_name`.\n\n## Organizing multiple configurations\n\nMultiple configurations can define dependencies on each other to construct an arbitrarily nested tree of project component dependencies. Management of multiple configurations can be simplified by grouping them together in the same file (separated by --- in YAML).\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v1", "title": "skaffold.yaml", "description": "This page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and organization of configurations.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 04:31:06", "type": "overview", "page_metadata": {"favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "language": "en", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "og:type": "website", "og:description": "Easy and Repeatable Container & Kubernetes Development", "og:site_name": "Skaffold", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "ogTitle": "skaffold.yaml", "twitter:card": "summary", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "generator": "Hugo 0.99.1", "og:title": "skaffold.yaml", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "ogSiteName": "Skaffold", "og:url": "https://skaffold.dev/docs/references/yaml/", "twitter:title": "skaffold.yaml", "title": "skaffold.yaml | Skaffold", "robots": "index, follow", "scrapeId": "1110faec-63fd-481a-98d9-8a7ceb0a4a10", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v1", "url": "https://skaffold.dev/docs/references/yaml/?version=v1", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I yaml anchors in skaffold?\n\nAssistant: To yaml anchors in skaffold, here's what you do:\nAnchors can be defined by having top-level keys starting with a dot, e.g. `.common_stuff: &alias_name`. You can then reuse the value using `*alias_name`..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v1", "title": "skaffold.yaml", "description": "This page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and organization of configurations.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 04:31:06", "type": "section_detail", "page_metadata": {"favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "language": "en", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "og:type": "website", "og:description": "Easy and Repeatable Container & Kubernetes Development", "og:site_name": "Skaffold", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "ogTitle": "skaffold.yaml", "twitter:card": "summary", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "generator": "Hugo 0.99.1", "og:title": "skaffold.yaml", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "ogSiteName": "Skaffold", "og:url": "https://skaffold.dev/docs/references/yaml/", "twitter:title": "skaffold.yaml", "title": "skaffold.yaml | Skaffold", "robots": "index, follow", "scrapeId": "1110faec-63fd-481a-98d9-8a7ceb0a4a10", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v1", "url": "https://skaffold.dev/docs/references/yaml/?version=v1", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I organizing multiple configurations in skaffold?\n\nAssistant: To organizing multiple configurations in skaffold, here's what you do:\nMultiple configurations can define dependencies on each other to construct an arbitrarily nested tree of project component dependencies. Management of multiple configurations can be simplified by grouping them together in the same file (separated by --- in YAML)..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v1", "title": "skaffold.yaml", "description": "This page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and organization of configurations.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 04:31:06", "type": "section_detail", "page_metadata": {"favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "language": "en", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "og:type": "website", "og:description": "Easy and Repeatable Container & Kubernetes Development", "og:site_name": "Skaffold", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "ogTitle": "skaffold.yaml", "twitter:card": "summary", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "generator": "Hugo 0.99.1", "og:title": "skaffold.yaml", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "ogSiteName": "Skaffold", "og:url": "https://skaffold.dev/docs/references/yaml/", "twitter:title": "skaffold.yaml", "title": "skaffold.yaml | Skaffold", "robots": "index, follow", "scrapeId": "1110faec-63fd-481a-98d9-8a7ceb0a4a10", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v1", "url": "https://skaffold.dev/docs/references/yaml/?version=v1", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: What are some tips for using skaffold.yaml in skaffold effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nThe Cloud Code IDE extensions provide authoring assistance for `skaffold.yaml` files in the form of schema based validation, diagnostics, quick documentation, code completions, and snippets, that can make it easier to create and edit these files.\n\nYou can navigate the `skaffold.yaml` reference from an inner element to its upper levels using the tooltip that appears on hover, clicking on the parent element you want to go.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v1", "title": "skaffold.yaml", "description": "This page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and organization of configurations.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 04:31:06", "type": "best_practices", "page_metadata": {"favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "language": "en", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "og:type": "website", "og:description": "Easy and Repeatable Container & Kubernetes Development", "og:site_name": "Skaffold", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "ogTitle": "skaffold.yaml", "twitter:card": "summary", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "generator": "Hugo 0.99.1", "og:title": "skaffold.yaml", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "ogSiteName": "Skaffold", "og:url": "https://skaffold.dev/docs/references/yaml/", "twitter:title": "skaffold.yaml", "title": "skaffold.yaml | Skaffold", "robots": "index, follow", "scrapeId": "1110faec-63fd-481a-98d9-8a7ceb0a4a10", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v1", "url": "https://skaffold.dev/docs/references/yaml/?version=v1", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what skaffold.yaml is in skaffold?\n\nAssistant: Sure, I'd be happy to explain skaffold.yaml in skaffold.\n\n# skaffold.yaml\n\nDocumentation for the skaffold.yaml file, including tips, notes, and configuration examples.Here's a quick rundown of what this is about:\n\n## Tip\n\nThe Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based validation, diagnostics, quick documentation, code completions, and snippets, that can make it easier to create and edit these files. You can now navigate the skaffold.yaml reference from an inner element to its upper levels using the tooltip that appears on hover, clicking on the parent element you want to go.\n\n## Note\n\nImportant: To use this schema, you need Skaffold version v1.18.0 or later. Release Notes.\n\n## YAML anchors\n\nAnchors can be defined by having top-level keys starting with a dot, e.g. .common_stuff: &alias_name. You can then reuse the value using *alias_name.\n\n## Organizing multiple configurations\n\nMultiple configurations can define dependencies on each other to construct an arbitrarily nested tree of project component dependencies. Management of multiple configurations can be simplified by grouping them together in the same file (separated by --- in YAML). Last modified January 23, 2025: release: v2.14.0 (#9668) (f132ab25).\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v2beta11", "title": "skaffold.yaml", "description": "Documentation for the skaffold.yaml file, including tips, notes, and configuration examples.", "has_code_examples": false, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 04:31:15", "type": "overview", "page_metadata": {"ogUrl": "https://skaffold.dev/docs/references/yaml/", "title": "skaffold.yaml | Skaffold", "og:site_name": "Skaffold", "twitter:card": "summary", "og:title": "skaffold.yaml", "ogSiteName": "Skaffold", "twitter:title": "skaffold.yaml", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "robots": "index, follow", "og:description": "Easy and Repeatable Container & Kubernetes Development", "ogTitle": "skaffold.yaml", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "language": "en", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "generator": "Hugo 0.99.1", "og:type": "website", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "og:url": "https://skaffold.dev/docs/references/yaml/", "scrapeId": "cd1f84f7-2dae-4f93-911e-4457750ef2f8", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v2beta11", "url": "https://skaffold.dev/docs/references/yaml/?version=v2beta11", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I tip in skaffold?\n\nAssistant: To tip in skaffold, here's what you do:\nThe Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based validation, diagnostics, quick documentation, code completions, and snippets, that can make it easier to create and edit these files. You can now navigate the skaffold.yaml reference from an inner element to its upper levels using the tooltip that appears on hover, clicking on the parent element you want to go..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v2beta11", "title": "skaffold.yaml", "description": "Documentation for the skaffold.yaml file, including tips, notes, and configuration examples.", "has_code_examples": false, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 04:31:15", "type": "section_detail", "page_metadata": {"ogUrl": "https://skaffold.dev/docs/references/yaml/", "title": "skaffold.yaml | Skaffold", "og:site_name": "Skaffold", "twitter:card": "summary", "og:title": "skaffold.yaml", "ogSiteName": "Skaffold", "twitter:title": "skaffold.yaml", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "robots": "index, follow", "og:description": "Easy and Repeatable Container & Kubernetes Development", "ogTitle": "skaffold.yaml", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "language": "en", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "generator": "Hugo 0.99.1", "og:type": "website", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "og:url": "https://skaffold.dev/docs/references/yaml/", "scrapeId": "cd1f84f7-2dae-4f93-911e-4457750ef2f8", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v2beta11", "url": "https://skaffold.dev/docs/references/yaml/?version=v2beta11", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I note in skaffold?\n\nAssistant: To note in skaffold, here's what you do:\nImportant: To use this schema, you need Skaffold version v1.18.0 or later. Release Notes..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v2beta11", "title": "skaffold.yaml", "description": "Documentation for the skaffold.yaml file, including tips, notes, and configuration examples.", "has_code_examples": false, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 04:31:15", "type": "section_detail", "page_metadata": {"ogUrl": "https://skaffold.dev/docs/references/yaml/", "title": "skaffold.yaml | Skaffold", "og:site_name": "Skaffold", "twitter:card": "summary", "og:title": "skaffold.yaml", "ogSiteName": "Skaffold", "twitter:title": "skaffold.yaml", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "robots": "index, follow", "og:description": "Easy and Repeatable Container & Kubernetes Development", "ogTitle": "skaffold.yaml", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "language": "en", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "generator": "Hugo 0.99.1", "og:type": "website", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "og:url": "https://skaffold.dev/docs/references/yaml/", "scrapeId": "cd1f84f7-2dae-4f93-911e-4457750ef2f8", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v2beta11", "url": "https://skaffold.dev/docs/references/yaml/?version=v2beta11", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I yaml anchors in skaffold?\n\nAssistant: To yaml anchors in skaffold, here's what you do:\nAnchors can be defined by having top-level keys starting with a dot, e.g. .common_stuff: &alias_name. You can then reuse the value using *alias_name..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v2beta11", "title": "skaffold.yaml", "description": "Documentation for the skaffold.yaml file, including tips, notes, and configuration examples.", "has_code_examples": false, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 04:31:15", "type": "section_detail", "page_metadata": {"ogUrl": "https://skaffold.dev/docs/references/yaml/", "title": "skaffold.yaml | Skaffold", "og:site_name": "Skaffold", "twitter:card": "summary", "og:title": "skaffold.yaml", "ogSiteName": "Skaffold", "twitter:title": "skaffold.yaml", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "robots": "index, follow", "og:description": "Easy and Repeatable Container & Kubernetes Development", "ogTitle": "skaffold.yaml", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "language": "en", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "generator": "Hugo 0.99.1", "og:type": "website", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "og:url": "https://skaffold.dev/docs/references/yaml/", "scrapeId": "cd1f84f7-2dae-4f93-911e-4457750ef2f8", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v2beta11", "url": "https://skaffold.dev/docs/references/yaml/?version=v2beta11", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I organizing multiple configurations in skaffold?\n\nAssistant: To organizing multiple configurations in skaffold, here's what you do:\nMultiple configurations can define dependencies on each other to construct an arbitrarily nested tree of project component dependencies. Management of multiple configurations can be simplified by grouping them together in the same file (separated by --- in YAML). Last modified January 23, 2025: release: v2.14.0 (#9668) (f132ab25)..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v2beta11", "title": "skaffold.yaml", "description": "Documentation for the skaffold.yaml file, including tips, notes, and configuration examples.", "has_code_examples": false, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 04:31:15", "type": "section_detail", "page_metadata": {"ogUrl": "https://skaffold.dev/docs/references/yaml/", "title": "skaffold.yaml | Skaffold", "og:site_name": "Skaffold", "twitter:card": "summary", "og:title": "skaffold.yaml", "ogSiteName": "Skaffold", "twitter:title": "skaffold.yaml", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "robots": "index, follow", "og:description": "Easy and Repeatable Container & Kubernetes Development", "ogTitle": "skaffold.yaml", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "language": "en", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "generator": "Hugo 0.99.1", "og:type": "website", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "og:url": "https://skaffold.dev/docs/references/yaml/", "scrapeId": "cd1f84f7-2dae-4f93-911e-4457750ef2f8", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v2beta11", "url": "https://skaffold.dev/docs/references/yaml/?version=v2beta11", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: What are some tips for using skaffold.yaml in skaffold effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nUse Cloud Code IDE extensions for authoring assistance with skaffold.yaml files.\n\nEnsure you are using Skaffold version v1.18.0 or later to utilize the schema.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v2beta11", "title": "skaffold.yaml", "description": "Documentation for the skaffold.yaml file, including tips, notes, and configuration examples.", "has_code_examples": false, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 04:31:15", "type": "best_practices", "page_metadata": {"ogUrl": "https://skaffold.dev/docs/references/yaml/", "title": "skaffold.yaml | Skaffold", "og:site_name": "Skaffold", "twitter:card": "summary", "og:title": "skaffold.yaml", "ogSiteName": "Skaffold", "twitter:title": "skaffold.yaml", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "robots": "index, follow", "og:description": "Easy and Repeatable Container & Kubernetes Development", "ogTitle": "skaffold.yaml", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "language": "en", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "generator": "Hugo 0.99.1", "og:type": "website", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "og:url": "https://skaffold.dev/docs/references/yaml/", "scrapeId": "cd1f84f7-2dae-4f93-911e-4457750ef2f8", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v2beta11", "url": "https://skaffold.dev/docs/references/yaml/?version=v2beta11", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what skaffold.yaml is in skaffold?\n\nAssistant: Sure, I'd be happy to explain skaffold.yaml in skaffold.\n\n# skaffold.yaml\n\nThis page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and configuration management.Here's a quick rundown of what this is about:\n\n## Tip\n\nThe Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based validation, diagnostics, quick documentation, code completions, and snippets, that can make it easier to create and edit these files. You can now navigate the skaffold.yaml reference from an inner element to its upper levels using the tooltip that appears on hover, clicking on the parent element you want to go.\n\n## YAML anchors\n\nAnchors can be defined by having top-level keys starting with a dot, e.g. .common_stuff: &alias_name. You can then reuse the value using *alias_name.\n\n## Organizing multiple configurations\n\nMultiple configurations can define dependencies on each other to construct an arbitrarily nested tree of project component dependencies. Management of multiple configurations can be simplified by grouping them together in the same file (separated by --- in YAML).\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v2beta9", "title": "skaffold.yaml", "description": "This page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and configuration management.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:31:25", "type": "overview", "page_metadata": {"ogTitle": "skaffold.yaml", "og:description": "Easy and Repeatable Container & Kubernetes Development", "generator": "Hugo 0.99.1", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "twitter:card": "summary", "twitter:title": "skaffold.yaml", "title": "skaffold.yaml | Skaffold", "ogSiteName": "Skaffold", "og:title": "skaffold.yaml", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "og:type": "website", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:url": "https://skaffold.dev/docs/references/yaml/", "language": "en", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "og:site_name": "Skaffold", "robots": "index, follow", "scrapeId": "fc9d3e48-02bb-4fc7-8496-6a6310baccbd", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v2beta9", "url": "https://skaffold.dev/docs/references/yaml/?version=v2beta9", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I tip in skaffold?\n\nAssistant: To tip in skaffold, here's what you do:\nThe Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based validation, diagnostics, quick documentation, code completions, and snippets, that can make it easier to create and edit these files. You can now navigate the skaffold.yaml reference from an inner element to its upper levels using the tooltip that appears on hover, clicking on the parent element you want to go..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v2beta9", "title": "skaffold.yaml", "description": "This page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and configuration management.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:31:25", "type": "section_detail", "page_metadata": {"ogTitle": "skaffold.yaml", "og:description": "Easy and Repeatable Container & Kubernetes Development", "generator": "Hugo 0.99.1", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "twitter:card": "summary", "twitter:title": "skaffold.yaml", "title": "skaffold.yaml | Skaffold", "ogSiteName": "Skaffold", "og:title": "skaffold.yaml", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "og:type": "website", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:url": "https://skaffold.dev/docs/references/yaml/", "language": "en", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "og:site_name": "Skaffold", "robots": "index, follow", "scrapeId": "fc9d3e48-02bb-4fc7-8496-6a6310baccbd", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v2beta9", "url": "https://skaffold.dev/docs/references/yaml/?version=v2beta9", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I yaml anchors in skaffold?\n\nAssistant: To yaml anchors in skaffold, here's what you do:\nAnchors can be defined by having top-level keys starting with a dot, e.g. .common_stuff: &alias_name. You can then reuse the value using *alias_name..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v2beta9", "title": "skaffold.yaml", "description": "This page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and configuration management.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:31:25", "type": "section_detail", "page_metadata": {"ogTitle": "skaffold.yaml", "og:description": "Easy and Repeatable Container & Kubernetes Development", "generator": "Hugo 0.99.1", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "twitter:card": "summary", "twitter:title": "skaffold.yaml", "title": "skaffold.yaml | Skaffold", "ogSiteName": "Skaffold", "og:title": "skaffold.yaml", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "og:type": "website", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:url": "https://skaffold.dev/docs/references/yaml/", "language": "en", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "og:site_name": "Skaffold", "robots": "index, follow", "scrapeId": "fc9d3e48-02bb-4fc7-8496-6a6310baccbd", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v2beta9", "url": "https://skaffold.dev/docs/references/yaml/?version=v2beta9", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I organizing multiple configurations in skaffold?\n\nAssistant: To organizing multiple configurations in skaffold, here's what you do:\nMultiple configurations can define dependencies on each other to construct an arbitrarily nested tree of project component dependencies. Management of multiple configurations can be simplified by grouping them together in the same file (separated by --- in YAML)..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v2beta9", "title": "skaffold.yaml", "description": "This page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and configuration management.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:31:25", "type": "section_detail", "page_metadata": {"ogTitle": "skaffold.yaml", "og:description": "Easy and Repeatable Container & Kubernetes Development", "generator": "Hugo 0.99.1", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "twitter:card": "summary", "twitter:title": "skaffold.yaml", "title": "skaffold.yaml | Skaffold", "ogSiteName": "Skaffold", "og:title": "skaffold.yaml", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "og:type": "website", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:url": "https://skaffold.dev/docs/references/yaml/", "language": "en", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "og:site_name": "Skaffold", "robots": "index, follow", "scrapeId": "fc9d3e48-02bb-4fc7-8496-6a6310baccbd", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v2beta9", "url": "https://skaffold.dev/docs/references/yaml/?version=v2beta9", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: What are some tips for using skaffold.yaml in skaffold effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nUse Cloud Code IDE extensions for authoring assistance with skaffold.yaml files.\n\nUtilize YAML anchors for reusing values in configurations.\n\nGroup multiple configurations in the same file for better management.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v2beta9", "title": "skaffold.yaml", "description": "This page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and configuration management.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:31:25", "type": "best_practices", "page_metadata": {"ogTitle": "skaffold.yaml", "og:description": "Easy and Repeatable Container & Kubernetes Development", "generator": "Hugo 0.99.1", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "twitter:card": "summary", "twitter:title": "skaffold.yaml", "title": "skaffold.yaml | Skaffold", "ogSiteName": "Skaffold", "og:title": "skaffold.yaml", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "og:type": "website", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:url": "https://skaffold.dev/docs/references/yaml/", "language": "en", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "og:site_name": "Skaffold", "robots": "index, follow", "scrapeId": "fc9d3e48-02bb-4fc7-8496-6a6310baccbd", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v2beta9", "url": "https://skaffold.dev/docs/references/yaml/?version=v2beta9", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what skaffold.yaml is in skaffold?\n\nAssistant: Sure, I'd be happy to explain skaffold.yaml in skaffold.\n\n# skaffold.yaml\n\nDocumentation for configuring and using skaffold.yaml files in Cloud Code IDE.Here's a quick rundown of what this is about:\n\n## Tip\n\nThe Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based validation, diagnostics, quick documentation, code completions, and snippets, that can make it easier to create and edit these files. You can now navigate the skaffold.yaml reference from an inner element to its upper levels using the tooltip that appears on hover, clicking on the parent element you want to go.\n\n## YAML anchors\n\nAnchors can be defined by having top-level keys starting with a dot, e.g. .common_stuff: &alias_name. You can then reuse the value using *alias_name.\n\n## Organizing multiple configurations\n\nMultiple configurations can define dependencies on each other to construct an arbitrarily nested tree of project component dependencies. Management of multiple configurations can be simplified by grouping them together in the same file (separated by --- in YAML).\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v2alpha3", "title": "skaffold.yaml", "description": "Documentation for configuring and using skaffold.yaml files in Cloud Code IDE.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:31:38", "type": "overview", "page_metadata": {"ogSiteName": "Skaffold", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "twitter:title": "skaffold.yaml", "og:title": "skaffold.yaml", "twitter:card": "summary", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "og:type": "website", "og:url": "https://skaffold.dev/docs/references/yaml/", "generator": "Hugo 0.99.1", "robots": "index, follow", "title": "skaffold.yaml | Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:site_name": "Skaffold", "language": "en", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "og:description": "Easy and Repeatable Container & Kubernetes Development", "ogTitle": "skaffold.yaml", "scrapeId": "1516242e-d9ff-4b60-879e-8fc19f37f100", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v2alpha3", "url": "https://skaffold.dev/docs/references/yaml/?version=v2alpha3", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I tip in skaffold?\n\nAssistant: To tip in skaffold, here's what you do:\nThe Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based validation, diagnostics, quick documentation, code completions, and snippets, that can make it easier to create and edit these files. You can now navigate the skaffold.yaml reference from an inner element to its upper levels using the tooltip that appears on hover, clicking on the parent element you want to go..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v2alpha3", "title": "skaffold.yaml", "description": "Documentation for configuring and using skaffold.yaml files in Cloud Code IDE.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:31:38", "type": "section_detail", "page_metadata": {"ogSiteName": "Skaffold", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "twitter:title": "skaffold.yaml", "og:title": "skaffold.yaml", "twitter:card": "summary", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "og:type": "website", "og:url": "https://skaffold.dev/docs/references/yaml/", "generator": "Hugo 0.99.1", "robots": "index, follow", "title": "skaffold.yaml | Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:site_name": "Skaffold", "language": "en", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "og:description": "Easy and Repeatable Container & Kubernetes Development", "ogTitle": "skaffold.yaml", "scrapeId": "1516242e-d9ff-4b60-879e-8fc19f37f100", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v2alpha3", "url": "https://skaffold.dev/docs/references/yaml/?version=v2alpha3", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I yaml anchors in skaffold?\n\nAssistant: To yaml anchors in skaffold, here's what you do:\nAnchors can be defined by having top-level keys starting with a dot, e.g. .common_stuff: &alias_name. You can then reuse the value using *alias_name..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v2alpha3", "title": "skaffold.yaml", "description": "Documentation for configuring and using skaffold.yaml files in Cloud Code IDE.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:31:38", "type": "section_detail", "page_metadata": {"ogSiteName": "Skaffold", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "twitter:title": "skaffold.yaml", "og:title": "skaffold.yaml", "twitter:card": "summary", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "og:type": "website", "og:url": "https://skaffold.dev/docs/references/yaml/", "generator": "Hugo 0.99.1", "robots": "index, follow", "title": "skaffold.yaml | Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:site_name": "Skaffold", "language": "en", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "og:description": "Easy and Repeatable Container & Kubernetes Development", "ogTitle": "skaffold.yaml", "scrapeId": "1516242e-d9ff-4b60-879e-8fc19f37f100", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v2alpha3", "url": "https://skaffold.dev/docs/references/yaml/?version=v2alpha3", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I organizing multiple configurations in skaffold?\n\nAssistant: To organizing multiple configurations in skaffold, here's what you do:\nMultiple configurations can define dependencies on each other to construct an arbitrarily nested tree of project component dependencies. Management of multiple configurations can be simplified by grouping them together in the same file (separated by --- in YAML)..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v2alpha3", "title": "skaffold.yaml", "description": "Documentation for configuring and using skaffold.yaml files in Cloud Code IDE.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:31:38", "type": "section_detail", "page_metadata": {"ogSiteName": "Skaffold", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "twitter:title": "skaffold.yaml", "og:title": "skaffold.yaml", "twitter:card": "summary", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "og:type": "website", "og:url": "https://skaffold.dev/docs/references/yaml/", "generator": "Hugo 0.99.1", "robots": "index, follow", "title": "skaffold.yaml | Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:site_name": "Skaffold", "language": "en", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "og:description": "Easy and Repeatable Container & Kubernetes Development", "ogTitle": "skaffold.yaml", "scrapeId": "1516242e-d9ff-4b60-879e-8fc19f37f100", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v2alpha3", "url": "https://skaffold.dev/docs/references/yaml/?version=v2alpha3", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: What are some tips for using skaffold.yaml in skaffold effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nUse Cloud Code IDE extensions for authoring assistance with skaffold.yaml files.\n\nUtilize YAML anchors for reusing values in configurations.\n\nGroup multiple configurations in the same file for better management.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v2alpha3", "title": "skaffold.yaml", "description": "Documentation for configuring and using skaffold.yaml files in Cloud Code IDE.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:31:38", "type": "best_practices", "page_metadata": {"ogSiteName": "Skaffold", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "twitter:title": "skaffold.yaml", "og:title": "skaffold.yaml", "twitter:card": "summary", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "og:type": "website", "og:url": "https://skaffold.dev/docs/references/yaml/", "generator": "Hugo 0.99.1", "robots": "index, follow", "title": "skaffold.yaml | Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:site_name": "Skaffold", "language": "en", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "og:description": "Easy and Repeatable Container & Kubernetes Development", "ogTitle": "skaffold.yaml", "scrapeId": "1516242e-d9ff-4b60-879e-8fc19f37f100", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v2alpha3", "url": "https://skaffold.dev/docs/references/yaml/?version=v2alpha3", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what skaffold.yaml is in skaffold?\n\nAssistant: Sure, I'd be happy to explain skaffold.yaml in skaffold.\n\n# skaffold.yaml\n\nThis page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and configuration management.Here's a quick rundown of what this is about:\n\n## Tip\n\nThe Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based validation, diagnostics, quick documentation, code completions, and snippets, that can make it easier to create and edit these files. You can now navigate the skaffold.yaml reference from an inner element to its upper levels using the tooltip that appears on hover, clicking on the parent element you want to go.\n\n## YAML anchors\n\nAnchors can be defined by having top-level keys starting with a dot, e.g. .common_stuff: &alias_name. You can then reuse the value using *alias_name.\n\n## Organizing multiple configurations\n\nMultiple configurations can define dependencies on each other to construct an arbitrarily nested tree of project component dependencies. Management of multiple configurations can be simplified by grouping them together in the same file (separated by --- in YAML). Last modified January 23, 2025: release: v2.14.0 (#9668) (f132ab25)\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v1beta15", "title": "skaffold.yaml", "description": "This page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and configuration management.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:31:54", "type": "overview", "page_metadata": {"generator": "Hugo 0.99.1", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "og:url": "https://skaffold.dev/docs/references/yaml/", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "twitter:card": "summary", "twitter:title": "skaffold.yaml", "og:title": "skaffold.yaml", "ogSiteName": "Skaffold", "robots": "index, follow", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "og:site_name": "Skaffold", "title": "skaffold.yaml | Skaffold", "og:type": "website", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "language": "en", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "ogTitle": "skaffold.yaml", "og:description": "Easy and Repeatable Container & Kubernetes Development", "scrapeId": "f653eafb-882d-477f-bfe0-e1cf0be99784", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v1beta15", "url": "https://skaffold.dev/docs/references/yaml/?version=v1beta15", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I tip in skaffold?\n\nAssistant: To tip in skaffold, here's what you do:\nThe Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based validation, diagnostics, quick documentation, code completions, and snippets, that can make it easier to create and edit these files. You can now navigate the skaffold.yaml reference from an inner element to its upper levels using the tooltip that appears on hover, clicking on the parent element you want to go..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v1beta15", "title": "skaffold.yaml", "description": "This page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and configuration management.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:31:54", "type": "section_detail", "page_metadata": {"generator": "Hugo 0.99.1", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "og:url": "https://skaffold.dev/docs/references/yaml/", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "twitter:card": "summary", "twitter:title": "skaffold.yaml", "og:title": "skaffold.yaml", "ogSiteName": "Skaffold", "robots": "index, follow", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "og:site_name": "Skaffold", "title": "skaffold.yaml | Skaffold", "og:type": "website", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "language": "en", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "ogTitle": "skaffold.yaml", "og:description": "Easy and Repeatable Container & Kubernetes Development", "scrapeId": "f653eafb-882d-477f-bfe0-e1cf0be99784", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v1beta15", "url": "https://skaffold.dev/docs/references/yaml/?version=v1beta15", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I yaml anchors in skaffold?\n\nAssistant: To yaml anchors in skaffold, here's what you do:\nAnchors can be defined by having top-level keys starting with a dot, e.g. .common_stuff: &alias_name. You can then reuse the value using *alias_name..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v1beta15", "title": "skaffold.yaml", "description": "This page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and configuration management.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:31:54", "type": "section_detail", "page_metadata": {"generator": "Hugo 0.99.1", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "og:url": "https://skaffold.dev/docs/references/yaml/", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "twitter:card": "summary", "twitter:title": "skaffold.yaml", "og:title": "skaffold.yaml", "ogSiteName": "Skaffold", "robots": "index, follow", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "og:site_name": "Skaffold", "title": "skaffold.yaml | Skaffold", "og:type": "website", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "language": "en", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "ogTitle": "skaffold.yaml", "og:description": "Easy and Repeatable Container & Kubernetes Development", "scrapeId": "f653eafb-882d-477f-bfe0-e1cf0be99784", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v1beta15", "url": "https://skaffold.dev/docs/references/yaml/?version=v1beta15", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I organizing multiple configurations in skaffold?\n\nAssistant: To organizing multiple configurations in skaffold, here's what you do:\nMultiple configurations can define dependencies on each other to construct an arbitrarily nested tree of project component dependencies. Management of multiple configurations can be simplified by grouping them together in the same file (separated by --- in YAML). Last modified January 23, 2025: release: v2.14.0 (#9668) (f132ab25).\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v1beta15", "title": "skaffold.yaml", "description": "This page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and configuration management.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:31:54", "type": "section_detail", "page_metadata": {"generator": "Hugo 0.99.1", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "og:url": "https://skaffold.dev/docs/references/yaml/", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "twitter:card": "summary", "twitter:title": "skaffold.yaml", "og:title": "skaffold.yaml", "ogSiteName": "Skaffold", "robots": "index, follow", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "og:site_name": "Skaffold", "title": "skaffold.yaml | Skaffold", "og:type": "website", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "language": "en", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "ogTitle": "skaffold.yaml", "og:description": "Easy and Repeatable Container & Kubernetes Development", "scrapeId": "f653eafb-882d-477f-bfe0-e1cf0be99784", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v1beta15", "url": "https://skaffold.dev/docs/references/yaml/?version=v1beta15", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: What are some tips for using skaffold.yaml in skaffold effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nUse Cloud Code IDE extensions for authoring assistance with skaffold.yaml files.\n\nUtilize YAML anchors for reusing values in configurations.\n\nGroup multiple configurations in the same file for easier management.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v1beta15", "title": "skaffold.yaml", "description": "This page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and configuration management.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:31:54", "type": "best_practices", "page_metadata": {"generator": "Hugo 0.99.1", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "og:url": "https://skaffold.dev/docs/references/yaml/", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "twitter:card": "summary", "twitter:title": "skaffold.yaml", "og:title": "skaffold.yaml", "ogSiteName": "Skaffold", "robots": "index, follow", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "og:site_name": "Skaffold", "title": "skaffold.yaml | Skaffold", "og:type": "website", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "language": "en", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "ogTitle": "skaffold.yaml", "og:description": "Easy and Repeatable Container & Kubernetes Development", "scrapeId": "f653eafb-882d-477f-bfe0-e1cf0be99784", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v1beta15", "url": "https://skaffold.dev/docs/references/yaml/?version=v1beta15", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what skaffold.yaml is in skaffold?\n\nAssistant: Sure, I'd be happy to explain skaffold.yaml in skaffold.\n\n# skaffold.yaml\n\nDocumentation for configuring and using skaffold.yaml files in Cloud Code IDE.Here's a quick rundown of what this is about:\n\n## YAML anchors\n\nAnchors can be defined by having top-level keys starting with a dot, e.g. `.common_stuff: &alias_name`. You can then reuse the value using `*alias_name`.\n\n## Organizing multiple configurations\n\nMultiple configurations can define dependencies on each other to construct an arbitrarily nested tree of project component dependencies. Management of multiple configurations can be simplified by grouping them together in the same file (separated by --- in YAML).\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v2beta22", "title": "skaffold.yaml", "description": "Documentation for configuring and using skaffold.yaml files in Cloud Code IDE.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 04:32:07", "type": "overview", "page_metadata": {"favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "title": "skaffold.yaml | Skaffold", "language": "en", "twitter:card": "summary", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "ogSiteName": "Skaffold", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "og:site_name": "Skaffold", "robots": "index, follow", "og:title": "skaffold.yaml", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "generator": "Hugo 0.99.1", "ogTitle": "skaffold.yaml", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "twitter:title": "skaffold.yaml", "og:description": "Easy and Repeatable Container & Kubernetes Development", "og:type": "website", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "og:url": "https://skaffold.dev/docs/references/yaml/", "scrapeId": "345c6012-1a8f-4c03-a265-5318d737d7fd", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v2beta22", "url": "https://skaffold.dev/docs/references/yaml/?version=v2beta22", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I yaml anchors in skaffold?\n\nAssistant: To yaml anchors in skaffold, here's what you do:\nAnchors can be defined by having top-level keys starting with a dot, e.g. `.common_stuff: &alias_name`. You can then reuse the value using `*alias_name`..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v2beta22", "title": "skaffold.yaml", "description": "Documentation for configuring and using skaffold.yaml files in Cloud Code IDE.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 04:32:07", "type": "section_detail", "page_metadata": {"favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "title": "skaffold.yaml | Skaffold", "language": "en", "twitter:card": "summary", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "ogSiteName": "Skaffold", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "og:site_name": "Skaffold", "robots": "index, follow", "og:title": "skaffold.yaml", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "generator": "Hugo 0.99.1", "ogTitle": "skaffold.yaml", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "twitter:title": "skaffold.yaml", "og:description": "Easy and Repeatable Container & Kubernetes Development", "og:type": "website", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "og:url": "https://skaffold.dev/docs/references/yaml/", "scrapeId": "345c6012-1a8f-4c03-a265-5318d737d7fd", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v2beta22", "url": "https://skaffold.dev/docs/references/yaml/?version=v2beta22", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I organizing multiple configurations in skaffold?\n\nAssistant: To organizing multiple configurations in skaffold, here's what you do:\nMultiple configurations can define dependencies on each other to construct an arbitrarily nested tree of project component dependencies. Management of multiple configurations can be simplified by grouping them together in the same file (separated by --- in YAML)..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v2beta22", "title": "skaffold.yaml", "description": "Documentation for configuring and using skaffold.yaml files in Cloud Code IDE.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 04:32:07", "type": "section_detail", "page_metadata": {"favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "title": "skaffold.yaml | Skaffold", "language": "en", "twitter:card": "summary", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "ogSiteName": "Skaffold", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "og:site_name": "Skaffold", "robots": "index, follow", "og:title": "skaffold.yaml", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "generator": "Hugo 0.99.1", "ogTitle": "skaffold.yaml", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "twitter:title": "skaffold.yaml", "og:description": "Easy and Repeatable Container & Kubernetes Development", "og:type": "website", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "og:url": "https://skaffold.dev/docs/references/yaml/", "scrapeId": "345c6012-1a8f-4c03-a265-5318d737d7fd", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v2beta22", "url": "https://skaffold.dev/docs/references/yaml/?version=v2beta22", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: What are some tips for using skaffold.yaml in skaffold effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nThe Cloud Code IDE extensions provide authoring assistance for `skaffold.yaml` files in the form of schema based validation, diagnostics, quick documentation, code completions, and snippets, that can make it easier to create and edit these files.\n\nYou can navigate the `skaffold.yaml` reference from an inner element to its upper levels using the tooltip that appears on hover, clicking on the parent element you want to go.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v2beta22", "title": "skaffold.yaml", "description": "Documentation for configuring and using skaffold.yaml files in Cloud Code IDE.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 04:32:07", "type": "best_practices", "page_metadata": {"favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "title": "skaffold.yaml | Skaffold", "language": "en", "twitter:card": "summary", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "ogSiteName": "Skaffold", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "og:site_name": "Skaffold", "robots": "index, follow", "og:title": "skaffold.yaml", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "generator": "Hugo 0.99.1", "ogTitle": "skaffold.yaml", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "twitter:title": "skaffold.yaml", "og:description": "Easy and Repeatable Container & Kubernetes Development", "og:type": "website", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "og:url": "https://skaffold.dev/docs/references/yaml/", "scrapeId": "345c6012-1a8f-4c03-a265-5318d737d7fd", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v2beta22", "url": "https://skaffold.dev/docs/references/yaml/?version=v2beta22", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what skaffold.yaml is in skaffold?\n\nAssistant: Sure, I'd be happy to explain skaffold.yaml in skaffold.\n\n# skaffold.yaml\n\nThis page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and configuration management.Here's a quick rundown of what this is about:\n\n## Tip\n\nThe Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based validation, diagnostics, quick documentation, code completions, and snippets, that can make it easier to create and edit these files. You can now navigate the skaffold.yaml reference from an inner element to its upper levels using the tooltip that appears on hover, clicking on the parent element you want to go.\n\n## YAML anchors\n\nAnchors can be defined by having top-level keys starting with a dot, e.g. .common_stuff: &alias_name. You can then reuse the value using *alias_name.\n\n## Organizing multiple configurations\n\nMultiple configurations can define dependencies on each other to construct an arbitrarily nested tree of project component dependencies. Management of multiple configurations can be simplified by grouping them together in the same file (separated by --- in YAML).\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v1beta16", "title": "skaffold.yaml", "description": "This page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and configuration management.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:32:11", "type": "overview", "page_metadata": {"og:title": "skaffold.yaml", "og:url": "https://skaffold.dev/docs/references/yaml/", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "twitter:title": "skaffold.yaml", "generator": "Hugo 0.99.1", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "ogSiteName": "Skaffold", "language": "en", "robots": "index, follow", "title": "skaffold.yaml | Skaffold", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "og:description": "Easy and Repeatable Container & Kubernetes Development", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:type": "website", "og:site_name": "Skaffold", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogTitle": "skaffold.yaml", "twitter:card": "summary", "scrapeId": "9212c5ad-d309-466b-9b27-ec248d476d80", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v1beta16", "url": "https://skaffold.dev/docs/references/yaml/?version=v1beta16", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I tip in skaffold?\n\nAssistant: To tip in skaffold, here's what you do:\nThe Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based validation, diagnostics, quick documentation, code completions, and snippets, that can make it easier to create and edit these files. You can now navigate the skaffold.yaml reference from an inner element to its upper levels using the tooltip that appears on hover, clicking on the parent element you want to go..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v1beta16", "title": "skaffold.yaml", "description": "This page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and configuration management.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:32:11", "type": "section_detail", "page_metadata": {"og:title": "skaffold.yaml", "og:url": "https://skaffold.dev/docs/references/yaml/", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "twitter:title": "skaffold.yaml", "generator": "Hugo 0.99.1", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "ogSiteName": "Skaffold", "language": "en", "robots": "index, follow", "title": "skaffold.yaml | Skaffold", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "og:description": "Easy and Repeatable Container & Kubernetes Development", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:type": "website", "og:site_name": "Skaffold", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogTitle": "skaffold.yaml", "twitter:card": "summary", "scrapeId": "9212c5ad-d309-466b-9b27-ec248d476d80", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v1beta16", "url": "https://skaffold.dev/docs/references/yaml/?version=v1beta16", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I yaml anchors in skaffold?\n\nAssistant: To yaml anchors in skaffold, here's what you do:\nAnchors can be defined by having top-level keys starting with a dot, e.g. .common_stuff: &alias_name. You can then reuse the value using *alias_name..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v1beta16", "title": "skaffold.yaml", "description": "This page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and configuration management.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:32:11", "type": "section_detail", "page_metadata": {"og:title": "skaffold.yaml", "og:url": "https://skaffold.dev/docs/references/yaml/", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "twitter:title": "skaffold.yaml", "generator": "Hugo 0.99.1", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "ogSiteName": "Skaffold", "language": "en", "robots": "index, follow", "title": "skaffold.yaml | Skaffold", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "og:description": "Easy and Repeatable Container & Kubernetes Development", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:type": "website", "og:site_name": "Skaffold", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogTitle": "skaffold.yaml", "twitter:card": "summary", "scrapeId": "9212c5ad-d309-466b-9b27-ec248d476d80", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v1beta16", "url": "https://skaffold.dev/docs/references/yaml/?version=v1beta16", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I organizing multiple configurations in skaffold?\n\nAssistant: To organizing multiple configurations in skaffold, here's what you do:\nMultiple configurations can define dependencies on each other to construct an arbitrarily nested tree of project component dependencies. Management of multiple configurations can be simplified by grouping them together in the same file (separated by --- in YAML)..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v1beta16", "title": "skaffold.yaml", "description": "This page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and configuration management.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:32:11", "type": "section_detail", "page_metadata": {"og:title": "skaffold.yaml", "og:url": "https://skaffold.dev/docs/references/yaml/", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "twitter:title": "skaffold.yaml", "generator": "Hugo 0.99.1", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "ogSiteName": "Skaffold", "language": "en", "robots": "index, follow", "title": "skaffold.yaml | Skaffold", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "og:description": "Easy and Repeatable Container & Kubernetes Development", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:type": "website", "og:site_name": "Skaffold", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogTitle": "skaffold.yaml", "twitter:card": "summary", "scrapeId": "9212c5ad-d309-466b-9b27-ec248d476d80", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v1beta16", "url": "https://skaffold.dev/docs/references/yaml/?version=v1beta16", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: What are some tips for using skaffold.yaml in skaffold effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nUse Cloud Code IDE extensions for authoring assistance with skaffold.yaml files.\n\nUtilize YAML anchors for reusing values in configurations.\n\nGroup multiple configurations in the same file for better management.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v1beta16", "title": "skaffold.yaml", "description": "This page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and configuration management.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:32:11", "type": "best_practices", "page_metadata": {"og:title": "skaffold.yaml", "og:url": "https://skaffold.dev/docs/references/yaml/", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "twitter:title": "skaffold.yaml", "generator": "Hugo 0.99.1", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "ogSiteName": "Skaffold", "language": "en", "robots": "index, follow", "title": "skaffold.yaml | Skaffold", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "og:description": "Easy and Repeatable Container & Kubernetes Development", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:type": "website", "og:site_name": "Skaffold", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogTitle": "skaffold.yaml", "twitter:card": "summary", "scrapeId": "9212c5ad-d309-466b-9b27-ec248d476d80", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v1beta16", "url": "https://skaffold.dev/docs/references/yaml/?version=v1beta16", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what skaffold.yaml is in skaffold?\n\nAssistant: Sure, I'd be happy to explain skaffold.yaml in skaffold.\n\n# skaffold.yaml\n\nThis page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and configuration management.Here's a quick rundown of what this is about:\n\n## Tip\n\nThe Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based validation, diagnostics, quick documentation, code completions, and snippets, that can make it easier to create and edit these files. You can now navigate the skaffold.yaml reference from an inner element to its upper levels using the tooltip that appears on hover, clicking on the parent element you want to go.\n\n## YAML anchors\n\nAnchors can be defined by having top-level keys starting with a dot, e.g. .common_stuff: &alias_name. You can then reuse the value using *alias_name.\n\n## Organizing multiple configurations\n\nMultiple configurations can define dependencies on each other to construct an arbitrarily nested tree of project component dependencies. Management of multiple configurations can be simplified by grouping them together in the same file (separated by --- in YAML).\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v2alpha2", "title": "skaffold.yaml", "description": "This page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and configuration management.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:32:32", "type": "overview", "page_metadata": {"og:description": "Easy and Repeatable Container & Kubernetes Development", "ogSiteName": "Skaffold", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "twitter:title": "skaffold.yaml", "generator": "Hugo 0.99.1", "og:title": "skaffold.yaml", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "og:type": "website", "title": "skaffold.yaml | Skaffold", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "ogTitle": "skaffold.yaml", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "og:site_name": "Skaffold", "language": "en", "robots": "index, follow", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:url": "https://skaffold.dev/docs/references/yaml/", "twitter:card": "summary", "scrapeId": "4803a4fc-25f0-4bb0-a7f5-727a993ecff9", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v2alpha2", "url": "https://skaffold.dev/docs/references/yaml/?version=v2alpha2", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I tip in skaffold?\n\nAssistant: To tip in skaffold, here's what you do:\nThe Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based validation, diagnostics, quick documentation, code completions, and snippets, that can make it easier to create and edit these files. You can now navigate the skaffold.yaml reference from an inner element to its upper levels using the tooltip that appears on hover, clicking on the parent element you want to go..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v2alpha2", "title": "skaffold.yaml", "description": "This page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and configuration management.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:32:32", "type": "section_detail", "page_metadata": {"og:description": "Easy and Repeatable Container & Kubernetes Development", "ogSiteName": "Skaffold", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "twitter:title": "skaffold.yaml", "generator": "Hugo 0.99.1", "og:title": "skaffold.yaml", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "og:type": "website", "title": "skaffold.yaml | Skaffold", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "ogTitle": "skaffold.yaml", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "og:site_name": "Skaffold", "language": "en", "robots": "index, follow", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:url": "https://skaffold.dev/docs/references/yaml/", "twitter:card": "summary", "scrapeId": "4803a4fc-25f0-4bb0-a7f5-727a993ecff9", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v2alpha2", "url": "https://skaffold.dev/docs/references/yaml/?version=v2alpha2", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I yaml anchors in skaffold?\n\nAssistant: To yaml anchors in skaffold, here's what you do:\nAnchors can be defined by having top-level keys starting with a dot, e.g. .common_stuff: &alias_name. You can then reuse the value using *alias_name..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v2alpha2", "title": "skaffold.yaml", "description": "This page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and configuration management.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:32:32", "type": "section_detail", "page_metadata": {"og:description": "Easy and Repeatable Container & Kubernetes Development", "ogSiteName": "Skaffold", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "twitter:title": "skaffold.yaml", "generator": "Hugo 0.99.1", "og:title": "skaffold.yaml", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "og:type": "website", "title": "skaffold.yaml | Skaffold", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "ogTitle": "skaffold.yaml", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "og:site_name": "Skaffold", "language": "en", "robots": "index, follow", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:url": "https://skaffold.dev/docs/references/yaml/", "twitter:card": "summary", "scrapeId": "4803a4fc-25f0-4bb0-a7f5-727a993ecff9", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v2alpha2", "url": "https://skaffold.dev/docs/references/yaml/?version=v2alpha2", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I organizing multiple configurations in skaffold?\n\nAssistant: To organizing multiple configurations in skaffold, here's what you do:\nMultiple configurations can define dependencies on each other to construct an arbitrarily nested tree of project component dependencies. Management of multiple configurations can be simplified by grouping them together in the same file (separated by --- in YAML)..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v2alpha2", "title": "skaffold.yaml", "description": "This page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and configuration management.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:32:32", "type": "section_detail", "page_metadata": {"og:description": "Easy and Repeatable Container & Kubernetes Development", "ogSiteName": "Skaffold", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "twitter:title": "skaffold.yaml", "generator": "Hugo 0.99.1", "og:title": "skaffold.yaml", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "og:type": "website", "title": "skaffold.yaml | Skaffold", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "ogTitle": "skaffold.yaml", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "og:site_name": "Skaffold", "language": "en", "robots": "index, follow", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:url": "https://skaffold.dev/docs/references/yaml/", "twitter:card": "summary", "scrapeId": "4803a4fc-25f0-4bb0-a7f5-727a993ecff9", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v2alpha2", "url": "https://skaffold.dev/docs/references/yaml/?version=v2alpha2", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: What are some tips for using skaffold.yaml in skaffold effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nUse Cloud Code IDE extensions for authoring assistance with skaffold.yaml files.\n\nUtilize YAML anchors for reusing values in configurations.\n\nGroup multiple configurations in the same file for better management.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v2alpha2", "title": "skaffold.yaml", "description": "This page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and configuration management.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:32:32", "type": "best_practices", "page_metadata": {"og:description": "Easy and Repeatable Container & Kubernetes Development", "ogSiteName": "Skaffold", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "twitter:title": "skaffold.yaml", "generator": "Hugo 0.99.1", "og:title": "skaffold.yaml", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "og:type": "website", "title": "skaffold.yaml | Skaffold", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "ogTitle": "skaffold.yaml", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "og:site_name": "Skaffold", "language": "en", "robots": "index, follow", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:url": "https://skaffold.dev/docs/references/yaml/", "twitter:card": "summary", "scrapeId": "4803a4fc-25f0-4bb0-a7f5-727a993ecff9", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v2alpha2", "url": "https://skaffold.dev/docs/references/yaml/?version=v2alpha2", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what skaffold.yaml is in skaffold?\n\nAssistant: Sure, I'd be happy to explain skaffold.yaml in skaffold.\n\n# skaffold.yaml\n\nDocumentation for configuring and using skaffold.yaml files in Cloud Code IDE.Here's a quick rundown of what this is about:\n\n## Tip\n\nThe Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based validation, diagnostics, quick documentation, code completions, and snippets, that can make it easier to create and edit these files. You can now navigate the skaffold.yaml reference from an inner element to its upper levels using the tooltip that appears on hover, clicking on the parent element you want to go.\n\n## YAML anchors\n\nAnchors can be defined by having top-level keys starting with a dot, e.g. .common_stuff: &alias_name. You can then reuse the value using *alias_name.\n\n## Organizing multiple configurations\n\nMultiple configurations can define dependencies on each other to construct an arbitrarily nested tree of project component dependencies. Management of multiple configurations can be simplified by grouping them together in the same file (separated by --- in YAML).\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v1beta6", "title": "skaffold.yaml", "description": "Documentation for configuring and using skaffold.yaml files in Cloud Code IDE.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:32:54", "type": "overview", "page_metadata": {"viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "twitter:card": "summary", "generator": "Hugo 0.99.1", "twitter:title": "skaffold.yaml", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogTitle": "skaffold.yaml", "og:site_name": "Skaffold", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "og:title": "skaffold.yaml", "language": "en", "ogSiteName": "Skaffold", "robots": "index, follow", "og:url": "https://skaffold.dev/docs/references/yaml/", "og:description": "Easy and Repeatable Container & Kubernetes Development", "title": "skaffold.yaml | Skaffold", "og:type": "website", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "scrapeId": "004c0956-1b8b-48ef-97d3-520a98e29bc6", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v1beta6", "url": "https://skaffold.dev/docs/references/yaml/?version=v1beta6", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I tip in skaffold?\n\nAssistant: To tip in skaffold, here's what you do:\nThe Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based validation, diagnostics, quick documentation, code completions, and snippets, that can make it easier to create and edit these files. You can now navigate the skaffold.yaml reference from an inner element to its upper levels using the tooltip that appears on hover, clicking on the parent element you want to go..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v1beta6", "title": "skaffold.yaml", "description": "Documentation for configuring and using skaffold.yaml files in Cloud Code IDE.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:32:54", "type": "section_detail", "page_metadata": {"viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "twitter:card": "summary", "generator": "Hugo 0.99.1", "twitter:title": "skaffold.yaml", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogTitle": "skaffold.yaml", "og:site_name": "Skaffold", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "og:title": "skaffold.yaml", "language": "en", "ogSiteName": "Skaffold", "robots": "index, follow", "og:url": "https://skaffold.dev/docs/references/yaml/", "og:description": "Easy and Repeatable Container & Kubernetes Development", "title": "skaffold.yaml | Skaffold", "og:type": "website", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "scrapeId": "004c0956-1b8b-48ef-97d3-520a98e29bc6", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v1beta6", "url": "https://skaffold.dev/docs/references/yaml/?version=v1beta6", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I yaml anchors in skaffold?\n\nAssistant: To yaml anchors in skaffold, here's what you do:\nAnchors can be defined by having top-level keys starting with a dot, e.g. .common_stuff: &alias_name. You can then reuse the value using *alias_name..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v1beta6", "title": "skaffold.yaml", "description": "Documentation for configuring and using skaffold.yaml files in Cloud Code IDE.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:32:54", "type": "section_detail", "page_metadata": {"viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "twitter:card": "summary", "generator": "Hugo 0.99.1", "twitter:title": "skaffold.yaml", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogTitle": "skaffold.yaml", "og:site_name": "Skaffold", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "og:title": "skaffold.yaml", "language": "en", "ogSiteName": "Skaffold", "robots": "index, follow", "og:url": "https://skaffold.dev/docs/references/yaml/", "og:description": "Easy and Repeatable Container & Kubernetes Development", "title": "skaffold.yaml | Skaffold", "og:type": "website", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "scrapeId": "004c0956-1b8b-48ef-97d3-520a98e29bc6", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v1beta6", "url": "https://skaffold.dev/docs/references/yaml/?version=v1beta6", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I organizing multiple configurations in skaffold?\n\nAssistant: To organizing multiple configurations in skaffold, here's what you do:\nMultiple configurations can define dependencies on each other to construct an arbitrarily nested tree of project component dependencies. Management of multiple configurations can be simplified by grouping them together in the same file (separated by --- in YAML)..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v1beta6", "title": "skaffold.yaml", "description": "Documentation for configuring and using skaffold.yaml files in Cloud Code IDE.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:32:54", "type": "section_detail", "page_metadata": {"viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "twitter:card": "summary", "generator": "Hugo 0.99.1", "twitter:title": "skaffold.yaml", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogTitle": "skaffold.yaml", "og:site_name": "Skaffold", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "og:title": "skaffold.yaml", "language": "en", "ogSiteName": "Skaffold", "robots": "index, follow", "og:url": "https://skaffold.dev/docs/references/yaml/", "og:description": "Easy and Repeatable Container & Kubernetes Development", "title": "skaffold.yaml | Skaffold", "og:type": "website", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "scrapeId": "004c0956-1b8b-48ef-97d3-520a98e29bc6", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v1beta6", "url": "https://skaffold.dev/docs/references/yaml/?version=v1beta6", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: What are some tips for using skaffold.yaml in skaffold effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nUse Cloud Code IDE extensions for authoring assistance with skaffold.yaml files.\n\nUtilize YAML anchors for reusing values in configurations.\n\nGroup multiple configurations in the same file for better management.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v1beta6", "title": "skaffold.yaml", "description": "Documentation for configuring and using skaffold.yaml files in Cloud Code IDE.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:32:54", "type": "best_practices", "page_metadata": {"viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "twitter:card": "summary", "generator": "Hugo 0.99.1", "twitter:title": "skaffold.yaml", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogTitle": "skaffold.yaml", "og:site_name": "Skaffold", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "og:title": "skaffold.yaml", "language": "en", "ogSiteName": "Skaffold", "robots": "index, follow", "og:url": "https://skaffold.dev/docs/references/yaml/", "og:description": "Easy and Repeatable Container & Kubernetes Development", "title": "skaffold.yaml | Skaffold", "og:type": "website", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "scrapeId": "004c0956-1b8b-48ef-97d3-520a98e29bc6", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v1beta6", "url": "https://skaffold.dev/docs/references/yaml/?version=v1beta6", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what skaffold.yaml is in skaffold?\n\nAssistant: Sure, I'd be happy to explain skaffold.yaml in skaffold.\n\n# skaffold.yaml\n\nDocumentation for configuring and using skaffold.yaml files in Cloud Code IDE.Here's a quick rundown of what this is about:\n\n## Tip\n\nThe Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based validation, diagnostics, quick documentation, code completions, and snippets, that can make it easier to create and edit these files. You can now navigate the skaffold.yaml reference from an inner element to its upper levels using the tooltip that appears on hover, clicking on the parent element you want to go.\n\n## YAML anchors\n\nAnchors can be defined by having top-level keys starting with a dot, e.g. .common_stuff: &alias_name. You can then reuse the value using *alias_name.\n\n## Organizing multiple configurations\n\nMultiple configurations can define dependencies on each other to construct an arbitrarily nested tree of project component dependencies. Management of multiple configurations can be simplified by grouping them together in the same file (separated by --- in YAML).\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v2beta7", "title": "skaffold.yaml", "description": "Documentation for configuring and using skaffold.yaml files in Cloud Code IDE.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:33:41", "type": "overview", "page_metadata": {"generator": "Hugo 0.99.1", "title": "skaffold.yaml | Skaffold", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "ogTitle": "skaffold.yaml", "og:description": "Easy and Repeatable Container & Kubernetes Development", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "og:type": "website", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "robots": "index, follow", "og:title": "skaffold.yaml", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:site_name": "Skaffold", "twitter:card": "summary", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "language": "en", "twitter:title": "skaffold.yaml", "ogSiteName": "Skaffold", "og:url": "https://skaffold.dev/docs/references/yaml/", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "scrapeId": "77850e6f-b3cd-4719-897c-94acbdf66931", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v2beta7", "url": "https://skaffold.dev/docs/references/yaml/?version=v2beta7", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I tip in skaffold?\n\nAssistant: To tip in skaffold, here's what you do:\nThe Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based validation, diagnostics, quick documentation, code completions, and snippets, that can make it easier to create and edit these files. You can now navigate the skaffold.yaml reference from an inner element to its upper levels using the tooltip that appears on hover, clicking on the parent element you want to go..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v2beta7", "title": "skaffold.yaml", "description": "Documentation for configuring and using skaffold.yaml files in Cloud Code IDE.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:33:41", "type": "section_detail", "page_metadata": {"generator": "Hugo 0.99.1", "title": "skaffold.yaml | Skaffold", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "ogTitle": "skaffold.yaml", "og:description": "Easy and Repeatable Container & Kubernetes Development", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "og:type": "website", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "robots": "index, follow", "og:title": "skaffold.yaml", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:site_name": "Skaffold", "twitter:card": "summary", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "language": "en", "twitter:title": "skaffold.yaml", "ogSiteName": "Skaffold", "og:url": "https://skaffold.dev/docs/references/yaml/", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "scrapeId": "77850e6f-b3cd-4719-897c-94acbdf66931", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v2beta7", "url": "https://skaffold.dev/docs/references/yaml/?version=v2beta7", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I yaml anchors in skaffold?\n\nAssistant: To yaml anchors in skaffold, here's what you do:\nAnchors can be defined by having top-level keys starting with a dot, e.g. .common_stuff: &alias_name. You can then reuse the value using *alias_name..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v2beta7", "title": "skaffold.yaml", "description": "Documentation for configuring and using skaffold.yaml files in Cloud Code IDE.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:33:41", "type": "section_detail", "page_metadata": {"generator": "Hugo 0.99.1", "title": "skaffold.yaml | Skaffold", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "ogTitle": "skaffold.yaml", "og:description": "Easy and Repeatable Container & Kubernetes Development", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "og:type": "website", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "robots": "index, follow", "og:title": "skaffold.yaml", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:site_name": "Skaffold", "twitter:card": "summary", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "language": "en", "twitter:title": "skaffold.yaml", "ogSiteName": "Skaffold", "og:url": "https://skaffold.dev/docs/references/yaml/", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "scrapeId": "77850e6f-b3cd-4719-897c-94acbdf66931", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v2beta7", "url": "https://skaffold.dev/docs/references/yaml/?version=v2beta7", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I organizing multiple configurations in skaffold?\n\nAssistant: To organizing multiple configurations in skaffold, here's what you do:\nMultiple configurations can define dependencies on each other to construct an arbitrarily nested tree of project component dependencies. Management of multiple configurations can be simplified by grouping them together in the same file (separated by --- in YAML)..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v2beta7", "title": "skaffold.yaml", "description": "Documentation for configuring and using skaffold.yaml files in Cloud Code IDE.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:33:41", "type": "section_detail", "page_metadata": {"generator": "Hugo 0.99.1", "title": "skaffold.yaml | Skaffold", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "ogTitle": "skaffold.yaml", "og:description": "Easy and Repeatable Container & Kubernetes Development", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "og:type": "website", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "robots": "index, follow", "og:title": "skaffold.yaml", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:site_name": "Skaffold", "twitter:card": "summary", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "language": "en", "twitter:title": "skaffold.yaml", "ogSiteName": "Skaffold", "og:url": "https://skaffold.dev/docs/references/yaml/", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "scrapeId": "77850e6f-b3cd-4719-897c-94acbdf66931", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v2beta7", "url": "https://skaffold.dev/docs/references/yaml/?version=v2beta7", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: What are some tips for using skaffold.yaml in skaffold effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nUse Cloud Code IDE extensions for authoring assistance with skaffold.yaml files.\n\nUtilize YAML anchors for reusing values in configurations.\n\nGroup multiple configurations in the same file for better management.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v2beta7", "title": "skaffold.yaml", "description": "Documentation for configuring and using skaffold.yaml files in Cloud Code IDE.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:33:41", "type": "best_practices", "page_metadata": {"generator": "Hugo 0.99.1", "title": "skaffold.yaml | Skaffold", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "ogTitle": "skaffold.yaml", "og:description": "Easy and Repeatable Container & Kubernetes Development", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "og:type": "website", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "robots": "index, follow", "og:title": "skaffold.yaml", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:site_name": "Skaffold", "twitter:card": "summary", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "language": "en", "twitter:title": "skaffold.yaml", "ogSiteName": "Skaffold", "og:url": "https://skaffold.dev/docs/references/yaml/", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "scrapeId": "77850e6f-b3cd-4719-897c-94acbdf66931", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v2beta7", "url": "https://skaffold.dev/docs/references/yaml/?version=v2beta7", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what skaffold.yaml is in skaffold?\n\nAssistant: Sure, I'd be happy to explain skaffold.yaml in skaffold.\n\n# skaffold.yaml\n\nDocumentation for configuring and using skaffold.yaml files in Cloud Code IDE.Here's a quick rundown of what this is about:\n\n## Tip\n\nThe Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based validation, diagnostics, quick documentation, code completions, and snippets, that can make it easier to create and edit these files. You can now navigate the skaffold.yaml reference from an inner element to its upper levels using the tooltip that appears on hover, clicking on the parent element you want to go.\n\n## YAML anchors\n\nAnchors can be defined by having top-level keys starting with a dot, e.g. .common_stuff: &alias_name. You can then reuse the value using *alias_name.\n\n## Organizing multiple configurations\n\nMultiple configurations can define dependencies on each other to construct an arbitrarily nested tree of project component dependencies. Management of multiple configurations can be simplified by grouping them together in the same file (separated by --- in YAML).\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v2beta13", "title": "skaffold.yaml", "description": "Documentation for configuring and using skaffold.yaml files in Cloud Code IDE.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:33:57", "type": "overview", "page_metadata": {"og:site_name": "Skaffold", "og:type": "website", "og:description": "Easy and Repeatable Container & Kubernetes Development", "language": "en", "og:url": "https://skaffold.dev/docs/references/yaml/", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "ogTitle": "skaffold.yaml", "og:title": "skaffold.yaml", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "generator": "Hugo 0.99.1", "title": "skaffold.yaml | Skaffold", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "ogSiteName": "Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "robots": "index, follow", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "twitter:card": "summary", "twitter:title": "skaffold.yaml", "scrapeId": "222d4f93-ba3f-4f0a-b2fe-3e744460985a", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v2beta13", "url": "https://skaffold.dev/docs/references/yaml/?version=v2beta13", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I tip in skaffold?\n\nAssistant: To tip in skaffold, here's what you do:\nThe Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based validation, diagnostics, quick documentation, code completions, and snippets, that can make it easier to create and edit these files. You can now navigate the skaffold.yaml reference from an inner element to its upper levels using the tooltip that appears on hover, clicking on the parent element you want to go..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v2beta13", "title": "skaffold.yaml", "description": "Documentation for configuring and using skaffold.yaml files in Cloud Code IDE.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:33:57", "type": "section_detail", "page_metadata": {"og:site_name": "Skaffold", "og:type": "website", "og:description": "Easy and Repeatable Container & Kubernetes Development", "language": "en", "og:url": "https://skaffold.dev/docs/references/yaml/", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "ogTitle": "skaffold.yaml", "og:title": "skaffold.yaml", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "generator": "Hugo 0.99.1", "title": "skaffold.yaml | Skaffold", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "ogSiteName": "Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "robots": "index, follow", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "twitter:card": "summary", "twitter:title": "skaffold.yaml", "scrapeId": "222d4f93-ba3f-4f0a-b2fe-3e744460985a", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v2beta13", "url": "https://skaffold.dev/docs/references/yaml/?version=v2beta13", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I yaml anchors in skaffold?\n\nAssistant: To yaml anchors in skaffold, here's what you do:\nAnchors can be defined by having top-level keys starting with a dot, e.g. .common_stuff: &alias_name. You can then reuse the value using *alias_name..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v2beta13", "title": "skaffold.yaml", "description": "Documentation for configuring and using skaffold.yaml files in Cloud Code IDE.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:33:57", "type": "section_detail", "page_metadata": {"og:site_name": "Skaffold", "og:type": "website", "og:description": "Easy and Repeatable Container & Kubernetes Development", "language": "en", "og:url": "https://skaffold.dev/docs/references/yaml/", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "ogTitle": "skaffold.yaml", "og:title": "skaffold.yaml", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "generator": "Hugo 0.99.1", "title": "skaffold.yaml | Skaffold", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "ogSiteName": "Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "robots": "index, follow", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "twitter:card": "summary", "twitter:title": "skaffold.yaml", "scrapeId": "222d4f93-ba3f-4f0a-b2fe-3e744460985a", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v2beta13", "url": "https://skaffold.dev/docs/references/yaml/?version=v2beta13", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I organizing multiple configurations in skaffold?\n\nAssistant: To organizing multiple configurations in skaffold, here's what you do:\nMultiple configurations can define dependencies on each other to construct an arbitrarily nested tree of project component dependencies. Management of multiple configurations can be simplified by grouping them together in the same file (separated by --- in YAML)..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v2beta13", "title": "skaffold.yaml", "description": "Documentation for configuring and using skaffold.yaml files in Cloud Code IDE.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:33:57", "type": "section_detail", "page_metadata": {"og:site_name": "Skaffold", "og:type": "website", "og:description": "Easy and Repeatable Container & Kubernetes Development", "language": "en", "og:url": "https://skaffold.dev/docs/references/yaml/", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "ogTitle": "skaffold.yaml", "og:title": "skaffold.yaml", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "generator": "Hugo 0.99.1", "title": "skaffold.yaml | Skaffold", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "ogSiteName": "Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "robots": "index, follow", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "twitter:card": "summary", "twitter:title": "skaffold.yaml", "scrapeId": "222d4f93-ba3f-4f0a-b2fe-3e744460985a", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v2beta13", "url": "https://skaffold.dev/docs/references/yaml/?version=v2beta13", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: What are some tips for using skaffold.yaml in skaffold effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nUse Cloud Code IDE extensions for authoring assistance with skaffold.yaml files.\n\nUtilize YAML anchors for reusing values in configurations.\n\nGroup multiple configurations in the same file for better management.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v2beta13", "title": "skaffold.yaml", "description": "Documentation for configuring and using skaffold.yaml files in Cloud Code IDE.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:33:57", "type": "best_practices", "page_metadata": {"og:site_name": "Skaffold", "og:type": "website", "og:description": "Easy and Repeatable Container & Kubernetes Development", "language": "en", "og:url": "https://skaffold.dev/docs/references/yaml/", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "ogTitle": "skaffold.yaml", "og:title": "skaffold.yaml", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "generator": "Hugo 0.99.1", "title": "skaffold.yaml | Skaffold", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "ogSiteName": "Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "robots": "index, follow", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "twitter:card": "summary", "twitter:title": "skaffold.yaml", "scrapeId": "222d4f93-ba3f-4f0a-b2fe-3e744460985a", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v2beta13", "url": "https://skaffold.dev/docs/references/yaml/?version=v2beta13", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what skaffold.yaml is in skaffold?\n\nAssistant: Sure, I'd be happy to explain skaffold.yaml in skaffold.\n\n# skaffold.yaml\n\nThis page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and organization of configurations.Here's a quick rundown of what this is about:\n\n## YAML anchors\n\nAnchors can be defined by having top-level keys starting with a dot, e.g. `.common_stuff: &alias_name`. You can then reuse the value using `*alias_name`.\n\n## Organizing multiple configurations\n\nMultiple configurations can define dependencies on each other to construct an arbitrarily nested tree of project component dependencies. Management of multiple configurations can be simplified by grouping them together in the same file (separated by --- in YAML).\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v2beta16", "title": "skaffold.yaml", "description": "This page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and organization of configurations.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 04:34:14", "type": "overview", "page_metadata": {"og:type": "website", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogTitle": "skaffold.yaml", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "ogSiteName": "Skaffold", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "title": "skaffold.yaml | Skaffold", "language": "en", "og:title": "skaffold.yaml", "og:description": "Easy and Repeatable Container & Kubernetes Development", "generator": "Hugo 0.99.1", "twitter:card": "summary", "robots": "index, follow", "og:site_name": "Skaffold", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:url": "https://skaffold.dev/docs/references/yaml/", "twitter:title": "skaffold.yaml", "scrapeId": "bc657118-299f-4346-ac1c-53ad1dbab270", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v2beta16", "url": "https://skaffold.dev/docs/references/yaml/?version=v2beta16", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I yaml anchors in skaffold?\n\nAssistant: To yaml anchors in skaffold, here's what you do:\nAnchors can be defined by having top-level keys starting with a dot, e.g. `.common_stuff: &alias_name`. You can then reuse the value using `*alias_name`..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v2beta16", "title": "skaffold.yaml", "description": "This page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and organization of configurations.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 04:34:14", "type": "section_detail", "page_metadata": {"og:type": "website", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogTitle": "skaffold.yaml", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "ogSiteName": "Skaffold", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "title": "skaffold.yaml | Skaffold", "language": "en", "og:title": "skaffold.yaml", "og:description": "Easy and Repeatable Container & Kubernetes Development", "generator": "Hugo 0.99.1", "twitter:card": "summary", "robots": "index, follow", "og:site_name": "Skaffold", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:url": "https://skaffold.dev/docs/references/yaml/", "twitter:title": "skaffold.yaml", "scrapeId": "bc657118-299f-4346-ac1c-53ad1dbab270", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v2beta16", "url": "https://skaffold.dev/docs/references/yaml/?version=v2beta16", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I organizing multiple configurations in skaffold?\n\nAssistant: To organizing multiple configurations in skaffold, here's what you do:\nMultiple configurations can define dependencies on each other to construct an arbitrarily nested tree of project component dependencies. Management of multiple configurations can be simplified by grouping them together in the same file (separated by --- in YAML)..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v2beta16", "title": "skaffold.yaml", "description": "This page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and organization of configurations.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 04:34:14", "type": "section_detail", "page_metadata": {"og:type": "website", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogTitle": "skaffold.yaml", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "ogSiteName": "Skaffold", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "title": "skaffold.yaml | Skaffold", "language": "en", "og:title": "skaffold.yaml", "og:description": "Easy and Repeatable Container & Kubernetes Development", "generator": "Hugo 0.99.1", "twitter:card": "summary", "robots": "index, follow", "og:site_name": "Skaffold", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:url": "https://skaffold.dev/docs/references/yaml/", "twitter:title": "skaffold.yaml", "scrapeId": "bc657118-299f-4346-ac1c-53ad1dbab270", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v2beta16", "url": "https://skaffold.dev/docs/references/yaml/?version=v2beta16", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: What are some tips for using skaffold.yaml in skaffold effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nThe Cloud Code IDE extensions provide authoring assistance for `skaffold.yaml` files in the form of schema based validation, diagnostics, quick documentation, code completions, and snippets, that can make it easier to create and edit these files.\n\nYou can navigate the `skaffold.yaml` reference from an inner element to its upper levels using the tooltip that appears on hover, clicking on the parent element you want to go.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v2beta16", "title": "skaffold.yaml", "description": "This page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and organization of configurations.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 04:34:14", "type": "best_practices", "page_metadata": {"og:type": "website", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogTitle": "skaffold.yaml", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "ogSiteName": "Skaffold", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "title": "skaffold.yaml | Skaffold", "language": "en", "og:title": "skaffold.yaml", "og:description": "Easy and Repeatable Container & Kubernetes Development", "generator": "Hugo 0.99.1", "twitter:card": "summary", "robots": "index, follow", "og:site_name": "Skaffold", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:url": "https://skaffold.dev/docs/references/yaml/", "twitter:title": "skaffold.yaml", "scrapeId": "bc657118-299f-4346-ac1c-53ad1dbab270", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v2beta16", "url": "https://skaffold.dev/docs/references/yaml/?version=v2beta16", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what skaffold.yaml is in skaffold?\n\nAssistant: Sure, I'd be happy to explain skaffold.yaml in skaffold.\n\n# skaffold.yaml\n\nDocumentation for configuring and using skaffold.yaml files in Cloud Code IDE.Here's a quick rundown of what this is about:\n\n## Tip\n\nThe Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based validation, diagnostics, quick documentation, code completions, and snippets, that can make it easier to create and edit these files. You can now navigate the skaffold.yaml reference from an inner element to its upper levels using the tooltip that appears on hover, clicking on the parent element you want to go.\n\n## YAML anchors\n\nAnchors can be defined by having top-level keys starting with a dot, e.g. .common_stuff: &alias_name. You can then reuse the value using *alias_name.\n\n## Organizing multiple configurations\n\nMultiple configurations can define dependencies on each other to construct an arbitrarily nested tree of project component dependencies. Management of multiple configurations can be simplified by grouping them together in the same file (separated by --- in YAML).\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v2beta19", "title": "skaffold.yaml", "description": "Documentation for configuring and using skaffold.yaml files in Cloud Code IDE.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:34:26", "type": "overview", "page_metadata": {"og:title": "skaffold.yaml", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "og:url": "https://skaffold.dev/docs/references/yaml/", "og:site_name": "Skaffold", "ogTitle": "skaffold.yaml", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "title": "skaffold.yaml | Skaffold", "language": "en", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "og:type": "website", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "robots": "index, follow", "twitter:card": "summary", "twitter:title": "skaffold.yaml", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "generator": "Hugo 0.99.1", "ogSiteName": "Skaffold", "og:description": "Easy and Repeatable Container & Kubernetes Development", "scrapeId": "ab259c80-8ae1-487c-bce2-d3425fdecbd9", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v2beta19", "url": "https://skaffold.dev/docs/references/yaml/?version=v2beta19", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I tip in skaffold?\n\nAssistant: To tip in skaffold, here's what you do:\nThe Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based validation, diagnostics, quick documentation, code completions, and snippets, that can make it easier to create and edit these files. You can now navigate the skaffold.yaml reference from an inner element to its upper levels using the tooltip that appears on hover, clicking on the parent element you want to go..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v2beta19", "title": "skaffold.yaml", "description": "Documentation for configuring and using skaffold.yaml files in Cloud Code IDE.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:34:26", "type": "section_detail", "page_metadata": {"og:title": "skaffold.yaml", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "og:url": "https://skaffold.dev/docs/references/yaml/", "og:site_name": "Skaffold", "ogTitle": "skaffold.yaml", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "title": "skaffold.yaml | Skaffold", "language": "en", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "og:type": "website", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "robots": "index, follow", "twitter:card": "summary", "twitter:title": "skaffold.yaml", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "generator": "Hugo 0.99.1", "ogSiteName": "Skaffold", "og:description": "Easy and Repeatable Container & Kubernetes Development", "scrapeId": "ab259c80-8ae1-487c-bce2-d3425fdecbd9", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v2beta19", "url": "https://skaffold.dev/docs/references/yaml/?version=v2beta19", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I yaml anchors in skaffold?\n\nAssistant: To yaml anchors in skaffold, here's what you do:\nAnchors can be defined by having top-level keys starting with a dot, e.g. .common_stuff: &alias_name. You can then reuse the value using *alias_name..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v2beta19", "title": "skaffold.yaml", "description": "Documentation for configuring and using skaffold.yaml files in Cloud Code IDE.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:34:26", "type": "section_detail", "page_metadata": {"og:title": "skaffold.yaml", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "og:url": "https://skaffold.dev/docs/references/yaml/", "og:site_name": "Skaffold", "ogTitle": "skaffold.yaml", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "title": "skaffold.yaml | Skaffold", "language": "en", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "og:type": "website", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "robots": "index, follow", "twitter:card": "summary", "twitter:title": "skaffold.yaml", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "generator": "Hugo 0.99.1", "ogSiteName": "Skaffold", "og:description": "Easy and Repeatable Container & Kubernetes Development", "scrapeId": "ab259c80-8ae1-487c-bce2-d3425fdecbd9", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v2beta19", "url": "https://skaffold.dev/docs/references/yaml/?version=v2beta19", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I organizing multiple configurations in skaffold?\n\nAssistant: To organizing multiple configurations in skaffold, here's what you do:\nMultiple configurations can define dependencies on each other to construct an arbitrarily nested tree of project component dependencies. Management of multiple configurations can be simplified by grouping them together in the same file (separated by --- in YAML)..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v2beta19", "title": "skaffold.yaml", "description": "Documentation for configuring and using skaffold.yaml files in Cloud Code IDE.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:34:26", "type": "section_detail", "page_metadata": {"og:title": "skaffold.yaml", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "og:url": "https://skaffold.dev/docs/references/yaml/", "og:site_name": "Skaffold", "ogTitle": "skaffold.yaml", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "title": "skaffold.yaml | Skaffold", "language": "en", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "og:type": "website", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "robots": "index, follow", "twitter:card": "summary", "twitter:title": "skaffold.yaml", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "generator": "Hugo 0.99.1", "ogSiteName": "Skaffold", "og:description": "Easy and Repeatable Container & Kubernetes Development", "scrapeId": "ab259c80-8ae1-487c-bce2-d3425fdecbd9", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v2beta19", "url": "https://skaffold.dev/docs/references/yaml/?version=v2beta19", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: What are some tips for using skaffold.yaml in skaffold effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nUse Cloud Code IDE extensions for authoring assistance with skaffold.yaml files.\n\nUtilize YAML anchors for reusing values in configurations.\n\nGroup multiple configurations in the same file for better management.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v2beta19", "title": "skaffold.yaml", "description": "Documentation for configuring and using skaffold.yaml files in Cloud Code IDE.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:34:26", "type": "best_practices", "page_metadata": {"og:title": "skaffold.yaml", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "og:url": "https://skaffold.dev/docs/references/yaml/", "og:site_name": "Skaffold", "ogTitle": "skaffold.yaml", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "title": "skaffold.yaml | Skaffold", "language": "en", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "og:type": "website", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "robots": "index, follow", "twitter:card": "summary", "twitter:title": "skaffold.yaml", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "generator": "Hugo 0.99.1", "ogSiteName": "Skaffold", "og:description": "Easy and Repeatable Container & Kubernetes Development", "scrapeId": "ab259c80-8ae1-487c-bce2-d3425fdecbd9", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v2beta19", "url": "https://skaffold.dev/docs/references/yaml/?version=v2beta19", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what skaffold.yaml is in skaffold?\n\nAssistant: Sure, I'd be happy to explain skaffold.yaml in skaffold.\n\n# skaffold.yaml\n\nDocumentation for configuring and using skaffold.yaml files in Cloud Code IDE.Here's a quick rundown of what this is about:\n\n## Tip\n\nThe Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based validation, diagnostics, quick documentation, code completions, and snippets, that can make it easier to create and edit these files. You can now navigate the skaffold.yaml reference from an inner element to its upper levels using the tooltip that appears on hover, clicking on the parent element you want to go.\n\n## YAML anchors\n\nAnchors can be defined by having top-level keys starting with a dot, e.g. .common_stuff: &alias_name. You can then reuse the value using *alias_name.\n\n## Organizing multiple configurations\n\nMultiple configurations can define dependencies on each other to construct an arbitrarily nested tree of project component dependencies. Management of multiple configurations can be simplified by grouping them together in the same file (separated by --- in YAML).\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v1beta9", "title": "skaffold.yaml", "description": "Documentation for configuring and using skaffold.yaml files in Cloud Code IDE.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:34:35", "type": "overview", "page_metadata": {"ogDescription": "Easy and Repeatable Container & Kubernetes Development", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:description": "Easy and Repeatable Container & Kubernetes Development", "ogTitle": "skaffold.yaml", "og:type": "website", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "twitter:title": "skaffold.yaml", "robots": "index, follow", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "og:url": "https://skaffold.dev/docs/references/yaml/", "generator": "Hugo 0.99.1", "title": "skaffold.yaml | Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "ogSiteName": "Skaffold", "og:title": "skaffold.yaml", "language": "en", "og:site_name": "Skaffold", "twitter:card": "summary", "scrapeId": "dc569441-4dde-4b4f-8212-979477cb24a8", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v1beta9", "url": "https://skaffold.dev/docs/references/yaml/?version=v1beta9", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I tip in skaffold?\n\nAssistant: To tip in skaffold, here's what you do:\nThe Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based validation, diagnostics, quick documentation, code completions, and snippets, that can make it easier to create and edit these files. You can now navigate the skaffold.yaml reference from an inner element to its upper levels using the tooltip that appears on hover, clicking on the parent element you want to go..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v1beta9", "title": "skaffold.yaml", "description": "Documentation for configuring and using skaffold.yaml files in Cloud Code IDE.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:34:35", "type": "section_detail", "page_metadata": {"ogDescription": "Easy and Repeatable Container & Kubernetes Development", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:description": "Easy and Repeatable Container & Kubernetes Development", "ogTitle": "skaffold.yaml", "og:type": "website", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "twitter:title": "skaffold.yaml", "robots": "index, follow", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "og:url": "https://skaffold.dev/docs/references/yaml/", "generator": "Hugo 0.99.1", "title": "skaffold.yaml | Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "ogSiteName": "Skaffold", "og:title": "skaffold.yaml", "language": "en", "og:site_name": "Skaffold", "twitter:card": "summary", "scrapeId": "dc569441-4dde-4b4f-8212-979477cb24a8", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v1beta9", "url": "https://skaffold.dev/docs/references/yaml/?version=v1beta9", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I yaml anchors in skaffold?\n\nAssistant: To yaml anchors in skaffold, here's what you do:\nAnchors can be defined by having top-level keys starting with a dot, e.g. .common_stuff: &alias_name. You can then reuse the value using *alias_name..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v1beta9", "title": "skaffold.yaml", "description": "Documentation for configuring and using skaffold.yaml files in Cloud Code IDE.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:34:35", "type": "section_detail", "page_metadata": {"ogDescription": "Easy and Repeatable Container & Kubernetes Development", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:description": "Easy and Repeatable Container & Kubernetes Development", "ogTitle": "skaffold.yaml", "og:type": "website", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "twitter:title": "skaffold.yaml", "robots": "index, follow", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "og:url": "https://skaffold.dev/docs/references/yaml/", "generator": "Hugo 0.99.1", "title": "skaffold.yaml | Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "ogSiteName": "Skaffold", "og:title": "skaffold.yaml", "language": "en", "og:site_name": "Skaffold", "twitter:card": "summary", "scrapeId": "dc569441-4dde-4b4f-8212-979477cb24a8", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v1beta9", "url": "https://skaffold.dev/docs/references/yaml/?version=v1beta9", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I organizing multiple configurations in skaffold?\n\nAssistant: To organizing multiple configurations in skaffold, here's what you do:\nMultiple configurations can define dependencies on each other to construct an arbitrarily nested tree of project component dependencies. Management of multiple configurations can be simplified by grouping them together in the same file (separated by --- in YAML)..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v1beta9", "title": "skaffold.yaml", "description": "Documentation for configuring and using skaffold.yaml files in Cloud Code IDE.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:34:35", "type": "section_detail", "page_metadata": {"ogDescription": "Easy and Repeatable Container & Kubernetes Development", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:description": "Easy and Repeatable Container & Kubernetes Development", "ogTitle": "skaffold.yaml", "og:type": "website", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "twitter:title": "skaffold.yaml", "robots": "index, follow", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "og:url": "https://skaffold.dev/docs/references/yaml/", "generator": "Hugo 0.99.1", "title": "skaffold.yaml | Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "ogSiteName": "Skaffold", "og:title": "skaffold.yaml", "language": "en", "og:site_name": "Skaffold", "twitter:card": "summary", "scrapeId": "dc569441-4dde-4b4f-8212-979477cb24a8", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v1beta9", "url": "https://skaffold.dev/docs/references/yaml/?version=v1beta9", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: What are some tips for using skaffold.yaml in skaffold effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nUse Cloud Code IDE extensions for authoring assistance with skaffold.yaml files.\n\nUtilize YAML anchors for reusing values in configurations.\n\nGroup multiple configurations in the same file for better management.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v1beta9", "title": "skaffold.yaml", "description": "Documentation for configuring and using skaffold.yaml files in Cloud Code IDE.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:34:35", "type": "best_practices", "page_metadata": {"ogDescription": "Easy and Repeatable Container & Kubernetes Development", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:description": "Easy and Repeatable Container & Kubernetes Development", "ogTitle": "skaffold.yaml", "og:type": "website", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "twitter:title": "skaffold.yaml", "robots": "index, follow", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "og:url": "https://skaffold.dev/docs/references/yaml/", "generator": "Hugo 0.99.1", "title": "skaffold.yaml | Skaffold", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "ogSiteName": "Skaffold", "og:title": "skaffold.yaml", "language": "en", "og:site_name": "Skaffold", "twitter:card": "summary", "scrapeId": "dc569441-4dde-4b4f-8212-979477cb24a8", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v1beta9", "url": "https://skaffold.dev/docs/references/yaml/?version=v1beta9", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what skaffold.yaml is in skaffold?\n\nAssistant: Sure, I'd be happy to explain skaffold.yaml in skaffold.\n\n# skaffold.yaml\n\nThis page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and organization of configurations.Here's a quick rundown of what this is about:\n\n## YAML anchors\n\nAnchors can be defined by having top-level keys starting with a dot, e.g. `.common_stuff: &alias_name`. You can then reuse the value using `*alias_name`.\n\n## Organizing multiple configurations\n\nMultiple configurations can define dependencies on each other to construct an arbitrarily nested tree of project component dependencies. Management of multiple configurations can be simplified by grouping them together in the same file (separated by --- in YAML).\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v2beta5", "title": "skaffold.yaml", "description": "This page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and organization of configurations.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 04:34:51", "type": "overview", "page_metadata": {"og:description": "Easy and Repeatable Container & Kubernetes Development", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:title": "skaffold.yaml", "og:type": "website", "og:site_name": "Skaffold", "twitter:card": "summary", "generator": "Hugo 0.99.1", "title": "skaffold.yaml | Skaffold", "og:url": "https://skaffold.dev/docs/references/yaml/", "robots": "index, follow", "language": "en", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "twitter:title": "skaffold.yaml", "ogSiteName": "Skaffold", "ogTitle": "skaffold.yaml", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "scrapeId": "2ed550b6-f710-4e39-8e37-5a512d82b212", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v2beta5", "url": "https://skaffold.dev/docs/references/yaml/?version=v2beta5", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I yaml anchors in skaffold?\n\nAssistant: To yaml anchors in skaffold, here's what you do:\nAnchors can be defined by having top-level keys starting with a dot, e.g. `.common_stuff: &alias_name`. You can then reuse the value using `*alias_name`..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v2beta5", "title": "skaffold.yaml", "description": "This page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and organization of configurations.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 04:34:51", "type": "section_detail", "page_metadata": {"og:description": "Easy and Repeatable Container & Kubernetes Development", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:title": "skaffold.yaml", "og:type": "website", "og:site_name": "Skaffold", "twitter:card": "summary", "generator": "Hugo 0.99.1", "title": "skaffold.yaml | Skaffold", "og:url": "https://skaffold.dev/docs/references/yaml/", "robots": "index, follow", "language": "en", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "twitter:title": "skaffold.yaml", "ogSiteName": "Skaffold", "ogTitle": "skaffold.yaml", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "scrapeId": "2ed550b6-f710-4e39-8e37-5a512d82b212", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v2beta5", "url": "https://skaffold.dev/docs/references/yaml/?version=v2beta5", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I organizing multiple configurations in skaffold?\n\nAssistant: To organizing multiple configurations in skaffold, here's what you do:\nMultiple configurations can define dependencies on each other to construct an arbitrarily nested tree of project component dependencies. Management of multiple configurations can be simplified by grouping them together in the same file (separated by --- in YAML)..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v2beta5", "title": "skaffold.yaml", "description": "This page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and organization of configurations.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 04:34:51", "type": "section_detail", "page_metadata": {"og:description": "Easy and Repeatable Container & Kubernetes Development", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:title": "skaffold.yaml", "og:type": "website", "og:site_name": "Skaffold", "twitter:card": "summary", "generator": "Hugo 0.99.1", "title": "skaffold.yaml | Skaffold", "og:url": "https://skaffold.dev/docs/references/yaml/", "robots": "index, follow", "language": "en", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "twitter:title": "skaffold.yaml", "ogSiteName": "Skaffold", "ogTitle": "skaffold.yaml", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "scrapeId": "2ed550b6-f710-4e39-8e37-5a512d82b212", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v2beta5", "url": "https://skaffold.dev/docs/references/yaml/?version=v2beta5", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: What are some tips for using skaffold.yaml in skaffold effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nThe Cloud Code IDE extensions provide authoring assistance for skaffold.yaml files in the form of schema based validation, diagnostics, quick documentation, code completions, and snippets, that can make it easier to create and edit these files.\n\nYou can navigate the skaffold.yaml reference from an inner element to its upper levels using the tooltip that appears on hover, clicking on the parent element you want to go.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v2beta5", "title": "skaffold.yaml", "description": "This page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and organization of configurations.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 04:34:51", "type": "best_practices", "page_metadata": {"og:description": "Easy and Repeatable Container & Kubernetes Development", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:title": "skaffold.yaml", "og:type": "website", "og:site_name": "Skaffold", "twitter:card": "summary", "generator": "Hugo 0.99.1", "title": "skaffold.yaml | Skaffold", "og:url": "https://skaffold.dev/docs/references/yaml/", "robots": "index, follow", "language": "en", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "twitter:title": "skaffold.yaml", "ogSiteName": "Skaffold", "ogTitle": "skaffold.yaml", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "scrapeId": "2ed550b6-f710-4e39-8e37-5a512d82b212", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v2beta5", "url": "https://skaffold.dev/docs/references/yaml/?version=v2beta5", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what skaffold.yaml is in skaffold?\n\nAssistant: Sure, I'd be happy to explain skaffold.yaml in skaffold.\n\n# skaffold.yaml\n\nThis page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and configuration management.Here's a quick rundown of what this is about:\n\n## Tip\n\nThe Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based validation, diagnostics, quick documentation, code completions, and snippets, that can make it easier to create and edit these files. You can now navigate the skaffold.yaml reference from an inner element to its upper levels using the tooltip that appears on hover, clicking on the parent element you want to go.\n\n## YAML anchors\n\nAnchors can be defined by having top-level keys starting with a dot, e.g. .common_stuff: &alias_name. You can then reuse the value using *alias_name.\n\n## Organizing multiple configurations\n\nMultiple configurations can define dependencies on each other to construct an arbitrarily nested tree of project component dependencies. Management of multiple configurations can be simplified by grouping them together in the same file (separated by --- in YAML).\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v1beta5", "title": "skaffold.yaml", "description": "This page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and configuration management.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:35:02", "type": "overview", "page_metadata": {"viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "twitter:card": "summary", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "og:type": "website", "twitter:title": "skaffold.yaml", "title": "skaffold.yaml | Skaffold", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "generator": "Hugo 0.99.1", "og:url": "https://skaffold.dev/docs/references/yaml/", "ogTitle": "skaffold.yaml", "og:description": "Easy and Repeatable Container & Kubernetes Development", "og:site_name": "Skaffold", "language": "en", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "ogSiteName": "Skaffold", "og:title": "skaffold.yaml", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "robots": "index, follow", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "scrapeId": "6b7a33dd-012b-43f0-9108-e520df994776", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v1beta5", "url": "https://skaffold.dev/docs/references/yaml/?version=v1beta5", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I tip in skaffold?\n\nAssistant: To tip in skaffold, here's what you do:\nThe Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based validation, diagnostics, quick documentation, code completions, and snippets, that can make it easier to create and edit these files. You can now navigate the skaffold.yaml reference from an inner element to its upper levels using the tooltip that appears on hover, clicking on the parent element you want to go..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v1beta5", "title": "skaffold.yaml", "description": "This page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and configuration management.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:35:02", "type": "section_detail", "page_metadata": {"viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "twitter:card": "summary", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "og:type": "website", "twitter:title": "skaffold.yaml", "title": "skaffold.yaml | Skaffold", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "generator": "Hugo 0.99.1", "og:url": "https://skaffold.dev/docs/references/yaml/", "ogTitle": "skaffold.yaml", "og:description": "Easy and Repeatable Container & Kubernetes Development", "og:site_name": "Skaffold", "language": "en", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "ogSiteName": "Skaffold", "og:title": "skaffold.yaml", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "robots": "index, follow", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "scrapeId": "6b7a33dd-012b-43f0-9108-e520df994776", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v1beta5", "url": "https://skaffold.dev/docs/references/yaml/?version=v1beta5", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I yaml anchors in skaffold?\n\nAssistant: To yaml anchors in skaffold, here's what you do:\nAnchors can be defined by having top-level keys starting with a dot, e.g. .common_stuff: &alias_name. You can then reuse the value using *alias_name..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v1beta5", "title": "skaffold.yaml", "description": "This page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and configuration management.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:35:02", "type": "section_detail", "page_metadata": {"viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "twitter:card": "summary", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "og:type": "website", "twitter:title": "skaffold.yaml", "title": "skaffold.yaml | Skaffold", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "generator": "Hugo 0.99.1", "og:url": "https://skaffold.dev/docs/references/yaml/", "ogTitle": "skaffold.yaml", "og:description": "Easy and Repeatable Container & Kubernetes Development", "og:site_name": "Skaffold", "language": "en", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "ogSiteName": "Skaffold", "og:title": "skaffold.yaml", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "robots": "index, follow", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "scrapeId": "6b7a33dd-012b-43f0-9108-e520df994776", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v1beta5", "url": "https://skaffold.dev/docs/references/yaml/?version=v1beta5", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I organizing multiple configurations in skaffold?\n\nAssistant: To organizing multiple configurations in skaffold, here's what you do:\nMultiple configurations can define dependencies on each other to construct an arbitrarily nested tree of project component dependencies. Management of multiple configurations can be simplified by grouping them together in the same file (separated by --- in YAML)..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v1beta5", "title": "skaffold.yaml", "description": "This page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and configuration management.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:35:02", "type": "section_detail", "page_metadata": {"viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "twitter:card": "summary", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "og:type": "website", "twitter:title": "skaffold.yaml", "title": "skaffold.yaml | Skaffold", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "generator": "Hugo 0.99.1", "og:url": "https://skaffold.dev/docs/references/yaml/", "ogTitle": "skaffold.yaml", "og:description": "Easy and Repeatable Container & Kubernetes Development", "og:site_name": "Skaffold", "language": "en", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "ogSiteName": "Skaffold", "og:title": "skaffold.yaml", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "robots": "index, follow", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "scrapeId": "6b7a33dd-012b-43f0-9108-e520df994776", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v1beta5", "url": "https://skaffold.dev/docs/references/yaml/?version=v1beta5", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: What are some tips for using skaffold.yaml in skaffold effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nUse Cloud Code IDE extensions for authoring assistance with skaffold.yaml files.\n\nUtilize YAML anchors for reusing values in configurations.\n\nGroup multiple configurations in the same file for better management.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v1beta5", "title": "skaffold.yaml", "description": "This page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and configuration management.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:35:02", "type": "best_practices", "page_metadata": {"viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "twitter:card": "summary", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "og:type": "website", "twitter:title": "skaffold.yaml", "title": "skaffold.yaml | Skaffold", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "generator": "Hugo 0.99.1", "og:url": "https://skaffold.dev/docs/references/yaml/", "ogTitle": "skaffold.yaml", "og:description": "Easy and Repeatable Container & Kubernetes Development", "og:site_name": "Skaffold", "language": "en", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "ogSiteName": "Skaffold", "og:title": "skaffold.yaml", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "robots": "index, follow", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "scrapeId": "6b7a33dd-012b-43f0-9108-e520df994776", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v1beta5", "url": "https://skaffold.dev/docs/references/yaml/?version=v1beta5", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what skaffold.yaml is in skaffold?\n\nAssistant: Sure, I'd be happy to explain skaffold.yaml in skaffold.\n\n# skaffold.yaml\n\nThis page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and configuration management.Here's a quick rundown of what this is about:\n\n## YAML anchors\n\nAnchors can be defined by having top-level keys starting with a dot, e.g. `.common_stuff: &alias_name`. You can then reuse the value using `*alias_name`.\n\n## Organizing multiple configurations\n\nMultiple configurations can define dependencies on each other to construct an arbitrarily nested tree of project component dependencies. Management of multiple configurations can be simplified by grouping them together in the same file (separated by --- in YAML).\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v2beta10", "title": "skaffold.yaml", "description": "This page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and configuration management.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 04:35:18", "type": "overview", "page_metadata": {"og:type": "website", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "title": "skaffold.yaml | Skaffold", "og:url": "https://skaffold.dev/docs/references/yaml/", "twitter:card": "summary", "language": "en", "generator": "Hugo 0.99.1", "og:description": "Easy and Repeatable Container & Kubernetes Development", "ogTitle": "skaffold.yaml", "og:site_name": "Skaffold", "twitter:title": "skaffold.yaml", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "og:title": "skaffold.yaml", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "robots": "index, follow", "ogSiteName": "Skaffold", "scrapeId": "3a601e6d-c6d1-4bd0-9a64-bb69cf473c90", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v2beta10", "url": "https://skaffold.dev/docs/references/yaml/?version=v2beta10", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I yaml anchors in skaffold?\n\nAssistant: To yaml anchors in skaffold, here's what you do:\nAnchors can be defined by having top-level keys starting with a dot, e.g. `.common_stuff: &alias_name`. You can then reuse the value using `*alias_name`..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v2beta10", "title": "skaffold.yaml", "description": "This page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and configuration management.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 04:35:18", "type": "section_detail", "page_metadata": {"og:type": "website", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "title": "skaffold.yaml | Skaffold", "og:url": "https://skaffold.dev/docs/references/yaml/", "twitter:card": "summary", "language": "en", "generator": "Hugo 0.99.1", "og:description": "Easy and Repeatable Container & Kubernetes Development", "ogTitle": "skaffold.yaml", "og:site_name": "Skaffold", "twitter:title": "skaffold.yaml", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "og:title": "skaffold.yaml", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "robots": "index, follow", "ogSiteName": "Skaffold", "scrapeId": "3a601e6d-c6d1-4bd0-9a64-bb69cf473c90", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v2beta10", "url": "https://skaffold.dev/docs/references/yaml/?version=v2beta10", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I organizing multiple configurations in skaffold?\n\nAssistant: To organizing multiple configurations in skaffold, here's what you do:\nMultiple configurations can define dependencies on each other to construct an arbitrarily nested tree of project component dependencies. Management of multiple configurations can be simplified by grouping them together in the same file (separated by --- in YAML)..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v2beta10", "title": "skaffold.yaml", "description": "This page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and configuration management.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 04:35:18", "type": "section_detail", "page_metadata": {"og:type": "website", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "title": "skaffold.yaml | Skaffold", "og:url": "https://skaffold.dev/docs/references/yaml/", "twitter:card": "summary", "language": "en", "generator": "Hugo 0.99.1", "og:description": "Easy and Repeatable Container & Kubernetes Development", "ogTitle": "skaffold.yaml", "og:site_name": "Skaffold", "twitter:title": "skaffold.yaml", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "og:title": "skaffold.yaml", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "robots": "index, follow", "ogSiteName": "Skaffold", "scrapeId": "3a601e6d-c6d1-4bd0-9a64-bb69cf473c90", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v2beta10", "url": "https://skaffold.dev/docs/references/yaml/?version=v2beta10", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: What are some tips for using skaffold.yaml in skaffold effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nThe Cloud Code IDE extensions provide authoring assistance for `skaffold.yaml` files in the form of schema based validation, diagnostics, quick documentation, code completions, and snippets.\n\nYou can navigate the `skaffold.yaml` reference from an inner element to its upper levels using the tooltip that appears on hover, clicking on the parent element you want to go.\n\nTo use this schema, you need Skaffold version v1.17.0 or later.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v2beta10", "title": "skaffold.yaml", "description": "This page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and configuration management.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 04:35:18", "type": "best_practices", "page_metadata": {"og:type": "website", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "title": "skaffold.yaml | Skaffold", "og:url": "https://skaffold.dev/docs/references/yaml/", "twitter:card": "summary", "language": "en", "generator": "Hugo 0.99.1", "og:description": "Easy and Repeatable Container & Kubernetes Development", "ogTitle": "skaffold.yaml", "og:site_name": "Skaffold", "twitter:title": "skaffold.yaml", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "og:title": "skaffold.yaml", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "robots": "index, follow", "ogSiteName": "Skaffold", "scrapeId": "3a601e6d-c6d1-4bd0-9a64-bb69cf473c90", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v2beta10", "url": "https://skaffold.dev/docs/references/yaml/?version=v2beta10", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what skaffold.yaml is in skaffold?\n\nAssistant: Sure, I'd be happy to explain skaffold.yaml in skaffold.\n\n# skaffold.yaml\n\nThis page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and organization of configurations.Here's a quick rundown of what this is about:\n\n## YAML anchors\n\nAnchors can be defined by having top-level keys starting with a dot, e.g. `.common_stuff: &alias_name`. You can then reuse the value using `*alias_name`.\n\n## Organizing multiple configurations\n\nMultiple configurations can define dependencies on each other to construct an arbitrarily nested tree of project component dependencies. Management of multiple configurations can be simplified by grouping them together in the same file (separated by --- in YAML).\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v2beta1", "title": "skaffold.yaml", "description": "This page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and organization of configurations.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 04:35:27", "type": "overview", "page_metadata": {"favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "robots": "index, follow", "title": "skaffold.yaml | Skaffold", "og:description": "Easy and Repeatable Container & Kubernetes Development", "twitter:card": "summary", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "twitter:title": "skaffold.yaml", "og:title": "skaffold.yaml", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "generator": "Hugo 0.99.1", "ogSiteName": "Skaffold", "ogTitle": "skaffold.yaml", "og:type": "website", "og:url": "https://skaffold.dev/docs/references/yaml/", "language": "en", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:site_name": "Skaffold", "scrapeId": "f6a1b729-f793-4370-85d7-6a078eae933e", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v2beta1", "url": "https://skaffold.dev/docs/references/yaml/?version=v2beta1", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I yaml anchors in skaffold?\n\nAssistant: To yaml anchors in skaffold, here's what you do:\nAnchors can be defined by having top-level keys starting with a dot, e.g. `.common_stuff: &alias_name`. You can then reuse the value using `*alias_name`..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v2beta1", "title": "skaffold.yaml", "description": "This page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and organization of configurations.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 04:35:27", "type": "section_detail", "page_metadata": {"favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "robots": "index, follow", "title": "skaffold.yaml | Skaffold", "og:description": "Easy and Repeatable Container & Kubernetes Development", "twitter:card": "summary", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "twitter:title": "skaffold.yaml", "og:title": "skaffold.yaml", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "generator": "Hugo 0.99.1", "ogSiteName": "Skaffold", "ogTitle": "skaffold.yaml", "og:type": "website", "og:url": "https://skaffold.dev/docs/references/yaml/", "language": "en", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:site_name": "Skaffold", "scrapeId": "f6a1b729-f793-4370-85d7-6a078eae933e", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v2beta1", "url": "https://skaffold.dev/docs/references/yaml/?version=v2beta1", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I organizing multiple configurations in skaffold?\n\nAssistant: To organizing multiple configurations in skaffold, here's what you do:\nMultiple configurations can define dependencies on each other to construct an arbitrarily nested tree of project component dependencies. Management of multiple configurations can be simplified by grouping them together in the same file (separated by --- in YAML)..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v2beta1", "title": "skaffold.yaml", "description": "This page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and organization of configurations.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 04:35:27", "type": "section_detail", "page_metadata": {"favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "robots": "index, follow", "title": "skaffold.yaml | Skaffold", "og:description": "Easy and Repeatable Container & Kubernetes Development", "twitter:card": "summary", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "twitter:title": "skaffold.yaml", "og:title": "skaffold.yaml", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "generator": "Hugo 0.99.1", "ogSiteName": "Skaffold", "ogTitle": "skaffold.yaml", "og:type": "website", "og:url": "https://skaffold.dev/docs/references/yaml/", "language": "en", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:site_name": "Skaffold", "scrapeId": "f6a1b729-f793-4370-85d7-6a078eae933e", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v2beta1", "url": "https://skaffold.dev/docs/references/yaml/?version=v2beta1", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: What are some tips for using skaffold.yaml in skaffold effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nThe Cloud Code IDE extensions provide authoring assistance for skaffold.yaml files in the form of schema based validation, diagnostics, quick documentation, code completions, and snippets, that can make it easier to create and edit these files.\n\nYou can navigate the skaffold.yaml reference from an inner element to its upper levels using the tooltip that appears on hover, clicking on the parent element you want to go.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://skaffold.dev/docs/references/yaml/?version=v2beta1", "title": "skaffold.yaml", "description": "This page provides information on the structure and usage of the skaffold.yaml file, including tips for authoring assistance and organization of configurations.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 04:35:27", "type": "best_practices", "page_metadata": {"favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogDescription": "Easy and Repeatable Container & Kubernetes Development", "robots": "index, follow", "title": "skaffold.yaml | Skaffold", "og:description": "Easy and Repeatable Container & Kubernetes Development", "twitter:card": "summary", "twitter:description": "Easy and Repeatable Container & Kubernetes Development", "twitter:title": "skaffold.yaml", "og:title": "skaffold.yaml", "ogUrl": "https://skaffold.dev/docs/references/yaml/", "description": "\n\n\n\n    💡 Tip\n    The Cloud Code IDE extensions (see install options) provide authoring assistance for skaffold.yaml files in the form of schema based …", "generator": "Hugo 0.99.1", "ogSiteName": "Skaffold", "ogTitle": "skaffold.yaml", "og:type": "website", "og:url": "https://skaffold.dev/docs/references/yaml/", "language": "en", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:site_name": "Skaffold", "scrapeId": "f6a1b729-f793-4370-85d7-6a078eae933e", "sourceURL": "https://skaffold.dev/docs/references/yaml/?version=v2beta1", "url": "https://skaffold.dev/docs/references/yaml/?version=v2beta1", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what ko beta is in skaffold?\n\nAssistant: Sure, I'd be happy to explain ko beta in skaffold.\n\n# ko beta\n\n`ko` enables fast, standardized, reproducible, configuration-less, Docker-less, and multi-platform container image builds for Go apps.Here's a quick rundown of what this is about:\n\n## Benefits of the ko builder\n\nCompared to …\n\n- [the Cloud Native buildpacks builder](https://skaffold.dev/docs/builders/builder-types/buildpacks/), the ko builder is [fast](https://cloud.google.com/blog/topics/developers-practitioners/ship-your-go-applications-faster-cloud-run-ko), doesn’t require Docker, and uses a default base image that has a small attack surface.\n\n- [the Docker builder](https://skaffold.dev/docs/builders/builder-types/docker/), the ko builder standardizes builds, avoiding artisanal [snowflake](https://martinfowler.com/bliki/SnowflakeServer.html) `Dockerfile`s. It also doesn’t require the Docker daemon, so builds can run in environments where Docker isn’t available for security reasons.\n\n- [the Kaniko builder](https://skaffold.dev/docs/builders/builder-types/docker/#dockerfile-in-cluster-with-kaniko), the ko builder doesn’t need a Kubernetes cluster, and it avoids the previously-mentioned artisanal `Dockerfile`s.\n\n- [the Bazel builder](https://skaffold.dev/docs/builders/builder-types/bazel/), the ko builder doesn’t require users to adopt Bazel. However, we recommend the Bazel builder for users who already use Bazel for their Go apps.\n\n- [the custom builder](https://skaffold.dev/docs/builders/builder-types/custom/), the ko builder standardizes builds, as it doesn’t require running `ko` using custom shell scripts.\n\n## Configuring the ko builder\n\nThe ko builder default configuration is sufficient for many Go apps. To use the ko builder with its default configuration, provide an empty map in the `ko` field, e.g.:\n\n```yaml\nbuild:\n  artifacts:\n  - image: my-simple-go-app\n    ko: {}\n```\n\n### Base image\n\n`ko` uses the [`cgr.dev/chainguard/static`](https://github.com/chainguard-images/images/tree/main/images/static) image as the default base image. This is a small image that provides a minimal environment for Go binaries. The default base image does not provide a shell, and it does not include `glibc`.\n\nYou can specify a different base image using the ko builder `fromImage` config field. For instance, if you want to use a base image that contains `glibc`, you can use this configuration:\n\n```yaml\n    ko:\n      fromImage: cgr.dev/chainguard/glibc-dynamic\n```\n\nIf you run Skaffold in a Google Cloud VPC network with limited or no internet access, you can use a [distroless](https://github.com/GoogleContainerTools/distroless) base image from Google Container Registry, accessible via [Private Google Access](https://cloud.google.com/vpc/docs/private-google-access):\n\n```yaml\n    ko:\n      fromImage: gcr.io/distroless/static-debian11:nonroot\n```\n\n### Multi-platform images\n\nThe ko builder supports building multi-platform images. The default platform is `linux/amd64`, but you can configure a list of platforms using the artifact’s `platforms` configuration field, e.g.:\n\n```yaml\nbuild:\n  platforms: [\"linux/amd64\", \"linux/arm64\"]\n  artifacts:\n  - image: foo\n    ko: {}\n```\n\nYou can also supply `[\\\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/builders/builder-types/ko", "title": "ko beta", "description": "`ko` enables fast, standardized, reproducible, configuration-less, Docker-less, and multi-platform container image builds for Go apps.", "has_code_examples": false, "has_best_practices": false, "section_count": 2, "timestamp": "2025-03-01 04:38:56", "type": "overview", "page_metadata": {"ogTitle": "ko", "article:section": "docs", "twitter:title": "ko", "twitter:card": "summary", "language": "en", "og:description": "ko enables fast, standardized, reproducible, configuration-less, Docker-less, and multi-platform container image builds for Go apps.\nSkaffold embeds ko as a library, so you do not need to download ko to use the ko builder.\nBenefits of the ko builder Compared to …\n  the Cloud Native buildpacks builder, the ko builder is fast, doesn’t require Docker, and uses a default base image that has a small attack surface.\n  the Docker builder, the ko builder standardizes builds, avoiding artisanal snowflake Dockerfiles.", "generator": "Hugo 0.99.1", "description": "ko enables fast, standardized, reproducible,\nconfiguration-less, Docker-less, and multi-platform container image builds for\nGo apps.\nSkaffold embeds …", "og:title": "ko", "robots": "index, follow", "og:site_name": "Skaffold", "ogUrl": "https://skaffold.dev/docs/builders/builder-types/ko/", "og:type": "article", "og:url": "https://skaffold.dev/docs/builders/builder-types/ko/", "article:modified_time": "2025-01-23T10:14:58-05:00", "twitter:description": "ko enables fast, standardized, reproducible, configuration-less, Docker-less, and multi-platform container image builds for Go apps.\nSkaffold embeds ko as a library, so you do not need to download ko to use the ko builder.\nBenefits of the ko builder Compared to …\n  the Cloud Native buildpacks builder, the ko builder is fast, doesn’t require Docker, and uses a default base image that has a small attack surface.\n  the Docker builder, the ko builder standardizes builds, avoiding artisanal snowflake Dockerfiles.", "ogSiteName": "Skaffold", "modifiedTime": "2025-01-23T10:14:58-05:00", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogDescription": "ko enables fast, standardized, reproducible, configuration-less, Docker-less, and multi-platform container image builds for Go apps.\nSkaffold embeds ko as a library, so you do not need to download ko to use the ko builder.\nBenefits of the ko builder Compared to …\n  the Cloud Native buildpacks builder, the ko builder is fast, doesn’t require Docker, and uses a default base image that has a small attack surface.\n  the Docker builder, the ko builder standardizes builds, avoiding artisanal snowflake Dockerfiles.", "title": "ko | Skaffold", "scrapeId": "6fd680e5-c380-40fe-a7c6-4a48653965d6", "sourceURL": "https://skaffold.dev/docs/builders/builder-types/ko", "url": "https://skaffold.dev/docs/builders/builder-types/ko/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I benefits of the ko builder in skaffold?\n\nAssistant: To benefits of the ko builder in skaffold, here's what you do:\nCompared to …\n\n- [the Cloud Native buildpacks builder](https://skaffold.dev/docs/builders/builder-types/buildpacks/), the ko builder is [fast](https://cloud.google.com/blog/topics/developers-practitioners/ship-your-go-applications-faster-cloud-run-ko), doesn’t require Docker, and uses a default base image that has a small attack surface.\n\n- [the Docker builder](https://skaffold.dev/docs/builders/builder-types/docker/), the ko builder standardizes builds, avoiding artisanal [snowflake](https://martinfowler.com/bliki/SnowflakeServer.html) `Dockerfile`s. It also doesn’t require the Docker daemon, so builds can run in environments where Docker isn’t available for security reasons.\n\n- [the Kaniko builder](https://skaffold.dev/docs/builders/builder-types/docker/#dockerfile-in-cluster-with-kaniko), the ko builder doesn’t need a Kubernetes cluster, and it avoids the previously-mentioned artisanal `Dockerfile`s.\n\n- [the Bazel builder](https://skaffold.dev/docs/builders/builder-types/bazel/), the ko builder doesn’t require users to adopt Bazel. However, we recommend the Bazel builder for users who already use Bazel for their Go apps.\n\n- [the custom builder](https://skaffold.dev/docs/builders/builder-types/custom/), the ko builder standardizes builds, as it doesn’t require running `ko` using custom shell scripts..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/builders/builder-types/ko", "title": "ko beta", "description": "`ko` enables fast, standardized, reproducible, configuration-less, Docker-less, and multi-platform container image builds for Go apps.", "has_code_examples": false, "has_best_practices": false, "section_count": 2, "timestamp": "2025-03-01 04:38:56", "type": "section_detail", "page_metadata": {"ogTitle": "ko", "article:section": "docs", "twitter:title": "ko", "twitter:card": "summary", "language": "en", "og:description": "ko enables fast, standardized, reproducible, configuration-less, Docker-less, and multi-platform container image builds for Go apps.\nSkaffold embeds ko as a library, so you do not need to download ko to use the ko builder.\nBenefits of the ko builder Compared to …\n  the Cloud Native buildpacks builder, the ko builder is fast, doesn’t require Docker, and uses a default base image that has a small attack surface.\n  the Docker builder, the ko builder standardizes builds, avoiding artisanal snowflake Dockerfiles.", "generator": "Hugo 0.99.1", "description": "ko enables fast, standardized, reproducible,\nconfiguration-less, Docker-less, and multi-platform container image builds for\nGo apps.\nSkaffold embeds …", "og:title": "ko", "robots": "index, follow", "og:site_name": "Skaffold", "ogUrl": "https://skaffold.dev/docs/builders/builder-types/ko/", "og:type": "article", "og:url": "https://skaffold.dev/docs/builders/builder-types/ko/", "article:modified_time": "2025-01-23T10:14:58-05:00", "twitter:description": "ko enables fast, standardized, reproducible, configuration-less, Docker-less, and multi-platform container image builds for Go apps.\nSkaffold embeds ko as a library, so you do not need to download ko to use the ko builder.\nBenefits of the ko builder Compared to …\n  the Cloud Native buildpacks builder, the ko builder is fast, doesn’t require Docker, and uses a default base image that has a small attack surface.\n  the Docker builder, the ko builder standardizes builds, avoiding artisanal snowflake Dockerfiles.", "ogSiteName": "Skaffold", "modifiedTime": "2025-01-23T10:14:58-05:00", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogDescription": "ko enables fast, standardized, reproducible, configuration-less, Docker-less, and multi-platform container image builds for Go apps.\nSkaffold embeds ko as a library, so you do not need to download ko to use the ko builder.\nBenefits of the ko builder Compared to …\n  the Cloud Native buildpacks builder, the ko builder is fast, doesn’t require Docker, and uses a default base image that has a small attack surface.\n  the Docker builder, the ko builder standardizes builds, avoiding artisanal snowflake Dockerfiles.", "title": "ko | Skaffold", "scrapeId": "6fd680e5-c380-40fe-a7c6-4a48653965d6", "sourceURL": "https://skaffold.dev/docs/builders/builder-types/ko", "url": "https://skaffold.dev/docs/builders/builder-types/ko/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I configuring the ko builder in skaffold?\n\nAssistant: To configuring the ko builder in skaffold, here's what you do:\nThe ko builder default configuration is sufficient for many Go apps. To use the ko builder with its default configuration, provide an empty map in the `ko` field, e.g.:\n\n```yaml\nbuild:\n  artifacts:\n  - image: my-simple-go-app\n    ko: {}\n```\n\n### Base image\n\n`ko` uses the [`cgr.dev/chainguard/static`](https://github.com/chainguard-images/images/tree/main/images/static) image as the default base image. This is a small image that provides a minimal environment for Go binaries. The default base image does not provide a shell, and it does not include `glibc`.\n\nYou can specify a different base image using the ko builder `fromImage` config field. For instance, if you want to use a base image that contains `glibc`, you can use this configuration:\n\n```yaml\n    ko:\n      fromImage: cgr.dev/chainguard/glibc-dynamic\n```\n\nIf you run Skaffold in a Google Cloud VPC network with limited or no internet access, you can use a [distroless](https://github.com/GoogleContainerTools/distroless) base image from Google Container Registry, accessible via [Private Google Access](https://cloud.google.com/vpc/docs/private-google-access):\n\n```yaml\n    ko:\n      fromImage: gcr.io/distroless/static-debian11:nonroot\n```\n\n### Multi-platform images\n\nThe ko builder supports building multi-platform images. The default platform is `linux/amd64`, but you can configure a list of platforms using the artifact’s `platforms` configuration field, e.g.:\n\n```yaml\nbuild:\n  platforms: [\"linux/amd64\", \"linux/arm64\"]\n  artifacts:\n  - image: foo\n    ko: {}\n```\n\nYou can also supply `[\\.\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/builders/builder-types/ko", "title": "ko beta", "description": "`ko` enables fast, standardized, reproducible, configuration-less, Docker-less, and multi-platform container image builds for Go apps.", "has_code_examples": false, "has_best_practices": false, "section_count": 2, "timestamp": "2025-03-01 04:38:56", "type": "section_detail", "page_metadata": {"ogTitle": "ko", "article:section": "docs", "twitter:title": "ko", "twitter:card": "summary", "language": "en", "og:description": "ko enables fast, standardized, reproducible, configuration-less, Docker-less, and multi-platform container image builds for Go apps.\nSkaffold embeds ko as a library, so you do not need to download ko to use the ko builder.\nBenefits of the ko builder Compared to …\n  the Cloud Native buildpacks builder, the ko builder is fast, doesn’t require Docker, and uses a default base image that has a small attack surface.\n  the Docker builder, the ko builder standardizes builds, avoiding artisanal snowflake Dockerfiles.", "generator": "Hugo 0.99.1", "description": "ko enables fast, standardized, reproducible,\nconfiguration-less, Docker-less, and multi-platform container image builds for\nGo apps.\nSkaffold embeds …", "og:title": "ko", "robots": "index, follow", "og:site_name": "Skaffold", "ogUrl": "https://skaffold.dev/docs/builders/builder-types/ko/", "og:type": "article", "og:url": "https://skaffold.dev/docs/builders/builder-types/ko/", "article:modified_time": "2025-01-23T10:14:58-05:00", "twitter:description": "ko enables fast, standardized, reproducible, configuration-less, Docker-less, and multi-platform container image builds for Go apps.\nSkaffold embeds ko as a library, so you do not need to download ko to use the ko builder.\nBenefits of the ko builder Compared to …\n  the Cloud Native buildpacks builder, the ko builder is fast, doesn’t require Docker, and uses a default base image that has a small attack surface.\n  the Docker builder, the ko builder standardizes builds, avoiding artisanal snowflake Dockerfiles.", "ogSiteName": "Skaffold", "modifiedTime": "2025-01-23T10:14:58-05:00", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogDescription": "ko enables fast, standardized, reproducible, configuration-less, Docker-less, and multi-platform container image builds for Go apps.\nSkaffold embeds ko as a library, so you do not need to download ko to use the ko builder.\nBenefits of the ko builder Compared to …\n  the Cloud Native buildpacks builder, the ko builder is fast, doesn’t require Docker, and uses a default base image that has a small attack surface.\n  the Docker builder, the ko builder standardizes builds, avoiding artisanal snowflake Dockerfiles.", "title": "ko | Skaffold", "scrapeId": "6fd680e5-c380-40fe-a7c6-4a48653965d6", "sourceURL": "https://skaffold.dev/docs/builders/builder-types/ko", "url": "https://skaffold.dev/docs/builders/builder-types/ko/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what Local Cluster is in skaffold?\n\nAssistant: Sure, I'd be happy to explain Local Cluster in skaffold.\n\n# Local Cluster\n\nSkaffold supports fast deployments to supported locally-hosted clusters, such as minikube and Docker Desktop, by loading images directly into the cluster.Here's a quick rundown of what this is about:\n\n## Auto detection\n\nSkaffold’s heuristic to detect local clusters is based on the Kubernetes context name set on kubectl. You can find your the current context name by running:\n\n```bash\nkubectl config current-context\n```\n\nSkaffold checks for the following context names:\n\n| Kubernetes context | Local cluster type | Notes |\n| --- | --- | --- |\n| docker-desktop | [Docker Desktop](https://www.docker.com/products/docker-desktop) |  |\n| docker-for-desktop | [Docker Desktop](https://www.docker.com/products/docker-desktop) | This context name is deprecated |\n| minikube 1 | [minikube](https://github.com/kubernetes/minikube/) | See 1 |\n| kind-(.*) | [kind](https://github.com/kubernetes-sigs/kind) | This pattern is used by kind >= v0.6.0 |\n| (.*)@kind | [kind](https://github.com/kubernetes-sigs/kind) | This pattern was used by kind < v0.6.0 |\n| k3d-(.*) | [k3d](https://github.com/rancher/k3d) | This pattern is used by k3d >= v3.0.0 |\n\nFor any other name, Skaffold assumes that the cluster is remote and that images have to be pushed.\n\n1 Additionally, a Kubernetes context may be considered as `minikube` even if it’s not named `minikube` but it’s cluster certificate is stored at `$HOME/.minikube` or the `minikube profile list` command returns the Kubernetes context name.\n\n## Manual override\n\nFor non-standard local setups, such as a custom `minikube` profile, some extra configuration is necessary. The essential steps are:\n\n1. Ensure that Skaffold builds the images with the same docker daemon that runs the pods’ containers.\n\n2. Tell Skaffold to skip pushing images either by configuring\n\n```yaml\nbuild:\n     local:\n       push: false\n```\n\nor by marking a Kubernetes context as local (see the following example).\n\nFor example, when running `minikube` with a custom profile (e.g. `minikube start -p my-profile`):\n\n1. Set up the docker environment for Skaffold with `source <(minikube docker-env -p my-profile)`. This should set some environment variables for docker (check with `env | grep DOCKER`). **It is important to do this in the same shell where Skaffold is executed.**\n\n2. Tell Skaffold that the Kubernetes context `my-profile` refers to a local cluster with\n\n```bash\nskaffold config set --kube-context my-profile local-cluster true\n```\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/environment/local-cluster", "title": "Local Cluster", "description": "Skaffold supports fast deployments to supported locally-hosted clusters, such as minikube and Docker Desktop, by loading images directly into the cluster.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 04:39:16", "type": "overview", "page_metadata": {"viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "ogTitle": "Local Cluster", "og:description": "Skaffold supports fast deployments to supported locally-hosted clusters, such as minikube and Docker Desktop, by loading images directly into the cluster. Loading images is typically much faster than the roundtrip required to push an image to a remote registry and then for the cluster to pull that image again.\nAuto detection Skaffold’s heuristic to detect local clusters is based on the Kubernetes context name set on kubectl. You can find your the current context name by running:", "og:url": "https://skaffold.dev/docs/environment/local-cluster/", "article:modified_time": "2025-01-23T10:14:58-05:00", "twitter:title": "Local Cluster", "language": "en", "ogUrl": "https://skaffold.dev/docs/environment/local-cluster/", "article:section": "docs", "twitter:description": "Skaffold supports fast deployments to supported locally-hosted clusters, such as minikube and Docker Desktop, by loading images directly into the cluster. Loading images is typically much faster than the roundtrip required to push an image to a remote registry and then for the cluster to pull that image again.\nAuto detection Skaffold’s heuristic to detect local clusters is based on the Kubernetes context name set on kubectl. You can find your the current context name by running:", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:site_name": "Skaffold", "title": "Local Cluster | Skaffold", "ogDescription": "Skaffold supports fast deployments to supported locally-hosted clusters, such as minikube and Docker Desktop, by loading images directly into the cluster. Loading images is typically much faster than the roundtrip required to push an image to a remote registry and then for the cluster to pull that image again.\nAuto detection Skaffold’s heuristic to detect local clusters is based on the Kubernetes context name set on kubectl. You can find your the current context name by running:", "ogSiteName": "Skaffold", "modifiedTime": "2025-01-23T10:14:58-05:00", "generator": "Hugo 0.99.1", "og:title": "Local Cluster", "twitter:card": "summary", "description": "Skaffold supports fast deployments to supported locally-hosted clusters,\nsuch as minikube and Docker Desktop, by loading images directly\ninto the …", "og:type": "article", "robots": "index, follow", "scrapeId": "5962c059-c8cc-43c5-bd4a-2a94853b45e3", "sourceURL": "https://skaffold.dev/docs/environment/local-cluster", "url": "https://skaffold.dev/docs/environment/local-cluster/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I auto detection in skaffold?\n\nAssistant: To auto detection in skaffold, here's what you do:\nSkaffold’s heuristic to detect local clusters is based on the Kubernetes context name set on kubectl. You can find your the current context name by running:\n\n```bash\nkubectl config current-context\n```\n\nSkaffold checks for the following context names:\n\n| Kubernetes context | Local cluster type | Notes |\n| --- | --- | --- |\n| docker-desktop | [Docker Desktop](https://www.docker.com/products/docker-desktop) |  |\n| docker-for-desktop | [Docker Desktop](https://www.docker.com/products/docker-desktop) | This context name is deprecated |\n| minikube 1 | [minikube](https://github.com/kubernetes/minikube/) | See 1 |\n| kind-(.*) | [kind](https://github.com/kubernetes-sigs/kind) | This pattern is used by kind >= v0.6.0 |\n| (.*)@kind | [kind](https://github.com/kubernetes-sigs/kind) | This pattern was used by kind < v0.6.0 |\n| k3d-(.*) | [k3d](https://github.com/rancher/k3d) | This pattern is used by k3d >= v3.0.0 |\n\nFor any other name, Skaffold assumes that the cluster is remote and that images have to be pushed.\n\n1 Additionally, a Kubernetes context may be considered as `minikube` even if it’s not named `minikube` but it’s cluster certificate is stored at `$HOME/.minikube` or the `minikube profile list` command returns the Kubernetes context name..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/environment/local-cluster", "title": "Local Cluster", "description": "Skaffold supports fast deployments to supported locally-hosted clusters, such as minikube and Docker Desktop, by loading images directly into the cluster.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 04:39:16", "type": "section_detail", "page_metadata": {"viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "ogTitle": "Local Cluster", "og:description": "Skaffold supports fast deployments to supported locally-hosted clusters, such as minikube and Docker Desktop, by loading images directly into the cluster. Loading images is typically much faster than the roundtrip required to push an image to a remote registry and then for the cluster to pull that image again.\nAuto detection Skaffold’s heuristic to detect local clusters is based on the Kubernetes context name set on kubectl. You can find your the current context name by running:", "og:url": "https://skaffold.dev/docs/environment/local-cluster/", "article:modified_time": "2025-01-23T10:14:58-05:00", "twitter:title": "Local Cluster", "language": "en", "ogUrl": "https://skaffold.dev/docs/environment/local-cluster/", "article:section": "docs", "twitter:description": "Skaffold supports fast deployments to supported locally-hosted clusters, such as minikube and Docker Desktop, by loading images directly into the cluster. Loading images is typically much faster than the roundtrip required to push an image to a remote registry and then for the cluster to pull that image again.\nAuto detection Skaffold’s heuristic to detect local clusters is based on the Kubernetes context name set on kubectl. You can find your the current context name by running:", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:site_name": "Skaffold", "title": "Local Cluster | Skaffold", "ogDescription": "Skaffold supports fast deployments to supported locally-hosted clusters, such as minikube and Docker Desktop, by loading images directly into the cluster. Loading images is typically much faster than the roundtrip required to push an image to a remote registry and then for the cluster to pull that image again.\nAuto detection Skaffold’s heuristic to detect local clusters is based on the Kubernetes context name set on kubectl. You can find your the current context name by running:", "ogSiteName": "Skaffold", "modifiedTime": "2025-01-23T10:14:58-05:00", "generator": "Hugo 0.99.1", "og:title": "Local Cluster", "twitter:card": "summary", "description": "Skaffold supports fast deployments to supported locally-hosted clusters,\nsuch as minikube and Docker Desktop, by loading images directly\ninto the …", "og:type": "article", "robots": "index, follow", "scrapeId": "5962c059-c8cc-43c5-bd4a-2a94853b45e3", "sourceURL": "https://skaffold.dev/docs/environment/local-cluster", "url": "https://skaffold.dev/docs/environment/local-cluster/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I manual override in skaffold?\n\nAssistant: To manual override in skaffold, here's what you do:\nFor non-standard local setups, such as a custom `minikube` profile, some extra configuration is necessary. The essential steps are:\n\n1. Ensure that Skaffold builds the images with the same docker daemon that runs the pods’ containers.\n\n2. Tell Skaffold to skip pushing images either by configuring\n\n```yaml\nbuild:\n     local:\n       push: false\n```\n\nor by marking a Kubernetes context as local (see the following example).\n\nFor example, when running `minikube` with a custom profile (e.g. `minikube start -p my-profile`):\n\n1. Set up the docker environment for Skaffold with `source <(minikube docker-env -p my-profile)`. This should set some environment variables for docker (check with `env | grep DOCKER`). **It is important to do this in the same shell where Skaffold is executed.**\n\n2. Tell Skaffold that the Kubernetes context `my-profile` refers to a local cluster with\n\n```bash\nskaffold config set --kube-context my-profile local-cluster true\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/environment/local-cluster", "title": "Local Cluster", "description": "Skaffold supports fast deployments to supported locally-hosted clusters, such as minikube and Docker Desktop, by loading images directly into the cluster.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 04:39:16", "type": "section_detail", "page_metadata": {"viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "ogTitle": "Local Cluster", "og:description": "Skaffold supports fast deployments to supported locally-hosted clusters, such as minikube and Docker Desktop, by loading images directly into the cluster. Loading images is typically much faster than the roundtrip required to push an image to a remote registry and then for the cluster to pull that image again.\nAuto detection Skaffold’s heuristic to detect local clusters is based on the Kubernetes context name set on kubectl. You can find your the current context name by running:", "og:url": "https://skaffold.dev/docs/environment/local-cluster/", "article:modified_time": "2025-01-23T10:14:58-05:00", "twitter:title": "Local Cluster", "language": "en", "ogUrl": "https://skaffold.dev/docs/environment/local-cluster/", "article:section": "docs", "twitter:description": "Skaffold supports fast deployments to supported locally-hosted clusters, such as minikube and Docker Desktop, by loading images directly into the cluster. Loading images is typically much faster than the roundtrip required to push an image to a remote registry and then for the cluster to pull that image again.\nAuto detection Skaffold’s heuristic to detect local clusters is based on the Kubernetes context name set on kubectl. You can find your the current context name by running:", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:site_name": "Skaffold", "title": "Local Cluster | Skaffold", "ogDescription": "Skaffold supports fast deployments to supported locally-hosted clusters, such as minikube and Docker Desktop, by loading images directly into the cluster. Loading images is typically much faster than the roundtrip required to push an image to a remote registry and then for the cluster to pull that image again.\nAuto detection Skaffold’s heuristic to detect local clusters is based on the Kubernetes context name set on kubectl. You can find your the current context name by running:", "ogSiteName": "Skaffold", "modifiedTime": "2025-01-23T10:14:58-05:00", "generator": "Hugo 0.99.1", "og:title": "Local Cluster", "twitter:card": "summary", "description": "Skaffold supports fast deployments to supported locally-hosted clusters,\nsuch as minikube and Docker Desktop, by loading images directly\ninto the …", "og:type": "article", "robots": "index, follow", "scrapeId": "5962c059-c8cc-43c5-bd4a-2a94853b45e3", "sourceURL": "https://skaffold.dev/docs/environment/local-cluster", "url": "https://skaffold.dev/docs/environment/local-cluster/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you give me some code examples for Local Cluster in skaffold?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Check current Kubernetes context**:\n\n```yaml\nkubectl config current-context\n```\n\nThis snippet shows you how to check current kubernetes context, which is an important aspect of local cluster.\n\n**Skip pushing images configuration**:\n\n```yaml\nbuild:\n     local:\n       push: false\n```\n\nThis snippet shows you how to skip pushing images configuration, which is an important aspect of local cluster.\n\n**Set Kubernetes context as local cluster**:\n\n```yaml\nskaffold config set --kube-context my-profile local-cluster true\n```\n\nThis snippet shows you how to set kubernetes context as local cluster, which is an important aspect of local cluster.\n\n**Minikube docker-env command**:\n\n```yaml\nminikube docker-env\n```\n\nThis snippet shows you how to minikube docker-env command, which is an important aspect of local cluster.\n\n", "metadata": {"source_url": "https://skaffold.dev/docs/environment/local-cluster", "title": "Local Cluster", "description": "Skaffold supports fast deployments to supported locally-hosted clusters, such as minikube and Docker Desktop, by loading images directly into the cluster.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 04:39:16", "type": "code_examples", "page_metadata": {"viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "ogTitle": "Local Cluster", "og:description": "Skaffold supports fast deployments to supported locally-hosted clusters, such as minikube and Docker Desktop, by loading images directly into the cluster. Loading images is typically much faster than the roundtrip required to push an image to a remote registry and then for the cluster to pull that image again.\nAuto detection Skaffold’s heuristic to detect local clusters is based on the Kubernetes context name set on kubectl. You can find your the current context name by running:", "og:url": "https://skaffold.dev/docs/environment/local-cluster/", "article:modified_time": "2025-01-23T10:14:58-05:00", "twitter:title": "Local Cluster", "language": "en", "ogUrl": "https://skaffold.dev/docs/environment/local-cluster/", "article:section": "docs", "twitter:description": "Skaffold supports fast deployments to supported locally-hosted clusters, such as minikube and Docker Desktop, by loading images directly into the cluster. Loading images is typically much faster than the roundtrip required to push an image to a remote registry and then for the cluster to pull that image again.\nAuto detection Skaffold’s heuristic to detect local clusters is based on the Kubernetes context name set on kubectl. You can find your the current context name by running:", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:site_name": "Skaffold", "title": "Local Cluster | Skaffold", "ogDescription": "Skaffold supports fast deployments to supported locally-hosted clusters, such as minikube and Docker Desktop, by loading images directly into the cluster. Loading images is typically much faster than the roundtrip required to push an image to a remote registry and then for the cluster to pull that image again.\nAuto detection Skaffold’s heuristic to detect local clusters is based on the Kubernetes context name set on kubectl. You can find your the current context name by running:", "ogSiteName": "Skaffold", "modifiedTime": "2025-01-23T10:14:58-05:00", "generator": "Hugo 0.99.1", "og:title": "Local Cluster", "twitter:card": "summary", "description": "Skaffold supports fast deployments to supported locally-hosted clusters,\nsuch as minikube and Docker Desktop, by loading images directly\ninto the …", "og:type": "article", "robots": "index, follow", "scrapeId": "5962c059-c8cc-43c5-bd4a-2a94853b45e3", "sourceURL": "https://skaffold.dev/docs/environment/local-cluster", "url": "https://skaffold.dev/docs/environment/local-cluster/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: What are some tips for using Local Cluster in skaffold effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nEnsure that Skaffold builds the images with the same docker daemon that runs the pods’ containers.\n\nIt is important to set up the docker environment in the same shell where Skaffold is executed.\n\nUse `minikube docker-env` to configure image builders to use the internal Docker daemon for speed-up.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://skaffold.dev/docs/environment/local-cluster", "title": "Local Cluster", "description": "Skaffold supports fast deployments to supported locally-hosted clusters, such as minikube and Docker Desktop, by loading images directly into the cluster.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 04:39:16", "type": "best_practices", "page_metadata": {"viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "ogTitle": "Local Cluster", "og:description": "Skaffold supports fast deployments to supported locally-hosted clusters, such as minikube and Docker Desktop, by loading images directly into the cluster. Loading images is typically much faster than the roundtrip required to push an image to a remote registry and then for the cluster to pull that image again.\nAuto detection Skaffold’s heuristic to detect local clusters is based on the Kubernetes context name set on kubectl. You can find your the current context name by running:", "og:url": "https://skaffold.dev/docs/environment/local-cluster/", "article:modified_time": "2025-01-23T10:14:58-05:00", "twitter:title": "Local Cluster", "language": "en", "ogUrl": "https://skaffold.dev/docs/environment/local-cluster/", "article:section": "docs", "twitter:description": "Skaffold supports fast deployments to supported locally-hosted clusters, such as minikube and Docker Desktop, by loading images directly into the cluster. Loading images is typically much faster than the roundtrip required to push an image to a remote registry and then for the cluster to pull that image again.\nAuto detection Skaffold’s heuristic to detect local clusters is based on the Kubernetes context name set on kubectl. You can find your the current context name by running:", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "og:site_name": "Skaffold", "title": "Local Cluster | Skaffold", "ogDescription": "Skaffold supports fast deployments to supported locally-hosted clusters, such as minikube and Docker Desktop, by loading images directly into the cluster. Loading images is typically much faster than the roundtrip required to push an image to a remote registry and then for the cluster to pull that image again.\nAuto detection Skaffold’s heuristic to detect local clusters is based on the Kubernetes context name set on kubectl. You can find your the current context name by running:", "ogSiteName": "Skaffold", "modifiedTime": "2025-01-23T10:14:58-05:00", "generator": "Hugo 0.99.1", "og:title": "Local Cluster", "twitter:card": "summary", "description": "Skaffold supports fast deployments to supported locally-hosted clusters,\nsuch as minikube and Docker Desktop, by loading images directly\ninto the …", "og:type": "article", "robots": "index, follow", "scrapeId": "5962c059-c8cc-43c5-bd4a-2a94853b45e3", "sourceURL": "https://skaffold.dev/docs/environment/local-cluster", "url": "https://skaffold.dev/docs/environment/local-cluster/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what Profiles is in skaffold?\n\nAssistant: Sure, I'd be happy to explain Profiles in skaffold.\n\n# Profiles\n\nSkaffold profiles allow you to define build, test and deployment configurations for different contexts. Different contexts are typically different environments in your app’s lifecycle, like Production or Development.Here's a quick rundown of what this is about:\n\n## Profiles ( `profiles`)\n\nEach profile has six parts:\n\n- Name ( `name`): The name of the profile\n- Build configuration ( `build`)\n- Test configuration ( `test`)\n- Deploy configuration ( `deploy`)\n- Patches ( `patches`)\n- Activation ( `activation`)\n\nOnce a profile is activated, the specified `build`, `test` and `deploy` configuration in it will be laid onto, but won’t completely replace, the `build`, `test` and `deploy` sections declared in the main section of `skaffold.yaml`. The `build`, `test` and `deploy` configuration in the `profiles` section use the same syntax as the `build`, `test` and `deploy` sections of `skaffold.yaml`; for more information, see [Builders](https://skaffold.dev/docs/builders/), [Testers](https://skaffold.dev/docs/testers), [Deployers](https://skaffold.dev/docs/deployers/) and you can always refer to [skaffold.yaml reference](https://skaffold.dev/docs/references/yaml/) for an overview of the syntax. Alternatively, you can override the main configuration with finer grained control using `patches`.\n\n## Activation\n\nYou can activate a profile two ways: CLI flag or skaffold.yaml activations.\n\n**CLI flag**: You can activate profiles with the `-p` ( `--profile`) parameter in the `skaffold dev` and `skaffold run` commands.\n\n```bash\nskaffold run -p [PROFILE]\n```\n\n**Activations in skaffold.yaml**: You can auto-activate a profile based on\n\n- kubecontext (could be either a string or a regexp: prefixing with `!` will negate the match)\n- environment variable value\n- skaffold command (dev/run/build/deploy)\n\nA profile is auto-activated if any one of the activations under it are triggered.\nAn activation is triggered if all of the criteria ( `env`, `kubeContext`, `command`) are triggered.\n\nIn the example below:\n\n- `profile1` is activated if `MAGIC_VAR` is 42\n- `profile2` is activated if `MAGIC_VAR` is 1337 or we are running `skaffold dev` while kubecontext is set to `minikube`.\n\n```yaml\nbuild:\n  artifacts:\n  - image: gcr.io/k8s-skaffold/skaffold-example\nmanifests:\n  rawYaml:\n  - k8s-pod\nprofiles:\n- name: profile1\n  activation:\n    - env: MAGIC_VAR=42\n- name: profile2\n  activation:\n    - env: MAGIC_VAR=1337\n    - kubeContext: minikube\n      command: dev\n```\n\n## Override via replacement\n\nThe `build`, `test` and `deploy` sections defined in the profile will be laid onto the main configuration.\nThe default values are the same in profiles as in the main config.\n\nThe following example showcases a `skaffold.yaml` with one profile named `gcb`,\nfor building with Google Cloud Build:\n\n```yaml\nbuild:\n  artifacts:\n  - image: gcr.io/k8s-skaffold/skaffold-example\nmanifests:\n  rawYaml:\n  - k8s-pod\nprofiles:\n- name: gcb\n  build:\n    googleCloudBuild:\n      projectId: k8s-skaffold\n```\n\nWith no profile activated, Skaffold will build the artifact\n`gcr.io/k8s-skaffold/skaffold-example` using local Docker daemon and deploy it\nwith `kubectl`.\n\nHowever, if you run Skaffold with the following command:\n\n```bash\nskaffold dev -p gcb\n```\n\nSkaffold will switch to Google Cloud Build for building artifacts.\n\nNote that\nsince the `gcb` profile does not specify a deploy configuration, Skaffold will\ncontinue using `kubectl` for deployments.\n\n## Override via patches\n\nPatches are a more verbose way of overriding your config, but they provide a powerful, fine-grained way\nto override individual values in your yaml config. They are based on [JSON Patch](http://jsonpatch.com/) under the hood.\n\nIn the example below instead of overriding the whole `build` section, the `dev` profile specifically\ndefines a different Dockerfile to use for the first artifact.\n\n```yaml\nbuild:\n  artifacts:\n    - image: gcr.io/k8s-skaffold/skaffold-example\n      docker:\n        dockerfile: Dockerfile\n    - image: gcr.io/k8s-skaffold/skaffold2\n    - image: gcr.io/k8s-skaffold/skaffold3\nmanifests:\n  rawYaml:\n  - k8s-pod\nprofiles:\n  - name: dev\n    patches:\n      - op: replace\n        path: /build/artifacts/0/docker/dockerfile\n        value: Dockerfile_dev\n```\n\n## Activating multiple profiles at the same time\n\nMultiple profiles can be specified either by using the `-p` flag multiple times or by comma separated profiles.\n\n```bash\nskaffold dev -p hello,world\n```\n\nSkaffold will activate both profiles, `hello` and `world`.\nThis is e.g. useful when combined with patches to provide a composable development setup where `hello` and `world` can be added on demand.\n\n## Deactivating Profiles\n\nProfiles can also be manually deactivated by prefixing the profile name with `-` like so:\n\n```bash\nskaffold dev -p hello,-world\n```\n\nSkaffold will activate the `hello` profile, and deactivate the `world` profile, even if it had otherwise been activated through the configuration.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/environment/profiles", "title": "Profiles", "description": "Skaffold profiles allow you to define build, test and deployment configurations for different contexts. Different contexts are typically different environments in your app’s lifecycle, like Production or Development.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 04:42:49", "type": "overview", "page_metadata": {"article:modified_time": "2025-01-23T10:14:58-05:00", "modifiedTime": "2025-01-23T10:14:58-05:00", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "article:section": "docs", "ogDescription": "Skaffold profiles allow you to define build, test and deployment configurations for different contexts. Different contexts are typically different environments in your app’s lifecycle, like Production or Development.\nYou can create profiles in the profiles section of skaffold.yaml.\nFor a detailed discussion on Skaffold configuration, see Skaffold Concepts and skaffold.yaml References.\nProfiles (profiles) Each profile has six parts:\n Name (name): The name of the profile Build configuration (build) Test configuration (test) Deploy configuration (deploy) Patches (patches) Activation (activation)  Once a profile is activated, the specified build, test and deploy configuration in it will be laid onto, but won’t completely replace, the build, test and deploy sections declared in the main section of skaffold.", "ogSiteName": "Skaffold", "og:title": "Profiles", "title": "Profiles | Skaffold", "generator": "Hugo 0.99.1", "og:type": "article", "twitter:card": "summary", "twitter:description": "Skaffold profiles allow you to define build, test and deployment configurations for different contexts. Different contexts are typically different environments in your app’s lifecycle, like Production or Development.\nYou can create profiles in the profiles section of skaffold.yaml.\nFor a detailed discussion on Skaffold configuration, see Skaffold Concepts and skaffold.yaml References.\nProfiles (profiles) Each profile has six parts:\n Name (name): The name of the profile Build configuration (build) Test configuration (test) Deploy configuration (deploy) Patches (patches) Activation (activation)  Once a profile is activated, the specified build, test and deploy configuration in it will be laid onto, but won’t completely replace, the build, test and deploy sections declared in the main section of skaffold.", "ogUrl": "https://skaffold.dev/docs/environment/profiles/", "ogTitle": "Profiles", "description": "Skaffold profiles allow you to define build, test and deployment\nconfigurations for different contexts. Different contexts are typically different …", "og:url": "https://skaffold.dev/docs/environment/profiles/", "og:site_name": "Skaffold", "twitter:title": "Profiles", "og:description": "Skaffold profiles allow you to define build, test and deployment configurations for different contexts. Different contexts are typically different environments in your app’s lifecycle, like Production or Development.\nYou can create profiles in the profiles section of skaffold.yaml.\nFor a detailed discussion on Skaffold configuration, see Skaffold Concepts and skaffold.yaml References.\nProfiles (profiles) Each profile has six parts:\n Name (name): The name of the profile Build configuration (build) Test configuration (test) Deploy configuration (deploy) Patches (patches) Activation (activation)  Once a profile is activated, the specified build, test and deploy configuration in it will be laid onto, but won’t completely replace, the build, test and deploy sections declared in the main section of skaffold.", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "language": "en", "robots": "index, follow", "scrapeId": "b477127b-31c0-4ede-b57b-4c1576aaef08", "sourceURL": "https://skaffold.dev/docs/environment/profiles", "url": "https://skaffold.dev/docs/environment/profiles/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I profiles ( `profiles`) in skaffold?\n\nAssistant: To profiles ( `profiles`) in skaffold, here's what you do:\nEach profile has six parts:\n\n- Name ( `name`): The name of the profile\n- Build configuration ( `build`)\n- Test configuration ( `test`)\n- Deploy configuration ( `deploy`)\n- Patches ( `patches`)\n- Activation ( `activation`)\n\nOnce a profile is activated, the specified `build`, `test` and `deploy` configuration in it will be laid onto, but won’t completely replace, the `build`, `test` and `deploy` sections declared in the main section of `skaffold.yaml`. The `build`, `test` and `deploy` configuration in the `profiles` section use the same syntax as the `build`, `test` and `deploy` sections of `skaffold.yaml`; for more information, see [Builders](https://skaffold.dev/docs/builders/), [Testers](https://skaffold.dev/docs/testers), [Deployers](https://skaffold.dev/docs/deployers/) and you can always refer to [skaffold.yaml reference](https://skaffold.dev/docs/references/yaml/) for an overview of the syntax. Alternatively, you can override the main configuration with finer grained control using `patches`..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/environment/profiles", "title": "Profiles", "description": "Skaffold profiles allow you to define build, test and deployment configurations for different contexts. Different contexts are typically different environments in your app’s lifecycle, like Production or Development.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 04:42:49", "type": "section_detail", "page_metadata": {"article:modified_time": "2025-01-23T10:14:58-05:00", "modifiedTime": "2025-01-23T10:14:58-05:00", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "article:section": "docs", "ogDescription": "Skaffold profiles allow you to define build, test and deployment configurations for different contexts. Different contexts are typically different environments in your app’s lifecycle, like Production or Development.\nYou can create profiles in the profiles section of skaffold.yaml.\nFor a detailed discussion on Skaffold configuration, see Skaffold Concepts and skaffold.yaml References.\nProfiles (profiles) Each profile has six parts:\n Name (name): The name of the profile Build configuration (build) Test configuration (test) Deploy configuration (deploy) Patches (patches) Activation (activation)  Once a profile is activated, the specified build, test and deploy configuration in it will be laid onto, but won’t completely replace, the build, test and deploy sections declared in the main section of skaffold.", "ogSiteName": "Skaffold", "og:title": "Profiles", "title": "Profiles | Skaffold", "generator": "Hugo 0.99.1", "og:type": "article", "twitter:card": "summary", "twitter:description": "Skaffold profiles allow you to define build, test and deployment configurations for different contexts. Different contexts are typically different environments in your app’s lifecycle, like Production or Development.\nYou can create profiles in the profiles section of skaffold.yaml.\nFor a detailed discussion on Skaffold configuration, see Skaffold Concepts and skaffold.yaml References.\nProfiles (profiles) Each profile has six parts:\n Name (name): The name of the profile Build configuration (build) Test configuration (test) Deploy configuration (deploy) Patches (patches) Activation (activation)  Once a profile is activated, the specified build, test and deploy configuration in it will be laid onto, but won’t completely replace, the build, test and deploy sections declared in the main section of skaffold.", "ogUrl": "https://skaffold.dev/docs/environment/profiles/", "ogTitle": "Profiles", "description": "Skaffold profiles allow you to define build, test and deployment\nconfigurations for different contexts. Different contexts are typically different …", "og:url": "https://skaffold.dev/docs/environment/profiles/", "og:site_name": "Skaffold", "twitter:title": "Profiles", "og:description": "Skaffold profiles allow you to define build, test and deployment configurations for different contexts. Different contexts are typically different environments in your app’s lifecycle, like Production or Development.\nYou can create profiles in the profiles section of skaffold.yaml.\nFor a detailed discussion on Skaffold configuration, see Skaffold Concepts and skaffold.yaml References.\nProfiles (profiles) Each profile has six parts:\n Name (name): The name of the profile Build configuration (build) Test configuration (test) Deploy configuration (deploy) Patches (patches) Activation (activation)  Once a profile is activated, the specified build, test and deploy configuration in it will be laid onto, but won’t completely replace, the build, test and deploy sections declared in the main section of skaffold.", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "language": "en", "robots": "index, follow", "scrapeId": "b477127b-31c0-4ede-b57b-4c1576aaef08", "sourceURL": "https://skaffold.dev/docs/environment/profiles", "url": "https://skaffold.dev/docs/environment/profiles/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I activation in skaffold?\n\nAssistant: To activation in skaffold, here's what you do:\nYou can activate a profile two ways: CLI flag or skaffold.yaml activations.\n\n**CLI flag**: You can activate profiles with the `-p` ( `--profile`) parameter in the `skaffold dev` and `skaffold run` commands.\n\n```bash\nskaffold run -p [PROFILE]\n```\n\n**Activations in skaffold.yaml**: You can auto-activate a profile based on\n\n- kubecontext (could be either a string or a regexp: prefixing with `!` will negate the match)\n- environment variable value\n- skaffold command (dev/run/build/deploy)\n\nA profile is auto-activated if any one of the activations under it are triggered.\nAn activation is triggered if all of the criteria ( `env`, `kubeContext`, `command`) are triggered.\n\nIn the example below:\n\n- `profile1` is activated if `MAGIC_VAR` is 42\n- `profile2` is activated if `MAGIC_VAR` is 1337 or we are running `skaffold dev` while kubecontext is set to `minikube`.\n\n```yaml\nbuild:\n  artifacts:\n  - image: gcr.io/k8s-skaffold/skaffold-example\nmanifests:\n  rawYaml:\n  - k8s-pod\nprofiles:\n- name: profile1\n  activation:\n    - env: MAGIC_VAR=42\n- name: profile2\n  activation:\n    - env: MAGIC_VAR=1337\n    - kubeContext: minikube\n      command: dev\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/environment/profiles", "title": "Profiles", "description": "Skaffold profiles allow you to define build, test and deployment configurations for different contexts. Different contexts are typically different environments in your app’s lifecycle, like Production or Development.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 04:42:49", "type": "section_detail", "page_metadata": {"article:modified_time": "2025-01-23T10:14:58-05:00", "modifiedTime": "2025-01-23T10:14:58-05:00", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "article:section": "docs", "ogDescription": "Skaffold profiles allow you to define build, test and deployment configurations for different contexts. Different contexts are typically different environments in your app’s lifecycle, like Production or Development.\nYou can create profiles in the profiles section of skaffold.yaml.\nFor a detailed discussion on Skaffold configuration, see Skaffold Concepts and skaffold.yaml References.\nProfiles (profiles) Each profile has six parts:\n Name (name): The name of the profile Build configuration (build) Test configuration (test) Deploy configuration (deploy) Patches (patches) Activation (activation)  Once a profile is activated, the specified build, test and deploy configuration in it will be laid onto, but won’t completely replace, the build, test and deploy sections declared in the main section of skaffold.", "ogSiteName": "Skaffold", "og:title": "Profiles", "title": "Profiles | Skaffold", "generator": "Hugo 0.99.1", "og:type": "article", "twitter:card": "summary", "twitter:description": "Skaffold profiles allow you to define build, test and deployment configurations for different contexts. Different contexts are typically different environments in your app’s lifecycle, like Production or Development.\nYou can create profiles in the profiles section of skaffold.yaml.\nFor a detailed discussion on Skaffold configuration, see Skaffold Concepts and skaffold.yaml References.\nProfiles (profiles) Each profile has six parts:\n Name (name): The name of the profile Build configuration (build) Test configuration (test) Deploy configuration (deploy) Patches (patches) Activation (activation)  Once a profile is activated, the specified build, test and deploy configuration in it will be laid onto, but won’t completely replace, the build, test and deploy sections declared in the main section of skaffold.", "ogUrl": "https://skaffold.dev/docs/environment/profiles/", "ogTitle": "Profiles", "description": "Skaffold profiles allow you to define build, test and deployment\nconfigurations for different contexts. Different contexts are typically different …", "og:url": "https://skaffold.dev/docs/environment/profiles/", "og:site_name": "Skaffold", "twitter:title": "Profiles", "og:description": "Skaffold profiles allow you to define build, test and deployment configurations for different contexts. Different contexts are typically different environments in your app’s lifecycle, like Production or Development.\nYou can create profiles in the profiles section of skaffold.yaml.\nFor a detailed discussion on Skaffold configuration, see Skaffold Concepts and skaffold.yaml References.\nProfiles (profiles) Each profile has six parts:\n Name (name): The name of the profile Build configuration (build) Test configuration (test) Deploy configuration (deploy) Patches (patches) Activation (activation)  Once a profile is activated, the specified build, test and deploy configuration in it will be laid onto, but won’t completely replace, the build, test and deploy sections declared in the main section of skaffold.", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "language": "en", "robots": "index, follow", "scrapeId": "b477127b-31c0-4ede-b57b-4c1576aaef08", "sourceURL": "https://skaffold.dev/docs/environment/profiles", "url": "https://skaffold.dev/docs/environment/profiles/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I override via replacement in skaffold?\n\nAssistant: To override via replacement in skaffold, here's what you do:\nThe `build`, `test` and `deploy` sections defined in the profile will be laid onto the main configuration.\nThe default values are the same in profiles as in the main config.\n\nThe following example showcases a `skaffold.yaml` with one profile named `gcb`,\nfor building with Google Cloud Build:\n\n```yaml\nbuild:\n  artifacts:\n  - image: gcr.io/k8s-skaffold/skaffold-example\nmanifests:\n  rawYaml:\n  - k8s-pod\nprofiles:\n- name: gcb\n  build:\n    googleCloudBuild:\n      projectId: k8s-skaffold\n```\n\nWith no profile activated, Skaffold will build the artifact\n`gcr.io/k8s-skaffold/skaffold-example` using local Docker daemon and deploy it\nwith `kubectl`.\n\nHowever, if you run Skaffold with the following command:\n\n```bash\nskaffold dev -p gcb\n```\n\nSkaffold will switch to Google Cloud Build for building artifacts.\n\nNote that\nsince the `gcb` profile does not specify a deploy configuration, Skaffold will\ncontinue using `kubectl` for deployments..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/environment/profiles", "title": "Profiles", "description": "Skaffold profiles allow you to define build, test and deployment configurations for different contexts. Different contexts are typically different environments in your app’s lifecycle, like Production or Development.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 04:42:49", "type": "section_detail", "page_metadata": {"article:modified_time": "2025-01-23T10:14:58-05:00", "modifiedTime": "2025-01-23T10:14:58-05:00", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "article:section": "docs", "ogDescription": "Skaffold profiles allow you to define build, test and deployment configurations for different contexts. Different contexts are typically different environments in your app’s lifecycle, like Production or Development.\nYou can create profiles in the profiles section of skaffold.yaml.\nFor a detailed discussion on Skaffold configuration, see Skaffold Concepts and skaffold.yaml References.\nProfiles (profiles) Each profile has six parts:\n Name (name): The name of the profile Build configuration (build) Test configuration (test) Deploy configuration (deploy) Patches (patches) Activation (activation)  Once a profile is activated, the specified build, test and deploy configuration in it will be laid onto, but won’t completely replace, the build, test and deploy sections declared in the main section of skaffold.", "ogSiteName": "Skaffold", "og:title": "Profiles", "title": "Profiles | Skaffold", "generator": "Hugo 0.99.1", "og:type": "article", "twitter:card": "summary", "twitter:description": "Skaffold profiles allow you to define build, test and deployment configurations for different contexts. Different contexts are typically different environments in your app’s lifecycle, like Production or Development.\nYou can create profiles in the profiles section of skaffold.yaml.\nFor a detailed discussion on Skaffold configuration, see Skaffold Concepts and skaffold.yaml References.\nProfiles (profiles) Each profile has six parts:\n Name (name): The name of the profile Build configuration (build) Test configuration (test) Deploy configuration (deploy) Patches (patches) Activation (activation)  Once a profile is activated, the specified build, test and deploy configuration in it will be laid onto, but won’t completely replace, the build, test and deploy sections declared in the main section of skaffold.", "ogUrl": "https://skaffold.dev/docs/environment/profiles/", "ogTitle": "Profiles", "description": "Skaffold profiles allow you to define build, test and deployment\nconfigurations for different contexts. Different contexts are typically different …", "og:url": "https://skaffold.dev/docs/environment/profiles/", "og:site_name": "Skaffold", "twitter:title": "Profiles", "og:description": "Skaffold profiles allow you to define build, test and deployment configurations for different contexts. Different contexts are typically different environments in your app’s lifecycle, like Production or Development.\nYou can create profiles in the profiles section of skaffold.yaml.\nFor a detailed discussion on Skaffold configuration, see Skaffold Concepts and skaffold.yaml References.\nProfiles (profiles) Each profile has six parts:\n Name (name): The name of the profile Build configuration (build) Test configuration (test) Deploy configuration (deploy) Patches (patches) Activation (activation)  Once a profile is activated, the specified build, test and deploy configuration in it will be laid onto, but won’t completely replace, the build, test and deploy sections declared in the main section of skaffold.", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "language": "en", "robots": "index, follow", "scrapeId": "b477127b-31c0-4ede-b57b-4c1576aaef08", "sourceURL": "https://skaffold.dev/docs/environment/profiles", "url": "https://skaffold.dev/docs/environment/profiles/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I override via patches in skaffold?\n\nAssistant: To override via patches in skaffold, here's what you do:\nPatches are a more verbose way of overriding your config, but they provide a powerful, fine-grained way\nto override individual values in your yaml config. They are based on [JSON Patch](http://jsonpatch.com/) under the hood.\n\nIn the example below instead of overriding the whole `build` section, the `dev` profile specifically\ndefines a different Dockerfile to use for the first artifact.\n\n```yaml\nbuild:\n  artifacts:\n    - image: gcr.io/k8s-skaffold/skaffold-example\n      docker:\n        dockerfile: Dockerfile\n    - image: gcr.io/k8s-skaffold/skaffold2\n    - image: gcr.io/k8s-skaffold/skaffold3\nmanifests:\n  rawYaml:\n  - k8s-pod\nprofiles:\n  - name: dev\n    patches:\n      - op: replace\n        path: /build/artifacts/0/docker/dockerfile\n        value: Dockerfile_dev\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/environment/profiles", "title": "Profiles", "description": "Skaffold profiles allow you to define build, test and deployment configurations for different contexts. Different contexts are typically different environments in your app’s lifecycle, like Production or Development.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 04:42:49", "type": "section_detail", "page_metadata": {"article:modified_time": "2025-01-23T10:14:58-05:00", "modifiedTime": "2025-01-23T10:14:58-05:00", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "article:section": "docs", "ogDescription": "Skaffold profiles allow you to define build, test and deployment configurations for different contexts. Different contexts are typically different environments in your app’s lifecycle, like Production or Development.\nYou can create profiles in the profiles section of skaffold.yaml.\nFor a detailed discussion on Skaffold configuration, see Skaffold Concepts and skaffold.yaml References.\nProfiles (profiles) Each profile has six parts:\n Name (name): The name of the profile Build configuration (build) Test configuration (test) Deploy configuration (deploy) Patches (patches) Activation (activation)  Once a profile is activated, the specified build, test and deploy configuration in it will be laid onto, but won’t completely replace, the build, test and deploy sections declared in the main section of skaffold.", "ogSiteName": "Skaffold", "og:title": "Profiles", "title": "Profiles | Skaffold", "generator": "Hugo 0.99.1", "og:type": "article", "twitter:card": "summary", "twitter:description": "Skaffold profiles allow you to define build, test and deployment configurations for different contexts. Different contexts are typically different environments in your app’s lifecycle, like Production or Development.\nYou can create profiles in the profiles section of skaffold.yaml.\nFor a detailed discussion on Skaffold configuration, see Skaffold Concepts and skaffold.yaml References.\nProfiles (profiles) Each profile has six parts:\n Name (name): The name of the profile Build configuration (build) Test configuration (test) Deploy configuration (deploy) Patches (patches) Activation (activation)  Once a profile is activated, the specified build, test and deploy configuration in it will be laid onto, but won’t completely replace, the build, test and deploy sections declared in the main section of skaffold.", "ogUrl": "https://skaffold.dev/docs/environment/profiles/", "ogTitle": "Profiles", "description": "Skaffold profiles allow you to define build, test and deployment\nconfigurations for different contexts. Different contexts are typically different …", "og:url": "https://skaffold.dev/docs/environment/profiles/", "og:site_name": "Skaffold", "twitter:title": "Profiles", "og:description": "Skaffold profiles allow you to define build, test and deployment configurations for different contexts. Different contexts are typically different environments in your app’s lifecycle, like Production or Development.\nYou can create profiles in the profiles section of skaffold.yaml.\nFor a detailed discussion on Skaffold configuration, see Skaffold Concepts and skaffold.yaml References.\nProfiles (profiles) Each profile has six parts:\n Name (name): The name of the profile Build configuration (build) Test configuration (test) Deploy configuration (deploy) Patches (patches) Activation (activation)  Once a profile is activated, the specified build, test and deploy configuration in it will be laid onto, but won’t completely replace, the build, test and deploy sections declared in the main section of skaffold.", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "language": "en", "robots": "index, follow", "scrapeId": "b477127b-31c0-4ede-b57b-4c1576aaef08", "sourceURL": "https://skaffold.dev/docs/environment/profiles", "url": "https://skaffold.dev/docs/environment/profiles/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I activating multiple profiles at the same time in skaffold?\n\nAssistant: To activating multiple profiles at the same time in skaffold, here's what you do:\nMultiple profiles can be specified either by using the `-p` flag multiple times or by comma separated profiles.\n\n```bash\nskaffold dev -p hello,world\n```\n\nSkaffold will activate both profiles, `hello` and `world`.\nThis is e.g. useful when combined with patches to provide a composable development setup where `hello` and `world` can be added on demand..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/environment/profiles", "title": "Profiles", "description": "Skaffold profiles allow you to define build, test and deployment configurations for different contexts. Different contexts are typically different environments in your app’s lifecycle, like Production or Development.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 04:42:49", "type": "section_detail", "page_metadata": {"article:modified_time": "2025-01-23T10:14:58-05:00", "modifiedTime": "2025-01-23T10:14:58-05:00", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "article:section": "docs", "ogDescription": "Skaffold profiles allow you to define build, test and deployment configurations for different contexts. Different contexts are typically different environments in your app’s lifecycle, like Production or Development.\nYou can create profiles in the profiles section of skaffold.yaml.\nFor a detailed discussion on Skaffold configuration, see Skaffold Concepts and skaffold.yaml References.\nProfiles (profiles) Each profile has six parts:\n Name (name): The name of the profile Build configuration (build) Test configuration (test) Deploy configuration (deploy) Patches (patches) Activation (activation)  Once a profile is activated, the specified build, test and deploy configuration in it will be laid onto, but won’t completely replace, the build, test and deploy sections declared in the main section of skaffold.", "ogSiteName": "Skaffold", "og:title": "Profiles", "title": "Profiles | Skaffold", "generator": "Hugo 0.99.1", "og:type": "article", "twitter:card": "summary", "twitter:description": "Skaffold profiles allow you to define build, test and deployment configurations for different contexts. Different contexts are typically different environments in your app’s lifecycle, like Production or Development.\nYou can create profiles in the profiles section of skaffold.yaml.\nFor a detailed discussion on Skaffold configuration, see Skaffold Concepts and skaffold.yaml References.\nProfiles (profiles) Each profile has six parts:\n Name (name): The name of the profile Build configuration (build) Test configuration (test) Deploy configuration (deploy) Patches (patches) Activation (activation)  Once a profile is activated, the specified build, test and deploy configuration in it will be laid onto, but won’t completely replace, the build, test and deploy sections declared in the main section of skaffold.", "ogUrl": "https://skaffold.dev/docs/environment/profiles/", "ogTitle": "Profiles", "description": "Skaffold profiles allow you to define build, test and deployment\nconfigurations for different contexts. Different contexts are typically different …", "og:url": "https://skaffold.dev/docs/environment/profiles/", "og:site_name": "Skaffold", "twitter:title": "Profiles", "og:description": "Skaffold profiles allow you to define build, test and deployment configurations for different contexts. Different contexts are typically different environments in your app’s lifecycle, like Production or Development.\nYou can create profiles in the profiles section of skaffold.yaml.\nFor a detailed discussion on Skaffold configuration, see Skaffold Concepts and skaffold.yaml References.\nProfiles (profiles) Each profile has six parts:\n Name (name): The name of the profile Build configuration (build) Test configuration (test) Deploy configuration (deploy) Patches (patches) Activation (activation)  Once a profile is activated, the specified build, test and deploy configuration in it will be laid onto, but won’t completely replace, the build, test and deploy sections declared in the main section of skaffold.", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "language": "en", "robots": "index, follow", "scrapeId": "b477127b-31c0-4ede-b57b-4c1576aaef08", "sourceURL": "https://skaffold.dev/docs/environment/profiles", "url": "https://skaffold.dev/docs/environment/profiles/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I deactivating profiles in skaffold?\n\nAssistant: To deactivating profiles in skaffold, here's what you do:\nProfiles can also be manually deactivated by prefixing the profile name with `-` like so:\n\n```bash\nskaffold dev -p hello,-world\n```\n\nSkaffold will activate the `hello` profile, and deactivate the `world` profile, even if it had otherwise been activated through the configuration..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/environment/profiles", "title": "Profiles", "description": "Skaffold profiles allow you to define build, test and deployment configurations for different contexts. Different contexts are typically different environments in your app’s lifecycle, like Production or Development.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 04:42:49", "type": "section_detail", "page_metadata": {"article:modified_time": "2025-01-23T10:14:58-05:00", "modifiedTime": "2025-01-23T10:14:58-05:00", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "article:section": "docs", "ogDescription": "Skaffold profiles allow you to define build, test and deployment configurations for different contexts. Different contexts are typically different environments in your app’s lifecycle, like Production or Development.\nYou can create profiles in the profiles section of skaffold.yaml.\nFor a detailed discussion on Skaffold configuration, see Skaffold Concepts and skaffold.yaml References.\nProfiles (profiles) Each profile has six parts:\n Name (name): The name of the profile Build configuration (build) Test configuration (test) Deploy configuration (deploy) Patches (patches) Activation (activation)  Once a profile is activated, the specified build, test and deploy configuration in it will be laid onto, but won’t completely replace, the build, test and deploy sections declared in the main section of skaffold.", "ogSiteName": "Skaffold", "og:title": "Profiles", "title": "Profiles | Skaffold", "generator": "Hugo 0.99.1", "og:type": "article", "twitter:card": "summary", "twitter:description": "Skaffold profiles allow you to define build, test and deployment configurations for different contexts. Different contexts are typically different environments in your app’s lifecycle, like Production or Development.\nYou can create profiles in the profiles section of skaffold.yaml.\nFor a detailed discussion on Skaffold configuration, see Skaffold Concepts and skaffold.yaml References.\nProfiles (profiles) Each profile has six parts:\n Name (name): The name of the profile Build configuration (build) Test configuration (test) Deploy configuration (deploy) Patches (patches) Activation (activation)  Once a profile is activated, the specified build, test and deploy configuration in it will be laid onto, but won’t completely replace, the build, test and deploy sections declared in the main section of skaffold.", "ogUrl": "https://skaffold.dev/docs/environment/profiles/", "ogTitle": "Profiles", "description": "Skaffold profiles allow you to define build, test and deployment\nconfigurations for different contexts. Different contexts are typically different …", "og:url": "https://skaffold.dev/docs/environment/profiles/", "og:site_name": "Skaffold", "twitter:title": "Profiles", "og:description": "Skaffold profiles allow you to define build, test and deployment configurations for different contexts. Different contexts are typically different environments in your app’s lifecycle, like Production or Development.\nYou can create profiles in the profiles section of skaffold.yaml.\nFor a detailed discussion on Skaffold configuration, see Skaffold Concepts and skaffold.yaml References.\nProfiles (profiles) Each profile has six parts:\n Name (name): The name of the profile Build configuration (build) Test configuration (test) Deploy configuration (deploy) Patches (patches) Activation (activation)  Once a profile is activated, the specified build, test and deploy configuration in it will be laid onto, but won’t completely replace, the build, test and deploy sections declared in the main section of skaffold.", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "language": "en", "robots": "index, follow", "scrapeId": "b477127b-31c0-4ede-b57b-4c1576aaef08", "sourceURL": "https://skaffold.dev/docs/environment/profiles", "url": "https://skaffold.dev/docs/environment/profiles/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you give me some code examples for Profiles in skaffold?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Activate profile via CLI flag**:\n\n```yaml\nskaffold run -p [PROFILE]\n```\n\nThis snippet shows you how to activate profile via cli flag, which is an important aspect of profiles.\n\n**Auto-activate profiles in skaffold.yaml**:\n\n```yaml\n```yaml\nbuild:\n  artifacts:\n  - image: gcr.io/k8s-skaffold/skaffold-example\nmanifests:\n  rawYaml:\n  - k8s-pod\nprofiles:\n- name: profile1\n  activation:\n    - env: MAGIC_VAR=42\n- name: profile2\n  activation:\n    - env: MAGIC_VAR=1337\n    - kubeContext: minikube\n      command: dev\n```\n```\n\nThis snippet shows you how to auto-activate profiles in skaffold.yaml, which is an important aspect of profiles.\n\n**Skaffold command to use Google Cloud Build**:\n\n```yaml\nskaffold dev -p gcb\n```\n\nThis snippet shows you how to skaffold command to use google cloud build, which is an important aspect of profiles.\n\n**Override via patches example**:\n\n```yaml\n```yaml\nbuild:\n  artifacts:\n    - image: gcr.io/k8s-skaffold/skaffold-example\n      docker:\n        dockerfile: Dockerfile\n    - image: gcr.io/k8s-skaffold/skaffold2\n    - image: gcr.io/k8s-skaffold/skaffold3\nmanifests:\n  rawYaml:\n  - k8s-pod\nprofiles:\n  - name: dev\n    patches:\n      - op: replace\n        path: /build/artifacts/0/docker/dockerfile\n        value: Dockerfile_dev\n```\n```\n\nThis snippet shows you how to override via patches example, which is an important aspect of profiles.\n\n**Activate multiple profiles**:\n\n```yaml\nskaffold dev -p hello,world\n```\n\nThis snippet shows you how to activate multiple profiles, which is an important aspect of profiles.\n\n**Deactivate a profile**:\n\n```yaml\nskaffold dev -p hello,-world\n```\n\nThis snippet shows you how to deactivate a profile, which is an important aspect of profiles.\n\n", "metadata": {"source_url": "https://skaffold.dev/docs/environment/profiles", "title": "Profiles", "description": "Skaffold profiles allow you to define build, test and deployment configurations for different contexts. Different contexts are typically different environments in your app’s lifecycle, like Production or Development.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 04:42:49", "type": "code_examples", "page_metadata": {"article:modified_time": "2025-01-23T10:14:58-05:00", "modifiedTime": "2025-01-23T10:14:58-05:00", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "article:section": "docs", "ogDescription": "Skaffold profiles allow you to define build, test and deployment configurations for different contexts. Different contexts are typically different environments in your app’s lifecycle, like Production or Development.\nYou can create profiles in the profiles section of skaffold.yaml.\nFor a detailed discussion on Skaffold configuration, see Skaffold Concepts and skaffold.yaml References.\nProfiles (profiles) Each profile has six parts:\n Name (name): The name of the profile Build configuration (build) Test configuration (test) Deploy configuration (deploy) Patches (patches) Activation (activation)  Once a profile is activated, the specified build, test and deploy configuration in it will be laid onto, but won’t completely replace, the build, test and deploy sections declared in the main section of skaffold.", "ogSiteName": "Skaffold", "og:title": "Profiles", "title": "Profiles | Skaffold", "generator": "Hugo 0.99.1", "og:type": "article", "twitter:card": "summary", "twitter:description": "Skaffold profiles allow you to define build, test and deployment configurations for different contexts. Different contexts are typically different environments in your app’s lifecycle, like Production or Development.\nYou can create profiles in the profiles section of skaffold.yaml.\nFor a detailed discussion on Skaffold configuration, see Skaffold Concepts and skaffold.yaml References.\nProfiles (profiles) Each profile has six parts:\n Name (name): The name of the profile Build configuration (build) Test configuration (test) Deploy configuration (deploy) Patches (patches) Activation (activation)  Once a profile is activated, the specified build, test and deploy configuration in it will be laid onto, but won’t completely replace, the build, test and deploy sections declared in the main section of skaffold.", "ogUrl": "https://skaffold.dev/docs/environment/profiles/", "ogTitle": "Profiles", "description": "Skaffold profiles allow you to define build, test and deployment\nconfigurations for different contexts. Different contexts are typically different …", "og:url": "https://skaffold.dev/docs/environment/profiles/", "og:site_name": "Skaffold", "twitter:title": "Profiles", "og:description": "Skaffold profiles allow you to define build, test and deployment configurations for different contexts. Different contexts are typically different environments in your app’s lifecycle, like Production or Development.\nYou can create profiles in the profiles section of skaffold.yaml.\nFor a detailed discussion on Skaffold configuration, see Skaffold Concepts and skaffold.yaml References.\nProfiles (profiles) Each profile has six parts:\n Name (name): The name of the profile Build configuration (build) Test configuration (test) Deploy configuration (deploy) Patches (patches) Activation (activation)  Once a profile is activated, the specified build, test and deploy configuration in it will be laid onto, but won’t completely replace, the build, test and deploy sections declared in the main section of skaffold.", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "language": "en", "robots": "index, follow", "scrapeId": "b477127b-31c0-4ede-b57b-4c1576aaef08", "sourceURL": "https://skaffold.dev/docs/environment/profiles", "url": "https://skaffold.dev/docs/environment/profiles/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: What are some tips for using Profiles in skaffold effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nProfiles allow for different configurations based on the environment.\n\nUse patches for fine-grained control over configuration overrides.\n\nMultiple profiles can be activated simultaneously for a composable setup.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://skaffold.dev/docs/environment/profiles", "title": "Profiles", "description": "Skaffold profiles allow you to define build, test and deployment configurations for different contexts. Different contexts are typically different environments in your app’s lifecycle, like Production or Development.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 04:42:49", "type": "best_practices", "page_metadata": {"article:modified_time": "2025-01-23T10:14:58-05:00", "modifiedTime": "2025-01-23T10:14:58-05:00", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "article:section": "docs", "ogDescription": "Skaffold profiles allow you to define build, test and deployment configurations for different contexts. Different contexts are typically different environments in your app’s lifecycle, like Production or Development.\nYou can create profiles in the profiles section of skaffold.yaml.\nFor a detailed discussion on Skaffold configuration, see Skaffold Concepts and skaffold.yaml References.\nProfiles (profiles) Each profile has six parts:\n Name (name): The name of the profile Build configuration (build) Test configuration (test) Deploy configuration (deploy) Patches (patches) Activation (activation)  Once a profile is activated, the specified build, test and deploy configuration in it will be laid onto, but won’t completely replace, the build, test and deploy sections declared in the main section of skaffold.", "ogSiteName": "Skaffold", "og:title": "Profiles", "title": "Profiles | Skaffold", "generator": "Hugo 0.99.1", "og:type": "article", "twitter:card": "summary", "twitter:description": "Skaffold profiles allow you to define build, test and deployment configurations for different contexts. Different contexts are typically different environments in your app’s lifecycle, like Production or Development.\nYou can create profiles in the profiles section of skaffold.yaml.\nFor a detailed discussion on Skaffold configuration, see Skaffold Concepts and skaffold.yaml References.\nProfiles (profiles) Each profile has six parts:\n Name (name): The name of the profile Build configuration (build) Test configuration (test) Deploy configuration (deploy) Patches (patches) Activation (activation)  Once a profile is activated, the specified build, test and deploy configuration in it will be laid onto, but won’t completely replace, the build, test and deploy sections declared in the main section of skaffold.", "ogUrl": "https://skaffold.dev/docs/environment/profiles/", "ogTitle": "Profiles", "description": "Skaffold profiles allow you to define build, test and deployment\nconfigurations for different contexts. Different contexts are typically different …", "og:url": "https://skaffold.dev/docs/environment/profiles/", "og:site_name": "Skaffold", "twitter:title": "Profiles", "og:description": "Skaffold profiles allow you to define build, test and deployment configurations for different contexts. Different contexts are typically different environments in your app’s lifecycle, like Production or Development.\nYou can create profiles in the profiles section of skaffold.yaml.\nFor a detailed discussion on Skaffold configuration, see Skaffold Concepts and skaffold.yaml References.\nProfiles (profiles) Each profile has six parts:\n Name (name): The name of the profile Build configuration (build) Test configuration (test) Deploy configuration (deploy) Patches (patches) Activation (activation)  Once a profile is activated, the specified build, test and deploy configuration in it will be laid onto, but won’t completely replace, the build, test and deploy sections declared in the main section of skaffold.", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "language": "en", "robots": "index, follow", "scrapeId": "b477127b-31c0-4ede-b57b-4c1576aaef08", "sourceURL": "https://skaffold.dev/docs/environment/profiles", "url": "https://skaffold.dev/docs/environment/profiles/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what Manage CRDs w/ Skaffold - Configuring Which K8s Resources & Fields Skaffold Manages is in skaffold?\n\nAssistant: Sure, I'd be happy to explain Manage CRDs w/ Skaffold - Configuring Which K8s Resources & Fields Skaffold Manages in skaffold.\n\n# Manage CRDs w/ Skaffold - Configuring Which K8s Resources & Fields Skaffold Manages\n\nThis page provides guidance on how to configure Skaffold to manage custom CRDs and their specific fields, including image overwriting and resource field management.Here's a quick rundown of what this is about:\n\n## Common Use Cases This Page Helps Resolve\n\n- Users who want skaffold to properly manage the rendering and deployment of their custom CRDs (as skaffold does with K8s objects like Pod, Deployment.apps, etc.)\n  - Additionally users w/ a CRD that uses a different field name for `image:` (eg: `foo:`) and want skaffold to properly modify the value to instead have the image label for the image skaffold recently built\n- Users who are seeing issues with skaffold’s default resource field overwriting for a given resource - eg: skaffold errors as it tries to mutate immutable config on re-deployment.\n\n## Skaffold Modifications\n\nCurrently skaffold modifies the manifests it renders and deploys for the following functionality:\n\n- status checking - done by mutating the manifest/K8s-Object by adding a label - skaffold/dev/run-id. Skaffold uses this run-id to identify the deployments Skaffold manages with it’s status checking.\n- image label overwriting - done by mutating the manifest/K8s-Object by substituting the `image:$ORIGINAL_IMAGE_TAG` value(s) in a manifest with `image:$RECENT_SKAFFOLD_BUILT_IMAGE`.\n\n## Default Resources Managed by Skaffold\n\nSkaffold has by default the following resources set for management via field “labels:” and “image:” overwriting:\n\n- Pod\n- DaemonSet.apps\n- Deployment.apps\n- ReplicaSet.apps\n- StatefulSet.apps (with the exception of `.spec.volumeClaimTemplates.*.metadata.labels` field(s))\n- CronJob.batch\n- Job.batch\n- DaemonSet.extensions\n- Deployment.extensions\n- ReplicaSet.extension\n- Service.serving.knative.dev\n- Fleet.agones.dev\n- GameServer.agones.dev\n- Rollout.argoproj.io\n- Workflow.argoproj.io\n- CronWorkflow.argoproj.io\n- WorkflowTemplate.argoproj.io\n- ClusterWorkflowTemplate.argoproj.io\n- *.cnrm.cloud.google.com\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/tutorials/skaffold-resource-selector", "title": "Manage CRDs w/ Skaffold - Configuring Which K8s Resources & Fields Skaffold Manages", "description": "This page provides guidance on how to configure Skaffold to manage custom CRDs and their specific fields, including image overwriting and resource field management.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:43:24", "type": "overview", "page_metadata": {"article:section": "docs", "ogDescription": "Common Use Cases This Page Helps Resolve:\n Users who want skaffold to properly manage the rendering and deployment of their custom CRDs (as skaffold does with K8s objects like Pod, Deployment.apps, etc.)  Additionally users w/ a CRD that uses a different field name for image: (eg: foo:) and want skaffold to properly modify the value to instead have the image label for the image skaffold recently built   Users who are seeing issues with skaffold’s default resource field overwriting for a given resource - eg: skaffold errors as it tries to mutate immutable config on re-deployment  Currently skaffold modifies the manifests it renders and deploys for the following functionality:", "og:url": "https://skaffold.dev/docs/tutorials/skaffold-resource-selector/", "twitter:title": "Manage CRDs w/ Skaffold - Configuring Which K8s Resources & Fields Skaffold Manages", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:site_name": "Skaffold", "robots": "index, follow", "ogTitle": "Manage CRDs w/ Skaffold - Configuring Which K8s Resources & Fields Skaffold Manages", "generator": "Hugo 0.99.1", "description": "Common Use Cases This Page Helps Resolve:\n\nUsers who want skaffold to properly manage the rendering and deployment of their custom CRDs (as skaffold …", "og:title": "Manage CRDs w/ Skaffold - Configuring Which K8s Resources & Fields Skaffold Manages", "og:type": "article", "og:description": "Common Use Cases This Page Helps Resolve:\n Users who want skaffold to properly manage the rendering and deployment of their custom CRDs (as skaffold does with K8s objects like Pod, Deployment.apps, etc.)  Additionally users w/ a CRD that uses a different field name for image: (eg: foo:) and want skaffold to properly modify the value to instead have the image label for the image skaffold recently built   Users who are seeing issues with skaffold’s default resource field overwriting for a given resource - eg: skaffold errors as it tries to mutate immutable config on re-deployment  Currently skaffold modifies the manifests it renders and deploys for the following functionality:", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "twitter:description": "Common Use Cases This Page Helps Resolve:\n Users who want skaffold to properly manage the rendering and deployment of their custom CRDs (as skaffold does with K8s objects like Pod, Deployment.apps, etc.)  Additionally users w/ a CRD that uses a different field name for image: (eg: foo:) and want skaffold to properly modify the value to instead have the image label for the image skaffold recently built   Users who are seeing issues with skaffold’s default resource field overwriting for a given resource - eg: skaffold errors as it tries to mutate immutable config on re-deployment  Currently skaffold modifies the manifests it renders and deploys for the following functionality:", "title": "Manage CRDs w/ Skaffold - Configuring Which K8s Resources & Fields Skaffold Manages | Skaffold", "language": "en", "ogSiteName": "Skaffold", "modifiedTime": "2025-01-23T10:14:58-05:00", "twitter:card": "summary", "ogUrl": "https://skaffold.dev/docs/tutorials/skaffold-resource-selector/", "scrapeId": "eaa662a4-fa75-4815-86cb-2a00d3bd887e", "sourceURL": "https://skaffold.dev/docs/tutorials/skaffold-resource-selector", "url": "https://skaffold.dev/docs/tutorials/skaffold-resource-selector/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I common use cases this page helps resolve in skaffold?\n\nAssistant: To common use cases this page helps resolve in skaffold, here's what you do:\n- Users who want skaffold to properly manage the rendering and deployment of their custom CRDs (as skaffold does with K8s objects like Pod, Deployment.apps, etc.)\n  - Additionally users w/ a CRD that uses a different field name for `image:` (eg: `foo:`) and want skaffold to properly modify the value to instead have the image label for the image skaffold recently built\n- Users who are seeing issues with skaffold’s default resource field overwriting for a given resource - eg: skaffold errors as it tries to mutate immutable config on re-deployment..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/tutorials/skaffold-resource-selector", "title": "Manage CRDs w/ Skaffold - Configuring Which K8s Resources & Fields Skaffold Manages", "description": "This page provides guidance on how to configure Skaffold to manage custom CRDs and their specific fields, including image overwriting and resource field management.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:43:24", "type": "section_detail", "page_metadata": {"article:section": "docs", "ogDescription": "Common Use Cases This Page Helps Resolve:\n Users who want skaffold to properly manage the rendering and deployment of their custom CRDs (as skaffold does with K8s objects like Pod, Deployment.apps, etc.)  Additionally users w/ a CRD that uses a different field name for image: (eg: foo:) and want skaffold to properly modify the value to instead have the image label for the image skaffold recently built   Users who are seeing issues with skaffold’s default resource field overwriting for a given resource - eg: skaffold errors as it tries to mutate immutable config on re-deployment  Currently skaffold modifies the manifests it renders and deploys for the following functionality:", "og:url": "https://skaffold.dev/docs/tutorials/skaffold-resource-selector/", "twitter:title": "Manage CRDs w/ Skaffold - Configuring Which K8s Resources & Fields Skaffold Manages", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:site_name": "Skaffold", "robots": "index, follow", "ogTitle": "Manage CRDs w/ Skaffold - Configuring Which K8s Resources & Fields Skaffold Manages", "generator": "Hugo 0.99.1", "description": "Common Use Cases This Page Helps Resolve:\n\nUsers who want skaffold to properly manage the rendering and deployment of their custom CRDs (as skaffold …", "og:title": "Manage CRDs w/ Skaffold - Configuring Which K8s Resources & Fields Skaffold Manages", "og:type": "article", "og:description": "Common Use Cases This Page Helps Resolve:\n Users who want skaffold to properly manage the rendering and deployment of their custom CRDs (as skaffold does with K8s objects like Pod, Deployment.apps, etc.)  Additionally users w/ a CRD that uses a different field name for image: (eg: foo:) and want skaffold to properly modify the value to instead have the image label for the image skaffold recently built   Users who are seeing issues with skaffold’s default resource field overwriting for a given resource - eg: skaffold errors as it tries to mutate immutable config on re-deployment  Currently skaffold modifies the manifests it renders and deploys for the following functionality:", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "twitter:description": "Common Use Cases This Page Helps Resolve:\n Users who want skaffold to properly manage the rendering and deployment of their custom CRDs (as skaffold does with K8s objects like Pod, Deployment.apps, etc.)  Additionally users w/ a CRD that uses a different field name for image: (eg: foo:) and want skaffold to properly modify the value to instead have the image label for the image skaffold recently built   Users who are seeing issues with skaffold’s default resource field overwriting for a given resource - eg: skaffold errors as it tries to mutate immutable config on re-deployment  Currently skaffold modifies the manifests it renders and deploys for the following functionality:", "title": "Manage CRDs w/ Skaffold - Configuring Which K8s Resources & Fields Skaffold Manages | Skaffold", "language": "en", "ogSiteName": "Skaffold", "modifiedTime": "2025-01-23T10:14:58-05:00", "twitter:card": "summary", "ogUrl": "https://skaffold.dev/docs/tutorials/skaffold-resource-selector/", "scrapeId": "eaa662a4-fa75-4815-86cb-2a00d3bd887e", "sourceURL": "https://skaffold.dev/docs/tutorials/skaffold-resource-selector", "url": "https://skaffold.dev/docs/tutorials/skaffold-resource-selector/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I skaffold modifications in skaffold?\n\nAssistant: To skaffold modifications in skaffold, here's what you do:\nCurrently skaffold modifies the manifests it renders and deploys for the following functionality:\n\n- status checking - done by mutating the manifest/K8s-Object by adding a label - skaffold/dev/run-id. Skaffold uses this run-id to identify the deployments Skaffold manages with it’s status checking.\n- image label overwriting - done by mutating the manifest/K8s-Object by substituting the `image:$ORIGINAL_IMAGE_TAG` value(s) in a manifest with `image:$RECENT_SKAFFOLD_BUILT_IMAGE`..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/tutorials/skaffold-resource-selector", "title": "Manage CRDs w/ Skaffold - Configuring Which K8s Resources & Fields Skaffold Manages", "description": "This page provides guidance on how to configure Skaffold to manage custom CRDs and their specific fields, including image overwriting and resource field management.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:43:24", "type": "section_detail", "page_metadata": {"article:section": "docs", "ogDescription": "Common Use Cases This Page Helps Resolve:\n Users who want skaffold to properly manage the rendering and deployment of their custom CRDs (as skaffold does with K8s objects like Pod, Deployment.apps, etc.)  Additionally users w/ a CRD that uses a different field name for image: (eg: foo:) and want skaffold to properly modify the value to instead have the image label for the image skaffold recently built   Users who are seeing issues with skaffold’s default resource field overwriting for a given resource - eg: skaffold errors as it tries to mutate immutable config on re-deployment  Currently skaffold modifies the manifests it renders and deploys for the following functionality:", "og:url": "https://skaffold.dev/docs/tutorials/skaffold-resource-selector/", "twitter:title": "Manage CRDs w/ Skaffold - Configuring Which K8s Resources & Fields Skaffold Manages", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:site_name": "Skaffold", "robots": "index, follow", "ogTitle": "Manage CRDs w/ Skaffold - Configuring Which K8s Resources & Fields Skaffold Manages", "generator": "Hugo 0.99.1", "description": "Common Use Cases This Page Helps Resolve:\n\nUsers who want skaffold to properly manage the rendering and deployment of their custom CRDs (as skaffold …", "og:title": "Manage CRDs w/ Skaffold - Configuring Which K8s Resources & Fields Skaffold Manages", "og:type": "article", "og:description": "Common Use Cases This Page Helps Resolve:\n Users who want skaffold to properly manage the rendering and deployment of their custom CRDs (as skaffold does with K8s objects like Pod, Deployment.apps, etc.)  Additionally users w/ a CRD that uses a different field name for image: (eg: foo:) and want skaffold to properly modify the value to instead have the image label for the image skaffold recently built   Users who are seeing issues with skaffold’s default resource field overwriting for a given resource - eg: skaffold errors as it tries to mutate immutable config on re-deployment  Currently skaffold modifies the manifests it renders and deploys for the following functionality:", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "twitter:description": "Common Use Cases This Page Helps Resolve:\n Users who want skaffold to properly manage the rendering and deployment of their custom CRDs (as skaffold does with K8s objects like Pod, Deployment.apps, etc.)  Additionally users w/ a CRD that uses a different field name for image: (eg: foo:) and want skaffold to properly modify the value to instead have the image label for the image skaffold recently built   Users who are seeing issues with skaffold’s default resource field overwriting for a given resource - eg: skaffold errors as it tries to mutate immutable config on re-deployment  Currently skaffold modifies the manifests it renders and deploys for the following functionality:", "title": "Manage CRDs w/ Skaffold - Configuring Which K8s Resources & Fields Skaffold Manages | Skaffold", "language": "en", "ogSiteName": "Skaffold", "modifiedTime": "2025-01-23T10:14:58-05:00", "twitter:card": "summary", "ogUrl": "https://skaffold.dev/docs/tutorials/skaffold-resource-selector/", "scrapeId": "eaa662a4-fa75-4815-86cb-2a00d3bd887e", "sourceURL": "https://skaffold.dev/docs/tutorials/skaffold-resource-selector", "url": "https://skaffold.dev/docs/tutorials/skaffold-resource-selector/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I default resources managed by skaffold in skaffold?\n\nAssistant: To default resources managed by skaffold in skaffold, here's what you do:\nSkaffold has by default the following resources set for management via field “labels:” and “image:” overwriting:\n\n- Pod\n- DaemonSet.apps\n- Deployment.apps\n- ReplicaSet.apps\n- StatefulSet.apps (with the exception of `.spec.volumeClaimTemplates.*.metadata.labels` field(s))\n- CronJob.batch\n- Job.batch\n- DaemonSet.extensions\n- Deployment.extensions\n- ReplicaSet.extension\n- Service.serving.knative.dev\n- Fleet.agones.dev\n- GameServer.agones.dev\n- Rollout.argoproj.io\n- Workflow.argoproj.io\n- CronWorkflow.argoproj.io\n- WorkflowTemplate.argoproj.io\n- ClusterWorkflowTemplate.argoproj.io\n- *.cnrm.cloud.google.com.\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/tutorials/skaffold-resource-selector", "title": "Manage CRDs w/ Skaffold - Configuring Which K8s Resources & Fields Skaffold Manages", "description": "This page provides guidance on how to configure Skaffold to manage custom CRDs and their specific fields, including image overwriting and resource field management.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:43:24", "type": "section_detail", "page_metadata": {"article:section": "docs", "ogDescription": "Common Use Cases This Page Helps Resolve:\n Users who want skaffold to properly manage the rendering and deployment of their custom CRDs (as skaffold does with K8s objects like Pod, Deployment.apps, etc.)  Additionally users w/ a CRD that uses a different field name for image: (eg: foo:) and want skaffold to properly modify the value to instead have the image label for the image skaffold recently built   Users who are seeing issues with skaffold’s default resource field overwriting for a given resource - eg: skaffold errors as it tries to mutate immutable config on re-deployment  Currently skaffold modifies the manifests it renders and deploys for the following functionality:", "og:url": "https://skaffold.dev/docs/tutorials/skaffold-resource-selector/", "twitter:title": "Manage CRDs w/ Skaffold - Configuring Which K8s Resources & Fields Skaffold Manages", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:site_name": "Skaffold", "robots": "index, follow", "ogTitle": "Manage CRDs w/ Skaffold - Configuring Which K8s Resources & Fields Skaffold Manages", "generator": "Hugo 0.99.1", "description": "Common Use Cases This Page Helps Resolve:\n\nUsers who want skaffold to properly manage the rendering and deployment of their custom CRDs (as skaffold …", "og:title": "Manage CRDs w/ Skaffold - Configuring Which K8s Resources & Fields Skaffold Manages", "og:type": "article", "og:description": "Common Use Cases This Page Helps Resolve:\n Users who want skaffold to properly manage the rendering and deployment of their custom CRDs (as skaffold does with K8s objects like Pod, Deployment.apps, etc.)  Additionally users w/ a CRD that uses a different field name for image: (eg: foo:) and want skaffold to properly modify the value to instead have the image label for the image skaffold recently built   Users who are seeing issues with skaffold’s default resource field overwriting for a given resource - eg: skaffold errors as it tries to mutate immutable config on re-deployment  Currently skaffold modifies the manifests it renders and deploys for the following functionality:", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "twitter:description": "Common Use Cases This Page Helps Resolve:\n Users who want skaffold to properly manage the rendering and deployment of their custom CRDs (as skaffold does with K8s objects like Pod, Deployment.apps, etc.)  Additionally users w/ a CRD that uses a different field name for image: (eg: foo:) and want skaffold to properly modify the value to instead have the image label for the image skaffold recently built   Users who are seeing issues with skaffold’s default resource field overwriting for a given resource - eg: skaffold errors as it tries to mutate immutable config on re-deployment  Currently skaffold modifies the manifests it renders and deploys for the following functionality:", "title": "Manage CRDs w/ Skaffold - Configuring Which K8s Resources & Fields Skaffold Manages | Skaffold", "language": "en", "ogSiteName": "Skaffold", "modifiedTime": "2025-01-23T10:14:58-05:00", "twitter:card": "summary", "ogUrl": "https://skaffold.dev/docs/tutorials/skaffold-resource-selector/", "scrapeId": "eaa662a4-fa75-4815-86cb-2a00d3bd887e", "sourceURL": "https://skaffold.dev/docs/tutorials/skaffold-resource-selector", "url": "https://skaffold.dev/docs/tutorials/skaffold-resource-selector/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you give me some code examples for Manage CRDs w/ Skaffold - Configuring Which K8s Resources & Fields Skaffold Manages in skaffold?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**ResourceSelector Configuration Example**:\n\n```yaml\n// ResourceSelector describes user defined filters describing how skaffold should treat objects/fields during rendering.\nResourceSelector ResourceSelectorConfig `yaml:\"resourceSelector,omitempty\"`\n\n// ResourceSelectorConfig contains all the configuration needed by the deploy steps.\ntype ResourceSelectorConfig struct {\n    // Allow configures an allowlist for transforming manifests.\n    Allow []ResourceFilter `yaml:\"allow,omitempty\"`\n    // Deny configures an allowlist for transforming manifests.\n    Deny []ResourceFilter `yaml:\"deny,omitempty\"`\n}\n\n// ResourceFilter contains definition to filter which resource to transform.\ntype ResourceFilter struct {\n    // GroupKind is the compact format of a resource type.\n    GroupKind string `yaml:\"groupKind\" yamltags:\"required\"`\n    // Image is an optional slice of JSON-path-like paths of where to rewrite images.\n    Image []string `yaml:\"image,omitempty\"`\n    // Labels is an optional slice of JSON-path-like paths of where to add a labels block if missing.\n    Labels []string `yaml:\"labels,omitempty\"`\n    // PodSpec is an optional slice of JSON-path-like paths of where pod spec properties can be overwritten.\n    PodSpec []string `yaml:\"podSpec,omitempty\"`\n}\n```\n\nThis snippet shows you how to resourceselector configuration example, which is an important aspect of manage crds w/ skaffold - configuring which k8s resources & fields skaffold manages.\n\n", "metadata": {"source_url": "https://skaffold.dev/docs/tutorials/skaffold-resource-selector", "title": "Manage CRDs w/ Skaffold - Configuring Which K8s Resources & Fields Skaffold Manages", "description": "This page provides guidance on how to configure Skaffold to manage custom CRDs and their specific fields, including image overwriting and resource field management.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:43:24", "type": "code_examples", "page_metadata": {"article:section": "docs", "ogDescription": "Common Use Cases This Page Helps Resolve:\n Users who want skaffold to properly manage the rendering and deployment of their custom CRDs (as skaffold does with K8s objects like Pod, Deployment.apps, etc.)  Additionally users w/ a CRD that uses a different field name for image: (eg: foo:) and want skaffold to properly modify the value to instead have the image label for the image skaffold recently built   Users who are seeing issues with skaffold’s default resource field overwriting for a given resource - eg: skaffold errors as it tries to mutate immutable config on re-deployment  Currently skaffold modifies the manifests it renders and deploys for the following functionality:", "og:url": "https://skaffold.dev/docs/tutorials/skaffold-resource-selector/", "twitter:title": "Manage CRDs w/ Skaffold - Configuring Which K8s Resources & Fields Skaffold Manages", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:site_name": "Skaffold", "robots": "index, follow", "ogTitle": "Manage CRDs w/ Skaffold - Configuring Which K8s Resources & Fields Skaffold Manages", "generator": "Hugo 0.99.1", "description": "Common Use Cases This Page Helps Resolve:\n\nUsers who want skaffold to properly manage the rendering and deployment of their custom CRDs (as skaffold …", "og:title": "Manage CRDs w/ Skaffold - Configuring Which K8s Resources & Fields Skaffold Manages", "og:type": "article", "og:description": "Common Use Cases This Page Helps Resolve:\n Users who want skaffold to properly manage the rendering and deployment of their custom CRDs (as skaffold does with K8s objects like Pod, Deployment.apps, etc.)  Additionally users w/ a CRD that uses a different field name for image: (eg: foo:) and want skaffold to properly modify the value to instead have the image label for the image skaffold recently built   Users who are seeing issues with skaffold’s default resource field overwriting for a given resource - eg: skaffold errors as it tries to mutate immutable config on re-deployment  Currently skaffold modifies the manifests it renders and deploys for the following functionality:", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "twitter:description": "Common Use Cases This Page Helps Resolve:\n Users who want skaffold to properly manage the rendering and deployment of their custom CRDs (as skaffold does with K8s objects like Pod, Deployment.apps, etc.)  Additionally users w/ a CRD that uses a different field name for image: (eg: foo:) and want skaffold to properly modify the value to instead have the image label for the image skaffold recently built   Users who are seeing issues with skaffold’s default resource field overwriting for a given resource - eg: skaffold errors as it tries to mutate immutable config on re-deployment  Currently skaffold modifies the manifests it renders and deploys for the following functionality:", "title": "Manage CRDs w/ Skaffold - Configuring Which K8s Resources & Fields Skaffold Manages | Skaffold", "language": "en", "ogSiteName": "Skaffold", "modifiedTime": "2025-01-23T10:14:58-05:00", "twitter:card": "summary", "ogUrl": "https://skaffold.dev/docs/tutorials/skaffold-resource-selector/", "scrapeId": "eaa662a4-fa75-4815-86cb-2a00d3bd887e", "sourceURL": "https://skaffold.dev/docs/tutorials/skaffold-resource-selector", "url": "https://skaffold.dev/docs/tutorials/skaffold-resource-selector/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: What are some tips for using Manage CRDs w/ Skaffold - Configuring Which K8s Resources & Fields Skaffold Manages in skaffold effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nUse the `resourceSelector` to manage custom CRDs effectively by specifying the correct `groupKind` and fields to modify.\n\nBe cautious with immutable fields; use the `deny` list in `resourceSelector` to prevent overwriting them.\n\nFor CRDs that use non-standard image field names, configure the `image` field in `resourceSelector` to ensure proper image management.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://skaffold.dev/docs/tutorials/skaffold-resource-selector", "title": "Manage CRDs w/ Skaffold - Configuring Which K8s Resources & Fields Skaffold Manages", "description": "This page provides guidance on how to configure Skaffold to manage custom CRDs and their specific fields, including image overwriting and resource field management.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:43:24", "type": "best_practices", "page_metadata": {"article:section": "docs", "ogDescription": "Common Use Cases This Page Helps Resolve:\n Users who want skaffold to properly manage the rendering and deployment of their custom CRDs (as skaffold does with K8s objects like Pod, Deployment.apps, etc.)  Additionally users w/ a CRD that uses a different field name for image: (eg: foo:) and want skaffold to properly modify the value to instead have the image label for the image skaffold recently built   Users who are seeing issues with skaffold’s default resource field overwriting for a given resource - eg: skaffold errors as it tries to mutate immutable config on re-deployment  Currently skaffold modifies the manifests it renders and deploys for the following functionality:", "og:url": "https://skaffold.dev/docs/tutorials/skaffold-resource-selector/", "twitter:title": "Manage CRDs w/ Skaffold - Configuring Which K8s Resources & Fields Skaffold Manages", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:site_name": "Skaffold", "robots": "index, follow", "ogTitle": "Manage CRDs w/ Skaffold - Configuring Which K8s Resources & Fields Skaffold Manages", "generator": "Hugo 0.99.1", "description": "Common Use Cases This Page Helps Resolve:\n\nUsers who want skaffold to properly manage the rendering and deployment of their custom CRDs (as skaffold …", "og:title": "Manage CRDs w/ Skaffold - Configuring Which K8s Resources & Fields Skaffold Manages", "og:type": "article", "og:description": "Common Use Cases This Page Helps Resolve:\n Users who want skaffold to properly manage the rendering and deployment of their custom CRDs (as skaffold does with K8s objects like Pod, Deployment.apps, etc.)  Additionally users w/ a CRD that uses a different field name for image: (eg: foo:) and want skaffold to properly modify the value to instead have the image label for the image skaffold recently built   Users who are seeing issues with skaffold’s default resource field overwriting for a given resource - eg: skaffold errors as it tries to mutate immutable config on re-deployment  Currently skaffold modifies the manifests it renders and deploys for the following functionality:", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "twitter:description": "Common Use Cases This Page Helps Resolve:\n Users who want skaffold to properly manage the rendering and deployment of their custom CRDs (as skaffold does with K8s objects like Pod, Deployment.apps, etc.)  Additionally users w/ a CRD that uses a different field name for image: (eg: foo:) and want skaffold to properly modify the value to instead have the image label for the image skaffold recently built   Users who are seeing issues with skaffold’s default resource field overwriting for a given resource - eg: skaffold errors as it tries to mutate immutable config on re-deployment  Currently skaffold modifies the manifests it renders and deploys for the following functionality:", "title": "Manage CRDs w/ Skaffold - Configuring Which K8s Resources & Fields Skaffold Manages | Skaffold", "language": "en", "ogSiteName": "Skaffold", "modifiedTime": "2025-01-23T10:14:58-05:00", "twitter:card": "summary", "ogUrl": "https://skaffold.dev/docs/tutorials/skaffold-resource-selector/", "scrapeId": "eaa662a4-fa75-4815-86cb-2a00d3bd887e", "sourceURL": "https://skaffold.dev/docs/tutorials/skaffold-resource-selector", "url": "https://skaffold.dev/docs/tutorials/skaffold-resource-selector/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what Using Skaffold for CI/CD with GitLab is in skaffold?\n\nAssistant: Sure, I'd be happy to explain Using Skaffold for CI/CD with GitLab in skaffold.\n\n# Using Skaffold for CI/CD with GitLab\n\nSkaffold is a tool which is non-opinionated about the CI/CD tool you should use and acts as a platform agnostic solution for both development and deploying to production.Here's a quick rundown of what this is about:\n\n## Step 1: Getting the project and Dockerfile ready\n\nThe first step is to obviously have your project which you want to deploy ready with a Dockerfile setup for the same.\n\nSkaffold supports multiple builders like Docker, Kaniko, Bazel and more and if the builder you are looking for is not supported out of the box, you can script it out as well. We will use Docker in this demonstration.\n\nFor instance, if you would like to deploy nginx, your Dockerfile would look something like this:\n\n```Dockerfile\nFROM nginxinc/nginx-unprivileged:1.19.3-alpine\nWORKDIR /app/server\n\nCOPY ./web ./web\n\nEXPOSE 8080\n\nCMD [ \"/bin/bash\", \"-c\", \"nginx -g 'daemon off;'\" ]\n```\n\nSkaffold can use your dockerfile to automatically build, tag and push images to the registry when needed.\n\n## Step 2: Choosing the deployment method\n\nSkaffold supports deployment through kubectl, helm and a lot of other mechanisms. You can have a look at the complete list of deployers available here.\n\nIf you choose to deploy through kubectl, you must have all your yaml files ready, or if you would like to deploy through helm charts, you must have all your charts ready.\n\n## Step 3: Choosing the image and tag strategy\n\nSkaffold automatically tags images based on different strategies as documented here. The tagging strategy used is configurable, so choose the mechanism which is right for you. By default, skaffold uses the git sha tagger.\n\nIf you are using helm as your deployer, you might want to use the helm image strategy if you would like to follow helm specific conventions, as skaffold will pass in all the details for you.\n\n## Step 4: Plugins (optional)\n\nIf you want to do some kind of processing before deployment like decrypting the secrets in the CI/CD pipeline, skaffold also supports plugins like Helm Secrets. So, if you would like to deploy secrets that have been encrypted using KMS or any other mechanism supported by SOPS you can actually set useHelmSecrets option to true and skaffold will handle everything automatically for you.\n\n## Step 5: The `skaffold.yaml` file\n\nYour skaffold.yaml file will change depending on the way you would like to build and deploy your project. It is recommended that you set up skaffold and run it manually before you setup your CI pipeline since the CI pipeline can just call skaffold to do all the builds and deployments which can be tested out locally via skaffold.\n\nA sample skaffold file can look something like this:\n\n```yml\napiVersion: skaffold/v2beta8\nkind: Config\nprofiles:\n  - name: my-profile-name\n    build:\n      artifacts:\n        - image: asia.gcr.io/my-project/my-image\n          docker:\n            buildArgs:\n              NPM_REGISTRY: '{{.NPM_REGISTRY}}'\n              NPM_TOKEN: '{{.NPM_TOKEN}}'\n    deploy:\n      helm:\n        releases:\n          - name: my-release\n            namespace: default\n            useHelmSecrets: true\n            chartPath: ./charts/my-chart\n            valuesFiles:\n              - ./deployment/dev/values.yaml\n              - ./deployment/dev/secrets.yaml\n            skipBuildDependencies: true\n        flags:\n          upgrade:\n            - --install\n```\n\nPlease have a look at the comments above to understand what the yaml does.\n\nRather, if you want to deploy via kubectl, your skaffold file can look something like this:\n\n```yml\napiVersion: skaffold/v2beta8\nkind: Config\nprofiles:\n    - name: dev-svc\n      build:\n          artifacts:\n              - image: asia.gcr.io/my-project/my-image\n                docker:\n                    buildArgs:\n                        NPM_REGISTRY: '{{.NPM_REGISTRY}}'\n                        NPM_TOKEN: '{{.NPM_TOKEN}}'\n      deploy:\n          statusCheckDeadlineSeconds: 600\n          kubectl:\n              manifests:\n                  - k8/dev/*.yml\n```\n\n## Step 6: Development & Testing locally\n\nBefore we move on to setting up the CI pipeline, we should test it out locally. Use skaffold run if you are deploying it to the cluster, skaffold build to just build and push the artifacts, skaffold dev if you are developing (this will enable auto reload on changes) or debug using skaffold debug.\n\nYou can find docs about all these workflows here.\n\nAlso, note that you can also set up file synchronization to enable faster development workflows. Enabling file synchronization would avoid the need to rebuild the images repeatedly during development and testing and this can accelerate the inner dev loop.\n\n## Step 7: Setting up authentication with the registry\n\nAs you may already know, there are a lot of places where you can host images namely Docker Hub, GCR, GitLab Registry, Quay and so on.\n\nThe way you authenticate is specific to the registry provider of your choice. For eg. you may choose to do a username-password authentication with DockerHub or authenticate using service accounts in GCR and so on.\n\n**NOTE:** Username-Password authentication is not recommended for CI/CD pipelines since they can be easily compromised and can sometimes be logged as well.\n\nWe will be using GCR in our example.\n\n## Step 8: Using DIND Service (Optional)\n\nDocker images are typically not cached if you are running your builds/pipeline within Docker containers(i.e. DIND or Docker-in-Docker) and this can be very slow since your CI runner has to download the images again and again for every build even if some layers are already available.\n\n**NOTE:** If you are not looking to run your pipeline within Docker containers or are fine with slower pipelines/pipelines without caching, you can completely skip this step and proceed to Step 9.\n\nTo avoid this, we can set up a DIND service in our cluster to enable caching and storage of image layers for us. A sample dind deployment file as deployed in Kubernetes can look something like this:\n\n```yml\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n    name: my-dind\nspec:\n    selector:\n        matchLabels:\n            app: my-dind\n    strategy:\n        type: Recreate\n    template:\n        metadata:\n            labels:\n                app: my-dind\n        spec:\n            containers:\n                - image: docker:dind\n                  imagePullPolicy: Always\n                  name: my-dind\n                  ports:\n                      - containerPort: 2375\n                        name: my-dind\n                  env:\n                      - name: DOCKER_HOST\n                        value: tcp://localhost:2375\n                      - name: DOCKER_TLS_CERTDIR\n                        value: ''\n                  securityContext:\n                      privileged: true\n                  volumeMounts:\n                      - name: my-dind-storage\n                        mountPath: /var/lib/docker\n                  resources:\n                      limits:\n                          memory: '2Gi'\n                          cpu: '1000m'\n                      requests:\n                          memory: '1Gi'\n                          cpu: '250m'\n            volumes:\n                - name: my-dind-storage\n                  persistentVolumeClaim:\n                      claimName: my-dind-pv-claim\n```\n\nService File:\n\n```yml\napiVersion: v1\nkind: Service\nmetadata:\n    name: my-dind-svc\nspec:\n    selector:\n        app: my-dind\n    type: LoadBalancer\n    ports:\n        - port: 2375\n          targetPort: 2375\n          protocol: TCP\n          name: http\n```\n\n**PV Claim:**\n\n```yml\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n    name: my-dind-pv-claim\n    labels:\n        app: my-dind\nspec:\n    accessModes:\n        - ReadWriteOnce\n    resources:\n        requests:\n            storage: 200Gi\n    storageClassName: standard\n```\n\nAnd we would need to pass the URL to the DIND service when we do builds in the pipeline and all the caching will happen in the DIND storage speeding up the pipeline a lot.\n\n## Step 9: Getting the CI pipeline setup\n\nNow that we have Skaffold ready and working locally, we look at the CI pipeline.\n\nHere is a sample pipeline using GitLab CI and if you are new to it, you can refer the docs here. This pipeline might look complicated at first glance, but most of it related to configuring access for deploying to GCP and configure GitLab’s Docker-in-Docker support to cache artifacts between builds. What is important to note is that we use Skaffold to do all the builds and deployments.\n\n```yml\nstages:\n    - my-stage\n\nmy-job:\n    image:\n        name: gcr.io/k8s-skaffold/skaffold:v1.15.0\n    tags:\n        - development\n    stage: my-stage\n    retry: 2\n    script:\n        - echo \"$GCP_DEV_SERVICE_KEY\" > gcloud-service-key.json\n        - gcloud auth activate-service-account --key-file gcloud-service-key.json\n        - gcloud config set project $PROJECT_DEV_NAME\n        - gcloud config set compute/zone $PROJECT_DEV_REGION\n        - gcloud container clusters get-credentials $CLUSTER_DEV_NAME\n        - kubectl config get-contexts\n        - DOCKER_HOST=\"$DIND_DEV\" NPM_REGISTRY=\"$NPM_REGISTRY_DEV\" NPM_TOKEN=\"$NPM_TOKEN_DEV\" skaffold run --kube-context $CLUSTER_DEV_CONTEXT -n default -l skaffold.dev/run-id=deploydep -p dev-svc --status-check\n    only:\n        refs:\n            - main\n```\n\nSo, ultimately our GitLab CI pipeline does not know anything about the helm charts or build strategy or any deployment methods and relies completely on skaffold to do the job for us.\n\n## Step 10: That’s all folks\n\nIf all went well so far, you can try pushing a commit and see your pipeline running, picking up the changes, building and pushing the image and also deploying the same.\n\nHope this post was informative. Good luck with your journey with Skaffold.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/tutorials/ci_cd", "title": "Using Skaffold for CI/CD with GitLab", "description": "Skaffold is a tool which is non-opinionated about the CI/CD tool you should use and acts as a platform agnostic solution for both development and deploying to production.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 04:44:06", "type": "overview", "page_metadata": {"twitter:card": "summary", "article:section": "docs", "generator": "Hugo 0.99.1", "og:description": "Contributed by: @tvvignesh\nSkaffold is a tool which is non-opinionated about the CI/CD tool you should use and acts as a platform agnostic solution for both development and deploying to production.\nTo facilitate building and deploying images in CI/CD, skaffold offers docker images which you can build on top of. If that doesn’t work for your use-case, you can make your own Dockerfile and pull in skaffold and its dependencies using curl.", "ogSiteName": "Skaffold", "twitter:title": "Using Skaffold for CI/CD with GitLab", "modifiedTime": "2025-01-23T10:14:58-05:00", "twitter:description": "Contributed by: @tvvignesh\nSkaffold is a tool which is non-opinionated about the CI/CD tool you should use and acts as a platform agnostic solution for both development and deploying to production.\nTo facilitate building and deploying images in CI/CD, skaffold offers docker images which you can build on top of. If that doesn’t work for your use-case, you can make your own Dockerfile and pull in skaffold and its dependencies using curl.", "og:title": "Using Skaffold for CI/CD with GitLab", "robots": "index, follow", "description": "Contributed by: @tvvignesh\nSkaffold is a tool which is non-opinionated about the CI/CD tool you should use and acts as a platform agnostic solution …", "ogTitle": "Using Skaffold for CI/CD with GitLab", "ogDescription": "Contributed by: @tvvignesh\nSkaffold is a tool which is non-opinionated about the CI/CD tool you should use and acts as a platform agnostic solution for both development and deploying to production.\nTo facilitate building and deploying images in CI/CD, skaffold offers docker images which you can build on top of. If that doesn’t work for your use-case, you can make your own Dockerfile and pull in skaffold and its dependencies using curl.", "ogUrl": "https://skaffold.dev/docs/tutorials/ci_cd/", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:url": "https://skaffold.dev/docs/tutorials/ci_cd/", "language": "en", "og:type": "article", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:site_name": "Skaffold", "title": "Using Skaffold for CI/CD with GitLab | Skaffold", "scrapeId": "48250aa1-b660-4849-9323-fd2c5a4e4934", "sourceURL": "https://skaffold.dev/docs/tutorials/ci_cd", "url": "https://skaffold.dev/docs/tutorials/ci_cd/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I step 1: getting the project and dockerfile ready in skaffold?\n\nAssistant: To step 1: getting the project and dockerfile ready in skaffold, here's what you do:\nThe first step is to obviously have your project which you want to deploy ready with a Dockerfile setup for the same.\n\nSkaffold supports multiple builders like Docker, Kaniko, Bazel and more and if the builder you are looking for is not supported out of the box, you can script it out as well. We will use Docker in this demonstration.\n\nFor instance, if you would like to deploy nginx, your Dockerfile would look something like this:\n\n```Dockerfile\nFROM nginxinc/nginx-unprivileged:1.19.3-alpine\nWORKDIR /app/server\n\nCOPY ./web ./web\n\nEXPOSE 8080\n\nCMD [ \"/bin/bash\", \"-c\", \"nginx -g 'daemon off;'\" ]\n```\n\nSkaffold can use your dockerfile to automatically build, tag and push images to the registry when needed..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/tutorials/ci_cd", "title": "Using Skaffold for CI/CD with GitLab", "description": "Skaffold is a tool which is non-opinionated about the CI/CD tool you should use and acts as a platform agnostic solution for both development and deploying to production.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 04:44:06", "type": "section_detail", "page_metadata": {"twitter:card": "summary", "article:section": "docs", "generator": "Hugo 0.99.1", "og:description": "Contributed by: @tvvignesh\nSkaffold is a tool which is non-opinionated about the CI/CD tool you should use and acts as a platform agnostic solution for both development and deploying to production.\nTo facilitate building and deploying images in CI/CD, skaffold offers docker images which you can build on top of. If that doesn’t work for your use-case, you can make your own Dockerfile and pull in skaffold and its dependencies using curl.", "ogSiteName": "Skaffold", "twitter:title": "Using Skaffold for CI/CD with GitLab", "modifiedTime": "2025-01-23T10:14:58-05:00", "twitter:description": "Contributed by: @tvvignesh\nSkaffold is a tool which is non-opinionated about the CI/CD tool you should use and acts as a platform agnostic solution for both development and deploying to production.\nTo facilitate building and deploying images in CI/CD, skaffold offers docker images which you can build on top of. If that doesn’t work for your use-case, you can make your own Dockerfile and pull in skaffold and its dependencies using curl.", "og:title": "Using Skaffold for CI/CD with GitLab", "robots": "index, follow", "description": "Contributed by: @tvvignesh\nSkaffold is a tool which is non-opinionated about the CI/CD tool you should use and acts as a platform agnostic solution …", "ogTitle": "Using Skaffold for CI/CD with GitLab", "ogDescription": "Contributed by: @tvvignesh\nSkaffold is a tool which is non-opinionated about the CI/CD tool you should use and acts as a platform agnostic solution for both development and deploying to production.\nTo facilitate building and deploying images in CI/CD, skaffold offers docker images which you can build on top of. If that doesn’t work for your use-case, you can make your own Dockerfile and pull in skaffold and its dependencies using curl.", "ogUrl": "https://skaffold.dev/docs/tutorials/ci_cd/", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:url": "https://skaffold.dev/docs/tutorials/ci_cd/", "language": "en", "og:type": "article", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:site_name": "Skaffold", "title": "Using Skaffold for CI/CD with GitLab | Skaffold", "scrapeId": "48250aa1-b660-4849-9323-fd2c5a4e4934", "sourceURL": "https://skaffold.dev/docs/tutorials/ci_cd", "url": "https://skaffold.dev/docs/tutorials/ci_cd/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I step 2: choosing the deployment method in skaffold?\n\nAssistant: To step 2: choosing the deployment method in skaffold, here's what you do:\nSkaffold supports deployment through kubectl, helm and a lot of other mechanisms. You can have a look at the complete list of deployers available here.\n\nIf you choose to deploy through kubectl, you must have all your yaml files ready, or if you would like to deploy through helm charts, you must have all your charts ready..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/tutorials/ci_cd", "title": "Using Skaffold for CI/CD with GitLab", "description": "Skaffold is a tool which is non-opinionated about the CI/CD tool you should use and acts as a platform agnostic solution for both development and deploying to production.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 04:44:06", "type": "section_detail", "page_metadata": {"twitter:card": "summary", "article:section": "docs", "generator": "Hugo 0.99.1", "og:description": "Contributed by: @tvvignesh\nSkaffold is a tool which is non-opinionated about the CI/CD tool you should use and acts as a platform agnostic solution for both development and deploying to production.\nTo facilitate building and deploying images in CI/CD, skaffold offers docker images which you can build on top of. If that doesn’t work for your use-case, you can make your own Dockerfile and pull in skaffold and its dependencies using curl.", "ogSiteName": "Skaffold", "twitter:title": "Using Skaffold for CI/CD with GitLab", "modifiedTime": "2025-01-23T10:14:58-05:00", "twitter:description": "Contributed by: @tvvignesh\nSkaffold is a tool which is non-opinionated about the CI/CD tool you should use and acts as a platform agnostic solution for both development and deploying to production.\nTo facilitate building and deploying images in CI/CD, skaffold offers docker images which you can build on top of. If that doesn’t work for your use-case, you can make your own Dockerfile and pull in skaffold and its dependencies using curl.", "og:title": "Using Skaffold for CI/CD with GitLab", "robots": "index, follow", "description": "Contributed by: @tvvignesh\nSkaffold is a tool which is non-opinionated about the CI/CD tool you should use and acts as a platform agnostic solution …", "ogTitle": "Using Skaffold for CI/CD with GitLab", "ogDescription": "Contributed by: @tvvignesh\nSkaffold is a tool which is non-opinionated about the CI/CD tool you should use and acts as a platform agnostic solution for both development and deploying to production.\nTo facilitate building and deploying images in CI/CD, skaffold offers docker images which you can build on top of. If that doesn’t work for your use-case, you can make your own Dockerfile and pull in skaffold and its dependencies using curl.", "ogUrl": "https://skaffold.dev/docs/tutorials/ci_cd/", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:url": "https://skaffold.dev/docs/tutorials/ci_cd/", "language": "en", "og:type": "article", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:site_name": "Skaffold", "title": "Using Skaffold for CI/CD with GitLab | Skaffold", "scrapeId": "48250aa1-b660-4849-9323-fd2c5a4e4934", "sourceURL": "https://skaffold.dev/docs/tutorials/ci_cd", "url": "https://skaffold.dev/docs/tutorials/ci_cd/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I step 3: choosing the image and tag strategy in skaffold?\n\nAssistant: To step 3: choosing the image and tag strategy in skaffold, here's what you do:\nSkaffold automatically tags images based on different strategies as documented here. The tagging strategy used is configurable, so choose the mechanism which is right for you. By default, skaffold uses the git sha tagger.\n\nIf you are using helm as your deployer, you might want to use the helm image strategy if you would like to follow helm specific conventions, as skaffold will pass in all the details for you..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/tutorials/ci_cd", "title": "Using Skaffold for CI/CD with GitLab", "description": "Skaffold is a tool which is non-opinionated about the CI/CD tool you should use and acts as a platform agnostic solution for both development and deploying to production.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 04:44:06", "type": "section_detail", "page_metadata": {"twitter:card": "summary", "article:section": "docs", "generator": "Hugo 0.99.1", "og:description": "Contributed by: @tvvignesh\nSkaffold is a tool which is non-opinionated about the CI/CD tool you should use and acts as a platform agnostic solution for both development and deploying to production.\nTo facilitate building and deploying images in CI/CD, skaffold offers docker images which you can build on top of. If that doesn’t work for your use-case, you can make your own Dockerfile and pull in skaffold and its dependencies using curl.", "ogSiteName": "Skaffold", "twitter:title": "Using Skaffold for CI/CD with GitLab", "modifiedTime": "2025-01-23T10:14:58-05:00", "twitter:description": "Contributed by: @tvvignesh\nSkaffold is a tool which is non-opinionated about the CI/CD tool you should use and acts as a platform agnostic solution for both development and deploying to production.\nTo facilitate building and deploying images in CI/CD, skaffold offers docker images which you can build on top of. If that doesn’t work for your use-case, you can make your own Dockerfile and pull in skaffold and its dependencies using curl.", "og:title": "Using Skaffold for CI/CD with GitLab", "robots": "index, follow", "description": "Contributed by: @tvvignesh\nSkaffold is a tool which is non-opinionated about the CI/CD tool you should use and acts as a platform agnostic solution …", "ogTitle": "Using Skaffold for CI/CD with GitLab", "ogDescription": "Contributed by: @tvvignesh\nSkaffold is a tool which is non-opinionated about the CI/CD tool you should use and acts as a platform agnostic solution for both development and deploying to production.\nTo facilitate building and deploying images in CI/CD, skaffold offers docker images which you can build on top of. If that doesn’t work for your use-case, you can make your own Dockerfile and pull in skaffold and its dependencies using curl.", "ogUrl": "https://skaffold.dev/docs/tutorials/ci_cd/", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:url": "https://skaffold.dev/docs/tutorials/ci_cd/", "language": "en", "og:type": "article", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:site_name": "Skaffold", "title": "Using Skaffold for CI/CD with GitLab | Skaffold", "scrapeId": "48250aa1-b660-4849-9323-fd2c5a4e4934", "sourceURL": "https://skaffold.dev/docs/tutorials/ci_cd", "url": "https://skaffold.dev/docs/tutorials/ci_cd/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I step 4: plugins (optional) in skaffold?\n\nAssistant: To step 4: plugins (optional) in skaffold, here's what you do:\nIf you want to do some kind of processing before deployment like decrypting the secrets in the CI/CD pipeline, skaffold also supports plugins like Helm Secrets. So, if you would like to deploy secrets that have been encrypted using KMS or any other mechanism supported by SOPS you can actually set useHelmSecrets option to true and skaffold will handle everything automatically for you..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/tutorials/ci_cd", "title": "Using Skaffold for CI/CD with GitLab", "description": "Skaffold is a tool which is non-opinionated about the CI/CD tool you should use and acts as a platform agnostic solution for both development and deploying to production.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 04:44:06", "type": "section_detail", "page_metadata": {"twitter:card": "summary", "article:section": "docs", "generator": "Hugo 0.99.1", "og:description": "Contributed by: @tvvignesh\nSkaffold is a tool which is non-opinionated about the CI/CD tool you should use and acts as a platform agnostic solution for both development and deploying to production.\nTo facilitate building and deploying images in CI/CD, skaffold offers docker images which you can build on top of. If that doesn’t work for your use-case, you can make your own Dockerfile and pull in skaffold and its dependencies using curl.", "ogSiteName": "Skaffold", "twitter:title": "Using Skaffold for CI/CD with GitLab", "modifiedTime": "2025-01-23T10:14:58-05:00", "twitter:description": "Contributed by: @tvvignesh\nSkaffold is a tool which is non-opinionated about the CI/CD tool you should use and acts as a platform agnostic solution for both development and deploying to production.\nTo facilitate building and deploying images in CI/CD, skaffold offers docker images which you can build on top of. If that doesn’t work for your use-case, you can make your own Dockerfile and pull in skaffold and its dependencies using curl.", "og:title": "Using Skaffold for CI/CD with GitLab", "robots": "index, follow", "description": "Contributed by: @tvvignesh\nSkaffold is a tool which is non-opinionated about the CI/CD tool you should use and acts as a platform agnostic solution …", "ogTitle": "Using Skaffold for CI/CD with GitLab", "ogDescription": "Contributed by: @tvvignesh\nSkaffold is a tool which is non-opinionated about the CI/CD tool you should use and acts as a platform agnostic solution for both development and deploying to production.\nTo facilitate building and deploying images in CI/CD, skaffold offers docker images which you can build on top of. If that doesn’t work for your use-case, you can make your own Dockerfile and pull in skaffold and its dependencies using curl.", "ogUrl": "https://skaffold.dev/docs/tutorials/ci_cd/", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:url": "https://skaffold.dev/docs/tutorials/ci_cd/", "language": "en", "og:type": "article", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:site_name": "Skaffold", "title": "Using Skaffold for CI/CD with GitLab | Skaffold", "scrapeId": "48250aa1-b660-4849-9323-fd2c5a4e4934", "sourceURL": "https://skaffold.dev/docs/tutorials/ci_cd", "url": "https://skaffold.dev/docs/tutorials/ci_cd/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I step 5: the `skaffold.yaml` file in skaffold?\n\nAssistant: To step 5: the `skaffold.yaml` file in skaffold, here's what you do:\nYour skaffold.yaml file will change depending on the way you would like to build and deploy your project. It is recommended that you set up skaffold and run it manually before you setup your CI pipeline since the CI pipeline can just call skaffold to do all the builds and deployments which can be tested out locally via skaffold.\n\nA sample skaffold file can look something like this:\n\n```yml\napiVersion: skaffold/v2beta8\nkind: Config\nprofiles:\n  - name: my-profile-name\n    build:\n      artifacts:\n        - image: asia.gcr.io/my-project/my-image\n          docker:\n            buildArgs:\n              NPM_REGISTRY: '{{.NPM_REGISTRY}}'\n              NPM_TOKEN: '{{.NPM_TOKEN}}'\n    deploy:\n      helm:\n        releases:\n          - name: my-release\n            namespace: default\n            useHelmSecrets: true\n            chartPath: ./charts/my-chart\n            valuesFiles:\n              - ./deployment/dev/values.yaml\n              - ./deployment/dev/secrets.yaml\n            skipBuildDependencies: true\n        flags:\n          upgrade:\n            - --install\n```\n\nPlease have a look at the comments above to understand what the yaml does.\n\nRather, if you want to deploy via kubectl, your skaffold file can look something like this:\n\n```yml\napiVersion: skaffold/v2beta8\nkind: Config\nprofiles:\n    - name: dev-svc\n      build:\n          artifacts:\n              - image: asia.gcr.io/my-project/my-image\n                docker:\n                    buildArgs:\n                        NPM_REGISTRY: '{{.NPM_REGISTRY}}'\n                        NPM_TOKEN: '{{.NPM_TOKEN}}'\n      deploy:\n          statusCheckDeadlineSeconds: 600\n          kubectl:\n              manifests:\n                  - k8/dev/*.yml\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/tutorials/ci_cd", "title": "Using Skaffold for CI/CD with GitLab", "description": "Skaffold is a tool which is non-opinionated about the CI/CD tool you should use and acts as a platform agnostic solution for both development and deploying to production.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 04:44:06", "type": "section_detail", "page_metadata": {"twitter:card": "summary", "article:section": "docs", "generator": "Hugo 0.99.1", "og:description": "Contributed by: @tvvignesh\nSkaffold is a tool which is non-opinionated about the CI/CD tool you should use and acts as a platform agnostic solution for both development and deploying to production.\nTo facilitate building and deploying images in CI/CD, skaffold offers docker images which you can build on top of. If that doesn’t work for your use-case, you can make your own Dockerfile and pull in skaffold and its dependencies using curl.", "ogSiteName": "Skaffold", "twitter:title": "Using Skaffold for CI/CD with GitLab", "modifiedTime": "2025-01-23T10:14:58-05:00", "twitter:description": "Contributed by: @tvvignesh\nSkaffold is a tool which is non-opinionated about the CI/CD tool you should use and acts as a platform agnostic solution for both development and deploying to production.\nTo facilitate building and deploying images in CI/CD, skaffold offers docker images which you can build on top of. If that doesn’t work for your use-case, you can make your own Dockerfile and pull in skaffold and its dependencies using curl.", "og:title": "Using Skaffold for CI/CD with GitLab", "robots": "index, follow", "description": "Contributed by: @tvvignesh\nSkaffold is a tool which is non-opinionated about the CI/CD tool you should use and acts as a platform agnostic solution …", "ogTitle": "Using Skaffold for CI/CD with GitLab", "ogDescription": "Contributed by: @tvvignesh\nSkaffold is a tool which is non-opinionated about the CI/CD tool you should use and acts as a platform agnostic solution for both development and deploying to production.\nTo facilitate building and deploying images in CI/CD, skaffold offers docker images which you can build on top of. If that doesn’t work for your use-case, you can make your own Dockerfile and pull in skaffold and its dependencies using curl.", "ogUrl": "https://skaffold.dev/docs/tutorials/ci_cd/", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:url": "https://skaffold.dev/docs/tutorials/ci_cd/", "language": "en", "og:type": "article", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:site_name": "Skaffold", "title": "Using Skaffold for CI/CD with GitLab | Skaffold", "scrapeId": "48250aa1-b660-4849-9323-fd2c5a4e4934", "sourceURL": "https://skaffold.dev/docs/tutorials/ci_cd", "url": "https://skaffold.dev/docs/tutorials/ci_cd/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I step 6: development & testing locally in skaffold?\n\nAssistant: To step 6: development & testing locally in skaffold, here's what you do:\nBefore we move on to setting up the CI pipeline, we should test it out locally. Use skaffold run if you are deploying it to the cluster, skaffold build to just build and push the artifacts, skaffold dev if you are developing (this will enable auto reload on changes) or debug using skaffold debug.\n\nYou can find docs about all these workflows here.\n\nAlso, note that you can also set up file synchronization to enable faster development workflows. Enabling file synchronization would avoid the need to rebuild the images repeatedly during development and testing and this can accelerate the inner dev loop..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/tutorials/ci_cd", "title": "Using Skaffold for CI/CD with GitLab", "description": "Skaffold is a tool which is non-opinionated about the CI/CD tool you should use and acts as a platform agnostic solution for both development and deploying to production.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 04:44:06", "type": "section_detail", "page_metadata": {"twitter:card": "summary", "article:section": "docs", "generator": "Hugo 0.99.1", "og:description": "Contributed by: @tvvignesh\nSkaffold is a tool which is non-opinionated about the CI/CD tool you should use and acts as a platform agnostic solution for both development and deploying to production.\nTo facilitate building and deploying images in CI/CD, skaffold offers docker images which you can build on top of. If that doesn’t work for your use-case, you can make your own Dockerfile and pull in skaffold and its dependencies using curl.", "ogSiteName": "Skaffold", "twitter:title": "Using Skaffold for CI/CD with GitLab", "modifiedTime": "2025-01-23T10:14:58-05:00", "twitter:description": "Contributed by: @tvvignesh\nSkaffold is a tool which is non-opinionated about the CI/CD tool you should use and acts as a platform agnostic solution for both development and deploying to production.\nTo facilitate building and deploying images in CI/CD, skaffold offers docker images which you can build on top of. If that doesn’t work for your use-case, you can make your own Dockerfile and pull in skaffold and its dependencies using curl.", "og:title": "Using Skaffold for CI/CD with GitLab", "robots": "index, follow", "description": "Contributed by: @tvvignesh\nSkaffold is a tool which is non-opinionated about the CI/CD tool you should use and acts as a platform agnostic solution …", "ogTitle": "Using Skaffold for CI/CD with GitLab", "ogDescription": "Contributed by: @tvvignesh\nSkaffold is a tool which is non-opinionated about the CI/CD tool you should use and acts as a platform agnostic solution for both development and deploying to production.\nTo facilitate building and deploying images in CI/CD, skaffold offers docker images which you can build on top of. If that doesn’t work for your use-case, you can make your own Dockerfile and pull in skaffold and its dependencies using curl.", "ogUrl": "https://skaffold.dev/docs/tutorials/ci_cd/", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:url": "https://skaffold.dev/docs/tutorials/ci_cd/", "language": "en", "og:type": "article", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:site_name": "Skaffold", "title": "Using Skaffold for CI/CD with GitLab | Skaffold", "scrapeId": "48250aa1-b660-4849-9323-fd2c5a4e4934", "sourceURL": "https://skaffold.dev/docs/tutorials/ci_cd", "url": "https://skaffold.dev/docs/tutorials/ci_cd/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I step 7: setting up authentication with the registry in skaffold?\n\nAssistant: To step 7: setting up authentication with the registry in skaffold, here's what you do:\nAs you may already know, there are a lot of places where you can host images namely Docker Hub, GCR, GitLab Registry, Quay and so on.\n\nThe way you authenticate is specific to the registry provider of your choice. For eg. you may choose to do a username-password authentication with DockerHub or authenticate using service accounts in GCR and so on.\n\n**NOTE:** Username-Password authentication is not recommended for CI/CD pipelines since they can be easily compromised and can sometimes be logged as well.\n\nWe will be using GCR in our example..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/tutorials/ci_cd", "title": "Using Skaffold for CI/CD with GitLab", "description": "Skaffold is a tool which is non-opinionated about the CI/CD tool you should use and acts as a platform agnostic solution for both development and deploying to production.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 04:44:06", "type": "section_detail", "page_metadata": {"twitter:card": "summary", "article:section": "docs", "generator": "Hugo 0.99.1", "og:description": "Contributed by: @tvvignesh\nSkaffold is a tool which is non-opinionated about the CI/CD tool you should use and acts as a platform agnostic solution for both development and deploying to production.\nTo facilitate building and deploying images in CI/CD, skaffold offers docker images which you can build on top of. If that doesn’t work for your use-case, you can make your own Dockerfile and pull in skaffold and its dependencies using curl.", "ogSiteName": "Skaffold", "twitter:title": "Using Skaffold for CI/CD with GitLab", "modifiedTime": "2025-01-23T10:14:58-05:00", "twitter:description": "Contributed by: @tvvignesh\nSkaffold is a tool which is non-opinionated about the CI/CD tool you should use and acts as a platform agnostic solution for both development and deploying to production.\nTo facilitate building and deploying images in CI/CD, skaffold offers docker images which you can build on top of. If that doesn’t work for your use-case, you can make your own Dockerfile and pull in skaffold and its dependencies using curl.", "og:title": "Using Skaffold for CI/CD with GitLab", "robots": "index, follow", "description": "Contributed by: @tvvignesh\nSkaffold is a tool which is non-opinionated about the CI/CD tool you should use and acts as a platform agnostic solution …", "ogTitle": "Using Skaffold for CI/CD with GitLab", "ogDescription": "Contributed by: @tvvignesh\nSkaffold is a tool which is non-opinionated about the CI/CD tool you should use and acts as a platform agnostic solution for both development and deploying to production.\nTo facilitate building and deploying images in CI/CD, skaffold offers docker images which you can build on top of. If that doesn’t work for your use-case, you can make your own Dockerfile and pull in skaffold and its dependencies using curl.", "ogUrl": "https://skaffold.dev/docs/tutorials/ci_cd/", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:url": "https://skaffold.dev/docs/tutorials/ci_cd/", "language": "en", "og:type": "article", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:site_name": "Skaffold", "title": "Using Skaffold for CI/CD with GitLab | Skaffold", "scrapeId": "48250aa1-b660-4849-9323-fd2c5a4e4934", "sourceURL": "https://skaffold.dev/docs/tutorials/ci_cd", "url": "https://skaffold.dev/docs/tutorials/ci_cd/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I step 8: using dind service (optional) in skaffold?\n\nAssistant: To step 8: using dind service (optional) in skaffold, here's what you do:\nDocker images are typically not cached if you are running your builds/pipeline within Docker containers(i.e. DIND or Docker-in-Docker) and this can be very slow since your CI runner has to download the images again and again for every build even if some layers are already available.\n\n**NOTE:** If you are not looking to run your pipeline within Docker containers or are fine with slower pipelines/pipelines without caching, you can completely skip this step and proceed to Step 9.\n\nTo avoid this, we can set up a DIND service in our cluster to enable caching and storage of image layers for us. A sample dind deployment file as deployed in Kubernetes can look something like this:\n\n```yml\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n    name: my-dind\nspec:\n    selector:\n        matchLabels:\n            app: my-dind\n    strategy:\n        type: Recreate\n    template:\n        metadata:\n            labels:\n                app: my-dind\n        spec:\n            containers:\n                - image: docker:dind\n                  imagePullPolicy: Always\n                  name: my-dind\n                  ports:\n                      - containerPort: 2375\n                        name: my-dind\n                  env:\n                      - name: DOCKER_HOST\n                        value: tcp://localhost:2375\n                      - name: DOCKER_TLS_CERTDIR\n                        value: ''\n                  securityContext:\n                      privileged: true\n                  volumeMounts:\n                      - name: my-dind-storage\n                        mountPath: /var/lib/docker\n                  resources:\n                      limits:\n                          memory: '2Gi'\n                          cpu: '1000m'\n                      requests:\n                          memory: '1Gi'\n                          cpu: '250m'\n            volumes:\n                - name: my-dind-storage\n                  persistentVolumeClaim:\n                      claimName: my-dind-pv-claim\n```\n\nService File:\n\n```yml\napiVersion: v1\nkind: Service\nmetadata:\n    name: my-dind-svc\nspec:\n    selector:\n        app: my-dind\n    type: LoadBalancer\n    ports:\n        - port: 2375\n          targetPort: 2375\n          protocol: TCP\n          name: http\n```\n\n**PV Claim:**\n\n```yml\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n    name: my-dind-pv-claim\n    labels:\n        app: my-dind\nspec:\n    accessModes:\n        - ReadWriteOnce\n    resources:\n        requests:\n            storage: 200Gi\n    storageClassName: standard\n```\n\nAnd we would need to pass the URL to the DIND service when we do builds in the pipeline and all the caching will happen in the DIND storage speeding up the pipeline a lot..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/tutorials/ci_cd", "title": "Using Skaffold for CI/CD with GitLab", "description": "Skaffold is a tool which is non-opinionated about the CI/CD tool you should use and acts as a platform agnostic solution for both development and deploying to production.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 04:44:06", "type": "section_detail", "page_metadata": {"twitter:card": "summary", "article:section": "docs", "generator": "Hugo 0.99.1", "og:description": "Contributed by: @tvvignesh\nSkaffold is a tool which is non-opinionated about the CI/CD tool you should use and acts as a platform agnostic solution for both development and deploying to production.\nTo facilitate building and deploying images in CI/CD, skaffold offers docker images which you can build on top of. If that doesn’t work for your use-case, you can make your own Dockerfile and pull in skaffold and its dependencies using curl.", "ogSiteName": "Skaffold", "twitter:title": "Using Skaffold for CI/CD with GitLab", "modifiedTime": "2025-01-23T10:14:58-05:00", "twitter:description": "Contributed by: @tvvignesh\nSkaffold is a tool which is non-opinionated about the CI/CD tool you should use and acts as a platform agnostic solution for both development and deploying to production.\nTo facilitate building and deploying images in CI/CD, skaffold offers docker images which you can build on top of. If that doesn’t work for your use-case, you can make your own Dockerfile and pull in skaffold and its dependencies using curl.", "og:title": "Using Skaffold for CI/CD with GitLab", "robots": "index, follow", "description": "Contributed by: @tvvignesh\nSkaffold is a tool which is non-opinionated about the CI/CD tool you should use and acts as a platform agnostic solution …", "ogTitle": "Using Skaffold for CI/CD with GitLab", "ogDescription": "Contributed by: @tvvignesh\nSkaffold is a tool which is non-opinionated about the CI/CD tool you should use and acts as a platform agnostic solution for both development and deploying to production.\nTo facilitate building and deploying images in CI/CD, skaffold offers docker images which you can build on top of. If that doesn’t work for your use-case, you can make your own Dockerfile and pull in skaffold and its dependencies using curl.", "ogUrl": "https://skaffold.dev/docs/tutorials/ci_cd/", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:url": "https://skaffold.dev/docs/tutorials/ci_cd/", "language": "en", "og:type": "article", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:site_name": "Skaffold", "title": "Using Skaffold for CI/CD with GitLab | Skaffold", "scrapeId": "48250aa1-b660-4849-9323-fd2c5a4e4934", "sourceURL": "https://skaffold.dev/docs/tutorials/ci_cd", "url": "https://skaffold.dev/docs/tutorials/ci_cd/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I step 9: getting the ci pipeline setup in skaffold?\n\nAssistant: To step 9: getting the ci pipeline setup in skaffold, here's what you do:\nNow that we have Skaffold ready and working locally, we look at the CI pipeline.\n\nHere is a sample pipeline using GitLab CI and if you are new to it, you can refer the docs here. This pipeline might look complicated at first glance, but most of it related to configuring access for deploying to GCP and configure GitLab’s Docker-in-Docker support to cache artifacts between builds. What is important to note is that we use Skaffold to do all the builds and deployments.\n\n```yml\nstages:\n    - my-stage\n\nmy-job:\n    image:\n        name: gcr.io/k8s-skaffold/skaffold:v1.15.0\n    tags:\n        - development\n    stage: my-stage\n    retry: 2\n    script:\n        - echo \"$GCP_DEV_SERVICE_KEY\" > gcloud-service-key.json\n        - gcloud auth activate-service-account --key-file gcloud-service-key.json\n        - gcloud config set project $PROJECT_DEV_NAME\n        - gcloud config set compute/zone $PROJECT_DEV_REGION\n        - gcloud container clusters get-credentials $CLUSTER_DEV_NAME\n        - kubectl config get-contexts\n        - DOCKER_HOST=\"$DIND_DEV\" NPM_REGISTRY=\"$NPM_REGISTRY_DEV\" NPM_TOKEN=\"$NPM_TOKEN_DEV\" skaffold run --kube-context $CLUSTER_DEV_CONTEXT -n default -l skaffold.dev/run-id=deploydep -p dev-svc --status-check\n    only:\n        refs:\n            - main\n```\n\nSo, ultimately our GitLab CI pipeline does not know anything about the helm charts or build strategy or any deployment methods and relies completely on skaffold to do the job for us..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/tutorials/ci_cd", "title": "Using Skaffold for CI/CD with GitLab", "description": "Skaffold is a tool which is non-opinionated about the CI/CD tool you should use and acts as a platform agnostic solution for both development and deploying to production.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 04:44:06", "type": "section_detail", "page_metadata": {"twitter:card": "summary", "article:section": "docs", "generator": "Hugo 0.99.1", "og:description": "Contributed by: @tvvignesh\nSkaffold is a tool which is non-opinionated about the CI/CD tool you should use and acts as a platform agnostic solution for both development and deploying to production.\nTo facilitate building and deploying images in CI/CD, skaffold offers docker images which you can build on top of. If that doesn’t work for your use-case, you can make your own Dockerfile and pull in skaffold and its dependencies using curl.", "ogSiteName": "Skaffold", "twitter:title": "Using Skaffold for CI/CD with GitLab", "modifiedTime": "2025-01-23T10:14:58-05:00", "twitter:description": "Contributed by: @tvvignesh\nSkaffold is a tool which is non-opinionated about the CI/CD tool you should use and acts as a platform agnostic solution for both development and deploying to production.\nTo facilitate building and deploying images in CI/CD, skaffold offers docker images which you can build on top of. If that doesn’t work for your use-case, you can make your own Dockerfile and pull in skaffold and its dependencies using curl.", "og:title": "Using Skaffold for CI/CD with GitLab", "robots": "index, follow", "description": "Contributed by: @tvvignesh\nSkaffold is a tool which is non-opinionated about the CI/CD tool you should use and acts as a platform agnostic solution …", "ogTitle": "Using Skaffold for CI/CD with GitLab", "ogDescription": "Contributed by: @tvvignesh\nSkaffold is a tool which is non-opinionated about the CI/CD tool you should use and acts as a platform agnostic solution for both development and deploying to production.\nTo facilitate building and deploying images in CI/CD, skaffold offers docker images which you can build on top of. If that doesn’t work for your use-case, you can make your own Dockerfile and pull in skaffold and its dependencies using curl.", "ogUrl": "https://skaffold.dev/docs/tutorials/ci_cd/", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:url": "https://skaffold.dev/docs/tutorials/ci_cd/", "language": "en", "og:type": "article", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:site_name": "Skaffold", "title": "Using Skaffold for CI/CD with GitLab | Skaffold", "scrapeId": "48250aa1-b660-4849-9323-fd2c5a4e4934", "sourceURL": "https://skaffold.dev/docs/tutorials/ci_cd", "url": "https://skaffold.dev/docs/tutorials/ci_cd/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I step 10: that’s all folks in skaffold?\n\nAssistant: To step 10: that’s all folks in skaffold, here's what you do:\nIf all went well so far, you can try pushing a commit and see your pipeline running, picking up the changes, building and pushing the image and also deploying the same.\n\nHope this post was informative. Good luck with your journey with Skaffold..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/tutorials/ci_cd", "title": "Using Skaffold for CI/CD with GitLab", "description": "Skaffold is a tool which is non-opinionated about the CI/CD tool you should use and acts as a platform agnostic solution for both development and deploying to production.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 04:44:06", "type": "section_detail", "page_metadata": {"twitter:card": "summary", "article:section": "docs", "generator": "Hugo 0.99.1", "og:description": "Contributed by: @tvvignesh\nSkaffold is a tool which is non-opinionated about the CI/CD tool you should use and acts as a platform agnostic solution for both development and deploying to production.\nTo facilitate building and deploying images in CI/CD, skaffold offers docker images which you can build on top of. If that doesn’t work for your use-case, you can make your own Dockerfile and pull in skaffold and its dependencies using curl.", "ogSiteName": "Skaffold", "twitter:title": "Using Skaffold for CI/CD with GitLab", "modifiedTime": "2025-01-23T10:14:58-05:00", "twitter:description": "Contributed by: @tvvignesh\nSkaffold is a tool which is non-opinionated about the CI/CD tool you should use and acts as a platform agnostic solution for both development and deploying to production.\nTo facilitate building and deploying images in CI/CD, skaffold offers docker images which you can build on top of. If that doesn’t work for your use-case, you can make your own Dockerfile and pull in skaffold and its dependencies using curl.", "og:title": "Using Skaffold for CI/CD with GitLab", "robots": "index, follow", "description": "Contributed by: @tvvignesh\nSkaffold is a tool which is non-opinionated about the CI/CD tool you should use and acts as a platform agnostic solution …", "ogTitle": "Using Skaffold for CI/CD with GitLab", "ogDescription": "Contributed by: @tvvignesh\nSkaffold is a tool which is non-opinionated about the CI/CD tool you should use and acts as a platform agnostic solution for both development and deploying to production.\nTo facilitate building and deploying images in CI/CD, skaffold offers docker images which you can build on top of. If that doesn’t work for your use-case, you can make your own Dockerfile and pull in skaffold and its dependencies using curl.", "ogUrl": "https://skaffold.dev/docs/tutorials/ci_cd/", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:url": "https://skaffold.dev/docs/tutorials/ci_cd/", "language": "en", "og:type": "article", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:site_name": "Skaffold", "title": "Using Skaffold for CI/CD with GitLab | Skaffold", "scrapeId": "48250aa1-b660-4849-9323-fd2c5a4e4934", "sourceURL": "https://skaffold.dev/docs/tutorials/ci_cd", "url": "https://skaffold.dev/docs/tutorials/ci_cd/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you give me some code examples for Using Skaffold for CI/CD with GitLab in skaffold?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Dockerfile for nginx**:\n\n```yaml\nFROM nginxinc/nginx-unprivileged:1.19.3-alpine\nWORKDIR /app/server\n\nCOPY ./web ./web\n\nEXPOSE 8080\n\nCMD [ \"/bin/bash\", \"-c\", \"nginx -g 'daemon off;'\" ]\n```\n\nThis snippet shows you how to dockerfile for nginx, which is an important aspect of using skaffold for ci/cd with gitlab.\n\n**skaffold.yaml for Helm deployment**:\n\n```yaml\napiVersion: skaffold/v2beta8\nkind: Config\nprofiles:\n  - name: my-profile-name\n    build:\n      artifacts:\n        - image: asia.gcr.io/my-project/my-image\n          docker:\n            buildArgs:\n              NPM_REGISTRY: '{{.NPM_REGISTRY}}'\n              NPM_TOKEN: '{{.NPM_TOKEN}}'\n    deploy:\n      helm:\n        releases:\n          - name: my-release\n            namespace: default\n            useHelmSecrets: true\n            chartPath: ./charts/my-chart\n            valuesFiles:\n              - ./deployment/dev/values.yaml\n              - ./deployment/dev/secrets.yaml\n            skipBuildDependencies: true\n        flags:\n          upgrade:\n            - --install\n\n```\n\nThis snippet shows you how to skaffold.yaml for helm deployment, which is an important aspect of using skaffold for ci/cd with gitlab.\n\n", "metadata": {"source_url": "https://skaffold.dev/docs/tutorials/ci_cd", "title": "Using Skaffold for CI/CD with GitLab", "description": "Skaffold is a tool which is non-opinionated about the CI/CD tool you should use and acts as a platform agnostic solution for both development and deploying to production.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 04:44:06", "type": "code_examples", "page_metadata": {"twitter:card": "summary", "article:section": "docs", "generator": "Hugo 0.99.1", "og:description": "Contributed by: @tvvignesh\nSkaffold is a tool which is non-opinionated about the CI/CD tool you should use and acts as a platform agnostic solution for both development and deploying to production.\nTo facilitate building and deploying images in CI/CD, skaffold offers docker images which you can build on top of. If that doesn’t work for your use-case, you can make your own Dockerfile and pull in skaffold and its dependencies using curl.", "ogSiteName": "Skaffold", "twitter:title": "Using Skaffold for CI/CD with GitLab", "modifiedTime": "2025-01-23T10:14:58-05:00", "twitter:description": "Contributed by: @tvvignesh\nSkaffold is a tool which is non-opinionated about the CI/CD tool you should use and acts as a platform agnostic solution for both development and deploying to production.\nTo facilitate building and deploying images in CI/CD, skaffold offers docker images which you can build on top of. If that doesn’t work for your use-case, you can make your own Dockerfile and pull in skaffold and its dependencies using curl.", "og:title": "Using Skaffold for CI/CD with GitLab", "robots": "index, follow", "description": "Contributed by: @tvvignesh\nSkaffold is a tool which is non-opinionated about the CI/CD tool you should use and acts as a platform agnostic solution …", "ogTitle": "Using Skaffold for CI/CD with GitLab", "ogDescription": "Contributed by: @tvvignesh\nSkaffold is a tool which is non-opinionated about the CI/CD tool you should use and acts as a platform agnostic solution for both development and deploying to production.\nTo facilitate building and deploying images in CI/CD, skaffold offers docker images which you can build on top of. If that doesn’t work for your use-case, you can make your own Dockerfile and pull in skaffold and its dependencies using curl.", "ogUrl": "https://skaffold.dev/docs/tutorials/ci_cd/", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:url": "https://skaffold.dev/docs/tutorials/ci_cd/", "language": "en", "og:type": "article", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:site_name": "Skaffold", "title": "Using Skaffold for CI/CD with GitLab | Skaffold", "scrapeId": "48250aa1-b660-4849-9323-fd2c5a4e4934", "sourceURL": "https://skaffold.dev/docs/tutorials/ci_cd", "url": "https://skaffold.dev/docs/tutorials/ci_cd/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: What are some tips for using Using Skaffold for CI/CD with GitLab in skaffold effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nUsername-Password authentication is not recommended for CI/CD pipelines since they can be easily compromised and can sometimes be logged as well.\n\nIf you are running Skaffold using the Kubernetes executor, make sure that you are running the runner with appropriate permissions or pod security policies.\n\nIf you are not looking to run your pipeline within Docker containers or are fine with slower pipelines/pipelines without caching, you can completely skip the DIND service setup.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://skaffold.dev/docs/tutorials/ci_cd", "title": "Using Skaffold for CI/CD with GitLab", "description": "Skaffold is a tool which is non-opinionated about the CI/CD tool you should use and acts as a platform agnostic solution for both development and deploying to production.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 04:44:06", "type": "best_practices", "page_metadata": {"twitter:card": "summary", "article:section": "docs", "generator": "Hugo 0.99.1", "og:description": "Contributed by: @tvvignesh\nSkaffold is a tool which is non-opinionated about the CI/CD tool you should use and acts as a platform agnostic solution for both development and deploying to production.\nTo facilitate building and deploying images in CI/CD, skaffold offers docker images which you can build on top of. If that doesn’t work for your use-case, you can make your own Dockerfile and pull in skaffold and its dependencies using curl.", "ogSiteName": "Skaffold", "twitter:title": "Using Skaffold for CI/CD with GitLab", "modifiedTime": "2025-01-23T10:14:58-05:00", "twitter:description": "Contributed by: @tvvignesh\nSkaffold is a tool which is non-opinionated about the CI/CD tool you should use and acts as a platform agnostic solution for both development and deploying to production.\nTo facilitate building and deploying images in CI/CD, skaffold offers docker images which you can build on top of. If that doesn’t work for your use-case, you can make your own Dockerfile and pull in skaffold and its dependencies using curl.", "og:title": "Using Skaffold for CI/CD with GitLab", "robots": "index, follow", "description": "Contributed by: @tvvignesh\nSkaffold is a tool which is non-opinionated about the CI/CD tool you should use and acts as a platform agnostic solution …", "ogTitle": "Using Skaffold for CI/CD with GitLab", "ogDescription": "Contributed by: @tvvignesh\nSkaffold is a tool which is non-opinionated about the CI/CD tool you should use and acts as a platform agnostic solution for both development and deploying to production.\nTo facilitate building and deploying images in CI/CD, skaffold offers docker images which you can build on top of. If that doesn’t work for your use-case, you can make your own Dockerfile and pull in skaffold and its dependencies using curl.", "ogUrl": "https://skaffold.dev/docs/tutorials/ci_cd/", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "og:url": "https://skaffold.dev/docs/tutorials/ci_cd/", "language": "en", "og:type": "article", "article:modified_time": "2025-01-23T10:14:58-05:00", "og:site_name": "Skaffold", "title": "Using Skaffold for CI/CD with GitLab | Skaffold", "scrapeId": "48250aa1-b660-4849-9323-fd2c5a4e4934", "sourceURL": "https://skaffold.dev/docs/tutorials/ci_cd", "url": "https://skaffold.dev/docs/tutorials/ci_cd/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what Skaffold API is in skaffold?\n\nAssistant: Sure, I'd be happy to explain Skaffold API in skaffold.\n\n# Skaffold API\n\nWhen running skaffold dev or skaffold debug, Skaffold starts a server that exposes an API over the lifetime of the Skaffold process. This API is the primary way tools like IDEs integrate with Skaffold for retrieving information about the pipeline and for controlling the phases in the pipeline.Here's a quick rundown of what this is about:\n\n## Connecting to the Skaffold API\n\nThe Skaffold API is gRPC based, and it is also exposed via the gRPC gateway as a JSON over HTTP service.\n\nThe API can be enabled via setting the --rpc-port or --rpc-http-port flags (or both) depending on whether you want to enable the gRPC API or the HTTP REST API.\n\n#### Note\n\nThe --enable-rpc flag is now deprecated in favor of --rpc-port and --rpc-http-port flags.\n\nFor reference, we generate the server’s gRPC service definitions and message protos as well as the Swagger based HTTP API Spec.\n\n## gRPC Server\n\nThe gRPC API can be started by specifying the --rpc-port flag. If the specified port is not available, Skaffold will exit with failure.\n\n### HTTP server\n\nThe HTTP REST API can be started by specifying the --rpc-http-port flag. If the specified port is not available, Skaffold will exit with failure.\n\nStarting the HTTP REST API will also start the gRPC API as it proxies the requests to the gRPC API. By default, Skaffold chooses a random available port for gRPC, but it can be customized.\n\n## Creating a gRPC Client\n\nTo connect to the gRPC server at the specified port, create a client using the following code snippet.\n\n#### Note\n\nThe skaffold gRPC server is not compatible with HTTPS, so connections need to be marked as insecure with grpc.WithInsecure().\n\n```golang\nimport (\n  \"log\"\n  pb \"github.com/GoogleContainerTools/skaffold/proto/v1\"\n  \"google.golang.org/grpc\"\n)\n\nfunc main(){\n  conn, err := grpc.Dial(\"localhost:50051\", grpc.WithInsecure())\n  if err != nil {\n    log.Fatalf(\"fail to dial: %v\", err)\n  }\n  defer conn.Close()\n  client := pb.NewSkaffoldServiceClient(conn)\n}\n```\n\n## API Structure\n\nSkaffold’s API exposes the three main endpoints:\n\n- Event API - continuous stream of lifecycle events\n- State API - retrieve the current state\n- Control API - control build/deploy/sync\n\n## Event API\n\nSkaffold provides a continuous development mode, skaffold dev, which rebuilds and redeploys your application on changes. In a single development loop, one or more container images may be built and deployed.\n\nSkaffold exposes events for clients to be notified when phases within a development loop start, succeed, or fail. Tools that integrate with Skaffold can use these events to kick off parts of a development workflow depending on them.\n\nExample scenarios:\n\n- port-forwarding events are used by Cloud Code to automatically attach debuggers to running containers.\n- using an event indicating a frontend service has been deployed and port-forwarded successfully to kick off a suite of Selenium tests against the newly deployed service.\n\n**Event API Contract**\n\n| protocol | endpoint | encoding |\n| --- | --- | --- |\n| HTTP | `http://localhost:{HTTP_RPC_PORT}/v1/events` | newline separated JSON using chunk transfer encoding over HTTP |\n| gRPC | `client.Events(ctx)` method on the SkaffoldService | protobuf 3 over HTTP |\n\n## State API\n\nThe State API provides a snapshot of the current state of the following components:\n\n- build state per artifacts\n- deploy state\n- file sync state\n- status check state per resource\n- port-forwarded resources\n\n**State API Contract**\n\n| protocol | endpoint | encoding |\n| --- | --- | --- |\n| HTTP | `http://localhost:{HTTP_RPC_PORT}/v1/state` | newline separated JSON using chunk transfer encoding over HTTP |\n| gRPC | `client.GetState(ctx)` method on the SkaffoldService | protobuf 3 over HTTP |\n\n## Control API\n\nBy default, skaffold dev will automatically build artifacts, deploy manifests and sync files on every source code change. However, this behavior can be paused and individual actions can be gated off by user input through the Control API.\n\nWith this API, users can tell Skaffold to wait for user input before performing any of these actions, even if the requisite files were changed on the filesystem. By doing so, users can “queue up” changes while they are iterating locally, and then have Skaffold rebuild and redeploy only when asked. This can be very useful when builds are happening more frequently than desired, when builds or deploys take a long time or are otherwise very costly, or when users want to integrate other tools with skaffold dev.\n\nThe automation can be turned off or on using the Control API, or with auto-build flag for building, auto-deploy flag for deploys, and the auto-sync flag for file sync. If automation is turned off for a phase, Skaffold will wait for a request to the Control API before executing the associated action.\n\nEach time a request is sent to the Control API by the user, the specified actions in the payload are executed immediately. This means that even if there are new file changes, Skaffold will wait for another user request before executing any of the given actions again.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/design/api", "title": "Skaffold API", "description": "When running skaffold dev or skaffold debug, Skaffold starts a server that exposes an API over the lifetime of the Skaffold process. This API is the primary way tools like IDEs integrate with Skaffold for retrieving information about the pipeline and for controlling the phases in the pipeline.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 04:56:32", "type": "overview", "page_metadata": {"twitter:description": "When running skaffold dev or skaffold debug, Skaffold starts a server that exposes an API over the lifetime of the Skaffold process. Besides the CLI, this API is the primary way tools like IDEs integrate with Skaffold for retrieving information about the pipeline and for controlling the phases in the pipeline.\nTo retrieve information about the Skaffold pipeline, the Skaffold API provides two main functionalities:\n  A streaming event log created from the different phases in a pipeline run, and", "og:url": "https://skaffold.dev/docs/design/api/", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "title": "Skaffold API | Skaffold", "ogSiteName": "Skaffold", "ogDescription": "When running skaffold dev or skaffold debug, Skaffold starts a server that exposes an API over the lifetime of the Skaffold process. Besides the CLI, this API is the primary way tools like IDEs integrate with Skaffold for retrieving information about the pipeline and for controlling the phases in the pipeline.\nTo retrieve information about the Skaffold pipeline, the Skaffold API provides two main functionalities:\n  A streaming event log created from the different phases in a pipeline run, and", "generator": "Hugo 0.99.1", "robots": "index, follow", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "language": "en", "modifiedTime": "2025-01-23T10:14:58-05:00", "description": "When running skaffold dev or skaffold debug,\nSkaffold starts a server that exposes an API over the lifetime of the Skaffold process.\nBesides the CLI, …", "og:description": "When running skaffold dev or skaffold debug, Skaffold starts a server that exposes an API over the lifetime of the Skaffold process. Besides the CLI, this API is the primary way tools like IDEs integrate with Skaffold for retrieving information about the pipeline and for controlling the phases in the pipeline.\nTo retrieve information about the Skaffold pipeline, the Skaffold API provides two main functionalities:\n  A streaming event log created from the different phases in a pipeline run, and", "og:type": "article", "ogUrl": "https://skaffold.dev/docs/design/api/", "article:section": "docs", "article:modified_time": "2025-01-23T10:14:58-05:00", "twitter:title": "Skaffold API", "og:site_name": "Skaffold", "ogTitle": "Skaffold API", "twitter:card": "summary", "og:title": "Skaffold API", "scrapeId": "64da871c-e6e5-4c84-8d73-4579b914152c", "sourceURL": "https://skaffold.dev/docs/design/api", "url": "https://skaffold.dev/docs/design/api/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I connecting to the skaffold api in skaffold?\n\nAssistant: To connecting to the skaffold api in skaffold, here's what you do:\nThe Skaffold API is gRPC based, and it is also exposed via the gRPC gateway as a JSON over HTTP service.\n\nThe API can be enabled via setting the --rpc-port or --rpc-http-port flags (or both) depending on whether you want to enable the gRPC API or the HTTP REST API.\n\n#### Note\n\nThe --enable-rpc flag is now deprecated in favor of --rpc-port and --rpc-http-port flags.\n\nFor reference, we generate the server’s gRPC service definitions and message protos as well as the Swagger based HTTP API Spec..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/design/api", "title": "Skaffold API", "description": "When running skaffold dev or skaffold debug, Skaffold starts a server that exposes an API over the lifetime of the Skaffold process. This API is the primary way tools like IDEs integrate with Skaffold for retrieving information about the pipeline and for controlling the phases in the pipeline.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 04:56:32", "type": "section_detail", "page_metadata": {"twitter:description": "When running skaffold dev or skaffold debug, Skaffold starts a server that exposes an API over the lifetime of the Skaffold process. Besides the CLI, this API is the primary way tools like IDEs integrate with Skaffold for retrieving information about the pipeline and for controlling the phases in the pipeline.\nTo retrieve information about the Skaffold pipeline, the Skaffold API provides two main functionalities:\n  A streaming event log created from the different phases in a pipeline run, and", "og:url": "https://skaffold.dev/docs/design/api/", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "title": "Skaffold API | Skaffold", "ogSiteName": "Skaffold", "ogDescription": "When running skaffold dev or skaffold debug, Skaffold starts a server that exposes an API over the lifetime of the Skaffold process. Besides the CLI, this API is the primary way tools like IDEs integrate with Skaffold for retrieving information about the pipeline and for controlling the phases in the pipeline.\nTo retrieve information about the Skaffold pipeline, the Skaffold API provides two main functionalities:\n  A streaming event log created from the different phases in a pipeline run, and", "generator": "Hugo 0.99.1", "robots": "index, follow", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "language": "en", "modifiedTime": "2025-01-23T10:14:58-05:00", "description": "When running skaffold dev or skaffold debug,\nSkaffold starts a server that exposes an API over the lifetime of the Skaffold process.\nBesides the CLI, …", "og:description": "When running skaffold dev or skaffold debug, Skaffold starts a server that exposes an API over the lifetime of the Skaffold process. Besides the CLI, this API is the primary way tools like IDEs integrate with Skaffold for retrieving information about the pipeline and for controlling the phases in the pipeline.\nTo retrieve information about the Skaffold pipeline, the Skaffold API provides two main functionalities:\n  A streaming event log created from the different phases in a pipeline run, and", "og:type": "article", "ogUrl": "https://skaffold.dev/docs/design/api/", "article:section": "docs", "article:modified_time": "2025-01-23T10:14:58-05:00", "twitter:title": "Skaffold API", "og:site_name": "Skaffold", "ogTitle": "Skaffold API", "twitter:card": "summary", "og:title": "Skaffold API", "scrapeId": "64da871c-e6e5-4c84-8d73-4579b914152c", "sourceURL": "https://skaffold.dev/docs/design/api", "url": "https://skaffold.dev/docs/design/api/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I grpc server in skaffold?\n\nAssistant: To grpc server in skaffold, here's what you do:\nThe gRPC API can be started by specifying the --rpc-port flag. If the specified port is not available, Skaffold will exit with failure.\n\n### HTTP server\n\nThe HTTP REST API can be started by specifying the --rpc-http-port flag. If the specified port is not available, Skaffold will exit with failure.\n\nStarting the HTTP REST API will also start the gRPC API as it proxies the requests to the gRPC API. By default, Skaffold chooses a random available port for gRPC, but it can be customized..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/design/api", "title": "Skaffold API", "description": "When running skaffold dev or skaffold debug, Skaffold starts a server that exposes an API over the lifetime of the Skaffold process. This API is the primary way tools like IDEs integrate with Skaffold for retrieving information about the pipeline and for controlling the phases in the pipeline.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 04:56:32", "type": "section_detail", "page_metadata": {"twitter:description": "When running skaffold dev or skaffold debug, Skaffold starts a server that exposes an API over the lifetime of the Skaffold process. Besides the CLI, this API is the primary way tools like IDEs integrate with Skaffold for retrieving information about the pipeline and for controlling the phases in the pipeline.\nTo retrieve information about the Skaffold pipeline, the Skaffold API provides two main functionalities:\n  A streaming event log created from the different phases in a pipeline run, and", "og:url": "https://skaffold.dev/docs/design/api/", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "title": "Skaffold API | Skaffold", "ogSiteName": "Skaffold", "ogDescription": "When running skaffold dev or skaffold debug, Skaffold starts a server that exposes an API over the lifetime of the Skaffold process. Besides the CLI, this API is the primary way tools like IDEs integrate with Skaffold for retrieving information about the pipeline and for controlling the phases in the pipeline.\nTo retrieve information about the Skaffold pipeline, the Skaffold API provides two main functionalities:\n  A streaming event log created from the different phases in a pipeline run, and", "generator": "Hugo 0.99.1", "robots": "index, follow", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "language": "en", "modifiedTime": "2025-01-23T10:14:58-05:00", "description": "When running skaffold dev or skaffold debug,\nSkaffold starts a server that exposes an API over the lifetime of the Skaffold process.\nBesides the CLI, …", "og:description": "When running skaffold dev or skaffold debug, Skaffold starts a server that exposes an API over the lifetime of the Skaffold process. Besides the CLI, this API is the primary way tools like IDEs integrate with Skaffold for retrieving information about the pipeline and for controlling the phases in the pipeline.\nTo retrieve information about the Skaffold pipeline, the Skaffold API provides two main functionalities:\n  A streaming event log created from the different phases in a pipeline run, and", "og:type": "article", "ogUrl": "https://skaffold.dev/docs/design/api/", "article:section": "docs", "article:modified_time": "2025-01-23T10:14:58-05:00", "twitter:title": "Skaffold API", "og:site_name": "Skaffold", "ogTitle": "Skaffold API", "twitter:card": "summary", "og:title": "Skaffold API", "scrapeId": "64da871c-e6e5-4c84-8d73-4579b914152c", "sourceURL": "https://skaffold.dev/docs/design/api", "url": "https://skaffold.dev/docs/design/api/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I creating a grpc client in skaffold?\n\nAssistant: To creating a grpc client in skaffold, here's what you do:\nTo connect to the gRPC server at the specified port, create a client using the following code snippet.\n\n#### Note\n\nThe skaffold gRPC server is not compatible with HTTPS, so connections need to be marked as insecure with grpc.WithInsecure().\n\n```golang\nimport (\n  \"log\"\n  pb \"github.com/GoogleContainerTools/skaffold/proto/v1\"\n  \"google.golang.org/grpc\"\n)\n\nfunc main(){\n  conn, err := grpc.Dial(\"localhost:50051\", grpc.WithInsecure())\n  if err != nil {\n    log.Fatalf(\"fail to dial: %v\", err)\n  }\n  defer conn.Close()\n  client := pb.NewSkaffoldServiceClient(conn)\n}\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/design/api", "title": "Skaffold API", "description": "When running skaffold dev or skaffold debug, Skaffold starts a server that exposes an API over the lifetime of the Skaffold process. This API is the primary way tools like IDEs integrate with Skaffold for retrieving information about the pipeline and for controlling the phases in the pipeline.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 04:56:32", "type": "section_detail", "page_metadata": {"twitter:description": "When running skaffold dev or skaffold debug, Skaffold starts a server that exposes an API over the lifetime of the Skaffold process. Besides the CLI, this API is the primary way tools like IDEs integrate with Skaffold for retrieving information about the pipeline and for controlling the phases in the pipeline.\nTo retrieve information about the Skaffold pipeline, the Skaffold API provides two main functionalities:\n  A streaming event log created from the different phases in a pipeline run, and", "og:url": "https://skaffold.dev/docs/design/api/", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "title": "Skaffold API | Skaffold", "ogSiteName": "Skaffold", "ogDescription": "When running skaffold dev or skaffold debug, Skaffold starts a server that exposes an API over the lifetime of the Skaffold process. Besides the CLI, this API is the primary way tools like IDEs integrate with Skaffold for retrieving information about the pipeline and for controlling the phases in the pipeline.\nTo retrieve information about the Skaffold pipeline, the Skaffold API provides two main functionalities:\n  A streaming event log created from the different phases in a pipeline run, and", "generator": "Hugo 0.99.1", "robots": "index, follow", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "language": "en", "modifiedTime": "2025-01-23T10:14:58-05:00", "description": "When running skaffold dev or skaffold debug,\nSkaffold starts a server that exposes an API over the lifetime of the Skaffold process.\nBesides the CLI, …", "og:description": "When running skaffold dev or skaffold debug, Skaffold starts a server that exposes an API over the lifetime of the Skaffold process. Besides the CLI, this API is the primary way tools like IDEs integrate with Skaffold for retrieving information about the pipeline and for controlling the phases in the pipeline.\nTo retrieve information about the Skaffold pipeline, the Skaffold API provides two main functionalities:\n  A streaming event log created from the different phases in a pipeline run, and", "og:type": "article", "ogUrl": "https://skaffold.dev/docs/design/api/", "article:section": "docs", "article:modified_time": "2025-01-23T10:14:58-05:00", "twitter:title": "Skaffold API", "og:site_name": "Skaffold", "ogTitle": "Skaffold API", "twitter:card": "summary", "og:title": "Skaffold API", "scrapeId": "64da871c-e6e5-4c84-8d73-4579b914152c", "sourceURL": "https://skaffold.dev/docs/design/api", "url": "https://skaffold.dev/docs/design/api/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I api structure in skaffold?\n\nAssistant: To api structure in skaffold, here's what you do:\nSkaffold’s API exposes the three main endpoints:\n\n- Event API - continuous stream of lifecycle events\n- State API - retrieve the current state\n- Control API - control build/deploy/sync.\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/design/api", "title": "Skaffold API", "description": "When running skaffold dev or skaffold debug, Skaffold starts a server that exposes an API over the lifetime of the Skaffold process. This API is the primary way tools like IDEs integrate with Skaffold for retrieving information about the pipeline and for controlling the phases in the pipeline.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 04:56:32", "type": "section_detail", "page_metadata": {"twitter:description": "When running skaffold dev or skaffold debug, Skaffold starts a server that exposes an API over the lifetime of the Skaffold process. Besides the CLI, this API is the primary way tools like IDEs integrate with Skaffold for retrieving information about the pipeline and for controlling the phases in the pipeline.\nTo retrieve information about the Skaffold pipeline, the Skaffold API provides two main functionalities:\n  A streaming event log created from the different phases in a pipeline run, and", "og:url": "https://skaffold.dev/docs/design/api/", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "title": "Skaffold API | Skaffold", "ogSiteName": "Skaffold", "ogDescription": "When running skaffold dev or skaffold debug, Skaffold starts a server that exposes an API over the lifetime of the Skaffold process. Besides the CLI, this API is the primary way tools like IDEs integrate with Skaffold for retrieving information about the pipeline and for controlling the phases in the pipeline.\nTo retrieve information about the Skaffold pipeline, the Skaffold API provides two main functionalities:\n  A streaming event log created from the different phases in a pipeline run, and", "generator": "Hugo 0.99.1", "robots": "index, follow", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "language": "en", "modifiedTime": "2025-01-23T10:14:58-05:00", "description": "When running skaffold dev or skaffold debug,\nSkaffold starts a server that exposes an API over the lifetime of the Skaffold process.\nBesides the CLI, …", "og:description": "When running skaffold dev or skaffold debug, Skaffold starts a server that exposes an API over the lifetime of the Skaffold process. Besides the CLI, this API is the primary way tools like IDEs integrate with Skaffold for retrieving information about the pipeline and for controlling the phases in the pipeline.\nTo retrieve information about the Skaffold pipeline, the Skaffold API provides two main functionalities:\n  A streaming event log created from the different phases in a pipeline run, and", "og:type": "article", "ogUrl": "https://skaffold.dev/docs/design/api/", "article:section": "docs", "article:modified_time": "2025-01-23T10:14:58-05:00", "twitter:title": "Skaffold API", "og:site_name": "Skaffold", "ogTitle": "Skaffold API", "twitter:card": "summary", "og:title": "Skaffold API", "scrapeId": "64da871c-e6e5-4c84-8d73-4579b914152c", "sourceURL": "https://skaffold.dev/docs/design/api", "url": "https://skaffold.dev/docs/design/api/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I event api in skaffold?\n\nAssistant: To event api in skaffold, here's what you do:\nSkaffold provides a continuous development mode, skaffold dev, which rebuilds and redeploys your application on changes. In a single development loop, one or more container images may be built and deployed.\n\nSkaffold exposes events for clients to be notified when phases within a development loop start, succeed, or fail. Tools that integrate with Skaffold can use these events to kick off parts of a development workflow depending on them.\n\nExample scenarios:\n\n- port-forwarding events are used by Cloud Code to automatically attach debuggers to running containers.\n- using an event indicating a frontend service has been deployed and port-forwarded successfully to kick off a suite of Selenium tests against the newly deployed service.\n\n**Event API Contract**\n\n| protocol | endpoint | encoding |\n| --- | --- | --- |\n| HTTP | `http://localhost:{HTTP_RPC_PORT}/v1/events` | newline separated JSON using chunk transfer encoding over HTTP |\n| gRPC | `client.Events(ctx)` method on the SkaffoldService | protobuf 3 over HTTP |.\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/design/api", "title": "Skaffold API", "description": "When running skaffold dev or skaffold debug, Skaffold starts a server that exposes an API over the lifetime of the Skaffold process. This API is the primary way tools like IDEs integrate with Skaffold for retrieving information about the pipeline and for controlling the phases in the pipeline.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 04:56:32", "type": "section_detail", "page_metadata": {"twitter:description": "When running skaffold dev or skaffold debug, Skaffold starts a server that exposes an API over the lifetime of the Skaffold process. Besides the CLI, this API is the primary way tools like IDEs integrate with Skaffold for retrieving information about the pipeline and for controlling the phases in the pipeline.\nTo retrieve information about the Skaffold pipeline, the Skaffold API provides two main functionalities:\n  A streaming event log created from the different phases in a pipeline run, and", "og:url": "https://skaffold.dev/docs/design/api/", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "title": "Skaffold API | Skaffold", "ogSiteName": "Skaffold", "ogDescription": "When running skaffold dev or skaffold debug, Skaffold starts a server that exposes an API over the lifetime of the Skaffold process. Besides the CLI, this API is the primary way tools like IDEs integrate with Skaffold for retrieving information about the pipeline and for controlling the phases in the pipeline.\nTo retrieve information about the Skaffold pipeline, the Skaffold API provides two main functionalities:\n  A streaming event log created from the different phases in a pipeline run, and", "generator": "Hugo 0.99.1", "robots": "index, follow", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "language": "en", "modifiedTime": "2025-01-23T10:14:58-05:00", "description": "When running skaffold dev or skaffold debug,\nSkaffold starts a server that exposes an API over the lifetime of the Skaffold process.\nBesides the CLI, …", "og:description": "When running skaffold dev or skaffold debug, Skaffold starts a server that exposes an API over the lifetime of the Skaffold process. Besides the CLI, this API is the primary way tools like IDEs integrate with Skaffold for retrieving information about the pipeline and for controlling the phases in the pipeline.\nTo retrieve information about the Skaffold pipeline, the Skaffold API provides two main functionalities:\n  A streaming event log created from the different phases in a pipeline run, and", "og:type": "article", "ogUrl": "https://skaffold.dev/docs/design/api/", "article:section": "docs", "article:modified_time": "2025-01-23T10:14:58-05:00", "twitter:title": "Skaffold API", "og:site_name": "Skaffold", "ogTitle": "Skaffold API", "twitter:card": "summary", "og:title": "Skaffold API", "scrapeId": "64da871c-e6e5-4c84-8d73-4579b914152c", "sourceURL": "https://skaffold.dev/docs/design/api", "url": "https://skaffold.dev/docs/design/api/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I state api in skaffold?\n\nAssistant: To state api in skaffold, here's what you do:\nThe State API provides a snapshot of the current state of the following components:\n\n- build state per artifacts\n- deploy state\n- file sync state\n- status check state per resource\n- port-forwarded resources\n\n**State API Contract**\n\n| protocol | endpoint | encoding |\n| --- | --- | --- |\n| HTTP | `http://localhost:{HTTP_RPC_PORT}/v1/state` | newline separated JSON using chunk transfer encoding over HTTP |\n| gRPC | `client.GetState(ctx)` method on the SkaffoldService | protobuf 3 over HTTP |.\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/design/api", "title": "Skaffold API", "description": "When running skaffold dev or skaffold debug, Skaffold starts a server that exposes an API over the lifetime of the Skaffold process. This API is the primary way tools like IDEs integrate with Skaffold for retrieving information about the pipeline and for controlling the phases in the pipeline.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 04:56:32", "type": "section_detail", "page_metadata": {"twitter:description": "When running skaffold dev or skaffold debug, Skaffold starts a server that exposes an API over the lifetime of the Skaffold process. Besides the CLI, this API is the primary way tools like IDEs integrate with Skaffold for retrieving information about the pipeline and for controlling the phases in the pipeline.\nTo retrieve information about the Skaffold pipeline, the Skaffold API provides two main functionalities:\n  A streaming event log created from the different phases in a pipeline run, and", "og:url": "https://skaffold.dev/docs/design/api/", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "title": "Skaffold API | Skaffold", "ogSiteName": "Skaffold", "ogDescription": "When running skaffold dev or skaffold debug, Skaffold starts a server that exposes an API over the lifetime of the Skaffold process. Besides the CLI, this API is the primary way tools like IDEs integrate with Skaffold for retrieving information about the pipeline and for controlling the phases in the pipeline.\nTo retrieve information about the Skaffold pipeline, the Skaffold API provides two main functionalities:\n  A streaming event log created from the different phases in a pipeline run, and", "generator": "Hugo 0.99.1", "robots": "index, follow", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "language": "en", "modifiedTime": "2025-01-23T10:14:58-05:00", "description": "When running skaffold dev or skaffold debug,\nSkaffold starts a server that exposes an API over the lifetime of the Skaffold process.\nBesides the CLI, …", "og:description": "When running skaffold dev or skaffold debug, Skaffold starts a server that exposes an API over the lifetime of the Skaffold process. Besides the CLI, this API is the primary way tools like IDEs integrate with Skaffold for retrieving information about the pipeline and for controlling the phases in the pipeline.\nTo retrieve information about the Skaffold pipeline, the Skaffold API provides two main functionalities:\n  A streaming event log created from the different phases in a pipeline run, and", "og:type": "article", "ogUrl": "https://skaffold.dev/docs/design/api/", "article:section": "docs", "article:modified_time": "2025-01-23T10:14:58-05:00", "twitter:title": "Skaffold API", "og:site_name": "Skaffold", "ogTitle": "Skaffold API", "twitter:card": "summary", "og:title": "Skaffold API", "scrapeId": "64da871c-e6e5-4c84-8d73-4579b914152c", "sourceURL": "https://skaffold.dev/docs/design/api", "url": "https://skaffold.dev/docs/design/api/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I control api in skaffold?\n\nAssistant: To control api in skaffold, here's what you do:\nBy default, skaffold dev will automatically build artifacts, deploy manifests and sync files on every source code change. However, this behavior can be paused and individual actions can be gated off by user input through the Control API.\n\nWith this API, users can tell Skaffold to wait for user input before performing any of these actions, even if the requisite files were changed on the filesystem. By doing so, users can “queue up” changes while they are iterating locally, and then have Skaffold rebuild and redeploy only when asked. This can be very useful when builds are happening more frequently than desired, when builds or deploys take a long time or are otherwise very costly, or when users want to integrate other tools with skaffold dev.\n\nThe automation can be turned off or on using the Control API, or with auto-build flag for building, auto-deploy flag for deploys, and the auto-sync flag for file sync. If automation is turned off for a phase, Skaffold will wait for a request to the Control API before executing the associated action.\n\nEach time a request is sent to the Control API by the user, the specified actions in the payload are executed immediately. This means that even if there are new file changes, Skaffold will wait for another user request before executing any of the given actions again..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/design/api", "title": "Skaffold API", "description": "When running skaffold dev or skaffold debug, Skaffold starts a server that exposes an API over the lifetime of the Skaffold process. This API is the primary way tools like IDEs integrate with Skaffold for retrieving information about the pipeline and for controlling the phases in the pipeline.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 04:56:32", "type": "section_detail", "page_metadata": {"twitter:description": "When running skaffold dev or skaffold debug, Skaffold starts a server that exposes an API over the lifetime of the Skaffold process. Besides the CLI, this API is the primary way tools like IDEs integrate with Skaffold for retrieving information about the pipeline and for controlling the phases in the pipeline.\nTo retrieve information about the Skaffold pipeline, the Skaffold API provides two main functionalities:\n  A streaming event log created from the different phases in a pipeline run, and", "og:url": "https://skaffold.dev/docs/design/api/", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "title": "Skaffold API | Skaffold", "ogSiteName": "Skaffold", "ogDescription": "When running skaffold dev or skaffold debug, Skaffold starts a server that exposes an API over the lifetime of the Skaffold process. Besides the CLI, this API is the primary way tools like IDEs integrate with Skaffold for retrieving information about the pipeline and for controlling the phases in the pipeline.\nTo retrieve information about the Skaffold pipeline, the Skaffold API provides two main functionalities:\n  A streaming event log created from the different phases in a pipeline run, and", "generator": "Hugo 0.99.1", "robots": "index, follow", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "language": "en", "modifiedTime": "2025-01-23T10:14:58-05:00", "description": "When running skaffold dev or skaffold debug,\nSkaffold starts a server that exposes an API over the lifetime of the Skaffold process.\nBesides the CLI, …", "og:description": "When running skaffold dev or skaffold debug, Skaffold starts a server that exposes an API over the lifetime of the Skaffold process. Besides the CLI, this API is the primary way tools like IDEs integrate with Skaffold for retrieving information about the pipeline and for controlling the phases in the pipeline.\nTo retrieve information about the Skaffold pipeline, the Skaffold API provides two main functionalities:\n  A streaming event log created from the different phases in a pipeline run, and", "og:type": "article", "ogUrl": "https://skaffold.dev/docs/design/api/", "article:section": "docs", "article:modified_time": "2025-01-23T10:14:58-05:00", "twitter:title": "Skaffold API", "og:site_name": "Skaffold", "ogTitle": "Skaffold API", "twitter:card": "summary", "og:title": "Skaffold API", "scrapeId": "64da871c-e6e5-4c84-8d73-4579b914152c", "sourceURL": "https://skaffold.dev/docs/design/api", "url": "https://skaffold.dev/docs/design/api/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you give me some code examples for Skaffold API in skaffold?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Creating a gRPC Client**:\n\n```yaml\n```golang\nimport (\n  \"log\"\n  pb \"github.com/GoogleContainerTools/skaffold/proto/v1\"\n  \"google.golang.org/grpc\"\n)\n\nfunc main(){\n  conn, err := grpc.Dial(\"localhost:50051\", grpc.WithInsecure())\n  if err != nil {\n    log.Fatalf(\"fail to dial: %v\", err)\n  }\n  defer conn.Close()\n  client := pb.NewSkaffoldServiceClient(conn)\n}\n```\n```\n\nThis snippet shows you how to creating a grpc client, which is an important aspect of skaffold api.\n\n**Event API Example using curl**:\n\n```yaml\n```bash\n curl localhost:50052/v1/events\n{\"result\":{\"timestamp\":\"2019-10-16T18:26:11.385251549Z\",\"event\":{\"metaEvent\":{\"entry\":\"Starting Skaffold: {Version:v0.39.0-16-g5bb7c9e0 ConfigVersion:skaffold/v1 GitVersion: GitCommit:5bb7c9e078e4d522a5ffc42a2f1274fd17d75902 GitTreeState:dirty BuildDate:2019-10-03T15:01:29Z GoVersion:go1.13rc1 Compiler:gc Platform:linux/amd64}\"}}}}\n{\"result\":{\"timestamp\":\"2019-10-16T18:26:11.436231589Z\",\"event\":{\"buildEvent\":{\"artifact\":\"gcr.io/k8s-skaffold/skaffold-example\",\"status\":\"In Progress\"}},\"entry\":\"Build started for artifact gcr.io/k8s-skaffold/skaffold-example\"}}\n{\"result\":{\"timestamp\":\"2019-10-16T18:26:12.010124246Z\",\"event\":{\"buildEvent\":{\"artifact\":\"gcr.io/k8s-skaffold/skaffold-example\",\"status\":\"Complete\"}},\"entry\":\"Build completed for artifact gcr.io/k8s-skaffold/skaffold-example\"}}\n{\"result\":{\"timestamp\":\"2019-10-16T18:26:12.391721823Z\",\"event\":{\"deployEvent\":{\"status\":\"In Progress\"}},\"entry\":\"Deploy started\"}}\n{\"result\":{\"timestamp\":\"2019-10-16T18:26:12.847239740Z\",\"event\":{\"deployEvent\":{\"status\":\"Complete\"}},\"entry\":\"Deploy complete\"}}\n..```\n```\n\nThis snippet shows you how to event api example using curl, which is an important aspect of skaffold api.\n\n**gRPC Client Example**:\n\n```yaml\n```golang\nfunc main() {\n  ctx, ctxCancel := context.WithCancel(context.Background())\n  defer ctxCancel()\n  // `client` is a gRPC client with connection to localhost:50051.\n  logStream, err := client.Events(ctx, &empty.Empty{})\n  if err != nil {\n   log.Fatalf(\"could not get events: %v\", err)\n  }\n  for {\n   entry, err := logStream.Recv()\n   if err == io.EOF {\n\t break\n   }\n   if err != nil {\n\t log.Fatal(err)\n   }\n   log.Println(entry)\n  }\n}\n```\n```\n\nThis snippet shows you how to grpc client example, which is an important aspect of skaffold api.\n\n**State API Example using curl**:\n\n```yaml\n```bash\n curl localhost:50052/v1/state | jq\n {\n   \"buildState\": {\n     \"artifacts\": {\n       \"gcr.io/k8s-skaffold/leeroy-app\": \"Complete\",\n       \"gcr.io/k8s-skaffold/leeroy-web\": \"Complete\"\n     }\n   },\n   \"deployState\": {\n     \"status\": \"Complete\"\n   },\n   \"forwardedPorts\": {\n     \"9000\": {\n       \"localPort\": 9000,\n       \"remotePort\": 8080,\n       \"namespace\": \"default\",\n       \"resourceType\": \"deployment\",\n       \"resourceName\": \"leeroy-web\"\n     },\n     \"50055\": {\n       \"localPort\": 50055,\n       \"remotePort\": 50051,\n       \"namespace\": \"default\",\n       \"resourceType\": \"service\",\n       \"resourceName\": \"leeroy-app\"\n     }\n   },\n   \"statusCheckState\": {\n     \"status\": \"Succeeded\"\n   },\n   \"fileSyncState\": {\n     \"status\": \"Not Started\"\n   }\n }\n```\n```\n\nThis snippet shows you how to state api example using curl, which is an important aspect of skaffold api.\n\n**Control API Example using curl**:\n\n```yaml\n```bash\ncurl -X POST http://localhost:50052/v1/execute -d '{\"build\": true}'\n\ncurl -X POST http://localhost:50052/v1/execute -d '{\"deploy\": true}'\n\ncurl -X POST http://localhost:50052/v1/execute -d '{\"build\": true, \"deploy\": true}'\n\ncurl -X PUT http://localhost:50052/v1/build/auto_execute -d '{\"enabled\": true}'\n\ncurl -X PUT http://localhost:50052/v1/deploy/auto_execute -d '{\"enabled\": true}'\n```\n```\n\nThis snippet shows you how to control api example using curl, which is an important aspect of skaffold api.\n\n", "metadata": {"source_url": "https://skaffold.dev/docs/design/api", "title": "Skaffold API", "description": "When running skaffold dev or skaffold debug, Skaffold starts a server that exposes an API over the lifetime of the Skaffold process. This API is the primary way tools like IDEs integrate with Skaffold for retrieving information about the pipeline and for controlling the phases in the pipeline.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 04:56:32", "type": "code_examples", "page_metadata": {"twitter:description": "When running skaffold dev or skaffold debug, Skaffold starts a server that exposes an API over the lifetime of the Skaffold process. Besides the CLI, this API is the primary way tools like IDEs integrate with Skaffold for retrieving information about the pipeline and for controlling the phases in the pipeline.\nTo retrieve information about the Skaffold pipeline, the Skaffold API provides two main functionalities:\n  A streaming event log created from the different phases in a pipeline run, and", "og:url": "https://skaffold.dev/docs/design/api/", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "title": "Skaffold API | Skaffold", "ogSiteName": "Skaffold", "ogDescription": "When running skaffold dev or skaffold debug, Skaffold starts a server that exposes an API over the lifetime of the Skaffold process. Besides the CLI, this API is the primary way tools like IDEs integrate with Skaffold for retrieving information about the pipeline and for controlling the phases in the pipeline.\nTo retrieve information about the Skaffold pipeline, the Skaffold API provides two main functionalities:\n  A streaming event log created from the different phases in a pipeline run, and", "generator": "Hugo 0.99.1", "robots": "index, follow", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "language": "en", "modifiedTime": "2025-01-23T10:14:58-05:00", "description": "When running skaffold dev or skaffold debug,\nSkaffold starts a server that exposes an API over the lifetime of the Skaffold process.\nBesides the CLI, …", "og:description": "When running skaffold dev or skaffold debug, Skaffold starts a server that exposes an API over the lifetime of the Skaffold process. Besides the CLI, this API is the primary way tools like IDEs integrate with Skaffold for retrieving information about the pipeline and for controlling the phases in the pipeline.\nTo retrieve information about the Skaffold pipeline, the Skaffold API provides two main functionalities:\n  A streaming event log created from the different phases in a pipeline run, and", "og:type": "article", "ogUrl": "https://skaffold.dev/docs/design/api/", "article:section": "docs", "article:modified_time": "2025-01-23T10:14:58-05:00", "twitter:title": "Skaffold API", "og:site_name": "Skaffold", "ogTitle": "Skaffold API", "twitter:card": "summary", "og:title": "Skaffold API", "scrapeId": "64da871c-e6e5-4c84-8d73-4579b914152c", "sourceURL": "https://skaffold.dev/docs/design/api", "url": "https://skaffold.dev/docs/design/api/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: What are some tips for using Skaffold API in skaffold effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nThe --enable-rpc flag is deprecated; use --rpc-port and --rpc-http-port instead.\n\nEnsure to mark gRPC connections as insecure with grpc.WithInsecure() when connecting to the Skaffold gRPC server.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://skaffold.dev/docs/design/api", "title": "Skaffold API", "description": "When running skaffold dev or skaffold debug, Skaffold starts a server that exposes an API over the lifetime of the Skaffold process. This API is the primary way tools like IDEs integrate with Skaffold for retrieving information about the pipeline and for controlling the phases in the pipeline.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 04:56:32", "type": "best_practices", "page_metadata": {"twitter:description": "When running skaffold dev or skaffold debug, Skaffold starts a server that exposes an API over the lifetime of the Skaffold process. Besides the CLI, this API is the primary way tools like IDEs integrate with Skaffold for retrieving information about the pipeline and for controlling the phases in the pipeline.\nTo retrieve information about the Skaffold pipeline, the Skaffold API provides two main functionalities:\n  A streaming event log created from the different phases in a pipeline run, and", "og:url": "https://skaffold.dev/docs/design/api/", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "title": "Skaffold API | Skaffold", "ogSiteName": "Skaffold", "ogDescription": "When running skaffold dev or skaffold debug, Skaffold starts a server that exposes an API over the lifetime of the Skaffold process. Besides the CLI, this API is the primary way tools like IDEs integrate with Skaffold for retrieving information about the pipeline and for controlling the phases in the pipeline.\nTo retrieve information about the Skaffold pipeline, the Skaffold API provides two main functionalities:\n  A streaming event log created from the different phases in a pipeline run, and", "generator": "Hugo 0.99.1", "robots": "index, follow", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "language": "en", "modifiedTime": "2025-01-23T10:14:58-05:00", "description": "When running skaffold dev or skaffold debug,\nSkaffold starts a server that exposes an API over the lifetime of the Skaffold process.\nBesides the CLI, …", "og:description": "When running skaffold dev or skaffold debug, Skaffold starts a server that exposes an API over the lifetime of the Skaffold process. Besides the CLI, this API is the primary way tools like IDEs integrate with Skaffold for retrieving information about the pipeline and for controlling the phases in the pipeline.\nTo retrieve information about the Skaffold pipeline, the Skaffold API provides two main functionalities:\n  A streaming event log created from the different phases in a pipeline run, and", "og:type": "article", "ogUrl": "https://skaffold.dev/docs/design/api/", "article:section": "docs", "article:modified_time": "2025-01-23T10:14:58-05:00", "twitter:title": "Skaffold API", "og:site_name": "Skaffold", "ogTitle": "Skaffold API", "twitter:card": "summary", "og:title": "Skaffold API", "scrapeId": "64da871c-e6e5-4c84-8d73-4579b914152c", "sourceURL": "https://skaffold.dev/docs/design/api", "url": "https://skaffold.dev/docs/design/api/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you explain what Docker Build is in skaffold?\n\nAssistant: Sure, I'd be happy to explain Docker Build in skaffold.\n\n# Docker Build\n\nSkaffold supports building with DockerfileHere's a quick rundown of what this is about:\n\n## Dockerfile with Docker locally\n\nIf you have [Docker](https://www.docker.com/products/docker-desktop) installed, Skaffold can be configured to build artifacts with the local Docker daemon.\n\nBy default, Skaffold connects to the local Docker daemon using [Docker Engine APIs](https://docs.docker.com/develop/sdk/), though it can also use the Docker [command-line interface](https://docs.docker.com/engine/reference/commandline/cli/) instead, which enables artifacts with [BuildKit](https://github.com/moby/buildkit).\n\nAfter the artifacts are successfully built, Docker images will be pushed to the remote registry. You can choose to skip this step.\n\n**Configuration**\n\nTo use the local Docker daemon, add build type `local` to the `build` section of `skaffold.yaml`. The following options can optionally be configured:\n\n| Option | Description | Default |\n| --- | --- | --- |\n| `push` | should images be pushed to a registry. If not specified, images are pushed only if the current Kubernetes context connects to a remote cluster. | `` |\n| `tryImportMissing` | whether to attempt to import artifacts from Docker (either a local or remote registry) if not in the cache. | `false` |\n| `useDockerCLI` | use `docker` command-line interface instead of Docker Engine APIs. | `false` |\n| `useBuildkit` | use BuildKit to build Docker images. If unspecified, uses the Docker default. | `` |\n| `concurrency` | how many artifacts can be built concurrently. 0 means “no-limit”. | `1` |\n\nThe `docker` builder replaces cache references to the artifact image with the tagged image to allow caching from the previously built image.\n\n**Example**\n\nThe following `build` section instructs Skaffold to build a Docker image `gcr.io/k8s-skaffold/example` with the local Docker daemon:\n\n```yaml\nbuild:\n  artifacts:\n  - image: gcr.io/k8s-skaffold/example\n    docker:\n      cacheFrom:\n      # Local Docker builder replaces cache references to the artifact image with\n      # the tagged image reference, useful for caching from the previous build.\n      - gcr.io/k8s-skaffold/example\n  local: {}\n```\n\nWhich is equivalent to:\n\n```yaml\nbuild:\n  artifacts:\n  - image: gcr.io/k8s-skaffold/example\n  local:\n    useDockerCLI: false\n    useBuildkit: false\n```\n\n**Artifact dependency**\n\nYou can additionally define dependency on other artifacts using the `requires` expression:\n\n```yaml\nbuild:\n  artifacts:\n  - image: image1\n    requires:\n      - image: image2\n        alias: IMAGE2\n  - image: image2\n  local: {}\n```\n\nThe specified alias `IMAGE2` becomes available as a build-arg in the Dockerfile for `image1` and its value automatically set to the image built from `image2`.\n\n## Dockerfile in-cluster with Kaniko\n\n[Kaniko](https://github.com/GoogleContainerTools/kaniko) is a Google-developed open source tool for building images from a Dockerfile inside a container or Kubernetes cluster. Kaniko enables building container images in environments that cannot easily or securely run a Docker daemon.\n\nSkaffold can help build artifacts in a Kubernetes cluster using the Kaniko image; after the artifacts are built, kaniko must push them to a registry.\n\n**Configuration**\n\nTo use Kaniko, add build type `kaniko` to the `build` section of `skaffold.yaml`. The following options can optionally be configured:\n\n| Option | Description | Default |\n| --- | --- | --- |\n| `cleanup` | to clean the filesystem at the end of the build. | `false` |\n| `insecure` | if you want to push images to a plain HTTP registry. | `false` |\n| `insecurePull` | if you want to pull images from a plain HTTP registry. | `false` |\n| `force` | building outside of a container. | `false` |\n| `logTimestamp` | to add timestamps to log format. | `false` |\n| `reproducible` | used to strip timestamps out of the built image. | `false` |\n| `singleSnapshot` | takes a single snapshot of the filesystem at the end of the build. So only one layer will be appended to the base image. | `false` |\n| `skipTLS` | skips TLS certificate validation when pushing to a registry. | `false` |\n| `skipTLSVerifyPull` | skips TLS certificate validation when pulling from a registry. | `false` |\n| `skipUnusedStages` | builds only used stages if defined to true. Otherwise it builds by default all stages, even the unnecessaries ones until it reaches the target stage / end of Dockerfile. | `false` |\n| `useNewRun` | to Use the experimental run implementation for detecting changes without requiring file system snapshots. In some cases, this may improve build performance by 75%. | `false` |\n| `whitelistVarRun` | used to ignore `/var/run` when taking image snapshot. Set it to false to preserve /var/run/* in destination image. | `false` |\n| `dockerfile` | locates the Dockerfile relative to workspace. | `Dockerfile` |\n| `target` | to indicate which build stage is the target build stage. | `` |\n| `initImage` | image used to run init container which mounts kaniko context. | `` |\n| `image` | Docker image used by the Kaniko pod. Defaults to the latest released version of `gcr.io/kaniko-project/executor`. | `` |\n| `imagePullSecret` | name of the Kubernetes secret for pulling kaniko image and kaniko init image from a private registry. | `` |\n| `destination` | additional tags to push. | `[]` |\n| `digestFile` | to specify a file in the container. This file will receive the digest of a built image. This can be used to automatically track the exact image built by kaniko. | `` |\n| `imageFSExtractRetry` | number of retries that should happen for extracting an image filesystem. | `` |\n| `imageNameWithDigestFile` | specify a file to save the image name with digest of the built image to. | `` |\n| `logFormat` | <text|color|json> to set the log format. | `` |\n| `ociLayoutPath` | to specify a directory in the container where the OCI image layout of a built image will be placed. This can be used to automatically track the exact image built by kaniko. | `` |\n| `registryMirror` | if you want to use a registry mirror instead of default `index.docker.io`. | `` |\n| `snapshotMode` | how Kaniko will snapshot the filesystem. | `` |\n| `pushRetry` | Set this flag to the number of retries that should happen for the push of an image to a remote destination. | `` |\n| `tarPath` | path to save the image as a tarball at path instead of pushing the image. | `` |\n| `verbosity` | <panic|fatal|error|warn|info|debug|trace> to set the logging level. | `` |\n| `insecureRegistry` | to use plain HTTP requests when accessing a registry. | `[]` |\n| `skipTLSVerifyRegistry` | skips TLS certificate validation when accessing a registry. | `[]` |\n| `env` | environment variables passed to the kaniko pod. It also accepts environment variables via the go template syntax. | `[]` |\n| `cache` | configures Kaniko caching. If a cache is specified, Kaniko will use a remote cache which will speed up builds. | `` |\n| `registryCertificate` | to provide a certificate for TLS communication with a given registry. my.registry.url: /path/to/the/certificate.cert is the expected format. | `{}` |\n| `label` | key: value to set some metadata to the final image. This is equivalent as using the LABEL within the Dockerfile. | `{}` |\n| `buildArgs` | arguments passed to the docker build. It also accepts environment variables and generated values via the go template syntax. Exposed generated values: IMAGE_REPO, IMAGE_NAME, IMAGE_TAG. | `{}` |\n| `volumeMounts` | volume mounts passed to kaniko pod. | `[]` |\n| `contextSubPath` | to specify a sub path within the context. | `` |\n| `ignorePaths` | a list of ignored paths when making an image snapshot. | `[]` |\n| `copyMaxRetries` | number of times to retry copy build contexts to a cluster if it fails. | `3` |\n| `copyTimeout` | timeout for copying build contexts to a cluster. Defaults to 5 minutes ( `5m`). | `` |\n| `buildContextCompressionLevel` | gzip compression level for the build context. | `1` |\n\n**Artifact dependency**\n\nSimilar to the local Docker builder, you can define dependency on other artifacts using the `requires` expression:\n\n```yaml\nbuild:\n  artifacts:\n  - image: image1\n    requires:\n    - image: image2\n      alias: IMAGE2\n    kaniko: {}\n  - image: image2\n  cluster: {}\n```\n\nThe specified alias `IMAGE2` becomes available as a build-arg in the Dockerfile for `image1` and its value automatically set to the image built from `image2`.\n\nSince Kaniko builds images directly to a registry, it requires active cluster credentials. These credentials are configured in the `cluster` section with the following options:\n\n| Option | Description | Default |\n| --- | --- | --- |\n| `HTTP_PROXY` | for kaniko pod. | `` |\n| `HTTPS_PROXY` | for kaniko pod. | `` |\n| `pullSecretPath` | path to the Google Cloud service account secret key file. | `` |\n| `pullSecretName` | name of the Kubernetes secret for pulling base images and pushing the final image. If given, the secret needs to contain the Google Cloud service account secret key under the key `kaniko-secret`. | `kaniko-secret` |\n| `pullSecretMountPath` | path the pull secret will be mounted at within the running container. | `` |\n| `namespace` | Kubernetes namespace. Defaults to current namespace in Kubernetes configuration. | `` |\n| `timeout` | amount of time (in seconds) that this build is allowed to run. Defaults to 20 minutes ( `20m`). | `` |\n| `dockerConfig` | describes how to mount the local Docker configuration into a pod. | `` |\n| `serviceAccount` | describes the Kubernetes service account to use for the pod. Defaults to ‘default’. | `` |\n| `tolerations` | describes the Kubernetes tolerations for the pod. | `[]` |\n| `nodeSelector` | describes the Kubernetes node selector for the pod. | `{}` |\n| `annotations` | describes the Kubernetes annotations for the pod. | `{}` |\n| `labels` | describes the Kubernetes labels for the pod. | `{}` |\n| `runAsUser` | defines the UID to request for running the container. If omitted, no SecurityContext will be specified for the pod and will therefore be inherited from the service account. | `` |\n| `resources` | define the resource requirements for the kaniko pod. | `` |\n| `concurrency` | how many artifacts can be built concurrently. 0 means “no-limit”. | `0` |\n| `volumes` | defines container mounts for ConfigMap and Secret resources. | `[]` |\n| `randomPullSecret` | adds a random UUID postfix to the default name of the pull secret to facilitate parallel builds, e.g. kaniko-secretdocker-cfgfd154022-c761-416f-8eb3-cf8258450b85. | `false` |\n| `randomDockerConfigSecret` | adds a random UUID postfix to the default name of the docker secret to facilitate parallel builds, e.g. docker-cfgfd154022-c761-416f-8eb3-cf8258450b85. | `false` |\n\nTo set up the credentials for Kaniko refer to the [kaniko docs](https://github.com/GoogleContainerTools/kaniko#kubernetes-secret) ( **Note**: Rename the downloaded JSON key to _kaniko-secret_ without appending _.json_).\nAlternatively, the path to a credentials file can be set with the `pullSecretPath` option:\n\n```yaml\nbuild:\n  cluster:\n    pullSecretName: pull-secret-in-kubernetes\n    # OR\n    pullSecretPath: path-to-service-account-key-file\n```\n\nSimilarly, when pushing to a docker registry:\n\n```yaml\nbuild:\n  cluster:\n    dockerConfig:\n      path: ~/.docker/config.json\n      # OR\n      secretName: docker-config-secret-in-kubernetes\n```\n\nNote that the Kubernetes secret must not be of type `kubernetes.io/dockerconfigjson` which stores the config json under the key `\".dockerconfigjson\"`, but an opaque secret with the key \"config.json\".\n\n**Example**\n\nThe following `build` section, instructs Skaffold to build a Docker image `gcr.io/k8s-skaffold/example` with Kaniko:\n\n```yaml\nbuild:\n  artifacts:\n    - image: gcr.io/k8s-skaffold/example\n      kaniko: {}\n  cluster:\n    pullSecretName: YOUR-PULL-SECRET-NAME\n```\n\n## Dockerfile remotely with Google Cloud Build\n\nSkaffold can build the Dockerfile image remotely with [Google Cloud Build](https://skaffold.dev/docs/builders/#remotely-on-google-cloud-build).\n\n**Configuration**\n\nTo configure, add `googleCloudBuild` to `build` section to `skaffold.yaml`. The following options can optionally be configured:\n\n| Option | Description | Default |\n| --- | --- | --- |\n| `projectId` | ID of your Cloud Platform Project. If it is not provided, Skaffold will guess it from the image name. For example, given the artifact image name `gcr.io/myproject/image`, Skaffold will use the `myproject` GCP project. | `` |\n| `diskSizeGb` | disk size of the VM that runs the build. See [Cloud Build Reference](https://cloud.google.com/cloud-build/docs/api/reference/rest/v1/projects.builds#buildoptions). | `` |\n| `machineType` | type of the VM that runs the build. See [Cloud Build Reference](https://cloud.google.com/cloud-build/docs/api/reference/rest/v1/projects.builds#buildoptions). | `` |\n| `timeout` | amount of time (in seconds) that this build should be allowed to run. See [Cloud Build Reference](https://cloud.google.com/cloud-build/docs/api/reference/rest/v1/projects.builds#resource-build). | `` |\n| `logging` | specifies the logging mode. Valid modes are: `LOGGING_UNSPECIFIED`: The service determines the logging mode. `LEGACY`: Stackdriver logging and Cloud Storage logging are enabled (default). `GCS_ONLY`: Only Cloud Storage logging is enabled. See [Cloud Build Reference](https://cloud.google.com/cloud-build/docs/api/reference/rest/v1/projects.builds#loggingmode). | `` |\n| `logStreamingOption` | specifies the behavior when writing build logs to Google Cloud Storage. Valid options are: `STREAM_DEFAULT`: Service may automatically determine build log streaming behavior. `STREAM_ON`: Build logs should be streamed to Google Cloud Storage. `STREAM_OFF`: Build logs should not be streamed to Google Cloud Storage; they will be written when the build is completed. See [Cloud Build Reference](https://cloud.google.com/cloud-build/docs/api/reference/rest/v1/projects.builds#logstreamingoption). | `` |\n| `dockerImage` | image that runs a Docker build. See [Cloud Builders](https://cloud.google.com/cloud-build/docs/cloud-builders). | `gcr.io/cloud-builders/docker` |\n| `kanikoImage` | image that runs a Kaniko build. See [Cloud Builders](https://cloud.google.com/cloud-build/docs/cloud-builders). | `gcr.io/kaniko-project/executor` |\n| `mavenImage` | image that runs a Maven build. See [Cloud Builders](https://cloud.google.com/cloud-build/docs/cloud-builders). | `gcr.io/cloud-builders/mvn` |\n| `gradleImage` | image that runs a Gradle build. See [Cloud Builders](https://cloud.google.com/cloud-build/docs/cloud-builders). | `gcr.io/cloud-builders/gradle` |\n| `packImage` | image that runs a Cloud Native Buildpacks build. See [Cloud Builders](https://cloud.google.com/cloud-build/docs/cloud-builders). | `gcr.io/k8s-skaffold/pack` |\n| `koImage` | image that runs a ko build. The image must contain Skaffold, Go, and a shell (runnable as `sh`) that supports here documents. See [Cloud Builders](https://cloud.google.com/cloud-build/docs/cloud-builders). | `gcr.io/k8s-skaffold/skaffold` |\n| `bucket` | specifies the Cloud Storage bucket to store the staged build sources. | `` |\n| `concurrency` | how many artifacts can be built concurrently. 0 means “no-limit”. | `0` |\n| `workerPool` | configures a pool of workers to run the build. | `` |\n| `region` | configures the region to run the build. If WorkerPool is configured, the region will be deduced from the WorkerPool configuration. If neither WorkerPool nor Region is configured, the build will be run in global(non-regional). See [Cloud Build locations](https://cloud.google.com/build/docs/locations). | `` |\n| `platformEmulatorInstallStep` | specifies a pre-build step to install the required tooling for QEMU emulation on the GoogleCloudBuild containers. This enables performing cross-platform builds on GoogleCloudBuild. If unspecified, Skaffold uses the `docker/binfmt` image by default. | `` |\n| `serviceAccount` | Google Cloud platform service account used by Cloud Build. If unspecified, it defaults to the Cloud Build service account generated when the Cloud Build API is enabled. | `` |\n\nThe `googleCloudBuild` builder replaces cache references to the artifact image with the tagged image to allow caching from the previously built image.\n\n**Example**\n\nThe following `build` section, instructs Skaffold to build a Docker image `gcr.io/k8s-skaffold/example` with Google Cloud Build:\n\n```yaml\nbuild:\n  artifacts:\n  - image: gcr.io/k8s-skaffold/example\n    docker:\n      cacheFrom:\n      # googleCloudBuild replaces cache references to the artifact image with\n      # the tagged image reference, useful for caching from the previous build.\n      - gcr.io/k8s-skaffold/example\n  googleCloudBuild:\n    projectId: YOUR-GCP-PROJECT\n```\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://skaffold.dev/docs/builders/builder-types/docker", "title": "Docker Build", "description": "Skaffold supports building with Dockerfile", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 05:11:20", "type": "overview", "page_metadata": {"og:url": "https://skaffold.dev/docs/builders/builder-types/docker/", "og:description": "Skaffold supports building with Dockerfile\n locally in cluster on Google CloudBuild   Dockerfile with Docker locally If you have Docker installed, Skaffold can be configured to build artifacts with the local Docker daemon.\nBy default, Skaffold connects to the local Docker daemon using Docker Engine APIs, though it can also use the Docker command-line interface instead, which enables artifacts with BuildKit.\nAfter the artifacts are successfully built, Docker images will be pushed to the remote registry.", "modifiedTime": "2025-01-23T10:14:58-05:00", "twitter:title": "Docker Build", "twitter:card": "summary", "twitter:description": "Skaffold supports building with Dockerfile\n locally in cluster on Google CloudBuild   Dockerfile with Docker locally If you have Docker installed, Skaffold can be configured to build artifacts with the local Docker daemon.\nBy default, Skaffold connects to the local Docker daemon using Docker Engine APIs, though it can also use the Docker command-line interface instead, which enables artifacts with BuildKit.\nAfter the artifacts are successfully built, Docker images will be pushed to the remote registry.", "robots": "index, follow", "description": "Skaffold supports building with Dockerfile\n\nlocally\nin cluster\non Google CloudBuild \n\nDockerfile with Docker locally\nIf you have Docker\ninstalled, …", "article:modified_time": "2025-01-23T10:14:58-05:00", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "generator": "Hugo 0.99.1", "ogSiteName": "Skaffold", "article:section": "docs", "og:title": "Docker Build", "og:site_name": "Skaffold", "title": "Docker Build | Skaffold", "ogTitle": "Docker Build", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogDescription": "Skaffold supports building with Dockerfile\n locally in cluster on Google CloudBuild   Dockerfile with Docker locally If you have Docker installed, Skaffold can be configured to build artifacts with the local Docker daemon.\nBy default, Skaffold connects to the local Docker daemon using Docker Engine APIs, though it can also use the Docker command-line interface instead, which enables artifacts with BuildKit.\nAfter the artifacts are successfully built, Docker images will be pushed to the remote registry.", "ogUrl": "https://skaffold.dev/docs/builders/builder-types/docker/", "language": "en", "og:type": "article", "scrapeId": "b44d6f88-fdbb-460a-80b7-ecc974675754", "sourceURL": "https://skaffold.dev/docs/builders/builder-types/docker", "url": "https://skaffold.dev/docs/builders/builder-types/docker/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I dockerfile with docker locally in skaffold?\n\nAssistant: To dockerfile with docker locally in skaffold, here's what you do:\nIf you have [Docker](https://www.docker.com/products/docker-desktop) installed, Skaffold can be configured to build artifacts with the local Docker daemon.\n\nBy default, Skaffold connects to the local Docker daemon using [Docker Engine APIs](https://docs.docker.com/develop/sdk/), though it can also use the Docker [command-line interface](https://docs.docker.com/engine/reference/commandline/cli/) instead, which enables artifacts with [BuildKit](https://github.com/moby/buildkit).\n\nAfter the artifacts are successfully built, Docker images will be pushed to the remote registry. You can choose to skip this step.\n\n**Configuration**\n\nTo use the local Docker daemon, add build type `local` to the `build` section of `skaffold.yaml`. The following options can optionally be configured:\n\n| Option | Description | Default |\n| --- | --- | --- |\n| `push` | should images be pushed to a registry. If not specified, images are pushed only if the current Kubernetes context connects to a remote cluster. | `` |\n| `tryImportMissing` | whether to attempt to import artifacts from Docker (either a local or remote registry) if not in the cache. | `false` |\n| `useDockerCLI` | use `docker` command-line interface instead of Docker Engine APIs. | `false` |\n| `useBuildkit` | use BuildKit to build Docker images. If unspecified, uses the Docker default. | `` |\n| `concurrency` | how many artifacts can be built concurrently. 0 means “no-limit”. | `1` |\n\nThe `docker` builder replaces cache references to the artifact image with the tagged image to allow caching from the previously built image.\n\n**Example**\n\nThe following `build` section instructs Skaffold to build a Docker image `gcr.io/k8s-skaffold/example` with the local Docker daemon:\n\n```yaml\nbuild:\n  artifacts:\n  - image: gcr.io/k8s-skaffold/example\n    docker:\n      cacheFrom:\n      # Local Docker builder replaces cache references to the artifact image with\n      # the tagged image reference, useful for caching from the previous build.\n      - gcr.io/k8s-skaffold/example\n  local: {}\n```\n\nWhich is equivalent to:\n\n```yaml\nbuild:\n  artifacts:\n  - image: gcr.io/k8s-skaffold/example\n  local:\n    useDockerCLI: false\n    useBuildkit: false\n```\n\n**Artifact dependency**\n\nYou can additionally define dependency on other artifacts using the `requires` expression:\n\n```yaml\nbuild:\n  artifacts:\n  - image: image1\n    requires:\n      - image: image2\n        alias: IMAGE2\n  - image: image2\n  local: {}\n```\n\nThe specified alias `IMAGE2` becomes available as a build-arg in the Dockerfile for `image1` and its value automatically set to the image built from `image2`..\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/builders/builder-types/docker", "title": "Docker Build", "description": "Skaffold supports building with Dockerfile", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 05:11:20", "type": "section_detail", "page_metadata": {"og:url": "https://skaffold.dev/docs/builders/builder-types/docker/", "og:description": "Skaffold supports building with Dockerfile\n locally in cluster on Google CloudBuild   Dockerfile with Docker locally If you have Docker installed, Skaffold can be configured to build artifacts with the local Docker daemon.\nBy default, Skaffold connects to the local Docker daemon using Docker Engine APIs, though it can also use the Docker command-line interface instead, which enables artifacts with BuildKit.\nAfter the artifacts are successfully built, Docker images will be pushed to the remote registry.", "modifiedTime": "2025-01-23T10:14:58-05:00", "twitter:title": "Docker Build", "twitter:card": "summary", "twitter:description": "Skaffold supports building with Dockerfile\n locally in cluster on Google CloudBuild   Dockerfile with Docker locally If you have Docker installed, Skaffold can be configured to build artifacts with the local Docker daemon.\nBy default, Skaffold connects to the local Docker daemon using Docker Engine APIs, though it can also use the Docker command-line interface instead, which enables artifacts with BuildKit.\nAfter the artifacts are successfully built, Docker images will be pushed to the remote registry.", "robots": "index, follow", "description": "Skaffold supports building with Dockerfile\n\nlocally\nin cluster\non Google CloudBuild \n\nDockerfile with Docker locally\nIf you have Docker\ninstalled, …", "article:modified_time": "2025-01-23T10:14:58-05:00", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "generator": "Hugo 0.99.1", "ogSiteName": "Skaffold", "article:section": "docs", "og:title": "Docker Build", "og:site_name": "Skaffold", "title": "Docker Build | Skaffold", "ogTitle": "Docker Build", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogDescription": "Skaffold supports building with Dockerfile\n locally in cluster on Google CloudBuild   Dockerfile with Docker locally If you have Docker installed, Skaffold can be configured to build artifacts with the local Docker daemon.\nBy default, Skaffold connects to the local Docker daemon using Docker Engine APIs, though it can also use the Docker command-line interface instead, which enables artifacts with BuildKit.\nAfter the artifacts are successfully built, Docker images will be pushed to the remote registry.", "ogUrl": "https://skaffold.dev/docs/builders/builder-types/docker/", "language": "en", "og:type": "article", "scrapeId": "b44d6f88-fdbb-460a-80b7-ecc974675754", "sourceURL": "https://skaffold.dev/docs/builders/builder-types/docker", "url": "https://skaffold.dev/docs/builders/builder-types/docker/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I dockerfile in-cluster with kaniko in skaffold?\n\nAssistant: To dockerfile in-cluster with kaniko in skaffold, here's what you do:\n[Kaniko](https://github.com/GoogleContainerTools/kaniko) is a Google-developed open source tool for building images from a Dockerfile inside a container or Kubernetes cluster. Kaniko enables building container images in environments that cannot easily or securely run a Docker daemon.\n\nSkaffold can help build artifacts in a Kubernetes cluster using the Kaniko image; after the artifacts are built, kaniko must push them to a registry.\n\n**Configuration**\n\nTo use Kaniko, add build type `kaniko` to the `build` section of `skaffold.yaml`. The following options can optionally be configured:\n\n| Option | Description | Default |\n| --- | --- | --- |\n| `cleanup` | to clean the filesystem at the end of the build. | `false` |\n| `insecure` | if you want to push images to a plain HTTP registry. | `false` |\n| `insecurePull` | if you want to pull images from a plain HTTP registry. | `false` |\n| `force` | building outside of a container. | `false` |\n| `logTimestamp` | to add timestamps to log format. | `false` |\n| `reproducible` | used to strip timestamps out of the built image. | `false` |\n| `singleSnapshot` | takes a single snapshot of the filesystem at the end of the build. So only one layer will be appended to the base image. | `false` |\n| `skipTLS` | skips TLS certificate validation when pushing to a registry. | `false` |\n| `skipTLSVerifyPull` | skips TLS certificate validation when pulling from a registry. | `false` |\n| `skipUnusedStages` | builds only used stages if defined to true. Otherwise it builds by default all stages, even the unnecessaries ones until it reaches the target stage / end of Dockerfile. | `false` |\n| `useNewRun` | to Use the experimental run implementation for detecting changes without requiring file system snapshots. In some cases, this may improve build performance by 75%. | `false` |\n| `whitelistVarRun` | used to ignore `/var/run` when taking image snapshot. Set it to false to preserve /var/run/* in destination image. | `false` |\n| `dockerfile` | locates the Dockerfile relative to workspace. | `Dockerfile` |\n| `target` | to indicate which build stage is the target build stage. | `` |\n| `initImage` | image used to run init container which mounts kaniko context. | `` |\n| `image` | Docker image used by the Kaniko pod. Defaults to the latest released version of `gcr.io/kaniko-project/executor`. | `` |\n| `imagePullSecret` | name of the Kubernetes secret for pulling kaniko image and kaniko init image from a private registry. | `` |\n| `destination` | additional tags to push. | `[]` |\n| `digestFile` | to specify a file in the container. This file will receive the digest of a built image. This can be used to automatically track the exact image built by kaniko. | `` |\n| `imageFSExtractRetry` | number of retries that should happen for extracting an image filesystem. | `` |\n| `imageNameWithDigestFile` | specify a file to save the image name with digest of the built image to. | `` |\n| `logFormat` | <text|color|json> to set the log format. | `` |\n| `ociLayoutPath` | to specify a directory in the container where the OCI image layout of a built image will be placed. This can be used to automatically track the exact image built by kaniko. | `` |\n| `registryMirror` | if you want to use a registry mirror instead of default `index.docker.io`. | `` |\n| `snapshotMode` | how Kaniko will snapshot the filesystem. | `` |\n| `pushRetry` | Set this flag to the number of retries that should happen for the push of an image to a remote destination. | `` |\n| `tarPath` | path to save the image as a tarball at path instead of pushing the image. | `` |\n| `verbosity` | <panic|fatal|error|warn|info|debug|trace> to set the logging level. | `` |\n| `insecureRegistry` | to use plain HTTP requests when accessing a registry. | `[]` |\n| `skipTLSVerifyRegistry` | skips TLS certificate validation when accessing a registry. | `[]` |\n| `env` | environment variables passed to the kaniko pod. It also accepts environment variables via the go template syntax. | `[]` |\n| `cache` | configures Kaniko caching. If a cache is specified, Kaniko will use a remote cache which will speed up builds. | `` |\n| `registryCertificate` | to provide a certificate for TLS communication with a given registry. my.registry.url: /path/to/the/certificate.cert is the expected format. | `{}` |\n| `label` | key: value to set some metadata to the final image. This is equivalent as using the LABEL within the Dockerfile. | `{}` |\n| `buildArgs` | arguments passed to the docker build. It also accepts environment variables and generated values via the go template syntax. Exposed generated values: IMAGE_REPO, IMAGE_NAME, IMAGE_TAG. | `{}` |\n| `volumeMounts` | volume mounts passed to kaniko pod. | `[]` |\n| `contextSubPath` | to specify a sub path within the context. | `` |\n| `ignorePaths` | a list of ignored paths when making an image snapshot. | `[]` |\n| `copyMaxRetries` | number of times to retry copy build contexts to a cluster if it fails. | `3` |\n| `copyTimeout` | timeout for copying build contexts to a cluster. Defaults to 5 minutes ( `5m`). | `` |\n| `buildContextCompressionLevel` | gzip compression level for the build context. | `1` |\n\n**Artifact dependency**\n\nSimilar to the local Docker builder, you can define dependency on other artifacts using the `requires` expression:\n\n```yaml\nbuild:\n  artifacts:\n  - image: image1\n    requires:\n    - image: image2\n      alias: IMAGE2\n    kaniko: {}\n  - image: image2\n  cluster: {}\n```\n\nThe specified alias `IMAGE2` becomes available as a build-arg in the Dockerfile for `image1` and its value automatically set to the image built from `image2`.\n\nSince Kaniko builds images directly to a registry, it requires active cluster credentials. These credentials are configured in the `cluster` section with the following options:\n\n| Option | Description | Default |\n| --- | --- | --- |\n| `HTTP_PROXY` | for kaniko pod. | `` |\n| `HTTPS_PROXY` | for kaniko pod. | `` |\n| `pullSecretPath` | path to the Google Cloud service account secret key file. | `` |\n| `pullSecretName` | name of the Kubernetes secret for pulling base images and pushing the final image. If given, the secret needs to contain the Google Cloud service account secret key under the key `kaniko-secret`. | `kaniko-secret` |\n| `pullSecretMountPath` | path the pull secret will be mounted at within the running container. | `` |\n| `namespace` | Kubernetes namespace. Defaults to current namespace in Kubernetes configuration. | `` |\n| `timeout` | amount of time (in seconds) that this build is allowed to run. Defaults to 20 minutes ( `20m`). | `` |\n| `dockerConfig` | describes how to mount the local Docker configuration into a pod. | `` |\n| `serviceAccount` | describes the Kubernetes service account to use for the pod. Defaults to ‘default’. | `` |\n| `tolerations` | describes the Kubernetes tolerations for the pod. | `[]` |\n| `nodeSelector` | describes the Kubernetes node selector for the pod. | `{}` |\n| `annotations` | describes the Kubernetes annotations for the pod. | `{}` |\n| `labels` | describes the Kubernetes labels for the pod. | `{}` |\n| `runAsUser` | defines the UID to request for running the container. If omitted, no SecurityContext will be specified for the pod and will therefore be inherited from the service account. | `` |\n| `resources` | define the resource requirements for the kaniko pod. | `` |\n| `concurrency` | how many artifacts can be built concurrently. 0 means “no-limit”. | `0` |\n| `volumes` | defines container mounts for ConfigMap and Secret resources. | `[]` |\n| `randomPullSecret` | adds a random UUID postfix to the default name of the pull secret to facilitate parallel builds, e.g. kaniko-secretdocker-cfgfd154022-c761-416f-8eb3-cf8258450b85. | `false` |\n| `randomDockerConfigSecret` | adds a random UUID postfix to the default name of the docker secret to facilitate parallel builds, e.g. docker-cfgfd154022-c761-416f-8eb3-cf8258450b85. | `false` |\n\nTo set up the credentials for Kaniko refer to the [kaniko docs](https://github.com/GoogleContainerTools/kaniko#kubernetes-secret) ( **Note**: Rename the downloaded JSON key to _kaniko-secret_ without appending _.json_).\nAlternatively, the path to a credentials file can be set with the `pullSecretPath` option:\n\n```yaml\nbuild:\n  cluster:\n    pullSecretName: pull-secret-in-kubernetes\n    # OR\n    pullSecretPath: path-to-service-account-key-file\n```\n\nSimilarly, when pushing to a docker registry:\n\n```yaml\nbuild:\n  cluster:\n    dockerConfig:\n      path: ~/.docker/config.json\n      # OR\n      secretName: docker-config-secret-in-kubernetes\n```\n\nNote that the Kubernetes secret must not be of type `kubernetes.io/dockerconfigjson` which stores the config json under the key `\".dockerconfigjson\"`, but an opaque secret with the key \"config.json\".\n\n**Example**\n\nThe following `build` section, instructs Skaffold to build a Docker image `gcr.io/k8s-skaffold/example` with Kaniko:\n\n```yaml\nbuild:\n  artifacts:\n    - image: gcr.io/k8s-skaffold/example\n      kaniko: {}\n  cluster:\n    pullSecretName: YOUR-PULL-SECRET-NAME\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/builders/builder-types/docker", "title": "Docker Build", "description": "Skaffold supports building with Dockerfile", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 05:11:20", "type": "section_detail", "page_metadata": {"og:url": "https://skaffold.dev/docs/builders/builder-types/docker/", "og:description": "Skaffold supports building with Dockerfile\n locally in cluster on Google CloudBuild   Dockerfile with Docker locally If you have Docker installed, Skaffold can be configured to build artifacts with the local Docker daemon.\nBy default, Skaffold connects to the local Docker daemon using Docker Engine APIs, though it can also use the Docker command-line interface instead, which enables artifacts with BuildKit.\nAfter the artifacts are successfully built, Docker images will be pushed to the remote registry.", "modifiedTime": "2025-01-23T10:14:58-05:00", "twitter:title": "Docker Build", "twitter:card": "summary", "twitter:description": "Skaffold supports building with Dockerfile\n locally in cluster on Google CloudBuild   Dockerfile with Docker locally If you have Docker installed, Skaffold can be configured to build artifacts with the local Docker daemon.\nBy default, Skaffold connects to the local Docker daemon using Docker Engine APIs, though it can also use the Docker command-line interface instead, which enables artifacts with BuildKit.\nAfter the artifacts are successfully built, Docker images will be pushed to the remote registry.", "robots": "index, follow", "description": "Skaffold supports building with Dockerfile\n\nlocally\nin cluster\non Google CloudBuild \n\nDockerfile with Docker locally\nIf you have Docker\ninstalled, …", "article:modified_time": "2025-01-23T10:14:58-05:00", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "generator": "Hugo 0.99.1", "ogSiteName": "Skaffold", "article:section": "docs", "og:title": "Docker Build", "og:site_name": "Skaffold", "title": "Docker Build | Skaffold", "ogTitle": "Docker Build", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogDescription": "Skaffold supports building with Dockerfile\n locally in cluster on Google CloudBuild   Dockerfile with Docker locally If you have Docker installed, Skaffold can be configured to build artifacts with the local Docker daemon.\nBy default, Skaffold connects to the local Docker daemon using Docker Engine APIs, though it can also use the Docker command-line interface instead, which enables artifacts with BuildKit.\nAfter the artifacts are successfully built, Docker images will be pushed to the remote registry.", "ogUrl": "https://skaffold.dev/docs/builders/builder-types/docker/", "language": "en", "og:type": "article", "scrapeId": "b44d6f88-fdbb-460a-80b7-ecc974675754", "sourceURL": "https://skaffold.dev/docs/builders/builder-types/docker", "url": "https://skaffold.dev/docs/builders/builder-types/docker/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: How do I dockerfile remotely with google cloud build in skaffold?\n\nAssistant: To dockerfile remotely with google cloud build in skaffold, here's what you do:\nSkaffold can build the Dockerfile image remotely with [Google Cloud Build](https://skaffold.dev/docs/builders/#remotely-on-google-cloud-build).\n\n**Configuration**\n\nTo configure, add `googleCloudBuild` to `build` section to `skaffold.yaml`. The following options can optionally be configured:\n\n| Option | Description | Default |\n| --- | --- | --- |\n| `projectId` | ID of your Cloud Platform Project. If it is not provided, Skaffold will guess it from the image name. For example, given the artifact image name `gcr.io/myproject/image`, Skaffold will use the `myproject` GCP project. | `` |\n| `diskSizeGb` | disk size of the VM that runs the build. See [Cloud Build Reference](https://cloud.google.com/cloud-build/docs/api/reference/rest/v1/projects.builds#buildoptions). | `` |\n| `machineType` | type of the VM that runs the build. See [Cloud Build Reference](https://cloud.google.com/cloud-build/docs/api/reference/rest/v1/projects.builds#buildoptions). | `` |\n| `timeout` | amount of time (in seconds) that this build should be allowed to run. See [Cloud Build Reference](https://cloud.google.com/cloud-build/docs/api/reference/rest/v1/projects.builds#resource-build). | `` |\n| `logging` | specifies the logging mode. Valid modes are: `LOGGING_UNSPECIFIED`: The service determines the logging mode. `LEGACY`: Stackdriver logging and Cloud Storage logging are enabled (default). `GCS_ONLY`: Only Cloud Storage logging is enabled. See [Cloud Build Reference](https://cloud.google.com/cloud-build/docs/api/reference/rest/v1/projects.builds#loggingmode). | `` |\n| `logStreamingOption` | specifies the behavior when writing build logs to Google Cloud Storage. Valid options are: `STREAM_DEFAULT`: Service may automatically determine build log streaming behavior. `STREAM_ON`: Build logs should be streamed to Google Cloud Storage. `STREAM_OFF`: Build logs should not be streamed to Google Cloud Storage; they will be written when the build is completed. See [Cloud Build Reference](https://cloud.google.com/cloud-build/docs/api/reference/rest/v1/projects.builds#logstreamingoption). | `` |\n| `dockerImage` | image that runs a Docker build. See [Cloud Builders](https://cloud.google.com/cloud-build/docs/cloud-builders). | `gcr.io/cloud-builders/docker` |\n| `kanikoImage` | image that runs a Kaniko build. See [Cloud Builders](https://cloud.google.com/cloud-build/docs/cloud-builders). | `gcr.io/kaniko-project/executor` |\n| `mavenImage` | image that runs a Maven build. See [Cloud Builders](https://cloud.google.com/cloud-build/docs/cloud-builders). | `gcr.io/cloud-builders/mvn` |\n| `gradleImage` | image that runs a Gradle build. See [Cloud Builders](https://cloud.google.com/cloud-build/docs/cloud-builders). | `gcr.io/cloud-builders/gradle` |\n| `packImage` | image that runs a Cloud Native Buildpacks build. See [Cloud Builders](https://cloud.google.com/cloud-build/docs/cloud-builders). | `gcr.io/k8s-skaffold/pack` |\n| `koImage` | image that runs a ko build. The image must contain Skaffold, Go, and a shell (runnable as `sh`) that supports here documents. See [Cloud Builders](https://cloud.google.com/cloud-build/docs/cloud-builders). | `gcr.io/k8s-skaffold/skaffold` |\n| `bucket` | specifies the Cloud Storage bucket to store the staged build sources. | `` |\n| `concurrency` | how many artifacts can be built concurrently. 0 means “no-limit”. | `0` |\n| `workerPool` | configures a pool of workers to run the build. | `` |\n| `region` | configures the region to run the build. If WorkerPool is configured, the region will be deduced from the WorkerPool configuration. If neither WorkerPool nor Region is configured, the build will be run in global(non-regional). See [Cloud Build locations](https://cloud.google.com/build/docs/locations). | `` |\n| `platformEmulatorInstallStep` | specifies a pre-build step to install the required tooling for QEMU emulation on the GoogleCloudBuild containers. This enables performing cross-platform builds on GoogleCloudBuild. If unspecified, Skaffold uses the `docker/binfmt` image by default. | `` |\n| `serviceAccount` | Google Cloud platform service account used by Cloud Build. If unspecified, it defaults to the Cloud Build service account generated when the Cloud Build API is enabled. | `` |\n\nThe `googleCloudBuild` builder replaces cache references to the artifact image with the tagged image to allow caching from the previously built image.\n\n**Example**\n\nThe following `build` section, instructs Skaffold to build a Docker image `gcr.io/k8s-skaffold/example` with Google Cloud Build:\n\n```yaml\nbuild:\n  artifacts:\n  - image: gcr.io/k8s-skaffold/example\n    docker:\n      cacheFrom:\n      # googleCloudBuild replaces cache references to the artifact image with\n      # the tagged image reference, useful for caching from the previous build.\n      - gcr.io/k8s-skaffold/example\n  googleCloudBuild:\n    projectId: YOUR-GCP-PROJECT\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://skaffold.dev/docs/builders/builder-types/docker", "title": "Docker Build", "description": "Skaffold supports building with Dockerfile", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 05:11:20", "type": "section_detail", "page_metadata": {"og:url": "https://skaffold.dev/docs/builders/builder-types/docker/", "og:description": "Skaffold supports building with Dockerfile\n locally in cluster on Google CloudBuild   Dockerfile with Docker locally If you have Docker installed, Skaffold can be configured to build artifacts with the local Docker daemon.\nBy default, Skaffold connects to the local Docker daemon using Docker Engine APIs, though it can also use the Docker command-line interface instead, which enables artifacts with BuildKit.\nAfter the artifacts are successfully built, Docker images will be pushed to the remote registry.", "modifiedTime": "2025-01-23T10:14:58-05:00", "twitter:title": "Docker Build", "twitter:card": "summary", "twitter:description": "Skaffold supports building with Dockerfile\n locally in cluster on Google CloudBuild   Dockerfile with Docker locally If you have Docker installed, Skaffold can be configured to build artifacts with the local Docker daemon.\nBy default, Skaffold connects to the local Docker daemon using Docker Engine APIs, though it can also use the Docker command-line interface instead, which enables artifacts with BuildKit.\nAfter the artifacts are successfully built, Docker images will be pushed to the remote registry.", "robots": "index, follow", "description": "Skaffold supports building with Dockerfile\n\nlocally\nin cluster\non Google CloudBuild \n\nDockerfile with Docker locally\nIf you have Docker\ninstalled, …", "article:modified_time": "2025-01-23T10:14:58-05:00", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "generator": "Hugo 0.99.1", "ogSiteName": "Skaffold", "article:section": "docs", "og:title": "Docker Build", "og:site_name": "Skaffold", "title": "Docker Build | Skaffold", "ogTitle": "Docker Build", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogDescription": "Skaffold supports building with Dockerfile\n locally in cluster on Google CloudBuild   Dockerfile with Docker locally If you have Docker installed, Skaffold can be configured to build artifacts with the local Docker daemon.\nBy default, Skaffold connects to the local Docker daemon using Docker Engine APIs, though it can also use the Docker command-line interface instead, which enables artifacts with BuildKit.\nAfter the artifacts are successfully built, Docker images will be pushed to the remote registry.", "ogUrl": "https://skaffold.dev/docs/builders/builder-types/docker/", "language": "en", "og:type": "article", "scrapeId": "b44d6f88-fdbb-460a-80b7-ecc974675754", "sourceURL": "https://skaffold.dev/docs/builders/builder-types/docker", "url": "https://skaffold.dev/docs/builders/builder-types/docker/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: Can you give me some code examples for Docker Build in skaffold?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Dockerfile with Docker locally Example**:\n\n```yaml\n```yaml\nbuild:\n  artifacts:\n  - image: gcr.io/k8s-skaffold/example\n    docker:\n      cacheFrom:\n      - gcr.io/k8s-skaffold/example\n  local: {}\n```\n```\n\nThis snippet shows you how to dockerfile with docker locally example, which is an important aspect of docker build.\n\n**Dockerfile with Docker locally Equivalent Example**:\n\n```yaml\n```yaml\nbuild:\n  artifacts:\n  - image: gcr.io/k8s-skaffold/example\n  local:\n    useDockerCLI: false\n    useBuildkit: false\n```\n```\n\nThis snippet shows you how to dockerfile with docker locally equivalent example, which is an important aspect of docker build.\n\n**Artifact dependency Example**:\n\n```yaml\n```yaml\nbuild:\n  artifacts:\n  - image: image1\n    requires:\n      - image: image2\n        alias: IMAGE2\n  - image: image2\n  local: {}\n```\n```\n\nThis snippet shows you how to artifact dependency example, which is an important aspect of docker build.\n\n**Dockerfile in-cluster with Kaniko Example**:\n\n```yaml\n```yaml\nbuild:\n  artifacts:\n    - image: gcr.io/k8s-skaffold/example\n      kaniko: {}\n  cluster:\n    pullSecretName: YOUR-PULL-SECRET-NAME\n```\n```\n\nThis snippet shows you how to dockerfile in-cluster with kaniko example, which is an important aspect of docker build.\n\n**Dockerfile remotely with Google Cloud Build Example**:\n\n```yaml\n```yaml\nbuild:\n  artifacts:\n  - image: gcr.io/k8s-skaffold/example\n    docker:\n      cacheFrom:\n      - gcr.io/k8s-skaffold/example\n  googleCloudBuild:\n    projectId: YOUR-GCP-PROJECT\n```\n```\n\nThis snippet shows you how to dockerfile remotely with google cloud build example, which is an important aspect of docker build.\n\n", "metadata": {"source_url": "https://skaffold.dev/docs/builders/builder-types/docker", "title": "Docker Build", "description": "Skaffold supports building with Dockerfile", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 05:11:20", "type": "code_examples", "page_metadata": {"og:url": "https://skaffold.dev/docs/builders/builder-types/docker/", "og:description": "Skaffold supports building with Dockerfile\n locally in cluster on Google CloudBuild   Dockerfile with Docker locally If you have Docker installed, Skaffold can be configured to build artifacts with the local Docker daemon.\nBy default, Skaffold connects to the local Docker daemon using Docker Engine APIs, though it can also use the Docker command-line interface instead, which enables artifacts with BuildKit.\nAfter the artifacts are successfully built, Docker images will be pushed to the remote registry.", "modifiedTime": "2025-01-23T10:14:58-05:00", "twitter:title": "Docker Build", "twitter:card": "summary", "twitter:description": "Skaffold supports building with Dockerfile\n locally in cluster on Google CloudBuild   Dockerfile with Docker locally If you have Docker installed, Skaffold can be configured to build artifacts with the local Docker daemon.\nBy default, Skaffold connects to the local Docker daemon using Docker Engine APIs, though it can also use the Docker command-line interface instead, which enables artifacts with BuildKit.\nAfter the artifacts are successfully built, Docker images will be pushed to the remote registry.", "robots": "index, follow", "description": "Skaffold supports building with Dockerfile\n\nlocally\nin cluster\non Google CloudBuild \n\nDockerfile with Docker locally\nIf you have Docker\ninstalled, …", "article:modified_time": "2025-01-23T10:14:58-05:00", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "generator": "Hugo 0.99.1", "ogSiteName": "Skaffold", "article:section": "docs", "og:title": "Docker Build", "og:site_name": "Skaffold", "title": "Docker Build | Skaffold", "ogTitle": "Docker Build", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogDescription": "Skaffold supports building with Dockerfile\n locally in cluster on Google CloudBuild   Dockerfile with Docker locally If you have Docker installed, Skaffold can be configured to build artifacts with the local Docker daemon.\nBy default, Skaffold connects to the local Docker daemon using Docker Engine APIs, though it can also use the Docker command-line interface instead, which enables artifacts with BuildKit.\nAfter the artifacts are successfully built, Docker images will be pushed to the remote registry.", "ogUrl": "https://skaffold.dev/docs/builders/builder-types/docker/", "language": "en", "og:type": "article", "scrapeId": "b44d6f88-fdbb-460a-80b7-ecc974675754", "sourceURL": "https://skaffold.dev/docs/builders/builder-types/docker", "url": "https://skaffold.dev/docs/builders/builder-types/docker/", "statusCode": 200}}}
{"text": "System: You are a helpful skaffold expert.\n\nUser: What are some tips for using Docker Build in skaffold effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nEnsure Docker is installed and configured properly for local builds.\n\nUse Kaniko for building images in environments where Docker cannot be run securely.\n\nSet up proper credentials for Kaniko to push images to a registry.\n\nUse Google Cloud Build for remote builds to leverage cloud resources.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://skaffold.dev/docs/builders/builder-types/docker", "title": "Docker Build", "description": "Skaffold supports building with Dockerfile", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 05:11:20", "type": "best_practices", "page_metadata": {"og:url": "https://skaffold.dev/docs/builders/builder-types/docker/", "og:description": "Skaffold supports building with Dockerfile\n locally in cluster on Google CloudBuild   Dockerfile with Docker locally If you have Docker installed, Skaffold can be configured to build artifacts with the local Docker daemon.\nBy default, Skaffold connects to the local Docker daemon using Docker Engine APIs, though it can also use the Docker command-line interface instead, which enables artifacts with BuildKit.\nAfter the artifacts are successfully built, Docker images will be pushed to the remote registry.", "modifiedTime": "2025-01-23T10:14:58-05:00", "twitter:title": "Docker Build", "twitter:card": "summary", "twitter:description": "Skaffold supports building with Dockerfile\n locally in cluster on Google CloudBuild   Dockerfile with Docker locally If you have Docker installed, Skaffold can be configured to build artifacts with the local Docker daemon.\nBy default, Skaffold connects to the local Docker daemon using Docker Engine APIs, though it can also use the Docker command-line interface instead, which enables artifacts with BuildKit.\nAfter the artifacts are successfully built, Docker images will be pushed to the remote registry.", "robots": "index, follow", "description": "Skaffold supports building with Dockerfile\n\nlocally\nin cluster\non Google CloudBuild \n\nDockerfile with Docker locally\nIf you have Docker\ninstalled, …", "article:modified_time": "2025-01-23T10:14:58-05:00", "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no", "generator": "Hugo 0.99.1", "ogSiteName": "Skaffold", "article:section": "docs", "og:title": "Docker Build", "og:site_name": "Skaffold", "title": "Docker Build | Skaffold", "ogTitle": "Docker Build", "favicon": "https://skaffold.dev/favicons/favicon-16x16.png", "ogDescription": "Skaffold supports building with Dockerfile\n locally in cluster on Google CloudBuild   Dockerfile with Docker locally If you have Docker installed, Skaffold can be configured to build artifacts with the local Docker daemon.\nBy default, Skaffold connects to the local Docker daemon using Docker Engine APIs, though it can also use the Docker command-line interface instead, which enables artifacts with BuildKit.\nAfter the artifacts are successfully built, Docker images will be pushed to the remote registry.", "ogUrl": "https://skaffold.dev/docs/builders/builder-types/docker/", "language": "en", "og:type": "article", "scrapeId": "b44d6f88-fdbb-460a-80b7-ecc974675754", "sourceURL": "https://skaffold.dev/docs/builders/builder-types/docker", "url": "https://skaffold.dev/docs/builders/builder-types/docker/", "statusCode": 200}}}

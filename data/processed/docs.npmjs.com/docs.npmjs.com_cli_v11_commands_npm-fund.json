[
  {
    "index": 0,
    "tags": [
      "npm fund command"
    ],
    "content": [
      "# npm-fund",
      "Retrieve funding information",
      "Select CLI Version:",
      "Version 11.0.0 (Latest)",
      "See DetailsTable of contents"
    ],
    "error": false
  },
  {
    "index": 1,
    "tags": [
      "synopsis"
    ],
    "content": [
      "## [Synopsis](https://docs.npmjs.com/cli/v11/commands/<#synopsis>)",
      "``` npm fund [<package-spec>] ```"
    ],
    "error": false
  },
  {
    "index": 2,
    "tags": [
      "description"
    ],
    "content": [
      "## [Description](https://docs.npmjs.com/cli/v11/commands/<#description>)",
      "This command retrieves information on how to fund the dependencies of a given project. If no package name is provided, it will list all dependencies that are looking for funding in a tree structure, listing the type of funding and the url to visit. If a package name is provided then it tries to open its funding url using the `--browser`[ config](https://docs.npmjs.com/cli/v11/commands/</cli/v11/using-npm/config#browser>) param; if there are multiple funding sources for the package, the user will be instructed to pass the `--which` option to disambiguate.",
      "The list will avoid duplicated entries and will stack all packages that share the same url as a single entry. Thus, the list does not have the same shape of the output from `npm ls`."
    ],
    "error": false
  },
  {
    "index": 3,
    "tags": [
      "example"
    ],
    "content": [
      "### [Example](https://docs.npmjs.com/cli/v11/commands/<#example>)"
    ],
    "error": false
  },
  {
    "index": 4,
    "tags": [
      "workspaces support"
    ],
    "content": [
      "## [Workspaces support](https://docs.npmjs.com/cli/v11/commands/<#workspaces-support>)",
      "It\\'s possible to filter the results to only include a single workspace and its dependencies using the `workspace`[ config](https://docs.npmjs.com/cli/v11/commands/</cli/v11/using-npm/config#workspace>) option."
    ],
    "error": false
  },
  {
    "index": 5,
    "tags": [
      "example"
    ],
    "content": [
      "### [Example:](https://docs.npmjs.com/cli/v11/commands/<#example-1>)",
      "Here\\'s an example running `npm fund` in a project with a configured workspace `a`:",
      "``` $ npm fund",
      "test-workspaces-fund@1.0.0",
      "+-- https://example.com/a",
      "||`-- a@1.0.0",
      "|`-- https://example.com/maintainer",
      "|`-- foo@1.0.0",
      "+-- https://example.com/npmcli-funding",
      "|`-- @npmcli/test-funding",
      "`-- https://example.com/org",
      "`-- bar@2.0.0 ```",
      "And here is an example of the expected result when filtering only by a specific workspace `a` in the same project:",
      "``` $ npm fund -w a",
      "test-workspaces-fund@1.0.0",
      "`-- https://example.com/a",
      "|`-- a@1.0.0",
      "`-- https://example.com/maintainer",
      "`-- foo@2.0.0 ```"
    ],
    "error": false
  },
  {
    "index": 6,
    "tags": [
      "configuration"
    ],
    "content": [
      "## [Configuration](https://docs.npmjs.com/cli/v11/commands/<#configuration>)"
    ],
    "error": false
  },
  {
    "index": 7,
    "tags": [
      "json configuration"
    ],
    "content": [
      "### `json`[](https://docs.npmjs.com/cli/v11/commands/<#json>)",
      "  * Default: false",
      "  * Type: Boolean ",
      "Whether or not to output JSON data, rather than the normal output.",
      "  * In `npm pkg set` it enables parsing set values with JSON.parse() before saving them to your `package.json`. ",
      "Not supported by all npm commands."
    ],
    "error": false
  },
  {
    "index": 8,
    "tags": [
      "browser configuration"
    ],
    "content": [
      "### `browser`[](https://docs.npmjs.com/cli/v11/commands/<#browser>)",
      "  * Default: OS X: `\\\"open\\\"`, Windows: `\\\"start\\\"`, Others: `\\\"xdg-open\\\"`",
      "  * Type: null, Boolean, or String ",
      "The browser that is called by npm commands to open websites.",
      "Set to `false` to suppress browser behavior and instead print urls to terminal.",
      "Set to `true` to use default system URL opener."
    ],
    "error": false
  },
  {
    "index": 9,
    "tags": [
      "unicode configuration"
    ],
    "content": [
      "### `unicode`[](https://docs.npmjs.com/cli/v11/commands/<#unicode>)",
      "  * Default: false on windows, true on mac/unix systems with a unicode locale, as defined by the `LC_ALL`, `LC_CTYPE`, or `LANG` environment variables.",
      "  * Type: Boolean ",
      "When set to true, npm uses unicode characters in the tree output. When false, it uses ascii characters instead of unicode glyphs."
    ],
    "error": false
  },
  {
    "index": 10,
    "tags": [
      "workspace configuration"
    ],
    "content": [
      "### `workspace`[](https://docs.npmjs.com/cli/v11/commands/<#workspace>)",
      "  * Default:",
      "  * Type: String (can be set multiple times) ",
      "Enable running a command in the context of the configured workspaces of the current project while filtering by running only the workspaces defined by this configuration option.",
      "Valid values for the `workspace` config are either:",
      "  * Workspace names",
      "  * Path to a workspace directory",
      "  * Path to a parent workspace directory (will result in selecting all workspaces within that folder) ",
      "When set for the `npm init` command, this may be set to the folder of a workspace which does not yet exist, to create the folder and set it up as a brand new workspace within the project.",
      "This value is not exported to the environment for child processes."
    ],
    "error": false
  },
  {
    "index": 11,
    "tags": [
      "which configuration"
    ],
    "content": [
      "### `which`[](https://docs.npmjs.com/cli/v11/commands/<#which>)",
      "  * Default: null",
      "  * Type: null or Number ",
      "If there are multiple funding sources, which 1-indexed source URL to open."
    ],
    "error": false
  },
  {
    "index": 12,
    "tags": [
      "see also"
    ],
    "content": [
      "## [See Also](https://docs.npmjs.com/cli/v11/commands/<#see-also>)",
      "  * [package spec](https://docs.npmjs.com/cli/v11/commands/</cli/v11/using-npm/package-spec>)",
      "  * [npm install](https://docs.npmjs.com/cli/v11/commands/</cli/v11/commands/npm-install>)",
      "  * [npm docs](https://docs.npmjs.com/cli/v11/commands/</cli/v11/commands/npm-docs>)",
      "  * [npm ls](https://docs.npmjs.com/cli/v11/commands/</cli/v11/commands/npm-ls>)",
      "  * [npm config](https://docs.npmjs.com/cli/v11/commands/</cli/v11/commands/npm-config>)",
      "  * [npm workspaces](https://docs.npmjs.com/cli/v11/commands/</cli/v11/using-npm/workspaces>)"
    ],
    "error": false
  }
]
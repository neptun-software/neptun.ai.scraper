[
  {
    "index": 0,
    "tags": [
      "npm-cli-commands"
    ],
    "content": [
      "npm",
      "npm access",
      "npm adduser",
      "npm audit",
      "npm bugs",
      "npm cache",
      "npm ci",
      "npm completion",
      "npm config",
      "npm dedupe",
      "npm deprecate",
      "npm diff",
      "npm dist-tag",
      "npm docs",
      "npm doctor",
      "npm edit",
      "npm exec",
      "npm explain",
      "npm explore",
      "npm find-dupes",
      "npm fund",
      "npm help",
      "npm help-search",
      "npm init",
      "npm install",
      "npm install-ci-test",
      "npm install-test",
      "npm link",
      "npm login",
      "npm logout",
      "npm ls",
      "npm org",
      "npm outdated",
      "npm owner",
      "npm pack",
      "npm ping",
      "npm pkg",
      "npm prefix",
      "npm profile",
      "npm prune",
      "npm publish",
      "npm query",
      "npm rebuild",
      "npm repo",
      "npm restart",
      "npm root",
      "npm run-script",
      "npm sbom",
      "npm search",
      "npm shrinkwrap",
      "npm star",
      "npm stars",
      "npm start",
      "npm stop",
      "npm team",
      "npm test",
      "npm token",
      "npm uninstall",
      "npm unpublish",
      "npm unstar",
      "npm update",
      "npm version",
      "npm view",
      "npm whoami",
      "npx"
    ],
    "error": false
  },
  {
    "index": 1,
    "tags": [
      "npm-find-dupes"
    ],
    "content": [
      "# npm-find-dupes",
      "Find duplication in the package tree",
      "Select CLI Version:",
      "Version 11.0.0 (Latest)",
      "See DetailsTable of contents",
      "Synopsis",
      "Description",
      "Configuration",
      "install-strategy",
      "legacy-bundling",
      "global-style",
      "strict-peer-deps",
      "package-lock",
      "omit",
      "include",
      "ignore-scripts",
      "audit",
      "bin-links",
      "fund",
      "workspace",
      "workspaces",
      "include-workspace-root",
      "install-links",
      "See Also"
    ],
    "error": false
  },
  {
    "index": 2,
    "tags": [
      "npm-find-dupes-synopsis"
    ],
    "content": [
      "## Synopsis",
      "``` npm find-dupes ```"
    ],
    "error": false
  },
  {
    "index": 3,
    "tags": [
      "npm-find-dupes-description"
    ],
    "content": [
      "## Description",
      "Runs `npm dedupe` in `--dry-run` mode, making npm only output the duplications, without actually changing the package tree."
    ],
    "error": false
  },
  {
    "index": 4,
    "tags": [
      "npm-find-dupes-configuration"
    ],
    "content": [
      "## Configuration",
      "### `install-strategy`",
      "Default: \"hoisted\"",
      "Type: \"hoisted\", \"nested\", \"shallow\", or \"linked\"",
      "Sets the strategy for installing packages in node_modules. hoisted (default): Install non-duplicated in top-level, and duplicated as necessary within directory structure. nested: (formerly --legacy-bundling) install in place, no hoisting. shallow (formerly --global-style) only install direct deps at top-level. linked: (experimental) install in node_modules/.store, link in place, unhoisted."
    ],
    "error": false
  },
  {
    "index": 5,
    "tags": [
      "npm-find-dupes-legacy-bundling"
    ],
    "content": [
      "### `legacy-bundling`",
      "Default: false",
      "Type: Boolean",
      "DEPRECATED: This option has been deprecated in favor of `--install-strategy=nested`",
      "Instead of hoisting package installs in `node_modules`, install packages in the same manner that they are depended on. This may cause very deep directory structures and duplicate package installs as there is no de-duplicating. Sets `--install-strategy=nested`."
    ],
    "error": false
  },
  {
    "index": 6,
    "tags": [
      "npm-find-dupes-global-style"
    ],
    "content": [
      "### `global-style`",
      "Default: false",
      "Type: Boolean",
      "DEPRECATED: This option has been deprecated in favor of `--install-strategy=shallow`",
      "Only install direct dependencies in the top level `node_modules`, but hoist on deeper dependencies. Sets `--install-strategy=shallow`."
    ],
    "error": false
  },
  {
    "index": 7,
    "tags": [
      "npm-find-dupes-strict-peer-deps"
    ],
    "content": [
      "### `strict-peer-deps`",
      "Default: false",
      "Type: Boolean",
      "If set to `true`, and `--legacy-peer-deps` is not set, then _any_ conflicting `peerDependencies` will be treated as an install failure, even if npm could reasonably guess the appropriate resolution based on non-peer dependency relationships.",
      "By default, conflicting `peerDependencies` deep in the dependency graph will be resolved using the nearest non-peer dependency specification, even if doing so will result in some packages receiving a peer dependency outside the range set in their package's `peerDependencies` object.",
      "When such an override is performed, a warning is printed, explaining the conflict and the packages involved. If `--strict-peer-deps` is set, then this warning is treated as a failure."
    ],
    "error": false
  },
  {
    "index": 8,
    "tags": [
      "npm-find-dupes-package-lock"
    ],
    "content": [
      "### `package-lock`",
      "Default: true",
      "Type: Boolean",
      "If set to false, then ignore `package-lock.json` files when installing. This will also prevent _writing_ `package-lock.json` if `save` is true."
    ],
    "error": false
  },
  {
    "index": 9,
    "tags": [
      "npm-find-dupes-omit"
    ],
    "content": [
      "### `omit`",
      "Default: 'dev' if the `NODE_ENV` environment variable is set to 'production', otherwise empty.",
      "Type: \"dev\", \"optional\", or \"peer\" (can be set multiple times)",
      "Dependency types to omit from the installation tree on disk.",
      "Note that these dependencies _are_ still resolved and added to the `package-lock.json` or `npm-shrinkwrap.json` file. They are just not physically installed on disk.",
      "If a package type appears in both the `--include` and `--omit` lists, then it will be included.",
      "If the resulting omit list includes `'dev'`, then the `NODE_ENV` environment variable will be set to `'production'` for all lifecycle scripts."
    ],
    "error": false
  },
  {
    "index": 10,
    "tags": [
      "npm-find-dupes-include"
    ],
    "content": [
      "### `include`",
      "Default:",
      "Type: \"prod\", \"dev\", \"optional\", or \"peer\" (can be set multiple times)",
      "Option that allows for defining which types of dependencies to install.",
      "This is the inverse of `--omit=<type>`.",
      "Dependency types specified in `--include` will not be omitted, regardless of the order in which omit/include are specified on the command-line."
    ],
    "error": false
  },
  {
    "index": 11,
    "tags": [
      "npm-find-dupes-ignore-scripts"
    ],
    "content": [
      "### `ignore-scripts`",
      "Default: false",
      "Type: Boolean",
      "If true, npm does not run scripts specified in package.json files.",
      "Note that commands explicitly intended to run a particular script, such as `npm start`, `npm stop`, `npm restart`, `npm test`, and `npm run-script` will still run their intended script if `ignore-scripts` is set, but they will _not_ run any pre- or post-scripts."
    ],
    "error": false
  },
  {
    "index": 12,
    "tags": [
      "npm-find-dupes-audit"
    ],
    "content": [
      "### `audit`",
      "Default: true",
      "Type: Boolean",
      "When \"true\" submit audit reports alongside the current npm command to the default registry and all registries configured for scopes. See the documentation for `npm audit` for details on what is submitted."
    ],
    "error": false
  },
  {
    "index": 13,
    "tags": [
      "npm-find-dupes-bin-links"
    ],
    "content": [
      "### `bin-links`",
      "Default: true",
      "Type: Boolean",
      "Tells npm to create symlinks (or `.cmd` shims on Windows) for package executables.",
      "Set to false to have it not do this. This can be used to work around the fact that some file systems don't support symlinks, even on ostensibly Unix systems."
    ],
    "error": false
  },
  {
    "index": 14,
    "tags": [
      "npm-find-dupes-fund"
    ],
    "content": [
      "### `fund`",
      "Default: true",
      "Type: Boolean",
      "When \"true\" displays the message at the end of each `npm install` acknowledging the number of dependencies looking for funding. See `npm fund` for details."
    ],
    "error": false
  },
  {
    "index": 15,
    "tags": [
      "npm-find-dupes-workspace"
    ],
    "content": [
      "### `workspace`",
      "Default:",
      "Type: String (can be set multiple times)",
      "Enable running a command in the context of the configured workspaces of the current project while filtering by running only the workspaces defined by this configuration option.",
      "Valid values for the `workspace` config are either:",
      "Workspace names",
      "Path to a workspace directory",
      "Path to a parent workspace directory (will result in selecting all workspaces within that folder)",
      "When set for the `npm init` command, this may be set to the folder of a workspace which does not yet exist, to create the folder and set it up as a brand new workspace within the project.",
      "This value is not exported to the environment for child processes."
    ],
    "error": false
  },
  {
    "index": 16,
    "tags": [
      "npm-find-dupes-workspaces"
    ],
    "content": [
      "### `workspaces`",
      "Default: null",
      "Type: null or Boolean",
      "Set to true to run the command in the context of **all** configured workspaces.",
      "Explicitly setting this to false will cause commands like `install` to ignore workspaces altogether. When not set explicitly:",
      "Commands that operate on the `node_modules` tree (install, update, etc.) will link workspaces into the `node_modules` folder. - Commands that do other things (test, exec, publish, etc.) will operate on the root project, _unless_ one or more workspaces are specified in the `workspace` config.",
      "This value is not exported to the environment for child processes."
    ],
    "error": false
  },
  {
    "index": 17,
    "tags": [
      "npm-find-dupes-include-workspace-root"
    ],
    "content": [
      "### `include-workspace-root`",
      "Default: false",
      "Type: Boolean",
      "Include the workspace root when workspaces are enabled for a command.",
      "When false, specifying individual workspaces via the `workspace` config, or all workspaces via the `workspaces` flag, will cause npm to operate only on the specified workspaces, and not on the root project.",
      "This value is not exported to the environment for child processes."
    ],
    "error": false
  },
  {
    "index": 18,
    "tags": [
      "npm-find-dupes-install-links"
    ],
    "content": [
      "### `install-links`",
      "Default: false",
      "Type: Boolean",
      "When set file: protocol dependencies will be packed and installed as regular dependencies instead of creating a symlink. This option has no effect on workspaces."
    ],
    "error": false
  },
  {
    "index": 19,
    "tags": [
      "npm-find-dupes-see-also"
    ],
    "content": [
      "## See Also",
      "npm dedupe",
      "npm ls",
      "npm update",
      "npm install"
    ],
    "error": false
  }
]
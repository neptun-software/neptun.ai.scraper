{"text": "System: You are a helpful biomejs-guides expert.\n\nUser: Can you explain what 404 is in biomejs-guides?\n\nAssistant: Sure, I'd be happy to explain 404 in biomejs-guides.\n\n# 404\n\nBiome not found. Check the URL or try using the search bar.", "metadata": {"source_url": "https://biomejs.dev/guides", "title": "404", "description": "Biome not found. Check the URL or try using the search bar.", "has_code_examples": false, "has_best_practices": false, "section_count": 0, "timestamp": "2025-02-28 21:59:53", "type": "overview", "page_metadata": {"ogSiteName": "Biome", "og:site_name": "Biome", "ogUrl": "https://biomejs.dev/404/", "ogLocale": "en", "og:title": "404", "og:image": "https://biomejs.dev/og/404.png", "og:url": "https://biomejs.dev/404/", "ogImage": "https://biomejs.dev/og/404.png", "og:type": "article", "twitter:image": "https://biomejs.dev/og/404.png", "twitter:card": "summary_large_image", "ogTitle": "404", "favicon": "https://biomejs.dev/img/favicon.svg", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "language": "en", "title": "404 | Biome", "og:locale": "en", "viewport": "width=device-width, initial-scale=1", "scrapeId": "83f12aa9-f6d2-4d21-87bc-ff25534a735b", "sourceURL": "https://biomejs.dev/guides", "url": "https://biomejs.dev/guides", "statusCode": 404, "error": "Not Found"}}}
{"text": "System: You are a helpful biomejs-guides expert.\n\nUser: Can you explain what Getting Started is in biomejs-guides?\n\nAssistant: Sure, I'd be happy to explain Getting Started in biomejs-guides.\n\n# Getting Started\n\nThis page provides a comprehensive guide on how to install, configure, and use Biome, along with tips for CI setup and next steps.Here's a quick rundown of what this is about:\n\n## Installation\n\nThe fastest way to download Biome is to use a package manager such as `npm`. This requires Node.js v14.18 or newer. The CLI is also available as a standalone executable if you want to use Biome without installing Node.js.\n\nTo install Biome, run the following commands in a directory containing a `package.json` file.\n\n- npm\n- yarn\n- pnpm\n- bun\n- deno\n\n```\nnpm install --save-dev --save-exact @biomejs/biome\n```\n\n```\nyarn add --dev --exact @biomejs/biome\n```\n\n```\npnpm add --save-dev --save-exact @biomejs/biome\n```\n\n```\nbun add --dev --exact @biomejs/biome\n```\n\n```\ndeno add --dev npm:@biomejs/biome\n```\n\n## Configuration\n\nWe recommend that you create a `biome.json` or a `biome.jsonc` configuration file for each project. This eliminates the need to repeat the CLI options each time you run a command, and ensures that Biome uses the same configuration in your editor. Some options are also only available from a configuration file. If you are happy with Biome’s defaults, you don’t need to create a configuration file. To create the `biome.json` file, run the `init` command in the root folder of your project:\n\n```\nnpx @biomejs/biome init\n```\n\n```\nyarn biome init\n```\n\n```\npnpm biome init\n```\n\n```\nbunx biome init\n```\n\n```\ndeno run -A npm:@biomejs/biome init\n```\n\nPass the `--jsonc` option to emit a `biome.jsonc` file instead.\n\nAfter running the `init` command, you’ll have a new `biome.json` file in your directory:\n\n```\n{\n  \"$schema\": \"https://biomejs.dev/schemas/1.9.4/schema.json\",\n  \"vcs\": {\n    \"enabled\": false,\n    \"clientKind\": \"git\",\n    \"useIgnoreFile\": false\n  },\n  \"files\": { \"ignoreUnknown\": false, \"ignore\": [] },\n  \"formatter\": { \"enabled\": true, \"indentStyle\": \"tab\" },\n  \"organizeImports\": { \"enabled\": true },\n  \"linter\": {\n    \"enabled\": true,\n    \"rules\": { \"recommended\": true }\n  },\n  \"javascript\": { \"formatter\": { \"quoteStyle\": \"double\" } }\n}\n```\n\nThe `linter.enabled: true` enables the linter and `rules.recommended: true` enables the recommended rules. This corresponds to the default settings.\n\nFormatting is enabled **by default**, but you can disable it by explicitly using `formatter.enabled: false`.\n\n## Usage\n\nThe Biome CLI comes with many commands and options, so you can use only what you need.\n\nYou can format files and directories using the `format` command with the `--write` option:\n\n```\nnpx @biomejs/biome format --write <files>\n```\n\n```\nyarn biome format --write <files>\n```\n\n```\npnpm biome format --write <files>\n```\n\n```\nbunx biome format --write <files>\n```\n\n```\ndeno run -A npm:@biomejs/biome format --write <files>\n```\n\nYou can lint and apply safe fixes to files and directories using the `lint` command with the `--write` option:\n\n```\nnpx @biomejs/biome lint --write <files>\n```\n\n```\nyarn biome lint --write <files>\n```\n\n```\npnpm biome lint --write <files>\n```\n\n```\nbunx biome lint --write <files>\n```\n\n```\ndeno run -A npm:@biomejs/biome lint --write <files>\n```\n\nYou can run both of them by leveraging the `check` command:\n\n```\nnpx @biomejs/biome check --write <files>\n```\n\n```\nyarn biome check --write <files>\n```\n\n```\npnpm biome check --write <files>\n```\n\n```\nbunx biome check --write <files>\n```\n\n```\ndeno run -A npm:@biomejs/biome check --write <files>\n```\n\nThe `check` command runs multiple tools at once. It formats, lints, and organizes imports.\n\n## Install an editor plugin\n\nWe recommend installing an editor plugin to get the most out of Biome. Check out the editor page to know which editors support Biome.\n\n## CI Setup\n\nIf you’re using Node.js, the recommended way to run Biome in CI is to use your preferred package manager. This ensures that your CI pipeline uses the same version of Biome as you do inside the editor or when running local CLI commands. Alternatively, you can use a dedicated CI Action.\n\n## Next Steps\n\nSuccess! You’re now ready to use Biome. 🥳\n\n- Migrate from ESLint and Prettier\n- Learn more about how to configure Biome\n- Learn more about how to use and configure the formatter\n- Learn more about how to use and configure the linter\n- Get familiar with the CLI options\n- Get familiar with the configuration options\n- Join our community on Discord.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://biomejs.dev/guides/getting-started", "title": "Getting Started", "description": "This page provides a comprehensive guide on how to install, configure, and use Biome, along with tips for CI setup and next steps.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-02-28 22:00:52", "type": "overview", "page_metadata": {"og:locale": "en", "twitter:card": "summary_large_image", "ogTitle": "Getting Started", "language": "en", "og:title": "Getting Started", "title": "Getting Started | Biome", "og:description": "Learn how to set up a new project with Biome.", "og:site_name": "Biome", "og:image": "https://biomejs.dev/og/guides/getting-started.png", "ogLocale": "en", "description": "Learn how to set up a new project with Biome.", "ogUrl": "https://biomejs.dev/guides/getting-started/", "ogDescription": "Learn how to set up a new project with Biome.", "ogSiteName": "Biome", "favicon": "https://biomejs.dev/img/favicon.svg", "ogImage": "https://biomejs.dev/og/guides/getting-started.png", "og:type": "article", "og:url": "https://biomejs.dev/guides/getting-started/", "viewport": "width=device-width, initial-scale=1", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "twitter:image": "https://biomejs.dev/og/guides/getting-started.png", "scrapeId": "98d083ae-2fb6-441a-b425-ad0326a3a763", "sourceURL": "https://biomejs.dev/guides/getting-started", "url": "https://biomejs.dev/guides/getting-started/", "statusCode": 200}}}
{"text": "System: You are a helpful biomejs-guides expert.\n\nUser: How do I installation in biomejs-guides?\n\nAssistant: To installation in biomejs-guides, here's what you do:\nThe fastest way to download Biome is to use a package manager such as `npm`. This requires Node.js v14.18 or newer. The CLI is also available as a standalone executable if you want to use Biome without installing Node.js.\n\nTo install Biome, run the following commands in a directory containing a `package.json` file.\n\n- npm\n- yarn\n- pnpm\n- bun\n- deno\n\n```\nnpm install --save-dev --save-exact @biomejs/biome\n```\n\n```\nyarn add --dev --exact @biomejs/biome\n```\n\n```\npnpm add --save-dev --save-exact @biomejs/biome\n```\n\n```\nbun add --dev --exact @biomejs/biome\n```\n\n```\ndeno add --dev npm:@biomejs/biome\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://biomejs.dev/guides/getting-started", "title": "Getting Started", "description": "This page provides a comprehensive guide on how to install, configure, and use Biome, along with tips for CI setup and next steps.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-02-28 22:00:52", "type": "section_detail", "page_metadata": {"og:locale": "en", "twitter:card": "summary_large_image", "ogTitle": "Getting Started", "language": "en", "og:title": "Getting Started", "title": "Getting Started | Biome", "og:description": "Learn how to set up a new project with Biome.", "og:site_name": "Biome", "og:image": "https://biomejs.dev/og/guides/getting-started.png", "ogLocale": "en", "description": "Learn how to set up a new project with Biome.", "ogUrl": "https://biomejs.dev/guides/getting-started/", "ogDescription": "Learn how to set up a new project with Biome.", "ogSiteName": "Biome", "favicon": "https://biomejs.dev/img/favicon.svg", "ogImage": "https://biomejs.dev/og/guides/getting-started.png", "og:type": "article", "og:url": "https://biomejs.dev/guides/getting-started/", "viewport": "width=device-width, initial-scale=1", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "twitter:image": "https://biomejs.dev/og/guides/getting-started.png", "scrapeId": "98d083ae-2fb6-441a-b425-ad0326a3a763", "sourceURL": "https://biomejs.dev/guides/getting-started", "url": "https://biomejs.dev/guides/getting-started/", "statusCode": 200}}}
{"text": "System: You are a helpful biomejs-guides expert.\n\nUser: How do I configuration in biomejs-guides?\n\nAssistant: To configuration in biomejs-guides, here's what you do:\nWe recommend that you create a `biome.json` or a `biome.jsonc` configuration file for each project. This eliminates the need to repeat the CLI options each time you run a command, and ensures that Biome uses the same configuration in your editor. Some options are also only available from a configuration file. If you are happy with Biome’s defaults, you don’t need to create a configuration file. To create the `biome.json` file, run the `init` command in the root folder of your project:\n\n```\nnpx @biomejs/biome init\n```\n\n```\nyarn biome init\n```\n\n```\npnpm biome init\n```\n\n```\nbunx biome init\n```\n\n```\ndeno run -A npm:@biomejs/biome init\n```\n\nPass the `--jsonc` option to emit a `biome.jsonc` file instead.\n\nAfter running the `init` command, you’ll have a new `biome.json` file in your directory:\n\n```\n{\n  \"$schema\": \"https://biomejs.dev/schemas/1.9.4/schema.json\",\n  \"vcs\": {\n    \"enabled\": false,\n    \"clientKind\": \"git\",\n    \"useIgnoreFile\": false\n  },\n  \"files\": { \"ignoreUnknown\": false, \"ignore\": [] },\n  \"formatter\": { \"enabled\": true, \"indentStyle\": \"tab\" },\n  \"organizeImports\": { \"enabled\": true },\n  \"linter\": {\n    \"enabled\": true,\n    \"rules\": { \"recommended\": true }\n  },\n  \"javascript\": { \"formatter\": { \"quoteStyle\": \"double\" } }\n}\n```\n\nThe `linter.enabled: true` enables the linter and `rules.recommended: true` enables the recommended rules. This corresponds to the default settings.\n\nFormatting is enabled **by default**, but you can disable it by explicitly using `formatter.enabled: false`..\nPretty straightforward, right?", "metadata": {"source_url": "https://biomejs.dev/guides/getting-started", "title": "Getting Started", "description": "This page provides a comprehensive guide on how to install, configure, and use Biome, along with tips for CI setup and next steps.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-02-28 22:00:52", "type": "section_detail", "page_metadata": {"og:locale": "en", "twitter:card": "summary_large_image", "ogTitle": "Getting Started", "language": "en", "og:title": "Getting Started", "title": "Getting Started | Biome", "og:description": "Learn how to set up a new project with Biome.", "og:site_name": "Biome", "og:image": "https://biomejs.dev/og/guides/getting-started.png", "ogLocale": "en", "description": "Learn how to set up a new project with Biome.", "ogUrl": "https://biomejs.dev/guides/getting-started/", "ogDescription": "Learn how to set up a new project with Biome.", "ogSiteName": "Biome", "favicon": "https://biomejs.dev/img/favicon.svg", "ogImage": "https://biomejs.dev/og/guides/getting-started.png", "og:type": "article", "og:url": "https://biomejs.dev/guides/getting-started/", "viewport": "width=device-width, initial-scale=1", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "twitter:image": "https://biomejs.dev/og/guides/getting-started.png", "scrapeId": "98d083ae-2fb6-441a-b425-ad0326a3a763", "sourceURL": "https://biomejs.dev/guides/getting-started", "url": "https://biomejs.dev/guides/getting-started/", "statusCode": 200}}}
{"text": "System: You are a helpful biomejs-guides expert.\n\nUser: How do I usage in biomejs-guides?\n\nAssistant: To usage in biomejs-guides, here's what you do:\nThe Biome CLI comes with many commands and options, so you can use only what you need.\n\nYou can format files and directories using the `format` command with the `--write` option:\n\n```\nnpx @biomejs/biome format --write <files>\n```\n\n```\nyarn biome format --write <files>\n```\n\n```\npnpm biome format --write <files>\n```\n\n```\nbunx biome format --write <files>\n```\n\n```\ndeno run -A npm:@biomejs/biome format --write <files>\n```\n\nYou can lint and apply safe fixes to files and directories using the `lint` command with the `--write` option:\n\n```\nnpx @biomejs/biome lint --write <files>\n```\n\n```\nyarn biome lint --write <files>\n```\n\n```\npnpm biome lint --write <files>\n```\n\n```\nbunx biome lint --write <files>\n```\n\n```\ndeno run -A npm:@biomejs/biome lint --write <files>\n```\n\nYou can run both of them by leveraging the `check` command:\n\n```\nnpx @biomejs/biome check --write <files>\n```\n\n```\nyarn biome check --write <files>\n```\n\n```\npnpm biome check --write <files>\n```\n\n```\nbunx biome check --write <files>\n```\n\n```\ndeno run -A npm:@biomejs/biome check --write <files>\n```\n\nThe `check` command runs multiple tools at once. It formats, lints, and organizes imports..\nPretty straightforward, right?", "metadata": {"source_url": "https://biomejs.dev/guides/getting-started", "title": "Getting Started", "description": "This page provides a comprehensive guide on how to install, configure, and use Biome, along with tips for CI setup and next steps.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-02-28 22:00:52", "type": "section_detail", "page_metadata": {"og:locale": "en", "twitter:card": "summary_large_image", "ogTitle": "Getting Started", "language": "en", "og:title": "Getting Started", "title": "Getting Started | Biome", "og:description": "Learn how to set up a new project with Biome.", "og:site_name": "Biome", "og:image": "https://biomejs.dev/og/guides/getting-started.png", "ogLocale": "en", "description": "Learn how to set up a new project with Biome.", "ogUrl": "https://biomejs.dev/guides/getting-started/", "ogDescription": "Learn how to set up a new project with Biome.", "ogSiteName": "Biome", "favicon": "https://biomejs.dev/img/favicon.svg", "ogImage": "https://biomejs.dev/og/guides/getting-started.png", "og:type": "article", "og:url": "https://biomejs.dev/guides/getting-started/", "viewport": "width=device-width, initial-scale=1", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "twitter:image": "https://biomejs.dev/og/guides/getting-started.png", "scrapeId": "98d083ae-2fb6-441a-b425-ad0326a3a763", "sourceURL": "https://biomejs.dev/guides/getting-started", "url": "https://biomejs.dev/guides/getting-started/", "statusCode": 200}}}
{"text": "System: You are a helpful biomejs-guides expert.\n\nUser: How do I install an editor plugin in biomejs-guides?\n\nAssistant: To install an editor plugin in biomejs-guides, here's what you do:\nWe recommend installing an editor plugin to get the most out of Biome. Check out the editor page to know which editors support Biome..\nPretty straightforward, right?", "metadata": {"source_url": "https://biomejs.dev/guides/getting-started", "title": "Getting Started", "description": "This page provides a comprehensive guide on how to install, configure, and use Biome, along with tips for CI setup and next steps.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-02-28 22:00:52", "type": "section_detail", "page_metadata": {"og:locale": "en", "twitter:card": "summary_large_image", "ogTitle": "Getting Started", "language": "en", "og:title": "Getting Started", "title": "Getting Started | Biome", "og:description": "Learn how to set up a new project with Biome.", "og:site_name": "Biome", "og:image": "https://biomejs.dev/og/guides/getting-started.png", "ogLocale": "en", "description": "Learn how to set up a new project with Biome.", "ogUrl": "https://biomejs.dev/guides/getting-started/", "ogDescription": "Learn how to set up a new project with Biome.", "ogSiteName": "Biome", "favicon": "https://biomejs.dev/img/favicon.svg", "ogImage": "https://biomejs.dev/og/guides/getting-started.png", "og:type": "article", "og:url": "https://biomejs.dev/guides/getting-started/", "viewport": "width=device-width, initial-scale=1", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "twitter:image": "https://biomejs.dev/og/guides/getting-started.png", "scrapeId": "98d083ae-2fb6-441a-b425-ad0326a3a763", "sourceURL": "https://biomejs.dev/guides/getting-started", "url": "https://biomejs.dev/guides/getting-started/", "statusCode": 200}}}
{"text": "System: You are a helpful biomejs-guides expert.\n\nUser: How do I ci setup in biomejs-guides?\n\nAssistant: To ci setup in biomejs-guides, here's what you do:\nIf you’re using Node.js, the recommended way to run Biome in CI is to use your preferred package manager. This ensures that your CI pipeline uses the same version of Biome as you do inside the editor or when running local CLI commands. Alternatively, you can use a dedicated CI Action..\nPretty straightforward, right?", "metadata": {"source_url": "https://biomejs.dev/guides/getting-started", "title": "Getting Started", "description": "This page provides a comprehensive guide on how to install, configure, and use Biome, along with tips for CI setup and next steps.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-02-28 22:00:52", "type": "section_detail", "page_metadata": {"og:locale": "en", "twitter:card": "summary_large_image", "ogTitle": "Getting Started", "language": "en", "og:title": "Getting Started", "title": "Getting Started | Biome", "og:description": "Learn how to set up a new project with Biome.", "og:site_name": "Biome", "og:image": "https://biomejs.dev/og/guides/getting-started.png", "ogLocale": "en", "description": "Learn how to set up a new project with Biome.", "ogUrl": "https://biomejs.dev/guides/getting-started/", "ogDescription": "Learn how to set up a new project with Biome.", "ogSiteName": "Biome", "favicon": "https://biomejs.dev/img/favicon.svg", "ogImage": "https://biomejs.dev/og/guides/getting-started.png", "og:type": "article", "og:url": "https://biomejs.dev/guides/getting-started/", "viewport": "width=device-width, initial-scale=1", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "twitter:image": "https://biomejs.dev/og/guides/getting-started.png", "scrapeId": "98d083ae-2fb6-441a-b425-ad0326a3a763", "sourceURL": "https://biomejs.dev/guides/getting-started", "url": "https://biomejs.dev/guides/getting-started/", "statusCode": 200}}}
{"text": "System: You are a helpful biomejs-guides expert.\n\nUser: How do I next steps in biomejs-guides?\n\nAssistant: To next steps in biomejs-guides, here's what you do:\nSuccess! You’re now ready to use Biome. 🥳\n\n- Migrate from ESLint and Prettier\n- Learn more about how to configure Biome\n- Learn more about how to use and configure the formatter\n- Learn more about how to use and configure the linter\n- Get familiar with the CLI options\n- Get familiar with the configuration options\n- Join our community on Discord..\nPretty straightforward, right?", "metadata": {"source_url": "https://biomejs.dev/guides/getting-started", "title": "Getting Started", "description": "This page provides a comprehensive guide on how to install, configure, and use Biome, along with tips for CI setup and next steps.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-02-28 22:00:52", "type": "section_detail", "page_metadata": {"og:locale": "en", "twitter:card": "summary_large_image", "ogTitle": "Getting Started", "language": "en", "og:title": "Getting Started", "title": "Getting Started | Biome", "og:description": "Learn how to set up a new project with Biome.", "og:site_name": "Biome", "og:image": "https://biomejs.dev/og/guides/getting-started.png", "ogLocale": "en", "description": "Learn how to set up a new project with Biome.", "ogUrl": "https://biomejs.dev/guides/getting-started/", "ogDescription": "Learn how to set up a new project with Biome.", "ogSiteName": "Biome", "favicon": "https://biomejs.dev/img/favicon.svg", "ogImage": "https://biomejs.dev/og/guides/getting-started.png", "og:type": "article", "og:url": "https://biomejs.dev/guides/getting-started/", "viewport": "width=device-width, initial-scale=1", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "twitter:image": "https://biomejs.dev/og/guides/getting-started.png", "scrapeId": "98d083ae-2fb6-441a-b425-ad0326a3a763", "sourceURL": "https://biomejs.dev/guides/getting-started", "url": "https://biomejs.dev/guides/getting-started/", "statusCode": 200}}}
{"text": "System: You are a helpful biomejs-guides expert.\n\nUser: Can you give me some code examples for Getting Started in biomejs-guides?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Install Biome using npm**:\n\n```yaml\nnpm install --save-dev --save-exact @biomejs/biome\n```\n\nThis snippet shows you how to install biome using npm, which is an important aspect of getting started.\n\n**Install Biome using yarn**:\n\n```yaml\nyarn add --dev --exact @biomejs/biome\n```\n\nThis snippet shows you how to install biome using yarn, which is an important aspect of getting started.\n\n**Install Biome using pnpm**:\n\n```yaml\npnpm add --save-dev --save-exact @biomejs/biome\n```\n\nThis snippet shows you how to install biome using pnpm, which is an important aspect of getting started.\n\n**Install Biome using bun**:\n\n```yaml\nbun add --dev --exact @biomejs/biome\n```\n\nThis snippet shows you how to install biome using bun, which is an important aspect of getting started.\n\n**Install Biome using deno**:\n\n```yaml\ndeno add --dev npm:@biomejs/biome\n```\n\nThis snippet shows you how to install biome using deno, which is an important aspect of getting started.\n\n**Create a Biome configuration file using npx**:\n\n```yaml\nnpx @biomejs/biome init\n```\n\nThis snippet shows you how to create a biome configuration file using npx, which is an important aspect of getting started.\n\n**Create a Biome configuration file using yarn**:\n\n```yaml\nyarn biome init\n```\n\nThis snippet shows you how to create a biome configuration file using yarn, which is an important aspect of getting started.\n\n**Create a Biome configuration file using pnpm**:\n\n```yaml\npnpm biome init\n```\n\nThis snippet shows you how to create a biome configuration file using pnpm, which is an important aspect of getting started.\n\n**Create a Biome configuration file using bun**:\n\n```yaml\nbunx biome init\n```\n\nThis snippet shows you how to create a biome configuration file using bun, which is an important aspect of getting started.\n\n**Create a Biome configuration file using deno**:\n\n```yaml\ndeno run -A npm:@biomejs/biome init\n```\n\nThis snippet shows you how to create a biome configuration file using deno, which is an important aspect of getting started.\n\n**Format files using npx**:\n\n```yaml\nnpx @biomejs/biome format --write <files>\n```\n\nThis snippet shows you how to format files using npx, which is an important aspect of getting started.\n\n**Format files using yarn**:\n\n```yaml\nyarn biome format --write <files>\n```\n\nThis snippet shows you how to format files using yarn, which is an important aspect of getting started.\n\n**Format files using pnpm**:\n\n```yaml\npnpm biome format --write <files>\n```\n\nThis snippet shows you how to format files using pnpm, which is an important aspect of getting started.\n\n**Format files using bun**:\n\n```yaml\nbunx biome format --write <files>\n```\n\nThis snippet shows you how to format files using bun, which is an important aspect of getting started.\n\n**Format files using deno**:\n\n```yaml\ndeno run -A npm:@biomejs/biome format --write <files>\n```\n\nThis snippet shows you how to format files using deno, which is an important aspect of getting started.\n\n**Lint files using npx**:\n\n```yaml\nnpx @biomejs/biome lint --write <files>\n```\n\nThis snippet shows you how to lint files using npx, which is an important aspect of getting started.\n\n**Lint files using yarn**:\n\n```yaml\nyarn biome lint --write <files>\n```\n\nThis snippet shows you how to lint files using yarn, which is an important aspect of getting started.\n\n**Lint files using pnpm**:\n\n```yaml\npnpm biome lint --write <files>\n```\n\nThis snippet shows you how to lint files using pnpm, which is an important aspect of getting started.\n\n**Lint files using bun**:\n\n```yaml\nbunx biome lint --write <files>\n```\n\nThis snippet shows you how to lint files using bun, which is an important aspect of getting started.\n\n**Lint files using deno**:\n\n```yaml\ndeno run -A npm:@biomejs/biome lint --write <files>\n```\n\nThis snippet shows you how to lint files using deno, which is an important aspect of getting started.\n\n**Check files using npx**:\n\n```yaml\nnpx @biomejs/biome check --write <files>\n```\n\nThis snippet shows you how to check files using npx, which is an important aspect of getting started.\n\n**Check files using yarn**:\n\n```yaml\nyarn biome check --write <files>\n```\n\nThis snippet shows you how to check files using yarn, which is an important aspect of getting started.\n\n**Check files using pnpm**:\n\n```yaml\npnpm biome check --write <files>\n```\n\nThis snippet shows you how to check files using pnpm, which is an important aspect of getting started.\n\n**Check files using bun**:\n\n```yaml\nbunx biome check --write <files>\n```\n\nThis snippet shows you how to check files using bun, which is an important aspect of getting started.\n\n**Check files using deno**:\n\n```yaml\ndeno run -A npm:@biomejs/biome check --write <files>\n```\n\nThis snippet shows you how to check files using deno, which is an important aspect of getting started.\n\n", "metadata": {"source_url": "https://biomejs.dev/guides/getting-started", "title": "Getting Started", "description": "This page provides a comprehensive guide on how to install, configure, and use Biome, along with tips for CI setup and next steps.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-02-28 22:00:52", "type": "code_examples", "page_metadata": {"og:locale": "en", "twitter:card": "summary_large_image", "ogTitle": "Getting Started", "language": "en", "og:title": "Getting Started", "title": "Getting Started | Biome", "og:description": "Learn how to set up a new project with Biome.", "og:site_name": "Biome", "og:image": "https://biomejs.dev/og/guides/getting-started.png", "ogLocale": "en", "description": "Learn how to set up a new project with Biome.", "ogUrl": "https://biomejs.dev/guides/getting-started/", "ogDescription": "Learn how to set up a new project with Biome.", "ogSiteName": "Biome", "favicon": "https://biomejs.dev/img/favicon.svg", "ogImage": "https://biomejs.dev/og/guides/getting-started.png", "og:type": "article", "og:url": "https://biomejs.dev/guides/getting-started/", "viewport": "width=device-width, initial-scale=1", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "twitter:image": "https://biomejs.dev/og/guides/getting-started.png", "scrapeId": "98d083ae-2fb6-441a-b425-ad0326a3a763", "sourceURL": "https://biomejs.dev/guides/getting-started", "url": "https://biomejs.dev/guides/getting-started/", "statusCode": 200}}}
{"text": "System: You are a helpful biomejs-guides expert.\n\nUser: What are some tips for using Getting Started in biomejs-guides effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nCreate a configuration file to avoid repeating CLI options.\n\nUse the `--jsonc` option to create a JSONC configuration file.\n\nInstall an editor plugin for better integration with Biome.\n\nUse your preferred package manager in CI to ensure version consistency.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://biomejs.dev/guides/getting-started", "title": "Getting Started", "description": "This page provides a comprehensive guide on how to install, configure, and use Biome, along with tips for CI setup and next steps.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-02-28 22:00:52", "type": "best_practices", "page_metadata": {"og:locale": "en", "twitter:card": "summary_large_image", "ogTitle": "Getting Started", "language": "en", "og:title": "Getting Started", "title": "Getting Started | Biome", "og:description": "Learn how to set up a new project with Biome.", "og:site_name": "Biome", "og:image": "https://biomejs.dev/og/guides/getting-started.png", "ogLocale": "en", "description": "Learn how to set up a new project with Biome.", "ogUrl": "https://biomejs.dev/guides/getting-started/", "ogDescription": "Learn how to set up a new project with Biome.", "ogSiteName": "Biome", "favicon": "https://biomejs.dev/img/favicon.svg", "ogImage": "https://biomejs.dev/og/guides/getting-started.png", "og:type": "article", "og:url": "https://biomejs.dev/guides/getting-started/", "viewport": "width=device-width, initial-scale=1", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "twitter:image": "https://biomejs.dev/og/guides/getting-started.png", "scrapeId": "98d083ae-2fb6-441a-b425-ad0326a3a763", "sourceURL": "https://biomejs.dev/guides/getting-started", "url": "https://biomejs.dev/guides/getting-started/", "statusCode": 200}}}
{"text": "System: You are a helpful biomejs-guides expert.\n\nUser: Can you explain what Use Biome in big projects is in biomejs-guides?\n\nAssistant: Sure, I'd be happy to explain Use Biome in big projects in biomejs-guides.\n\n# Use Biome in big projects\n\nBiome can provide some tools that can help you to use it properly in big projects, such as monorepo or workspaces that contain multiple projects.Here's a quick rundown of what this is about:\n\n## Use multiple configuration files\n\nWhen you use Biome’s features - either with the CLI or LSP - the tool looks for the nearest configuration file using the current working directory.\n\nIf Biome doesn’t find the configuration file there, it **starts walking upwards** the directories of the file system, until it finds one.\n\nYou can leverage this feature to apply different settings based on the project/folder.\n\nLet’s suppose we have a project that contains a backend app and new frontend app.\n\n- Directoryapp\n\n\n- Directorybackend\n\n\n- biome.json\n- package.json\n\n- Directoryfrontend\n\n\n- biome.json\n- Directorylegacy-app\n\n\n- package.json\n\n- Directorynew-app\n\n\n- package.json\n\nThis means that when you run a script from the file `app/backend/package.json`, Biome will use the configuration file `app/backend/biome.json`.\n\nWhen you run a script from `app/frontend/legacy-app/package.json` or `app/frontend/new-app/package.json`, Biome will use the configuration file `app/frontend/biome.json`.\n\n## Share the configuration\n\nIt’s possible to use the [`extends`](https://biomejs.dev/guides/configure-biome/#share-a-configuration-file) configuration option to breakdown options across files.\n\nLet’s assume that we have these requirements:\n\n- `legacy-app` have to format using spaces;\n- `backend` and `new-app` have to format using tabs;\n- all apps have to format using line width 120;\n- `backend` app needs some extra linting;\n\nWe start by creating a new configuration file at `app/biome.json`, and put there the shared options:\n\n```\n{\n  \"formatter\": {\n    \"enabled\": true,\n    \"lineWidth\": 120\n  }\n}\n```\n\nNow let’s **move** `app/frontend/biome.json` to `app/frontend/legacy-app/`, because that’s where we need to use a different formatting.\n\n```\n{\n  \"formatter\": {\n    \"indentStyle\": \"space\"\n  }\n}\n```\n\nThen, we tell Biome to inherit all the options from the main `app/biome.json` file, using the `extends` property:\n\n```\n{\n   \"extends\": [\"../../biome.json\"],\n   \"formatter\": {\n     \"indentStyle\": \"space\"\n   }\n}\n```\n\nLet’s jump to `app/backend/biome.json`, where we need to enable the linting:\n\n```\n{\n  \"extends\": [\"../biome.json\"],\n  \"linter\": {\n    \"enabled\": true,\n    \"rules\": {\n      \"recommended\": true\n    }\n  }\n}\n```\n\n## Monorepos\n\nMonorepos are particular repositories where multiple libraries are stored and maintained in one big repository. Each library represents a self-contained project, which can contain different configurations.\n\nBiome doesn’t support monorepos very well due to some limitations in resolving nested configuration files, you [help and follow the relative issue](https://github.com/biomejs/biome/issues/2228).\n\nIn order to have the best developer experience despite the current limitation, it’s advised to have a `biome.json` at the root of the monorepo, and use the [`overrides`](https://biomejs.dev/reference/configuration/#overrides) configuration to change the behaviour of Biome in certain packages.\n\nIn the following example we disable the rule `suspicious/noConsoleLog` inside the package `packages/logger`.\n\n```\n{\n  \"linter\": {\n    \"enabled\": true,\n    \"rules\": {\n      \"recommended\": true\n    }\n  },\n  \"overrides\": [{\n      \"include\": [\"packages/logger/**\"],\n      \"linter\": {\n        \"rules\": {\n          \"suspicious\": {\n            \"noConsoleLog\": \"off\"\n          }\n        }\n      }\n  }]\n}\n```\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://biomejs.dev/guides/big-projects", "title": "Use Biome in big projects", "description": "Biome can provide some tools that can help you to use it properly in big projects, such as monorepo or workspaces that contain multiple projects.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 22:02:28", "type": "overview", "page_metadata": {"og:site_name": "Biome", "ogImage": "https://biomejs.dev/og/guides/big-projects.png", "og:title": "Use Biome in big projects", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "twitter:card": "summary_large_image", "description": "A small guide how to set Biome in big projects", "og:type": "article", "ogDescription": "A small guide how to set Biome in big projects", "language": "en", "twitter:image": "https://biomejs.dev/og/guides/big-projects.png", "ogUrl": "https://biomejs.dev/guides/big-projects/", "ogLocale": "en", "ogTitle": "Use Biome in big projects", "og:description": "A small guide how to set Biome in big projects", "favicon": "https://biomejs.dev/img/favicon.svg", "ogSiteName": "Biome", "og:locale": "en", "og:image": "https://biomejs.dev/og/guides/big-projects.png", "viewport": "width=device-width, initial-scale=1", "og:url": "https://biomejs.dev/guides/big-projects/", "title": "Use Biome in big projects | Biome", "scrapeId": "87ae75de-9ed5-43c1-9264-3dae36b87843", "sourceURL": "https://biomejs.dev/guides/big-projects", "url": "https://biomejs.dev/guides/big-projects/", "statusCode": 200}}}
{"text": "System: You are a helpful biomejs-guides expert.\n\nUser: How do I use multiple configuration files in biomejs-guides?\n\nAssistant: To use multiple configuration files in biomejs-guides, here's what you do:\nWhen you use Biome’s features - either with the CLI or LSP - the tool looks for the nearest configuration file using the current working directory.\n\nIf Biome doesn’t find the configuration file there, it **starts walking upwards** the directories of the file system, until it finds one.\n\nYou can leverage this feature to apply different settings based on the project/folder.\n\nLet’s suppose we have a project that contains a backend app and new frontend app.\n\n- Directoryapp\n\n\n- Directorybackend\n\n\n- biome.json\n- package.json\n\n- Directoryfrontend\n\n\n- biome.json\n- Directorylegacy-app\n\n\n- package.json\n\n- Directorynew-app\n\n\n- package.json\n\nThis means that when you run a script from the file `app/backend/package.json`, Biome will use the configuration file `app/backend/biome.json`.\n\nWhen you run a script from `app/frontend/legacy-app/package.json` or `app/frontend/new-app/package.json`, Biome will use the configuration file `app/frontend/biome.json`..\nPretty straightforward, right?", "metadata": {"source_url": "https://biomejs.dev/guides/big-projects", "title": "Use Biome in big projects", "description": "Biome can provide some tools that can help you to use it properly in big projects, such as monorepo or workspaces that contain multiple projects.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 22:02:28", "type": "section_detail", "page_metadata": {"og:site_name": "Biome", "ogImage": "https://biomejs.dev/og/guides/big-projects.png", "og:title": "Use Biome in big projects", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "twitter:card": "summary_large_image", "description": "A small guide how to set Biome in big projects", "og:type": "article", "ogDescription": "A small guide how to set Biome in big projects", "language": "en", "twitter:image": "https://biomejs.dev/og/guides/big-projects.png", "ogUrl": "https://biomejs.dev/guides/big-projects/", "ogLocale": "en", "ogTitle": "Use Biome in big projects", "og:description": "A small guide how to set Biome in big projects", "favicon": "https://biomejs.dev/img/favicon.svg", "ogSiteName": "Biome", "og:locale": "en", "og:image": "https://biomejs.dev/og/guides/big-projects.png", "viewport": "width=device-width, initial-scale=1", "og:url": "https://biomejs.dev/guides/big-projects/", "title": "Use Biome in big projects | Biome", "scrapeId": "87ae75de-9ed5-43c1-9264-3dae36b87843", "sourceURL": "https://biomejs.dev/guides/big-projects", "url": "https://biomejs.dev/guides/big-projects/", "statusCode": 200}}}
{"text": "System: You are a helpful biomejs-guides expert.\n\nUser: How do I share the configuration in biomejs-guides?\n\nAssistant: To share the configuration in biomejs-guides, here's what you do:\nIt’s possible to use the [`extends`](https://biomejs.dev/guides/configure-biome/#share-a-configuration-file) configuration option to breakdown options across files.\n\nLet’s assume that we have these requirements:\n\n- `legacy-app` have to format using spaces;\n- `backend` and `new-app` have to format using tabs;\n- all apps have to format using line width 120;\n- `backend` app needs some extra linting;\n\nWe start by creating a new configuration file at `app/biome.json`, and put there the shared options:\n\n```\n{\n  \"formatter\": {\n    \"enabled\": true,\n    \"lineWidth\": 120\n  }\n}\n```\n\nNow let’s **move** `app/frontend/biome.json` to `app/frontend/legacy-app/`, because that’s where we need to use a different formatting.\n\n```\n{\n  \"formatter\": {\n    \"indentStyle\": \"space\"\n  }\n}\n```\n\nThen, we tell Biome to inherit all the options from the main `app/biome.json` file, using the `extends` property:\n\n```\n{\n   \"extends\": [\"../../biome.json\"],\n   \"formatter\": {\n     \"indentStyle\": \"space\"\n   }\n}\n```\n\nLet’s jump to `app/backend/biome.json`, where we need to enable the linting:\n\n```\n{\n  \"extends\": [\"../biome.json\"],\n  \"linter\": {\n    \"enabled\": true,\n    \"rules\": {\n      \"recommended\": true\n    }\n  }\n}\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://biomejs.dev/guides/big-projects", "title": "Use Biome in big projects", "description": "Biome can provide some tools that can help you to use it properly in big projects, such as monorepo or workspaces that contain multiple projects.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 22:02:28", "type": "section_detail", "page_metadata": {"og:site_name": "Biome", "ogImage": "https://biomejs.dev/og/guides/big-projects.png", "og:title": "Use Biome in big projects", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "twitter:card": "summary_large_image", "description": "A small guide how to set Biome in big projects", "og:type": "article", "ogDescription": "A small guide how to set Biome in big projects", "language": "en", "twitter:image": "https://biomejs.dev/og/guides/big-projects.png", "ogUrl": "https://biomejs.dev/guides/big-projects/", "ogLocale": "en", "ogTitle": "Use Biome in big projects", "og:description": "A small guide how to set Biome in big projects", "favicon": "https://biomejs.dev/img/favicon.svg", "ogSiteName": "Biome", "og:locale": "en", "og:image": "https://biomejs.dev/og/guides/big-projects.png", "viewport": "width=device-width, initial-scale=1", "og:url": "https://biomejs.dev/guides/big-projects/", "title": "Use Biome in big projects | Biome", "scrapeId": "87ae75de-9ed5-43c1-9264-3dae36b87843", "sourceURL": "https://biomejs.dev/guides/big-projects", "url": "https://biomejs.dev/guides/big-projects/", "statusCode": 200}}}
{"text": "System: You are a helpful biomejs-guides expert.\n\nUser: How do I monorepos in biomejs-guides?\n\nAssistant: To monorepos in biomejs-guides, here's what you do:\nMonorepos are particular repositories where multiple libraries are stored and maintained in one big repository. Each library represents a self-contained project, which can contain different configurations.\n\nBiome doesn’t support monorepos very well due to some limitations in resolving nested configuration files, you [help and follow the relative issue](https://github.com/biomejs/biome/issues/2228).\n\nIn order to have the best developer experience despite the current limitation, it’s advised to have a `biome.json` at the root of the monorepo, and use the [`overrides`](https://biomejs.dev/reference/configuration/#overrides) configuration to change the behaviour of Biome in certain packages.\n\nIn the following example we disable the rule `suspicious/noConsoleLog` inside the package `packages/logger`.\n\n```\n{\n  \"linter\": {\n    \"enabled\": true,\n    \"rules\": {\n      \"recommended\": true\n    }\n  },\n  \"overrides\": [{\n      \"include\": [\"packages/logger/**\"],\n      \"linter\": {\n        \"rules\": {\n          \"suspicious\": {\n            \"noConsoleLog\": \"off\"\n          }\n        }\n      }\n  }]\n}\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://biomejs.dev/guides/big-projects", "title": "Use Biome in big projects", "description": "Biome can provide some tools that can help you to use it properly in big projects, such as monorepo or workspaces that contain multiple projects.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 22:02:28", "type": "section_detail", "page_metadata": {"og:site_name": "Biome", "ogImage": "https://biomejs.dev/og/guides/big-projects.png", "og:title": "Use Biome in big projects", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "twitter:card": "summary_large_image", "description": "A small guide how to set Biome in big projects", "og:type": "article", "ogDescription": "A small guide how to set Biome in big projects", "language": "en", "twitter:image": "https://biomejs.dev/og/guides/big-projects.png", "ogUrl": "https://biomejs.dev/guides/big-projects/", "ogLocale": "en", "ogTitle": "Use Biome in big projects", "og:description": "A small guide how to set Biome in big projects", "favicon": "https://biomejs.dev/img/favicon.svg", "ogSiteName": "Biome", "og:locale": "en", "og:image": "https://biomejs.dev/og/guides/big-projects.png", "viewport": "width=device-width, initial-scale=1", "og:url": "https://biomejs.dev/guides/big-projects/", "title": "Use Biome in big projects | Biome", "scrapeId": "87ae75de-9ed5-43c1-9264-3dae36b87843", "sourceURL": "https://biomejs.dev/guides/big-projects", "url": "https://biomejs.dev/guides/big-projects/", "statusCode": 200}}}
{"text": "System: You are a helpful biomejs-guides expert.\n\nUser: Can you give me some code examples for Use Biome in big projects in biomejs-guides?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Configuration for shared options**:\n\n```yaml\n{\n  \"formatter\": {\n    \"enabled\": true,\n    \"lineWidth\": 120\n  }\n}\n```\n\nThis snippet shows you how to configuration for shared options, which is an important aspect of use biome in big projects.\n\n**Configuration for legacy-app formatting**:\n\n```yaml\n{\n  \"formatter\": {\n    \"indentStyle\": \"space\"\n  }\n}\n```\n\nThis snippet shows you how to configuration for legacy-app formatting, which is an important aspect of use biome in big projects.\n\n**Configuration for extending main biome.json in legacy-app**:\n\n```yaml\n{\n   \"extends\": [\"../../biome.json\"],\n   \"formatter\": {\n     \"indentStyle\": \"space\"\n   }\n}\n```\n\nThis snippet shows you how to configuration for extending main biome.json in legacy-app, which is an important aspect of use biome in big projects.\n\n**Configuration for enabling linting in backend**:\n\n```yaml\n{\n  \"extends\": [\"../biome.json\"],\n  \"linter\": {\n    \"enabled\": true,\n    \"rules\": {\n      \"recommended\": true\n    }\n  }\n}\n```\n\nThis snippet shows you how to configuration for enabling linting in backend, which is an important aspect of use biome in big projects.\n\n**Configuration for monorepo with overrides**:\n\n```yaml\n{\n  \"linter\": {\n    \"enabled\": true,\n    \"rules\": {\n      \"recommended\": true\n    }\n  },\n  \"overrides\": [{\n      \"include\": [\"packages/logger/**\"],\n      \"linter\": {\n        \"rules\": {\n          \"suspicious\": {\n            \"noConsoleLog\": \"off\"\n          }\n        }\n      }\n  }]\n}\n```\n\nThis snippet shows you how to configuration for monorepo with overrides, which is an important aspect of use biome in big projects.\n\n", "metadata": {"source_url": "https://biomejs.dev/guides/big-projects", "title": "Use Biome in big projects", "description": "Biome can provide some tools that can help you to use it properly in big projects, such as monorepo or workspaces that contain multiple projects.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 22:02:28", "type": "code_examples", "page_metadata": {"og:site_name": "Biome", "ogImage": "https://biomejs.dev/og/guides/big-projects.png", "og:title": "Use Biome in big projects", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "twitter:card": "summary_large_image", "description": "A small guide how to set Biome in big projects", "og:type": "article", "ogDescription": "A small guide how to set Biome in big projects", "language": "en", "twitter:image": "https://biomejs.dev/og/guides/big-projects.png", "ogUrl": "https://biomejs.dev/guides/big-projects/", "ogLocale": "en", "ogTitle": "Use Biome in big projects", "og:description": "A small guide how to set Biome in big projects", "favicon": "https://biomejs.dev/img/favicon.svg", "ogSiteName": "Biome", "og:locale": "en", "og:image": "https://biomejs.dev/og/guides/big-projects.png", "viewport": "width=device-width, initial-scale=1", "og:url": "https://biomejs.dev/guides/big-projects/", "title": "Use Biome in big projects | Biome", "scrapeId": "87ae75de-9ed5-43c1-9264-3dae36b87843", "sourceURL": "https://biomejs.dev/guides/big-projects", "url": "https://biomejs.dev/guides/big-projects/", "statusCode": 200}}}
{"text": "System: You are a helpful biomejs-guides expert.\n\nUser: What are some tips for using Use Biome in big projects in biomejs-guides effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nLeverage multiple configuration files to apply different settings based on the project/folder.\n\nUse the `extends` property to share configuration options across different projects.\n\nFor monorepos, have a `biome.json` at the root and use `overrides` to manage configurations for specific packages.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://biomejs.dev/guides/big-projects", "title": "Use Biome in big projects", "description": "Biome can provide some tools that can help you to use it properly in big projects, such as monorepo or workspaces that contain multiple projects.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 22:02:28", "type": "best_practices", "page_metadata": {"og:site_name": "Biome", "ogImage": "https://biomejs.dev/og/guides/big-projects.png", "og:title": "Use Biome in big projects", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "twitter:card": "summary_large_image", "description": "A small guide how to set Biome in big projects", "og:type": "article", "ogDescription": "A small guide how to set Biome in big projects", "language": "en", "twitter:image": "https://biomejs.dev/og/guides/big-projects.png", "ogUrl": "https://biomejs.dev/guides/big-projects/", "ogLocale": "en", "ogTitle": "Use Biome in big projects", "og:description": "A small guide how to set Biome in big projects", "favicon": "https://biomejs.dev/img/favicon.svg", "ogSiteName": "Biome", "og:locale": "en", "og:image": "https://biomejs.dev/og/guides/big-projects.png", "viewport": "width=device-width, initial-scale=1", "og:url": "https://biomejs.dev/guides/big-projects/", "title": "Use Biome in big projects | Biome", "scrapeId": "87ae75de-9ed5-43c1-9264-3dae36b87843", "sourceURL": "https://biomejs.dev/guides/big-projects", "url": "https://biomejs.dev/guides/big-projects/", "statusCode": 200}}}
{"text": "System: You are a helpful biomejs-guides expert.\n\nUser: Can you explain what Integrate Biome in your editor is in biomejs-guides?\n\nAssistant: Sure, I'd be happy to explain Integrate Biome in your editor in biomejs-guides.\n\n# Integrate Biome in your editor\n\nBiome has LSP first-class support. If your editor implements LSP, then the integration of Biome should be seamless.Here's a quick rundown of what this is about:\n\n## Use the LSP proxy\n\nBiome has a command called `lsp-proxy`. When executed, Biome will spawn two processes:\n\n- a [daemon](https://biomejs.dev/internals/architecture#daemon) that executes the requested operations;\n- a server that functions as a proxy between the requests of the client - the editor - and the server - the daemon;\n\nIf your editor is able to interact with a server and send [JSON-RPC](https://www.jsonrpc.org/) request, you only need to configure the editor run that command.\n\nYou can check how the [`neo-vim biome plugin`](https://github.com/neovim/nvim-lspconfig/blob/master/lua/lspconfig/configs/biome.lua) does it.\n\n## Use `stdin`\n\nIf your editor doesn’t support LSP, you can use the `biome` binary directly and call it using [standard input](https://en.wikipedia.org/wiki/Standard_streams#Standard_input_(stdin)).\n\nThe following commands can be called via standard input:\n\n- [`format`](https://biomejs.dev/reference/cli/#biome-format)\n- [`lint`](https://biomejs.dev/reference/cli/#biome-lint)\n- [`check`](https://biomejs.dev/reference/cli/#biome-check)\n\nBiome will return the new output (or the original output if changes haven’t occurred) to [standard output](https://en.wikipedia.org/wiki/Standard_streams#Standard_output_(stdout)) and the diagnostics to [standard error](https://en.wikipedia.org/wiki/Standard_streams#Standard_error_(stderr)).\n\nWhen you use `stdin`, you must pass the `--stdin-file-path` option. The file `path` **doesn’t need to exist** in your file system, it can be any name. **What’s important** is to provide the correct file extension, so Biome knows **how to treat** your file.\n\nIt’s the editor’s responsibility to locate the resolve the path of the binary and then call it when it’s needed. The binaries are shipped to npm based on the architectures and OS that we support:\n\n- `@biomejs/cli-darwin-arm64`\n- `@biomejs/cli-darwin-x64`\n- `@biomejs/cli-linux-arm64`\n- `@biomejs/cli-linux-x64`\n- `@biomejs/cli-win32-arm64`\n- `@biomejs/cli-win32-x64`\n\nThe binary name is `biome` or `biome.exe`, and it can be found in the root directory of the library, e.g.: `@biomejs/cli-darwin-arm64/biome`, `@biomejs/cli-win32-x64/biome.exe`.\n\n## Use the daemon with the binary\n\nUsing the binary via CLI is very efficient, although you won’t be able to provide [logs](https://biomejs.dev/guides/integrate-in-editor/#daemon-logs) to your users. The CLI allows you to bootstrap a daemon and then use the CLI commands through the daemon itself.\n\nIf order to do so, you first need to start a daemon process with the [`start`](https://biomejs.dev/reference/cli#biome-start) command:\n\n```\nbiome start\n```\n\nThen, every command needs to add the `--use-server` options, e.g.: \n\n```\necho \"console.log('')\" | biome format --use-server --stdin-file-path=dummy.js\n```\n\n## Daemon logs\n\nThe Biome daemon saves logs in your file system.\nThey are stored in a folder called `biome-logs`.\nThe path to this folder will vary depending on your operating system:\n\n- Linux: `~/.cache/biome`;\n- Windows: `C:\\Users\\<UserName>\\AppData\\Local\\biomejs\\biome\\cache`\n- macOS: `/Users/<UserName>/Library/Caches/dev.biomejs.biome`\n\nFor other operative systems, you can find the folder in the system’s temporary directory.\n\nTo obtain the precise path, execute the following command:\n\n```\nbiome explain daemon-logs\n```\n\nThe log files are rotated on an hourly basis.\nYou can remove the logs using the `clean` command:\n\n```\nbiome clean\n```\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://biomejs.dev/guides/integrate-in-editor", "title": "Integrate Biome in your editor", "description": "Biome has LSP first-class support. If your editor implements LSP, then the integration of Biome should be seamless.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 22:07:22", "type": "overview", "page_metadata": {"twitter:card": "summary_large_image", "ogSiteName": "Biome", "twitter:image": "https://biomejs.dev/og/guides/integrate-in-editor.png", "og:locale": "en", "ogDescription": "Learn how you can integrate Biome with editors and IDEs", "title": "Integrate Biome in your editor | Biome", "ogImage": "https://biomejs.dev/og/guides/integrate-in-editor.png", "favicon": "https://biomejs.dev/img/favicon.svg", "og:url": "https://biomejs.dev/guides/integrate-in-editor/", "ogUrl": "https://biomejs.dev/guides/integrate-in-editor/", "og:site_name": "Biome", "language": "en", "description": "Learn how you can integrate Biome with editors and IDEs", "viewport": "width=device-width, initial-scale=1", "ogLocale": "en", "ogTitle": "Integrate Biome in your editor", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "og:title": "Integrate Biome in your editor", "og:type": "article", "og:image": "https://biomejs.dev/og/guides/integrate-in-editor.png", "og:description": "Learn how you can integrate Biome with editors and IDEs", "scrapeId": "5c191f1c-3360-4619-8bda-b2c6fe40bb16", "sourceURL": "https://biomejs.dev/guides/integrate-in-editor", "url": "https://biomejs.dev/guides/integrate-in-editor/", "statusCode": 200}}}
{"text": "System: You are a helpful biomejs-guides expert.\n\nUser: How do I use the lsp proxy in biomejs-guides?\n\nAssistant: To use the lsp proxy in biomejs-guides, here's what you do:\nBiome has a command called `lsp-proxy`. When executed, Biome will spawn two processes:\n\n- a [daemon](https://biomejs.dev/internals/architecture#daemon) that executes the requested operations;\n- a server that functions as a proxy between the requests of the client - the editor - and the server - the daemon;\n\nIf your editor is able to interact with a server and send [JSON-RPC](https://www.jsonrpc.org/) request, you only need to configure the editor run that command.\n\nYou can check how the [`neo-vim biome plugin`](https://github.com/neovim/nvim-lspconfig/blob/master/lua/lspconfig/configs/biome.lua) does it..\nPretty straightforward, right?", "metadata": {"source_url": "https://biomejs.dev/guides/integrate-in-editor", "title": "Integrate Biome in your editor", "description": "Biome has LSP first-class support. If your editor implements LSP, then the integration of Biome should be seamless.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 22:07:22", "type": "section_detail", "page_metadata": {"twitter:card": "summary_large_image", "ogSiteName": "Biome", "twitter:image": "https://biomejs.dev/og/guides/integrate-in-editor.png", "og:locale": "en", "ogDescription": "Learn how you can integrate Biome with editors and IDEs", "title": "Integrate Biome in your editor | Biome", "ogImage": "https://biomejs.dev/og/guides/integrate-in-editor.png", "favicon": "https://biomejs.dev/img/favicon.svg", "og:url": "https://biomejs.dev/guides/integrate-in-editor/", "ogUrl": "https://biomejs.dev/guides/integrate-in-editor/", "og:site_name": "Biome", "language": "en", "description": "Learn how you can integrate Biome with editors and IDEs", "viewport": "width=device-width, initial-scale=1", "ogLocale": "en", "ogTitle": "Integrate Biome in your editor", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "og:title": "Integrate Biome in your editor", "og:type": "article", "og:image": "https://biomejs.dev/og/guides/integrate-in-editor.png", "og:description": "Learn how you can integrate Biome with editors and IDEs", "scrapeId": "5c191f1c-3360-4619-8bda-b2c6fe40bb16", "sourceURL": "https://biomejs.dev/guides/integrate-in-editor", "url": "https://biomejs.dev/guides/integrate-in-editor/", "statusCode": 200}}}
{"text": "System: You are a helpful biomejs-guides expert.\n\nUser: How do I use `stdin` in biomejs-guides?\n\nAssistant: To use `stdin` in biomejs-guides, here's what you do:\nIf your editor doesn’t support LSP, you can use the `biome` binary directly and call it using [standard input](https://en.wikipedia.org/wiki/Standard_streams#Standard_input_(stdin)).\n\nThe following commands can be called via standard input:\n\n- [`format`](https://biomejs.dev/reference/cli/#biome-format)\n- [`lint`](https://biomejs.dev/reference/cli/#biome-lint)\n- [`check`](https://biomejs.dev/reference/cli/#biome-check)\n\nBiome will return the new output (or the original output if changes haven’t occurred) to [standard output](https://en.wikipedia.org/wiki/Standard_streams#Standard_output_(stdout)) and the diagnostics to [standard error](https://en.wikipedia.org/wiki/Standard_streams#Standard_error_(stderr)).\n\nWhen you use `stdin`, you must pass the `--stdin-file-path` option. The file `path` **doesn’t need to exist** in your file system, it can be any name. **What’s important** is to provide the correct file extension, so Biome knows **how to treat** your file.\n\nIt’s the editor’s responsibility to locate the resolve the path of the binary and then call it when it’s needed. The binaries are shipped to npm based on the architectures and OS that we support:\n\n- `@biomejs/cli-darwin-arm64`\n- `@biomejs/cli-darwin-x64`\n- `@biomejs/cli-linux-arm64`\n- `@biomejs/cli-linux-x64`\n- `@biomejs/cli-win32-arm64`\n- `@biomejs/cli-win32-x64`\n\nThe binary name is `biome` or `biome.exe`, and it can be found in the root directory of the library, e.g.: `@biomejs/cli-darwin-arm64/biome`, `@biomejs/cli-win32-x64/biome.exe`..\nPretty straightforward, right?", "metadata": {"source_url": "https://biomejs.dev/guides/integrate-in-editor", "title": "Integrate Biome in your editor", "description": "Biome has LSP first-class support. If your editor implements LSP, then the integration of Biome should be seamless.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 22:07:22", "type": "section_detail", "page_metadata": {"twitter:card": "summary_large_image", "ogSiteName": "Biome", "twitter:image": "https://biomejs.dev/og/guides/integrate-in-editor.png", "og:locale": "en", "ogDescription": "Learn how you can integrate Biome with editors and IDEs", "title": "Integrate Biome in your editor | Biome", "ogImage": "https://biomejs.dev/og/guides/integrate-in-editor.png", "favicon": "https://biomejs.dev/img/favicon.svg", "og:url": "https://biomejs.dev/guides/integrate-in-editor/", "ogUrl": "https://biomejs.dev/guides/integrate-in-editor/", "og:site_name": "Biome", "language": "en", "description": "Learn how you can integrate Biome with editors and IDEs", "viewport": "width=device-width, initial-scale=1", "ogLocale": "en", "ogTitle": "Integrate Biome in your editor", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "og:title": "Integrate Biome in your editor", "og:type": "article", "og:image": "https://biomejs.dev/og/guides/integrate-in-editor.png", "og:description": "Learn how you can integrate Biome with editors and IDEs", "scrapeId": "5c191f1c-3360-4619-8bda-b2c6fe40bb16", "sourceURL": "https://biomejs.dev/guides/integrate-in-editor", "url": "https://biomejs.dev/guides/integrate-in-editor/", "statusCode": 200}}}
{"text": "System: You are a helpful biomejs-guides expert.\n\nUser: How do I use the daemon with the binary in biomejs-guides?\n\nAssistant: To use the daemon with the binary in biomejs-guides, here's what you do:\nUsing the binary via CLI is very efficient, although you won’t be able to provide [logs](https://biomejs.dev/guides/integrate-in-editor/#daemon-logs) to your users. The CLI allows you to bootstrap a daemon and then use the CLI commands through the daemon itself.\n\nIf order to do so, you first need to start a daemon process with the [`start`](https://biomejs.dev/reference/cli#biome-start) command:\n\n```\nbiome start\n```\n\nThen, every command needs to add the `--use-server` options, e.g.: \n\n```\necho \"console.log('')\" | biome format --use-server --stdin-file-path=dummy.js\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://biomejs.dev/guides/integrate-in-editor", "title": "Integrate Biome in your editor", "description": "Biome has LSP first-class support. If your editor implements LSP, then the integration of Biome should be seamless.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 22:07:22", "type": "section_detail", "page_metadata": {"twitter:card": "summary_large_image", "ogSiteName": "Biome", "twitter:image": "https://biomejs.dev/og/guides/integrate-in-editor.png", "og:locale": "en", "ogDescription": "Learn how you can integrate Biome with editors and IDEs", "title": "Integrate Biome in your editor | Biome", "ogImage": "https://biomejs.dev/og/guides/integrate-in-editor.png", "favicon": "https://biomejs.dev/img/favicon.svg", "og:url": "https://biomejs.dev/guides/integrate-in-editor/", "ogUrl": "https://biomejs.dev/guides/integrate-in-editor/", "og:site_name": "Biome", "language": "en", "description": "Learn how you can integrate Biome with editors and IDEs", "viewport": "width=device-width, initial-scale=1", "ogLocale": "en", "ogTitle": "Integrate Biome in your editor", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "og:title": "Integrate Biome in your editor", "og:type": "article", "og:image": "https://biomejs.dev/og/guides/integrate-in-editor.png", "og:description": "Learn how you can integrate Biome with editors and IDEs", "scrapeId": "5c191f1c-3360-4619-8bda-b2c6fe40bb16", "sourceURL": "https://biomejs.dev/guides/integrate-in-editor", "url": "https://biomejs.dev/guides/integrate-in-editor/", "statusCode": 200}}}
{"text": "System: You are a helpful biomejs-guides expert.\n\nUser: How do I daemon logs in biomejs-guides?\n\nAssistant: To daemon logs in biomejs-guides, here's what you do:\nThe Biome daemon saves logs in your file system.\nThey are stored in a folder called `biome-logs`.\nThe path to this folder will vary depending on your operating system:\n\n- Linux: `~/.cache/biome`;\n- Windows: `C:\\Users\\<UserName>\\AppData\\Local\\biomejs\\biome\\cache`\n- macOS: `/Users/<UserName>/Library/Caches/dev.biomejs.biome`\n\nFor other operative systems, you can find the folder in the system’s temporary directory.\n\nTo obtain the precise path, execute the following command:\n\n```\nbiome explain daemon-logs\n```\n\nThe log files are rotated on an hourly basis.\nYou can remove the logs using the `clean` command:\n\n```\nbiome clean\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://biomejs.dev/guides/integrate-in-editor", "title": "Integrate Biome in your editor", "description": "Biome has LSP first-class support. If your editor implements LSP, then the integration of Biome should be seamless.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 22:07:22", "type": "section_detail", "page_metadata": {"twitter:card": "summary_large_image", "ogSiteName": "Biome", "twitter:image": "https://biomejs.dev/og/guides/integrate-in-editor.png", "og:locale": "en", "ogDescription": "Learn how you can integrate Biome with editors and IDEs", "title": "Integrate Biome in your editor | Biome", "ogImage": "https://biomejs.dev/og/guides/integrate-in-editor.png", "favicon": "https://biomejs.dev/img/favicon.svg", "og:url": "https://biomejs.dev/guides/integrate-in-editor/", "ogUrl": "https://biomejs.dev/guides/integrate-in-editor/", "og:site_name": "Biome", "language": "en", "description": "Learn how you can integrate Biome with editors and IDEs", "viewport": "width=device-width, initial-scale=1", "ogLocale": "en", "ogTitle": "Integrate Biome in your editor", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "og:title": "Integrate Biome in your editor", "og:type": "article", "og:image": "https://biomejs.dev/og/guides/integrate-in-editor.png", "og:description": "Learn how you can integrate Biome with editors and IDEs", "scrapeId": "5c191f1c-3360-4619-8bda-b2c6fe40bb16", "sourceURL": "https://biomejs.dev/guides/integrate-in-editor", "url": "https://biomejs.dev/guides/integrate-in-editor/", "statusCode": 200}}}
{"text": "System: You are a helpful biomejs-guides expert.\n\nUser: Can you give me some code examples for Integrate Biome in your editor in biomejs-guides?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Start the daemon**:\n\n```yaml\nbiome start\n```\n\nThis snippet shows you how to start the daemon, which is an important aspect of integrate biome in your editor.\n\n**Format using the daemon**:\n\n```yaml\necho \"console.log('')\" | biome format --use-server --stdin-file-path=dummy.js\n```\n\nThis snippet shows you how to format using the daemon, which is an important aspect of integrate biome in your editor.\n\n**Get daemon logs path**:\n\n```yaml\nbiome explain daemon-logs\n```\n\nThis snippet shows you how to get daemon logs path, which is an important aspect of integrate biome in your editor.\n\n**Clean logs**:\n\n```yaml\nbiome clean\n```\n\nThis snippet shows you how to clean logs, which is an important aspect of integrate biome in your editor.\n\n", "metadata": {"source_url": "https://biomejs.dev/guides/integrate-in-editor", "title": "Integrate Biome in your editor", "description": "Biome has LSP first-class support. If your editor implements LSP, then the integration of Biome should be seamless.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 22:07:22", "type": "code_examples", "page_metadata": {"twitter:card": "summary_large_image", "ogSiteName": "Biome", "twitter:image": "https://biomejs.dev/og/guides/integrate-in-editor.png", "og:locale": "en", "ogDescription": "Learn how you can integrate Biome with editors and IDEs", "title": "Integrate Biome in your editor | Biome", "ogImage": "https://biomejs.dev/og/guides/integrate-in-editor.png", "favicon": "https://biomejs.dev/img/favicon.svg", "og:url": "https://biomejs.dev/guides/integrate-in-editor/", "ogUrl": "https://biomejs.dev/guides/integrate-in-editor/", "og:site_name": "Biome", "language": "en", "description": "Learn how you can integrate Biome with editors and IDEs", "viewport": "width=device-width, initial-scale=1", "ogLocale": "en", "ogTitle": "Integrate Biome in your editor", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "og:title": "Integrate Biome in your editor", "og:type": "article", "og:image": "https://biomejs.dev/og/guides/integrate-in-editor.png", "og:description": "Learn how you can integrate Biome with editors and IDEs", "scrapeId": "5c191f1c-3360-4619-8bda-b2c6fe40bb16", "sourceURL": "https://biomejs.dev/guides/integrate-in-editor", "url": "https://biomejs.dev/guides/integrate-in-editor/", "statusCode": 200}}}
{"text": "System: You are a helpful biomejs-guides expert.\n\nUser: What are some tips for using Integrate Biome in your editor in biomejs-guides effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nWhen using stdin, ensure to pass the --stdin-file-path option with the correct file extension.\n\nThe file path for stdin does not need to exist, but the extension is important for Biome to process the file correctly.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://biomejs.dev/guides/integrate-in-editor", "title": "Integrate Biome in your editor", "description": "Biome has LSP first-class support. If your editor implements LSP, then the integration of Biome should be seamless.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 22:07:22", "type": "best_practices", "page_metadata": {"twitter:card": "summary_large_image", "ogSiteName": "Biome", "twitter:image": "https://biomejs.dev/og/guides/integrate-in-editor.png", "og:locale": "en", "ogDescription": "Learn how you can integrate Biome with editors and IDEs", "title": "Integrate Biome in your editor | Biome", "ogImage": "https://biomejs.dev/og/guides/integrate-in-editor.png", "favicon": "https://biomejs.dev/img/favicon.svg", "og:url": "https://biomejs.dev/guides/integrate-in-editor/", "ogUrl": "https://biomejs.dev/guides/integrate-in-editor/", "og:site_name": "Biome", "language": "en", "description": "Learn how you can integrate Biome with editors and IDEs", "viewport": "width=device-width, initial-scale=1", "ogLocale": "en", "ogTitle": "Integrate Biome in your editor", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "og:title": "Integrate Biome in your editor", "og:type": "article", "og:image": "https://biomejs.dev/og/guides/integrate-in-editor.png", "og:description": "Learn how you can integrate Biome with editors and IDEs", "scrapeId": "5c191f1c-3360-4619-8bda-b2c6fe40bb16", "sourceURL": "https://biomejs.dev/guides/integrate-in-editor", "url": "https://biomejs.dev/guides/integrate-in-editor/", "statusCode": 200}}}
{"text": "System: You are a helpful biomejs-guides expert.\n\nUser: Can you explain what Integrate Biome with your VCS is in biomejs-guides?\n\nAssistant: Sure, I'd be happy to explain Integrate Biome with your VCS in biomejs-guides.\n\n# Integrate Biome with your VCS\n\nThe VCS (Version Control System) integration is meant to take advantage of additional features that only a VCS can provide. At the moment, Biome only supports Git. The integration is opt-in.Here's a quick rundown of what this is about:\n\n## Use the ignore file\n\nEnable `vcs.useIgnoreFile`, to allow Biome to ignore all the files and directories listed in your VCS ignore file. For now, Biome only takes the ignore file in the working directory into account.\n\n```json\n{\n  \"vcs\": {\n    \"enabled\": true,\n    \"clientKind\": \"git\",\n    \"useIgnoreFile\": true\n  }\n}\n```\n\n## Process only changed files\n\nThis is a feature that is available only via CLI, and allows processing only the files that have changed from one revision to another.\n\nFirst, you have to update your configuration file and tell Biome what’s the default branch via the `vcs.defaultBranch` field:\n\n```json\n{\n  \"vcs\": {\n    \"enabled\": true,\n    \"clientKind\": \"git\",\n    \"useIgnoreFile\": true,\n    \"defaultBranch\": \"main\"\n  }\n}\n```\n\nThen, add the `--changed` option to your command, to process only those files that your VCS acknowledged as “changed”. Biome, with the help of the VCS, will determine the changed file from the branch `main` and your current revision:\n\n```bash\nbiome check --changed\n```\n\nAlternatively, you can use the option `--since` to specify an arbitrary branch. This option takes precedence over the option `vcs.defaultBranch`. For example, you might want to check your changes against the `next` branch:\n\n```bash\nbiome check --changed --since=next\n```\n\n## Process only staged files\n\nBefore committing your changes, you may want to check the formatting and lints files that have been added to the index, also known as staged files. Add the `--staged` option to your command, to process only those files:\n\n```bash\nbiome check --staged\n```\n\nThe `--staged` option is not available on the `ci` command because you are not expected to commit changes in a CI environment.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://biomejs.dev/guides/integrate-in-vcs", "title": "Integrate Biome with your VCS", "description": "The VCS (Version Control System) integration is meant to take advantage of additional features that only a VCS can provide. At the moment, Biome only supports Git. The integration is opt-in.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 22:08:42", "type": "overview", "page_metadata": {"favicon": "https://biomejs.dev/img/favicon.svg", "twitter:card": "summary_large_image", "ogImage": "https://biomejs.dev/og/guides/integrate-in-vcs.png", "title": "Integrate Biome with your VCS | Biome", "language": "en", "ogUrl": "https://biomejs.dev/guides/integrate-in-vcs/", "ogLocale": "en", "description": "Learn how you can integrate Biome with VCS", "viewport": "width=device-width, initial-scale=1", "ogDescription": "Learn how you can integrate Biome with VCS", "og:title": "Integrate Biome with your VCS", "og:url": "https://biomejs.dev/guides/integrate-in-vcs/", "og:locale": "en", "twitter:image": "https://biomejs.dev/og/guides/integrate-in-vcs.png", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "og:type": "article", "og:description": "Learn how you can integrate Biome with VCS", "og:site_name": "Biome", "ogTitle": "Integrate Biome with your VCS", "ogSiteName": "Biome", "og:image": "https://biomejs.dev/og/guides/integrate-in-vcs.png", "scrapeId": "2100f3ff-9504-42a2-9bee-dc9e59073bbd", "sourceURL": "https://biomejs.dev/guides/integrate-in-vcs", "url": "https://biomejs.dev/guides/integrate-in-vcs/", "statusCode": 200}}}
{"text": "System: You are a helpful biomejs-guides expert.\n\nUser: How do I use the ignore file in biomejs-guides?\n\nAssistant: To use the ignore file in biomejs-guides, here's what you do:\nEnable `vcs.useIgnoreFile`, to allow Biome to ignore all the files and directories listed in your VCS ignore file. For now, Biome only takes the ignore file in the working directory into account.\n\n```json\n{\n  \"vcs\": {\n    \"enabled\": true,\n    \"clientKind\": \"git\",\n    \"useIgnoreFile\": true\n  }\n}\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://biomejs.dev/guides/integrate-in-vcs", "title": "Integrate Biome with your VCS", "description": "The VCS (Version Control System) integration is meant to take advantage of additional features that only a VCS can provide. At the moment, Biome only supports Git. The integration is opt-in.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 22:08:42", "type": "section_detail", "page_metadata": {"favicon": "https://biomejs.dev/img/favicon.svg", "twitter:card": "summary_large_image", "ogImage": "https://biomejs.dev/og/guides/integrate-in-vcs.png", "title": "Integrate Biome with your VCS | Biome", "language": "en", "ogUrl": "https://biomejs.dev/guides/integrate-in-vcs/", "ogLocale": "en", "description": "Learn how you can integrate Biome with VCS", "viewport": "width=device-width, initial-scale=1", "ogDescription": "Learn how you can integrate Biome with VCS", "og:title": "Integrate Biome with your VCS", "og:url": "https://biomejs.dev/guides/integrate-in-vcs/", "og:locale": "en", "twitter:image": "https://biomejs.dev/og/guides/integrate-in-vcs.png", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "og:type": "article", "og:description": "Learn how you can integrate Biome with VCS", "og:site_name": "Biome", "ogTitle": "Integrate Biome with your VCS", "ogSiteName": "Biome", "og:image": "https://biomejs.dev/og/guides/integrate-in-vcs.png", "scrapeId": "2100f3ff-9504-42a2-9bee-dc9e59073bbd", "sourceURL": "https://biomejs.dev/guides/integrate-in-vcs", "url": "https://biomejs.dev/guides/integrate-in-vcs/", "statusCode": 200}}}
{"text": "System: You are a helpful biomejs-guides expert.\n\nUser: How do I process only changed files in biomejs-guides?\n\nAssistant: To process only changed files in biomejs-guides, here's what you do:\nThis is a feature that is available only via CLI, and allows processing only the files that have changed from one revision to another.\n\nFirst, you have to update your configuration file and tell Biome what’s the default branch via the `vcs.defaultBranch` field:\n\n```json\n{\n  \"vcs\": {\n    \"enabled\": true,\n    \"clientKind\": \"git\",\n    \"useIgnoreFile\": true,\n    \"defaultBranch\": \"main\"\n  }\n}\n```\n\nThen, add the `--changed` option to your command, to process only those files that your VCS acknowledged as “changed”. Biome, with the help of the VCS, will determine the changed file from the branch `main` and your current revision:\n\n```bash\nbiome check --changed\n```\n\nAlternatively, you can use the option `--since` to specify an arbitrary branch. This option takes precedence over the option `vcs.defaultBranch`. For example, you might want to check your changes against the `next` branch:\n\n```bash\nbiome check --changed --since=next\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://biomejs.dev/guides/integrate-in-vcs", "title": "Integrate Biome with your VCS", "description": "The VCS (Version Control System) integration is meant to take advantage of additional features that only a VCS can provide. At the moment, Biome only supports Git. The integration is opt-in.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 22:08:42", "type": "section_detail", "page_metadata": {"favicon": "https://biomejs.dev/img/favicon.svg", "twitter:card": "summary_large_image", "ogImage": "https://biomejs.dev/og/guides/integrate-in-vcs.png", "title": "Integrate Biome with your VCS | Biome", "language": "en", "ogUrl": "https://biomejs.dev/guides/integrate-in-vcs/", "ogLocale": "en", "description": "Learn how you can integrate Biome with VCS", "viewport": "width=device-width, initial-scale=1", "ogDescription": "Learn how you can integrate Biome with VCS", "og:title": "Integrate Biome with your VCS", "og:url": "https://biomejs.dev/guides/integrate-in-vcs/", "og:locale": "en", "twitter:image": "https://biomejs.dev/og/guides/integrate-in-vcs.png", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "og:type": "article", "og:description": "Learn how you can integrate Biome with VCS", "og:site_name": "Biome", "ogTitle": "Integrate Biome with your VCS", "ogSiteName": "Biome", "og:image": "https://biomejs.dev/og/guides/integrate-in-vcs.png", "scrapeId": "2100f3ff-9504-42a2-9bee-dc9e59073bbd", "sourceURL": "https://biomejs.dev/guides/integrate-in-vcs", "url": "https://biomejs.dev/guides/integrate-in-vcs/", "statusCode": 200}}}
{"text": "System: You are a helpful biomejs-guides expert.\n\nUser: How do I process only staged files in biomejs-guides?\n\nAssistant: To process only staged files in biomejs-guides, here's what you do:\nBefore committing your changes, you may want to check the formatting and lints files that have been added to the index, also known as staged files. Add the `--staged` option to your command, to process only those files:\n\n```bash\nbiome check --staged\n```\n\nThe `--staged` option is not available on the `ci` command because you are not expected to commit changes in a CI environment..\nPretty straightforward, right?", "metadata": {"source_url": "https://biomejs.dev/guides/integrate-in-vcs", "title": "Integrate Biome with your VCS", "description": "The VCS (Version Control System) integration is meant to take advantage of additional features that only a VCS can provide. At the moment, Biome only supports Git. The integration is opt-in.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 22:08:42", "type": "section_detail", "page_metadata": {"favicon": "https://biomejs.dev/img/favicon.svg", "twitter:card": "summary_large_image", "ogImage": "https://biomejs.dev/og/guides/integrate-in-vcs.png", "title": "Integrate Biome with your VCS | Biome", "language": "en", "ogUrl": "https://biomejs.dev/guides/integrate-in-vcs/", "ogLocale": "en", "description": "Learn how you can integrate Biome with VCS", "viewport": "width=device-width, initial-scale=1", "ogDescription": "Learn how you can integrate Biome with VCS", "og:title": "Integrate Biome with your VCS", "og:url": "https://biomejs.dev/guides/integrate-in-vcs/", "og:locale": "en", "twitter:image": "https://biomejs.dev/og/guides/integrate-in-vcs.png", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "og:type": "article", "og:description": "Learn how you can integrate Biome with VCS", "og:site_name": "Biome", "ogTitle": "Integrate Biome with your VCS", "ogSiteName": "Biome", "og:image": "https://biomejs.dev/og/guides/integrate-in-vcs.png", "scrapeId": "2100f3ff-9504-42a2-9bee-dc9e59073bbd", "sourceURL": "https://biomejs.dev/guides/integrate-in-vcs", "url": "https://biomejs.dev/guides/integrate-in-vcs/", "statusCode": 200}}}
{"text": "System: You are a helpful biomejs-guides expert.\n\nUser: Can you give me some code examples for Integrate Biome with your VCS in biomejs-guides?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Biome Configuration for VCS**:\n\n```yaml\n{\n  \"vcs\": {\n    \"enabled\": true,\n    \"clientKind\": \"git\"\n  }\n}\n```\n\nThis snippet shows you how to biome configuration for vcs, which is an important aspect of integrate biome with your vcs.\n\n**Biome Configuration with Ignore File**:\n\n```yaml\n{\n  \"vcs\": {\n    \"enabled\": true,\n    \"clientKind\": \"git\",\n    \"useIgnoreFile\": true\n  }\n}\n```\n\nThis snippet shows you how to biome configuration with ignore file, which is an important aspect of integrate biome with your vcs.\n\n**Biome Configuration with Default Branch**:\n\n```yaml\n{\n  \"vcs\": {\n    \"enabled\": true,\n    \"clientKind\": \"git\",\n    \"useIgnoreFile\": true,\n    \"defaultBranch\": \"main\"\n  }\n}\n```\n\nThis snippet shows you how to biome configuration with default branch, which is an important aspect of integrate biome with your vcs.\n\n**Command to Process Changed Files**:\n\n```yaml\nbiome check --changed\n```\n\nThis snippet shows you how to command to process changed files, which is an important aspect of integrate biome with your vcs.\n\n**Command to Process Changed Files Since a Branch**:\n\n```yaml\nbiome check --changed --since=next\n```\n\nThis snippet shows you how to command to process changed files since a branch, which is an important aspect of integrate biome with your vcs.\n\n**Command to Process Staged Files**:\n\n```yaml\nbiome check --staged\n```\n\nThis snippet shows you how to command to process staged files, which is an important aspect of integrate biome with your vcs.\n\n", "metadata": {"source_url": "https://biomejs.dev/guides/integrate-in-vcs", "title": "Integrate Biome with your VCS", "description": "The VCS (Version Control System) integration is meant to take advantage of additional features that only a VCS can provide. At the moment, Biome only supports Git. The integration is opt-in.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 22:08:42", "type": "code_examples", "page_metadata": {"favicon": "https://biomejs.dev/img/favicon.svg", "twitter:card": "summary_large_image", "ogImage": "https://biomejs.dev/og/guides/integrate-in-vcs.png", "title": "Integrate Biome with your VCS | Biome", "language": "en", "ogUrl": "https://biomejs.dev/guides/integrate-in-vcs/", "ogLocale": "en", "description": "Learn how you can integrate Biome with VCS", "viewport": "width=device-width, initial-scale=1", "ogDescription": "Learn how you can integrate Biome with VCS", "og:title": "Integrate Biome with your VCS", "og:url": "https://biomejs.dev/guides/integrate-in-vcs/", "og:locale": "en", "twitter:image": "https://biomejs.dev/og/guides/integrate-in-vcs.png", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "og:type": "article", "og:description": "Learn how you can integrate Biome with VCS", "og:site_name": "Biome", "ogTitle": "Integrate Biome with your VCS", "ogSiteName": "Biome", "og:image": "https://biomejs.dev/og/guides/integrate-in-vcs.png", "scrapeId": "2100f3ff-9504-42a2-9bee-dc9e59073bbd", "sourceURL": "https://biomejs.dev/guides/integrate-in-vcs", "url": "https://biomejs.dev/guides/integrate-in-vcs/", "statusCode": 200}}}
{"text": "System: You are a helpful biomejs-guides expert.\n\nUser: What are some tips for using Integrate Biome with your VCS in biomejs-guides effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nThe integration is opt-in, so ensure to enable the necessary features in the configuration file.\n\nUse the `--changed` option to only process files that have changed since the last revision.\n\nUse the `--staged` option to check only the files that are staged for commit.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://biomejs.dev/guides/integrate-in-vcs", "title": "Integrate Biome with your VCS", "description": "The VCS (Version Control System) integration is meant to take advantage of additional features that only a VCS can provide. At the moment, Biome only supports Git. The integration is opt-in.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 22:08:42", "type": "best_practices", "page_metadata": {"favicon": "https://biomejs.dev/img/favicon.svg", "twitter:card": "summary_large_image", "ogImage": "https://biomejs.dev/og/guides/integrate-in-vcs.png", "title": "Integrate Biome with your VCS | Biome", "language": "en", "ogUrl": "https://biomejs.dev/guides/integrate-in-vcs/", "ogLocale": "en", "description": "Learn how you can integrate Biome with VCS", "viewport": "width=device-width, initial-scale=1", "ogDescription": "Learn how you can integrate Biome with VCS", "og:title": "Integrate Biome with your VCS", "og:url": "https://biomejs.dev/guides/integrate-in-vcs/", "og:locale": "en", "twitter:image": "https://biomejs.dev/og/guides/integrate-in-vcs.png", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "og:type": "article", "og:description": "Learn how you can integrate Biome with VCS", "og:site_name": "Biome", "ogTitle": "Integrate Biome with your VCS", "ogSiteName": "Biome", "og:image": "https://biomejs.dev/og/guides/integrate-in-vcs.png", "scrapeId": "2100f3ff-9504-42a2-9bee-dc9e59073bbd", "sourceURL": "https://biomejs.dev/guides/integrate-in-vcs", "url": "https://biomejs.dev/guides/integrate-in-vcs/", "statusCode": 200}}}
{"text": "System: You are a helpful biomejs-guides expert.\n\nUser: Can you explain what Migrate from ESLint and Prettier is in biomejs-guides?\n\nAssistant: Sure, I'd be happy to explain Migrate from ESLint and Prettier in biomejs-guides.\n\n# Migrate from ESLint and Prettier\n\nBiome provides dedicated commands to ease the migration from ESLint and Prettier.Here's a quick rundown of what this is about:\n\n## Migrate from ESLint\n\nMany Biome linter rules are inspired by or identical to the ESLint rules or the rules of an ESLint plugin. We handle some ESLint plugins such as [TypeScript ESLint](https://typescript-eslint.io/), [ESLint JSX A11y](https://github.com/jsx-eslint/eslint-plugin-jsx-a11y), [ESLint React](https://github.com/jsx-eslint/eslint-plugin-react), and [ESLint Unicorn](https://github.com/sindresorhus/eslint-plugin-unicorn). However, Biome has its own naming convention for its rules. Biome uses `camelCaseRuleName` while ESLint uses `kebab-case-rule-name`. Moreover, Biome has often chosen to use different names to better convey the intent of its rules. The source of a rule can be found on the page describing the rule. You can also find the equivalent Biome rule from an ESLint rule using the [dedicated page](https://biomejs.dev/linter/rules-sources).\n\nTo ease the migration, Biome provides the `biome migrate eslint` subcommand. This subcommand will read your ESLint configuration and attempt to port its settings to Biome. The subcommand is able to handle both the legacy and the flat configuration files. It supports the `extends` field of the legacy configuration and loads both shared and plugin configurations. The subcommand also migrates `.eslintignore`.\n\nGiven the following ESLint configuration:\n\n```\n{\n  \"extends\": [\"plugin:unicorn/recommended\"],\n  \"plugins\": [\"unicorn\"],\n  \"ignore_patterns\": [\"dist/**\"],\n  \"globals\": {\n    \"Global1\": \"readonly\"\n  },\n  \"rules\": {\n    \"eqeqeq\": \"error\"\n  },\n  \"overrides\": [\n    {\n      \"files\": [\"tests/**\"],\n      \"rules\": {\n        \"eqeqeq\": \"off\"\n      }\n    }\n  ]\n}\n```\n\nAnd the following Biome configuration:\n\n```\n{\n  \"linter\": {\n    \"enabled\": true,\n    \"rules\": {\n      \"recommended\": true\n    }\n  }\n}\n```\n\nRun the following command to migrate your ESLint configuration to Biome.\n\n- [npm](https://biomejs.dev/guides/migrate-eslint-prettier/#tab-panel-100)\n- [yarn](https://biomejs.dev/guides/migrate-eslint-prettier/#tab-panel-101)\n- [pnpm](https://biomejs.dev/guides/migrate-eslint-prettier/#tab-panel-102)\n- [bun](https://biomejs.dev/guides/migrate-eslint-prettier/#tab-panel-103)\n- [deno](https://biomejs.dev/guides/migrate-eslint-prettier/#tab-panel-104)\n\n```\nnpx @biomejs/biome migrate eslint --write\n```\n\n```\nyarn biome migrate eslint --write\n```\n\n```\npnpm biome migrate eslint --write\n```\n\n```\nbunx biome migrate eslint --write\n```\n\n```\ndeno run -A npm:@biomejs/biome migrate eslint --write\n```\n\nThe subcommand overwrites your initial Biome configuration. For example, it disables `recommended`. This results in the following Biome configuration:\n\n```\n{\n  \"organizeImports\": { \"enabled\": true },\n  \"linter\": {\n    \"enabled\": true,\n    \"rules\": {\n      \"recommended\": false,\n      \"complexity\": {\n        \"noForEach\": \"error\",\n        \"noStaticOnlyClass\": \"error\",\n        \"noUselessSwitchCase\": \"error\",\n        \"useFlatMap\": \"error\"\n      },\n      \"style\": {\n        \"noNegationElse\": \"off\",\n        \"useForOf\": \"error\",\n        \"useNodejsImportProtocol\": \"error\",\n        \"useNumberNamespace\": \"error\"\n      },\n      \"suspicious\": {\n        \"noDoubleEquals\": \"error\",\n        \"noThenProperty\": \"error\",\n        \"useIsArray\": \"error\"\n      }\n    }\n  },\n  \"javascript\": { \"globals\": [\"Global1\"] },\n  \"overrides\": [\n    {\n      \"include\": [\"tests/**\"],\n      \"linter\": { \"rules\": { \"suspicious\": { \"noDoubleEquals\": \"off\" } } }\n    }\n  ]\n}\n```\n\nThe subcommand needs Node.js to load and resolve all the plugins and `extends` configured in the ESLint configuration file. For now, `biome migrate eslint` doesn’t support configuration written in YAML.\n\nBy default, Biome doesn’t migrate inspired rules. You can use the CLI flag `--include-inspired` to migrate them.\n\n- [npm](https://biomejs.dev/guides/migrate-eslint-prettier/#tab-panel-105)\n- [yarn](https://biomejs.dev/guides/migrate-eslint-prettier/#tab-panel-106)\n- [pnpm](https://biomejs.dev/guides/migrate-eslint-prettier/#tab-panel-107)\n- [bun](https://biomejs.dev/guides/migrate-eslint-prettier/#tab-panel-108)\n- [deno](https://biomejs.dev/guides/migrate-eslint-prettier/#tab-panel-109)\n\n```\nnpx @biomejs/biome migrate eslint --write --include-inspired\n```\n\n```\nyarn biome migrate eslint --write --include-inspired\n```\n\n```\npnpm biome migrate eslint --write --include-inspired\n```\n\n```\nbunx biome migrate eslint --write --include-inspired\n```\n\n```\ndeno run -A npm:@biomejs/biome migrate eslint --write --include-inspired\n```\n\nNote that you are unlikely to get exactly the same behavior as ESLint because Biome has chosen not to implement some rule options or to deviate slightly from the original implementation.\n\nSince ESLint takes VCS ignore files into account, we recommend that you enable Biome’s [VCS integration](https://biomejs.dev/guides/integrate-in-vcs).\n\n## Migrate from Prettier\n\nBiome tries to match the Prettier formatter as closely as possible. However, Biome uses different defaults for its formatter. For example, it uses tabs for indentation instead of spaces. You can easily migrate to Biome by running `biome migrate prettier --write`.\n\nGiven the following Prettier configuration:\n\n```\n{\n  \"useTabs\": false,\n  \"singleQuote\": true,\n  \"overrides\": [\n    {\n      \"files\": [\"*.json\"],\n      \"options\": { \"tabWidth\": 2 }\n    }\n  ]\n}\n```\n\nRun the following command to migrate your Prettier configuration to Biome.\n\n- [npm](https://biomejs.dev/guides/migrate-eslint-prettier/#tab-panel-110)\n- [yarn](https://biomejs.dev/guides/migrate-eslint-prettier/#tab-panel-111)\n- [pnpm](https://biomejs.dev/guides/migrate-eslint-prettier/#tab-panel-112)\n- [bun](https://biomejs.dev/guides/migrate-eslint-prettier/#tab-panel-113)\n- [deno](https://biomejs.dev/guides/migrate-eslint-prettier/#tab-panel-114)\n\n```\nnpx @biomejs/biome migrate prettier --write\n```\n\n```\nyarn biome migrate prettier --write\n```\n\n```\npnpm biome migrate prettier --write\n```\n\n```\nbunx biome migrate prettier --write\n```\n\n```\ndeno run -A npm:@biomejs/biome migrate prettier --write\n```\n\nThis results in the following Biome configuration:\n\n```\n{\n  \"formatter\": {\n    \"enabled\": true,\n    \"formatWithErrors\": false,\n    \"indentStyle\": \"space\",\n    \"indentWidth\": 2,\n    \"lineEnding\": \"lf\",\n    \"lineWidth\": 80,\n    \"attributePosition\": \"auto\"\n  },\n  \"organizeImports\": { \"enabled\": true },\n  \"linter\": { \"enabled\": true, \"rules\": { \"recommended\": true } },\n  \"javascript\": {\n    \"formatter\": {\n      \"jsxQuoteStyle\": \"double\",\n      \"quoteProperties\": \"asNeeded\",\n      \"trailingCommas\": \"all\",\n      \"semicolons\": \"asNeeded\",\n      \"arrowParentheses\": \"always\",\n      \"bracketSpacing\": true,\n      \"bracketSameLine\": false,\n      \"quoteStyle\": \"single\",\n      \"attributePosition\": \"auto\"\n    }\n  },\n  \"overrides\": [\n    {\n      \"include\": [\"*.json\"],\n      \"formatter\": {\n        \"indentWidth\": 2\n      }\n    }\n  ]\n}\n```\n\nThe subcommand needs Node.js to load JavaScript configurations such as `.prettierrc.js`. `biome migrate prettier` doesn’t support configuration written in JSON5, TOML, or YAML.\n\nSince Prettier takes VCS ignore files into account, we recommend that you enable Biome’s [VCS integration](https://biomejs.dev/guides/integrate-in-vcs).\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://biomejs.dev/guides/migrate-eslint-prettier", "title": "Migrate from ESLint and Prettier", "description": "Biome provides dedicated commands to ease the migration from ESLint and Prettier.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-02-28 22:09:27", "type": "overview", "page_metadata": {"og:locale": "en", "language": "en", "og:description": "Learn how you can ease your migration from ESLint and Prettier", "viewport": "width=device-width, initial-scale=1", "title": "Migrate from ESLint and Prettier | Biome", "ogDescription": "Learn how you can ease your migration from ESLint and Prettier", "og:site_name": "Biome", "ogLocale": "en", "twitter:card": "summary_large_image", "ogSiteName": "Biome", "twitter:image": "https://biomejs.dev/og/guides/migrate-eslint-prettier.png", "description": "Learn how you can ease your migration from ESLint and Prettier", "og:image": "https://biomejs.dev/og/guides/migrate-eslint-prettier.png", "favicon": "https://biomejs.dev/img/favicon.svg", "og:title": "Migrate from ESLint and Prettier", "og:url": "https://biomejs.dev/guides/migrate-eslint-prettier/", "ogImage": "https://biomejs.dev/og/guides/migrate-eslint-prettier.png", "og:type": "article", "ogUrl": "https://biomejs.dev/guides/migrate-eslint-prettier/", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "ogTitle": "Migrate from ESLint and Prettier", "scrapeId": "0f91207f-5c4d-454b-9a55-cc40aa33b7c6", "sourceURL": "https://biomejs.dev/guides/migrate-eslint-prettier", "url": "https://biomejs.dev/guides/migrate-eslint-prettier/", "statusCode": 200}}}
{"text": "System: You are a helpful biomejs-guides expert.\n\nUser: How do I migrate from eslint in biomejs-guides?\n\nAssistant: To migrate from eslint in biomejs-guides, here's what you do:\nMany Biome linter rules are inspired by or identical to the ESLint rules or the rules of an ESLint plugin. We handle some ESLint plugins such as [TypeScript ESLint](https://typescript-eslint.io/), [ESLint JSX A11y](https://github.com/jsx-eslint/eslint-plugin-jsx-a11y), [ESLint React](https://github.com/jsx-eslint/eslint-plugin-react), and [ESLint Unicorn](https://github.com/sindresorhus/eslint-plugin-unicorn). However, Biome has its own naming convention for its rules. Biome uses `camelCaseRuleName` while ESLint uses `kebab-case-rule-name`. Moreover, Biome has often chosen to use different names to better convey the intent of its rules. The source of a rule can be found on the page describing the rule. You can also find the equivalent Biome rule from an ESLint rule using the [dedicated page](https://biomejs.dev/linter/rules-sources).\n\nTo ease the migration, Biome provides the `biome migrate eslint` subcommand. This subcommand will read your ESLint configuration and attempt to port its settings to Biome. The subcommand is able to handle both the legacy and the flat configuration files. It supports the `extends` field of the legacy configuration and loads both shared and plugin configurations. The subcommand also migrates `.eslintignore`.\n\nGiven the following ESLint configuration:\n\n```\n{\n  \"extends\": [\"plugin:unicorn/recommended\"],\n  \"plugins\": [\"unicorn\"],\n  \"ignore_patterns\": [\"dist/**\"],\n  \"globals\": {\n    \"Global1\": \"readonly\"\n  },\n  \"rules\": {\n    \"eqeqeq\": \"error\"\n  },\n  \"overrides\": [\n    {\n      \"files\": [\"tests/**\"],\n      \"rules\": {\n        \"eqeqeq\": \"off\"\n      }\n    }\n  ]\n}\n```\n\nAnd the following Biome configuration:\n\n```\n{\n  \"linter\": {\n    \"enabled\": true,\n    \"rules\": {\n      \"recommended\": true\n    }\n  }\n}\n```\n\nRun the following command to migrate your ESLint configuration to Biome.\n\n- [npm](https://biomejs.dev/guides/migrate-eslint-prettier/#tab-panel-100)\n- [yarn](https://biomejs.dev/guides/migrate-eslint-prettier/#tab-panel-101)\n- [pnpm](https://biomejs.dev/guides/migrate-eslint-prettier/#tab-panel-102)\n- [bun](https://biomejs.dev/guides/migrate-eslint-prettier/#tab-panel-103)\n- [deno](https://biomejs.dev/guides/migrate-eslint-prettier/#tab-panel-104)\n\n```\nnpx @biomejs/biome migrate eslint --write\n```\n\n```\nyarn biome migrate eslint --write\n```\n\n```\npnpm biome migrate eslint --write\n```\n\n```\nbunx biome migrate eslint --write\n```\n\n```\ndeno run -A npm:@biomejs/biome migrate eslint --write\n```\n\nThe subcommand overwrites your initial Biome configuration. For example, it disables `recommended`. This results in the following Biome configuration:\n\n```\n{\n  \"organizeImports\": { \"enabled\": true },\n  \"linter\": {\n    \"enabled\": true,\n    \"rules\": {\n      \"recommended\": false,\n      \"complexity\": {\n        \"noForEach\": \"error\",\n        \"noStaticOnlyClass\": \"error\",\n        \"noUselessSwitchCase\": \"error\",\n        \"useFlatMap\": \"error\"\n      },\n      \"style\": {\n        \"noNegationElse\": \"off\",\n        \"useForOf\": \"error\",\n        \"useNodejsImportProtocol\": \"error\",\n        \"useNumberNamespace\": \"error\"\n      },\n      \"suspicious\": {\n        \"noDoubleEquals\": \"error\",\n        \"noThenProperty\": \"error\",\n        \"useIsArray\": \"error\"\n      }\n    }\n  },\n  \"javascript\": { \"globals\": [\"Global1\"] },\n  \"overrides\": [\n    {\n      \"include\": [\"tests/**\"],\n      \"linter\": { \"rules\": { \"suspicious\": { \"noDoubleEquals\": \"off\" } } }\n    }\n  ]\n}\n```\n\nThe subcommand needs Node.js to load and resolve all the plugins and `extends` configured in the ESLint configuration file. For now, `biome migrate eslint` doesn’t support configuration written in YAML.\n\nBy default, Biome doesn’t migrate inspired rules. You can use the CLI flag `--include-inspired` to migrate them.\n\n- [npm](https://biomejs.dev/guides/migrate-eslint-prettier/#tab-panel-105)\n- [yarn](https://biomejs.dev/guides/migrate-eslint-prettier/#tab-panel-106)\n- [pnpm](https://biomejs.dev/guides/migrate-eslint-prettier/#tab-panel-107)\n- [bun](https://biomejs.dev/guides/migrate-eslint-prettier/#tab-panel-108)\n- [deno](https://biomejs.dev/guides/migrate-eslint-prettier/#tab-panel-109)\n\n```\nnpx @biomejs/biome migrate eslint --write --include-inspired\n```\n\n```\nyarn biome migrate eslint --write --include-inspired\n```\n\n```\npnpm biome migrate eslint --write --include-inspired\n```\n\n```\nbunx biome migrate eslint --write --include-inspired\n```\n\n```\ndeno run -A npm:@biomejs/biome migrate eslint --write --include-inspired\n```\n\nNote that you are unlikely to get exactly the same behavior as ESLint because Biome has chosen not to implement some rule options or to deviate slightly from the original implementation.\n\nSince ESLint takes VCS ignore files into account, we recommend that you enable Biome’s [VCS integration](https://biomejs.dev/guides/integrate-in-vcs)..\nPretty straightforward, right?", "metadata": {"source_url": "https://biomejs.dev/guides/migrate-eslint-prettier", "title": "Migrate from ESLint and Prettier", "description": "Biome provides dedicated commands to ease the migration from ESLint and Prettier.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-02-28 22:09:27", "type": "section_detail", "page_metadata": {"og:locale": "en", "language": "en", "og:description": "Learn how you can ease your migration from ESLint and Prettier", "viewport": "width=device-width, initial-scale=1", "title": "Migrate from ESLint and Prettier | Biome", "ogDescription": "Learn how you can ease your migration from ESLint and Prettier", "og:site_name": "Biome", "ogLocale": "en", "twitter:card": "summary_large_image", "ogSiteName": "Biome", "twitter:image": "https://biomejs.dev/og/guides/migrate-eslint-prettier.png", "description": "Learn how you can ease your migration from ESLint and Prettier", "og:image": "https://biomejs.dev/og/guides/migrate-eslint-prettier.png", "favicon": "https://biomejs.dev/img/favicon.svg", "og:title": "Migrate from ESLint and Prettier", "og:url": "https://biomejs.dev/guides/migrate-eslint-prettier/", "ogImage": "https://biomejs.dev/og/guides/migrate-eslint-prettier.png", "og:type": "article", "ogUrl": "https://biomejs.dev/guides/migrate-eslint-prettier/", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "ogTitle": "Migrate from ESLint and Prettier", "scrapeId": "0f91207f-5c4d-454b-9a55-cc40aa33b7c6", "sourceURL": "https://biomejs.dev/guides/migrate-eslint-prettier", "url": "https://biomejs.dev/guides/migrate-eslint-prettier/", "statusCode": 200}}}
{"text": "System: You are a helpful biomejs-guides expert.\n\nUser: How do I migrate from prettier in biomejs-guides?\n\nAssistant: To migrate from prettier in biomejs-guides, here's what you do:\nBiome tries to match the Prettier formatter as closely as possible. However, Biome uses different defaults for its formatter. For example, it uses tabs for indentation instead of spaces. You can easily migrate to Biome by running `biome migrate prettier --write`.\n\nGiven the following Prettier configuration:\n\n```\n{\n  \"useTabs\": false,\n  \"singleQuote\": true,\n  \"overrides\": [\n    {\n      \"files\": [\"*.json\"],\n      \"options\": { \"tabWidth\": 2 }\n    }\n  ]\n}\n```\n\nRun the following command to migrate your Prettier configuration to Biome.\n\n- [npm](https://biomejs.dev/guides/migrate-eslint-prettier/#tab-panel-110)\n- [yarn](https://biomejs.dev/guides/migrate-eslint-prettier/#tab-panel-111)\n- [pnpm](https://biomejs.dev/guides/migrate-eslint-prettier/#tab-panel-112)\n- [bun](https://biomejs.dev/guides/migrate-eslint-prettier/#tab-panel-113)\n- [deno](https://biomejs.dev/guides/migrate-eslint-prettier/#tab-panel-114)\n\n```\nnpx @biomejs/biome migrate prettier --write\n```\n\n```\nyarn biome migrate prettier --write\n```\n\n```\npnpm biome migrate prettier --write\n```\n\n```\nbunx biome migrate prettier --write\n```\n\n```\ndeno run -A npm:@biomejs/biome migrate prettier --write\n```\n\nThis results in the following Biome configuration:\n\n```\n{\n  \"formatter\": {\n    \"enabled\": true,\n    \"formatWithErrors\": false,\n    \"indentStyle\": \"space\",\n    \"indentWidth\": 2,\n    \"lineEnding\": \"lf\",\n    \"lineWidth\": 80,\n    \"attributePosition\": \"auto\"\n  },\n  \"organizeImports\": { \"enabled\": true },\n  \"linter\": { \"enabled\": true, \"rules\": { \"recommended\": true } },\n  \"javascript\": {\n    \"formatter\": {\n      \"jsxQuoteStyle\": \"double\",\n      \"quoteProperties\": \"asNeeded\",\n      \"trailingCommas\": \"all\",\n      \"semicolons\": \"asNeeded\",\n      \"arrowParentheses\": \"always\",\n      \"bracketSpacing\": true,\n      \"bracketSameLine\": false,\n      \"quoteStyle\": \"single\",\n      \"attributePosition\": \"auto\"\n    }\n  },\n  \"overrides\": [\n    {\n      \"include\": [\"*.json\"],\n      \"formatter\": {\n        \"indentWidth\": 2\n      }\n    }\n  ]\n}\n```\n\nThe subcommand needs Node.js to load JavaScript configurations such as `.prettierrc.js`. `biome migrate prettier` doesn’t support configuration written in JSON5, TOML, or YAML.\n\nSince Prettier takes VCS ignore files into account, we recommend that you enable Biome’s [VCS integration](https://biomejs.dev/guides/integrate-in-vcs)..\nPretty straightforward, right?", "metadata": {"source_url": "https://biomejs.dev/guides/migrate-eslint-prettier", "title": "Migrate from ESLint and Prettier", "description": "Biome provides dedicated commands to ease the migration from ESLint and Prettier.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-02-28 22:09:27", "type": "section_detail", "page_metadata": {"og:locale": "en", "language": "en", "og:description": "Learn how you can ease your migration from ESLint and Prettier", "viewport": "width=device-width, initial-scale=1", "title": "Migrate from ESLint and Prettier | Biome", "ogDescription": "Learn how you can ease your migration from ESLint and Prettier", "og:site_name": "Biome", "ogLocale": "en", "twitter:card": "summary_large_image", "ogSiteName": "Biome", "twitter:image": "https://biomejs.dev/og/guides/migrate-eslint-prettier.png", "description": "Learn how you can ease your migration from ESLint and Prettier", "og:image": "https://biomejs.dev/og/guides/migrate-eslint-prettier.png", "favicon": "https://biomejs.dev/img/favicon.svg", "og:title": "Migrate from ESLint and Prettier", "og:url": "https://biomejs.dev/guides/migrate-eslint-prettier/", "ogImage": "https://biomejs.dev/og/guides/migrate-eslint-prettier.png", "og:type": "article", "ogUrl": "https://biomejs.dev/guides/migrate-eslint-prettier/", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "ogTitle": "Migrate from ESLint and Prettier", "scrapeId": "0f91207f-5c4d-454b-9a55-cc40aa33b7c6", "sourceURL": "https://biomejs.dev/guides/migrate-eslint-prettier", "url": "https://biomejs.dev/guides/migrate-eslint-prettier/", "statusCode": 200}}}
{"text": "System: You are a helpful biomejs-guides expert.\n\nUser: Can you give me some code examples for Migrate from ESLint and Prettier in biomejs-guides?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Migrate ESLint Configuration**:\n\n```yaml\nnpx @biomejs/biome migrate eslint --write\n```\n\nThis snippet shows you how to migrate eslint configuration, which is an important aspect of migrate from eslint and prettier.\n\n**Migrate Prettier Configuration**:\n\n```yaml\nnpx @biomejs/biome migrate prettier --write\n```\n\nThis snippet shows you how to migrate prettier configuration, which is an important aspect of migrate from eslint and prettier.\n\n", "metadata": {"source_url": "https://biomejs.dev/guides/migrate-eslint-prettier", "title": "Migrate from ESLint and Prettier", "description": "Biome provides dedicated commands to ease the migration from ESLint and Prettier.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-02-28 22:09:27", "type": "code_examples", "page_metadata": {"og:locale": "en", "language": "en", "og:description": "Learn how you can ease your migration from ESLint and Prettier", "viewport": "width=device-width, initial-scale=1", "title": "Migrate from ESLint and Prettier | Biome", "ogDescription": "Learn how you can ease your migration from ESLint and Prettier", "og:site_name": "Biome", "ogLocale": "en", "twitter:card": "summary_large_image", "ogSiteName": "Biome", "twitter:image": "https://biomejs.dev/og/guides/migrate-eslint-prettier.png", "description": "Learn how you can ease your migration from ESLint and Prettier", "og:image": "https://biomejs.dev/og/guides/migrate-eslint-prettier.png", "favicon": "https://biomejs.dev/img/favicon.svg", "og:title": "Migrate from ESLint and Prettier", "og:url": "https://biomejs.dev/guides/migrate-eslint-prettier/", "ogImage": "https://biomejs.dev/og/guides/migrate-eslint-prettier.png", "og:type": "article", "ogUrl": "https://biomejs.dev/guides/migrate-eslint-prettier/", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "ogTitle": "Migrate from ESLint and Prettier", "scrapeId": "0f91207f-5c4d-454b-9a55-cc40aa33b7c6", "sourceURL": "https://biomejs.dev/guides/migrate-eslint-prettier", "url": "https://biomejs.dev/guides/migrate-eslint-prettier/", "statusCode": 200}}}
{"text": "System: You are a helpful biomejs-guides expert.\n\nUser: What are some tips for using Migrate from ESLint and Prettier in biomejs-guides effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nThe subcommand needs Node.js to load and resolve all the plugins and `extends` configured in the ESLint configuration file.\n\nFor now, `biome migrate eslint` doesn’t support configuration written in YAML.\n\nBy default, Biome doesn’t migrate inspired rules. You can use the CLI flag `--include-inspired` to migrate them.\n\nNote that you are unlikely to get exactly the same behavior as ESLint because Biome has chosen not to implement some rule options or to deviate slightly from the original implementation.\n\nSince ESLint takes VCS ignore files into account, we recommend that you enable Biome’s VCS integration.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://biomejs.dev/guides/migrate-eslint-prettier", "title": "Migrate from ESLint and Prettier", "description": "Biome provides dedicated commands to ease the migration from ESLint and Prettier.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-02-28 22:09:27", "type": "best_practices", "page_metadata": {"og:locale": "en", "language": "en", "og:description": "Learn how you can ease your migration from ESLint and Prettier", "viewport": "width=device-width, initial-scale=1", "title": "Migrate from ESLint and Prettier | Biome", "ogDescription": "Learn how you can ease your migration from ESLint and Prettier", "og:site_name": "Biome", "ogLocale": "en", "twitter:card": "summary_large_image", "ogSiteName": "Biome", "twitter:image": "https://biomejs.dev/og/guides/migrate-eslint-prettier.png", "description": "Learn how you can ease your migration from ESLint and Prettier", "og:image": "https://biomejs.dev/og/guides/migrate-eslint-prettier.png", "favicon": "https://biomejs.dev/img/favicon.svg", "og:title": "Migrate from ESLint and Prettier", "og:url": "https://biomejs.dev/guides/migrate-eslint-prettier/", "ogImage": "https://biomejs.dev/og/guides/migrate-eslint-prettier.png", "og:type": "article", "ogUrl": "https://biomejs.dev/guides/migrate-eslint-prettier/", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "ogTitle": "Migrate from ESLint and Prettier", "scrapeId": "0f91207f-5c4d-454b-9a55-cc40aa33b7c6", "sourceURL": "https://biomejs.dev/guides/migrate-eslint-prettier", "url": "https://biomejs.dev/guides/migrate-eslint-prettier/", "statusCode": 200}}}
{"text": "System: You are a helpful biomejs-guides expert.\n\nUser: Can you explain what Integrate Biome in an editor extension is in biomejs-guides?\n\nAssistant: Sure, I'd be happy to explain Integrate Biome in an editor extension in biomejs-guides.\n\n# Integrate Biome in an editor extension\n\nBiome has LSP first-class support. If your editor does implement LSP, then the integration of Biome should be seamless.Here's a quick rundown of what this is about:\n\n## Use the LSP proxy\n\nBiome has a command called `lsp-proxy`. When executed, Biome will spawn two processes:\n\n- a [daemon](https://biomejs.dev/internals/architecture#daemon) that does execute the requested operations;\n- a server that functions as a proxy between the requests of the client - the editor - and the server - the daemon;\n\nIf your editor is able to interact with a server and send [JSON-RPC](https://www.jsonrpc.org/) request, you only need to configure the editor run that command.\n\nYou can check how the [`neo-vim biome extension`](https://github.com/neovim/nvim-lspconfig/blob/master/lua/lspconfig/configs/biome.lua) does it.\n\n## Use `stdin`\n\nIf your editor doesn’t support LSP, you use directly the binary `biome` and call it using [standard input](https://en.wikipedia.org/wiki/Standard_streams#Standard_input_(stdin)).\n\nThe following commands can be called via standard input:\n\n- [`format`](https://biomejs.dev/reference/cli/#biome-format)\n- [`lint`](https://biomejs.dev/reference/cli/#biome-lint)\n- [`check`](https://biomejs.dev/reference/cli/#biome-check)\n\nBiome will return the new output (or the original output if changes haven’t occurred) to [standard output](https://en.wikipedia.org/wiki/Standard_streams#Standard_output_(stdout)) and the diagnostics to [standard error](https://en.wikipedia.org/wiki/Standard_streams#Standard_error_(stderr)).\n\nWhen you use `stdin`, you must pass the `--stdin-file-path` option. The file `path` **doesn’t need to exist** in your file system, it can be any name. **What’s important** is to provide the correct file extension, so Biome knows **how to treat** your file.\n\nIt’s the editor’s responsibility to locate the resolve the path of the binary and then call it when it’s needed. The binaries are shipped to npm based on the architectures and OS that we support:\n\n- `@biomejs/cli-darwin-arm64`\n- `@biomejs/cli-darwin-x64`\n- `@biomejs/cli-linux-arm64`\n- `@biomejs/cli-linux-x64`\n- `@biomejs/cli-win32-arm64`\n- `@biomejs/cli-win32-x64`\n\nThe binary name is `biome` or `biome.exe`, and it can be found in the root directory of the library, e.g.: `@biomejs/cli-darwin-arm64/biome`, `@biomejs/cli-win32-x64/biome.exe`.\n\n## Use the daemon with the binary\n\nUsing the binary via CLI is very efficient, although you won’t be able to provide [logs](https://biomejs.dev/guides/editors/create-a-extension/#daemon-logs) to your users. The CLI allows you to bootstrap a daemon and then use the CLI commands through the daemon itself.\n\nIf order to do so, you first need to start a daemon process with the [`start`](https://biomejs.dev/reference/cli#biome-start) command:\n\n```\nbiome start\n```\n\nThen, every command needs to add the `--use-server` options, e.g.:\n\n```\necho \"console.log('')\" | biome format --use-server --stdin-file-path=dummy.js\n```\n\n## Daemon logs\n\nThe Biome daemon saves logs in your file system. Logs are stored in a folder called `biome-logs`. The path of this folder changes based on your operative system:\n\n- Linux: `~/.cache/biome`;\n- Windows: `C:\\Users\\<UserName>\\AppData\\Local\\biomejs\\biome\\cache`\n- macOS: `/Users/<UserName>/Library/Caches/dev.biomejs.biome`\n\nFor other operative systems, you can find the folder in the system’s temporary directory.\n\nTo obtain the precise path, execute the following command:\n\n```\nbiome explain daemon-logs\n```\n\nThe log files are rotated on an hourly basis.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://biomejs.dev/guides/editors/create-a-extension", "title": "Integrate Biome in an editor extension", "description": "Biome has LSP first-class support. If your editor does implement LSP, then the integration of Biome should be seamless.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 22:11:55", "type": "overview", "page_metadata": {"ogLocale": "en", "og:image": "https://biomejs.dev/og/guides/editors/create-a-extension.png", "twitter:image": "https://biomejs.dev/og/guides/editors/create-a-extension.png", "og:locale": "en", "ogUrl": "https://biomejs.dev/guides/editors/create-a-extension/", "og:type": "article", "og:url": "https://biomejs.dev/guides/editors/create-a-extension/", "ogImage": "https://biomejs.dev/og/guides/editors/create-a-extension.png", "og:description": "Learn how you can integrate Biome with editors and IDEs", "language": "en", "ogTitle": "Integrate Biome in an editor extension", "viewport": "width=device-width, initial-scale=1", "og:site_name": "Biome", "description": "Learn how you can integrate Biome with editors and IDEs", "favicon": "https://biomejs.dev/img/favicon.svg", "twitter:card": "summary_large_image", "ogDescription": "Learn how you can integrate Biome with editors and IDEs", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "ogSiteName": "Biome", "title": "Integrate Biome in an editor extension | Biome", "og:title": "Integrate Biome in an editor extension", "scrapeId": "0b69d6dc-d266-4d7c-a6d6-1c5a6841a2c2", "sourceURL": "https://biomejs.dev/guides/editors/create-a-extension", "url": "https://biomejs.dev/guides/editors/create-a-extension/", "statusCode": 200}}}
{"text": "System: You are a helpful biomejs-guides expert.\n\nUser: How do I use the lsp proxy in biomejs-guides?\n\nAssistant: To use the lsp proxy in biomejs-guides, here's what you do:\nBiome has a command called `lsp-proxy`. When executed, Biome will spawn two processes:\n\n- a [daemon](https://biomejs.dev/internals/architecture#daemon) that does execute the requested operations;\n- a server that functions as a proxy between the requests of the client - the editor - and the server - the daemon;\n\nIf your editor is able to interact with a server and send [JSON-RPC](https://www.jsonrpc.org/) request, you only need to configure the editor run that command.\n\nYou can check how the [`neo-vim biome extension`](https://github.com/neovim/nvim-lspconfig/blob/master/lua/lspconfig/configs/biome.lua) does it..\nPretty straightforward, right?", "metadata": {"source_url": "https://biomejs.dev/guides/editors/create-a-extension", "title": "Integrate Biome in an editor extension", "description": "Biome has LSP first-class support. If your editor does implement LSP, then the integration of Biome should be seamless.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 22:11:55", "type": "section_detail", "page_metadata": {"ogLocale": "en", "og:image": "https://biomejs.dev/og/guides/editors/create-a-extension.png", "twitter:image": "https://biomejs.dev/og/guides/editors/create-a-extension.png", "og:locale": "en", "ogUrl": "https://biomejs.dev/guides/editors/create-a-extension/", "og:type": "article", "og:url": "https://biomejs.dev/guides/editors/create-a-extension/", "ogImage": "https://biomejs.dev/og/guides/editors/create-a-extension.png", "og:description": "Learn how you can integrate Biome with editors and IDEs", "language": "en", "ogTitle": "Integrate Biome in an editor extension", "viewport": "width=device-width, initial-scale=1", "og:site_name": "Biome", "description": "Learn how you can integrate Biome with editors and IDEs", "favicon": "https://biomejs.dev/img/favicon.svg", "twitter:card": "summary_large_image", "ogDescription": "Learn how you can integrate Biome with editors and IDEs", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "ogSiteName": "Biome", "title": "Integrate Biome in an editor extension | Biome", "og:title": "Integrate Biome in an editor extension", "scrapeId": "0b69d6dc-d266-4d7c-a6d6-1c5a6841a2c2", "sourceURL": "https://biomejs.dev/guides/editors/create-a-extension", "url": "https://biomejs.dev/guides/editors/create-a-extension/", "statusCode": 200}}}
{"text": "System: You are a helpful biomejs-guides expert.\n\nUser: How do I use `stdin` in biomejs-guides?\n\nAssistant: To use `stdin` in biomejs-guides, here's what you do:\nIf your editor doesn’t support LSP, you use directly the binary `biome` and call it using [standard input](https://en.wikipedia.org/wiki/Standard_streams#Standard_input_(stdin)).\n\nThe following commands can be called via standard input:\n\n- [`format`](https://biomejs.dev/reference/cli/#biome-format)\n- [`lint`](https://biomejs.dev/reference/cli/#biome-lint)\n- [`check`](https://biomejs.dev/reference/cli/#biome-check)\n\nBiome will return the new output (or the original output if changes haven’t occurred) to [standard output](https://en.wikipedia.org/wiki/Standard_streams#Standard_output_(stdout)) and the diagnostics to [standard error](https://en.wikipedia.org/wiki/Standard_streams#Standard_error_(stderr)).\n\nWhen you use `stdin`, you must pass the `--stdin-file-path` option. The file `path` **doesn’t need to exist** in your file system, it can be any name. **What’s important** is to provide the correct file extension, so Biome knows **how to treat** your file.\n\nIt’s the editor’s responsibility to locate the resolve the path of the binary and then call it when it’s needed. The binaries are shipped to npm based on the architectures and OS that we support:\n\n- `@biomejs/cli-darwin-arm64`\n- `@biomejs/cli-darwin-x64`\n- `@biomejs/cli-linux-arm64`\n- `@biomejs/cli-linux-x64`\n- `@biomejs/cli-win32-arm64`\n- `@biomejs/cli-win32-x64`\n\nThe binary name is `biome` or `biome.exe`, and it can be found in the root directory of the library, e.g.: `@biomejs/cli-darwin-arm64/biome`, `@biomejs/cli-win32-x64/biome.exe`..\nPretty straightforward, right?", "metadata": {"source_url": "https://biomejs.dev/guides/editors/create-a-extension", "title": "Integrate Biome in an editor extension", "description": "Biome has LSP first-class support. If your editor does implement LSP, then the integration of Biome should be seamless.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 22:11:55", "type": "section_detail", "page_metadata": {"ogLocale": "en", "og:image": "https://biomejs.dev/og/guides/editors/create-a-extension.png", "twitter:image": "https://biomejs.dev/og/guides/editors/create-a-extension.png", "og:locale": "en", "ogUrl": "https://biomejs.dev/guides/editors/create-a-extension/", "og:type": "article", "og:url": "https://biomejs.dev/guides/editors/create-a-extension/", "ogImage": "https://biomejs.dev/og/guides/editors/create-a-extension.png", "og:description": "Learn how you can integrate Biome with editors and IDEs", "language": "en", "ogTitle": "Integrate Biome in an editor extension", "viewport": "width=device-width, initial-scale=1", "og:site_name": "Biome", "description": "Learn how you can integrate Biome with editors and IDEs", "favicon": "https://biomejs.dev/img/favicon.svg", "twitter:card": "summary_large_image", "ogDescription": "Learn how you can integrate Biome with editors and IDEs", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "ogSiteName": "Biome", "title": "Integrate Biome in an editor extension | Biome", "og:title": "Integrate Biome in an editor extension", "scrapeId": "0b69d6dc-d266-4d7c-a6d6-1c5a6841a2c2", "sourceURL": "https://biomejs.dev/guides/editors/create-a-extension", "url": "https://biomejs.dev/guides/editors/create-a-extension/", "statusCode": 200}}}
{"text": "System: You are a helpful biomejs-guides expert.\n\nUser: How do I use the daemon with the binary in biomejs-guides?\n\nAssistant: To use the daemon with the binary in biomejs-guides, here's what you do:\nUsing the binary via CLI is very efficient, although you won’t be able to provide [logs](https://biomejs.dev/guides/editors/create-a-extension/#daemon-logs) to your users. The CLI allows you to bootstrap a daemon and then use the CLI commands through the daemon itself.\n\nIf order to do so, you first need to start a daemon process with the [`start`](https://biomejs.dev/reference/cli#biome-start) command:\n\n```\nbiome start\n```\n\nThen, every command needs to add the `--use-server` options, e.g.:\n\n```\necho \"console.log('')\" | biome format --use-server --stdin-file-path=dummy.js\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://biomejs.dev/guides/editors/create-a-extension", "title": "Integrate Biome in an editor extension", "description": "Biome has LSP first-class support. If your editor does implement LSP, then the integration of Biome should be seamless.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 22:11:55", "type": "section_detail", "page_metadata": {"ogLocale": "en", "og:image": "https://biomejs.dev/og/guides/editors/create-a-extension.png", "twitter:image": "https://biomejs.dev/og/guides/editors/create-a-extension.png", "og:locale": "en", "ogUrl": "https://biomejs.dev/guides/editors/create-a-extension/", "og:type": "article", "og:url": "https://biomejs.dev/guides/editors/create-a-extension/", "ogImage": "https://biomejs.dev/og/guides/editors/create-a-extension.png", "og:description": "Learn how you can integrate Biome with editors and IDEs", "language": "en", "ogTitle": "Integrate Biome in an editor extension", "viewport": "width=device-width, initial-scale=1", "og:site_name": "Biome", "description": "Learn how you can integrate Biome with editors and IDEs", "favicon": "https://biomejs.dev/img/favicon.svg", "twitter:card": "summary_large_image", "ogDescription": "Learn how you can integrate Biome with editors and IDEs", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "ogSiteName": "Biome", "title": "Integrate Biome in an editor extension | Biome", "og:title": "Integrate Biome in an editor extension", "scrapeId": "0b69d6dc-d266-4d7c-a6d6-1c5a6841a2c2", "sourceURL": "https://biomejs.dev/guides/editors/create-a-extension", "url": "https://biomejs.dev/guides/editors/create-a-extension/", "statusCode": 200}}}
{"text": "System: You are a helpful biomejs-guides expert.\n\nUser: How do I daemon logs in biomejs-guides?\n\nAssistant: To daemon logs in biomejs-guides, here's what you do:\nThe Biome daemon saves logs in your file system. Logs are stored in a folder called `biome-logs`. The path of this folder changes based on your operative system:\n\n- Linux: `~/.cache/biome`;\n- Windows: `C:\\Users\\<UserName>\\AppData\\Local\\biomejs\\biome\\cache`\n- macOS: `/Users/<UserName>/Library/Caches/dev.biomejs.biome`\n\nFor other operative systems, you can find the folder in the system’s temporary directory.\n\nTo obtain the precise path, execute the following command:\n\n```\nbiome explain daemon-logs\n```\n\nThe log files are rotated on an hourly basis..\nPretty straightforward, right?", "metadata": {"source_url": "https://biomejs.dev/guides/editors/create-a-extension", "title": "Integrate Biome in an editor extension", "description": "Biome has LSP first-class support. If your editor does implement LSP, then the integration of Biome should be seamless.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 22:11:55", "type": "section_detail", "page_metadata": {"ogLocale": "en", "og:image": "https://biomejs.dev/og/guides/editors/create-a-extension.png", "twitter:image": "https://biomejs.dev/og/guides/editors/create-a-extension.png", "og:locale": "en", "ogUrl": "https://biomejs.dev/guides/editors/create-a-extension/", "og:type": "article", "og:url": "https://biomejs.dev/guides/editors/create-a-extension/", "ogImage": "https://biomejs.dev/og/guides/editors/create-a-extension.png", "og:description": "Learn how you can integrate Biome with editors and IDEs", "language": "en", "ogTitle": "Integrate Biome in an editor extension", "viewport": "width=device-width, initial-scale=1", "og:site_name": "Biome", "description": "Learn how you can integrate Biome with editors and IDEs", "favicon": "https://biomejs.dev/img/favicon.svg", "twitter:card": "summary_large_image", "ogDescription": "Learn how you can integrate Biome with editors and IDEs", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "ogSiteName": "Biome", "title": "Integrate Biome in an editor extension | Biome", "og:title": "Integrate Biome in an editor extension", "scrapeId": "0b69d6dc-d266-4d7c-a6d6-1c5a6841a2c2", "sourceURL": "https://biomejs.dev/guides/editors/create-a-extension", "url": "https://biomejs.dev/guides/editors/create-a-extension/", "statusCode": 200}}}
{"text": "System: You are a helpful biomejs-guides expert.\n\nUser: Can you give me some code examples for Integrate Biome in an editor extension in biomejs-guides?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Start the daemon**:\n\n```yaml\nbiome start\n```\n\nThis snippet shows you how to start the daemon, which is an important aspect of integrate biome in an editor extension.\n\n**Format using the daemon**:\n\n```yaml\necho \"console.log('')\" | biome format --use-server --stdin-file-path=dummy.js\n```\n\nThis snippet shows you how to format using the daemon, which is an important aspect of integrate biome in an editor extension.\n\n**Get daemon logs path**:\n\n```yaml\nbiome explain daemon-logs\n```\n\nThis snippet shows you how to get daemon logs path, which is an important aspect of integrate biome in an editor extension.\n\n", "metadata": {"source_url": "https://biomejs.dev/guides/editors/create-a-extension", "title": "Integrate Biome in an editor extension", "description": "Biome has LSP first-class support. If your editor does implement LSP, then the integration of Biome should be seamless.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 22:11:55", "type": "code_examples", "page_metadata": {"ogLocale": "en", "og:image": "https://biomejs.dev/og/guides/editors/create-a-extension.png", "twitter:image": "https://biomejs.dev/og/guides/editors/create-a-extension.png", "og:locale": "en", "ogUrl": "https://biomejs.dev/guides/editors/create-a-extension/", "og:type": "article", "og:url": "https://biomejs.dev/guides/editors/create-a-extension/", "ogImage": "https://biomejs.dev/og/guides/editors/create-a-extension.png", "og:description": "Learn how you can integrate Biome with editors and IDEs", "language": "en", "ogTitle": "Integrate Biome in an editor extension", "viewport": "width=device-width, initial-scale=1", "og:site_name": "Biome", "description": "Learn how you can integrate Biome with editors and IDEs", "favicon": "https://biomejs.dev/img/favicon.svg", "twitter:card": "summary_large_image", "ogDescription": "Learn how you can integrate Biome with editors and IDEs", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "ogSiteName": "Biome", "title": "Integrate Biome in an editor extension | Biome", "og:title": "Integrate Biome in an editor extension", "scrapeId": "0b69d6dc-d266-4d7c-a6d6-1c5a6841a2c2", "sourceURL": "https://biomejs.dev/guides/editors/create-a-extension", "url": "https://biomejs.dev/guides/editors/create-a-extension/", "statusCode": 200}}}
{"text": "System: You are a helpful biomejs-guides expert.\n\nUser: What are some tips for using Integrate Biome in an editor extension in biomejs-guides effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nWhen using stdin, ensure to pass the --stdin-file-path option with the correct file extension for Biome to process the file correctly.\n\nThe binary name is biome or biome.exe, and it can be found in the root directory of the library.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://biomejs.dev/guides/editors/create-a-extension", "title": "Integrate Biome in an editor extension", "description": "Biome has LSP first-class support. If your editor does implement LSP, then the integration of Biome should be seamless.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 22:11:55", "type": "best_practices", "page_metadata": {"ogLocale": "en", "og:image": "https://biomejs.dev/og/guides/editors/create-a-extension.png", "twitter:image": "https://biomejs.dev/og/guides/editors/create-a-extension.png", "og:locale": "en", "ogUrl": "https://biomejs.dev/guides/editors/create-a-extension/", "og:type": "article", "og:url": "https://biomejs.dev/guides/editors/create-a-extension/", "ogImage": "https://biomejs.dev/og/guides/editors/create-a-extension.png", "og:description": "Learn how you can integrate Biome with editors and IDEs", "language": "en", "ogTitle": "Integrate Biome in an editor extension", "viewport": "width=device-width, initial-scale=1", "og:site_name": "Biome", "description": "Learn how you can integrate Biome with editors and IDEs", "favicon": "https://biomejs.dev/img/favicon.svg", "twitter:card": "summary_large_image", "ogDescription": "Learn how you can integrate Biome with editors and IDEs", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "ogSiteName": "Biome", "title": "Integrate Biome in an editor extension | Biome", "og:title": "Integrate Biome in an editor extension", "scrapeId": "0b69d6dc-d266-4d7c-a6d6-1c5a6841a2c2", "sourceURL": "https://biomejs.dev/guides/editors/create-a-extension", "url": "https://biomejs.dev/guides/editors/create-a-extension/", "statusCode": 200}}}
{"text": "System: You are a helpful biomejs-guides expert.\n\nUser: Can you explain what Third-party extensions is in biomejs-guides?\n\nAssistant: Sure, I'd be happy to explain Third-party extensions in biomejs-guides.\n\n# Third-party extensions\n\nThese are extension maintained by other communities, that you install in your editor:Here's a quick rundown of what this is about:\n\n## Supported Editors\n\n- [`vim`](https://www.vim.org/): [`ALE`](https://github.com/dense-analysis/ale) supports Biome, just follow the installation instructions\n- [`neovim`](https://neovim.io/): you’ll have to install [`nvim-lspconfig`](https://github.com/neovim/nvim-lspconfig/), and follow the [instructions](https://github.com/neovim/nvim-lspconfig/blob/master/doc/configs.md#biome). [`ALE`](https://github.com/dense-analysis/ale) also supports Biome.\n- [`helix`](https://helix-editor.com/): follow the instruction of [this manual](https://biomejs.dev/guides/editors/third-party-extensions/#helix)\n- [`coc-biome`](https://github.com/fannheyward/coc-biome): Biome extension for [`coc.nvim`](https://github.com/neoclide/coc.nvim)\n- [`sublime text`](https://www.sublimetext.com/): follow the [`LSP-biome`](https://github.com/sublimelsp/LSP-biome) installation instructions\n- [`Emacs`](https://www.gnu.org/software/emacs/): ensure you have [`lsp-mode`](https://github.com/emacs-lsp/lsp-mode) installed, follow the [`lsp-biome`](https://github.com/cxa/lsp-biome) installation instructions to enable Biome support in `lsp-mode`\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://biomejs.dev/guides/editors/third-party-extensions", "title": "Third-party extensions", "description": "These are extension maintained by other communities, that you install in your editor:", "has_code_examples": true, "has_best_practices": true, "section_count": 1, "timestamp": "2025-02-28 22:13:14", "type": "overview", "page_metadata": {"description": "Learn how to set up third-party extensions", "ogTitle": "Third-party extensions", "ogDescription": "Learn how to set up third-party extensions", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "ogImage": "https://biomejs.dev/og/guides/editors/third-party-extensions.png", "og:url": "https://biomejs.dev/guides/editors/third-party-extensions/", "language": "en", "og:locale": "en", "og:image": "https://biomejs.dev/og/guides/editors/third-party-extensions.png", "twitter:image": "https://biomejs.dev/og/guides/editors/third-party-extensions.png", "ogUrl": "https://biomejs.dev/guides/editors/third-party-extensions/", "favicon": "https://biomejs.dev/img/favicon.svg", "og:title": "Third-party extensions", "twitter:card": "summary_large_image", "og:type": "article", "title": "Third-party extensions | Biome", "ogLocale": "en", "ogSiteName": "Biome", "viewport": "width=device-width, initial-scale=1", "og:description": "Learn how to set up third-party extensions", "og:site_name": "Biome", "scrapeId": "2715d95f-9fba-401e-960e-d08729e80a72", "sourceURL": "https://biomejs.dev/guides/editors/third-party-extensions", "url": "https://biomejs.dev/guides/editors/third-party-extensions/", "statusCode": 200}}}
{"text": "System: You are a helpful biomejs-guides expert.\n\nUser: How do I supported editors in biomejs-guides?\n\nAssistant: To supported editors in biomejs-guides, here's what you do:\n- [`vim`](https://www.vim.org/): [`ALE`](https://github.com/dense-analysis/ale) supports Biome, just follow the installation instructions\n- [`neovim`](https://neovim.io/): you’ll have to install [`nvim-lspconfig`](https://github.com/neovim/nvim-lspconfig/), and follow the [instructions](https://github.com/neovim/nvim-lspconfig/blob/master/doc/configs.md#biome). [`ALE`](https://github.com/dense-analysis/ale) also supports Biome.\n- [`helix`](https://helix-editor.com/): follow the instruction of [this manual](https://biomejs.dev/guides/editors/third-party-extensions/#helix)\n- [`coc-biome`](https://github.com/fannheyward/coc-biome): Biome extension for [`coc.nvim`](https://github.com/neoclide/coc.nvim)\n- [`sublime text`](https://www.sublimetext.com/): follow the [`LSP-biome`](https://github.com/sublimelsp/LSP-biome) installation instructions\n- [`Emacs`](https://www.gnu.org/software/emacs/): ensure you have [`lsp-mode`](https://github.com/emacs-lsp/lsp-mode) installed, follow the [`lsp-biome`](https://github.com/cxa/lsp-biome) installation instructions to enable Biome support in `lsp-mode`.\nPretty straightforward, right?", "metadata": {"source_url": "https://biomejs.dev/guides/editors/third-party-extensions", "title": "Third-party extensions", "description": "These are extension maintained by other communities, that you install in your editor:", "has_code_examples": true, "has_best_practices": true, "section_count": 1, "timestamp": "2025-02-28 22:13:14", "type": "section_detail", "page_metadata": {"description": "Learn how to set up third-party extensions", "ogTitle": "Third-party extensions", "ogDescription": "Learn how to set up third-party extensions", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "ogImage": "https://biomejs.dev/og/guides/editors/third-party-extensions.png", "og:url": "https://biomejs.dev/guides/editors/third-party-extensions/", "language": "en", "og:locale": "en", "og:image": "https://biomejs.dev/og/guides/editors/third-party-extensions.png", "twitter:image": "https://biomejs.dev/og/guides/editors/third-party-extensions.png", "ogUrl": "https://biomejs.dev/guides/editors/third-party-extensions/", "favicon": "https://biomejs.dev/img/favicon.svg", "og:title": "Third-party extensions", "twitter:card": "summary_large_image", "og:type": "article", "title": "Third-party extensions | Biome", "ogLocale": "en", "ogSiteName": "Biome", "viewport": "width=device-width, initial-scale=1", "og:description": "Learn how to set up third-party extensions", "og:site_name": "Biome", "scrapeId": "2715d95f-9fba-401e-960e-d08729e80a72", "sourceURL": "https://biomejs.dev/guides/editors/third-party-extensions", "url": "https://biomejs.dev/guides/editors/third-party-extensions/", "statusCode": 200}}}
{"text": "System: You are a helpful biomejs-guides expert.\n\nUser: Can you give me some code examples for Third-party extensions in biomejs-guides?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Helix 23.10 Configuration**:\n\n```yaml\n[language-server]\nbiome = { command = \"biome\", args = [\"lsp-proxy\"] }\n\n[[language]]\nname = \"javascript\"\nlanguage-servers = [ { name = \"typescript-language-server\", except-features = [ \"format\" ] }, \"biome\" ]\nauto-format = true\n\n[[language]]\nname = \"typescript\"\nlanguage-servers = [ { name = \"typescript-language-server\", except-features = [ \"format\" ] }, \"biome\" ]\nauto-format = true\n\n[[language]]\nname = \"tsx\"\nauto-format = true\nlanguage-servers = [ { name = \"typescript-language-server\", except-features = [ \"format\" ] }, \"biome\" ]\n\n[[language]]\nname = \"jsx\"\nauto-format = true\nlanguage-servers = [ { name = \"typescript-language-server\", except-features = [ \"format\" ] }, \"biome\" ]\n\n[[language]]\nname = \"json\"\nlanguage-servers = [ { name = \"vscode-json-language-server\", except-features = [ \"format\" ] }, \"biome\" ]\n```\n\nThis snippet shows you how to helix 23.10 configuration, which is an important aspect of third-party extensions.\n\n", "metadata": {"source_url": "https://biomejs.dev/guides/editors/third-party-extensions", "title": "Third-party extensions", "description": "These are extension maintained by other communities, that you install in your editor:", "has_code_examples": true, "has_best_practices": true, "section_count": 1, "timestamp": "2025-02-28 22:13:14", "type": "code_examples", "page_metadata": {"description": "Learn how to set up third-party extensions", "ogTitle": "Third-party extensions", "ogDescription": "Learn how to set up third-party extensions", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "ogImage": "https://biomejs.dev/og/guides/editors/third-party-extensions.png", "og:url": "https://biomejs.dev/guides/editors/third-party-extensions/", "language": "en", "og:locale": "en", "og:image": "https://biomejs.dev/og/guides/editors/third-party-extensions.png", "twitter:image": "https://biomejs.dev/og/guides/editors/third-party-extensions.png", "ogUrl": "https://biomejs.dev/guides/editors/third-party-extensions/", "favicon": "https://biomejs.dev/img/favicon.svg", "og:title": "Third-party extensions", "twitter:card": "summary_large_image", "og:type": "article", "title": "Third-party extensions | Biome", "ogLocale": "en", "ogSiteName": "Biome", "viewport": "width=device-width, initial-scale=1", "og:description": "Learn how to set up third-party extensions", "og:site_name": "Biome", "scrapeId": "2715d95f-9fba-401e-960e-d08729e80a72", "sourceURL": "https://biomejs.dev/guides/editors/third-party-extensions", "url": "https://biomejs.dev/guides/editors/third-party-extensions/", "statusCode": 200}}}
{"text": "System: You are a helpful biomejs-guides expert.\n\nUser: What are some tips for using Third-party extensions in biomejs-guides effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nEnsure you have the necessary extensions installed for your editor to support Biome.\n\nFollow the specific installation instructions for each editor to enable Biome support.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://biomejs.dev/guides/editors/third-party-extensions", "title": "Third-party extensions", "description": "These are extension maintained by other communities, that you install in your editor:", "has_code_examples": true, "has_best_practices": true, "section_count": 1, "timestamp": "2025-02-28 22:13:14", "type": "best_practices", "page_metadata": {"description": "Learn how to set up third-party extensions", "ogTitle": "Third-party extensions", "ogDescription": "Learn how to set up third-party extensions", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "ogImage": "https://biomejs.dev/og/guides/editors/third-party-extensions.png", "og:url": "https://biomejs.dev/guides/editors/third-party-extensions/", "language": "en", "og:locale": "en", "og:image": "https://biomejs.dev/og/guides/editors/third-party-extensions.png", "twitter:image": "https://biomejs.dev/og/guides/editors/third-party-extensions.png", "ogUrl": "https://biomejs.dev/guides/editors/third-party-extensions/", "favicon": "https://biomejs.dev/img/favicon.svg", "og:title": "Third-party extensions", "twitter:card": "summary_large_image", "og:type": "article", "title": "Third-party extensions | Biome", "ogLocale": "en", "ogSiteName": "Biome", "viewport": "width=device-width, initial-scale=1", "og:description": "Learn how to set up third-party extensions", "og:site_name": "Biome", "scrapeId": "2715d95f-9fba-401e-960e-d08729e80a72", "sourceURL": "https://biomejs.dev/guides/editors/third-party-extensions", "url": "https://biomejs.dev/guides/editors/third-party-extensions/", "statusCode": 200}}}
{"text": "System: You are a helpful biomejs-guides expert.\n\nUser: Can you explain what First-party extensions is in biomejs-guides?\n\nAssistant: Sure, I'd be happy to explain First-party extensions in biomejs-guides.\n\n# First-party extensions\n\nThese are extensions that are maintained by the Biome team and part of the Biome organization.Here's a quick rundown of what this is about:\n\n## VS Code\n\nThe Biome editor integration allows you to:\n\n- Format files on save or when issuing the _Format_ command.\n- Lint files and apply code fixes\n\nInstall our official [Biome VS Code extension](https://marketplace.visualstudio.com/items?itemName=biomejs.biome) from the Visual Studio Marketplace.\n\nTo make Biome the default formatter open a [supported file](https://biomejs.dev/internals/language-support/) and:\n\n1. open the _Command Palette_ (View or `Ctrl`/ `⌘` + `⇧` + `P`)\n2. select _Format Document With…_\n3. select _Configure Default Formatter_\n4. select _Biome_.\n\nRead more in the [reference page](https://biomejs.dev/reference/vscode).\n\n## IntelliJ\n\nTo install the Biome IntelliJ plugin, head over to [official plugin page](https://plugins.jetbrains.com/plugin/22761-biome) or follow these steps:\n\n**From JetBrains IDEs:**\n\n1. Open IntelliJ IDEA.\n2. Go to **Settings/Preferences**.\n3. Select **Plugins** from the left-hand menu.\n4. Click on the **Marketplace** tab.\n5. Search for “Biome” and click **Install**.\n6. Restart the IDE to activate the plugin.\n\n**From disk:**\n\n1. Download the extension .zip from Versions tab.\n2. Press `⌘Сmd,` to open the IDE settings and then select Plugins.\n3. On the extensions page, click The Settings button and then click Install Plugin from Disk…. \n\n## Zed\n\n1. open the _Command Palette_ (View or `Ctrl`/ `⌘` + `⇧` + `P`)\n2. select **zed: extensions**\n3. search **Biome**\n4. select **Install**\n\nRead more in the [reference page](https://biomejs.dev/reference/zed).\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://biomejs.dev/guides/editors/first-party-extensions", "title": "First-party extensions", "description": "These are extensions that are maintained by the Biome team and part of the Biome organization.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 22:13:40", "type": "overview", "page_metadata": {"og:type": "article", "ogSiteName": "Biome", "og:locale": "en", "og:site_name": "Biome", "twitter:card": "summary_large_image", "description": "Learn how to set up first-party extensions", "twitter:image": "https://biomejs.dev/og/guides/editors/first-party-extensions.png", "og:title": "First-party extensions", "ogDescription": "Learn how to set up first-party extensions", "og:description": "Learn how to set up first-party extensions", "title": "First-party extensions | Biome", "ogUrl": "https://biomejs.dev/guides/editors/first-party-extensions/", "ogLocale": "en", "favicon": "https://biomejs.dev/img/favicon.svg", "viewport": "width=device-width, initial-scale=1", "ogTitle": "First-party extensions", "og:url": "https://biomejs.dev/guides/editors/first-party-extensions/", "ogImage": "https://biomejs.dev/og/guides/editors/first-party-extensions.png", "og:image": "https://biomejs.dev/og/guides/editors/first-party-extensions.png", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "language": "en", "scrapeId": "a9721fc3-e7ad-498a-8f4b-ee811f7d86bb", "sourceURL": "https://biomejs.dev/guides/editors/first-party-extensions", "url": "https://biomejs.dev/guides/editors/first-party-extensions/", "statusCode": 200}}}
{"text": "System: You are a helpful biomejs-guides expert.\n\nUser: How do I vs code in biomejs-guides?\n\nAssistant: To vs code in biomejs-guides, here's what you do:\nThe Biome editor integration allows you to:\n\n- Format files on save or when issuing the _Format_ command.\n- Lint files and apply code fixes\n\nInstall our official [Biome VS Code extension](https://marketplace.visualstudio.com/items?itemName=biomejs.biome) from the Visual Studio Marketplace.\n\nTo make Biome the default formatter open a [supported file](https://biomejs.dev/internals/language-support/) and:\n\n1. open the _Command Palette_ (View or `Ctrl`/ `⌘` + `⇧` + `P`)\n2. select _Format Document With…_\n3. select _Configure Default Formatter_\n4. select _Biome_.\n\nRead more in the [reference page](https://biomejs.dev/reference/vscode)..\nPretty straightforward, right?", "metadata": {"source_url": "https://biomejs.dev/guides/editors/first-party-extensions", "title": "First-party extensions", "description": "These are extensions that are maintained by the Biome team and part of the Biome organization.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 22:13:40", "type": "section_detail", "page_metadata": {"og:type": "article", "ogSiteName": "Biome", "og:locale": "en", "og:site_name": "Biome", "twitter:card": "summary_large_image", "description": "Learn how to set up first-party extensions", "twitter:image": "https://biomejs.dev/og/guides/editors/first-party-extensions.png", "og:title": "First-party extensions", "ogDescription": "Learn how to set up first-party extensions", "og:description": "Learn how to set up first-party extensions", "title": "First-party extensions | Biome", "ogUrl": "https://biomejs.dev/guides/editors/first-party-extensions/", "ogLocale": "en", "favicon": "https://biomejs.dev/img/favicon.svg", "viewport": "width=device-width, initial-scale=1", "ogTitle": "First-party extensions", "og:url": "https://biomejs.dev/guides/editors/first-party-extensions/", "ogImage": "https://biomejs.dev/og/guides/editors/first-party-extensions.png", "og:image": "https://biomejs.dev/og/guides/editors/first-party-extensions.png", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "language": "en", "scrapeId": "a9721fc3-e7ad-498a-8f4b-ee811f7d86bb", "sourceURL": "https://biomejs.dev/guides/editors/first-party-extensions", "url": "https://biomejs.dev/guides/editors/first-party-extensions/", "statusCode": 200}}}
{"text": "System: You are a helpful biomejs-guides expert.\n\nUser: How do I intellij in biomejs-guides?\n\nAssistant: To intellij in biomejs-guides, here's what you do:\nTo install the Biome IntelliJ plugin, head over to [official plugin page](https://plugins.jetbrains.com/plugin/22761-biome) or follow these steps:\n\n**From JetBrains IDEs:**\n\n1. Open IntelliJ IDEA.\n2. Go to **Settings/Preferences**.\n3. Select **Plugins** from the left-hand menu.\n4. Click on the **Marketplace** tab.\n5. Search for “Biome” and click **Install**.\n6. Restart the IDE to activate the plugin.\n\n**From disk:**\n\n1. Download the extension .zip from Versions tab.\n2. Press `⌘Сmd,` to open the IDE settings and then select Plugins.\n3. On the extensions page, click The Settings button and then click Install Plugin from Disk…. .\nPretty straightforward, right?", "metadata": {"source_url": "https://biomejs.dev/guides/editors/first-party-extensions", "title": "First-party extensions", "description": "These are extensions that are maintained by the Biome team and part of the Biome organization.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 22:13:40", "type": "section_detail", "page_metadata": {"og:type": "article", "ogSiteName": "Biome", "og:locale": "en", "og:site_name": "Biome", "twitter:card": "summary_large_image", "description": "Learn how to set up first-party extensions", "twitter:image": "https://biomejs.dev/og/guides/editors/first-party-extensions.png", "og:title": "First-party extensions", "ogDescription": "Learn how to set up first-party extensions", "og:description": "Learn how to set up first-party extensions", "title": "First-party extensions | Biome", "ogUrl": "https://biomejs.dev/guides/editors/first-party-extensions/", "ogLocale": "en", "favicon": "https://biomejs.dev/img/favicon.svg", "viewport": "width=device-width, initial-scale=1", "ogTitle": "First-party extensions", "og:url": "https://biomejs.dev/guides/editors/first-party-extensions/", "ogImage": "https://biomejs.dev/og/guides/editors/first-party-extensions.png", "og:image": "https://biomejs.dev/og/guides/editors/first-party-extensions.png", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "language": "en", "scrapeId": "a9721fc3-e7ad-498a-8f4b-ee811f7d86bb", "sourceURL": "https://biomejs.dev/guides/editors/first-party-extensions", "url": "https://biomejs.dev/guides/editors/first-party-extensions/", "statusCode": 200}}}
{"text": "System: You are a helpful biomejs-guides expert.\n\nUser: How do I zed in biomejs-guides?\n\nAssistant: To zed in biomejs-guides, here's what you do:\n1. open the _Command Palette_ (View or `Ctrl`/ `⌘` + `⇧` + `P`)\n2. select **zed: extensions**\n3. search **Biome**\n4. select **Install**\n\nRead more in the [reference page](https://biomejs.dev/reference/zed)..\nPretty straightforward, right?", "metadata": {"source_url": "https://biomejs.dev/guides/editors/first-party-extensions", "title": "First-party extensions", "description": "These are extensions that are maintained by the Biome team and part of the Biome organization.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 22:13:40", "type": "section_detail", "page_metadata": {"og:type": "article", "ogSiteName": "Biome", "og:locale": "en", "og:site_name": "Biome", "twitter:card": "summary_large_image", "description": "Learn how to set up first-party extensions", "twitter:image": "https://biomejs.dev/og/guides/editors/first-party-extensions.png", "og:title": "First-party extensions", "ogDescription": "Learn how to set up first-party extensions", "og:description": "Learn how to set up first-party extensions", "title": "First-party extensions | Biome", "ogUrl": "https://biomejs.dev/guides/editors/first-party-extensions/", "ogLocale": "en", "favicon": "https://biomejs.dev/img/favicon.svg", "viewport": "width=device-width, initial-scale=1", "ogTitle": "First-party extensions", "og:url": "https://biomejs.dev/guides/editors/first-party-extensions/", "ogImage": "https://biomejs.dev/og/guides/editors/first-party-extensions.png", "og:image": "https://biomejs.dev/og/guides/editors/first-party-extensions.png", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "language": "en", "scrapeId": "a9721fc3-e7ad-498a-8f4b-ee811f7d86bb", "sourceURL": "https://biomejs.dev/guides/editors/first-party-extensions", "url": "https://biomejs.dev/guides/editors/first-party-extensions/", "statusCode": 200}}}
{"text": "System: You are a helpful biomejs-guides expert.\n\nUser: What are some tips for using First-party extensions in biomejs-guides effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nTo make Biome the default formatter in VS Code, follow the steps outlined in the VS Code section.\n\nFor IntelliJ, ensure to restart the IDE after installing the plugin for it to take effect.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://biomejs.dev/guides/editors/first-party-extensions", "title": "First-party extensions", "description": "These are extensions that are maintained by the Biome team and part of the Biome organization.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 22:13:40", "type": "best_practices", "page_metadata": {"og:type": "article", "ogSiteName": "Biome", "og:locale": "en", "og:site_name": "Biome", "twitter:card": "summary_large_image", "description": "Learn how to set up first-party extensions", "twitter:image": "https://biomejs.dev/og/guides/editors/first-party-extensions.png", "og:title": "First-party extensions", "ogDescription": "Learn how to set up first-party extensions", "og:description": "Learn how to set up first-party extensions", "title": "First-party extensions | Biome", "ogUrl": "https://biomejs.dev/guides/editors/first-party-extensions/", "ogLocale": "en", "favicon": "https://biomejs.dev/img/favicon.svg", "viewport": "width=device-width, initial-scale=1", "ogTitle": "First-party extensions", "og:url": "https://biomejs.dev/guides/editors/first-party-extensions/", "ogImage": "https://biomejs.dev/og/guides/editors/first-party-extensions.png", "og:image": "https://biomejs.dev/og/guides/editors/first-party-extensions.png", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "language": "en", "scrapeId": "a9721fc3-e7ad-498a-8f4b-ee811f7d86bb", "sourceURL": "https://biomejs.dev/guides/editors/first-party-extensions", "url": "https://biomejs.dev/guides/editors/first-party-extensions/", "statusCode": 200}}}
{"text": "System: You are a helpful biomejs-guides expert.\n\nUser: Can you explain what Manual installation is in biomejs-guides?\n\nAssistant: Sure, I'd be happy to explain Manual installation in biomejs-guides.\n\n# Manual installation\n\nUsing Biome’s standalone CLI binary can be a great choice if you aren’t already using Node.js or `npm` (or any other package manager). Or in other words, Biome shouldn’t be the only reason for you to have a `package.json`.Here's a quick rundown of what this is about:\n\n## Supported platforms\n\nYou have to pick the correct binary for your platform for Biome work. The following table should help you do so.\n\n| CPU Architecture | Windows | macOS | Linux | Linux (musl) |\n| --- | --- | --- | --- | --- |\n| `arm64` | `win32-arm64` | `darwin-arm64` (M1 or newer) | `linux-arm64` | `linux-arm64-musl` |\n| `x64` | `win32-x64` | `darwin-x64` | `linux-x64` | `linux-x64-musl` |\n\n## Homebrew\n\nBiome is available as a [Homebrew formula](https://formulae.brew.sh/formula/biome) for macOS and Linux users.\n\n```\n\nbrew install biome\n```\n\n\n## Docker\n\nBiome publishes [official Docker images](https://github.com/biomejs/docker/pkgs/container/biome) that support the **amd64** and **arm64** architectures for all Biome versions starting from `v1.7.0`.\n\n```\n\nghcr.io/biomejs/biome:{major}\n\nghcr.io/biomejs/biome:{major}.{minor}\n\nghcr.io/biomejs/biome:{major}.{minor}.{patch}\n```\n\nHere are a couple examples on how to use the Docker image:\n\n```\n\n# Lint files\ndocker run -v $(pwd):/code ghcr.io/biomejs/biome lint\ndocker run -v $(pwd):/code ghcr.io/biomejs/biome lint --write\n\n# Format files\ndocker run -v $(pwd):/code ghcr.io/biomejs/biome format\ndocker run -v $(pwd):/code ghcr.io/biomejs/biome format --write\n```\n\n\n## Using a published binary\n\nTo install Biome, grab the executable for your platform from the [latest CLI release](https://github.com/biomejs/biome/releases) on GitHub and give it execution permission.\n\n```\n\n# macOS arm (M1 or newer)\ncurl -L https://github.com/biomejs/biome/releases/download/cli%2Fv<version>/biome-darwin-arm64 -o biome\nchmod +x biome\n\n# Linux (x86_64)\ncurl -L https://github.com/biomejs/biome/releases/download/cli%2Fv<version>/biome-linux-x64 -o biome\nchmod +x biome\n\n# Windows (x86_64, Powershell)\nInvoke-WebRequest -Uri \"https://github.com/biomejs/biome/releases/download/cli%2Fv<version>/biome-win32-x64.exe\" -OutFile \"biome.exe\"\n```\n\nNow you can use Biome by simply running `./biome`. \n\n## Next Steps\n\nFollow our [Getting Started guide](https://biomejs.dev/guides/getting-started/).\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://biomejs.dev/guides/manual-installation", "title": "Manual installation", "description": "Using Biome’s standalone CLI binary can be a great choice if you aren’t already using Node.js or `npm` (or any other package manager). Or in other words, Biome shouldn’t be the only reason for you to have a `package.json`.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 22:14:07", "type": "overview", "page_metadata": {"language": "en", "description": "Install the Biome manually", "og:title": "Manual installation", "ogDescription": "Install the Biome manually", "og:description": "Install the Biome manually", "ogLocale": "en", "og:image": "https://biomejs.dev/og/guides/manual-installation.png", "favicon": "https://biomejs.dev/img/favicon.svg", "title": "Manual installation | Biome", "ogSiteName": "Biome", "ogUrl": "https://biomejs.dev/guides/manual-installation/", "viewport": "width=device-width, initial-scale=1", "og:site_name": "Biome", "ogImage": "https://biomejs.dev/og/guides/manual-installation.png", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "og:type": "article", "ogTitle": "Manual installation", "twitter:card": "summary_large_image", "twitter:image": "https://biomejs.dev/og/guides/manual-installation.png", "og:locale": "en", "og:url": "https://biomejs.dev/guides/manual-installation/", "scrapeId": "a7bb08d9-650f-438b-a5f9-dc88fa23446f", "sourceURL": "https://biomejs.dev/guides/manual-installation", "url": "https://biomejs.dev/guides/manual-installation/", "statusCode": 200}}}
{"text": "System: You are a helpful biomejs-guides expert.\n\nUser: How do I supported platforms in biomejs-guides?\n\nAssistant: To supported platforms in biomejs-guides, here's what you do:\nYou have to pick the correct binary for your platform for Biome work. The following table should help you do so.\n\n| CPU Architecture | Windows | macOS | Linux | Linux (musl) |\n| --- | --- | --- | --- | --- |\n| `arm64` | `win32-arm64` | `darwin-arm64` (M1 or newer) | `linux-arm64` | `linux-arm64-musl` |\n| `x64` | `win32-x64` | `darwin-x64` | `linux-x64` | `linux-x64-musl` |.\nPretty straightforward, right?", "metadata": {"source_url": "https://biomejs.dev/guides/manual-installation", "title": "Manual installation", "description": "Using Biome’s standalone CLI binary can be a great choice if you aren’t already using Node.js or `npm` (or any other package manager). Or in other words, Biome shouldn’t be the only reason for you to have a `package.json`.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 22:14:07", "type": "section_detail", "page_metadata": {"language": "en", "description": "Install the Biome manually", "og:title": "Manual installation", "ogDescription": "Install the Biome manually", "og:description": "Install the Biome manually", "ogLocale": "en", "og:image": "https://biomejs.dev/og/guides/manual-installation.png", "favicon": "https://biomejs.dev/img/favicon.svg", "title": "Manual installation | Biome", "ogSiteName": "Biome", "ogUrl": "https://biomejs.dev/guides/manual-installation/", "viewport": "width=device-width, initial-scale=1", "og:site_name": "Biome", "ogImage": "https://biomejs.dev/og/guides/manual-installation.png", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "og:type": "article", "ogTitle": "Manual installation", "twitter:card": "summary_large_image", "twitter:image": "https://biomejs.dev/og/guides/manual-installation.png", "og:locale": "en", "og:url": "https://biomejs.dev/guides/manual-installation/", "scrapeId": "a7bb08d9-650f-438b-a5f9-dc88fa23446f", "sourceURL": "https://biomejs.dev/guides/manual-installation", "url": "https://biomejs.dev/guides/manual-installation/", "statusCode": 200}}}
{"text": "System: You are a helpful biomejs-guides expert.\n\nUser: How do I homebrew in biomejs-guides?\n\nAssistant: To homebrew in biomejs-guides, here's what you do:\nBiome is available as a [Homebrew formula](https://formulae.brew.sh/formula/biome) for macOS and Linux users.\n\n```\n\nbrew install biome\n```\n.\nPretty straightforward, right?", "metadata": {"source_url": "https://biomejs.dev/guides/manual-installation", "title": "Manual installation", "description": "Using Biome’s standalone CLI binary can be a great choice if you aren’t already using Node.js or `npm` (or any other package manager). Or in other words, Biome shouldn’t be the only reason for you to have a `package.json`.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 22:14:07", "type": "section_detail", "page_metadata": {"language": "en", "description": "Install the Biome manually", "og:title": "Manual installation", "ogDescription": "Install the Biome manually", "og:description": "Install the Biome manually", "ogLocale": "en", "og:image": "https://biomejs.dev/og/guides/manual-installation.png", "favicon": "https://biomejs.dev/img/favicon.svg", "title": "Manual installation | Biome", "ogSiteName": "Biome", "ogUrl": "https://biomejs.dev/guides/manual-installation/", "viewport": "width=device-width, initial-scale=1", "og:site_name": "Biome", "ogImage": "https://biomejs.dev/og/guides/manual-installation.png", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "og:type": "article", "ogTitle": "Manual installation", "twitter:card": "summary_large_image", "twitter:image": "https://biomejs.dev/og/guides/manual-installation.png", "og:locale": "en", "og:url": "https://biomejs.dev/guides/manual-installation/", "scrapeId": "a7bb08d9-650f-438b-a5f9-dc88fa23446f", "sourceURL": "https://biomejs.dev/guides/manual-installation", "url": "https://biomejs.dev/guides/manual-installation/", "statusCode": 200}}}
{"text": "System: You are a helpful biomejs-guides expert.\n\nUser: How do I docker in biomejs-guides?\n\nAssistant: To docker in biomejs-guides, here's what you do:\nBiome publishes [official Docker images](https://github.com/biomejs/docker/pkgs/container/biome) that support the **amd64** and **arm64** architectures for all Biome versions starting from `v1.7.0`.\n\n```\n\nghcr.io/biomejs/biome:{major}\n\nghcr.io/biomejs/biome:{major}.{minor}\n\nghcr.io/biomejs/biome:{major}.{minor}.{patch}\n```\n\nHere are a couple examples on how to use the Docker image:\n\n```\n\n# Lint files\ndocker run -v $(pwd):/code ghcr.io/biomejs/biome lint\ndocker run -v $(pwd):/code ghcr.io/biomejs/biome lint --write\n\n# Format files\ndocker run -v $(pwd):/code ghcr.io/biomejs/biome format\ndocker run -v $(pwd):/code ghcr.io/biomejs/biome format --write\n```\n.\nPretty straightforward, right?", "metadata": {"source_url": "https://biomejs.dev/guides/manual-installation", "title": "Manual installation", "description": "Using Biome’s standalone CLI binary can be a great choice if you aren’t already using Node.js or `npm` (or any other package manager). Or in other words, Biome shouldn’t be the only reason for you to have a `package.json`.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 22:14:07", "type": "section_detail", "page_metadata": {"language": "en", "description": "Install the Biome manually", "og:title": "Manual installation", "ogDescription": "Install the Biome manually", "og:description": "Install the Biome manually", "ogLocale": "en", "og:image": "https://biomejs.dev/og/guides/manual-installation.png", "favicon": "https://biomejs.dev/img/favicon.svg", "title": "Manual installation | Biome", "ogSiteName": "Biome", "ogUrl": "https://biomejs.dev/guides/manual-installation/", "viewport": "width=device-width, initial-scale=1", "og:site_name": "Biome", "ogImage": "https://biomejs.dev/og/guides/manual-installation.png", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "og:type": "article", "ogTitle": "Manual installation", "twitter:card": "summary_large_image", "twitter:image": "https://biomejs.dev/og/guides/manual-installation.png", "og:locale": "en", "og:url": "https://biomejs.dev/guides/manual-installation/", "scrapeId": "a7bb08d9-650f-438b-a5f9-dc88fa23446f", "sourceURL": "https://biomejs.dev/guides/manual-installation", "url": "https://biomejs.dev/guides/manual-installation/", "statusCode": 200}}}
{"text": "System: You are a helpful biomejs-guides expert.\n\nUser: How do I using a published binary in biomejs-guides?\n\nAssistant: To using a published binary in biomejs-guides, here's what you do:\nTo install Biome, grab the executable for your platform from the [latest CLI release](https://github.com/biomejs/biome/releases) on GitHub and give it execution permission.\n\n```\n\n# macOS arm (M1 or newer)\ncurl -L https://github.com/biomejs/biome/releases/download/cli%2Fv<version>/biome-darwin-arm64 -o biome\nchmod +x biome\n\n# Linux (x86_64)\ncurl -L https://github.com/biomejs/biome/releases/download/cli%2Fv<version>/biome-linux-x64 -o biome\nchmod +x biome\n\n# Windows (x86_64, Powershell)\nInvoke-WebRequest -Uri \"https://github.com/biomejs/biome/releases/download/cli%2Fv<version>/biome-win32-x64.exe\" -OutFile \"biome.exe\"\n```\n\nNow you can use Biome by simply running `./biome`. .\nPretty straightforward, right?", "metadata": {"source_url": "https://biomejs.dev/guides/manual-installation", "title": "Manual installation", "description": "Using Biome’s standalone CLI binary can be a great choice if you aren’t already using Node.js or `npm` (or any other package manager). Or in other words, Biome shouldn’t be the only reason for you to have a `package.json`.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 22:14:07", "type": "section_detail", "page_metadata": {"language": "en", "description": "Install the Biome manually", "og:title": "Manual installation", "ogDescription": "Install the Biome manually", "og:description": "Install the Biome manually", "ogLocale": "en", "og:image": "https://biomejs.dev/og/guides/manual-installation.png", "favicon": "https://biomejs.dev/img/favicon.svg", "title": "Manual installation | Biome", "ogSiteName": "Biome", "ogUrl": "https://biomejs.dev/guides/manual-installation/", "viewport": "width=device-width, initial-scale=1", "og:site_name": "Biome", "ogImage": "https://biomejs.dev/og/guides/manual-installation.png", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "og:type": "article", "ogTitle": "Manual installation", "twitter:card": "summary_large_image", "twitter:image": "https://biomejs.dev/og/guides/manual-installation.png", "og:locale": "en", "og:url": "https://biomejs.dev/guides/manual-installation/", "scrapeId": "a7bb08d9-650f-438b-a5f9-dc88fa23446f", "sourceURL": "https://biomejs.dev/guides/manual-installation", "url": "https://biomejs.dev/guides/manual-installation/", "statusCode": 200}}}
{"text": "System: You are a helpful biomejs-guides expert.\n\nUser: How do I next steps in biomejs-guides?\n\nAssistant: To next steps in biomejs-guides, here's what you do:\nFollow our [Getting Started guide](https://biomejs.dev/guides/getting-started/)..\nPretty straightforward, right?", "metadata": {"source_url": "https://biomejs.dev/guides/manual-installation", "title": "Manual installation", "description": "Using Biome’s standalone CLI binary can be a great choice if you aren’t already using Node.js or `npm` (or any other package manager). Or in other words, Biome shouldn’t be the only reason for you to have a `package.json`.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 22:14:07", "type": "section_detail", "page_metadata": {"language": "en", "description": "Install the Biome manually", "og:title": "Manual installation", "ogDescription": "Install the Biome manually", "og:description": "Install the Biome manually", "ogLocale": "en", "og:image": "https://biomejs.dev/og/guides/manual-installation.png", "favicon": "https://biomejs.dev/img/favicon.svg", "title": "Manual installation | Biome", "ogSiteName": "Biome", "ogUrl": "https://biomejs.dev/guides/manual-installation/", "viewport": "width=device-width, initial-scale=1", "og:site_name": "Biome", "ogImage": "https://biomejs.dev/og/guides/manual-installation.png", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "og:type": "article", "ogTitle": "Manual installation", "twitter:card": "summary_large_image", "twitter:image": "https://biomejs.dev/og/guides/manual-installation.png", "og:locale": "en", "og:url": "https://biomejs.dev/guides/manual-installation/", "scrapeId": "a7bb08d9-650f-438b-a5f9-dc88fa23446f", "sourceURL": "https://biomejs.dev/guides/manual-installation", "url": "https://biomejs.dev/guides/manual-installation/", "statusCode": 200}}}
{"text": "System: You are a helpful biomejs-guides expert.\n\nUser: Can you give me some code examples for Manual installation in biomejs-guides?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Homebrew Installation Command**:\n\n```yaml\nbrew install biome\n```\n\nThis snippet shows you how to homebrew installation command, which is an important aspect of manual installation.\n\n**Docker Image Usage**:\n\n```yaml\n# Lint files\ndocker run -v $(pwd):/code ghcr.io/biomejs/biome lint\ndocker run -v $(pwd):/code ghcr.io/biomejs/biome lint --write\n\n# Format files\ndocker run -v $(pwd):/code ghcr.io/biomejs/biome format\ndocker run -v $(pwd):/code ghcr.io/biomejs/biome format --write\n```\n\nThis snippet shows you how to docker image usage, which is an important aspect of manual installation.\n\n**Installing Biome on macOS (arm)**:\n\n```yaml\ncurl -L https://github.com/biomejs/biome/releases/download/cli%2Fv<version>/biome-darwin-arm64 -o biome\nchmod +x biome\n```\n\nThis snippet shows you how to installing biome on macos (arm), which is an important aspect of manual installation.\n\n**Installing Biome on Linux (x86_64)**:\n\n```yaml\ncurl -L https://github.com/biomejs/biome/releases/download/cli%2Fv<version>/biome-linux-x64 -o biome\nchmod +x biome\n```\n\nThis snippet shows you how to installing biome on linux (x86_64), which is an important aspect of manual installation.\n\n**Installing Biome on Windows (x86_64, Powershell)**:\n\n```yaml\nInvoke-WebRequest -Uri \"https://github.com/biomejs/biome/releases/download/cli%2Fv<version>/biome-win32-x64.exe\" -OutFile \"biome.exe\"\n```\n\nThis snippet shows you how to installing biome on windows (x86_64, powershell), which is an important aspect of manual installation.\n\n", "metadata": {"source_url": "https://biomejs.dev/guides/manual-installation", "title": "Manual installation", "description": "Using Biome’s standalone CLI binary can be a great choice if you aren’t already using Node.js or `npm` (or any other package manager). Or in other words, Biome shouldn’t be the only reason for you to have a `package.json`.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 22:14:07", "type": "code_examples", "page_metadata": {"language": "en", "description": "Install the Biome manually", "og:title": "Manual installation", "ogDescription": "Install the Biome manually", "og:description": "Install the Biome manually", "ogLocale": "en", "og:image": "https://biomejs.dev/og/guides/manual-installation.png", "favicon": "https://biomejs.dev/img/favicon.svg", "title": "Manual installation | Biome", "ogSiteName": "Biome", "ogUrl": "https://biomejs.dev/guides/manual-installation/", "viewport": "width=device-width, initial-scale=1", "og:site_name": "Biome", "ogImage": "https://biomejs.dev/og/guides/manual-installation.png", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "og:type": "article", "ogTitle": "Manual installation", "twitter:card": "summary_large_image", "twitter:image": "https://biomejs.dev/og/guides/manual-installation.png", "og:locale": "en", "og:url": "https://biomejs.dev/guides/manual-installation/", "scrapeId": "a7bb08d9-650f-438b-a5f9-dc88fa23446f", "sourceURL": "https://biomejs.dev/guides/manual-installation", "url": "https://biomejs.dev/guides/manual-installation/", "statusCode": 200}}}
{"text": "System: You are a helpful biomejs-guides expert.\n\nUser: What are some tips for using Manual installation in biomejs-guides effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nPick the correct binary for your platform for Biome to work effectively.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://biomejs.dev/guides/manual-installation", "title": "Manual installation", "description": "Using Biome’s standalone CLI binary can be a great choice if you aren’t already using Node.js or `npm` (or any other package manager). Or in other words, Biome shouldn’t be the only reason for you to have a `package.json`.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 22:14:07", "type": "best_practices", "page_metadata": {"language": "en", "description": "Install the Biome manually", "og:title": "Manual installation", "ogDescription": "Install the Biome manually", "og:description": "Install the Biome manually", "ogLocale": "en", "og:image": "https://biomejs.dev/og/guides/manual-installation.png", "favicon": "https://biomejs.dev/img/favicon.svg", "title": "Manual installation | Biome", "ogSiteName": "Biome", "ogUrl": "https://biomejs.dev/guides/manual-installation/", "viewport": "width=device-width, initial-scale=1", "og:site_name": "Biome", "ogImage": "https://biomejs.dev/og/guides/manual-installation.png", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "og:type": "article", "ogTitle": "Manual installation", "twitter:card": "summary_large_image", "twitter:image": "https://biomejs.dev/og/guides/manual-installation.png", "og:locale": "en", "og:url": "https://biomejs.dev/guides/manual-installation/", "scrapeId": "a7bb08d9-650f-438b-a5f9-dc88fa23446f", "sourceURL": "https://biomejs.dev/guides/manual-installation", "url": "https://biomejs.dev/guides/manual-installation/", "statusCode": 200}}}
{"text": "System: You are a helpful biomejs-guides expert.\n\nUser: Can you explain what Configure Biome is in biomejs-guides?\n\nAssistant: Sure, I'd be happy to explain Configure Biome in biomejs-guides.\n\n# Configure Biome\n\nThis guide will help you to understand how to configure Biome. It explains the structure of a Biome configuration file and how Biome resolves its configuration.Here's a quick rundown of what this is about:\n\n## Configuration file structure\n\nA Biome configuration file is named `biome.json` or `biome.jsonc`. It is usually placed in your project’s root directory, next to your project’s `package.json`.\n\nBecause Biome is a toolchain, its configuration is organized around the tools it provides. At the moment, Biome provides three tools: the formatter, the linter and the import sorter (also called the import organizer). All of these tools are enabled by default. You can disable one or several of them using the `<tool>.enabled` field:\n\n```\n{\n  \"$schema\": \"https://biomejs.dev/schemas/1.9.4/schema.json\",\n  \"formatter\": {\n    \"enabled\": false\n  },\n  \"linter\": {\n    \"enabled\": false\n  },\n  \"organizeImports\": {\n    \"enabled\": false\n  }\n}\n```\n\nOptions that apply to more than one language are placed in the corresponding tool field. Language-specific options of a tool are placed under a `<language>.<tool>` field. This also allows overriding general options for a given language. You can also enable or disable a tool based on the language. In the following example, we configure the general options `formatter.indentStyle` and `formatter.lineWidth` for all the languages. Also, we set the JavaScript-specific option `quoteStyle` in `javascript.formatter` and we override `formatter.lineWidth`. We disabled the formatter for JSON files.\n\n```\n{\n  \"formatter\": {\n    \"indentStyle\": \"space\", // default is `tab`\n    \"lineWidth\": 100 // default is `80`\n  },\n  \"javascript\": {\n    \"formatter\": {\n      \"quoteStyle\": \"single\", // default is `double`\n      \"lineWidth\": 120 // override `formatter.lineWidth`\n    }\n  },\n  \"json\": {\n    \"formatter\": {\n      \"enabled\": false\n    }\n  }\n}\n```\n\n## Configuration file resolution\n\nBiome uses auto discovery to find the nearest configuration file. It looks in the working directory and in the parent directories until it finds a `biome.json` or a `biome.jsonc` file. If no configuration is found, then it applies Biome’s defaults. If both `biome.json` and `biome.jsonc` are present in the same folder, the priority will be given to `biome.json`.\n\nHere’s an example:\n\n- Directoryapp\n\n- Directorybackend\n\n- biome.json\n- package.json\n\n- Directoryfrontend\n\n- biome.json\n- Directorylegacy\n\n- package.json\n\n- Directorynew\n\n- package.json\n\n- Biome commands that run in `app/backend/package.json` will use the configuration file `app/backend/biome.json`;\n- Biome commands that run in `app/frontend/legacy/package.json` and `app/frontend/new/package.json` will use the configuration file `app/frontend/biome.json`;\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://biomejs.dev/guides/configure-biome", "title": "Configure Biome", "description": "This guide will help you to understand how to configure Biome. It explains the structure of a Biome configuration file and how Biome resolves its configuration.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-02-28 22:14:21", "type": "overview", "page_metadata": {"ogImage": "https://biomejs.dev/og/guides/configure-biome.png", "ogLocale": "en", "og:type": "article", "og:image": "https://biomejs.dev/og/guides/configure-biome.png", "og:description": "Learn how Biome configuration works.", "ogSiteName": "Biome", "language": "en", "og:url": "https://biomejs.dev/guides/configure-biome/", "description": "Learn how Biome configuration works.", "og:site_name": "Biome", "ogUrl": "https://biomejs.dev/guides/configure-biome/", "twitter:card": "summary_large_image", "ogDescription": "Learn how Biome configuration works.", "ogTitle": "Configure Biome", "viewport": "width=device-width, initial-scale=1", "og:title": "Configure Biome", "twitter:image": "https://biomejs.dev/og/guides/configure-biome.png", "og:locale": "en", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "title": "Configure Biome | Biome", "favicon": "https://biomejs.dev/img/favicon.svg", "scrapeId": "c9c77662-e5da-40ba-b87d-11edfc5a6310", "sourceURL": "https://biomejs.dev/guides/configure-biome", "url": "https://biomejs.dev/guides/configure-biome/", "statusCode": 200}}}
{"text": "System: You are a helpful biomejs-guides expert.\n\nUser: How do I configuration file structure in biomejs-guides?\n\nAssistant: To configuration file structure in biomejs-guides, here's what you do:\nA Biome configuration file is named `biome.json` or `biome.jsonc`. It is usually placed in your project’s root directory, next to your project’s `package.json`.\n\nBecause Biome is a toolchain, its configuration is organized around the tools it provides. At the moment, Biome provides three tools: the formatter, the linter and the import sorter (also called the import organizer). All of these tools are enabled by default. You can disable one or several of them using the `<tool>.enabled` field:\n\n```\n{\n  \"$schema\": \"https://biomejs.dev/schemas/1.9.4/schema.json\",\n  \"formatter\": {\n    \"enabled\": false\n  },\n  \"linter\": {\n    \"enabled\": false\n  },\n  \"organizeImports\": {\n    \"enabled\": false\n  }\n}\n```\n\nOptions that apply to more than one language are placed in the corresponding tool field. Language-specific options of a tool are placed under a `<language>.<tool>` field. This also allows overriding general options for a given language. You can also enable or disable a tool based on the language. In the following example, we configure the general options `formatter.indentStyle` and `formatter.lineWidth` for all the languages. Also, we set the JavaScript-specific option `quoteStyle` in `javascript.formatter` and we override `formatter.lineWidth`. We disabled the formatter for JSON files.\n\n```\n{\n  \"formatter\": {\n    \"indentStyle\": \"space\", // default is `tab`\n    \"lineWidth\": 100 // default is `80`\n  },\n  \"javascript\": {\n    \"formatter\": {\n      \"quoteStyle\": \"single\", // default is `double`\n      \"lineWidth\": 120 // override `formatter.lineWidth`\n    }\n  },\n  \"json\": {\n    \"formatter\": {\n      \"enabled\": false\n    }\n  }\n}\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://biomejs.dev/guides/configure-biome", "title": "Configure Biome", "description": "This guide will help you to understand how to configure Biome. It explains the structure of a Biome configuration file and how Biome resolves its configuration.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-02-28 22:14:21", "type": "section_detail", "page_metadata": {"ogImage": "https://biomejs.dev/og/guides/configure-biome.png", "ogLocale": "en", "og:type": "article", "og:image": "https://biomejs.dev/og/guides/configure-biome.png", "og:description": "Learn how Biome configuration works.", "ogSiteName": "Biome", "language": "en", "og:url": "https://biomejs.dev/guides/configure-biome/", "description": "Learn how Biome configuration works.", "og:site_name": "Biome", "ogUrl": "https://biomejs.dev/guides/configure-biome/", "twitter:card": "summary_large_image", "ogDescription": "Learn how Biome configuration works.", "ogTitle": "Configure Biome", "viewport": "width=device-width, initial-scale=1", "og:title": "Configure Biome", "twitter:image": "https://biomejs.dev/og/guides/configure-biome.png", "og:locale": "en", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "title": "Configure Biome | Biome", "favicon": "https://biomejs.dev/img/favicon.svg", "scrapeId": "c9c77662-e5da-40ba-b87d-11edfc5a6310", "sourceURL": "https://biomejs.dev/guides/configure-biome", "url": "https://biomejs.dev/guides/configure-biome/", "statusCode": 200}}}
{"text": "System: You are a helpful biomejs-guides expert.\n\nUser: How do I configuration file resolution in biomejs-guides?\n\nAssistant: To configuration file resolution in biomejs-guides, here's what you do:\nBiome uses auto discovery to find the nearest configuration file. It looks in the working directory and in the parent directories until it finds a `biome.json` or a `biome.jsonc` file. If no configuration is found, then it applies Biome’s defaults. If both `biome.json` and `biome.jsonc` are present in the same folder, the priority will be given to `biome.json`.\n\nHere’s an example:\n\n- Directoryapp\n\n- Directorybackend\n\n- biome.json\n- package.json\n\n- Directoryfrontend\n\n- biome.json\n- Directorylegacy\n\n- package.json\n\n- Directorynew\n\n- package.json\n\n- Biome commands that run in `app/backend/package.json` will use the configuration file `app/backend/biome.json`;\n- Biome commands that run in `app/frontend/legacy/package.json` and `app/frontend/new/package.json` will use the configuration file `app/frontend/biome.json`;.\nPretty straightforward, right?", "metadata": {"source_url": "https://biomejs.dev/guides/configure-biome", "title": "Configure Biome", "description": "This guide will help you to understand how to configure Biome. It explains the structure of a Biome configuration file and how Biome resolves its configuration.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-02-28 22:14:21", "type": "section_detail", "page_metadata": {"ogImage": "https://biomejs.dev/og/guides/configure-biome.png", "ogLocale": "en", "og:type": "article", "og:image": "https://biomejs.dev/og/guides/configure-biome.png", "og:description": "Learn how Biome configuration works.", "ogSiteName": "Biome", "language": "en", "og:url": "https://biomejs.dev/guides/configure-biome/", "description": "Learn how Biome configuration works.", "og:site_name": "Biome", "ogUrl": "https://biomejs.dev/guides/configure-biome/", "twitter:card": "summary_large_image", "ogDescription": "Learn how Biome configuration works.", "ogTitle": "Configure Biome", "viewport": "width=device-width, initial-scale=1", "og:title": "Configure Biome", "twitter:image": "https://biomejs.dev/og/guides/configure-biome.png", "og:locale": "en", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "title": "Configure Biome | Biome", "favicon": "https://biomejs.dev/img/favicon.svg", "scrapeId": "c9c77662-e5da-40ba-b87d-11edfc5a6310", "sourceURL": "https://biomejs.dev/guides/configure-biome", "url": "https://biomejs.dev/guides/configure-biome/", "statusCode": 200}}}
{"text": "System: You are a helpful biomejs-guides expert.\n\nUser: Can you give me some code examples for Configure Biome in biomejs-guides?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Configuration file example**:\n\n```yaml\n{\n  \"$schema\": \"https://biomejs.dev/schemas/1.9.4/schema.json\",\n  \"formatter\": {\n    \"enabled\": false\n  },\n  \"linter\": {\n    \"enabled\": false\n  },\n  \"organizeImports\": {\n    \"enabled\": false\n  }\n}\n```\n\nThis snippet shows you how to configuration file example, which is an important aspect of configure biome.\n\n", "metadata": {"source_url": "https://biomejs.dev/guides/configure-biome", "title": "Configure Biome", "description": "This guide will help you to understand how to configure Biome. It explains the structure of a Biome configuration file and how Biome resolves its configuration.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-02-28 22:14:21", "type": "code_examples", "page_metadata": {"ogImage": "https://biomejs.dev/og/guides/configure-biome.png", "ogLocale": "en", "og:type": "article", "og:image": "https://biomejs.dev/og/guides/configure-biome.png", "og:description": "Learn how Biome configuration works.", "ogSiteName": "Biome", "language": "en", "og:url": "https://biomejs.dev/guides/configure-biome/", "description": "Learn how Biome configuration works.", "og:site_name": "Biome", "ogUrl": "https://biomejs.dev/guides/configure-biome/", "twitter:card": "summary_large_image", "ogDescription": "Learn how Biome configuration works.", "ogTitle": "Configure Biome", "viewport": "width=device-width, initial-scale=1", "og:title": "Configure Biome", "twitter:image": "https://biomejs.dev/og/guides/configure-biome.png", "og:locale": "en", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "title": "Configure Biome | Biome", "favicon": "https://biomejs.dev/img/favicon.svg", "scrapeId": "c9c77662-e5da-40ba-b87d-11edfc5a6310", "sourceURL": "https://biomejs.dev/guides/configure-biome", "url": "https://biomejs.dev/guides/configure-biome/", "statusCode": 200}}}
{"text": "System: You are a helpful biomejs-guides expert.\n\nUser: What are some tips for using Configure Biome in biomejs-guides effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nCreate a configuration file for each project to ensure consistency among team members.\n\nUse the `extends` field to share common settings across different projects or folders.\n\nBe cautious about the working directory when running commands, as it affects how globs are resolved.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://biomejs.dev/guides/configure-biome", "title": "Configure Biome", "description": "This guide will help you to understand how to configure Biome. It explains the structure of a Biome configuration file and how Biome resolves its configuration.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-02-28 22:14:21", "type": "best_practices", "page_metadata": {"ogImage": "https://biomejs.dev/og/guides/configure-biome.png", "ogLocale": "en", "og:type": "article", "og:image": "https://biomejs.dev/og/guides/configure-biome.png", "og:description": "Learn how Biome configuration works.", "ogSiteName": "Biome", "language": "en", "og:url": "https://biomejs.dev/guides/configure-biome/", "description": "Learn how Biome configuration works.", "og:site_name": "Biome", "ogUrl": "https://biomejs.dev/guides/configure-biome/", "twitter:card": "summary_large_image", "ogDescription": "Learn how Biome configuration works.", "ogTitle": "Configure Biome", "viewport": "width=device-width, initial-scale=1", "og:title": "Configure Biome", "twitter:image": "https://biomejs.dev/og/guides/configure-biome.png", "og:locale": "en", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "title": "Configure Biome | Biome", "favicon": "https://biomejs.dev/img/favicon.svg", "scrapeId": "c9c77662-e5da-40ba-b87d-11edfc5a6310", "sourceURL": "https://biomejs.dev/guides/configure-biome", "url": "https://biomejs.dev/guides/configure-biome/", "statusCode": 200}}}

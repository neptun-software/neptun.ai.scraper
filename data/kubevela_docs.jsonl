{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela Documentation\"?\n\nAssistant: KubeVela is a modern software delivery and management control plane aimed at simplifying application deployment and operation across hybrid, multi-cloud environments.\n\nHere's a detailed explanation:\n\n\n## What is KubeVela?\nKubeVela is a modern software delivery and management control plane. The goal is to make deploying and operating applications across today's hybrid, multi-cloud environments easier, faster and more reliable. Welcome onboard and sail Vela!\n\n## Why KubeVela?\n- The modern application should be able to deploy across hybrid environments including Kubernetes, cloud, or even IoT devices in a simple and robust way.\n- The app delivery control plane should be able to adapt to any existing infrastructure or extend with modular and reusable building blocks per users’ needs.\n- The developers should have an application platform that is vendor agnostic, consistent experience, and has a large number of reusable building blocks and best practices.\n\n## Key Features\n- **Deployment as Code**: Declare your deployment plan as [workflow](https://kubevela.io/docs/getting-started/core-concept/), run it automatically with any CI/CD or GitOps system, extend or re-program the workflow steps with [CUE](https://cuelang.org/). No ad-hoc scripts, no dirty glue code, just deploy. The deployment workflow in KubeVela is powered by [Open Application Model](https://oam.dev/).\n\n- **Built-in security, compliance and observability building blocks**: Choose from the wide range of LDAP integrations we provided out-of-box, enjoy enhanced [multi-cluster authorization and authentication](https://kubevela.io/docs/platform-engineers/auth/advance/), pick and apply fine-grained RBAC modules and customize them per your own supply chain requirements. All delivery process has fully [automated observability](https://kubevela.io/docs/platform-engineers/operations/observability/).\n\n- **Multi-cloud/hybrid-environments app delivery as first-class citizen**: Natively supports multi-cluster/hybrid-cloud scenarios such as progressive rollout across test/staging/production environments, automatic canary, blue-green and continuous verification, rich placement strategy across clusters and clouds, along with automated cloud environments provision.\n\n- **Lightweight but highly extensible architecture**: Minimize your control plane deployment with only one pod and 0.5c1g resources to handle thousands of application delivery. Glue and orchestrate all your infrastructure capabilities as reusable modules and share the large growing community [addons](https://kubevela.io/docs/reference/addons/overview/).\n\n## KubeVela vs. Other Software\n### KubeVela vs. CI/CD (GitHub Actions, GitLab, CircleCI, Jenkins, etc.)\nKubeVela is a continuous delivery platform that works at downstream of your CI process. So you will reuse the CI process you already adopted, and KubeVela will take over CD process by empowering it with modern application delivery best practices, such as declarative deployment plan as workflow, hybrid/multi-cloud resource provision/binding, security and compliance, and much more. It natively supports GitOps if you want.\n\n> Feel free to check the [Integrating with Jenkins](https://kubevela.io/docs/tutorials/jenkins/) or [GitOps](https://kubevela.io/docs/case-studies/gitops/) documentation for more details.\n\n### KubeVela vs. GitOps (ArgoCD, FluxCD, etc.)\nKubeVela adopts your GitOps process and improves it by adding multi-cluster/hybrid-cloud capabilities:\n- KubeVela has a user-friendly workflow that allows you to extend, re-program or share any of your delivery process, including security and compliance flows.\n- KubeVela regards multi-cloud/hybrid-environments app delivery as first-class citizen, it provides rich deployment strategies across clusters and clouds with fully managed cloud environments provision.\n\n### KubeVela vs. PaaS (Heroku, Cloud Foundry, etc.)\nKubeVela shares the same goal with the traditional PaaS to provide full application deployment and management capabilities and aim to improve developer experience and efficiency.\nThough the biggest difference lies in **flexibility**.\nKubeVela is fully programmable, all of its deployment workflow and component feature set are LEGO-style CUE modules and can be extended or removed in-place when your needs change. As a CD control plane, KubeVela allow you to take full control over your infrastructure and tooling.\n\n### KubeVela vs. Helm\nHelm is a package manager for Kubernetes that provides package, install, and upgrade a set of YAML files for Kubernetes as a unit.\nKubeVela as a modern software delivery control plane can naturally deploy Helm charts. For example, you could use KubeVela to define an application that is composed by a WordPress chart and a AWS RDS Terraform module, orchestrate the components' topology, and then deploy them to multiple environments following certain strategy.\nOf course, KubeVela also supports other encapsulation formats including Kustomize etc.\n\n### KubeVela vs. Kubernetes\nKubeVela is a modern application delivery system built with cloud native stack. It leverages [Open Application Model](https://github.com/oam-dev/spec) and Kubernetes as control plane to resolve a hard problem - making shipping applications enjoyable.\n\n## Development Status\nKubeVela is being actively developed by the community, our releases can be found [here](https://github.com/kubevela/kubevela/releases).\n\n## Adoption\nOrganizations who have officially adopted KubeVela can be found [here](https://github.com/kubevela/community/blob/main/ADOPTERS.md).\n\n## What's Next\n- Start to [install KubeVela](https://kubevela.io/docs/install/).\n- Learn [Core Concepts](https://kubevela.io/docs/getting-started/core-concept/) to know more about how it works.\n", "metadata": {"source_url": "https://kubevela.io/docs", "title": "KubeVela Documentation", "description": "KubeVela is a modern software delivery and management control plane aimed at simplifying application deployment and operation across hybrid, multi-cloud environments.", "has_code_examples": false, "has_best_practices": true, "section_count": 7, "timestamp": "2025-02-28 14:37:22", "type": "overview", "page_metadata": {"ogUrl": "https://kubevela.io/docs/", "docusaurus_tag": "docs-default-v1.10", "generator": "Docusaurus v2.4.3", "theme-color": "#ffffff", "msapplication-config": "/img/favicons/browserconfig.xml", "docsearch:language": "en", "description": "What is KubeVela?", "language": "en", "ogTitle": "Introduction | KubeVela", "og:url": "https://kubevela.io/docs/", "docsearch:docusaurus_tag": "docs-default-v1.10", "docusaurus_version": "v1.10", "viewport": "width=device-width, initial-scale=1.0", "docsearch:version": "v1.10", "docusaurus_locale": "en", "og:title": "Introduction | KubeVela", "og:description": "What is KubeVela?", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "twitter:card": "summary_large_image", "title": "Introduction | KubeVela", "ogDescription": "What is KubeVela?", "scrapeId": "5eb37e65-fb78-4afa-b132-32dd869619c8", "sourceURL": "https://kubevela.io/docs", "url": "https://kubevela.io/docs/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela Documentation\"?\n\nAssistant: Here are the recommended best practices:\n\n• KubeVela is a continuous delivery platform that works downstream of your CI process, allowing reuse of existing CI processes.\n• KubeVela supports GitOps natively for enhanced deployment practices.\n• KubeVela is fully programmable, allowing for flexible deployment workflows and component features.\n", "metadata": {"source_url": "https://kubevela.io/docs", "title": "KubeVela Documentation", "description": "KubeVela is a modern software delivery and management control plane aimed at simplifying application deployment and operation across hybrid, multi-cloud environments.", "has_code_examples": false, "has_best_practices": true, "section_count": 7, "timestamp": "2025-02-28 14:37:22", "type": "best_practices", "page_metadata": {"ogUrl": "https://kubevela.io/docs/", "docusaurus_tag": "docs-default-v1.10", "generator": "Docusaurus v2.4.3", "theme-color": "#ffffff", "msapplication-config": "/img/favicons/browserconfig.xml", "docsearch:language": "en", "description": "What is KubeVela?", "language": "en", "ogTitle": "Introduction | KubeVela", "og:url": "https://kubevela.io/docs/", "docsearch:docusaurus_tag": "docs-default-v1.10", "docusaurus_version": "v1.10", "viewport": "width=device-width, initial-scale=1.0", "docsearch:version": "v1.10", "docusaurus_locale": "en", "og:title": "Introduction | KubeVela", "og:description": "What is KubeVela?", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "twitter:card": "summary_large_image", "title": "Introduction | KubeVela", "ogDescription": "What is KubeVela?", "scrapeId": "5eb37e65-fb78-4afa-b132-32dd869619c8", "sourceURL": "https://kubevela.io/docs", "url": "https://kubevela.io/docs/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela Installation Guide\"?\n\nAssistant: This page provides installation methods for KubeVela based on your environment.\n\nHere's a detailed explanation:\n\n\n## Don't have Kubernetes cluster yet?\nFor those who are new to KubeVela and Kubernetes, installing KubeVela in standalone mode is the best choice. It doesn't require you to have any Kubernetes knowledge to experience KubeVela features.\nWe developed VelaD for this purpose, which packages KubeVela along its dependencies including Kubernetes into a single binary.\nPlease follow the document linked below to install KubeVela.\n\n- Standalone Installation: Install KubeVela on a local machine or a remote server(Public Cloud or On-premise) based on Linux, macOS or Windows operating system.\n\ninfo\n\nVelaD suits great for local development and quick demos, it leverages K3s to manage Kubernetes. We strongly recommend you to install KubeVela with managed Kubernetes services for production usage.\n\n## Already have Kubernetes cluster\n- Kubernetes Cluster: Install KubeVela in existing Kubernetes cluster.\n", "metadata": {"source_url": "https://kubevela.io/docs/install", "title": "KubeVela Installation Guide", "description": "This page provides installation methods for KubeVela based on your environment.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-02-28 14:37:28", "type": "overview", "page_metadata": {"msapplication-config": "/img/favicons/browserconfig.xml", "viewport": "width=device-width, initial-scale=1.0", "docusaurus_version": "v1.10", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "description": "Here are two installation methods available according to your environment:", "og:description": "Here are two installation methods available according to your environment:", "ogUrl": "https://kubevela.io/docs/install/", "docusaurus_locale": "en", "og:url": "https://kubevela.io/docs/install/", "docusaurus_tag": "docs-default-v1.10", "docsearch:version": "v1.10", "ogDescription": "Here are two installation methods available according to your environment:", "title": "Installation Overview | KubeVela", "og:title": "Installation Overview | KubeVela", "generator": "Docusaurus v2.4.3", "docsearch:language": "en", "docsearch:docusaurus_tag": "docs-default-v1.10", "ogTitle": "Installation Overview | KubeVela", "theme-color": "#ffffff", "language": "en", "twitter:card": "summary_large_image", "scrapeId": "e3d86489-59e6-4f0f-b637-b31a7b98d611", "sourceURL": "https://kubevela.io/docs/install", "url": "https://kubevela.io/docs/install/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela Installation Guide\"?\n\nAssistant: Here are the recommended best practices:\n\n• For upgrading from existing KubeVela control plane, please read the upgrade guide.\n", "metadata": {"source_url": "https://kubevela.io/docs/install", "title": "KubeVela Installation Guide", "description": "This page provides installation methods for KubeVela based on your environment.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-02-28 14:37:28", "type": "best_practices", "page_metadata": {"msapplication-config": "/img/favicons/browserconfig.xml", "viewport": "width=device-width, initial-scale=1.0", "docusaurus_version": "v1.10", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "description": "Here are two installation methods available according to your environment:", "og:description": "Here are two installation methods available according to your environment:", "ogUrl": "https://kubevela.io/docs/install/", "docusaurus_locale": "en", "og:url": "https://kubevela.io/docs/install/", "docusaurus_tag": "docs-default-v1.10", "docsearch:version": "v1.10", "ogDescription": "Here are two installation methods available according to your environment:", "title": "Installation Overview | KubeVela", "og:title": "Installation Overview | KubeVela", "generator": "Docusaurus v2.4.3", "docsearch:language": "en", "docsearch:docusaurus_tag": "docs-default-v1.10", "ogTitle": "Installation Overview | KubeVela", "theme-color": "#ffffff", "language": "en", "twitter:card": "summary_large_image", "scrapeId": "e3d86489-59e6-4f0f-b637-b31a7b98d611", "sourceURL": "https://kubevela.io/docs/install", "url": "https://kubevela.io/docs/install/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela Roadmap\"?\n\nAssistant: Overview of KubeVela's goals and roadmap for application deployment across hybrid, multi-cloud environments.\n\nHere's a detailed explanation:\n\n\n## KubeVela v1.10.0 Release\nKubeVela v1.10.0 is now available (2025-02-06). The goal of KubeVela is to make deploying and operating applications across today's hybrid, multi-cloud environments easier, faster and more reliable.\n\n## Goals of KubeVela\nThe goals include providing a modular, extensible, and portable control plane for modeling application deployment with higher level yet consistent API, enabling simple and robust application delivery across hybrid environments, and building an open, inclusive, and vibrant OSS developer community.\n\n## Roadmap Links\nThe detailed roadmap is aligned with the direction for the next three years. Here are the links to the previous roadmaps: \n- [2023 Summer Roadmap](https://kubevela.io/docs/roadmap/2023-06-roadmap/)\n- [2023 Spring Roadmap](https://kubevela.io/docs/roadmap/2023-03-roadmap/)\n- [2022 Winter Roadmap](https://kubevela.io/docs/roadmap/2022-12-roadmap/)\n- [2022 Fall Roadmap](https://kubevela.io/docs/roadmap/2022-09-roadmap/)\n- [2022 Summer Roadmap](https://kubevela.io/docs/roadmap/2022-06-roadmap/)\n- [2022 Spring Roadmap](https://kubevela.io/docs/roadmap/2022-03-roadmap/)\n- [2021 Winter Roadmap](https://kubevela.io/docs/roadmap/2021-12-roadmap/)\n- [2021 Fall Roadmap](https://kubevela.io/docs/roadmap/2021-09-roadmap/)\n- [2021 Summer Roadmap](https://kubevela.io/docs/roadmap/2021-06-roadmap/)\n- [2021 Spring Roadmap](https://kubevela.io/docs/roadmap/2021-03-roadmap/)\n- [2020 Winter Roadmap](https://kubevela.io/docs/roadmap/2020-12-roadmap/)\n", "metadata": {"source_url": "https://kubevela.io/docs/roadmap", "title": "KubeVela Roadmap", "description": "Overview of KubeVela's goals and roadmap for application deployment across hybrid, multi-cloud environments.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 14:37:38", "type": "overview", "page_metadata": {"favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogUrl": "https://kubevela.io/docs/roadmap/", "title": "Roadmap | KubeVela", "generator": "Docusaurus v2.4.3", "docusaurus_locale": "en", "docsearch:language": "en", "og:title": "Roadmap | KubeVela", "og:description": "The goal of KubeVela is to make deploying and operating applications across today's hybrid, multi-cloud environments easier, faster and more reliable. We will make effort on the following aspects to make the goal achievable:", "theme-color": "#ffffff", "msapplication-config": "/img/favicons/browserconfig.xml", "viewport": "width=device-width, initial-scale=1.0", "og:url": "https://kubevela.io/docs/roadmap/", "ogTitle": "Roadmap | KubeVela", "docusaurus_tag": "docs-default-v1.10", "language": "en", "ogDescription": "The goal of KubeVela is to make deploying and operating applications across today's hybrid, multi-cloud environments easier, faster and more reliable. We will make effort on the following aspects to make the goal achievable:", "docsearch:version": "v1.10", "docsearch:docusaurus_tag": "docs-default-v1.10", "docusaurus_version": "v1.10", "description": "The goal of KubeVela is to make deploying and operating applications across today's hybrid, multi-cloud environments easier, faster and more reliable. We will make effort on the following aspects to make the goal achievable:", "twitter:card": "summary_large_image", "scrapeId": "ac2a1567-a9b0-4135-86bc-23aeff3d0274", "sourceURL": "https://kubevela.io/docs/roadmap", "url": "https://kubevela.io/docs/roadmap/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela Roadmap\"?\n\nAssistant: Here are the recommended best practices:\n\n• KubeVela follows the release process and cadence guide that actions may not be strictly consistent with the roadmap.\n• Adjustments to milestones may occur based on community input from meetings and GitHub issues.\n", "metadata": {"source_url": "https://kubevela.io/docs/roadmap", "title": "KubeVela Roadmap", "description": "Overview of KubeVela's goals and roadmap for application deployment across hybrid, multi-cloud environments.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 14:37:38", "type": "best_practices", "page_metadata": {"favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogUrl": "https://kubevela.io/docs/roadmap/", "title": "Roadmap | KubeVela", "generator": "Docusaurus v2.4.3", "docusaurus_locale": "en", "docsearch:language": "en", "og:title": "Roadmap | KubeVela", "og:description": "The goal of KubeVela is to make deploying and operating applications across today's hybrid, multi-cloud environments easier, faster and more reliable. We will make effort on the following aspects to make the goal achievable:", "theme-color": "#ffffff", "msapplication-config": "/img/favicons/browserconfig.xml", "viewport": "width=device-width, initial-scale=1.0", "og:url": "https://kubevela.io/docs/roadmap/", "ogTitle": "Roadmap | KubeVela", "docusaurus_tag": "docs-default-v1.10", "language": "en", "ogDescription": "The goal of KubeVela is to make deploying and operating applications across today's hybrid, multi-cloud environments easier, faster and more reliable. We will make effort on the following aspects to make the goal achievable:", "docsearch:version": "v1.10", "docsearch:docusaurus_tag": "docs-default-v1.10", "docusaurus_version": "v1.10", "description": "The goal of KubeVela is to make deploying and operating applications across today's hybrid, multi-cloud environments easier, faster and more reliable. We will make effort on the following aspects to make the goal achievable:", "twitter:card": "summary_large_image", "scrapeId": "ac2a1567-a9b0-4135-86bc-23aeff3d0274", "sourceURL": "https://kubevela.io/docs/roadmap", "url": "https://kubevela.io/docs/roadmap/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"vela kube apply\"?\n\nAssistant: Apply resources in Kubernetes YAML file to clusters.\n\nHere's a detailed explanation:\n\n\n## Synopsis\nApply Kubernetes objects in clusters\n\nApply Kubernetes objects in multiple clusters. Use --clusters to specify which clusters to apply. If -n/--namespace is used, the original object namespace will be overridden.\n\nYou can use -f/--file to specify the object file/folder to apply. Multiple file inputs are allowed. Directory input and web url input is supported as well. File format can be in YAML, JSON or CUE.\n\n## Examples\n```shell\n  # Apply single object file in managed cluster\n  vela kube apply -f my.yaml --cluster cluster-1\n\n  # Apply object in CUE, the whole CUE file MUST follow the kubernetes API and contain only one object.\n  vela kube apply -f my.cue --cluster cluster-1\n\n  # Apply object in JSON, the whole JSON file MUST follow the kubernetes API and contain only one object.\n  vela kube apply -f my.json --cluster cluster-1\n\n  # Apply multiple object files in multiple managed clusters\n  vela kube apply -f my-1.yaml -f my-2.cue --cluster cluster-1 --cluster cluster-2\n\n  # Apply object file with web url in control plane\n  vela kube apply -f https://raw.githubusercontent.com/kubevela/kubevela/master/docs/examples/app-with-probe/app-with-probe.yaml\n\n  # Apply object files in directory to specified namespace in managed clusters\n  vela kube apply -f ./resources -n demo --cluster cluster-1 --cluster cluster-2\n\n  # Use dry-run to see what will be rendered out in YAML\n  vela kube apply -f my.cue --cluster cluster-1 --dry-run\n```\n\n## Options\n```shell\n  -c, --cluster strings    The cluster to apply objects. Setting multiple clusters will apply objects in order. (default [local])\n      --dry-run            Setting this flag will not apply resources in clusters. It will print out the resource to be applied.\n  -f, --file strings       Files that include native Kubernetes objects to apply.\n  -h, --help               help for apply\n  -n, --namespace string   The namespace to apply objects. If empty, the namespace declared in the YAML will be used.\n```\n\n## Options inherited from parent commands\n```shell\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n\n## SEE ALSO\n- [vela kube](https://kubevela.io/docs/cli/vela_kube/) \\- Managing native Kubernetes resources across clusters.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_kube_apply", "title": "vela kube apply", "description": "Apply resources in Kubernetes YAML file to clusters.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 14:37:56", "type": "overview", "page_metadata": {"og:url": "https://kubevela.io/docs/cli/vela_kube_apply/", "language": "en", "generator": "Docusaurus v2.4.3", "title": "vela kube apply | KubeVela", "docusaurus_version": "v1.10", "docsearch:language": "en", "docsearch:version": "v1.10", "twitter:card": "summary_large_image", "docusaurus_locale": "en", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:title": "vela kube apply | KubeVela", "description": "Apply resources in Kubernetes YAML file to clusters.", "theme-color": "#ffffff", "og:description": "Apply resources in Kubernetes YAML file to clusters.", "ogDescription": "Apply resources in Kubernetes YAML file to clusters.", "msapplication-config": "/img/favicons/browserconfig.xml", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogTitle": "vela kube apply | KubeVela", "ogUrl": "https://kubevela.io/docs/cli/vela_kube_apply/", "viewport": "width=device-width, initial-scale=1.0", "docusaurus_tag": "docs-default-v1.10", "scrapeId": "b79364d7-dd27-47be-b8bc-d5bbc62dbc1d", "sourceURL": "https://kubevela.io/docs/cli/vela_kube_apply", "url": "https://kubevela.io/docs/cli/vela_kube_apply/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"vela kube apply\"?\n\nAssistant: Here are some code examples:\n\n### Basic apply command\n```yaml\nvela kube apply [flags]\n```\n\n### Apply single object file\n```yaml\nvela kube apply -f my.yaml --cluster cluster-1\n```\n\n### Apply object in CUE\n```yaml\nvela kube apply -f my.cue --cluster cluster-1\n```\n\n### Apply object in JSON\n```yaml\nvela kube apply -f my.json --cluster cluster-1\n```\n\n### Apply multiple object files\n```yaml\nvela kube apply -f my-1.yaml -f my-2.cue --cluster cluster-1 --cluster cluster-2\n```\n\n### Apply object file with web url\n```yaml\nvela kube apply -f https://raw.githubusercontent.com/kubevela/kubevela/master/docs/examples/app-with-probe/app-with-probe.yaml\n```\n\n### Apply object files in directory\n```yaml\nvela kube apply -f ./resources -n demo --cluster cluster-1 --cluster cluster-2\n```\n\n### Dry-run example\n```yaml\nvela kube apply -f my.cue --cluster cluster-1 --dry-run\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_kube_apply", "title": "vela kube apply", "description": "Apply resources in Kubernetes YAML file to clusters.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 14:37:56", "type": "code_examples", "page_metadata": {"og:url": "https://kubevela.io/docs/cli/vela_kube_apply/", "language": "en", "generator": "Docusaurus v2.4.3", "title": "vela kube apply | KubeVela", "docusaurus_version": "v1.10", "docsearch:language": "en", "docsearch:version": "v1.10", "twitter:card": "summary_large_image", "docusaurus_locale": "en", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:title": "vela kube apply | KubeVela", "description": "Apply resources in Kubernetes YAML file to clusters.", "theme-color": "#ffffff", "og:description": "Apply resources in Kubernetes YAML file to clusters.", "ogDescription": "Apply resources in Kubernetes YAML file to clusters.", "msapplication-config": "/img/favicons/browserconfig.xml", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogTitle": "vela kube apply | KubeVela", "ogUrl": "https://kubevela.io/docs/cli/vela_kube_apply/", "viewport": "width=device-width, initial-scale=1.0", "docusaurus_tag": "docs-default-v1.10", "scrapeId": "b79364d7-dd27-47be-b8bc-d5bbc62dbc1d", "sourceURL": "https://kubevela.io/docs/cli/vela_kube_apply", "url": "https://kubevela.io/docs/cli/vela_kube_apply/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"vela kube apply\"?\n\nAssistant: Here are the recommended best practices:\n\n• Use --clusters to specify which clusters to apply when applying to multiple clusters.\n• Use -f/--file to specify the object file/folder to apply, supporting multiple file inputs.\n• For CUE and JSON files, ensure they follow the Kubernetes API and contain only one object.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_kube_apply", "title": "vela kube apply", "description": "Apply resources in Kubernetes YAML file to clusters.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 14:37:56", "type": "best_practices", "page_metadata": {"og:url": "https://kubevela.io/docs/cli/vela_kube_apply/", "language": "en", "generator": "Docusaurus v2.4.3", "title": "vela kube apply | KubeVela", "docusaurus_version": "v1.10", "docsearch:language": "en", "docsearch:version": "v1.10", "twitter:card": "summary_large_image", "docusaurus_locale": "en", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:title": "vela kube apply | KubeVela", "description": "Apply resources in Kubernetes YAML file to clusters.", "theme-color": "#ffffff", "og:description": "Apply resources in Kubernetes YAML file to clusters.", "ogDescription": "Apply resources in Kubernetes YAML file to clusters.", "msapplication-config": "/img/favicons/browserconfig.xml", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogTitle": "vela kube apply | KubeVela", "ogUrl": "https://kubevela.io/docs/cli/vela_kube_apply/", "viewport": "width=device-width, initial-scale=1.0", "docusaurus_tag": "docs-default-v1.10", "scrapeId": "b79364d7-dd27-47be-b8bc-d5bbc62dbc1d", "sourceURL": "https://kubevela.io/docs/cli/vela_kube_apply", "url": "https://kubevela.io/docs/cli/vela_kube_apply/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela Quick Start\"?\n\nAssistant: This page guides you to deliver your first app using KubeVela.\n\nHere's a detailed explanation:\n\n\n## Deploy a classic application\nBelow is a classic KubeVela application which contains one component with one operational trait, basically, it means to deploy a container image as webservice with one replica. Additionally, there are three policies and workflow steps, it means to deploy the application into two different environments with different configurations.\n\n```codeBlockLines_e6Vv\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: first-vela-app\nspec:\n  components:\n    - name: express-server\n      type: webservice\n      properties:\n        image: oamdev/hello-world\n        ports:\n         - port: 8000\n           expose: true\n      traits:\n        - type: scaler\n          properties:\n            replicas: 1\n  policies:\n    - name: target-default\n      type: topology\n      properties:\n        # The cluster with name local is installed the KubeVela.\n        clusters: [\"local\"]\n        namespace: \"default\"\n    - name: target-prod\n      type: topology\n      properties:\n        clusters: [\"local\"]\n        # This namespace must be created before deploying.\n        namespace: \"prod\"\n    - name: deploy-ha\n      type: override\n      properties:\n        components:\n          - type: webservice\n            traits:\n              - type: scaler\n                properties:\n                  replicas: 2\n  workflow:\n    steps:\n      - name: deploy2default\n        type: deploy\n        properties:\n          policies: [\"target-default\"]\n      - name: manual-approval\n        type: suspend\n      - name: deploy2prod\n        type: deploy\n        properties:\n          policies: [\"target-prod\", \"deploy-ha\"]\n```\n\n- Create an environment for your first app.\n\n```codeBlockLines_e6Vv\n# This command will create a namespace in the local cluster\nvela env init prod --namespace prod\n```\n\nexpected output\n\n```codeBlockLines_e6Vv\nenvironment prod with namespace prod created\n```\n\n- Starting to deploy the application\n\n```codeBlockLines_e6Vv\nvela up -f https://kubevela.net/example/applications/first-app.yaml\n```\n\nexpected output\n\n```codeBlockLines_e6Vv\nApplying an application in vela K8s object format...\nI0516 15:45:18.123356   27156 apply.go:107] \"creating object\" name=\"first-vela-app\" resource=\"core.oam.dev/v1beta1, Kind=Application\"\n✅ App has been deployed 🚀🚀🚀\n    Port forward: vela port-forward first-vela-app\n             SSH: vela exec first-vela-app\n         Logging: vela logs first-vela-app\n      App status: vela status first-vela-app\n        Endpoint: vela status first-vela-app --endpoint\nApplication prod/first-vela-app applied.\n```\n\n- View the process and status of the application deployment\n\n```codeBlockLines_e6Vv\nvela status first-vela-app\n```\n\nexpected output\n\n```codeBlockLines_e6Vv\nAbout:\n\n  Name:         first-vela-app\n  Namespace:    prod\n  Created at:   2022-05-16 15:45:18 +0800 CST\n  Status:       workflowSuspending\n\nWorkflow:\n\n  ...\n\nServices:\n\n  - Name: express-server\n    Cluster: local  Namespace: default\n    Type: webservice\n    Healthy Ready:1/1\n    Traits:\n      ✅ scaler\n```\n\nThe application status will change to `workflowSuspending`, means the workflow has finished the first two steps and waiting for manual approval as per the step specified.\n\n- Access the application\n\nWe can check the application by:\n\n```codeBlockLines_e6Vv\nvela port-forward first-vela-app 8000:8000\n```\n\nIt will invoke your browser and your can see the website:\n\nexpected output\n\n```codeBlockLines_e6Vv\n<xmp>\nHello KubeVela! Make shipping applications more enjoyable.\n\n...snip...\n```\n\n- Resume the workflow\n\nAfter we finished checking the application, we can approve the workflow to continue:\n\n```codeBlockLines_e6Vv\nvela workflow resume first-vela-app\n```\n\nexpected output\n\n```codeBlockLines_e6Vv\nSuccessfully resume workflow: first-vela-app\n```\n\nThen the rest will be delivered in the `prod` namespace:\n\n```codeBlockLines_e6Vv\nvela status first-vela-app\n```\n\nexpected output\n\n```codeBlockLines_e6Vv\nAbout:\n\n  Name:         first-vela-app\n  Namespace:    prod\n  Created at:   2022-05-16 15:45:18 +0800 CST\n  Status:       running\n\nWorkflow:\n\n  ...snipt...\n\nServices:\n\n  - Name: express-server\n    Cluster: local  Namespace: prod\n    Type: webservice\n    Healthy Ready:2/2\n    Traits:\n      ✅ scaler\n  - Name: express-server\n    Cluster: local  Namespace: default\n    Type: webservice\n    Healthy Ready:1/1\n    Traits:\n      ✅ scaler\n```\n\nGreat! You have finished deploying your first KubeVela application, you can also view and manage it in UI.\n\n## Manage application with UI Console\nAfter finishing [the installation of VelaUX](https://kubevela.io/docs/install/#2-install-velaux), you can view and manage the application created.\n\n- Port forward the UI if you don't have endpoint for access:\n\n```codeBlockLines_e6Vv\nvela port-forward addon-velaux -n vela-system 8080:80\n```\n\n- VelaUX need authentication, default username is `admin` and the password is **`VelaUX12345`**.\n\nIt requires you to override with a new password for the first login, please make sure to remember the new password.\n\n- Check the resources deployed\n\nClick the application card, then you can view the details of the application.\n\n![first-app-graph](https://static.kubevela.net/images/1.5/first-app-graph.jpg)\n\nThe UI console shares a different metadata layer with the controller. It's more like a PaaS architecture of a company which choose a database as the source of truth instead of relying on the etcd of Kubernetes.\n\nBy default, if you're using CLI to manage the applications directly from Kubernetes API, we will sync the metadata to UI backend automatically. Once you deployed the application from the UI console, the automatic sync process will be stopped as the source of truth may be changed.\n\n**Tip:** If the namespace of the application operated by CLI has already been associated with the corresponding environment in UI, then the application will be automatically synchronized to the project associated with that environment in UI. Otherwise, the application will be synchronized to the default project.\nIf you want to specify which project in UI console an application should be synchronized to, please refer to [Creating environments for the project](https://kubevela.io/docs/how-to/dashboard/user/project/#creating-environments-for-the-project).\n\nIf there're any changes happen from CLI after that, the UI console will detect the difference and show it for you. However, it's not recommended to modify the application properties from both sides.\n\nIn conclusion, if you're a CLI/YAML/GitOps user, you'd better just use CLI to manage the application CRD and just use the UI console (velaux) as a dashboard. Once you've managed the app from the UI console, you need to align the behavior and manage apps from UI, API, or Webhook provided by velaux.\n\n## Clean up\n```codeBlockLines_e6Vv\nvela delete first-vela-app\n```\n\nexpected output\n\n```codeBlockLines_e6Vv\nDeleting Application \"first-vela-app\"\napp \"first-vela-app\" deleted from namespace \"prod\"\n```\n\nThat's it! You succeed at the first application delivery. Congratulation!\n\n## Next Step\n- View [Core Concepts](https://kubevela.io/docs/getting-started/core-concept/) to learn more about how it works.\n- View [User Guide](https://kubevela.io/docs/tutorials/webservice/) to look on more of what you can achieve with KubeVela.\n\n- [Deploy a classic application](https://kubevela.io/docs/quick-start/#deploy-a-classic-application)\n- [Manage application with UI Console](https://kubevela.io/docs/quick-start/#manage-application-with-ui-console)\n- [Clean up](https://kubevela.io/docs/quick-start/#clean-up)\n- [Next Step](https://kubevela.io/docs/quick-start/#next-step)\n", "metadata": {"source_url": "https://kubevela.io/docs/quick-start", "title": "KubeVela Quick Start", "description": "This page guides you to deliver your first app using KubeVela.", "has_code_examples": true, "has_best_practices": false, "section_count": 4, "timestamp": "2025-02-28 14:38:28", "type": "overview", "page_metadata": {"generator": "Docusaurus v2.4.3", "docusaurus_locale": "en", "docusaurus_version": "v1.10", "ogTitle": "Deploy First Application | KubeVela", "title": "Deploy First Application | KubeVela", "ogUrl": "https://kubevela.io/docs/quick-start/", "twitter:card": "summary_large_image", "docsearch:language": "en", "description": "Before starting, please confirm that you've installed KubeVela and enabled the VelaUX addon according to the installation guide.", "og:description": "Before starting, please confirm that you've installed KubeVela and enabled the VelaUX addon according to the installation guide.", "ogDescription": "Before starting, please confirm that you've installed KubeVela and enabled the VelaUX addon according to the installation guide.", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "og:url": "https://kubevela.io/docs/quick-start/", "docsearch:version": "v1.10", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:title": "Deploy First Application | KubeVela", "docusaurus_tag": "docs-default-v1.10", "theme-color": "#ffffff", "msapplication-config": "/img/favicons/browserconfig.xml", "language": "en", "viewport": "width=device-width, initial-scale=1.0", "scrapeId": "5a426c7e-0392-44a3-aced-75bebeb921fb", "sourceURL": "https://kubevela.io/docs/quick-start", "url": "https://kubevela.io/docs/quick-start/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"KubeVela Quick Start\"?\n\nAssistant: Here are some code examples:\n\n### KubeVela Application Definition\n```yaml\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: first-vela-app\nspec:\n  components:\n    - name: express-server\n      type: webservice\n      properties:\n        image: oamdev/hello-world\n        ports:\n         - port: 8000\n           expose: true\n      traits:\n        - type: scaler\n          properties:\n            replicas: 1\n  policies:\n    - name: target-default\n      type: topology\n      properties:\n        clusters: [\"local\"]\n        namespace: \"default\"\n    - name: target-prod\n      type: topology\n      properties:\n        clusters: [\"local\"]\n        namespace: \"prod\"\n    - name: deploy-ha\n      type: override\n      properties:\n        components:\n          - type: webservice\n            traits:\n              - type: scaler\n                properties:\n                  replicas: 2\n  workflow:\n    steps:\n      - name: deploy2default\n        type: deploy\n        properties:\n          policies: [\"target-default\"]\n      - name: manual-approval\n        type: suspend\n      - name: deploy2prod\n        type: deploy\n        properties:\n          policies: [\"target-prod\", \"deploy-ha\"]\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/quick-start", "title": "KubeVela Quick Start", "description": "This page guides you to deliver your first app using KubeVela.", "has_code_examples": true, "has_best_practices": false, "section_count": 4, "timestamp": "2025-02-28 14:38:28", "type": "code_examples", "page_metadata": {"generator": "Docusaurus v2.4.3", "docusaurus_locale": "en", "docusaurus_version": "v1.10", "ogTitle": "Deploy First Application | KubeVela", "title": "Deploy First Application | KubeVela", "ogUrl": "https://kubevela.io/docs/quick-start/", "twitter:card": "summary_large_image", "docsearch:language": "en", "description": "Before starting, please confirm that you've installed KubeVela and enabled the VelaUX addon according to the installation guide.", "og:description": "Before starting, please confirm that you've installed KubeVela and enabled the VelaUX addon according to the installation guide.", "ogDescription": "Before starting, please confirm that you've installed KubeVela and enabled the VelaUX addon according to the installation guide.", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "og:url": "https://kubevela.io/docs/quick-start/", "docsearch:version": "v1.10", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:title": "Deploy First Application | KubeVela", "docusaurus_tag": "docs-default-v1.10", "theme-color": "#ffffff", "msapplication-config": "/img/favicons/browserconfig.xml", "language": "en", "viewport": "width=device-width, initial-scale=1.0", "scrapeId": "5a426c7e-0392-44a3-aced-75bebeb921fb", "sourceURL": "https://kubevela.io/docs/quick-start", "url": "https://kubevela.io/docs/quick-start/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"vela def show\"?\n\nAssistant: Show the reference doc for a component, trait, policy or workflow.\n\nHere's a detailed explanation:\n\n\n## Synopsis\nShow the reference doc for component, trait, policy or workflow types. 'vela show' equals with 'vela def show'.\n\n## Examples\n0. Run 'vela show' directly to start a web server for all reference docs.\n1. Generate documentation for ComponentDefinition webservice:\n> vela show webservice -n vela-system\n2. Generate documentation for local CUE Definition file webservice.cue:\n> vela show webservice.cue\n3. Generate documentation for local Cloud Resource Definition YAML alibaba-vpc.yaml:\n> vela show alibaba-vpc.yaml\n4. Specify output format, markdown supported:\n> vela show webservice --format markdown\n5. Specify a language for output, by default, it's english. You can also load your own translation script:\n> vela show webservice --location zh\n> vela show webservice --location zh --i18n https://kubevela.io/reference-i18n.json\n6. Show doc for a specified revision, it must exist in control plane cluster:\n> vela show webservice --revision v1\n7. Generate docs for all capabilities into folder $HOME/.vela/reference/docs/\n> vela show\n8. Generate all docs and start a doc server\n> vela show --web\n\n## Options\n  -e, --env string         specify environment name for application\n      --format string      specify format of output data, by default it's a pretty human readable format, you can specify markdown(md)\n  -h, --help               help for show\n      --i18n string        specify the location for of the doc generated from definition, now supported options 'zh', 'en'.  (default \"https://kubevela.io/reference-i18n.json\")\n  -l, --location string    specify the location for of the doc generated from definition, now supported options 'zh', 'en'.\n  -n, --namespace string   specify the Kubernetes namespace to use\n  -p, --path string        Specify the path for of the doc generated from definition.\n  -r, --revision string    Get the specified revision of a definition. Use def get to list revisions.\n      --web                start web doc site\n\n## Options inherited from parent commands\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_def_show", "title": "vela def show", "description": "Show the reference doc for a component, trait, policy or workflow.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 14:39:01", "type": "overview", "page_metadata": {"og:url": "https://kubevela.io/docs/cli/vela_def_show/", "title": "vela def show | KubeVela", "docsearch:language": "en", "og:title": "vela def show | KubeVela", "ogUrl": "https://kubevela.io/docs/cli/vela_def_show/", "docsearch:docusaurus_tag": "docs-default-v1.10", "language": "en", "og:description": "Show the reference doc for a component, trait, policy or workflow.", "twitter:card": "summary_large_image", "ogTitle": "vela def show | KubeVela", "docusaurus_version": "v1.10", "docusaurus_tag": "docs-default-v1.10", "theme-color": "#ffffff", "msapplication-config": "/img/favicons/browserconfig.xml", "viewport": "width=device-width, initial-scale=1.0", "description": "Show the reference doc for a component, trait, policy or workflow.", "ogDescription": "Show the reference doc for a component, trait, policy or workflow.", "docsearch:version": "v1.10", "generator": "Docusaurus v2.4.3", "docusaurus_locale": "en", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "scrapeId": "e42823f4-c66c-40b1-9cef-5b11ebfa9025", "sourceURL": "https://kubevela.io/docs/cli/vela_def_show", "url": "https://kubevela.io/docs/cli/vela_def_show/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"vela def show\"?\n\nAssistant: Here are some code examples:\n\n### Command to show definitions\n```yaml\nvela def show [flags]\n```\n\n### Command examples\n```yaml\n0. Run 'vela show' directly to start a web server for all reference docs.\n1. Generate documentation for ComponentDefinition webservice:\n> vela show webservice -n vela-system\n2. Generate documentation for local CUE Definition file webservice.cue:\n> vela show webservice.cue\n3. Generate documentation for local Cloud Resource Definition YAML alibaba-vpc.yaml:\n> vela show alibaba-vpc.yaml\n4. Specify output format, markdown supported:\n> vela show webservice --format markdown\n5. Specify a language for output, by default, it's english. You can also load your own translation script:\n> vela show webservice --location zh\n> vela show webservice --location zh --i18n https://kubevela.io/reference-i18n.json\n6. Show doc for a specified revision, it must exist in control plane cluster:\n> vela show webservice --revision v1\n7. Generate docs for all capabilities into folder $HOME/.vela/reference/docs/\n> vela show\n8. Generate all docs and start a doc server\n> vela show --web\n```\n\n### Options for command\n```yaml\n  -e, --env string         specify environment name for application\n      --format string      specify format of output data, by default it's a pretty human readable format, you can specify markdown(md)\n  -h, --help               help for show\n      --i18n string        specify the location for of the doc generated from definition, now supported options 'zh', 'en'.  (default \"https://kubevela.io/reference-i18n.json\")\n  -l, --location string    specify the location for of the doc generated from definition, now supported options 'zh', 'en'.\n  -n, --namespace string   specify the Kubernetes namespace to use\n  -p, --path string        Specify the path for of the doc generated from definition.\n  -r, --revision string    Get the specified revision of a definition. Use def get to list revisions.\n      --web                start web doc site\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_def_show", "title": "vela def show", "description": "Show the reference doc for a component, trait, policy or workflow.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 14:39:01", "type": "code_examples", "page_metadata": {"og:url": "https://kubevela.io/docs/cli/vela_def_show/", "title": "vela def show | KubeVela", "docsearch:language": "en", "og:title": "vela def show | KubeVela", "ogUrl": "https://kubevela.io/docs/cli/vela_def_show/", "docsearch:docusaurus_tag": "docs-default-v1.10", "language": "en", "og:description": "Show the reference doc for a component, trait, policy or workflow.", "twitter:card": "summary_large_image", "ogTitle": "vela def show | KubeVela", "docusaurus_version": "v1.10", "docusaurus_tag": "docs-default-v1.10", "theme-color": "#ffffff", "msapplication-config": "/img/favicons/browserconfig.xml", "viewport": "width=device-width, initial-scale=1.0", "description": "Show the reference doc for a component, trait, policy or workflow.", "ogDescription": "Show the reference doc for a component, trait, policy or workflow.", "docsearch:version": "v1.10", "generator": "Docusaurus v2.4.3", "docusaurus_locale": "en", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "scrapeId": "e42823f4-c66c-40b1-9cef-5b11ebfa9025", "sourceURL": "https://kubevela.io/docs/cli/vela_def_show", "url": "https://kubevela.io/docs/cli/vela_def_show/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"vela def show\"?\n\nAssistant: Here are the recommended best practices:\n\n• Run 'vela show' directly to start a web server for all reference docs.\n• Specify output format, markdown supported: use '--format markdown'.\n• Specify a language for output, by default, it's English. You can also load your own translation script.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_def_show", "title": "vela def show", "description": "Show the reference doc for a component, trait, policy or workflow.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 14:39:01", "type": "best_practices", "page_metadata": {"og:url": "https://kubevela.io/docs/cli/vela_def_show/", "title": "vela def show | KubeVela", "docsearch:language": "en", "og:title": "vela def show | KubeVela", "ogUrl": "https://kubevela.io/docs/cli/vela_def_show/", "docsearch:docusaurus_tag": "docs-default-v1.10", "language": "en", "og:description": "Show the reference doc for a component, trait, policy or workflow.", "twitter:card": "summary_large_image", "ogTitle": "vela def show | KubeVela", "docusaurus_version": "v1.10", "docusaurus_tag": "docs-default-v1.10", "theme-color": "#ffffff", "msapplication-config": "/img/favicons/browserconfig.xml", "viewport": "width=device-width, initial-scale=1.0", "description": "Show the reference doc for a component, trait, policy or workflow.", "ogDescription": "Show the reference doc for a component, trait, policy or workflow.", "docsearch:version": "v1.10", "generator": "Docusaurus v2.4.3", "docusaurus_locale": "en", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "scrapeId": "e42823f4-c66c-40b1-9cef-5b11ebfa9025", "sourceURL": "https://kubevela.io/docs/cli/vela_def_show", "url": "https://kubevela.io/docs/cli/vela_def_show/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"Deploying a Container-Based Application with KubeVela\"?\n\nAssistant: This page introduces how to deploy a container-based application using KubeVela, covering the process through the UI console and CLI.\n\nHere's a detailed explanation:\n\n\n## Before starting\n- Containerize your business, you need a container image within your image registry that can be accessed by KubeVela.\n- Make sure you have [VelaUX addon](https://kubevela.io/docs/reference/addons/velaux/) enabled.\n\n## Creating an application\nEnter the page of Application on the left, and click `New Application` to create. Pick your name, alias, and description; Select type of `webservice`; Decide your environment, Default environment is already available in the first place. You could also enter the page of Environments to set up new.\n\nClick `Next Step` so to the configuration page. You need to set up the Image address and resources limit. If you want to set up a command for the image, open up the row `CMD`.\n\nIf you want to deploy the private image, please create the registry integration configuration. refer to: [Image registry configuration](https://kubevela.io/docs/how-to/dashboard/config/image-registry/)\n\nAfter inputting the Image address, the system will load the Image info from the registry. If the image belongs to the private image registry, the `Secret` field will be automatically assigned values.\n\nYou could refer to their information to configure the `Service Ports` and `Persistent Storage`.\n\n## Deploying the application\nClick the `Deploy` button on the upper right and select a workflow. Note that each Environment of the application has its workflow. On the right of the `Baseline Config` tab is the environments. Check out the status of the environment and its instance information as you wish.\n\nWhen it has several targets in this environment, you may find them all in the `Instances` list. If you want to look at the process of application deployment, click `Check the details` to reveal.\n\nIn the `Instances` list, you may find some of them are in pending status. Click `+` in the beginning to figure out the reason in more detail.\n\n## Update image\nAfter the first deployment, our business keeps evolving and the following updates come along.\n\nClick `Baseline Config` and you can see the all components. Then click the component name and open the configuration page, you can update your latest requirements for image, version, and environment variable.\n\n## Update replicas\nIf your business requires more than one replica, enter the `Properties` page. By default, The component has a `Set Replicas` trait. Click it so that you can update the replicas.\n\n## Upgrading the application\nBy twos steps as above, it is still in a draft state, we need to click the deployment button again to complete the upgrade of the application.\n\n## Application recycling and deletion\nIf you need to delete the application after testing, you need to recycle all the deployed environments first. Click the environment name to enter the environment instance list, and click the `Recycle` button to recycle the deployment of the application in that environment. After it's done, the application in this environment rolls back as an undeployed one.\n\nAfter all of the environments have been recycled, the application can be deleted. Currently, the entry for application deletion is on the application list page. Back to the application list page, mouse on the menu icon on the right side of the application name, and click the `Remove` option.\n\n## Deploy via CLI\nYou also can deploy the application via CLI.\n", "metadata": {"source_url": "https://kubevela.io/docs/tutorials/webservice", "title": "Deploying a Container-Based Application with KubeVela", "description": "This page introduces how to deploy a container-based application using KubeVela, covering the process through the UI console and CLI.", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-02-28 14:39:16", "type": "overview", "page_metadata": {"favicon": "https://kubevela.io/img/favicons/favicon.ico", "docsearch:docusaurus_tag": "docs-default-v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "docusaurus_locale": "en", "docsearch:version": "v1.10", "og:description": "Deploy the business application by kubevela", "viewport": "width=device-width, initial-scale=1.0", "generator": "Docusaurus v2.4.3", "title": "Deploy Container Image | KubeVela", "description": "Deploy the business application by kubevela", "theme-color": "#ffffff", "ogDescription": "Deploy the business application by kubevela", "docsearch:language": "en", "ogTitle": "Deploy Container Image | KubeVela", "twitter:card": "summary_large_image", "docusaurus_version": "v1.10", "og:url": "https://kubevela.io/docs/tutorials/webservice/", "docusaurus_tag": "docs-default-v1.10", "og:title": "Deploy Container Image | KubeVela", "ogUrl": "https://kubevela.io/docs/tutorials/webservice/", "language": "en", "scrapeId": "fd79b1a2-0d02-4197-8057-7ec838455969", "sourceURL": "https://kubevela.io/docs/tutorials/webservice", "url": "https://kubevela.io/docs/tutorials/webservice/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"Deploying a Container-Based Application with KubeVela\"?\n\nAssistant: Here are some code examples:\n\n### Enable VelaUX addon\n```yaml\nvela addon enable velaux\n```\n\n### Deploy application via CLI\n```yaml\ncat <<EOF | vela up -f -\n# YAML begins\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: webservice-app\nspec:\n  components:\n    - name: frontend\n      type: webservice\n      properties:\n        image: oamdev/testapp:v1\n        cmd: [\"node\", \"server.js\"]\n        ports:\n          - port: 8080\n            expose: true\n        exposeType: NodePort\n        cpu: \"0.5\"\n        memory: \"512Mi\"\n      traits:\n        - type: scaler\n          properties:\n            replicas: 1\n# YAML ends\nEOF\n```\n\n### Check deployment status\n```yaml\nvela status webservice-app\n```\n\n### Port forward command\n```yaml\nvela port-forward webservice-app -n default 8080:8080\n```\n\n### Check application endpoint\n```yaml\nvela status webservice-app --endpoint\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/tutorials/webservice", "title": "Deploying a Container-Based Application with KubeVela", "description": "This page introduces how to deploy a container-based application using KubeVela, covering the process through the UI console and CLI.", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-02-28 14:39:16", "type": "code_examples", "page_metadata": {"favicon": "https://kubevela.io/img/favicons/favicon.ico", "docsearch:docusaurus_tag": "docs-default-v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "docusaurus_locale": "en", "docsearch:version": "v1.10", "og:description": "Deploy the business application by kubevela", "viewport": "width=device-width, initial-scale=1.0", "generator": "Docusaurus v2.4.3", "title": "Deploy Container Image | KubeVela", "description": "Deploy the business application by kubevela", "theme-color": "#ffffff", "ogDescription": "Deploy the business application by kubevela", "docsearch:language": "en", "ogTitle": "Deploy Container Image | KubeVela", "twitter:card": "summary_large_image", "docusaurus_version": "v1.10", "og:url": "https://kubevela.io/docs/tutorials/webservice/", "docusaurus_tag": "docs-default-v1.10", "og:title": "Deploy Container Image | KubeVela", "ogUrl": "https://kubevela.io/docs/tutorials/webservice/", "language": "en", "scrapeId": "fd79b1a2-0d02-4197-8057-7ec838455969", "sourceURL": "https://kubevela.io/docs/tutorials/webservice", "url": "https://kubevela.io/docs/tutorials/webservice/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"Deploying a Container-Based Application with KubeVela\"?\n\nAssistant: Here are the recommended best practices:\n\n• The application created by CLI will be synced to UI automatically.\n• If you are using a cloud server, please open the port in the security group.\n", "metadata": {"source_url": "https://kubevela.io/docs/tutorials/webservice", "title": "Deploying a Container-Based Application with KubeVela", "description": "This page introduces how to deploy a container-based application using KubeVela, covering the process through the UI console and CLI.", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-02-28 14:39:16", "type": "best_practices", "page_metadata": {"favicon": "https://kubevela.io/img/favicons/favicon.ico", "docsearch:docusaurus_tag": "docs-default-v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "docusaurus_locale": "en", "docsearch:version": "v1.10", "og:description": "Deploy the business application by kubevela", "viewport": "width=device-width, initial-scale=1.0", "generator": "Docusaurus v2.4.3", "title": "Deploy Container Image | KubeVela", "description": "Deploy the business application by kubevela", "theme-color": "#ffffff", "ogDescription": "Deploy the business application by kubevela", "docsearch:language": "en", "ogTitle": "Deploy Container Image | KubeVela", "twitter:card": "summary_large_image", "docusaurus_version": "v1.10", "og:url": "https://kubevela.io/docs/tutorials/webservice/", "docusaurus_tag": "docs-default-v1.10", "og:title": "Deploy Container Image | KubeVela", "ogUrl": "https://kubevela.io/docs/tutorials/webservice/", "language": "en", "scrapeId": "fd79b1a2-0d02-4197-8057-7ec838455969", "sourceURL": "https://kubevela.io/docs/tutorials/webservice", "url": "https://kubevela.io/docs/tutorials/webservice/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"vela show\"?\n\nAssistant: Show the reference doc for a component, trait, policy or workflow.\n\nHere's a detailed explanation:\n\n\n## Synopsis\nShow the reference doc for component, trait, policy or workflow types. 'vela show' equals with 'vela def show'.\n\n## Examples\n0. Run 'vela show' directly to start a web server for all reference docs.\n1. Generate documentation for ComponentDefinition webservice:\n> vela show webservice -n vela-system\n2. Generate documentation for local CUE Definition file webservice.cue:\n> vela show webservice.cue\n3. Generate documentation for local Cloud Resource Definition YAML alibaba-vpc.yaml:\n> vela show alibaba-vpc.yaml\n4. Specify output format, markdown supported:\n> vela show webservice --format markdown\n5. Specify a language for output, by default, it's english. You can also load your own translation script:\n> vela show webservice --location zh\n> vela show webservice --location zh --i18n https://kubevela.io/reference-i18n.json\n6. Show doc for a specified revision, it must exist in control plane cluster:\n> vela show webservice --revision v1\n7. Generate docs for all capabilities into folder $HOME/.vela/reference/docs/\n> vela show\n8. Generate all docs and start a doc server\n> vela show --web\n\n## Options\n  -e, --env string         specify environment name for application\n      --format string      specify format of output data, by default it's a pretty human readable format, you can specify markdown(md)\n  -h, --help               help for show\n      --i18n string        specify the location for of the doc generated from definition, now supported options 'zh', 'en'.  (default \"https://kubevela.io/reference-i18n.json\")\n  -l, --location string    specify the location for of the doc generated from definition, now supported options 'zh', 'en'.\n  -n, --namespace string   specify the Kubernetes namespace to use\n  -p, --path string        Specify the path for of the doc generated from definition.\n  -r, --revision string    Get the specified revision of a definition. Use def get to list revisions.\n      --web                start web doc site\n\n## Options inherited from parent commands\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_show", "title": "vela show", "description": "Show the reference doc for a component, trait, policy or workflow.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 14:39:48", "type": "overview", "page_metadata": {"viewport": "width=device-width, initial-scale=1.0", "docusaurus_version": "v1.10", "og:title": "vela show | KubeVela", "docusaurus_locale": "en", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:description": "Show the reference doc for a component, trait, policy or workflow.", "ogTitle": "vela show | KubeVela", "twitter:card": "summary_large_image", "docusaurus_tag": "docs-default-v1.10", "docsearch:language": "en", "description": "Show the reference doc for a component, trait, policy or workflow.", "og:url": "https://kubevela.io/docs/cli/vela_show/", "ogDescription": "Show the reference doc for a component, trait, policy or workflow.", "language": "en", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "theme-color": "#ffffff", "ogUrl": "https://kubevela.io/docs/cli/vela_show/", "title": "vela show | KubeVela", "generator": "Docusaurus v2.4.3", "msapplication-config": "/img/favicons/browserconfig.xml", "docsearch:version": "v1.10", "scrapeId": "579ccd48-5d99-4041-b29c-e5e03e0b2144", "sourceURL": "https://kubevela.io/docs/cli/vela_show", "url": "https://kubevela.io/docs/cli/vela_show/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"vela show\"?\n\nAssistant: Here are some code examples:\n\n### Command to show reference documentation\n```yaml\nvela show [flags]\n```\n\n### Example commands for 'vela show'\n```yaml\n0. Run 'vela show' directly to start a web server for all reference docs.\n1. Generate documentation for ComponentDefinition webservice:\n> vela show webservice -n vela-system\n2. Generate documentation for local CUE Definition file webservice.cue:\n> vela show webservice.cue\n3. Generate documentation for local Cloud Resource Definition YAML alibaba-vpc.yaml:\n> vela show alibaba-vpc.yaml\n4. Specify output format, markdown supported:\n> vela show webservice --format markdown\n5. Specify a language for output, by default, it's english. You can also load your own translation script:\n> vela show webservice --location zh\n> vela show webservice --location zh --i18n https://kubevela.io/reference-i18n.json\n6. Show doc for a specified revision, it must exist in control plane cluster:\n> vela show webservice --revision v1\n7. Generate docs for all capabilities into folder $HOME/.vela/reference/docs/\n> vela show\n8. Generate all docs and start a doc server\n> vela show --web\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_show", "title": "vela show", "description": "Show the reference doc for a component, trait, policy or workflow.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 14:39:48", "type": "code_examples", "page_metadata": {"viewport": "width=device-width, initial-scale=1.0", "docusaurus_version": "v1.10", "og:title": "vela show | KubeVela", "docusaurus_locale": "en", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:description": "Show the reference doc for a component, trait, policy or workflow.", "ogTitle": "vela show | KubeVela", "twitter:card": "summary_large_image", "docusaurus_tag": "docs-default-v1.10", "docsearch:language": "en", "description": "Show the reference doc for a component, trait, policy or workflow.", "og:url": "https://kubevela.io/docs/cli/vela_show/", "ogDescription": "Show the reference doc for a component, trait, policy or workflow.", "language": "en", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "theme-color": "#ffffff", "ogUrl": "https://kubevela.io/docs/cli/vela_show/", "title": "vela show | KubeVela", "generator": "Docusaurus v2.4.3", "msapplication-config": "/img/favicons/browserconfig.xml", "docsearch:version": "v1.10", "scrapeId": "579ccd48-5d99-4041-b29c-e5e03e0b2144", "sourceURL": "https://kubevela.io/docs/cli/vela_show", "url": "https://kubevela.io/docs/cli/vela_show/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"vela show\"?\n\nAssistant: Here are the recommended best practices:\n\n• Run 'vela show' directly to start a web server for all reference docs.\n• Specify output format, markdown supported.\n• Specify a language for output, by default, it's english. You can also load your own translation script.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_show", "title": "vela show", "description": "Show the reference doc for a component, trait, policy or workflow.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 14:39:48", "type": "best_practices", "page_metadata": {"viewport": "width=device-width, initial-scale=1.0", "docusaurus_version": "v1.10", "og:title": "vela show | KubeVela", "docusaurus_locale": "en", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:description": "Show the reference doc for a component, trait, policy or workflow.", "ogTitle": "vela show | KubeVela", "twitter:card": "summary_large_image", "docusaurus_tag": "docs-default-v1.10", "docsearch:language": "en", "description": "Show the reference doc for a component, trait, policy or workflow.", "og:url": "https://kubevela.io/docs/cli/vela_show/", "ogDescription": "Show the reference doc for a component, trait, policy or workflow.", "language": "en", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "theme-color": "#ffffff", "ogUrl": "https://kubevela.io/docs/cli/vela_show/", "title": "vela show | KubeVela", "generator": "Docusaurus v2.4.3", "msapplication-config": "/img/favicons/browserconfig.xml", "docsearch:version": "v1.10", "scrapeId": "579ccd48-5d99-4041-b29c-e5e03e0b2144", "sourceURL": "https://kubevela.io/docs/cli/vela_show", "url": "https://kubevela.io/docs/cli/vela_show/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela CLI - vela init\"?\n\nAssistant: Create scaffold for vela application.\n\nHere's a detailed explanation:\n\n\n## Synopsis\nCreate scaffold for vela application.\n\n## Examples\n```codeBlockLines_e6Vv\nvela init\n```\n\n## Options\n```codeBlockLines_e6Vv\n  -e, --env string         specify environment name for application\n  -h, --help               help for init\n  -n, --namespace string   specify the Kubernetes namespace to use\n      --render-only        Rendering vela.yaml in current dir and do not deploy\n```\n\n## Options inherited from parent commands\n```codeBlockLines_e6Vv\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n\n## SEE ALSO\nGo Back to [CLI Commands](https://kubevela.io/docs/cli/vela/) Homepage.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_init", "title": "KubeVela CLI - vela init", "description": "Create scaffold for vela application.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 14:39:53", "type": "overview", "page_metadata": {"docsearch:docusaurus_tag": "docs-default-v1.10", "generator": "Docusaurus v2.4.3", "msapplication-config": "/img/favicons/browserconfig.xml", "og:description": "Create scaffold for an application.", "ogUrl": "https://kubevela.io/docs/cli/vela_init/", "og:url": "https://kubevela.io/docs/cli/vela_init/", "ogTitle": "vela init | KubeVela", "theme-color": "#ffffff", "title": "vela init | KubeVela", "twitter:card": "summary_large_image", "docusaurus_locale": "en", "og:title": "vela init | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docsearch:version": "v1.10", "description": "Create scaffold for an application.", "viewport": "width=device-width, initial-scale=1.0", "docsearch:language": "en", "docusaurus_tag": "docs-default-v1.10", "ogDescription": "Create scaffold for an application.", "language": "en", "docusaurus_version": "v1.10", "scrapeId": "eb142d5f-2239-4ad8-a7c1-318ea50c3abd", "sourceURL": "https://kubevela.io/docs/cli/vela_init", "url": "https://kubevela.io/docs/cli/vela_init/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"KubeVela CLI - vela init\"?\n\nAssistant: Here are some code examples:\n\n### vela init\n```yaml\n```codeBlockLines_e6Vv\nvela init\n```\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_init", "title": "KubeVela CLI - vela init", "description": "Create scaffold for vela application.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 14:39:53", "type": "code_examples", "page_metadata": {"docsearch:docusaurus_tag": "docs-default-v1.10", "generator": "Docusaurus v2.4.3", "msapplication-config": "/img/favicons/browserconfig.xml", "og:description": "Create scaffold for an application.", "ogUrl": "https://kubevela.io/docs/cli/vela_init/", "og:url": "https://kubevela.io/docs/cli/vela_init/", "ogTitle": "vela init | KubeVela", "theme-color": "#ffffff", "title": "vela init | KubeVela", "twitter:card": "summary_large_image", "docusaurus_locale": "en", "og:title": "vela init | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docsearch:version": "v1.10", "description": "Create scaffold for an application.", "viewport": "width=device-width, initial-scale=1.0", "docsearch:language": "en", "docusaurus_tag": "docs-default-v1.10", "ogDescription": "Create scaffold for an application.", "language": "en", "docusaurus_version": "v1.10", "scrapeId": "eb142d5f-2239-4ad8-a7c1-318ea50c3abd", "sourceURL": "https://kubevela.io/docs/cli/vela_init", "url": "https://kubevela.io/docs/cli/vela_init/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela CLI - vela init\"?\n\nAssistant: Here are the recommended best practices:\n\n• If you like KubeVela, give it a star on GitHub!\n• Check the release notes for updates and new features.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_init", "title": "KubeVela CLI - vela init", "description": "Create scaffold for vela application.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 14:39:53", "type": "best_practices", "page_metadata": {"docsearch:docusaurus_tag": "docs-default-v1.10", "generator": "Docusaurus v2.4.3", "msapplication-config": "/img/favicons/browserconfig.xml", "og:description": "Create scaffold for an application.", "ogUrl": "https://kubevela.io/docs/cli/vela_init/", "og:url": "https://kubevela.io/docs/cli/vela_init/", "ogTitle": "vela init | KubeVela", "theme-color": "#ffffff", "title": "vela init | KubeVela", "twitter:card": "summary_large_image", "docusaurus_locale": "en", "og:title": "vela init | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docsearch:version": "v1.10", "description": "Create scaffold for an application.", "viewport": "width=device-width, initial-scale=1.0", "docsearch:language": "en", "docusaurus_tag": "docs-default-v1.10", "ogDescription": "Create scaffold for an application.", "language": "en", "docusaurus_version": "v1.10", "scrapeId": "eb142d5f-2239-4ad8-a7c1-318ea50c3abd", "sourceURL": "https://kubevela.io/docs/cli/vela_init", "url": "https://kubevela.io/docs/cli/vela_init/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela Contributor Overview\"?\n\nAssistant: This page provides a comprehensive guide for developers on how to extend KubeVela and contribute to the community.\n\nHere's a detailed explanation:\n\n\n## Extension Guide\nThis part is a guide to help you extend capabilities for KubeVela. Make sure you have already understand the [**core concepts**](https://kubevela.io/docs/getting-started/core-concept/) before you start.\n\n### Extend Addons\nBuilding or installing addons is the most important way to extend KubeVela, there's a growing [catalog](https://github.com/kubevela/catalog) of addons you can choose for installation. You can also share your platform extension by KubeVela addon registry.\n\n- [Build Your Own Addon](https://kubevela.io/docs/platform-engineers/addon/intro/).\n- [Build Your Addon Registry](https://kubevela.io/docs/platform-engineers/addon/addon-registry/).\n- [Extend Cloud Resources by Addon](https://kubevela.io/docs/platform-engineers/addon/terraform/).\n\n### Learn CUE to extend more powerful features\nKubeVela use CUE as it's core engine, and you can use CUE and CRD controller to glue almost every infrastructure capabilities.\nAs a result, you can extend more powerful features for your platform.\n\n- Start to [Learn Manage Definition with CUE](https://kubevela.io/docs/platform-engineers/cue/basic/).\n- Learn what is [CRD Controller](https://kubernetes.io/docs/concepts/extend-kubernetes/api-extension/custom-resources/) in Kubernetes.\n\n## Contribution Guide\nKubeVela project is initialized and maintained by the cloud native community since day 0 with [bootstrapping contributors from 8+ different organizations](https://github.com/kubevela/community/blob/main/OWNERS.md#bootstrap-contributors). We intend for KubeVela to have an open governance since the very beginning and donate the project to neutral foundation as soon as it's released.\n\nTo help us create a safe and positive community experience for all, we require all participants adhere to the CNCF Community [Code of Conduct](https://github.com/cncf/foundation/blob/main/code-of-conduct.md).\n\nThis part is a guide to help you through the process of contributing to KubeVela.\n\n### Become a contributor\nYou can contribute to KubeVela in several ways including code and non-code contributions,\nwe appreciate every effort you contribute to the community. Here are some examples:\n\n- Contribute to the codebase and docs.\n- Report and triage issues.\n- Organize meetups and user groups in your local area.\n- Help others by answering questions about KubeVela.\n\n### Non-code contribution\nThe Apache way says \"Community Over Code\". Although KubeVela is a CNCF/Linux project, we possess a strong resonance to it. To second and stretch this merit deeper, we regard non-coding contribution as equally important with code contribution for the community's very existence and its future growth.\n\n- Refer to [Non-code Contribution Guide](https://kubevela.io/docs/contributor/non-code-contribute/) to know how you could help.\n\n### Code contribution\nUnsure where to begin contributing to KubeVela codebase? Start by browsing issues labeled `good first issue` or `help wanted`.\n\n- [Good first issue](https://github.com/kubevela/kubevela/labels/good%20first%20issue) issues are generally straightforward to complete.\n- [Help wanted](https://github.com/kubevela/kubevela/labels/help%20wanted) issues are problems we would like the community to help us with regardless of complexity.\n- Refer to [Code Contribution Guide](https://kubevela.io/docs/contributor/code-contribute/) for more details.\n\nLearn the [Release Process And Cadence](https://kubevela.io/docs/contributor/release-process/) to know when your code changes will be released.\n\n### Become a community member\nIf you're interested to become a community member or learn more about the governance, please check the [community membership](https://github.com/kubevela/community/blob/main/community-membership.md) for details.\n\n### Contribute to other community projects\n- [VelaUX Developer Guide](https://github.com/kubevela/velaux/blob/main/CONTRIBUTING.md)\n- [Terraform Controller Developer Guide](https://github.com/oam-dev/terraform-controller/blob/master/CONTRIBUTING.md)\n\nEnjoy coding and collaboration in OSS world!\n", "metadata": {"source_url": "https://kubevela.io/docs/contributor/overview", "title": "KubeVela Contributor Overview", "description": "This page provides a comprehensive guide for developers on how to extend KubeVela and contribute to the community.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-02-28 14:40:11", "type": "overview", "page_metadata": {"docsearch:language": "en", "ogDescription": "The developer guide including two parts:", "ogTitle": "Developer Overview | KubeVela", "language": "en", "og:url": "https://kubevela.io/docs/contributor/overview/", "twitter:card": "summary_large_image", "docusaurus_locale": "en", "description": "The developer guide including two parts:", "og:description": "The developer guide including two parts:", "theme-color": "#ffffff", "docsearch:docusaurus_tag": "docs-default-v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "docusaurus_version": "v1.10", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogUrl": "https://kubevela.io/docs/contributor/overview/", "og:title": "Developer Overview | KubeVela", "title": "Developer Overview | KubeVela", "generator": "Docusaurus v2.4.3", "viewport": "width=device-width, initial-scale=1.0", "docusaurus_tag": "docs-default-v1.10", "docsearch:version": "v1.10", "scrapeId": "e8bc853d-f171-426b-84ef-c68bd09e51de", "sourceURL": "https://kubevela.io/docs/contributor/overview", "url": "https://kubevela.io/docs/contributor/overview/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela Contributor Overview\"?\n\nAssistant: Here are the recommended best practices:\n\n• Make sure you understand the core concepts before extending KubeVela.\n• Community Over Code: Non-code contributions are equally important as code contributions.\n", "metadata": {"source_url": "https://kubevela.io/docs/contributor/overview", "title": "KubeVela Contributor Overview", "description": "This page provides a comprehensive guide for developers on how to extend KubeVela and contribute to the community.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-02-28 14:40:11", "type": "best_practices", "page_metadata": {"docsearch:language": "en", "ogDescription": "The developer guide including two parts:", "ogTitle": "Developer Overview | KubeVela", "language": "en", "og:url": "https://kubevela.io/docs/contributor/overview/", "twitter:card": "summary_large_image", "docusaurus_locale": "en", "description": "The developer guide including two parts:", "og:description": "The developer guide including two parts:", "theme-color": "#ffffff", "docsearch:docusaurus_tag": "docs-default-v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "docusaurus_version": "v1.10", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogUrl": "https://kubevela.io/docs/contributor/overview/", "og:title": "Developer Overview | KubeVela", "title": "Developer Overview | KubeVela", "generator": "Docusaurus v2.4.3", "viewport": "width=device-width, initial-scale=1.0", "docusaurus_tag": "docs-default-v1.10", "docsearch:version": "v1.10", "scrapeId": "e8bc853d-f171-426b-84ef-c68bd09e51de", "sourceURL": "https://kubevela.io/docs/contributor/overview", "url": "https://kubevela.io/docs/contributor/overview/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela Adopt Command\"?\n\nAssistant: Adopt resources into new application.\n\nHere's a detailed explanation:\n\n\n## Synopsis\nAdopt resources into applications\n\nAdopt resources into a KubeVela application. This command is useful when you already have resources applied in your Kubernetes cluster. These resources could be applied natively or with other tools, such as Helm. This command will automatically find out the resources to be adopted and assemble them into a new application which won't trigger any damage such as restart on the adoption.\n\nThere are two types of adoption supported by far, 'native' Kubernetes resources (by default) and 'helm' releases. 1. For 'native' type, you can specify a list of resources you want to adopt in the application. Only resources in local cluster are supported for now. 2. For 'helm' type, you can specify a helm release name. This helm release should be already published in the local cluster. The command will find the resources managed by the helm release and convert them into an adoption application.\n\nThere are two working mechanism (called 'modes' here) for the adoption by far, 'read-only' mode (by default) and 'take-over' mode. 1. In 'read-only' mode, adopted resources will not be touched. You can leverage vela tools (like Vela CLI or VelaUX) to observe those resources and attach traits to add new capabilities. The adopted resources will not be recycled or updated. This mode is recommended if you still want to keep using other tools to manage resources updates or deletion, like Helm. 2. In 'take-over' mode, adopted resources are completely managed by application which means they can be modified. You can use traits or directly modify the component to make edits to those resources. This mode can be helpful if you want to migrate existing resources into KubeVela system and let KubeVela to handle the life-cycle of target resources.\n\nThe adopted application can be customized. You can provide a CUE template file to the command and make your own assemble rules for the adoption application. You can refer to https://github.com/kubevela/kubevela/blob/master/references/cli/adopt-templates/default.cue to see the default implementation of adoption rules.\n\nIf you want to adopt all resources with resource topology rule to Applications, you can use: 'vela adopt --all'. The resource topology rule can be customized by '--resource-topology-rule' flag.\n\n## Examples\n```codeBlockLines_e6Vv\n  # Native Resources Adoption\n\n  ## Adopt resources into new application\n\n  ## Adopt all resources to Applications with resource topology rule\n  ## Use: vela adopt <resources-type> --all\n  vela adopt --all\n  vela adopt deployment --all --resource-topology-rule myrule.cue\n\n  ## Use: vela adopt <resources-type>[/<resource-cluster>][/<resource-namespace>]/<resource-name> <resources-type>[/<resource-cluster>][/<resource-namespace>]/<resource-name> ...\n  vela adopt deployment/my-app configmap/my-app\n\n  ## Adopt resources into new application with specified app name\n  vela adopt deployment/my-deploy configmap/my-config --app-name my-app\n\n  ## Adopt resources into new application in specified namespace\n  vela adopt deployment/my-app configmap/my-app -n demo\n\n  ## Adopt resources into new application across multiple namespace\n  vela adopt deployment/ns-1/my-app configmap/ns-2/my-app\n\n  ## Adopt resources into new application with take-over mode\n  vela adopt deployment/my-app configmap/my-app --mode take-over\n\n  ## Adopt resources into new application and apply it into cluster\n  vela adopt deployment/my-app configmap/my-app --apply\n\n  -----------------------------------------------------------\n\n  # Helm Chart Adoption\n\n  ## Adopt all helm releases to Applications with resource topology rule\n  ## Use: vela adopt <resources-type> --all\n  vela adopt --all --type helm\n  vela adopt my-chart --all --resource-topology-rule myrule.cue --type helm\n\n  ## Adopt resources in a deployed helm chart\n  vela adopt my-chart -n my-namespace --type helm\n\n  ## Adopt resources in a deployed helm chart with take-over mode\n  vela adopt my-chart --type helm --mode take-over\n\n  ## Adopt resources in a deployed helm chart in an application and apply it into cluster\n  vela adopt my-chart --type helm --apply\n\n  ## Adopt resources in a deployed helm chart in an application, apply it into cluster, and recycle the old helm release after the adoption application successfully runs\n  vela adopt my-chart --type helm --apply --recycle\n\n  -----------------------------------------------------------\n\n  ## Customize your adoption rules\n  vela adopt my-chart -n my-namespace --type helm --adopt-template my-rules.cue\n```\n\n## Options\n```codeBlockLines_e6Vv\n      --adopt-template string           The CUE template for adoption. If not provided, the default template will be used when --auto is switched on.\n      --all                             Adopt all resources in the namespace\n      --app-name string                 The name of application for adoption. If empty for helm type adoption, it will inherit the helm chart's name.\n      --apply                           If true, the application for adoption will be applied. Otherwise, it will only be printed.\n  -d, --driver string                   The storage backend of helm adoption. Only take effect when --type=helm.\n  -e, --env string                      The environment name for the CLI request\n  -h, --help                            help for adopt\n  -m, --mode string                     The mode of adoption. Available values: [read-only, take-over] (default \"read-only\")\n  -n, --namespace string                If present, the namespace scope for this CLI request\n      --recycle                         If true, when the adoption application is successfully applied, the old storage (like Helm secret) will be recycled.\n      --resource-topology-rule string   The CUE template for specify the rule of the resource topology. If not provided, the default rule will be used.\n  -t, --type string                     The type of adoption. Available values: [native, helm] (default \"native\")\n  -y, --yes                             Skip confirmation prompt\n```\n\n## Options inherited from parent commands\n```codeBlockLines_e6Vv\n  -V, --verbosity Level   number for the log level verbosity\n```\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_adopt", "title": "KubeVela Adopt Command", "description": "Adopt resources into new application.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 14:40:38", "type": "overview", "page_metadata": {"twitter:card": "summary_large_image", "language": "en", "docsearch:language": "en", "msapplication-config": "/img/favicons/browserconfig.xml", "og:title": "vela adopt | KubeVela", "docsearch:version": "v1.10", "generator": "Docusaurus v2.4.3", "docsearch:docusaurus_tag": "docs-default-v1.10", "title": "vela adopt | KubeVela", "description": "Adopt resources into new application.", "ogTitle": "vela adopt | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_locale": "en", "og:description": "Adopt resources into new application.", "ogDescription": "Adopt resources into new application.", "og:url": "https://kubevela.io/docs/cli/vela_adopt/", "docusaurus_version": "v1.10", "docusaurus_tag": "docs-default-v1.10", "ogUrl": "https://kubevela.io/docs/cli/vela_adopt/", "theme-color": "#ffffff", "viewport": "width=device-width, initial-scale=1.0", "scrapeId": "0edafc21-45e7-4b67-b845-5866ee24a5d9", "sourceURL": "https://kubevela.io/docs/cli/vela_adopt", "url": "https://kubevela.io/docs/cli/vela_adopt/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"KubeVela Adopt Command\"?\n\nAssistant: Here are some code examples:\n\n### Basic Command\n```yaml\nvela adopt [flags]\n```\n\n### Native Resources Adoption Examples\n```yaml\nvela adopt --all\nvela adopt deployment --all --resource-topology-rule myrule.cue\nvela adopt deployment/my-app configmap/my-app\nvela adopt deployment/my-deploy configmap/my-config --app-name my-app\nvela adopt deployment/my-app configmap/my-app -n demo\nvela adopt deployment/ns-1/my-app configmap/ns-2/my-app\nvela adopt deployment/my-app configmap/my-app --mode take-over\nvela adopt deployment/my-app configmap/my-app --apply\n```\n\n### Helm Chart Adoption Examples\n```yaml\nvela adopt --all --type helm\nvela adopt my-chart --all --resource-topology-rule myrule.cue --type helm\nvela adopt my-chart -n my-namespace --type helm\nvela adopt my-chart --type helm --mode take-over\nvela adopt my-chart --type helm --apply\nvela adopt my-chart --type helm --apply --recycle\nvela adopt my-chart -n my-namespace --type helm --adopt-template my-rules.cue\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_adopt", "title": "KubeVela Adopt Command", "description": "Adopt resources into new application.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 14:40:38", "type": "code_examples", "page_metadata": {"twitter:card": "summary_large_image", "language": "en", "docsearch:language": "en", "msapplication-config": "/img/favicons/browserconfig.xml", "og:title": "vela adopt | KubeVela", "docsearch:version": "v1.10", "generator": "Docusaurus v2.4.3", "docsearch:docusaurus_tag": "docs-default-v1.10", "title": "vela adopt | KubeVela", "description": "Adopt resources into new application.", "ogTitle": "vela adopt | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_locale": "en", "og:description": "Adopt resources into new application.", "ogDescription": "Adopt resources into new application.", "og:url": "https://kubevela.io/docs/cli/vela_adopt/", "docusaurus_version": "v1.10", "docusaurus_tag": "docs-default-v1.10", "ogUrl": "https://kubevela.io/docs/cli/vela_adopt/", "theme-color": "#ffffff", "viewport": "width=device-width, initial-scale=1.0", "scrapeId": "0edafc21-45e7-4b67-b845-5866ee24a5d9", "sourceURL": "https://kubevela.io/docs/cli/vela_adopt", "url": "https://kubevela.io/docs/cli/vela_adopt/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela Adopt Command\"?\n\nAssistant: Here are the recommended best practices:\n\n• Use 'read-only' mode if you want to keep using other tools to manage resources updates or deletion, like Helm.\n• Use 'take-over' mode if you want to migrate existing resources into KubeVela system and let KubeVela handle the life-cycle of target resources.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_adopt", "title": "KubeVela Adopt Command", "description": "Adopt resources into new application.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 14:40:38", "type": "best_practices", "page_metadata": {"twitter:card": "summary_large_image", "language": "en", "docsearch:language": "en", "msapplication-config": "/img/favicons/browserconfig.xml", "og:title": "vela adopt | KubeVela", "docsearch:version": "v1.10", "generator": "Docusaurus v2.4.3", "docsearch:docusaurus_tag": "docs-default-v1.10", "title": "vela adopt | KubeVela", "description": "Adopt resources into new application.", "ogTitle": "vela adopt | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_locale": "en", "og:description": "Adopt resources into new application.", "ogDescription": "Adopt resources into new application.", "og:url": "https://kubevela.io/docs/cli/vela_adopt/", "docusaurus_version": "v1.10", "docusaurus_tag": "docs-default-v1.10", "ogUrl": "https://kubevela.io/docs/cli/vela_adopt/", "theme-color": "#ffffff", "viewport": "width=device-width, initial-scale=1.0", "scrapeId": "0edafc21-45e7-4b67-b845-5866ee24a5d9", "sourceURL": "https://kubevela.io/docs/cli/vela_adopt", "url": "https://kubevela.io/docs/cli/vela_adopt/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela Workflow Rollback\"?\n\nAssistant: Rollback an application workflow to the latest revision.\n\nHere's a detailed explanation:\n\n\n## Synopsis\nRollback an application workflow to the latest revision.\n\n## Examples\n`vela workflow rollback <application-name>`\n\n## Options\n  -e, --env string         specify environment name for application\n  -h, --help               help for rollback\n  -n, --namespace string   specify the Kubernetes namespace to use\n  -t, --type string        the type of the resource, support: [app, workflow]\n\n## Options inherited from parent commands\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n\n## SEE ALSO\n- [vela workflow](https://kubevela.io/docs/cli/vela_workflow/) \\- Operate application delivery workflow.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_workflow_rollback", "title": "KubeVela Workflow Rollback", "description": "Rollback an application workflow to the latest revision.", "has_code_examples": true, "has_best_practices": false, "section_count": 5, "timestamp": "2025-02-28 14:40:45", "type": "overview", "page_metadata": {"docusaurus_locale": "en", "og:url": "https://kubevela.io/docs/cli/vela_workflow_rollback/", "ogTitle": "vela workflow rollback | KubeVela", "ogDescription": "Rollback an application workflow to the latest revision.", "docsearch:language": "en", "docsearch:docusaurus_tag": "docs-default-v1.10", "docusaurus_tag": "docs-default-v1.10", "docsearch:version": "v1.10", "title": "vela workflow rollback | KubeVela", "og:title": "vela workflow rollback | KubeVela", "ogUrl": "https://kubevela.io/docs/cli/vela_workflow_rollback/", "description": "Rollback an application workflow to the latest revision.", "generator": "Docusaurus v2.4.3", "language": "en", "og:description": "Rollback an application workflow to the latest revision.", "msapplication-config": "/img/favicons/browserconfig.xml", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_version": "v1.10", "twitter:card": "summary_large_image", "theme-color": "#ffffff", "viewport": "width=device-width, initial-scale=1.0", "scrapeId": "115dfed1-0947-4251-a8cf-fef42e28bcfd", "sourceURL": "https://kubevela.io/docs/cli/vela_workflow_rollback", "url": "https://kubevela.io/docs/cli/vela_workflow_rollback/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"KubeVela Workflow Rollback\"?\n\nAssistant: Here are some code examples:\n\n### Rollback Command\n```yaml\nvela workflow rollback [flags]\n```\n\n### Rollback Example\n```yaml\nvela workflow rollback <application-name>\n```\n\n### Options Command\n```yaml\n  -e, --env string         specify environment name for application\n  -h, --help               help for rollback\n  -n, --namespace string   specify the Kubernetes namespace to use\n  -t, --type string        the type of the resource, support: [app, workflow]\n```\n\n### Inherited Options Command\n```yaml\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_workflow_rollback", "title": "KubeVela Workflow Rollback", "description": "Rollback an application workflow to the latest revision.", "has_code_examples": true, "has_best_practices": false, "section_count": 5, "timestamp": "2025-02-28 14:40:45", "type": "code_examples", "page_metadata": {"docusaurus_locale": "en", "og:url": "https://kubevela.io/docs/cli/vela_workflow_rollback/", "ogTitle": "vela workflow rollback | KubeVela", "ogDescription": "Rollback an application workflow to the latest revision.", "docsearch:language": "en", "docsearch:docusaurus_tag": "docs-default-v1.10", "docusaurus_tag": "docs-default-v1.10", "docsearch:version": "v1.10", "title": "vela workflow rollback | KubeVela", "og:title": "vela workflow rollback | KubeVela", "ogUrl": "https://kubevela.io/docs/cli/vela_workflow_rollback/", "description": "Rollback an application workflow to the latest revision.", "generator": "Docusaurus v2.4.3", "language": "en", "og:description": "Rollback an application workflow to the latest revision.", "msapplication-config": "/img/favicons/browserconfig.xml", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_version": "v1.10", "twitter:card": "summary_large_image", "theme-color": "#ffffff", "viewport": "width=device-width, initial-scale=1.0", "scrapeId": "115dfed1-0947-4251-a8cf-fef42e28bcfd", "sourceURL": "https://kubevela.io/docs/cli/vela_workflow_rollback", "url": "https://kubevela.io/docs/cli/vela_workflow_rollback/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela CLI - velaQL\"?\n\nAssistant: Show result of executing velaQL.\n\nHere's a detailed explanation:\n\n\n## Synopsis\nShow result of executing velaQL, use it like:\nvela ql --query \"inner-view-name{param1=value1,param2=value2}\"\nvela ql --file ./ql.cue\n\n## Examples\nUsers can query with a query statement:\n        vela ql --query \"inner-view-name{param1=value1,param2=value2}\"\n\n  Query by a ql file:\n        vela ql --file ./ql.cue\n  Query by a ql file from remote url:\n        vela ql --file https://my.host.to.cue/ql.cue\n  Query by a ql file from stdin:\n        cat ./ql.cue | vela ql --file -\n\nExample content of ql.cue:\n---\nimport (\n    \"vela/ql\"\n)\nconfigmap: ql.#Read & {\n   value: {\n      kind: \"ConfigMap\"\n      apiVersion: \"v1\"\n      metadata: {\n        name: \"mycm\"\n      }\n   }\n}\nstatus: configmap.value.data.key\n\nexport: \"status\"\n---\n\n## Options\n  -f, --file string    The CUE file path for VelaQL, it could be a remote url.\n  -h, --help           help for ql\n  -q, --query string   The query statement for VelaQL.\n\n## Options inherited from parent commands\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n\n## SEE ALSO\n- [vela ql apply](https://kubevela.io/docs/cli/vela_ql_apply/) \\- Create and store a VelaQL view\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_ql", "title": "KubeVela CLI - velaQL", "description": "Show result of executing velaQL.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 14:40:58", "type": "overview", "page_metadata": {"docusaurus_version": "v1.10", "og:title": "vela ql | KubeVela", "og:url": "https://kubevela.io/docs/cli/vela_ql/", "docusaurus_locale": "en", "msapplication-config": "/img/favicons/browserconfig.xml", "ogDescription": "Show result of executing velaQL.", "viewport": "width=device-width, initial-scale=1.0", "ogTitle": "vela ql | KubeVela", "ogUrl": "https://kubevela.io/docs/cli/vela_ql/", "generator": "Docusaurus v2.4.3", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docsearch:language": "en", "docsearch:version": "v1.10", "language": "en", "og:description": "Show result of executing velaQL.", "docsearch:docusaurus_tag": "docs-default-v1.10", "theme-color": "#ffffff", "docusaurus_tag": "docs-default-v1.10", "twitter:card": "summary_large_image", "description": "Show result of executing velaQL.", "title": "vela ql | KubeVela", "scrapeId": "1fbb9f20-2b3a-4dbb-859c-1a9fc19e6a7d", "sourceURL": "https://kubevela.io/docs/cli/vela_ql", "url": "https://kubevela.io/docs/cli/vela_ql/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"KubeVela CLI - velaQL\"?\n\nAssistant: Here are some code examples:\n\n### Basic velaQL Command\n```yaml\nvela ql [flags]\n```\n\n### Query Examples\n```yaml\nUsers can query with a query statement:\n        vela ql --query \"inner-view-name{param1=value1,param2=value2}\"\n\n  Query by a ql file:\n        vela ql --file ./ql.cue\n  Query by a ql file from remote url:\n        vela ql --file https://my.host.to.cue/ql.cue\n  Query by a ql file from stdin:\n        cat ./ql.cue | vela ql --file -\n\nExample content of ql.cue:\n---\nimport (\n    \"vela/ql\"\n)\nconfigmap: ql.#Read & {\n   value: {\n      kind: \"ConfigMap\"\n      apiVersion: \"v1\"\n      metadata: {\n        name: \"mycm\"\n      }\n   }\n}\nstatus: configmap.value.data.key\n\nexport: \"status\"\n---\n```\n\n### Options for velaQL\n```yaml\n  -f, --file string    The CUE file path for VelaQL, it could be a remote url.\n  -h, --help           help for ql\n  -q, --query string   The query statement for VelaQL.\n```\n\n### Inherited Options\n```yaml\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts.\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_ql", "title": "KubeVela CLI - velaQL", "description": "Show result of executing velaQL.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 14:40:58", "type": "code_examples", "page_metadata": {"docusaurus_version": "v1.10", "og:title": "vela ql | KubeVela", "og:url": "https://kubevela.io/docs/cli/vela_ql/", "docusaurus_locale": "en", "msapplication-config": "/img/favicons/browserconfig.xml", "ogDescription": "Show result of executing velaQL.", "viewport": "width=device-width, initial-scale=1.0", "ogTitle": "vela ql | KubeVela", "ogUrl": "https://kubevela.io/docs/cli/vela_ql/", "generator": "Docusaurus v2.4.3", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docsearch:language": "en", "docsearch:version": "v1.10", "language": "en", "og:description": "Show result of executing velaQL.", "docsearch:docusaurus_tag": "docs-default-v1.10", "theme-color": "#ffffff", "docusaurus_tag": "docs-default-v1.10", "twitter:card": "summary_large_image", "description": "Show result of executing velaQL.", "title": "vela ql | KubeVela", "scrapeId": "1fbb9f20-2b3a-4dbb-859c-1a9fc19e6a7d", "sourceURL": "https://kubevela.io/docs/cli/vela_ql", "url": "https://kubevela.io/docs/cli/vela_ql/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela CLI - velaQL\"?\n\nAssistant: Here are the recommended best practices:\n\n• Use the query statement to filter results effectively.\n• Utilize CUE files for complex queries and configurations.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_ql", "title": "KubeVela CLI - velaQL", "description": "Show result of executing velaQL.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 14:40:58", "type": "best_practices", "page_metadata": {"docusaurus_version": "v1.10", "og:title": "vela ql | KubeVela", "og:url": "https://kubevela.io/docs/cli/vela_ql/", "docusaurus_locale": "en", "msapplication-config": "/img/favicons/browserconfig.xml", "ogDescription": "Show result of executing velaQL.", "viewport": "width=device-width, initial-scale=1.0", "ogTitle": "vela ql | KubeVela", "ogUrl": "https://kubevela.io/docs/cli/vela_ql/", "generator": "Docusaurus v2.4.3", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docsearch:language": "en", "docsearch:version": "v1.10", "language": "en", "og:description": "Show result of executing velaQL.", "docsearch:docusaurus_tag": "docs-default-v1.10", "theme-color": "#ffffff", "docusaurus_tag": "docs-default-v1.10", "twitter:card": "summary_large_image", "description": "Show result of executing velaQL.", "title": "vela ql | KubeVela", "scrapeId": "1fbb9f20-2b3a-4dbb-859c-1a9fc19e6a7d", "sourceURL": "https://kubevela.io/docs/cli/vela_ql", "url": "https://kubevela.io/docs/cli/vela_ql/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"Deploying Helm Chart with KubeVela\"?\n\nAssistant: This section introduces how you deploy Helm Chart using KubeVela, including enabling addons, creating applications, and deploying via CLI and UI.\n\nHere's a detailed explanation:\n\n\n## Before starting\n- Choose a Helm Chart you want to deploy. In the tutorial, we take [bitnami/redis](https://github.com/bitnami/charts/tree/master/bitnami/redis) as an example.\n- If you are using [bitnami/redis](https://github.com/bitnami/charts/tree/master/bitnami/redis), check if the chart version you specified is still listed [here](https://artifacthub.io/packages/helm/bitnami/redis) and available.\n- Ensure that the cluster you deliver has a usable default StorageClass. Most of our delivery middleware requires data persistence, and the default StorageClass is needed to allocate PV.\n- Make sure you have VelaUX addon enabled for UI console. If you are only CLI users, you can skip to [Deploy via CLI](https://kubevela.io/docs/tutorials/helm/#deploy-via-cli)\n", "metadata": {"source_url": "https://kubevela.io/docs/tutorials/helm", "title": "Deploying Helm Chart with KubeVela", "description": "This section introduces how you deploy Helm Chart using KubeVela, including enabling addons, creating applications, and deploying via CLI and UI.", "has_code_examples": true, "has_best_practices": true, "section_count": 1, "timestamp": "2025-02-28 14:41:08", "type": "overview", "page_metadata": {"docsearch:version": "v1.10", "docusaurus_version": "v1.10", "title": "Deploy Helm Chart | KubeVela", "ogUrl": "https://kubevela.io/docs/tutorials/helm/", "og:url": "https://kubevela.io/docs/tutorials/helm/", "ogTitle": "Deploy Helm Chart | KubeVela", "generator": "Docusaurus v2.4.3", "docusaurus_locale": "en", "docsearch:language": "en", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:title": "Deploy Helm Chart | KubeVela", "og:description": "This section introduces how you deploy Helm Chart.", "viewport": "width=device-width, initial-scale=1.0", "twitter:card": "summary_large_image", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "theme-color": "#ffffff", "docusaurus_tag": "docs-default-v1.10", "language": "en", "ogDescription": "This section introduces how you deploy Helm Chart.", "description": "This section introduces how you deploy Helm Chart.", "msapplication-config": "/img/favicons/browserconfig.xml", "scrapeId": "0f237fd8-1ffb-4679-b013-e5f890341922", "sourceURL": "https://kubevela.io/docs/tutorials/helm", "url": "https://kubevela.io/docs/tutorials/helm/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"Deploying Helm Chart with KubeVela\"?\n\nAssistant: Here are some code examples:\n\n### Enable VelaUX addon\n```yaml\nvela addon enable velaux\n```\n\n### Enable fluxcd addon\n```yaml\nvela addon enable fluxcd\n```\n\n### Show helm parameters\n```yaml\nvela show helm\n```\n\n### Deploy Redis application\n```yaml\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: helm-redis\nspec:\n  components:\n    - name: redis\n      type: helm\n      properties:\n        repoType: \"helm\"\n        url: \"https://charts.bitnami.com/bitnami\"\n        chart: \"redis\"\n        version: \"17.7.3\"\n        values:\n          master:\n            persistence:\n              size: 16Gi\n          replica:\n            persistence:\n              size: 16Gi\n\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/tutorials/helm", "title": "Deploying Helm Chart with KubeVela", "description": "This section introduces how you deploy Helm Chart using KubeVela, including enabling addons, creating applications, and deploying via CLI and UI.", "has_code_examples": true, "has_best_practices": true, "section_count": 1, "timestamp": "2025-02-28 14:41:08", "type": "code_examples", "page_metadata": {"docsearch:version": "v1.10", "docusaurus_version": "v1.10", "title": "Deploy Helm Chart | KubeVela", "ogUrl": "https://kubevela.io/docs/tutorials/helm/", "og:url": "https://kubevela.io/docs/tutorials/helm/", "ogTitle": "Deploy Helm Chart | KubeVela", "generator": "Docusaurus v2.4.3", "docusaurus_locale": "en", "docsearch:language": "en", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:title": "Deploy Helm Chart | KubeVela", "og:description": "This section introduces how you deploy Helm Chart.", "viewport": "width=device-width, initial-scale=1.0", "twitter:card": "summary_large_image", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "theme-color": "#ffffff", "docusaurus_tag": "docs-default-v1.10", "language": "en", "ogDescription": "This section introduces how you deploy Helm Chart.", "description": "This section introduces how you deploy Helm Chart.", "msapplication-config": "/img/favicons/browserconfig.xml", "scrapeId": "0f237fd8-1ffb-4679-b013-e5f890341922", "sourceURL": "https://kubevela.io/docs/tutorials/helm", "url": "https://kubevela.io/docs/tutorials/helm/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"Deploying Helm Chart with KubeVela\"?\n\nAssistant: Here are the recommended best practices:\n\n• Ensure the cluster has a usable default StorageClass for data persistence.\n• Check the chart version availability before deployment.\n• Use the VelaUX addon for a better UI experience when deploying applications.\n", "metadata": {"source_url": "https://kubevela.io/docs/tutorials/helm", "title": "Deploying Helm Chart with KubeVela", "description": "This section introduces how you deploy Helm Chart using KubeVela, including enabling addons, creating applications, and deploying via CLI and UI.", "has_code_examples": true, "has_best_practices": true, "section_count": 1, "timestamp": "2025-02-28 14:41:08", "type": "best_practices", "page_metadata": {"docsearch:version": "v1.10", "docusaurus_version": "v1.10", "title": "Deploy Helm Chart | KubeVela", "ogUrl": "https://kubevela.io/docs/tutorials/helm/", "og:url": "https://kubevela.io/docs/tutorials/helm/", "ogTitle": "Deploy Helm Chart | KubeVela", "generator": "Docusaurus v2.4.3", "docusaurus_locale": "en", "docsearch:language": "en", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:title": "Deploy Helm Chart | KubeVela", "og:description": "This section introduces how you deploy Helm Chart.", "viewport": "width=device-width, initial-scale=1.0", "twitter:card": "summary_large_image", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "theme-color": "#ffffff", "docusaurus_tag": "docs-default-v1.10", "language": "en", "ogDescription": "This section introduces how you deploy Helm Chart.", "description": "This section introduces how you deploy Helm Chart.", "msapplication-config": "/img/favicons/browserconfig.xml", "scrapeId": "0f237fd8-1ffb-4679-b013-e5f890341922", "sourceURL": "https://kubevela.io/docs/tutorials/helm", "url": "https://kubevela.io/docs/tutorials/helm/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela CLI Completion\"?\n\nAssistant: Output shell completion code for the specified shell (bash or zsh).\n\nHere's a detailed explanation:\n\n\n## Synopsis\nOutput shell completion code for the specified shell (bash or zsh). The shell code must be evaluated to provide interactive completion of vela commands.\n\n## Options\n```codeBlockLines_e6Vv\n  -h, --help   help for completion\n```\n\n## Options inherited from parent commands\n```codeBlockLines_e6Vv\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n\n## SEE ALSO\n- [vela completion bash](https://kubevela.io/docs/cli/vela_completion_bash/) \\- generate autocompletions script for bash\n- [vela completion zsh](https://kubevela.io/docs/cli/vela_completion_zsh/) \\- generate autocompletions script for zsh\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_completion", "title": "KubeVela CLI Completion", "description": "Output shell completion code for the specified shell (bash or zsh).", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 14:41:14", "type": "overview", "page_metadata": {"favicon": "https://kubevela.io/img/favicons/favicon.ico", "og:title": "vela completion | KubeVela", "ogDescription": "Output shell completion code for the specified shell (bash or zsh).", "og:url": "https://kubevela.io/docs/cli/vela_completion/", "og:description": "Output shell completion code for the specified shell (bash or zsh).", "viewport": "width=device-width, initial-scale=1.0", "docusaurus_version": "v1.10", "ogUrl": "https://kubevela.io/docs/cli/vela_completion/", "msapplication-config": "/img/favicons/browserconfig.xml", "ogTitle": "vela completion | KubeVela", "docsearch:version": "v1.10", "docsearch:language": "en", "title": "vela completion | KubeVela", "docusaurus_locale": "en", "description": "Output shell completion code for the specified shell (bash or zsh).", "docsearch:docusaurus_tag": "docs-default-v1.10", "generator": "Docusaurus v2.4.3", "theme-color": "#ffffff", "twitter:card": "summary_large_image", "language": "en", "docusaurus_tag": "docs-default-v1.10", "scrapeId": "76acc5c2-9a08-4972-a1ed-3f956cb024a5", "sourceURL": "https://kubevela.io/docs/cli/vela_completion", "url": "https://kubevela.io/docs/cli/vela_completion/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"KubeVela CLI Completion\"?\n\nAssistant: Here are some code examples:\n\n### Options\n```yaml\n```codeBlockLines_e6Vv\n  -h, --help   help for completion\n```\n```\n\n### Options inherited from parent commands\n```yaml\n```codeBlockLines_e6Vv\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_completion", "title": "KubeVela CLI Completion", "description": "Output shell completion code for the specified shell (bash or zsh).", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 14:41:14", "type": "code_examples", "page_metadata": {"favicon": "https://kubevela.io/img/favicons/favicon.ico", "og:title": "vela completion | KubeVela", "ogDescription": "Output shell completion code for the specified shell (bash or zsh).", "og:url": "https://kubevela.io/docs/cli/vela_completion/", "og:description": "Output shell completion code for the specified shell (bash or zsh).", "viewport": "width=device-width, initial-scale=1.0", "docusaurus_version": "v1.10", "ogUrl": "https://kubevela.io/docs/cli/vela_completion/", "msapplication-config": "/img/favicons/browserconfig.xml", "ogTitle": "vela completion | KubeVela", "docsearch:version": "v1.10", "docsearch:language": "en", "title": "vela completion | KubeVela", "docusaurus_locale": "en", "description": "Output shell completion code for the specified shell (bash or zsh).", "docsearch:docusaurus_tag": "docs-default-v1.10", "generator": "Docusaurus v2.4.3", "theme-color": "#ffffff", "twitter:card": "summary_large_image", "language": "en", "docusaurus_tag": "docs-default-v1.10", "scrapeId": "76acc5c2-9a08-4972-a1ed-3f956cb024a5", "sourceURL": "https://kubevela.io/docs/cli/vela_completion", "url": "https://kubevela.io/docs/cli/vela_completion/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela CLI Completion\"?\n\nAssistant: Here are the recommended best practices:\n\n• Evaluate the shell code to provide interactive completion of vela commands.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_completion", "title": "KubeVela CLI Completion", "description": "Output shell completion code for the specified shell (bash or zsh).", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 14:41:14", "type": "best_practices", "page_metadata": {"favicon": "https://kubevela.io/img/favicons/favicon.ico", "og:title": "vela completion | KubeVela", "ogDescription": "Output shell completion code for the specified shell (bash or zsh).", "og:url": "https://kubevela.io/docs/cli/vela_completion/", "og:description": "Output shell completion code for the specified shell (bash or zsh).", "viewport": "width=device-width, initial-scale=1.0", "docusaurus_version": "v1.10", "ogUrl": "https://kubevela.io/docs/cli/vela_completion/", "msapplication-config": "/img/favicons/browserconfig.xml", "ogTitle": "vela completion | KubeVela", "docsearch:version": "v1.10", "docsearch:language": "en", "title": "vela completion | KubeVela", "docusaurus_locale": "en", "description": "Output shell completion code for the specified shell (bash or zsh).", "docsearch:docusaurus_tag": "docs-default-v1.10", "generator": "Docusaurus v2.4.3", "theme-color": "#ffffff", "twitter:card": "summary_large_image", "language": "en", "docusaurus_tag": "docs-default-v1.10", "scrapeId": "76acc5c2-9a08-4972-a1ed-3f956cb024a5", "sourceURL": "https://kubevela.io/docs/cli/vela_completion", "url": "https://kubevela.io/docs/cli/vela_completion/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela Uninstall Command\"?\n\nAssistant: Uninstalls KubeVela from a Kubernetes cluster.\n\nHere's a detailed explanation:\n\n\n## Synopsis\nUninstalls KubeVela from a Kubernetes cluster.\n\n## Examples\n```codeBlockLines_e6Vv\nvela uninstall\n```\n\n## Options\n```codeBlockLines_e6Vv\n  -d, --detail             show detail log of installation (default true)\n  -f, --force              force uninstall whole vela include all addons\n  -h, --help               help for uninstall\n  -n, --namespace string   namespace scope for installing KubeVela Core (default \"vela-system\")\n```\n\n## Options inherited from parent commands\n```codeBlockLines_e6Vv\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n\n## SEE ALSO\nGo Back to [CLI Commands](https://kubevela.io/docs/cli/vela/) Homepage.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_uninstall", "title": "KubeVela Uninstall Command", "description": "Uninstalls KubeVela from a Kubernetes cluster.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 14:41:22", "type": "overview", "page_metadata": {"ogUrl": "https://kubevela.io/docs/cli/vela_uninstall/", "docsearch:language": "en", "og:title": "vela uninstall | KubeVela", "docsearch:version": "v1.10", "description": "Uninstalls KubeVela from a Kubernetes cluster.", "docusaurus_version": "v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "generator": "Docusaurus v2.4.3", "twitter:card": "summary_large_image", "docusaurus_tag": "docs-default-v1.10", "theme-color": "#ffffff", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "language": "en", "ogDescription": "Uninstalls KubeVela from a Kubernetes cluster.", "og:url": "https://kubevela.io/docs/cli/vela_uninstall/", "title": "vela uninstall | KubeVela", "ogTitle": "vela uninstall | KubeVela", "docusaurus_locale": "en", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:description": "Uninstalls KubeVela from a Kubernetes cluster.", "viewport": "width=device-width, initial-scale=1.0", "scrapeId": "fd16c6c3-2e95-4286-b2d5-22cba221db49", "sourceURL": "https://kubevela.io/docs/cli/vela_uninstall", "url": "https://kubevela.io/docs/cli/vela_uninstall/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"KubeVela Uninstall Command\"?\n\nAssistant: Here are some code examples:\n\n### Uninstall Command Example\n```yaml\n```codeBlockLines_e6Vv\nvela uninstall\n```\n```\n\n### Options for Uninstall Command\n```yaml\n```codeBlockLines_e6Vv\n  -d, --detail             show detail log of installation (default true)\n  -f, --force              force uninstall whole vela include all addons\n  -h, --help               help for uninstall\n  -n, --namespace string   namespace scope for installing KubeVela Core (default \"vela-system\")\n```\n```\n\n### Inherited Options\n```yaml\n```codeBlockLines_e6Vv\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_uninstall", "title": "KubeVela Uninstall Command", "description": "Uninstalls KubeVela from a Kubernetes cluster.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 14:41:22", "type": "code_examples", "page_metadata": {"ogUrl": "https://kubevela.io/docs/cli/vela_uninstall/", "docsearch:language": "en", "og:title": "vela uninstall | KubeVela", "docsearch:version": "v1.10", "description": "Uninstalls KubeVela from a Kubernetes cluster.", "docusaurus_version": "v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "generator": "Docusaurus v2.4.3", "twitter:card": "summary_large_image", "docusaurus_tag": "docs-default-v1.10", "theme-color": "#ffffff", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "language": "en", "ogDescription": "Uninstalls KubeVela from a Kubernetes cluster.", "og:url": "https://kubevela.io/docs/cli/vela_uninstall/", "title": "vela uninstall | KubeVela", "ogTitle": "vela uninstall | KubeVela", "docusaurus_locale": "en", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:description": "Uninstalls KubeVela from a Kubernetes cluster.", "viewport": "width=device-width, initial-scale=1.0", "scrapeId": "fd16c6c3-2e95-4286-b2d5-22cba221db49", "sourceURL": "https://kubevela.io/docs/cli/vela_uninstall", "url": "https://kubevela.io/docs/cli/vela_uninstall/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela Uninstall Command\"?\n\nAssistant: Here are the recommended best practices:\n\n• Use the -f flag to force uninstall all addons if necessary.\n• Always check the namespace scope with the -n flag before uninstalling.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_uninstall", "title": "KubeVela Uninstall Command", "description": "Uninstalls KubeVela from a Kubernetes cluster.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 14:41:22", "type": "best_practices", "page_metadata": {"ogUrl": "https://kubevela.io/docs/cli/vela_uninstall/", "docsearch:language": "en", "og:title": "vela uninstall | KubeVela", "docsearch:version": "v1.10", "description": "Uninstalls KubeVela from a Kubernetes cluster.", "docusaurus_version": "v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "generator": "Docusaurus v2.4.3", "twitter:card": "summary_large_image", "docusaurus_tag": "docs-default-v1.10", "theme-color": "#ffffff", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "language": "en", "ogDescription": "Uninstalls KubeVela from a Kubernetes cluster.", "og:url": "https://kubevela.io/docs/cli/vela_uninstall/", "title": "vela uninstall | KubeVela", "ogTitle": "vela uninstall | KubeVela", "docusaurus_locale": "en", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:description": "Uninstalls KubeVela from a Kubernetes cluster.", "viewport": "width=device-width, initial-scale=1.0", "scrapeId": "fd16c6c3-2e95-4286-b2d5-22cba221db49", "sourceURL": "https://kubevela.io/docs/cli/vela_uninstall", "url": "https://kubevela.io/docs/cli/vela_uninstall/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"Vela Status Command\"?\n\nAssistant: Show status of vela application.\n\nHere's a detailed explanation:\n\n\n## Synopsis\nShow status of vela application.\n\n## Examples\n```bash\n  # Get basic app info\n  vela status APP_NAME\n\n  # Show detailed info in tree\n  vela status first-vela-app --tree --detail --detail-format list\n\n  # Show pod list\n  vela status first-vela-app --pod\n  vela status first-vela-app --pod --component express-server --cluster local\n\n  # Show endpoint list\n  vela status first-vela-app --endpoint\n\n  # Get raw Application yaml (without managedFields)\n  vela status first-vela-app -o yaml\n\n  # Get raw Application status using jsonpath\n  vela status first-vela-app -o jsonpath='{.status}'\n\n  # Get Application metrics status\n  vela status first-vela-app --metrics\n```\n\n## Options\n```bash\n      --cluster string         filter the endpoints or pods by cluster name\n  -c, --component string       filter the endpoints or pods by component name\n  -d, --detail                 display more details in the application like input/output data in context. Note that if you want to show the realtime details of application resources, please use it with --tree\n      --detail-format string   the format for displaying details, must be used with --detail. Can be one of inline, wide, list, table, raw. (default \"inline\")\n  -p, --endpoint               show all service endpoints of the application\n  -e, --env string             specify environment name for application\n  -h, --help                   help for status\n  -m, --metrics                show resource quota and consumption metrics of the application\n  -n, --namespace string       specify the Kubernetes namespace to use\n  -o, --output string          raw Application output format. One of: (json, yaml, jsonpath)\n      --pod                    show pod list of the application\n  -s, --svc string             service name\n  -t, --tree                   display the application resources into tree structure\n```\n\n## Options inherited from parent commands\n```bash\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n\n## SEE ALSO\nGo Back to [CLI Commands](https://kubevela.io/docs/cli/vela/) Homepage.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_status", "title": "Vela Status Command", "description": "Show status of vela application.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 14:41:39", "type": "overview", "page_metadata": {"docsearch:language": "en", "title": "vela status | KubeVela", "docsearch:docusaurus_tag": "docs-default-v1.10", "twitter:card": "summary_large_image", "description": "Show status of an application.", "ogTitle": "vela status | KubeVela", "og:url": "https://kubevela.io/docs/cli/vela_status/", "msapplication-config": "/img/favicons/browserconfig.xml", "docusaurus_tag": "docs-default-v1.10", "theme-color": "#ffffff", "ogDescription": "Show status of an application.", "og:title": "vela status | KubeVela", "og:description": "Show status of an application.", "docusaurus_locale": "en", "ogUrl": "https://kubevela.io/docs/cli/vela_status/", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docsearch:version": "v1.10", "generator": "Docusaurus v2.4.3", "docusaurus_version": "v1.10", "language": "en", "viewport": "width=device-width, initial-scale=1.0", "scrapeId": "b37b6ec2-4024-4bd8-b49a-102a04c32a4e", "sourceURL": "https://kubevela.io/docs/cli/vela_status", "url": "https://kubevela.io/docs/cli/vela_status/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"Vela Status Command\"?\n\nAssistant: Here are some code examples:\n\n### Vela Status Command Examples\n```yaml\n```bash\n  # Get basic app info\n  vela status APP_NAME\n\n  # Show detailed info in tree\n  vela status first-vela-app --tree --detail --detail-format list\n\n  # Show pod list\n  vela status first-vela-app --pod\n  vela status first-vela-app --pod --component express-server --cluster local\n\n  # Show endpoint list\n  vela status first-vela-app --endpoint\n\n  # Get raw Application yaml (without managedFields)\n  vela status first-vela-app -o yaml\n\n  # Get raw Application status using jsonpath\n  vela status first-vela-app -o jsonpath='{.status}'\n\n  # Get Application metrics status\n  vela status first-vela-app --metrics\n```\n```\n\n### Options Command Examples\n```yaml\n```bash\n      --cluster string         filter the endpoints or pods by cluster name\n  -c, --component string       filter the endpoints or pods by component name\n  -d, --detail                 display more details in the application like input/output data in context. Note that if you want to show the realtime details of application resources, please use it with --tree\n      --detail-format string   the format for displaying details, must be used with --detail. Can be one of inline, wide, list, table, raw. (default \"inline\")\n  -p, --endpoint               show all service endpoints of the application\n  -e, --env string             specify environment name for application\n  -h, --help                   help for status\n  -m, --metrics                show resource quota and consumption metrics of the application\n  -n, --namespace string       specify the Kubernetes namespace to use\n  -o, --output string          raw Application output format. One of: (json, yaml, jsonpath)\n      --pod                    show pod list of the application\n  -s, --svc string             service name\n  -t, --tree                   display the application resources into tree structure\n```\n```\n\n### Options Inherited from Parent Commands\n```yaml\n```bash\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_status", "title": "Vela Status Command", "description": "Show status of vela application.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 14:41:39", "type": "code_examples", "page_metadata": {"docsearch:language": "en", "title": "vela status | KubeVela", "docsearch:docusaurus_tag": "docs-default-v1.10", "twitter:card": "summary_large_image", "description": "Show status of an application.", "ogTitle": "vela status | KubeVela", "og:url": "https://kubevela.io/docs/cli/vela_status/", "msapplication-config": "/img/favicons/browserconfig.xml", "docusaurus_tag": "docs-default-v1.10", "theme-color": "#ffffff", "ogDescription": "Show status of an application.", "og:title": "vela status | KubeVela", "og:description": "Show status of an application.", "docusaurus_locale": "en", "ogUrl": "https://kubevela.io/docs/cli/vela_status/", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docsearch:version": "v1.10", "generator": "Docusaurus v2.4.3", "docusaurus_version": "v1.10", "language": "en", "viewport": "width=device-width, initial-scale=1.0", "scrapeId": "b37b6ec2-4024-4bd8-b49a-102a04c32a4e", "sourceURL": "https://kubevela.io/docs/cli/vela_status", "url": "https://kubevela.io/docs/cli/vela_status/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"Vela Status Command\"?\n\nAssistant: Here are the recommended best practices:\n\n• Use the --tree option with --detail to show real-time details of application resources.\n• Specify the environment name for the application using the -e or --env option.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_status", "title": "Vela Status Command", "description": "Show status of vela application.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 14:41:39", "type": "best_practices", "page_metadata": {"docsearch:language": "en", "title": "vela status | KubeVela", "docsearch:docusaurus_tag": "docs-default-v1.10", "twitter:card": "summary_large_image", "description": "Show status of an application.", "ogTitle": "vela status | KubeVela", "og:url": "https://kubevela.io/docs/cli/vela_status/", "msapplication-config": "/img/favicons/browserconfig.xml", "docusaurus_tag": "docs-default-v1.10", "theme-color": "#ffffff", "ogDescription": "Show status of an application.", "og:title": "vela status | KubeVela", "og:description": "Show status of an application.", "docusaurus_locale": "en", "ogUrl": "https://kubevela.io/docs/cli/vela_status/", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docsearch:version": "v1.10", "generator": "Docusaurus v2.4.3", "docusaurus_version": "v1.10", "language": "en", "viewport": "width=device-width, initial-scale=1.0", "scrapeId": "b37b6ec2-4024-4bd8-b49a-102a04c32a4e", "sourceURL": "https://kubevela.io/docs/cli/vela_status", "url": "https://kubevela.io/docs/cli/vela_status/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela Scaler Tutorial\"?\n\nAssistant: This page introduces how to manually modify replicas to apply in KubeVela.\n\nHere's a detailed explanation:\n\n\n## Before starting\n- You've walked through at least one type of application deployment.\n\n## Attaching Trait\nKubeVela has a built-in `scaler` Trait by default, which supports the adjustment of replicas in typical workloads, such as `webservice` and `k8s-objects` applications.\n\n> For k8s-objects type applications, when multiple resources are involved, please put the workload resources such as Deployment, Statefulset, Job in the first place so that the Trait of `scaler` can take effect.\n\nLet's take first-vela-app in `Deliver First Application` as an example. First, open the application's `Baseline Config`- `Properties` page:\n\n![app-trait-scaler](https://kubevela.io/assets/images/app-scaler-bbe7a19987986b65e35e5c6aecd21d19.jpg)\n\nNext, we click the Settings (gear) button on the right side of Set Replicas to adjust replicas to 3. After clicking save, the changes will be temporarily stored.\n\nThen to make it effective in a certain environment, we need to click the `Deploy` button or the multi-environment workflow selection button next to it and select the corresponding environment to perform the deployment.\n\nAfter the deployment is complete, you can enter the environment instance page. You'll find 3 rows of data that have appeared in the instance list.\n\n![instance-trait-scaler](https://kubevela.io/assets/images/instance-trait-scaler-d5e1ecba5da72510067efccdb1e304ce.jpg)\n\n> Trait can extend more powerful features, such as HPA.\n\n## Edit deployment parameters\nFor applications created using Helm or other custom deployment types, if Traits are not applicable, you can directly edit the deployment parameters to adjust the number of application instances.\n\nFor example, in Helm applications, the general Chart package provides parameters for setting the number of replicas, which can be set by setting Values.\n\nTake [apache chart](https://github.com/bitnami/charts/tree/master/bitnami/apache) as an example, set `replicaCount=3` in Values to adjust the number of replicas.\n\n## Next step\n- [View Application Logs](https://kubevela.io/docs/how-to/dashboard/application/get-application-log/)\n- [Customize Scaler Trait](https://kubevela.io/docs/platform-engineers/traits/customize-trait/)\n", "metadata": {"source_url": "https://kubevela.io/docs/tutorials/scaler", "title": "KubeVela Scaler Tutorial", "description": "This page introduces how to manually modify replicas to apply in KubeVela.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 14:41:49", "type": "overview", "page_metadata": {"docsearch:language": "en", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:description": "This article introduces how KubeVela adjusts the number of application copies.", "msapplication-config": "/img/favicons/browserconfig.xml", "theme-color": "#ffffff", "ogDescription": "This article introduces how KubeVela adjusts the number of application copies.", "generator": "Docusaurus v2.4.3", "ogTitle": "Modify Replicas | KubeVela", "docusaurus_locale": "en", "description": "This article introduces how KubeVela adjusts the number of application copies.", "title": "Modify Replicas | KubeVela", "og:title": "Modify Replicas | KubeVela", "viewport": "width=device-width, initial-scale=1.0", "language": "en", "docusaurus_version": "v1.10", "docsearch:version": "v1.10", "ogUrl": "https://kubevela.io/docs/tutorials/scaler/", "docusaurus_tag": "docs-default-v1.10", "og:url": "https://kubevela.io/docs/tutorials/scaler/", "twitter:card": "summary_large_image", "scrapeId": "740fae98-8af4-46ba-b20c-76ff14f16eb0", "sourceURL": "https://kubevela.io/docs/tutorials/scaler", "url": "https://kubevela.io/docs/tutorials/scaler/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"KubeVela Scaler Tutorial\"?\n\nAssistant: Here are some code examples:\n\n### Helm Chart Example\n```yaml\nset `replicaCount=3` in Values to adjust the number of replicas.\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/tutorials/scaler", "title": "KubeVela Scaler Tutorial", "description": "This page introduces how to manually modify replicas to apply in KubeVela.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 14:41:49", "type": "code_examples", "page_metadata": {"docsearch:language": "en", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:description": "This article introduces how KubeVela adjusts the number of application copies.", "msapplication-config": "/img/favicons/browserconfig.xml", "theme-color": "#ffffff", "ogDescription": "This article introduces how KubeVela adjusts the number of application copies.", "generator": "Docusaurus v2.4.3", "ogTitle": "Modify Replicas | KubeVela", "docusaurus_locale": "en", "description": "This article introduces how KubeVela adjusts the number of application copies.", "title": "Modify Replicas | KubeVela", "og:title": "Modify Replicas | KubeVela", "viewport": "width=device-width, initial-scale=1.0", "language": "en", "docusaurus_version": "v1.10", "docsearch:version": "v1.10", "ogUrl": "https://kubevela.io/docs/tutorials/scaler/", "docusaurus_tag": "docs-default-v1.10", "og:url": "https://kubevela.io/docs/tutorials/scaler/", "twitter:card": "summary_large_image", "scrapeId": "740fae98-8af4-46ba-b20c-76ff14f16eb0", "sourceURL": "https://kubevela.io/docs/tutorials/scaler", "url": "https://kubevela.io/docs/tutorials/scaler/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela Scaler Tutorial\"?\n\nAssistant: Here are the recommended best practices:\n\n• For k8s-objects type applications, ensure workload resources are prioritized for the `scaler` Trait to take effect.\n• Use the Settings button to adjust replicas and save changes before deploying.\n", "metadata": {"source_url": "https://kubevela.io/docs/tutorials/scaler", "title": "KubeVela Scaler Tutorial", "description": "This page introduces how to manually modify replicas to apply in KubeVela.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 14:41:49", "type": "best_practices", "page_metadata": {"docsearch:language": "en", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:description": "This article introduces how KubeVela adjusts the number of application copies.", "msapplication-config": "/img/favicons/browserconfig.xml", "theme-color": "#ffffff", "ogDescription": "This article introduces how KubeVela adjusts the number of application copies.", "generator": "Docusaurus v2.4.3", "ogTitle": "Modify Replicas | KubeVela", "docusaurus_locale": "en", "description": "This article introduces how KubeVela adjusts the number of application copies.", "title": "Modify Replicas | KubeVela", "og:title": "Modify Replicas | KubeVela", "viewport": "width=device-width, initial-scale=1.0", "language": "en", "docusaurus_version": "v1.10", "docsearch:version": "v1.10", "ogUrl": "https://kubevela.io/docs/tutorials/scaler/", "docusaurus_tag": "docs-default-v1.10", "og:url": "https://kubevela.io/docs/tutorials/scaler/", "twitter:card": "summary_large_image", "scrapeId": "740fae98-8af4-46ba-b20c-76ff14f16eb0", "sourceURL": "https://kubevela.io/docs/tutorials/scaler", "url": "https://kubevela.io/docs/tutorials/scaler/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela CLI - vela version\"?\n\nAssistant: Prints vela build version information.\n\nHere's a detailed explanation:\n\n\n## Synopsis\nPrints vela build version information.\n\n## Options\n```codeBlockLines_e6Vv\n  -h, --help   help for version\n```\n\n## Options inherited from parent commands\n```codeBlockLines_e6Vv\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n\n## SEE ALSO\n- [vela version list](https://kubevela.io/docs/cli/vela_version_list/) \\- List all available versions\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_version", "title": "KubeVela CLI - vela version", "description": "Prints vela build version information.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 14:42:07", "type": "overview", "page_metadata": {"msapplication-config": "/img/favicons/browserconfig.xml", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "og:title": "vela version | KubeVela", "description": "Prints vela build version information.", "og:url": "https://kubevela.io/docs/cli/vela_version/", "theme-color": "#ffffff", "generator": "Docusaurus v2.4.3", "docusaurus_tag": "docs-default-v1.10", "ogUrl": "https://kubevela.io/docs/cli/vela_version/", "docusaurus_version": "v1.10", "language": "en", "docsearch:language": "en", "docusaurus_locale": "en", "twitter:card": "summary_large_image", "docsearch:version": "v1.10", "docsearch:docusaurus_tag": "docs-default-v1.10", "ogDescription": "Prints vela build version information.", "og:description": "Prints vela build version information.", "title": "vela version | KubeVela", "ogTitle": "vela version | KubeVela", "viewport": "width=device-width, initial-scale=1.0", "scrapeId": "6fd06bda-4b2c-4d7e-ab57-c356ee7b3423", "sourceURL": "https://kubevela.io/docs/cli/vela_version", "url": "https://kubevela.io/docs/cli/vela_version/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"KubeVela CLI - vela version\"?\n\nAssistant: Here are some code examples:\n\n### vela version command\n```yaml\nvela version [flags]\n```\n\n### Options for version command\n```yaml\n  -h, --help   help for version\n```\n\n### Inherited options\n```yaml\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_version", "title": "KubeVela CLI - vela version", "description": "Prints vela build version information.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 14:42:07", "type": "code_examples", "page_metadata": {"msapplication-config": "/img/favicons/browserconfig.xml", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "og:title": "vela version | KubeVela", "description": "Prints vela build version information.", "og:url": "https://kubevela.io/docs/cli/vela_version/", "theme-color": "#ffffff", "generator": "Docusaurus v2.4.3", "docusaurus_tag": "docs-default-v1.10", "ogUrl": "https://kubevela.io/docs/cli/vela_version/", "docusaurus_version": "v1.10", "language": "en", "docsearch:language": "en", "docusaurus_locale": "en", "twitter:card": "summary_large_image", "docsearch:version": "v1.10", "docsearch:docusaurus_tag": "docs-default-v1.10", "ogDescription": "Prints vela build version information.", "og:description": "Prints vela build version information.", "title": "vela version | KubeVela", "ogTitle": "vela version | KubeVela", "viewport": "width=device-width, initial-scale=1.0", "scrapeId": "6fd06bda-4b2c-4d7e-ab57-c356ee7b3423", "sourceURL": "https://kubevela.io/docs/cli/vela_version", "url": "https://kubevela.io/docs/cli/vela_version/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela CLI - vela version\"?\n\nAssistant: Here are the recommended best practices:\n\n• If you like KubeVela, give it a star on GitHub!\n• Check the release notes for the latest version updates.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_version", "title": "KubeVela CLI - vela version", "description": "Prints vela build version information.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 14:42:07", "type": "best_practices", "page_metadata": {"msapplication-config": "/img/favicons/browserconfig.xml", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "og:title": "vela version | KubeVela", "description": "Prints vela build version information.", "og:url": "https://kubevela.io/docs/cli/vela_version/", "theme-color": "#ffffff", "generator": "Docusaurus v2.4.3", "docusaurus_tag": "docs-default-v1.10", "ogUrl": "https://kubevela.io/docs/cli/vela_version/", "docusaurus_version": "v1.10", "language": "en", "docsearch:language": "en", "docusaurus_locale": "en", "twitter:card": "summary_large_image", "docsearch:version": "v1.10", "docsearch:docusaurus_tag": "docs-default-v1.10", "ogDescription": "Prints vela build version information.", "og:description": "Prints vela build version information.", "title": "vela version | KubeVela", "ogTitle": "vela version | KubeVela", "viewport": "width=device-width, initial-scale=1.0", "scrapeId": "6fd06bda-4b2c-4d7e-ab57-c356ee7b3423", "sourceURL": "https://kubevela.io/docs/cli/vela_version", "url": "https://kubevela.io/docs/cli/vela_version/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela CLI Install Command\"?\n\nAssistant: Installs or Upgrades Kubevela control plane on a Kubernetes cluster.\n\nHere's a detailed explanation:\n\n\n## Synopsis\nThe Kubevela CLI allows installing Kubevela on any Kubernetes derivative to which your kube config is pointing to.\n\n## Options\n-d, --detail             show detail log of installation (default true)\n-f, --file string        custom the chart path of KubeVela control plane\n-h, --help               help for install\n-n, --namespace string   namespace scope for installing KubeVela Core (default \"vela-system\")\n-r, --reuse              will re-use the user's last supplied values. (default true)\n    --set stringArray    set values on the command line (can specify multiple or separate values with commas: key1=val1,key2=val2)\n-v, --version string      (default \"UNKNOWN\")\n\n## Options inherited from parent commands\n-V, --verbosity Level   number for the log level verbosity\n-y, --yes               Assume yes for all user prompts\n\n## SEE ALSO\nGo Back to [CLI Commands](https://kubevela.io/docs/cli/vela/) Homepage.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_install", "title": "KubeVela CLI Install Command", "description": "Installs or Upgrades Kubevela control plane on a Kubernetes cluster.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 14:42:15", "type": "overview", "page_metadata": {"og:title": "vela install | KubeVela", "og:description": "Installs or Upgrades Kubevela control plane on a Kubernetes cluster.", "description": "Installs or Upgrades Kubevela control plane on a Kubernetes cluster.", "docusaurus_tag": "docs-default-v1.10", "ogTitle": "vela install | KubeVela", "language": "en", "generator": "Docusaurus v2.4.3", "og:url": "https://kubevela.io/docs/cli/vela_install/", "theme-color": "#ffffff", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docsearch:language": "en", "ogUrl": "https://kubevela.io/docs/cli/vela_install/", "viewport": "width=device-width, initial-scale=1.0", "docsearch:version": "v1.10", "title": "vela install | KubeVela", "ogDescription": "Installs or Upgrades Kubevela control plane on a Kubernetes cluster.", "twitter:card": "summary_large_image", "docusaurus_version": "v1.10", "docsearch:docusaurus_tag": "docs-default-v1.10", "docusaurus_locale": "en", "msapplication-config": "/img/favicons/browserconfig.xml", "scrapeId": "01cac0fd-b706-48cd-95e5-c3217a405bf1", "sourceURL": "https://kubevela.io/docs/cli/vela_install", "url": "https://kubevela.io/docs/cli/vela_install/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"KubeVela CLI Install Command\"?\n\nAssistant: Here are some code examples:\n\n### Install Command\n```yaml\nvela install [flags]\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_install", "title": "KubeVela CLI Install Command", "description": "Installs or Upgrades Kubevela control plane on a Kubernetes cluster.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 14:42:15", "type": "code_examples", "page_metadata": {"og:title": "vela install | KubeVela", "og:description": "Installs or Upgrades Kubevela control plane on a Kubernetes cluster.", "description": "Installs or Upgrades Kubevela control plane on a Kubernetes cluster.", "docusaurus_tag": "docs-default-v1.10", "ogTitle": "vela install | KubeVela", "language": "en", "generator": "Docusaurus v2.4.3", "og:url": "https://kubevela.io/docs/cli/vela_install/", "theme-color": "#ffffff", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docsearch:language": "en", "ogUrl": "https://kubevela.io/docs/cli/vela_install/", "viewport": "width=device-width, initial-scale=1.0", "docsearch:version": "v1.10", "title": "vela install | KubeVela", "ogDescription": "Installs or Upgrades Kubevela control plane on a Kubernetes cluster.", "twitter:card": "summary_large_image", "docusaurus_version": "v1.10", "docsearch:docusaurus_tag": "docs-default-v1.10", "docusaurus_locale": "en", "msapplication-config": "/img/favicons/browserconfig.xml", "scrapeId": "01cac0fd-b706-48cd-95e5-c3217a405bf1", "sourceURL": "https://kubevela.io/docs/cli/vela_install", "url": "https://kubevela.io/docs/cli/vela_install/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela CLI Install Command\"?\n\nAssistant: Here are the recommended best practices:\n\n• If you like KubeVela, give it a star on GitHub!\n• Check the release notes for updates and new features.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_install", "title": "KubeVela CLI Install Command", "description": "Installs or Upgrades Kubevela control plane on a Kubernetes cluster.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 14:42:15", "type": "best_practices", "page_metadata": {"og:title": "vela install | KubeVela", "og:description": "Installs or Upgrades Kubevela control plane on a Kubernetes cluster.", "description": "Installs or Upgrades Kubevela control plane on a Kubernetes cluster.", "docusaurus_tag": "docs-default-v1.10", "ogTitle": "vela install | KubeVela", "language": "en", "generator": "Docusaurus v2.4.3", "og:url": "https://kubevela.io/docs/cli/vela_install/", "theme-color": "#ffffff", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docsearch:language": "en", "ogUrl": "https://kubevela.io/docs/cli/vela_install/", "viewport": "width=device-width, initial-scale=1.0", "docsearch:version": "v1.10", "title": "vela install | KubeVela", "ogDescription": "Installs or Upgrades Kubevela control plane on a Kubernetes cluster.", "twitter:card": "summary_large_image", "docusaurus_version": "v1.10", "docsearch:docusaurus_tag": "docs-default-v1.10", "docusaurus_locale": "en", "msapplication-config": "/img/favicons/browserconfig.xml", "scrapeId": "01cac0fd-b706-48cd-95e5-c3217a405bf1", "sourceURL": "https://kubevela.io/docs/cli/vela_install", "url": "https://kubevela.io/docs/cli/vela_install/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela CLI - VelaQL Apply\"?\n\nAssistant: This page covers how to create and store a VelaQL view using the KubeVela CLI.\n\nHere's a detailed explanation:\n\n\n## Create and store a VelaQL view\nCreate and store a VelaQL view to reuse it later.\n\nYou can specify your view file from:\n\n- a file (-f my-view.cue)\n- a URL (-f https://example.com/view.cue)\n- stdin (-f -)\n\nView name can be automatically inferred from file/URL.\nIf we cannot infer a name from it, you must explicitly specify the view name (see examples).\n\nIf a view with the same name already exists, it will be updated.\n\n## Examples\nAssume your VelaQL view is stored in <my-view.cue>.\n\nView name will be implicitly inferred from file name or URL (my-view):\n    vela ql create -f my-view.cue\n\nYou can also explicitly specify view name (custom-name):\n    vela ql create custom-name -f my-view.cue\n\nIf view name cannot be inferred, or you are reading from stdin (-f -), you must explicitly specify view name:\n    cat my-view.cue | vela ql create custom-name -f -\n\n## Options\n  -f, --file string   CUE file that stores the view, can be local path, URL, or stdin (-)\n  -h, --help          help for apply\n\n## Options inherited from parent commands\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n\n## SEE ALSO\n- [vela ql](https://kubevela.io/docs/cli/vela_ql/) \\- Show result of executing velaQL.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_ql_apply", "title": "KubeVela CLI - VelaQL Apply", "description": "This page covers how to create and store a VelaQL view using the KubeVela CLI.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 14:42:34", "type": "overview", "page_metadata": {"og:description": "Create and store a VelaQL view", "language": "en", "ogUrl": "https://kubevela.io/docs/cli/vela_ql_apply/", "twitter:card": "summary_large_image", "title": "vela ql apply | KubeVela", "docusaurus_version": "v1.10", "viewport": "width=device-width, initial-scale=1.0", "generator": "Docusaurus v2.4.3", "docusaurus_tag": "docs-default-v1.10", "ogDescription": "Create and store a VelaQL view", "docsearch:language": "en", "og:title": "vela ql apply | KubeVela", "description": "Create and store a VelaQL view", "ogTitle": "vela ql apply | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_locale": "en", "docsearch:version": "v1.10", "docsearch:docusaurus_tag": "docs-default-v1.10", "theme-color": "#ffffff", "og:url": "https://kubevela.io/docs/cli/vela_ql_apply/", "msapplication-config": "/img/favicons/browserconfig.xml", "scrapeId": "f5506b3d-6ea1-4163-a01b-8aaaf0e9dcc5", "sourceURL": "https://kubevela.io/docs/cli/vela_ql_apply", "url": "https://kubevela.io/docs/cli/vela_ql_apply/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"KubeVela CLI - VelaQL Apply\"?\n\nAssistant: Here are some code examples:\n\n### Create VelaQL view from file\n```yaml\nvela ql create -f my-view.cue\n```\n\n### Create VelaQL view with custom name\n```yaml\nvela ql create custom-name -f my-view.cue\n```\n\n### Create VelaQL view from stdin\n```yaml\ncat my-view.cue | vela ql create custom-name -f -\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_ql_apply", "title": "KubeVela CLI - VelaQL Apply", "description": "This page covers how to create and store a VelaQL view using the KubeVela CLI.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 14:42:34", "type": "code_examples", "page_metadata": {"og:description": "Create and store a VelaQL view", "language": "en", "ogUrl": "https://kubevela.io/docs/cli/vela_ql_apply/", "twitter:card": "summary_large_image", "title": "vela ql apply | KubeVela", "docusaurus_version": "v1.10", "viewport": "width=device-width, initial-scale=1.0", "generator": "Docusaurus v2.4.3", "docusaurus_tag": "docs-default-v1.10", "ogDescription": "Create and store a VelaQL view", "docsearch:language": "en", "og:title": "vela ql apply | KubeVela", "description": "Create and store a VelaQL view", "ogTitle": "vela ql apply | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_locale": "en", "docsearch:version": "v1.10", "docsearch:docusaurus_tag": "docs-default-v1.10", "theme-color": "#ffffff", "og:url": "https://kubevela.io/docs/cli/vela_ql_apply/", "msapplication-config": "/img/favicons/browserconfig.xml", "scrapeId": "f5506b3d-6ea1-4163-a01b-8aaaf0e9dcc5", "sourceURL": "https://kubevela.io/docs/cli/vela_ql_apply", "url": "https://kubevela.io/docs/cli/vela_ql_apply/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela CLI - VelaQL Apply\"?\n\nAssistant: Here are the recommended best practices:\n\n• If a view name cannot be inferred, you must explicitly specify the view name.\n• Use the -f option to specify the source of the view.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_ql_apply", "title": "KubeVela CLI - VelaQL Apply", "description": "This page covers how to create and store a VelaQL view using the KubeVela CLI.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 14:42:34", "type": "best_practices", "page_metadata": {"og:description": "Create and store a VelaQL view", "language": "en", "ogUrl": "https://kubevela.io/docs/cli/vela_ql_apply/", "twitter:card": "summary_large_image", "title": "vela ql apply | KubeVela", "docusaurus_version": "v1.10", "viewport": "width=device-width, initial-scale=1.0", "generator": "Docusaurus v2.4.3", "docusaurus_tag": "docs-default-v1.10", "ogDescription": "Create and store a VelaQL view", "docsearch:language": "en", "og:title": "vela ql apply | KubeVela", "description": "Create and store a VelaQL view", "ogTitle": "vela ql apply | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_locale": "en", "docsearch:version": "v1.10", "docsearch:docusaurus_tag": "docs-default-v1.10", "theme-color": "#ffffff", "og:url": "https://kubevela.io/docs/cli/vela_ql_apply/", "msapplication-config": "/img/favicons/browserconfig.xml", "scrapeId": "f5506b3d-6ea1-4163-a01b-8aaaf0e9dcc5", "sourceURL": "https://kubevela.io/docs/cli/vela_ql_apply", "url": "https://kubevela.io/docs/cli/vela_ql_apply/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"Manage environments for vela applications\"?\n\nAssistant: Manage environments for vela applications to run.\n\nHere's a detailed explanation:\n\n\n## Synopsis\nManage environments for vela applications to run.\n\n## Options\n```codeBlockLines_e6Vv\n  -h, --help   help for env\n```\n\n## Options inherited from parent commands\n```codeBlockLines_e6Vv\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n\n## SEE ALSO\n- [vela env delete](https://kubevela.io/docs/cli/vela_env_delete/) \\- Delete an environment.\n- [vela env init](https://kubevela.io/docs/cli/vela_env_init/) \\- Create environment for vela applications to run.\n- [vela env ls](https://kubevela.io/docs/cli/vela_env_ls/) \\- List environments for vela applications to run.\n- [vela env set](https://kubevela.io/docs/cli/vela_env_set/) \\- Set an environment.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_env", "title": "Manage environments for vela applications", "description": "Manage environments for vela applications to run.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 14:42:41", "type": "overview", "page_metadata": {"favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_locale": "en", "docsearch:docusaurus_tag": "docs-default-v1.10", "generator": "Docusaurus v2.4.3", "ogTitle": "vela env | KubeVela", "twitter:card": "summary_large_image", "docusaurus_version": "v1.10", "docsearch:version": "v1.10", "theme-color": "#ffffff", "viewport": "width=device-width, initial-scale=1.0", "language": "en", "og:description": "Manage environments for vela applications to run.", "ogDescription": "Manage environments for vela applications to run.", "og:url": "https://kubevela.io/docs/cli/vela_env/", "description": "Manage environments for vela applications to run.", "msapplication-config": "/img/favicons/browserconfig.xml", "ogUrl": "https://kubevela.io/docs/cli/vela_env/", "docsearch:language": "en", "og:title": "vela env | KubeVela", "docusaurus_tag": "docs-default-v1.10", "title": "vela env | KubeVela", "scrapeId": "a8c16def-03f4-4511-9df8-fc78727a338c", "sourceURL": "https://kubevela.io/docs/cli/vela_env", "url": "https://kubevela.io/docs/cli/vela_env/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"Manage environments for vela applications\"?\n\nAssistant: Here are some code examples:\n\n### Options\n```yaml\n```codeBlockLines_e6Vv\n  -h, --help   help for env\n```\n```\n\n### Options inherited from parent commands\n```yaml\n```codeBlockLines_e6Vv\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_env", "title": "Manage environments for vela applications", "description": "Manage environments for vela applications to run.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 14:42:41", "type": "code_examples", "page_metadata": {"favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_locale": "en", "docsearch:docusaurus_tag": "docs-default-v1.10", "generator": "Docusaurus v2.4.3", "ogTitle": "vela env | KubeVela", "twitter:card": "summary_large_image", "docusaurus_version": "v1.10", "docsearch:version": "v1.10", "theme-color": "#ffffff", "viewport": "width=device-width, initial-scale=1.0", "language": "en", "og:description": "Manage environments for vela applications to run.", "ogDescription": "Manage environments for vela applications to run.", "og:url": "https://kubevela.io/docs/cli/vela_env/", "description": "Manage environments for vela applications to run.", "msapplication-config": "/img/favicons/browserconfig.xml", "ogUrl": "https://kubevela.io/docs/cli/vela_env/", "docsearch:language": "en", "og:title": "vela env | KubeVela", "docusaurus_tag": "docs-default-v1.10", "title": "vela env | KubeVela", "scrapeId": "a8c16def-03f4-4511-9df8-fc78727a338c", "sourceURL": "https://kubevela.io/docs/cli/vela_env", "url": "https://kubevela.io/docs/cli/vela_env/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"Manage environments for vela applications\"?\n\nAssistant: Here are the recommended best practices:\n\n• If you like KubeVela, give it a star on GitHub!\n• Check the release notes for updates and new features.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_env", "title": "Manage environments for vela applications", "description": "Manage environments for vela applications to run.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 14:42:41", "type": "best_practices", "page_metadata": {"favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_locale": "en", "docsearch:docusaurus_tag": "docs-default-v1.10", "generator": "Docusaurus v2.4.3", "ogTitle": "vela env | KubeVela", "twitter:card": "summary_large_image", "docusaurus_version": "v1.10", "docsearch:version": "v1.10", "theme-color": "#ffffff", "viewport": "width=device-width, initial-scale=1.0", "language": "en", "og:description": "Manage environments for vela applications to run.", "ogDescription": "Manage environments for vela applications to run.", "og:url": "https://kubevela.io/docs/cli/vela_env/", "description": "Manage environments for vela applications to run.", "msapplication-config": "/img/favicons/browserconfig.xml", "ogUrl": "https://kubevela.io/docs/cli/vela_env/", "docsearch:language": "en", "og:title": "vela env | KubeVela", "docusaurus_tag": "docs-default-v1.10", "title": "vela env | KubeVela", "scrapeId": "a8c16def-03f4-4511-9df8-fc78727a338c", "sourceURL": "https://kubevela.io/docs/cli/vela_env", "url": "https://kubevela.io/docs/cli/vela_env/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"Add Labels to Managed Cluster\"?\n\nAssistant: This page covers how to add labels to a managed cluster using KubeVela CLI.\n\nHere's a detailed explanation:\n\n\n## Synopsis\nadd labels to managed cluster.\n\n## Examples\n```bash\nvela cluster labels add my-cluster project=kubevela,owner=oam-dev\n```\n\n## Options\n```bash\n  -h, --help   help for add\n```\n\n## Options inherited from parent commands\n```bash\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n\n## SEE ALSO\n- [vela cluster labels](https://kubevela.io/docs/cli/vela_cluster_labels/) - Manage Kubernetes Cluster Labels.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_cluster_labels_add", "title": "Add Labels to Managed Cluster", "description": "This page covers how to add labels to a managed cluster using KubeVela CLI.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 14:42:48", "type": "overview", "page_metadata": {"ogTitle": "vela cluster labels add | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogUrl": "https://kubevela.io/docs/cli/vela_cluster_labels_add/", "docusaurus_version": "v1.10", "og:url": "https://kubevela.io/docs/cli/vela_cluster_labels_add/", "docsearch:docusaurus_tag": "docs-default-v1.10", "ogDescription": "add labels to managed cluster.", "docsearch:version": "v1.10", "viewport": "width=device-width, initial-scale=1.0", "generator": "Docusaurus v2.4.3", "og:title": "vela cluster labels add | KubeVela", "msapplication-config": "/img/favicons/browserconfig.xml", "docusaurus_locale": "en", "language": "en", "docsearch:language": "en", "description": "add labels to managed cluster.", "theme-color": "#ffffff", "title": "vela cluster labels add | KubeVela", "twitter:card": "summary_large_image", "docusaurus_tag": "docs-default-v1.10", "og:description": "add labels to managed cluster.", "scrapeId": "8776b068-12fe-46a8-a317-23946a4c843c", "sourceURL": "https://kubevela.io/docs/cli/vela_cluster_labels_add", "url": "https://kubevela.io/docs/cli/vela_cluster_labels_add/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"Add Labels to Managed Cluster\"?\n\nAssistant: Here are some code examples:\n\n### Command to Add Labels\n```yaml\nvela cluster labels add my-cluster project=kubevela,owner=oam-dev\n```\n\n### Command Options\n```yaml\n  -h, --help   help for add\n```\n\n### Inherited Options\n```yaml\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_cluster_labels_add", "title": "Add Labels to Managed Cluster", "description": "This page covers how to add labels to a managed cluster using KubeVela CLI.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 14:42:48", "type": "code_examples", "page_metadata": {"ogTitle": "vela cluster labels add | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogUrl": "https://kubevela.io/docs/cli/vela_cluster_labels_add/", "docusaurus_version": "v1.10", "og:url": "https://kubevela.io/docs/cli/vela_cluster_labels_add/", "docsearch:docusaurus_tag": "docs-default-v1.10", "ogDescription": "add labels to managed cluster.", "docsearch:version": "v1.10", "viewport": "width=device-width, initial-scale=1.0", "generator": "Docusaurus v2.4.3", "og:title": "vela cluster labels add | KubeVela", "msapplication-config": "/img/favicons/browserconfig.xml", "docusaurus_locale": "en", "language": "en", "docsearch:language": "en", "description": "add labels to managed cluster.", "theme-color": "#ffffff", "title": "vela cluster labels add | KubeVela", "twitter:card": "summary_large_image", "docusaurus_tag": "docs-default-v1.10", "og:description": "add labels to managed cluster.", "scrapeId": "8776b068-12fe-46a8-a317-23946a4c843c", "sourceURL": "https://kubevela.io/docs/cli/vela_cluster_labels_add", "url": "https://kubevela.io/docs/cli/vela_cluster_labels_add/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"Add Labels to Managed Cluster\"?\n\nAssistant: Here are the recommended best practices:\n\n• If you like KubeVela, give it a star on GitHub!\n• Always check the verbosity level for detailed logs.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_cluster_labels_add", "title": "Add Labels to Managed Cluster", "description": "This page covers how to add labels to a managed cluster using KubeVela CLI.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 14:42:48", "type": "best_practices", "page_metadata": {"ogTitle": "vela cluster labels add | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogUrl": "https://kubevela.io/docs/cli/vela_cluster_labels_add/", "docusaurus_version": "v1.10", "og:url": "https://kubevela.io/docs/cli/vela_cluster_labels_add/", "docsearch:docusaurus_tag": "docs-default-v1.10", "ogDescription": "add labels to managed cluster.", "docsearch:version": "v1.10", "viewport": "width=device-width, initial-scale=1.0", "generator": "Docusaurus v2.4.3", "og:title": "vela cluster labels add | KubeVela", "msapplication-config": "/img/favicons/browserconfig.xml", "docusaurus_locale": "en", "language": "en", "docsearch:language": "en", "description": "add labels to managed cluster.", "theme-color": "#ffffff", "title": "vela cluster labels add | KubeVela", "twitter:card": "summary_large_image", "docusaurus_tag": "docs-default-v1.10", "og:description": "add labels to managed cluster.", "scrapeId": "8776b068-12fe-46a8-a317-23946a4c843c", "sourceURL": "https://kubevela.io/docs/cli/vela_cluster_labels_add", "url": "https://kubevela.io/docs/cli/vela_cluster_labels_add/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela CLI - vela kube\"?\n\nAssistant: Managing native Kubernetes resources across clusters.\n\nHere's a detailed explanation:\n\n\n## Options\n```codeBlockLines_e6Vv\n  -h, --help   help for kube\n```\n\n## Options inherited from parent commands\n```codeBlockLines_e6Vv\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n\n## SEE ALSO\n- [vela kube apply](https://kubevela.io/docs/cli/vela_kube_apply/) \\- Apply resources in Kubernetes YAML file to clusters.\n- [vela kube delete](https://kubevela.io/docs/cli/vela_kube_delete/) \\- Delete resources in clusters.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_kube", "title": "KubeVela CLI - vela kube", "description": "Managing native Kubernetes resources across clusters.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 14:43:04", "type": "overview", "page_metadata": {"language": "en", "og:title": "vela kube | KubeVela", "ogTitle": "vela kube | KubeVela", "ogDescription": "Managing native Kubernetes resources across clusters.", "og:url": "https://kubevela.io/docs/cli/vela_kube/", "title": "vela kube | KubeVela", "docsearch:language": "en", "og:description": "Managing native Kubernetes resources across clusters.", "docsearch:docusaurus_tag": "docs-default-v1.10", "viewport": "width=device-width, initial-scale=1.0", "docusaurus_version": "v1.10", "docusaurus_tag": "docs-default-v1.10", "docusaurus_locale": "en", "ogUrl": "https://kubevela.io/docs/cli/vela_kube/", "docsearch:version": "v1.10", "theme-color": "#ffffff", "msapplication-config": "/img/favicons/browserconfig.xml", "description": "Managing native Kubernetes resources across clusters.", "twitter:card": "summary_large_image", "generator": "Docusaurus v2.4.3", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "scrapeId": "47e0ccbe-d04d-4678-b840-589ae83e8609", "sourceURL": "https://kubevela.io/docs/cli/vela_kube", "url": "https://kubevela.io/docs/cli/vela_kube/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"KubeVela CLI - vela kube\"?\n\nAssistant: Here are some code examples:\n\n### vela kube command\n```yaml\nvela kube [flags]\n```\n\n### Options\n```yaml\n  -h, --help   help for kube\n```\n\n### Options inherited from parent commands\n```yaml\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_kube", "title": "KubeVela CLI - vela kube", "description": "Managing native Kubernetes resources across clusters.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 14:43:04", "type": "code_examples", "page_metadata": {"language": "en", "og:title": "vela kube | KubeVela", "ogTitle": "vela kube | KubeVela", "ogDescription": "Managing native Kubernetes resources across clusters.", "og:url": "https://kubevela.io/docs/cli/vela_kube/", "title": "vela kube | KubeVela", "docsearch:language": "en", "og:description": "Managing native Kubernetes resources across clusters.", "docsearch:docusaurus_tag": "docs-default-v1.10", "viewport": "width=device-width, initial-scale=1.0", "docusaurus_version": "v1.10", "docusaurus_tag": "docs-default-v1.10", "docusaurus_locale": "en", "ogUrl": "https://kubevela.io/docs/cli/vela_kube/", "docsearch:version": "v1.10", "theme-color": "#ffffff", "msapplication-config": "/img/favicons/browserconfig.xml", "description": "Managing native Kubernetes resources across clusters.", "twitter:card": "summary_large_image", "generator": "Docusaurus v2.4.3", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "scrapeId": "47e0ccbe-d04d-4678-b840-589ae83e8609", "sourceURL": "https://kubevela.io/docs/cli/vela_kube", "url": "https://kubevela.io/docs/cli/vela_kube/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela CLI - vela kube\"?\n\nAssistant: Here are the recommended best practices:\n\n• If you like KubeVela, give it a star on GitHub!\n• Check the release notes for updates and new features.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_kube", "title": "KubeVela CLI - vela kube", "description": "Managing native Kubernetes resources across clusters.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 14:43:04", "type": "best_practices", "page_metadata": {"language": "en", "og:title": "vela kube | KubeVela", "ogTitle": "vela kube | KubeVela", "ogDescription": "Managing native Kubernetes resources across clusters.", "og:url": "https://kubevela.io/docs/cli/vela_kube/", "title": "vela kube | KubeVela", "docsearch:language": "en", "og:description": "Managing native Kubernetes resources across clusters.", "docsearch:docusaurus_tag": "docs-default-v1.10", "viewport": "width=device-width, initial-scale=1.0", "docusaurus_version": "v1.10", "docusaurus_tag": "docs-default-v1.10", "docusaurus_locale": "en", "ogUrl": "https://kubevela.io/docs/cli/vela_kube/", "docsearch:version": "v1.10", "theme-color": "#ffffff", "msapplication-config": "/img/favicons/browserconfig.xml", "description": "Managing native Kubernetes resources across clusters.", "twitter:card": "summary_large_image", "generator": "Docusaurus v2.4.3", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "scrapeId": "47e0ccbe-d04d-4678-b840-589ae83e8609", "sourceURL": "https://kubevela.io/docs/cli/vela_kube", "url": "https://kubevela.io/docs/cli/vela_kube/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela CLI: vela top\"?\n\nAssistant: Launch UI to display the platform overview and diagnose the status for any specific application.\n\nHere's a detailed explanation:\n\n\n## Synopsis\nLaunch UI to display platform overview information and diagnose the status for any specific application.\n\n## Examples\n```shell\n  # Launch UI to display platform overview information and diagnose the status for any specific application\n  vela top\n\n  # Show applications which are in <vela-namespace> namespace\n  vela top -n <vela-namespace>\n\n  # Show applications which are in all namespaces\n  vela top -A\n```\n\n## Options\n```shell\n  -A, --all-namespaces     If true, check the specified action in all namespaces.\n  -e, --env string         specify environment name for application\n  -h, --help               help for top\n  -n, --namespace string   specify the Kubernetes namespace to use\n```\n\n## Options inherited from parent commands\n```shell\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n\n## SEE ALSO\nGo Back to [CLI Commands](https://kubevela.io/docs/cli/vela/) Homepage.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_top", "title": "KubeVela CLI: vela top", "description": "Launch UI to display the platform overview and diagnose the status for any specific application.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 14:43:10", "type": "overview", "page_metadata": {"twitter:card": "summary_large_image", "ogUrl": "https://kubevela.io/docs/cli/vela_top/", "docsearch:version": "v1.10", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:description": "Launch UI to display the platform overview.", "title": "vela top | KubeVela", "viewport": "width=device-width, initial-scale=1.0", "theme-color": "#ffffff", "description": "Launch UI to display the platform overview.", "og:title": "vela top | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "language": "en", "msapplication-config": "/img/favicons/browserconfig.xml", "og:url": "https://kubevela.io/docs/cli/vela_top/", "docusaurus_version": "v1.10", "ogDescription": "Launch UI to display the platform overview.", "docsearch:language": "en", "ogTitle": "vela top | KubeVela", "docusaurus_tag": "docs-default-v1.10", "generator": "Docusaurus v2.4.3", "docusaurus_locale": "en", "scrapeId": "b9794233-3e9d-49ee-9264-71154866dd97", "sourceURL": "https://kubevela.io/docs/cli/vela_top", "url": "https://kubevela.io/docs/cli/vela_top/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"KubeVela CLI: vela top\"?\n\nAssistant: Here are some code examples:\n\n### vela top command\n```yaml\nvela top\n```\n\n### Show applications in a specific namespace\n```yaml\nvela top -n <vela-namespace>\n```\n\n### Show applications in all namespaces\n```yaml\nvela top -A\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_top", "title": "KubeVela CLI: vela top", "description": "Launch UI to display the platform overview and diagnose the status for any specific application.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 14:43:10", "type": "code_examples", "page_metadata": {"twitter:card": "summary_large_image", "ogUrl": "https://kubevela.io/docs/cli/vela_top/", "docsearch:version": "v1.10", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:description": "Launch UI to display the platform overview.", "title": "vela top | KubeVela", "viewport": "width=device-width, initial-scale=1.0", "theme-color": "#ffffff", "description": "Launch UI to display the platform overview.", "og:title": "vela top | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "language": "en", "msapplication-config": "/img/favicons/browserconfig.xml", "og:url": "https://kubevela.io/docs/cli/vela_top/", "docusaurus_version": "v1.10", "ogDescription": "Launch UI to display the platform overview.", "docsearch:language": "en", "ogTitle": "vela top | KubeVela", "docusaurus_tag": "docs-default-v1.10", "generator": "Docusaurus v2.4.3", "docusaurus_locale": "en", "scrapeId": "b9794233-3e9d-49ee-9264-71154866dd97", "sourceURL": "https://kubevela.io/docs/cli/vela_top", "url": "https://kubevela.io/docs/cli/vela_top/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela CLI: vela top\"?\n\nAssistant: Here are the recommended best practices:\n\n• Use -A flag to check actions in all namespaces.\n• Specify the environment name using -e flag for better context.\n• Use -n flag to limit the command to a specific Kubernetes namespace.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_top", "title": "KubeVela CLI: vela top", "description": "Launch UI to display the platform overview and diagnose the status for any specific application.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 14:43:10", "type": "best_practices", "page_metadata": {"twitter:card": "summary_large_image", "ogUrl": "https://kubevela.io/docs/cli/vela_top/", "docsearch:version": "v1.10", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:description": "Launch UI to display the platform overview.", "title": "vela top | KubeVela", "viewport": "width=device-width, initial-scale=1.0", "theme-color": "#ffffff", "description": "Launch UI to display the platform overview.", "og:title": "vela top | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "language": "en", "msapplication-config": "/img/favicons/browserconfig.xml", "og:url": "https://kubevela.io/docs/cli/vela_top/", "docusaurus_version": "v1.10", "ogDescription": "Launch UI to display the platform overview.", "docsearch:language": "en", "ogTitle": "vela top | KubeVela", "docusaurus_tag": "docs-default-v1.10", "generator": "Docusaurus v2.4.3", "docusaurus_locale": "en", "scrapeId": "b9794233-3e9d-49ee-9264-71154866dd97", "sourceURL": "https://kubevela.io/docs/cli/vela_top", "url": "https://kubevela.io/docs/cli/vela_top/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela CLI: vela exec\"?\n\nAssistant: Execute command in a container based vela application.\n\nHere's a detailed explanation:\n\n\n## Synopsis\nExecute command inside container based vela application.\n\n## Examples\n```bash\nexec [flags] APP_NAME -- COMMAND [args...]\n\n# Get output from running 'date' command from app pod, using the first container by default\nvela exec my-app -- date\n\n# Switch to raw terminal mode, sends stdin to 'bash' in containers of application my-app\n# and sends stdout/stderr from 'bash' back to the client\nvela exec my-app -i -t -- bash -il\n```\n\n## Options\n```bash\n      --cluster string                 filter the pod by the cluster name\n  -c, --component string               filter the pod by the component name\n      --container string               specify the container name\n  -e, --env string                     specify environment name for application\n  -h, --help                           help for exec\n  -n, --namespace string               specify the Kubernetes namespace to use\n  -p, --pod string                     specify the pod name\n      --pod-running-timeout duration   The length of time (like 5s, 2m, or 3h, higher than zero) to wait until at least one pod is running (default 1m0s)\n  -i, --stdin                          Pass stdin to the container (default true)\n  -t, --tty                            Stdin is a TTY (default true)\n```\n\n## Options inherited from parent commands\n```bash\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n\n## SEE ALSO\nGo Back to [CLI Commands](https://kubevela.io/docs/cli/vela/) Homepage.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_exec", "title": "KubeVela CLI: vela exec", "description": "Execute command in a container based vela application.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 14:43:20", "type": "overview", "page_metadata": {"docsearch:docusaurus_tag": "docs-default-v1.10", "og:description": "Execute command in a container.", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "title": "vela exec | KubeVela", "docusaurus_tag": "docs-default-v1.10", "viewport": "width=device-width, initial-scale=1.0", "docsearch:language": "en", "ogTitle": "vela exec | KubeVela", "language": "en", "ogUrl": "https://kubevela.io/docs/cli/vela_exec/", "description": "Execute command in a container.", "og:title": "vela exec | KubeVela", "theme-color": "#ffffff", "docusaurus_version": "v1.10", "twitter:card": "summary_large_image", "msapplication-config": "/img/favicons/browserconfig.xml", "ogDescription": "Execute command in a container.", "og:url": "https://kubevela.io/docs/cli/vela_exec/", "docusaurus_locale": "en", "docsearch:version": "v1.10", "generator": "Docusaurus v2.4.3", "scrapeId": "921226e9-404d-42a3-bb58-3841957eaafe", "sourceURL": "https://kubevela.io/docs/cli/vela_exec", "url": "https://kubevela.io/docs/cli/vela_exec/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"KubeVela CLI: vela exec\"?\n\nAssistant: Here are some code examples:\n\n### Basic exec command\n```yaml\nexec [flags] APP_NAME -- COMMAND [args...]\n```\n\n### Get output from date command\n```yaml\nvela exec my-app -- date\n```\n\n### Switch to raw terminal mode\n```yaml\nvela exec my-app -i -t -- bash -il\n```\n\n### Options for exec command\n```yaml\n--cluster string                 filter the pod by the cluster name\n-c, --component string               filter the pod by the component name\n--container string               specify the container name\n-e, --env string                     specify environment name for application\n-h, --help                           help for exec\n-n, --namespace string               specify the Kubernetes namespace to use\n-p, --pod string                     specify the pod name\n--pod-running-timeout duration   The length of time (like 5s, 2m, or 3h, higher than zero) to wait until at least one pod is running (default 1m0s)\n-i, --stdin                          Pass stdin to the container (default true)\n-t, --tty                            Stdin is a TTY (default true)\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_exec", "title": "KubeVela CLI: vela exec", "description": "Execute command in a container based vela application.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 14:43:20", "type": "code_examples", "page_metadata": {"docsearch:docusaurus_tag": "docs-default-v1.10", "og:description": "Execute command in a container.", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "title": "vela exec | KubeVela", "docusaurus_tag": "docs-default-v1.10", "viewport": "width=device-width, initial-scale=1.0", "docsearch:language": "en", "ogTitle": "vela exec | KubeVela", "language": "en", "ogUrl": "https://kubevela.io/docs/cli/vela_exec/", "description": "Execute command in a container.", "og:title": "vela exec | KubeVela", "theme-color": "#ffffff", "docusaurus_version": "v1.10", "twitter:card": "summary_large_image", "msapplication-config": "/img/favicons/browserconfig.xml", "ogDescription": "Execute command in a container.", "og:url": "https://kubevela.io/docs/cli/vela_exec/", "docusaurus_locale": "en", "docsearch:version": "v1.10", "generator": "Docusaurus v2.4.3", "scrapeId": "921226e9-404d-42a3-bb58-3841957eaafe", "sourceURL": "https://kubevela.io/docs/cli/vela_exec", "url": "https://kubevela.io/docs/cli/vela_exec/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela CLI: vela exec\"?\n\nAssistant: Here are the recommended best practices:\n\n• If you like KubeVela, give it a star on GitHub!\n• Check the release notes for updates and new features.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_exec", "title": "KubeVela CLI: vela exec", "description": "Execute command in a container based vela application.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 14:43:20", "type": "best_practices", "page_metadata": {"docsearch:docusaurus_tag": "docs-default-v1.10", "og:description": "Execute command in a container.", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "title": "vela exec | KubeVela", "docusaurus_tag": "docs-default-v1.10", "viewport": "width=device-width, initial-scale=1.0", "docsearch:language": "en", "ogTitle": "vela exec | KubeVela", "language": "en", "ogUrl": "https://kubevela.io/docs/cli/vela_exec/", "description": "Execute command in a container.", "og:title": "vela exec | KubeVela", "theme-color": "#ffffff", "docusaurus_version": "v1.10", "twitter:card": "summary_large_image", "msapplication-config": "/img/favicons/browserconfig.xml", "ogDescription": "Execute command in a container.", "og:url": "https://kubevela.io/docs/cli/vela_exec/", "docusaurus_locale": "en", "docsearch:version": "v1.10", "generator": "Docusaurus v2.4.3", "scrapeId": "921226e9-404d-42a3-bb58-3841957eaafe", "sourceURL": "https://kubevela.io/docs/cli/vela_exec", "url": "https://kubevela.io/docs/cli/vela_exec/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela CLI: vela env init\"?\n\nAssistant: Create environment for vela applications to run.\n\nHere's a detailed explanation:\n\n\n## Synopsis\nCreate environment for vela applications to run.\n\n## Examples\n```codeBlockLines_e6Vv\nvela env init test --namespace test\n```\n\n## Options\n```codeBlockLines_e6Vv\n  -h, --help               help for init\n      --namespace string   specify K8s namespace for env\n```\n\n## Options inherited from parent commands\n```codeBlockLines_e6Vv\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n\n## SEE ALSO\n- [vela env](https://kubevela.io/docs/cli/vela_env/) \\- Manage environments for vela applications to run.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_env_init", "title": "KubeVela CLI: vela env init", "description": "Create environment for vela applications to run.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 14:43:36", "type": "overview", "page_metadata": {"twitter:card": "summary_large_image", "title": "vela env init | KubeVela", "og:url": "https://kubevela.io/docs/cli/vela_env_init/", "docsearch:language": "en", "docsearch:docusaurus_tag": "docs-default-v1.10", "viewport": "width=device-width, initial-scale=1.0", "generator": "Docusaurus v2.4.3", "language": "en", "ogDescription": "Create environment for vela applications to run.", "og:title": "vela env init | KubeVela", "theme-color": "#ffffff", "msapplication-config": "/img/favicons/browserconfig.xml", "docusaurus_locale": "en", "docsearch:version": "v1.10", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogTitle": "vela env init | KubeVela", "ogUrl": "https://kubevela.io/docs/cli/vela_env_init/", "description": "Create environment for vela applications to run.", "og:description": "Create environment for vela applications to run.", "docusaurus_tag": "docs-default-v1.10", "docusaurus_version": "v1.10", "scrapeId": "0df5e4d7-fc37-48b7-aebe-f0d041c43d50", "sourceURL": "https://kubevela.io/docs/cli/vela_env_init", "url": "https://kubevela.io/docs/cli/vela_env_init/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"KubeVela CLI: vela env init\"?\n\nAssistant: Here are some code examples:\n\n### Basic Command to Initialize Environment\n```yaml\nvela env init <envName>\n```\n\n### Example Command to Initialize Environment\n```yaml\nvela env init test --namespace test\n```\n\n### Options for Init Command\n```yaml\n  -h, --help               help for init\n      --namespace string   specify K8s namespace for env\n```\n\n### Inherited Options from Parent Commands\n```yaml\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_env_init", "title": "KubeVela CLI: vela env init", "description": "Create environment for vela applications to run.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 14:43:36", "type": "code_examples", "page_metadata": {"twitter:card": "summary_large_image", "title": "vela env init | KubeVela", "og:url": "https://kubevela.io/docs/cli/vela_env_init/", "docsearch:language": "en", "docsearch:docusaurus_tag": "docs-default-v1.10", "viewport": "width=device-width, initial-scale=1.0", "generator": "Docusaurus v2.4.3", "language": "en", "ogDescription": "Create environment for vela applications to run.", "og:title": "vela env init | KubeVela", "theme-color": "#ffffff", "msapplication-config": "/img/favicons/browserconfig.xml", "docusaurus_locale": "en", "docsearch:version": "v1.10", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogTitle": "vela env init | KubeVela", "ogUrl": "https://kubevela.io/docs/cli/vela_env_init/", "description": "Create environment for vela applications to run.", "og:description": "Create environment for vela applications to run.", "docusaurus_tag": "docs-default-v1.10", "docusaurus_version": "v1.10", "scrapeId": "0df5e4d7-fc37-48b7-aebe-f0d041c43d50", "sourceURL": "https://kubevela.io/docs/cli/vela_env_init", "url": "https://kubevela.io/docs/cli/vela_env_init/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela CLI: vela env init\"?\n\nAssistant: Here are the recommended best practices:\n\n• Use the --namespace option to specify the Kubernetes namespace for the environment.\n• Use -V or --verbosity to set the log level verbosity for better debugging.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_env_init", "title": "KubeVela CLI: vela env init", "description": "Create environment for vela applications to run.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 14:43:36", "type": "best_practices", "page_metadata": {"twitter:card": "summary_large_image", "title": "vela env init | KubeVela", "og:url": "https://kubevela.io/docs/cli/vela_env_init/", "docsearch:language": "en", "docsearch:docusaurus_tag": "docs-default-v1.10", "viewport": "width=device-width, initial-scale=1.0", "generator": "Docusaurus v2.4.3", "language": "en", "ogDescription": "Create environment for vela applications to run.", "og:title": "vela env init | KubeVela", "theme-color": "#ffffff", "msapplication-config": "/img/favicons/browserconfig.xml", "docusaurus_locale": "en", "docsearch:version": "v1.10", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogTitle": "vela env init | KubeVela", "ogUrl": "https://kubevela.io/docs/cli/vela_env_init/", "description": "Create environment for vela applications to run.", "og:description": "Create environment for vela applications to run.", "docusaurus_tag": "docs-default-v1.10", "docusaurus_version": "v1.10", "scrapeId": "0df5e4d7-fc37-48b7-aebe-f0d041c43d50", "sourceURL": "https://kubevela.io/docs/cli/vela_env_init", "url": "https://kubevela.io/docs/cli/vela_env_init/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"Manage UI Schema for Addons\"?\n\nAssistant: Manage UI schema for addons in KubeVela.\n\nHere's a detailed explanation:\n\n\n## Synopsis\nManage UI schema for addons.\n\n## Options\n```codeBlockLines_e6Vv\n  -h, --help   help for uischema\n```\n\n## Options inherited from parent commands\n```codeBlockLines_e6Vv\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n\n## SEE ALSO\n- [vela uischema apply](https://kubevela.io/docs/cli/vela_uischema_apply/) \\- apply \\<ui schema file/dir path>\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_uischema", "title": "Manage UI Schema for Addons", "description": "Manage UI schema for addons in KubeVela.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 14:43:42", "type": "overview", "page_metadata": {"viewport": "width=device-width, initial-scale=1.0", "twitter:card": "summary_large_image", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docsearch:docusaurus_tag": "docs-default-v1.10", "ogDescription": "Manage UI schema for addons.", "docusaurus_locale": "en", "docusaurus_tag": "docs-default-v1.10", "docusaurus_version": "v1.10", "docsearch:language": "en", "msapplication-config": "/img/favicons/browserconfig.xml", "generator": "Docusaurus v2.4.3", "ogTitle": "vela uischema | KubeVela", "theme-color": "#ffffff", "docsearch:version": "v1.10", "og:title": "vela uischema | KubeVela", "description": "Manage UI schema for addons.", "og:description": "Manage UI schema for addons.", "title": "vela uischema | KubeVela", "language": "en", "og:url": "https://kubevela.io/docs/cli/vela_uischema/", "ogUrl": "https://kubevela.io/docs/cli/vela_uischema/", "scrapeId": "0e687ca7-f999-4270-939f-4461977fec6b", "sourceURL": "https://kubevela.io/docs/cli/vela_uischema", "url": "https://kubevela.io/docs/cli/vela_uischema/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"Manage UI Schema for Addons\"?\n\nAssistant: Here are some code examples:\n\n### Options\n```yaml\n```codeBlockLines_e6Vv\n  -h, --help   help for uischema\n```\n```\n\n### Options inherited from parent commands\n```yaml\n```codeBlockLines_e6Vv\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_uischema", "title": "Manage UI Schema for Addons", "description": "Manage UI schema for addons in KubeVela.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 14:43:42", "type": "code_examples", "page_metadata": {"viewport": "width=device-width, initial-scale=1.0", "twitter:card": "summary_large_image", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docsearch:docusaurus_tag": "docs-default-v1.10", "ogDescription": "Manage UI schema for addons.", "docusaurus_locale": "en", "docusaurus_tag": "docs-default-v1.10", "docusaurus_version": "v1.10", "docsearch:language": "en", "msapplication-config": "/img/favicons/browserconfig.xml", "generator": "Docusaurus v2.4.3", "ogTitle": "vela uischema | KubeVela", "theme-color": "#ffffff", "docsearch:version": "v1.10", "og:title": "vela uischema | KubeVela", "description": "Manage UI schema for addons.", "og:description": "Manage UI schema for addons.", "title": "vela uischema | KubeVela", "language": "en", "og:url": "https://kubevela.io/docs/cli/vela_uischema/", "ogUrl": "https://kubevela.io/docs/cli/vela_uischema/", "scrapeId": "0e687ca7-f999-4270-939f-4461977fec6b", "sourceURL": "https://kubevela.io/docs/cli/vela_uischema", "url": "https://kubevela.io/docs/cli/vela_uischema/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"Manage UI Schema for Addons\"?\n\nAssistant: Here are the recommended best practices:\n\n• If you like KubeVela, give it a star on GitHub!\n• Check the release notes for updates.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_uischema", "title": "Manage UI Schema for Addons", "description": "Manage UI schema for addons in KubeVela.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 14:43:42", "type": "best_practices", "page_metadata": {"viewport": "width=device-width, initial-scale=1.0", "twitter:card": "summary_large_image", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docsearch:docusaurus_tag": "docs-default-v1.10", "ogDescription": "Manage UI schema for addons.", "docusaurus_locale": "en", "docusaurus_tag": "docs-default-v1.10", "docusaurus_version": "v1.10", "docsearch:language": "en", "msapplication-config": "/img/favicons/browserconfig.xml", "generator": "Docusaurus v2.4.3", "ogTitle": "vela uischema | KubeVela", "theme-color": "#ffffff", "docsearch:version": "v1.10", "og:title": "vela uischema | KubeVela", "description": "Manage UI schema for addons.", "og:description": "Manage UI schema for addons.", "title": "vela uischema | KubeVela", "language": "en", "og:url": "https://kubevela.io/docs/cli/vela_uischema/", "ogUrl": "https://kubevela.io/docs/cli/vela_uischema/", "scrapeId": "0e687ca7-f999-4270-939f-4461977fec6b", "sourceURL": "https://kubevela.io/docs/cli/vela_uischema", "url": "https://kubevela.io/docs/cli/vela_uischema/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela Documentation\"?\n\nAssistant: This page provides information about the KubeVela v1.10.0 release and links to relevant resources.\n\nHere's a detailed explanation:\n\n\n## Release Information\nKubeVela v1.10.0 is now available as of 2025-02-06. You can read the release notes [here](https://github.com/kubevela/kubevela/releases/tag/v1.10.0).\n", "metadata": {"source_url": "https://kubevela.io/docs/tutorials/workflows", "title": "KubeVela Documentation", "description": "This page provides information about the KubeVela v1.10.0 release and links to relevant resources.", "has_code_examples": false, "has_best_practices": true, "section_count": 1, "timestamp": "2025-02-28 14:43:47", "type": "overview", "page_metadata": {"title": "Manage Workflow | KubeVela", "ogDescription": "This article introduces the usage of Workflow and gives you a full picture of it.", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "msapplication-config": "/img/favicons/browserconfig.xml", "og:url": "https://kubevela.io/docs/tutorials/workflows/", "language": "en", "og:description": "This article introduces the usage of Workflow and gives you a full picture of it.", "generator": "Docusaurus v2.4.3", "twitter:card": "summary_large_image", "docsearch:version": "v1.10", "viewport": "width=device-width, initial-scale=1.0", "docusaurus_version": "v1.10", "og:title": "Manage Workflow | KubeVela", "docsearch:docusaurus_tag": "docs-default-v1.10", "ogTitle": "Manage Workflow | KubeVela", "docsearch:language": "en", "description": "This article introduces the usage of Workflow and gives you a full picture of it.", "docusaurus_tag": "docs-default-v1.10", "docusaurus_locale": "en", "theme-color": "#ffffff", "ogUrl": "https://kubevela.io/docs/tutorials/workflows/", "scrapeId": "4587309a-83ae-4d86-96cf-6ea36df59e13", "sourceURL": "https://kubevela.io/docs/tutorials/workflows", "url": "https://kubevela.io/docs/tutorials/workflows/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela Documentation\"?\n\nAssistant: Here are the recommended best practices:\n\n• If you like KubeVela, give it a star on GitHub!\n• For more detailed information, refer to the migrated documentation.\n", "metadata": {"source_url": "https://kubevela.io/docs/tutorials/workflows", "title": "KubeVela Documentation", "description": "This page provides information about the KubeVela v1.10.0 release and links to relevant resources.", "has_code_examples": false, "has_best_practices": true, "section_count": 1, "timestamp": "2025-02-28 14:43:47", "type": "best_practices", "page_metadata": {"title": "Manage Workflow | KubeVela", "ogDescription": "This article introduces the usage of Workflow and gives you a full picture of it.", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "msapplication-config": "/img/favicons/browserconfig.xml", "og:url": "https://kubevela.io/docs/tutorials/workflows/", "language": "en", "og:description": "This article introduces the usage of Workflow and gives you a full picture of it.", "generator": "Docusaurus v2.4.3", "twitter:card": "summary_large_image", "docsearch:version": "v1.10", "viewport": "width=device-width, initial-scale=1.0", "docusaurus_version": "v1.10", "og:title": "Manage Workflow | KubeVela", "docsearch:docusaurus_tag": "docs-default-v1.10", "ogTitle": "Manage Workflow | KubeVela", "docsearch:language": "en", "description": "This article introduces the usage of Workflow and gives you a full picture of it.", "docusaurus_tag": "docs-default-v1.10", "docusaurus_locale": "en", "theme-color": "#ffffff", "ogUrl": "https://kubevela.io/docs/tutorials/workflows/", "scrapeId": "4587309a-83ae-4d86-96cf-6ea36df59e13", "sourceURL": "https://kubevela.io/docs/tutorials/workflows", "url": "https://kubevela.io/docs/tutorials/workflows/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"Understanding JSON Structure\"?\n\nAssistant: This page provides an overview of JSON structure, including its syntax, data types, and best practices for usage.\n\nHere's a detailed explanation:\n\n\n## Introduction to JSON\nJSON (JavaScript Object Notation) is a lightweight data interchange format that is easy for humans to read and write, and easy for machines to parse and generate.\n\n## JSON Syntax\nJSON syntax is derived from JavaScript object notation. It consists of key/value pairs, where keys are strings and values can be strings, numbers, objects, arrays, booleans, or null.\n\n## Data Types in JSON\nThe data types supported in JSON include:\n1. String\n2. Number\n3. Object\n4. Array\n5. Boolean\n6. Null\n\n## Best Practices\nWhen working with JSON, consider the following best practices:\n- Use consistent naming conventions for keys.\n- Keep the structure simple and avoid deeply nested objects.\n", "metadata": {"source_url": "https://kubevela.io/docs/tutorials/vela-top", "title": "Understanding JSON Structure", "description": "This page provides an overview of JSON structure, including its syntax, data types, and best practices for usage.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 14:44:19", "type": "overview", "page_metadata": {"twitter:card": "summary_large_image", "title": "Vela Top | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docsearch:language": "en", "docusaurus_tag": "docs-default-v1.10", "language": "en", "og:title": "Vela Top | KubeVela", "og:description": "In this guide, we want to introduce you how to use the vela top tool in KubeVela. This tool is a UI based CLI tool provided in KubeVela. By using it, you can obtain the overview information of the platform and diagnose the resource status of the application.", "ogDescription": "In this guide, we want to introduce you how to use the vela top tool in KubeVela. This tool is a UI based CLI tool provided in KubeVela. By using it, you can obtain the overview information of the platform and diagnose the resource status of the application.", "docusaurus_version": "v1.10", "theme-color": "#ffffff", "ogTitle": "Vela Top | KubeVela", "viewport": "width=device-width,initial-scale=1", "docsearch:version": "v1.10", "og:url": "https://kubevela.io/docs/tutorials/vela-top/", "docsearch:docusaurus_tag": "docs-default-v1.10", "generator": "Docusaurus v2.4.3", "description": "In this guide, we want to introduce you how to use the vela top tool in KubeVela. This tool is a UI based CLI tool provided in KubeVela. By using it, you can obtain the overview information of the platform and diagnose the resource status of the application.", "msapplication-config": "/img/favicons/browserconfig.xml", "docusaurus_locale": "en", "ogUrl": "https://kubevela.io/docs/tutorials/vela-top/", "scrapeId": "d655d0c5-d029-428e-9171-879d800907c3", "sourceURL": "https://kubevela.io/docs/tutorials/vela-top", "url": "https://kubevela.io/docs/tutorials/vela-top/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"Understanding JSON Structure\"?\n\nAssistant: Here are some code examples:\n\n### Basic JSON Example\n```yaml\n{\n  \"name\": \"John\",\n  \"age\": 30,\n  \"isStudent\": false,\n  \"courses\": [\"Math\", \"Science\"]\n}\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/tutorials/vela-top", "title": "Understanding JSON Structure", "description": "This page provides an overview of JSON structure, including its syntax, data types, and best practices for usage.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 14:44:19", "type": "code_examples", "page_metadata": {"twitter:card": "summary_large_image", "title": "Vela Top | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docsearch:language": "en", "docusaurus_tag": "docs-default-v1.10", "language": "en", "og:title": "Vela Top | KubeVela", "og:description": "In this guide, we want to introduce you how to use the vela top tool in KubeVela. This tool is a UI based CLI tool provided in KubeVela. By using it, you can obtain the overview information of the platform and diagnose the resource status of the application.", "ogDescription": "In this guide, we want to introduce you how to use the vela top tool in KubeVela. This tool is a UI based CLI tool provided in KubeVela. By using it, you can obtain the overview information of the platform and diagnose the resource status of the application.", "docusaurus_version": "v1.10", "theme-color": "#ffffff", "ogTitle": "Vela Top | KubeVela", "viewport": "width=device-width,initial-scale=1", "docsearch:version": "v1.10", "og:url": "https://kubevela.io/docs/tutorials/vela-top/", "docsearch:docusaurus_tag": "docs-default-v1.10", "generator": "Docusaurus v2.4.3", "description": "In this guide, we want to introduce you how to use the vela top tool in KubeVela. This tool is a UI based CLI tool provided in KubeVela. By using it, you can obtain the overview information of the platform and diagnose the resource status of the application.", "msapplication-config": "/img/favicons/browserconfig.xml", "docusaurus_locale": "en", "ogUrl": "https://kubevela.io/docs/tutorials/vela-top/", "scrapeId": "d655d0c5-d029-428e-9171-879d800907c3", "sourceURL": "https://kubevela.io/docs/tutorials/vela-top", "url": "https://kubevela.io/docs/tutorials/vela-top/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"Understanding JSON Structure\"?\n\nAssistant: Here are the recommended best practices:\n\n• Use double quotes for keys and string values.\n• Validate JSON using online tools or libraries before use.\n", "metadata": {"source_url": "https://kubevela.io/docs/tutorials/vela-top", "title": "Understanding JSON Structure", "description": "This page provides an overview of JSON structure, including its syntax, data types, and best practices for usage.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 14:44:19", "type": "best_practices", "page_metadata": {"twitter:card": "summary_large_image", "title": "Vela Top | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docsearch:language": "en", "docusaurus_tag": "docs-default-v1.10", "language": "en", "og:title": "Vela Top | KubeVela", "og:description": "In this guide, we want to introduce you how to use the vela top tool in KubeVela. This tool is a UI based CLI tool provided in KubeVela. By using it, you can obtain the overview information of the platform and diagnose the resource status of the application.", "ogDescription": "In this guide, we want to introduce you how to use the vela top tool in KubeVela. This tool is a UI based CLI tool provided in KubeVela. By using it, you can obtain the overview information of the platform and diagnose the resource status of the application.", "docusaurus_version": "v1.10", "theme-color": "#ffffff", "ogTitle": "Vela Top | KubeVela", "viewport": "width=device-width,initial-scale=1", "docsearch:version": "v1.10", "og:url": "https://kubevela.io/docs/tutorials/vela-top/", "docsearch:docusaurus_tag": "docs-default-v1.10", "generator": "Docusaurus v2.4.3", "description": "In this guide, we want to introduce you how to use the vela top tool in KubeVela. This tool is a UI based CLI tool provided in KubeVela. By using it, you can obtain the overview information of the platform and diagnose the resource status of the application.", "msapplication-config": "/img/favicons/browserconfig.xml", "docusaurus_locale": "en", "ogUrl": "https://kubevela.io/docs/tutorials/vela-top/", "scrapeId": "d655d0c5-d029-428e-9171-879d800907c3", "sourceURL": "https://kubevela.io/docs/tutorials/vela-top", "url": "https://kubevela.io/docs/tutorials/vela-top/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"Learn Appfile\"?\n\nAssistant: This page provides an overview of how to use Appfile in KubeVela, including examples and workflows for building and deploying applications.\n\nHere's a detailed explanation:\n\n\n## A sample Appfile\nname: testapp\n\nservices:\n  frontend: # 1st service\n\n    image: oamdev/testapp:v1\n    build:\n      docker:\n        file: Dockerfile\n        context: .\n\n    cmd: [\"node\", \"server.js\"]\n    port: 8080\n\n    route: # trait\n      domain: example.com\n      rules:\n        - path: /testapp\n          rewriteTarget: /\n\n  backend: # 2nd service\n    type: task # workload type\n    image: perl\n    cmd: [\"perl\",  \"-Mbignum=bpi\", \"-wle\", \"print bpi(2000)\"]\n\nUnder the hood, Appfile will build the image from source code, and then generate Application resource with the image name.\n\n## Schema\nname: _app-name_\n\nservices:\n  _service-name_:\n    # If `build` section exists, this field will be used as the name to build image. Otherwise, KubeVela will try to pull the image with given name directly.\n    image: oamdev/testapp:v1\n\n    build:\n      docker:\n        file: _Dockerfile_path_ # relative path is supported, e.g. \"./Dockerfile\"\n        context: _build_context_path_ # relative path is supported, e.g. \".\"\n\n      push:\n        local: kind # optionally push to local KinD cluster instead of remote registry\n\n    type: webservice (default) | worker | task\n\n    # detailed configurations of workload\n    ... properties of the specified workload  ...\n\n    _trait_1_:\n      # properties of trait 1\n\n    _trait_2_:\n      # properties of trait 2\n\n    ... more traits and their properties ...\n\n  _another_service_name_: # more services can be defined\n    ...\n\nTo learn about how to set the properties of specific workload type or trait, please use `vela show <TYPE | TRAIT>`.\n\n## Example Workflow\nIn the following workflow, we will build and deploy an example NodeJS app under examples/testapp.\n\n### Prerequisites\n\n- [Docker](https://docs.docker.com/get-docker/) installed on the host\n- KubeVela installed and configured\n\n### 1. Download test app code\n\ngit clone and go to the testapp directory:\n\ngit clone https://github.com/kubevela/kubevela.git\ncd kubevela/docs/examples/testapp\n\nThe example contains NodeJS app code, Dockerfile to build the app.\n\n### 2. Deploy app in one command\n\nIn the directory there is a vela.yaml which follows Appfile format supported by Vela.\nWe are going to use it to build and deploy the app.\n\n> NOTE: please change `oamdev` to your own registry account so you can push. Or, you could try the alternative approach in `Local testing without pushing image remotely` section.\n\nRun the following command:\n\nvela up\n\nCheck the status of the service:\n\nvela status testapp\n\n#### Alternative: Local testing without pushing image remotely\n\nIf you have local kind cluster running, you may try the local push option. No remote container registry is needed in this case.\n\nAdd local option to build:\n\n    build:\n      # push image into local kind cluster without remote transfer\n      push:\n        local: kind\n\nThen deploy the app to kind:\n\nvela up\n\n(Advanced) Check rendered manifests\n\nBy default, Vela renders the final manifests in .vela/deploy.yaml.\n\n## What's Next?\nPlay more with your app:\n\n- [Check Application Logs](https://kubevela.io/docs/developers/check-logs/)\n- [Execute Commands in Application Container](https://kubevela.io/docs/developers/exec-cmd/)\n- [Access Application via Route](https://kubevela.io/docs/developers/port-forward/)\n", "metadata": {"source_url": "https://kubevela.io/docs/developers/learn-appfile", "title": "Learn Appfile", "description": "This page provides an overview of how to use Appfile in KubeVela, including examples and workflows for building and deploying applications.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 14:44:37", "type": "overview", "page_metadata": {"docusaurus_tag": "docs-default-v1.10", "theme-color": "#ffffff", "msapplication-config": "/img/favicons/browserconfig.xml", "docsearch:version": "v1.10", "generator": "Docusaurus v2.4.3", "docsearch:language": "en", "docusaurus_locale": "en", "ogTitle": "Learning Appfile | KubeVela", "ogUrl": "https://kubevela.io/docs/developers/learn-appfile/", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:title": "Learning Appfile | KubeVela", "twitter:card": "summary_large_image", "viewport": "width=device-width, initial-scale=1.0", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "language": "en", "og:url": "https://kubevela.io/docs/developers/learn-appfile/", "docusaurus_version": "v1.10", "ogDescription": "A sample Appfile is as below:", "title": "Learning Appfile | KubeVela", "og:description": "A sample Appfile is as below:", "description": "A sample Appfile is as below:", "scrapeId": "734e4824-99d7-40f2-8e95-c6aee0c99e9b", "sourceURL": "https://kubevela.io/docs/developers/learn-appfile", "url": "https://kubevela.io/docs/developers/learn-appfile/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"Learn Appfile\"?\n\nAssistant: Here are some code examples:\n\n### Sample Appfile\n```yaml\nname: testapp\n\nservices:\n  frontend: # 1st service\n\n    image: oamdev/testapp:v1\n    build:\n      docker:\n        file: Dockerfile\n        context: .\n\n    cmd: [\"node\", \"server.js\"]\n    port: 8080\n\n    route: # trait\n      domain: example.com\n      rules:\n        - path: /testapp\n          rewriteTarget: /\n\n  backend: # 2nd service\n    type: task # workload type\n    image: perl\n    cmd: [\"perl\",  \"-Mbignum=bpi\", \"-wle\", \"print bpi(2000)\"]\n```\n\n### Download test app code\n```yaml\ngit clone https://github.com/kubevela/kubevela.git\ncd kubevela/docs/examples/testapp\n```\n\n### Deploy app in one command\n```yaml\nvela up\n```\n\n### Check status of the service\n```yaml\nvela status testapp\n```\n\n### Local testing without pushing image remotely\n```yaml\n    build:\n      # push image into local kind cluster without remote transfer\n      push:\n        local: kind\n\n      docker:\n        file: Dockerfile\n        context: .\n```\n\n### Rendered manifests\n```yaml\napiVersion: core.oam.dev/v1alpha2\nkind: ApplicationConfiguration\nmetadata:\n  name: testapp\n  namespace: default\nspec:\n  components:\n  - componentName: express-server\n---\napiVersion: core.oam.dev/v1alpha2\nkind: Component\nmetadata:\n  name: express-server\n  namespace: default\nspec:\n  workload:\n    apiVersion: apps/v1\n    kind: Deployment\n    metadata:\n      name: express-server\n    ...\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/developers/learn-appfile", "title": "Learn Appfile", "description": "This page provides an overview of how to use Appfile in KubeVela, including examples and workflows for building and deploying applications.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 14:44:37", "type": "code_examples", "page_metadata": {"docusaurus_tag": "docs-default-v1.10", "theme-color": "#ffffff", "msapplication-config": "/img/favicons/browserconfig.xml", "docsearch:version": "v1.10", "generator": "Docusaurus v2.4.3", "docsearch:language": "en", "docusaurus_locale": "en", "ogTitle": "Learning Appfile | KubeVela", "ogUrl": "https://kubevela.io/docs/developers/learn-appfile/", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:title": "Learning Appfile | KubeVela", "twitter:card": "summary_large_image", "viewport": "width=device-width, initial-scale=1.0", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "language": "en", "og:url": "https://kubevela.io/docs/developers/learn-appfile/", "docusaurus_version": "v1.10", "ogDescription": "A sample Appfile is as below:", "title": "Learning Appfile | KubeVela", "og:description": "A sample Appfile is as below:", "description": "A sample Appfile is as below:", "scrapeId": "734e4824-99d7-40f2-8e95-c6aee0c99e9b", "sourceURL": "https://kubevela.io/docs/developers/learn-appfile", "url": "https://kubevela.io/docs/developers/learn-appfile/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"Learn Appfile\"?\n\nAssistant: Here are the recommended best practices:\n\n• Change `oamdev` to your own registry account to push images.\n• Use `vela show <TYPE | TRAIT>` to learn about specific workload type or trait properties.\n", "metadata": {"source_url": "https://kubevela.io/docs/developers/learn-appfile", "title": "Learn Appfile", "description": "This page provides an overview of how to use Appfile in KubeVela, including examples and workflows for building and deploying applications.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 14:44:37", "type": "best_practices", "page_metadata": {"docusaurus_tag": "docs-default-v1.10", "theme-color": "#ffffff", "msapplication-config": "/img/favicons/browserconfig.xml", "docsearch:version": "v1.10", "generator": "Docusaurus v2.4.3", "docsearch:language": "en", "docusaurus_locale": "en", "ogTitle": "Learning Appfile | KubeVela", "ogUrl": "https://kubevela.io/docs/developers/learn-appfile/", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:title": "Learning Appfile | KubeVela", "twitter:card": "summary_large_image", "viewport": "width=device-width, initial-scale=1.0", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "language": "en", "og:url": "https://kubevela.io/docs/developers/learn-appfile/", "docusaurus_version": "v1.10", "ogDescription": "A sample Appfile is as below:", "title": "Learning Appfile | KubeVela", "og:description": "A sample Appfile is as below:", "description": "A sample Appfile is as below:", "scrapeId": "734e4824-99d7-40f2-8e95-c6aee0c99e9b", "sourceURL": "https://kubevela.io/docs/developers/learn-appfile", "url": "https://kubevela.io/docs/developers/learn-appfile/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela Architecture\"?\n\nAssistant: This page provides an overview of the architecture of KubeVela, detailing its components, functionality, and intended users.\n\nHere's a detailed explanation:\n\n\n## KubeVela is a Control Plane System\nKubeVela orchestrates application components, cloud resources and pipeline over multiple clusters and hybrid environments. It is designed to be an application delivery and operation control plane instead of a runtime plugin.\n\nThe Application concept is the main KubeVela API, it's designed as declarative and application-centric which can be integrated with upstream CI pipelines and GitOps tools easily.\n\nIn implementation, KubeVela relies on a dedicated Kubernetes cluster to achieve above goals. We chose to rely on Kubernetes as the control plane implementation because this approach is battle tested and brings determinism, convergence and automation to application management at scale. In detail, KubeVela is composed by several parts:\n\n- KubeVela Core Controller that provides the core control logic of the entire system. For example, handling KubeVela API resources, orchestrating workflow, storing revisions, parsing and executing CUE code, garbage collecting, etc.\n- Cluster Gateway Controller that provides a unified multi-cluster access interface. Working as Kubernetes Aggregated API Server, the gateway leverages the native Authentication and Authorization modules and enforces secure and transparent access to managed clusters.\n- Addons that register and manage definitions along with extended CRD controllers that KubeVela needed to work. For example, several frequently used addons are listed below:\n  - The VelaUX addon is the Web UI for KubeVela. Besides, it acts more like a full functioned \"App Delivery Platform\" in the architecture that incorporates business logic into fundamental APIs and provides out-of-box user experiences for non-k8s-expert users.\n  - The Workflow addon is a standalone workflow engine that can run as pipeline to deploy multiple applications or other actions. A big difference to traditional ways, it mainly drives the IaC based API with the use of CUE instead of running pods for every step. It shares the same mechanism with the application workflow of KubeVela core controller.\n  - The Vela Prism addon is an extension API server for KubeVela and built upon the Kubernetes Aggregated API Server. It projects native APIs like creating dashboards on Grafana into Kubernetes resource APIs, so that users can manage 3rd-party resources as Kubernetes native resources.\n  - The Terraform addon allows users to use Terraform to manage cloud resources through Kubernetes Custom Resources.\n  - Besides, KubeVela has a large growing catalog that already contains more than 50 community addons for integrations including ArgoCD, FluxCD, Backstage, OpenKruise, Dapr, Crossplane, Terraform, OpenYurt, etc.\n- If you don't have any Kubernetes cluster, the VelaD tool, which is building on top of k3s & k3d, can help launch all these things. It integrates KubeVela with Kubernetes cores, which can be extremely helpful for building dev/test environments.\n\nThis control plane Kubernetes cluster will be referenced as the \"control plane cluster\" in the following documentation.\n\n## Runtime Infrastructure\nThe runtime infrastructure is where the applications are actually running on.\nKubeVela itself is fully runtime infrastructure agnostic and hence allows you to deploy application to both Kubernetes based infrastructure and non-Kubernetes environments such as cloud platforms and edge devices.\n\n## KubeVela is Programmable\nIn real world, application deployment tends to be complex and varies from teams, environments and scenarios. Hence, KubeVela introduced the Definition Mechanism which is a fully programmable approach to implement its deployment model so it can adapt to every need of your application delivery use case in-place.\n\n## Who should use KubeVela?\n- Platform builders for PaaS, Serverless, Application Management/Delivery systems\n  - KubeVela works as an application delivery engine that you could build your advanced platform with.\n- ISV, SaaS owners, and Application Architects who need to distribute software to anywhere\n  - KubeVela has full extension and integration capabilities to allow users to distribute applications with customized addons easily. Think about an App Store but on Kubernetes and clouds.\n- Application Developers, Operators, DevOps Engineers\n  - VelaUX is an addon of KubeVela, with this addon enabled, it provides an out-of-box modern application Continuous Delivery (CD) and Management platform with an easy-to-use UI console.\n\n## Conclusion\n- OAM(Open Application Model) is the model behind KubeVela, it provides a platform-agnostic application model including the best practices and methodology for different vendors to follow. The evolution of the model depends primarily on the practices of KubeVela currently.\n- KubeVela is the control plane running on Kubernetes, it works as a CRD controller and brings OAM model into your Cloud Native PaaS along with lots of addon capabilities.\n- VelaUX is the app delivery platform, it's also one of the KubeVela addons, which provides out-of-box application delivery and management capabilities with restful API and UI console.\n\nThe KubeVela team will mainly focus on the control plane. By building VelaUX, we aim to provide out-of-box solutions for small and medium sized companies, and also eat our own dog food and make the extension, integration and the addon system capabilities of KubeVela better.\n\n## Next Step\n- View User Guide to look on more of what you can achieve with KubeVela.\n- KubeVela is a Control Plane System\n  - Runtime Infrastructure\n- KubeVela is Programmable\n- Who should use KubeVela?\n- Conclusion\n- Next Step\n", "metadata": {"source_url": "https://kubevela.io/docs/getting-started/architecture", "title": "KubeVela Architecture", "description": "This page provides an overview of the architecture of KubeVela, detailing its components, functionality, and intended users.", "has_code_examples": false, "has_best_practices": true, "section_count": 6, "timestamp": "2025-02-28 14:44:54", "type": "overview", "page_metadata": {"docsearch:version": "v1.10", "docusaurus_tag": "docs-default-v1.10", "docsearch:docusaurus_tag": "docs-default-v1.10", "docsearch:language": "en", "generator": "Docusaurus v2.4.3", "viewport": "width=device-width, initial-scale=1.0", "twitter:card": "summary_large_image", "ogTitle": "Architecture | KubeVela", "og:description": "The overall architecture of KubeVela is shown as below:", "ogUrl": "https://kubevela.io/docs/getting-started/architecture/", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "language": "en", "og:url": "https://kubevela.io/docs/getting-started/architecture/", "docusaurus_locale": "en", "description": "The overall architecture of KubeVela is shown as below:", "title": "Architecture | KubeVela", "docusaurus_version": "v1.10", "ogDescription": "The overall architecture of KubeVela is shown as below:", "og:title": "Architecture | KubeVela", "theme-color": "#ffffff", "msapplication-config": "/img/favicons/browserconfig.xml", "scrapeId": "65fd273f-e93f-42ed-bd9b-77a4755e493a", "sourceURL": "https://kubevela.io/docs/getting-started/architecture", "url": "https://kubevela.io/docs/getting-started/architecture/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela Architecture\"?\n\nAssistant: Here are the recommended best practices:\n\n• KubeVela is designed to be an application delivery and operation control plane instead of a runtime plugin.\n• KubeVela is fully runtime infrastructure agnostic, allowing deployment to both Kubernetes and non-Kubernetes environments.\n• The Definition Mechanism allows for a fully programmable approach to application deployment.\n", "metadata": {"source_url": "https://kubevela.io/docs/getting-started/architecture", "title": "KubeVela Architecture", "description": "This page provides an overview of the architecture of KubeVela, detailing its components, functionality, and intended users.", "has_code_examples": false, "has_best_practices": true, "section_count": 6, "timestamp": "2025-02-28 14:44:54", "type": "best_practices", "page_metadata": {"docsearch:version": "v1.10", "docusaurus_tag": "docs-default-v1.10", "docsearch:docusaurus_tag": "docs-default-v1.10", "docsearch:language": "en", "generator": "Docusaurus v2.4.3", "viewport": "width=device-width, initial-scale=1.0", "twitter:card": "summary_large_image", "ogTitle": "Architecture | KubeVela", "og:description": "The overall architecture of KubeVela is shown as below:", "ogUrl": "https://kubevela.io/docs/getting-started/architecture/", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "language": "en", "og:url": "https://kubevela.io/docs/getting-started/architecture/", "docusaurus_locale": "en", "description": "The overall architecture of KubeVela is shown as below:", "title": "Architecture | KubeVela", "docusaurus_version": "v1.10", "ogDescription": "The overall architecture of KubeVela is shown as below:", "og:title": "Architecture | KubeVela", "theme-color": "#ffffff", "msapplication-config": "/img/favicons/browserconfig.xml", "scrapeId": "65fd273f-e93f-42ed-bd9b-77a4755e493a", "sourceURL": "https://kubevela.io/docs/getting-started/architecture", "url": "https://kubevela.io/docs/getting-started/architecture/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela Addons for AI\"?\n\nAssistant: This page covers the installation and details of the machine learning addons in KubeVela, including model-training and model-serving addons.\n\nHere's a detailed explanation:\n\n\n## Installation\nRun the following command to install the addon:\n\n```codeBlockLines_e6Vv\nvela addon enable model-training\nvela addon enable model-serving\n```\n\n## Model-training addon\nIn model-training addon, we have two component definitions: `model-training` and `jupyter notebook`.\n\n## model-training\n```codeBlockLines_e6Vv\n$ vela show model-training\n# Properties\n+------------------+----------------------------------------------------------------------------------+-------------------------------+----------+---------+\n|       NAME       |                                   DESCRIPTION                                    |             TYPE              | REQUIRED | DEFAULT |\n+------------------+----------------------------------------------------------------------------------+-------------------------------+----------+---------+\n| env              | Define arguments by using environment variables                                  | [[]env](#env)                 | false    |         |\n| labels           | Specify the labels in the workload                                               | map[string]string             | false    |         |\n| annotations      | Specify the annotations in the workload                                          | map[string]string             | false    |         |\n| framework        | The training framework to use                                                    | string                        | true     |         |\n| image            | Which image would you like to use for your service                               | string                        | true     |         |\n| imagePullPolicy  | Specify image pull policy for your service                                       | string                        | false    |         |\n| cpu              | Number of CPU units for the service, like `0.5` (0.5 CPU core), `1` (1 CPU core) | string                        | false    |         |\n| memory           | Specifies the attributes of the memory resource required for the container.      | string                        | false    |         |\n| gpu              | Specifies the attributes of the gpu resource required for the container.         | string                        | false    |         |\n| storage          |                                                                                  | [[]storage](#storage)         | false    |         |\n| imagePullSecrets | Specify image pull secrets for your service                                      | []string                      | false    |         |\n| distribution     | If you want to train the model in distributed mode, specify here                 | [distribution](#distribution) | false    |         |\n| restartPolicy    |                                                                                  | string                        | true     | Never   |\n+------------------+----------------------------------------------------------------------------------+-------------------------------+----------+---------+\n```\n\n## distribution\n+-----------+---------------------------------------------------------+------+----------+---------+\n|   NAME    |                       DESCRIPTION                       | TYPE | REQUIRED | DEFAULT |\n+-----------+---------------------------------------------------------+------+----------+---------+\n| ps        | The number of PS replicas, suits for tensorflow model   | int  | false    |         |\n| master    | The number of Master replicas, suits for pytorch model  | int  | false    |         |\n| scheduler | The number of Scheduler replicas, suits for mxnet model | int  | false    |         |\n| server    | The number of Server replicas, suits for mxnet model    | int  | false    |         |\n| launcher  | The number of Launcher replicas, suits for mpi model    | int  | false    |         |\n| worker    | The number of Worker replicas                           | int  | false    |         |\n+-----------+---------------------------------------------------------+------+----------+---------+\n\n", "metadata": {"source_url": "https://kubevela.io/docs/reference/addons/ai", "title": "KubeVela Addons for AI", "description": "This page covers the installation and details of the machine learning addons in KubeVela, including model-training and model-serving addons.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 14:45:21", "type": "overview", "page_metadata": {"docsearch:language": "en", "twitter:card": "summary_large_image", "docusaurus_locale": "en", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:title": "Machine Learning | KubeVela", "msapplication-config": "/img/favicons/browserconfig.xml", "ogDescription": "Machine learning addon is divided into model-training addon and model-serving addon. Run the following command to install the addon:", "og:url": "https://kubevela.io/docs/reference/addons/ai/", "description": "Machine learning addon is divided into model-training addon and model-serving addon. Run the following command to install the addon:", "docusaurus_version": "v1.10", "viewport": "width=device-width, initial-scale=1.0", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "generator": "Docusaurus v2.4.3", "og:description": "Machine learning addon is divided into model-training addon and model-serving addon. Run the following command to install the addon:", "ogUrl": "https://kubevela.io/docs/reference/addons/ai/", "title": "Machine Learning | KubeVela", "docsearch:version": "v1.10", "docusaurus_tag": "docs-default-v1.10", "ogTitle": "Machine Learning | KubeVela", "theme-color": "#ffffff", "language": "en", "scrapeId": "c068c83d-7f72-476d-a288-35ed9984f297", "sourceURL": "https://kubevela.io/docs/reference/addons/ai", "url": "https://kubevela.io/docs/reference/addons/ai/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"KubeVela Addons for AI\"?\n\nAssistant: Here are some code examples:\n\n### Model-training Properties\n```yaml\n```codeBlockLines_e6Vv\n$ vela show model-training\n# Properties\n+------------------+----------------------------------------------------------------------------------+-------------------------------+----------+---------+\n|       NAME       |                                   DESCRIPTION                                    |             TYPE              | REQUIRED | DEFAULT |\n+------------------+----------------------------------------------------------------------------------+-------------------------------+----------+---------+\n| env              | Define arguments by using environment variables                                  | [[]env](#env)                 | false    |         |\n| labels           | Specify the labels in the workload                                               | map[string]string             | false    |         |\n| annotations      | Specify the annotations in the workload                                          | map[string]string             | false    |         |\n| framework        | The training framework to use                                                    | string                        | true     |         |\n| image            | Which image would you like to use for your service                               | string                        | true     |         |\n| imagePullPolicy  | Specify image pull policy for your service                                       | string                        | false    |         |\n| cpu              | Number of CPU units for the service, like `0.5` (0.5 CPU core), `1` (1 CPU core) | string                        | false    |         |\n| memory           | Specifies the attributes of the memory resource required for the container.      | string                        | false    |         |\n| gpu              | Specifies the attributes of the gpu resource required for the container.         | string                        | false    |         |\n| storage          |                                                                                  | [[]storage](#storage)         | false    |         |\n| imagePullSecrets | Specify image pull secrets for your service                                      | []string                      | false    |         |\n| distribution     | If you want to train the model in distributed mode, specify here                 | [distribution](#distribution) | false    |         |\n| restartPolicy    |                                                                                  | string                        | true     | Never   |\n+------------------+----------------------------------------------------------------------------------+-------------------------------+----------+---------+\n```\n```\n\n### Jupyter Notebook Properties\n```yaml\n```codeBlockLines_e6Vv\n$ vela show jupyter-notebook\n# Properties\n+-------------+------------------------------------------------------------------------------------------------------+-----------------------+----------+-----------+\n|    NAME     |                                             DESCRIPTION                                              |         TYPE          | REQUIRED |  DEFAULT  |\n+-------------+------------------------------------------------------------------------------------------------------+-----------------------+----------+-----------+\n| cpu         | Number of CPU units for the service, like `0.5` (0.5 CPU core), `1` (1 CPU core)                     | string                | false    |           |\n| memory      | Specifies the attributes of the memory resource required for the container.                          | string                | false    |           |\n| gpu         | Specifies the attributes of the gpu resource required for the container.                             | string                | false    |           |\n| storage     |                                                                                                      | [[]storage](#storage) | false    |           |\n| serviceType | Specify what kind of Service you want. options: \"ClusterIP\",\"NodePort\",\"LoadBalancer\",\"ExternalName\" | string                | true     | ClusterIP |\n+-------------+------------------------------------------------------------------------------------------------------+-----------------------+----------+-----------+\n```\n```\n\n### Model-serving Properties\n```yaml\n```codeBlockLines_e6Vv\n$ vela show model-serving\n# Properties\n+---------------+-----------------------------------------------------------------------+---------------------------------+----------+---------+\n|     NAME      |                              DESCRIPTION                              |              TYPE               | REQUIRED | DEFAULT |\n+---------------+-----------------------------------------------------------------------+---------------------------------+----------+---------+\n| timeout       | If you model serving need long time to return, please set the timeout | string                          | false    |         |\n| customRouting | Specify the custom routing of the serving                             | [customRouting](#customRouting) | false    |         |\n| protocol      | Protocol of model serving, default to seldon                          | string                          | false    |         |\n| predictors    | The predictors of the serving                                         | [[]predictors](#predictors)     | true     |         |\n+---------------+-----------------------------------------------------------------------+---------------------------------+----------+---------+\n```\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/reference/addons/ai", "title": "KubeVela Addons for AI", "description": "This page covers the installation and details of the machine learning addons in KubeVela, including model-training and model-serving addons.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 14:45:21", "type": "code_examples", "page_metadata": {"docsearch:language": "en", "twitter:card": "summary_large_image", "docusaurus_locale": "en", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:title": "Machine Learning | KubeVela", "msapplication-config": "/img/favicons/browserconfig.xml", "ogDescription": "Machine learning addon is divided into model-training addon and model-serving addon. Run the following command to install the addon:", "og:url": "https://kubevela.io/docs/reference/addons/ai/", "description": "Machine learning addon is divided into model-training addon and model-serving addon. Run the following command to install the addon:", "docusaurus_version": "v1.10", "viewport": "width=device-width, initial-scale=1.0", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "generator": "Docusaurus v2.4.3", "og:description": "Machine learning addon is divided into model-training addon and model-serving addon. Run the following command to install the addon:", "ogUrl": "https://kubevela.io/docs/reference/addons/ai/", "title": "Machine Learning | KubeVela", "docsearch:version": "v1.10", "docusaurus_tag": "docs-default-v1.10", "ogTitle": "Machine Learning | KubeVela", "theme-color": "#ffffff", "language": "en", "scrapeId": "c068c83d-7f72-476d-a288-35ed9984f297", "sourceURL": "https://kubevela.io/docs/reference/addons/ai", "url": "https://kubevela.io/docs/reference/addons/ai/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela Addons for AI\"?\n\nAssistant: Here are the recommended best practices:\n\n• Ensure to specify the correct training framework and image for the model-training addon.\n• When using the model-serving addon, set appropriate timeout values for long-running models.\n", "metadata": {"source_url": "https://kubevela.io/docs/reference/addons/ai", "title": "KubeVela Addons for AI", "description": "This page covers the installation and details of the machine learning addons in KubeVela, including model-training and model-serving addons.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 14:45:21", "type": "best_practices", "page_metadata": {"docsearch:language": "en", "twitter:card": "summary_large_image", "docusaurus_locale": "en", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:title": "Machine Learning | KubeVela", "msapplication-config": "/img/favicons/browserconfig.xml", "ogDescription": "Machine learning addon is divided into model-training addon and model-serving addon. Run the following command to install the addon:", "og:url": "https://kubevela.io/docs/reference/addons/ai/", "description": "Machine learning addon is divided into model-training addon and model-serving addon. Run the following command to install the addon:", "docusaurus_version": "v1.10", "viewport": "width=device-width, initial-scale=1.0", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "generator": "Docusaurus v2.4.3", "og:description": "Machine learning addon is divided into model-training addon and model-serving addon. Run the following command to install the addon:", "ogUrl": "https://kubevela.io/docs/reference/addons/ai/", "title": "Machine Learning | KubeVela", "docsearch:version": "v1.10", "docusaurus_tag": "docs-default-v1.10", "ogTitle": "Machine Learning | KubeVela", "theme-color": "#ffffff", "language": "en", "scrapeId": "c068c83d-7f72-476d-a288-35ed9984f297", "sourceURL": "https://kubevela.io/docs/reference/addons/ai", "url": "https://kubevela.io/docs/reference/addons/ai/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela Addons Overview\"?\n\nAssistant: This page provides an overview of the out-of-box addons verified and maintained by the KubeVela community registry.\n\nHere's a detailed explanation:\n\n\n## KubeVela Platform\n- [VelaUX](https://kubevela.io/docs/reference/addons/velaux/): The KubeVela User Experience (UX ) addon. It will launch a dashboard and an APIServer for better user experience.\n- [Vela Prism](https://kubevela.io/docs/reference/addons/vela-prism/): Provide API Extensions to the core [KubeVela](https://github.com/kubevela/kubevela).\n- [KubeVela Website](https://kubevela.io/docs/reference/addons/kubevela-io/): Help you to read the KubeVela document in your cluster which can be air-gaped environment.\n- [Cloud Shell](https://kubevela.io/docs/tutorials/cloud-shell/): Set up a web terminal and cloud shell intended for a kubernetes-native environment.\n\n## Observability\n- [Prometheus Server](https://kubevela.io/docs/platform-engineers/operations/observability/): Collects metrics from configured targets at given intervals, evaluates rule expressions, displays the results, and can trigger alerts if some condition is observed to be true.\n- [Node Exporter](https://kubevela.io/docs/platform-engineers/operations/observability/): Prometheus exporter for hardware and OS metrics exposed by *NIX kernels, written in Go with pluggable metric collectors.\n- [Mysql Exporter](https://kubevela.io/docs/reference/addons/mysql-exporter/): Prometheus exporter for MySQL server metrics.\n- [Grafana](https://kubevela.io/docs/platform-engineers/operations/observability/): Grafana is an open source, feature rich metrics dashboard and graph editor for Graphite, Elasticsearch, OpenTSDB, Prometheus and InfluxDB.\n- [Loki](https://kubevela.io/docs/platform-engineers/operations/o11y/logging/): A log aggregation system designed to store and query logs from all your applications and infrastructure.\n- [Kube State Metrics](https://kubevela.io/docs/platform-engineers/operations/observability/): A simple service that listens to the Kubernetes API server and generates metrics about the state of the objects.\n\n## GitOps\n- [FluxCD](https://kubevela.io/docs/reference/addons/fluxcd/): Provides capability to deliver helm chart and drive GitOps.\n\n## Cloud Resources\n- [Terraform](https://kubevela.io/docs/reference/addons/terraform/): Terraform provider addon to provide the capability to deploy the cloud resource.\n\n## Rollout\n- [Kruise Rollout](https://kubevela.io/docs/reference/addons/kruise-rollout/): [OpenKruise rollout](https://github.com/openkruise/rollouts) supports canary rollout for native deployment, stateful-set and OpenKruise [cloneset](https://openkruise.io/docs/user-manuals/cloneset/).\n- [Vela Rollout](https://kubevela.io/docs/reference/addons/rollout/): The legacy rollout addon before kruise rollout exists, provide a capability rollout the application.\n\n## Gateway\n- [Traefik](https://kubevela.io/docs/reference/addons/traefik/): Traefik is a modern HTTP reverse proxy and load balancer made to deploy microservices with ease.\n- [Nginx Ingress Controller](https://kubevela.io/docs/reference/addons/nginx-ingress-controller/): An Ingress controller for Kubernetes using NGINX as a reverse proxy and load balancer.\n\n## AI\n- [Machine Learning Addon](https://kubevela.io/docs/reference/addons/ai/): Machine learning addon is divided into model-training addon and model-serving addon.\n\n## Multi-Clusters\n- [OCM Cluster-Gateway Manager](https://kubevela.io/docs/reference/addons/ocm-gateway-manager-addon/): An operator component into the hub cluster that help the administrator to easily operate the configuration of cluster-gateway instances via \"ClusterGatewayConfiguration\" custom resource. _WARNING_ this addon will restart the cluster-gateway instances upon the first-time installation.\n- [OCM Hub Control Plane](https://kubevela.io/docs/reference/addons/ocm-hub-control-plane/): Help you to initiate and install the [cluster manager](https://open-cluster-management.io/getting-started/core/cluster-manager/) (i.e. OCM's control plane) components into the hosting cluster where your KubeVela control plane is running.\n\n## Security\n- [Cert Manager](https://kubevela.io/docs/reference/addons/cert-manager/): Add certificates and certificate issuers as resource types in Kubernetes clusters, and simplifies the process of obtaining, renewing and using those certificates.\n- [Dex](https://kubevela.io/docs/reference/addons/dex/): Provide [dex](https://github.com/dexidp/dex) login for VelaUX.\n- [Trivy Operator](https://kubevela.io/docs/reference/addons/trivy-operator/): Provides a vulnerability scanner that continuously scans containers deployed in a Kubernetes cluster.\n\n## Big Data\n- [Flink Operator](https://kubevela.io/docs/reference/addons/flink-kubernetes-operator/): A Kubernetes operator for Apache Flink ( [https://github.com/apache/flink-kubernetes-operator](https://github.com/apache/flink-kubernetes-operator)).\n\n## Storage\n- [ChartMuseum](https://kubevela.io/docs/reference/addons/chartmuseum/): An open-source and easy to deploy Helm Chart Repository server.\n\n## SaaS Workload\n- [netlify](https://kubevela.io/docs/reference/addons/netlify/): Netlify is a SaaS platform that can serve website especially for frontend service, it provides free allowances that was pretty cool to be used for demo and test.\n\n## Developer Tools\n- [Pyroscope](https://kubevela.io/docs/reference/addons/pyroscope/): Pyroscope is an open source continuous profiling platform, consisting of server and agent. It allows the user to collect, store, and query the profiling data in a CPU and disk efficient way.\n- [Vegeta](https://kubevela.io/docs/reference/addons/vegeta/): Vegeta is a versatile HTTP load testing tool built out of a need to drill HTTP services with a constant request rate. It can be used both as a command line utility and a library.\n", "metadata": {"source_url": "https://kubevela.io/docs/reference/addons/overview", "title": "KubeVela Addons Overview", "description": "This page provides an overview of the out-of-box addons verified and maintained by the KubeVela community registry.", "has_code_examples": false, "has_best_practices": true, "section_count": 13, "timestamp": "2025-02-28 14:45:44", "type": "overview", "page_metadata": {"favicon": "https://kubevela.io/img/favicons/favicon.ico", "docsearch:language": "en", "msapplication-config": "/img/favicons/browserconfig.xml", "viewport": "width=device-width, initial-scale=1.0", "generator": "Docusaurus v2.4.3", "twitter:card": "summary_large_image", "docsearch:version": "v1.10", "og:title": "Overview | KubeVela", "ogTitle": "Overview | KubeVela", "ogDescription": "These following out-of-box addons are all verified and maintained by KubeVela community registry (https://addons.kubevela.net).", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:description": "These following out-of-box addons are all verified and maintained by KubeVela community registry (https://addons.kubevela.net).", "docusaurus_version": "v1.10", "description": "These following out-of-box addons are all verified and maintained by KubeVela community registry (https://addons.kubevela.net).", "ogUrl": "https://kubevela.io/docs/reference/addons/overview/", "theme-color": "#ffffff", "language": "en", "docusaurus_locale": "en", "og:url": "https://kubevela.io/docs/reference/addons/overview/", "title": "Overview | KubeVela", "docusaurus_tag": "docs-default-v1.10", "scrapeId": "65003830-deef-4917-9927-b1cd702d7a3a", "sourceURL": "https://kubevela.io/docs/reference/addons/overview", "url": "https://kubevela.io/docs/reference/addons/overview/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela Addons Overview\"?\n\nAssistant: Here are the recommended best practices:\n\n• If you want to make your own addon, please refer to [this guide](https://kubevela.io/docs/platform-engineers/addon/intro/).\n• Source code of this addon are all here: [https://github.com/kubevela/catalog/tree/master/addons](https://github.com/kubevela/catalog/tree/master/addons).\n", "metadata": {"source_url": "https://kubevela.io/docs/reference/addons/overview", "title": "KubeVela Addons Overview", "description": "This page provides an overview of the out-of-box addons verified and maintained by the KubeVela community registry.", "has_code_examples": false, "has_best_practices": true, "section_count": 13, "timestamp": "2025-02-28 14:45:44", "type": "best_practices", "page_metadata": {"favicon": "https://kubevela.io/img/favicons/favicon.ico", "docsearch:language": "en", "msapplication-config": "/img/favicons/browserconfig.xml", "viewport": "width=device-width, initial-scale=1.0", "generator": "Docusaurus v2.4.3", "twitter:card": "summary_large_image", "docsearch:version": "v1.10", "og:title": "Overview | KubeVela", "ogTitle": "Overview | KubeVela", "ogDescription": "These following out-of-box addons are all verified and maintained by KubeVela community registry (https://addons.kubevela.net).", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:description": "These following out-of-box addons are all verified and maintained by KubeVela community registry (https://addons.kubevela.net).", "docusaurus_version": "v1.10", "description": "These following out-of-box addons are all verified and maintained by KubeVela community registry (https://addons.kubevela.net).", "ogUrl": "https://kubevela.io/docs/reference/addons/overview/", "theme-color": "#ffffff", "language": "en", "docusaurus_locale": "en", "og:url": "https://kubevela.io/docs/reference/addons/overview/", "title": "Overview | KubeVela", "docusaurus_tag": "docs-default-v1.10", "scrapeId": "65003830-deef-4917-9927-b1cd702d7a3a", "sourceURL": "https://kubevela.io/docs/reference/addons/overview", "url": "https://kubevela.io/docs/reference/addons/overview/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela in GitOps\"?\n\nAssistant: This section will introduce how to use KubeVela in GitOps area and why.\n\nHere's a detailed explanation:\n\n\n## Introduction to GitOps\nGitOps is a continuous delivery method that allows developers to automatically deploy applications by changing code and declarative configurations in a Git repository, with \"git-centric\" operations such as PR and commit. For detailed benefits of GitOps, you can refer to [this blog](https://www.weave.works/blog/what-is-gitops-really).\n\n## Benefits of Using KubeVela in GitOps\nKubeVela as a declarative application delivery control plane can be naturally used in GitOps approach, and this will provide below extra bonus to end users alongside with GitOps benefits:\n\n- application delivery workflow (CD pipeline)\n  - i.e. KubeVela supports pipeline style application delivery process in GitOps, instead of simply declaring final status;\n- handling deployment dependencies and designing typologies (DAG);\n- unified higher level abstraction atop various GitOps tools' primitives;\n- declare, provision and consume cloud resources in unified application definition;\n- various out-of-box deployment strategies (Canary, Blue-Green ...);\n- various out-of-box hybrid/multi-cloud deployment policies (placement rule, cluster selectors etc.);\n- Kustomize-style patch for multi-env deployment without the need to learn Kustomize at all;\n- ... and much more.\n\n## Addons for GitOps Process\nIn the following sections, we will introduce steps of using KubeVela directly in GitOps approach. You can choose any of the following addons for the whole GitOps process:\n\n- [GitOps with FluxCD](https://kubevela.io/docs/end-user/gitops/fluxcd/)\n\nBesides these addons, the end user can use any GitOps tools they want to watch the Git repo for KubeVela applications as configuration.\n", "metadata": {"source_url": "https://kubevela.io/docs/case-studies/gitops", "title": "KubeVela in GitOps", "description": "This section will introduce how to use KubeVela in GitOps area and why.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 14:45:54", "type": "overview", "page_metadata": {"docsearch:language": "en", "viewport": "width=device-width, initial-scale=1.0", "og:url": "https://kubevela.io/docs/case-studies/gitops/", "title": "Overview of GitOps | KubeVela", "generator": "Docusaurus v2.4.3", "docusaurus_locale": "en", "og:title": "Overview of GitOps | KubeVela", "ogTitle": "Overview of GitOps | KubeVela", "theme-color": "#ffffff", "ogUrl": "https://kubevela.io/docs/case-studies/gitops/", "twitter:card": "summary_large_image", "docsearch:docusaurus_tag": "docs-default-v1.10", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogDescription": "This section will introduce how to use KubeVela in GitOps area and why.", "docsearch:version": "v1.10", "language": "en", "description": "This section will introduce how to use KubeVela in GitOps area and why.", "docusaurus_version": "v1.10", "og:description": "This section will introduce how to use KubeVela in GitOps area and why.", "msapplication-config": "/img/favicons/browserconfig.xml", "docusaurus_tag": "docs-default-v1.10", "scrapeId": "b0caa36f-2e52-409a-94b5-e95609a2ab26", "sourceURL": "https://kubevela.io/docs/case-studies/gitops", "url": "https://kubevela.io/docs/case-studies/gitops/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela in GitOps\"?\n\nAssistant: Here are the recommended best practices:\n\n• Consider using KubeVela's pipeline style application delivery process in GitOps for better workflow management.\n• Explore various out-of-box deployment strategies provided by KubeVela for enhanced deployment flexibility.\n• Utilize Kustomize-style patches for multi-environment deployments without needing to learn Kustomize.\n", "metadata": {"source_url": "https://kubevela.io/docs/case-studies/gitops", "title": "KubeVela in GitOps", "description": "This section will introduce how to use KubeVela in GitOps area and why.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 14:45:54", "type": "best_practices", "page_metadata": {"docsearch:language": "en", "viewport": "width=device-width, initial-scale=1.0", "og:url": "https://kubevela.io/docs/case-studies/gitops/", "title": "Overview of GitOps | KubeVela", "generator": "Docusaurus v2.4.3", "docusaurus_locale": "en", "og:title": "Overview of GitOps | KubeVela", "ogTitle": "Overview of GitOps | KubeVela", "theme-color": "#ffffff", "ogUrl": "https://kubevela.io/docs/case-studies/gitops/", "twitter:card": "summary_large_image", "docsearch:docusaurus_tag": "docs-default-v1.10", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogDescription": "This section will introduce how to use KubeVela in GitOps area and why.", "docsearch:version": "v1.10", "language": "en", "description": "This section will introduce how to use KubeVela in GitOps area and why.", "docusaurus_version": "v1.10", "og:description": "This section will introduce how to use KubeVela in GitOps area and why.", "msapplication-config": "/img/favicons/browserconfig.xml", "docusaurus_tag": "docs-default-v1.10", "scrapeId": "b0caa36f-2e52-409a-94b5-e95609a2ab26", "sourceURL": "https://kubevela.io/docs/case-studies/gitops", "url": "https://kubevela.io/docs/case-studies/gitops/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KEDA Integration with KubeVela\"?\n\nAssistant: This page provides a tutorial on how to add KEDA as a new autoscaling trait to your KubeVela based platform.\n\nHere's a detailed explanation:\n\n\n## Step 1: Install KEDA controller\n[Install the KEDA controller](https://keda.sh/docs/2.2/deploy/) into your K8s system.\n\n## Step 2: Create Trait Definition\nTo register KEDA as a new capability (i.e. trait) in KubeVela, the only thing needed is to create an `TraitDefinition` object for it.\n\nA full example can be found in this [keda.yaml](https://github.com/kubevela/catalog/blob/master/registry/keda-scaler.yaml). Several highlights are listed below.\n\n## 1. Describe The Trait\nWe use label `definition.oam.dev/description` to add one line description for this trait. It will be shown in helper commands such as `$ vela traits`.\n\n## 2. Register API Resource\nThis is how you claim and register KEDA `ScaledObject`'s API resource ( `scaledobjects.keda.sh`) as a trait definition.\n\n## 3. Define `appliesToWorkloads`\nA trait can be attached to specified workload types or all (i.e. \"*\" or omitted means your trait can work with any workload type). For the case of KEDA, we will only allow user to attach it to Kubernetes workload type.\n\n## 4. Define Schematic\nIn this step, we will define the schematic of KEDA based autoscaling trait, i.e. we will create abstraction for KEDA `ScaledObject` with simplified primitives, so end users of this platform don't really need to know what is KEDA at all.\n\n## Step 2: Register New Trait to KubeVela\nAs long as the definition file is ready, you just need to apply it to Kubernetes. And the new trait will immediately become available for end users to use in `Application` resource.\n", "metadata": {"source_url": "https://kubevela.io/docs/platform-engineers/keda", "title": "KEDA Integration with KubeVela", "description": "This page provides a tutorial on how to add KEDA as a new autoscaling trait to your KubeVela based platform.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-02-28 14:46:12", "type": "overview", "page_metadata": {"docusaurus_tag": "docs-default-v1.10", "docsearch:language": "en", "ogTitle": "KEDA as Autoscaling Trait | KubeVela", "theme-color": "#ffffff", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_version": "v1.10", "description": "Before continue, make sure you have learned about the concepts of Definition Objects and Defining Traits with CUE section.", "msapplication-config": "/img/favicons/browserconfig.xml", "og:url": "https://kubevela.io/docs/platform-engineers/keda/", "og:title": "KEDA as Autoscaling Trait | KubeVela", "twitter:card": "summary_large_image", "docsearch:docusaurus_tag": "docs-default-v1.10", "ogDescription": "Before continue, make sure you have learned about the concepts of Definition Objects and Defining Traits with CUE section.", "og:description": "Before continue, make sure you have learned about the concepts of Definition Objects and Defining Traits with CUE section.", "docsearch:version": "v1.10", "language": "en", "docusaurus_locale": "en", "viewport": "width=device-width, initial-scale=1.0", "title": "KEDA as Autoscaling Trait | KubeVela", "ogUrl": "https://kubevela.io/docs/platform-engineers/keda/", "generator": "Docusaurus v2.4.3", "scrapeId": "069a033d-6c86-49b2-9341-84243047b92b", "sourceURL": "https://kubevela.io/docs/platform-engineers/keda", "url": "https://kubevela.io/docs/platform-engineers/keda/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"KEDA Integration with KubeVela\"?\n\nAssistant: Here are some code examples:\n\n### Describe The Trait Example\n```yaml\nname: keda-scaler\nannotations:\n  definition.oam.dev/description: \"keda supports multiple event to elastically scale applications, this scaler only applies to deployment as example\"\n```\n\n### Register API Resource Example\n```yaml\nspec:\n  definitionRef:\n    name: scaledobjects.keda.sh\n```\n\n### Define appliesToWorkloads Example\n```yaml\nspec:\n  ...\n  appliesToWorkloads:\n    - \"deployments.apps\" # claim KEDA based autoscaling trait can only attach to Kubernetes Deployment workload type.\n```\n\n### Define Schematic Example\n```yaml\nschematic:\n  cue:\n    template: |-\n      outputs: kedaScaler: {\n        apiVersion: \"keda.sh/v1alpha1\"\n        kind:       \"ScaledObject\"\n        metadata: {\n            name: context.name\n        }\n        spec: {\n            scaleTargetRef: {\n                name: context.name\n            }\n            triggers: [{\\\n                type: parameter.triggerType\\\n                metadata: {\\\n                    type:  \"Utilization\"\\\n                    value: parameter.value\\\n                }\\\n            }]\n        }\n      }\n      parameter: {\n        // +usage=Types of triggering application elastic scaling, Optional: cpu, memory\n        triggerType: string\n        // +usage=Value to trigger scaling actions, represented as a percentage of the requested value of the resource for the pods. like: \"60\"(60%)\n        value: string\n      }\n```\n\n### Register New Trait Command\n```yaml\nkubectl apply -f https://raw.githubusercontent.com/oam-dev/catalog/master/registry/keda-scaler.yaml\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/platform-engineers/keda", "title": "KEDA Integration with KubeVela", "description": "This page provides a tutorial on how to add KEDA as a new autoscaling trait to your KubeVela based platform.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-02-28 14:46:12", "type": "code_examples", "page_metadata": {"docusaurus_tag": "docs-default-v1.10", "docsearch:language": "en", "ogTitle": "KEDA as Autoscaling Trait | KubeVela", "theme-color": "#ffffff", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_version": "v1.10", "description": "Before continue, make sure you have learned about the concepts of Definition Objects and Defining Traits with CUE section.", "msapplication-config": "/img/favicons/browserconfig.xml", "og:url": "https://kubevela.io/docs/platform-engineers/keda/", "og:title": "KEDA as Autoscaling Trait | KubeVela", "twitter:card": "summary_large_image", "docsearch:docusaurus_tag": "docs-default-v1.10", "ogDescription": "Before continue, make sure you have learned about the concepts of Definition Objects and Defining Traits with CUE section.", "og:description": "Before continue, make sure you have learned about the concepts of Definition Objects and Defining Traits with CUE section.", "docsearch:version": "v1.10", "language": "en", "docusaurus_locale": "en", "viewport": "width=device-width, initial-scale=1.0", "title": "KEDA as Autoscaling Trait | KubeVela", "ogUrl": "https://kubevela.io/docs/platform-engineers/keda/", "generator": "Docusaurus v2.4.3", "scrapeId": "069a033d-6c86-49b2-9341-84243047b92b", "sourceURL": "https://kubevela.io/docs/platform-engineers/keda", "url": "https://kubevela.io/docs/platform-engineers/keda/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KEDA Integration with KubeVela\"?\n\nAssistant: Here are the recommended best practices:\n\n• Ensure you have learned about the concepts of Definition Objects and Defining Traits with CUE before proceeding.\n• Use the label definition.oam.dev/description to provide a clear description of your trait for better usability.\n• When defining appliesToWorkloads, specify the exact workload types to which the trait can be attached.\n", "metadata": {"source_url": "https://kubevela.io/docs/platform-engineers/keda", "title": "KEDA Integration with KubeVela", "description": "This page provides a tutorial on how to add KEDA as a new autoscaling trait to your KubeVela based platform.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-02-28 14:46:12", "type": "best_practices", "page_metadata": {"docusaurus_tag": "docs-default-v1.10", "docsearch:language": "en", "ogTitle": "KEDA as Autoscaling Trait | KubeVela", "theme-color": "#ffffff", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_version": "v1.10", "description": "Before continue, make sure you have learned about the concepts of Definition Objects and Defining Traits with CUE section.", "msapplication-config": "/img/favicons/browserconfig.xml", "og:url": "https://kubevela.io/docs/platform-engineers/keda/", "og:title": "KEDA as Autoscaling Trait | KubeVela", "twitter:card": "summary_large_image", "docsearch:docusaurus_tag": "docs-default-v1.10", "ogDescription": "Before continue, make sure you have learned about the concepts of Definition Objects and Defining Traits with CUE section.", "og:description": "Before continue, make sure you have learned about the concepts of Definition Objects and Defining Traits with CUE section.", "docsearch:version": "v1.10", "language": "en", "docusaurus_locale": "en", "viewport": "width=device-width, initial-scale=1.0", "title": "KEDA as Autoscaling Trait | KubeVela", "ogUrl": "https://kubevela.io/docs/platform-engineers/keda/", "generator": "Docusaurus v2.4.3", "scrapeId": "069a033d-6c86-49b2-9341-84243047b92b", "sourceURL": "https://kubevela.io/docs/platform-engineers/keda", "url": "https://kubevela.io/docs/platform-engineers/keda/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"Capability Center in KubeVela\"?\n\nAssistant: This page covers how to add, list, and manage capability centers in KubeVela, including installing and uninstalling capabilities from these centers.\n\nHere's a detailed explanation:\n\n\n## Add a capability center\nAdd a registry in KubeVela:\n\n```codeBlockLines_e6Vv\nvela registry config my-center https://github.com/kubevela/catalog/tree/master/registry\n```\n\n```codeBlockLines_e6Vv\nSuccessfully configured registry my-center\n```\n\nNow, this registry `my-center` is ready to use.\n\n## List capability centers\nYou are allowed to add more capability centers and list them.\n\n```codeBlockLines_e6Vv\nvela registry ls\n```\n\n```codeBlockLines_e6Vv\nNAME            URL\ndefault         oss://registry.kubevela.net/\nmy-center       https://github.com/kubevela/catalog/tree/master/registry\n```\n\n## [Optional] Remove a capability center\nOr, remove one.\n\n```codeBlockLines_e6Vv\nvela registry remove my-center\n```\n\n## List all available capabilities in capability center\nOr, list all available ComponentDefinition/TraitDefinition in certain registry.\n\n````codeBlockLines_e6Vv\nvela trait --discover --registry=my-center\nvela comp --discover --registry=my-center\n````\n\n## Install a capability from capability center\nNow let's try to install the new component named `clonesetservice` from `my-center` to your own KubeVela platform.\n\nYou need to install OpenKruise first.\n\n```shell\nhelm install kruise https://github.com/openkruise/kruise/releases/download/v0.7.0/kruise-chart.tgz\n```\n\nInstall `clonesetservice` component from `my-center`.\n\n```codeBlockLines_e6Vv\nvela comp get clonesetservice --registry=my-center\n```\n\n## Use the newly installed capability\nLet's check the `clonesetservice` appears in your platform firstly:\n\n```codeBlockLines_e6Vv\nvela components\n```\n\n```codeBlockLines_e6Vv\nNAME            NAMESPACE   WORKLOAD                    DESCRIPTION\nclonesetservice vela-system clonesets.apps.kruise.io    Describes long-running, scalable, containerized services\n                                                        that have a stable network endpoint to receive external\n                                                        network traffic from customers. If workload type is skipped\n                                                        for any service defined in Appfile, it will be defaulted to\n                                                        `webservice` type.\n```\n\nGreat! Now let's deploy an app via Appfile.\n\n```codeBlockLines_e6Vv\ncat << EOF > vela.yaml\nname: testapp\nservices:\ntestsvc:\n    type: clonesetservice\n    image: oamdev/hello-world\n    port: 8000\nEOF\n```\n\n```codeBlockLines_e6Vv\nvela up\n```\n\n```codeBlockLines_e6Vv\nParsing vela appfile ...\nLoad Template ...\n\nRendering configs for service (testsvc)...\nWriting deploy config to (.vela/deploy.yaml)\n\nApplying application ...\nChecking if app has been deployed...\nApp has not been deployed, creating a new deployment...\nUpdating:  core.oam.dev/v1alpha2, Kind=HealthScope in default\n✅ App has been deployed 🚀🚀🚀\n    Port forward: vela port-forward testapp\n             SSH: vela exec testapp\n         Logging: vela logs testapp\n      App status: vela status testapp\nService status: vela status testapp --svc testsvc\n```\n\n## Uninstall a capability\n> NOTE: make sure no apps are using the capability before uninstalling.\n\n```codeBlockLines_e6Vv\nkubectl delete componentdefinition -n vela-system clonesetservice\n```\n", "metadata": {"source_url": "https://kubevela.io/docs/developers/cap-center", "title": "Capability Center in KubeVela", "description": "This page covers how to add, list, and manage capability centers in KubeVela, including installing and uninstalling capabilities from these centers.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-02-28 14:46:36", "type": "overview", "page_metadata": {"language": "en", "generator": "Docusaurus v2.4.3", "ogUrl": "https://kubevela.io/docs/developers/cap-center/", "docusaurus_tag": "docs-default-v1.10", "docsearch:version": "v1.10", "title": "Managing Capabilities | KubeVela", "og:title": "Managing Capabilities | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "og:url": "https://kubevela.io/docs/developers/cap-center/", "description": "In KubeVela, developers can install more capabilities (i.e. new component types and traits) from any GitHub repo that contains OAM definition files. We call these GitHub repos as Capability Centers.", "ogDescription": "In KubeVela, developers can install more capabilities (i.e. new component types and traits) from any GitHub repo that contains OAM definition files. We call these GitHub repos as Capability Centers.", "theme-color": "#ffffff", "docsearch:language": "en", "msapplication-config": "/img/favicons/browserconfig.xml", "docusaurus_version": "v1.10", "docusaurus_locale": "en", "docsearch:docusaurus_tag": "docs-default-v1.10", "ogTitle": "Managing Capabilities | KubeVela", "og:description": "In KubeVela, developers can install more capabilities (i.e. new component types and traits) from any GitHub repo that contains OAM definition files. We call these GitHub repos as Capability Centers.", "viewport": "width=device-width, initial-scale=1.0", "twitter:card": "summary_large_image", "scrapeId": "f2dc75e1-bbae-4f98-94f9-37a9dca40040", "sourceURL": "https://kubevela.io/docs/developers/cap-center", "url": "https://kubevela.io/docs/developers/cap-center/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"Capability Center in KubeVela\"?\n\nAssistant: Here are some code examples:\n\n### Add a capability center\n```yaml\nvela registry config my-center https://github.com/kubevela/catalog/tree/master/registry\n```\n\n### List capability centers\n```yaml\nvela registry ls\n```\n\n### Remove a capability center\n```yaml\nvela registry remove my-center\n```\n\n### List all available capabilities in capability center\n```yaml\nvela trait --discover --registry=my-center\nvela comp --discover --registry=my-center\n```\n\n### Install OpenKruise\n```yaml\nhelm install kruise https://github.com/openkruise/kruise/releases/download/v0.7.0/kruise-chart.tgz\n```\n\n### Get clonesetservice component\n```yaml\nvela comp get clonesetservice --registry=my-center\n```\n\n### Check installed components\n```yaml\nvela components\n```\n\n### Deploy an app via Appfile\n```yaml\ncat << EOF > vela.yaml\nname: testapp\nservices:\ntestsvc:\n    type: clonesetservice\n    image: oamdev/hello-world\n    port: 8000\nEOF\nvela up\n```\n\n### Get clonesets in environment\n```yaml\nkubectl get clonesets.apps.kruise.io\n```\n\n### Uninstall a capability\n```yaml\nkubectl delete componentdefinition -n vela-system clonesetservice\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/developers/cap-center", "title": "Capability Center in KubeVela", "description": "This page covers how to add, list, and manage capability centers in KubeVela, including installing and uninstalling capabilities from these centers.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-02-28 14:46:36", "type": "code_examples", "page_metadata": {"language": "en", "generator": "Docusaurus v2.4.3", "ogUrl": "https://kubevela.io/docs/developers/cap-center/", "docusaurus_tag": "docs-default-v1.10", "docsearch:version": "v1.10", "title": "Managing Capabilities | KubeVela", "og:title": "Managing Capabilities | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "og:url": "https://kubevela.io/docs/developers/cap-center/", "description": "In KubeVela, developers can install more capabilities (i.e. new component types and traits) from any GitHub repo that contains OAM definition files. We call these GitHub repos as Capability Centers.", "ogDescription": "In KubeVela, developers can install more capabilities (i.e. new component types and traits) from any GitHub repo that contains OAM definition files. We call these GitHub repos as Capability Centers.", "theme-color": "#ffffff", "docsearch:language": "en", "msapplication-config": "/img/favicons/browserconfig.xml", "docusaurus_version": "v1.10", "docusaurus_locale": "en", "docsearch:docusaurus_tag": "docs-default-v1.10", "ogTitle": "Managing Capabilities | KubeVela", "og:description": "In KubeVela, developers can install more capabilities (i.e. new component types and traits) from any GitHub repo that contains OAM definition files. We call these GitHub repos as Capability Centers.", "viewport": "width=device-width, initial-scale=1.0", "twitter:card": "summary_large_image", "scrapeId": "f2dc75e1-bbae-4f98-94f9-37a9dca40040", "sourceURL": "https://kubevela.io/docs/developers/cap-center", "url": "https://kubevela.io/docs/developers/cap-center/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"Capability Center in KubeVela\"?\n\nAssistant: Here are the recommended best practices:\n\n• Make sure no apps are using the capability before uninstalling.\n", "metadata": {"source_url": "https://kubevela.io/docs/developers/cap-center", "title": "Capability Center in KubeVela", "description": "This page covers how to add, list, and manage capability centers in KubeVela, including installing and uninstalling capabilities from these centers.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-02-28 14:46:36", "type": "best_practices", "page_metadata": {"language": "en", "generator": "Docusaurus v2.4.3", "ogUrl": "https://kubevela.io/docs/developers/cap-center/", "docusaurus_tag": "docs-default-v1.10", "docsearch:version": "v1.10", "title": "Managing Capabilities | KubeVela", "og:title": "Managing Capabilities | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "og:url": "https://kubevela.io/docs/developers/cap-center/", "description": "In KubeVela, developers can install more capabilities (i.e. new component types and traits) from any GitHub repo that contains OAM definition files. We call these GitHub repos as Capability Centers.", "ogDescription": "In KubeVela, developers can install more capabilities (i.e. new component types and traits) from any GitHub repo that contains OAM definition files. We call these GitHub repos as Capability Centers.", "theme-color": "#ffffff", "docsearch:language": "en", "msapplication-config": "/img/favicons/browserconfig.xml", "docusaurus_version": "v1.10", "docusaurus_locale": "en", "docsearch:docusaurus_tag": "docs-default-v1.10", "ogTitle": "Managing Capabilities | KubeVela", "og:description": "In KubeVela, developers can install more capabilities (i.e. new component types and traits) from any GitHub repo that contains OAM definition files. We call these GitHub repos as Capability Centers.", "viewport": "width=device-width, initial-scale=1.0", "twitter:card": "summary_large_image", "scrapeId": "f2dc75e1-bbae-4f98-94f9-37a9dca40040", "sourceURL": "https://kubevela.io/docs/developers/cap-center", "url": "https://kubevela.io/docs/developers/cap-center/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"Cloud Shell Tutorial\"?\n\nAssistant: This page covers how to manage applications via the cloud shell feature in KubeVela, including enabling the addon, opening the cloud shell environment, and accessing application container consoles.\n\nHere's a detailed explanation:\n\n\n## Enable the addon\nThis operation needs to have the permission of the addon management.\n\n```codeBlockLines_e6Vv\nvela addon enable cloudshell\n```\n\n## Open the cloud shell environment\nOn the UI top right, there is a cloud shell button. Users can open the cloud shell environment by clicking it. By default, all users have permission to open the cloud shell. If you want to disable this feature for some users, you could create a new platform role that has `Disable CloudShell` permission. Bind this role to the user, who you want to disable.\n\nAfter connected to the cloud shell environment, you could exec `vela --help` to get the help message. In the console, users have some permissions(Kubernetes RBAC) that auto-grant base the permission in the UI. there are some rules:\n\n1. If you have the `admin` permission, you are allowed to do anything in the cloud shell environment.\n2. If you have the `deploy application` permission in the projects, you could have all permissions of the Application in the namespace that belongs to the project.\n3. If you have the `project view` permission in the projects, you will only have the read permission of the Application in the namespace that belongs to the project.\n\n## Open the console of the application containers\nWhen you want to debug the application runtime, using the container console could be pretty helpful. In KubeVela, this feature is one of the common use cases of the cloud shell. After clicking the button, you will open a dialog window and see the command line. You can copy the commands and execute them in the cloud shell.\n", "metadata": {"source_url": "https://kubevela.io/docs/tutorials/cloud-shell", "title": "Cloud Shell Tutorial", "description": "This page covers how to manage applications via the cloud shell feature in KubeVela, including enabling the addon, opening the cloud shell environment, and accessing application container consoles.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 14:46:47", "type": "overview", "page_metadata": {"docusaurus_version": "v1.10", "ogUrl": "https://kubevela.io/docs/tutorials/cloud-shell/", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogDescription": "The cloud shell feature helps you to manage the application via CLI(vela、kubectl). such as:", "docsearch:docusaurus_tag": "docs-default-v1.10", "description": "The cloud shell feature helps you to manage the application via CLI(vela、kubectl). such as:", "twitter:card": "summary_large_image", "generator": "Docusaurus v2.4.3", "og:title": "Cloud Shell | KubeVela", "docusaurus_locale": "en", "viewport": "width=device-width, initial-scale=1.0", "language": "en", "title": "Cloud Shell | KubeVela", "ogTitle": "Cloud Shell | KubeVela", "theme-color": "#ffffff", "og:url": "https://kubevela.io/docs/tutorials/cloud-shell/", "docsearch:language": "en", "og:description": "The cloud shell feature helps you to manage the application via CLI(vela、kubectl). such as:", "docusaurus_tag": "docs-default-v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "docsearch:version": "v1.10", "scrapeId": "ffc90aba-1dd9-42cf-91e3-12f472d34514", "sourceURL": "https://kubevela.io/docs/tutorials/cloud-shell", "url": "https://kubevela.io/docs/tutorials/cloud-shell/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"Cloud Shell Tutorial\"?\n\nAssistant: Here are some code examples:\n\n### Enable Cloud Shell Addon\n```yaml\nvela addon enable cloudshell\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/tutorials/cloud-shell", "title": "Cloud Shell Tutorial", "description": "This page covers how to manage applications via the cloud shell feature in KubeVela, including enabling the addon, opening the cloud shell environment, and accessing application container consoles.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 14:46:47", "type": "code_examples", "page_metadata": {"docusaurus_version": "v1.10", "ogUrl": "https://kubevela.io/docs/tutorials/cloud-shell/", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogDescription": "The cloud shell feature helps you to manage the application via CLI(vela、kubectl). such as:", "docsearch:docusaurus_tag": "docs-default-v1.10", "description": "The cloud shell feature helps you to manage the application via CLI(vela、kubectl). such as:", "twitter:card": "summary_large_image", "generator": "Docusaurus v2.4.3", "og:title": "Cloud Shell | KubeVela", "docusaurus_locale": "en", "viewport": "width=device-width, initial-scale=1.0", "language": "en", "title": "Cloud Shell | KubeVela", "ogTitle": "Cloud Shell | KubeVela", "theme-color": "#ffffff", "og:url": "https://kubevela.io/docs/tutorials/cloud-shell/", "docsearch:language": "en", "og:description": "The cloud shell feature helps you to manage the application via CLI(vela、kubectl). such as:", "docusaurus_tag": "docs-default-v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "docsearch:version": "v1.10", "scrapeId": "ffc90aba-1dd9-42cf-91e3-12f472d34514", "sourceURL": "https://kubevela.io/docs/tutorials/cloud-shell", "url": "https://kubevela.io/docs/tutorials/cloud-shell/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"Cloud Shell Tutorial\"?\n\nAssistant: Here are the recommended best practices:\n\n• If you have the `admin` permission, you are allowed to do anything in the cloud shell environment.\n• If you have the `deploy application` permission in the projects, you could have all permissions of the Application in the namespace that belongs to the project.\n• If you have the `project view` permission in the projects, you will only have the read permission of the Application in the namespace that belongs to the project.\n", "metadata": {"source_url": "https://kubevela.io/docs/tutorials/cloud-shell", "title": "Cloud Shell Tutorial", "description": "This page covers how to manage applications via the cloud shell feature in KubeVela, including enabling the addon, opening the cloud shell environment, and accessing application container consoles.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 14:46:47", "type": "best_practices", "page_metadata": {"docusaurus_version": "v1.10", "ogUrl": "https://kubevela.io/docs/tutorials/cloud-shell/", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogDescription": "The cloud shell feature helps you to manage the application via CLI(vela、kubectl). such as:", "docsearch:docusaurus_tag": "docs-default-v1.10", "description": "The cloud shell feature helps you to manage the application via CLI(vela、kubectl). such as:", "twitter:card": "summary_large_image", "generator": "Docusaurus v2.4.3", "og:title": "Cloud Shell | KubeVela", "docusaurus_locale": "en", "viewport": "width=device-width, initial-scale=1.0", "language": "en", "title": "Cloud Shell | KubeVela", "ogTitle": "Cloud Shell | KubeVela", "theme-color": "#ffffff", "og:url": "https://kubevela.io/docs/tutorials/cloud-shell/", "docsearch:language": "en", "og:description": "The cloud shell feature helps you to manage the application via CLI(vela、kubectl). such as:", "docusaurus_tag": "docs-default-v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "docsearch:version": "v1.10", "scrapeId": "ffc90aba-1dd9-42cf-91e3-12f472d34514", "sourceURL": "https://kubevela.io/docs/tutorials/cloud-shell", "url": "https://kubevela.io/docs/tutorials/cloud-shell/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela Config Command Documentation\"?\n\nAssistant: This page provides details on how to manage configuration data using the `vela` command in KubeVela.\n\nHere's a detailed explanation:\n\n\n## `vela config set`\nThe `vela config set` command is used to set configuration data. Example usage:\n\n```bash\nvela config set test a=b c=d\n```\n\nThis command will read existing config data and merge it with user input. The output will confirm that the config data has been saved successfully.\n\n## `vela config get`\nThe `vela config get` command retrieves the configuration data for a specified key. Example usage:\n\n```bash\nvela config get test\n```\n\nThe output will display the data associated with the key:\n```\nData:\n  a: b\n  c: d\n```\n\n## `vela config del`\nThe `vela config del` command deletes a specified configuration. Example usage:\n\n```bash\nvela config del test\n```\n\nThe output will confirm that the config has been deleted successfully.\n\n## `vela config ls`\nThe `vela config ls` command lists all configuration keys. Example usage:\n\n```bash\nvela config set test a=b\nvela config set test2 c=d\nvela config ls\n```\n\nThe output will display the names of the configurations:\n```\nNAME\ntest\ntest2\n```\n\n## Configure env in application\nConfiguration data can be set as environment variables in applications. Example usage:\n\n```bash\nvela config set demo DEMO_HELLO=helloworld\n```\n\nSave the following to `vela.yaml` in the current directory:\n```yaml\nname: testapp\nservices:\n  env-config-demo:\n    image: heroku/nodejs-hello-world\n    config: demo\n```\n\nThen run:\n```bash\nvela up\n```\n\nThe output will show the deployment process and confirm that the app has been deployed successfully.\n", "metadata": {"source_url": "https://kubevela.io/docs/developers/config-app", "title": "KubeVela Config Command Documentation", "description": "This page provides details on how to manage configuration data using the `vela` command in KubeVela.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 14:46:58", "type": "overview", "page_metadata": {"ogUrl": "https://kubevela.io/docs/developers/config-app/", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:description": "vela provides a config command to manage config data.", "twitter:card": "summary_large_image", "docusaurus_version": "v1.10", "theme-color": "#ffffff", "docusaurus_tag": "docs-default-v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "docusaurus_locale": "en", "title": "Configuring data/env in Application | KubeVela", "docsearch:version": "v1.10", "docsearch:language": "en", "ogTitle": "Configuring data/env in Application | KubeVela", "description": "vela provides a config command to manage config data.", "og:url": "https://kubevela.io/docs/developers/config-app/", "og:title": "Configuring data/env in Application | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "language": "en", "viewport": "width=device-width, initial-scale=1.0", "ogDescription": "vela provides a config command to manage config data.", "generator": "Docusaurus v2.4.3", "scrapeId": "895eb86d-7726-4099-beb1-7ed6ddc685c6", "sourceURL": "https://kubevela.io/docs/developers/config-app", "url": "https://kubevela.io/docs/developers/config-app/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"KubeVela Config Command Documentation\"?\n\nAssistant: Here are some code examples:\n\n### Set config data\n```yaml\nvela config set test a=b c=d\n```\n\n### Get config data\n```yaml\nvela config get test\n```\n\n### Delete config data\n```yaml\nvela config del test\n```\n\n### List config data\n```yaml\nvela config ls\n```\n\n### Set env in application\n```yaml\nvela config set demo DEMO_HELLO=helloworld\n```\n\n### Deploy application\n```yaml\nvela up\n```\n\n### Check environment variable\n```yaml\nvela exec testapp -- printenv | grep DEMO_HELLO\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/developers/config-app", "title": "KubeVela Config Command Documentation", "description": "This page provides details on how to manage configuration data using the `vela` command in KubeVela.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 14:46:58", "type": "code_examples", "page_metadata": {"ogUrl": "https://kubevela.io/docs/developers/config-app/", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:description": "vela provides a config command to manage config data.", "twitter:card": "summary_large_image", "docusaurus_version": "v1.10", "theme-color": "#ffffff", "docusaurus_tag": "docs-default-v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "docusaurus_locale": "en", "title": "Configuring data/env in Application | KubeVela", "docsearch:version": "v1.10", "docsearch:language": "en", "ogTitle": "Configuring data/env in Application | KubeVela", "description": "vela provides a config command to manage config data.", "og:url": "https://kubevela.io/docs/developers/config-app/", "og:title": "Configuring data/env in Application | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "language": "en", "viewport": "width=device-width, initial-scale=1.0", "ogDescription": "vela provides a config command to manage config data.", "generator": "Docusaurus v2.4.3", "scrapeId": "895eb86d-7726-4099-beb1-7ed6ddc685c6", "sourceURL": "https://kubevela.io/docs/developers/config-app", "url": "https://kubevela.io/docs/developers/config-app/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela Config Command Documentation\"?\n\nAssistant: Here are the recommended best practices:\n\n• Use `vela config set` to create or update configuration data.\n• Use `vela config get` to retrieve existing configuration data.\n• Use `vela config del` to remove configuration data that is no longer needed.\n• Use `vela config ls` to view all configuration keys and their values.\n", "metadata": {"source_url": "https://kubevela.io/docs/developers/config-app", "title": "KubeVela Config Command Documentation", "description": "This page provides details on how to manage configuration data using the `vela` command in KubeVela.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 14:46:58", "type": "best_practices", "page_metadata": {"ogUrl": "https://kubevela.io/docs/developers/config-app/", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:description": "vela provides a config command to manage config data.", "twitter:card": "summary_large_image", "docusaurus_version": "v1.10", "theme-color": "#ffffff", "docusaurus_tag": "docs-default-v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "docusaurus_locale": "en", "title": "Configuring data/env in Application | KubeVela", "docsearch:version": "v1.10", "docsearch:language": "en", "ogTitle": "Configuring data/env in Application | KubeVela", "description": "vela provides a config command to manage config data.", "og:url": "https://kubevela.io/docs/developers/config-app/", "og:title": "Configuring data/env in Application | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "language": "en", "viewport": "width=device-width, initial-scale=1.0", "ogDescription": "vela provides a config command to manage config data.", "generator": "Docusaurus v2.4.3", "scrapeId": "895eb86d-7726-4099-beb1-7ed6ddc685c6", "sourceURL": "https://kubevela.io/docs/developers/config-app", "url": "https://kubevela.io/docs/developers/config-app/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"VelaUX Addon Documentation\"?\n\nAssistant: This page provides detailed instructions on how to install and configure the VelaUX addon for KubeVela, including service types, ingress setup, database configuration, and more.\n\nHere's a detailed explanation:\n\n\n## Install\nTo enable the VelaUX addon, run the following command:\n\n```bash\nvela addon enable velaux\n```\n\nExpected output:\n\n```bash\nAddon: velaux enabled Successfully.\n```\n\n## Visit VelaUX by port-forward\nTo access the VelaUX dashboard, you can use port forwarding:\n\n```bash\nvela port-forward addon-velaux -n vela-system\n```\n\nChoose `> local | velaux | velaux` for visit.\n\n## Setup with Specified Service Type\nVelaUX supports three service types: `ClusterIP`, `NodePort`, and `LoadBalancer`. The default is `ClusterIP` for security. To specify a service type:\n\n- For `LoadBalancer`:\n\n```bash\nvela addon enable velaux serviceType=LoadBalancer\n```\n\n- For `NodePort`:\n\n```bash\nvela addon enable velaux serviceType=NodePort\n```\n\nAfter specifying the service type, obtain the access address with:\n\n```bash\nvela status addon-velaux -n vela-system --endpoint\n```\n\nExpected output:\n\n```bash\n+----------------------------+----------------------+  \n|  REF(KIND/NAMESPACE/NAME)  |       ENDPOINT       |  \n+----------------------------+----------------------+  \n| Service/vela-system/velaux | http://<IP address> |  \n+----------------------------+----------------------+  \n```\n\n## Setup with Ingress domain\nTo deploy VelaUX with a specified domain:\n\n```bash\nvela addon enable velaux domain=example.domain.com\n```\n\nExpected output:\n\n```bash\nI0112 15:23:40.428364   34884 apply.go:106] \"patching object\" name=\"addon-velaux\" resource=\"core.oam.dev/v1beta1, Kind=Application\"\nI0112 15:23:40.676894   34884 apply.go:106] \"patching object\" name=\"addon-secret-velaux\" resource=\"/v1, Kind=Secret\"\nAddon: velaux enabled Successfully.\nPlease access the velaux from the following endpoints:\n+----------------------------+---------------------------+\n|  REF(KIND/NAMESPACE/NAME)  |         ENDPOINT          |\n+----------------------------+---------------------------+\n| Ingress/vela-system/velaux | http://example.domain.com |\n+----------------------------+---------------------------+\n```\n\n## Setup with the database\nVelaUX supports various databases. To enable VelaUX with MongoDB:\n\n```bash\nvela addon enable velaux dbType=mongodb dbURL=mongodb://<MONGODB_USER>:<MONGODB_PASSWORD>@<MONGODB_URL>\n```\n\nTo deploy MongoDB:\n\n```yaml\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: velaux-db\n  namespace: vela-system\nspec:\n  components:\n    - name: velaux-db\n      properties:\n        chart: mongodb\n        repoType: helm\n        url: https://charts.bitnami.com/bitnami\n        values:\n          persistence:\n            size: 20Gi\n        version: 12.1.12\n      type: helm\n  policies:\n    - name: vela-system\n      properties:\n        clusters:\n          - local\n        namespace: vela-system\n      type: topology\n  workflow:\n    steps:\n      - name: vela-system\n        properties:\n          policies:\n            - vela-system\n        type: deploy\n```\n\nFor MySQL:\n\n```bash\nvela addon enable velaux dbType=mysql dbURL=mysql://<MYSQL_USER>:<MYSQL_PASSWORD>@<MYSQL_HOST>:<MYSQL_PORT>/<MYSQL_DB_NAME>\n```\n\nFor PostgreSQL:\n\n```bash\nvela addon enable velaux dbType=postgres dbURL=postgres://<POSTGRESQL_USER>:<POSTGRESQL_PASSWORD>@<POSTGRESQL_HOST>:<POSTGRESQL_PORT>/<POSTGRESQL_DB_NAME>\n```\n\n## Specify the addon image\nTo specify a custom image repository:\n\n```bash\nvela addon enable velaux repo=acr.kubevela.net\n```\n\nNote: `acr.kubevela.net` is no longer maintained.\n\n## Concept of VelaUX\nVelaUX serves as a UI console for KubeVela, integrating various concepts for enterprise use. It includes:\n\n- **Project**: Manage applications and collaborate with team members.\n- **Environment**: Development, testing, and production environments.\n- **Delivery Target**: Space where application resources are delivered.\n- **Application**: Lifecycle management of applications including create, deploy, recycle, and delete.\n", "metadata": {"source_url": "https://kubevela.io/docs/reference/addons/velaux", "title": "VelaUX Addon Documentation", "description": "This page provides detailed instructions on how to install and configure the VelaUX addon for KubeVela, including service types, ingress setup, database configuration, and more.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-02-28 14:47:19", "type": "overview", "page_metadata": {"docsearch:docusaurus_tag": "docs-default-v1.10", "docsearch:version": "v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "docusaurus_tag": "docs-default-v1.10", "title": "VelaUX | KubeVela", "ogUrl": "https://kubevela.io/docs/reference/addons/velaux/", "language": "en", "og:description": "VelaUX provides the UI console of KubeVela.", "generator": "Docusaurus v2.4.3", "twitter:card": "summary_large_image", "og:title": "VelaUX | KubeVela", "description": "VelaUX provides the UI console of KubeVela.", "og:url": "https://kubevela.io/docs/reference/addons/velaux/", "theme-color": "#ffffff", "docusaurus_version": "v1.10", "docsearch:language": "en", "docusaurus_locale": "en", "ogTitle": "VelaUX | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogDescription": "VelaUX provides the UI console of KubeVela.", "viewport": "width=device-width, initial-scale=1.0", "scrapeId": "6e3ffc1a-da97-4dcb-873f-cbe767019b80", "sourceURL": "https://kubevela.io/docs/reference/addons/velaux", "url": "https://kubevela.io/docs/reference/addons/velaux/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"VelaUX Addon Documentation\"?\n\nAssistant: Here are some code examples:\n\n### Install VelaUX\n```yaml\nvela addon enable velaux\n```\n\n### Visit VelaUX by port-forward\n```yaml\nvela port-forward addon-velaux -n vela-system\n```\n\n### Setup with LoadBalancer\n```yaml\nvela addon enable velaux serviceType=LoadBalancer\n```\n\n### Setup with NodePort\n```yaml\nvela addon enable velaux serviceType=NodePort\n```\n\n### Get Access Address\n```yaml\nvela status addon-velaux -n vela-system --endpoint\n```\n\n### Setup with Ingress domain\n```yaml\nvela addon enable velaux domain=example.domain.com\n```\n\n### Enable MongoDB\n```yaml\nvela addon enable velaux dbType=mongodb dbURL=mongodb://<MONGODB_USER>:<MONGODB_PASSWORD>@<MONGODB_URL>\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/reference/addons/velaux", "title": "VelaUX Addon Documentation", "description": "This page provides detailed instructions on how to install and configure the VelaUX addon for KubeVela, including service types, ingress setup, database configuration, and more.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-02-28 14:47:19", "type": "code_examples", "page_metadata": {"docsearch:docusaurus_tag": "docs-default-v1.10", "docsearch:version": "v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "docusaurus_tag": "docs-default-v1.10", "title": "VelaUX | KubeVela", "ogUrl": "https://kubevela.io/docs/reference/addons/velaux/", "language": "en", "og:description": "VelaUX provides the UI console of KubeVela.", "generator": "Docusaurus v2.4.3", "twitter:card": "summary_large_image", "og:title": "VelaUX | KubeVela", "description": "VelaUX provides the UI console of KubeVela.", "og:url": "https://kubevela.io/docs/reference/addons/velaux/", "theme-color": "#ffffff", "docusaurus_version": "v1.10", "docsearch:language": "en", "docusaurus_locale": "en", "ogTitle": "VelaUX | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogDescription": "VelaUX provides the UI console of KubeVela.", "viewport": "width=device-width, initial-scale=1.0", "scrapeId": "6e3ffc1a-da97-4dcb-873f-cbe767019b80", "sourceURL": "https://kubevela.io/docs/reference/addons/velaux", "url": "https://kubevela.io/docs/reference/addons/velaux/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"VelaUX Addon Documentation\"?\n\nAssistant: Here are the recommended best practices:\n\n• Remember to set and remember the new password after the first login to VelaUX.\n• Use databases other than Kubernetes for production environments for better performance and reliability.\n", "metadata": {"source_url": "https://kubevela.io/docs/reference/addons/velaux", "title": "VelaUX Addon Documentation", "description": "This page provides detailed instructions on how to install and configure the VelaUX addon for KubeVela, including service types, ingress setup, database configuration, and more.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-02-28 14:47:19", "type": "best_practices", "page_metadata": {"docsearch:docusaurus_tag": "docs-default-v1.10", "docsearch:version": "v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "docusaurus_tag": "docs-default-v1.10", "title": "VelaUX | KubeVela", "ogUrl": "https://kubevela.io/docs/reference/addons/velaux/", "language": "en", "og:description": "VelaUX provides the UI console of KubeVela.", "generator": "Docusaurus v2.4.3", "twitter:card": "summary_large_image", "og:title": "VelaUX | KubeVela", "description": "VelaUX provides the UI console of KubeVela.", "og:url": "https://kubevela.io/docs/reference/addons/velaux/", "theme-color": "#ffffff", "docusaurus_version": "v1.10", "docsearch:language": "en", "docusaurus_locale": "en", "ogTitle": "VelaUX | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogDescription": "VelaUX provides the UI console of KubeVela.", "viewport": "width=device-width, initial-scale=1.0", "scrapeId": "6e3ffc1a-da97-4dcb-873f-cbe767019b80", "sourceURL": "https://kubevela.io/docs/reference/addons/velaux", "url": "https://kubevela.io/docs/reference/addons/velaux/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"Resource Relationships in KubeVela\"?\n\nAssistant: This page covers the concept of resource relationships in KubeVela, detailing how to establish topological relationships between resources managed by a KubeVela application.\n\nHere's a detailed explanation:\n\n\n## Overview\n`Resource Relationships` mainly specify the relationship between two types of resources. Its main function is to help KubeVela establish the topological relationship of the resources managed by a KubeVela application. For example, the system has a built-in relationship rule: The sub-resources under the [Deployment](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/) can only be [ReplicaSet](https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/), and the child resource of ReplicaSet can only be [Pod](https://kubernetes.io/docs/concepts/workloads/pods/). When a KubeVela application with Deployment as the workload is created, then view the topology graph of the application on VelaUX, KubeVela will first list all ReplicaSets in the same namespace with the Deployment, and filter out the results whose OwnerReference don't point to the Deployment, and then find the Pod under the ReplicaSet with the same way. This can help to establish the topology hierarchy of the managed resources under the application.\n\n## Usage Scenarios\nIn general, these `Resource Relationships` are mainly used in the following scenarios:\n\n- Help to display the topology graph of an application on VelaUX. The following is an example of topology graph:\n\n![image](https://kubevela.io/assets/images/tree-c56eeb9fab803f566a371a29c2d934b1.png)\n\n- When using `vela port-forward`, `vela logs`, `vela exec` and `vela status --endpoint` via cli or check the log or access port of an application on VelaUX, it helps KubeVela to discover the pods or services of an application.\n\n## Add more rules\nThe built-in `Resource Relationships` in the system are limited. If a Kubernetes CustomResourceDefinition is added to your cluster, you can add new relationship rules to the system by creating a Kubernetes `configmap` to your cluster. Then we will introduce the details with an example. You can first enable the [kruise](https://github.com/kubevela/catalog/tree/master/experimental/addons/kruise) addon which is an experimental addon by running follow command:\n\n```codeBlockLines_e6Vv\nvela addon registry add experimental --type=helm --endpoint=https://addons.kubevela.net/experimental/\nvela addon enable kruise\n```\n\nAfter enable succeed you will see the `cloneset` componentDefinition whose workload's type is `clonesets.apps.kruise.io`. The cloneset controller will create pods for application.\n\n## Creating a Cloneset Application\nThen, create a `cloneset` application:\n\n```codeBlockLines_e6Vv\ncat <<EOF | vela up -f -\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: app-cloneset\nspec:\n  components:\n    - name: clone-set\n      type: cloneset\n      properties:\n        cmd:\n          - ./podinfo\n          - stress-cpu=1\n        image: stefanprodan/podinfo:4.0.3\n        port: 8080\n        updateStrategyType: InPlaceOnly\nEOF\n```\n\nWhen we view the application topology graph on VelaUX, we will find out the clonset resources has not any sub-resource, and the instance list is empty.\n\n## Error Handling\nIf we use command `vela logs` and `vela exec` will get error like follows:\n\n```codeBlockLines_e6Vv\n$ vela logs app-cloneset\nError: no pod found in your application\n```\n\n```codeBlockLines_e6Vv\n$ vela exec app-cloneset\nError: no pod found in your application\n```\n\nThe reason of these problems is system has not any relationship rule about the new added CustomResource `cloneset`. So KubeVela doesn't know how to lookup the sub-resource of the CustomResource, so you can apply a configmap as follows to solve this problem:\n\n## ConfigMap for Resource Relationship\n```codeBlockLines_e6Vv\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: clone-set-relation\n  namespace: vela-system\n  labels:\n    \"rules.oam.dev/resource-format\": \"yaml\"\n    \"rules.oam.dev/resources\": \"true\"\ndata:\n  rules: |-\n    - parentResourceType:\n        group: apps.kruise.io\n        kind: CloneSet\n      childrenResourceType:\n        - apiVersion: v1\n          kind: Pod\n```\n\nAs the example shows the configmap must contain a special label \"rules.oam.dev/resources\": \"true\". Only a configmap containing such a label will be recognized by KubeVela as a configuration of `resource type relationship rule`. At the same time, in this example, we also add a \"rules.oam.dev/resource-format\": \"yaml\" annotation to specify the rules in `data.rules` field defined with YAML format.\n\n## JSON Format for ConfigMap\nUsing YAML format, you can also define these rules with JSON format as follows:\n\n```codeBlockLines_e6Vv\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: clone-set-relation\n  namespace: vela-system\n  labels:\n    \"rules.oam.dev/resource-format\": \"json\"\n    \"rules.oam.dev/resources\": \"true\"\ndata:\n  rules: |-\n   [\\\n     {\\\n       \"parentResourceType\": {\\\n           \"group\": \"apps.kruise.io\",\\\n           \"kind\": \"CloneSet\"\\\n       },\\\n       \"childrenResourceType\": [\\\n           {\\\n               \"apiVersion\": \"v1\",\\\n               \"kind\": \"Pod\"\\\n           }\\\n       ]\\\n     }\\\n  ]\n```\n\nThe function of these two `configmap` is totally the same.\n\n## Checking Topology Graph\nIn the example above, the parent type is `Cloneset` in group `apps.kruise.io`, his child resource type is `v1/Pod`. Then we check the topology graph and instance list on VelaUX again will see:\n\n## Using Vela Commands\nUsing `vela logs` and `vela exec` command won't meet error neither.\n\n## Built inside with Addon\nA KubeVela [addon](https://kubevela.io/docs/platform-engineers/addon/intro/) may install some Kubernetes CRD operators. By default, KubeVela cannot know what types of sub-resources this CRD can have, so you may encounter that the resources under the CRD cannot be displayed in the topology graph or cannot check the container logs of the application. Then you can add a configmap that define the relationship of resource type to solve this problem. You can define the configmap in `outputs` field in application template file of the addon.\n", "metadata": {"source_url": "https://kubevela.io/docs/reference/topology-rule", "title": "Resource Relationships in KubeVela", "description": "This page covers the concept of resource relationships in KubeVela, detailing how to establish topological relationships between resources managed by a KubeVela application.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-02-28 14:50:52", "type": "overview", "page_metadata": {"docusaurus_tag": "docs-default-v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "og:url": "https://kubevela.io/docs/reference/topology-rule/", "docsearch:language": "en", "og:title": "Resource Relationships | KubeVela", "language": "en", "description": "Resource Relationships mainly specify the relationship between two types of resources. Its main function is to help KubeVela establish the topological relationship of the resources managed by a KubeVela application. For example, the system has a built-in relationship rule: The sub-resources under the Deployment  can only be ReplicaSet , and the child resource of ReplicaSet can only be Pod.", "docsearch:version": "v1.10", "docusaurus_locale": "en", "og:description": "Resource Relationships mainly specify the relationship between two types of resources. Its main function is to help KubeVela establish the topological relationship of the resources managed by a KubeVela application. For example, the system has a built-in relationship rule: The sub-resources under the Deployment  can only be ReplicaSet , and the child resource of ReplicaSet can only be Pod.", "ogTitle": "Resource Relationships | KubeVela", "ogUrl": "https://kubevela.io/docs/reference/topology-rule/", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "generator": "Docusaurus v2.4.3", "docusaurus_version": "v1.10", "theme-color": "#ffffff", "ogDescription": "Resource Relationships mainly specify the relationship between two types of resources. Its main function is to help KubeVela establish the topological relationship of the resources managed by a KubeVela application. For example, the system has a built-in relationship rule: The sub-resources under the Deployment  can only be ReplicaSet , and the child resource of ReplicaSet can only be Pod.", "docsearch:docusaurus_tag": "docs-default-v1.10", "title": "Resource Relationships | KubeVela", "viewport": "width=device-width, initial-scale=1.0", "twitter:card": "summary_large_image", "scrapeId": "caa22a9e-1449-4ecb-ba33-c8b9a081329e", "sourceURL": "https://kubevela.io/docs/reference/topology-rule", "url": "https://kubevela.io/docs/reference/topology-rule/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"Resource Relationships in KubeVela\"?\n\nAssistant: Here are some code examples:\n\n### Enable Kruise Addon\n```yaml\nvela addon registry add experimental --type=helm --endpoint=https://addons.kubevela.net/experimental/\nvela addon enable kruise\n```\n\n### Create Cloneset Application\n```yaml\ncat <<EOF | vela up -f -\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: app-cloneset\nspec:\n  components:\n    - name: clone-set\n      type: cloneset\n      properties:\n        cmd:\n          - ./podinfo\n          - stress-cpu=1\n        image: stefanprodan/podinfo:4.0.3\n        port: 8080\n        updateStrategyType: InPlaceOnly\nEOF\n```\n\n### ConfigMap for Resource Relationship (YAML)\n```yaml\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: clone-set-relation\n  namespace: vela-system\n  labels:\n    \"rules.oam.dev/resource-format\": \"yaml\"\n    \"rules.oam.dev/resources\": \"true\"\ndata:\n  rules: |-\n    - parentResourceType:\n        group: apps.kruise.io\n        kind: CloneSet\n      childrenResourceType:\n        - apiVersion: v1\n          kind: Pod\n```\n\n### ConfigMap for Resource Relationship (JSON)\n```yaml\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: clone-set-relation\n  namespace: vela-system\n  labels:\n    \"rules.oam.dev/resource-format\": \"json\"\n    \"rules.oam.dev/resources\": \"true\"\ndata:\n  rules: |-\n   [\\\n     {\\\n       \"parentResourceType\": {\\\n           \"group\": \"apps.kruise.io\",\\\n           \"kind\": \"CloneSet\"\\\n       },\\\n       \"childrenResourceType\": [\\\n           {\\\n               \"apiVersion\": \"v1\",\\\n               \"kind\": \"Pod\"\\\n           }\\\n       ]\\\n     }\\\n  ]\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/reference/topology-rule", "title": "Resource Relationships in KubeVela", "description": "This page covers the concept of resource relationships in KubeVela, detailing how to establish topological relationships between resources managed by a KubeVela application.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-02-28 14:50:52", "type": "code_examples", "page_metadata": {"docusaurus_tag": "docs-default-v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "og:url": "https://kubevela.io/docs/reference/topology-rule/", "docsearch:language": "en", "og:title": "Resource Relationships | KubeVela", "language": "en", "description": "Resource Relationships mainly specify the relationship between two types of resources. Its main function is to help KubeVela establish the topological relationship of the resources managed by a KubeVela application. For example, the system has a built-in relationship rule: The sub-resources under the Deployment  can only be ReplicaSet , and the child resource of ReplicaSet can only be Pod.", "docsearch:version": "v1.10", "docusaurus_locale": "en", "og:description": "Resource Relationships mainly specify the relationship between two types of resources. Its main function is to help KubeVela establish the topological relationship of the resources managed by a KubeVela application. For example, the system has a built-in relationship rule: The sub-resources under the Deployment  can only be ReplicaSet , and the child resource of ReplicaSet can only be Pod.", "ogTitle": "Resource Relationships | KubeVela", "ogUrl": "https://kubevela.io/docs/reference/topology-rule/", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "generator": "Docusaurus v2.4.3", "docusaurus_version": "v1.10", "theme-color": "#ffffff", "ogDescription": "Resource Relationships mainly specify the relationship between two types of resources. Its main function is to help KubeVela establish the topological relationship of the resources managed by a KubeVela application. For example, the system has a built-in relationship rule: The sub-resources under the Deployment  can only be ReplicaSet , and the child resource of ReplicaSet can only be Pod.", "docsearch:docusaurus_tag": "docs-default-v1.10", "title": "Resource Relationships | KubeVela", "viewport": "width=device-width, initial-scale=1.0", "twitter:card": "summary_large_image", "scrapeId": "caa22a9e-1449-4ecb-ba33-c8b9a081329e", "sourceURL": "https://kubevela.io/docs/reference/topology-rule", "url": "https://kubevela.io/docs/reference/topology-rule/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"Resource Relationships in KubeVela\"?\n\nAssistant: Here are the recommended best practices:\n\n• Ensure that the configmap contains the label \"rules.oam.dev/resources\": \"true\" to be recognized by KubeVela.\n• You can define resource relationship rules in both YAML and JSON formats.\n• When adding new CustomResourceDefinitions, remember to create corresponding relationship rules to avoid errors in commands like `vela logs` and `vela exec`.\n", "metadata": {"source_url": "https://kubevela.io/docs/reference/topology-rule", "title": "Resource Relationships in KubeVela", "description": "This page covers the concept of resource relationships in KubeVela, detailing how to establish topological relationships between resources managed by a KubeVela application.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-02-28 14:50:52", "type": "best_practices", "page_metadata": {"docusaurus_tag": "docs-default-v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "og:url": "https://kubevela.io/docs/reference/topology-rule/", "docsearch:language": "en", "og:title": "Resource Relationships | KubeVela", "language": "en", "description": "Resource Relationships mainly specify the relationship between two types of resources. Its main function is to help KubeVela establish the topological relationship of the resources managed by a KubeVela application. For example, the system has a built-in relationship rule: The sub-resources under the Deployment  can only be ReplicaSet , and the child resource of ReplicaSet can only be Pod.", "docsearch:version": "v1.10", "docusaurus_locale": "en", "og:description": "Resource Relationships mainly specify the relationship between two types of resources. Its main function is to help KubeVela establish the topological relationship of the resources managed by a KubeVela application. For example, the system has a built-in relationship rule: The sub-resources under the Deployment  can only be ReplicaSet , and the child resource of ReplicaSet can only be Pod.", "ogTitle": "Resource Relationships | KubeVela", "ogUrl": "https://kubevela.io/docs/reference/topology-rule/", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "generator": "Docusaurus v2.4.3", "docusaurus_version": "v1.10", "theme-color": "#ffffff", "ogDescription": "Resource Relationships mainly specify the relationship between two types of resources. Its main function is to help KubeVela establish the topological relationship of the resources managed by a KubeVela application. For example, the system has a built-in relationship rule: The sub-resources under the Deployment  can only be ReplicaSet , and the child resource of ReplicaSet can only be Pod.", "docsearch:docusaurus_tag": "docs-default-v1.10", "title": "Resource Relationships | KubeVela", "viewport": "width=device-width, initial-scale=1.0", "twitter:card": "summary_large_image", "scrapeId": "caa22a9e-1449-4ecb-ba33-c8b9a081329e", "sourceURL": "https://kubevela.io/docs/reference/topology-rule", "url": "https://kubevela.io/docs/reference/topology-rule/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"UI-Schema Reference\"?\n\nAssistant: This page covers the UI-Schema specification used in KubeVela to customize UI elements for components, workflow steps, and operation and maintenance features.\n\nHere's a detailed explanation:\n\n\n## How UI-Schema works\nThe components, workflow steps, and operation and maintenance feature types with different UI-Schema working principles are defined through CUE, which we call XDefinition, and almost every definition includes the definition of input parameters. for example:\n\n```codeBlockLines_e6Vv\nscaler: {\n    type: \"trait\"\n    annotations: {}\n    labels: {}\n    description: \"Manually scale K8s pod for your workload which follows the pod spec in path 'spec.template'.\"\n    attributes: {\n        podDisruptive: false\n        appliesToWorkloads: [\"*\"]\n    }\n}\ntemplate: {\n    parameter: {\n        // +usage=Specify the number of workload\n        replicas: *1 | int\n    }\n    // +patchStrategy=retainKeys\n    patch: spec: replicas: parameter.replicas\n}\n```\n\nIn the above example, the user input parameter is `replicas`.\n\nIn the UI we want the user to be able to set the number of replicas via a number input form.\n\n![ui schema](https://kubevela.io/assets/images/ui-schema-18f0b0a3a4ba8af0cb8fed321fbd9a51.jpg)\n\nIts workflow is in the figure above. The API Schema is [generated through the defined CUE](https://kubevela.io/docs/platform-engineers/openapi-v3-json-schema/), and then the default UI Schema is generated through the API Schema. If there is a custom UI Schema, the default configuration is patched with the custom configuration. The UI renders the front-end page based on the final UI Schema.\n\n## Supported react component types\n#### Basic form\n\n- [x] Input\n- [x] Number\n- [x] Select\n- [x] Switch\n- [x] Radio\n- [x] Password\n\n#### Business form\n\n- [x] Ignore: There are subordinate fields, and the current field is not displayed.\n- [x] SecretSelect: Load the secret list to assist user selection\n- [x] SecretKeySelect: Load the secret key list by the secret name of the user selected to assist user selection\n- [x] CPUNumber: CPU-style number input form.\n- [x] MemoryNumber: Memory-style number input form.\n- [x] DiskNumber: Disk-style number input form.\n- [x] K8sObjectsCode: The YAML input form of Kubernetes resource.\n- [x] HelmRepoSelect: Load the helm repositories from integration configs to assist user selection.\n- [x] HelmChartSelect: Load the helm charts to assist user selection.\n- [x] HelmChartVersionSelect: Load the versions of the selected helm chart to assist user selection.\n- [x] HelmValues: Load the default values of the selected helm chart and version to assist the user to configure the custom values.\n- [x] PolicySelect: Load the policies of the current application to assist user selection.\n- [x] ImageInput: Load and show the image info by users input image name.\n- [x] CertBase64: Support users upload or input the string, automatically base64 encoded. Suitable the fields such as the certificates and keys. (Added in 1.5+)\n\n#### Combination form\n\n- [x] KV\n- [x] Strings\n- [x] Structs\n- [x] Group: render as a titled container.\n\n## Example\nKubeVela store UISchema config in a ConfigMap in the same namespace with the definition object.\n\n> The default KubeVela system namespace is vela-system, the built-in capabilities and uischemas are laid there.\n\nYou can use the following command to get the ConfigMap list of Custom UISchema.\n\n```codeBlockLines_e6Vv\nkubectl get configmap -n vela-system | grep uischema\n```\n\n```codeBlockLines_e6Vv\nNAME                                                   DATA   AGE\naddon-uischema-velaux                                  1      25h\ncomponent-uischema-helm                                1      25h\ncomponent-uischema-k8s-objects                         1      25h\ncomponent-uischema-kustomize                           1      25h\ncomponent-uischema-task                                1      25h\nconfig-uischema-helm-repository                        1      25h\nconfig-uischema-image-registry                         1      25h\n```\n\nThe ConfigMap name is in the format of `<your-definition-type>-uischema-<your-definition-name>`, and the data key is `ui-schema`.\n\nFor example, we can use the following command to get the UISchema of `k8s-objects` which tpe is `component`.\n\n```codeBlockLines_e6Vv\nkubectl get configmap -n vela-system component-uischema-k8s-objects -oyaml\n```\n\n```codeBlockLines_e6Vv\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: component-uischema-k8s-objects\n  namespace: vela-system\ndata:\n  ui-schema: '[{\"jsonKey\":\"objects\",\"uiType\":\"K8sObjectsCode\"}]'\n```\n\nFor more examples, please refer to the following links： [https://github.com/kubevela/catalog/tree/master/addons/velaux/schemas](https://github.com/kubevela/catalog/tree/master/addons/velaux/schemas)\n\n## How to expand\nUI-Schema mainly extends front-end react components, refer to [https://github.com/kubevela/velaux/tree/main/packages/velaux-ui/src/extends](https://github.com/kubevela/velaux/tree/main/packages/velaux-ui/src/extends)\n\n- [How UI-Schema works](https://kubevela.io/docs/reference/ui-schema/#how-ui-schema-works)\n- [Supported react component types](https://kubevela.io/docs/reference/ui-schema/#supported-react-component-types)\n- [Example](https://kubevela.io/docs/reference/ui-schema/#example)\n- [How to expand](https://kubevela.io/docs/reference/ui-schema/#how-to-expand)\n", "metadata": {"source_url": "https://kubevela.io/docs/reference/ui-schema", "title": "UI-Schema Reference", "description": "This page covers the UI-Schema specification used in KubeVela to customize UI elements for components, workflow steps, and operation and maintenance features.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 14:51:14", "type": "overview", "page_metadata": {"ogUrl": "https://kubevela.io/docs/reference/ui-schema/", "ogDescription": "VelaUX uses the UI-Schema specification to customize UI elements of components, workflow steps, and operation and maintenance feature resources, in the case of variable input parameters, to achieve a more native UI experience.", "viewport": "width=device-width, initial-scale=1.0", "title": "UX of Definition | KubeVela", "docsearch:language": "en", "og:title": "UX of Definition | KubeVela", "og:description": "VelaUX uses the UI-Schema specification to customize UI elements of components, workflow steps, and operation and maintenance feature resources, in the case of variable input parameters, to achieve a more native UI experience.", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docsearch:version": "v1.10", "docusaurus_tag": "docs-default-v1.10", "og:url": "https://kubevela.io/docs/reference/ui-schema/", "generator": "Docusaurus v2.4.3", "twitter:card": "summary_large_image", "description": "VelaUX uses the UI-Schema specification to customize UI elements of components, workflow steps, and operation and maintenance feature resources, in the case of variable input parameters, to achieve a more native UI experience.", "theme-color": "#ffffff", "docsearch:docusaurus_tag": "docs-default-v1.10", "docusaurus_locale": "en", "language": "en", "ogTitle": "UX of Definition | KubeVela", "msapplication-config": "/img/favicons/browserconfig.xml", "docusaurus_version": "v1.10", "scrapeId": "6c31e579-11ed-41eb-b0ee-c83c970ec8d0", "sourceURL": "https://kubevela.io/docs/reference/ui-schema", "url": "https://kubevela.io/docs/reference/ui-schema/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"UI-Schema Reference\"?\n\nAssistant: Here are some code examples:\n\n### Get ConfigMap list of Custom UISchema\n```yaml\nkubectl get configmap -n vela-system | grep uischema\n```\n\n### Get UISchema of k8s-objects\n```yaml\nkubectl get configmap -n vela-system component-uischema-k8s-objects -oyaml\n```\n\n### ConfigMap example\n```yaml\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: component-uischema-k8s-objects\n  namespace: vela-system\ndata:\n  ui-schema: '[{\"jsonKey\":\"objects\",\"uiType\":\"K8sObjectsCode\"}]'\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/reference/ui-schema", "title": "UI-Schema Reference", "description": "This page covers the UI-Schema specification used in KubeVela to customize UI elements for components, workflow steps, and operation and maintenance features.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 14:51:14", "type": "code_examples", "page_metadata": {"ogUrl": "https://kubevela.io/docs/reference/ui-schema/", "ogDescription": "VelaUX uses the UI-Schema specification to customize UI elements of components, workflow steps, and operation and maintenance feature resources, in the case of variable input parameters, to achieve a more native UI experience.", "viewport": "width=device-width, initial-scale=1.0", "title": "UX of Definition | KubeVela", "docsearch:language": "en", "og:title": "UX of Definition | KubeVela", "og:description": "VelaUX uses the UI-Schema specification to customize UI elements of components, workflow steps, and operation and maintenance feature resources, in the case of variable input parameters, to achieve a more native UI experience.", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docsearch:version": "v1.10", "docusaurus_tag": "docs-default-v1.10", "og:url": "https://kubevela.io/docs/reference/ui-schema/", "generator": "Docusaurus v2.4.3", "twitter:card": "summary_large_image", "description": "VelaUX uses the UI-Schema specification to customize UI elements of components, workflow steps, and operation and maintenance feature resources, in the case of variable input parameters, to achieve a more native UI experience.", "theme-color": "#ffffff", "docsearch:docusaurus_tag": "docs-default-v1.10", "docusaurus_locale": "en", "language": "en", "ogTitle": "UX of Definition | KubeVela", "msapplication-config": "/img/favicons/browserconfig.xml", "docusaurus_version": "v1.10", "scrapeId": "6c31e579-11ed-41eb-b0ee-c83c970ec8d0", "sourceURL": "https://kubevela.io/docs/reference/ui-schema", "url": "https://kubevela.io/docs/reference/ui-schema/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"UI-Schema Reference\"?\n\nAssistant: Here are the recommended best practices:\n\n• Use the default KubeVela system namespace 'vela-system' for UISchema configurations.\n• Ensure the ConfigMap name follows the format '<your-definition-type>-uischema-<your-definition-name>'.\n• Refer to the provided links for more examples and details on extending UI-Schema.\n", "metadata": {"source_url": "https://kubevela.io/docs/reference/ui-schema", "title": "UI-Schema Reference", "description": "This page covers the UI-Schema specification used in KubeVela to customize UI elements for components, workflow steps, and operation and maintenance features.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 14:51:14", "type": "best_practices", "page_metadata": {"ogUrl": "https://kubevela.io/docs/reference/ui-schema/", "ogDescription": "VelaUX uses the UI-Schema specification to customize UI elements of components, workflow steps, and operation and maintenance feature resources, in the case of variable input parameters, to achieve a more native UI experience.", "viewport": "width=device-width, initial-scale=1.0", "title": "UX of Definition | KubeVela", "docsearch:language": "en", "og:title": "UX of Definition | KubeVela", "og:description": "VelaUX uses the UI-Schema specification to customize UI elements of components, workflow steps, and operation and maintenance feature resources, in the case of variable input parameters, to achieve a more native UI experience.", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docsearch:version": "v1.10", "docusaurus_tag": "docs-default-v1.10", "og:url": "https://kubevela.io/docs/reference/ui-schema/", "generator": "Docusaurus v2.4.3", "twitter:card": "summary_large_image", "description": "VelaUX uses the UI-Schema specification to customize UI elements of components, workflow steps, and operation and maintenance feature resources, in the case of variable input parameters, to achieve a more native UI experience.", "theme-color": "#ffffff", "docsearch:docusaurus_tag": "docs-default-v1.10", "docusaurus_locale": "en", "language": "en", "ogTitle": "UX of Definition | KubeVela", "msapplication-config": "/img/favicons/browserconfig.xml", "docusaurus_version": "v1.10", "scrapeId": "6c31e579-11ed-41eb-b0ee-c83c970ec8d0", "sourceURL": "https://kubevela.io/docs/reference/ui-schema", "url": "https://kubevela.io/docs/reference/ui-schema/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"vela auth list-privileges\"?\n\nAssistant: List privileges for user/group/serviceaccount\n\nHere's a detailed explanation:\n\n\n## Synopsis\nList privileges for user\n\nList privileges that user has in clusters. Use --user/--group to check the privileges for specified user and group. They can be jointly configured to see the union of privileges. Use --serviceaccount and -n/--namespace to see the privileges for ServiceAccount. You can also use --kubeconfig to use the identity inside implicitly. The privileges will be shown in tree format.\n\nThis command supports listing privileges across multiple clusters, by using --cluster. If not set, the control plane will be used. This feature requires cluster-gateway to be properly setup to use.\n\nThe privileges are collected through listing all ClusterRoleBinding and RoleBinding, following the Kubernetes RBAC Authorization. Other authorization mechanism is not supported now. See [https://kubernetes.io/docs/reference/access-authn-authz/rbac/](https://kubernetes.io/docs/reference/access-authn-authz/rbac/) for details.\n\nThe ClusterRoleBinding and RoleBinding that matches the specified identity will be tracked. Related ClusterRoles and Roles are retrieved and the contained PolicyRules are demonstrated.\n\n## Examples\n```codeBlockLines_e6Vv\n  # List privileges for User alice in the control plane\n  vela auth list-privileges --user alice\n\n  # List privileges for Group org:dev-team in the control plane\n  vela auth list-privileges --group org:dev-team\n\n  # List privileges for User bob with Groups org:dev-team and org:test-team in the control plane and managed cluster example-cluster\n  vela auth list-privileges --user bob --group org:dev-team --group org:test-team --cluster local --cluster example-cluster\n\n  # List privileges for ServiceAccount example-sa in demo namespace in multiple managed clusters\n  vela auth list-privileges --serviceaccount example-sa -n demo --cluster cluster-1 --cluster cluster-2\n\n  # List privileges for identity in kubeconfig\n  vela auth list-privileges --kubeconfig ./example.kubeconfig --cluster local --cluster cluster-1\n```\n\n## Options\n```codeBlockLines_e6Vv\n  -c, --cluster strings              The cluster to list privileges. If not set, the command will list privileges in the control plane. (default [local])\n  -e, --env string                   The environment name for the CLI request\n  -g, --group strings                The group to list privileges. Can be set together with --user.\n  -h, --help                         help for list-privileges\n      --kubeconfig string            The kubeconfig to list privileges. If set, it will override all the other identity flags.\n  -n, --namespace --serviceaccount   The namespace of the serviceaccount. This flag only works when --serviceaccount is set.\n      --serviceaccount string        The serviceaccount to list privileges. Cannot be set with --user and --group.\n  -u, --user string                  The user to list privileges.\n```\n\n## Options inherited from parent commands\n```codeBlockLines_e6Vv\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n\n## SEE ALSO\n- [vela auth](https://kubevela.io/docs/cli/vela_auth/) \\- Manage identity and authorizations.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_auth_list-privileges", "title": "vela auth list-privileges", "description": "List privileges for user/group/serviceaccount", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 14:51:27", "type": "overview", "page_metadata": {"language": "en", "twitter:card": "summary_large_image", "ogUrl": "https://kubevela.io/docs/cli/vela_auth_list-privileges/", "og:title": "vela auth list-privileges | KubeVela", "title": "vela auth list-privileges | KubeVela", "description": "List privileges for user/group/serviceaccount", "og:url": "https://kubevela.io/docs/cli/vela_auth_list-privileges/", "docusaurus_tag": "docs-default-v1.10", "docusaurus_version": "v1.10", "theme-color": "#ffffff", "docsearch:docusaurus_tag": "docs-default-v1.10", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "generator": "Docusaurus v2.4.3", "docsearch:language": "en", "docusaurus_locale": "en", "og:description": "List privileges for user/group/serviceaccount", "ogTitle": "vela auth list-privileges | KubeVela", "viewport": "width=device-width, initial-scale=1.0", "docsearch:version": "v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "ogDescription": "List privileges for user/group/serviceaccount", "scrapeId": "35f663c7-fed3-42f7-85a8-076fe085160e", "sourceURL": "https://kubevela.io/docs/cli/vela_auth_list-privileges", "url": "https://kubevela.io/docs/cli/vela_auth_list-privileges/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"vela auth list-privileges\"?\n\nAssistant: Here are some code examples:\n\n### Basic Command\n```yaml\nvela auth list-privileges\n```\n\n### List privileges for User alice\n```yaml\nvela auth list-privileges --user alice\n```\n\n### List privileges for Group org:dev-team\n```yaml\nvela auth list-privileges --group org:dev-team\n```\n\n### List privileges for User bob with Groups\n```yaml\nvela auth list-privileges --user bob --group org:dev-team --group org:test-team --cluster local --cluster example-cluster\n```\n\n### List privileges for ServiceAccount example-sa\n```yaml\nvela auth list-privileges --serviceaccount example-sa -n demo --cluster cluster-1 --cluster cluster-2\n```\n\n### List privileges for identity in kubeconfig\n```yaml\nvela auth list-privileges --kubeconfig ./example.kubeconfig --cluster local --cluster cluster-1\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_auth_list-privileges", "title": "vela auth list-privileges", "description": "List privileges for user/group/serviceaccount", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 14:51:27", "type": "code_examples", "page_metadata": {"language": "en", "twitter:card": "summary_large_image", "ogUrl": "https://kubevela.io/docs/cli/vela_auth_list-privileges/", "og:title": "vela auth list-privileges | KubeVela", "title": "vela auth list-privileges | KubeVela", "description": "List privileges for user/group/serviceaccount", "og:url": "https://kubevela.io/docs/cli/vela_auth_list-privileges/", "docusaurus_tag": "docs-default-v1.10", "docusaurus_version": "v1.10", "theme-color": "#ffffff", "docsearch:docusaurus_tag": "docs-default-v1.10", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "generator": "Docusaurus v2.4.3", "docsearch:language": "en", "docusaurus_locale": "en", "og:description": "List privileges for user/group/serviceaccount", "ogTitle": "vela auth list-privileges | KubeVela", "viewport": "width=device-width, initial-scale=1.0", "docsearch:version": "v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "ogDescription": "List privileges for user/group/serviceaccount", "scrapeId": "35f663c7-fed3-42f7-85a8-076fe085160e", "sourceURL": "https://kubevela.io/docs/cli/vela_auth_list-privileges", "url": "https://kubevela.io/docs/cli/vela_auth_list-privileges/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"vela auth list-privileges\"?\n\nAssistant: Here are the recommended best practices:\n\n• Ensure cluster-gateway is properly set up to use the command across multiple clusters.\n• Use the appropriate flags to specify user, group, or service account for accurate privilege listing.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_auth_list-privileges", "title": "vela auth list-privileges", "description": "List privileges for user/group/serviceaccount", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 14:51:27", "type": "best_practices", "page_metadata": {"language": "en", "twitter:card": "summary_large_image", "ogUrl": "https://kubevela.io/docs/cli/vela_auth_list-privileges/", "og:title": "vela auth list-privileges | KubeVela", "title": "vela auth list-privileges | KubeVela", "description": "List privileges for user/group/serviceaccount", "og:url": "https://kubevela.io/docs/cli/vela_auth_list-privileges/", "docusaurus_tag": "docs-default-v1.10", "docusaurus_version": "v1.10", "theme-color": "#ffffff", "docsearch:docusaurus_tag": "docs-default-v1.10", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "generator": "Docusaurus v2.4.3", "docsearch:language": "en", "docusaurus_locale": "en", "og:description": "List privileges for user/group/serviceaccount", "ogTitle": "vela auth list-privileges | KubeVela", "viewport": "width=device-width, initial-scale=1.0", "docsearch:version": "v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "ogDescription": "List privileges for user/group/serviceaccount", "scrapeId": "35f663c7-fed3-42f7-85a8-076fe085160e", "sourceURL": "https://kubevela.io/docs/cli/vela_auth_list-privileges", "url": "https://kubevela.io/docs/cli/vela_auth_list-privileges/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela Addon: FluxCD\"?\n\nAssistant: This page provides information on the FluxCD addon for KubeVela, including installation instructions, definitions, parameters, examples, and notes.\n\nHere's a detailed explanation:\n\n\n## install\n```codeBlockLines_e6Vv\nvela addon enable fluxcd\n```\n\nIf you only want to deploy the helm application with fluxcd addon, you can execute the following command to enable only helm related components.\n\n```codeBlockLines_e6Vv\n$ vela addon enable fluxcd onlyHelmComponents=true\n```\n\n## Definitions\nThe following definitions will be enabled after the installation of fluxcd addon.\n\n| DEFINITION NAME | DEFINITION TYPE | DEFINITION DESCRIPTION |\n| :-: | :-: | --- |\n| helm | ComponentDefinition | helps to deploy a helm chart from git repo, helm repo or S3 compatible bucket |\n| kustomize | ComponentDefinition | helps to deploy a kustomize style artifact and GitOps capability to watch changes from git repo or image registry |\n| kustomize-json-patch | TraitDefinition | A list of JSON6902 patch to selected target |\n| kustomize-patch | TraitDefinition | A list of StrategicMerge or JSON6902 patch to selected target |\n| kustomize-strategy-merge | TraitDefinition | A list of strategic merge to kustomize config |\n\n## helm\n#### Parameters\n\n| Parameters | Description | Example |\n| --- | --- | --- |\n| repoType | required, indicates the type of repository, should be \"helm\",\"git\", \"oss\", or \"oci\". | Helm |\n| pullInterval | optional, the interval at which to check for repository/bucket and release updates, default to 5m | 5m |\n| url | required, the Git or Helm repository URL, OSS endpoint, accept HTTP/S or SSH address as git url | [https://charts.bitnami.com/bitnami](https://charts.bitnami.com/bitnami) |\n| secretRef | optional, the name of the Secret object that holds the credentials required to pull the repo. The username and password fields must be included in the HTTP/S basic authentication Secret. For TLS the secret must contain a certFile and keyFile, and/or caCert fields. For TLS authentication, the secret must contain a certFile / keyFile field and/or caCert field. | sec-name |\n| timeout | optional, the timeout for operations like download index/clone repository | 60s |\n| chart | required, the relative path to helm chart for git/oss source. The chart name for helm resource | redis-cluster |\n| version | optional, chart version, * by default | 6.2.7 |\n| targetNamespace | optional, the namespace to install chart, decided by chart itself | your-ns |\n| releaseName | optional, release name after installed | your-rn |\n| values | optional, override the Values.yaml inchart, using for the rendering of Helm |  |\n| valuesFrom | optional, valuesFrom holds references to resources containing Helm values for this HelmRelease, and information about how they should be merged. It's a list of [ValueReference](https://kubevela.io/docs/reference/addons/fluxcd/#valuereference) |  |\n| installTimeout | optional, the timeout for operation `helm install`, and 10 minutes by default | 20m |\n| interval | optional, the Interval at which to reconcile the Helm release, default to 30s | 1m |\n| oss | optional, The [oss](https://kubevela.io/docs/reference/addons/fluxcd/#oss) source configuration |  |\n| git | optional, The [git](https://kubevela.io/docs/reference/addons/fluxcd/#git) source configuration | dev |\n\n##### Example\n\nYou can create an application like below to deploy a helm chart which stored in helm repository.\n\n```codeBlockLines_e6Vv\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: helm-redis\nspec:\n  components:\n    - name: redis\n      type: helm\n      properties:\n        repoType: \"helm\"\n        url: \"https://charts.bitnami.com/bitnami\"\n        chart: \"redis\"\n        version: \"16.8.5\"\n        values:\n          master:\n            persistence:\n              size: 16Gi\n          replica:\n            persistence:\n              size: 16Gi\n```\n\nIf your helm chart is stored in OCI registry, you can create the application like this:\n\n```codeBlockLines_e6Vv\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: oci-app\n  namespace: default\nspec:\n  components:\n    - name: test-oci\n      type: helm\n      properties:\n        repoType: \"oci\"\n        url: oci://ghcr.io/stefanprodan/charts\n        chart: podinfo\n        version: '6.1.*'\n```\n\nIf your helm chart is stored in OSS, you can create the application like this:\n\n```codeBlockLines_e6Vv\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: bucket-app\nspec:\n  components:\n    - name: bucket-comp\n      type: helm\n      properties:\n        repoType: oss\n        # required if bucket is private\n        secretRef: bucket-secret\n        chart: ./chart/podinfo-5.1.3.tgz\n        url: oss-cn-beijing.aliyuncs.com\n        oss:\n            bucketName: definition-registry\n```\n\nIf your helm chart stored in git, you can create the application like this:\n\n```codeBlockLines_e6Vv\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n   name: app-delivering-chart\nspec:\n   components:\n     - name: terraform-controller\n       type: helm\n       properties:\n          repoType: git\n          url: https://github.com/oam-dev/terraform-controller\n          chart: ./chart\n          git:\n            branch: master\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/reference/addons/fluxcd", "title": "KubeVela Addon: FluxCD", "description": "This page provides information on the FluxCD addon for KubeVela, including installation instructions, definitions, parameters, examples, and notes.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 14:52:00", "type": "overview", "page_metadata": {"ogTitle": "FluxCD | KubeVela", "ogDescription": "This addon is built based FluxCD", "title": "FluxCD | KubeVela", "og:title": "FluxCD | KubeVela", "theme-color": "#ffffff", "msapplication-config": "/img/favicons/browserconfig.xml", "ogUrl": "https://kubevela.io/docs/reference/addons/fluxcd/", "og:url": "https://kubevela.io/docs/reference/addons/fluxcd/", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "generator": "Docusaurus v2.4.3", "twitter:card": "summary_large_image", "docsearch:version": "v1.10", "og:description": "This addon is built based FluxCD", "language": "en", "docsearch:docusaurus_tag": "docs-default-v1.10", "description": "This addon is built based FluxCD", "docusaurus_tag": "docs-default-v1.10", "docusaurus_locale": "en", "docusaurus_version": "v1.10", "docsearch:language": "en", "viewport": "width=device-width, initial-scale=1.0", "scrapeId": "e2f9f794-db41-40fb-9401-0e34258c5961", "sourceURL": "https://kubevela.io/docs/reference/addons/fluxcd", "url": "https://kubevela.io/docs/reference/addons/fluxcd/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"KubeVela Addon: FluxCD\"?\n\nAssistant: Here are some code examples:\n\n### Install FluxCD Addon\n```yaml\nvela addon enable fluxcd\n```\n\n### Enable Only Helm Components\n```yaml\n$ vela addon enable fluxcd onlyHelmComponents=true\n```\n\n### Create Application for Helm Chart\n```yaml\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: helm-redis\nspec:\n  components:\n    - name: redis\n      type: helm\n      properties:\n        repoType: \"helm\"\n        url: \"https://charts.bitnami.com/bitnami\"\n        chart: \"redis\"\n        version: \"16.8.5\"\n        values:\n          master:\n            persistence:\n              size: 16Gi\n          replica:\n            persistence:\n              size: 16Gi\n\n```\n\n### Create Application for OCI Registry\n```yaml\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: oci-app\n  namespace: default\nspec:\n  components:\n    - name: test-oci\n      type: helm\n      properties:\n        repoType: \"oci\"\n        url: oci://ghcr.io/stefanprodan/charts\n        chart: podinfo\n        version: '6.1.*'\n\n```\n\n### Create Application for OSS\n```yaml\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: bucket-app\nspec:\n  components:\n    - name: bucket-comp\n      type: helm\n      properties:\n        repoType: oss\n        # required if bucket is private\n        secretRef: bucket-secret\n        chart: ./chart/podinfo-5.1.3.tgz\n        url: oss-cn-beijing.aliyuncs.com\n        oss:\n            bucketName: definition-registry\n\n```\n\n### Create Application for Git\n```yaml\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n   name: app-delivering-chart\nspec:\n   components:\n     - name: terraform-controller\n       type: helm\n       properties:\n          repoType: git\n          url: https://github.com/oam-dev/terraform-controller\n          chart: ./chart\n          git:\n            branch: master\n\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/reference/addons/fluxcd", "title": "KubeVela Addon: FluxCD", "description": "This page provides information on the FluxCD addon for KubeVela, including installation instructions, definitions, parameters, examples, and notes.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 14:52:00", "type": "code_examples", "page_metadata": {"ogTitle": "FluxCD | KubeVela", "ogDescription": "This addon is built based FluxCD", "title": "FluxCD | KubeVela", "og:title": "FluxCD | KubeVela", "theme-color": "#ffffff", "msapplication-config": "/img/favicons/browserconfig.xml", "ogUrl": "https://kubevela.io/docs/reference/addons/fluxcd/", "og:url": "https://kubevela.io/docs/reference/addons/fluxcd/", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "generator": "Docusaurus v2.4.3", "twitter:card": "summary_large_image", "docsearch:version": "v1.10", "og:description": "This addon is built based FluxCD", "language": "en", "docsearch:docusaurus_tag": "docs-default-v1.10", "description": "This addon is built based FluxCD", "docusaurus_tag": "docs-default-v1.10", "docusaurus_locale": "en", "docusaurus_version": "v1.10", "docsearch:language": "en", "viewport": "width=device-width, initial-scale=1.0", "scrapeId": "e2f9f794-db41-40fb-9401-0e34258c5961", "sourceURL": "https://kubevela.io/docs/reference/addons/fluxcd", "url": "https://kubevela.io/docs/reference/addons/fluxcd/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela Addon: FluxCD\"?\n\nAssistant: Here are the recommended best practices:\n\n• Ensure your fluxcd addon version is >= v1.3.1 for OCI registry applications.\n• Create a Secret for OSS bucket if it requires identity verification.\n", "metadata": {"source_url": "https://kubevela.io/docs/reference/addons/fluxcd", "title": "KubeVela Addon: FluxCD", "description": "This page provides information on the FluxCD addon for KubeVela, including installation instructions, definitions, parameters, examples, and notes.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 14:52:00", "type": "best_practices", "page_metadata": {"ogTitle": "FluxCD | KubeVela", "ogDescription": "This addon is built based FluxCD", "title": "FluxCD | KubeVela", "og:title": "FluxCD | KubeVela", "theme-color": "#ffffff", "msapplication-config": "/img/favicons/browserconfig.xml", "ogUrl": "https://kubevela.io/docs/reference/addons/fluxcd/", "og:url": "https://kubevela.io/docs/reference/addons/fluxcd/", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "generator": "Docusaurus v2.4.3", "twitter:card": "summary_large_image", "docsearch:version": "v1.10", "og:description": "This addon is built based FluxCD", "language": "en", "docsearch:docusaurus_tag": "docs-default-v1.10", "description": "This addon is built based FluxCD", "docusaurus_tag": "docs-default-v1.10", "docusaurus_locale": "en", "docusaurus_version": "v1.10", "docsearch:language": "en", "viewport": "width=device-width, initial-scale=1.0", "scrapeId": "e2f9f794-db41-40fb-9401-0e34258c5961", "sourceURL": "https://kubevela.io/docs/reference/addons/fluxcd", "url": "https://kubevela.io/docs/reference/addons/fluxcd/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela CLI: Generate SDK from X-Definition\"?\n\nAssistant: This page provides information on how to generate an SDK from an X-definition file using the KubeVela CLI.\n\nHere's a detailed explanation:\n\n\n## Synopsis\nGenerate SDK from X-definition file.\n\n- This command leverage openapi-generator project. Therefore demands \"docker\" exist in PATH\n- Currently, this function is still working in progress and not all formats of parameter in X-definition are supported yet.\n\n## Examples\n```bash\n# Generate SDK for golang with scaffold initialized\n> vela def gen-api --init --language go -f /path/to/def -o /path/to/sdk\n# Generate incremental definition files to existing sdk directory\n> vela def gen-api --language go -f /path/to/def -o /path/to/sdk\n# Generate definitions to a sub-module\n> vela def gen-api --language go -f /path/to/def -o /path/to/sdk --submodule --api-dir path/relative/to/output --language-args arg1=val1,arg2=val2\n```\n\n## Options\n```bash\n      --api-dir string          API directory path to put definition API files, relative to output directory. Default value: go: pkg/apis\n  -f, --file strings            File name of definitions, can be specified multiple times, or use comma to separate multiple files. If directory specified, all files found recursively in the directory will be used\n  -h, --help                    help for gen-api\n      --init                    Init the whole SDK project, if not set, only the API file will be generated\n  -g, --language string         Language to generate code. Valid languages: go (default \"go\")\n      --language-args strings   language-specific arguments to pass to the go generator, available options:\n                                go:\n                                    MainModuleVersion: MainModuleVersion(default: cd431bb25a9a)\n                                    GoProxy: GoProxy(default: https://goproxy.cn,direct)\n\n  -o, --output string           Output directory path (default \"./apis\")\n  -p, --package string          Package name of generated code (default \"github.com/kubevela/vela-go-sdk\")\n      --submodule api-dir       Whether the generated code is a submodule of the project. If set, the directory specified by api-dir will be treated as a submodule of the project\n  -t, --template string         Template file path, if not specified, the default template will be used\n  -v, --verbose                 Print verbose logs\n```\n\n## Options inherited from parent commands\n```bash\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n\n## SEE ALSO\n- [vela def](https://kubevela.io/docs/cli/vela_def/) \\- Manage definitions.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_def_gen-api", "title": "KubeVela CLI: Generate SDK from X-Definition", "description": "This page provides information on how to generate an SDK from an X-definition file using the KubeVela CLI.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 14:55:20", "type": "overview", "page_metadata": {"og:title": "vela def gen-api | KubeVela", "ogUrl": "https://kubevela.io/docs/cli/vela_def_gen-api/", "msapplication-config": "/img/favicons/browserconfig.xml", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogTitle": "vela def gen-api | KubeVela", "docsearch:version": "v1.10", "docsearch:language": "en", "ogDescription": "Generate SDK from X-Definition.", "viewport": "width=device-width, initial-scale=1.0", "generator": "Docusaurus v2.4.3", "language": "en", "description": "Generate SDK from X-Definition.", "theme-color": "#ffffff", "twitter:card": "summary_large_image", "docusaurus_version": "v1.10", "docusaurus_locale": "en", "og:description": "Generate SDK from X-Definition.", "og:url": "https://kubevela.io/docs/cli/vela_def_gen-api/", "docsearch:docusaurus_tag": "docs-default-v1.10", "title": "vela def gen-api | KubeVela", "docusaurus_tag": "docs-default-v1.10", "scrapeId": "bf54c471-06b9-494e-b173-5afe9f9f4742", "sourceURL": "https://kubevela.io/docs/cli/vela_def_gen-api", "url": "https://kubevela.io/docs/cli/vela_def_gen-api/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"KubeVela CLI: Generate SDK from X-Definition\"?\n\nAssistant: Here are some code examples:\n\n### Generate SDK Command Examples\n```yaml\n# Generate SDK for golang with scaffold initialized\n> vela def gen-api --init --language go -f /path/to/def -o /path/to/sdk\n# Generate incremental definition files to existing sdk directory\n> vela def gen-api --language go -f /path/to/def -o /path/to/sdk\n# Generate definitions to a sub-module\n> vela def gen-api --language go -f /path/to/def -o /path/to/sdk --submodule --api-dir path/relative/to/output --language-args arg1=val1,arg2=val2\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_def_gen-api", "title": "KubeVela CLI: Generate SDK from X-Definition", "description": "This page provides information on how to generate an SDK from an X-definition file using the KubeVela CLI.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 14:55:20", "type": "code_examples", "page_metadata": {"og:title": "vela def gen-api | KubeVela", "ogUrl": "https://kubevela.io/docs/cli/vela_def_gen-api/", "msapplication-config": "/img/favicons/browserconfig.xml", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogTitle": "vela def gen-api | KubeVela", "docsearch:version": "v1.10", "docsearch:language": "en", "ogDescription": "Generate SDK from X-Definition.", "viewport": "width=device-width, initial-scale=1.0", "generator": "Docusaurus v2.4.3", "language": "en", "description": "Generate SDK from X-Definition.", "theme-color": "#ffffff", "twitter:card": "summary_large_image", "docusaurus_version": "v1.10", "docusaurus_locale": "en", "og:description": "Generate SDK from X-Definition.", "og:url": "https://kubevela.io/docs/cli/vela_def_gen-api/", "docsearch:docusaurus_tag": "docs-default-v1.10", "title": "vela def gen-api | KubeVela", "docusaurus_tag": "docs-default-v1.10", "scrapeId": "bf54c471-06b9-494e-b173-5afe9f9f4742", "sourceURL": "https://kubevela.io/docs/cli/vela_def_gen-api", "url": "https://kubevela.io/docs/cli/vela_def_gen-api/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela CLI: Generate SDK from X-Definition\"?\n\nAssistant: Here are the recommended best practices:\n\n• Ensure that Docker is installed and available in your PATH before running the command.\n• Be aware that not all formats of parameters in X-definition are supported yet as this function is still a work in progress.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_def_gen-api", "title": "KubeVela CLI: Generate SDK from X-Definition", "description": "This page provides information on how to generate an SDK from an X-definition file using the KubeVela CLI.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 14:55:20", "type": "best_practices", "page_metadata": {"og:title": "vela def gen-api | KubeVela", "ogUrl": "https://kubevela.io/docs/cli/vela_def_gen-api/", "msapplication-config": "/img/favicons/browserconfig.xml", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogTitle": "vela def gen-api | KubeVela", "docsearch:version": "v1.10", "docsearch:language": "en", "ogDescription": "Generate SDK from X-Definition.", "viewport": "width=device-width, initial-scale=1.0", "generator": "Docusaurus v2.4.3", "language": "en", "description": "Generate SDK from X-Definition.", "theme-color": "#ffffff", "twitter:card": "summary_large_image", "docusaurus_version": "v1.10", "docusaurus_locale": "en", "og:description": "Generate SDK from X-Definition.", "og:url": "https://kubevela.io/docs/cli/vela_def_gen-api/", "docsearch:docusaurus_tag": "docs-default-v1.10", "title": "vela def gen-api | KubeVela", "docusaurus_tag": "docs-default-v1.10", "scrapeId": "bf54c471-06b9-494e-b173-5afe9f9f4742", "sourceURL": "https://kubevela.io/docs/cli/vela_def_gen-api", "url": "https://kubevela.io/docs/cli/vela_def_gen-api/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela Roadmap\"?\n\nAssistant: This documentation provides an overview of the KubeVela roadmap and its goals for application deployment and operation across hybrid environments.\n\nHere's a detailed explanation:\n\n\n## Overview\nThe goal of KubeVela is to make deploying and operating applications across today's hybrid, multi-cloud environments easier, faster and more reliable. We will make effort on the following aspects to make the goal achievable:\n\n- Provide a modular, extensible, and portable control plane for modeling application deployment with higher level yet consistent API. The control plane can both adapt to the existing infrastructure and extend with the fast growing cloud native ecosystem as reusable building blocks.\n- Enable simple and robust application delivery across hybrid environments including Kubernetes, cloud, or even IoT devices. This also enables you to have a vendor agnostic application platform.\n- Build an open, inclusive, and vibrant OSS developer community focused on solving real-world application delivery and operation problems, sharing the reusable building blocks and best practices.\n\n## Roadmap Links\nThey're aligned with the roadmap direction for the next three years. As for the detailed roadmap, we'll update and list below.\n\n- [2023 Summer Roadmap](https://kubevela.io/docs/v1.8/roadmap/2023-06-roadmap/)\n- [2023 Spring Roadmap](https://kubevela.io/docs/v1.8/roadmap/2023-03-roadmap/)\n- [2022 Winter Roadmap](https://kubevela.io/docs/v1.8/roadmap/2022-12-roadmap/)\n- [2022 Fall Roadmap](https://kubevela.io/docs/v1.8/roadmap/2022-09-roadmap/)\n- [2022 Summer Roadmap](https://kubevela.io/docs/v1.8/roadmap/2022-06-roadmap/)\n- [2022 Spring Roadmap](https://kubevela.io/docs/v1.8/roadmap/2022-03-roadmap/)\n- [2021 Winter Roadmap](https://kubevela.io/docs/v1.8/roadmap/2021-12-roadmap/)\n- [2021 Fall Roadmap](https://kubevela.io/docs/v1.8/roadmap/2021-09-roadmap/)\n- [2021 Summer Roadmap](https://kubevela.io/docs/v1.8/roadmap/2021-06-roadmap/)\n- [2021 Spring Roadmap](https://kubevela.io/docs/v1.8/roadmap/2021-03-roadmap/)\n- [2020 Winter Roadmap](https://kubevela.io/docs/v1.8/roadmap/2020-12-roadmap/)\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.8/roadmap", "title": "KubeVela Roadmap", "description": "This documentation provides an overview of the KubeVela roadmap and its goals for application deployment and operation across hybrid environments.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-02-28 14:55:31", "type": "overview", "page_metadata": {"theme-color": "#ffffff", "language": "en", "generator": "Docusaurus v2.4.3", "ogUrl": "https://kubevela.io/docs/v1.8/roadmap/", "viewport": "width=device-width, initial-scale=1.0", "docusaurus_locale": "en", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "msapplication-config": "/img/favicons/browserconfig.xml", "ogDescription": "The goal of KubeVela is to make deploying and operating applications across today's hybrid, multi-cloud environments easier, faster and more reliable. We will make effort on the following aspects to make the goal achievable:", "og:title": "Roadmap | KubeVela", "docusaurus_version": "v1.8", "ogTitle": "Roadmap | KubeVela", "docsearch:language": "en", "og:url": "https://kubevela.io/docs/v1.8/roadmap/", "title": "Roadmap | KubeVela", "docusaurus_tag": "docs-default-v1.8", "docsearch:version": "v1.8", "docsearch:docusaurus_tag": "docs-default-v1.8", "og:description": "The goal of KubeVela is to make deploying and operating applications across today's hybrid, multi-cloud environments easier, faster and more reliable. We will make effort on the following aspects to make the goal achievable:", "twitter:card": "summary_large_image", "description": "The goal of KubeVela is to make deploying and operating applications across today's hybrid, multi-cloud environments easier, faster and more reliable. We will make effort on the following aspects to make the goal achievable:", "scrapeId": "84b0e5e6-8fce-4d45-b6ef-46c5d0206eab", "sourceURL": "https://kubevela.io/docs/v1.8/roadmap", "url": "https://kubevela.io/docs/v1.8/roadmap/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela Roadmap\"?\n\nAssistant: Here are the recommended best practices:\n\n• KubeVela follows the release process and cadence guide that actions may not be strictly consistent with the roadmap.\n• Adjustments to the milestone may occur based on input from community meetings and GitHub issues.\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.8/roadmap", "title": "KubeVela Roadmap", "description": "This documentation provides an overview of the KubeVela roadmap and its goals for application deployment and operation across hybrid environments.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-02-28 14:55:31", "type": "best_practices", "page_metadata": {"theme-color": "#ffffff", "language": "en", "generator": "Docusaurus v2.4.3", "ogUrl": "https://kubevela.io/docs/v1.8/roadmap/", "viewport": "width=device-width, initial-scale=1.0", "docusaurus_locale": "en", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "msapplication-config": "/img/favicons/browserconfig.xml", "ogDescription": "The goal of KubeVela is to make deploying and operating applications across today's hybrid, multi-cloud environments easier, faster and more reliable. We will make effort on the following aspects to make the goal achievable:", "og:title": "Roadmap | KubeVela", "docusaurus_version": "v1.8", "ogTitle": "Roadmap | KubeVela", "docsearch:language": "en", "og:url": "https://kubevela.io/docs/v1.8/roadmap/", "title": "Roadmap | KubeVela", "docusaurus_tag": "docs-default-v1.8", "docsearch:version": "v1.8", "docsearch:docusaurus_tag": "docs-default-v1.8", "og:description": "The goal of KubeVela is to make deploying and operating applications across today's hybrid, multi-cloud environments easier, faster and more reliable. We will make effort on the following aspects to make the goal achievable:", "twitter:card": "summary_large_image", "description": "The goal of KubeVela is to make deploying and operating applications across today's hybrid, multi-cloud environments easier, faster and more reliable. We will make effort on the following aspects to make the goal achievable:", "scrapeId": "84b0e5e6-8fce-4d45-b6ef-46c5d0206eab", "sourceURL": "https://kubevela.io/docs/v1.8/roadmap", "url": "https://kubevela.io/docs/v1.8/roadmap/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela Installation Guide\"?\n\nAssistant: This documentation provides installation methods for KubeVela v1.8, which is no longer actively maintained. It includes instructions for both standalone installation and installation on an existing Kubernetes cluster.\n\nHere's a detailed explanation:\n\n\n## Don't have Kubernetes cluster yet?\nFor those who are new to KubeVela and Kubernetes, installing KubeVela in standalone mode is the best choice. It doesn't require you to have any Kubernetes knowledge to experience KubeVela features. We developed VelaD for this purpose, which packages KubeVela along its dependencies including Kubernetes into a single binary. Please follow the document linked below to install KubeVela.\n\n- [Standalone Installation](https://kubevela.io/docs/v1.8/installation/standalone/): Install KubeVela on a local machine or a remote server(Public Cloud or On-premise) based on Linux, macOS or Windows operating system.\n\ninfo\n\nVelaD suits great for local development and quick demos, it leverages [K3s](https://github.com/k3s-io/k3s) to manage Kubernetes. We strongly recommend you to [install KubeVela with managed Kubernetes services](https://kubevela.io/docs/v1.8/installation/kubernetes/) for production usage.\n\n## Already have Kubernetes cluster\n- [Kubernetes Cluster](https://kubevela.io/docs/v1.8/installation/kubernetes/): Install KubeVela in existing Kubernetes cluster.\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.8/install", "title": "KubeVela Installation Guide", "description": "This documentation provides installation methods for KubeVela v1.8, which is no longer actively maintained. It includes instructions for both standalone installation and installation on an existing Kubernetes cluster.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-02-28 14:55:42", "type": "overview", "page_metadata": {"description": "Here are two installation methods available according to your environment:", "docsearch:version": "v1.8", "twitter:card": "summary_large_image", "docusaurus_version": "v1.8", "msapplication-config": "/img/favicons/browserconfig.xml", "og:url": "https://kubevela.io/docs/v1.8/install/", "theme-color": "#ffffff", "docusaurus_locale": "en", "docusaurus_tag": "docs-default-v1.8", "docsearch:docusaurus_tag": "docs-default-v1.8", "ogUrl": "https://kubevela.io/docs/v1.8/install/", "title": "Installation Overview | KubeVela", "generator": "Docusaurus v2.4.3", "ogDescription": "Here are two installation methods available according to your environment:", "language": "en", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "og:title": "Installation Overview | KubeVela", "og:description": "Here are two installation methods available according to your environment:", "viewport": "width=device-width, initial-scale=1.0", "docsearch:language": "en", "ogTitle": "Installation Overview | KubeVela", "scrapeId": "374be171-be84-448f-aa7b-55c296030f76", "sourceURL": "https://kubevela.io/docs/v1.8/install", "url": "https://kubevela.io/docs/v1.8/install/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela Installation Guide\"?\n\nAssistant: Here are the recommended best practices:\n\n• For upgrading from existing KubeVela control plane, please read the [upgrade guide](https://kubevela.io/docs/v1.8/platform-engineers/advanced-install/#upgrade).\n• VelaD suits great for local development and quick demos, it leverages [K3s](https://github.com/k3s-io/k3s) to manage Kubernetes. We strongly recommend you to [install KubeVela with managed Kubernetes services](https://kubevela.io/docs/v1.8/installation/kubernetes/) for production usage.\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.8/install", "title": "KubeVela Installation Guide", "description": "This documentation provides installation methods for KubeVela v1.8, which is no longer actively maintained. It includes instructions for both standalone installation and installation on an existing Kubernetes cluster.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-02-28 14:55:42", "type": "best_practices", "page_metadata": {"description": "Here are two installation methods available according to your environment:", "docsearch:version": "v1.8", "twitter:card": "summary_large_image", "docusaurus_version": "v1.8", "msapplication-config": "/img/favicons/browserconfig.xml", "og:url": "https://kubevela.io/docs/v1.8/install/", "theme-color": "#ffffff", "docusaurus_locale": "en", "docusaurus_tag": "docs-default-v1.8", "docsearch:docusaurus_tag": "docs-default-v1.8", "ogUrl": "https://kubevela.io/docs/v1.8/install/", "title": "Installation Overview | KubeVela", "generator": "Docusaurus v2.4.3", "ogDescription": "Here are two installation methods available according to your environment:", "language": "en", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "og:title": "Installation Overview | KubeVela", "og:description": "Here are two installation methods available according to your environment:", "viewport": "width=device-width, initial-scale=1.0", "docsearch:language": "en", "ogTitle": "Installation Overview | KubeVela", "scrapeId": "374be171-be84-448f-aa7b-55c296030f76", "sourceURL": "https://kubevela.io/docs/v1.8/install", "url": "https://kubevela.io/docs/v1.8/install/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"Multi-Environment Deployment with KubeVela\"?\n\nAssistant: This page provides a tutorial on how to manage application deployments across multiple environments using VelaUX, the UI of KubeVela.\n\nHere's a detailed explanation:\n\n\n## Overview\nEnvironments represent your deployment targets logically (develop, test, production, etc). VelaUX (the UI of KubeVela) provides some new concepts, the environment and delivery target for more flexible deployments on UI operations. You can place multi targets to the same environment as you need. In KubeVela, the environment bonds a namespace in the control plane cluster. The application instance will be deployed into the Kubernetes namespace bonded with the specified environment. Actually, the application created in VelaUX is an application template before bound with the environment. As a result, VelaUX allows you to easily deploy the same app into different environments.\n\n## Deploy the application to multi-environment\nIn the following sections, we'll guide you how to manage application to deploy into multi-environments with VelaUX.\n\n## 1. Create an environment\nCreate environment on VelaUX is very straightforward. One environment could include multi targets. The environment belongs to a project, and one project could include multi environments. Only the application belonging to this project could bond this environment. You could create an environment with command ( `vela env init prod --namespace prod` ), but currently (v1.5) that does not sync to UI before you create an application in this environment.\n\n## 2. Bind the application to an environment\nYou could select multi environments when you create an application, or modify the application later to bind more environments. The UI will automatically generate a workflow when the application bonds to an environment, that includes some `deploy` type steps. You can manually modify the workflow later. The default behavior is to deploy targets one by one in workflow steps. You could add other steps such as `suspend` between two `deploy` steps.\n\n## 3. Set the different configuration\nWe usually need to set different configurations for different environments, such as environment variables, replicas or resource limits. In this case, we can create some override policies. When we create an override policy, we need to choose affected environment or targets through selecting workflow and steps.\n\n## 4. Deploy\nBy default, all environments are independent of each other. When you deploy an application, you need to select the environment to be deployed. You can also leverage the custom trigger to connect deploy actions between environments. For example, if you want to deploy the production environment only after the test environment is completed successfully, you can create a trigger with the custom type for the production environment, and get a webhook URL. Then, edit the workflow of the test environment, add a webhook workflow step at the end.\n", "metadata": {"source_url": "https://kubevela.io/docs/tutorials/multi-env", "title": "Multi-Environment Deployment with KubeVela", "description": "This page provides a tutorial on how to manage application deployments across multiple environments using VelaUX, the UI of KubeVela.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-02-28 14:55:54", "type": "overview", "page_metadata": {"viewport": "width=device-width, initial-scale=1.0", "ogTitle": "Deploy to Multi Environments | KubeVela", "generator": "Docusaurus v2.4.3", "og:url": "https://kubevela.io/docs/tutorials/multi-env/", "docsearch:version": "v1.10", "docusaurus_locale": "en", "docsearch:language": "en", "ogDescription": "This section will mainly focus on UI operation on multi-environments delivery, if you want to deploy with YAML, just refer to multi-cluster delivery doc, just compose the topology policy with different clusters and namespaces to make them work as environment.", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:title": "Deploy to Multi Environments | KubeVela", "twitter:card": "summary_large_image", "language": "en", "og:description": "This section will mainly focus on UI operation on multi-environments delivery, if you want to deploy with YAML, just refer to multi-cluster delivery doc, just compose the topology policy with different clusters and namespaces to make them work as environment.", "description": "This section will mainly focus on UI operation on multi-environments delivery, if you want to deploy with YAML, just refer to multi-cluster delivery doc, just compose the topology policy with different clusters and namespaces to make them work as environment.", "title": "Deploy to Multi Environments | KubeVela", "docusaurus_version": "v1.10", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogUrl": "https://kubevela.io/docs/tutorials/multi-env/", "docusaurus_tag": "docs-default-v1.10", "theme-color": "#ffffff", "msapplication-config": "/img/favicons/browserconfig.xml", "scrapeId": "350deb57-ec80-4a29-aa5d-9dc03c0b8a5a", "sourceURL": "https://kubevela.io/docs/tutorials/multi-env", "url": "https://kubevela.io/docs/tutorials/multi-env/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"Multi-Environment Deployment with KubeVela\"?\n\nAssistant: Here are some code examples:\n\n### Create Environment Command\n```yaml\nvela env init prod --namespace prod\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/tutorials/multi-env", "title": "Multi-Environment Deployment with KubeVela", "description": "This page provides a tutorial on how to manage application deployments across multiple environments using VelaUX, the UI of KubeVela.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-02-28 14:55:54", "type": "code_examples", "page_metadata": {"viewport": "width=device-width, initial-scale=1.0", "ogTitle": "Deploy to Multi Environments | KubeVela", "generator": "Docusaurus v2.4.3", "og:url": "https://kubevela.io/docs/tutorials/multi-env/", "docsearch:version": "v1.10", "docusaurus_locale": "en", "docsearch:language": "en", "ogDescription": "This section will mainly focus on UI operation on multi-environments delivery, if you want to deploy with YAML, just refer to multi-cluster delivery doc, just compose the topology policy with different clusters and namespaces to make them work as environment.", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:title": "Deploy to Multi Environments | KubeVela", "twitter:card": "summary_large_image", "language": "en", "og:description": "This section will mainly focus on UI operation on multi-environments delivery, if you want to deploy with YAML, just refer to multi-cluster delivery doc, just compose the topology policy with different clusters and namespaces to make them work as environment.", "description": "This section will mainly focus on UI operation on multi-environments delivery, if you want to deploy with YAML, just refer to multi-cluster delivery doc, just compose the topology policy with different clusters and namespaces to make them work as environment.", "title": "Deploy to Multi Environments | KubeVela", "docusaurus_version": "v1.10", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogUrl": "https://kubevela.io/docs/tutorials/multi-env/", "docusaurus_tag": "docs-default-v1.10", "theme-color": "#ffffff", "msapplication-config": "/img/favicons/browserconfig.xml", "scrapeId": "350deb57-ec80-4a29-aa5d-9dc03c0b8a5a", "sourceURL": "https://kubevela.io/docs/tutorials/multi-env", "url": "https://kubevela.io/docs/tutorials/multi-env/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"Multi-Environment Deployment with KubeVela\"?\n\nAssistant: Here are the recommended best practices:\n\n• If you want to deploy with YAML, just refer to multi-cluster delivery doc and compose the topology policy with different clusters and namespaces to make them work as environment.\n• If no delivery target configured, a default one will be used with the default namespace in the control plane cluster.\n", "metadata": {"source_url": "https://kubevela.io/docs/tutorials/multi-env", "title": "Multi-Environment Deployment with KubeVela", "description": "This page provides a tutorial on how to manage application deployments across multiple environments using VelaUX, the UI of KubeVela.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-02-28 14:55:54", "type": "best_practices", "page_metadata": {"viewport": "width=device-width, initial-scale=1.0", "ogTitle": "Deploy to Multi Environments | KubeVela", "generator": "Docusaurus v2.4.3", "og:url": "https://kubevela.io/docs/tutorials/multi-env/", "docsearch:version": "v1.10", "docusaurus_locale": "en", "docsearch:language": "en", "ogDescription": "This section will mainly focus on UI operation on multi-environments delivery, if you want to deploy with YAML, just refer to multi-cluster delivery doc, just compose the topology policy with different clusters and namespaces to make them work as environment.", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:title": "Deploy to Multi Environments | KubeVela", "twitter:card": "summary_large_image", "language": "en", "og:description": "This section will mainly focus on UI operation on multi-environments delivery, if you want to deploy with YAML, just refer to multi-cluster delivery doc, just compose the topology policy with different clusters and namespaces to make them work as environment.", "description": "This section will mainly focus on UI operation on multi-environments delivery, if you want to deploy with YAML, just refer to multi-cluster delivery doc, just compose the topology policy with different clusters and namespaces to make them work as environment.", "title": "Deploy to Multi Environments | KubeVela", "docusaurus_version": "v1.10", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogUrl": "https://kubevela.io/docs/tutorials/multi-env/", "docusaurus_tag": "docs-default-v1.10", "theme-color": "#ffffff", "msapplication-config": "/img/favicons/browserconfig.xml", "scrapeId": "350deb57-ec80-4a29-aa5d-9dc03c0b8a5a", "sourceURL": "https://kubevela.io/docs/tutorials/multi-env", "url": "https://kubevela.io/docs/tutorials/multi-env/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"Traefik Addon for KubeVela\"?\n\nAssistant: Traefik is a modern HTTP reverse proxy and load balancer made to deploy microservices with ease. you can use this addon as a cluster gateway or a microservices gateway.\n\nHere's a detailed explanation:\n\n\n## Install\n```codeBlockLines_e6Vv\nvela addon enable traefik\n```\n\n## Visit Traefik dashboard by port-forward\nPort forward will work as a proxy to allow visiting Traefik dashboard by local port.\n\n```codeBlockLines_e6Vv\nvela port-forward -n vela-system addon-traefik\n```\n\nexpected output:\n\n```codeBlockLines_e6Vv\nForwarding from 127.0.0.1:9000 -> 9000\nForwarding from [::1]:9000 -> 9000\n\nForward successfully! Opening browser ...\nHandling connection for 9000\n```\n\nYou can visiting Traefik dashboard with address `http://127.0.0.1:9000/dashboard/`.\n\n## Setup with Specified Service Type\nIf your cluster has cloud LoadBalancer available:\n\n```codeBlockLines_e6Vv\nvela addon enable traefik serviceType=LoadBalancer\n```\n\n## How to use\n1. Configure a HTTP domain for a component.\n\n```codeBlockLines_e6Vv\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: example\n  namespace: e2e-test\nspec:\n  components:\n  - name: express-server\n    type: webservice\n    properties:\n        image: oamdev/hello-world\n        ports:\n         - port: 8000\n           expose: true\n    traits:\n    - properties:\n        domains:\n        - example.domain.com\n        rules:\n        - path:\n            type: PathPrefix\n            value: /\n          port: 8080\n      type: http-route\n```\n\n2. Configure a HTTPS domain for a component.\n\nYou should create a secret that includes the certificate first.\n\n```codeBlockLines_e6Vv\napiVersion: v1\ntype: Opaque\ndata:\n  tls.crt: <BASE64>\n  tls.key: <BASE64>\nkind: Secret\nmetadata:\n  annotations:\n    config.oam.dev/alias: \"\"\n    config.oam.dev/description: \"\"\n  labels:\n    config.oam.dev/catalog: velacore-config\n    config.oam.dev/multi-cluster: \"true\"\n    config.oam.dev/project: addons\n    config.oam.dev/type: config-tls-certificate\n    workload.oam.dev/type: config-tls-certificate\n  name: example\n```\n\nThe example application configuration:\n\n```codeBlockLines_e6Vv\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: example-https\n  namespace: e2e-test\nspec:\n  components:\n  - name: express-server\n    type: webservice\n    properties:\n        image: oamdev/hello-world\n        ports:\n         - port: 8000\n           expose: true\n    traits:\n    - properties:\n        domains:\n        - example.domain.com\n        rules:\n        - path:\n            type: PathPrefix\n            value: /\n          port: 8080\n        secrets:\n        - name: example\n      type: https-route\n```\n", "metadata": {"source_url": "https://kubevela.io/docs/reference/addons/traefik", "title": "Traefik Addon for KubeVela", "description": "Traefik is a modern HTTP reverse proxy and load balancer made to deploy microservices with ease. you can use this addon as a cluster gateway or a microservices gateway.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 14:56:13", "type": "overview", "page_metadata": {"docsearch:docusaurus_tag": "docs-default-v1.10", "og:title": "Traefik | KubeVela", "description": "Traefik is a modern HTTP reverse proxy and load balancer made to deploy microservices with ease. you can use this addon as a cluster gateway or a microservices gateway.", "msapplication-config": "/img/favicons/browserconfig.xml", "ogUrl": "https://kubevela.io/docs/reference/addons/traefik/", "title": "Traefik | KubeVela", "ogDescription": "Traefik is a modern HTTP reverse proxy and load balancer made to deploy microservices with ease. you can use this addon as a cluster gateway or a microservices gateway.", "og:description": "Traefik is a modern HTTP reverse proxy and load balancer made to deploy microservices with ease. you can use this addon as a cluster gateway or a microservices gateway.", "viewport": "width=device-width, initial-scale=1.0", "docusaurus_locale": "en", "language": "en", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "theme-color": "#ffffff", "docusaurus_tag": "docs-default-v1.10", "docsearch:version": "v1.10", "docsearch:language": "en", "twitter:card": "summary_large_image", "ogTitle": "Traefik | KubeVela", "docusaurus_version": "v1.10", "generator": "Docusaurus v2.4.3", "og:url": "https://kubevela.io/docs/reference/addons/traefik/", "scrapeId": "44bf655e-8a9d-400d-bd2c-d41ed7657f0c", "sourceURL": "https://kubevela.io/docs/reference/addons/traefik", "url": "https://kubevela.io/docs/reference/addons/traefik/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"Traefik Addon for KubeVela\"?\n\nAssistant: Here are some code examples:\n\n### Install Traefik Addon\n```yaml\n```codeBlockLines_e6Vv\nvela addon enable traefik\n```\n```\n\n### Port Forward to Traefik Dashboard\n```yaml\n```codeBlockLines_e6Vv\nvela port-forward -n vela-system addon-traefik\n```\n\nexpected output:\n\n```codeBlockLines_e6Vv\nForwarding from 127.0.0.1:9000 -> 9000\nForwarding from [::1]:9000 -> 9000\n\nForward successfully! Opening browser ...\nHandling connection for 9000\n```\n```\n\n### Setup with Specified Service Type\n```yaml\n```codeBlockLines_e6Vv\nvela addon enable traefik serviceType=LoadBalancer\n```\n```\n\n### HTTP Domain Configuration\n```yaml\n```codeBlockLines_e6Vv\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: example\n  namespace: e2e-test\nspec:\n  components:\n  - name: express-server\n    type: webservice\n    properties:\n        image: oamdev/hello-world\n        ports:\n         - port: 8000\n           expose: true\n    traits:\n    - properties:\n        domains:\n        - example.domain.com\n        rules:\n        - path:\n            type: PathPrefix\n            value: /\n          port: 8080\n      type: http-route\n```\n```\n\n### HTTPS Domain Configuration\n```yaml\n```codeBlockLines_e6Vv\napiVersion: v1\ntype: Opaque\ndata:\n  tls.crt: <BASE64>\n  tls.key: <BASE64>\nkind: Secret\nmetadata:\n  annotations:\n    config.oam.dev/alias: \"\"\n    config.oam.dev/description: \"\"\n  labels:\n    config.oam.dev/catalog: velacore-config\n    config.oam.dev/multi-cluster: \"true\"\n    config.oam.dev/project: addons\n    config.oam.dev/type: config-tls-certificate\n    workload.oam.dev/type: config-tls-certificate\n  name: example\n```\n\nThe example application configuration:\n\n```codeBlockLines_e6Vv\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: example-https\n  namespace: e2e-test\nspec:\n  components:\n  - name: express-server\n    type: webservice\n    properties:\n        image: oamdev/hello-world\n        ports:\n         - port: 8000\n           expose: true\n    traits:\n    - properties:\n        domains:\n        - example.domain.com\n        rules:\n        - path:\n            type: PathPrefix\n            value: /\n          port: 8080\n        secrets:\n        - name: example\n      type: https-route\n```\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/reference/addons/traefik", "title": "Traefik Addon for KubeVela", "description": "Traefik is a modern HTTP reverse proxy and load balancer made to deploy microservices with ease. you can use this addon as a cluster gateway or a microservices gateway.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 14:56:13", "type": "code_examples", "page_metadata": {"docsearch:docusaurus_tag": "docs-default-v1.10", "og:title": "Traefik | KubeVela", "description": "Traefik is a modern HTTP reverse proxy and load balancer made to deploy microservices with ease. you can use this addon as a cluster gateway or a microservices gateway.", "msapplication-config": "/img/favicons/browserconfig.xml", "ogUrl": "https://kubevela.io/docs/reference/addons/traefik/", "title": "Traefik | KubeVela", "ogDescription": "Traefik is a modern HTTP reverse proxy and load balancer made to deploy microservices with ease. you can use this addon as a cluster gateway or a microservices gateway.", "og:description": "Traefik is a modern HTTP reverse proxy and load balancer made to deploy microservices with ease. you can use this addon as a cluster gateway or a microservices gateway.", "viewport": "width=device-width, initial-scale=1.0", "docusaurus_locale": "en", "language": "en", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "theme-color": "#ffffff", "docusaurus_tag": "docs-default-v1.10", "docsearch:version": "v1.10", "docsearch:language": "en", "twitter:card": "summary_large_image", "ogTitle": "Traefik | KubeVela", "docusaurus_version": "v1.10", "generator": "Docusaurus v2.4.3", "og:url": "https://kubevela.io/docs/reference/addons/traefik/", "scrapeId": "44bf655e-8a9d-400d-bd2c-d41ed7657f0c", "sourceURL": "https://kubevela.io/docs/reference/addons/traefik", "url": "https://kubevela.io/docs/reference/addons/traefik/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"Traefik Addon for KubeVela\"?\n\nAssistant: Here are the recommended best practices:\n\n• If your cluster has cloud LoadBalancer available, use `vela addon enable traefik serviceType=LoadBalancer` to set it up.\n", "metadata": {"source_url": "https://kubevela.io/docs/reference/addons/traefik", "title": "Traefik Addon for KubeVela", "description": "Traefik is a modern HTTP reverse proxy and load balancer made to deploy microservices with ease. you can use this addon as a cluster gateway or a microservices gateway.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 14:56:13", "type": "best_practices", "page_metadata": {"docsearch:docusaurus_tag": "docs-default-v1.10", "og:title": "Traefik | KubeVela", "description": "Traefik is a modern HTTP reverse proxy and load balancer made to deploy microservices with ease. you can use this addon as a cluster gateway or a microservices gateway.", "msapplication-config": "/img/favicons/browserconfig.xml", "ogUrl": "https://kubevela.io/docs/reference/addons/traefik/", "title": "Traefik | KubeVela", "ogDescription": "Traefik is a modern HTTP reverse proxy and load balancer made to deploy microservices with ease. you can use this addon as a cluster gateway or a microservices gateway.", "og:description": "Traefik is a modern HTTP reverse proxy and load balancer made to deploy microservices with ease. you can use this addon as a cluster gateway or a microservices gateway.", "viewport": "width=device-width, initial-scale=1.0", "docusaurus_locale": "en", "language": "en", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "theme-color": "#ffffff", "docusaurus_tag": "docs-default-v1.10", "docsearch:version": "v1.10", "docsearch:language": "en", "twitter:card": "summary_large_image", "ogTitle": "Traefik | KubeVela", "docusaurus_version": "v1.10", "generator": "Docusaurus v2.4.3", "og:url": "https://kubevela.io/docs/reference/addons/traefik/", "scrapeId": "44bf655e-8a9d-400d-bd2c-d41ed7657f0c", "sourceURL": "https://kubevela.io/docs/reference/addons/traefik", "url": "https://kubevela.io/docs/reference/addons/traefik/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"Generate CUE schema from Go code\"?\n\nAssistant: This page covers how to generate CUE schema from Go code using the KubeVela CLI command.\n\nHere's a detailed explanation:\n\n\n## Synopsis\nGenerate CUE schema from Go code.\n\n- This command provide a way to generate CUE schema from Go code,\n- Which can be used to keep consistency between Go code and CUE schema automatically.\n\n## Examples\n```bash\n# Generate CUE schema for provider type\n> vela def gen-cue -t provider /path/to/myprovider.go > /path/to/myprovider.cue\n# Generate CUE schema for provider type with custom types\n> vela def gen-cue -t provider --types *k8s.io/apimachinery/pkg/apis/meta/v1/unstructured.Unstructured=ellipsis /path/to/myprovider.go > /path/to/myprovider.cue\n```\n\n## Options\n```bash\n  -h, --help                   help for gen-cue\n      --nullable               Whether to generate null enum for pointer type\n  -t, --type string            Type of the definition to generate. Valid types: [provider]\n      --types stringToString   Special types to generate, format: <package+struct>=[any|ellipsis]. e.g. --types=*k8s.io/apimachinery/pkg/apis/meta/v1/unstructured.Unstructured=ellipsis (default [])\n```\n\n## Options inherited from parent commands\n```bash\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n\n## SEE ALSO\n- [vela def](https://kubevela.io/docs/cli/vela_def/) \\- Manage definitions.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_def_gen-cue", "title": "Generate CUE schema from Go code", "description": "This page covers how to generate CUE schema from Go code using the KubeVela CLI command.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 14:56:20", "type": "overview", "page_metadata": {"title": "vela def gen-cue | KubeVela", "msapplication-config": "/img/favicons/browserconfig.xml", "og:url": "https://kubevela.io/docs/cli/vela_def_gen-cue/", "docsearch:version": "v1.10", "generator": "Docusaurus v2.4.3", "docsearch:docusaurus_tag": "docs-default-v1.10", "theme-color": "#ffffff", "ogDescription": "Generate CUE schema from Go code.", "twitter:card": "summary_large_image", "docsearch:language": "en", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "language": "en", "docusaurus_locale": "en", "og:title": "vela def gen-cue | KubeVela", "description": "Generate CUE schema from Go code.", "og:description": "Generate CUE schema from Go code.", "viewport": "width=device-width, initial-scale=1.0", "docusaurus_version": "v1.10", "ogUrl": "https://kubevela.io/docs/cli/vela_def_gen-cue/", "ogTitle": "vela def gen-cue | KubeVela", "docusaurus_tag": "docs-default-v1.10", "scrapeId": "4d30851e-b008-4e4e-998d-1f4aec0a928c", "sourceURL": "https://kubevela.io/docs/cli/vela_def_gen-cue", "url": "https://kubevela.io/docs/cli/vela_def_gen-cue/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"Generate CUE schema from Go code\"?\n\nAssistant: Here are some code examples:\n\n### Generate CUE schema for provider type\n```yaml\n> vela def gen-cue -t provider /path/to/myprovider.go > /path/to/myprovider.cue\n```\n\n### Generate CUE schema for provider type with custom types\n```yaml\n> vela def gen-cue -t provider --types *k8s.io/apimachinery/pkg/apis/meta/v1/unstructured.Unstructured=ellipsis /path/to/myprovider.go > /path/to/myprovider.cue\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_def_gen-cue", "title": "Generate CUE schema from Go code", "description": "This page covers how to generate CUE schema from Go code using the KubeVela CLI command.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 14:56:20", "type": "code_examples", "page_metadata": {"title": "vela def gen-cue | KubeVela", "msapplication-config": "/img/favicons/browserconfig.xml", "og:url": "https://kubevela.io/docs/cli/vela_def_gen-cue/", "docsearch:version": "v1.10", "generator": "Docusaurus v2.4.3", "docsearch:docusaurus_tag": "docs-default-v1.10", "theme-color": "#ffffff", "ogDescription": "Generate CUE schema from Go code.", "twitter:card": "summary_large_image", "docsearch:language": "en", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "language": "en", "docusaurus_locale": "en", "og:title": "vela def gen-cue | KubeVela", "description": "Generate CUE schema from Go code.", "og:description": "Generate CUE schema from Go code.", "viewport": "width=device-width, initial-scale=1.0", "docusaurus_version": "v1.10", "ogUrl": "https://kubevela.io/docs/cli/vela_def_gen-cue/", "ogTitle": "vela def gen-cue | KubeVela", "docusaurus_tag": "docs-default-v1.10", "scrapeId": "4d30851e-b008-4e4e-998d-1f4aec0a928c", "sourceURL": "https://kubevela.io/docs/cli/vela_def_gen-cue", "url": "https://kubevela.io/docs/cli/vela_def_gen-cue/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"Generate CUE schema from Go code\"?\n\nAssistant: Here are the recommended best practices:\n\n• Use the command to maintain consistency between Go code and CUE schema automatically.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_def_gen-cue", "title": "Generate CUE schema from Go code", "description": "This page covers how to generate CUE schema from Go code using the KubeVela CLI command.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 14:56:20", "type": "best_practices", "page_metadata": {"title": "vela def gen-cue | KubeVela", "msapplication-config": "/img/favicons/browserconfig.xml", "og:url": "https://kubevela.io/docs/cli/vela_def_gen-cue/", "docsearch:version": "v1.10", "generator": "Docusaurus v2.4.3", "docsearch:docusaurus_tag": "docs-default-v1.10", "theme-color": "#ffffff", "ogDescription": "Generate CUE schema from Go code.", "twitter:card": "summary_large_image", "docsearch:language": "en", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "language": "en", "docusaurus_locale": "en", "og:title": "vela def gen-cue | KubeVela", "description": "Generate CUE schema from Go code.", "og:description": "Generate CUE schema from Go code.", "viewport": "width=device-width, initial-scale=1.0", "docusaurus_version": "v1.10", "ogUrl": "https://kubevela.io/docs/cli/vela_def_gen-cue/", "ogTitle": "vela def gen-cue | KubeVela", "docusaurus_tag": "docs-default-v1.10", "scrapeId": "4d30851e-b008-4e4e-998d-1f4aec0a928c", "sourceURL": "https://kubevela.io/docs/cli/vela_def_gen-cue", "url": "https://kubevela.io/docs/cli/vela_def_gen-cue/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"Understanding JSON Structure\"?\n\nAssistant: This page provides an overview of JSON structure, including its syntax, data types, and best practices for usage.\n\nHere's a detailed explanation:\n\n\n## Introduction to JSON\nJSON (JavaScript Object Notation) is a lightweight data interchange format that is easy for humans to read and write, and easy for machines to parse and generate.\n\n## JSON Syntax\nJSON syntax is derived from JavaScript object notation. It consists of key/value pairs, where keys are strings and values can be strings, numbers, objects, arrays, booleans, or null.\n\n## Data Types in JSON\nThe data types supported in JSON include:\n1. String\n2. Number\n3. Object\n4. Array\n5. Boolean\n6. Null\n\n## Best Practices\nWhen working with JSON, consider the following best practices:\n- Use consistent naming conventions for keys.\n- Keep the structure simple and avoid deeply nested objects.\n", "metadata": {"source_url": "https://kubevela.io/docs/tutorials/k8s-object", "title": "Understanding JSON Structure", "description": "This page provides an overview of JSON structure, including its syntax, data types, and best practices for usage.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 14:56:51", "type": "overview", "page_metadata": {"docusaurus_locale": "en", "msapplication-config": "/img/favicons/browserconfig.xml", "twitter:card": "summary_large_image", "docusaurus_tag": "docs-default-v1.10", "title": "Deploy Kubernetes Objects | KubeVela", "docusaurus_version": "v1.10", "docsearch:docusaurus_tag": "docs-default-v1.10", "description": "This section introduces that how you can deploy Kubernetes objects into multi environments and clusters.", "language": "en", "ogUrl": "https://kubevela.io/docs/tutorials/k8s-object/", "docsearch:version": "v1.10", "og:description": "This section introduces that how you can deploy Kubernetes objects into multi environments and clusters.", "ogTitle": "Deploy Kubernetes Objects | KubeVela", "ogDescription": "This section introduces that how you can deploy Kubernetes objects into multi environments and clusters.", "og:url": "https://kubevela.io/docs/tutorials/k8s-object/", "og:title": "Deploy Kubernetes Objects | KubeVela", "theme-color": "#ffffff", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "viewport": "width=device-width,initial-scale=1", "docsearch:language": "en", "generator": "Docusaurus v2.4.3", "scrapeId": "ccb36a01-f4f5-4313-a5b2-1f8b13c191a1", "sourceURL": "https://kubevela.io/docs/tutorials/k8s-object", "url": "https://kubevela.io/docs/tutorials/k8s-object/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"Understanding JSON Structure\"?\n\nAssistant: Here are some code examples:\n\n### Basic JSON Example\n```yaml\n{\n  \"name\": \"John\",\n  \"age\": 30,\n  \"isStudent\": false,\n  \"courses\": [\"Math\", \"Science\"]\n}\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/tutorials/k8s-object", "title": "Understanding JSON Structure", "description": "This page provides an overview of JSON structure, including its syntax, data types, and best practices for usage.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 14:56:51", "type": "code_examples", "page_metadata": {"docusaurus_locale": "en", "msapplication-config": "/img/favicons/browserconfig.xml", "twitter:card": "summary_large_image", "docusaurus_tag": "docs-default-v1.10", "title": "Deploy Kubernetes Objects | KubeVela", "docusaurus_version": "v1.10", "docsearch:docusaurus_tag": "docs-default-v1.10", "description": "This section introduces that how you can deploy Kubernetes objects into multi environments and clusters.", "language": "en", "ogUrl": "https://kubevela.io/docs/tutorials/k8s-object/", "docsearch:version": "v1.10", "og:description": "This section introduces that how you can deploy Kubernetes objects into multi environments and clusters.", "ogTitle": "Deploy Kubernetes Objects | KubeVela", "ogDescription": "This section introduces that how you can deploy Kubernetes objects into multi environments and clusters.", "og:url": "https://kubevela.io/docs/tutorials/k8s-object/", "og:title": "Deploy Kubernetes Objects | KubeVela", "theme-color": "#ffffff", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "viewport": "width=device-width,initial-scale=1", "docsearch:language": "en", "generator": "Docusaurus v2.4.3", "scrapeId": "ccb36a01-f4f5-4313-a5b2-1f8b13c191a1", "sourceURL": "https://kubevela.io/docs/tutorials/k8s-object", "url": "https://kubevela.io/docs/tutorials/k8s-object/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"Understanding JSON Structure\"?\n\nAssistant: Here are the recommended best practices:\n\n• Use consistent naming conventions for keys.\n• Keep the structure simple and avoid deeply nested objects.\n", "metadata": {"source_url": "https://kubevela.io/docs/tutorials/k8s-object", "title": "Understanding JSON Structure", "description": "This page provides an overview of JSON structure, including its syntax, data types, and best practices for usage.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 14:56:51", "type": "best_practices", "page_metadata": {"docusaurus_locale": "en", "msapplication-config": "/img/favicons/browserconfig.xml", "twitter:card": "summary_large_image", "docusaurus_tag": "docs-default-v1.10", "title": "Deploy Kubernetes Objects | KubeVela", "docusaurus_version": "v1.10", "docsearch:docusaurus_tag": "docs-default-v1.10", "description": "This section introduces that how you can deploy Kubernetes objects into multi environments and clusters.", "language": "en", "ogUrl": "https://kubevela.io/docs/tutorials/k8s-object/", "docsearch:version": "v1.10", "og:description": "This section introduces that how you can deploy Kubernetes objects into multi environments and clusters.", "ogTitle": "Deploy Kubernetes Objects | KubeVela", "ogDescription": "This section introduces that how you can deploy Kubernetes objects into multi environments and clusters.", "og:url": "https://kubevela.io/docs/tutorials/k8s-object/", "og:title": "Deploy Kubernetes Objects | KubeVela", "theme-color": "#ffffff", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "viewport": "width=device-width,initial-scale=1", "docsearch:language": "en", "generator": "Docusaurus v2.4.3", "scrapeId": "ccb36a01-f4f5-4313-a5b2-1f8b13c191a1", "sourceURL": "https://kubevela.io/docs/tutorials/k8s-object", "url": "https://kubevela.io/docs/tutorials/k8s-object/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela Dry Run Command\"?\n\nAssistant: Dry Run an application, and output the K8s resources as result to stdout.\n\nHere's a detailed explanation:\n\n\n## Synopsis\nDry-run application locally, render the Kubernetes resources as result to stdout.\n\n```bash\nvela dry-run -d /definition/directory/or/file/ -f /path/to/app.yaml\n```\n\nYou can also specify a remote url for app:\n\n```bash\nvela dry-run -d /definition/directory/or/file/ -f https://remote-host/app.yaml\n```\n\nAnd more, you can specify policy and workflow with application file:\n\n```bash\nvela dry-run -d /definition/directory/or/file/ -f /path/to/app.yaml -f /path/to/policy.yaml -f /path/to/workflow.yaml\n```\n\nOR\n\n```bash\nvela dry-run -d /definition/directory/or/file/ -f /path/to/app.yaml,/path/to/policy.yaml,/path/to/workflow.yaml\n```\n\nAdditionally, if the provided policy and workflow files are not referenced by application file, warning message will show up and those files will be ignored. You can use \"merge\" flag to make those standalone files effective:\n\n```bash\nvela dry-run -d /definition/directory/or/file/ -f /path/to/app.yaml,/path/to/policy.yaml,/path/to/workflow.yaml --merge\n```\n\nLimitation:\n\n1. Only support one object per file(yaml) for \"-f\" flag. More support will be added in the future improvement.\n2. Dry Run with policy and workflow will only take override/topology policies and deploy workflow step into considerations. Other workflow step will be ignored.\n\n## Examples\n```bash\n# dry-run application\nvela dry-run -f app.yaml\n\n# dry-run application with policy and workflow\nvela dry-run -f app.yaml -f policy.yaml -f workflow.yaml\n```\n\n## Options\n```bash\n  -d, --definition string             specify a definition file or directory, it will only be used in dry-run rather than applied to K8s cluster\n  -x, --definition-namespace string   Specify which namespace the definition locates. (default \"vela-system\")\n  -e, --env string                    specify environment name for application\n  -f, --file strings                  application related file names (default [app.yaml])\n  -h, --help                          help for dry-run\n      --merge                         Merge standalone files to produce dry-run results\n  -n, --namespace string              specify the Kubernetes namespace to use\n      --offline dry-run               Run dry-run in offline / local mode, all validation steps will be skipped\n```\n\n## Options inherited from parent commands\n```bash\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_dry-run", "title": "KubeVela Dry Run Command", "description": "Dry Run an application, and output the K8s resources as result to stdout.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 14:57:08", "type": "overview", "page_metadata": {"og:title": "vela dry-run | KubeVela", "docsearch:language": "en", "docsearch:version": "v1.10", "language": "en", "docusaurus_tag": "docs-default-v1.10", "og:url": "https://kubevela.io/docs/cli/vela_dry-run/", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogDescription": "Dry Run an application, and output the K8s resources as result to stdout.", "ogUrl": "https://kubevela.io/docs/cli/vela_dry-run/", "docusaurus_version": "v1.10", "viewport": "width=device-width, initial-scale=1.0", "theme-color": "#ffffff", "og:description": "Dry Run an application, and output the K8s resources as result to stdout.", "generator": "Docusaurus v2.4.3", "ogTitle": "vela dry-run | KubeVela", "title": "vela dry-run | KubeVela", "docusaurus_locale": "en", "description": "Dry Run an application, and output the K8s resources as result to stdout.", "msapplication-config": "/img/favicons/browserconfig.xml", "twitter:card": "summary_large_image", "docsearch:docusaurus_tag": "docs-default-v1.10", "scrapeId": "e2fa2cf1-00eb-43e4-a149-826f7680b986", "sourceURL": "https://kubevela.io/docs/cli/vela_dry-run", "url": "https://kubevela.io/docs/cli/vela_dry-run/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"KubeVela Dry Run Command\"?\n\nAssistant: Here are some code examples:\n\n### Basic Dry Run Command\n```yaml\nvela dry-run\n```\n\n### Dry Run with Definition and Files\n```yaml\nvela dry-run -d /definition/directory/or/file/ -f /path/to/app.yaml\n```\n\n### Dry Run with Policy and Workflow\n```yaml\nvela dry-run -d /definition/directory/or/file/ -f /path/to/app.yaml -f /path/to/policy.yaml -f /path/to/workflow.yaml\n```\n\n### Dry Run with Merge Flag\n```yaml\nvela dry-run -d /definition/directory/or/file/ -f /path/to/app.yaml,/path/to/policy.yaml,/path/to/workflow.yaml --merge\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_dry-run", "title": "KubeVela Dry Run Command", "description": "Dry Run an application, and output the K8s resources as result to stdout.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 14:57:08", "type": "code_examples", "page_metadata": {"og:title": "vela dry-run | KubeVela", "docsearch:language": "en", "docsearch:version": "v1.10", "language": "en", "docusaurus_tag": "docs-default-v1.10", "og:url": "https://kubevela.io/docs/cli/vela_dry-run/", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogDescription": "Dry Run an application, and output the K8s resources as result to stdout.", "ogUrl": "https://kubevela.io/docs/cli/vela_dry-run/", "docusaurus_version": "v1.10", "viewport": "width=device-width, initial-scale=1.0", "theme-color": "#ffffff", "og:description": "Dry Run an application, and output the K8s resources as result to stdout.", "generator": "Docusaurus v2.4.3", "ogTitle": "vela dry-run | KubeVela", "title": "vela dry-run | KubeVela", "docusaurus_locale": "en", "description": "Dry Run an application, and output the K8s resources as result to stdout.", "msapplication-config": "/img/favicons/browserconfig.xml", "twitter:card": "summary_large_image", "docsearch:docusaurus_tag": "docs-default-v1.10", "scrapeId": "e2fa2cf1-00eb-43e4-a149-826f7680b986", "sourceURL": "https://kubevela.io/docs/cli/vela_dry-run", "url": "https://kubevela.io/docs/cli/vela_dry-run/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela Dry Run Command\"?\n\nAssistant: Here are the recommended best practices:\n\n• Only support one object per file (yaml) for the \"-f\" flag. More support will be added in future improvements.\n• Dry Run with policy and workflow will only take override/topology policies and deploy workflow step into consideration. Other workflow steps will be ignored.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_dry-run", "title": "KubeVela Dry Run Command", "description": "Dry Run an application, and output the K8s resources as result to stdout.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 14:57:08", "type": "best_practices", "page_metadata": {"og:title": "vela dry-run | KubeVela", "docsearch:language": "en", "docsearch:version": "v1.10", "language": "en", "docusaurus_tag": "docs-default-v1.10", "og:url": "https://kubevela.io/docs/cli/vela_dry-run/", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogDescription": "Dry Run an application, and output the K8s resources as result to stdout.", "ogUrl": "https://kubevela.io/docs/cli/vela_dry-run/", "docusaurus_version": "v1.10", "viewport": "width=device-width, initial-scale=1.0", "theme-color": "#ffffff", "og:description": "Dry Run an application, and output the K8s resources as result to stdout.", "generator": "Docusaurus v2.4.3", "ogTitle": "vela dry-run | KubeVela", "title": "vela dry-run | KubeVela", "docusaurus_locale": "en", "description": "Dry Run an application, and output the K8s resources as result to stdout.", "msapplication-config": "/img/favicons/browserconfig.xml", "twitter:card": "summary_large_image", "docsearch:docusaurus_tag": "docs-default-v1.10", "scrapeId": "e2fa2cf1-00eb-43e4-a149-826f7680b986", "sourceURL": "https://kubevela.io/docs/cli/vela_dry-run", "url": "https://kubevela.io/docs/cli/vela_dry-run/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"Configuring Deployment Environments in KubeVela\"?\n\nAssistant: This page covers how to create and manage deployment environments in KubeVela, including configuring email, namespaces, and domains for applications.\n\nHere's a detailed explanation:\n\n\n## Create environment\nTo create a new deployment environment, use the following command:\n\n```bash\nvela env init demo --email my@email.com\n```\n\nThis will create an environment named `demo` with the specified email. The output will confirm the creation:\n\n```bash\nenvironment demo created, Namespace: default, Email: my@email.com\n```\n\n## Check the deployment environment metadata\nTo list the deployment environments and their metadata, execute:\n\n```bash\nvela env ls\n```\n\nThe output will show the environments along with their current namespace and email:\n\n```bash\nNAME    CURRENT NAMESPACE   EMAIL                   DOMAIN\ndefault         default\n demo    *       default     my@email.com\n```\n\n## Configure changes\nYou can change the configuration of an existing environment by re-executing the environment initialization command with new parameters:\n\n```bash\nvela env init demo --namespace demo\n```\n\nThis will update the environment to use the `demo` namespace:\n\n```bash\nenvironment demo created, Namespace: demo, Email: my@email.com\n```\n\nTo verify the changes, list the environments again:\n\n```bash\nvela env ls\n```\n\nThe output will reflect the updated namespace:\n\n```bash\nNAME    CURRENT NAMESPACE   EMAIL                   DOMAIN\ndefault         default\n demo    *       demo        my@email.com\n```\n\n## [Optional] Configure Domain if you have public IP\nIf your K8s cluster has a public IP for ingress, you can configure a domain for your environment. First, get the public IP from the ingress service:\n\n```bash\nkubectl get svc -A | grep LoadBalancer\n```\n\nThe output will show the public IP:\n\n```bash\nNAME                         TYPE           CLUSTER-IP      EXTERNAL-IP     PORT(S)                      AGE\nnginx-ingress-lb             LoadBalancer   172.21.2.174    123.57.10.233   80:32740/TCP,443:32086/TCP   41d\n```\n\nYou can then configure an 'A' record for your custom domain:\n\n```bash\n*.your.domain => 123.57.10.233\n```\n\nAlternatively, you can use `123.57.10.233.xip.io` as your domain:\n\n```bash\nvela env init demo --domain 123.57.10.233.xip.io\n```\n\nThis will update the environment with the new domain:\n\n```bash\nenvironment demo updated, Namespace: demo, Email: my@email.com\n```\n\n## Using domain in Appfile\nWith the domain configured, you no longer need to specify it in the route configuration of your Appfile. Here’s an example:\n\n```yaml\n# in demo environment\nservices:\n  express-server:\n    ...\n\n    route:\n      rules:\n        - path: /testapp\n          rewriteTarget: /\n```\n\nYou can access your application using the configured domain:\n\n```bash\ncurl http://123.57.10.233.xip.io/testapp\n```\n\nThe expected output will be:\n\n```bash\nHello World\n```\n", "metadata": {"source_url": "https://kubevela.io/docs/developers/config-enviroments", "title": "Configuring Deployment Environments in KubeVela", "description": "This page covers how to create and manage deployment environments in KubeVela, including configuring email, namespaces, and domains for applications.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 14:57:22", "type": "overview", "page_metadata": {"viewport": "width=device-width, initial-scale=1.0", "language": "en", "ogDescription": "A deployment environment is where you could configure the workspace, email for contact and domain for your applications globally.", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_locale": "en", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:title": "Setting Up Deployment Environment | KubeVela", "docsearch:version": "v1.10", "ogUrl": "https://kubevela.io/docs/developers/config-enviroments/", "docusaurus_version": "v1.10", "theme-color": "#ffffff", "generator": "Docusaurus v2.4.3", "docsearch:language": "en", "og:url": "https://kubevela.io/docs/developers/config-enviroments/", "twitter:card": "summary_large_image", "description": "A deployment environment is where you could configure the workspace, email for contact and domain for your applications globally.", "ogTitle": "Setting Up Deployment Environment | KubeVela", "docusaurus_tag": "docs-default-v1.10", "title": "Setting Up Deployment Environment | KubeVela", "og:description": "A deployment environment is where you could configure the workspace, email for contact and domain for your applications globally.", "msapplication-config": "/img/favicons/browserconfig.xml", "scrapeId": "93cd6b32-aa0a-431c-a4e7-d4ce7f1deed2", "sourceURL": "https://kubevela.io/docs/developers/config-enviroments", "url": "https://kubevela.io/docs/developers/config-enviroments/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"Configuring Deployment Environments in KubeVela\"?\n\nAssistant: Here are some code examples:\n\n### Create environment command\n```yaml\nvela env init demo --email my@email.com\n```\n\n### Check deployment environment metadata command\n```yaml\nvela env ls\n```\n\n### Configure changes command\n```yaml\nvela env init demo --namespace demo\n```\n\n### Get public IP from ingress service\n```yaml\nkubectl get svc -A | grep LoadBalancer\n```\n\n### Configure domain command\n```yaml\nvela env init demo --domain 123.57.10.233.xip.io\n```\n\n### Curl command to access app\n```yaml\ncurl http://123.57.10.233.xip.io/testapp\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/developers/config-enviroments", "title": "Configuring Deployment Environments in KubeVela", "description": "This page covers how to create and manage deployment environments in KubeVela, including configuring email, namespaces, and domains for applications.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 14:57:22", "type": "code_examples", "page_metadata": {"viewport": "width=device-width, initial-scale=1.0", "language": "en", "ogDescription": "A deployment environment is where you could configure the workspace, email for contact and domain for your applications globally.", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_locale": "en", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:title": "Setting Up Deployment Environment | KubeVela", "docsearch:version": "v1.10", "ogUrl": "https://kubevela.io/docs/developers/config-enviroments/", "docusaurus_version": "v1.10", "theme-color": "#ffffff", "generator": "Docusaurus v2.4.3", "docsearch:language": "en", "og:url": "https://kubevela.io/docs/developers/config-enviroments/", "twitter:card": "summary_large_image", "description": "A deployment environment is where you could configure the workspace, email for contact and domain for your applications globally.", "ogTitle": "Setting Up Deployment Environment | KubeVela", "docusaurus_tag": "docs-default-v1.10", "title": "Setting Up Deployment Environment | KubeVela", "og:description": "A deployment environment is where you could configure the workspace, email for contact and domain for your applications globally.", "msapplication-config": "/img/favicons/browserconfig.xml", "scrapeId": "93cd6b32-aa0a-431c-a4e7-d4ce7f1deed2", "sourceURL": "https://kubevela.io/docs/developers/config-enviroments", "url": "https://kubevela.io/docs/developers/config-enviroments/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"Configuring Deployment Environments in KubeVela\"?\n\nAssistant: Here are the recommended best practices:\n\n• Note that the created apps won't be affected by changes to the environment configuration; only newly created apps will use the updated info.\n", "metadata": {"source_url": "https://kubevela.io/docs/developers/config-enviroments", "title": "Configuring Deployment Environments in KubeVela", "description": "This page covers how to create and manage deployment environments in KubeVela, including configuring email, namespaces, and domains for applications.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 14:57:22", "type": "best_practices", "page_metadata": {"viewport": "width=device-width, initial-scale=1.0", "language": "en", "ogDescription": "A deployment environment is where you could configure the workspace, email for contact and domain for your applications globally.", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_locale": "en", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:title": "Setting Up Deployment Environment | KubeVela", "docsearch:version": "v1.10", "ogUrl": "https://kubevela.io/docs/developers/config-enviroments/", "docusaurus_version": "v1.10", "theme-color": "#ffffff", "generator": "Docusaurus v2.4.3", "docsearch:language": "en", "og:url": "https://kubevela.io/docs/developers/config-enviroments/", "twitter:card": "summary_large_image", "description": "A deployment environment is where you could configure the workspace, email for contact and domain for your applications globally.", "ogTitle": "Setting Up Deployment Environment | KubeVela", "docusaurus_tag": "docs-default-v1.10", "title": "Setting Up Deployment Environment | KubeVela", "og:description": "A deployment environment is where you could configure the workspace, email for contact and domain for your applications globally.", "msapplication-config": "/img/favicons/browserconfig.xml", "scrapeId": "93cd6b32-aa0a-431c-a4e7-d4ce7f1deed2", "sourceURL": "https://kubevela.io/docs/developers/config-enviroments", "url": "https://kubevela.io/docs/developers/config-enviroments/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"Terraform Addon\"?\n\nAssistant: This page covers how to enable and use the Terraform addon in KubeVela to provision cloud resources.\n\nHere's a detailed explanation:\n\n\n## Enable Terraform addon\nTo enable the Terraform addon, use the following command:\n\n```bash\nvela addon enable terraform\n```\n\nAfter Terraform addon is enabled, you will have a basic capability to create cloud resources in CRD ways. Then you can enable a terraform provider addon for specific clouds.\n\n## Enable Terraform Provider addon\nKubeVela can support the following cloud providers by enabling the Terraform provider addons:\n\n```bash\n$ vela addon list | grep terraform-\ntf-alibaba           KubeVela    Kubernetes Terraform Controller for Alibaba Cloud                                                       [1.0.2, 1.0.1]                          enabled (1.0.2)\ntf-tencent           KubeVela    Kubernetes Terraform Controller Provider for Tencent Cloud                                              [1.0.0, 1.0.1]                          enabled (1.0.0)\ntf-aws               KubeVela    Kubernetes Terraform Controller for AWS                                                                 [1.0.0, 1.0.1]                          enabled (1.0.0)\ntf-azure             KubeVela    Kubernetes Terraform Controller for Azure                                                               [1.0.0, 1.0.1]                          enabled (1.0.0)\ntf-baidu             KubeVela    Kubernetes Terraform Controller Provider for Baidu Cloud                                                [1.0.0, 1.0.1]                          enabled (1.0.0)\ntf-gcp               KubeVela    Kubernetes Terraform Controller Provider for Google Cloud Platform                                      [1.0.0, 1.0.1]                          enabled (1.0.0)\ntf-ucloud            KubeVela    Kubernetes Terraform Controller Provider for UCloud                                                     [1.0.1, 1.0.0]                          enabled (1.0.1)\n```\n\nTo enable one of them, use the following command:\n\n```bash\nvela addon enable terraform-<provider-name>\n```\n", "metadata": {"source_url": "https://kubevela.io/docs/reference/addons/terraform", "title": "Terraform Addon", "description": "This page covers how to enable and use the Terraform addon in KubeVela to provision cloud resources.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-02-28 14:57:31", "type": "overview", "page_metadata": {"docsearch:language": "en", "msapplication-config": "/img/favicons/browserconfig.xml", "ogUrl": "https://kubevela.io/docs/reference/addons/terraform/", "og:description": "To provision cloud resources, you can use terraform along with related cloud provider addons.", "og:url": "https://kubevela.io/docs/reference/addons/terraform/", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "generator": "Docusaurus v2.4.3", "twitter:card": "summary_large_image", "docsearch:docusaurus_tag": "docs-default-v1.10", "ogTitle": "Terraform | KubeVela", "description": "To provision cloud resources, you can use terraform along with related cloud provider addons.", "docsearch:version": "v1.10", "title": "Terraform | KubeVela", "ogDescription": "To provision cloud resources, you can use terraform along with related cloud provider addons.", "theme-color": "#ffffff", "viewport": "width=device-width, initial-scale=1.0", "docusaurus_version": "v1.10", "docusaurus_locale": "en", "docusaurus_tag": "docs-default-v1.10", "og:title": "Terraform | KubeVela", "language": "en", "scrapeId": "3143dcd5-0cf8-4be8-b797-c79fadf14f8d", "sourceURL": "https://kubevela.io/docs/reference/addons/terraform", "url": "https://kubevela.io/docs/reference/addons/terraform/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"Terraform Addon\"?\n\nAssistant: Here are some code examples:\n\n### Enable Terraform addon\n```yaml\nvela addon enable terraform\n```\n\n### List Terraform addons\n```yaml\n$ vela addon list | grep terraform-\n```\n\n### Enable a specific Terraform provider addon\n```yaml\nvela addon enable terraform-<provider-name>\n```\n\n### Authenticate a Terraform provider\n```yaml\nvela config-template list | grep terraform\n```\n\n### Create a provider config for AWS\n```yaml\nvela config create aws -t terraform-aws AWS_ACCESS_KEY_ID=xxx AWS_SECRET_ACCESS_KEY=yyy AWS_DEFAULT_REGION=us-east-1\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/reference/addons/terraform", "title": "Terraform Addon", "description": "This page covers how to enable and use the Terraform addon in KubeVela to provision cloud resources.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-02-28 14:57:31", "type": "code_examples", "page_metadata": {"docsearch:language": "en", "msapplication-config": "/img/favicons/browserconfig.xml", "ogUrl": "https://kubevela.io/docs/reference/addons/terraform/", "og:description": "To provision cloud resources, you can use terraform along with related cloud provider addons.", "og:url": "https://kubevela.io/docs/reference/addons/terraform/", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "generator": "Docusaurus v2.4.3", "twitter:card": "summary_large_image", "docsearch:docusaurus_tag": "docs-default-v1.10", "ogTitle": "Terraform | KubeVela", "description": "To provision cloud resources, you can use terraform along with related cloud provider addons.", "docsearch:version": "v1.10", "title": "Terraform | KubeVela", "ogDescription": "To provision cloud resources, you can use terraform along with related cloud provider addons.", "theme-color": "#ffffff", "viewport": "width=device-width, initial-scale=1.0", "docusaurus_version": "v1.10", "docusaurus_locale": "en", "docusaurus_tag": "docs-default-v1.10", "og:title": "Terraform | KubeVela", "language": "en", "scrapeId": "3143dcd5-0cf8-4be8-b797-c79fadf14f8d", "sourceURL": "https://kubevela.io/docs/reference/addons/terraform", "url": "https://kubevela.io/docs/reference/addons/terraform/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"Terraform Addon\"?\n\nAssistant: Here are the recommended best practices:\n\n• You can disable, upgrade, and check the status of an addon by command `vela addon`.\n• After a Terraform provider is authenticated, you can provision and/or consume cloud resources.\n", "metadata": {"source_url": "https://kubevela.io/docs/reference/addons/terraform", "title": "Terraform Addon", "description": "This page covers how to enable and use the Terraform addon in KubeVela to provision cloud resources.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-02-28 14:57:31", "type": "best_practices", "page_metadata": {"docsearch:language": "en", "msapplication-config": "/img/favicons/browserconfig.xml", "ogUrl": "https://kubevela.io/docs/reference/addons/terraform/", "og:description": "To provision cloud resources, you can use terraform along with related cloud provider addons.", "og:url": "https://kubevela.io/docs/reference/addons/terraform/", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "generator": "Docusaurus v2.4.3", "twitter:card": "summary_large_image", "docsearch:docusaurus_tag": "docs-default-v1.10", "ogTitle": "Terraform | KubeVela", "description": "To provision cloud resources, you can use terraform along with related cloud provider addons.", "docsearch:version": "v1.10", "title": "Terraform | KubeVela", "ogDescription": "To provision cloud resources, you can use terraform along with related cloud provider addons.", "theme-color": "#ffffff", "viewport": "width=device-width, initial-scale=1.0", "docusaurus_version": "v1.10", "docusaurus_locale": "en", "docusaurus_tag": "docs-default-v1.10", "og:title": "Terraform | KubeVela", "language": "en", "scrapeId": "3143dcd5-0cf8-4be8-b797-c79fadf14f8d", "sourceURL": "https://kubevela.io/docs/reference/addons/terraform", "url": "https://kubevela.io/docs/reference/addons/terraform/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela Release Process\"?\n\nAssistant: This page outlines the release process for KubeVela, including planning, community contributions, testing, and standard operating procedures.\n\nHere's a detailed explanation:\n\n\n## Release Planning\nWe are using [GitHub milestones](https://github.com/kubevela/kubevela/milestones) to perform release planning and tracking. Each release milestone includes two type of issues:\n\n- Issues that maintainers committed to working on. Maintainers decide which features they are committing to work on during the next release based on their availability. Typically issues added offline by each maintainer and finalized during the contributors' meeting or [community meetings](https://github.com/kubevela/community#community-meetings). Each such issue should be assigned to maintainer who plans to implement and test it.\n- Nice to have improvements contributed by community contributors. Nice to have issues are typically not critical, smallish enhancements that could be contributed by community contributors. Maintainers are not committing to implement them but committing to review PR from the community.\n\nThe milestone should have a clear description of the most important features as well as the expected end date. This should provide clarity to end-users about what to expect from the next release and when.\n\nIn addition to the next milestone, we need to maintain a draft of the upcoming release milestone.\n\n## Community Contributions\nWe receive a lot of contributions from our awesome community, and we're very grateful for that fact. However, reviewing and testing PRs is a lot of (unplanned) work and therefore, we cannot guarantee that contributions (especially large or complex ones) made by the community receive a timely review within a release's time frame. Maintainers may decide on their own to put work on a PR together with the contributor and in this case, the maintainer will self-assigned the PR and thereby committing to review, eventually merge and later test it on the release scope.\n\n## Release Testing\nWe have a code freeze period two weeks before the release until the release branch is created. During code freeze no feature PR should be merged and it is ok to merge bug fixes.\n\nMaintainers should drive testing and work on fixing last-minute issues before every release.\n\n## Release SOP\nThe maintainers are responsible to drive releases and follow the standard operating procedure to make sure the quality of this release.\n\n> We're following the `major.minor.patch` version. The `major` version is incremented when there are incompatible API changes. The `minor` version is incremented when there are new features. The `patch` version is incremented when there are bug fixes.\n\n1. Write a clear release note including:\n   - New Features, Enhancement and Bugfixes.\n   - Deprecation and Breaking Changes.\n   - Brief notes about how to install and upgrade.\n2. Create a new release branch from the `release-x.y` branch when release a new `minor` release.\n3. Create new `patch` releases corresponding to the release branch.\n4. Make sure the release materials are generated successfully from the Github actions:\n   - Images from [Registry Pipeline](https://github.com/kubevela/kubevela/actions/workflows/registry.yml).\n   - Helm Charts from [Publish Chart Pipeline](https://github.com/kubevela/kubevela/actions/workflows/chart.yml).\n   - CLI binaries from [Release Pipeline](https://github.com/kubevela/kubevela/actions/workflows/release.yml).\n5. Update docs and examples to use the new release.\n   - Create a new docs version for the new `minor` release.\n   - Update the [migration doc](https://kubevela.io/docs/platform-engineers/system-operation/migration-from-old-version/) when release a new `minor` release.\n   - Update the `top tip` in `docusaurus.config.js` for every `patch` release.\n", "metadata": {"source_url": "https://kubevela.io/docs/contributor/release-process", "title": "KubeVela Release Process", "description": "This page outlines the release process for KubeVela, including planning, community contributions, testing, and standard operating procedures.", "has_code_examples": false, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 14:57:46", "type": "overview", "page_metadata": {"title": "Release Process And Cadence | KubeVela", "twitter:card": "summary_large_image", "msapplication-config": "/img/favicons/browserconfig.xml", "language": "en", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_locale": "en", "ogTitle": "Release Process And Cadence | KubeVela", "docsearch:language": "en", "og:description": "KubeVela is being developed using the following process:", "theme-color": "#ffffff", "viewport": "width=device-width, initial-scale=1.0", "description": "KubeVela is being developed using the following process:", "generator": "Docusaurus v2.4.3", "og:title": "Release Process And Cadence | KubeVela", "docusaurus_tag": "docs-default-v1.10", "ogDescription": "KubeVela is being developed using the following process:", "docsearch:docusaurus_tag": "docs-default-v1.10", "docsearch:version": "v1.10", "ogUrl": "https://kubevela.io/docs/contributor/release-process/", "og:url": "https://kubevela.io/docs/contributor/release-process/", "docusaurus_version": "v1.10", "scrapeId": "a07b0f2d-eadc-4f35-901b-2b5358b930b5", "sourceURL": "https://kubevela.io/docs/contributor/release-process", "url": "https://kubevela.io/docs/contributor/release-process/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela Release Process\"?\n\nAssistant: Here are the recommended best practices:\n\n• Maintain a clear description of the most important features and expected end date in the milestone.\n• Review and test PRs from community contributors, but manage expectations regarding timing.\n• Drive testing and fix last-minute issues before every release.\n• Follow the standard operating procedure to ensure the quality of the release.\n", "metadata": {"source_url": "https://kubevela.io/docs/contributor/release-process", "title": "KubeVela Release Process", "description": "This page outlines the release process for KubeVela, including planning, community contributions, testing, and standard operating procedures.", "has_code_examples": false, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 14:57:46", "type": "best_practices", "page_metadata": {"title": "Release Process And Cadence | KubeVela", "twitter:card": "summary_large_image", "msapplication-config": "/img/favicons/browserconfig.xml", "language": "en", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_locale": "en", "ogTitle": "Release Process And Cadence | KubeVela", "docsearch:language": "en", "og:description": "KubeVela is being developed using the following process:", "theme-color": "#ffffff", "viewport": "width=device-width, initial-scale=1.0", "description": "KubeVela is being developed using the following process:", "generator": "Docusaurus v2.4.3", "og:title": "Release Process And Cadence | KubeVela", "docusaurus_tag": "docs-default-v1.10", "ogDescription": "KubeVela is being developed using the following process:", "docsearch:docusaurus_tag": "docs-default-v1.10", "docsearch:version": "v1.10", "ogUrl": "https://kubevela.io/docs/contributor/release-process/", "og:url": "https://kubevela.io/docs/contributor/release-process/", "docusaurus_version": "v1.10", "scrapeId": "a07b0f2d-eadc-4f35-901b-2b5358b930b5", "sourceURL": "https://kubevela.io/docs/contributor/release-process", "url": "https://kubevela.io/docs/contributor/release-process/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela Port Forwarding\"?\n\nAssistant: This page covers how to access deployed web services locally using port-forward in KubeVela.\n\nHere's a detailed explanation:\n\n\n## Introduction\nOnce your web services of the application deployed, you can access it locally via `port-forward`.\n\n## Checking Deployed Applications\nYou can list your deployed applications using the command `vela ls`.\n\n## Port Forwarding Command\nTo forward the port for your application, use the command `vela port-forward testapp`. This will directly open the browser for you.\n\n## Output Logs\nThe output logs will show the forwarding status and confirm that the browser is opening.\n", "metadata": {"source_url": "https://kubevela.io/docs/developers/port-forward", "title": "KubeVela Port Forwarding", "description": "This page covers how to access deployed web services locally using port-forward in KubeVela.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 14:57:52", "type": "overview", "page_metadata": {"viewport": "width=device-width, initial-scale=1.0", "theme-color": "#ffffff", "ogTitle": "Port Forwarding | KubeVela", "generator": "Docusaurus v2.4.3", "ogDescription": "Once your web services of the application deployed, you can access it locally via port-forward.", "language": "en", "title": "Port Forwarding | KubeVela", "ogUrl": "https://kubevela.io/docs/developers/port-forward/", "docusaurus_version": "v1.10", "docusaurus_locale": "en", "msapplication-config": "/img/favicons/browserconfig.xml", "docusaurus_tag": "docs-default-v1.10", "og:url": "https://kubevela.io/docs/developers/port-forward/", "twitter:card": "summary_large_image", "docsearch:language": "en", "docsearch:version": "v1.10", "og:title": "Port Forwarding | KubeVela", "description": "Once your web services of the application deployed, you can access it locally via port-forward.", "og:description": "Once your web services of the application deployed, you can access it locally via port-forward.", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docsearch:docusaurus_tag": "docs-default-v1.10", "scrapeId": "cd662f1b-8de1-4df3-8a4f-38a5924cc5f3", "sourceURL": "https://kubevela.io/docs/developers/port-forward", "url": "https://kubevela.io/docs/developers/port-forward/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"KubeVela Port Forwarding\"?\n\nAssistant: Here are some code examples:\n\n### List Deployed Applications\n```yaml\nvela ls\n```\n\n### Deployed Application Output\n```yaml\nNAME            APP     WORKLOAD      TRAITS    STATUS      CREATED-TIME\nexpress-server  testapp webservice              Deployed    2020-09-18 22:42:04 +0800 CST\n```\n\n### Port Forward Command\n```yaml\nvela port-forward testapp\n```\n\n### Port Forwarding Logs\n```yaml\nForwarding from 127.0.0.1:8080 -> 80\nForwarding from [::1]:8080 -> 80\n\nForward successfully! Opening browser ...\nHandling connection for 8080\nHandling connection for 8080\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/developers/port-forward", "title": "KubeVela Port Forwarding", "description": "This page covers how to access deployed web services locally using port-forward in KubeVela.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 14:57:52", "type": "code_examples", "page_metadata": {"viewport": "width=device-width, initial-scale=1.0", "theme-color": "#ffffff", "ogTitle": "Port Forwarding | KubeVela", "generator": "Docusaurus v2.4.3", "ogDescription": "Once your web services of the application deployed, you can access it locally via port-forward.", "language": "en", "title": "Port Forwarding | KubeVela", "ogUrl": "https://kubevela.io/docs/developers/port-forward/", "docusaurus_version": "v1.10", "docusaurus_locale": "en", "msapplication-config": "/img/favicons/browserconfig.xml", "docusaurus_tag": "docs-default-v1.10", "og:url": "https://kubevela.io/docs/developers/port-forward/", "twitter:card": "summary_large_image", "docsearch:language": "en", "docsearch:version": "v1.10", "og:title": "Port Forwarding | KubeVela", "description": "Once your web services of the application deployed, you can access it locally via port-forward.", "og:description": "Once your web services of the application deployed, you can access it locally via port-forward.", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docsearch:docusaurus_tag": "docs-default-v1.10", "scrapeId": "cd662f1b-8de1-4df3-8a4f-38a5924cc5f3", "sourceURL": "https://kubevela.io/docs/developers/port-forward", "url": "https://kubevela.io/docs/developers/port-forward/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela Port Forwarding\"?\n\nAssistant: Here are the recommended best practices:\n\n• Ensure your application is deployed before attempting to use port-forward.\n• Use the correct application name in the port-forward command.\n", "metadata": {"source_url": "https://kubevela.io/docs/developers/port-forward", "title": "KubeVela Port Forwarding", "description": "This page covers how to access deployed web services locally using port-forward in KubeVela.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 14:57:52", "type": "best_practices", "page_metadata": {"viewport": "width=device-width, initial-scale=1.0", "theme-color": "#ffffff", "ogTitle": "Port Forwarding | KubeVela", "generator": "Docusaurus v2.4.3", "ogDescription": "Once your web services of the application deployed, you can access it locally via port-forward.", "language": "en", "title": "Port Forwarding | KubeVela", "ogUrl": "https://kubevela.io/docs/developers/port-forward/", "docusaurus_version": "v1.10", "docusaurus_locale": "en", "msapplication-config": "/img/favicons/browserconfig.xml", "docusaurus_tag": "docs-default-v1.10", "og:url": "https://kubevela.io/docs/developers/port-forward/", "twitter:card": "summary_large_image", "docsearch:language": "en", "docsearch:version": "v1.10", "og:title": "Port Forwarding | KubeVela", "description": "Once your web services of the application deployed, you can access it locally via port-forward.", "og:description": "Once your web services of the application deployed, you can access it locally via port-forward.", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docsearch:docusaurus_tag": "docs-default-v1.10", "scrapeId": "cd662f1b-8de1-4df3-8a4f-38a5924cc5f3", "sourceURL": "https://kubevela.io/docs/developers/port-forward", "url": "https://kubevela.io/docs/developers/port-forward/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"Access Application\"?\n\nAssistant: This page covers various methods to publish your service after deploying an application using KubeVela, focusing on production environments.\n\nHere's a detailed explanation:\n\n\n## Use LoadBalancer by Cloud Provider\nThis way is only suitable for the cloud environment, such as Aliyun, AWS, and Azure.\n\nFor the webservice component, you only need to set the `ExposeType` to `LoadBalancer`, it means this component will generate a Kubernetes Service with LoadBalancer type. After deployment, you could get the service endpoints.\n\nFor Example:\n\n```codeBlockLines_e6Vv\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: webservice-app\nspec:\n  components:\n    - name: frontend\n      type: webservice\n      properties:\n        image: oamdev/testapp:v1\n        cmd: [\"node\", \"server.js\"]\n        ports:\n          - port: 8080\n            expose: true\n        exposeType: LoadBalancer\n```\n\nFor other components, similarly, only need to generate the Kubernetes Service with LoadBalancer type.\n\n## Use HTTP Domain by Ingress Gateway\nThis way required installed the ingress controller in the cluster.\n\nUsers could bound the `gateway` trait for the component to generate the Ingress. for example:\n\n```codeBlockLines_e6Vv\ntraits:\n- type: gateway\n  properties:\n    domain: testsvc.example.com\n    http:\n        \"/\": 8000\n        \"/manage\": 8090\n```\n\nThis means accessing the component service by domain `testsvc.example.com`, there are two rules, the request path begins with `/manage` will request the component 8090 port. others request path request the component 8000 port.\n\nIn VelaUX, you can click the `Add Trait` button and select the `gateway` trait type. refer to follow configuration:\n\n![gateway trait](https://static.kubevela.net/images/1.4/gateway-trait.jpg)\n\n## Use Traefik\nThis way required installed the traefik addon firstly.\n\n```codeBlockLines_e6Vv\n$ vela addon enable traefik\n```\n\nGet more info about this addon, refer to [Traefik Addon](https://kubevela.io/docs/reference/addons/traefik/)\n\nThis addon provides three traits, including [http-route](https://kubevela.io/docs/reference/addons/traefik/#http-routetrait), [https-route](https://kubevela.io/docs/reference/addons/traefik/#https-routetrait) and [tcp-route](https://kubevela.io/docs/reference/addons/traefik/#tcp-routetrait).\n\n## HTTP/HTTPS\nFor HTTP, you can click the `Add Trait` button and select the `http-route` trait type. refer to follow configuration:\n\n![http route trait](https://static.kubevela.net/images/1.4/http-route-trait.jpg)\n\n```codeBlockLines_e6Vv\ntraits:\n- type: http-route\n  properties:\n    domains:\n    - testsvc.example.com\n    rules:\n    - port: 80\n    gatewayName: traefik-gateway\n    listenerName: web\n```\n\nThere must be one route rule. The port is the same as the service port, the route condition supports the Header and Request Path.\n\nFor HTTPS, you must create the TLS certificate firstly. In VelaUX, open the Integrations page, there is a `TLS Certificate` type. Click the New button, You need to provide the certificate public and private keys and encoded the content by base64.\n\n![new tls](https://static.kubevela.net/images/1.4/new-tls.jpg)\n\nThis will generate the secret and distribute to managed clusters with the application.\n\nThen open the application configuration page and click the `Add Trait` button and select the `https-route` trait type. refer to follow configuration:\n\n![https route trait](https://static.kubevela.net/images/1.4/https-route-trait.jpg)\n\n```codeBlockLines_e6Vv\ntraits:\n- type: https-route\n  properties:\n    domains:\n    - testsvc.example.com\n    TLSPort: 8443\n    secrets:\n    - name: kubevela\n    rules:\n    - port: 80\n```\n\nThe secret name is the same as the name of the certificate configuration.\n\n## TCP\nThis way is suitable for the service with the stream protocol, reusing the same public IP address.\n\nYou can click the `Add Trait` button and select the `tcp-route` trait type. refer to follow configuration:\n\n![tcp route trait](https://static.kubevela.net/images/1.4/tcp-route.jpg)\n\n```codeBlockLines_e6Vv\ntraits:\n- type: https-route\n  properties:\n    rules:\n    - gatewayPort: 16379\n        port: 6379\n        serviceName: redis-master\n```\n", "metadata": {"source_url": "https://kubevela.io/docs/tutorials/access-application", "title": "Access Application", "description": "This page covers various methods to publish your service after deploying an application using KubeVela, focusing on production environments.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:01:34", "type": "overview", "page_metadata": {"generator": "Docusaurus v2.4.3", "docusaurus_locale": "en", "docsearch:language": "en", "ogTitle": "Access Application | KubeVela", "og:description": "After deploying the application, the next station is publishing your service.", "og:url": "https://kubevela.io/docs/tutorials/access-application/", "docsearch:docusaurus_tag": "docs-default-v1.10", "viewport": "width=device-width, initial-scale=1.0", "language": "en", "docsearch:version": "v1.10", "og:title": "Access Application | KubeVela", "title": "Access Application | KubeVela", "ogUrl": "https://kubevela.io/docs/tutorials/access-application/", "twitter:card": "summary_large_image", "docusaurus_version": "v1.10", "theme-color": "#ffffff", "description": "After deploying the application, the next station is publishing your service.", "msapplication-config": "/img/favicons/browserconfig.xml", "docusaurus_tag": "docs-default-v1.10", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogDescription": "After deploying the application, the next station is publishing your service.", "scrapeId": "bde0ba40-a00e-4865-a5a6-f44bb868027a", "sourceURL": "https://kubevela.io/docs/tutorials/access-application", "url": "https://kubevela.io/docs/tutorials/access-application/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"Access Application\"?\n\nAssistant: Here are some code examples:\n\n### LoadBalancer Example\n```yaml\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: webservice-app\nspec:\n  components:\n    - name: frontend\n      type: webservice\n      properties:\n        image: oamdev/testapp:v1\n        cmd: [\"node\", \"server.js\"]\n        ports:\n          - port: 8080\n            expose: true\n        exposeType: LoadBalancer\n```\n\n### Gateway Trait Example\n```yaml\ntraits:\n- type: gateway\n  properties:\n    domain: testsvc.example.com\n    http:\n        \"/\": 8000\n        \"/manage\": 8090\n```\n\n### Traefik Addon Command\n```yaml\n$ vela addon enable traefik\n```\n\n### HTTP Route Trait Example\n```yaml\ntraits:\n- type: http-route\n  properties:\n    domains:\n    - testsvc.example.com\n    rules:\n    - port: 80\n    gatewayName: traefik-gateway\n    listenerName: web\n```\n\n### HTTPS Route Trait Example\n```yaml\ntraits:\n- type: https-route\n  properties:\n    domains:\n    - testsvc.example.com\n    TLSPort: 8443\n    secrets:\n    - name: kubevela\n    rules:\n    - port: 80\n```\n\n### TCP Route Trait Example\n```yaml\ntraits:\n- type: https-route\n  properties:\n    rules:\n    - gatewayPort: 16379\n        port: 6379\n        serviceName: redis-master\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/tutorials/access-application", "title": "Access Application", "description": "This page covers various methods to publish your service after deploying an application using KubeVela, focusing on production environments.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:01:34", "type": "code_examples", "page_metadata": {"generator": "Docusaurus v2.4.3", "docusaurus_locale": "en", "docsearch:language": "en", "ogTitle": "Access Application | KubeVela", "og:description": "After deploying the application, the next station is publishing your service.", "og:url": "https://kubevela.io/docs/tutorials/access-application/", "docsearch:docusaurus_tag": "docs-default-v1.10", "viewport": "width=device-width, initial-scale=1.0", "language": "en", "docsearch:version": "v1.10", "og:title": "Access Application | KubeVela", "title": "Access Application | KubeVela", "ogUrl": "https://kubevela.io/docs/tutorials/access-application/", "twitter:card": "summary_large_image", "docusaurus_version": "v1.10", "theme-color": "#ffffff", "description": "After deploying the application, the next station is publishing your service.", "msapplication-config": "/img/favicons/browserconfig.xml", "docusaurus_tag": "docs-default-v1.10", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogDescription": "After deploying the application, the next station is publishing your service.", "scrapeId": "bde0ba40-a00e-4865-a5a6-f44bb868027a", "sourceURL": "https://kubevela.io/docs/tutorials/access-application", "url": "https://kubevela.io/docs/tutorials/access-application/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"Access Application\"?\n\nAssistant: Here are the recommended best practices:\n\n• Ensure the ingress controller is installed in the cluster before using HTTP Domain by Ingress Gateway.\n• Create TLS certificates before using HTTPS routes.\n• Use the correct trait type for the service you are configuring.\n", "metadata": {"source_url": "https://kubevela.io/docs/tutorials/access-application", "title": "Access Application", "description": "This page covers various methods to publish your service after deploying an application using KubeVela, focusing on production environments.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:01:34", "type": "best_practices", "page_metadata": {"generator": "Docusaurus v2.4.3", "docusaurus_locale": "en", "docsearch:language": "en", "ogTitle": "Access Application | KubeVela", "og:description": "After deploying the application, the next station is publishing your service.", "og:url": "https://kubevela.io/docs/tutorials/access-application/", "docsearch:docusaurus_tag": "docs-default-v1.10", "viewport": "width=device-width, initial-scale=1.0", "language": "en", "docsearch:version": "v1.10", "og:title": "Access Application | KubeVela", "title": "Access Application | KubeVela", "ogUrl": "https://kubevela.io/docs/tutorials/access-application/", "twitter:card": "summary_large_image", "docusaurus_version": "v1.10", "theme-color": "#ffffff", "description": "After deploying the application, the next station is publishing your service.", "msapplication-config": "/img/favicons/browserconfig.xml", "docusaurus_tag": "docs-default-v1.10", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogDescription": "After deploying the application, the next station is publishing your service.", "scrapeId": "bde0ba40-a00e-4865-a5a6-f44bb868027a", "sourceURL": "https://kubevela.io/docs/tutorials/access-application", "url": "https://kubevela.io/docs/tutorials/access-application/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"Pyroscope Addon for KubeVela\"?\n\nAssistant: This page provides information on how to install and use the Pyroscope addon for KubeVela, including code examples for various programming languages.\n\nHere's a detailed explanation:\n\n\n## install\n```codeBlockLines_e6Vv\nvela addon enable pyroscope\n```After enable pyroscope successfully, you can execute command to expose the port `4040` for Dashboard UI.\n```codeBlockLines_e6Vv\nvela port-forward addon-pyroscope -n vela-system\n```\n\n## How to use pyroscope trait\nUse a component typed webservice to start, keep the following to pyroscope-demo.yaml, then vela up -f app-demo.yaml\n```codeBlockLines_e6Vv\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: pyroscope-app\n  namespace: fourier\nspec:\n  components:\n    - name: pyroscope-comp-01\n      type: webservice\n      properties:\n        image: nginx:latest\n        ports:\n          - expose: true\n            port: 80\n            protocol: TCP\n        imagePullPolicy: IfNotPresent\n      traits:\n        - type: pyroscope\n          properties:\n            server: \"http://pyroscope-server:9084\"\n            logger: \"pyroscope.StandardLogger\"\n            appName: \"pyroscope-test\"\n        - type: scaler\n          properties:\n            replicas: 1\n```And the parameter `appName` is a optional field, default value is the component name.\n\n## How to use pyroscope client\n### Pyroscope for Golang applications\n- To start profiling a Go application, you need to include our go module in your app\n```codeBlockLines_e6Vv\n# make sure you also upgrade pyroscope server to version 0.3.1 or higher\ngo get github.com/pyroscope-io/client/pyroscope\n```\n- Then add the following code to your application:\n```codeBlockLines_e6Vv\npackage main\n\nimport \"github.com/pyroscope-io/client/pyroscope\"\n\nfunc main() {\n  pyroscope.Start(pyroscope.Config{\n    ApplicationName: \"simple.golang.app\",\n    // replace this with the address of pyroscope server\n    ServerAddress:   \"http://pyroscope-server:4040\",\n    // you can disable logging by setting this to nil\n    Logger:          pyroscope.StandardLogger,\n\n    // optionally, if authentication is enabled, specify the API key:\n    // AuthToken: os.Getenv(\"PYROSCOPE_AUTH_TOKEN\"),\n\n    // by default all profilers are enabled, but you can select the ones you want to use:\n    ProfileTypes: []pyroscope.ProfileType{\n      pyroscope.ProfileCPU,\n      pyroscope.ProfileAllocObjects,\n      pyroscope.ProfileAllocSpace,\n      pyroscope.ProfileInuseObjects,\n      pyroscope.ProfileInuseSpace,\n    },\n  })\n\n  // your code goes here\n}\n```\n- Check out the [examples](https://github.com/pyroscope-io/pyroscope/tree/main/examples/golang-push) directory in our repository to learn more\n\n### Pyroscope for Java applications\n- Java integration is distributed as a single jar file: pyroscope.jar. It contains native async-profiler libraries\n- To start profiling a Java application, run your application with pyroscope.jar javaagent:\n```codeBlockLines_e6Vv\nexport PYROSCOPE_APPLICATION_NAME=my.java.app\nexport PYROSCOPE_SERVER_ADDRESS=http://pyroscope-server:4040\n\n# Optionally, if authentication is enabled, specify the API key.\n# export PYROSCOPE_AUTH_TOKEN={YOUR_API_KEY}\n\njava -javaagent:pyroscope.jar -jar app.jar\n```\n- Check out the [examples](https://github.com/pyroscope-io/pyroscope/tree/main/examples/java) folder in our repository to learn more\n\n### Pyroscope for .net applications\n- To start profiling a .NET application inside a container, you may wrap your application with pyroscope exec as an entrypoint of your image. The tricky part is that you need to copy pyroscope binary to your docker container. To do that, use COPY --from command in your Dockerfile.\nThe following example Dockerfile shows how to build the image:\n```codeBlockLines_e6Vv\nFROM mcr.microsoft.com/dotnet/sdk:5.0\n\nWORKDIR /dotnet\n\nCOPY --from=pyroscope/pyroscope:latest /usr/bin/pyroscope /usr/bin/pyroscope\nADD my-app .\nRUN dotnet publish -o . -r $(dotnet --info | grep RID | cut -b 6- | tr -d ' ')\n\n# optionally you may set the pyroscope server address as well as the app name and other configuration options.\nENV PYROSCOPE_SERVER_ADDRESS=http://pyroscope-server:4040\nENV PYROSCOPE_APPLICATION_NAME=my.dotnet.app\nENV PYROSCOPE_LOG_LEVEL=debug\n\nCMD [\"pyroscope\", \"exec\", \"dotnet\", \"/dotnet/my-app.dll\"]\n```\n- If you are using Docker Compose, you can run both pyroscope server and agent with this configuration:\n```codeBlockLines_e6Vv\n---\nversion: \"3.9\"\nservices:\n  pyroscope-server:\n    image: \"pyroscope/pyroscope:latest\"\n    ports:\n      - \"4040:4040\"\n    command:\n      - \"server\"\n  app:\n    image: \"my-app:latest\"\n    environment:\n      PYROSCOPE_APPLICATION_NAME: my.dotnet.app\n      PYROSCOPE_SERVER_ADDRESS: http://pyroscope-server:4040\n      PYROSCOPE_LOG_LEVEL: debug\n      ASPNETCORE_URLS: http://*:5000\n    ports:\n      - \"5000:5000\"\n    cap_add:\n      - SYS_PTRACE\n```\n- Check out the [examples](https://github.com/pyroscope-io/pyroscope/tree/main/examples/dotnet) folder in our repository to learn more\n\n### Pyroscope for Python applications\n- First, install pyroscope-io pip package:\n```codeBlockLines_e6Vv\npip install pyroscope-io\n```\n- Add the following code to your application. This code will initialize pyroscope profiler and start profiling:\n```codeBlockLines_e6Vv\nimport pyroscope\n\npyroscope.configure(\n  app_name       = \"my.python.app\", # replace this with some name for your application\n  server_address = \"http://my-pyroscope-server:4040\", # replace this with the address of your pyroscope server\n# auth_token     = \"{YOUR_API_KEY}\", # optionally, if authentication is enabled, specify the API key\n)\n```\n- Check out the [example python project in pyroscope repository](https://github.com/pyroscope-io/pyroscope/tree/main/examples/python) for examples of how you can use these features.\n\n### Pyroscope for PHP applications\n- To start profiling a PHP application in a container, you may wrap your application with pyroscope exec as an entrypoint of your image. The tricky part is that you need to copy pyroscope binary to your docker container. To do that, use COPY --from command in your Dockerfile.\nThe following example Dockerfile shows how to build the image:\n```codeBlockLines_e6Vv\nFROM php:7.3.27\n\nWORKDIR /var/www/html\n\n# this copies pyroscope binary from pyroscope image to your image:\nCOPY --from=pyroscope/pyroscope:latest /usr/bin/pyroscope /usr/bin/pyroscope\nCOPY main.php ./main.php\n\n# optionally you may set the pyroscope server address as well as the app name, make sure you change these:\nENV PYROSCOPE_APPLICATION_NAME=my.php.app\nENV PYROSCOPE_SERVER_ADDRESS=http://pyroscope:4040/\n\n# this starts your app with pyroscope profiler, make sure to change \"php\" and \"main.php\" to the actual command.\nCMD [\"pyroscope\", \"exec\", \"php\", \"main.php\"]\n```\n- If you are using Docker Compose, you can run both pyroscope server and agent with this configuration:\n```codeBlockLines_e6Vv\n---\nservices:\n  pyroscope-server:\n    image: \"pyroscope/pyroscope:latest\"\n    ports:\n      - \"4040:4040\"\n    command:\n      - \"server\"\n  app:\n    image: \"my-app:latest\"\n    env:\n      PYROSCOPE_SERVER_ADDRESS: http://pyroscope-server:4040\n      PYROSCOPE_APPLICATION_NAME: my.php.app\n    cap_add:\n      - SYS_PTRACE\n```\n- Check out the [examples](https://github.com/pyroscope-io/pyroscope/tree/main/examples/php) folder in our repository to learn more\n\n### Pyroscope for NodeJS applications\n- To start profiling a NodeJS application, you need to include the npm module in your app:\n```codeBlockLines_e6Vv\nnpm install @pyroscope/nodejs\n\n# or\nyarn add @pyroscope/nodejs\n```\n- Then add the following code to your application:\n```codeBlockLines_e6Vv\nconst Pyroscope = require('@pyroscope/nodejs');\n\nPyroscope.init({\n  serverAddress: 'http://pyroscope:4040',\n  appName: 'myNodeService'\n});\n\nPyroscope.start()\n```\n- Check out the [examples](https://github.com/pyroscope-io/pyroscope/tree/main/examples/nodejs) directory in our repository to learn more.\n\n## uninstall\n```codeBlockLines_e6Vv\nvela addon disable pyroscope\n```\n", "metadata": {"source_url": "https://kubevela.io/docs/reference/addons/pyroscope", "title": "Pyroscope Addon for KubeVela", "description": "This page provides information on how to install and use the Pyroscope addon for KubeVela, including code examples for various programming languages.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 15:03:16", "type": "overview", "page_metadata": {"docusaurus_tag": "docs-default-v1.10", "twitter:card": "summary_large_image", "theme-color": "#ffffff", "ogTitle": "Pyroscope | KubeVela", "docusaurus_locale": "en", "docusaurus_version": "v1.10", "og:description": "Pyroscope is an open source platform, consisting of server and agent. It allows the user to collect, store, and query the profiling data in a CPU and disk efficient way.", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:title": "Pyroscope | KubeVela", "title": "Pyroscope | KubeVela", "description": "Pyroscope is an open source platform, consisting of server and agent. It allows the user to collect, store, and query the profiling data in a CPU and disk efficient way.", "viewport": "width=device-width, initial-scale=1.0", "og:url": "https://kubevela.io/docs/reference/addons/pyroscope/", "msapplication-config": "/img/favicons/browserconfig.xml", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogUrl": "https://kubevela.io/docs/reference/addons/pyroscope/", "docsearch:language": "en", "ogDescription": "Pyroscope is an open source platform, consisting of server and agent. It allows the user to collect, store, and query the profiling data in a CPU and disk efficient way.", "language": "en", "docsearch:version": "v1.10", "generator": "Docusaurus v2.4.3", "scrapeId": "4986a143-50d3-4bee-9fd0-829344610792", "sourceURL": "https://kubevela.io/docs/reference/addons/pyroscope", "url": "https://kubevela.io/docs/reference/addons/pyroscope/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"Pyroscope Addon for KubeVela\"?\n\nAssistant: Here are some code examples:\n\n### Install Pyroscope Addon\n```yaml\nvela addon enable pyroscope\n```\n\n### Expose Port for Dashboard UI\n```yaml\nvela port-forward addon-pyroscope -n vela-system\n```\n\n### Pyroscope Application YAML Example\n```yaml\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: pyroscope-app\n  namespace: fourier\nspec:\n  components:\n    - name: pyroscope-comp-01\n      type: webservice\n      properties:\n        image: nginx:latest\n        ports:\n          - expose: true\n            port: 80\n            protocol: TCP\n        imagePullPolicy: IfNotPresent\n      traits:\n        - type: pyroscope\n          properties:\n            server: \"http://pyroscope-server:9084\"\n            logger: \"pyroscope.StandardLogger\"\n            appName: \"pyroscope-test\"\n        - type: scaler\n          properties:\n            replicas: 1\n```\n\n### Golang Application Profiling Code\n```yaml\npackage main\n\nimport \"github.com/pyroscope-io/client/pyroscope\"\n\nfunc main() {\n  pyroscope.Start(pyroscope.Config{\n    ApplicationName: \"simple.golang.app\",\n    ServerAddress:   \"http://pyroscope-server:4040\",\n    Logger:          pyroscope.StandardLogger,\n    ProfileTypes: []pyroscope.ProfileType{\n      pyroscope.ProfileCPU,\n      pyroscope.ProfileAllocObjects,\n      pyroscope.ProfileAllocSpace,\n      pyroscope.ProfileInuseObjects,\n      pyroscope.ProfileInuseSpace,\n    },\n  })\n}\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/reference/addons/pyroscope", "title": "Pyroscope Addon for KubeVela", "description": "This page provides information on how to install and use the Pyroscope addon for KubeVela, including code examples for various programming languages.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 15:03:16", "type": "code_examples", "page_metadata": {"docusaurus_tag": "docs-default-v1.10", "twitter:card": "summary_large_image", "theme-color": "#ffffff", "ogTitle": "Pyroscope | KubeVela", "docusaurus_locale": "en", "docusaurus_version": "v1.10", "og:description": "Pyroscope is an open source platform, consisting of server and agent. It allows the user to collect, store, and query the profiling data in a CPU and disk efficient way.", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:title": "Pyroscope | KubeVela", "title": "Pyroscope | KubeVela", "description": "Pyroscope is an open source platform, consisting of server and agent. It allows the user to collect, store, and query the profiling data in a CPU and disk efficient way.", "viewport": "width=device-width, initial-scale=1.0", "og:url": "https://kubevela.io/docs/reference/addons/pyroscope/", "msapplication-config": "/img/favicons/browserconfig.xml", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogUrl": "https://kubevela.io/docs/reference/addons/pyroscope/", "docsearch:language": "en", "ogDescription": "Pyroscope is an open source platform, consisting of server and agent. It allows the user to collect, store, and query the profiling data in a CPU and disk efficient way.", "language": "en", "docsearch:version": "v1.10", "generator": "Docusaurus v2.4.3", "scrapeId": "4986a143-50d3-4bee-9fd0-829344610792", "sourceURL": "https://kubevela.io/docs/reference/addons/pyroscope", "url": "https://kubevela.io/docs/reference/addons/pyroscope/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"Pyroscope Addon for KubeVela\"?\n\nAssistant: Here are the recommended best practices:\n\n• The parameter `appName` is optional and defaults to the component name.\n• Make sure to upgrade the Pyroscope server to version 0.3.1 or higher for Golang applications.\n• For Java applications, ensure to run with the pyroscope.jar javaagent.\n• When using Docker, copy the pyroscope binary to your container for .NET and PHP applications.\n", "metadata": {"source_url": "https://kubevela.io/docs/reference/addons/pyroscope", "title": "Pyroscope Addon for KubeVela", "description": "This page provides information on how to install and use the Pyroscope addon for KubeVela, including code examples for various programming languages.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 15:03:16", "type": "best_practices", "page_metadata": {"docusaurus_tag": "docs-default-v1.10", "twitter:card": "summary_large_image", "theme-color": "#ffffff", "ogTitle": "Pyroscope | KubeVela", "docusaurus_locale": "en", "docusaurus_version": "v1.10", "og:description": "Pyroscope is an open source platform, consisting of server and agent. It allows the user to collect, store, and query the profiling data in a CPU and disk efficient way.", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:title": "Pyroscope | KubeVela", "title": "Pyroscope | KubeVela", "description": "Pyroscope is an open source platform, consisting of server and agent. It allows the user to collect, store, and query the profiling data in a CPU and disk efficient way.", "viewport": "width=device-width, initial-scale=1.0", "og:url": "https://kubevela.io/docs/reference/addons/pyroscope/", "msapplication-config": "/img/favicons/browserconfig.xml", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogUrl": "https://kubevela.io/docs/reference/addons/pyroscope/", "docsearch:language": "en", "ogDescription": "Pyroscope is an open source platform, consisting of server and agent. It allows the user to collect, store, and query the profiling data in a CPU and disk efficient way.", "language": "en", "docsearch:version": "v1.10", "generator": "Docusaurus v2.4.3", "scrapeId": "4986a143-50d3-4bee-9fd0-829344610792", "sourceURL": "https://kubevela.io/docs/reference/addons/pyroscope", "url": "https://kubevela.io/docs/reference/addons/pyroscope/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"ChartMuseum\"?\n\nAssistant: ChartMuseum is an open-source Helm Chart Repository server written in Go (Golang), with support for cloud storage backends.\n\nHere's a detailed explanation:\n\n\n## ChartMuseum\nChartMuseum is an open-source Helm Chart Repository server written in Go (Golang), with support for cloud storage backends, including Google Cloud Storage, Amazon S3, Microsoft Azure Blob Storage, Alibaba Cloud OSS Storage, Openstack Object Storage, Oracle Cloud Infrastructure Object Storage, Baidu Cloud BOS Storage, Tencent Cloud Object Storage, Netease Cloud NOS Storage, DigitalOcean Spaces, Minio, and etcd. In addition to using ChartMuseum as your regular Helm Chart registry, you can also store your custom KubeVela addons in it.\n\n## Quick Start\n### Use ChartMuseum as an addon registry\n\n```bash\n$ vela addon enable chartmuseum\n```\n\nTo customize addon parameters, either:\n- use VelaUX and fill out the form when enabling addon\n- or check out what parameters are available using `vela addon status chartmuseum -v`, and specify it using `vela addon enable chartmuseum externalPort=80`\n\nThis tutorial will assume you used the default parameters.\n\nAfter successfully enabling the addon, we need to make sure ChartMuseum is accessible to you by forwarding the default port (8080):\n\n```bash\nvela port-forward -n vela-system addon-chartmuseum 8080:8080 --address 0.0.0.0\n```\n\nTypically, you would configure ingress (achievable using addon parameters) to make the addon accessible to the outside.\n\nUse your newly created ChartMuseum repository (or any other Helm Chart repository) as an addon registry. We will name it `localcm`:\n\n```bash\n$ vela addon registry add localcm --type helm --endpoint=http://localhost:8080\n# If username and password is required, you can specify them with --username and --password\n```\n\nYou should see it in the list now:\n\n```bash\n$ vela addon registry list\nName        Type    URL\n...\nlocalcm     helm    http://localhost:8080\n```\n\n## Push an addon to your registry\nPrepare your addon. We will create a new one named `sample-addon` here:\n\n```bash\n$ vela addon init sample-addon\n# A conventional addon directory will be created\n# ./sample-addon\n# ├── definitions\n# ├── metadata.yaml\n# ├── readme.md\n# ├── resources\n# ├── schemas\n# └── template.yaml\n```\n\n(Optional) Package your addon:\n\n```bash\n$ vela addon package sample-addon\n# You should see a package named sample-addon-1.0.0.tgz\n```\n\nPush your addon ( `sample-addon`) to the registry ( `localcm`) that you just added:\n\n```bash\n# Notice how we automatically package the addon for you.\n$ vela addon push sample-addon localcm\nPushing sample-addon-1.0.0.tgz to localcm(http://localhost:8080)... Done\n# If you packaged it yourself, just replace `sample-addon` with `sample-addon-1.0.0.tgz\n\n# In addition to registry names (localcm, as we saw earlier), URLs are also supported.\n# If you use URLs, you don't even have to add it as an addon registry.\n$ vela addon push sample-addon-1.0.0.tgz http://localhost:8080 -f\nPushing sample-addon-1.0.0.tgz to http://localhost:8080... Done\n# Notice the `-f` option.\n# This is because we already pushed the exact same addon to the same registry earlier.\n# We need to use `-f` to overwrite it.\n```\n\nYour addon is available in the registry now!\n\n```bash\n$ vela addon list\nNAME          REGISTRY   DESCRIPTION             AVAILABLE-VERSIONS  STATUS\n...\nsample-addon  localcm    An addon for KubeVela.  [1.0.0]             disabled\n```\n\n## Usages\n### Authentication\n\nWarning: to prevent anonymous uploads, do any of the following:\n- set `disableAPI` to `true`\n- enable authentication\n\nBy default this addon does not have any authentication configured and allows anyone to fetch or upload charts (unless the API is disabled with `disableAPI`).\n\nTo enable Basic Auth to protect APIs, configure `basicAuth` parameters:\n\n```yaml\n// +usage=Basic auth settings\nbasicAuth: {\n    // +usage=Username for basic http authentication\n    username: \"user\"\n    // +usage=Password for basic http authentication\n    password: \"pswd\"\n}\n```\n\n### Using with local filesystem storage\n\nBy default ChartMuseum uses local filesystem storage. But on pod recreation it will lose all charts, to prevent that, enable persistent storage.\n\n```yaml\nenablePersistence: true\npersistentSize:    \"8Gi\"\n```\n\n### Using with Alibaba Cloud OSS Storage\n\nMake sure your environment is properly setup to access `my-oss-bucket`.\n\nTo do so, you must set the following parameters:\n- `accessKeyID`\n- `accessKeySecret`\n\n```yaml\n// +usage=Storage backend, can be one of: local(default), alibaba, amazon, google, microsoft\nstorage: \"alibaba\"\n// +usage=Alibaba Cloud storage backend settings\nalibaba: {\n    // +usage=OSS bucket to store charts for alibaba storage backend, e.g. my-oss-bucket\n    bucket: \"my-oss-bucket\"\n    // +usage=OSS endpoint to store charts for alibaba storage backend, e.g. oss-cn-beijing.aliyuncs.com\n    endpoint: \"oss-cn-beijing.aliyuncs.com\"\n    // +usage=Alibaba OSS access key id\n    accessKeyID: \"accessKeyID\"\n    // +usage=Alibaba OSS access key secret\n    accessKeySecret: \"accessKeySecret\"\n}\n```\n\n### Using with Microsoft Azure Blob Storage\n\nMake sure your environment is properly setup to access `mycontainer`.\n\nTo do so, you must set the following parameters:\n- `account`\n- `accessKey`\n\nSpecify `custom.yaml` with such values\n\n```yaml\n// +usage=Storage backend, can be one of: local(default), alibaba, amazon, google, microsoft\nstorage: \"microsoft\"\n// +usage=Microsoft Azure storage backend settings\nmicrosoft: {\n    // +usage=Container to store charts for microsoft storage backend\n    container: \"mycontainer\"\n    // +usage=Azure storage account\n    account: \"account\"\n    // +usage=Azure storage account access key\n    accessKey: \"key\"\n}\n```\n\n### Using with Google Cloud Storage and a Google Service Account\n\n```yaml\n// +usage=Storage backend, can be one of: local(default), alibaba, amazon, google, microsoft\nstorage: \"google\"\n// +usage=GCP storage backend settings\ngoogle: {\n    // +usage=GCS bucket to store charts for google storage backend, e.g. my-gcs-bucket\n    bucket: \"my-gcs-bucket\"\n    // +usage=GCP service account json file\n    googleCredentialsJSON: \"json\"\n}\n```\n\n### Using with Amazon S3\n\nMake sure your environment is properly setup to access `my-s3-bucket`\n\nYou need at least the following permissions inside your IAM Policy\n\n```json\n{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"AllowListObjects\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"s3:ListBucket\"\n      ],\n      \"Resource\": \"arn:aws:s3:::my-s3-bucket\"\n    },\n    {\n      \"Sid\": \"AllowObjectsCRUD\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"s3:DeleteObject\",\n        \"s3:GetObject\",\n        \"s3:PutObject\"\n      ],\n      \"Resource\": \"arn:aws:s3:::my-s3-bucket/*\"\n    }\n  ]\n}\n```\n\n#### permissions grant with access keys\n\nGrant permissions to `special user` and use its access keys for auth on aws\n\n```yaml\n// +usage=Storage backend, can be one of: local(default), alibaba, amazon, google, microsoft\nstorage: \"amazon\"\n// +usage=AWS storage backend settings\namazon: {\n    // +usage=S3 bucket to store charts for amazon storage backend, e.g. my-s3-bucket\n    bucket: \"my-s3-bucket\"\n    // +usage=Region of s3 bucket to store charts, e.g. us-east-1\n    region: \"us-east-1\"\n    // +usage=AWS access key id\n    accessKeyID: \"keyid\"\n    // +usage=AWS access key secret\n    accessKeySecret: \"secret\"\n}\n```\n", "metadata": {"source_url": "https://kubevela.io/docs/reference/addons/chartmuseum", "title": "ChartMuseum", "description": "ChartMuseum is an open-source Helm Chart Repository server written in Go (Golang), with support for cloud storage backends.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 15:04:54", "type": "overview", "page_metadata": {"theme-color": "#ffffff", "viewport": "width=device-width, initial-scale=1.0", "docsearch:version": "v1.10", "language": "en", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:description": "ChartMuseum is an open-source Helm Chart Repository server written in Go (Golang), with support for cloud storage backends, including Google Cloud Storage, Amazon S3, Microsoft Azure Blob Storage, Alibaba Cloud OSS Storage, Openstack Object Storage, Oracle Cloud Infrastructure Object Storage, Baidu Cloud BOS Storage, Tencent Cloud Object Storage, Netease Cloud NOS Storage, DigitalOcean Spaces, Minio, and etcd.", "docusaurus_version": "v1.10", "ogUrl": "https://kubevela.io/docs/reference/addons/chartmuseum/", "og:url": "https://kubevela.io/docs/reference/addons/chartmuseum/", "generator": "Docusaurus v2.4.3", "msapplication-config": "/img/favicons/browserconfig.xml", "ogTitle": "ChartMuseum | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_locale": "en", "docusaurus_tag": "docs-default-v1.10", "docsearch:language": "en", "ogDescription": "ChartMuseum is an open-source Helm Chart Repository server written in Go (Golang), with support for cloud storage backends, including Google Cloud Storage, Amazon S3, Microsoft Azure Blob Storage, Alibaba Cloud OSS Storage, Openstack Object Storage, Oracle Cloud Infrastructure Object Storage, Baidu Cloud BOS Storage, Tencent Cloud Object Storage, Netease Cloud NOS Storage, DigitalOcean Spaces, Minio, and etcd.", "description": "ChartMuseum is an open-source Helm Chart Repository server written in Go (Golang), with support for cloud storage backends, including Google Cloud Storage, Amazon S3, Microsoft Azure Blob Storage, Alibaba Cloud OSS Storage, Openstack Object Storage, Oracle Cloud Infrastructure Object Storage, Baidu Cloud BOS Storage, Tencent Cloud Object Storage, Netease Cloud NOS Storage, DigitalOcean Spaces, Minio, and etcd.", "title": "ChartMuseum | KubeVela", "twitter:card": "summary_large_image", "og:title": "ChartMuseum | KubeVela", "scrapeId": "49016487-8b25-4919-95a6-23a3517edbf8", "sourceURL": "https://kubevela.io/docs/reference/addons/chartmuseum", "url": "https://kubevela.io/docs/reference/addons/chartmuseum/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"ChartMuseum\"?\n\nAssistant: Here are some code examples:\n\n### Enable ChartMuseum addon\n```yaml\n$ vela addon enable chartmuseum\n```\n\n### Port forward to ChartMuseum\n```yaml\nvela port-forward -n vela-system addon-chartmuseum 8080:8080 --address 0.0.0.0\n```\n\n### Add localcm registry\n```yaml\n$ vela addon registry add localcm --type helm --endpoint=http://localhost:8080\n```\n\n### List registries\n```yaml\n$ vela addon registry list\n```\n\n### Initialize sample-addon\n```yaml\n$ vela addon init sample-addon\n```\n\n### Package sample-addon\n```yaml\n$ vela addon package sample-addon\n```\n\n### Push sample-addon to localcm\n```yaml\n$ vela addon push sample-addon localcm\n```\n\n### List addons\n```yaml\n$ vela addon list\n```\n\n### Basic Auth settings\n```yaml\nbasicAuth: {\n    username: \"user\"\n    password: \"pswd\"\n}\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/reference/addons/chartmuseum", "title": "ChartMuseum", "description": "ChartMuseum is an open-source Helm Chart Repository server written in Go (Golang), with support for cloud storage backends.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 15:04:54", "type": "code_examples", "page_metadata": {"theme-color": "#ffffff", "viewport": "width=device-width, initial-scale=1.0", "docsearch:version": "v1.10", "language": "en", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:description": "ChartMuseum is an open-source Helm Chart Repository server written in Go (Golang), with support for cloud storage backends, including Google Cloud Storage, Amazon S3, Microsoft Azure Blob Storage, Alibaba Cloud OSS Storage, Openstack Object Storage, Oracle Cloud Infrastructure Object Storage, Baidu Cloud BOS Storage, Tencent Cloud Object Storage, Netease Cloud NOS Storage, DigitalOcean Spaces, Minio, and etcd.", "docusaurus_version": "v1.10", "ogUrl": "https://kubevela.io/docs/reference/addons/chartmuseum/", "og:url": "https://kubevela.io/docs/reference/addons/chartmuseum/", "generator": "Docusaurus v2.4.3", "msapplication-config": "/img/favicons/browserconfig.xml", "ogTitle": "ChartMuseum | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_locale": "en", "docusaurus_tag": "docs-default-v1.10", "docsearch:language": "en", "ogDescription": "ChartMuseum is an open-source Helm Chart Repository server written in Go (Golang), with support for cloud storage backends, including Google Cloud Storage, Amazon S3, Microsoft Azure Blob Storage, Alibaba Cloud OSS Storage, Openstack Object Storage, Oracle Cloud Infrastructure Object Storage, Baidu Cloud BOS Storage, Tencent Cloud Object Storage, Netease Cloud NOS Storage, DigitalOcean Spaces, Minio, and etcd.", "description": "ChartMuseum is an open-source Helm Chart Repository server written in Go (Golang), with support for cloud storage backends, including Google Cloud Storage, Amazon S3, Microsoft Azure Blob Storage, Alibaba Cloud OSS Storage, Openstack Object Storage, Oracle Cloud Infrastructure Object Storage, Baidu Cloud BOS Storage, Tencent Cloud Object Storage, Netease Cloud NOS Storage, DigitalOcean Spaces, Minio, and etcd.", "title": "ChartMuseum | KubeVela", "twitter:card": "summary_large_image", "og:title": "ChartMuseum | KubeVela", "scrapeId": "49016487-8b25-4919-95a6-23a3517edbf8", "sourceURL": "https://kubevela.io/docs/reference/addons/chartmuseum", "url": "https://kubevela.io/docs/reference/addons/chartmuseum/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"ChartMuseum\"?\n\nAssistant: Here are the recommended best practices:\n\n• To customize addon parameters, use VelaUX or check available parameters using `vela addon status chartmuseum -v`.\n• To prevent anonymous uploads, set `disableAPI` to `true` or enable authentication.\n• Enable persistent storage to prevent loss of charts on pod recreation.\n", "metadata": {"source_url": "https://kubevela.io/docs/reference/addons/chartmuseum", "title": "ChartMuseum", "description": "ChartMuseum is an open-source Helm Chart Repository server written in Go (Golang), with support for cloud storage backends.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 15:04:54", "type": "best_practices", "page_metadata": {"theme-color": "#ffffff", "viewport": "width=device-width, initial-scale=1.0", "docsearch:version": "v1.10", "language": "en", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:description": "ChartMuseum is an open-source Helm Chart Repository server written in Go (Golang), with support for cloud storage backends, including Google Cloud Storage, Amazon S3, Microsoft Azure Blob Storage, Alibaba Cloud OSS Storage, Openstack Object Storage, Oracle Cloud Infrastructure Object Storage, Baidu Cloud BOS Storage, Tencent Cloud Object Storage, Netease Cloud NOS Storage, DigitalOcean Spaces, Minio, and etcd.", "docusaurus_version": "v1.10", "ogUrl": "https://kubevela.io/docs/reference/addons/chartmuseum/", "og:url": "https://kubevela.io/docs/reference/addons/chartmuseum/", "generator": "Docusaurus v2.4.3", "msapplication-config": "/img/favicons/browserconfig.xml", "ogTitle": "ChartMuseum | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_locale": "en", "docusaurus_tag": "docs-default-v1.10", "docsearch:language": "en", "ogDescription": "ChartMuseum is an open-source Helm Chart Repository server written in Go (Golang), with support for cloud storage backends, including Google Cloud Storage, Amazon S3, Microsoft Azure Blob Storage, Alibaba Cloud OSS Storage, Openstack Object Storage, Oracle Cloud Infrastructure Object Storage, Baidu Cloud BOS Storage, Tencent Cloud Object Storage, Netease Cloud NOS Storage, DigitalOcean Spaces, Minio, and etcd.", "description": "ChartMuseum is an open-source Helm Chart Repository server written in Go (Golang), with support for cloud storage backends, including Google Cloud Storage, Amazon S3, Microsoft Azure Blob Storage, Alibaba Cloud OSS Storage, Openstack Object Storage, Oracle Cloud Infrastructure Object Storage, Baidu Cloud BOS Storage, Tencent Cloud Object Storage, Netease Cloud NOS Storage, DigitalOcean Spaces, Minio, and etcd.", "title": "ChartMuseum | KubeVela", "twitter:card": "summary_large_image", "og:title": "ChartMuseum | KubeVela", "scrapeId": "49016487-8b25-4919-95a6-23a3517edbf8", "sourceURL": "https://kubevela.io/docs/reference/addons/chartmuseum", "url": "https://kubevela.io/docs/reference/addons/chartmuseum/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela Code Conventions\"?\n\nAssistant: This page outlines the code conventions for various types of code related to the KubeVela project, including Go, Bash, API, Testing, Directory and File, and Logging conventions.\n\nHere's a detailed explanation:\n\n\n## Go Code Conventions\n- [Go Code Review Comments](https://github.com/golang/go/wiki/CodeReviewComments)\n\n- [Effective Go](https://golang.org/doc/effective_go.html)\n\n- Know and avoid [Go landmines](https://gist.github.com/lavalamp/4bd23295a9f32706a48f)\n\n- Comment your code.\n\n  - [Go's commenting conventions](https://go.dev/blog/godoc)\n  - If reviewers ask questions about why the code is the way it is, that's a sign that comments might be helpful.\n- Command-line flags should use dashes, not underscores\n\n- API\n\n  - According to RFC3986, URLs are \"case sensitive\". KubeVela uses snake_case for API URLs.\n    - e.g.: `POST /v1/cloud_clusters`\n- Naming\n\n  - Please consider package name when selecting an interface name, and avoid redundancy.\n\n    - e.g.: `storage.Interface` is better than `storage.StorageInterface`.\n  - Do not use uppercase characters, underscores, or dashes in package names.\n\n  - Please consider parent directory name when choosing a package name.\n\n    - so pkg/controllers/autoscaler/foo.go should say `package autoscaler`\n      not `package autoscalercontroller`.\n    - Unless there's a good reason, the `package foo` line should match\n      the name of the directory in which the .go file exists.\n    - Importers can use a different name if they need to disambiguate.\n  - Locks should be called `lock` and should never be embedded (always `lock sync.Mutex`). When multiple locks are present, give each lock a distinct name following Go conventions - `stateLock`, `mapLock` etc.\n\n## Bash or Script Conventions\n- [https://google.github.io/styleguide/shell.xml](https://google.github.io/styleguide/shell.xml)\n\n- Ensure that build, release, test, and cluster-management scripts run on macOS\n\n## API Conventions\n- KubeVela follows the Kubernetes conventions\n\n  - [API changes](https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api_changes.md)\n\n  - [API conventions](https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md)\n\n## Testing Conventions\n- All new packages and most new significant functionality must come with unit tests\n\n- Table-driven tests are preferred for testing multiple scenarios/inputs; for example, see [TestNamespaceAuthorization](https://git.k8s.io/kubernetes/test/integration/auth/auth_test.go)\n\n- Unit tests must pass on macOS and Windows platforms - if you use Linux specific features, your test case must either be skipped on windows or compiled out (skipped is better when running Linux specific commands, compiled out is required when your code does not compile on Windows).\n\n- Avoid waiting for a short amount of time (or without waiting) and expect an asynchronous thing to happen (e.g. wait for 1 seconds and expect a Pod to be running). Wait and retry instead.\n\n- Significant features should come with integration (test/integration) and/or end-to-end (e2e/) tests.\n\n- Including new vela cli commands and major features of existing commands\n\nPlease refer to [the principle of test](https://kubevela.io/docs/contributor/principle-of-test/) for more details.\n\n## Directory and file Conventions\n- Avoid package sprawl. Find an appropriate subdirectory for new packages.\n\n  - Libraries with no more appropriate home belong in new package subdirectories of pkg/util\n- Avoid general utility packages. Packages called \"util\" are suspect. Instead, derive a name that describes your desired function. For example, the utility functions dealing with waiting for operations are in the \"wait\" package and include functionality like Poll. So the full name is wait.Poll\n\n- All filenames should be lowercase\n\n- Go source files and directories use underscores, not dashes\n\n  - Package directories should generally avoid using separators as much as possible (when packages are multiple words, they usually should be in nested subdirectories).\n- Document directories and filenames should use dashes rather than underscores\n\n- Contrived examples that illustrate system features belong in `/docs/user-guide` or `/docs/admin`, depending on whether it is a feature primarily intended for users that deploy applications or cluster administrators, respectively. Actual application examples belong in /examples.\n\n  - Examples should also illustrate [best practices for configuration and using the system](https://kubernetes.io/docs/concepts/configuration/overview/)\n- Third-party code\n\n  - Go code for normal third-party dependencies is managed using [go modules](https://github.com/golang/go/wiki/Modules)\n\n  - Other third-party code belongs in `/third_party`\n\n    - forked third party Go code goes in `/third_party/forked`\n    - forked _golang stdlib_ code goes in `/third_party/forked/golang`\n  - Third-party code must include licenses\n\n  - This includes modified third-party code and excerpts, as well.\n\n## Logging Conventions\n### Structured logging\n\nWe recommend using `klog.InfoS` to structure the log. The `msg` argument need start from a capital letter.\nand name arguments should always use lowerCamelCase.\n\n```go\n// func InfoS(msg string, keysAndValues ...interface{})\nklog.InfoS(\"Reconcile traitDefinition\", \"traitDefinition\", klog.KRef(req.Namespace, req.Name))\n// output:\n// I0605 10:10:57.308074   22276 traitdefinition_controller.go:59] \"Reconcile traitDefinition\" traitDefinition=\"vela-system/expose\"\n```\n\n### Use `klog.KObj` and `klog.KRef` for Kubernetes objects\n\n`klog.KObj` and `klog.KRef` can unify the output of kubernetes object.\n\n```go\n// KObj is used to create ObjectRef when logging information about Kubernetes objects\nklog.InfoS(\"Start to reconcile\", \"appDeployment\", klog.KObj(appDeployment))\n// KRef is used to create ObjectRef when logging information about Kubernetes objects without access to metav1.Object\nklog.InfoS(\"Reconcile application\", \"application\", klog.KRef(req.Namespace, req.Name))\n```\n\n### Logging Level\n\n[This file](https://github.com/kubevela/kubevela/blob/master/pkg/controller/common/logs.go) contains KubeVela's log level,\nyou can set the log level by `klog.V(level)`.\n\n```go\n// you can use klog.V(common.LogDebug) to print debug log\nklog.V(common.LogDebug).InfoS(\"Successfully applied components\", \"workloads\", len(workloads))\n```\n\nLooking for more details in [Structured Logging Guide](https://github.com/kubernetes/community/blob/master/contributors/devel/sig-instrumentation/migration-to-structured-logging.md#structured-logging-in-kubernetes).\n\n## Linting and formatting\nTo ensure consistency across the Go codebase, we require all code to pass a number of linter checks.\n\nTo run all linters, use the `reviewable` Makefile target:\n\n```bash\nmake reviewable\n```\n\nThe command will clean code along with some lint checks. Please remember to check in all changes after that.\n", "metadata": {"source_url": "https://kubevela.io/docs/contributor/code-conventions", "title": "KubeVela Code Conventions", "description": "This page outlines the code conventions for various types of code related to the KubeVela project, including Go, Bash, API, Testing, Directory and File, and Logging conventions.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-02-28 15:05:26", "type": "overview", "page_metadata": {"docusaurus_version": "v1.10", "docsearch:docusaurus_tag": "docs-default-v1.10", "description": "In this section, you will find the code conventions for all kinds of code KubeVela project related. It's not necessary to learn all of them at once, but make sure you have read corresponding parts before you start to code.", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "viewport": "width=device-width, initial-scale=1.0", "og:description": "In this section, you will find the code conventions for all kinds of code KubeVela project related. It's not necessary to learn all of them at once, but make sure you have read corresponding parts before you start to code.", "docusaurus_locale": "en", "docsearch:version": "v1.10", "ogUrl": "https://kubevela.io/docs/contributor/code-conventions/", "theme-color": "#ffffff", "twitter:card": "summary_large_image", "ogDescription": "In this section, you will find the code conventions for all kinds of code KubeVela project related. It's not necessary to learn all of them at once, but make sure you have read corresponding parts before you start to code.", "og:url": "https://kubevela.io/docs/contributor/code-conventions/", "og:title": "Code Conventions | KubeVela", "msapplication-config": "/img/favicons/browserconfig.xml", "language": "en", "generator": "Docusaurus v2.4.3", "docsearch:language": "en", "title": "Code Conventions | KubeVela", "docusaurus_tag": "docs-default-v1.10", "ogTitle": "Code Conventions | KubeVela", "scrapeId": "92aba039-3669-45e3-873b-7b30567e2c8e", "sourceURL": "https://kubevela.io/docs/contributor/code-conventions", "url": "https://kubevela.io/docs/contributor/code-conventions/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"KubeVela Code Conventions\"?\n\nAssistant: Here are some code examples:\n\n### Structured logging example\n```yaml\n// func InfoS(msg string, keysAndValues ...interface{})\nklog.InfoS(\"Reconcile traitDefinition\", \"traitDefinition\", klog.KRef(req.Namespace, req.Name))\n// output:\n// I0605 10:10:57.308074   22276 traitdefinition_controller.go:59] \"Reconcile traitDefinition\" traitDefinition=\"vela-system/expose\"\n```\n\n### Using klog.KObj and klog.KRef\n```yaml\n// KObj is used to create ObjectRef when logging information about Kubernetes objects\nklog.InfoS(\"Start to reconcile\", \"appDeployment\", klog.KObj(appDeployment))\n// KRef is used to create ObjectRef when logging information about Kubernetes objects without access to metav1.Object\nklog.InfoS(\"Reconcile application\", \"application\", klog.KRef(req.Namespace, req.Name))\n```\n\n### Logging Level example\n```yaml\n// you can use klog.V(common.LogDebug) to print debug log\nklog.V(common.LogDebug).InfoS(\"Successfully applied components\", \"workloads\", len(workloads))\n```\n\n### Linting and formatting command\n```yaml\nmake reviewable\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/contributor/code-conventions", "title": "KubeVela Code Conventions", "description": "This page outlines the code conventions for various types of code related to the KubeVela project, including Go, Bash, API, Testing, Directory and File, and Logging conventions.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-02-28 15:05:26", "type": "code_examples", "page_metadata": {"docusaurus_version": "v1.10", "docsearch:docusaurus_tag": "docs-default-v1.10", "description": "In this section, you will find the code conventions for all kinds of code KubeVela project related. It's not necessary to learn all of them at once, but make sure you have read corresponding parts before you start to code.", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "viewport": "width=device-width, initial-scale=1.0", "og:description": "In this section, you will find the code conventions for all kinds of code KubeVela project related. It's not necessary to learn all of them at once, but make sure you have read corresponding parts before you start to code.", "docusaurus_locale": "en", "docsearch:version": "v1.10", "ogUrl": "https://kubevela.io/docs/contributor/code-conventions/", "theme-color": "#ffffff", "twitter:card": "summary_large_image", "ogDescription": "In this section, you will find the code conventions for all kinds of code KubeVela project related. It's not necessary to learn all of them at once, but make sure you have read corresponding parts before you start to code.", "og:url": "https://kubevela.io/docs/contributor/code-conventions/", "og:title": "Code Conventions | KubeVela", "msapplication-config": "/img/favicons/browserconfig.xml", "language": "en", "generator": "Docusaurus v2.4.3", "docsearch:language": "en", "title": "Code Conventions | KubeVela", "docusaurus_tag": "docs-default-v1.10", "ogTitle": "Code Conventions | KubeVela", "scrapeId": "92aba039-3669-45e3-873b-7b30567e2c8e", "sourceURL": "https://kubevela.io/docs/contributor/code-conventions", "url": "https://kubevela.io/docs/contributor/code-conventions/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela Code Conventions\"?\n\nAssistant: Here are the recommended best practices:\n\n• Comment your code to help reviewers understand your decisions.\n• Use dashes for command-line flags instead of underscores.\n• Avoid package sprawl by finding appropriate subdirectories for new packages.\n• Use lowerCamelCase for name arguments in structured logging.\n• Ensure all code passes linter checks before committing.\n", "metadata": {"source_url": "https://kubevela.io/docs/contributor/code-conventions", "title": "KubeVela Code Conventions", "description": "This page outlines the code conventions for various types of code related to the KubeVela project, including Go, Bash, API, Testing, Directory and File, and Logging conventions.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-02-28 15:05:26", "type": "best_practices", "page_metadata": {"docusaurus_version": "v1.10", "docsearch:docusaurus_tag": "docs-default-v1.10", "description": "In this section, you will find the code conventions for all kinds of code KubeVela project related. It's not necessary to learn all of them at once, but make sure you have read corresponding parts before you start to code.", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "viewport": "width=device-width, initial-scale=1.0", "og:description": "In this section, you will find the code conventions for all kinds of code KubeVela project related. It's not necessary to learn all of them at once, but make sure you have read corresponding parts before you start to code.", "docusaurus_locale": "en", "docsearch:version": "v1.10", "ogUrl": "https://kubevela.io/docs/contributor/code-conventions/", "theme-color": "#ffffff", "twitter:card": "summary_large_image", "ogDescription": "In this section, you will find the code conventions for all kinds of code KubeVela project related. It's not necessary to learn all of them at once, but make sure you have read corresponding parts before you start to code.", "og:url": "https://kubevela.io/docs/contributor/code-conventions/", "og:title": "Code Conventions | KubeVela", "msapplication-config": "/img/favicons/browserconfig.xml", "language": "en", "generator": "Docusaurus v2.4.3", "docsearch:language": "en", "title": "Code Conventions | KubeVela", "docusaurus_tag": "docs-default-v1.10", "ogTitle": "Code Conventions | KubeVela", "scrapeId": "92aba039-3669-45e3-873b-7b30567e2c8e", "sourceURL": "https://kubevela.io/docs/contributor/code-conventions", "url": "https://kubevela.io/docs/contributor/code-conventions/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"Export multi-cluster kubeconfig\"?\n\nAssistant: Export multi-cluster kubeconfig by loading existing cluster kubeconfig and listing clusters registered in KubeVela. It exports the proxy access of these clusters to KubeConfig and prints it out.\n\nHere's a detailed explanation:\n\n\n## Synopsis\nExport multi-cluster kubeconfig\n\nLoad existing cluster kubeconfig and list clusters registered in KubeVela. Export the proxy access of these clusters to KubeConfig and print it out.\n\n## Examples\n```shell\n  # Export all clusters to kubeconfig\n  vela cluster export-config\n\n  # Export clusters with specified kubeconfig\n  KUBECONFIG=./my-hub-cluster.kubeconfig vela cluster export-config\n\n  # Export clusters with specified labels\n  vela cluster export-config -l gpu-cluster=true\n\n  # Export clusters to kubeconfig and save in file\n  vela cluster export-config > my-vela.kubeconfig\n\n  # Use the exported kubeconfig in kubectl\n  KUBECONFIG=my-vela.kubeconfig kubectl get namespaces --cluster c2\n```\n\n## Options\n```shell\n  -h, --help              help for export-config\n  -l, --selector string   LabelSelector for select clusters to export.\n```\n\n## Options inherited from parent commands\n```shell\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n\n## SEE ALSO\n- [vela cluster](https://kubevela.io/docs/cli/vela_cluster/) - Manage Kubernetes clusters.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_cluster_export-config", "title": "Export multi-cluster kubeconfig", "description": "Export multi-cluster kubeconfig by loading existing cluster kubeconfig and listing clusters registered in KubeVela. It exports the proxy access of these clusters to KubeConfig and prints it out.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:05:38", "type": "overview", "page_metadata": {"docusaurus_version": "v1.10", "docsearch:version": "v1.10", "og:description": "Export multi-cluster kubeconfig.", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogTitle": "vela cluster export-config | KubeVela", "ogDescription": "Export multi-cluster kubeconfig.", "generator": "Docusaurus v2.4.3", "docsearch:language": "en", "twitter:card": "summary_large_image", "og:title": "vela cluster export-config | KubeVela", "description": "Export multi-cluster kubeconfig.", "og:url": "https://kubevela.io/docs/cli/vela_cluster_export-config/", "docsearch:docusaurus_tag": "docs-default-v1.10", "ogUrl": "https://kubevela.io/docs/cli/vela_cluster_export-config/", "viewport": "width=device-width, initial-scale=1.0", "docusaurus_tag": "docs-default-v1.10", "docusaurus_locale": "en", "language": "en", "theme-color": "#ffffff", "msapplication-config": "/img/favicons/browserconfig.xml", "title": "vela cluster export-config | KubeVela", "scrapeId": "8aeedd39-f1e6-455f-9676-c0281c1b6d2b", "sourceURL": "https://kubevela.io/docs/cli/vela_cluster_export-config", "url": "https://kubevela.io/docs/cli/vela_cluster_export-config/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"Export multi-cluster kubeconfig\"?\n\nAssistant: Here are some code examples:\n\n### Export all clusters to kubeconfig\n```yaml\nvela cluster export-config\n```\n\n### Export clusters with specified kubeconfig\n```yaml\nKUBECONFIG=./my-hub-cluster.kubeconfig vela cluster export-config\n```\n\n### Export clusters with specified labels\n```yaml\nvela cluster export-config -l gpu-cluster=true\n```\n\n### Export clusters to kubeconfig and save in file\n```yaml\nvela cluster export-config > my-vela.kubeconfig\n```\n\n### Use the exported kubeconfig in kubectl\n```yaml\nKUBECONFIG=my-vela.kubeconfig kubectl get namespaces --cluster c2\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_cluster_export-config", "title": "Export multi-cluster kubeconfig", "description": "Export multi-cluster kubeconfig by loading existing cluster kubeconfig and listing clusters registered in KubeVela. It exports the proxy access of these clusters to KubeConfig and prints it out.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:05:38", "type": "code_examples", "page_metadata": {"docusaurus_version": "v1.10", "docsearch:version": "v1.10", "og:description": "Export multi-cluster kubeconfig.", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogTitle": "vela cluster export-config | KubeVela", "ogDescription": "Export multi-cluster kubeconfig.", "generator": "Docusaurus v2.4.3", "docsearch:language": "en", "twitter:card": "summary_large_image", "og:title": "vela cluster export-config | KubeVela", "description": "Export multi-cluster kubeconfig.", "og:url": "https://kubevela.io/docs/cli/vela_cluster_export-config/", "docsearch:docusaurus_tag": "docs-default-v1.10", "ogUrl": "https://kubevela.io/docs/cli/vela_cluster_export-config/", "viewport": "width=device-width, initial-scale=1.0", "docusaurus_tag": "docs-default-v1.10", "docusaurus_locale": "en", "language": "en", "theme-color": "#ffffff", "msapplication-config": "/img/favicons/browserconfig.xml", "title": "vela cluster export-config | KubeVela", "scrapeId": "8aeedd39-f1e6-455f-9676-c0281c1b6d2b", "sourceURL": "https://kubevela.io/docs/cli/vela_cluster_export-config", "url": "https://kubevela.io/docs/cli/vela_cluster_export-config/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"Export multi-cluster kubeconfig\"?\n\nAssistant: Here are the recommended best practices:\n\n• Use the -l flag to filter clusters based on labels when exporting.\n• Always specify the KUBECONFIG environment variable if you want to use a specific kubeconfig file.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_cluster_export-config", "title": "Export multi-cluster kubeconfig", "description": "Export multi-cluster kubeconfig by loading existing cluster kubeconfig and listing clusters registered in KubeVela. It exports the proxy access of these clusters to KubeConfig and prints it out.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:05:38", "type": "best_practices", "page_metadata": {"docusaurus_version": "v1.10", "docsearch:version": "v1.10", "og:description": "Export multi-cluster kubeconfig.", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogTitle": "vela cluster export-config | KubeVela", "ogDescription": "Export multi-cluster kubeconfig.", "generator": "Docusaurus v2.4.3", "docsearch:language": "en", "twitter:card": "summary_large_image", "og:title": "vela cluster export-config | KubeVela", "description": "Export multi-cluster kubeconfig.", "og:url": "https://kubevela.io/docs/cli/vela_cluster_export-config/", "docsearch:docusaurus_tag": "docs-default-v1.10", "ogUrl": "https://kubevela.io/docs/cli/vela_cluster_export-config/", "viewport": "width=device-width, initial-scale=1.0", "docusaurus_tag": "docs-default-v1.10", "docusaurus_locale": "en", "language": "en", "theme-color": "#ffffff", "msapplication-config": "/img/favicons/browserconfig.xml", "title": "vela cluster export-config | KubeVela", "scrapeId": "8aeedd39-f1e6-455f-9676-c0281c1b6d2b", "sourceURL": "https://kubevela.io/docs/cli/vela_cluster_export-config", "url": "https://kubevela.io/docs/cli/vela_cluster_export-config/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"Vela Port Forward\"?\n\nAssistant: Forward local ports to container/service port of vela application.\n\nHere's a detailed explanation:\n\n\n## Synopsis\nForward local ports to container/service port of vela application.\n\n## Examples\nport-forward APP_NAME [options] [LOCAL_PORT:]REMOTE_PORT [...[LOCAL_PORT_N:]REMOTE_PORT_N]\n\n## Options\n      --address strings                Addresses to listen on (comma separated). Only accepts IP addresses or localhost as a value. When localhost is supplied, vela will try to bind on both 127.0.0.1 and ::1 and will fail if neither of these addresses are available to bind. (default [localhost])\n      --cluster string                 filter the pod by the cluster name\n  -c, --component string               filter the pod by the component name\n  -e, --env string                     specify environment name for application\n  -h, --help                           help for port-forward\n  -n, --namespace string               specify the Kubernetes namespace to use\n      --pod-running-timeout duration   The length of time (like 5s, 2m, or 3h, higher than zero) to wait until at least one pod is running (default 1m0s)\n      --resource-name string           specify the resource name\n  -t, --resource-type string           specify the resource type, support the service, and pod\n\n## Options inherited from parent commands\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_port-forward", "title": "Vela Port Forward", "description": "Forward local ports to container/service port of vela application.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 15:05:48", "type": "overview", "page_metadata": {"generator": "Docusaurus v2.4.3", "language": "en", "ogUrl": "https://kubevela.io/docs/cli/vela_port-forward/", "og:url": "https://kubevela.io/docs/cli/vela_port-forward/", "msapplication-config": "/img/favicons/browserconfig.xml", "docusaurus_version": "v1.10", "viewport": "width=device-width, initial-scale=1.0", "docsearch:language": "en", "docusaurus_locale": "en", "ogDescription": "Forward local ports to container/service port of vela application.", "twitter:card": "summary_large_image", "ogTitle": "vela port-forward | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_tag": "docs-default-v1.10", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:title": "vela port-forward | KubeVela", "description": "Forward local ports to container/service port of vela application.", "theme-color": "#ffffff", "title": "vela port-forward | KubeVela", "og:description": "Forward local ports to container/service port of vela application.", "docsearch:version": "v1.10", "scrapeId": "4ade76c3-76cd-4fce-a029-b2b527707016", "sourceURL": "https://kubevela.io/docs/cli/vela_port-forward", "url": "https://kubevela.io/docs/cli/vela_port-forward/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"Vela Port Forward\"?\n\nAssistant: Here are some code examples:\n\n### Command Syntax\n```yaml\nvela port-forward [flags]\n```\n\n### Port Forward Example\n```yaml\nport-forward APP_NAME [options] [LOCAL_PORT:]REMOTE_PORT [...[LOCAL_PORT_N:]REMOTE_PORT_N]\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_port-forward", "title": "Vela Port Forward", "description": "Forward local ports to container/service port of vela application.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 15:05:48", "type": "code_examples", "page_metadata": {"generator": "Docusaurus v2.4.3", "language": "en", "ogUrl": "https://kubevela.io/docs/cli/vela_port-forward/", "og:url": "https://kubevela.io/docs/cli/vela_port-forward/", "msapplication-config": "/img/favicons/browserconfig.xml", "docusaurus_version": "v1.10", "viewport": "width=device-width, initial-scale=1.0", "docsearch:language": "en", "docusaurus_locale": "en", "ogDescription": "Forward local ports to container/service port of vela application.", "twitter:card": "summary_large_image", "ogTitle": "vela port-forward | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_tag": "docs-default-v1.10", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:title": "vela port-forward | KubeVela", "description": "Forward local ports to container/service port of vela application.", "theme-color": "#ffffff", "title": "vela port-forward | KubeVela", "og:description": "Forward local ports to container/service port of vela application.", "docsearch:version": "v1.10", "scrapeId": "4ade76c3-76cd-4fce-a029-b2b527707016", "sourceURL": "https://kubevela.io/docs/cli/vela_port-forward", "url": "https://kubevela.io/docs/cli/vela_port-forward/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"Vela Port Forward\"?\n\nAssistant: Here are the recommended best practices:\n\n• When using --address, ensure that the specified IP addresses are available to bind.\n• Use --pod-running-timeout to avoid waiting indefinitely for a pod to start.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_port-forward", "title": "Vela Port Forward", "description": "Forward local ports to container/service port of vela application.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 15:05:48", "type": "best_practices", "page_metadata": {"generator": "Docusaurus v2.4.3", "language": "en", "ogUrl": "https://kubevela.io/docs/cli/vela_port-forward/", "og:url": "https://kubevela.io/docs/cli/vela_port-forward/", "msapplication-config": "/img/favicons/browserconfig.xml", "docusaurus_version": "v1.10", "viewport": "width=device-width, initial-scale=1.0", "docsearch:language": "en", "docusaurus_locale": "en", "ogDescription": "Forward local ports to container/service port of vela application.", "twitter:card": "summary_large_image", "ogTitle": "vela port-forward | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_tag": "docs-default-v1.10", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:title": "vela port-forward | KubeVela", "description": "Forward local ports to container/service port of vela application.", "theme-color": "#ffffff", "title": "vela port-forward | KubeVela", "og:description": "Forward local ports to container/service port of vela application.", "docsearch:version": "v1.10", "scrapeId": "4ade76c3-76cd-4fce-a029-b2b527707016", "sourceURL": "https://kubevela.io/docs/cli/vela_port-forward", "url": "https://kubevela.io/docs/cli/vela_port-forward/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela Netlify Addon Documentation\"?\n\nAssistant: This documentation provides information on how to use KubeVela to deploy frontend services to Netlify.\n\nHere's a detailed explanation:\n\n\n## About this workload\nNetlify is a SaaS platform that can serve website especially for frontend service, it provides free allowances that was pretty cool to be used for demo and test. We can create an addon which provides a netlify component type for frontend service.\nThis workload will launch a K8s job for deploying a fronten service to https://app.netlify.com/.\n\n## Quick start\nCopy the following yaml to netlify-app.yaml, then vela up -f netlify-app.yaml.\nThe token can be got from https://app.netlify.com/user/applications/personal, and just like the following picture show.\n\n## Properties\n|     NAME      |                                          DESCRIPTION                                          |  TYPE  | REQUIRED |                    DEFAULT                     |\n|---------------|-----------------------------------------------------------------------------------------------|--------|----------|------------------------------------------------|\n| token         | Specify the token got from app.netlify.com                                                    | string | true     |                                                |\n| backofflimit  | Specify the backofflimit of the job for deploying the website by netlify                     | int    | true     |                                                |\n| completions   | Specify the completions of the job for deploying the website by netlify                      | int    | true     |                                                |\n| reponame      | Specify the direcotry name for saving the resources from git or other repo supporting git-cli | string | true     |                                                |\n| gitrepo       | Specify the repo address your resources of the frontend service  store                        | string | true     |                                                |\n| restartPolicy | Specify the restartPolicy of the job for deploying the website by netlify                     | string | true     |                                                |\n| sitname       | Specify the website name on app.netlify.com                                                   | string | true     |                                                |\n\n## KubeVela Application YAML\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: netlify-app\n  namespace: default\nspec:\n  components:\n    - name: netlify-comp\n      type: netlify\n      properties:\n        backofflimit: 5\n        completions:  1\n        reponame: <github reponame>\n        gitrepo: <github repo address>\n        restartPolicy: OnFailure\n        sitename: <sitename>\n        token: <Here needs your own token from https://app.netlify.com/user/applications/personal which you should base64 >\n", "metadata": {"source_url": "https://kubevela.io/docs/reference/addons/netlify", "title": "KubeVela Netlify Addon Documentation", "description": "This documentation provides information on how to use KubeVela to deploy frontend services to Netlify.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 15:06:02", "type": "overview", "page_metadata": {"description": "- Netlify is a SaaS platform that can serve website especially for frontend service, it provides free allowances that was pretty cool to be used for demo and test. We can create an addon which provides a netlify component type for frontend service.", "twitter:card": "summary_large_image", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogUrl": "https://kubevela.io/docs/reference/addons/netlify/", "ogDescription": "- Netlify is a SaaS platform that can serve website especially for frontend service, it provides free allowances that was pretty cool to be used for demo and test. We can create an addon which provides a netlify component type for frontend service.", "docusaurus_locale": "en", "docusaurus_version": "v1.10", "og:title": "netlify | KubeVela", "docsearch:language": "en", "docsearch:version": "v1.10", "generator": "Docusaurus v2.4.3", "ogTitle": "netlify | KubeVela", "theme-color": "#ffffff", "docusaurus_tag": "docs-default-v1.10", "og:description": "- Netlify is a SaaS platform that can serve website especially for frontend service, it provides free allowances that was pretty cool to be used for demo and test. We can create an addon which provides a netlify component type for frontend service.", "msapplication-config": "/img/favicons/browserconfig.xml", "og:url": "https://kubevela.io/docs/reference/addons/netlify/", "docsearch:docusaurus_tag": "docs-default-v1.10", "language": "en", "viewport": "width=device-width, initial-scale=1.0", "title": "netlify | KubeVela", "scrapeId": "ceedf753-1c52-4979-bdf6-11ab3360759e", "sourceURL": "https://kubevela.io/docs/reference/addons/netlify", "url": "https://kubevela.io/docs/reference/addons/netlify/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"KubeVela Netlify Addon Documentation\"?\n\nAssistant: Here are some code examples:\n\n### Check the app status\n```yaml\nvela ls netlify-app\nAPP             COMPONENT       TYPE    TRAITS  PHASE   HEALTHY STATUS  CREATED-TIME\nnetlify-app     netlify-comp    netlify         running healthy         2022-06-14 23:42:43 +0800 CST\n```\n\n### Get the application status\n```yaml\nvela status netlify-app\nAbout:\n  Name:         netlify-app\n  Namespace:    default\n  Created at:   2022-06-14 23:42:43 +0800 CST\n  Status:       running\n\nWorkflow:\n  mode: DAG\n  finished: true\n  Suspend: false\n  Terminated: false\n  Steps\n  - id:k25g896t2o\n    name:netlify-comp\n    type:apply-component\n    phase:succeeded\n    message:\n\nServices:\n  - Name: netlify-comp\n    Cluster: local  Namespace: default\n    Type: netlify\n    Healthy\n    No trait applied\n```\n\n### Get the website URL for visit\n```yaml\nvela logs netlify-app -n default | grep \"Website URL\"\nnetlify-comp--1-b4fcg netlify-comp 2022-06-14T15:43:30.641036980Z Website URL:       https://deploy-from-vela.netlify.app\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/reference/addons/netlify", "title": "KubeVela Netlify Addon Documentation", "description": "This documentation provides information on how to use KubeVela to deploy frontend services to Netlify.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 15:06:02", "type": "code_examples", "page_metadata": {"description": "- Netlify is a SaaS platform that can serve website especially for frontend service, it provides free allowances that was pretty cool to be used for demo and test. We can create an addon which provides a netlify component type for frontend service.", "twitter:card": "summary_large_image", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogUrl": "https://kubevela.io/docs/reference/addons/netlify/", "ogDescription": "- Netlify is a SaaS platform that can serve website especially for frontend service, it provides free allowances that was pretty cool to be used for demo and test. We can create an addon which provides a netlify component type for frontend service.", "docusaurus_locale": "en", "docusaurus_version": "v1.10", "og:title": "netlify | KubeVela", "docsearch:language": "en", "docsearch:version": "v1.10", "generator": "Docusaurus v2.4.3", "ogTitle": "netlify | KubeVela", "theme-color": "#ffffff", "docusaurus_tag": "docs-default-v1.10", "og:description": "- Netlify is a SaaS platform that can serve website especially for frontend service, it provides free allowances that was pretty cool to be used for demo and test. We can create an addon which provides a netlify component type for frontend service.", "msapplication-config": "/img/favicons/browserconfig.xml", "og:url": "https://kubevela.io/docs/reference/addons/netlify/", "docsearch:docusaurus_tag": "docs-default-v1.10", "language": "en", "viewport": "width=device-width, initial-scale=1.0", "title": "netlify | KubeVela", "scrapeId": "ceedf753-1c52-4979-bdf6-11ab3360759e", "sourceURL": "https://kubevela.io/docs/reference/addons/netlify", "url": "https://kubevela.io/docs/reference/addons/netlify/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela Netlify Addon Documentation\"?\n\nAssistant: Here are the recommended best practices:\n\n• Ensure to replace placeholders in the YAML with actual values before deploying.\n• Check the app status regularly to monitor the deployment process.\n", "metadata": {"source_url": "https://kubevela.io/docs/reference/addons/netlify", "title": "KubeVela Netlify Addon Documentation", "description": "This documentation provides information on how to use KubeVela to deploy frontend services to Netlify.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 15:06:02", "type": "best_practices", "page_metadata": {"description": "- Netlify is a SaaS platform that can serve website especially for frontend service, it provides free allowances that was pretty cool to be used for demo and test. We can create an addon which provides a netlify component type for frontend service.", "twitter:card": "summary_large_image", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogUrl": "https://kubevela.io/docs/reference/addons/netlify/", "ogDescription": "- Netlify is a SaaS platform that can serve website especially for frontend service, it provides free allowances that was pretty cool to be used for demo and test. We can create an addon which provides a netlify component type for frontend service.", "docusaurus_locale": "en", "docusaurus_version": "v1.10", "og:title": "netlify | KubeVela", "docsearch:language": "en", "docsearch:version": "v1.10", "generator": "Docusaurus v2.4.3", "ogTitle": "netlify | KubeVela", "theme-color": "#ffffff", "docusaurus_tag": "docs-default-v1.10", "og:description": "- Netlify is a SaaS platform that can serve website especially for frontend service, it provides free allowances that was pretty cool to be used for demo and test. We can create an addon which provides a netlify component type for frontend service.", "msapplication-config": "/img/favicons/browserconfig.xml", "og:url": "https://kubevela.io/docs/reference/addons/netlify/", "docsearch:docusaurus_tag": "docs-default-v1.10", "language": "en", "viewport": "width=device-width, initial-scale=1.0", "title": "netlify | KubeVela", "scrapeId": "ceedf753-1c52-4979-bdf6-11ab3360759e", "sourceURL": "https://kubevela.io/docs/reference/addons/netlify", "url": "https://kubevela.io/docs/reference/addons/netlify/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela Definitions\"?\n\nAssistant: This page covers the OAM Definitions in KubeVela, their lifecycle, how to use them, and customization options.\n\nHere's a detailed explanation:\n\n\n## OAM Definitions Overview\nOAM Definitions are basic building blocks of the KubeVela platform. A definition encapsulates an arbitrarily complex automation as a lego style module, then safely shared, discovered and be used to compose an Application delivered by any KubeVela engine.\n\nWith the help of OAM definitions, the platform builder can easily adopt infrastructure capabilities from ecosystem, hide complexity with their best practices without losing any extensibility, the most important is the application won't be affected even if we change the capability providers.\n\n## How to get out-of-box Definitions?\nThere're two sources to get out-of-box definitions:\n\n- Built-in definitions will be installed along with KubeVela helm chart. You can refer to the following links to learn more about built-in definitions.\n  - [Component Definition](https://kubevela.io/docs/end-user/components/references/)\n  - [Trait Definition](https://kubevela.io/docs/end-user/traits/references/)\n  - [Policy Definition](https://kubevela.io/docs/end-user/policies/references/)\n  - [Workflow Step Definition](https://kubevela.io/docs/end-user/workflow/built-in-workflow-defs/)\n- Install [Addons](https://kubevela.io/docs/reference/addons/overview/), they're scenario-oriented system extensions of KubeVela, each addon contains a bunch of definitions along its CRD controllers.\n  - The community has a [verified addon registry](https://github.com/kubevela/catalog) which contains a large catalog of addons, the registry is maintained by the KubeVela team.\n\n## Lifecycle of a Definition\nA definition's lifecycle usually has 3 stages:\n\n### Discovery\nWhen definitions installed in the system, they can be discovered by end user immediately.\n\n- Check the definition list\n\n```bash\nvela def list\n```\n\nexpected output\n\n```plaintext\nNAME                            TYPE                    NAMESPACE   DESCRIPTION\nwebservice                      ComponentDefinition     vela-system Describes long-running, scalable, containerized services\n                                                                    that have a stable network endpoint to receive external\n                                                                    network traffic from customers.\ngateway                         TraitDefinition         vela-system Enable public web traffic for the component, the ingress API\n                                                                    matches K8s v1.20+.\nhealth                          PolicyDefinition        vela-system Apply periodical health checking to the application.\nnotification                    WorkflowStepDefinition  vela-system Send message to webhook\n...snip...\n```\n\n- Show property details of one definition\n\n```bash\nvela show webservice\n```\n\nexpected output\n\n```plaintext\n# Properties\n+------------------+-------------------------------------------------------------------------------------------+-----------------------------------+----------+---------+\n|       NAME       |                                        DESCRIPTION                                        |               TYPE                | REQUIRED | DEFAULT |\n+------------------+-------------------------------------------------------------------------------------------+-----------------------------------+----------+---------+\n| cmd              | Commands to run in the container                                                          | []string                          | false    |         |\n| env              | Define arguments by using environment variables                                           | [[]env](#env)                     | false    |         |\n| labels           | Specify the labels in the workload                                                        | map[string]string                 | false    |         |\n| annotations      | Specify the annotations in the workload                                                   | map[string]string                 | false    |         |\n| image            | Which image would you like to use for your service                                        | string                            | true     |         |\n| ports            | Which ports do you want customer traffic sent to, defaults to 80                          | [[]ports](#ports)                 | false    |         |\n+------------------+-------------------------------------------------------------------------------------------+-----------------------------------+----------+---------+\n...snip...\n```\n\nYou can also view the details from documentation website, the following command will launch a server and invoke your browser automatically:\n\n```bash\nvela show webservice --web\n```\n\n- Discover in UI console ( [`velaux`](https://kubevela.io/docs/reference/addons/velaux/))\n\nOnce installed, these definitions can be discovered and generated with forms by the UI console automatically. More than that, you can even customize the layout by defining the [ui schema](https://kubevela.io/docs/reference/ui-schema/) like below.\n\n## Use\nUsing definition on UI console is very straight forward, just click along with the application creation process.\n\n1. Create Application and choose Component type which is actually choosing which component definition to use.\n2. Fill the properties of component is actually fill the parameter of component definition.\n3. The same step for trait, policy and workflow.\n\nFinally, the UI console will compose the whole deployment plan in the format of OAM like below, then KubeVela controller will take care of the rest things:\n\n```yaml\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: first-vela-app\nspec:\n  components:\n    - name: express-server\n      type: webservice\n      properties:\n        image: oamdev/hello-world\n        ports:\n         - port: 8000\n           expose: true\n      traits:\n        - type: scaler\n          properties:\n            replicas: 1\n  policies:\n    - name: target-default\n      type: topology\n      properties:\n        clusters: [\"local\"]\n        namespace: \"default\"\n    - name: target-prod\n      type: topology\n      properties:\n        clusters: [\"local\"]\n        namespace: \"prod\"\n    - name: deploy-ha\n      type: override\n      properties:\n        components:\n          - type: webservice\n            traits:\n              - type: scaler\n                properties:\n                  replicas: 2\n  workflow:\n    steps:\n      - name: deploy2default\n        type: deploy\n        properties:\n          policies: [\"target-default\"]\n      - name: manual-approval\n        type: suspend\n      - name: deploy2prod\n        type: deploy\n        properties:\n          policies: [\"target-prod\", \"deploy-ha\"]\n```\n\nUse the definition in `vela` command line works the same, you can compose the application yaml manually and deploy by `vela up` command.\n\n```bash\nvela up -f https://kubevela.net/example/applications/first-app.yaml\n```\n\nApplication is also one kind of Kubernetes CRD, you can also use `kubectl apply` or invoke Kubernetes API to integrate with vela application.\n\n## Customize\ncaution\n\nIn most cases, you don't need to customize any definitions **unless you're going to extend the capability of KubeVela**. Before that, you should check the built-in definitions and addons to confirm if they can fit your needs.\n\nA new definition is built in a declarative template in [CUE configuration language](https://cuelang.org/). If you're not familiar with CUE, you can refer to [CUE Basic](https://kubevela.io/docs/platform-engineers/cue/basic/) for some knowledge.\n\nA definition describes the module's inputs, outputs, operations, and the wiring between them. Here is an example of a simple component definition:\n\n```cue\nwebserver: {\n    type: \"component\"\n    attributes: {}\n}\n\ntemplate: {\n    parameter: {\n        name:  string\n        image: string\n    }\n    output: {\n        apiVersion: \"apps/v1\"\n        kind:       \"Deployment\"\n        spec: {\n            containers: [{\n                name:  parameter.name\n                image: parameter.image\n            }]\n        }\n    }\n}\n```\n\nThe `type` defines what kind of definition it is, the `parameter` defines the inputs, while the `output` section defines the outputs.\nYou can refer to detail docs about [how to manage definition](https://kubevela.io/docs/platform-engineers/cue/definition-edit/) or learn the [definition protocol](https://kubevela.io/docs/platform-engineers/oam/x-definition/).\n", "metadata": {"source_url": "https://kubevela.io/docs/getting-started/definition", "title": "KubeVela Definitions", "description": "This page covers the OAM Definitions in KubeVela, their lifecycle, how to use them, and customization options.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:06:40", "type": "overview", "page_metadata": {"twitter:card": "summary_large_image", "ogUrl": "https://kubevela.io/docs/getting-started/definition/", "docusaurus_tag": "docs-default-v1.10", "title": "Definition | KubeVela", "docsearch:docusaurus_tag": "docs-default-v1.10", "docsearch:language": "en", "og:description": "OAM Definitions are basic building blocks of the KubeVela platform. A definition encapsulates an arbitrarily complex automation as a lego style module, then safely shared, discovered and be used to compose an Application delivered by any KubeVela engine.", "docusaurus_locale": "en", "ogTitle": "Definition | KubeVela", "description": "OAM Definitions are basic building blocks of the KubeVela platform. A definition encapsulates an arbitrarily complex automation as a lego style module, then safely shared, discovered and be used to compose an Application delivered by any KubeVela engine.", "viewport": "width=device-width, initial-scale=1.0", "docsearch:version": "v1.10", "og:title": "Definition | KubeVela", "language": "en", "og:url": "https://kubevela.io/docs/getting-started/definition/", "ogDescription": "OAM Definitions are basic building blocks of the KubeVela platform. A definition encapsulates an arbitrarily complex automation as a lego style module, then safely shared, discovered and be used to compose an Application delivered by any KubeVela engine.", "theme-color": "#ffffff", "msapplication-config": "/img/favicons/browserconfig.xml", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_version": "v1.10", "generator": "Docusaurus v2.4.3", "scrapeId": "07c37788-fd3d-4316-aa28-bf4c0ca6dbec", "sourceURL": "https://kubevela.io/docs/getting-started/definition", "url": "https://kubevela.io/docs/getting-started/definition/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"KubeVela Definitions\"?\n\nAssistant: Here are some code examples:\n\n### Check the definition list\n```yaml\nvela def list\n```\n\n### Show property details of one definition\n```yaml\nvela show webservice\n```\n\n### View details from documentation website\n```yaml\nvela show webservice --web\n```\n\n### Compose the application yaml manually\n```yaml\nvela up -f https://kubevela.net/example/applications/first-app.yaml\n```\n\n### Simple component definition in CUE\n```yaml\nwebserver: {\n    type: \"component\"\n    attributes: {}\n}\n\ntemplate: {\n    parameter: {\n        name:  string\n        image: string\n    }\n    output: {\n        apiVersion: \"apps/v1\"\n        kind:       \"Deployment\"\n        spec: {\n            containers: [{\n                name:  parameter.name\n                image: parameter.image\n            }]\n        }\n    }\n}\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/getting-started/definition", "title": "KubeVela Definitions", "description": "This page covers the OAM Definitions in KubeVela, their lifecycle, how to use them, and customization options.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:06:40", "type": "code_examples", "page_metadata": {"twitter:card": "summary_large_image", "ogUrl": "https://kubevela.io/docs/getting-started/definition/", "docusaurus_tag": "docs-default-v1.10", "title": "Definition | KubeVela", "docsearch:docusaurus_tag": "docs-default-v1.10", "docsearch:language": "en", "og:description": "OAM Definitions are basic building blocks of the KubeVela platform. A definition encapsulates an arbitrarily complex automation as a lego style module, then safely shared, discovered and be used to compose an Application delivered by any KubeVela engine.", "docusaurus_locale": "en", "ogTitle": "Definition | KubeVela", "description": "OAM Definitions are basic building blocks of the KubeVela platform. A definition encapsulates an arbitrarily complex automation as a lego style module, then safely shared, discovered and be used to compose an Application delivered by any KubeVela engine.", "viewport": "width=device-width, initial-scale=1.0", "docsearch:version": "v1.10", "og:title": "Definition | KubeVela", "language": "en", "og:url": "https://kubevela.io/docs/getting-started/definition/", "ogDescription": "OAM Definitions are basic building blocks of the KubeVela platform. A definition encapsulates an arbitrarily complex automation as a lego style module, then safely shared, discovered and be used to compose an Application delivered by any KubeVela engine.", "theme-color": "#ffffff", "msapplication-config": "/img/favicons/browserconfig.xml", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_version": "v1.10", "generator": "Docusaurus v2.4.3", "scrapeId": "07c37788-fd3d-4316-aa28-bf4c0ca6dbec", "sourceURL": "https://kubevela.io/docs/getting-started/definition", "url": "https://kubevela.io/docs/getting-started/definition/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela Definitions\"?\n\nAssistant: Here are the recommended best practices:\n\n• In most cases, you don't need to customize any definitions unless you're going to extend the capability of KubeVela.\n• Check the built-in definitions and addons to confirm if they can fit your needs before customizing.\n", "metadata": {"source_url": "https://kubevela.io/docs/getting-started/definition", "title": "KubeVela Definitions", "description": "This page covers the OAM Definitions in KubeVela, their lifecycle, how to use them, and customization options.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:06:40", "type": "best_practices", "page_metadata": {"twitter:card": "summary_large_image", "ogUrl": "https://kubevela.io/docs/getting-started/definition/", "docusaurus_tag": "docs-default-v1.10", "title": "Definition | KubeVela", "docsearch:docusaurus_tag": "docs-default-v1.10", "docsearch:language": "en", "og:description": "OAM Definitions are basic building blocks of the KubeVela platform. A definition encapsulates an arbitrarily complex automation as a lego style module, then safely shared, discovered and be used to compose an Application delivered by any KubeVela engine.", "docusaurus_locale": "en", "ogTitle": "Definition | KubeVela", "description": "OAM Definitions are basic building blocks of the KubeVela platform. A definition encapsulates an arbitrarily complex automation as a lego style module, then safely shared, discovered and be used to compose an Application delivered by any KubeVela engine.", "viewport": "width=device-width, initial-scale=1.0", "docsearch:version": "v1.10", "og:title": "Definition | KubeVela", "language": "en", "og:url": "https://kubevela.io/docs/getting-started/definition/", "ogDescription": "OAM Definitions are basic building blocks of the KubeVela platform. A definition encapsulates an arbitrarily complex automation as a lego style module, then safely shared, discovered and be used to compose an Application delivered by any KubeVela engine.", "theme-color": "#ffffff", "msapplication-config": "/img/favicons/browserconfig.xml", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_version": "v1.10", "generator": "Docusaurus v2.4.3", "scrapeId": "07c37788-fd3d-4316-aa28-bf4c0ca6dbec", "sourceURL": "https://kubevela.io/docs/getting-started/definition", "url": "https://kubevela.io/docs/getting-started/definition/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"Dex Addon for KubeVela\"?\n\nAssistant: This addon provides dex login for VelaUX, allowing authentication through various identity providers.\n\nHere's a detailed explanation:\n\n\n## Overview\nDex is an identity service that uses OpenID Connect to drive authentication for other apps. Dex acts as a portal to other identity providers through connectors. This lets Dex defer authentication to LDAP servers, SAML providers, or established identity providers like GitHub, Google, and Active Directory. Clients write their authentication logic once to talk to Dex, then Dex handles the protocols for a given backend. Please refer to Dex website for more details.\n\n## Install\nTo enable the Dex addon, use the following command.\n\n## Uninstall\nTo uninstall the Dex addon, use the following command.\n", "metadata": {"source_url": "https://kubevela.io/docs/reference/addons/dex", "title": "Dex Addon for KubeVela", "description": "This addon provides dex login for VelaUX, allowing authentication through various identity providers.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 15:06:49", "type": "overview", "page_metadata": {"title": "dex | KubeVela", "language": "en", "ogDescription": "This addon provides dex login for VelaUX.", "ogTitle": "dex | KubeVela", "og:title": "dex | KubeVela", "og:description": "This addon provides dex login for VelaUX.", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "twitter:card": "summary_large_image", "description": "This addon provides dex login for VelaUX.", "viewport": "width=device-width, initial-scale=1.0", "docsearch:language": "en", "docusaurus_locale": "en", "docsearch:docusaurus_tag": "docs-default-v1.10", "ogUrl": "https://kubevela.io/docs/reference/addons/dex/", "og:url": "https://kubevela.io/docs/reference/addons/dex/", "docusaurus_tag": "docs-default-v1.10", "theme-color": "#ffffff", "generator": "Docusaurus v2.4.3", "docsearch:version": "v1.10", "docusaurus_version": "v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "scrapeId": "1615bd73-b7d3-49de-afc5-226a487b77ed", "sourceURL": "https://kubevela.io/docs/reference/addons/dex", "url": "https://kubevela.io/docs/reference/addons/dex/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"Dex Addon for KubeVela\"?\n\nAssistant: Here are some code examples:\n\n### Install Dex Addon\n```yaml\n$ vela addon enable dex\n```\n\n### Uninstall Dex Addon\n```yaml\n$ vela addon uninstall dex\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/reference/addons/dex", "title": "Dex Addon for KubeVela", "description": "This addon provides dex login for VelaUX, allowing authentication through various identity providers.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 15:06:49", "type": "code_examples", "page_metadata": {"title": "dex | KubeVela", "language": "en", "ogDescription": "This addon provides dex login for VelaUX.", "ogTitle": "dex | KubeVela", "og:title": "dex | KubeVela", "og:description": "This addon provides dex login for VelaUX.", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "twitter:card": "summary_large_image", "description": "This addon provides dex login for VelaUX.", "viewport": "width=device-width, initial-scale=1.0", "docsearch:language": "en", "docusaurus_locale": "en", "docsearch:docusaurus_tag": "docs-default-v1.10", "ogUrl": "https://kubevela.io/docs/reference/addons/dex/", "og:url": "https://kubevela.io/docs/reference/addons/dex/", "docusaurus_tag": "docs-default-v1.10", "theme-color": "#ffffff", "generator": "Docusaurus v2.4.3", "docsearch:version": "v1.10", "docusaurus_version": "v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "scrapeId": "1615bd73-b7d3-49de-afc5-226a487b77ed", "sourceURL": "https://kubevela.io/docs/reference/addons/dex", "url": "https://kubevela.io/docs/reference/addons/dex/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"Dex Addon for KubeVela\"?\n\nAssistant: Here are the recommended best practices:\n\n• Refer to the Dex website for more details on connectors and authentication.\n• Ensure you have the correct permissions set up for the identity providers you are using.\n", "metadata": {"source_url": "https://kubevela.io/docs/reference/addons/dex", "title": "Dex Addon for KubeVela", "description": "This addon provides dex login for VelaUX, allowing authentication through various identity providers.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 15:06:49", "type": "best_practices", "page_metadata": {"title": "dex | KubeVela", "language": "en", "ogDescription": "This addon provides dex login for VelaUX.", "ogTitle": "dex | KubeVela", "og:title": "dex | KubeVela", "og:description": "This addon provides dex login for VelaUX.", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "twitter:card": "summary_large_image", "description": "This addon provides dex login for VelaUX.", "viewport": "width=device-width, initial-scale=1.0", "docsearch:language": "en", "docusaurus_locale": "en", "docsearch:docusaurus_tag": "docs-default-v1.10", "ogUrl": "https://kubevela.io/docs/reference/addons/dex/", "og:url": "https://kubevela.io/docs/reference/addons/dex/", "docusaurus_tag": "docs-default-v1.10", "theme-color": "#ffffff", "generator": "Docusaurus v2.4.3", "docsearch:version": "v1.10", "docusaurus_version": "v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "scrapeId": "1615bd73-b7d3-49de-afc5-226a487b77ed", "sourceURL": "https://kubevela.io/docs/reference/addons/dex", "url": "https://kubevela.io/docs/reference/addons/dex/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela CLI - Generate Documentation for Definitions\"?\n\nAssistant: Generate documentation for non component, trait, policy and workflow definitions\n\nHere's a detailed explanation:\n\n\n## Synopsis\nGenerate documentation for non component, trait, policy and workflow definitions\n\n## Examples\n1. Generate documentation for provider definitions\n> vela def gen-doc -t provider provider1.cue provider2.cue > provider.md\n\n## Options\n  -h, --help          help for gen-doc\n  -t, --type string   Type of the definition to generate. Valid types: [provider]\n\n## Options inherited from parent commands\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n\n## SEE ALSO\n- [vela def](https://kubevela.io/docs/cli/vela_def/) - Manage definitions.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_def_gen-doc", "title": "KubeVela CLI - Generate Documentation for Definitions", "description": "Generate documentation for non component, trait, policy and workflow definitions", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:06:57", "type": "overview", "page_metadata": {"ogUrl": "https://kubevela.io/docs/cli/vela_def_gen-doc/", "docusaurus_version": "v1.10", "ogTitle": "vela def gen-doc | KubeVela", "docsearch:docusaurus_tag": "docs-default-v1.10", "title": "vela def gen-doc | KubeVela", "og:url": "https://kubevela.io/docs/cli/vela_def_gen-doc/", "ogDescription": "Generate documentation for non component, trait, policy and workflow definitions", "docusaurus_tag": "docs-default-v1.10", "og:title": "vela def gen-doc | KubeVela", "generator": "Docusaurus v2.4.3", "docusaurus_locale": "en", "theme-color": "#ffffff", "twitter:card": "summary_large_image", "msapplication-config": "/img/favicons/browserconfig.xml", "docsearch:language": "en", "viewport": "width=device-width, initial-scale=1.0", "description": "Generate documentation for non component, trait, policy and workflow definitions", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "og:description": "Generate documentation for non component, trait, policy and workflow definitions", "language": "en", "docsearch:version": "v1.10", "scrapeId": "03705ac9-1f1e-4a3d-b79c-023dd16857cf", "sourceURL": "https://kubevela.io/docs/cli/vela_def_gen-doc", "url": "https://kubevela.io/docs/cli/vela_def_gen-doc/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"KubeVela CLI - Generate Documentation for Definitions\"?\n\nAssistant: Here are some code examples:\n\n### Generate documentation for provider definitions\n```yaml\nvela def gen-doc -t provider provider1.cue provider2.cue > provider.md\n```\n\n### Command Options\n```yaml\n  -h, --help          help for gen-doc\n  -t, --type string   Type of the definition to generate. Valid types: [provider]\n```\n\n### Inherited Options\n```yaml\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_def_gen-doc", "title": "KubeVela CLI - Generate Documentation for Definitions", "description": "Generate documentation for non component, trait, policy and workflow definitions", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:06:57", "type": "code_examples", "page_metadata": {"ogUrl": "https://kubevela.io/docs/cli/vela_def_gen-doc/", "docusaurus_version": "v1.10", "ogTitle": "vela def gen-doc | KubeVela", "docsearch:docusaurus_tag": "docs-default-v1.10", "title": "vela def gen-doc | KubeVela", "og:url": "https://kubevela.io/docs/cli/vela_def_gen-doc/", "ogDescription": "Generate documentation for non component, trait, policy and workflow definitions", "docusaurus_tag": "docs-default-v1.10", "og:title": "vela def gen-doc | KubeVela", "generator": "Docusaurus v2.4.3", "docusaurus_locale": "en", "theme-color": "#ffffff", "twitter:card": "summary_large_image", "msapplication-config": "/img/favicons/browserconfig.xml", "docsearch:language": "en", "viewport": "width=device-width, initial-scale=1.0", "description": "Generate documentation for non component, trait, policy and workflow definitions", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "og:description": "Generate documentation for non component, trait, policy and workflow definitions", "language": "en", "docsearch:version": "v1.10", "scrapeId": "03705ac9-1f1e-4a3d-b79c-023dd16857cf", "sourceURL": "https://kubevela.io/docs/cli/vela_def_gen-doc", "url": "https://kubevela.io/docs/cli/vela_def_gen-doc/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela CLI - Generate Documentation for Definitions\"?\n\nAssistant: Here are the recommended best practices:\n\n• If you like KubeVela, give it a star on GitHub!\n• Check the release notes for updates and new features.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_def_gen-doc", "title": "KubeVela CLI - Generate Documentation for Definitions", "description": "Generate documentation for non component, trait, policy and workflow definitions", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:06:57", "type": "best_practices", "page_metadata": {"ogUrl": "https://kubevela.io/docs/cli/vela_def_gen-doc/", "docusaurus_version": "v1.10", "ogTitle": "vela def gen-doc | KubeVela", "docsearch:docusaurus_tag": "docs-default-v1.10", "title": "vela def gen-doc | KubeVela", "og:url": "https://kubevela.io/docs/cli/vela_def_gen-doc/", "ogDescription": "Generate documentation for non component, trait, policy and workflow definitions", "docusaurus_tag": "docs-default-v1.10", "og:title": "vela def gen-doc | KubeVela", "generator": "Docusaurus v2.4.3", "docusaurus_locale": "en", "theme-color": "#ffffff", "twitter:card": "summary_large_image", "msapplication-config": "/img/favicons/browserconfig.xml", "docsearch:language": "en", "viewport": "width=device-width, initial-scale=1.0", "description": "Generate documentation for non component, trait, policy and workflow definitions", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "og:description": "Generate documentation for non component, trait, policy and workflow definitions", "language": "en", "docsearch:version": "v1.10", "scrapeId": "03705ac9-1f1e-4a3d-b79c-023dd16857cf", "sourceURL": "https://kubevela.io/docs/cli/vela_def_gen-doc", "url": "https://kubevela.io/docs/cli/vela_def_gen-doc/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela CLI Documentation - Definition Documentation Generation\"?\n\nAssistant: Generate documentation of definitions (Only Terraform typed definitions are supported)\n\nHere's a detailed explanation:\n\n\n## Synopsis\nGenerate documentation of definitions\n\n## Examples\n1. Generate documentation for ComponentDefinition alibaba-vpc:\n> vela def doc-gen alibaba-vpc -n vela-system\n2. Generate documentation for local ComponentDefinition file alibaba-vpc.yaml:\n> vela def doc-gen alibaba-vpc.yaml\n\n## Options\n  -h, --help               help for doc-gen\n  -n, --namespace string   Specify the namespace of the definition.\n\n## Options inherited from parent commands\n  -y, --yes   Assume yes for all user prompts\n\n## SEE ALSO\n- [vela def](https://kubevela.io/docs/cli/vela_def/) \\- Manage Definitions\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_def_doc-gen", "title": "KubeVela CLI Documentation - Definition Documentation Generation", "description": "Generate documentation of definitions (Only Terraform typed definitions are supported)", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:07:09", "type": "overview", "page_metadata": {"description": "Generate documentation of definitions (Only Terraform typed definitions are supported)", "docusaurus_locale": "en", "language": "en", "generator": "Docusaurus v2.4.3", "theme-color": "#ffffff", "ogDescription": "Generate documentation of definitions (Only Terraform typed definitions are supported)", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogUrl": "https://kubevela.io/docs/cli/vela_def_doc-gen/", "og:url": "https://kubevela.io/docs/cli/vela_def_doc-gen/", "docsearch:version": "v1.10", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:description": "Generate documentation of definitions (Only Terraform typed definitions are supported)", "ogTitle": "vela def doc-gen | KubeVela", "msapplication-config": "/img/favicons/browserconfig.xml", "viewport": "width=device-width, initial-scale=1.0", "twitter:card": "summary_large_image", "title": "vela def doc-gen | KubeVela", "docusaurus_tag": "docs-default-v1.10", "docusaurus_version": "v1.10", "og:title": "vela def doc-gen | KubeVela", "docsearch:language": "en", "scrapeId": "006c27b8-baa2-47f5-9f69-bcdc406a611c", "sourceURL": "https://kubevela.io/docs/cli/vela_def_doc-gen", "url": "https://kubevela.io/docs/cli/vela_def_doc-gen/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"KubeVela CLI Documentation - Definition Documentation Generation\"?\n\nAssistant: Here are some code examples:\n\n### Command to Generate Documentation\n```yaml\nvela def doc-gen NAME [flags]\n```\n\n### Example Command 1\n```yaml\nvela def doc-gen alibaba-vpc -n vela-system\n```\n\n### Example Command 2\n```yaml\nvela def doc-gen alibaba-vpc.yaml\n```\n\n### Options Command\n```yaml\n  -h, --help               help for doc-gen\n  -n, --namespace string   Specify the namespace of the definition.\n```\n\n### Inherited Options Command\n```yaml\n  -y, --yes   Assume yes for all user prompts\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_def_doc-gen", "title": "KubeVela CLI Documentation - Definition Documentation Generation", "description": "Generate documentation of definitions (Only Terraform typed definitions are supported)", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:07:09", "type": "code_examples", "page_metadata": {"description": "Generate documentation of definitions (Only Terraform typed definitions are supported)", "docusaurus_locale": "en", "language": "en", "generator": "Docusaurus v2.4.3", "theme-color": "#ffffff", "ogDescription": "Generate documentation of definitions (Only Terraform typed definitions are supported)", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogUrl": "https://kubevela.io/docs/cli/vela_def_doc-gen/", "og:url": "https://kubevela.io/docs/cli/vela_def_doc-gen/", "docsearch:version": "v1.10", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:description": "Generate documentation of definitions (Only Terraform typed definitions are supported)", "ogTitle": "vela def doc-gen | KubeVela", "msapplication-config": "/img/favicons/browserconfig.xml", "viewport": "width=device-width, initial-scale=1.0", "twitter:card": "summary_large_image", "title": "vela def doc-gen | KubeVela", "docusaurus_tag": "docs-default-v1.10", "docusaurus_version": "v1.10", "og:title": "vela def doc-gen | KubeVela", "docsearch:language": "en", "scrapeId": "006c27b8-baa2-47f5-9f69-bcdc406a611c", "sourceURL": "https://kubevela.io/docs/cli/vela_def_doc-gen", "url": "https://kubevela.io/docs/cli/vela_def_doc-gen/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela CLI Documentation - Definition Documentation Generation\"?\n\nAssistant: Here are the recommended best practices:\n\n• If you like KubeVela, give it a star on GitHub!\n• Ensure to specify the correct namespace when generating documentation.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_def_doc-gen", "title": "KubeVela CLI Documentation - Definition Documentation Generation", "description": "Generate documentation of definitions (Only Terraform typed definitions are supported)", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:07:09", "type": "best_practices", "page_metadata": {"description": "Generate documentation of definitions (Only Terraform typed definitions are supported)", "docusaurus_locale": "en", "language": "en", "generator": "Docusaurus v2.4.3", "theme-color": "#ffffff", "ogDescription": "Generate documentation of definitions (Only Terraform typed definitions are supported)", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogUrl": "https://kubevela.io/docs/cli/vela_def_doc-gen/", "og:url": "https://kubevela.io/docs/cli/vela_def_doc-gen/", "docsearch:version": "v1.10", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:description": "Generate documentation of definitions (Only Terraform typed definitions are supported)", "ogTitle": "vela def doc-gen | KubeVela", "msapplication-config": "/img/favicons/browserconfig.xml", "viewport": "width=device-width, initial-scale=1.0", "twitter:card": "summary_large_image", "title": "vela def doc-gen | KubeVela", "docusaurus_tag": "docs-default-v1.10", "docusaurus_version": "v1.10", "og:title": "vela def doc-gen | KubeVela", "docsearch:language": "en", "scrapeId": "006c27b8-baa2-47f5-9f69-bcdc406a611c", "sourceURL": "https://kubevela.io/docs/cli/vela_def_doc-gen", "url": "https://kubevela.io/docs/cli/vela_def_doc-gen/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela CLI Config Template\"?\n\nAssistant: Manage the template of config.\n\nHere's a detailed explanation:\n\n\n## Options\n```codeBlockLines_e6Vv\n  -h, --help   help for config-template\n```\n\n## Options inherited from parent commands\n```codeBlockLines_e6Vv\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n\n## SEE ALSO\n- [vela config-template apply](https://kubevela.io/docs/cli/vela_config-template_apply/) \\- Apply a config template.\n- [vela config-template delete](https://kubevela.io/docs/cli/vela_config-template_delete/) \\- Delete a config template.\n- [vela config-template list](https://kubevela.io/docs/cli/vela_config-template_list/) \\- List the config templates.\n- [vela config-template show](https://kubevela.io/docs/cli/vela_config-template_show/) \\- Show the documents of the template properties\n\n#### Go Back to [CLI Commands](https://kubevela.io/docs/cli/vela/) Homepage.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_config-template", "title": "KubeVela CLI Config Template", "description": "Manage the template of config.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 15:07:17", "type": "overview", "page_metadata": {"ogDescription": "Manage the template of config.", "generator": "Docusaurus v2.4.3", "docusaurus_locale": "en", "title": "vela config-template | KubeVela", "language": "en", "docusaurus_tag": "docs-default-v1.10", "docsearch:language": "en", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:url": "https://kubevela.io/docs/cli/vela_config-template/", "viewport": "width=device-width, initial-scale=1.0", "msapplication-config": "/img/favicons/browserconfig.xml", "og:title": "vela config-template | KubeVela", "description": "Manage the template of config.", "ogUrl": "https://kubevela.io/docs/cli/vela_config-template/", "ogTitle": "vela config-template | KubeVela", "twitter:card": "summary_large_image", "docusaurus_version": "v1.10", "og:description": "Manage the template of config.", "theme-color": "#ffffff", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docsearch:version": "v1.10", "scrapeId": "53936420-37d7-43f7-a120-58a9dd476c1b", "sourceURL": "https://kubevela.io/docs/cli/vela_config-template", "url": "https://kubevela.io/docs/cli/vela_config-template/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"KubeVela CLI Config Template\"?\n\nAssistant: Here are some code examples:\n\n### Options\n```yaml\n```codeBlockLines_e6Vv\n  -h, --help   help for config-template\n```\n```\n\n### Options inherited from parent commands\n```yaml\n```codeBlockLines_e6Vv\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_config-template", "title": "KubeVela CLI Config Template", "description": "Manage the template of config.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 15:07:17", "type": "code_examples", "page_metadata": {"ogDescription": "Manage the template of config.", "generator": "Docusaurus v2.4.3", "docusaurus_locale": "en", "title": "vela config-template | KubeVela", "language": "en", "docusaurus_tag": "docs-default-v1.10", "docsearch:language": "en", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:url": "https://kubevela.io/docs/cli/vela_config-template/", "viewport": "width=device-width, initial-scale=1.0", "msapplication-config": "/img/favicons/browserconfig.xml", "og:title": "vela config-template | KubeVela", "description": "Manage the template of config.", "ogUrl": "https://kubevela.io/docs/cli/vela_config-template/", "ogTitle": "vela config-template | KubeVela", "twitter:card": "summary_large_image", "docusaurus_version": "v1.10", "og:description": "Manage the template of config.", "theme-color": "#ffffff", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docsearch:version": "v1.10", "scrapeId": "53936420-37d7-43f7-a120-58a9dd476c1b", "sourceURL": "https://kubevela.io/docs/cli/vela_config-template", "url": "https://kubevela.io/docs/cli/vela_config-template/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela CLI Config Template\"?\n\nAssistant: Here are the recommended best practices:\n\n• If you like KubeVela, give it a star on GitHub!\n• Check the release notes for updates and new features.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_config-template", "title": "KubeVela CLI Config Template", "description": "Manage the template of config.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 15:07:17", "type": "best_practices", "page_metadata": {"ogDescription": "Manage the template of config.", "generator": "Docusaurus v2.4.3", "docusaurus_locale": "en", "title": "vela config-template | KubeVela", "language": "en", "docusaurus_tag": "docs-default-v1.10", "docsearch:language": "en", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:url": "https://kubevela.io/docs/cli/vela_config-template/", "viewport": "width=device-width, initial-scale=1.0", "msapplication-config": "/img/favicons/browserconfig.xml", "og:title": "vela config-template | KubeVela", "description": "Manage the template of config.", "ogUrl": "https://kubevela.io/docs/cli/vela_config-template/", "ogTitle": "vela config-template | KubeVela", "twitter:card": "summary_large_image", "docusaurus_version": "v1.10", "og:description": "Manage the template of config.", "theme-color": "#ffffff", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docsearch:version": "v1.10", "scrapeId": "53936420-37d7-43f7-a120-58a9dd476c1b", "sourceURL": "https://kubevela.io/docs/cli/vela_config-template", "url": "https://kubevela.io/docs/cli/vela_config-template/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"Check Logs\"?\n\nAssistant: This page provides information on how to check logs for applications deployed using KubeVela.\n\nHere's a detailed explanation:\n\n\n## Introduction\nKubeVela v1.10.0 is now available.(2025-02-06)\n", "metadata": {"source_url": "https://kubevela.io/docs/developers/check-logs", "title": "Check Logs", "description": "This page provides information on how to check logs for applications deployed using KubeVela.", "has_code_examples": true, "has_best_practices": true, "section_count": 1, "timestamp": "2025-02-28 15:07:20", "type": "overview", "page_metadata": {"docusaurus_version": "v1.10", "docusaurus_locale": "en", "theme-color": "#ffffff", "docusaurus_tag": "docs-default-v1.10", "viewport": "width=device-width, initial-scale=1.0", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:description": "It will let you select the container to get logs from. If there is only one container it will select automatically.", "generator": "Docusaurus v2.4.3", "og:url": "https://kubevela.io/docs/developers/check-logs/", "twitter:card": "summary_large_image", "ogDescription": "It will let you select the container to get logs from. If there is only one container it will select automatically.", "og:title": "Check Application Logs | KubeVela", "description": "It will let you select the container to get logs from. If there is only one container it will select automatically.", "title": "Check Application Logs | KubeVela", "language": "en", "ogTitle": "Check Application Logs | KubeVela", "docsearch:language": "en", "msapplication-config": "/img/favicons/browserconfig.xml", "ogUrl": "https://kubevela.io/docs/developers/check-logs/", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docsearch:version": "v1.10", "scrapeId": "766c8b24-d930-4b11-8205-c39352ae2a8f", "sourceURL": "https://kubevela.io/docs/developers/check-logs", "url": "https://kubevela.io/docs/developers/check-logs/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"Check Logs\"?\n\nAssistant: Here are some code examples:\n\n### Check Logs Command\n```yaml\nvela logs testapp\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/developers/check-logs", "title": "Check Logs", "description": "This page provides information on how to check logs for applications deployed using KubeVela.", "has_code_examples": true, "has_best_practices": true, "section_count": 1, "timestamp": "2025-02-28 15:07:20", "type": "code_examples", "page_metadata": {"docusaurus_version": "v1.10", "docusaurus_locale": "en", "theme-color": "#ffffff", "docusaurus_tag": "docs-default-v1.10", "viewport": "width=device-width, initial-scale=1.0", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:description": "It will let you select the container to get logs from. If there is only one container it will select automatically.", "generator": "Docusaurus v2.4.3", "og:url": "https://kubevela.io/docs/developers/check-logs/", "twitter:card": "summary_large_image", "ogDescription": "It will let you select the container to get logs from. If there is only one container it will select automatically.", "og:title": "Check Application Logs | KubeVela", "description": "It will let you select the container to get logs from. If there is only one container it will select automatically.", "title": "Check Application Logs | KubeVela", "language": "en", "ogTitle": "Check Application Logs | KubeVela", "docsearch:language": "en", "msapplication-config": "/img/favicons/browserconfig.xml", "ogUrl": "https://kubevela.io/docs/developers/check-logs/", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docsearch:version": "v1.10", "scrapeId": "766c8b24-d930-4b11-8205-c39352ae2a8f", "sourceURL": "https://kubevela.io/docs/developers/check-logs", "url": "https://kubevela.io/docs/developers/check-logs/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"Check Logs\"?\n\nAssistant: Here are the recommended best practices:\n\n• If there is only one container it will select automatically.\n", "metadata": {"source_url": "https://kubevela.io/docs/developers/check-logs", "title": "Check Logs", "description": "This page provides information on how to check logs for applications deployed using KubeVela.", "has_code_examples": true, "has_best_practices": true, "section_count": 1, "timestamp": "2025-02-28 15:07:20", "type": "best_practices", "page_metadata": {"docusaurus_version": "v1.10", "docusaurus_locale": "en", "theme-color": "#ffffff", "docusaurus_tag": "docs-default-v1.10", "viewport": "width=device-width, initial-scale=1.0", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:description": "It will let you select the container to get logs from. If there is only one container it will select automatically.", "generator": "Docusaurus v2.4.3", "og:url": "https://kubevela.io/docs/developers/check-logs/", "twitter:card": "summary_large_image", "ogDescription": "It will let you select the container to get logs from. If there is only one container it will select automatically.", "og:title": "Check Application Logs | KubeVela", "description": "It will let you select the container to get logs from. If there is only one container it will select automatically.", "title": "Check Application Logs | KubeVela", "language": "en", "ogTitle": "Check Application Logs | KubeVela", "docsearch:language": "en", "msapplication-config": "/img/favicons/browserconfig.xml", "ogUrl": "https://kubevela.io/docs/developers/check-logs/", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docsearch:version": "v1.10", "scrapeId": "766c8b24-d930-4b11-8205-c39352ae2a8f", "sourceURL": "https://kubevela.io/docs/developers/check-logs", "url": "https://kubevela.io/docs/developers/check-logs/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"Sidecar Trait in KubeVela\"?\n\nAssistant: The `sidecar` trait allows you to attach a sidecar container to the component.\n\nHere's a detailed explanation:\n\n\n## How to use\nIn this Application, component `log-gen-worker` and sidecar share the data volume that saves the logs.\nThe sidebar will re-output the log to stdout.\n", "metadata": {"source_url": "https://kubevela.io/docs/end-user/traits/sidecar", "title": "Sidecar Trait in KubeVela", "description": "The `sidecar` trait allows you to attach a sidecar container to the component.", "has_code_examples": true, "has_best_practices": true, "section_count": 1, "timestamp": "2025-02-28 15:07:33", "type": "overview", "page_metadata": {"msapplication-config": "/img/favicons/browserconfig.xml", "language": "en", "ogTitle": "Attaching Sidecar Container | KubeVela", "theme-color": "#ffffff", "ogUrl": "https://kubevela.io/docs/end-user/traits/sidecar/", "og:description": "The sidecar trait allows you to attach a sidecar container to the component.", "twitter:card": "summary_large_image", "og:url": "https://kubevela.io/docs/end-user/traits/sidecar/", "viewport": "width=device-width, initial-scale=1.0", "docusaurus_locale": "en", "ogDescription": "The sidecar trait allows you to attach a sidecar container to the component.", "docsearch:language": "en", "docusaurus_version": "v1.10", "docusaurus_tag": "docs-default-v1.10", "description": "The sidecar trait allows you to attach a sidecar container to the component.", "title": "Attaching Sidecar Container | KubeVela", "og:title": "Attaching Sidecar Container | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "generator": "Docusaurus v2.4.3", "docsearch:docusaurus_tag": "docs-default-v1.10", "docsearch:version": "v1.10", "scrapeId": "1b997ab7-f29e-4976-b1d9-8bbd40711b3f", "sourceURL": "https://kubevela.io/docs/end-user/traits/sidecar", "url": "https://kubevela.io/docs/end-user/traits/sidecar/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"Sidecar Trait in KubeVela\"?\n\nAssistant: Here are some code examples:\n\n### Application YAML Configuration\n```yaml\n# app.yaml\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: vela-app-with-sidecar\nspec:\n  components:\n    - name: log-gen-worker\n      type: worker\n      properties:\n        image: busybox\n        cmd:\n          - /bin/sh\n          - -c\n          - >\n            i=0;\n            while true;\n            do\n              echo \"$i: $(date)\" >> /var/log/date.log;\n              i=$((i+1));\n              sleep 1;\n            done\n        volumes:\n          - name: varlog\n            mountPath: /var/log\n            type: emptyDir\n      traits:\n        - type: sidecar\n          properties:\n            name: count-log\n            image: busybox\n            cmd: [ /bin/sh, -c, 'tail -n+1 -f /var/log/date.log']\n            volumes:\n              - name: varlog\n                path: /var/log\n\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/end-user/traits/sidecar", "title": "Sidecar Trait in KubeVela", "description": "The `sidecar` trait allows you to attach a sidecar container to the component.", "has_code_examples": true, "has_best_practices": true, "section_count": 1, "timestamp": "2025-02-28 15:07:33", "type": "code_examples", "page_metadata": {"msapplication-config": "/img/favicons/browserconfig.xml", "language": "en", "ogTitle": "Attaching Sidecar Container | KubeVela", "theme-color": "#ffffff", "ogUrl": "https://kubevela.io/docs/end-user/traits/sidecar/", "og:description": "The sidecar trait allows you to attach a sidecar container to the component.", "twitter:card": "summary_large_image", "og:url": "https://kubevela.io/docs/end-user/traits/sidecar/", "viewport": "width=device-width, initial-scale=1.0", "docusaurus_locale": "en", "ogDescription": "The sidecar trait allows you to attach a sidecar container to the component.", "docsearch:language": "en", "docusaurus_version": "v1.10", "docusaurus_tag": "docs-default-v1.10", "description": "The sidecar trait allows you to attach a sidecar container to the component.", "title": "Attaching Sidecar Container | KubeVela", "og:title": "Attaching Sidecar Container | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "generator": "Docusaurus v2.4.3", "docsearch:docusaurus_tag": "docs-default-v1.10", "docsearch:version": "v1.10", "scrapeId": "1b997ab7-f29e-4976-b1d9-8bbd40711b3f", "sourceURL": "https://kubevela.io/docs/end-user/traits/sidecar", "url": "https://kubevela.io/docs/end-user/traits/sidecar/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"Sidecar Trait in KubeVela\"?\n\nAssistant: Here are the recommended best practices:\n\n• Deploy the Application using the command: `vela up -f app.yaml`\n• Use `vela ls` to check the application state:\n• Check the logging output of sidecar using: `vela logs vela-app-with-sidecar --container count-log`\n", "metadata": {"source_url": "https://kubevela.io/docs/end-user/traits/sidecar", "title": "Sidecar Trait in KubeVela", "description": "The `sidecar` trait allows you to attach a sidecar container to the component.", "has_code_examples": true, "has_best_practices": true, "section_count": 1, "timestamp": "2025-02-28 15:07:33", "type": "best_practices", "page_metadata": {"msapplication-config": "/img/favicons/browserconfig.xml", "language": "en", "ogTitle": "Attaching Sidecar Container | KubeVela", "theme-color": "#ffffff", "ogUrl": "https://kubevela.io/docs/end-user/traits/sidecar/", "og:description": "The sidecar trait allows you to attach a sidecar container to the component.", "twitter:card": "summary_large_image", "og:url": "https://kubevela.io/docs/end-user/traits/sidecar/", "viewport": "width=device-width, initial-scale=1.0", "docusaurus_locale": "en", "ogDescription": "The sidecar trait allows you to attach a sidecar container to the component.", "docsearch:language": "en", "docusaurus_version": "v1.10", "docusaurus_tag": "docs-default-v1.10", "description": "The sidecar trait allows you to attach a sidecar container to the component.", "title": "Attaching Sidecar Container | KubeVela", "og:title": "Attaching Sidecar Container | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "generator": "Docusaurus v2.4.3", "docsearch:docusaurus_tag": "docs-default-v1.10", "docsearch:version": "v1.10", "scrapeId": "1b997ab7-f29e-4976-b1d9-8bbd40711b3f", "sourceURL": "https://kubevela.io/docs/end-user/traits/sidecar", "url": "https://kubevela.io/docs/end-user/traits/sidecar/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"User Management in KubeVela\"?\n\nAssistant: This page covers the user management features available in KubeVela, including local user accounts and SSO integration.\n\nHere's a detailed explanation:\n\n\n## Local users/accounts\nThe local users/accounts feature serves two main use-cases:\n\n- For the restful API users，it is possible to configure an API account with limited permissions and generate an authentication token. users can use token to communicate with the API to create applications, etc.\n- For a very small team where use of SSO integration might be considered an overkill. There could only use local users to authentication.\n\n## Get full users list\nIf the logged-in user has the list user permission, he can switch to the `Platforms/Users` page and get the full list of users.\n\n![user list](https://static.kubevela.net/images/1.3/user-dashboard.jpg)\n\nAs shown in the picture above， there are user's name、alias, and platform roles in tables. we will record the user's last login time and show it.\n\n## Creating users\nClick the `New User` button, you can open the drawer page for creating a user. you should input some required info, such as the user's name、email, and password. Click the `Create` button then complete.\n\n## Enable/disable users\nYou can click the disable or enable button, it could set the user's status. If a user is disabled, this user can not login.\n\n## Reset user's password\nYou can click the reset password button and input a new password then commit it.\n\n## Updating users\nFor existing users supports updating alias and platform role information. If a user has an empty email, support set a new email.\n\n## SSO\nSSO is our recommended way, please refer to [SSO login](https://kubevela.io/docs/tutorials/sso/) document.\n", "metadata": {"source_url": "https://kubevela.io/docs/how-to/dashboard/user", "title": "User Management in KubeVela", "description": "This page covers the user management features available in KubeVela, including local user accounts and SSO integration.", "has_code_examples": false, "has_best_practices": true, "section_count": 7, "timestamp": "2025-02-28 15:07:51", "type": "overview", "page_metadata": {"og:description": "The User Management feature only works when you're using VelaUX UI console.", "viewport": "width=device-width, initial-scale=1.0", "msapplication-config": "/img/favicons/browserconfig.xml", "description": "The User Management feature only works when you're using VelaUX UI console.", "docusaurus_locale": "en", "docsearch:language": "en", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "generator": "Docusaurus v2.4.3", "docsearch:version": "v1.10", "ogDescription": "The User Management feature only works when you're using VelaUX UI console.", "title": "Overview | KubeVela", "docusaurus_version": "v1.10", "docsearch:docusaurus_tag": "docs-default-v1.10", "language": "en", "docusaurus_tag": "docs-default-v1.10", "ogUrl": "https://kubevela.io/docs/how-to/dashboard/user/", "theme-color": "#ffffff", "og:url": "https://kubevela.io/docs/how-to/dashboard/user/", "og:title": "Overview | KubeVela", "ogTitle": "Overview | KubeVela", "twitter:card": "summary_large_image", "scrapeId": "2a1bb3aa-3cc8-48cf-b9ca-f252d2fc7fa8", "sourceURL": "https://kubevela.io/docs/how-to/dashboard/user", "url": "https://kubevela.io/docs/how-to/dashboard/user/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"User Management in KubeVela\"?\n\nAssistant: Here are the recommended best practices:\n\n• The User Management feature only works when you're using VelaUX UI console.\n• It is recommended to use the admin user only for the initial configuration, then switch to another user or configure the SSO integration.\n", "metadata": {"source_url": "https://kubevela.io/docs/how-to/dashboard/user", "title": "User Management in KubeVela", "description": "This page covers the user management features available in KubeVela, including local user accounts and SSO integration.", "has_code_examples": false, "has_best_practices": true, "section_count": 7, "timestamp": "2025-02-28 15:07:51", "type": "best_practices", "page_metadata": {"og:description": "The User Management feature only works when you're using VelaUX UI console.", "viewport": "width=device-width, initial-scale=1.0", "msapplication-config": "/img/favicons/browserconfig.xml", "description": "The User Management feature only works when you're using VelaUX UI console.", "docusaurus_locale": "en", "docsearch:language": "en", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "generator": "Docusaurus v2.4.3", "docsearch:version": "v1.10", "ogDescription": "The User Management feature only works when you're using VelaUX UI console.", "title": "Overview | KubeVela", "docusaurus_version": "v1.10", "docsearch:docusaurus_tag": "docs-default-v1.10", "language": "en", "docusaurus_tag": "docs-default-v1.10", "ogUrl": "https://kubevela.io/docs/how-to/dashboard/user/", "theme-color": "#ffffff", "og:url": "https://kubevela.io/docs/how-to/dashboard/user/", "og:title": "Overview | KubeVela", "ogTitle": "Overview | KubeVela", "twitter:card": "summary_large_image", "scrapeId": "2a1bb3aa-3cc8-48cf-b9ca-f252d2fc7fa8", "sourceURL": "https://kubevela.io/docs/how-to/dashboard/user", "url": "https://kubevela.io/docs/how-to/dashboard/user/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"WorkflowRun\"?\n\nAssistant: This page covers the KubeVela WorkflowRun, its characteristics, execution modes, built-in and custom steps, and various features such as status, data passing, and context data.\n\nHere's a detailed explanation:\n\n\n## Characteristics of Standalone Pipeline\nCompared with the Application Workflow, the standalone pipeline has the following characteristics:\n\n1. It can manage multiple KubeVela Applications across multiple environments.\n2. It is **not bound** to Applications and can be used **independently**. For example, it can expand or shrink a set of resources, perform process-oriented canary publishing for an Application, and perform a set of operation and maintenance operations in batches.\n3. It is **one-time** and does not manage resources. Even if the pipeline is deleted, the created resources will not be deleted.\n4. It uses the same execution engine as the Application Workflow, which completely inherits the features of KubeVela's lightweight workflow. Compared with the traditional container-based CI pipeline, KubeVela's pipeline does not depend on containers, No additional computing resources are required.\n\n## Before starting\nPlease make sure that you have enabled workflow addon:\n\n```codeBlockLines_e6Vv\nvela addon enable vela-workflow\n```\n\n## WorkflowRun\nWorkflowRun is the K8S API for pipeline. You can choose to execute an external Workflow template in the WorkflowRun or execute the steps in the WorkflowRun spec (if you declare both, the step in the WorkflowRun spec will override the content in the template). A WorkflowRun consists of the following:\n\n```codeBlockLines_e6Vv\napiVersion: core.oam.dev/v1alpha1\nkind: WorkflowRun\nmetadata:\n  name: <name>\n  namespace: <namespace>\nspec:\n  mode: <optional execute mode for the workflowRun, default execute mode is StepByStep for steps, DAG for subSteps>\n    steps: <DAG or StepByStep>\n    subSteps: <DAG or StepByStep>\n  context:\n    <optional custom contest values>\n  workflowRef: <optional external workflow template to run>\n  workflowSpec: <optional workflow spec to run>\n    steps:\n    - name: <name>\n      type: <type>\n      dependsOn:\n        <optional array of step names, specify the dependency for the step>\n      meta: <optional meta data for the step>\n        alias: <optional alias of the step>\n      properties:\n        <parameter values>\n      if: <optional if condition to decide whether this step should be executed>\n      timeout: <optional timeout for the step>\n      outputs: <optional outputs value>\n        - name: <name>\n          valueFrom: <value source of the output>\n      inputs: <optional inputs value>\n        - name: <name>\n          parameterKey: <optional set the inputs data to the steps'parameter>\n      subSteps:\n        <optional sub steps if the type of this step is step-group>\n```\n\n## Status\nWorkflowRun has the following status:\n\n| WorkflowRun State | Description |\n| :-: | :-: |\n| executing | When a step in a WorkflowRun is executing, its status is executing |\n| suspending | When a step in a WorkflowRun is suspended, its status is suspending |\n| terminated | When a WorkflowRun is terminated, its status is terminated |\n| failed | When the WorkflowRun is executed completely and a step fails, its status is failed |\n| succeeded | When the WorkflowRun is executed completely and the status of all steps is successful or skipped, its status is succeeded |\n\n### WorkflowRun Step Status\n\nWorkflowRun steps have the following status:\n\n| Step Status | Description |\n| :-: | :-: |\n| running | This step is being executed |\n| succeeded | The step is executed successfully |\n| failed | The step failed |\n| skipped | The step is skipped and not executed |\n| pending | The step is wait for certain conditions to execute, such as: waiting for the inputs |\n\n#### The Failed Reason of WorkflowRun Step\n\nFor steps that fail to execute, the `message` of the step status will display the failed message, and the `reason` will display the failed reason, which is divided into the following types:\n\n| Step Failed Reason | Description |\n| :-: | :-: |\n| Execute | The step fails in execution |\n| Terminate | The step is terminated |\n| Output | The step has an error when outputting the Output |\n| FailedAfterRetries | The Step fails in execution and the retry limit is reached |\n| Timeout | The step is timeout |\n| Action | [op.#Fail](https://kubevela.io/docs/platform-engineers/workflow/cue-actions/#fail) is used in the step's definition |\n\n## Execution Mode\nYou can define execution mode in WorkflowRun or Workflow templates:\n\n```codeBlockLines_e6Vv\nmode:\n  steps: <DAG or StepByStep>\n  subSteps: <DAG or StepByStep>\n```\n\nIf not explicitly specified, the WorkflowRun will execute the steps sequentially (StepByStep) and execute sub-steps in parallel (DAG) by default.\n\ncaution\n\nIf you specify the execution mode in both WorkflowRun and Workflow, the mode in WorkflowRun will override the mode in the Workflow template.\n\n## Built-in Steps\nYou can use KubeVela [built-in steps](https://kubevela.io/docs/end-user/workflow/built-in-workflow-defs/) that without label: `custom.definition.oam.dev/scope: Application` in WorkflowRun.\n\n## Custom Steps\nYou can refer to the [custom steps documentation](https://kubevela.io/docs/platform-engineers/workflow/workflow/) to customize your steps.\n\ncaution\n\nYou cannot use [application operations](https://kubevela.io/docs/platform-engineers/workflow/cue-actions/#application-operations).\n\n## Core Features\n### Operate WorkflowRun\n\ntip\n\nThe vela workflow command can operate both Application Workflow and WorkflowRun.\nBy default, it will look for the application with the same name first, and if it is not found, it will look for WorkflowRun.\nYou can also use `--type=workflow` to indicate that the operation object is WorkflowRun.\n\n#### Suspend\n\nIf you have an executing WorkflowRun, you can use `vela workflow suspend` to suspend the workflow.\n\n```codeBlockLines_e6Vv\nvela workflow suspend <name>\n```\n\ntip\n\nIf the workflow has executed completely, using the `vela workflow suspend` command has no effect.\n\n#### Resume\n\nWhen the WorkflowRun is suspended, you can use `vela workflow resume` command to manually resume the workflow.\n\n```codeBlockLines_e6Vv\nvela workflow resume <name>\n```\n\n#### Terminate\n\nIf you have an executing WorkflowRun, you can use `vela workflow terminate` to terminate the workflow.\n\n```codeBlockLines_e6Vv\nvela workflow terminate <name>\n```\n\n#### Check the Logs\n\nIf you want to view the WorkflowRun logs, you can use `vela workflow logs` command to view the logs.\n\ntip\n\nOnly steps configured with [op.#Log](https://kubevela.io/docs/platform-engineers/workflow/cue-actions/#log) in its definition will have log output.\n\n```codeBlockLines_e6Vv\nvela workflow logs <name>\n```\n\n## Suspend and Resume\n#### Suspend Manually\n\nPlease refer to [Operate WorkflowRun](https://kubevela.io/docs/end-user/pipeline/workflowrun/#suspend).\n\n#### Suspend Automatically（using suspend step）\n\n```codeBlockLines_e6Vv\napiVersion: core.oam.dev/v1alpha1\nkind: WorkflowRun\nmetadata:\n  name: suspend\n  namespace: default\nspec:\n  workflowSpec:\n    steps:\n      - name: step1\n        type: apply-deployment\n        properties:\n          image: nginx\n      - name: step2-suspend\n        type: suspend\n      - name: step2\n        type: apply-deployment\n        properties:\n          image: nginx\n```\n\nThe WorkflowRun will automatically suspend when the first step is completed, and the third step will not be executed until you continue the WorkflowRun.\n\n#### Resume Manually\n\nPlease refer to [Operate WorkflowRun](https://kubevela.io/docs/end-user/pipeline/workflowrun/#resume).\n\n#### Resume Automatically\n\nConfigure `duration: <duration>` in the `suspend` type of step, when the `duration` time expires, WorkflowRun will automatically continue to execute.\n\n```codeBlockLines_e6Vv\napiVersion: core.oam.dev/v1alpha1\nkind: WorkflowRun\nmetadata:\n  name: suspend\n  namespace: default\nspec:\n  workflowSpec:\n    steps:\n      - name: step1\n        type: apply-deployment\n        properties:\n          image: nginx\n      - name: step2-suspend\n        type: suspend\n        properties:\n          duration: 10s\n      - name: step2\n        type: apply-deployment\n        properties:\n          image: nginx\n```\n\nWhen the first step is completed, the WorkflowRun will suspend, and after ten seconds, the WorkflowRun will automatically continue to execute the third step.\n\n## Sub Steps\nThere is a special step type called `step-group`. When using a `step-group` type of step, you can declare sub steps in it.\n\n```codeBlockLines_e6Vv\napiVersion: core.oam.dev/v1alpha1\nkind: WorkflowRun\nmetadata:\n  name: group\n  namespace: default\nspec:\n  workflowSpec:\n    steps:\n      - name: my-group\n        type: step-group\n        subSteps:\n          - name: sub1\n            type: apply-deployment\n            properties:\n              image: nginx\n          - name: sub2\n            type: apply-deployment\n            properties:\n              image: nginx\n```\n\n## Dependency\nYou can specify dependencies between steps with `dependsOn`.\n\n```codeBlockLines_e6Vv\napiVersion: core.oam.dev/v1alpha1\nkind: WorkflowRun\nmetadata:\n  name: dependency\n  namespace: default\nspec:\n  mode:\n    steps: DAG\n  workflowSpec:\n    steps:\n      - name: step1\n        type: apply-deployment\n        dependsOn:\n          - step2\n          - step3\n        properties:\n          image: nginx\n      - name: step2\n        type: apply-deployment\n        properties:\n          image: nginx\n      - name: step3\n        type: apply-deployment\n        properties:\n          image: nginx\n```\n\nstep1 will be executed after step2 and step3 are completed.\n\n## Data Passing\nData passing between steps can be done through `inputs` and `outputs`. For details, please refer to [Input and output between steps](https://kubevela.io/docs/end-user/workflow/inputs-outputs/#outputs).\n\n```codeBlockLines_e6Vv\napiVersion: core.oam.dev/v1alpha1\nkind: WorkflowRun\nmetadata:\n  name: request-http\n  namespace: default\nspec:\n  workflowSpec:\n    steps:\n    - name: request\n      type: request\n      properties:\n        url: https://api.github.com/repos/kubevela/workflow\n      outputs:\n        - name: stars\n          valueFrom: |\n            import \"strconv\"\n            \"Current star count: \" + strconv.FormatInt(response[\"stargazers_count\"], 10)\n    - name: notification\n      type: notification\n      inputs:\n        - from: stars\n          parameterKey: slack.message.text\n      properties:\n        slack:\n          url:\n            value: <your slack url>\n```\n\n## Timeout\nYou can specify `timeout` for a step to indicate the timeout for that step.\n\n`timeout` follows the `duration` format, e.g. `30s`, `1m`, etc. You can refer to Golang's [parseDuration](https://pkg.go.dev/time#ParseDuration).\n\n```codeBlockLines_e6Vv\napiVersion: core.oam.dev/v1alpha1\nkind: WorkflowRun\nmetadata:\n  name: timeout\n  namespace: default\nspec:\n  workflowSpec:\n    steps:\n      - name: suspend\n        type: suspend\n        timeout: 3s\n```\n\n## If Conditions\nYou can use `if` in a step to determine whether to execute the step.\n\n#### No If specified\n\nIf the step does not specify `if`, if the step before the step fails to execute, then the step will be skipped and will not be executed.\n\n#### if: always\n\nWith `if: always` specified in a step, the step will be executed no matter what.\n\n#### Custom If\n\nYou can also write your own judgment logic to determine whether the step should be executed. Note: The value in `if` will be executed as CUE code. WorkflowRun provides some built-in variables in `if`, these are:\n\n- `status`： `status` contains status information for all workflow steps. You can use `status.<step-name>.phase == \"succeeded\"` to determine the status of a step, or you can use the simplified `status.<step-name>.succeeded` to determine.\n- `inputs`： `inputs` contains all the inputs parameters of the step. You can use `inputs.<input-name> == \"value\"` to get input for the step.\n- `context`: `context` contains all the context data of WorkflowRun. You can use `context.<context-name> == \"value\"` to get the context of the WorkflowRun.\n\ntip\n\nNote that if your step name or inputs name is not a valid CUE variable name (eg: contains `-`, or starts with a number, etc.), you can refer to it as follows: `status[\"invalid-name\"].failed`.\n\n```codeBlockLines_e6Vv\napiVersion: core.oam.dev/v1alpha1\nkind: WorkflowRun\nmetadata:\n  name: if-condition\n  namespace: default\nspec:\n  workflowSpec:\n    steps:\n      - name: suspend\n        type: suspend\n        timeout: 3s\n      - name: my-step\n        type: apply-deployment\n        if: status.suspend.failed\n        properties:\n          image: nginx\n      - name: my-step2\n        type: apply-deployment\n        if: status.suspend.succecceed\n        properties:\n          image: busybox\n```\n\n## Custom Context Data\nSteps in WorkflowRun have some built-in context data, and you can also declare your custom context parameters in `context`.\n\ntip\n\nIf your custom context data has the same name as a built-in context data, the built-in context parameter will be overridden by the custom parameter.\n\nYou can control the execution of WorkflowRun in different situations through the combination of conditional if and custom data.\n\n```codeBlockLines_e6Vv\napiVersion: core.oam.dev/v1alpha1\nkind: WorkflowRun\nmetadata:\n  name: deploy-run\n  namespace: default\nspec:\n  context:\n    env: test\n  workflowRef: deploy-template\n---\napiVersion: core.oam.dev/v1alpha1\nkind: Workflow\nmetadata:\n  name: deploy-template\n  namespace: default\nsteps:\n  - name: apply\n    type: apply-deployment\n    if: context.env == \"dev\"\n    properties:\n      image: nginx\n  - name: apply-test\n    type: apply-deployment\n    if: context.env == \"test\"\n    properties:\n      image: crccheck/hello-world\n```\n\n## Built-in Context Data\nThe built-in context data in WorkflowRun are as follows:\n\n| Context Variable | Description | Type |\n| :-: | :-: | :-: |\n| `context.name` | The name of the WorkflowRun | string |\n| `context.namespace` | The namespace of the WorkflowRun | string |\n| `context.stepName` | The name of the current step | string |\n| `context.stepSessionID` | The ID of the current step | string |\n| `context.spanID` | The trace ID of current step in this reconcile | string |\n", "metadata": {"source_url": "https://kubevela.io/docs/end-user/pipeline/workflowrun", "title": "WorkflowRun", "description": "This page covers the KubeVela WorkflowRun, its characteristics, execution modes, built-in and custom steps, and various features such as status, data passing, and context data.", "has_code_examples": true, "has_best_practices": true, "section_count": 16, "timestamp": "2025-02-28 15:09:42", "type": "overview", "page_metadata": {"ogTitle": "K8S API for Pipeline | KubeVela", "msapplication-config": "/img/favicons/browserconfig.xml", "title": "K8S API for Pipeline | KubeVela", "twitter:card": "summary_large_image", "og:description": "Compared with the Application Workflow, the standalone pipeline has the following characteristics:", "viewport": "width=device-width, initial-scale=1.0", "ogUrl": "https://kubevela.io/docs/end-user/pipeline/workflowrun/", "language": "en", "docusaurus_tag": "docs-default-v1.10", "docsearch:language": "en", "ogDescription": "Compared with the Application Workflow, the standalone pipeline has the following characteristics:", "docsearch:docusaurus_tag": "docs-default-v1.10", "generator": "Docusaurus v2.4.3", "docusaurus_locale": "en", "docusaurus_version": "v1.10", "og:title": "K8S API for Pipeline | KubeVela", "og:url": "https://kubevela.io/docs/end-user/pipeline/workflowrun/", "theme-color": "#ffffff", "docsearch:version": "v1.10", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "description": "Compared with the Application Workflow, the standalone pipeline has the following characteristics:", "scrapeId": "7a8aedcd-4eb9-4d2b-8842-c685182eaeff", "sourceURL": "https://kubevela.io/docs/end-user/pipeline/workflowrun", "url": "https://kubevela.io/docs/end-user/pipeline/workflowrun/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"WorkflowRun\"?\n\nAssistant: Here are some code examples:\n\n### Enable Workflow Addon\n```yaml\nvela addon enable vela-workflow\n```\n\n### WorkflowRun API Example\n```yaml\napiVersion: core.oam.dev/v1alpha1\nkind: WorkflowRun\nmetadata:\n  name: <name>\n  namespace: <namespace>\nspec:\n  mode: <optional execute mode for the workflowRun, default execute mode is StepByStep for steps, DAG for subSteps>\n    steps: <DAG or StepByStep>\n    subSteps: <DAG or StepByStep>\n  context:\n    <optional custom contest values>\n  workflowRef: <optional external workflow template to run>\n  workflowSpec: <optional workflow spec to run>\n    steps:\n    - name: <name>\n      type: <type>\n      dependsOn:\n        <optional array of step names, specify the dependency for the step>\n      meta: <optional meta data for the step>\n        alias: <optional alias of the step>\n      properties:\n        <parameter values>\n      if: <optional if condition to decide whether this step should be executed>\n      timeout: <optional timeout for the step>\n      outputs: <optional outputs value>\n        - name: <name>\n          valueFrom: <value source of the output>\n      inputs: <optional inputs value>\n        - name: <name>\n          parameterKey: <optional set the inputs data to the steps'parameter>\n      subSteps:\n        <optional sub steps if the type of this step is step-group>\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/end-user/pipeline/workflowrun", "title": "WorkflowRun", "description": "This page covers the KubeVela WorkflowRun, its characteristics, execution modes, built-in and custom steps, and various features such as status, data passing, and context data.", "has_code_examples": true, "has_best_practices": true, "section_count": 16, "timestamp": "2025-02-28 15:09:42", "type": "code_examples", "page_metadata": {"ogTitle": "K8S API for Pipeline | KubeVela", "msapplication-config": "/img/favicons/browserconfig.xml", "title": "K8S API for Pipeline | KubeVela", "twitter:card": "summary_large_image", "og:description": "Compared with the Application Workflow, the standalone pipeline has the following characteristics:", "viewport": "width=device-width, initial-scale=1.0", "ogUrl": "https://kubevela.io/docs/end-user/pipeline/workflowrun/", "language": "en", "docusaurus_tag": "docs-default-v1.10", "docsearch:language": "en", "ogDescription": "Compared with the Application Workflow, the standalone pipeline has the following characteristics:", "docsearch:docusaurus_tag": "docs-default-v1.10", "generator": "Docusaurus v2.4.3", "docusaurus_locale": "en", "docusaurus_version": "v1.10", "og:title": "K8S API for Pipeline | KubeVela", "og:url": "https://kubevela.io/docs/end-user/pipeline/workflowrun/", "theme-color": "#ffffff", "docsearch:version": "v1.10", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "description": "Compared with the Application Workflow, the standalone pipeline has the following characteristics:", "scrapeId": "7a8aedcd-4eb9-4d2b-8842-c685182eaeff", "sourceURL": "https://kubevela.io/docs/end-user/pipeline/workflowrun", "url": "https://kubevela.io/docs/end-user/pipeline/workflowrun/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"WorkflowRun\"?\n\nAssistant: Here are the recommended best practices:\n\n• In order to better reuse the existing capabilities and ensure technical consistency, we split the workflow engine part of the original application workflow.\n• If the workflow has executed completely, using the `vela workflow suspend` command has no effect.\n• Only steps configured with [op.#Log](https://kubevela.io/docs/platform-engineers/workflow/cue-actions/#log) in its definition will have log output.\n• If your custom context data has the same name as a built-in context data, the built-in context parameter will be overridden by the custom parameter.\n", "metadata": {"source_url": "https://kubevela.io/docs/end-user/pipeline/workflowrun", "title": "WorkflowRun", "description": "This page covers the KubeVela WorkflowRun, its characteristics, execution modes, built-in and custom steps, and various features such as status, data passing, and context data.", "has_code_examples": true, "has_best_practices": true, "section_count": 16, "timestamp": "2025-02-28 15:09:42", "type": "best_practices", "page_metadata": {"ogTitle": "K8S API for Pipeline | KubeVela", "msapplication-config": "/img/favicons/browserconfig.xml", "title": "K8S API for Pipeline | KubeVela", "twitter:card": "summary_large_image", "og:description": "Compared with the Application Workflow, the standalone pipeline has the following characteristics:", "viewport": "width=device-width, initial-scale=1.0", "ogUrl": "https://kubevela.io/docs/end-user/pipeline/workflowrun/", "language": "en", "docusaurus_tag": "docs-default-v1.10", "docsearch:language": "en", "ogDescription": "Compared with the Application Workflow, the standalone pipeline has the following characteristics:", "docsearch:docusaurus_tag": "docs-default-v1.10", "generator": "Docusaurus v2.4.3", "docusaurus_locale": "en", "docusaurus_version": "v1.10", "og:title": "K8S API for Pipeline | KubeVela", "og:url": "https://kubevela.io/docs/end-user/pipeline/workflowrun/", "theme-color": "#ffffff", "docsearch:version": "v1.10", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "description": "Compared with the Application Workflow, the standalone pipeline has the following characteristics:", "scrapeId": "7a8aedcd-4eb9-4d2b-8842-c685182eaeff", "sourceURL": "https://kubevela.io/docs/end-user/pipeline/workflowrun", "url": "https://kubevela.io/docs/end-user/pipeline/workflowrun/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"How to Contribute to KubeVela\"?\n\nAssistant: This page outlines various ways to contribute to KubeVela, including reporting bugs, suggesting enhancements, and contributing to documentation.\n\nHere's a detailed explanation:\n\n\n## Contribute Use cases and Samples\nIf you're using KubeVela, the easiest thing to contribute is to credit the community. If you are interested, you can also write a kubevela.io blog to tell more about the use case. You can also contribute to KubeVela Official Samples.\n\n## Report bugs\nBefore submitting a new issue, try to make sure someone hasn't already reported the problem. Look through the existing issues for similar issues. Report a bug by submitting a bug report. Make sure that you provide as much information as possible on how to reproduce the bug. Follow the issue template and add additional information that will help us replicate the problem.\n\n## Security issues\nIf you believe you've found a security vulnerability, please read our security policy for more details.\n\n## Suggest enhancements\nIf you have an idea to improve KubeVela, submit a feature request.\n\n## Triage issues\nIf you don't have the knowledge or time to code, consider helping with issue triage. The community will thank you for saving them time by spending some of yours.\n\n## Answering questions\nIf you have a question and you can't find the answer in the documentation, the next step is to ask it on the github discussion. It's important to us to help these users, and we'd love your help. You can help other KubeVela users by answering their questions.\n\n## Contribute to the Docs\nContributing to the docs needs to learn some knowledge about how to make a pull request to Github, I think this won't be hard if you follow the guide.\n", "metadata": {"source_url": "https://kubevela.io/docs/contributor/non-code-contribute", "title": "How to Contribute to KubeVela", "description": "This page outlines various ways to contribute to KubeVela, including reporting bugs, suggesting enhancements, and contributing to documentation.", "has_code_examples": false, "has_best_practices": true, "section_count": 7, "timestamp": "2025-02-28 15:09:53", "type": "overview", "page_metadata": {"docusaurus_locale": "en", "title": "Non-code Contribution Guide | KubeVela", "docusaurus_tag": "docs-default-v1.10", "twitter:card": "summary_large_image", "theme-color": "#ffffff", "viewport": "width=device-width, initial-scale=1.0", "og:description": "You can pick up any of the following ways you're interested to contribute.", "ogDescription": "You can pick up any of the following ways you're interested to contribute.", "description": "You can pick up any of the following ways you're interested to contribute.", "msapplication-config": "/img/favicons/browserconfig.xml", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:title": "Non-code Contribution Guide | KubeVela", "docusaurus_version": "v1.10", "og:url": "https://kubevela.io/docs/contributor/non-code-contribute/", "generator": "Docusaurus v2.4.3", "ogUrl": "https://kubevela.io/docs/contributor/non-code-contribute/", "docsearch:language": "en", "ogTitle": "Non-code Contribution Guide | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docsearch:version": "v1.10", "language": "en", "scrapeId": "c03c5d64-de80-4265-b7a1-82fde02d4bad", "sourceURL": "https://kubevela.io/docs/contributor/non-code-contribute", "url": "https://kubevela.io/docs/contributor/non-code-contribute/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"How to Contribute to KubeVela\"?\n\nAssistant: Here are the recommended best practices:\n\n• Check existing issues before reporting a bug.\n• Provide detailed information when reporting bugs.\n• Follow the issue template for bug reports.\n• Read the security policy if you find a security vulnerability.\n• Consider helping with issue triage if you can't code.\n", "metadata": {"source_url": "https://kubevela.io/docs/contributor/non-code-contribute", "title": "How to Contribute to KubeVela", "description": "This page outlines various ways to contribute to KubeVela, including reporting bugs, suggesting enhancements, and contributing to documentation.", "has_code_examples": false, "has_best_practices": true, "section_count": 7, "timestamp": "2025-02-28 15:09:53", "type": "best_practices", "page_metadata": {"docusaurus_locale": "en", "title": "Non-code Contribution Guide | KubeVela", "docusaurus_tag": "docs-default-v1.10", "twitter:card": "summary_large_image", "theme-color": "#ffffff", "viewport": "width=device-width, initial-scale=1.0", "og:description": "You can pick up any of the following ways you're interested to contribute.", "ogDescription": "You can pick up any of the following ways you're interested to contribute.", "description": "You can pick up any of the following ways you're interested to contribute.", "msapplication-config": "/img/favicons/browserconfig.xml", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:title": "Non-code Contribution Guide | KubeVela", "docusaurus_version": "v1.10", "og:url": "https://kubevela.io/docs/contributor/non-code-contribute/", "generator": "Docusaurus v2.4.3", "ogUrl": "https://kubevela.io/docs/contributor/non-code-contribute/", "docsearch:language": "en", "ogTitle": "Non-code Contribution Guide | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docsearch:version": "v1.10", "language": "en", "scrapeId": "c03c5d64-de80-4265-b7a1-82fde02d4bad", "sourceURL": "https://kubevela.io/docs/contributor/non-code-contribute", "url": "https://kubevela.io/docs/contributor/non-code-contribute/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"Debugging Applications in KubeVela\"?\n\nAssistant: This page provides guidance on how to debug applications in KubeVela, including using the `vela debug` command for applications with workflows and components.\n\nHere's a detailed explanation:\n\n\n## Caution\nDebug workflow will run workflow in the real environment, make sure you're debugging in the test environment.\n\nThe debugging process also requires the knowledge of the Kubernetes infrastructure, you may need the help of the platform team if you're the app developer.\n\n## Applications with workflow\nIf your application uses workflow, make sure your app has the `debug` policy before using the `vela debug` command:\n\n```yaml\npolicies:\n  - name: debug\n    type: debug\n```\n\nYou can also use `vela up -f <application yaml> --debug` to automatically add debug policy to your application.\n\nFor applications that use workflows, `vela debug` will first list all the steps in the workflow, and you can select the specified steps to debug. After selecting a step, you can view the contents of all CUE variables in that step individually. Among them: `do` and `provider` marked in yellow are the CUE actions used this time, and the error content will be marked in red.\n\n## Applications with components only\nIf your application only uses components, not workflows, then, you can use the `vela debug <application-name>` command directly to debug your application.\n\nDeploy the following application. The first component will use `k8s-objects` to create a Namespace, and the second component will use the `webservice` with `gateway` trait to create a Deployment and its corresponding Service and Ingress.\n\n```yaml\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: gateway-app\nspec:\n  components:\n    - name: comp-namespace\n      type: k8s-objects\n      properties:\n        objects:\n          - apiVersion: v1\n            kind: Namespace\n            metadata:\n              name: test-ns1\n    - name: express-server\n      type: webservice\n      properties:\n        image: oamdev/hello-world\n        ports:\n          - port: 8000\n      traits:\n        - type: gateway\n          properties:\n            domain: testsvc.example.com\n            http:\n              \"/\": 8000\n```\n\nAfter the application is deployed, you can use the `vela debug <application-name>` command to view all the resources rendered by the application.\n", "metadata": {"source_url": "https://kubevela.io/docs/platform-engineers/debug/debug", "title": "Debugging Applications in KubeVela", "description": "This page provides guidance on how to debug applications in KubeVela, including using the `vela debug` command for applications with workflows and components.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 15:10:06", "type": "overview", "page_metadata": {"ogUrl": "https://kubevela.io/docs/platform-engineers/debug/debug/", "docsearch:language": "en", "docsearch:docusaurus_tag": "docs-default-v1.10", "title": "Debug Workflow | KubeVela", "language": "en", "docusaurus_locale": "en", "theme-color": "#ffffff", "twitter:card": "summary_large_image", "generator": "Docusaurus v2.4.3", "og:description": "Debug workflow will run workflow in the real environment, make sure you're debugging in the test environment.", "msapplication-config": "/img/favicons/browserconfig.xml", "ogTitle": "Debug Workflow | KubeVela", "docsearch:version": "v1.10", "docusaurus_version": "v1.10", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "og:title": "Debug Workflow | KubeVela", "docusaurus_tag": "docs-default-v1.10", "viewport": "width=device-width, initial-scale=1.0", "ogDescription": "Debug workflow will run workflow in the real environment, make sure you're debugging in the test environment.", "description": "Debug workflow will run workflow in the real environment, make sure you're debugging in the test environment.", "og:url": "https://kubevela.io/docs/platform-engineers/debug/debug/", "scrapeId": "243f0d7f-1c6a-46a4-9c61-873fcb1bc130", "sourceURL": "https://kubevela.io/docs/platform-engineers/debug/debug", "url": "https://kubevela.io/docs/platform-engineers/debug/debug/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"Debugging Applications in KubeVela\"?\n\nAssistant: Here are some code examples:\n\n### Debug Policy for Workflow\n```yaml\npolicies:\n  - name: debug\n    type: debug\n```\n\n### Application YAML for Debugging\n```yaml\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: gateway-app\nspec:\n  components:\n    - name: comp-namespace\n      type: k8s-objects\n      properties:\n        objects:\n          - apiVersion: v1\n            kind: Namespace\n            metadata:\n              name: test-ns1\n    - name: express-server\n      type: webservice\n      properties:\n        image: oamdev/hello-world\n        ports:\n          - port: 8000\n      traits:\n        - type: gateway\n          properties:\n            domain: testsvc.example.com\n            http:\n              \"/\": 8000\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/platform-engineers/debug/debug", "title": "Debugging Applications in KubeVela", "description": "This page provides guidance on how to debug applications in KubeVela, including using the `vela debug` command for applications with workflows and components.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 15:10:06", "type": "code_examples", "page_metadata": {"ogUrl": "https://kubevela.io/docs/platform-engineers/debug/debug/", "docsearch:language": "en", "docsearch:docusaurus_tag": "docs-default-v1.10", "title": "Debug Workflow | KubeVela", "language": "en", "docusaurus_locale": "en", "theme-color": "#ffffff", "twitter:card": "summary_large_image", "generator": "Docusaurus v2.4.3", "og:description": "Debug workflow will run workflow in the real environment, make sure you're debugging in the test environment.", "msapplication-config": "/img/favicons/browserconfig.xml", "ogTitle": "Debug Workflow | KubeVela", "docsearch:version": "v1.10", "docusaurus_version": "v1.10", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "og:title": "Debug Workflow | KubeVela", "docusaurus_tag": "docs-default-v1.10", "viewport": "width=device-width, initial-scale=1.0", "ogDescription": "Debug workflow will run workflow in the real environment, make sure you're debugging in the test environment.", "description": "Debug workflow will run workflow in the real environment, make sure you're debugging in the test environment.", "og:url": "https://kubevela.io/docs/platform-engineers/debug/debug/", "scrapeId": "243f0d7f-1c6a-46a4-9c61-873fcb1bc130", "sourceURL": "https://kubevela.io/docs/platform-engineers/debug/debug", "url": "https://kubevela.io/docs/platform-engineers/debug/debug/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"Debugging Applications in KubeVela\"?\n\nAssistant: Here are the recommended best practices:\n\n• Ensure you are debugging in a test environment to avoid impacting production.\n• Familiarize yourself with Kubernetes infrastructure for effective debugging.\n• Use the `vela up -f <application yaml> --debug` command to automatically add a debug policy.\n", "metadata": {"source_url": "https://kubevela.io/docs/platform-engineers/debug/debug", "title": "Debugging Applications in KubeVela", "description": "This page provides guidance on how to debug applications in KubeVela, including using the `vela debug` command for applications with workflows and components.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 15:10:06", "type": "best_practices", "page_metadata": {"ogUrl": "https://kubevela.io/docs/platform-engineers/debug/debug/", "docsearch:language": "en", "docsearch:docusaurus_tag": "docs-default-v1.10", "title": "Debug Workflow | KubeVela", "language": "en", "docusaurus_locale": "en", "theme-color": "#ffffff", "twitter:card": "summary_large_image", "generator": "Docusaurus v2.4.3", "og:description": "Debug workflow will run workflow in the real environment, make sure you're debugging in the test environment.", "msapplication-config": "/img/favicons/browserconfig.xml", "ogTitle": "Debug Workflow | KubeVela", "docsearch:version": "v1.10", "docusaurus_version": "v1.10", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "og:title": "Debug Workflow | KubeVela", "docusaurus_tag": "docs-default-v1.10", "viewport": "width=device-width, initial-scale=1.0", "ogDescription": "Debug workflow will run workflow in the real environment, make sure you're debugging in the test environment.", "description": "Debug workflow will run workflow in the real environment, make sure you're debugging in the test environment.", "og:url": "https://kubevela.io/docs/platform-engineers/debug/debug/", "scrapeId": "243f0d7f-1c6a-46a4-9c61-873fcb1bc130", "sourceURL": "https://kubevela.io/docs/platform-engineers/debug/debug", "url": "https://kubevela.io/docs/platform-engineers/debug/debug/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela Addon Introduction\"?\n\nAssistant: This page provides an introduction to KubeVela addons, including how to create, structure, and manage them.\n\nHere's a detailed explanation:\n\n\n## Quick start\nWe provided the vela CLI tool to help you quickly create an addon structure with examples. Optionally, it can be based on existing Helm Charts or online resources using reference objects.\n\nFor instance, to create an addon using version 12.1.6 of the MongoDB helm chart from the repository https://marketplace.azurecr.io/helm/v1/repo, use the following command:\n\n```bash\nvela addon init mongodb --helm-repo https://marketplace.azurecr.io/helm/v1/repo --chart mongodb --chart-version 12.1.16\n```\n\nRunning this command will generate a basic addon directory in your local path:\n\n```bash\n$ ls mongodb\nNOTES.cue     README.md     definitions   metadata.yaml parameter.cue resources     schemas       template.cue  views\n```\n\nYou can still use this CLI tool to create an addon from a helm chart stored in an OCI registry. Here's an example:\n\n```bash\nvela addon init podinfo --helmrepo oci://ghcr.io/stefanprodan/charts --chart podinfo --chart-version 6.1.*\n```\n\nYou can also base your addon on Kubernetes objects from remote URLs. For example, you can directly include multiple CRDs in this way:\n\n```bash\nvela addon init my-addon --url https://domain.com/crd1.yaml --url https://domain.com/crd2.yaml\n```\n\nThe commands we introduced above can also be used together, e.g., you can base your addon on both Helm Charts and reference objects.\n\n## Basic Concept\nA KubeVela addon is a collection that can contain the following three types of files:\n\n- Basic information file that contains metadata.yaml and README.md.\n- OAM module file that defines KubeVela extensibility points, including Definitions, UI-Schema or topology-rules.\n- Application description file that defines a KubeVela application. Typically, a Definition of addon should be supported by a Kubernetes operator. The Kubernetes objects of this operator should be defined in a KubeVela application. After the addon is enabled, these resources will be dispatched to the clusters by KubeVela application controller.\n\nThe picture below shows what KubeVela does when an addon is enabled. There are mainly three processes:\n\n- Addon Registry store addons which can be used to share and distribute addons anywhere, it can be any git repo or helm chart repository.\n- When an addon is enabled through UX/CLI, it will pull these resource files from the Addon Registry, assemble them into a KubeVela application and apply it.\n- Finally, the KubeVela controller takes care of the rest things and delivers the addon as a normal application to the clusters.\n\n## Basic information file\nThis type of file is required in an addon.\n\nmetadata.yaml describes the basic information of an addon, such as the name, version, description, etc. With this file, an addon can be recognized by UX/CLI, an example is as follows:\n\n```yaml\nname: example\nversion: 1.0.0\ndescription: Example addon.\nicon: xxx\nurl: xxx\n\ntags:\n  - only_example\n\ndeployTo:\n  runtimeCluster: false\n\ndependencies:\n- name: addon_name\n  version: \">= 1.0.0, < 2.0.0\"\n\nsystem:\n  vela: \">=v1.4.0\"\n  kubernetes: \">=1.19.0-0\"\n\ninvisible: false\n```\n\nHere's the usage of every field:\n\n| Field | Required | Type | Usage |\n| :-: | :-: | :-: | :-: |\n| name | yes | string | The name of the addon. |\n| version | yes | string | The version of addon, increase for every change and follow SemVer rule. |\n| description | yes | string | Description of the addon. |\n| icon | no | string | Icon of the addon, will display in addon dashboard. |\n| url | no | string | The official website of the project behind the addon. |\n| tags | no | []string | The tags to display and organize the addon. |\n| dependencies[] | no | array of objects | Addons which this addon depends upon. KubeVela will make sure these dependencies are enabled before installing this addon. |\n| dependencies[].name | yes | string | Name of the addon dependency. |\n| dependencies[].version | no | string | Required version constraints for the dependency. You can specify a range like \">= 1.0.0, < 2.0.0\". KubeVela will select the latest version matching the constraints. If no constraint is given, KubeVela will select the latest version. |\n| system.vela | no | string | Required version of vela controller, vela CLI will block the installation if vela controller can't match the requirements. |\n| system.kubernetes | no | string | Required version of Kubernetes, vela CLI will block the installation if Kubernetes cluster can't match the requirements. |\n| deployTo.runtimeCluster | no | bool | By default, the addon will not be installed in the managed clusters. If it's `true`, it will be delivered to all managed clusters automatically. (This field only takes effect when application template file is YAML typed)\n", "metadata": {"source_url": "https://kubevela.io/docs/platform-engineers/addon/intro", "title": "KubeVela Addon Introduction", "description": "This page provides an introduction to KubeVela addons, including how to create, structure, and manage them.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 15:10:24", "type": "overview", "page_metadata": {"docusaurus_tag": "docs-default-v1.10", "twitter:card": "summary_large_image", "docsearch:version": "v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "description": "Here's a blog introduces how to build addon from scratch using redis operator as example, you can read it as an end to end tutorial!", "docsearch:language": "en", "docusaurus_version": "v1.10", "title": "Make Your Own Addon | KubeVela", "og:url": "https://kubevela.io/docs/platform-engineers/addon/intro/", "ogDescription": "Here's a blog introduces how to build addon from scratch using redis operator as example, you can read it as an end to end tutorial!", "generator": "Docusaurus v2.4.3", "docusaurus_locale": "en", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:title": "Make Your Own Addon | KubeVela", "ogTitle": "Make Your Own Addon | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogUrl": "https://kubevela.io/docs/platform-engineers/addon/intro/", "theme-color": "#ffffff", "viewport": "width=device-width, initial-scale=1.0", "og:description": "Here's a blog introduces how to build addon from scratch using redis operator as example, you can read it as an end to end tutorial!", "language": "en", "scrapeId": "1453ff58-b62a-4ee6-b889-cda1a6c7d924", "sourceURL": "https://kubevela.io/docs/platform-engineers/addon/intro", "url": "https://kubevela.io/docs/platform-engineers/addon/intro/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"KubeVela Addon Introduction\"?\n\nAssistant: Here are some code examples:\n\n### Create MongoDB Addon\n```yaml\nvela addon init mongodb --helm-repo https://marketplace.azurecr.io/helm/v1/repo --chart mongodb --chart-version 12.1.16\n```\n\n### List MongoDB Directory\n```yaml\n$ ls mongodb\nNOTES.cue     README.md     definitions   metadata.yaml parameter.cue resources     schemas       template.cue  views\n```\n\n### Create Podinfo Addon\n```yaml\nvela addon init podinfo --helmrepo oci://ghcr.io/stefanprodan/charts --chart podinfo --chart-version 6.1.*\n```\n\n### Create My Addon with CRDs\n```yaml\nvela addon init my-addon --url https://domain.com/crd1.yaml --url https://domain.com/crd2.yaml\n```\n\n### Install Addon Locally\n```yaml\nvela addon enable ./your-addon-dir/\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/platform-engineers/addon/intro", "title": "KubeVela Addon Introduction", "description": "This page provides an introduction to KubeVela addons, including how to create, structure, and manage them.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 15:10:24", "type": "code_examples", "page_metadata": {"docusaurus_tag": "docs-default-v1.10", "twitter:card": "summary_large_image", "docsearch:version": "v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "description": "Here's a blog introduces how to build addon from scratch using redis operator as example, you can read it as an end to end tutorial!", "docsearch:language": "en", "docusaurus_version": "v1.10", "title": "Make Your Own Addon | KubeVela", "og:url": "https://kubevela.io/docs/platform-engineers/addon/intro/", "ogDescription": "Here's a blog introduces how to build addon from scratch using redis operator as example, you can read it as an end to end tutorial!", "generator": "Docusaurus v2.4.3", "docusaurus_locale": "en", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:title": "Make Your Own Addon | KubeVela", "ogTitle": "Make Your Own Addon | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogUrl": "https://kubevela.io/docs/platform-engineers/addon/intro/", "theme-color": "#ffffff", "viewport": "width=device-width, initial-scale=1.0", "og:description": "Here's a blog introduces how to build addon from scratch using redis operator as example, you can read it as an end to end tutorial!", "language": "en", "scrapeId": "1453ff58-b62a-4ee6-b889-cda1a6c7d924", "sourceURL": "https://kubevela.io/docs/platform-engineers/addon/intro", "url": "https://kubevela.io/docs/platform-engineers/addon/intro/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela Addon Introduction\"?\n\nAssistant: Here are the recommended best practices:\n\n• If you want to create an addon using an existing helm chart, you can refer to the section to quickly get started without going through a detailed introduction.\n• You can use vela addon init <addon-name> command to create a basic structure of addon.\n• Not all of these directories or files are necessary, let's explain them one by one.\n", "metadata": {"source_url": "https://kubevela.io/docs/platform-engineers/addon/intro", "title": "KubeVela Addon Introduction", "description": "This page provides an introduction to KubeVela addons, including how to create, structure, and manage them.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 15:10:24", "type": "best_practices", "page_metadata": {"docusaurus_tag": "docs-default-v1.10", "twitter:card": "summary_large_image", "docsearch:version": "v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "description": "Here's a blog introduces how to build addon from scratch using redis operator as example, you can read it as an end to end tutorial!", "docsearch:language": "en", "docusaurus_version": "v1.10", "title": "Make Your Own Addon | KubeVela", "og:url": "https://kubevela.io/docs/platform-engineers/addon/intro/", "ogDescription": "Here's a blog introduces how to build addon from scratch using redis operator as example, you can read it as an end to end tutorial!", "generator": "Docusaurus v2.4.3", "docusaurus_locale": "en", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:title": "Make Your Own Addon | KubeVela", "ogTitle": "Make Your Own Addon | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogUrl": "https://kubevela.io/docs/platform-engineers/addon/intro/", "theme-color": "#ffffff", "viewport": "width=device-width, initial-scale=1.0", "og:description": "Here's a blog introduces how to build addon from scratch using redis operator as example, you can read it as an end to end tutorial!", "language": "en", "scrapeId": "1453ff58-b62a-4ee6-b889-cda1a6c7d924", "sourceURL": "https://kubevela.io/docs/platform-engineers/addon/intro", "url": "https://kubevela.io/docs/platform-engineers/addon/intro/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela Authentication & Authorization\"?\n\nAssistant: KubeVela introduces Authentication & Authorization for application delivery and management from v1.4. This article will deep dive into the underlying mechanism and demonstrates how it works.\n\nHere's a detailed explanation:\n\n\n## Background Knowledge\nKubeVela Authentication & Authorization mechanism is coherent with the native Kubernetes Authentication mechanism and RBAC Authorization mechanism. KubeVela developers and operators can directly reuse the identity and access control from the underlying Kubernetes system without the need of learning or setting up new configurations.\n\nTo fully understand the working mechanism of KubeVela Authentication and Authorization, learning basic Kubernetes concepts would be helpful.\n\n## Identity\nKubeVela mainly works on two types of identity, one is the User/Groups and the other one is the ServiceAccount.\n\nUsually, User/Groups information are embedded in the X.509 Certificates, where CN (Common Name) and O (Organization) in the Certificate indicate User and Groups respectively.\n\nOn the other hand, ServiceAccount is usually indicated by the Bearer Token of your KubeConfig, different from the X.509 Certificate. The ServiceAccount identity requires a real entity in Kubernetes cluster while User/Groups do not need that.\n\nIf you want to use the ServiceAccount identity in KubeVela applications, you need to create the ServiceAccount in Kubernetes first. But to use the User/Groups, you only need a proper X.509 Certificate based KubeConfig carrying the User/Groups fields (which you can generate by OpenSSL or Vela CLI).\n\nFor the most time, when you setup your own Kubernetes cluster through either tools like KinD/Minikube/K3s or cloud providers like EKS(Amazon) / ACK (Alibaba) / GKE (Google), you will get a KubeConfig based on X.509 Certificate which embeds User/Groups like system:admin, kuberetes-amdin, system:users, system:masters, etc. They will be bound to the cluster-admin ClusterRole which gives you the full privileges to manage your Kubernetes cluster.\n\n## Privileges\nThe access control for identity in KubeVela application is totally based on the native Kubernetes RBAC (Role-Based Access Control) mechanism. That means the RoleBinding/ClusterRoleBinding entities define what the identities can & cannot do. You could use either native ways such as using kubectl to apply YAML files or using Vela CLI to bind pre-defined privileges to identities.\n\nNo matter which way you use, the source of truth is always the Kubernetes objects, including Roles, RoleBindings, ClusterRoles and ClusterRoleBindings, depending on the scope of the privileges. KubeVela does not introduce any additional privilege objects. So there is no consistency problem between KubeVela and the backing Kubernetes.\n\n## Managing through Vela CLI\nIn KubeVela, Vela CLI provides a series of convenient commands to help you manage these identities and their privileges.\n\n## Generating KubeConfig\nIf you ever tried to generate your own KubeConfig using OpenSSL or based on existing ServiceAccount, you will find the process is a bit complex and hard to remember. You can write shell scripts to automate the process but if you do not have that script yet, you can try the Vela CLI commands.\n\nThe `vela auth gen-kubeconfig` command can generate X.509 based KubeConfig or ServiceAccount token based KubeConfig.\n\n## Listing Privileges\nIn Kubernetes, if you want to know the privileges somebody has, you need to go through the RoleBindings/ClusterRoleBindings and find out all Roles/ClusterRoles that bound to it. Then you need to check all these role objects and see the privileges inside. This laborious process is more painful in KubeVela, since KubeVela supports multi-clusters which means the same work has to be done repeatedly.\n\n## Granting Privileges\nOne of the most common way for system operators to manage users is to divide the cluster resources by namespaces and assign users to their namespaces. To achieve that, system operators usually create a namespace first, and then create roles and rolebindings in the namespace for the target user. For multi-cluster scenario, this operation also need to be repeated several times.\n\n## Diving into the Application\nWhen Application Authentication is enabled in KubeVela, applications will not use KubeVela Controller's privileges to dispatch resources anymore. Instead, it will use the privileges of the identity who lastly created or modified it. It will prevent users to escalate their privileges through creating applications that manage resources outside their own privileges.\n\n## Bind Identity to Application\nWhen users create requests for applications (such as creating a new application or modifying existing applications), the mutating request will be firstly handled by Application MutatingAdmissionWebhook in KubeVela. The webhook will extract the UserInfo from the request and record it in the Application annotations. The webhook will prevent the user from disguising other users.\n\n## Impersonate as bound Identity\nWhen handling resources, KubeVela controller will send requests with impersonation header targeting at the bound identity, which means the kube-apiserver will process those resource requests using the impersonated identity.\n\n## Identity Flow\nThe whole process is shown in the following figure in detail.\n\n## Discussion\nWhen application authentication is enabled in KubeVela, the privileges of KubeVela controller are also restricted. Before it is enabled, the KubeVela controller will uses a ServiceAccount that bound to the cluster-admin ClusterRole, which gives the KubeVela controller all the privileges to manage clusters.\n", "metadata": {"source_url": "https://kubevela.io/docs/platform-engineers/auth/advance", "title": "KubeVela Authentication & Authorization", "description": "KubeVela introduces Authentication & Authorization for application delivery and management from v1.4. This article will deep dive into the underlying mechanism and demonstrates how it works.", "has_code_examples": true, "has_best_practices": true, "section_count": 12, "timestamp": "2025-02-28 15:10:56", "type": "overview", "page_metadata": {"docsearch:version": "v1.10", "og:title": "Underlying Mechanism | KubeVela", "docsearch:language": "en", "theme-color": "#ffffff", "docusaurus_version": "v1.10", "ogTitle": "Underlying Mechanism | KubeVela", "og:description": "KubeVela introduces Authentication & Authorization for application delivery and management from v1.4. This article will deep dives in the underlying mechanism and demonstrates how it works.", "twitter:card": "summary_large_image", "og:url": "https://kubevela.io/docs/platform-engineers/auth/advance/", "docsearch:docusaurus_tag": "docs-default-v1.10", "language": "en", "docusaurus_locale": "en", "ogDescription": "KubeVela introduces Authentication & Authorization for application delivery and management from v1.4. This article will deep dives in the underlying mechanism and demonstrates how it works.", "description": "KubeVela introduces Authentication & Authorization for application delivery and management from v1.4. This article will deep dives in the underlying mechanism and demonstrates how it works.", "msapplication-config": "/img/favicons/browserconfig.xml", "docusaurus_tag": "docs-default-v1.10", "ogUrl": "https://kubevela.io/docs/platform-engineers/auth/advance/", "title": "Underlying Mechanism | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "generator": "Docusaurus v2.4.3", "viewport": "width=device-width, initial-scale=1.0", "scrapeId": "c06c33ce-7d7d-44b1-b49d-324f738a99d7", "sourceURL": "https://kubevela.io/docs/platform-engineers/auth/advance", "url": "https://kubevela.io/docs/platform-engineers/auth/advance/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"KubeVela Authentication & Authorization\"?\n\nAssistant: Here are some code examples:\n\n### Generating KubeConfig for User\n```yaml\n$ vela auth gen-kubeconfig --user new-user\n```\n\n### Generating KubeConfig for User in Groups\n```yaml\n$ vela auth gen-kubeconfig --user new-user --group kubevela:developer --group my-org:my-team\n```\n\n### Generating KubeConfig for ServiceAccount\n```yaml\n$ vela auth gen-kubeconfig --serviceaccount default -n demo\n```\n\n### Listing Privileges for User\n```yaml\n$ vela auth list-privileges --user alice\n```\n\n### Listing Privileges for Group\n```yaml\n$ vela auth list-privileges --group org:dev-team\n```\n\n### Listing Privileges for User in Managed Clusters\n```yaml\n$ vela auth list-privileges --user alice --cluster managedcluster1,managedcluster2\n```\n\n### Listing Privileges for ServiceAccount\n```yaml\n$ vela auth list-privileges --serviceaccount default -n demo\n```\n\n### Listing Privileges for KubeConfig\n```yaml\n$ vela auth list-privileges --kubeconfig ./example.kubeconfig\n```\n\n### Granting Privileges for User in Namespace\n```yaml\n$ vela auth grant-privileges --user alice --for-namespace demo --for-cluster managedcluster1,managedcluster2 --create-namespace\n```\n\n### Granting Cluster-Scoped Privileges for Group\n```yaml\n$ vela auth grant-privileges --group org:dev-team\n```\n\n### Granting Read Privileges for ServiceAccount\n```yaml\n$ vela auth grant-privileges --serviceaccount observer -n test --for-namespace test --readonly\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/platform-engineers/auth/advance", "title": "KubeVela Authentication & Authorization", "description": "KubeVela introduces Authentication & Authorization for application delivery and management from v1.4. This article will deep dive into the underlying mechanism and demonstrates how it works.", "has_code_examples": true, "has_best_practices": true, "section_count": 12, "timestamp": "2025-02-28 15:10:56", "type": "code_examples", "page_metadata": {"docsearch:version": "v1.10", "og:title": "Underlying Mechanism | KubeVela", "docsearch:language": "en", "theme-color": "#ffffff", "docusaurus_version": "v1.10", "ogTitle": "Underlying Mechanism | KubeVela", "og:description": "KubeVela introduces Authentication & Authorization for application delivery and management from v1.4. This article will deep dives in the underlying mechanism and demonstrates how it works.", "twitter:card": "summary_large_image", "og:url": "https://kubevela.io/docs/platform-engineers/auth/advance/", "docsearch:docusaurus_tag": "docs-default-v1.10", "language": "en", "docusaurus_locale": "en", "ogDescription": "KubeVela introduces Authentication & Authorization for application delivery and management from v1.4. This article will deep dives in the underlying mechanism and demonstrates how it works.", "description": "KubeVela introduces Authentication & Authorization for application delivery and management from v1.4. This article will deep dives in the underlying mechanism and demonstrates how it works.", "msapplication-config": "/img/favicons/browserconfig.xml", "docusaurus_tag": "docs-default-v1.10", "ogUrl": "https://kubevela.io/docs/platform-engineers/auth/advance/", "title": "Underlying Mechanism | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "generator": "Docusaurus v2.4.3", "viewport": "width=device-width, initial-scale=1.0", "scrapeId": "c06c33ce-7d7d-44b1-b49d-324f738a99d7", "sourceURL": "https://kubevela.io/docs/platform-engineers/auth/advance", "url": "https://kubevela.io/docs/platform-engineers/auth/advance/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela Authentication & Authorization\"?\n\nAssistant: Here are the recommended best practices:\n\n• KubeVela recommends you to use the User/Groups based KubeConfig, since this method will not bother you creating or recycling ServiceAccount objects.\n• Vela CLI does not provide commands for revoking privileges by now. If you need to revoke privileges, you can edit the corresponding RoleBindings/ClusterRoleBindings and remove the bound identity from them. If you just want to delete those bindings, you could use vela kube delete --cluster to delete in multi-clusters quickly.\n", "metadata": {"source_url": "https://kubevela.io/docs/platform-engineers/auth/advance", "title": "KubeVela Authentication & Authorization", "description": "KubeVela introduces Authentication & Authorization for application delivery and management from v1.4. This article will deep dive into the underlying mechanism and demonstrates how it works.", "has_code_examples": true, "has_best_practices": true, "section_count": 12, "timestamp": "2025-02-28 15:10:56", "type": "best_practices", "page_metadata": {"docsearch:version": "v1.10", "og:title": "Underlying Mechanism | KubeVela", "docsearch:language": "en", "theme-color": "#ffffff", "docusaurus_version": "v1.10", "ogTitle": "Underlying Mechanism | KubeVela", "og:description": "KubeVela introduces Authentication & Authorization for application delivery and management from v1.4. This article will deep dives in the underlying mechanism and demonstrates how it works.", "twitter:card": "summary_large_image", "og:url": "https://kubevela.io/docs/platform-engineers/auth/advance/", "docsearch:docusaurus_tag": "docs-default-v1.10", "language": "en", "docusaurus_locale": "en", "ogDescription": "KubeVela introduces Authentication & Authorization for application delivery and management from v1.4. This article will deep dives in the underlying mechanism and demonstrates how it works.", "description": "KubeVela introduces Authentication & Authorization for application delivery and management from v1.4. This article will deep dives in the underlying mechanism and demonstrates how it works.", "msapplication-config": "/img/favicons/browserconfig.xml", "docusaurus_tag": "docs-default-v1.10", "ogUrl": "https://kubevela.io/docs/platform-engineers/auth/advance/", "title": "Underlying Mechanism | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "generator": "Docusaurus v2.4.3", "viewport": "width=device-width, initial-scale=1.0", "scrapeId": "c06c33ce-7d7d-44b1-b49d-324f738a99d7", "sourceURL": "https://kubevela.io/docs/platform-engineers/auth/advance", "url": "https://kubevela.io/docs/platform-engineers/auth/advance/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela Observability\"?\n\nAssistant: This page covers the observability features of KubeVela, including building observability infrastructure, application observability, and observability as code.\n\nHere's a detailed explanation:\n\n\n## Build observability infrastructure automatically\nTo help users build their own observability system from scratch with just one click, KubeVela provides a list of addons, including\n\n**Metrics**\n\n- `prometheus-server`: A server records metrics in time series with flexible queries supported.\n- `kube-state-metrics`: A metrics collector for the Kubernetes system.\n- `node-exporter`: A metrics collector for the running Kubernetes nodes.\n\n**Logging**\n\n- `loki`: A logging server which stores collected logs of Kubernetes pods and provide query interfaces.\n\n**Dashboard**\n\n- `grafana`: A web application that provides analytics and interactive visualizations.\n\nAfter these addons enabled, out-of-box dashboard will be generated with real time data collecting.\n\n> More addons for alerting & tracing will be introduced in later versions.\n\n## Application Observability\nOAM, as a unified application model, can adopt observability easily as operational traits. As a result, KubeVela also provides several traits for application observability. Once end users added these traits in their app, the data will be collected, delivered and finally shown on the grafana dashboard.\n\n![app-o11y](https://kubevela.io/assets/images/app-o11y-aef8bd7db3c2495179a1bb1e3a473bf2.png)\n\nMore than that, you can easily define your own observability traits with CUE.\n\n## Observability as Code\nThe ability of KubeVela to support the application observability is all completed through the IaC (Infrastructure as Code) method, which also means that **KubeVela has glued from the collection of indicators (including logs), analysis, enrichment, storage, data source registration, all the way to visualization by using IaC**.\n\nBased on the IaC system powered by CUE, KubeVela has encapsulated common functions such as creating data sources, creating large disks, and importing large disks. You can use them directly without learning the details. If you want to do some customization, you can also orchestrate your process in a similar way through CUE, and customize the observability for your platform.\n\nIn the following documents, we will expand the above in detail one by one.\n\n## What's Next\n- [**Enable Observability Addons**](https://kubevela.io/docs/platform-engineers/operations/o11y/installation/): Guide for how to install observability addons in your KubeVela system.\n\n- [**Out-of-Box Dashboards**](https://kubevela.io/docs/platform-engineers/operations/o11y/out-of-the-box/): Guide for how to use pre-installed dashboards to monitor your system and applications.\n\n- [**Metrics Collection**](https://kubevela.io/docs/platform-engineers/operations/o11y/metrics/): Guide for customizing the process of collecting metrics for your application.\n\n- [**Log Collection**](https://kubevela.io/docs/platform-engineers/operations/o11y/logging/): Guide for how to customize the log collecting rules for your application.\n\n- [**Customize Dashboard**](https://kubevela.io/docs/platform-engineers/operations/o11y/dashboard/): Guide for creating your customized dashboards for applications.\n\n- [**Integration Existing Observability Service**](https://kubevela.io/docs/platform-engineers/operations/o11y/integration/): Guide for integrating your existing infrastructure to KubeVela, when you already have Prometheus or Grafana before installing addons.\n", "metadata": {"source_url": "https://kubevela.io/docs/platform-engineers/operations/observability", "title": "KubeVela Observability", "description": "This page covers the observability features of KubeVela, including building observability infrastructure, application observability, and observability as code.", "has_code_examples": false, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 15:11:11", "type": "overview", "page_metadata": {"ogDescription": "Observability is critical for infrastructures and applications. Without observability system, it is hard to identify what happens when system broke down. On contrary, a strong observability system can not only provide confidences for operators but can also help developers quickly locate the performance bottleneck or the weak points inside the whole system.", "ogTitle": "Automated Observability | KubeVela", "ogUrl": "https://kubevela.io/docs/platform-engineers/operations/observability/", "twitter:card": "summary_large_image", "docusaurus_locale": "en", "generator": "Docusaurus v2.4.3", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:description": "Observability is critical for infrastructures and applications. Without observability system, it is hard to identify what happens when system broke down. On contrary, a strong observability system can not only provide confidences for operators but can also help developers quickly locate the performance bottleneck or the weak points inside the whole system.", "msapplication-config": "/img/favicons/browserconfig.xml", "viewport": "width=device-width, initial-scale=1.0", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_version": "v1.10", "language": "en", "docsearch:language": "en", "theme-color": "#ffffff", "og:title": "Automated Observability | KubeVela", "docusaurus_tag": "docs-default-v1.10", "og:url": "https://kubevela.io/docs/platform-engineers/operations/observability/", "title": "Automated Observability | KubeVela", "docsearch:version": "v1.10", "description": "Observability is critical for infrastructures and applications. Without observability system, it is hard to identify what happens when system broke down. On contrary, a strong observability system can not only provide confidences for operators but can also help developers quickly locate the performance bottleneck or the weak points inside the whole system.", "scrapeId": "dcb0d39c-ebeb-45de-a2c7-e9db37aed10a", "sourceURL": "https://kubevela.io/docs/platform-engineers/operations/observability", "url": "https://kubevela.io/docs/platform-engineers/operations/observability/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela Observability\"?\n\nAssistant: Here are the recommended best practices:\n\n• KubeVela has made observability a first-class citizen, including metrics, logging, and dashboards.\n• After enabling addons, an out-of-box dashboard will be generated with real-time data collection.\n• You can define your own observability traits with CUE.\n", "metadata": {"source_url": "https://kubevela.io/docs/platform-engineers/operations/observability", "title": "KubeVela Observability", "description": "This page covers the observability features of KubeVela, including building observability infrastructure, application observability, and observability as code.", "has_code_examples": false, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 15:11:11", "type": "best_practices", "page_metadata": {"ogDescription": "Observability is critical for infrastructures and applications. Without observability system, it is hard to identify what happens when system broke down. On contrary, a strong observability system can not only provide confidences for operators but can also help developers quickly locate the performance bottleneck or the weak points inside the whole system.", "ogTitle": "Automated Observability | KubeVela", "ogUrl": "https://kubevela.io/docs/platform-engineers/operations/observability/", "twitter:card": "summary_large_image", "docusaurus_locale": "en", "generator": "Docusaurus v2.4.3", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:description": "Observability is critical for infrastructures and applications. Without observability system, it is hard to identify what happens when system broke down. On contrary, a strong observability system can not only provide confidences for operators but can also help developers quickly locate the performance bottleneck or the weak points inside the whole system.", "msapplication-config": "/img/favicons/browserconfig.xml", "viewport": "width=device-width, initial-scale=1.0", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_version": "v1.10", "language": "en", "docsearch:language": "en", "theme-color": "#ffffff", "og:title": "Automated Observability | KubeVela", "docusaurus_tag": "docs-default-v1.10", "og:url": "https://kubevela.io/docs/platform-engineers/operations/observability/", "title": "Automated Observability | KubeVela", "docsearch:version": "v1.10", "description": "Observability is critical for infrastructures and applications. Without observability system, it is hard to identify what happens when system broke down. On contrary, a strong observability system can not only provide confidences for operators but can also help developers quickly locate the performance bottleneck or the weak points inside the whole system.", "scrapeId": "dcb0d39c-ebeb-45de-a2c7-e9db37aed10a", "sourceURL": "https://kubevela.io/docs/platform-engineers/operations/observability", "url": "https://kubevela.io/docs/platform-engineers/operations/observability/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"Suspend and Resume Workflow in KubeVela\"?\n\nAssistant: This section introduces how to suspend and resume the workflow in KubeVela.\n\nHere's a detailed explanation:\n\n\n## Suspend the Workflow\nIn KubeVela, you can choose to use the `vela` command to manually suspend the execution of the workflow, or use a built-in special step type `suspend` to automatically suspend the workflow.\n\n### Suspend Manually\nIf you have an application in `runningWorkflow` state, you want to stop the execution of the workflow, you can use `vela workflow suspend` to stop the workflow and use `vela workflow resume` to continue it.\n\n- Suspend the application\n\n```codeBlockLines_e6Vv\nvela workflow suspend my-app\n```\n\ntip\n\nNothing will happen if you suspend an application that has already finished running workflow, which is in `running` status.\n\n### Use Suspend Step\nApply the following example:\n\n```codeBlockLines_e6Vv\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: suspend-demo\n  namespace: default\nspec:\n  components:\n  - name: comp1\n    type: webservice\n    properties:\n      image: crccheck/hello-world\n      port: 8000\n  - name: comp2\n    type: webservice\n    properties:\n      image: crccheck/hello-world\n      port: 8000\n  workflow:\n    steps:\n    - name: apply1\n      type: apply-component\n      properties:\n        component: comp1\n    - name: suspend\n      type: suspend\n    - name: apply2\n      type: apply-component\n      properties:\n        component: comp2\n```\n\nUse `vela status` to check the status of the Application:\n\n```codeBlockLines_e6Vv\nvela status suspend-demo\n```\n\nexpected output\n\n```codeBlockLines_e6Vv\nAbout:\n\n  Name:         suspend-demo\n  Namespace:    default\n  Created at:   2022-06-27 17:36:58 +0800 CST\n  Status:       workflowSuspending\n\nWorkflow:\n\n  mode: StepByStep\n  finished: false\n  Suspend: true\n  Terminated: false\n  Steps\n  - id:yj9h29uv6v\n    name:apply1\n    type:apply-component\n    phase:succeeded\n  - id:xvmda4he5e\n    name:suspend\n    type:suspend\n    phase:running\n\nServices:\n\n  - Name: comp1\n    Cluster: local  Namespace: default\n    Type: webservice\n    Healthy Ready:1/1\n    No trait applied\n```\n\nAs you can see, when the first step is completed, the `suspend` step will be executed and this step will suspend the workflow.\n\n## Resume the Workflow\n### Resume Manually\nOnce the workflow is suspended, you can use the `vela workflow resume` command to manually resume the workflow.\n\nTake the above suspended application as an example:\n\n```codeBlockLines_e6Vv\nvela workflow resume suspend-demo\n```\n\nAfter successfully continuing the workflow, view the status of the app:\n\n```codeBlockLines_e6Vv\nvela status suspend-demo\n```\n\nexpected output\n\n```codeBlockLines_e6Vv\nAbout:\n\n  Name:         suspend-demo\n  Namespace:    default\n  Created at:   2022-06-27 17:36:58 +0800 CST\n  Status:       running\n\nWorkflow:\n\n  mode: StepByStep\n  finished: true\n  Suspend: false\n  Terminated: false\n  Steps\n  - id:yj9h29uv6v\n    name:apply1\n    type:apply-component\n    phase:succeeded\n    message:\n  - id:xvmda4he5e\n    name:suspend\n    type:suspend\n    phase:succeeded\n    message:\n  - id:66jonaxjef\n    name:apply2\n    type:apply-component\n    phase:succeeded\n    message:\n\nServices:\n\n  - Name: comp2\n    Cluster: local  Namespace: default\n    Type: webservice\n    Healthy Ready:1/1\n    No trait applied\n\n  - Name: comp1\n    Cluster: local  Namespace: default\n    Type: webservice\n    Healthy Ready:1/1\n    No trait applied\n```\n\nAs you can see, the workflow has continued to execute.\n\n### Resume the Workflow Automatically\nIf you want the workflow to be continued automatically after a period of time has passed. Then, you can add a `duration` parameter to the `suspend` step. When the `duration` time elapses, the workflow will automatically continue execution.\n\nApply the following example:\n\n```codeBlockLines_e6Vv\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: auto-resume\n  namespace: default\nspec:\n  components:\n  - name: comp1\n    type: webservice\n    properties:\n      image: crccheck/hello-world\n      port: 8000\n  - name: comp2\n    type: webservice\n    properties:\n      image: crccheck/hello-world\n      port: 8000\n  workflow:\n    steps:\n    - name: apply1\n      type: apply-component\n      properties:\n        component: comp1\n    - name: suspend\n      type: suspend\n      properties:\n        duration: 5s\n    - name: apply2\n      type: apply-component\n      properties:\n        component: comp2\n```\n\nUse `vela status` to check the status of the Application:\n\n```codeBlockLines_e6Vv\nvela status auto-resume\n```\n\nexpected output\n\n```codeBlockLines_e6Vv\nAbout:\n\n  Name:         auto-resume\n  Namespace:    default\n  Created at:   2022-06-27 17:57:35 +0800 CST\n  Status:       running\n\nWorkflow:\n\n  mode: StepByStep\n  finished: true\n  Suspend: false\n  Terminated: false\n  Steps\n  - id:q5jhm6mgwv\n    name:apply1\n    type:apply-component\n    phase:succeeded\n    message:\n  - id:3xgfcp3cuj\n    name:suspend\n    type:suspend\n    phase:succeeded\n    message:\n  - id:zjux8ud876\n    name:apply2\n    type:apply-component\n    phase:succeeded\n    message:\n\nServices:\n\n  - Name: comp2\n    Cluster: local  Namespace: default\n    Type: webservice\n    Healthy Ready:1/1\n    No trait applied\n\n  - Name: comp1\n    Cluster: local  Namespace: default\n    Type: webservice\n    Healthy Ready:1/1\n    No trait applied\n```\n\nAs you can see, the `suspend` step is automatically executed successfully after five seconds, and the workflow is executed successfully.\n", "metadata": {"source_url": "https://kubevela.io/docs/end-user/workflow/suspend", "title": "Suspend and Resume Workflow in KubeVela", "description": "This section introduces how to suspend and resume the workflow in KubeVela.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-02-28 15:11:37", "type": "overview", "page_metadata": {"favicon": "https://kubevela.io/img/favicons/favicon.ico", "docsearch:docusaurus_tag": "docs-default-v1.10", "theme-color": "#ffffff", "docsearch:language": "en", "generator": "Docusaurus v2.4.3", "og:url": "https://kubevela.io/docs/end-user/workflow/suspend/", "og:description": "This section introduces how to suspend and resume the workflow in KubeVela.", "viewport": "width=device-width, initial-scale=1.0", "language": "en", "docusaurus_tag": "docs-default-v1.10", "docusaurus_locale": "en", "title": "Suspend and Resume | KubeVela", "docsearch:version": "v1.10", "ogUrl": "https://kubevela.io/docs/end-user/workflow/suspend/", "og:title": "Suspend and Resume | KubeVela", "ogTitle": "Suspend and Resume | KubeVela", "twitter:card": "summary_large_image", "docusaurus_version": "v1.10", "description": "This section introduces how to suspend and resume the workflow in KubeVela.", "ogDescription": "This section introduces how to suspend and resume the workflow in KubeVela.", "msapplication-config": "/img/favicons/browserconfig.xml", "scrapeId": "89f2c817-cec5-4177-9469-894f23009bcd", "sourceURL": "https://kubevela.io/docs/end-user/workflow/suspend", "url": "https://kubevela.io/docs/end-user/workflow/suspend/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"Suspend and Resume Workflow in KubeVela\"?\n\nAssistant: Here are some code examples:\n\n### Suspend the application\n```yaml\nvela workflow suspend my-app\n```\n\n### Check the status of the Application\n```yaml\nvela status suspend-demo\n```\n\n### Resume the workflow\n```yaml\nvela workflow resume suspend-demo\n```\n\n### Check the status of the Application after resuming\n```yaml\nvela status suspend-demo\n```\n\n### Check the status of the Application with auto-resume\n```yaml\nvela status auto-resume\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/end-user/workflow/suspend", "title": "Suspend and Resume Workflow in KubeVela", "description": "This section introduces how to suspend and resume the workflow in KubeVela.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-02-28 15:11:37", "type": "code_examples", "page_metadata": {"favicon": "https://kubevela.io/img/favicons/favicon.ico", "docsearch:docusaurus_tag": "docs-default-v1.10", "theme-color": "#ffffff", "docsearch:language": "en", "generator": "Docusaurus v2.4.3", "og:url": "https://kubevela.io/docs/end-user/workflow/suspend/", "og:description": "This section introduces how to suspend and resume the workflow in KubeVela.", "viewport": "width=device-width, initial-scale=1.0", "language": "en", "docusaurus_tag": "docs-default-v1.10", "docusaurus_locale": "en", "title": "Suspend and Resume | KubeVela", "docsearch:version": "v1.10", "ogUrl": "https://kubevela.io/docs/end-user/workflow/suspend/", "og:title": "Suspend and Resume | KubeVela", "ogTitle": "Suspend and Resume | KubeVela", "twitter:card": "summary_large_image", "docusaurus_version": "v1.10", "description": "This section introduces how to suspend and resume the workflow in KubeVela.", "ogDescription": "This section introduces how to suspend and resume the workflow in KubeVela.", "msapplication-config": "/img/favicons/browserconfig.xml", "scrapeId": "89f2c817-cec5-4177-9469-894f23009bcd", "sourceURL": "https://kubevela.io/docs/end-user/workflow/suspend", "url": "https://kubevela.io/docs/end-user/workflow/suspend/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"Suspend and Resume Workflow in KubeVela\"?\n\nAssistant: Here are the recommended best practices:\n\n• Nothing will happen if you suspend an application that has already finished running workflow, which is in `running` status.\n", "metadata": {"source_url": "https://kubevela.io/docs/end-user/workflow/suspend", "title": "Suspend and Resume Workflow in KubeVela", "description": "This section introduces how to suspend and resume the workflow in KubeVela.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-02-28 15:11:37", "type": "best_practices", "page_metadata": {"favicon": "https://kubevela.io/img/favicons/favicon.ico", "docsearch:docusaurus_tag": "docs-default-v1.10", "theme-color": "#ffffff", "docsearch:language": "en", "generator": "Docusaurus v2.4.3", "og:url": "https://kubevela.io/docs/end-user/workflow/suspend/", "og:description": "This section introduces how to suspend and resume the workflow in KubeVela.", "viewport": "width=device-width, initial-scale=1.0", "language": "en", "docusaurus_tag": "docs-default-v1.10", "docusaurus_locale": "en", "title": "Suspend and Resume | KubeVela", "docsearch:version": "v1.10", "ogUrl": "https://kubevela.io/docs/end-user/workflow/suspend/", "og:title": "Suspend and Resume | KubeVela", "ogTitle": "Suspend and Resume | KubeVela", "twitter:card": "summary_large_image", "docusaurus_version": "v1.10", "description": "This section introduces how to suspend and resume the workflow in KubeVela.", "ogDescription": "This section introduces how to suspend and resume the workflow in KubeVela.", "msapplication-config": "/img/favicons/browserconfig.xml", "scrapeId": "89f2c817-cec5-4177-9469-894f23009bcd", "sourceURL": "https://kubevela.io/docs/end-user/workflow/suspend", "url": "https://kubevela.io/docs/end-user/workflow/suspend/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"Garbage Collection Policies in KubeVela\"?\n\nAssistant: This page covers the garbage-collect policy in KubeVela, detailing how to manage outdated resources during application updates.\n\nHere's a detailed explanation:\n\n\n## Keep legacy resources\nSuppose you want to keep the resources created by the old version of the application. Use the garbage-collect policy and enable the option `keepLegacyResource`.\n\n1. create app\n\n```codeBlockLines_e6Vv\ncat <<EOF | vela up -f -\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: first-vela-app\nspec:\n  components:\n    - name: express-server\n      type: webservice\n      properties:\n        image: oamdev/hello-world\n        port: 8000\n      traits:\n        - type: gateway\n          properties:\n            class: traefik\n            domain: 47.251.8.82.nip.io\n            http:\n              \"/\": 8000\n  policies:\n    - name: keep-legacy-resource\n      type: garbage-collect\n      properties:\n        keepLegacyResource: true\nEOF\n```\n\nCheck the status:\n\n```codeBlockLines_e6Vv\nvela status first-vela-app --tree\n```\n\nexpected output\n\n```codeBlockLines_e6Vv\nCLUSTER       NAMESPACE     RESOURCE                  STATUS\nlocal     ─── default   ─┬─ Service/express-server    updated\n                         ├─ Deployment/express-server updated\n                         └─ Ingress/express-server    updated\n```\n\n2. update the app\n\n```codeBlockLines_e6Vv\ncat <<EOF | vela up -f -\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: first-vela-app\nspec:\n  components:\n    - name: express-server-1\n      type: webservice\n      properties:\n        image: oamdev/hello-world\n        port: 8000\n      traits:\n        - type: gateway\n          properties:\n            class: traefik\n            domain: 47.251.8.82.nip.io\n            http:\n              \"/\": 8000\n  policies:\n    - name: keep-legacy-resource\n      type: garbage-collect\n      properties:\n        keepLegacyResource: true\nEOF\n```\n\nCheck the status again:\n\n```codeBlockLines_e6Vv\nvela status first-vela-app --tree\n```\n\nexpected output\n\n```codeBlockLines_e6Vv\nCLUSTER       NAMESPACE     RESOURCE                    STATUS\nlocal     ─── default   ─┬─ Service/express-server      outdated\n                         ├─ Service/express-server-1    updated\n                         ├─ Deployment/express-server   outdated\n                         ├─ Deployment/express-server-1 updated\n                         ├─ Ingress/express-server      outdated\n                         └─ Ingress/express-server-1    updated\n```\n\nYou can see the legacy resources are reserved but the status is outdated, it will not be synced by periodically reconciliation.\n\n3. delete the app\n\n```codeBlockLines_e6Vv\n$ vela delete first-vela-app\n```\n\n> If you hope to delete resources in one specified version, you can run `kubectl delete resourcetracker first-vela-app-v1-default`.\n\n## Persist partial resources\nYou can also persist part of the resources, which skips the normal garbage-collect process when the application is updated.\n\nTake the following app as an example, in the garbage-collect policy, a rule is added which marks all the resources created by the `expose` trait to use the `onAppDelete` strategy. This will keep those services until application is deleted.\n\n```codeBlockLines_e6Vv\ncat <<EOF | vela up -f -\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: garbage-collect-app\nspec:\n  components:\n    - name: demo-gc\n      type: webservice\n      properties:\n        image: oamdev/hello-world\n      traits:\n        - type: expose\n          properties:\n            port: [8000]\n  policies:\n    - name: garbage-collect\n      type: garbage-collect\n      properties:\n        rules:\n          - selector:\n              traitTypes:\n                - expose\n            strategy: onAppDelete\nEOF\n```\n\nYou can find deployment and service created.\n\n```codeBlockLines_e6Vv\n$ kubectl get deployment\nNAME          READY   UP-TO-DATE   AVAILABLE   AGE\nhello-world   1/1     1            1           74s\n$ kubectl get service\nNAME          TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)    AGE\nhello-world   ClusterIP   10.96.160.208   <none>        8000/TCP   78s\n```\n\nIf you upgrade the application and use a different component, you will find the old versioned deployment is deleted but the service is kept.\n\n```codeBlockLines_e6Vv\ncat <<EOF | vela up -f -\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: garbage-collect-app\nspec:\n  components:\n    - name: hello-world-new\n      type: webservice\n      properties:\n        image: oamdev/hello-world\n      traits:\n        - type: expose\n          properties:\n            port: [8000]\n  policies:\n    - name: garbage-collect\n      type: garbage-collect\n      properties:\n        rules:\n          - selector:\n              traitTypes:\n                - expose\n            strategy: onAppDelete\nEOF\n```\n\n$ kubectl get deployment\nNAME              READY   UP-TO-DATE   AVAILABLE   AGE\nhello-world-new   1/1     1            1           10s\n$ kubectl get service\nNAME              TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)    AGE\nhello-world       ClusterIP   10.96.160.208   <none>        8000/TCP   5m56s\nhello-world-new   ClusterIP   10.96.20.4      <none>        8000/TCP   13s\n```\n\nIf you want to deploy job-like components, in which cases the resources in the component are not expected to be recycled even after the application is deleted, you can use the component type selector and set strategy to `never` as follows.\n\n```codeBlockLines_e6Vv\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: garbage-collect-app\nspec:\n  components:\n    - name: hello-world-new\n      type: job-like-component\n  policies:\n    - name: garbage-collect\n      type: garbage-collect\n      properties:\n        rules:\n          - selector:\n              componentTypes:\n                - webservice\n            strategy: never\n```\n\nAn alternative selector for the component resources is the component name selector.\n\n```codeBlockLines_e6Vv\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: create-ns-app\nspec:\n  components:\n    - name: example-addon-namespace\n      type: k8s-objects\n      properties:\n        objects:\n          - apiVersion: v1\n            kind: Namespace\n  policies:\n    - name: garbage-collect\n      type: garbage-collect\n      properties:\n        rules:\n          - selector:\n              componentNames:\n                - example-addon-namespace\n            strategy: never\n```\n\n## Delete resource in the dependency order\nIf you want to garbage collect resources in the order of reverse dependency, you can add `order: dependency` in the `garbage-collect` policy.\n\nnote\n\nThis delete in order feature is only available for the resources that created in the components. Custom Resources deployed in WorkflowStep will not be included.\n\n```codeBlockLines_e6Vv\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: gc-dependency\n  namespace: default\nspec:\n  components:\n  - name: test1\n    type: webservice\n    properties:\n      image: crccheck/hello-world\n      port: 8000\n    dependsOn:\n      - \"test2\"\n  - name: test2\n    type: webservice\n    properties:\n      image: crccheck/hello-world\n      port: 8000\n    inputs:\n      - from: test3-output\n        parameterKey: test\n  - name: test3\n    type: webservice\n    properties:\n      image: crccheck/hello-world\n      port: 8000\n    outputs:\n      - name: test3-output\n        valueFrom: output.metadata.name\n\n  policies:\n    - name: gc-dependency\n      type: garbage-collect\n      properties:\n        order: dependency\n```\n\nIn the example above, component `test1` depends on `test2`, and `test2` need the output from `test3`.\n\nSo the creation order of deployment is: `test3 -> test2 -> test1`.\n\nWhen we add `order: dependency` in `garbage-collect` policy and delete the application, the order of garbage collection is: `test1 -> test2 -> test3`.\n", "metadata": {"source_url": "https://kubevela.io/docs/end-user/policies/gc", "title": "Garbage Collection Policies in KubeVela", "description": "This page covers the garbage-collect policy in KubeVela, detailing how to manage outdated resources during application updates.", "has_code_examples": true, "has_best_practices": false, "section_count": 3, "timestamp": "2025-02-28 15:12:07", "type": "overview", "page_metadata": {"language": "en", "msapplication-config": "/img/favicons/browserconfig.xml", "docusaurus_version": "v1.10", "twitter:card": "summary_large_image", "docsearch:docusaurus_tag": "docs-default-v1.10", "generator": "Docusaurus v2.4.3", "ogUrl": "https://kubevela.io/docs/end-user/policies/gc/", "og:title": "Garbage Collect | KubeVela", "title": "Garbage Collect | KubeVela", "ogTitle": "Garbage Collect | KubeVela", "docusaurus_tag": "docs-default-v1.10", "og:url": "https://kubevela.io/docs/end-user/policies/gc/", "viewport": "width=device-width, initial-scale=1.0", "description": "By default, KubeVela Application will recycle outdated resources when new version is deployed and confirmed to be healthy. In some cases, you may want to have more customized control to the recycle of outdated resources, where you can leverage the garbage-collect policy.", "docsearch:version": "v1.10", "og:description": "By default, KubeVela Application will recycle outdated resources when new version is deployed and confirmed to be healthy. In some cases, you may want to have more customized control to the recycle of outdated resources, where you can leverage the garbage-collect policy.", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "theme-color": "#ffffff", "ogDescription": "By default, KubeVela Application will recycle outdated resources when new version is deployed and confirmed to be healthy. In some cases, you may want to have more customized control to the recycle of outdated resources, where you can leverage the garbage-collect policy.", "docusaurus_locale": "en", "docsearch:language": "en", "scrapeId": "91360249-1f66-4782-be36-c4ceae972e06", "sourceURL": "https://kubevela.io/docs/end-user/policies/gc", "url": "https://kubevela.io/docs/end-user/policies/gc/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"Garbage Collection Policies in KubeVela\"?\n\nAssistant: Here are some code examples:\n\n### Create App with Keep Legacy Resource\n```yaml\ncat <<EOF | vela up -f -\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: first-vela-app\nspec:\n  components:\n    - name: express-server\n      type: webservice\n      properties:\n        image: oamdev/hello-world\n        port: 8000\n      traits:\n        - type: gateway\n          properties:\n            class: traefik\n            domain: 47.251.8.82.nip.io\n            http:\n              \"/\": 8000\n  policies:\n    - name: keep-legacy-resource\n      type: garbage-collect\n      properties:\n        keepLegacyResource: true\nEOF\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/end-user/policies/gc", "title": "Garbage Collection Policies in KubeVela", "description": "This page covers the garbage-collect policy in KubeVela, detailing how to manage outdated resources during application updates.", "has_code_examples": true, "has_best_practices": false, "section_count": 3, "timestamp": "2025-02-28 15:12:07", "type": "code_examples", "page_metadata": {"language": "en", "msapplication-config": "/img/favicons/browserconfig.xml", "docusaurus_version": "v1.10", "twitter:card": "summary_large_image", "docsearch:docusaurus_tag": "docs-default-v1.10", "generator": "Docusaurus v2.4.3", "ogUrl": "https://kubevela.io/docs/end-user/policies/gc/", "og:title": "Garbage Collect | KubeVela", "title": "Garbage Collect | KubeVela", "ogTitle": "Garbage Collect | KubeVela", "docusaurus_tag": "docs-default-v1.10", "og:url": "https://kubevela.io/docs/end-user/policies/gc/", "viewport": "width=device-width, initial-scale=1.0", "description": "By default, KubeVela Application will recycle outdated resources when new version is deployed and confirmed to be healthy. In some cases, you may want to have more customized control to the recycle of outdated resources, where you can leverage the garbage-collect policy.", "docsearch:version": "v1.10", "og:description": "By default, KubeVela Application will recycle outdated resources when new version is deployed and confirmed to be healthy. In some cases, you may want to have more customized control to the recycle of outdated resources, where you can leverage the garbage-collect policy.", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "theme-color": "#ffffff", "ogDescription": "By default, KubeVela Application will recycle outdated resources when new version is deployed and confirmed to be healthy. In some cases, you may want to have more customized control to the recycle of outdated resources, where you can leverage the garbage-collect policy.", "docusaurus_locale": "en", "docsearch:language": "en", "scrapeId": "91360249-1f66-4782-be36-c4ceae972e06", "sourceURL": "https://kubevela.io/docs/end-user/policies/gc", "url": "https://kubevela.io/docs/end-user/policies/gc/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"vela addon push\"?\n\nAssistant: Uploads an addon package to ChartMuseum.\n\nHere's a detailed explanation:\n\n\n## Synopsis\nUploads an addon package to ChartMuseum.\n\nTwo arguments are needed <addon directory/package> and <name/URL of ChartMuseum>.\n\nThe first argument <addon directory/package> can be:\n\n- your conventional addon directory (containing metadata.yaml). We will package it for you.\n- packaged addon (.tgz) generated by 'vela addon package' command\n\nThe second argument <name/URL of ChartMuseum> can be:\n\n- registry name (helm type). You can add your ChartMuseum registry using 'vela addon registry add'.\n- ChartMuseum URL, e.g. http://localhost:8080\n\n```bash\nvela addon push [flags]\n```\n\n## Examples\n```bash\n# Push the addon in directory <your-addon> to a ChartMuseum registry named <localcm>\n$ vela addon push your-addon localcm\n\n# Push packaged addon mongo-1.0.0.tgz to a ChartMuseum registry at http://localhost:8080\n$ vela addon push mongo-1.0.0.tgz http://localhost:8080\n\n# Force push, overwriting existing ones\n$ vela addon push your-addon localcm -f\n\n# If you already written your own Chart.yaml and don't want us to generate it for you:\n$ vela addon push your-addon localcm --keep-chartmeta\n# Note: when using .tgz packages, we will always keep the original Chart.yaml\n\n# In addition to cli flags, you can also use environment variables\n$ HELM_REPO_USERNAME=name HELM_REPO_PASSWORD=pswd vela addon push mongo-1.0.0.tgz http://localhost:8080\n```\n\n## Options\n```bash\n      --access-token string   send token in Authorization header [$HELM_REPO_ACCESS_TOKEN]\n  -a, --app-version string    override app version pre-push\n      --auth-header string    alternative header to use for token auth [$HELM_REPO_AUTH_HEADER]\n      --ca-file string        verify certificates of HTTPS-enabled servers using this CA bundle [$HELM_REPO_CA_FILE]\n      --cert-file string      identify HTTPS client using this SSL certificate file [$HELM_REPO_CERT_FILE]\n      --context-path string   ChartMuseum context path [$HELM_REPO_CONTEXT_PATH]\n  -f, --force                 force upload even if chart version exists\n  -h, --help                  help for push\n      --insecure              connect to server with an insecure way by skipping certificate verification [$HELM_REPO_INSECURE]\n      --keep-chartmeta        do not update Chart.yaml automatically according to addon metadata (only when addon dir provided)\n      --key-file string       identify HTTPS client using this SSL key file [$HELM_REPO_KEY_FILE]\n  -p, --password string       override HTTP basic auth password [$HELM_REPO_PASSWORD]\n  -t, --timeout int           The duration (in seconds) vela cli will wait to get response from ChartMuseum (default 30)\n      --use-http              use HTTP\n  -u, --username string       override HTTP basic auth username [$HELM_REPO_USERNAME]\n  -v, --version string        override chart version pre-push\n```\n\n## Options inherited from parent commands\n```bash\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n\n## SEE ALSO\n- [vela addon](https://kubevela.io/docs/v1.9/cli/vela_addon/) \\- Manage addons for extension.\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.9/cli/vela_addon_push", "title": "vela addon push", "description": "Uploads an addon package to ChartMuseum.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:12:21", "type": "overview", "page_metadata": {"description": "uploads an addon package to ChartMuseum", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docsearch:version": "v1.9", "og:description": "uploads an addon package to ChartMuseum", "msapplication-config": "/img/favicons/browserconfig.xml", "og:title": "vela addon push | KubeVela", "og:url": "https://kubevela.io/docs/v1.9/cli/vela_addon_push/", "viewport": "width=device-width, initial-scale=1.0", "docusaurus_version": "v1.9", "generator": "Docusaurus v2.4.3", "twitter:card": "summary_large_image", "docusaurus_locale": "en", "theme-color": "#ffffff", "ogUrl": "https://kubevela.io/docs/v1.9/cli/vela_addon_push/", "language": "en", "docusaurus_tag": "docs-default-v1.9", "docsearch:language": "en", "ogTitle": "vela addon push | KubeVela", "title": "vela addon push | KubeVela", "docsearch:docusaurus_tag": "docs-default-v1.9", "ogDescription": "uploads an addon package to ChartMuseum", "scrapeId": "f1d1c35a-eead-436f-b347-caf402aba8f0", "sourceURL": "https://kubevela.io/docs/v1.9/cli/vela_addon_push", "url": "https://kubevela.io/docs/v1.9/cli/vela_addon_push/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"vela addon push\"?\n\nAssistant: Here are some code examples:\n\n### Push an addon to ChartMuseum\n```yaml\n$ vela addon push your-addon localcm\n```\n\n### Push packaged addon to ChartMuseum\n```yaml\n$ vela addon push mongo-1.0.0.tgz http://localhost:8080\n```\n\n### Force push an addon\n```yaml\n$ vela addon push your-addon localcm -f\n```\n\n### Push addon without generating Chart.yaml\n```yaml\n$ vela addon push your-addon localcm --keep-chartmeta\n```\n\n### Using environment variables for authentication\n```yaml\n$ HELM_REPO_USERNAME=name HELM_REPO_PASSWORD=pswd vela addon push mongo-1.0.0.tgz http://localhost:8080\n```\n\n### Options for push command\n```yaml\n--access-token string   send token in Authorization header [$HELM_REPO_ACCESS_TOKEN]\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.9/cli/vela_addon_push", "title": "vela addon push", "description": "Uploads an addon package to ChartMuseum.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:12:21", "type": "code_examples", "page_metadata": {"description": "uploads an addon package to ChartMuseum", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docsearch:version": "v1.9", "og:description": "uploads an addon package to ChartMuseum", "msapplication-config": "/img/favicons/browserconfig.xml", "og:title": "vela addon push | KubeVela", "og:url": "https://kubevela.io/docs/v1.9/cli/vela_addon_push/", "viewport": "width=device-width, initial-scale=1.0", "docusaurus_version": "v1.9", "generator": "Docusaurus v2.4.3", "twitter:card": "summary_large_image", "docusaurus_locale": "en", "theme-color": "#ffffff", "ogUrl": "https://kubevela.io/docs/v1.9/cli/vela_addon_push/", "language": "en", "docusaurus_tag": "docs-default-v1.9", "docsearch:language": "en", "ogTitle": "vela addon push | KubeVela", "title": "vela addon push | KubeVela", "docsearch:docusaurus_tag": "docs-default-v1.9", "ogDescription": "uploads an addon package to ChartMuseum", "scrapeId": "f1d1c35a-eead-436f-b347-caf402aba8f0", "sourceURL": "https://kubevela.io/docs/v1.9/cli/vela_addon_push", "url": "https://kubevela.io/docs/v1.9/cli/vela_addon_push/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"vela addon push\"?\n\nAssistant: Here are the recommended best practices:\n\n• Use the '--force' option to overwrite existing charts if necessary.\n• When using packaged addons, the original Chart.yaml will always be preserved.\n• Utilize environment variables for sensitive information like usernames and passwords.\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.9/cli/vela_addon_push", "title": "vela addon push", "description": "Uploads an addon package to ChartMuseum.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:12:21", "type": "best_practices", "page_metadata": {"description": "uploads an addon package to ChartMuseum", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docsearch:version": "v1.9", "og:description": "uploads an addon package to ChartMuseum", "msapplication-config": "/img/favicons/browserconfig.xml", "og:title": "vela addon push | KubeVela", "og:url": "https://kubevela.io/docs/v1.9/cli/vela_addon_push/", "viewport": "width=device-width, initial-scale=1.0", "docusaurus_version": "v1.9", "generator": "Docusaurus v2.4.3", "twitter:card": "summary_large_image", "docusaurus_locale": "en", "theme-color": "#ffffff", "ogUrl": "https://kubevela.io/docs/v1.9/cli/vela_addon_push/", "language": "en", "docusaurus_tag": "docs-default-v1.9", "docsearch:language": "en", "ogTitle": "vela addon push | KubeVela", "title": "vela addon push | KubeVela", "docsearch:docusaurus_tag": "docs-default-v1.9", "ogDescription": "uploads an addon package to ChartMuseum", "scrapeId": "f1d1c35a-eead-436f-b347-caf402aba8f0", "sourceURL": "https://kubevela.io/docs/v1.9/cli/vela_addon_push", "url": "https://kubevela.io/docs/v1.9/cli/vela_addon_push/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"Health Policy in KubeVela\"?\n\nAssistant: This documentation will introduce how to use health policy to apply periodical health checking to an application.\n\nHere's a detailed explanation:\n\n\n## Background\nAfter an application is deployed, users usually want to monitor or observe the health condition of the running application as well as each components. Health policy decouples health checking procedure from application workflow execution.\n\nIt allows to set independent health inspection cycle, such as check every 30s. That helps users to notice as soon as applications turn out unhealthy and follow the diagnosis message to troubleshot.\n\n## Health Policy\nWe apply the sample application including two components, `my-server` is supposed to be healthy while `my-server-unhealthy` is supposed to be unhealthy (because of invalid image).\n\nAs shown in the sample, a `Health` policy is specified.\n`Health` policy accepts two optional properties, `probeInterval` indicating time duration between checking (default is 30s) and `probeTimeout` indicating time duration before checking timeout (default is 10s).\n\nTo learn about defining health checking rules, please refer to **[Status Write Back](https://kubevela.io/docs/platform-engineers/traits/status/)**.\n\nFinally we can observe application health status from its `status.services`. Here is a snippet of health status.\n\n## Appendix: Parameter List\n| Name | Desc | Type | Required | Default Value |\n| :-- | :-- | :-- | :-- | :-- |\n| probeInterval | time duration between checking (in units of seconds) | int | false | 30 |\n| probeTimeout | time duration before checking timeout (in units of seconds) | int | false | 10 |\n", "metadata": {"source_url": "https://kubevela.io/docs/end-user/policies/health", "title": "Health Policy in KubeVela", "description": "This documentation will introduce how to use health policy to apply periodical health checking to an application.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 15:12:34", "type": "overview", "page_metadata": {"viewport": "width=device-width, initial-scale=1.0", "generator": "Docusaurus v2.4.3", "ogTitle": "Health Check | KubeVela", "theme-color": "#ffffff", "docusaurus_version": "v1.10", "docusaurus_tag": "docs-default-v1.10", "title": "Health Check | KubeVela", "og:description": "This documentation will introduce how to use health policy to apply periodical", "language": "en", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:url": "https://kubevela.io/docs/end-user/policies/health/", "ogUrl": "https://kubevela.io/docs/end-user/policies/health/", "twitter:card": "summary_large_image", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogDescription": "This documentation will introduce how to use health policy to apply periodical", "docusaurus_locale": "en", "docsearch:language": "en", "og:title": "Health Check | KubeVela", "docsearch:version": "v1.10", "description": "This documentation will introduce how to use health policy to apply periodical", "msapplication-config": "/img/favicons/browserconfig.xml", "scrapeId": "1b61e977-80cb-4c37-a5bb-d6b9e6b73ddd", "sourceURL": "https://kubevela.io/docs/end-user/policies/health", "url": "https://kubevela.io/docs/end-user/policies/health/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"Health Policy in KubeVela\"?\n\nAssistant: Here are some code examples:\n\n### Sample Application with Health Policy\n```yaml\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: app-healthscope-unhealthy\nspec:\n  components:\n    - name: my-server\n      type: webservice\n      properties:\n        cmd:\n          - node\n          - server.js\n        image: oamdev/testapp:v1\n        port: 8080\n      traits:\n        - type: ingress\n          properties:\n            domain: test.my.domain\n            http:\n              \"/\": 8080\n    - name: my-server-unhealthy\n      type: webservice\n      properties:\n        cmd:\n          - node\n          - server.js\n        image: oamdev/testapp:boom # make it unhealthy\n        port: 8080\n  policies:\n    - name: health-policy-demo\n      type: health\n      properties:\n        probeInterval: 5\n        probeTimeout: 10\n\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/end-user/policies/health", "title": "Health Policy in KubeVela", "description": "This documentation will introduce how to use health policy to apply periodical health checking to an application.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 15:12:34", "type": "code_examples", "page_metadata": {"viewport": "width=device-width, initial-scale=1.0", "generator": "Docusaurus v2.4.3", "ogTitle": "Health Check | KubeVela", "theme-color": "#ffffff", "docusaurus_version": "v1.10", "docusaurus_tag": "docs-default-v1.10", "title": "Health Check | KubeVela", "og:description": "This documentation will introduce how to use health policy to apply periodical", "language": "en", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:url": "https://kubevela.io/docs/end-user/policies/health/", "ogUrl": "https://kubevela.io/docs/end-user/policies/health/", "twitter:card": "summary_large_image", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogDescription": "This documentation will introduce how to use health policy to apply periodical", "docusaurus_locale": "en", "docsearch:language": "en", "og:title": "Health Check | KubeVela", "docsearch:version": "v1.10", "description": "This documentation will introduce how to use health policy to apply periodical", "msapplication-config": "/img/favicons/browserconfig.xml", "scrapeId": "1b61e977-80cb-4c37-a5bb-d6b9e6b73ddd", "sourceURL": "https://kubevela.io/docs/end-user/policies/health", "url": "https://kubevela.io/docs/end-user/policies/health/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"Health Policy in KubeVela\"?\n\nAssistant: Here are the recommended best practices:\n\n• Use health policies to monitor application health effectively.\n• Set appropriate probe intervals and timeouts based on application requirements.\n", "metadata": {"source_url": "https://kubevela.io/docs/end-user/policies/health", "title": "Health Policy in KubeVela", "description": "This documentation will introduce how to use health policy to apply periodical health checking to an application.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 15:12:34", "type": "best_practices", "page_metadata": {"viewport": "width=device-width, initial-scale=1.0", "generator": "Docusaurus v2.4.3", "ogTitle": "Health Check | KubeVela", "theme-color": "#ffffff", "docusaurus_version": "v1.10", "docusaurus_tag": "docs-default-v1.10", "title": "Health Check | KubeVela", "og:description": "This documentation will introduce how to use health policy to apply periodical", "language": "en", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:url": "https://kubevela.io/docs/end-user/policies/health/", "ogUrl": "https://kubevela.io/docs/end-user/policies/health/", "twitter:card": "summary_large_image", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogDescription": "This documentation will introduce how to use health policy to apply periodical", "docusaurus_locale": "en", "docsearch:language": "en", "og:title": "Health Check | KubeVela", "docsearch:version": "v1.10", "description": "This documentation will introduce how to use health policy to apply periodical", "msapplication-config": "/img/favicons/browserconfig.xml", "scrapeId": "1b61e977-80cb-4c37-a5bb-d6b9e6b73ddd", "sourceURL": "https://kubevela.io/docs/end-user/policies/health", "url": "https://kubevela.io/docs/end-user/policies/health/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela Authentication Integration\"?\n\nAssistant: This page covers how to use impersonation in KubeVela applications, including creating ServiceAccounts, Roles, and deploying applications with specific ServiceAccounts.\n\nHere's a detailed explanation:\n\n\n## Example\nLet's assume that we have two namespaces:\n\n- `demo-service`: for managing application\n- `demo-service-prod`: to deploy components for the production environment\n\nIn this example, we will make the Application use a specific ServiceAccount instead of the controller ServiceAccount.\n\n## Creating ServiceAccount\nCreate `deployer` ServiceAccount in `demo-service` namespace.\n\n## Creating Role/RoleBinding\nAllow `deployer` ServiceAccount in `demo-service` to manage Deployments in `demo-service-prod` by creating Role/RoleBinding.\n\n> Notice that KubeVela application requires the identity to impersonate to have the privileges for writing ControllerRevision. If you use `--optimize-disable-component-revision` in the KubeVela controller, you can ignore this requirement.\n\n## Deploying an Application with ServiceAccount\nAfter deploying the Application, you can check the Application is deployed successfully.\n\n## Impersonate as User/Groups\nIf you would like to let the application to impersonate as specific user and group, you can set the annotation `app.oam.dev/username` and `app.oam.dev/group` in the application respectively.\n", "metadata": {"source_url": "https://kubevela.io/docs/platform-engineers/auth/integration", "title": "KubeVela Authentication Integration", "description": "This page covers how to use impersonation in KubeVela applications, including creating ServiceAccounts, Roles, and deploying applications with specific ServiceAccounts.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:12:55", "type": "overview", "page_metadata": {"msapplication-config": "/img/favicons/browserconfig.xml", "docsearch:version": "v1.10", "viewport": "width=device-width, initial-scale=1.0", "theme-color": "#ffffff", "docsearch:language": "en", "generator": "Docusaurus v2.4.3", "title": "Systems Integration | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogUrl": "https://kubevela.io/docs/platform-engineers/auth/integration/", "docusaurus_locale": "en", "og:title": "Systems Integration | KubeVela", "language": "en", "ogTitle": "Systems Integration | KubeVela", "twitter:card": "summary_large_image", "og:url": "https://kubevela.io/docs/platform-engineers/auth/integration/", "docusaurus_tag": "docs-default-v1.10", "description": "KubeVela application natively supports impersonation even without the Authentication flag enabled. That means when the Authentication flag is disabled, you can manually set the identity to impersonate in the application's annotation fields. For example, the following guide will give an example on how to manually set the application to impersonate as a ServiceAccount.", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:description": "KubeVela application natively supports impersonation even without the Authentication flag enabled. That means when the Authentication flag is disabled, you can manually set the identity to impersonate in the application's annotation fields. For example, the following guide will give an example on how to manually set the application to impersonate as a ServiceAccount.", "ogDescription": "KubeVela application natively supports impersonation even without the Authentication flag enabled. That means when the Authentication flag is disabled, you can manually set the identity to impersonate in the application's annotation fields. For example, the following guide will give an example on how to manually set the application to impersonate as a ServiceAccount.", "docusaurus_version": "v1.10", "scrapeId": "d593363a-2605-42aa-82dd-7d2535fe00a1", "sourceURL": "https://kubevela.io/docs/platform-engineers/auth/integration", "url": "https://kubevela.io/docs/platform-engineers/auth/integration/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"KubeVela Authentication Integration\"?\n\nAssistant: Here are some code examples:\n\n### Creating ServiceAccount\n```yaml\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: deployer\n  namespace: demo-service\n\n```\n\n### Creating Role/RoleBinding\n```yaml\napiVersion: rbac.authorization.k8s.io/v1\nkind: Role\nmetadata:\n  name: deployments:admin\n  namespace: demo-service-prod\nrules:\n  - apiGroups: [\"apps\"]\n    resources: [\"deployments\"]\n    verbs: [\"*\"]\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: RoleBinding\nmetadata:\n  name: deployments:admin\n  namespace: demo-service-prod\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: Role\n  name: deployments:admin\nsubjects:\n  - kind: ServiceAccount\n    name: deployer\n    namespace: demo-service\n\n```\n\n### Deploying an Application with ServiceAccount\n```yaml\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: multi-env-demo-with-service-account\n  namespace: demo-service\n  annotations:\n    app.oam.dev/service-account-name: deployer # the name of the ServiceAccount we created\nspec:\n  components:\n    - name: nginx-server\n      type: webservice\n      properties:\n        image: nginx:1.21\n        port: 80\n  policies:\n    - name: env\n      type: env-binding\n      properties:\n        created: false\n        envs:\n          - name: prod\n            patch:\n              components:\n                - name: nginx-server\n                  type: webservice\n                  properties:\n                    image: nginx:1.20\n                    port: 80\n            placement:\n              namespaceSelector:\n                name: demo-service-prod\n  workflow:\n    steps:\n      - name: deploy-prod-server\n        type: deploy2env\n        properties:\n          policy: env\n          env: prod\n\n```\n\n### Checking Application Status\n```yaml\n$ vela status multi-env-demo-with-service-account -n demo-service\nAbout:\n\n  Name:         multi-env-demo-with-service-account\n  Namespace:    demo-service\n  Created at:   2022-05-31 17:58:14 +0800 CST\n  Status:       running\n\nWorkflow:\n\n  mode: StepByStep\n  finished: true\n  Suspend: false\n  Terminated: false\n  Steps\n  - id:ut3bxuisoy\n    name:deploy-prod-server\n    type:deploy2env\n    phase:succeeded\n    message:\n\nServices:\n\n  - Name: nginx-server\n    Cluster: local  Namespace: demo-service-prod\n    Type: webservice\n    Healthy Ready:1/1\n    No trait applied\n\n```\n\n### Error Message for Unauthorized ServiceAccount\n```yaml\nDispatch: Found 1 errors. [(cannot get object: deployments.apps \"nginx-server\" is forbidden: User \"system:serviceaccount:demo-service:non-authorized-account\" cannot get resource \"deployments\" in API group \"apps\" in the namespace \"demo-service-prod\")]\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/platform-engineers/auth/integration", "title": "KubeVela Authentication Integration", "description": "This page covers how to use impersonation in KubeVela applications, including creating ServiceAccounts, Roles, and deploying applications with specific ServiceAccounts.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:12:55", "type": "code_examples", "page_metadata": {"msapplication-config": "/img/favicons/browserconfig.xml", "docsearch:version": "v1.10", "viewport": "width=device-width, initial-scale=1.0", "theme-color": "#ffffff", "docsearch:language": "en", "generator": "Docusaurus v2.4.3", "title": "Systems Integration | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogUrl": "https://kubevela.io/docs/platform-engineers/auth/integration/", "docusaurus_locale": "en", "og:title": "Systems Integration | KubeVela", "language": "en", "ogTitle": "Systems Integration | KubeVela", "twitter:card": "summary_large_image", "og:url": "https://kubevela.io/docs/platform-engineers/auth/integration/", "docusaurus_tag": "docs-default-v1.10", "description": "KubeVela application natively supports impersonation even without the Authentication flag enabled. That means when the Authentication flag is disabled, you can manually set the identity to impersonate in the application's annotation fields. For example, the following guide will give an example on how to manually set the application to impersonate as a ServiceAccount.", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:description": "KubeVela application natively supports impersonation even without the Authentication flag enabled. That means when the Authentication flag is disabled, you can manually set the identity to impersonate in the application's annotation fields. For example, the following guide will give an example on how to manually set the application to impersonate as a ServiceAccount.", "ogDescription": "KubeVela application natively supports impersonation even without the Authentication flag enabled. That means when the Authentication flag is disabled, you can manually set the identity to impersonate in the application's annotation fields. For example, the following guide will give an example on how to manually set the application to impersonate as a ServiceAccount.", "docusaurus_version": "v1.10", "scrapeId": "d593363a-2605-42aa-82dd-7d2535fe00a1", "sourceURL": "https://kubevela.io/docs/platform-engineers/auth/integration", "url": "https://kubevela.io/docs/platform-engineers/auth/integration/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela Authentication Integration\"?\n\nAssistant: Here are the recommended best practices:\n\n• KubeVela application requires the identity to impersonate to have the privileges for writing ControllerRevision. If you use `--optimize-disable-component-revision` in the KubeVela controller, you can ignore this requirement.\n", "metadata": {"source_url": "https://kubevela.io/docs/platform-engineers/auth/integration", "title": "KubeVela Authentication Integration", "description": "This page covers how to use impersonation in KubeVela applications, including creating ServiceAccounts, Roles, and deploying applications with specific ServiceAccounts.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:12:55", "type": "best_practices", "page_metadata": {"msapplication-config": "/img/favicons/browserconfig.xml", "docsearch:version": "v1.10", "viewport": "width=device-width, initial-scale=1.0", "theme-color": "#ffffff", "docsearch:language": "en", "generator": "Docusaurus v2.4.3", "title": "Systems Integration | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogUrl": "https://kubevela.io/docs/platform-engineers/auth/integration/", "docusaurus_locale": "en", "og:title": "Systems Integration | KubeVela", "language": "en", "ogTitle": "Systems Integration | KubeVela", "twitter:card": "summary_large_image", "og:url": "https://kubevela.io/docs/platform-engineers/auth/integration/", "docusaurus_tag": "docs-default-v1.10", "description": "KubeVela application natively supports impersonation even without the Authentication flag enabled. That means when the Authentication flag is disabled, you can manually set the identity to impersonate in the application's annotation fields. For example, the following guide will give an example on how to manually set the application to impersonate as a ServiceAccount.", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:description": "KubeVela application natively supports impersonation even without the Authentication flag enabled. That means when the Authentication flag is disabled, you can manually set the identity to impersonate in the application's annotation fields. For example, the following guide will give an example on how to manually set the application to impersonate as a ServiceAccount.", "ogDescription": "KubeVela application natively supports impersonation even without the Authentication flag enabled. That means when the Authentication flag is disabled, you can manually set the identity to impersonate in the application's annotation fields. For example, the following guide will give an example on how to manually set the application to impersonate as a ServiceAccount.", "docusaurus_version": "v1.10", "scrapeId": "d593363a-2605-42aa-82dd-7d2535fe00a1", "sourceURL": "https://kubevela.io/docs/platform-engineers/auth/integration", "url": "https://kubevela.io/docs/platform-engineers/auth/integration/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela OpenAPI Overview\"?\n\nAssistant: This page introduces how to integrate VelaUX OpenAPI, including authentication, API examples, and usage of VelaQL.\n\nHere's a detailed explanation:\n\n\n## Authentication and API Example\nThis section will introduce how to integrate VelaUX OpenAPI, please make sure you have enabled the `velaux` addon. Let's use port-forward to expose the endpoint for the following demo.\n\n```codeBlockLines_e6Vv\nvela port-forward addon-velaux -n vela-system 8000:80\n```\n\n### Login and get the token\nVelaUX has introduced [Json Web Token](https://jwt.io/) for authorization. As a result, you need to call the login API to complete the authentication and get the token. The following example is with the default admin account.\n\n```codeBlockLines_e6Vv\ncurl -H Content-Type:application/json -X POST -d '{\"username\": \"admin\", \"password\":\"VelaUX12345\"}' http://127.0.0.1:8000/api/v1/auth/login\n```\n\n> `http://127.0.0.1:8000` This is demo address, you should replace it with the real address. If you changed the password, replace it with the real password.\n\nThe expected output should be like this:\n\n```codeBlockLines_e6Vv\n{\n \"user\": {\n  \"createTime\": \"0001-01-01T00:00:00Z\",\n  \"lastLoginTime\": \"0001-01-01T00:00:00Z\",\n  \"name\": \"admin\",\n  \"email\": \"barnett.zqg@gmail.com\",\n  \"disabled\": false\n },\n \"accessToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImFkbWluIiwiZ3JhbnRUeXBlIjoiYWNjZXNzIiwiZXhwIjoxNjU2NTE0ODcyLCJpc3MiOiJ2ZWxhLWlzc3VlciIsIm5iZiI6MTY1NjUxMTI3Mn0.IqRWglW5cYMn8KJcbkoG55os9g-YTo_9UWFvbpZBKiY\",\n \"refreshToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImFkbWluIiwiZ3JhbnRUeXBlIjoicmVmcmVzaCIsImV4cCI6MTY1NjU5NzY3MiwiaXNzIjoidmVsYS1pc3N1ZXIiLCJuYmYiOjE2NTY1MTEyNzJ9.mUjXj1BQ2c3MaVyYnMYefgH2g8Y-swgjyCAzH-GbZu8\"\n}\n```\n\n- accessToken: This is the token to request other APIs, which will expire in an hour.\n- refreshToken: This is the token to refresh the access token.\n\n### Request other APIs\n- Create an application\n\n```codeBlockLines_e6Vv\ncurl -H Content-Type:application/json -H \"Authorization: Bearer <accessToken>\" -X POST -d '{\"name\":\"first-vela-app\", \"project\": \"default\", \"alias\": \"Demo App\", \"envBinding\": [{\"name\": \"default\"}], \"component\": {\"name\":\"express-server\",\"componentType\":\"webservice\", \"properties\": \"{\\\"image\\\":\\\"oamdev/hello-world\\\"}\"}}' http://127.0.0.1:8000/api/v1/applications\n```\n\n> Please replace `<accessToken>` with the response from the previous step.\n\nThe expected output should be like this:\n\n```codeBlockLines_e6Vv\n{\n \"name\": \"first-vela-app\",\n \"alias\": \"Demo App\",\n \"project\": {\n  \"name\": \"default\",\n  \"alias\": \"Default\",\n  \"description\": \"Default project is created by velaux system automatically.\",\n  \"createTime\": \"2022-06-24T14:41:42.237565+08:00\",\n  \"updateTime\": \"2022-06-24T14:41:42.237565+08:00\",\n  \"owner\": {\n   \"name\": \"admin\",\n   \"alias\": \"Administrator\"\n  }\n },\n \"description\": \"\",\n \"createTime\": \"2022-06-29T22:18:53.699216+08:00\",\n \"updateTime\": \"2022-06-29T22:18:53.699217+08:00\",\n \"icon\": \"\"\n}\n```\n\n- Deploy an application\n\n```codeBlockLines_e6Vv\ncurl -H Content-Type:application/json -H \"Authorization: Bearer <accessToken>\" -X POST -d '{\"workflowName\":\"workflow-default\",\"triggerType\":\"api\"}' http://127.0.0.1:8000/api/v1/applications/first-vela-app/deploy\n```\n\nThe expected output should be like this:\n\n```codeBlockLines_e6Vv\n{\n \"createTime\": \"2022-06-29T22:24:25.735085+08:00\",\n \"version\": \"20220629222425586\",\n \"status\": \"running\",\n \"deployUser\": {\n  \"name\": \"admin\",\n  \"alias\": \"Administrator\"\n },\n \"note\": \"\",\n \"envName\": \"default\",\n \"triggerType\": \"api\"\n}\n```\n\n- Using VelaQL to Query the application pod list\n\n```codeBlockLines_e6Vv\ncurl -H \"Authorization: Bearer <accessToken>\" -G \\\n    \"http://127.0.0.1:8000/api/v1/query\" \\\n    --data-urlencode 'velaql=component-pod-view{appNs=default,appName=first-vela-app}.status'\n```\n\nThe expected output should be like this:\n\n```codeBlockLines_e6Vv\n{\n \"podList\": [\\\n  {\\\n   \"cluster\": \"local\",\\\n   \"component\": \"express-server\",\\\n   \"metadata\": {\\\n    \"creationTime\": \"2022-06-29T14:24:26Z\",\\\n    \"name\": \"express-server-6f58ff895b-4gqvs\",\\\n    \"namespace\": \"default\",\\\n    \"version\": {\\\n     \"deployVersion\": \"20220629222425586\",\\\n     \"publishVersion\": \"workflow-default-20220629222425602\"\\\n    }\\\n   },\\\n   \"status\": {\\\n    \"hostIP\": \"172.18.0.2\",\\\n    \"nodeName\": \"cloudshell-control-plane\",\\\n    \"phase\": \"Running\",\\\n    \"podIP\": \"10.244.0.25\"\\\n   },\\\n   \"workload\": {\\\n    \"apiVersion\": \"apps/v1\",\\\n    \"kind\": \"Deployment\",\\\n    \"name\": \"express-server\",\\\n    \"namespace\": \"default\"\\\n   }\\\n  }\\\n ]\n}\n```\n\nFor more use cases about VelaQL, Please refer to [VelaQL](https://kubevela.io/docs/platform-engineers/system-operation/velaql/)\n\n### Refresh the token\n```codeBlockLines_e6Vv\ncurl -H Content-Type:application/json -X GET -H RefreshToken:<refreshToken> http://127.0.0.1:8000/api/v1/auth/refresh_token\n```\n\nThe expected output should be like this:\n\n```codeBlockLines_e6Vv\n{\n \"accessToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImFkbWluIiwiZ3JhbnRUeXBlIjoiYWNjZXNzIiwiZXhwIjoxNjU2NTE2OTExLCJpc3MiOiJ2ZWxhLWlzc3VlciIsIm5iZiI6MTY1NjUxMzMxMX0.zsUW_ME5mxTQxP-UFxQa4F8QDI-69RWpcfIFkn_WFSg\",\n \"refreshToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImFkbWluIiwiZ3JhbnRUeXBlIjoicmVmcmVzaCIsImV4cCI6MTY1NjU5NzY3MiwiaXNzIjoidmVsYS1pc3N1ZXIiLCJuYmYiOjE2NTY1MTEyNzJ9.mUjXj1BQ2c3MaVyYnMYefgH2g8Y-swgjyCAzH-GbZu8\"\n}\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/platform-engineers/openapi/overview", "title": "KubeVela OpenAPI Overview", "description": "This page introduces how to integrate VelaUX OpenAPI, including authentication, API examples, and usage of VelaQL.", "has_code_examples": true, "has_best_practices": true, "section_count": 1, "timestamp": "2025-02-28 15:13:31", "type": "overview", "page_metadata": {"favicon": "https://kubevela.io/img/favicons/favicon.ico", "language": "en", "docusaurus_tag": "docs-default-v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "generator": "Docusaurus v2.4.3", "ogTitle": "VelaUX OpenAPI | KubeVela", "docsearch:version": "v1.10", "title": "VelaUX OpenAPI | KubeVela", "docusaurus_locale": "en", "og:url": "https://kubevela.io/docs/platform-engineers/openapi/overview/", "docsearch:docusaurus_tag": "docs-default-v1.10", "docusaurus_version": "v1.10", "description": "This section will introduce how to integrate VelaUX OpenAPI, please make sure you have enabled the velaux addon. Let's use port-forward to expose the endpoint for the following demo.", "og:description": "This section will introduce how to integrate VelaUX OpenAPI, please make sure you have enabled the velaux addon. Let's use port-forward to expose the endpoint for the following demo.", "theme-color": "#ffffff", "twitter:card": "summary_large_image", "viewport": "width=device-width, initial-scale=1.0", "og:title": "VelaUX OpenAPI | KubeVela", "docsearch:language": "en", "ogDescription": "This section will introduce how to integrate VelaUX OpenAPI, please make sure you have enabled the velaux addon. Let's use port-forward to expose the endpoint for the following demo.", "ogUrl": "https://kubevela.io/docs/platform-engineers/openapi/overview/", "scrapeId": "716ecfeb-35b0-4122-92ad-0916a504d701", "sourceURL": "https://kubevela.io/docs/platform-engineers/openapi/overview", "url": "https://kubevela.io/docs/platform-engineers/openapi/overview/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"KubeVela OpenAPI Overview\"?\n\nAssistant: Here are some code examples:\n\n### Port Forward to Expose Endpoint\n```yaml\nvela port-forward addon-velaux -n vela-system 8000:80\n```\n\n### Login and Get Token\n```yaml\ncurl -H Content-Type:application/json -X POST -d '{\"username\": \"admin\", \"password\":\"VelaUX12345\"}' http://127.0.0.1:8000/api/v1/auth/login\n```\n\n### Create an Application\n```yaml\ncurl -H Content-Type:application/json -H \"Authorization: Bearer <accessToken>\" -X POST -d '{\"name\":\"first-vela-app\", \"project\": \"default\", \"alias\": \"Demo App\", \"envBinding\": [{\"name\": \"default\"}], \"component\": {\"name\":\"express-server\",\"componentType\":\"webservice\", \"properties\": \"{\\\"image\\\":\\\"oamdev/hello-world\\\"}\"}}' http://127.0.0.1:8000/api/v1/applications\n```\n\n### Deploy an Application\n```yaml\ncurl -H Content-Type:application/json -H \"Authorization: Bearer <accessToken>\" -X POST -d '{\"workflowName\":\"workflow-default\",\"triggerType\":\"api\"}' http://127.0.0.1:8000/api/v1/applications/first-vela-app/deploy\n```\n\n### Query Application Pod List\n```yaml\ncurl -H \"Authorization: Bearer <accessToken>\" -G \"http://127.0.0.1:8000/api/v1/query\" --data-urlencode 'velaql=component-pod-view{appNs=default,appName=first-vela-app}.status'\n```\n\n### Refresh the Token\n```yaml\ncurl -H Content-Type:application/json -X GET -H RefreshToken:<refreshToken> http://127.0.0.1:8000/api/v1/auth/refresh_token\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/platform-engineers/openapi/overview", "title": "KubeVela OpenAPI Overview", "description": "This page introduces how to integrate VelaUX OpenAPI, including authentication, API examples, and usage of VelaQL.", "has_code_examples": true, "has_best_practices": true, "section_count": 1, "timestamp": "2025-02-28 15:13:31", "type": "code_examples", "page_metadata": {"favicon": "https://kubevela.io/img/favicons/favicon.ico", "language": "en", "docusaurus_tag": "docs-default-v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "generator": "Docusaurus v2.4.3", "ogTitle": "VelaUX OpenAPI | KubeVela", "docsearch:version": "v1.10", "title": "VelaUX OpenAPI | KubeVela", "docusaurus_locale": "en", "og:url": "https://kubevela.io/docs/platform-engineers/openapi/overview/", "docsearch:docusaurus_tag": "docs-default-v1.10", "docusaurus_version": "v1.10", "description": "This section will introduce how to integrate VelaUX OpenAPI, please make sure you have enabled the velaux addon. Let's use port-forward to expose the endpoint for the following demo.", "og:description": "This section will introduce how to integrate VelaUX OpenAPI, please make sure you have enabled the velaux addon. Let's use port-forward to expose the endpoint for the following demo.", "theme-color": "#ffffff", "twitter:card": "summary_large_image", "viewport": "width=device-width, initial-scale=1.0", "og:title": "VelaUX OpenAPI | KubeVela", "docsearch:language": "en", "ogDescription": "This section will introduce how to integrate VelaUX OpenAPI, please make sure you have enabled the velaux addon. Let's use port-forward to expose the endpoint for the following demo.", "ogUrl": "https://kubevela.io/docs/platform-engineers/openapi/overview/", "scrapeId": "716ecfeb-35b0-4122-92ad-0916a504d701", "sourceURL": "https://kubevela.io/docs/platform-engineers/openapi/overview", "url": "https://kubevela.io/docs/platform-engineers/openapi/overview/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela OpenAPI Overview\"?\n\nAssistant: Here are the recommended best practices:\n\n• Make sure to enable the `velaux` addon before integrating VelaUX OpenAPI.\n• Replace demo addresses and tokens with real values when implementing the API calls.\n", "metadata": {"source_url": "https://kubevela.io/docs/platform-engineers/openapi/overview", "title": "KubeVela OpenAPI Overview", "description": "This page introduces how to integrate VelaUX OpenAPI, including authentication, API examples, and usage of VelaQL.", "has_code_examples": true, "has_best_practices": true, "section_count": 1, "timestamp": "2025-02-28 15:13:31", "type": "best_practices", "page_metadata": {"favicon": "https://kubevela.io/img/favicons/favicon.ico", "language": "en", "docusaurus_tag": "docs-default-v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "generator": "Docusaurus v2.4.3", "ogTitle": "VelaUX OpenAPI | KubeVela", "docsearch:version": "v1.10", "title": "VelaUX OpenAPI | KubeVela", "docusaurus_locale": "en", "og:url": "https://kubevela.io/docs/platform-engineers/openapi/overview/", "docsearch:docusaurus_tag": "docs-default-v1.10", "docusaurus_version": "v1.10", "description": "This section will introduce how to integrate VelaUX OpenAPI, please make sure you have enabled the velaux addon. Let's use port-forward to expose the endpoint for the following demo.", "og:description": "This section will introduce how to integrate VelaUX OpenAPI, please make sure you have enabled the velaux addon. Let's use port-forward to expose the endpoint for the following demo.", "theme-color": "#ffffff", "twitter:card": "summary_large_image", "viewport": "width=device-width, initial-scale=1.0", "og:title": "VelaUX OpenAPI | KubeVela", "docsearch:language": "en", "ogDescription": "This section will introduce how to integrate VelaUX OpenAPI, please make sure you have enabled the velaux addon. Let's use port-forward to expose the endpoint for the following demo.", "ogUrl": "https://kubevela.io/docs/platform-engineers/openapi/overview/", "scrapeId": "716ecfeb-35b0-4122-92ad-0916a504d701", "sourceURL": "https://kubevela.io/docs/platform-engineers/openapi/overview", "url": "https://kubevela.io/docs/platform-engineers/openapi/overview/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"Environment Binding in KubeVela\"?\n\nAssistant: This documentation will introduce how to use env-binding to automate multi-stage application rollout across multiple environments.\n\nHere's a detailed explanation:\n\n\n## Background\nUsers usually have two or more environments to deploy applications to. For example, dev environment to test the application code, and production environment to deploy applications to serve live traffic. For different environments, the deployment configuration also has some nuance.\n\n## Multi-env Application Deployment\n```codeBlockLines_e6Vv\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: example-app\n  namespace: demo\nspec:\n  components:\n    - name: hello-world-server\n      type: webservice\n      properties:\n        image: oamdev/hello-world\n        port: 8000\n      traits:\n        - type: scaler\n          properties:\n            replicas: 1\n    - name: data-worker\n      type: worker\n      properties:\n        image: busybox\n        cmd:\n          - sleep\n          - '1000000'\n  policies:\n    - name: example-multi-env-policy\n      type: env-binding\n      properties:\n        envs:\n          - name: test\n            placement: # selecting the namespace (in local cluster) to deploy to\n              namespaceSelector:\n                name: test\n            selector: # selecting which component to use\n              components:\n                - data-worker\n\n          - name: staging\n            placement: # selecting the cluster to deploy to\n              clusterSelector:\n                name: cluster-staging\n\n          - name: prod\n            placement: # selecting both namespace and cluster to deploy to\n              clusterSelector:\n                name: cluster-prod\n              namespaceSelector:\n                name: prod\n            patch: # overlay patch on above components\n              components:\n                - name: hello-world-server\n                  type: webservice\n                  traits:\n                    - type: scaler\n                      properties:\n                        replicas: 3\n\n  workflow:\n    steps:\n      # deploy to test env\n      - name: deploy-test\n        type: deploy2env\n        properties:\n          policy: example-multi-env-policy\n          env: test\n\n      # deploy to staging env\n      - name: deploy-staging\n        type: deploy2env\n        properties:\n          policy: example-multi-env-policy\n          env: staging\n\n      # manual check\n      - name: manual-approval\n        type: suspend\n\n      # deploy to prod env\n      - name: deploy-prod\n        type: deploy2env\n        properties:\n          policy: example-multi-env-policy\n          env: prod\n\n```\nWe apply the Application `policy-demo` in the example.\n\n> Before applying this example application, you need a namespace named `demo` in the current cluster and namespace `test` in both the current cluster and the staging cluster. You need namespace `prod` in cluster `cluster-prod` as well. You can create it by executing cmd `kubectl create ns <namespace>`.\n\n```codeBlockLines_e6Vv\nvela up -f app.yaml\n```\nAfter the Application is created, a configured Application will be created under the `demo` namespace.\n\n```codeBlockLines_e6Vv\n$ kubectl get app -n demo\nNAME          COMPONENT            TYPE         PHASE     HEALTHY   STATUS   AGE\nexample-app   hello-world-server   webservice   running                      25s\n```\nIf you want to learn more about `env-binding`, please refer to **[Multi Cluster Deployment](https://kubevela.io/docs/case-studies/multi-cluster/)**.\n\n## Appendix: Parameter List\n| Name | Desc | Type | Required | Default Value |\n| :-- | :-- | :-- | :-- | :-- |\n| envs | environment configuration | `env` array | true | null |\n\nenv\n\n| Name | Desc | Type | Required | Default Value |\n| :-- | :-- | :-- | :-- | :-- |\n| name | environment name | string | true | null |\n| patch | configure the components of the Application | `patch` | false | null |\n| placement | resource scheduling strategy, choose to deploy the configured resources to the specified cluster or namespace | `placement` | true | null |\n| selector | identify which components to be deployed for this environment, default to be empty which means deploying all components | `selector` | false | null |\n\npatch\n\n| Name | Desc | Type | Required | Default Value |\n| :-- | :-- | :-- | :-- | :-- |\n| components | components that need to be configured | component array | true | null |\n\nplacement\n\n| Name | Desc | Type | Required | Default Value |\n| :-- | :-- | :-- | :-- | :-- |\n| clusterSelector | select deploy cluster by cluster name | `clusterSelector` | false | null |\n| namespaceSelector | select deploy namespace by namespace name | `namespaceSelector` | false | null |\n\nselector\n\n| Name | Desc | Type | Required | Default Value |\n| :-- | :-- | :-- | :-- | :-- |\n| components | component names to be used | string array | false | null |\n\nclusterSelector\n\n| Name | Desc | Type | Required | Default Value |\n| :-- | :-- | :-- | :-- | :-- |\n| name | cluster name | string | false | null |\n\nnamespaceSelector\n\n| Name | Desc | Type | Required | Default Value |\n| :-- | :-- | :-- | :-- | :-- |\n| name | namespace name | string | false | null |\n\n> You need to upgrade to KubeVela v1.1.5+ to enable `namespaceSelector`.\n", "metadata": {"source_url": "https://kubevela.io/docs/end-user/policies/envbinding", "title": "Environment Binding in KubeVela", "description": "This documentation will introduce how to use env-binding to automate multi-stage application rollout across multiple environments.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 15:13:54", "type": "overview", "page_metadata": {"description": "This documentation will introduce how to use env-binding to automate multi-stage application rollout across multiple environments.", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogDescription": "This documentation will introduce how to use env-binding to automate multi-stage application rollout across multiple environments.", "ogUrl": "https://kubevela.io/docs/end-user/policies/envbinding/", "generator": "Docusaurus v2.4.3", "ogTitle": "Multi-Environment | KubeVela", "og:title": "Multi-Environment | KubeVela", "docusaurus_locale": "en", "msapplication-config": "/img/favicons/browserconfig.xml", "docusaurus_version": "v1.10", "viewport": "width=device-width, initial-scale=1.0", "og:url": "https://kubevela.io/docs/end-user/policies/envbinding/", "docsearch:language": "en", "docsearch:version": "v1.10", "og:description": "This documentation will introduce how to use env-binding to automate multi-stage application rollout across multiple environments.", "language": "en", "theme-color": "#ffffff", "title": "Multi-Environment | KubeVela", "docusaurus_tag": "docs-default-v1.10", "twitter:card": "summary_large_image", "docsearch:docusaurus_tag": "docs-default-v1.10", "scrapeId": "3d651455-8c3f-46c1-9cf2-9101a69bcaf2", "sourceURL": "https://kubevela.io/docs/end-user/policies/envbinding", "url": "https://kubevela.io/docs/end-user/policies/envbinding/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"Environment Binding in KubeVela\"?\n\nAssistant: Here are some code examples:\n\n### Application Example\n```yaml\n```codeBlockLines_e6Vv\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: example-app\n  namespace: demo\nspec:\n  components:\n    - name: hello-world-server\n      type: webservice\n      properties:\n        image: oamdev/hello-world\n        port: 8000\n      traits:\n        - type: scaler\n          properties:\n            replicas: 1\n    - name: data-worker\n      type: worker\n      properties:\n        image: busybox\n        cmd:\n          - sleep\n          - '1000000'\n  policies:\n    - name: example-multi-env-policy\n      type: env-binding\n      properties:\n        envs:\n          - name: test\n            placement: # selecting the namespace (in local cluster) to deploy to\n              namespaceSelector:\n                name: test\n            selector: # selecting which component to use\n              components:\n                - data-worker\n\n          - name: staging\n            placement: # selecting the cluster to deploy to\n              clusterSelector:\n                name: cluster-staging\n\n          - name: prod\n            placement: # selecting both namespace and cluster to deploy to\n              clusterSelector:\n                name: cluster-prod\n              namespaceSelector:\n                name: prod\n            patch: # overlay patch on above components\n              components:\n                - name: hello-world-server\n                  type: webservice\n                  traits:\n                    - type: scaler\n                      properties:\n                        replicas: 3\n\n  workflow:\n    steps:\n      # deploy to test env\n      - name: deploy-test\n        type: deploy2env\n        properties:\n          policy: example-multi-env-policy\n          env: test\n\n      # deploy to staging env\n      - name: deploy-staging\n        type: deploy2env\n        properties:\n          policy: example-multi-env-policy\n          env: staging\n\n      # manual check\n      - name: manual-approval\n        type: suspend\n\n      # deploy to prod env\n      - name: deploy-prod\n        type: deploy2env\n        properties:\n          policy: example-multi-env-policy\n          env: prod\n\n```\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/end-user/policies/envbinding", "title": "Environment Binding in KubeVela", "description": "This documentation will introduce how to use env-binding to automate multi-stage application rollout across multiple environments.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 15:13:54", "type": "code_examples", "page_metadata": {"description": "This documentation will introduce how to use env-binding to automate multi-stage application rollout across multiple environments.", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogDescription": "This documentation will introduce how to use env-binding to automate multi-stage application rollout across multiple environments.", "ogUrl": "https://kubevela.io/docs/end-user/policies/envbinding/", "generator": "Docusaurus v2.4.3", "ogTitle": "Multi-Environment | KubeVela", "og:title": "Multi-Environment | KubeVela", "docusaurus_locale": "en", "msapplication-config": "/img/favicons/browserconfig.xml", "docusaurus_version": "v1.10", "viewport": "width=device-width, initial-scale=1.0", "og:url": "https://kubevela.io/docs/end-user/policies/envbinding/", "docsearch:language": "en", "docsearch:version": "v1.10", "og:description": "This documentation will introduce how to use env-binding to automate multi-stage application rollout across multiple environments.", "language": "en", "theme-color": "#ffffff", "title": "Multi-Environment | KubeVela", "docusaurus_tag": "docs-default-v1.10", "twitter:card": "summary_large_image", "docsearch:docusaurus_tag": "docs-default-v1.10", "scrapeId": "3d651455-8c3f-46c1-9cf2-9101a69bcaf2", "sourceURL": "https://kubevela.io/docs/end-user/policies/envbinding", "url": "https://kubevela.io/docs/end-user/policies/envbinding/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"Environment Binding in KubeVela\"?\n\nAssistant: Here are the recommended best practices:\n\n• Before applying this example application, you need a namespace named `demo` in the current cluster and namespace `test` in both the current cluster and the staging cluster. You need namespace `prod` in cluster `cluster-prod` as well. You can create it by executing cmd `kubectl create ns <namespace>`.\n• You need to upgrade to KubeVela v1.1.5+ to enable `namespaceSelector`.\n", "metadata": {"source_url": "https://kubevela.io/docs/end-user/policies/envbinding", "title": "Environment Binding in KubeVela", "description": "This documentation will introduce how to use env-binding to automate multi-stage application rollout across multiple environments.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 15:13:54", "type": "best_practices", "page_metadata": {"description": "This documentation will introduce how to use env-binding to automate multi-stage application rollout across multiple environments.", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogDescription": "This documentation will introduce how to use env-binding to automate multi-stage application rollout across multiple environments.", "ogUrl": "https://kubevela.io/docs/end-user/policies/envbinding/", "generator": "Docusaurus v2.4.3", "ogTitle": "Multi-Environment | KubeVela", "og:title": "Multi-Environment | KubeVela", "docusaurus_locale": "en", "msapplication-config": "/img/favicons/browserconfig.xml", "docusaurus_version": "v1.10", "viewport": "width=device-width, initial-scale=1.0", "og:url": "https://kubevela.io/docs/end-user/policies/envbinding/", "docsearch:language": "en", "docsearch:version": "v1.10", "og:description": "This documentation will introduce how to use env-binding to automate multi-stage application rollout across multiple environments.", "language": "en", "theme-color": "#ffffff", "title": "Multi-Environment | KubeVela", "docusaurus_tag": "docs-default-v1.10", "twitter:card": "summary_large_image", "docsearch:docusaurus_tag": "docs-default-v1.10", "scrapeId": "3d651455-8c3f-46c1-9cf2-9101a69bcaf2", "sourceURL": "https://kubevela.io/docs/end-user/policies/envbinding", "url": "https://kubevela.io/docs/end-user/policies/envbinding/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela Ingress Trait\"?\n\nAssistant: The `gateway` trait exposes a component to public Internet via a valid domain.\n\nHere's a detailed explanation:\n\n\n## How to use\nAttach a `gateway` trait to the component you want to expose and deploy.\n", "metadata": {"source_url": "https://kubevela.io/docs/end-user/traits/ingress", "title": "KubeVela Ingress Trait", "description": "The `gateway` trait exposes a component to public Internet via a valid domain.", "has_code_examples": true, "has_best_practices": true, "section_count": 1, "timestamp": "2025-02-28 15:14:04", "type": "overview", "page_metadata": {"og:description": "The gateway trait exposes a component to public Internet via a valid domain.", "msapplication-config": "/img/favicons/browserconfig.xml", "viewport": "width=device-width, initial-scale=1.0", "language": "en", "docusaurus_locale": "en", "ogUrl": "https://kubevela.io/docs/end-user/traits/ingress/", "docsearch:version": "v1.10", "generator": "Docusaurus v2.4.3", "docsearch:docusaurus_tag": "docs-default-v1.10", "docusaurus_version": "v1.10", "og:title": "Gateway for Public Access | KubeVela", "theme-color": "#ffffff", "ogDescription": "The gateway trait exposes a component to public Internet via a valid domain.", "docusaurus_tag": "docs-default-v1.10", "twitter:card": "summary_large_image", "ogTitle": "Gateway for Public Access | KubeVela", "title": "Gateway for Public Access | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "og:url": "https://kubevela.io/docs/end-user/traits/ingress/", "docsearch:language": "en", "description": "The gateway trait exposes a component to public Internet via a valid domain.", "scrapeId": "ddf8ed90-8756-4faf-bca2-eb9e44fe5b56", "sourceURL": "https://kubevela.io/docs/end-user/traits/ingress", "url": "https://kubevela.io/docs/end-user/traits/ingress/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"KubeVela Ingress Trait\"?\n\nAssistant: Here are some code examples:\n\n### vela-app.yaml\n```yaml\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: first-vela-app\nspec:\n  components:\n    - name: express-server\n      type: webservice\n      properties:\n        image: oamdev/hello-world\n        port: 8000\n      traits:\n        - type: gateway\n          properties:\n            domain: testsvc.example.com\n            http:\n              \"/\": 8000\n\n```\n\n### Deploy the application\n```yaml\nvela up -f https://raw.githubusercontent.com/kubevela/kubevela/master/docs/examples/vela-app.yaml\n\n```\n\n### Application creation confirmation\n```yaml\napplication.core.oam.dev/first-vela-app created\n\n```\n\n### Check application status\n```yaml\nvela status first-vela-app\n\n```\n\n### Application status output\n```yaml\nAbout:\n\n  Name:         first-vela-app\n  Namespace:    default\n  Created at:   2022-01-11 22:04:29 +0800 CST\n  Status:       running\n\nWorkflow:\n\n  mode: DAG\n  finished: true\n  Suspend: false\n  Terminated: false\n  Steps\n  - id:gfgwqp6pqh\n    name:express-server\n    type:apply-component\n    phase:succeeded\n    message:\n\nServices:\n\n  - Name: express-server  Env:\n    Type: webservice\n    healthy Ready:1/1\n    Traits:\n      - ✅ gateway: Visiting URL: testsvc.example.com, IP: 1.5.1.1\n\n```\n\n### Get endpoint information\n```yaml\nvela status first-vela-app --endpoint\n\n```\n\n### Endpoint output\n```yaml\n|--------------------------------|----------------------------+\n|    REF(KIND/NAMESPACE/NAME)    |          ENDPOINT          |\n|--------------------------------|----------------------------+\n| Ingress/default/express-server | http://testsvc.example.com |\n|--------------------------------|----------------------------+\n\n```\n\n### Curl command to access the application\n```yaml\ncurl -H \"Host:testsvc.example.com\" http://<your ip address>/\n\n```\n\n### Sample output from curl command\n```yaml\n<xmp>\nHello World\n\n                                       ##         .\n                                 ## ## ##        ==\n                              ## ## ## ## ##    ===\n                           /\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\\___/ ===\n                      ~~~ {~~ ~~~~ ~~~ ~~~~ ~~ ~ /  ===- ~~~\n                           \\______ o          _,/\n                            \\      \\       _,'\n                             `'--.._\\..--''\n</xmp>\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/end-user/traits/ingress", "title": "KubeVela Ingress Trait", "description": "The `gateway` trait exposes a component to public Internet via a valid domain.", "has_code_examples": true, "has_best_practices": true, "section_count": 1, "timestamp": "2025-02-28 15:14:04", "type": "code_examples", "page_metadata": {"og:description": "The gateway trait exposes a component to public Internet via a valid domain.", "msapplication-config": "/img/favicons/browserconfig.xml", "viewport": "width=device-width, initial-scale=1.0", "language": "en", "docusaurus_locale": "en", "ogUrl": "https://kubevela.io/docs/end-user/traits/ingress/", "docsearch:version": "v1.10", "generator": "Docusaurus v2.4.3", "docsearch:docusaurus_tag": "docs-default-v1.10", "docusaurus_version": "v1.10", "og:title": "Gateway for Public Access | KubeVela", "theme-color": "#ffffff", "ogDescription": "The gateway trait exposes a component to public Internet via a valid domain.", "docusaurus_tag": "docs-default-v1.10", "twitter:card": "summary_large_image", "ogTitle": "Gateway for Public Access | KubeVela", "title": "Gateway for Public Access | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "og:url": "https://kubevela.io/docs/end-user/traits/ingress/", "docsearch:language": "en", "description": "The gateway trait exposes a component to public Internet via a valid domain.", "scrapeId": "ddf8ed90-8756-4faf-bca2-eb9e44fe5b56", "sourceURL": "https://kubevela.io/docs/end-user/traits/ingress", "url": "https://kubevela.io/docs/end-user/traits/ingress/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela Ingress Trait\"?\n\nAssistant: Here are the recommended best practices:\n\n• This section requires your runtime cluster has a working ingress controller.\n", "metadata": {"source_url": "https://kubevela.io/docs/end-user/traits/ingress", "title": "KubeVela Ingress Trait", "description": "The `gateway` trait exposes a component to public Internet via a valid domain.", "has_code_examples": true, "has_best_practices": true, "section_count": 1, "timestamp": "2025-02-28 15:14:04", "type": "best_practices", "page_metadata": {"og:description": "The gateway trait exposes a component to public Internet via a valid domain.", "msapplication-config": "/img/favicons/browserconfig.xml", "viewport": "width=device-width, initial-scale=1.0", "language": "en", "docusaurus_locale": "en", "ogUrl": "https://kubevela.io/docs/end-user/traits/ingress/", "docsearch:version": "v1.10", "generator": "Docusaurus v2.4.3", "docsearch:docusaurus_tag": "docs-default-v1.10", "docusaurus_version": "v1.10", "og:title": "Gateway for Public Access | KubeVela", "theme-color": "#ffffff", "ogDescription": "The gateway trait exposes a component to public Internet via a valid domain.", "docusaurus_tag": "docs-default-v1.10", "twitter:card": "summary_large_image", "ogTitle": "Gateway for Public Access | KubeVela", "title": "Gateway for Public Access | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "og:url": "https://kubevela.io/docs/end-user/traits/ingress/", "docsearch:language": "en", "description": "The gateway trait exposes a component to public Internet via a valid domain.", "scrapeId": "ddf8ed90-8756-4faf-bca2-eb9e44fe5b56", "sourceURL": "https://kubevela.io/docs/end-user/traits/ingress", "url": "https://kubevela.io/docs/end-user/traits/ingress/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela Workflows Overview\"?\n\nAssistant: This page provides an overview of workflows in KubeVela, detailing their execution order, state, and core features.\n\nHere's a detailed explanation:\n\n\n## Introduction to Workflows\nWorkflows, as part of the Application, can glue together additional delivery processes and specify arbitrary delivery environments. In short, `Workflow` provides customized control flow and flexibility based on the original delivery model of Kubernetes(Apply). For example, `Workflow` can be used to implement complex operations such as pause, manual approval, if conditions, waiting status, data flow, multi-environment gray release, A/B testing, etc.\n\n## Workflow Steps\nA workflow consists of multiple steps, and typical workflow steps include step groups (containing a series of sub-steps), human review, multi-cluster publishing, notifications, etc. You can view all built-in workflow steps provided by default in KubeVela in [built-in workflow steps](https://kubevela.io/docs/end-user/workflow/built-in-workflow-defs/). If the built-in workflow steps don't meet your needs, you can also [custom workflow steps](https://kubevela.io/docs/platform-engineers/workflow/workflow/).\n\n## Default Workflow Creation\nIn fact, if you only use components in the Application and do not declare a workflow, KubeVela will automatically create a default workflow for deploying the components when running the Application.\n\n## Execution Order\nIn the workflow, all the steps will be executed sequentially and the next step will be executed after the previous one succeeded. If a step is of type `step-group`, it can contain a series of sub-steps, all of which are executed together when the step group is executed.\n\n## Execution Modes\nIn KubeVela 1.5.0+, you can explicitly specify the execution mode of steps, such as:\n\n```codeBlockLines_e6Vv\nworkflow:\n  mode:\n    steps: StepByStep\n    subSteps: DAG\n```\n\nThere're two modes of execution: StepByStep and DAG. If you do not explicitly declare the execution mode, by default steps are executed sequentially in StepByStep and subSteps are executed in parallel in DAG.\n\n## State of Application and Workflow\n| Application | Workflow | Description |\n| :-: | :-: | :-: |\n| runningWorkflow | executing | When the workflow is executing, the status of the application is runningWorkflow |\n| workflowSuspending | suspending | When the workflow is suspended, the status of the application is workflowSuspending |\n| workflowTerminated | terminated | When the workflow is terminated, the status of the application is workflowTerminated |\n| workflowFailed | failed | When a step in the workflow fails and the workflow is completed, the status of the application is workflowFailed |\n| running | succeeded | When all steps in the workflow are executed successfully, the status of the application is running |\n\n## Core Features\nWorkflow has powerful process control capabilities, including:\n\n- View [Workflow Operations](https://kubevela.io/docs/end-user/workflow/operations/) to learn how to operate the workflow.\n- View [Suspend and Resume Workflow](https://kubevela.io/docs/end-user/workflow/suspend/) to learn how to suspend and resume a workflow.\n- View [Sub Steps](https://kubevela.io/docs/end-user/workflow/step-group/) to learn how to use sub-steps in the workflow.\n- View [Dependency](https://kubevela.io/docs/end-user/workflow/dependency/) to learn how to specify dependencies for workflow steps.\n- View [Pass data between steps](https://kubevela.io/docs/end-user/workflow/inputs-outputs/) to learn how to use `inputs`, `outputs` to pass data between steps.\n- View [If Conditions](https://kubevela.io/docs/end-user/workflow/if-condition/) to learn how to use `if` to determine whether the step should be executed.\n- View [Timeout Steps](https://kubevela.io/docs/end-user/workflow/timeout/) to learn how to set `timeout` for steps.\n- View [Debug Workflow](https://kubevela.io/docs/platform-engineers/debug/debug/) to learn how to debug workflow in the real environment.\n", "metadata": {"source_url": "https://kubevela.io/docs/end-user/workflow/overview", "title": "KubeVela Workflows Overview", "description": "This page provides an overview of workflows in KubeVela, detailing their execution order, state, and core features.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-02-28 15:14:29", "type": "overview", "page_metadata": {"docsearch:language": "en", "description": "Workflows, as part of the Application, can glue together additional delivery processes and specify arbitrary delivery environments. In short, Workflow provides customized control flow and flexibility based on the original delivery model of Kubernetes(Apply). For example, Workflow can be used to implement complex operations such as pause, manual approval, if conditions, waiting status, data flow, multi-environment gray release, A/B testing, etc.", "og:description": "Workflows, as part of the Application, can glue together additional delivery processes and specify arbitrary delivery environments. In short, Workflow provides customized control flow and flexibility based on the original delivery model of Kubernetes(Apply). For example, Workflow can be used to implement complex operations such as pause, manual approval, if conditions, waiting status, data flow, multi-environment gray release, A/B testing, etc.", "viewport": "width=device-width, initial-scale=1.0", "docsearch:version": "v1.10", "ogTitle": "Overview | KubeVela", "docusaurus_locale": "en", "ogDescription": "Workflows, as part of the Application, can glue together additional delivery processes and specify arbitrary delivery environments. In short, Workflow provides customized control flow and flexibility based on the original delivery model of Kubernetes(Apply). For example, Workflow can be used to implement complex operations such as pause, manual approval, if conditions, waiting status, data flow, multi-environment gray release, A/B testing, etc.", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_version": "v1.10", "og:title": "Overview | KubeVela", "theme-color": "#ffffff", "msapplication-config": "/img/favicons/browserconfig.xml", "docsearch:docusaurus_tag": "docs-default-v1.10", "title": "Overview | KubeVela", "language": "en", "og:url": "https://kubevela.io/docs/end-user/workflow/overview/", "twitter:card": "summary_large_image", "docusaurus_tag": "docs-default-v1.10", "ogUrl": "https://kubevela.io/docs/end-user/workflow/overview/", "generator": "Docusaurus v2.4.3", "scrapeId": "7261d3ac-941d-4b94-a3ee-3f76b77154e1", "sourceURL": "https://kubevela.io/docs/end-user/workflow/overview", "url": "https://kubevela.io/docs/end-user/workflow/overview/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"KubeVela Workflows Overview\"?\n\nAssistant: Here are some code examples:\n\n### Execution Mode Example\n```yaml\nworkflow:\n  mode:\n    steps: StepByStep\n    subSteps: DAG\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/end-user/workflow/overview", "title": "KubeVela Workflows Overview", "description": "This page provides an overview of workflows in KubeVela, detailing their execution order, state, and core features.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-02-28 15:14:29", "type": "code_examples", "page_metadata": {"docsearch:language": "en", "description": "Workflows, as part of the Application, can glue together additional delivery processes and specify arbitrary delivery environments. In short, Workflow provides customized control flow and flexibility based on the original delivery model of Kubernetes(Apply). For example, Workflow can be used to implement complex operations such as pause, manual approval, if conditions, waiting status, data flow, multi-environment gray release, A/B testing, etc.", "og:description": "Workflows, as part of the Application, can glue together additional delivery processes and specify arbitrary delivery environments. In short, Workflow provides customized control flow and flexibility based on the original delivery model of Kubernetes(Apply). For example, Workflow can be used to implement complex operations such as pause, manual approval, if conditions, waiting status, data flow, multi-environment gray release, A/B testing, etc.", "viewport": "width=device-width, initial-scale=1.0", "docsearch:version": "v1.10", "ogTitle": "Overview | KubeVela", "docusaurus_locale": "en", "ogDescription": "Workflows, as part of the Application, can glue together additional delivery processes and specify arbitrary delivery environments. In short, Workflow provides customized control flow and flexibility based on the original delivery model of Kubernetes(Apply). For example, Workflow can be used to implement complex operations such as pause, manual approval, if conditions, waiting status, data flow, multi-environment gray release, A/B testing, etc.", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_version": "v1.10", "og:title": "Overview | KubeVela", "theme-color": "#ffffff", "msapplication-config": "/img/favicons/browserconfig.xml", "docsearch:docusaurus_tag": "docs-default-v1.10", "title": "Overview | KubeVela", "language": "en", "og:url": "https://kubevela.io/docs/end-user/workflow/overview/", "twitter:card": "summary_large_image", "docusaurus_tag": "docs-default-v1.10", "ogUrl": "https://kubevela.io/docs/end-user/workflow/overview/", "generator": "Docusaurus v2.4.3", "scrapeId": "7261d3ac-941d-4b94-a3ee-3f76b77154e1", "sourceURL": "https://kubevela.io/docs/end-user/workflow/overview", "url": "https://kubevela.io/docs/end-user/workflow/overview/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela Workflows Overview\"?\n\nAssistant: Here are the recommended best practices:\n\n• If you only use components in the Application and do not declare a workflow, KubeVela will automatically create a default workflow for deploying the components when running the Application.\n• In KubeVela 1.5.0+, you can explicitly specify the execution mode of steps.\n", "metadata": {"source_url": "https://kubevela.io/docs/end-user/workflow/overview", "title": "KubeVela Workflows Overview", "description": "This page provides an overview of workflows in KubeVela, detailing their execution order, state, and core features.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-02-28 15:14:29", "type": "best_practices", "page_metadata": {"docsearch:language": "en", "description": "Workflows, as part of the Application, can glue together additional delivery processes and specify arbitrary delivery environments. In short, Workflow provides customized control flow and flexibility based on the original delivery model of Kubernetes(Apply). For example, Workflow can be used to implement complex operations such as pause, manual approval, if conditions, waiting status, data flow, multi-environment gray release, A/B testing, etc.", "og:description": "Workflows, as part of the Application, can glue together additional delivery processes and specify arbitrary delivery environments. In short, Workflow provides customized control flow and flexibility based on the original delivery model of Kubernetes(Apply). For example, Workflow can be used to implement complex operations such as pause, manual approval, if conditions, waiting status, data flow, multi-environment gray release, A/B testing, etc.", "viewport": "width=device-width, initial-scale=1.0", "docsearch:version": "v1.10", "ogTitle": "Overview | KubeVela", "docusaurus_locale": "en", "ogDescription": "Workflows, as part of the Application, can glue together additional delivery processes and specify arbitrary delivery environments. In short, Workflow provides customized control flow and flexibility based on the original delivery model of Kubernetes(Apply). For example, Workflow can be used to implement complex operations such as pause, manual approval, if conditions, waiting status, data flow, multi-environment gray release, A/B testing, etc.", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_version": "v1.10", "og:title": "Overview | KubeVela", "theme-color": "#ffffff", "msapplication-config": "/img/favicons/browserconfig.xml", "docsearch:docusaurus_tag": "docs-default-v1.10", "title": "Overview | KubeVela", "language": "en", "og:url": "https://kubevela.io/docs/end-user/workflow/overview/", "twitter:card": "summary_large_image", "docusaurus_tag": "docs-default-v1.10", "ogUrl": "https://kubevela.io/docs/end-user/workflow/overview/", "generator": "Docusaurus v2.4.3", "scrapeId": "7261d3ac-941d-4b94-a3ee-3f76b77154e1", "sourceURL": "https://kubevela.io/docs/end-user/workflow/overview", "url": "https://kubevela.io/docs/end-user/workflow/overview/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"Deploying a Container-Based Application with KubeVela\"?\n\nAssistant: This documentation provides a comprehensive guide on how to deploy a container-based application using KubeVela, including steps for creating, deploying, updating, and deleting applications.\n\nHere's a detailed explanation:\n\n\n## Before starting\n- Containerize your business, you need a container image within your image registry that can be accessed by KubeVela.\n- Make sure you have [VelaUX addon](https://kubevela.io/docs/v1.8/reference/addons/velaux/) enabled.\n\n## Creating an application\nEnter the page of Application on the left, and click `New Application` to create. Pick your name, alias, and description; Select type of `webservice`; Decide your environment, Default environment is already available in the first place. You could also enter the page of Environments to set up new.\n\nClick `Next Step` so to the configuration page. You need to set up the Image address and resources limit. If you want to set up a command for the image, open up the row `CMD`.\n\nIf you want to deploy the private image, please create the registry integration configuration. refer to: [Image registry configuration](https://kubevela.io/docs/v1.8/how-to/dashboard/config/image-registry/)\n\nAfter inputting the Image address, the system will load the Image info from the registry. If the image belongs to the private image registry, the `Secret` field will be automatically assigned values.\n\nYou could refer to their information to configure the `Service Ports` and `Persistent Storage`.\n\n![set webservice application](https://static.kubevela.net/images/1.4/create-webservice.jpg)\n\nDone by clicking `Create` and then we enter the management page.\n\n## Deploying the application\nClick the `Deploy` button on the upper right and select a workflow. Note that each Environment of the application has its workflow. On the right of the `Baseline Config` tab is the environments. Check out the status of the environment and its instance information as you wish.\n\n![webservice application env page](https://kubevela.io/assets/images/webservice-env-1eef2c1259531e395271ec3aa76412c5.jpg)\n\nWhen it has several targets in this environment, you may find them all in the `Instances` list. If you want to look at the process of application deployment, click `Check the details` to reveal.\n\nIn the `Instances` list, you may find some of them are in pending status. Click `+` in the beginning to figure out the reason in more detail.\n\n## Update image\nAfter the first deployment, our business keeps evolving and the following updates come along.\n\nClick `Baseline Config` and you can see the all components. Then click the component name and open the configuration page, you can update your latest requirements for image, version, and environment variable.\n\n## Update replicas\nIf your business requires more than one replica, enter the `Properties` page. By default, The component has a `Set Replicas` trait. Click it so that you can update the replicas.\n\n![set application replicas](https://kubevela.io/assets/images/set-replicas-bc40ff5b12af9100c01f79d6a846d50b.jpg)\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.8/tutorials/webservice", "title": "Deploying a Container-Based Application with KubeVela", "description": "This documentation provides a comprehensive guide on how to deploy a container-based application using KubeVela, including steps for creating, deploying, updating, and deleting applications.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:14:44", "type": "overview", "page_metadata": {"docusaurus_locale": "en", "theme-color": "#ffffff", "og:url": "https://kubevela.io/docs/v1.8/tutorials/webservice/", "language": "en", "og:description": "Deploy the business application by kubevela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_tag": "docs-default-v1.8", "ogTitle": "Deploy Container Image | KubeVela", "docsearch:version": "v1.8", "docusaurus_version": "v1.8", "title": "Deploy Container Image | KubeVela", "description": "Deploy the business application by kubevela", "ogDescription": "Deploy the business application by kubevela", "msapplication-config": "/img/favicons/browserconfig.xml", "ogUrl": "https://kubevela.io/docs/v1.8/tutorials/webservice/", "twitter:card": "summary_large_image", "docsearch:language": "en", "generator": "Docusaurus v2.4.3", "viewport": "width=device-width, initial-scale=1.0", "docsearch:docusaurus_tag": "docs-default-v1.8", "og:title": "Deploy Container Image | KubeVela", "scrapeId": "6745122c-f423-4698-ba54-005892148f41", "sourceURL": "https://kubevela.io/docs/v1.8/tutorials/webservice", "url": "https://kubevela.io/docs/v1.8/tutorials/webservice/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"Deploying a Container-Based Application with KubeVela\"?\n\nAssistant: Here are some code examples:\n\n### Enable VelaUX Addon\n```yaml\nvela addon enable velaux\n```\n\n### Deploy via CLI\n```yaml\ncat <<EOF | vela up -f -\n# YAML begins\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: webservice-app\nspec:\n  components:\n    - name: frontend\n      type: webservice\n      properties:\n        image: oamdev/testapp:v1\n        cmd: [\"node\", \"server.js\"]\n        ports:\n          - port: 8080\n            expose: true\n        exposeType: NodePort\n        cpu: \"0.5\"\n        memory: \"512Mi\"\n      traits:\n        - type: scaler\n          properties:\n            replicas: 1\n# YAML ends\nEOF\n```\n\n### Check Deployment Status\n```yaml\nvela status webservice-app\n```\n\n### Port Forward Command\n```yaml\nvela port-forward webservice-app -n default 8080:8080\n```\n\n### Check Application Endpoint\n```yaml\nvela status webservice-app --endpoint\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.8/tutorials/webservice", "title": "Deploying a Container-Based Application with KubeVela", "description": "This documentation provides a comprehensive guide on how to deploy a container-based application using KubeVela, including steps for creating, deploying, updating, and deleting applications.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:14:44", "type": "code_examples", "page_metadata": {"docusaurus_locale": "en", "theme-color": "#ffffff", "og:url": "https://kubevela.io/docs/v1.8/tutorials/webservice/", "language": "en", "og:description": "Deploy the business application by kubevela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_tag": "docs-default-v1.8", "ogTitle": "Deploy Container Image | KubeVela", "docsearch:version": "v1.8", "docusaurus_version": "v1.8", "title": "Deploy Container Image | KubeVela", "description": "Deploy the business application by kubevela", "ogDescription": "Deploy the business application by kubevela", "msapplication-config": "/img/favicons/browserconfig.xml", "ogUrl": "https://kubevela.io/docs/v1.8/tutorials/webservice/", "twitter:card": "summary_large_image", "docsearch:language": "en", "generator": "Docusaurus v2.4.3", "viewport": "width=device-width, initial-scale=1.0", "docsearch:docusaurus_tag": "docs-default-v1.8", "og:title": "Deploy Container Image | KubeVela", "scrapeId": "6745122c-f423-4698-ba54-005892148f41", "sourceURL": "https://kubevela.io/docs/v1.8/tutorials/webservice", "url": "https://kubevela.io/docs/v1.8/tutorials/webservice/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"Deploying a Container-Based Application with KubeVela\"?\n\nAssistant: Here are the recommended best practices:\n\n• The application created by CLI will be synced to UI automatically.\n• If you are using a cloud server, please open the port in the security group to allow incoming traffic.\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.8/tutorials/webservice", "title": "Deploying a Container-Based Application with KubeVela", "description": "This documentation provides a comprehensive guide on how to deploy a container-based application using KubeVela, including steps for creating, deploying, updating, and deleting applications.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:14:44", "type": "best_practices", "page_metadata": {"docusaurus_locale": "en", "theme-color": "#ffffff", "og:url": "https://kubevela.io/docs/v1.8/tutorials/webservice/", "language": "en", "og:description": "Deploy the business application by kubevela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_tag": "docs-default-v1.8", "ogTitle": "Deploy Container Image | KubeVela", "docsearch:version": "v1.8", "docusaurus_version": "v1.8", "title": "Deploy Container Image | KubeVela", "description": "Deploy the business application by kubevela", "ogDescription": "Deploy the business application by kubevela", "msapplication-config": "/img/favicons/browserconfig.xml", "ogUrl": "https://kubevela.io/docs/v1.8/tutorials/webservice/", "twitter:card": "summary_large_image", "docsearch:language": "en", "generator": "Docusaurus v2.4.3", "viewport": "width=device-width, initial-scale=1.0", "docsearch:docusaurus_tag": "docs-default-v1.8", "og:title": "Deploy Container Image | KubeVela", "scrapeId": "6745122c-f423-4698-ba54-005892148f41", "sourceURL": "https://kubevela.io/docs/v1.8/tutorials/webservice", "url": "https://kubevela.io/docs/v1.8/tutorials/webservice/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"Page Not Found\"?\n\nAssistant: This page indicates that the requested content could not be found on the KubeVela documentation site.\n\nHere's a detailed explanation:\n\n\n## Error Message\nWe could not find what you were looking for. Please contact the owner of the site that linked you to the original URL and let them know their link is broken.\n", "metadata": {"source_url": "https://kubevela.io/docs/platform-engineers/kube/trait", "title": "Page Not Found", "description": "This page indicates that the requested content could not be found on the KubeVela documentation site.", "has_code_examples": false, "has_best_practices": false, "section_count": 1, "timestamp": "2025-02-28 15:14:48", "type": "overview", "page_metadata": {"og:url": "https://kubevela.io/docs/platform-engineers/kube/trait/", "msapplication-config": "/img/favicons/browserconfig.xml", "title": "Page Not Found | KubeVela", "viewport": "width=device-width, initial-scale=1.0", "ogUrl": "https://kubevela.io/docs/platform-engineers/kube/trait/", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docsearch:docusaurus_tag": "default", "generator": "Docusaurus v2.4.3", "language": "en", "og:title": "Page Not Found | KubeVela", "theme-color": "#ffffff", "docusaurus_tag": "default", "twitter:card": "summary_large_image", "docusaurus_locale": "en", "docsearch:language": "en", "ogTitle": "Page Not Found | KubeVela", "scrapeId": "e919c227-8531-4917-a838-8726305b5ddc", "sourceURL": "https://kubevela.io/docs/platform-engineers/kube/trait", "url": "https://kubevela.io/docs/platform-engineers/kube/trait", "statusCode": 404, "error": "Not Found"}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela CUE Basics\"?\n\nAssistant: This page explains how KubeVela uses CUE to encapsulate and abstract capabilities in Kubernetes, covering basic CUE knowledge, CLI commands, and best practices.\n\nHere's a detailed explanation:\n\n\n## Overview\nThe reasons for KubeVela supports CUE as a first-class solution to design abstraction can be concluded as below:\n\n- **CUE is designed for large scale configuration.** CUE has the ability to understand a configuration worked on by engineers across a whole company and to safely change a value that modifies thousands of objects in a configuration. This aligns very well with KubeVela's original goal to define and ship production level applications at web scale.\n- **CUE supports first-class code generation and automation.** CUE can integrate with existing tools and workflows naturally while other tools would have to build complex custom solutions. For example, generate OpenAPI schemas with Go code. This is how KubeVela build developer tools and GUI interfaces based on the CUE templates.\n- **CUE integrates very well with Go.** KubeVela is built with GO just like most projects in Kubernetes system. CUE is also implemented in and exposes a rich API in Go. KubeVela integrates with CUE as its core library and works as a Kubernetes controller. With the help of CUE, KubeVela can easily handle data constraint problems.\n\n> Please also check [The Configuration Complexity Curse](https://blog.cedriccharly.com/post/20191109-the-configuration-complexity-curse/) and [The Logic of CUE](https://cuelang.org/docs/concepts/logic/) for more details.\n\n## Prerequisites\nPlease make sure below CLIs are present in your environment:\n\n- [`cue` v0.2.2+](https://cuelang.org/docs/install/).\n- [`vela` v1.0.0+](https://kubevela.io/docs/install/).\n\ncaution\n\nVersions prior to KubeVela 1.6.0 use the v0.2.2 version of CUE, KubeVela 1.6.0+ uses the v0.5.0-alpha.1 version of CUE. Please use the CUE tool that matches your KubeVela version.\n\n## CUE CLI Basic\nBelow is the basic CUE data, you can define both schema and value in the same file with the almost same format:\n\n```cue\n\na: 1.5\na: float\nb: 1\nb: int\nd: [1, 2, 3]\ng: {\n    h: \"abc\"\n}\ne: string\n```\n\nCUE is a superset of JSON, we can use it like json with following convenience:\n\n- C style comments,\n- quotes may be omitted from field names without special characters,\n- commas at the end of fields are optional,\n- comma after last element in list is allowed,\n- outer curly braces are optional.\n\nCUE has powerful CLI commands. Let's keep the data in a file named `first.cue` and try.\n\n- Format the CUE file. If you're using Goland or similar JetBrains IDE,\n  you can [configure save on format](https://wonderflow.info/posts/2020-11-02-goland-cuelang-format/) instead.\n  This command will not only format the CUE, but also point out the wrong schema. That's very useful.\n\n```bash\ncue fmt first.cue\n```\n\n- Schema Check, besides `cue fmt`, you can also use `cue vet` to check schema.\n\n```bash\ncue vet first.cue\n```\n\n- Calculate/Render the result. `cue eval` will calculate the CUE file and render out the result.\n  You can see the results don't contain `a: float` and `b: int`, because these two variables are calculated.\n  While the `e: string` doesn't have definitive results, so it keeps as it is.\n\n```bash\ncue eval first.cue\n```\n\n```cue\n\na: 1.5\nb: 1\nd: [1, 2, 3]\ng: {\nh: \"abc\"\n}\ne: string\n```\n\n- Render for specified result. For example, we want only know the result of `b` in the file, then we can specify the parameter `-e`.\n\n```bash\ncue eval -e b first.cue\n```\n\n```cue\n1\n```\n\n- Export the result. `cue export` will export the result with final value. It will report an error if some variables are not definitive.\n\n```bash\ncue export first.cue\n```\n\n```cue\n\ne: cannot convert incomplete value \"string\" to JSON:\n      ./first.cue:9:4\n```\n\nWe can complete the value by giving a value to `e`, for example:\n\n```bash\necho \"e: \\\"abc\\\"\" >> first.cue\n```\n\nThen, the command will work. By default, the result will be rendered in json format.\n\n```bash\ncue export first.cue\n```\n\n```json\n{\n      \"a\": 1.5,\n      \"b\": 1,\n      \"d\": [\n          1,\n          2,\n          3\n      ],\n      \"g\": {\n          \"h\": \"abc\"\n      },\n      \"e\": \"abc\"\n}\n```\n\n- Export the result in YAML format.\n\n```bash\ncue export first.cue --out yaml\n```\n\n```yaml\na: 1.5\nb: 1\nd:\n- 1\n- 2\n- 3\ng:\nh: abc\ne: abc\n```\n\n- Export the result for specified variable.\n\n```bash\ncue export -e g first.cue\n```\n\n```json\n{\n      \"h\": \"abc\"\n}\n```\n\nFor now, you have learned all useful CUE cli operations.\n\n## CUE Language Basic\n- Data structure: Below is the basic data structure of CUE.\n\n```cue\n// float\na: 1.5\n\n// int\nb: 1\n\n// string\nc: \"blahblahblah\"\n\n// array\nd: [1, 2, 3, 1, 2, 3, 1, 2, 3]\n\n// bool\ne: true\n\n// struct\nf: {\n    a: 1.5\n    b: 1\n    d: [1, 2, 3, 1, 2, 3, 1, 2, 3]\n    g: {\n        h: \"abc\"\n    }\n}\n\n// byte\ng: `byte`\n\n// null\nj: null\n```\n\n- Define a custom CUE type. You can use a `#` symbol to specify some variable represents a CUE type.\n\n```cue\n#abc: string\n```\n\nLet's name it `second.cue`. Then the `cue export` won't complain as the `#abc` is a type not incomplete value.\n\n```bash\ncue export second.cue\n```\n\n```json\n{}\n```\n\nYou can also define a more complex custom struct, such as:\n\n```cue\n#abc: {\nx: int\ny: string\nz: {\n    a: float\n    b: bool\n}\n}\n```\n\nIt's widely used in KubeVela to define templates and do validation.\n\n## CUE Templating and References\nLet's try to define a CUE template with the knowledge just learned.\n\n1. Define a struct variable `parameter`.\n\n```cue\nparameter: {\n    name: string\n    image: string\n}\n```\n\nLet's save it in a file called `deployment.cue`.\n\n2. Define a more complex struct variable `template` and reference the variable `parameter`.\n\n```cue\ntemplate: {\n    apiVersion: \"apps/v1\"\n    kind:       \"Deployment\"\n    spec: {\n        selector: matchLabels: {\n            \"app.oam.dev/component\": parameter.name\n        }\n        template: {\n            metadata: labels: {\n                \"app.oam.dev/component\": parameter.name\n            }\n            spec: {\n                containers: [{\n                    name:  parameter.name\n                    image: parameter.image\n                }]\n            }}\n    }\n}\n```\n\nPeople who are familiar with Kubernetes may have understood that is a template of K8s Deployment. The `parameter` part is the parameters of the template.\n\nAdd it into the `deployment.cue`.\n\n3. Then, let's add the value by adding following code block:\n\n```cue\nparameter:{\nname: \"mytest\"\nimage: \"nginx:v1\"\n}\n```\n\n4. Finally, let's export it in yaml:\n\n```bash\ncue export deployment.cue -e template --out yaml\n```\n\n```yaml\napiVersion: apps/v1\nkind: Deployment\nspec:\ntemplate:\n    spec:\n      containers:\n      - name: mytest\n        image: nginx:v1\n    metadata:\n      labels:\n        app.oam.dev/component: mytest\nselector:\n    matchLabels:\n      app.oam.dev/component: mytest\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/platform-engineers/cue/basic", "title": "KubeVela CUE Basics", "description": "This page explains how KubeVela uses CUE to encapsulate and abstract capabilities in Kubernetes, covering basic CUE knowledge, CLI commands, and best practices.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:15:20", "type": "overview", "page_metadata": {"twitter:card": "summary_large_image", "docusaurus_locale": "en", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_version": "v1.10", "title": "CUE Basic | KubeVela", "language": "en", "docsearch:docusaurus_tag": "docs-default-v1.10", "theme-color": "#ffffff", "msapplication-config": "/img/favicons/browserconfig.xml", "viewport": "width=device-width, initial-scale=1.0", "generator": "Docusaurus v2.4.3", "og:title": "CUE Basic | KubeVela", "docusaurus_tag": "docs-default-v1.10", "docsearch:version": "v1.10", "ogDescription": "In this section, we will explain more about how KubeVela use CUE to encapsulate and abstract a given capability in Kubernetes in detail.", "ogUrl": "https://kubevela.io/docs/platform-engineers/cue/basic/", "ogTitle": "CUE Basic | KubeVela", "description": "In this section, we will explain more about how KubeVela use CUE to encapsulate and abstract a given capability in Kubernetes in detail.", "og:description": "In this section, we will explain more about how KubeVela use CUE to encapsulate and abstract a given capability in Kubernetes in detail.", "og:url": "https://kubevela.io/docs/platform-engineers/cue/basic/", "docsearch:language": "en", "scrapeId": "8b763ec6-70a6-4c79-95d7-cea648422177", "sourceURL": "https://kubevela.io/docs/platform-engineers/cue/basic", "url": "https://kubevela.io/docs/platform-engineers/cue/basic/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"KubeVela CUE Basics\"?\n\nAssistant: Here are some code examples:\n\n### Basic CUE Data\n```yaml\na: 1.5\na: float\nb: 1\nb: int\nd: [1, 2, 3]\ng: {\n    h: \"abc\"\n}\ne: string\n```\n\n### Format CUE File\n```yaml\ncue fmt first.cue\n```\n\n### Schema Check\n```yaml\ncue vet first.cue\n```\n\n### Calculate/Render Result\n```yaml\ncue eval first.cue\n```\n\n### Render for Specified Result\n```yaml\ncue eval -e b first.cue\n```\n\n### Export Result\n```yaml\ncue export first.cue\n```\n\n### Export Result in YAML\n```yaml\ncue export first.cue --out yaml\n```\n\n### Export Result for Specified Variable\n```yaml\ncue export -e g first.cue\n```\n\n### Data Structure Example\n```yaml\n// float\na: 1.5\n// int\nb: 1\n// string\nc: \"blahblahblah\"\n// array\nd: [1, 2, 3, 1, 2, 3, 1, 2, 3]\n// bool\ne: true\n// struct\nf: {\n    a: 1.5\n    b: 1\n    d: [1, 2, 3, 1, 2, 3, 1, 2, 3]\n    g: {\n        h: \"abc\"\n    }\n}\n// byte\ng: `byte`\n// null\nj: null\n```\n\n### Define Custom CUE Type\n```yaml\n#abc: string\n```\n\n### Define Complex Custom Struct\n```yaml\n#abc: {\nx: int\ny: string\nz: {\n    a: float\n    b: bool\n}\n}\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/platform-engineers/cue/basic", "title": "KubeVela CUE Basics", "description": "This page explains how KubeVela uses CUE to encapsulate and abstract capabilities in Kubernetes, covering basic CUE knowledge, CLI commands, and best practices.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:15:20", "type": "code_examples", "page_metadata": {"twitter:card": "summary_large_image", "docusaurus_locale": "en", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_version": "v1.10", "title": "CUE Basic | KubeVela", "language": "en", "docsearch:docusaurus_tag": "docs-default-v1.10", "theme-color": "#ffffff", "msapplication-config": "/img/favicons/browserconfig.xml", "viewport": "width=device-width, initial-scale=1.0", "generator": "Docusaurus v2.4.3", "og:title": "CUE Basic | KubeVela", "docusaurus_tag": "docs-default-v1.10", "docsearch:version": "v1.10", "ogDescription": "In this section, we will explain more about how KubeVela use CUE to encapsulate and abstract a given capability in Kubernetes in detail.", "ogUrl": "https://kubevela.io/docs/platform-engineers/cue/basic/", "ogTitle": "CUE Basic | KubeVela", "description": "In this section, we will explain more about how KubeVela use CUE to encapsulate and abstract a given capability in Kubernetes in detail.", "og:description": "In this section, we will explain more about how KubeVela use CUE to encapsulate and abstract a given capability in Kubernetes in detail.", "og:url": "https://kubevela.io/docs/platform-engineers/cue/basic/", "docsearch:language": "en", "scrapeId": "8b763ec6-70a6-4c79-95d7-cea648422177", "sourceURL": "https://kubevela.io/docs/platform-engineers/cue/basic", "url": "https://kubevela.io/docs/platform-engineers/cue/basic/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela CUE Basics\"?\n\nAssistant: Here are the recommended best practices:\n\n• Use the correct version of CUE that matches your KubeVela version.\n• Utilize CUE's powerful CLI commands for formatting, checking, and evaluating schemas.\n• Define custom types and structs to enhance the usability of CUE in your projects.\n• Leverage CUE's templating features to create reusable configurations.\n", "metadata": {"source_url": "https://kubevela.io/docs/platform-engineers/cue/basic", "title": "KubeVela CUE Basics", "description": "This page explains how KubeVela uses CUE to encapsulate and abstract capabilities in Kubernetes, covering basic CUE knowledge, CLI commands, and best practices.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:15:20", "type": "best_practices", "page_metadata": {"twitter:card": "summary_large_image", "docusaurus_locale": "en", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_version": "v1.10", "title": "CUE Basic | KubeVela", "language": "en", "docsearch:docusaurus_tag": "docs-default-v1.10", "theme-color": "#ffffff", "msapplication-config": "/img/favicons/browserconfig.xml", "viewport": "width=device-width, initial-scale=1.0", "generator": "Docusaurus v2.4.3", "og:title": "CUE Basic | KubeVela", "docusaurus_tag": "docs-default-v1.10", "docsearch:version": "v1.10", "ogDescription": "In this section, we will explain more about how KubeVela use CUE to encapsulate and abstract a given capability in Kubernetes in detail.", "ogUrl": "https://kubevela.io/docs/platform-engineers/cue/basic/", "ogTitle": "CUE Basic | KubeVela", "description": "In this section, we will explain more about how KubeVela use CUE to encapsulate and abstract a given capability in Kubernetes in detail.", "og:description": "In this section, we will explain more about how KubeVela use CUE to encapsulate and abstract a given capability in Kubernetes in detail.", "og:url": "https://kubevela.io/docs/platform-engineers/cue/basic/", "docsearch:language": "en", "scrapeId": "8b763ec6-70a6-4c79-95d7-cea648422177", "sourceURL": "https://kubevela.io/docs/platform-engineers/cue/basic", "url": "https://kubevela.io/docs/platform-engineers/cue/basic/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"Terraform Addon for KubeVela\"?\n\nAssistant: This guide will show you how to extend a Terraform Addon to support your cloud provider.\n\nHere's a detailed explanation:\n\n\n## Choose a Cloud Provider\nIf the cloud provider you want to support is none of supported cloud providers in Terraform Controller, you have to support it first. If it has been supported by Terraform Controller, you can continue to extend the addon.\n\n## Prepare metadata for the Cloud Provider\n- Clone oam-dev/catalog\n\n```codeBlockLines_e6Vv\n$ git clone https://github.com/kubevela/catalog.git\n```\n\n- Prepare a metadata file\n\nEdit the metadata file `hack/addons/terraform/terraform-provider-scaffold/metadata.yaml` for your cloud provider.\n\n```codeBlockLines_e6Vv\n...\n\n# -------------------------------------Configuration Metadata for a Terraform Addon-------------------------------------\n# provider short name\nshortCloudName: tencent\n\n# The Cloud name of the provider\ncompleteCloudName: Tencent Cloud\n\n# When enabling a Terraform provider, these properties need to set for authentication. For Tencent Cloud,\n# name: Environment variable name when authenticating Terraform, like https://github.com/oam-dev/terraform-controller/blob/master/controllers/provider/credentials.go#L59\n# secretKey: Secret key when storing authentication information in a Kubernetes, like https://github.com/oam-dev/terraform-controller/blob/master/controllers/provider/credentials.go#L109.\ncloudProperties:\n  - name: TENCENTCLOUD_SECRET_ID\n    secretKey: secretID\n    description: Get TENCENTCLOUD_SECRET_ID per this guide https://cloud.tencent.com/document/product/1213/67093\n  - name: TENCENTCLOUD_SECRET_KEY\n    secretKey: secretKey\n    description: Get TENCENTCLOUD_SECRET_KEY per this guide https://cloud.tencent.com/document/product/1213/67093\n    # If one property is region, please set `isRegion` to true\n  - name: TENCENTCLOUD_REGION\n    description: Get TENCENTCLOUD_REGION by picking one RegionId from Tencent Cloud region list https://cloud.tencent.com/document/api/1140/40509#.E5.9C.B0.E5.9F.9F.E5.88.97.E8.A1.A8\n    isRegion: true\n```\n\n\n## Generate a Terraform Addon\nGenerate a Terraform Addon for your cloud provider. The generated addon code will be stored in `addons/terraform-tencent`.\n\n```codeBlockLines_e6Vv\n$ make terraform-addon-gen\ngo run hack/addons/terraform/gen.go hack/addons/terraform/provider-sample.yaml\nGenerating addon for provider tencent in addons/terraform-tencent\nRendering hack/addons/terraform/terraform-provider-skaffold/metadata.yaml\nRendering hack/addons/terraform/terraform-provider-skaffold/readme.md\nRendering hack/addons/terraform/terraform-provider-skaffold/resources/account-creds.cue\nRendering hack/addons/terraform/terraform-provider-skaffold/resources/parameter.cue\nRendering hack/addons/terraform/terraform-provider-skaffold/resources/provider.cue\nRendering hack/addons/terraform/terraform-provider-skaffold/template.yaml\n\n$ ls addons/terraform-tencent\ndefinitions   metadata.yaml readme.md     resources     template.yaml\n```\n\n## Verify the Terraform Addon\nEnable the addon Check whether a `Provider` is created whose name is the same as your cloud provider.\n\n```codeBlockLines_e6Vv\n$ vela addon enable ./addons/terraform-tencent TENCENTCLOUD_SECRET_ID=xxx TENCENTCLOUD_SECRET_KEY=yyy TENCENTCLOUD_REGION=ap-chengdu\nI0207 10:15:14.005269   32481 apply.go:106] \"patching object\" name=\"addon-terraform-tencent\" resource=\"core.oam.dev/v1beta1, Kind=Application\"\nI0207 10:15:14.138645   32481 apply.go:106] \"patching object\" name=\"addon-secret-terraform-tencent\" resource=\"/v1, Kind=Secret\"\nAddon: terraform-tencent enabled Successfully.\n\n$ kubectl get provider\nNAME      STATE   AGE\ntencent   ready   1d\n```\n\nYou are encouraged to further verify the provider by [provision a cloud resource of your cloud provider](https://kubevela.io/docs/tutorials/consume-cloud-services/).\n\n## Submit the Terraform Addon\nPush the code generated in `./addons` and make a pull request.\n\n## Contribute documentation\nWrite [Terraform Addon enable doc](https://kubevela.io/docs/reference/addons/terraform/) for your cloud provider and add it to [all supported cloud providers](https://kubevela.io/docs/tutorials/consume-cloud-services/#enabling-cloud-vendor-addons).\n", "metadata": {"source_url": "https://kubevela.io/docs/platform-engineers/addon/terraform", "title": "Terraform Addon for KubeVela", "description": "This guide will show you how to extend a Terraform Addon to support your cloud provider.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-02-28 15:15:39", "type": "overview", "page_metadata": {"docsearch:docusaurus_tag": "docs-default-v1.10", "description": "Terraform Controller is the core controller to provision and manage", "ogDescription": "Terraform Controller is the core controller to provision and manage", "language": "en", "generator": "Docusaurus v2.4.3", "docusaurus_locale": "en", "docsearch:language": "en", "docusaurus_version": "v1.10", "docusaurus_tag": "docs-default-v1.10", "og:title": "Extend Terraform Addon | KubeVela", "theme-color": "#ffffff", "viewport": "width=device-width, initial-scale=1.0", "ogUrl": "https://kubevela.io/docs/platform-engineers/addon/terraform/", "title": "Extend Terraform Addon | KubeVela", "og:url": "https://kubevela.io/docs/platform-engineers/addon/terraform/", "og:description": "Terraform Controller is the core controller to provision and manage", "msapplication-config": "/img/favicons/browserconfig.xml", "ogTitle": "Extend Terraform Addon | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docsearch:version": "v1.10", "twitter:card": "summary_large_image", "scrapeId": "8ad45ec3-13c4-459c-ba6b-b56e870f2d89", "sourceURL": "https://kubevela.io/docs/platform-engineers/addon/terraform", "url": "https://kubevela.io/docs/platform-engineers/addon/terraform/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"Terraform Addon for KubeVela\"?\n\nAssistant: Here are some code examples:\n\n### Clone oam-dev/catalog\n```yaml\n$ git clone https://github.com/kubevela/catalog.git\n```\n\n### Prepare metadata file\n```yaml\n...\n\n# -------------------------------------Configuration Metadata for a Terraform Addon-------------------------------------\n# provider short name\nshortCloudName: tencent\n\n# The Cloud name of the provider\ncompleteCloudName: Tencent Cloud\n\n# When enabling a Terraform provider, these properties need to set for authentication. For Tencent Cloud,\n# name: Environment variable name when authenticating Terraform, like https://github.com/oam-dev/terraform-controller/blob/master/controllers/provider/credentials.go#L59\n# secretKey: Secret key when storing authentication information in a Kubernetes, like https://github.com/oam-dev/terraform-controller/blob/master/controllers/provider/credentials.go#L109.\ncloudProperties:\n  - name: TENCENTCLOUD_SECRET_ID\n    secretKey: secretID\n    description: Get TENCENTCLOUD_SECRET_ID per this guide https://cloud.tencent.com/document/product/1213/67093\n  - name: TENCENTCLOUD_SECRET_KEY\n    secretKey: secretKey\n    description: Get TENCENTCLOUD_SECRET_KEY per this guide https://cloud.tencent.com/document/product/1213/67093\n    # If one property is region, please set `isRegion` to true\n  - name: TENCENTCLOUD_REGION\n    description: Get TENCENTCLOUD_REGION by picking one RegionId from Tencent Cloud region list https://cloud.tencent.com/document/api/1140/40509#.E5.9C.B0.E5.9F.9F.E5.88.97.E8.A1.A8\n    isRegion: true\n\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/platform-engineers/addon/terraform", "title": "Terraform Addon for KubeVela", "description": "This guide will show you how to extend a Terraform Addon to support your cloud provider.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-02-28 15:15:39", "type": "code_examples", "page_metadata": {"docsearch:docusaurus_tag": "docs-default-v1.10", "description": "Terraform Controller is the core controller to provision and manage", "ogDescription": "Terraform Controller is the core controller to provision and manage", "language": "en", "generator": "Docusaurus v2.4.3", "docusaurus_locale": "en", "docsearch:language": "en", "docusaurus_version": "v1.10", "docusaurus_tag": "docs-default-v1.10", "og:title": "Extend Terraform Addon | KubeVela", "theme-color": "#ffffff", "viewport": "width=device-width, initial-scale=1.0", "ogUrl": "https://kubevela.io/docs/platform-engineers/addon/terraform/", "title": "Extend Terraform Addon | KubeVela", "og:url": "https://kubevela.io/docs/platform-engineers/addon/terraform/", "og:description": "Terraform Controller is the core controller to provision and manage", "msapplication-config": "/img/favicons/browserconfig.xml", "ogTitle": "Extend Terraform Addon | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docsearch:version": "v1.10", "twitter:card": "summary_large_image", "scrapeId": "8ad45ec3-13c4-459c-ba6b-b56e870f2d89", "sourceURL": "https://kubevela.io/docs/platform-engineers/addon/terraform", "url": "https://kubevela.io/docs/platform-engineers/addon/terraform/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"Terraform Addon for KubeVela\"?\n\nAssistant: Here are the recommended best practices:\n\n• You are encouraged to further verify the provider by provisioning a cloud resource of your cloud provider.\n", "metadata": {"source_url": "https://kubevela.io/docs/platform-engineers/addon/terraform", "title": "Terraform Addon for KubeVela", "description": "This guide will show you how to extend a Terraform Addon to support your cloud provider.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-02-28 15:15:39", "type": "best_practices", "page_metadata": {"docsearch:docusaurus_tag": "docs-default-v1.10", "description": "Terraform Controller is the core controller to provision and manage", "ogDescription": "Terraform Controller is the core controller to provision and manage", "language": "en", "generator": "Docusaurus v2.4.3", "docusaurus_locale": "en", "docsearch:language": "en", "docusaurus_version": "v1.10", "docusaurus_tag": "docs-default-v1.10", "og:title": "Extend Terraform Addon | KubeVela", "theme-color": "#ffffff", "viewport": "width=device-width, initial-scale=1.0", "ogUrl": "https://kubevela.io/docs/platform-engineers/addon/terraform/", "title": "Extend Terraform Addon | KubeVela", "og:url": "https://kubevela.io/docs/platform-engineers/addon/terraform/", "og:description": "Terraform Controller is the core controller to provision and manage", "msapplication-config": "/img/favicons/browserconfig.xml", "ogTitle": "Extend Terraform Addon | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docsearch:version": "v1.10", "twitter:card": "summary_large_image", "scrapeId": "8ad45ec3-13c4-459c-ba6b-b56e870f2d89", "sourceURL": "https://kubevela.io/docs/platform-engineers/addon/terraform", "url": "https://kubevela.io/docs/platform-engineers/addon/terraform/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"Canary Rollout with KubeVela\"?\n\nAssistant: This page introduces how to perform a canary rollout of a container service using KubeVela.\n\nHere's a detailed explanation:\n\n\n## Before starting\nEnable [`kruise-rollout`](https://kubevela.io/docs/reference/addons/kruise-rollout/) addon, our canary rollout capability relies on the [rollouts from OpenKruise](https://github.com/openkruise/rollouts).\n\n## First Time Deploy\nDeploy the application as shown below:\n\n```codeBlockLines_e6Vv\ncat <<EOF | vela up -f -\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n   name: canary-demo\n   annotations:\n      app.oam.dev/publishVersion: v1\nspec:\n   components:\n      - name: canary-demo\n        type: webservice\n        properties:\n           image: wangyikewyk/canarydemo:v1\n           ports:\n              - port: 8090\n        traits:\n           - type: scaler\n             properties:\n                replicas: 5\n           - type: gateway\n             properties:\n                domain: canary-demo.com\n                http:\n                   \"/version\": 8090\nEOF\n``\n\nThe first deployment is a default way to deploy an application. You can check the status of the application to ensure it's running before proceeding to the next step.\n\n```codeBlockLines_e6Vv\n$ vela status canary-demo\nAbout:\n\n  Name:         canary-demo\n  Namespace:    default\n  Created at:   2023-04-10 14:27:58 +0800 CST\n  Status:       running\n\nWorkflow:\n\n  mode: DAG-DAG\n  finished: true\n  Suspend: false\n  Terminated: false\n  Steps\n  - id: c1cqamr5w6\n    name: canary-demo\n    type: apply-component\n    phase: succeeded\n\nServices:\n\n  - Name: canary-demo\n    Cluster: local  Namespace: default\n    Type: webservice\n    Healthy Ready:5/5\n    Traits:\n      ✅ scaler      ✅ gateway: No loadBalancer found, visiting by using 'vela port-forward canary-demo'\n```\n\nIf you have enabled [velaux](https://kubevela.io/docs/reference/addons/velaux/) addon, you can view the application topology graph that all `v1` pods are ready now.\n\n## Day-2 Canary Release\nLet's modify the image tag of the component, from `v1` to `v2` as follows:\n\n```codeBlockLines_e6Vv\ncat <<EOF | vela up -f -\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n   name: canary-demo\n   annotations:\n      app.oam.dev/publishVersion: v2\nspec:\n   components:\n      - name: canary-demo\n        type: webservice\n        properties:\n           image: wangyikewyk/canarydemo:v2\n           ports:\n              - port: 8090\n        traits:\n           - type: scaler\n             properties:\n                replicas: 5\n           - type: gateway\n             properties:\n                domain: canary-demo.com\n                http:\n                   \"/version\": 8090\n   workflow:\n      steps:\n         - type: canary-deploy\n           name: rollout-20\n           properties:\n              weight: 20\n         - name: suspend-1st\n           type: suspend\n         - type: canary-deploy\n           name: rollout-50\n           properties:\n              weight: 50\n         - name: suspend-2nd\n           type: suspend\n         - type: canary-deploy\n           name: rollout-100\n           properties:\n              weight: 100\nEOF\n```\n\nAs we can see, in this update, we have also configured a canary-deploy workflow. This workflow includes 5 steps and splits the entire process into 3 stages.\nHere's an **overview about what will happen** of the three stages:\n\n1. In the first stage, the deployment will be updated with 20% of the total replicas. In our example, since we have a total of 5 replicas, 1 replica will be updated to the new version and serve 20% of the traffic. The upgrade process will then wait for a manual approval before moving on to the next stage.\n2. Once the first stage has been approved, the second stage will begin. During this stage, 50% of the total replicas will be updated to the new version. In our example, this means that 2.5 replicas will be updated, which is rounded up to 3. These 3 replicas will serve 50% of the traffic, and the upgrade process will once again wait for a manual approval before moving on to the final stage.\n3. In the final stage, all replicas will be updated to the new version and serve 100% of the traffic.\n\n## Continue Canary Process\nAfter verify the success of the canary version through business-related metrics, such as logs, metrics, and other means, you can `resume` the workflow to continue the process of rollout.\n\n```codeBlockLines_e6Vv\nvela workflow resume canary-demo\n```\n\nAccess the gateway endpoint again multi times. You will find out the chance ( `50%`) to meet result `Demo: v2` is highly increased.\n\n## Canary validation succeed, finished the release\nIn the end, you can resume again to finish the rollout process.\n\n```codeBlockLines_e6Vv\nvela workflow resume canary-demo\n```\n\nAccess the gateway endpoint again multi times. You will find out the result always is `Demo: v2`.\n\n## Canary verification failed, rollback the release\nIf you want to cancel the rollout process and rollback the application to the latest version, after manually check. You can rollback the rollout workflow:\n\n```codeBlockLines_e6Vv\n$ vela workflow rollback canary-demo\nApplication spec rollback successfully.\nApplication status rollback successfully.\nSuccessfully rollback rolloutApplication outdated revision cleaned up.\n```\n\nAccess the gateway endpoint again. You can see the result is always `Demo: V1`.\n\n## Perform canary rollout process on VelaUX\nYou can also execute a Canary Rollout process on VelaUX.\n\n## First deployment\nTo begin, create an application with a `webservice` component and set its image to `wangyikewyk/canarydemo:v1`.\n\n## Day-2 Canary Release\nTo update the component, change the image to `wangyikewyk/canarydemo:v2`.\n\n## Continue rollout\nTo continue the rollout process, click the `continue` button on the workflow page.\n\n## Rollback\nTo terminate the rolling process and rollback the application to version v1, click the `rollback` button.\n", "metadata": {"source_url": "https://kubevela.io/docs/end-user/traits/rollout", "title": "Canary Rollout with KubeVela", "description": "This page introduces how to perform a canary rollout of a container service using KubeVela.", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-02-28 15:16:24", "type": "overview", "page_metadata": {"generator": "Docusaurus v2.4.3", "docsearch:language": "en", "description": "In this section, we will introduce how to canary rollout a container service.", "og:title": "Canary Rollout | KubeVela", "ogTitle": "Canary Rollout | KubeVela", "ogUrl": "https://kubevela.io/docs/end-user/traits/rollout/", "ogDescription": "In this section, we will introduce how to canary rollout a container service.", "language": "en", "docsearch:docusaurus_tag": "docs-default-v1.10", "theme-color": "#ffffff", "docusaurus_version": "v1.10", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_tag": "docs-default-v1.10", "og:description": "In this section, we will introduce how to canary rollout a container service.", "docusaurus_locale": "en", "og:url": "https://kubevela.io/docs/end-user/traits/rollout/", "title": "Canary Rollout | KubeVela", "docsearch:version": "v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "viewport": "width=device-width, initial-scale=1.0", "twitter:card": "summary_large_image", "scrapeId": "83fe79f4-7b58-48ee-9cd1-8fbb7a5f8edb", "sourceURL": "https://kubevela.io/docs/end-user/traits/rollout", "url": "https://kubevela.io/docs/end-user/traits/rollout/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"Canary Rollout with KubeVela\"?\n\nAssistant: Here are some code examples:\n\n### Enable kruise-rollout addon\n```yaml\nvela addon enable kruise-rollout\n```\n\n### First Time Deploy\n```yaml\ncat <<EOF | vela up -f -\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n   name: canary-demo\n   annotations:\n      app.oam.dev/publishVersion: v1\nspec:\n   components:\n      - name: canary-demo\n        type: webservice\n        properties:\n           image: wangyikewyk/canarydemo:v1\n           ports:\n              - port: 8090\n        traits:\n           - type: scaler\n             properties:\n                replicas: 5\n           - type: gateway\n             properties:\n                domain: canary-demo.com\n                http:\n                   \"/version\": 8090\nEOF\n```\n\n### Check application status\n```yaml\n$ vela status canary-demo\n```\n\n### Day-2 Canary Release\n```yaml\ncat <<EOF | vela up -f -\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n   name: canary-demo\n   annotations:\n      app.oam.dev/publishVersion: v2\nspec:\n   components:\n      - name: canary-demo\n        type: webservice\n        properties:\n           image: wangyikewyk/canarydemo:v2\n           ports:\n              - port: 8090\n        traits:\n           - type: scaler\n             properties:\n                replicas: 5\n           - type: gateway\n             properties:\n                domain: canary-demo.com\n                http:\n                   \"/version\": 8090\n   workflow:\n      steps:\n         - type: canary-deploy\n           name: rollout-20\n           properties:\n              weight: 20\n         - name: suspend-1st\n           type: suspend\n         - type: canary-deploy\n           name: rollout-50\n           properties:\n              weight: 50\n         - name: suspend-2nd\n           type: suspend\n         - type: canary-deploy\n           name: rollout-100\n           properties:\n              weight: 100\nEOF\n```\n\n### Continue Canary Process\n```yaml\nvela workflow resume canary-demo\n```\n\n### Rollback the release\n```yaml\n$ vela workflow rollback canary-demo\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/end-user/traits/rollout", "title": "Canary Rollout with KubeVela", "description": "This page introduces how to perform a canary rollout of a container service using KubeVela.", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-02-28 15:16:24", "type": "code_examples", "page_metadata": {"generator": "Docusaurus v2.4.3", "docsearch:language": "en", "description": "In this section, we will introduce how to canary rollout a container service.", "og:title": "Canary Rollout | KubeVela", "ogTitle": "Canary Rollout | KubeVela", "ogUrl": "https://kubevela.io/docs/end-user/traits/rollout/", "ogDescription": "In this section, we will introduce how to canary rollout a container service.", "language": "en", "docsearch:docusaurus_tag": "docs-default-v1.10", "theme-color": "#ffffff", "docusaurus_version": "v1.10", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_tag": "docs-default-v1.10", "og:description": "In this section, we will introduce how to canary rollout a container service.", "docusaurus_locale": "en", "og:url": "https://kubevela.io/docs/end-user/traits/rollout/", "title": "Canary Rollout | KubeVela", "docsearch:version": "v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "viewport": "width=device-width, initial-scale=1.0", "twitter:card": "summary_large_image", "scrapeId": "83fe79f4-7b58-48ee-9cd1-8fbb7a5f8edb", "sourceURL": "https://kubevela.io/docs/end-user/traits/rollout", "url": "https://kubevela.io/docs/end-user/traits/rollout/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"Canary Rollout with KubeVela\"?\n\nAssistant: Here are the recommended best practices:\n\n• Ensure the kruise-rollout addon is enabled before starting the canary rollout process.\n• Monitor the application status after each deployment step to ensure it is running correctly.\n• Use manual approval steps in the canary deployment workflow to control the rollout process effectively.\n• Verify the success of the canary version through business-related metrics before continuing the rollout.\n• Be cautious with rollback operations, as they will revert to the latest successful version.\n", "metadata": {"source_url": "https://kubevela.io/docs/end-user/traits/rollout", "title": "Canary Rollout with KubeVela", "description": "This page introduces how to perform a canary rollout of a container service using KubeVela.", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-02-28 15:16:24", "type": "best_practices", "page_metadata": {"generator": "Docusaurus v2.4.3", "docsearch:language": "en", "description": "In this section, we will introduce how to canary rollout a container service.", "og:title": "Canary Rollout | KubeVela", "ogTitle": "Canary Rollout | KubeVela", "ogUrl": "https://kubevela.io/docs/end-user/traits/rollout/", "ogDescription": "In this section, we will introduce how to canary rollout a container service.", "language": "en", "docsearch:docusaurus_tag": "docs-default-v1.10", "theme-color": "#ffffff", "docusaurus_version": "v1.10", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_tag": "docs-default-v1.10", "og:description": "In this section, we will introduce how to canary rollout a container service.", "docusaurus_locale": "en", "og:url": "https://kubevela.io/docs/end-user/traits/rollout/", "title": "Canary Rollout | KubeVela", "docsearch:version": "v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "viewport": "width=device-width, initial-scale=1.0", "twitter:card": "summary_large_image", "scrapeId": "83fe79f4-7b58-48ee-9cd1-8fbb7a5f8edb", "sourceURL": "https://kubevela.io/docs/end-user/traits/rollout", "url": "https://kubevela.io/docs/end-user/traits/rollout/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"Using KubeVela with Jenkins CI/CD\"?\n\nAssistant: This page introduces how to use KubeVela with existing CI tools such as Jenkins and why.\n\nHere's a detailed explanation:\n\n\n## Introduction\nWith a simple integration effort, KubeVela as a universal application delivery control plane can then supercharge existing CI/CD tools with modern application deployment capabilities such as:\n\n- hybrid/multi-cloud delivery;\n- cross-environments promotion;\n- service mesh based application rollout/rollback;\n- handling deployment dependencies and topology (DAG);\n- declare, provision and consume cloud resources alongside with your application;\n- enjoy benefits of GitOps delivery without the need to introduce full GitOps transformation to your team;\n- ... and much more.\n\nThe following guide will use Jenkins as an example to release a sample HTTP server application step by step. The application code can be found in this GitHub repo.\n\n## Preparation\nBefore combining KubeVela and Jenkins, you need to ensure the following environments have already been set up.\n\n1. Deploy Jenkins service with Docker support, including related plugins and credentials which will be used to access image repository.\n2. A git repository with Webhook enabled. Ensure commits to the target branch will trigger the running of the Jenkins pipeline.\n3. Get Kubernetes for deployment. Install KubeVela and enable its apiserver. Ensure the KubeVela apiserver can be accessed from external environment.\n\n## Combining Jenkins with KubeVela apiserver\nDeploy Jenkins pipeline with the following Groovy script. You can change the git repository address, image address, apiserver address and other environment configurations on demand. Your git repository should contain the Dockerfile and app.yaml configuration file to tell how to build the target image and which component the application contains.\n\n```groovy\npipeline {\n    agent any\n    environment {\n        GIT_BRANCH = 'prod'\n        GIT_URL = 'https://github.com/Somefive/KubeVela-demo-CICD-app.git'\n        DOCKER_REGISTRY = 'https://registry.hub.docker.com'\n        DOCKER_CREDENTIAL = 'DockerHubCredential'\n        DOCKER_IMAGE = 'somefive/kubevela-demo-cicd-app'\n        APISERVER_URL = 'http://47.88.24.19'\n        APPLICATION_YAML = 'app.yaml'\n        APPLICATION_NAMESPACE = 'kubevela-demo-namespace'\n        APPLICATION_NAME = 'cicd-demo-app'\n    }\n    stages {\n        stage('Prepare') {\n            steps {\n                script {\n                    def checkout = git branch: env.GIT_BRANCH, url: env.GIT_URL\n                    env.GIT_COMMIT = checkout.GIT_COMMIT\n                    env.GIT_BRANCH = checkout.GIT_BRANCH\n                    echo \"env.GIT_BRANCH=${env.GIT_BRANCH},env.GIT_COMMIT=${env.GIT_COMMIT}\"\n                }\n            }\n        }\n        stage('Build') {\n            steps {\n                script {\n                    docker.withRegistry(env.DOCKER_REGISTRY, env.DOCKER_CREDENTIAL) {\n                        def customImage = docker.build(env.DOCKER_IMAGE)\n                        customImage.push()\n                    }\n                }\n            }\n        }\n        stage('Deploy') {\n            steps {\n                sh 'wget -q \"https://github.com/mikefarah/yq/releases/download/v4.12.1/yq_linux_amd64\"'\n                sh 'chmod +x yq_linux_amd64'\n                script {\n                    def app = sh (\n                        script: \"./yq_linux_amd64 eval -o=json '.spec' ${env.APPLICATION_YAML} | sed -e 's/GIT_COMMIT/$GIT_COMMIT/g'\",\n                        returnStdout: true\n                    )\n                    echo \"app: ${app}\"\n                    def response = httpRequest acceptType: 'APPLICATION_JSON', contentType: 'APPLICATION_JSON', httpMode: 'POST', requestBody: app, url: \"${env.APISERVER_URL}/v1/namespaces/${env.APPLICATION_NAMESPACE}/applications/${env.APPLICATION_NAME}\"\n                    println('Status: '+response.status)\n                    println('Response: '+response.content)\n                }\n            }\n        }\n    }\n}\n```\n\nPush commits to the target branch in the git repository, which the Jenkins pipeline focuses on. The webhook of git repo will trigger the newly created Jenkins pipeline. This pipeline will automatically build container images and push it to the image repository. Then it will send POST request to KubeVela apiserver, which will deploy app.yaml to Kubernetes cluster. An example of app.yaml is shown below.\n\n```yaml\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: kubevela-demo-app\nspec:\n  components:\n    - name: kubevela-demo-app-web\n      type: webservice\n      properties:\n        image: somefive/kubevela-demo-cicd-app\n        imagePullPolicy: Always\n        port: 8080\n      traits:\n        - type: rollout\n          properties:\n            rolloutBatches:\n              - replicas: 2\n              - replicas: 3\n            batchPartition: 0\n            targetSize: 5\n        - type: labels\n          properties:\n            jenkins-build-commit: GIT_COMMIT\n        - type: ingress\n          properties:\n            domain: <your domain>\n            http:\n              \"/\": 8088\n```\n\nThe GIT_COMMIT identifier will be replaced by the current git commit id in Jenkins pipeline. You can check the deployment status in Kubernetes through kubectl.\n\n```bash\n$ kubectl get app -n kubevela-demo-namespace\nNAME            COMPONENT               TYPE         PHASE     HEALTHY   STATUS   AGE\ncicd-demo-app   kubevela-demo-app-web   webservice   running   true               102s\n$ kubectl get deployment -n kubevela-demo-namespace\nNAME                       READY   UP-TO-DATE   AVAILABLE   AGE\nkubevela-demo-app-web-v1   2/2     2            2           111s\n$ kubectl get ingress -n kubevela-demo-namespace\nNAME                    CLASS    HOSTS                                                                                 ADDRESS          PORTS   AGE\nkubevela-demo-app-web   <none>   <your domain>   198.11.175.125   80      117s\n```\n\nIn the deployed application, we use the rollout trait, which enables us to release 2 pods first for canary validation. After validation succeed, remove batchPatition: 0 in application configuration in the rollout trait. After that, a complete release will be fired. This mechanism greatly improves the security and stability of the releasing process. You can adjust the rollout strategy depending on your scenario.\n\n```bash\n$ kubectl edit app -n kubevela-demo-namespace\napplication.core.oam.dev/cicd-demo-app edited\n$ kubectl get deployment -n kubevela-demo-namespace\nNAME                       READY   UP-TO-DATE   AVAILABLE   AGE\nkubevela-demo-app-web-v1   5/5     5            5           4m16s\n$ curl http://<your domain>/\nVersion: 0.1.2\n```\n\nRefer to the blog post for more details about deploying Jenkins + KubeVela and more comprehensive demo for application rolling update.\n", "metadata": {"source_url": "https://kubevela.io/docs/case-studies/jenkins-cicd", "title": "Using KubeVela with Jenkins CI/CD", "description": "This page introduces how to use KubeVela with existing CI tools such as Jenkins and why.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 15:17:01", "type": "overview", "page_metadata": {"docsearch:docusaurus_tag": "docs-default-v1.10", "theme-color": "#ffffff", "docsearch:language": "en", "docsearch:version": "v1.10", "docusaurus_locale": "en", "title": "Jenkins CI Integration | KubeVela", "generator": "Docusaurus v2.4.3", "twitter:card": "summary_large_image", "docusaurus_tag": "docs-default-v1.10", "description": "This section will introduce how to use KubeVela with existing CI tools such as Jenkins and why.", "og:description": "This section will introduce how to use KubeVela with existing CI tools such as Jenkins and why.", "msapplication-config": "/img/favicons/browserconfig.xml", "language": "en", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "viewport": "width=device-width, initial-scale=1.0", "ogDescription": "This section will introduce how to use KubeVela with existing CI tools such as Jenkins and why.", "ogTitle": "Jenkins CI Integration | KubeVela", "og:url": "https://kubevela.io/docs/case-studies/jenkins-cicd/", "ogUrl": "https://kubevela.io/docs/case-studies/jenkins-cicd/", "docusaurus_version": "v1.10", "og:title": "Jenkins CI Integration | KubeVela", "scrapeId": "23a9945d-a671-4ef2-bbe0-87de0e411e95", "sourceURL": "https://kubevela.io/docs/case-studies/jenkins-cicd", "url": "https://kubevela.io/docs/case-studies/jenkins-cicd/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"Using KubeVela with Jenkins CI/CD\"?\n\nAssistant: Here are some code examples:\n\n### Jenkins Pipeline Script\n```yaml\npipeline {\n    agent any\n    environment {\n        GIT_BRANCH = 'prod'\n        GIT_URL = 'https://github.com/Somefive/KubeVela-demo-CICD-app.git'\n        DOCKER_REGISTRY = 'https://registry.hub.docker.com'\n        DOCKER_CREDENTIAL = 'DockerHubCredential'\n        DOCKER_IMAGE = 'somefive/kubevela-demo-cicd-app'\n        APISERVER_URL = 'http://47.88.24.19'\n        APPLICATION_YAML = 'app.yaml'\n        APPLICATION_NAMESPACE = 'kubevela-demo-namespace'\n        APPLICATION_NAME = 'cicd-demo-app'\n    }\n    stages {\n        stage('Prepare') {\n            steps {\n                script {\n                    def checkout = git branch: env.GIT_BRANCH, url: env.GIT_URL\n                    env.GIT_COMMIT = checkout.GIT_COMMIT\n                    env.GIT_BRANCH = checkout.GIT_BRANCH\n                    echo \"env.GIT_BRANCH=${env.GIT_BRANCH},env.GIT_COMMIT=${env.GIT_COMMIT}\"\n                }\n            }\n        }\n        stage('Build') {\n            steps {\n                script {\n                    docker.withRegistry(env.DOCKER_REGISTRY, env.DOCKER_CREDENTIAL) {\n                        def customImage = docker.build(env.DOCKER_IMAGE)\n                        customImage.push()\n                    }\n                }\n            }\n        }\n        stage('Deploy') {\n            steps {\n                sh 'wget -q \"https://github.com/mikefarah/yq/releases/download/v4.12.1/yq_linux_amd64\"'\n                sh 'chmod +x yq_linux_amd64'\n                script {\n                    def app = sh (\n                        script: \"./yq_linux_amd64 eval -o=json '.spec' ${env.APPLICATION_YAML} | sed -e 's/GIT_COMMIT/$GIT_COMMIT/g'\",\n                        returnStdout: true\n                    )\n                    echo \"app: ${app}\"\n                    def response = httpRequest acceptType: 'APPLICATION_JSON', contentType: 'APPLICATION_JSON', httpMode: 'POST', requestBody: app, url: \"${env.APISERVER_URL}/v1/namespaces/${env.APPLICATION_NAMESPACE}/applications/${env.APPLICATION_NAME}\"\n                    println('Status: '+response.status)\n                    println('Response: '+response.content)\n                }\n            }\n        }\n    }\n}\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/case-studies/jenkins-cicd", "title": "Using KubeVela with Jenkins CI/CD", "description": "This page introduces how to use KubeVela with existing CI tools such as Jenkins and why.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 15:17:01", "type": "code_examples", "page_metadata": {"docsearch:docusaurus_tag": "docs-default-v1.10", "theme-color": "#ffffff", "docsearch:language": "en", "docsearch:version": "v1.10", "docusaurus_locale": "en", "title": "Jenkins CI Integration | KubeVela", "generator": "Docusaurus v2.4.3", "twitter:card": "summary_large_image", "docusaurus_tag": "docs-default-v1.10", "description": "This section will introduce how to use KubeVela with existing CI tools such as Jenkins and why.", "og:description": "This section will introduce how to use KubeVela with existing CI tools such as Jenkins and why.", "msapplication-config": "/img/favicons/browserconfig.xml", "language": "en", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "viewport": "width=device-width, initial-scale=1.0", "ogDescription": "This section will introduce how to use KubeVela with existing CI tools such as Jenkins and why.", "ogTitle": "Jenkins CI Integration | KubeVela", "og:url": "https://kubevela.io/docs/case-studies/jenkins-cicd/", "ogUrl": "https://kubevela.io/docs/case-studies/jenkins-cicd/", "docusaurus_version": "v1.10", "og:title": "Jenkins CI Integration | KubeVela", "scrapeId": "23a9945d-a671-4ef2-bbe0-87de0e411e95", "sourceURL": "https://kubevela.io/docs/case-studies/jenkins-cicd", "url": "https://kubevela.io/docs/case-studies/jenkins-cicd/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"Using KubeVela with Jenkins CI/CD\"?\n\nAssistant: Here are the recommended best practices:\n\n• Ensure Jenkins service is deployed with Docker support and necessary plugins.\n• Enable Webhook in the git repository to trigger Jenkins pipeline on commits.\n• Make sure KubeVela apiserver is accessible from the external environment.\n• Use the rollout trait for canary validation before full deployment.\n", "metadata": {"source_url": "https://kubevela.io/docs/case-studies/jenkins-cicd", "title": "Using KubeVela with Jenkins CI/CD", "description": "This page introduces how to use KubeVela with existing CI tools such as Jenkins and why.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 15:17:01", "type": "best_practices", "page_metadata": {"docsearch:docusaurus_tag": "docs-default-v1.10", "theme-color": "#ffffff", "docsearch:language": "en", "docsearch:version": "v1.10", "docusaurus_locale": "en", "title": "Jenkins CI Integration | KubeVela", "generator": "Docusaurus v2.4.3", "twitter:card": "summary_large_image", "docusaurus_tag": "docs-default-v1.10", "description": "This section will introduce how to use KubeVela with existing CI tools such as Jenkins and why.", "og:description": "This section will introduce how to use KubeVela with existing CI tools such as Jenkins and why.", "msapplication-config": "/img/favicons/browserconfig.xml", "language": "en", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "viewport": "width=device-width, initial-scale=1.0", "ogDescription": "This section will introduce how to use KubeVela with existing CI tools such as Jenkins and why.", "ogTitle": "Jenkins CI Integration | KubeVela", "og:url": "https://kubevela.io/docs/case-studies/jenkins-cicd/", "ogUrl": "https://kubevela.io/docs/case-studies/jenkins-cicd/", "docusaurus_version": "v1.10", "og:title": "Jenkins CI Integration | KubeVela", "scrapeId": "23a9945d-a671-4ef2-bbe0-87de0e411e95", "sourceURL": "https://kubevela.io/docs/case-studies/jenkins-cicd", "url": "https://kubevela.io/docs/case-studies/jenkins-cicd/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"GitOps with KubeVela\"?\n\nAssistant: This page introduces how to use KubeVela to deliver in GitOps mode, including watching Git and image repositories for automatic synchronization.\n\nHere's a detailed explanation:\n\n\n## Watch the Git repositories and sync automatically\nGitOps will automatically synchronize the configuration in the repository to the cluster. First, we need a repository that stores all the configuration files you need: such as some Kubernetes native resources Deployment, Secret, ConfigMap, etc. Also, you can store KubeVela's Application in the repository.\n\nSuppose in our repository, there is a folder called `infrastructure`, which has a KubeVela Application called `server` and a ConfigMap called `server-config`.\n\nThe directory structure of the repository is as follows:\n\n```\n├── infrastructure\n    ├── server-config.yaml\n    └── server.yaml\n```\n\nDeploy the following KubeVela GitOps application:\n\n```yaml\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: infra-gitops\nspec:\n  components:\n  - name: database-config\n    type: kustomize\n    properties:\n      repoType: git\n      # replace it with your repo url\n      url: https://github.com/FogDong/KubeVela-GitOps-Infra-Demo\n      # replace it with your git secret if it's a private repo\n      # secretRef: git-secret\n      # the pull interval time, set to 10m since the infrastructure is steady\n      pullInterval: 10m\n      git:\n        # the branch name\n        branch: infra\n      # the path to sync\n      path: ./infrastructure\n```\n\nCheck the status of this GitOps application:\n\n```bash\n$ vela status infra-gitops\nAbout:\n\n  Name:         infra-gitops\n  Namespace:    default\n  Created at:   2022-06-30 14:52:33 +0800 CST\n  Status:       running\n\nWorkflow:\n\n  mode: DAG\n  finished: true\n  Suspend: false\n  Terminated: false\n  Steps\n  - id:dgatat8jag\n    name:database-config\n    type:apply-component\n    phase:succeeded\n    message:\n\nServices:\n\n  - Name: database-config\n    Cluster: local  Namespace: default\n    Type: kustomize\n    Healthy\n    No trait applied\n```\n\nAs you can see, the GitOps application is running successfully. At this point, the application continuously pulls the configuration from the repository and syncs across the cluster at 10-minute intervals.\n\nLooking at the resources in the cluster, you can find that the `server` Application and the `server-config` ConfigMap have been automatically deployed.\n\n```bash\n$ vela ls\nAPP             COMPONENT       TYPE        TRAITS  PHASE   HEALTHY STATUS      CREATED-TIME\ninfra-gitops    database-config kustomize           running healthy             2022-06-30 14:52:33 +0800 CST\nserver          server          webservice          running healthy Ready:1/1   2022-06-30 14:52:35 +0800 CST\n\n$ kubectl get configmap\nNAME                                             DATA   AGE\nserver-config                                    1      2m58s\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/end-user/gitops/fluxcd", "title": "GitOps with KubeVela", "description": "This page introduces how to use KubeVela to deliver in GitOps mode, including watching Git and image repositories for automatic synchronization.", "has_code_examples": true, "has_best_practices": true, "section_count": 1, "timestamp": "2025-02-28 15:17:18", "type": "overview", "page_metadata": {"docsearch:docusaurus_tag": "docs-default-v1.10", "description": "In this section, we will introduce how to use KubeVela to deliver in GitOps mode.", "viewport": "width=device-width, initial-scale=1.0", "docusaurus_locale": "en", "og:url": "https://kubevela.io/docs/end-user/gitops/fluxcd/", "og:title": "GitOps with FluxCD | KubeVela", "ogUrl": "https://kubevela.io/docs/end-user/gitops/fluxcd/", "ogTitle": "GitOps with FluxCD | KubeVela", "ogDescription": "In this section, we will introduce how to use KubeVela to deliver in GitOps mode.", "generator": "Docusaurus v2.4.3", "docusaurus_version": "v1.10", "docusaurus_tag": "docs-default-v1.10", "theme-color": "#ffffff", "language": "en", "title": "GitOps with FluxCD | KubeVela", "og:description": "In this section, we will introduce how to use KubeVela to deliver in GitOps mode.", "msapplication-config": "/img/favicons/browserconfig.xml", "docsearch:language": "en", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "twitter:card": "summary_large_image", "docsearch:version": "v1.10", "scrapeId": "d576fe53-deba-43ea-a09a-7624e562956f", "sourceURL": "https://kubevela.io/docs/end-user/gitops/fluxcd", "url": "https://kubevela.io/docs/end-user/gitops/fluxcd/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"GitOps with KubeVela\"?\n\nAssistant: Here are some code examples:\n\n### Deploy KubeVela GitOps application\n```yaml\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: infra-gitops\nspec:\n  components:\n  - name: database-config\n    type: kustomize\n    properties:\n      repoType: git\n      # replace it with your repo url\n      url: https://github.com/FogDong/KubeVela-GitOps-Infra-Demo\n      # replace it with your git secret if it's a private repo\n      # secretRef: git-secret\n      # the pull interval time, set to 10m since the infrastructure is steady\n      pullInterval: 10m\n      git:\n        # the branch name\n        branch: infra\n      # the path to sync\n      path: ./infrastructure\n\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/end-user/gitops/fluxcd", "title": "GitOps with KubeVela", "description": "This page introduces how to use KubeVela to deliver in GitOps mode, including watching Git and image repositories for automatic synchronization.", "has_code_examples": true, "has_best_practices": true, "section_count": 1, "timestamp": "2025-02-28 15:17:18", "type": "code_examples", "page_metadata": {"docsearch:docusaurus_tag": "docs-default-v1.10", "description": "In this section, we will introduce how to use KubeVela to deliver in GitOps mode.", "viewport": "width=device-width, initial-scale=1.0", "docusaurus_locale": "en", "og:url": "https://kubevela.io/docs/end-user/gitops/fluxcd/", "og:title": "GitOps with FluxCD | KubeVela", "ogUrl": "https://kubevela.io/docs/end-user/gitops/fluxcd/", "ogTitle": "GitOps with FluxCD | KubeVela", "ogDescription": "In this section, we will introduce how to use KubeVela to deliver in GitOps mode.", "generator": "Docusaurus v2.4.3", "docusaurus_version": "v1.10", "docusaurus_tag": "docs-default-v1.10", "theme-color": "#ffffff", "language": "en", "title": "GitOps with FluxCD | KubeVela", "og:description": "In this section, we will introduce how to use KubeVela to deliver in GitOps mode.", "msapplication-config": "/img/favicons/browserconfig.xml", "docsearch:language": "en", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "twitter:card": "summary_large_image", "docsearch:version": "v1.10", "scrapeId": "d576fe53-deba-43ea-a09a-7624e562956f", "sourceURL": "https://kubevela.io/docs/end-user/gitops/fluxcd", "url": "https://kubevela.io/docs/end-user/gitops/fluxcd/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"GitOps with KubeVela\"?\n\nAssistant: Here are the recommended best practices:\n\n• Make sure you have enabled the fluxcd addon before using KubeVela in GitOps mode.\n• If you want to put the code and config in the same repository, filter out the commit from KubeVela in CI configuration to avoid repeat builds.\n", "metadata": {"source_url": "https://kubevela.io/docs/end-user/gitops/fluxcd", "title": "GitOps with KubeVela", "description": "This page introduces how to use KubeVela to deliver in GitOps mode, including watching Git and image repositories for automatic synchronization.", "has_code_examples": true, "has_best_practices": true, "section_count": 1, "timestamp": "2025-02-28 15:17:18", "type": "best_practices", "page_metadata": {"docsearch:docusaurus_tag": "docs-default-v1.10", "description": "In this section, we will introduce how to use KubeVela to deliver in GitOps mode.", "viewport": "width=device-width, initial-scale=1.0", "docusaurus_locale": "en", "og:url": "https://kubevela.io/docs/end-user/gitops/fluxcd/", "og:title": "GitOps with FluxCD | KubeVela", "ogUrl": "https://kubevela.io/docs/end-user/gitops/fluxcd/", "ogTitle": "GitOps with FluxCD | KubeVela", "ogDescription": "In this section, we will introduce how to use KubeVela to deliver in GitOps mode.", "generator": "Docusaurus v2.4.3", "docusaurus_version": "v1.10", "docusaurus_tag": "docs-default-v1.10", "theme-color": "#ffffff", "language": "en", "title": "GitOps with FluxCD | KubeVela", "og:description": "In this section, we will introduce how to use KubeVela to deliver in GitOps mode.", "msapplication-config": "/img/favicons/browserconfig.xml", "docsearch:language": "en", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "twitter:card": "summary_large_image", "docsearch:version": "v1.10", "scrapeId": "d576fe53-deba-43ea-a09a-7624e562956f", "sourceURL": "https://kubevela.io/docs/end-user/gitops/fluxcd", "url": "https://kubevela.io/docs/end-user/gitops/fluxcd/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela Traits References\"?\n\nAssistant: This documentation will walk through all the built-in trait types sorted alphabetically.\n\nHere's a detailed explanation:\n\n\n## Affinity\nAffinity specifies affinity and toleration K8s pod for your workload which follows the pod spec in path 'spec.template'.\n\n> For now this trait is hidden from the VelaUX. Available when using CLI\n\n### Apply To Component Types\nComponent based on the following kinds of resources:\n- deployments.apps\n- statefulsets.apps\n- daemonsets.apps\n- jobs.batch\n\n### Examples (affinity)\n```yaml\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: busybox\nspec:\n  components:\n    - name: busybox\n      type: webservice\n      properties:\n        image: busybox\n        cmd: [\"sleep\", \"86400\"]\n        labels:\n          label-key: label-value\n          to-delete-label-key: to-delete-label-value\n      traits:\n        - type: affinity\n          properties:\n            podAffinity:\n              preferred:\n                - weight: 1\n                  podAffinityTerm:\n                    labelSelector:\n                      matchExpressions:\n                        - key: \"secrity\"\n                          values: [\"S1\"]\n                    namespaces: [\"default\"]\n                    topologyKey: \"kubernetes.io/hostname\"\n```\n\n### Specification (affinity)\n| Name | Description | Type | Required | Default |\n| --- | --- | --- | --- | --- |\n| podAffinity | Specify the pod affinity scheduling rules. | [podAffinity](https://kubevela.io/docs/end-user/traits/references/#podaffinity-affinity) | false |  |\n| podAntiAffinity | Specify the pod anti-affinity scheduling rules. | [podAntiAffinity](https://kubevela.io/docs/end-user/traits/references/#podantiaffinity-affinity) | false |  |\n| nodeAffinity | Specify the node affinity scheduling rules for the pod. | [nodeAffinity](https://kubevela.io/docs/end-user/traits/references/#nodeaffinity-affinity) | false |  |\n| tolerations | Specify tolerant taint. | [\\[\\]tolerations](https://kubevela.io/docs/end-user/traits/references/#tolerations-affinity) | false |  |\n", "metadata": {"source_url": "https://kubevela.io/docs/end-user/traits/references", "title": "KubeVela Traits References", "description": "This documentation will walk through all the built-in trait types sorted alphabetically.", "has_code_examples": true, "has_best_practices": true, "section_count": 1, "timestamp": "2025-02-28 15:17:42", "type": "overview", "page_metadata": {"generator": "Docusaurus v2.4.3", "docsearch:version": "v1.10", "docusaurus_locale": "en", "docusaurus_version": "v1.10", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_tag": "docs-default-v1.10", "description": "This documentation will walk through all the built-in trait types sorted alphabetically.", "docsearch:language": "en", "docsearch:docusaurus_tag": "docs-default-v1.10", "ogTitle": "Built-in Trait Type | KubeVela", "viewport": "width=device-width, initial-scale=1.0", "og:title": "Built-in Trait Type | KubeVela", "ogDescription": "This documentation will walk through all the built-in trait types sorted alphabetically.", "title": "Built-in Trait Type | KubeVela", "ogUrl": "https://kubevela.io/docs/end-user/traits/references/", "twitter:card": "summary_large_image", "og:url": "https://kubevela.io/docs/end-user/traits/references/", "og:description": "This documentation will walk through all the built-in trait types sorted alphabetically.", "theme-color": "#ffffff", "language": "en", "msapplication-config": "/img/favicons/browserconfig.xml", "scrapeId": "e9a4fb84-61c3-4f64-8be1-f1c45d1d8be4", "sourceURL": "https://kubevela.io/docs/end-user/traits/references", "url": "https://kubevela.io/docs/end-user/traits/references/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"KubeVela Traits References\"?\n\nAssistant: Here are some code examples:\n\n### Examples (affinity)\n```yaml\n```yaml\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: busybox\nspec:\n  components:\n    - name: busybox\n      type: webservice\n      properties:\n        image: busybox\n        cmd: [\"sleep\", \"86400\"]\n        labels:\n          label-key: label-value\n          to-delete-label-key: to-delete-label-value\n      traits:\n        - type: affinity\n          properties:\n            podAffinity:\n              preferred:\n                - weight: 1\n                  podAffinityTerm:\n                    labelSelector:\n                      matchExpressions:\n                        - key: \"secrity\"\n                          values: [\"S1\"]\n                    namespaces: [\"default\"]\n                    topologyKey: \"kubernetes.io/hostname\"\n```\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/end-user/traits/references", "title": "KubeVela Traits References", "description": "This documentation will walk through all the built-in trait types sorted alphabetically.", "has_code_examples": true, "has_best_practices": true, "section_count": 1, "timestamp": "2025-02-28 15:17:42", "type": "code_examples", "page_metadata": {"generator": "Docusaurus v2.4.3", "docsearch:version": "v1.10", "docusaurus_locale": "en", "docusaurus_version": "v1.10", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_tag": "docs-default-v1.10", "description": "This documentation will walk through all the built-in trait types sorted alphabetically.", "docsearch:language": "en", "docsearch:docusaurus_tag": "docs-default-v1.10", "ogTitle": "Built-in Trait Type | KubeVela", "viewport": "width=device-width, initial-scale=1.0", "og:title": "Built-in Trait Type | KubeVela", "ogDescription": "This documentation will walk through all the built-in trait types sorted alphabetically.", "title": "Built-in Trait Type | KubeVela", "ogUrl": "https://kubevela.io/docs/end-user/traits/references/", "twitter:card": "summary_large_image", "og:url": "https://kubevela.io/docs/end-user/traits/references/", "og:description": "This documentation will walk through all the built-in trait types sorted alphabetically.", "theme-color": "#ffffff", "language": "en", "msapplication-config": "/img/favicons/browserconfig.xml", "scrapeId": "e9a4fb84-61c3-4f64-8be1-f1c45d1d8be4", "sourceURL": "https://kubevela.io/docs/end-user/traits/references", "url": "https://kubevela.io/docs/end-user/traits/references/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela Traits References\"?\n\nAssistant: Here are the recommended best practices:\n\n• For now this trait is hidden from the VelaUX. Available when using CLI.\n", "metadata": {"source_url": "https://kubevela.io/docs/end-user/traits/references", "title": "KubeVela Traits References", "description": "This documentation will walk through all the built-in trait types sorted alphabetically.", "has_code_examples": true, "has_best_practices": true, "section_count": 1, "timestamp": "2025-02-28 15:17:42", "type": "best_practices", "page_metadata": {"generator": "Docusaurus v2.4.3", "docsearch:version": "v1.10", "docusaurus_locale": "en", "docusaurus_version": "v1.10", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_tag": "docs-default-v1.10", "description": "This documentation will walk through all the built-in trait types sorted alphabetically.", "docsearch:language": "en", "docsearch:docusaurus_tag": "docs-default-v1.10", "ogTitle": "Built-in Trait Type | KubeVela", "viewport": "width=device-width, initial-scale=1.0", "og:title": "Built-in Trait Type | KubeVela", "ogDescription": "This documentation will walk through all the built-in trait types sorted alphabetically.", "title": "Built-in Trait Type | KubeVela", "ogUrl": "https://kubevela.io/docs/end-user/traits/references/", "twitter:card": "summary_large_image", "og:url": "https://kubevela.io/docs/end-user/traits/references/", "og:description": "This documentation will walk through all the built-in trait types sorted alphabetically.", "theme-color": "#ffffff", "language": "en", "msapplication-config": "/img/favicons/browserconfig.xml", "scrapeId": "e9a4fb84-61c3-4f64-8be1-f1c45d1d8be4", "sourceURL": "https://kubevela.io/docs/end-user/traits/references", "url": "https://kubevela.io/docs/end-user/traits/references/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"vela show\"?\n\nAssistant: Show the reference doc for a component, trait, policy or workflow types.\n\nHere's a detailed explanation:\n\n\n## Synopsis\nShow the reference doc for component, trait, policy or workflow types. 'vela show' equals with 'vela def show'.\n\n## Examples\n0. Run 'vela show' directly to start a web server for all reference docs.\n1. Generate documentation for ComponentDefinition webservice:\n> vela show webservice -n vela-system\n2. Generate documentation for local CUE Definition file webservice.cue:\n> vela show webservice.cue\n3. Generate documentation for local Cloud Resource Definition YAML alibaba-vpc.yaml:\n> vela show alibaba-vpc.yaml\n4. Specify output format, markdown supported:\n> vela show webservice --format markdown\n5. Specify a language for output, by default, it's english. You can also load your own translation script:\n> vela show webservice --location zh\n> vela show webservice --location zh --i18n https://kubevela.io/reference-i18n.json\n6. Show doc for a specified revision, it must exist in control plane cluster:\n> vela show webservice --revision v1\n7. Generate docs for all capabilities into folder $HOME/.vela/reference/docs/\n> vela show\n8. Generate all docs and start a doc server\n> vela show --web\n\n## Options\n  -e, --env string         specify environment name for application\n      --format string      specify format of output data, by default it's a pretty human readable format, you can specify markdown(md)\n  -h, --help               help for show\n      --i18n string        specify the location for of the doc generated from definition, now supported options 'zh', 'en'.  (default \"https://kubevela.io/reference-i18n.json\")\n  -l, --location string    specify the location for of the doc generated from definition, now supported options 'zh', 'en'.\n  -n, --namespace string   specify the Kubernetes namespace to use\n  -p, --path string        Specify the path for of the doc generated from definition.\n  -r, --revision string    Get the specified revision of a definition. Use def get to list revisions.\n      --web                start web doc site\n\n## Options inherited from parent commands\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.9/cli/vela_show", "title": "vela show", "description": "Show the reference doc for a component, trait, policy or workflow types.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 15:18:03", "type": "overview", "page_metadata": {"og:title": "vela show | KubeVela", "description": "Show the reference doc for a component, trait, policy or workflow.", "theme-color": "#ffffff", "language": "en", "msapplication-config": "/img/favicons/browserconfig.xml", "og:url": "https://kubevela.io/docs/v1.9/cli/vela_show/", "og:description": "Show the reference doc for a component, trait, policy or workflow.", "title": "vela show | KubeVela", "viewport": "width=device-width, initial-scale=1.0", "twitter:card": "summary_large_image", "generator": "Docusaurus v2.4.3", "ogUrl": "https://kubevela.io/docs/v1.9/cli/vela_show/", "ogTitle": "vela show | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_locale": "en", "docsearch:language": "en", "docusaurus_version": "v1.9", "docusaurus_tag": "docs-default-v1.9", "docsearch:version": "v1.9", "ogDescription": "Show the reference doc for a component, trait, policy or workflow.", "docsearch:docusaurus_tag": "docs-default-v1.9", "scrapeId": "24062e9b-dd1d-44c0-b0ae-910380442ebe", "sourceURL": "https://kubevela.io/docs/v1.9/cli/vela_show", "url": "https://kubevela.io/docs/v1.9/cli/vela_show/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"vela show\"?\n\nAssistant: Here are some code examples:\n\n### Basic Command\n```yaml\nvela show [flags]\n```\n\n### Example Commands\n```yaml\n0. Run 'vela show' directly to start a web server for all reference docs.\n1. Generate documentation for ComponentDefinition webservice:\n> vela show webservice -n vela-system\n2. Generate documentation for local CUE Definition file webservice.cue:\n> vela show webservice.cue\n3. Generate documentation for local Cloud Resource Definition YAML alibaba-vpc.yaml:\n> vela show alibaba-vpc.yaml\n4. Specify output format, markdown supported:\n> vela show webservice --format markdown\n5. Specify a language for output, by default, it's english. You can also load your own translation script:\n> vela show webservice --location zh\n> vela show webservice --location zh --i18n https://kubevela.io/reference-i18n.json\n6. Show doc for a specified revision, it must exist in control plane cluster:\n> vela show webservice --revision v1\n7. Generate docs for all capabilities into folder $HOME/.vela/reference/docs/\n> vela show\n8. Generate all docs and start a doc server\n> vela show --web\n```\n\n### Options Command\n```yaml\n  -e, --env string         specify environment name for application\n      --format string      specify format of output data, by default it's a pretty human readable format, you can specify markdown(md)\n  -h, --help               help for show\n      --i18n string        specify the location for of the doc generated from definition, now supported options 'zh', 'en'.  (default \"https://kubevela.io/reference-i18n.json\")\n  -l, --location string    specify the location for of the doc generated from definition, now supported options 'zh', 'en'.\n  -n, --namespace string   specify the Kubernetes namespace to use\n  -p, --path string        Specify the path for of the doc generated from definition.\n  -r, --revision string    Get the specified revision of a definition. Use def get to list revisions.\n      --web                start web doc site\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.9/cli/vela_show", "title": "vela show", "description": "Show the reference doc for a component, trait, policy or workflow types.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 15:18:03", "type": "code_examples", "page_metadata": {"og:title": "vela show | KubeVela", "description": "Show the reference doc for a component, trait, policy or workflow.", "theme-color": "#ffffff", "language": "en", "msapplication-config": "/img/favicons/browserconfig.xml", "og:url": "https://kubevela.io/docs/v1.9/cli/vela_show/", "og:description": "Show the reference doc for a component, trait, policy or workflow.", "title": "vela show | KubeVela", "viewport": "width=device-width, initial-scale=1.0", "twitter:card": "summary_large_image", "generator": "Docusaurus v2.4.3", "ogUrl": "https://kubevela.io/docs/v1.9/cli/vela_show/", "ogTitle": "vela show | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_locale": "en", "docsearch:language": "en", "docusaurus_version": "v1.9", "docusaurus_tag": "docs-default-v1.9", "docsearch:version": "v1.9", "ogDescription": "Show the reference doc for a component, trait, policy or workflow.", "docsearch:docusaurus_tag": "docs-default-v1.9", "scrapeId": "24062e9b-dd1d-44c0-b0ae-910380442ebe", "sourceURL": "https://kubevela.io/docs/v1.9/cli/vela_show", "url": "https://kubevela.io/docs/v1.9/cli/vela_show/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"vela show\"?\n\nAssistant: Here are the recommended best practices:\n\n• Run 'vela show' directly to start a web server for all reference docs.\n• Specify output format, markdown supported.\n• Specify a language for output, by default, it's english. You can also load your own translation script.\n• Show doc for a specified revision, it must exist in control plane cluster.\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.9/cli/vela_show", "title": "vela show", "description": "Show the reference doc for a component, trait, policy or workflow types.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 15:18:03", "type": "best_practices", "page_metadata": {"og:title": "vela show | KubeVela", "description": "Show the reference doc for a component, trait, policy or workflow.", "theme-color": "#ffffff", "language": "en", "msapplication-config": "/img/favicons/browserconfig.xml", "og:url": "https://kubevela.io/docs/v1.9/cli/vela_show/", "og:description": "Show the reference doc for a component, trait, policy or workflow.", "title": "vela show | KubeVela", "viewport": "width=device-width, initial-scale=1.0", "twitter:card": "summary_large_image", "generator": "Docusaurus v2.4.3", "ogUrl": "https://kubevela.io/docs/v1.9/cli/vela_show/", "ogTitle": "vela show | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_locale": "en", "docsearch:language": "en", "docusaurus_version": "v1.9", "docusaurus_tag": "docs-default-v1.9", "docsearch:version": "v1.9", "ogDescription": "Show the reference doc for a component, trait, policy or workflow.", "docsearch:docusaurus_tag": "docs-default-v1.9", "scrapeId": "24062e9b-dd1d-44c0-b0ae-910380442ebe", "sourceURL": "https://kubevela.io/docs/v1.9/cli/vela_show", "url": "https://kubevela.io/docs/v1.9/cli/vela_show/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela Addons Documentation\"?\n\nAssistant: This page provides information on how to discover, extend, and manage addons in KubeVela, including installation, listing, and uninstalling addons.\n\nHere's a detailed explanation:\n\n\n## Learn more built-in capabilities\nThere're many out-of-box capabilities installed along with KubeVela controller, refer to the following links to learn more details:\n\n- [Built-in Component Reference](https://kubevela.io/docs/end-user/components/references/)\n- [Built-in Trait Reference](https://kubevela.io/docs/end-user/traits/references/)\n- [Built-in Policy Reference](https://kubevela.io/docs/end-user/policies/references/)\n- [Built-in Workflow Step Reference](https://kubevela.io/docs/end-user/workflow/built-in-workflow-defs/)\n", "metadata": {"source_url": "https://kubevela.io/docs/end-user/components/more", "title": "KubeVela Addons Documentation", "description": "This page provides information on how to discover, extend, and manage addons in KubeVela, including installation, listing, and uninstalling addons.", "has_code_examples": true, "has_best_practices": true, "section_count": 1, "timestamp": "2025-02-28 15:18:10", "type": "overview", "page_metadata": {"description": "KubeVela is programmable, it can be extended easily with definition. You have the following ways to discover and extend the platform.", "title": "Needs More Capabilities？ | KubeVela", "msapplication-config": "/img/favicons/browserconfig.xml", "viewport": "width=device-width, initial-scale=1.0", "docusaurus_version": "v1.10", "docsearch:version": "v1.10", "docusaurus_locale": "en", "generator": "Docusaurus v2.4.3", "ogUrl": "https://kubevela.io/docs/end-user/components/more/", "docsearch:language": "en", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:description": "KubeVela is programmable, it can be extended easily with definition. You have the following ways to discover and extend the platform.", "twitter:card": "summary_large_image", "og:title": "Needs More Capabilities？ | KubeVela", "docusaurus_tag": "docs-default-v1.10", "og:url": "https://kubevela.io/docs/end-user/components/more/", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "language": "en", "theme-color": "#ffffff", "ogDescription": "KubeVela is programmable, it can be extended easily with definition. You have the following ways to discover and extend the platform.", "ogTitle": "Needs More Capabilities？ | KubeVela", "scrapeId": "2e866cb3-12c8-403a-8231-80f6815e5493", "sourceURL": "https://kubevela.io/docs/end-user/components/more", "url": "https://kubevela.io/docs/end-user/components/more/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"KubeVela Addons Documentation\"?\n\nAssistant: Here are some code examples:\n\n### List Addons\n```yaml\nvela addon list\n```\n\n### Install Addon with CLI\n```yaml\nvela addon enable fluxcd\n```\n\n### Install addon with specified version\n```yaml\nvela addon enable fluxcd --version=1.0.0\n```\n\n### Install addon with specified clusters\n```yaml\nvela addon enable <addon-name> --clusters={cluster1,cluster2}\n```\n\n### Enable addon from local directory\n```yaml\nvela addon enable ./velaux\n```\n\n### Get addon info\n```yaml\nvela addon enable velaux --verbose\n```\n\n### Uninstall Addon\n```yaml\nvela addon disable fluxcd\n```\n\n### Manage Addon Registry - List registries\n```yaml\nvela addon registry list\n```\n\n### Manage Addon Registry - Add a new registry\n```yaml\nvela addon registry add experimental --type=helm --endpoint=https://addons.kubevela.net/experimental/\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/end-user/components/more", "title": "KubeVela Addons Documentation", "description": "This page provides information on how to discover, extend, and manage addons in KubeVela, including installation, listing, and uninstalling addons.", "has_code_examples": true, "has_best_practices": true, "section_count": 1, "timestamp": "2025-02-28 15:18:10", "type": "code_examples", "page_metadata": {"description": "KubeVela is programmable, it can be extended easily with definition. You have the following ways to discover and extend the platform.", "title": "Needs More Capabilities？ | KubeVela", "msapplication-config": "/img/favicons/browserconfig.xml", "viewport": "width=device-width, initial-scale=1.0", "docusaurus_version": "v1.10", "docsearch:version": "v1.10", "docusaurus_locale": "en", "generator": "Docusaurus v2.4.3", "ogUrl": "https://kubevela.io/docs/end-user/components/more/", "docsearch:language": "en", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:description": "KubeVela is programmable, it can be extended easily with definition. You have the following ways to discover and extend the platform.", "twitter:card": "summary_large_image", "og:title": "Needs More Capabilities？ | KubeVela", "docusaurus_tag": "docs-default-v1.10", "og:url": "https://kubevela.io/docs/end-user/components/more/", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "language": "en", "theme-color": "#ffffff", "ogDescription": "KubeVela is programmable, it can be extended easily with definition. You have the following ways to discover and extend the platform.", "ogTitle": "Needs More Capabilities？ | KubeVela", "scrapeId": "2e866cb3-12c8-403a-8231-80f6815e5493", "sourceURL": "https://kubevela.io/docs/end-user/components/more", "url": "https://kubevela.io/docs/end-user/components/more/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela Addons Documentation\"?\n\nAssistant: Here are the recommended best practices:\n\n• Once addon installed, end user can discover and use these capabilities immediately.\n• Make sure the addon along with its capabilities is no longer used in any of your applications before uninstalling it.\n", "metadata": {"source_url": "https://kubevela.io/docs/end-user/components/more", "title": "KubeVela Addons Documentation", "description": "This page provides information on how to discover, extend, and manage addons in KubeVela, including installation, listing, and uninstalling addons.", "has_code_examples": true, "has_best_practices": true, "section_count": 1, "timestamp": "2025-02-28 15:18:10", "type": "best_practices", "page_metadata": {"description": "KubeVela is programmable, it can be extended easily with definition. You have the following ways to discover and extend the platform.", "title": "Needs More Capabilities？ | KubeVela", "msapplication-config": "/img/favicons/browserconfig.xml", "viewport": "width=device-width, initial-scale=1.0", "docusaurus_version": "v1.10", "docsearch:version": "v1.10", "docusaurus_locale": "en", "generator": "Docusaurus v2.4.3", "ogUrl": "https://kubevela.io/docs/end-user/components/more/", "docsearch:language": "en", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:description": "KubeVela is programmable, it can be extended easily with definition. You have the following ways to discover and extend the platform.", "twitter:card": "summary_large_image", "og:title": "Needs More Capabilities？ | KubeVela", "docusaurus_tag": "docs-default-v1.10", "og:url": "https://kubevela.io/docs/end-user/components/more/", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "language": "en", "theme-color": "#ffffff", "ogDescription": "KubeVela is programmable, it can be extended easily with definition. You have the following ways to discover and extend the platform.", "ogTitle": "Needs More Capabilities？ | KubeVela", "scrapeId": "2e866cb3-12c8-403a-8231-80f6815e5493", "sourceURL": "https://kubevela.io/docs/end-user/components/more", "url": "https://kubevela.io/docs/end-user/components/more/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"Multi-Cluster Application Delivery with KubeVela\"?\n\nAssistant: This page introduces how to deliver multi-cluster applications using KubeVela policies and workflows.\n\nHere's a detailed explanation:\n\n\n## Introduction\nThere are many scenarios that developers or system operators need to deploy and manage applications across multiple clusters.\n\n- For scalability, a single Kubernetes cluster has its limit around 5K nodes or less, it is unable to handle the large scale application load.\n- For stability/availability, one single application can be deployed in multiple clusters for backup, which provides more stability and availability.\n- For security, application might need to be deployed in different zones/areas as government policy requires.\n\n## Architecture\nKubeVela leverages the Cluster-Gateway for multi-cluster, it's installed automatically along with KubeVela chart. By default, it will directly connect to the clusters by using the kubeconfig as secret. You can also enable the Open Cluster Management for the PULL mode.\n\nThe following guide will introduce how to manage applications across clusters on KubeVela.\n\n## Preparation\nPlease make sure you have clusters in your control plane, in general, this work should be done by operator engineers.\nIf you're a DevOps engineer or trying KubeVela, you can refer to manage cluster docs to learn how to join clusters.\n\nFor the rest docs, we assume you have clusters with the following names:\n\n```codeBlockLines_e6Vv\n$ vela cluster list\nCLUSTER                 TYPE            ENDPOINT                ACCEPTED        LABELS\nlocal                   Internal        -                       true\ncluster-beijing         X509Certificate <ENDPOINT_BEIJING>      true\ncluster-hangzhou-1      X509Certificate <ENDPOINT_HANGZHOU_1>   true\ncluster-hangzhou-2      X509Certificate <ENDPOINT_HANGZHOU_2>   true\n```\n\nBy default, the hub cluster where KubeVela locates is registered as the local cluster. You can use it like a managed cluster in spite that you cannot detach it or modify it.\n\n## Deliver Application to Clusters\nTo deliver your application into multiple clusters, you simply need to configure which clusters you want to deploy through the topology policy. For example, you can deploy an nginx webservice in hangzhou clusters by running the following commands:\n\n```codeBlockLines_e6Vv\n$ cat <<EOF | vela up -f -\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: basic-topology\n  namespace: examples\nspec:\n  components:\n    - name: nginx-basic\n      type: webservice\n      properties:\n        image: nginx\n      traits:\n        - type: expose\n          properties:\n            port: [80]\n  policies:\n    - name: topology-hangzhou-clusters\n      type: topology\n      properties:\n        clusters: [\"cluster-hangzhou-1\", \"cluster-hangzhou-2\"]\nEOF\n```\n\nYou can check the deploy result by running `vela status`:\n\n```codeBlockLines_e6Vv\nvela status basic-topology -n examples\n```\n\nExpected output:\n\n```codeBlockLines_e6Vv\nAbout:\n\n  Name:         basic-topology\n  Namespace:    examples\n  Created at:   2022-04-08 14:37:54 +0800 CST\n  Status:       workflowFinished\n\nWorkflow:\n\n  mode: DAG\n  finished: true\n  Suspend: false\n  Terminated: false\n  Steps\n  - id:3mvz5i8elj\n    name:deploy-topology-hangzhou-clusters\n    type:deploy\n    phase:succeeded\n    message:\n\nServices:\n\n  - Name: nginx-basic\n    Cluster: cluster-hangzhou-1  Namespace: examples\n    Type: webservice\n    Healthy Ready:1/1\n    Traits:\n      ✅ expose\n  - Name: nginx-basic\n    Cluster: cluster-hangzhou-2  Namespace: examples\n    Type: webservice\n    Healthy Ready:1/1\n    Traits:\n      ✅ expose\n```\n\n### Debugging Multi-cluster Application\n\nYou can debugging the above deployed nginx webservice by running the following vela CLI commands. You can play with your pods in managed clusters directly on the hub cluster, without switching KubeConfig context. If you have multiple clusters in on application, the CLI command will ask you to choose one interactively.\n\n- `vela status` as shown above can give you an overview of your deployed multi-cluster application. Example usage is shown above.\n- `vela status --pod` can list the pod status of your application.\n- `vela logs` shows pod logs in managed clusters.\n\n```codeBlockLines_e6Vv\n$ vela logs basic-topology -n examples\n? You have 2 deployed resources in your app. Please choose one: Cluster: cluster-hangzhou-1 | Namespace: examples | Kind: Deployment | Name: nginx-basic\n+ nginx-basic-dfb6dcf8d-km5vk › nginx-basic\nnginx-basic-dfb6dcf8d-km5vk nginx-basic 2022-04-08T06:38:10.540430392Z /docker-entrypoint.sh: /docker-entrypoint.d/ is not empty, will attempt to perform configuration\nnginx-basic-dfb6dcf8d-km5vk nginx-basic 2022-04-08T06:38:10.540742240Z /docker-entrypoint.sh: Looking for shell scripts in /docker-entrypoint.d/\n```\n\n- `vela exec` helps you execute commands in pods in managed clusters.\n\n```codeBlockLines_e6Vv\n$ vela exec basic-topology -n examples -it -- ls\n? You have 2 deployed resources in your app. Please choose one: Cluster: cluster-hangzhou-1 | Namespace: examples | Kind: Deployment | Name: nginx-basic\nbin   docker-entrypoint.d   home   media  proc  sbin  tmp\nboot  docker-entrypoint.sh  lib    mnt    root  srv   usr\ndev   etc                   lib64  opt    run   sys   var\n```\n\n- `vela port-forward` can discover and forward ports of pods or services in managed clusters to your local endpoint.\n\n```codeBlockLines_e6Vv\n$ vela port-forward basic-topology -n examples 8080:80\n? You have 4 deployed resources in your app. Please choose one: Cluster: cluster-hangzhou-1 | Namespace: examples | Kind: Deployment | Name: nginx-basic\nForwarding from 127.0.0.1:8080 -> 80\nForwarding from [::1]:8080 -> 80\n\nForward successfully! Opening browser ...\nHandling connection for 8080\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/case-studies/multi-cluster", "title": "Multi-Cluster Application Delivery with KubeVela", "description": "This page introduces how to deliver multi-cluster applications using KubeVela policies and workflows.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 15:18:39", "type": "overview", "page_metadata": {"twitter:card": "summary_large_image", "ogUrl": "https://kubevela.io/docs/case-studies/multi-cluster/", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:title": "Multi Cluster Application | KubeVela", "og:description": "KubeVela is by design a full functional Continuous Delivery (CD) platform with fine grained support for hybrid/multi-cloud/multi-cluster deployment.", "ogDescription": "KubeVela is by design a full functional Continuous Delivery (CD) platform with fine grained support for hybrid/multi-cloud/multi-cluster deployment.", "docusaurus_locale": "en", "docusaurus_version": "v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "docsearch:language": "en", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "title": "Multi Cluster Application | KubeVela", "og:url": "https://kubevela.io/docs/case-studies/multi-cluster/", "ogTitle": "Multi Cluster Application | KubeVela", "description": "KubeVela is by design a full functional Continuous Delivery (CD) platform with fine grained support for hybrid/multi-cloud/multi-cluster deployment.", "theme-color": "#ffffff", "viewport": "width=device-width, initial-scale=1.0", "docsearch:version": "v1.10", "language": "en", "generator": "Docusaurus v2.4.3", "docusaurus_tag": "docs-default-v1.10", "scrapeId": "b7ffe431-b4ba-4d18-bfda-eba7b0db0a7a", "sourceURL": "https://kubevela.io/docs/case-studies/multi-cluster", "url": "https://kubevela.io/docs/case-studies/multi-cluster/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"Multi-Cluster Application Delivery with KubeVela\"?\n\nAssistant: Here are some code examples:\n\n### List Clusters\n```yaml\n$ vela cluster list\nCLUSTER                 TYPE            ENDPOINT                ACCEPTED        LABELS\nlocal                   Internal        -                       true\ncluster-beijing         X509Certificate <ENDPOINT_BEIJING>      true\ncluster-hangzhou-1      X509Certificate <ENDPOINT_HANGZHOU_1>   true\ncluster-hangzhou-2      X509Certificate <ENDPOINT_HANGZHOU_2>   true\n```\n\n### Deploy Application\n```yaml\n$ cat <<EOF | vela up -f -\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: basic-topology\n  namespace: examples\nspec:\n  components:\n    - name: nginx-basic\n      type: webservice\n      properties:\n        image: nginx\n      traits:\n        - type: expose\n          properties:\n            port: [80]\n  policies:\n    - name: topology-hangzhou-clusters\n      type: topology\n      properties:\n        clusters: [\"cluster-hangzhou-1\", \"cluster-hangzhou-2\"]\nEOF\n```\n\n### Check Deploy Status\n```yaml\nvela status basic-topology -n examples\n```\n\n### View Logs\n```yaml\n$ vela logs basic-topology -n examples\n? You have 2 deployed resources in your app. Please choose one: Cluster: cluster-hangzhou-1 | Namespace: examples | Kind: Deployment | Name: nginx-basic\n+ nginx-basic-dfb6dcf8d-km5vk › nginx-basic\nnginx-basic-dfb6dcf8d-km5vk nginx-basic 2022-04-08T06:38:10.540430392Z /docker-entrypoint.sh: /docker-entrypoint.d/ is not empty, will attempt to perform configuration\nnginx-basic-dfb6dcf8d-km5vk nginx-basic 2022-04-08T06:38:10.540742240Z /docker-entrypoint.sh: Looking for shell scripts in /docker-entrypoint.d/\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/case-studies/multi-cluster", "title": "Multi-Cluster Application Delivery with KubeVela", "description": "This page introduces how to deliver multi-cluster applications using KubeVela policies and workflows.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 15:18:39", "type": "code_examples", "page_metadata": {"twitter:card": "summary_large_image", "ogUrl": "https://kubevela.io/docs/case-studies/multi-cluster/", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:title": "Multi Cluster Application | KubeVela", "og:description": "KubeVela is by design a full functional Continuous Delivery (CD) platform with fine grained support for hybrid/multi-cloud/multi-cluster deployment.", "ogDescription": "KubeVela is by design a full functional Continuous Delivery (CD) platform with fine grained support for hybrid/multi-cloud/multi-cluster deployment.", "docusaurus_locale": "en", "docusaurus_version": "v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "docsearch:language": "en", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "title": "Multi Cluster Application | KubeVela", "og:url": "https://kubevela.io/docs/case-studies/multi-cluster/", "ogTitle": "Multi Cluster Application | KubeVela", "description": "KubeVela is by design a full functional Continuous Delivery (CD) platform with fine grained support for hybrid/multi-cloud/multi-cluster deployment.", "theme-color": "#ffffff", "viewport": "width=device-width, initial-scale=1.0", "docsearch:version": "v1.10", "language": "en", "generator": "Docusaurus v2.4.3", "docusaurus_tag": "docs-default-v1.10", "scrapeId": "b7ffe431-b4ba-4d18-bfda-eba7b0db0a7a", "sourceURL": "https://kubevela.io/docs/case-studies/multi-cluster", "url": "https://kubevela.io/docs/case-studies/multi-cluster/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"Multi-Cluster Application Delivery with KubeVela\"?\n\nAssistant: Here are the recommended best practices:\n\n• By default, the hub cluster where KubeVela locates is registered as the local cluster. You can use it like a managed cluster in spite that you cannot detach it or modify it.\n• Sometimes, for security issues, you might want to disable this behavior and restrict the resources to be deployed within the same namespace of the application. This can be done by setting --allow-cross-namespace-resource=false in the bootstrap parameter of the KubeVela controller.\n", "metadata": {"source_url": "https://kubevela.io/docs/case-studies/multi-cluster", "title": "Multi-Cluster Application Delivery with KubeVela", "description": "This page introduces how to deliver multi-cluster applications using KubeVela policies and workflows.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 15:18:39", "type": "best_practices", "page_metadata": {"twitter:card": "summary_large_image", "ogUrl": "https://kubevela.io/docs/case-studies/multi-cluster/", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:title": "Multi Cluster Application | KubeVela", "og:description": "KubeVela is by design a full functional Continuous Delivery (CD) platform with fine grained support for hybrid/multi-cloud/multi-cluster deployment.", "ogDescription": "KubeVela is by design a full functional Continuous Delivery (CD) platform with fine grained support for hybrid/multi-cloud/multi-cluster deployment.", "docusaurus_locale": "en", "docusaurus_version": "v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "docsearch:language": "en", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "title": "Multi Cluster Application | KubeVela", "og:url": "https://kubevela.io/docs/case-studies/multi-cluster/", "ogTitle": "Multi Cluster Application | KubeVela", "description": "KubeVela is by design a full functional Continuous Delivery (CD) platform with fine grained support for hybrid/multi-cloud/multi-cluster deployment.", "theme-color": "#ffffff", "viewport": "width=device-width, initial-scale=1.0", "docsearch:version": "v1.10", "language": "en", "generator": "Docusaurus v2.4.3", "docusaurus_tag": "docs-default-v1.10", "scrapeId": "b7ffe431-b4ba-4d18-bfda-eba7b0db0a7a", "sourceURL": "https://kubevela.io/docs/case-studies/multi-cluster", "url": "https://kubevela.io/docs/case-studies/multi-cluster/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"Page Not Found\"?\n\nAssistant: We could not find what you were looking for.\n\nHere's a detailed explanation:\n\n\n## Error Message\nWe could not find what you were looking for. Please contact the owner of the site that linked you to the original URL and let them know their link is broken.\n", "metadata": {"source_url": "https://kubevela.io/docs/platform-engineers/kube/component", "title": "Page Not Found", "description": "We could not find what you were looking for.", "has_code_examples": false, "has_best_practices": false, "section_count": 1, "timestamp": "2025-02-28 15:18:43", "type": "overview", "page_metadata": {"og:title": "Page Not Found | KubeVela", "og:url": "https://kubevela.io/docs/platform-engineers/kube/component/", "ogUrl": "https://kubevela.io/docs/platform-engineers/kube/component/", "docsearch:language": "en", "language": "en", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_tag": "default", "generator": "Docusaurus v2.4.3", "ogTitle": "Page Not Found | KubeVela", "title": "Page Not Found | KubeVela", "twitter:card": "summary_large_image", "theme-color": "#ffffff", "viewport": "width=device-width, initial-scale=1.0", "msapplication-config": "/img/favicons/browserconfig.xml", "docsearch:docusaurus_tag": "default", "docusaurus_locale": "en", "scrapeId": "1e245eb1-3d92-4996-be0a-385e333210f4", "sourceURL": "https://kubevela.io/docs/platform-engineers/kube/component", "url": "https://kubevela.io/docs/platform-engineers/kube/component", "statusCode": 404, "error": "Not Found"}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela Workflow Customization\"?\n\nAssistant: This page introduces how to customize the workflow step in Application by using CUE through WorkflowStepDefinition.\n\nHere's a detailed explanation:\n\n\n## Deliver a simple workflow step\nWe can generate `WorkflowStepDefinition` CUE file with command `vela def <def-name> --type workflow-step > <def-name>.cue`.\n\nLet's take a custom step for sending an HTTP request as an example, first, initialize the Definition file:\n\n```codeBlockLines_e6Vv\nvela def init request --type workflow-step --desc \"Send request to the url\" > request.cue\n```\n\nAfter initialization, we can see the following in `request.cue`:\n\n```codeBlockLines_e6Vv\nrequest: {\n    alias: \"\"\n    annotations: {}\n    attributes: {}\n    description: \"Send request to the url\"\n    labels: {}\n    type: \"workflow-step\"\n}\n\ntemplate: {\n}\n```\n\nInside the `template` is the execution logic for this workflow step. We can define `parameter` in `template` to receive the parameters passed in by the user:\n\n```codeBlockLines_e6Vv\ntemplate: {\n  parameter: {\n        url:    string\n        method: *\"GET\" | \"POST\" | \"PUT\" | \"DELETE\"\n        body?: {...}\n        header?: [string]: string\n    }\n}\n```\n\nCUE provides a series of [basic builtin packages](https://cuelang.org/docs/concepts/packages/#builtin-packages), such as: `regexp`, `json`, `strings`, `math`, etc.\n\nAt the same time, KubeVela also provides the `vela/op` package by default, which contains a series of built-in workflow [CUE actions](https://kubevela.io/docs/platform-engineers/workflow/cue-actions/), such as: sending HTTP requests, operating K8s resources, printing logs, etc.\n\nNow we can import KubeVela's built-in `vela/op` package and CUE's official `encoding/json`, use `op.#HTTPDo` to send HTTP requests according to the user's parameters, and use `json.Marshal()` to marshal the data.\n\n```codeBlockLines_e6Vv\nimport (\n    \"vela/op\"\n    \"encoding/json\"\n)\n\nrequest: {\n    alias: \"\"\n    annotations: {}\n    attributes: {}\n    description: \"Send request to the url\"\n    labels: {}\n    type: \"workflow-step\"\n}\n\ntemplate: {\n    http: op.#HTTPDo & {\n        method: parameter.method\n        url:    parameter.url\n        request: {\n            if parameter.body != _|_ {\n                body: json.Marshal(parameter.body)\n            }\n            if parameter.header != _|_ {\n                header: parameter.header\n            }\n        }\n    }\n    parameter: {\n        url:    string\n        method: *\"GET\" | \"POST\" | \"PUT\" | \"DELETE\"\n        body?: {...}\n        header?: [string]: string\n    }\n}\n```\n\nIf the HTTP request returns a status code greater than 400, we expect this step to be failed. Use `op.#Fail` to fail this step, and the definition is like:\n\n```codeBlockLines_e6Vv\nimport (\n    \"vela/op\"\n    \"encoding/json\"\n)\n\nrequest: {\n    alias: \"\"\n    annotations: {}\n    attributes: {}\n    description: \"Send request to the url\"\n    labels: {}\n    type: \"workflow-step\"\n}\n\ntemplate: {\n    http: op.#HTTPDo & {\n        method: parameter.method\n        url:    parameter.url\n        request: {\n            if parameter.body != _|_ {\n                body: json.Marshal(parameter.body)\n            }\n            if parameter.header != _|_ {\n                header: parameter.header\n            }\n        }\n    }\n    fail: op.#Steps & {\n        if http.response.statusCode > 400 {\n            requestFail: op.#Fail & {\n                message: \"request of \\(parameter.url) is fail: \\(http.response.statusCode)\"\n            }\n        }\n    }\n    response: json.Unmarshal(http.response.body)\n    parameter: {\n        url:    string\n        method: *\"GET\" | \"POST\" | \"PUT\" | \"DELETE\"\n        body?: {...}\n        header?: [string]: string\n    }\n}\n```\n\nUse `vela def apply -f request.cue` to deploy this Definition to the cluster, then we can use this custom step directly in the Application.\n\nDeploy the following Application: The first step of the workflow will send an HTTP request to get the information of the KubeVela repository; at the same time, this step will use the star number of the KubeVela repository as the Output, the next step will use this Output as a parameter, and sent it as message to the Slack:\n\n```codeBlockLines_e6Vv\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: request-http\n  namespace: default\nspec:\n  components: []\n  workflow:\n    steps:\n    - name: request\n      type: request\n      properties:\n        url: https://api.github.com/repos/kubevela/kubevela\n      outputs:\n        - name: stars\n          valueFrom: |\n            import \"strconv\"\n            \"Current star count: \" + strconv.FormatInt(response[\"stargazers_count\"], 10)\n    - name: notification\n      type: notification\n      inputs:\n        - from: stars\n          parameterKey: slack.message.text\n      properties:\n        slack:\n          url:\n            value: <your slack url>\n```\n\n## Custom Health Checks\n\nIf you want to wait a period of time in a workflow step until a certain condition is met, or until the status of a resource becomes ready, you can use `op.#ConditionalWait`.\n\nTake the status of waiting for a Deployment as an example, use `op.#Apply` to deploy a Deployment, and then use `op.#ConditionalWait` to wait for the status of the Deployment to become ready:\n\n```codeBlockLines_e6Vv\nimport (\n    \"vela/op\"\n)\n\n\"apply-deployment\": {\n    alias: \"\"\n    annotations: {}\n    attributes: {}\n    description: \"\"\n    labels: {}\n    type: \"workflow-step\"\n}\n\ntemplate: {\n    output: op.#Apply & {\n        value: {\n            apiVersion: \"apps/v1\"\n            kind:       \"Deployment\"\n            metadata: {\n                name:      context.stepName\n                namespace: context.namespace\n            }\n            spec: {\n                selector: matchLabels: wr: context.stepName\n                template: {\n                    metadata: labels: wr: context.stepName\n                    spec: containers: [{\\\n                        name:  context.stepName\\\n                        image: parameter.image\\\n                        if parameter[\"cmd\"] != _|_ {\\\n                            command: parameter.cmd\\\n                        }\\\n                    }]\n                }\n            }\n        }\n    }\n    wait: op.#ConditionalWait & {\n        continue: output.value.status.readyReplicas == 1\n    }\n    parameter: {\n        image: string\n        cmd?: [...string]\n    }\n}\n```\n\n## Full available `context` in Workflow Step\n\nKubeVela allows you to reference some runtime data via the `context` keyword.\n\nIn a workflow step definition, you can use the following context data:\n\n| Context Variable | Description | Type |\n| :-: | :-: | :-: |\n| `context.name` | The name of the Application. | string |\n| `context.appName` | The name of the Application. | string |\n| `context.namespace` | The namespace of the Application. | string |\n| `context.appRevision` | The revision of the Application. | string |\n| `context.stepName` | The name of current step. | string |\n| `context.stepSessionID` | The ID of current step. | string |\n| `context.spanID` | The trace ID of current step in this reconcile. | string |\n| `context.workflowName` | The workflow name specified in annotation. | string |\n| `context.publishVersion` | The version of application instance specified in annotation. | string |\n\n## Kubernetes API for WorkflowStepDefinition\n\nKubeVela is fully programmable through CUE, while it leverages Kubernetes as a control plane and is consistent with the API in YAML.\n\nTherefore, the CUE Definition will be translated into the Kubernetes API when applied to the cluster.\n\nWorkflow step definitions will be in the following API format:\n\n```codeBlockLines_e6Vv\napiVersion: core.oam.dev/v1beta1\nkind: WorkflowStepDefinition\nmetadata:\n  annotations:\n    definition.oam.dev/description: <Function description>\nspec:\n  schematic:\n    cue: # Details of workflow steps defined by CUE language\n      template: <CUE format template>\n```\n\n## More examples to learn\n\nYou can check the following resources for more examples:\n\n- Builtin workflow step definitions in the [KubeVela github repo](https://github.com/kubevela/kubevela/tree/master/vela-templates/definitions/internal/workflowstep).\n- Definitions defined in addons in the [catalog repo](https://github.com/kubevela/catalog/tree/master/addons).\n\n- [Deliver a simple workflow step](https://kubevela.io/docs/platform-engineers/workflow/workflow/#deliver-a-simple-workflow-step)\n- [Custom Health Checks](https://kubevela.io/docs/platform-engineers/workflow/workflow/#custom-health-checks)\n- [Full available `context` in Workflow Step](https://kubevela.io/docs/platform-engineers/workflow/workflow/#full-available-context-in-workflow-step)\n- [Kubernetes API for WorkflowStepDefinition](https://kubevela.io/docs/platform-engineers/workflow/workflow/#kubernetes-api-for-workflowstepdefinition)\n- [More examples to learn](https://kubevela.io/docs/platform-engineers/workflow/workflow/#more-examples-to-learn)\n", "metadata": {"source_url": "https://kubevela.io/docs/platform-engineers/workflow/workflow", "title": "KubeVela Workflow Customization", "description": "This page introduces how to customize the workflow step in Application by using CUE through WorkflowStepDefinition.", "has_code_examples": true, "has_best_practices": true, "section_count": 1, "timestamp": "2025-02-28 15:19:13", "type": "overview", "page_metadata": {"ogTitle": "Workflow Step Definition | KubeVela", "docsearch:docusaurus_tag": "docs-default-v1.10", "theme-color": "#ffffff", "og:url": "https://kubevela.io/docs/platform-engineers/workflow/workflow/", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "description": "Before reading this section, make sure you have understood the concept of WorkflowStepDefinition in KubeVela and learned the basic knowledge of CUE.", "docsearch:version": "v1.10", "docsearch:language": "en", "msapplication-config": "/img/favicons/browserconfig.xml", "docusaurus_tag": "docs-default-v1.10", "ogDescription": "Before reading this section, make sure you have understood the concept of WorkflowStepDefinition in KubeVela and learned the basic knowledge of CUE.", "ogUrl": "https://kubevela.io/docs/platform-engineers/workflow/workflow/", "og:title": "Workflow Step Definition | KubeVela", "language": "en", "generator": "Docusaurus v2.4.3", "title": "Workflow Step Definition | KubeVela", "viewport": "width=device-width, initial-scale=1.0", "docusaurus_locale": "en", "twitter:card": "summary_large_image", "docusaurus_version": "v1.10", "og:description": "Before reading this section, make sure you have understood the concept of WorkflowStepDefinition in KubeVela and learned the basic knowledge of CUE.", "scrapeId": "2a95c852-802d-4731-826f-4743e944856e", "sourceURL": "https://kubevela.io/docs/platform-engineers/workflow/workflow", "url": "https://kubevela.io/docs/platform-engineers/workflow/workflow/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"KubeVela Workflow Customization\"?\n\nAssistant: Here are some code examples:\n\n### Generate WorkflowStepDefinition CUE file\n```yaml\nvela def <def-name> --type workflow-step > <def-name>.cue\n```\n\n### Initialize Definition file\n```yaml\nvela def init request --type workflow-step --desc \"Send request to the url\" > request.cue\n```\n\n### CUE Definition for HTTP request\n```yaml\nrequest: {\n    alias: \"\"\n    annotations: {}\n    attributes: {}\n    description: \"Send request to the url\"\n    labels: {}\n    type: \"workflow-step\"\n}\n\ntemplate: {\n  parameter: {\n        url:    string\n        method: *\"GET\" | \"POST\" | \"PUT\" | \"DELETE\"\n        body?: {...}\n        header?: [string]: string\n    }\n}\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/platform-engineers/workflow/workflow", "title": "KubeVela Workflow Customization", "description": "This page introduces how to customize the workflow step in Application by using CUE through WorkflowStepDefinition.", "has_code_examples": true, "has_best_practices": true, "section_count": 1, "timestamp": "2025-02-28 15:19:13", "type": "code_examples", "page_metadata": {"ogTitle": "Workflow Step Definition | KubeVela", "docsearch:docusaurus_tag": "docs-default-v1.10", "theme-color": "#ffffff", "og:url": "https://kubevela.io/docs/platform-engineers/workflow/workflow/", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "description": "Before reading this section, make sure you have understood the concept of WorkflowStepDefinition in KubeVela and learned the basic knowledge of CUE.", "docsearch:version": "v1.10", "docsearch:language": "en", "msapplication-config": "/img/favicons/browserconfig.xml", "docusaurus_tag": "docs-default-v1.10", "ogDescription": "Before reading this section, make sure you have understood the concept of WorkflowStepDefinition in KubeVela and learned the basic knowledge of CUE.", "ogUrl": "https://kubevela.io/docs/platform-engineers/workflow/workflow/", "og:title": "Workflow Step Definition | KubeVela", "language": "en", "generator": "Docusaurus v2.4.3", "title": "Workflow Step Definition | KubeVela", "viewport": "width=device-width, initial-scale=1.0", "docusaurus_locale": "en", "twitter:card": "summary_large_image", "docusaurus_version": "v1.10", "og:description": "Before reading this section, make sure you have understood the concept of WorkflowStepDefinition in KubeVela and learned the basic knowledge of CUE.", "scrapeId": "2a95c852-802d-4731-826f-4743e944856e", "sourceURL": "https://kubevela.io/docs/platform-engineers/workflow/workflow", "url": "https://kubevela.io/docs/platform-engineers/workflow/workflow/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela Workflow Customization\"?\n\nAssistant: Here are the recommended best practices:\n\n• Before reading this section, make sure you have understood the concept of WorkflowStepDefinition in KubeVela and learned the basic knowledge of CUE.\n• Refer to Inputs and Outputs for more information of data passing between steps.\n", "metadata": {"source_url": "https://kubevela.io/docs/platform-engineers/workflow/workflow", "title": "KubeVela Workflow Customization", "description": "This page introduces how to customize the workflow step in Application by using CUE through WorkflowStepDefinition.", "has_code_examples": true, "has_best_practices": true, "section_count": 1, "timestamp": "2025-02-28 15:19:13", "type": "best_practices", "page_metadata": {"ogTitle": "Workflow Step Definition | KubeVela", "docsearch:docusaurus_tag": "docs-default-v1.10", "theme-color": "#ffffff", "og:url": "https://kubevela.io/docs/platform-engineers/workflow/workflow/", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "description": "Before reading this section, make sure you have understood the concept of WorkflowStepDefinition in KubeVela and learned the basic knowledge of CUE.", "docsearch:version": "v1.10", "docsearch:language": "en", "msapplication-config": "/img/favicons/browserconfig.xml", "docusaurus_tag": "docs-default-v1.10", "ogDescription": "Before reading this section, make sure you have understood the concept of WorkflowStepDefinition in KubeVela and learned the basic knowledge of CUE.", "ogUrl": "https://kubevela.io/docs/platform-engineers/workflow/workflow/", "og:title": "Workflow Step Definition | KubeVela", "language": "en", "generator": "Docusaurus v2.4.3", "title": "Workflow Step Definition | KubeVela", "viewport": "width=device-width, initial-scale=1.0", "docusaurus_locale": "en", "twitter:card": "summary_large_image", "docusaurus_version": "v1.10", "og:description": "Before reading this section, make sure you have understood the concept of WorkflowStepDefinition in KubeVela and learned the basic knowledge of CUE.", "scrapeId": "2a95c852-802d-4731-826f-4743e944856e", "sourceURL": "https://kubevela.io/docs/platform-engineers/workflow/workflow", "url": "https://kubevela.io/docs/platform-engineers/workflow/workflow/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"Cert-Manager Addon for KubeVela\"?\n\nAssistant: This addon is for cert-manager, which is managing the kubernetes certificates.\n\nHere's a detailed explanation:\n\n\n## Install\nInstall the certificate manager on your Kubernetes cluster to enable adding the webhook component (only needed once per Kubernetes cluster).\n\n## Uninstall\nInstructions to uninstall the cert-manager addon from your Kubernetes cluster.\n", "metadata": {"source_url": "https://kubevela.io/docs/reference/addons/cert-manager", "title": "Cert-Manager Addon for KubeVela", "description": "This addon is for cert-manager, which is managing the kubernetes certificates.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-02-28 15:19:18", "type": "overview", "page_metadata": {"twitter:card": "summary_large_image", "ogTitle": "cert-manager | KubeVela", "title": "cert-manager | KubeVela", "docusaurus_locale": "en", "description": "This addon is for cert-manager, which is managing the kubernetes certificates.", "docusaurus_tag": "docs-default-v1.10", "docusaurus_version": "v1.10", "docsearch:docusaurus_tag": "docs-default-v1.10", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "og:description": "This addon is for cert-manager, which is managing the kubernetes certificates.", "msapplication-config": "/img/favicons/browserconfig.xml", "viewport": "width=device-width, initial-scale=1.0", "language": "en", "theme-color": "#ffffff", "docsearch:language": "en", "ogDescription": "This addon is for cert-manager, which is managing the kubernetes certificates.", "og:url": "https://kubevela.io/docs/reference/addons/cert-manager/", "docsearch:version": "v1.10", "og:title": "cert-manager | KubeVela", "ogUrl": "https://kubevela.io/docs/reference/addons/cert-manager/", "generator": "Docusaurus v2.4.3", "scrapeId": "2d5455d5-a9c5-4872-a155-b830bd3fc33b", "sourceURL": "https://kubevela.io/docs/reference/addons/cert-manager", "url": "https://kubevela.io/docs/reference/addons/cert-manager/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"Cert-Manager Addon for KubeVela\"?\n\nAssistant: Here are some code examples:\n\n### Install Cert-Manager\n```yaml\nvela addon enable cert-manager\n```\n\n### Uninstall Cert-Manager\n```yaml\nvela addon disable cert-manager\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/reference/addons/cert-manager", "title": "Cert-Manager Addon for KubeVela", "description": "This addon is for cert-manager, which is managing the kubernetes certificates.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-02-28 15:19:18", "type": "code_examples", "page_metadata": {"twitter:card": "summary_large_image", "ogTitle": "cert-manager | KubeVela", "title": "cert-manager | KubeVela", "docusaurus_locale": "en", "description": "This addon is for cert-manager, which is managing the kubernetes certificates.", "docusaurus_tag": "docs-default-v1.10", "docusaurus_version": "v1.10", "docsearch:docusaurus_tag": "docs-default-v1.10", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "og:description": "This addon is for cert-manager, which is managing the kubernetes certificates.", "msapplication-config": "/img/favicons/browserconfig.xml", "viewport": "width=device-width, initial-scale=1.0", "language": "en", "theme-color": "#ffffff", "docsearch:language": "en", "ogDescription": "This addon is for cert-manager, which is managing the kubernetes certificates.", "og:url": "https://kubevela.io/docs/reference/addons/cert-manager/", "docsearch:version": "v1.10", "og:title": "cert-manager | KubeVela", "ogUrl": "https://kubevela.io/docs/reference/addons/cert-manager/", "generator": "Docusaurus v2.4.3", "scrapeId": "2d5455d5-a9c5-4872-a155-b830bd3fc33b", "sourceURL": "https://kubevela.io/docs/reference/addons/cert-manager", "url": "https://kubevela.io/docs/reference/addons/cert-manager/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"Cert-Manager Addon for KubeVela\"?\n\nAssistant: Here are the recommended best practices:\n\n• Ensure to install the cert-manager only once per Kubernetes cluster.\n", "metadata": {"source_url": "https://kubevela.io/docs/reference/addons/cert-manager", "title": "Cert-Manager Addon for KubeVela", "description": "This addon is for cert-manager, which is managing the kubernetes certificates.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-02-28 15:19:18", "type": "best_practices", "page_metadata": {"twitter:card": "summary_large_image", "ogTitle": "cert-manager | KubeVela", "title": "cert-manager | KubeVela", "docusaurus_locale": "en", "description": "This addon is for cert-manager, which is managing the kubernetes certificates.", "docusaurus_tag": "docs-default-v1.10", "docusaurus_version": "v1.10", "docsearch:docusaurus_tag": "docs-default-v1.10", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "og:description": "This addon is for cert-manager, which is managing the kubernetes certificates.", "msapplication-config": "/img/favicons/browserconfig.xml", "viewport": "width=device-width, initial-scale=1.0", "language": "en", "theme-color": "#ffffff", "docsearch:language": "en", "ogDescription": "This addon is for cert-manager, which is managing the kubernetes certificates.", "og:url": "https://kubevela.io/docs/reference/addons/cert-manager/", "docsearch:version": "v1.10", "og:title": "cert-manager | KubeVela", "ogUrl": "https://kubevela.io/docs/reference/addons/cert-manager/", "generator": "Docusaurus v2.4.3", "scrapeId": "2d5455d5-a9c5-4872-a155-b830bd3fc33b", "sourceURL": "https://kubevela.io/docs/reference/addons/cert-manager", "url": "https://kubevela.io/docs/reference/addons/cert-manager/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela Policies Reference\"?\n\nAssistant: This documentation will walk through all the built-in policy types sorted alphabetically.\n\nHere's a detailed explanation:\n\n\n## Apply-Once\nAllow configuration drift for applied resources, delivery the resource without continuously reconciliation.\n\nIt's generally used in one time delivery only without continuous management scenario.\n\n| Name | Description | Type | Required | Default |\n| --- | --- | --- | --- | --- |\n| enable | Whether to enable apply-once for the whole application. | bool | false | false |\n| rules | Specify the rules for configuring apply-once policy in resource level. | [\\[\\]rules](https://kubevela.io/docs/end-user/policies/references/#rules-apply-once) | false |  |\n\n## Garbage-Collect\nConfigure the garbage collect behaviour for the application.\n\nIt's used in garbage collection scenario. It can be used to configure the collection policy, e.g. don't delete the legacy resources when updating.\n\n| Name | Description | Type | Required | Default |\n| --- | --- | --- | --- | --- |\n| applicationRevisionLimit | If set, it will override the default revision limit number and customize this number for the current application. | int | false |  |\n| keepLegacyResource | If is set, outdated versioned resourcetracker will not be recycled automatically, outdated resources will be kept until resourcetracker be deleted manually. | bool | false | false |\n| continueOnFailure | If is set, continue to execute gc when the workflow fails, by default gc will be executed only after the workflow succeeds. | bool | false | false |\n| rules | Specify the list of rules to control gc strategy at resource level, if one resource is controlled by multiple rules, first rule will be used. | [\\[\\]rules](https://kubevela.io/docs/end-user/policies/references/#rules-garbage-collect) | false |  |\n\n## Override\nDescribe the configuration to override when deploying resources, it only works with specified deploy step in workflow.\n\n## Read-Only\nConfigure the resources to be read-only in the application (no update / state-keep).\n\n## Replication\nDescribe the configuration to replicate components when deploying resources, it only works with specified deploy step in workflow.\n\nIn KubeVela, we can dispatch resources across the clusters. But projects like OpenYurt have finer-grained division like node pool.\nThis requires to dispatch some similar resources to the same cluster. These resources are called replication.\n\n## Resource-Update\nConfigure the update strategy for selected resources.\n\n## Shared-Resource\nConfigure the resources to be sharable across applications.\n\n## Take-Over\nConfigure the resources to be able to take over when it belongs to no application.\n\n## Topology\nDescribe the destination where components should be deployed to.\n", "metadata": {"source_url": "https://kubevela.io/docs/end-user/policies/references", "title": "KubeVela Policies Reference", "description": "This documentation will walk through all the built-in policy types sorted alphabetically.", "has_code_examples": true, "has_best_practices": true, "section_count": 9, "timestamp": "2025-02-28 15:20:46", "type": "overview", "page_metadata": {"docsearch:language": "en", "og:url": "https://kubevela.io/docs/end-user/policies/references/", "title": "Built-in Policy Type | KubeVela", "docusaurus_version": "v1.10", "docusaurus_locale": "en", "docsearch:version": "v1.10", "generator": "Docusaurus v2.4.3", "ogTitle": "Built-in Policy Type | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "viewport": "width=device-width, initial-scale=1.0", "msapplication-config": "/img/favicons/browserconfig.xml", "og:title": "Built-in Policy Type | KubeVela", "docsearch:docusaurus_tag": "docs-default-v1.10", "language": "en", "docusaurus_tag": "docs-default-v1.10", "theme-color": "#ffffff", "og:description": "This documentation will walk through all the built-in policy types sorted alphabetically.", "description": "This documentation will walk through all the built-in policy types sorted alphabetically.", "twitter:card": "summary_large_image", "ogUrl": "https://kubevela.io/docs/end-user/policies/references/", "ogDescription": "This documentation will walk through all the built-in policy types sorted alphabetically.", "scrapeId": "206dd302-045a-4cbc-a0ae-02d61f44c292", "sourceURL": "https://kubevela.io/docs/end-user/policies/references", "url": "https://kubevela.io/docs/end-user/policies/references/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"KubeVela Policies Reference\"?\n\nAssistant: Here are some code examples:\n\n### Apply-Once Example\n```yaml\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: apply-once-app\nspec:\n  components:\n    - name: hello-world\n      type: webservice\n      properties:\n        image: oamdev/hello-world\n      traits:\n        - type: scaler\n          properties:\n            replicas: 1\n  policies:\n    - name: apply-once\n      type: apply-once\n      properties:\n        enable: true\n\n```\n\n### Garbage-Collect Example\n```yaml\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: first-vela-app\nspec:\n  components:\n    - name: express-server\n      type: webservice\n      properties:\n        image: oamdev/hello-world\n        port: 8000\n      traits:\n        - type: ingress-1-20\n          properties:\n            domain: testsvc.example.com\n            http:\n              \"/\": 8000\n  policies:\n    - name: keep-legacy-resource\n      type: garbage-collect\n      properties:\n        keepLegacyResource: true\n\n```\n\n### Override Example\n```yaml\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: deploy-with-override\n  namespace: examples\nspec:\n  components:\n    - name: nginx-with-override\n      type: webservice\n      properties:\n        image: nginx\n  policies:\n    - name: topology-hangzhou-clusters\n      type: topology\n      properties:\n        clusterLabelSelector:\n          region: hangzhou\n    - name: topology-local\n      type: topology\n      properties:\n        clusters: [\"local\"]\n        namespace: examples-alternative\n    - name: override-nginx-legacy-image\n      type: override\n      properties:\n        components:\n          - name: nginx-with-override\n            properties:\n              image: nginx:1.20\n    - name: override-high-availability\n      type: override\n      properties:\n        components:\n          - type: webservice\n            traits:\n              - type: scaler\n                properties:\n                  replicas: 3\n  workflow:\n    steps:\n      - type: deploy\n        name: deploy-local\n        properties:\n          policies: [\"topology-local\"]\n      - type: deploy\n        name: deploy-hangzhou\n        properties:\n          policies: [\"topology-hangzhou-clusters\", \"override-nginx-legacy-image\", \"override-high-availability\"]\n\n```\n\n### Read-Only Example\n```yaml\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: read-only\nspec:\n  components:\n    - name: busybox\n      type: worker\n      properties:\n        image: busybox\n        cmd:\n          - sleep\n          - '1000000'\n  policies:\n    - type: read-only\n      name: read-only\n      properties:\n        rules:\n          - selector:\n              resourceTypes: [\"Deployment\"]\n\n```\n\n### Replication Example\n```yaml\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: app-replication-policy\nspec:\n  components:\n    - name: hello-rep\n      type: replica-webservice\n      properties:\n        image: crccheck/hello-world\n        ports:\n          - port: 80\n            expose: true\n  policies:\n    - name: comp-to-replicate\n      type: override\n      properties:\n        selector: [\"hello-rep\"]\n    - name: target-default\n      type: topology\n      properties:\n        clusters: [\"local\"]\n    - name: replication-default\n      type: replication\n      properties:\n        keys: [\"beijing\",\"hangzhou\"]\n        selector: [\"hello-rep\"]\n  workflow:\n    steps:\n      - name: deploy-with-rep\n        type: deploy\n        properties:\n          policies: [\"comp-to-replicate\",\"target-default\",\"replication-default\"]\n\n```\n\n### Resource-Update Example\n```yaml\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: recreate\nspec:\n  components:\n    - type: k8s-objects\n      name: recreate\n      properties:\n        objects:\n          - apiVersion: v1\n            kind: Secret\n            metadata:\n              name: recreate\n            data:\n              key: dgo=\n            immutable: true\n  policies:\n    - type: resource-update\n      name: resource-update\n      properties:\n        rules:\n          - selector:\n              resourceTypes: [\"Secret\"]\n            strategy:\n              recreateFields: [\"data.key\"]\n\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/end-user/policies/references", "title": "KubeVela Policies Reference", "description": "This documentation will walk through all the built-in policy types sorted alphabetically.", "has_code_examples": true, "has_best_practices": true, "section_count": 9, "timestamp": "2025-02-28 15:20:46", "type": "code_examples", "page_metadata": {"docsearch:language": "en", "og:url": "https://kubevela.io/docs/end-user/policies/references/", "title": "Built-in Policy Type | KubeVela", "docusaurus_version": "v1.10", "docusaurus_locale": "en", "docsearch:version": "v1.10", "generator": "Docusaurus v2.4.3", "ogTitle": "Built-in Policy Type | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "viewport": "width=device-width, initial-scale=1.0", "msapplication-config": "/img/favicons/browserconfig.xml", "og:title": "Built-in Policy Type | KubeVela", "docsearch:docusaurus_tag": "docs-default-v1.10", "language": "en", "docusaurus_tag": "docs-default-v1.10", "theme-color": "#ffffff", "og:description": "This documentation will walk through all the built-in policy types sorted alphabetically.", "description": "This documentation will walk through all the built-in policy types sorted alphabetically.", "twitter:card": "summary_large_image", "ogUrl": "https://kubevela.io/docs/end-user/policies/references/", "ogDescription": "This documentation will walk through all the built-in policy types sorted alphabetically.", "scrapeId": "206dd302-045a-4cbc-a0ae-02d61f44c292", "sourceURL": "https://kubevela.io/docs/end-user/policies/references", "url": "https://kubevela.io/docs/end-user/policies/references/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela Policies Reference\"?\n\nAssistant: Here are the recommended best practices:\n\n• Use the 'apply-once' policy for one-time delivery scenarios without continuous management.\n• Configure garbage collection policies to avoid deleting legacy resources during updates.\n• Utilize the 'override' policy to customize component configurations during deployment.\n• Implement 'read-only' policies to prevent updates to critical resources.\n• Leverage replication policies to manage resources across multiple clusters effectively.\n", "metadata": {"source_url": "https://kubevela.io/docs/end-user/policies/references", "title": "KubeVela Policies Reference", "description": "This documentation will walk through all the built-in policy types sorted alphabetically.", "has_code_examples": true, "has_best_practices": true, "section_count": 9, "timestamp": "2025-02-28 15:20:46", "type": "best_practices", "page_metadata": {"docsearch:language": "en", "og:url": "https://kubevela.io/docs/end-user/policies/references/", "title": "Built-in Policy Type | KubeVela", "docusaurus_version": "v1.10", "docusaurus_locale": "en", "docsearch:version": "v1.10", "generator": "Docusaurus v2.4.3", "ogTitle": "Built-in Policy Type | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "viewport": "width=device-width, initial-scale=1.0", "msapplication-config": "/img/favicons/browserconfig.xml", "og:title": "Built-in Policy Type | KubeVela", "docsearch:docusaurus_tag": "docs-default-v1.10", "language": "en", "docusaurus_tag": "docs-default-v1.10", "theme-color": "#ffffff", "og:description": "This documentation will walk through all the built-in policy types sorted alphabetically.", "description": "This documentation will walk through all the built-in policy types sorted alphabetically.", "twitter:card": "summary_large_image", "ogUrl": "https://kubevela.io/docs/end-user/policies/references/", "ogDescription": "This documentation will walk through all the built-in policy types sorted alphabetically.", "scrapeId": "206dd302-045a-4cbc-a0ae-02d61f44c292", "sourceURL": "https://kubevela.io/docs/end-user/policies/references", "url": "https://kubevela.io/docs/end-user/policies/references/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"Initialize Environment with KubeVela\"?\n\nAssistant: This section will introduce how to initialize and destroy infrastructure of environment with KubeVela easily.\n\nHere's a detailed explanation:\n\n\n## What can be infrastructure of environment\nAn Application development team usually needs to initialize some shared environment for users. An environment is a logical concept that represents a set of common infrastructure resources for Applications.\n\nFor example, a team usually wants two environments: one for development, and one for production.\n\nIn general, the infra resource types that can be initialized include the following types:\n\n1. One or more Kubernetes clusters. Different environments may need different sizes and versions of Kubernetes clusters. Environment initialization can also manage multiple clusters .\n\n2. Any type of Kubernetes custom resources (CRDs) and system plug-ins can be set up in environment initialization.\n\n3. All kinds of shared resources and services. For example. shared resources in microservices. These shared resources can be a microservice component, cloud database, cache, load balancer, API gateway, and so on.\n\n4. Various management policies and processes. An environment may have different global policies. The policy can be chaos test, security scan, SLO and son on; the process can be initializing a database table, registering an automatic discovery configuration, and so on.\n\nKubeVela allows you to use different resources to initialize the environment.\n\nYou can use the `Policy` and `Workflow` in your `Application`. Note that there may be dependencies between initializations, we can use `depends-on-app` in workflow to do it.\n\nThe initialization of different environments has dependencies. Common resources can be separated as dependencies. In this way, reusable initialization modules can be formed.\n\nFor example, if both the test and develop environments rely on the same controllers, these controllers can be pulled out and initialized as separate environments, specifying dependency initialization in both the development and test environments.\n\n## How to use\n### Directly use Application for initialization\nIf we want to use some CRD controller like [OpenKruise](https://github.com/openkruise/kruise) in cluster, we can use `Helm` to initialize `kruise`.\n\nWe can directly use Application to initialize a kruise environment. The application below will deploy a kruise controller in cluster.\n\nWe have to enable [`FluxCD` addon](https://kubevela.net/docs/reference/addons/fluxcd) in cluster since we use `Helm` to deploy kruise.\nWe can use `depends-on-app` to make sure `addon-fluxcd` is deployed before kruise, we also use `apply-once` policy here to make sure we'll only apply the application once for initialization.\n\n> `depends-on-app` will check if the cluster has the application with `name` and `namespace` defines in `properties`.\n> If the application exists, the next step will be executed after the application is running.\n> If the application do not exists, KubeVela will check the ConfigMap with the same name, and read the config of the Application and apply to cluster.\n> For more information, please refer to [depends-on-app](https://kubevela.io/docs/end-user/workflow/built-in-workflow-defs/#depends-on-app).\n\n```yaml\ncat <<EOF | vela up -f -\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: kruise\n  namespace: vela-system\nspec:\n  components:\n    - name: kruise\n      type: helm\n      properties:\n        repoType: helm\n        url: https://openkruise.github.io/charts/\n        chart: kruise\n        version: 1.2.0\n        git:\n          branch: master\n        values:\n          featureGates: PreDownloadImageForInPlaceUpdate=true\n  policies:\n    - name: apply-once\n      type: apply-once\n      properties:\n        enable: true\n  workflow:\n    steps:\n    - name: check-flux\n      type: depends-on-app\n      properties:\n        name: addon-fluxcd\n        namespace: vela-system\n    - name: apply-kruise\n      type: apply-component\n      properties:\n        component: kruise\nEOF\n```\n\nCheck the application in cluster:\n\n```bash\nvela status kruise -n vela-system\n```\n\nExpected Outcome\n\n```yaml\nAbout:\n\n  Name:         kruise\n  Namespace:    vela-system\n  Created at:   2022-10-31 18:10:27 +0800 CST\n  Status:       running\n\nWorkflow:\n\n  mode: StepByStep-DAG\n  finished: true\n  Suspend: false\n  Terminated: false\n  Steps\n  - id: l6apfsi5c2\n    name: check-flux\n    type: depends-on-app\n    phase: succeeded\n  - id: p2nqell47w\n    name: apply-kruise\n    type: apply-component\n    phase: succeeded\n\nServices:\n\n  - Name: kruise\n    Cluster: local  Namespace: vela-system\n    Type: helm\n    Healthy Fetch repository successfully, Create helm release successfully\n    No trait applied\n```\n\nKruise is running successfully! Then you can use kruise in your cluster. If you need to set up a new environment, the only thing you need to do is to apply the files like above.\n\n### Add initialize workflow in application\nSome Kubernetes native resources like ConfigMap/PVC are commonly used in the environment.\n\nIf you want to apply those resources before deploying your application, you can add an initialization workflow to your application.\n\nKubeVela provides a built-in workflow step `apply-object` to fill in native Kubernetes resources.\nIn this way, by filling in Kubernetes native resources, we can avoid writing redundant component definitions.\n\nApply the following application, it will initialize an environment with ConfigMap/PVC. There is two components in this application, the first one will write data to PVC, the second on will read the data from PVC:\n\n```yaml\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: server-with-pvc-and-cm\n  namespace: default\nspec:\n  components:\n  - name: log-gen-worker\n    type: worker\n    properties:\n      image: busybox\n      cmd:\n        - /bin/sh\n        - -c\n        - >\n          i=0;\n          while true;\n          do\n            echo \"$i: $(date)\" >> /test-pvc/date.log;\n            i=$((i+1));\n            sleep 1;\n          done\n      volumes:\n        - name: \"my-pvc\"\n          type: \"pvc\"\n          mountPath: \"/test-pvc\"\n          claimName: \"my-claim\"\n        - name: \"my-configmap\"\n          type: \"configMap\"\n          mountPath: \"/test-cm\"\n          cmName: \"my-cm\"\n          items:\n            - key: test-key\n              path: test-key\n  - name: log-read-worker\n    type: worker\n    properties:\n      name: count-log\n      image: busybox\n      cmd:\n        - /bin/sh\n        - -c\n        - 'tail -n+1 -f /test-pvc/date.log'\n      volumes:\n        - name: \"my-pvc\"\n          type: \"pvc\"\n          mountPath: \"/test-pvc\"\n          claimName: \"my-claim\"\n        - name: \"my-configmap\"\n          type: \"configMap\"\n          mountPath: \"/test-cm\"\n          cmName: \"my-cm\"\n          items:\n            - key: test-key\n              path: test-key\n\n  policies:\n    - name: my-policy\n      properties:\n        clusters:\n        - local\n      type: topology\n    - name: apply-once\n      type: apply-once\n      properties:\n        enable: true\n\n  workflow:\n    steps:\n      - name: apply-pvc\n        type: apply-object\n        properties:\n          value:\n            apiVersion: v1\n            kind: PersistentVolumeClaim\n            metadata:\n              name: my-claim\n              namespace: default\n            spec:\n              accessModes:\n              - ReadWriteOnce\n              resources:\n                requests:\n                  storage: 8Gi\n              storageClassName: standard\n      - name: apply-cm\n        type: apply-object\n        properties:\n          value:\n            apiVersion: v1\n            kind: ConfigMap\n            metadata:\n              name: my-cm\n              namespace: default\n            data:\n              test-key: test-value\n      - name: deploy-comp\n        properties:\n          policies:\n          - my-policy\n        type: deploy\n```\n\nCheck the PVC and ConfigMap in cluster：\n\n```bash\nvela status server-with-pvc-and-cm --detail --tree\n```\n\nExpected Outcome\n\n```yaml\nCLUSTER       NAMESPACE     RESOURCE                       STATUS    APPLY_TIME          DETAIL\nlocal     ─── default   ─┬─ ConfigMap/my-cm                updated   2022-10-31 18:00:52 Data: 1  Age: 57s\n                         ├─ PersistentVolumeClaim/my-claim updated   2022-10-31 10:00:52 Status: Bound  Volume: pvc-b6f88ada-af98-468d-8cdd-31ca110c5e1a  Capacity: 8Gi  Access Modes: RWO  StorageClass: standard  Age: 57s\n                         ├─ Deployment/log-gen-worker      updated   2022-10-31 10:00:52 Ready: 1/1  Up-to-date: 1  Available: 1  Age: 57s\n                         └─ Deployment/log-read-worker     updated   2022-10-31 10:00:52 Ready: 1/1  Up-to-date: 1  Available: 1  Age: 57s\n```\n\nCheck the application in cluster：\n\n```bash\nvela status server-with-pvc-and-cm\n```\n\nExpected Outcome\n\n```yaml\n$ vela status server-with-pvc-and-cm\nAbout:\n\n  Name:         server-with-pvc-and-cm\n  Namespace:    default\n  Created at:   2022-10-31 18:00:51 +0800 CST\n  Status:       running\n\nWorkflow:\n\n  mode: StepByStep-DAG\n  finished: true\n  Suspend: false\n  Terminated: false\n  Steps\n  - id: xboizfjo28\n    name: apply-pvc\n    type: apply-object\n    phase: succeeded\n  - id: 4ngx25mrx8\n    name: apply-cm\n    type: apply-object\n    phase: succeeded\n  - id: 1gzzt3mfw1\n    name: deploy-comp\n    type: deploy\n    phase: succeeded\n\nServices:\n\n  - Name: log-gen-worker\n    Cluster: local  Namespace: default\n    Type: worker\n    Healthy Ready:1/1\n    No trait applied\n\n  - Name: log-read-worker\n    Cluster: local  Namespace: default\n    Type: worker\n    Healthy Ready:1/1\n    No trait applied\n```\n\nCheck the logs of the second component:\n\n```bash\nvela logs server-with-pvc-and-cm --component log-read-worker\n```\n\nExpected Outcome\n\n```bash\n+ log-read-worker-7f4bc9d9b5-kb5l6 › log-read-worker\nlog-read-worker 2022-10-31T10:01:15.606903716Z 0: Mon Oct 31 10:01:13 UTC 2022\nlog-read-worker 2022-10-31T10:01:15.606939383Z 1: Mon Oct 31 10:01:14 UTC 2022\nlog-read-worker 2022-10-31T10:01:15.606941883Z 2: Mon Oct 31 10:01:15 UTC 2022\nlog-read-worker 2022-10-31T10:01:16.607006425Z 3: Mon Oct 31 10:01:16 UTC 2022\nlog-read-worker 2022-10-31T10:01:17.607184925Z 4: Mon Oct 31 10:01:17 UTC 2022\nlog-read-worker 2022-10-31T10:01:18.607304426Z 5: Mon Oct 31 10:01:18 UTC 2022\n...\n```\n\nWe can see that both components is running. The two components share the same PVC and use the same ConfigMap.\n\n## Destroy the infrastructure of environment\nAs we have already modeled the environment as a KubeVela Application, we can destroy the environment easily by deleting the application.\n\n```bash\nvela delete server-with-pvc-and-cm\n```\n\nThen the KubeVela controller will clean up all these resources.\n", "metadata": {"source_url": "https://kubevela.io/docs/case-studies/initialize-env", "title": "Initialize Environment with KubeVela", "description": "This section will introduce how to initialize and destroy infrastructure of environment with KubeVela easily.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 15:21:23", "type": "overview", "page_metadata": {"og:description": "This section will introduce how to initialize and destroy infrastructure of environment with KubeVela easily.", "docsearch:language": "en", "docsearch:version": "v1.10", "docsearch:docusaurus_tag": "docs-default-v1.10", "viewport": "width=device-width, initial-scale=1.0", "title": "Initialize Env Infra Resources | KubeVela", "ogUrl": "https://kubevela.io/docs/case-studies/initialize-env/", "msapplication-config": "/img/favicons/browserconfig.xml", "generator": "Docusaurus v2.4.3", "ogTitle": "Initialize Env Infra Resources | KubeVela", "description": "This section will introduce how to initialize and destroy infrastructure of environment with KubeVela easily.", "og:title": "Initialize Env Infra Resources | KubeVela", "theme-color": "#ffffff", "twitter:card": "summary_large_image", "language": "en", "ogDescription": "This section will introduce how to initialize and destroy infrastructure of environment with KubeVela easily.", "docusaurus_locale": "en", "docusaurus_version": "v1.10", "og:url": "https://kubevela.io/docs/case-studies/initialize-env/", "docusaurus_tag": "docs-default-v1.10", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "scrapeId": "62cbc6dc-48c6-4de3-8ee5-ab794bc0dc8b", "sourceURL": "https://kubevela.io/docs/case-studies/initialize-env", "url": "https://kubevela.io/docs/case-studies/initialize-env/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"Initialize Environment with KubeVela\"?\n\nAssistant: Here are some code examples:\n\n### Initialize Kruise Environment\n```yaml\ncat <<EOF | vela up -f -\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: kruise\n  namespace: vela-system\nspec:\n  components:\n    - name: kruise\n      type: helm\n      properties:\n        repoType: helm\n        url: https://openkruise.github.io/charts/\n        chart: kruise\n        version: 1.2.0\n        git:\n          branch: master\n        values:\n          featureGates: PreDownloadImageForInPlaceUpdate=true\n  policies:\n    - name: apply-once\n      type: apply-once\n      properties:\n        enable: true\n  workflow:\n    steps:\n    - name: check-flux\n      type: depends-on-app\n      properties:\n        name: addon-fluxcd\n        namespace: vela-system\n    - name: apply-kruise\n      type: apply-component\n      properties:\n        component: kruise\nEOF\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/case-studies/initialize-env", "title": "Initialize Environment with KubeVela", "description": "This section will introduce how to initialize and destroy infrastructure of environment with KubeVela easily.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 15:21:23", "type": "code_examples", "page_metadata": {"og:description": "This section will introduce how to initialize and destroy infrastructure of environment with KubeVela easily.", "docsearch:language": "en", "docsearch:version": "v1.10", "docsearch:docusaurus_tag": "docs-default-v1.10", "viewport": "width=device-width, initial-scale=1.0", "title": "Initialize Env Infra Resources | KubeVela", "ogUrl": "https://kubevela.io/docs/case-studies/initialize-env/", "msapplication-config": "/img/favicons/browserconfig.xml", "generator": "Docusaurus v2.4.3", "ogTitle": "Initialize Env Infra Resources | KubeVela", "description": "This section will introduce how to initialize and destroy infrastructure of environment with KubeVela easily.", "og:title": "Initialize Env Infra Resources | KubeVela", "theme-color": "#ffffff", "twitter:card": "summary_large_image", "language": "en", "ogDescription": "This section will introduce how to initialize and destroy infrastructure of environment with KubeVela easily.", "docusaurus_locale": "en", "docusaurus_version": "v1.10", "og:url": "https://kubevela.io/docs/case-studies/initialize-env/", "docusaurus_tag": "docs-default-v1.10", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "scrapeId": "62cbc6dc-48c6-4de3-8ee5-ab794bc0dc8b", "sourceURL": "https://kubevela.io/docs/case-studies/initialize-env", "url": "https://kubevela.io/docs/case-studies/initialize-env/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"Initialize Environment with KubeVela\"?\n\nAssistant: Here are the recommended best practices:\n\n• Use `depends-on-app` to manage dependencies between initializations.\n• Enable `FluxCD` addon in the cluster when using `Helm` for deployment.\n• Use `apply-once` policy to ensure the application is only applied once for initialization.\n", "metadata": {"source_url": "https://kubevela.io/docs/case-studies/initialize-env", "title": "Initialize Environment with KubeVela", "description": "This section will introduce how to initialize and destroy infrastructure of environment with KubeVela easily.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 15:21:23", "type": "best_practices", "page_metadata": {"og:description": "This section will introduce how to initialize and destroy infrastructure of environment with KubeVela easily.", "docsearch:language": "en", "docsearch:version": "v1.10", "docsearch:docusaurus_tag": "docs-default-v1.10", "viewport": "width=device-width, initial-scale=1.0", "title": "Initialize Env Infra Resources | KubeVela", "ogUrl": "https://kubevela.io/docs/case-studies/initialize-env/", "msapplication-config": "/img/favicons/browserconfig.xml", "generator": "Docusaurus v2.4.3", "ogTitle": "Initialize Env Infra Resources | KubeVela", "description": "This section will introduce how to initialize and destroy infrastructure of environment with KubeVela easily.", "og:title": "Initialize Env Infra Resources | KubeVela", "theme-color": "#ffffff", "twitter:card": "summary_large_image", "language": "en", "ogDescription": "This section will introduce how to initialize and destroy infrastructure of environment with KubeVela easily.", "docusaurus_locale": "en", "docusaurus_version": "v1.10", "og:url": "https://kubevela.io/docs/case-studies/initialize-env/", "docusaurus_tag": "docs-default-v1.10", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "scrapeId": "62cbc6dc-48c6-4de3-8ee5-ab794bc0dc8b", "sourceURL": "https://kubevela.io/docs/case-studies/initialize-env", "url": "https://kubevela.io/docs/case-studies/initialize-env/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela CLI: Initialize Environment\"?\n\nAssistant: Create environment for vela applications to run.\n\nHere's a detailed explanation:\n\n\n## Synopsis\nCreate environment for vela applications to run.\n\n## Examples\n```bash\nvela env init test --namespace test\n```\n\n## Options\n```bash\n  -h, --help               help for init\n      --namespace string   specify K8s namespace for env\n```\n\n## Options inherited from parent commands\n```bash\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n\n## SEE ALSO\n- [vela env](https://kubevela.io/docs/v1.9/cli/vela_env/) \\- Manage environments for vela applications to run.\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.9/cli/vela_env_init", "title": "KubeVela CLI: Initialize Environment", "description": "Create environment for vela applications to run.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:21:30", "type": "overview", "page_metadata": {"generator": "Docusaurus v2.4.3", "docusaurus_version": "v1.9", "language": "en", "ogUrl": "https://kubevela.io/docs/v1.9/cli/vela_env_init/", "og:url": "https://kubevela.io/docs/v1.9/cli/vela_env_init/", "docsearch:version": "v1.9", "theme-color": "#ffffff", "viewport": "width=device-width, initial-scale=1.0", "og:title": "vela env init | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "twitter:card": "summary_large_image", "docsearch:language": "en", "docusaurus_tag": "docs-default-v1.9", "ogTitle": "vela env init | KubeVela", "docsearch:docusaurus_tag": "docs-default-v1.9", "title": "vela env init | KubeVela", "description": "Create environment for vela applications to run.", "docusaurus_locale": "en", "ogDescription": "Create environment for vela applications to run.", "og:description": "Create environment for vela applications to run.", "msapplication-config": "/img/favicons/browserconfig.xml", "scrapeId": "0233d570-64e5-4b0c-8a65-c1e286c39998", "sourceURL": "https://kubevela.io/docs/v1.9/cli/vela_env_init", "url": "https://kubevela.io/docs/v1.9/cli/vela_env_init/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"KubeVela CLI: Initialize Environment\"?\n\nAssistant: Here are some code examples:\n\n### Initialize Environment Command\n```yaml\nvela env init <envName>\n```\n\n### Example Command\n```yaml\nvela env init test --namespace test\n```\n\n### Options Command\n```yaml\n  -h, --help               help for init\n      --namespace string   specify K8s namespace for env\n```\n\n### Inherited Options Command\n```yaml\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.9/cli/vela_env_init", "title": "KubeVela CLI: Initialize Environment", "description": "Create environment for vela applications to run.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:21:30", "type": "code_examples", "page_metadata": {"generator": "Docusaurus v2.4.3", "docusaurus_version": "v1.9", "language": "en", "ogUrl": "https://kubevela.io/docs/v1.9/cli/vela_env_init/", "og:url": "https://kubevela.io/docs/v1.9/cli/vela_env_init/", "docsearch:version": "v1.9", "theme-color": "#ffffff", "viewport": "width=device-width, initial-scale=1.0", "og:title": "vela env init | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "twitter:card": "summary_large_image", "docsearch:language": "en", "docusaurus_tag": "docs-default-v1.9", "ogTitle": "vela env init | KubeVela", "docsearch:docusaurus_tag": "docs-default-v1.9", "title": "vela env init | KubeVela", "description": "Create environment for vela applications to run.", "docusaurus_locale": "en", "ogDescription": "Create environment for vela applications to run.", "og:description": "Create environment for vela applications to run.", "msapplication-config": "/img/favicons/browserconfig.xml", "scrapeId": "0233d570-64e5-4b0c-8a65-c1e286c39998", "sourceURL": "https://kubevela.io/docs/v1.9/cli/vela_env_init", "url": "https://kubevela.io/docs/v1.9/cli/vela_env_init/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela CLI: Initialize Environment\"?\n\nAssistant: Here are the recommended best practices:\n\n• For up-to-date documentation, see the latest version (v1.10).\n• Use the --namespace option to specify the K8s namespace for the environment.\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.9/cli/vela_env_init", "title": "KubeVela CLI: Initialize Environment", "description": "Create environment for vela applications to run.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:21:30", "type": "best_practices", "page_metadata": {"generator": "Docusaurus v2.4.3", "docusaurus_version": "v1.9", "language": "en", "ogUrl": "https://kubevela.io/docs/v1.9/cli/vela_env_init/", "og:url": "https://kubevela.io/docs/v1.9/cli/vela_env_init/", "docsearch:version": "v1.9", "theme-color": "#ffffff", "viewport": "width=device-width, initial-scale=1.0", "og:title": "vela env init | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "twitter:card": "summary_large_image", "docsearch:language": "en", "docusaurus_tag": "docs-default-v1.9", "ogTitle": "vela env init | KubeVela", "docsearch:docusaurus_tag": "docs-default-v1.9", "title": "vela env init | KubeVela", "description": "Create environment for vela applications to run.", "docusaurus_locale": "en", "ogDescription": "Create environment for vela applications to run.", "og:description": "Create environment for vela applications to run.", "msapplication-config": "/img/favicons/browserconfig.xml", "scrapeId": "0233d570-64e5-4b0c-8a65-c1e286c39998", "sourceURL": "https://kubevela.io/docs/v1.9/cli/vela_env_init", "url": "https://kubevela.io/docs/v1.9/cli/vela_env_init/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela Scaler Tutorial\"?\n\nAssistant: This page introduces how to manually modify replicas to apply in KubeVela.\n\nHere's a detailed explanation:\n\n\n## Before starting\n- You've walked through at least one type of application deployment.\n\n## Attaching Trait\nKubeVela has a built-in `scaler` Trait by default, which supports the adjustment of replicas in typical workloads, such as `webservice` and `k8s-objects` applications.\n\n> For k8s-objects type applications, when multiple resources are involved, please put the workload resources such as Deployment, Statefulset, Job in the first place so that the Trait of `scaler` can take effect.\n\nLet's take first-vela-app in `Deliver First Application` as an example. First, open the application's `Baseline Config`- `Properties` page:\n\n![app-trait-scaler](https://kubevela.io/assets/images/app-scaler-bbe7a19987986b65e35e5c6aecd21d19.jpg)\n\nNext, we click the Settings (gear) button on the right side of Set Replicas to adjust replicas to 3. After clicking save, the changes will be temporarily stored.\n\nThen to make it effective in a certain environment, we need to click the `Deploy` button or the multi-environment workflow selection button next to it and select the corresponding environment to perform the deployment.\n\nAfter the deployment is complete, you can enter the environment instance page. You'll find 3 rows of data that have appeared in the instance list.\n\n![instance-trait-scaler](https://kubevela.io/assets/images/instance-trait-scaler-d5e1ecba5da72510067efccdb1e304ce.jpg)\n\n> Trait can extend more powerful features, such as HPA.\n\n## Edit deployment parameters\nFor applications created using Helm or other custom deployment types, if Traits are not applicable, you can directly edit the deployment parameters to adjust the number of application instances.\n\nFor example, in Helm applications, the general Chart package provides parameters for setting the number of replicas, which can be set by setting Values.\n\nTake [apache chart](https://github.com/bitnami/charts/tree/master/bitnami/apache) as an example, set `replicaCount=3` in Values to adjust the number of replicas.\n\n## Next step\n- [View Application Logs](https://kubevela.io/docs/v1.9/how-to/dashboard/application/get-application-log/)\n- [Customize Scaler Trait](https://kubevela.io/docs/v1.9/platform-engineers/traits/customize-trait/)\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.9/tutorials/scaler", "title": "KubeVela Scaler Tutorial", "description": "This page introduces how to manually modify replicas to apply in KubeVela.", "has_code_examples": false, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 15:21:43", "type": "overview", "page_metadata": {"description": "This article introduces how KubeVela adjusts the number of application copies.", "docusaurus_locale": "en", "msapplication-config": "/img/favicons/browserconfig.xml", "docusaurus_tag": "docs-default-v1.9", "viewport": "width=device-width, initial-scale=1.0", "docsearch:version": "v1.9", "docusaurus_version": "v1.9", "og:url": "https://kubevela.io/docs/v1.9/tutorials/scaler/", "docsearch:language": "en", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "language": "en", "title": "Modify Replicas | KubeVela", "ogDescription": "This article introduces how KubeVela adjusts the number of application copies.", "theme-color": "#ffffff", "twitter:card": "summary_large_image", "generator": "Docusaurus v2.4.3", "ogTitle": "Modify Replicas | KubeVela", "docsearch:docusaurus_tag": "docs-default-v1.9", "og:title": "Modify Replicas | KubeVela", "ogUrl": "https://kubevela.io/docs/v1.9/tutorials/scaler/", "og:description": "This article introduces how KubeVela adjusts the number of application copies.", "scrapeId": "c7ac5a08-8e75-4f1d-b458-f1905cd77733", "sourceURL": "https://kubevela.io/docs/v1.9/tutorials/scaler", "url": "https://kubevela.io/docs/v1.9/tutorials/scaler/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela Scaler Tutorial\"?\n\nAssistant: Here are the recommended best practices:\n\n• For k8s-objects type applications, ensure workload resources are prioritized for the scaler Trait to take effect.\n• In Helm applications, adjust the number of replicas by setting `replicaCount` in Values.\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.9/tutorials/scaler", "title": "KubeVela Scaler Tutorial", "description": "This page introduces how to manually modify replicas to apply in KubeVela.", "has_code_examples": false, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 15:21:43", "type": "best_practices", "page_metadata": {"description": "This article introduces how KubeVela adjusts the number of application copies.", "docusaurus_locale": "en", "msapplication-config": "/img/favicons/browserconfig.xml", "docusaurus_tag": "docs-default-v1.9", "viewport": "width=device-width, initial-scale=1.0", "docsearch:version": "v1.9", "docusaurus_version": "v1.9", "og:url": "https://kubevela.io/docs/v1.9/tutorials/scaler/", "docsearch:language": "en", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "language": "en", "title": "Modify Replicas | KubeVela", "ogDescription": "This article introduces how KubeVela adjusts the number of application copies.", "theme-color": "#ffffff", "twitter:card": "summary_large_image", "generator": "Docusaurus v2.4.3", "ogTitle": "Modify Replicas | KubeVela", "docsearch:docusaurus_tag": "docs-default-v1.9", "og:title": "Modify Replicas | KubeVela", "ogUrl": "https://kubevela.io/docs/v1.9/tutorials/scaler/", "og:description": "This article introduces how KubeVela adjusts the number of application copies.", "scrapeId": "c7ac5a08-8e75-4f1d-b458-f1905cd77733", "sourceURL": "https://kubevela.io/docs/v1.9/tutorials/scaler", "url": "https://kubevela.io/docs/v1.9/tutorials/scaler/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"Understanding JSON Structure\"?\n\nAssistant: This page provides an overview of JSON structure, including its syntax, data types, and best practices for usage.\n\nHere's a detailed explanation:\n\n\n## Introduction to JSON\nJSON (JavaScript Object Notation) is a lightweight data interchange format that is easy for humans to read and write, and easy for machines to parse and generate.\n\n## JSON Syntax\nJSON syntax is derived from JavaScript object notation. It consists of key/value pairs, where keys are strings and values can be strings, numbers, objects, arrays, booleans, or null.\n\n## Data Types in JSON\nThe data types supported in JSON include:\n1. String\n2. Number\n3. Object\n4. Array\n5. Boolean\n6. Null\n\n## Best Practices for JSON\nWhen working with JSON, consider the following best practices:\n- Use consistent naming conventions for keys.\n- Keep the structure simple and avoid deeply nested objects.\n", "metadata": {"source_url": "https://kubevela.io/docs/reference/addons/kruise-rollout", "title": "Understanding JSON Structure", "description": "This page provides an overview of JSON structure, including its syntax, data types, and best practices for usage.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 15:22:15", "type": "overview", "page_metadata": {"title": "kruise-rollout | KubeVela", "twitter:card": "summary_large_image", "theme-color": "#ffffff", "og:url": "https://kubevela.io/docs/reference/addons/kruise-rollout/", "generator": "Docusaurus v2.4.3", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogDescription": "Kruise Rollout addon provides canary release capabilities for Kubernetes Deployment, Statefulset and OpenKruise CloneSet.", "description": "Kruise Rollout addon provides canary release capabilities for Kubernetes Deployment, Statefulset and OpenKruise CloneSet.", "docsearch:version": "v1.10", "docusaurus_tag": "docs-default-v1.10", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:description": "Kruise Rollout addon provides canary release capabilities for Kubernetes Deployment, Statefulset and OpenKruise CloneSet.", "msapplication-config": "/img/favicons/browserconfig.xml", "ogUrl": "https://kubevela.io/docs/reference/addons/kruise-rollout/", "language": "en", "og:title": "kruise-rollout | KubeVela", "docusaurus_version": "v1.10", "docusaurus_locale": "en", "docsearch:language": "en", "ogTitle": "kruise-rollout | KubeVela", "viewport": "width=device-width,initial-scale=1", "scrapeId": "0060a6df-8371-4af4-8cfa-3df34384491a", "sourceURL": "https://kubevela.io/docs/reference/addons/kruise-rollout", "url": "https://kubevela.io/docs/reference/addons/kruise-rollout/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"Understanding JSON Structure\"?\n\nAssistant: Here are some code examples:\n\n### Basic JSON Example\n```yaml\n{\n  \"name\": \"John\",\n  \"age\": 30,\n  \"isStudent\": false,\n  \"courses\": [\"Math\", \"Science\"]\n}\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/reference/addons/kruise-rollout", "title": "Understanding JSON Structure", "description": "This page provides an overview of JSON structure, including its syntax, data types, and best practices for usage.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 15:22:15", "type": "code_examples", "page_metadata": {"title": "kruise-rollout | KubeVela", "twitter:card": "summary_large_image", "theme-color": "#ffffff", "og:url": "https://kubevela.io/docs/reference/addons/kruise-rollout/", "generator": "Docusaurus v2.4.3", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogDescription": "Kruise Rollout addon provides canary release capabilities for Kubernetes Deployment, Statefulset and OpenKruise CloneSet.", "description": "Kruise Rollout addon provides canary release capabilities for Kubernetes Deployment, Statefulset and OpenKruise CloneSet.", "docsearch:version": "v1.10", "docusaurus_tag": "docs-default-v1.10", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:description": "Kruise Rollout addon provides canary release capabilities for Kubernetes Deployment, Statefulset and OpenKruise CloneSet.", "msapplication-config": "/img/favicons/browserconfig.xml", "ogUrl": "https://kubevela.io/docs/reference/addons/kruise-rollout/", "language": "en", "og:title": "kruise-rollout | KubeVela", "docusaurus_version": "v1.10", "docusaurus_locale": "en", "docsearch:language": "en", "ogTitle": "kruise-rollout | KubeVela", "viewport": "width=device-width,initial-scale=1", "scrapeId": "0060a6df-8371-4af4-8cfa-3df34384491a", "sourceURL": "https://kubevela.io/docs/reference/addons/kruise-rollout", "url": "https://kubevela.io/docs/reference/addons/kruise-rollout/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"Understanding JSON Structure\"?\n\nAssistant: Here are the recommended best practices:\n\n• Use double quotes for keys and string values.\n• Validate JSON using online tools or libraries before use.\n", "metadata": {"source_url": "https://kubevela.io/docs/reference/addons/kruise-rollout", "title": "Understanding JSON Structure", "description": "This page provides an overview of JSON structure, including its syntax, data types, and best practices for usage.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 15:22:15", "type": "best_practices", "page_metadata": {"title": "kruise-rollout | KubeVela", "twitter:card": "summary_large_image", "theme-color": "#ffffff", "og:url": "https://kubevela.io/docs/reference/addons/kruise-rollout/", "generator": "Docusaurus v2.4.3", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogDescription": "Kruise Rollout addon provides canary release capabilities for Kubernetes Deployment, Statefulset and OpenKruise CloneSet.", "description": "Kruise Rollout addon provides canary release capabilities for Kubernetes Deployment, Statefulset and OpenKruise CloneSet.", "docsearch:version": "v1.10", "docusaurus_tag": "docs-default-v1.10", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:description": "Kruise Rollout addon provides canary release capabilities for Kubernetes Deployment, Statefulset and OpenKruise CloneSet.", "msapplication-config": "/img/favicons/browserconfig.xml", "ogUrl": "https://kubevela.io/docs/reference/addons/kruise-rollout/", "language": "en", "og:title": "kruise-rollout | KubeVela", "docusaurus_version": "v1.10", "docusaurus_locale": "en", "docsearch:language": "en", "ogTitle": "kruise-rollout | KubeVela", "viewport": "width=device-width,initial-scale=1", "scrapeId": "0060a6df-8371-4af4-8cfa-3df34384491a", "sourceURL": "https://kubevela.io/docs/reference/addons/kruise-rollout", "url": "https://kubevela.io/docs/reference/addons/kruise-rollout/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"Consume Cloud Services\"?\n\nAssistant: KubeVela efficiently and securely integrates different types of cloud resources in hybrid/multi-cloud environments.\n\nHere's a detailed explanation:\n\n\n## Provision Cloud Resources\nThis tutorial will mainly focus on talking about how to provision cloud resources by Terraform. If you'd like to know more about cloud resources from Crossplane, please refer to this guide.\n\n## Prerequisites\n- Enable Terraform addon and authenticate the target cloud provider per the instruction.\n\n## Familiar with cloud resources specification\nAll supported Terraform cloud resources can be seen in the list. You can also filter them by command `vela components --label type=terraform`. You can use any of the following ways to check the specification of one cloud resource. - Using command `vela show <component type name>`.\n\n## Provision by Creating Application\nFirst, Prepare a available cloud provider. Let's list the exist configs, If exist you could ignore this step.\n\n## Provision with UI Console\nProvision cloud resources from UI Console can be more appropriate.\n\n## Before starting\n- Enable VelaUX addon. - Enable Terraform addon, just like the prerequisites in CLI part above.\n\n## Creating your cloud service\nThe UI console operations are the same, you can refer to this guide.\n\n## Viewing cloud resource creation status\n- Check the cloud instance list.\n\n## FAQ\n- The cloud service is always ProvisioningAndChecking and has no name.\n\n## More\nFor more usages of cloud resources, like how to provision and consume cloud resources, please refer to Scenarios of Cloud Resources Management.\n", "metadata": {"source_url": "https://kubevela.io/docs/tutorials/consume-cloud-services", "title": "Consume Cloud Services", "description": "KubeVela efficiently and securely integrates different types of cloud resources in hybrid/multi-cloud environments.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-02-28 15:22:25", "type": "overview", "page_metadata": {"ogUrl": "https://kubevela.io/docs/tutorials/consume-cloud-services/", "ogDescription": "KubeVela efficiently and securely integrates different types of cloud resources in hybrid/multi-cloud environments.", "twitter:card": "summary_large_image", "msapplication-config": "/img/favicons/browserconfig.xml", "docusaurus_locale": "en", "theme-color": "#ffffff", "language": "en", "docsearch:docusaurus_tag": "docs-default-v1.10", "docusaurus_version": "v1.10", "docsearch:language": "en", "docsearch:version": "v1.10", "og:description": "KubeVela efficiently and securely integrates different types of cloud resources in hybrid/multi-cloud environments.", "viewport": "width=device-width, initial-scale=1.0", "generator": "Docusaurus v2.4.3", "og:url": "https://kubevela.io/docs/tutorials/consume-cloud-services/", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "title": "Deploy Cloud Services | KubeVela", "og:title": "Deploy Cloud Services | KubeVela", "ogTitle": "Deploy Cloud Services | KubeVela", "docusaurus_tag": "docs-default-v1.10", "description": "KubeVela efficiently and securely integrates different types of cloud resources in hybrid/multi-cloud environments.", "scrapeId": "9f44cfba-258d-4086-a954-07547d257900", "sourceURL": "https://kubevela.io/docs/tutorials/consume-cloud-services", "url": "https://kubevela.io/docs/tutorials/consume-cloud-services/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"Consume Cloud Services\"?\n\nAssistant: Here are some code examples:\n\n### Show Alibaba OSS Specification\n```yaml\n$ vela show alibaba-oss\n### Properties\n+----------------------------+-------------------------------------------------------------------------+-----------------------------------------------------------+----------+---------+\n|            NAME            |                               DESCRIPTION                               |                           TYPE                            | REQUIRED | DEFAULT |\n+----------------------------+-------------------------------------------------------------------------+-----------------------------------------------------------+----------+---------+\n| acl                        | OSS bucket ACL, supported 'private', 'public-read', 'public-read-write' | string                                                    | false    |         |\n| bucket                     | OSS bucket name                                                         | string                                                    | false    |         |\n| writeConnectionSecretToRef | The secret which the cloud resource connection will be written to       | [writeConnectionSecretToRef](#writeConnectionSecretToRef) | false    |         |\n+----------------------------+-------------------------------------------------------------------------+-----------------------------------------------------------+----------+---------+\n\n...snip...\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/tutorials/consume-cloud-services", "title": "Consume Cloud Services", "description": "KubeVela efficiently and securely integrates different types of cloud resources in hybrid/multi-cloud environments.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-02-28 15:22:25", "type": "code_examples", "page_metadata": {"ogUrl": "https://kubevela.io/docs/tutorials/consume-cloud-services/", "ogDescription": "KubeVela efficiently and securely integrates different types of cloud resources in hybrid/multi-cloud environments.", "twitter:card": "summary_large_image", "msapplication-config": "/img/favicons/browserconfig.xml", "docusaurus_locale": "en", "theme-color": "#ffffff", "language": "en", "docsearch:docusaurus_tag": "docs-default-v1.10", "docusaurus_version": "v1.10", "docsearch:language": "en", "docsearch:version": "v1.10", "og:description": "KubeVela efficiently and securely integrates different types of cloud resources in hybrid/multi-cloud environments.", "viewport": "width=device-width, initial-scale=1.0", "generator": "Docusaurus v2.4.3", "og:url": "https://kubevela.io/docs/tutorials/consume-cloud-services/", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "title": "Deploy Cloud Services | KubeVela", "og:title": "Deploy Cloud Services | KubeVela", "ogTitle": "Deploy Cloud Services | KubeVela", "docusaurus_tag": "docs-default-v1.10", "description": "KubeVela efficiently and securely integrates different types of cloud resources in hybrid/multi-cloud environments.", "scrapeId": "9f44cfba-258d-4086-a954-07547d257900", "sourceURL": "https://kubevela.io/docs/tutorials/consume-cloud-services", "url": "https://kubevela.io/docs/tutorials/consume-cloud-services/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"Consume Cloud Services\"?\n\nAssistant: Here are the recommended best practices:\n\n• Enable Terraform addon and authenticate the target cloud provider per the instruction.\n• You can add flag `--web` to view the usage by a local browser.\n• Check the cloud instance list to view instance information.\n", "metadata": {"source_url": "https://kubevela.io/docs/tutorials/consume-cloud-services", "title": "Consume Cloud Services", "description": "KubeVela efficiently and securely integrates different types of cloud resources in hybrid/multi-cloud environments.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-02-28 15:22:25", "type": "best_practices", "page_metadata": {"ogUrl": "https://kubevela.io/docs/tutorials/consume-cloud-services/", "ogDescription": "KubeVela efficiently and securely integrates different types of cloud resources in hybrid/multi-cloud environments.", "twitter:card": "summary_large_image", "msapplication-config": "/img/favicons/browserconfig.xml", "docusaurus_locale": "en", "theme-color": "#ffffff", "language": "en", "docsearch:docusaurus_tag": "docs-default-v1.10", "docusaurus_version": "v1.10", "docsearch:language": "en", "docsearch:version": "v1.10", "og:description": "KubeVela efficiently and securely integrates different types of cloud resources in hybrid/multi-cloud environments.", "viewport": "width=device-width, initial-scale=1.0", "generator": "Docusaurus v2.4.3", "og:url": "https://kubevela.io/docs/tutorials/consume-cloud-services/", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "title": "Deploy Cloud Services | KubeVela", "og:title": "Deploy Cloud Services | KubeVela", "ogTitle": "Deploy Cloud Services | KubeVela", "docusaurus_tag": "docs-default-v1.10", "description": "KubeVela efficiently and securely integrates different types of cloud resources in hybrid/multi-cloud environments.", "scrapeId": "9f44cfba-258d-4086-a954-07547d257900", "sourceURL": "https://kubevela.io/docs/tutorials/consume-cloud-services", "url": "https://kubevela.io/docs/tutorials/consume-cloud-services/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela Roadmap (2022-03)\"?\n\nAssistant: This page outlines the roadmap for KubeVela from January 1, 2022, to March 31, 2022, detailing core platform improvements, user experience enhancements, third-party integrations, and best practices.\n\nHere's a detailed explanation:\n\n\n## Core Platform\n- Improve cloud resource provisioning and consuming workflow.\n  - Make the cloud resources provisioning workflow more reliable and observable.\n  - Make it more easier for developers to contribute more cloud resources.\n- Support more flexible application observability.\n  - Support collect and show log, metrics and tracing data with multi-cluster.\n  - Automatically generate observability dashboard for application with Grafana.\n  - Allow user to define customize observability rules including logs/metrics/tracing rules.\n- Enhance the security and provide secure CI/CD capability.\n- Enhance the capability of multi-cluster application delivery around security, scheduling and others.\n\n## User Experience\n- Let VelaUX share the data with CLI, and applications created in CLI can be visible in VelaUX, align the model according to users feedback.\n- Improve global software user experience including:\n  - Raise the success rate of installation about vela-core, addons, cloud resources, etc.\n  - Improve the UX of VelaUX, make it easy to learn and use.\n\n## Third-party integrations and more addons\n- Provide OpenYurt integration to improve IoT/edge experience.\n- Provide ArgoCD integration to improve GitOps experience, that'll be alternative to FluxCD addon.\n- Integrate with OPA/Kyverno/Cosign and other projects to provide a secure software supply chain.\n\n## Best practices\n- Provide one or more best practices about how to use KubeVela in micro-services scenario.\n- Provide more capabilities about AI/ML in KubeVela.\n", "metadata": {"source_url": "https://kubevela.io/docs/roadmap/2022-03-roadmap", "title": "KubeVela Roadmap (2022-03)", "description": "This page outlines the roadmap for KubeVela from January 1, 2022, to March 31, 2022, detailing core platform improvements, user experience enhancements, third-party integrations, and best practices.", "has_code_examples": false, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 15:22:35", "type": "overview", "page_metadata": {"twitter:card": "summary_large_image", "ogUrl": "https://kubevela.io/docs/roadmap/2022-03-roadmap/", "ogDescription": "Date: 2022-01-01 to 2022-03-31", "docusaurus_locale": "en", "generator": "Docusaurus v2.4.3", "og:title": "Roadmap 2022.03 | KubeVela", "og:description": "Date: 2022-01-01 to 2022-03-31", "ogTitle": "Roadmap 2022.03 | KubeVela", "msapplication-config": "/img/favicons/browserconfig.xml", "language": "en", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "theme-color": "#ffffff", "docusaurus_version": "v1.10", "title": "Roadmap 2022.03 | KubeVela", "docusaurus_tag": "docs-default-v1.10", "og:url": "https://kubevela.io/docs/roadmap/2022-03-roadmap/", "docsearch:language": "en", "description": "Date: 2022-01-01 to 2022-03-31", "docsearch:version": "v1.10", "docsearch:docusaurus_tag": "docs-default-v1.10", "viewport": "width=device-width, initial-scale=1.0", "scrapeId": "0ef87308-cf07-4760-b604-20e4a9a245e6", "sourceURL": "https://kubevela.io/docs/roadmap/2022-03-roadmap", "url": "https://kubevela.io/docs/roadmap/2022-03-roadmap/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela Roadmap (2022-03)\"?\n\nAssistant: Here are the recommended best practices:\n\n• Provide one or more best practices about how to use KubeVela in micro-services scenario.\n• Provide more capabilities about AI/ML in KubeVela.\n", "metadata": {"source_url": "https://kubevela.io/docs/roadmap/2022-03-roadmap", "title": "KubeVela Roadmap (2022-03)", "description": "This page outlines the roadmap for KubeVela from January 1, 2022, to March 31, 2022, detailing core platform improvements, user experience enhancements, third-party integrations, and best practices.", "has_code_examples": false, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 15:22:35", "type": "best_practices", "page_metadata": {"twitter:card": "summary_large_image", "ogUrl": "https://kubevela.io/docs/roadmap/2022-03-roadmap/", "ogDescription": "Date: 2022-01-01 to 2022-03-31", "docusaurus_locale": "en", "generator": "Docusaurus v2.4.3", "og:title": "Roadmap 2022.03 | KubeVela", "og:description": "Date: 2022-01-01 to 2022-03-31", "ogTitle": "Roadmap 2022.03 | KubeVela", "msapplication-config": "/img/favicons/browserconfig.xml", "language": "en", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "theme-color": "#ffffff", "docusaurus_version": "v1.10", "title": "Roadmap 2022.03 | KubeVela", "docusaurus_tag": "docs-default-v1.10", "og:url": "https://kubevela.io/docs/roadmap/2022-03-roadmap/", "docsearch:language": "en", "description": "Date: 2022-01-01 to 2022-03-31", "docsearch:version": "v1.10", "docsearch:docusaurus_tag": "docs-default-v1.10", "viewport": "width=device-width, initial-scale=1.0", "scrapeId": "0ef87308-cf07-4760-b604-20e4a9a245e6", "sourceURL": "https://kubevela.io/docs/roadmap/2022-03-roadmap", "url": "https://kubevela.io/docs/roadmap/2022-03-roadmap/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela Core Concept\"?\n\nAssistant: KubeVela revolves around cloud-native application delivery scenarios, utilizing the Open Application Model (OAM) for application deployment.\n\nHere's a detailed explanation:\n\n\n## An Abstraction to Model Application Deployment Process\nOAM allows end users to work with a simple artifact to capture the complete application deployment workflow with easier primitives. This provides a simpler path for on-boarding end users to the platform without leaking low level details in runtime infrastructure and allows users to fully focus on the application delivery itself.\n\nEvery application deployment plan can be composed by multiple components with attachable operational behaviors (traits), deployment policy and workflow. It works in the following format:\n\n```yaml\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: <name>\nspec:\n  components:\n    - name: <component name>\n      type: <component type>\n      properties:\n        <parameter values>\n      traits:\n        - type: <trait type>\n          properties:\n            <traits parameter values>\n    - name: <component name>\n      type: <component type>\n      properties:\n        <parameter values>\n  policies:\n  - name: <policy name>\n    type: <policy type>\n    properties:\n      <policy parameter values>\n  workflow:\n    - name: <step name>\n      type: <step type>\n      properties:\n        <step parameter values>\n```\n\nThis `Application` entity will reference `component`, `trait`, `policy` and `workflow step` types which are essentially programmable modules that are maintained by platform team. Hence, this abstraction is highly extensible and can be customized in-place at ease.\n\n- **Component**: A Component defines the delivery artifact (binary, Docker image, Helm Chart...) or cloud service included in one application. As we will regard an application as a microservice unit, the best practice is to control one application only has one core service for frequent development, other components within this application can be dependencies such as database, cache or other middleware/cloud services, the maximum number of components within an application should under ~15.\n\n- **Trait**: Traits are management requirements of an artifact that can be declared with each Component. For example: scale and rollout strategy, persistent storage claim, gateway endpoint and so on.\n\n- **Policy**: Policy defines a strategy of certain aspect for application as to multi-cluster topology, configuration overrides, security/firewall rules, SLO and etc. It's a bit similar with traits but take affects to the whole application instead of one component.\n\n- **Workflow Step**: Workflow step allows you to define every steps in the delivery process, typical steps are manual approval, partial deploy, notification.\n\n## Package for programmable capabilities\nA package of OAM Definitions and Kubernetes CRD Controller is called an `Addon`. KubeVela has a large and growing catalog of addons to support modern application delivery, such as terraform for cloud resource provisioning, OCM for multi-cluster management, fluxcd for gitops, and etc.\n\nWith these addons, KubeVela provides a unified and good experience for developers to deliver modern application in a multi-cloud/hybrid-cloud environment.\n\n## No Configuration Drift\nDespite the efficiency and extensibility in abstracting application deployment, programmable (Infrastructure-as-Code) approach may lead to an issue called _Infrastructure/Configuration Drift_, i.e. the rendered component instances are not in line with the expected configuration. This could be caused by incomplete coverage, less-than-perfect processes or emergency changes. This makes them can be barely used as a platform level building block.\n\nHence, KubeVela is designed to maintain all these programmable capabilities with Kubernetes Control Loop and leverage Kubernetes control plane to eliminate the issue of configuration drifting, while still keeps the flexibly and velocity enabled by IaC.\n\n## Next Step\n- Learn Definition concept to understand how the extension mechanism works.\n- View Architecture to learn the overall architecture of KubeVela.\n", "metadata": {"source_url": "https://kubevela.io/docs/getting-started/core-concept", "title": "KubeVela Core Concept", "description": "KubeVela revolves around cloud-native application delivery scenarios, utilizing the Open Application Model (OAM) for application deployment.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 15:23:52", "type": "overview", "page_metadata": {"generator": "Docusaurus v2.4.3", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:title": "Application | KubeVela", "language": "en", "og:description": "KubeVela revolves around cloud-native application delivery scenarios. The application delivery model behind it is Open Application Model, or OAM for short.", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogDescription": "KubeVela revolves around cloud-native application delivery scenarios. The application delivery model behind it is Open Application Model, or OAM for short.", "title": "Application | KubeVela", "docusaurus_version": "v1.10", "ogTitle": "Application | KubeVela", "ogUrl": "https://kubevela.io/docs/getting-started/core-concept/", "theme-color": "#ffffff", "docusaurus_tag": "docs-default-v1.10", "og:url": "https://kubevela.io/docs/getting-started/core-concept/", "msapplication-config": "/img/favicons/browserconfig.xml", "twitter:card": "summary_large_image", "docusaurus_locale": "en", "viewport": "width=device-width, initial-scale=1.0", "description": "KubeVela revolves around cloud-native application delivery scenarios. The application delivery model behind it is Open Application Model, or OAM for short.", "docsearch:language": "en", "docsearch:version": "v1.10", "scrapeId": "6edab05f-c934-4360-a6f9-7f2a7fee559f", "sourceURL": "https://kubevela.io/docs/getting-started/core-concept", "url": "https://kubevela.io/docs/getting-started/core-concept/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"KubeVela Core Concept\"?\n\nAssistant: Here are some code examples:\n\n### Application Deployment Example\n```yaml\n```yaml\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: <name>\nspec:\n  components:\n    - name: <component name>\n      type: <component type>\n      properties:\n        <parameter values>\n      traits:\n        - type: <trait type>\n          properties:\n            <traits parameter values>\n    - name: <component name>\n      type: <component type>\n      properties:\n        <parameter values>\n  policies:\n  - name: <policy name>\n    type: <policy type>\n    properties:\n      <policy parameter values>\n  workflow:\n    - name: <step name>\n      type: <step type>\n      properties:\n        <step parameter values>\n```\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/getting-started/core-concept", "title": "KubeVela Core Concept", "description": "KubeVela revolves around cloud-native application delivery scenarios, utilizing the Open Application Model (OAM) for application deployment.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 15:23:52", "type": "code_examples", "page_metadata": {"generator": "Docusaurus v2.4.3", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:title": "Application | KubeVela", "language": "en", "og:description": "KubeVela revolves around cloud-native application delivery scenarios. The application delivery model behind it is Open Application Model, or OAM for short.", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogDescription": "KubeVela revolves around cloud-native application delivery scenarios. The application delivery model behind it is Open Application Model, or OAM for short.", "title": "Application | KubeVela", "docusaurus_version": "v1.10", "ogTitle": "Application | KubeVela", "ogUrl": "https://kubevela.io/docs/getting-started/core-concept/", "theme-color": "#ffffff", "docusaurus_tag": "docs-default-v1.10", "og:url": "https://kubevela.io/docs/getting-started/core-concept/", "msapplication-config": "/img/favicons/browserconfig.xml", "twitter:card": "summary_large_image", "docusaurus_locale": "en", "viewport": "width=device-width, initial-scale=1.0", "description": "KubeVela revolves around cloud-native application delivery scenarios. The application delivery model behind it is Open Application Model, or OAM for short.", "docsearch:language": "en", "docsearch:version": "v1.10", "scrapeId": "6edab05f-c934-4360-a6f9-7f2a7fee559f", "sourceURL": "https://kubevela.io/docs/getting-started/core-concept", "url": "https://kubevela.io/docs/getting-started/core-concept/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela Core Concept\"?\n\nAssistant: Here are the recommended best practices:\n\n• Control one application only has one core service for frequent development.\n• The maximum number of components within an application should be under ~15.\n", "metadata": {"source_url": "https://kubevela.io/docs/getting-started/core-concept", "title": "KubeVela Core Concept", "description": "KubeVela revolves around cloud-native application delivery scenarios, utilizing the Open Application Model (OAM) for application deployment.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 15:23:52", "type": "best_practices", "page_metadata": {"generator": "Docusaurus v2.4.3", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:title": "Application | KubeVela", "language": "en", "og:description": "KubeVela revolves around cloud-native application delivery scenarios. The application delivery model behind it is Open Application Model, or OAM for short.", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogDescription": "KubeVela revolves around cloud-native application delivery scenarios. The application delivery model behind it is Open Application Model, or OAM for short.", "title": "Application | KubeVela", "docusaurus_version": "v1.10", "ogTitle": "Application | KubeVela", "ogUrl": "https://kubevela.io/docs/getting-started/core-concept/", "theme-color": "#ffffff", "docusaurus_tag": "docs-default-v1.10", "og:url": "https://kubevela.io/docs/getting-started/core-concept/", "msapplication-config": "/img/favicons/browserconfig.xml", "twitter:card": "summary_large_image", "docusaurus_locale": "en", "viewport": "width=device-width, initial-scale=1.0", "description": "KubeVela revolves around cloud-native application delivery scenarios. The application delivery model behind it is Open Application Model, or OAM for short.", "docsearch:language": "en", "docsearch:version": "v1.10", "scrapeId": "6edab05f-c934-4360-a6f9-7f2a7fee559f", "sourceURL": "https://kubevela.io/docs/getting-started/core-concept", "url": "https://kubevela.io/docs/getting-started/core-concept/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"Deploying Helm Chart with KubeVela\"?\n\nAssistant: This documentation provides a comprehensive guide on how to deploy Helm Charts using KubeVela, including prerequisites, enabling addons, and deploying applications.\n\nHere's a detailed explanation:\n\n\n## Before starting\n- Choose a Helm Chart you want to deploy. In the tutorial, we take [bitnami/redis](https://github.com/bitnami/charts/tree/master/bitnami/redis) as an example.\n- If you are using [bitnami/redis](https://github.com/bitnami/charts/tree/master/bitnami/redis), check if the chart version you specified is still listed [here](https://artifacthub.io/packages/helm/bitnami/redis) and available.\n- Ensure that the cluster you deliver has a usable default StorageClass. Most of our delivery middleware requires data persistence, and the default StorageClass is needed to allocate PV.\n- Make sure you have VelaUX addon enabled for UI console. If you are only CLI users, you can skip to [Deploy via CLI](https://kubevela.io/docs/v1.8/tutorials/helm/#deploy-via-cli)\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.8/tutorials/helm", "title": "Deploying Helm Chart with KubeVela", "description": "This documentation provides a comprehensive guide on how to deploy Helm Charts using KubeVela, including prerequisites, enabling addons, and deploying applications.", "has_code_examples": true, "has_best_practices": true, "section_count": 1, "timestamp": "2025-02-28 15:24:11", "type": "overview", "page_metadata": {"og:title": "Deploy Helm Chart | KubeVela", "theme-color": "#ffffff", "ogTitle": "Deploy Helm Chart | KubeVela", "docsearch:version": "v1.8", "docusaurus_locale": "en", "docsearch:docusaurus_tag": "docs-default-v1.8", "generator": "Docusaurus v2.4.3", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogUrl": "https://kubevela.io/docs/v1.8/tutorials/helm/", "ogDescription": "This section introduces how you deploy Helm Chart.", "docusaurus_tag": "docs-default-v1.8", "twitter:card": "summary_large_image", "og:description": "This section introduces how you deploy Helm Chart.", "title": "Deploy Helm Chart | KubeVela", "language": "en", "description": "This section introduces how you deploy Helm Chart.", "viewport": "width=device-width, initial-scale=1.0", "msapplication-config": "/img/favicons/browserconfig.xml", "docusaurus_version": "v1.8", "og:url": "https://kubevela.io/docs/v1.8/tutorials/helm/", "docsearch:language": "en", "scrapeId": "50779dfd-7a46-40bb-a38f-fec3efc3543b", "sourceURL": "https://kubevela.io/docs/v1.8/tutorials/helm", "url": "https://kubevela.io/docs/v1.8/tutorials/helm/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"Deploying Helm Chart with KubeVela\"?\n\nAssistant: Here are some code examples:\n\n### Enable VelaUX addon\n```yaml\nvela addon enable velaux\n```\n\n### Enable fluxcd addon\n```yaml\nvela addon enable fluxcd\n```\n\n### Show helm parameters\n```yaml\nvela show helm\n```\n\n### Deploy Redis application\n```yaml\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: helm-redis\nspec:\n  components:\n    - name: redis\n      type: helm\n      properties:\n        repoType: \"helm\"\n        url: \"https://charts.bitnami.com/bitnami\"\n        chart: \"redis\"\n        version: \"17.7.3\"\n        values:\n          master:\n            persistence:\n              size: 16Gi\n          replica:\n            persistence:\n              size: 16Gi\n```\n\n### Deploy command\n```yaml\nvela up -f https://kubevela.io/example/applications/app-with-chart-redis.yaml\n```\n\n### Expected output of vela status\n```yaml\nAbout:\n\n  Name:         helm-redis\n  Namespace:    default\n  Created at:   2022-04-21 17:19:12 +0800 CST\n  Status:       running\n\nWorkflow:\n\n  mode: DAG\n  finished: true\n  Suspend: false\n  Terminated: false\n  Steps\n  - id:n1gxswwina\n    name:redis\n    type:apply-component\n    phase:succeeded\n    message:\n\nServices:\n\n  - Name: redis\n    Cluster: local  Namespace: default\n    Type: helm\n    Healthy Fetch repository successfully, Create helm release successfully\n    No trait applied\n```\n\n### Modify deployment parameters\n```yaml\nvalues:\n    replica:\n       persistence:\n          size: 15Gi\n```\n\n### Specify different value file\n```yaml\ncat <<EOF | vela up -f -\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: hello-kubernetes\nspec:\n  components:\n    - name: hello-kubernetes\n      type: helm\n      properties:\n        repoType: \"helm\"\n        url: \"https://wangyikewxgm.github.io/my-charts/\"\n        chart: \"hello-kubernetes-chart\"\n        version: \"0.1.0\"\n        valuesFiles:\n          - \"values-production.yaml\"\n  EOF\n```\n\n### OCI registry example\n```yaml\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: oci-app\n  namespace: default\nspec:\n  components:\n    - name: test-helm\n      type: helm\n      properties:\n        repoType: \"oci\"\n        url: oci://ghcr.io/stefanprodan/charts\n        chart: podinfo\n        version: '6.1.*'\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.8/tutorials/helm", "title": "Deploying Helm Chart with KubeVela", "description": "This documentation provides a comprehensive guide on how to deploy Helm Charts using KubeVela, including prerequisites, enabling addons, and deploying applications.", "has_code_examples": true, "has_best_practices": true, "section_count": 1, "timestamp": "2025-02-28 15:24:11", "type": "code_examples", "page_metadata": {"og:title": "Deploy Helm Chart | KubeVela", "theme-color": "#ffffff", "ogTitle": "Deploy Helm Chart | KubeVela", "docsearch:version": "v1.8", "docusaurus_locale": "en", "docsearch:docusaurus_tag": "docs-default-v1.8", "generator": "Docusaurus v2.4.3", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogUrl": "https://kubevela.io/docs/v1.8/tutorials/helm/", "ogDescription": "This section introduces how you deploy Helm Chart.", "docusaurus_tag": "docs-default-v1.8", "twitter:card": "summary_large_image", "og:description": "This section introduces how you deploy Helm Chart.", "title": "Deploy Helm Chart | KubeVela", "language": "en", "description": "This section introduces how you deploy Helm Chart.", "viewport": "width=device-width, initial-scale=1.0", "msapplication-config": "/img/favicons/browserconfig.xml", "docusaurus_version": "v1.8", "og:url": "https://kubevela.io/docs/v1.8/tutorials/helm/", "docsearch:language": "en", "scrapeId": "50779dfd-7a46-40bb-a38f-fec3efc3543b", "sourceURL": "https://kubevela.io/docs/v1.8/tutorials/helm", "url": "https://kubevela.io/docs/v1.8/tutorials/helm/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"Deploying Helm Chart with KubeVela\"?\n\nAssistant: Here are the recommended best practices:\n\n• Ensure the cluster has a usable default StorageClass for data persistence.\n• Enable VelaUX addon for UI console access.\n• Check the availability of the Helm Chart version before deployment.\n• Use the correct values file to customize deployment parameters.\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.8/tutorials/helm", "title": "Deploying Helm Chart with KubeVela", "description": "This documentation provides a comprehensive guide on how to deploy Helm Charts using KubeVela, including prerequisites, enabling addons, and deploying applications.", "has_code_examples": true, "has_best_practices": true, "section_count": 1, "timestamp": "2025-02-28 15:24:11", "type": "best_practices", "page_metadata": {"og:title": "Deploy Helm Chart | KubeVela", "theme-color": "#ffffff", "ogTitle": "Deploy Helm Chart | KubeVela", "docsearch:version": "v1.8", "docusaurus_locale": "en", "docsearch:docusaurus_tag": "docs-default-v1.8", "generator": "Docusaurus v2.4.3", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogUrl": "https://kubevela.io/docs/v1.8/tutorials/helm/", "ogDescription": "This section introduces how you deploy Helm Chart.", "docusaurus_tag": "docs-default-v1.8", "twitter:card": "summary_large_image", "og:description": "This section introduces how you deploy Helm Chart.", "title": "Deploy Helm Chart | KubeVela", "language": "en", "description": "This section introduces how you deploy Helm Chart.", "viewport": "width=device-width, initial-scale=1.0", "msapplication-config": "/img/favicons/browserconfig.xml", "docusaurus_version": "v1.8", "og:url": "https://kubevela.io/docs/v1.8/tutorials/helm/", "docsearch:language": "en", "scrapeId": "50779dfd-7a46-40bb-a38f-fec3efc3543b", "sourceURL": "https://kubevela.io/docs/v1.8/tutorials/helm", "url": "https://kubevela.io/docs/v1.8/tutorials/helm/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"User Improvement Plan\"?\n\nAssistant: Welcome to join the 'User Improvement Plan' to improve the KubeVela open source product by collecting system and usage information.\n\nHere's a detailed explanation:\n\n\n## Introduction\nKubeVela v1.10.0 is now available.(2025-02-06) [Read Release Note](https://github.com/kubevela/kubevela/releases/tag/v1.10.0)\n", "metadata": {"source_url": "https://kubevela.io/docs/reference/user-improvement-plan", "title": "User Improvement Plan", "description": "Welcome to join the 'User Improvement Plan' to improve the KubeVela open source product by collecting system and usage information.", "has_code_examples": false, "has_best_practices": true, "section_count": 1, "timestamp": "2025-02-28 15:24:16", "type": "overview", "page_metadata": {"viewport": "width=device-width, initial-scale=1.0", "ogUrl": "https://kubevela.io/docs/reference/user-improvement-plan/", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docsearch:language": "en", "docusaurus_tag": "docs-default-v1.10", "docsearch:docusaurus_tag": "docs-default-v1.10", "docsearch:version": "v1.10", "og:url": "https://kubevela.io/docs/reference/user-improvement-plan/", "theme-color": "#ffffff", "language": "en", "description": "Welcome to join the \"User Improvement Plan\"! To improve the KubeVela open source product, avoid bugs and improve the product quality, we need to collect some of your system and usage information.", "ogDescription": "Welcome to join the \"User Improvement Plan\"! To improve the KubeVela open source product, avoid bugs and improve the product quality, we need to collect some of your system and usage information.", "ogTitle": "User Improvement Plan | KubeVela", "generator": "Docusaurus v2.4.3", "twitter:card": "summary_large_image", "docusaurus_version": "v1.10", "docusaurus_locale": "en", "og:title": "User Improvement Plan | KubeVela", "title": "User Improvement Plan | KubeVela", "og:description": "Welcome to join the \"User Improvement Plan\"! To improve the KubeVela open source product, avoid bugs and improve the product quality, we need to collect some of your system and usage information.", "msapplication-config": "/img/favicons/browserconfig.xml", "scrapeId": "b82b6f6a-6f2f-423f-aacb-d5f21261564a", "sourceURL": "https://kubevela.io/docs/reference/user-improvement-plan", "url": "https://kubevela.io/docs/reference/user-improvement-plan/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"User Improvement Plan\"?\n\nAssistant: Here are the recommended best practices:\n\n• If you don't want to join this plan, just turn off the button in the 'platform setting'. This won't block you to use any features about the product.\n", "metadata": {"source_url": "https://kubevela.io/docs/reference/user-improvement-plan", "title": "User Improvement Plan", "description": "Welcome to join the 'User Improvement Plan' to improve the KubeVela open source product by collecting system and usage information.", "has_code_examples": false, "has_best_practices": true, "section_count": 1, "timestamp": "2025-02-28 15:24:16", "type": "best_practices", "page_metadata": {"viewport": "width=device-width, initial-scale=1.0", "ogUrl": "https://kubevela.io/docs/reference/user-improvement-plan/", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docsearch:language": "en", "docusaurus_tag": "docs-default-v1.10", "docsearch:docusaurus_tag": "docs-default-v1.10", "docsearch:version": "v1.10", "og:url": "https://kubevela.io/docs/reference/user-improvement-plan/", "theme-color": "#ffffff", "language": "en", "description": "Welcome to join the \"User Improvement Plan\"! To improve the KubeVela open source product, avoid bugs and improve the product quality, we need to collect some of your system and usage information.", "ogDescription": "Welcome to join the \"User Improvement Plan\"! To improve the KubeVela open source product, avoid bugs and improve the product quality, we need to collect some of your system and usage information.", "ogTitle": "User Improvement Plan | KubeVela", "generator": "Docusaurus v2.4.3", "twitter:card": "summary_large_image", "docusaurus_version": "v1.10", "docusaurus_locale": "en", "og:title": "User Improvement Plan | KubeVela", "title": "User Improvement Plan | KubeVela", "og:description": "Welcome to join the \"User Improvement Plan\"! To improve the KubeVela open source product, avoid bugs and improve the product quality, we need to collect some of your system and usage information.", "msapplication-config": "/img/favicons/browserconfig.xml", "scrapeId": "b82b6f6a-6f2f-423f-aacb-d5f21261564a", "sourceURL": "https://kubevela.io/docs/reference/user-improvement-plan", "url": "https://kubevela.io/docs/reference/user-improvement-plan/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela Workflow Operations\"?\n\nAssistant: This page introduces how to use the `vela` CLI to operate workflow.\n\nHere's a detailed explanation:\n\n\n## Suspend Workflow\nIf you have an executing workflow, you can use the `suspend` command to suspend the workflow.\n\n## Resume Workflow\nOnce the workflow is suspended, you can use the `vela workflow resume` command to manually resume the workflow.\n\n## Terminate Workflow\nYou can use `vela workflow terminate` to terminate an executing workflow.\n\n## Restart Workflow\nYou can use `vela workflow restart` to restart an executing workflow.\n\n## Check the logs of the workflow\nYou can use `vela workflow logs` to check the logs of the workflow.\n\n## Debug Workflow\nYou can use `vela workflow debug` to debug the workflow.\n", "metadata": {"source_url": "https://kubevela.io/docs/end-user/workflow/operations", "title": "KubeVela Workflow Operations", "description": "This page introduces how to use the `vela` CLI to operate workflow.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-02-28 15:24:23", "type": "overview", "page_metadata": {"favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogTitle": "Workflow Operations | KubeVela", "description": "This section introduces how to use the vela CLI to operate workflow.", "og:title": "Workflow Operations | KubeVela", "docsearch:docusaurus_tag": "docs-default-v1.10", "theme-color": "#ffffff", "ogUrl": "https://kubevela.io/docs/end-user/workflow/operations/", "twitter:card": "summary_large_image", "og:description": "This section introduces how to use the vela CLI to operate workflow.", "docsearch:language": "en", "generator": "Docusaurus v2.4.3", "docsearch:version": "v1.10", "ogDescription": "This section introduces how to use the vela CLI to operate workflow.", "msapplication-config": "/img/favicons/browserconfig.xml", "og:url": "https://kubevela.io/docs/end-user/workflow/operations/", "language": "en", "docusaurus_tag": "docs-default-v1.10", "viewport": "width=device-width, initial-scale=1.0", "docusaurus_locale": "en", "docusaurus_version": "v1.10", "title": "Workflow Operations | KubeVela", "scrapeId": "dc6a6575-d943-4e66-ae84-795bced81065", "sourceURL": "https://kubevela.io/docs/end-user/workflow/operations", "url": "https://kubevela.io/docs/end-user/workflow/operations/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"KubeVela Workflow Operations\"?\n\nAssistant: Here are some code examples:\n\n### Suspend Workflow Command\n```yaml\nvela workflow suspend <name>\n```\n\n### Resume Workflow Command\n```yaml\nvela workflow resume <name>\n```\n\n### Terminate Workflow Command\n```yaml\nvela workflow terminate <name>\n```\n\n### Restart Workflow Command\n```yaml\nvela workflow restart my-app\n```\n\n### Check Workflow Logs Command\n```yaml\nvela workflow logs <name>\n```\n\n### Debug Workflow Command\n```yaml\nvela workflow debug <name>\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/end-user/workflow/operations", "title": "KubeVela Workflow Operations", "description": "This page introduces how to use the `vela` CLI to operate workflow.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-02-28 15:24:23", "type": "code_examples", "page_metadata": {"favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogTitle": "Workflow Operations | KubeVela", "description": "This section introduces how to use the vela CLI to operate workflow.", "og:title": "Workflow Operations | KubeVela", "docsearch:docusaurus_tag": "docs-default-v1.10", "theme-color": "#ffffff", "ogUrl": "https://kubevela.io/docs/end-user/workflow/operations/", "twitter:card": "summary_large_image", "og:description": "This section introduces how to use the vela CLI to operate workflow.", "docsearch:language": "en", "generator": "Docusaurus v2.4.3", "docsearch:version": "v1.10", "ogDescription": "This section introduces how to use the vela CLI to operate workflow.", "msapplication-config": "/img/favicons/browserconfig.xml", "og:url": "https://kubevela.io/docs/end-user/workflow/operations/", "language": "en", "docusaurus_tag": "docs-default-v1.10", "viewport": "width=device-width, initial-scale=1.0", "docusaurus_locale": "en", "docusaurus_version": "v1.10", "title": "Workflow Operations | KubeVela", "scrapeId": "dc6a6575-d943-4e66-ae84-795bced81065", "sourceURL": "https://kubevela.io/docs/end-user/workflow/operations", "url": "https://kubevela.io/docs/end-user/workflow/operations/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela Workflow Operations\"?\n\nAssistant: Here are the recommended best practices:\n\n• Nothing will happen if you suspend an application that has a completed workflow, which is in `running` status.\n• Different from suspend, the terminated workflow can't be resumed, you can only restart the workflow. This means restart the workflow will execute the workflow steps from scratch while resume workflow only continue the unfinished steps.\n• Once application workflow is terminated, KubeVela controller won't reconcile the application resources. It can also be used in some cases when you want to manually operate the underlying resources, please caution the configuration drift.\n• Note that only the steps with [op.#Log](https://kubevela.io/docs/platform-engineers/workflow/cue-actions/#log) in its definition will output logs.\n", "metadata": {"source_url": "https://kubevela.io/docs/end-user/workflow/operations", "title": "KubeVela Workflow Operations", "description": "This page introduces how to use the `vela` CLI to operate workflow.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-02-28 15:24:23", "type": "best_practices", "page_metadata": {"favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogTitle": "Workflow Operations | KubeVela", "description": "This section introduces how to use the vela CLI to operate workflow.", "og:title": "Workflow Operations | KubeVela", "docsearch:docusaurus_tag": "docs-default-v1.10", "theme-color": "#ffffff", "ogUrl": "https://kubevela.io/docs/end-user/workflow/operations/", "twitter:card": "summary_large_image", "og:description": "This section introduces how to use the vela CLI to operate workflow.", "docsearch:language": "en", "generator": "Docusaurus v2.4.3", "docsearch:version": "v1.10", "ogDescription": "This section introduces how to use the vela CLI to operate workflow.", "msapplication-config": "/img/favicons/browserconfig.xml", "og:url": "https://kubevela.io/docs/end-user/workflow/operations/", "language": "en", "docusaurus_tag": "docs-default-v1.10", "viewport": "width=device-width, initial-scale=1.0", "docusaurus_locale": "en", "docusaurus_version": "v1.10", "title": "Workflow Operations | KubeVela", "scrapeId": "dc6a6575-d943-4e66-ae84-795bced81065", "sourceURL": "https://kubevela.io/docs/end-user/workflow/operations", "url": "https://kubevela.io/docs/end-user/workflow/operations/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela Workflow Timeout\"?\n\nAssistant: This section introduces how to add timeout to workflow steps in KubeVela.\n\nHere's a detailed explanation:\n\n\n## Introduction\nKubeVela v1.10.0 is now available.(2025-02-06) You need to upgrade to version 1.5+ to use the timeout feature.\n\n## Adding Timeout to Workflow Steps\nIn KubeVela workflow, each step can specify a `timeout`, you can use `timeout` to specify the timeout time for the step. `timeout` follows the `duration` format, e.g. `30s`, `1m`, etc. You can refer to Golang's parseDuration. If a step is not completed within the specified time, KubeVela will set the status of the step to `failed` and the `Reason` of the step will be set to `Timeout`.\n\n## Example\nApply the following example:\n\n## Checking Application Status\nUse `vela status` to check the status of the Application.\n\n## Workflow Behavior\nAs you can see, when the first component is successfully deployed, the workflow is suspended on the second `suspend` step. The `suspend` step is set with a timeout of five seconds. If the workflow is not resumed within five seconds, the step will fail because of timeout. The third step is skipped because the previous `suspend` step failed.\n", "metadata": {"source_url": "https://kubevela.io/docs/end-user/workflow/timeout", "title": "KubeVela Workflow Timeout", "description": "This section introduces how to add timeout to workflow steps in KubeVela.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:24:45", "type": "overview", "page_metadata": {"docsearch:version": "v1.10", "description": "You need to upgrade to version 1.5+ to use the timeout feature.", "ogTitle": "Timeout of Step | KubeVela", "docsearch:docusaurus_tag": "docs-default-v1.10", "language": "en", "generator": "Docusaurus v2.4.3", "docusaurus_locale": "en", "og:description": "You need to upgrade to version 1.5+ to use the timeout feature.", "ogUrl": "https://kubevela.io/docs/end-user/workflow/timeout/", "docsearch:language": "en", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "twitter:card": "summary_large_image", "theme-color": "#ffffff", "msapplication-config": "/img/favicons/browserconfig.xml", "ogDescription": "You need to upgrade to version 1.5+ to use the timeout feature.", "viewport": "width=device-width, initial-scale=1.0", "docusaurus_version": "v1.10", "og:title": "Timeout of Step | KubeVela", "docusaurus_tag": "docs-default-v1.10", "title": "Timeout of Step | KubeVela", "og:url": "https://kubevela.io/docs/end-user/workflow/timeout/", "scrapeId": "a88f4cb5-2f75-4647-bf09-75f7b1ec5dd8", "sourceURL": "https://kubevela.io/docs/end-user/workflow/timeout", "url": "https://kubevela.io/docs/end-user/workflow/timeout/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"KubeVela Workflow Timeout\"?\n\nAssistant: Here are some code examples:\n\n### KubeVela Application Example with Timeout\n```yaml\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: timeout-example\n  namespace: default\nspec:\n  components:\n  - name: comp1\n    type: webservice\n    properties:\n      image: crccheck/hello-world\n      port: 8000\n  - name: comp2\n    type: webservice\n    properties:\n      image: crccheck/hello-world\n      port: 8000\n  workflow:\n    steps:\n    - name: apply-comp1\n      type: apply-component\n      properties:\n        component: comp1\n    - name: suspend\n      type: suspend\n      timeout: 5s\n    - name: apply-comp2\n      type: apply-component\n      properties:\n        component: comp2\n\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/end-user/workflow/timeout", "title": "KubeVela Workflow Timeout", "description": "This section introduces how to add timeout to workflow steps in KubeVela.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:24:45", "type": "code_examples", "page_metadata": {"docsearch:version": "v1.10", "description": "You need to upgrade to version 1.5+ to use the timeout feature.", "ogTitle": "Timeout of Step | KubeVela", "docsearch:docusaurus_tag": "docs-default-v1.10", "language": "en", "generator": "Docusaurus v2.4.3", "docusaurus_locale": "en", "og:description": "You need to upgrade to version 1.5+ to use the timeout feature.", "ogUrl": "https://kubevela.io/docs/end-user/workflow/timeout/", "docsearch:language": "en", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "twitter:card": "summary_large_image", "theme-color": "#ffffff", "msapplication-config": "/img/favicons/browserconfig.xml", "ogDescription": "You need to upgrade to version 1.5+ to use the timeout feature.", "viewport": "width=device-width, initial-scale=1.0", "docusaurus_version": "v1.10", "og:title": "Timeout of Step | KubeVela", "docusaurus_tag": "docs-default-v1.10", "title": "Timeout of Step | KubeVela", "og:url": "https://kubevela.io/docs/end-user/workflow/timeout/", "scrapeId": "a88f4cb5-2f75-4647-bf09-75f7b1ec5dd8", "sourceURL": "https://kubevela.io/docs/end-user/workflow/timeout", "url": "https://kubevela.io/docs/end-user/workflow/timeout/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela Workflow Timeout\"?\n\nAssistant: Here are the recommended best practices:\n\n• Upgrade to version 1.5+ to use the timeout feature.\n• Use the `timeout` parameter in workflow steps to specify the duration for which the step should wait before failing.\n", "metadata": {"source_url": "https://kubevela.io/docs/end-user/workflow/timeout", "title": "KubeVela Workflow Timeout", "description": "This section introduces how to add timeout to workflow steps in KubeVela.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:24:45", "type": "best_practices", "page_metadata": {"docsearch:version": "v1.10", "description": "You need to upgrade to version 1.5+ to use the timeout feature.", "ogTitle": "Timeout of Step | KubeVela", "docsearch:docusaurus_tag": "docs-default-v1.10", "language": "en", "generator": "Docusaurus v2.4.3", "docusaurus_locale": "en", "og:description": "You need to upgrade to version 1.5+ to use the timeout feature.", "ogUrl": "https://kubevela.io/docs/end-user/workflow/timeout/", "docsearch:language": "en", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "twitter:card": "summary_large_image", "theme-color": "#ffffff", "msapplication-config": "/img/favicons/browserconfig.xml", "ogDescription": "You need to upgrade to version 1.5+ to use the timeout feature.", "viewport": "width=device-width, initial-scale=1.0", "docusaurus_version": "v1.10", "og:title": "Timeout of Step | KubeVela", "docusaurus_tag": "docs-default-v1.10", "title": "Timeout of Step | KubeVela", "og:url": "https://kubevela.io/docs/end-user/workflow/timeout/", "scrapeId": "a88f4cb5-2f75-4647-bf09-75f7b1ec5dd8", "sourceURL": "https://kubevela.io/docs/end-user/workflow/timeout", "url": "https://kubevela.io/docs/end-user/workflow/timeout/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela Addon Documentation\"?\n\nAssistant: This addon allows you to read the KubeVela documentation in your cluster, suitable for air-gapped environments.\n\nHere's a detailed explanation:\n\n\n## Install\nTo install the KubeVela addon, run the following command:\n\n```bash\nvela addon enable kubevela-io\n```\n\n## Uninstall\nTo uninstall the KubeVela addon, run the following command:\n\n```bash\nvela addon disable kubevela-io\n```\n\n## More Notes\n- **About the image to deploy**: The image in this addon is `oam-dev/kubevela-io:latest` by default. You can pull the image from Docker Hub or compile the source code, build it into an image, and then push it to your own local hub.\n- **About the way to access the local kubevela-io website**: You can use the NodePort service deployed in the `vela-system` namespace named `kubevela-io-np`, or you may use ingress as you wish.\n", "metadata": {"source_url": "https://kubevela.io/docs/reference/addons/kubevela-io", "title": "KubeVela Addon Documentation", "description": "This addon allows you to read the KubeVela documentation in your cluster, suitable for air-gapped environments.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 15:24:57", "type": "overview", "page_metadata": {"docusaurus_locale": "en", "theme-color": "#ffffff", "docsearch:docusaurus_tag": "docs-default-v1.10", "docsearch:language": "en", "msapplication-config": "/img/favicons/browserconfig.xml", "ogDescription": "This addon is the document website, align with https//kubevela.net/ .", "ogUrl": "https://kubevela.io/docs/reference/addons/kubevela-io/", "docsearch:version": "v1.10", "description": "This addon is the document website, align with https//kubevela.net/ .", "title": "KubeVela.io | KubeVela", "og:url": "https://kubevela.io/docs/reference/addons/kubevela-io/", "generator": "Docusaurus v2.4.3", "ogTitle": "KubeVela.io | KubeVela", "og:description": "This addon is the document website, align with https//kubevela.net/ .", "og:title": "KubeVela.io | KubeVela", "docusaurus_tag": "docs-default-v1.10", "viewport": "width=device-width, initial-scale=1.0", "language": "en", "docusaurus_version": "v1.10", "twitter:card": "summary_large_image", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "scrapeId": "6b5baffd-dacc-4d0b-8b7d-410fc9a1e873", "sourceURL": "https://kubevela.io/docs/reference/addons/kubevela-io", "url": "https://kubevela.io/docs/reference/addons/kubevela-io/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"KubeVela Addon Documentation\"?\n\nAssistant: Here are some code examples:\n\n### Install Command\n```yaml\nvela addon enable kubevela-io\n```\n\n### Uninstall Command\n```yaml\nvela addon disable kubevela-io\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/reference/addons/kubevela-io", "title": "KubeVela Addon Documentation", "description": "This addon allows you to read the KubeVela documentation in your cluster, suitable for air-gapped environments.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 15:24:57", "type": "code_examples", "page_metadata": {"docusaurus_locale": "en", "theme-color": "#ffffff", "docsearch:docusaurus_tag": "docs-default-v1.10", "docsearch:language": "en", "msapplication-config": "/img/favicons/browserconfig.xml", "ogDescription": "This addon is the document website, align with https//kubevela.net/ .", "ogUrl": "https://kubevela.io/docs/reference/addons/kubevela-io/", "docsearch:version": "v1.10", "description": "This addon is the document website, align with https//kubevela.net/ .", "title": "KubeVela.io | KubeVela", "og:url": "https://kubevela.io/docs/reference/addons/kubevela-io/", "generator": "Docusaurus v2.4.3", "ogTitle": "KubeVela.io | KubeVela", "og:description": "This addon is the document website, align with https//kubevela.net/ .", "og:title": "KubeVela.io | KubeVela", "docusaurus_tag": "docs-default-v1.10", "viewport": "width=device-width, initial-scale=1.0", "language": "en", "docusaurus_version": "v1.10", "twitter:card": "summary_large_image", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "scrapeId": "6b5baffd-dacc-4d0b-8b7d-410fc9a1e873", "sourceURL": "https://kubevela.io/docs/reference/addons/kubevela-io", "url": "https://kubevela.io/docs/reference/addons/kubevela-io/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela Addon Documentation\"?\n\nAssistant: Here are the recommended best practices:\n\n• You can pull the image from Docker Hub or compile the source code and build it to an image, then push your own local hub.\n• You can use the NodePort service deployed in the vela-system namespace named kubevela-io-np to access the local kubevela-io website.\n", "metadata": {"source_url": "https://kubevela.io/docs/reference/addons/kubevela-io", "title": "KubeVela Addon Documentation", "description": "This addon allows you to read the KubeVela documentation in your cluster, suitable for air-gapped environments.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 15:24:57", "type": "best_practices", "page_metadata": {"docusaurus_locale": "en", "theme-color": "#ffffff", "docsearch:docusaurus_tag": "docs-default-v1.10", "docsearch:language": "en", "msapplication-config": "/img/favicons/browserconfig.xml", "ogDescription": "This addon is the document website, align with https//kubevela.net/ .", "ogUrl": "https://kubevela.io/docs/reference/addons/kubevela-io/", "docsearch:version": "v1.10", "description": "This addon is the document website, align with https//kubevela.net/ .", "title": "KubeVela.io | KubeVela", "og:url": "https://kubevela.io/docs/reference/addons/kubevela-io/", "generator": "Docusaurus v2.4.3", "ogTitle": "KubeVela.io | KubeVela", "og:description": "This addon is the document website, align with https//kubevela.net/ .", "og:title": "KubeVela.io | KubeVela", "docusaurus_tag": "docs-default-v1.10", "viewport": "width=device-width, initial-scale=1.0", "language": "en", "docusaurus_version": "v1.10", "twitter:card": "summary_large_image", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "scrapeId": "6b5baffd-dacc-4d0b-8b7d-410fc9a1e873", "sourceURL": "https://kubevela.io/docs/reference/addons/kubevela-io", "url": "https://kubevela.io/docs/reference/addons/kubevela-io/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"Custom Image Delivery\"?\n\nAssistant: This guide helps you simplify the webservice component type and create a new component type to deploy a WAR package in KubeVela.\n\nHere's a detailed explanation:\n\n\n## Simplify the `webservice` type\nThe default webservice component type has more than 10 properties. Maybe your developer only needs to configure the image path and resource limits. For the other properties, the team could set the default values. If so, you could change the webservice definition.\n\n1. Change the UI schema to hide some fields\n\n> This way is only suitable for UI users.\n\n![image](https://static.kubevela.net/images/1.5/custom-ui-schema.jpg)\n\nOn the definition detail page, users could customize the UI schema to set the UI forms. For example, if you want to hide the ExposeType field, only need to set the disable is `true`.\n\n```yaml\n...\n- jsonKey: exposeType\n  uiType: Select\n  label: ExposeType\n  disable: true\n...\n```\n\nMore references: [UI Schema](https://kubevela.io/docs/reference/ui-schema/)\n\n2. Change the definition and remove or add some fields\n\nIf you want to completely remove or add some fields, you should edit the component definition.\n\n> This guide should learn the CUE language.\n\n```bash\nvela def get webservice > custom-webservice.cue\n```\n\nRefer to the [CUE Basic](https://kubevela.io/docs/platform-engineers/cue/basic/) and [Component Definition](https://kubevela.io/docs/platform-engineers/components/custom-component/) documents to learn how to custom the custom-webservice.cue.\n\nAfter edit:\n\n```bash\nvela def apply custom-webservice.cue\n```\n\n## Create a new component type to deploy the war package\nIf your team uses the war package to deploy the Java application. In KubeVela you could create a new component type to deploy the War package.\n\n```yaml\n\"java-war\": {\n    alias: \"\"\n    annotations: {}\n    attributes: {\n        workload: {\n            definition: {\n                apiVersion: \"apps/v1\"\n                kind:       \"Deployment\"\n            }\n            type: \"deployments.apps\"\n        }\n        status: {\n            customStatus: #\"\"\"\n                ready: {\n                    readyReplicas: *0 | int\n                } & {\n                    if context.output.status.readyReplicas != _|_ {\n                        readyReplicas: context.output.status.readyReplicas\n                    }\n                }\n                message: \"Ready:\\(ready.readyReplicas)/\\(context.output.spec.replicas)\"\n                \"\"\"\n            healthPolicy: #\"\"\"\n                ready: {\n                    updatedReplicas:    *0 | int\n                    readyReplicas:      *0 | int\n                    replicas:           *0 | int\n                    observedGeneration: *0 | int\n                } & {\n                    if context.output.status.updatedReplicas != _|_ {\n                        updatedReplicas: context.output.status.updatedReplicas\n                    }\n                    if context.output.status.readyReplicas != _|_ {\n                        readyReplicas: context.output.status.readyReplicas\n                    }\n                    if context.output.status.replicas != _|_ {\n                        replicas: context.output.status.replicas\n                    }\n                    if context.output.status.observedGeneration != _|_ {\n                        observedGeneration: context.output.status.observedGeneration\n                    }\n                }\n                isHealth: (context.output.spec.replicas == ready.readyReplicas) && (context.output.spec.replicas == ready.updatedReplicas) && (context.output.spec.replicas == ready.replicas) && (ready.observedGeneration == context.output.metadata.generation || ready.observedGeneration > context.output.metadata.generation)\n                \"\"\"\n        }\n    }\n    description: \"\"\n    labels: {}\n    type: \"component\"\n}\n\ntemplate: {\n    output: {\n        apiVersion: \"apps/v1\"\n        kind:       \"Deployment\"\n        metadata: {\n            name:      context.name\n            namespace: context.namespace\n        }\n        spec: {\n            replicas: parameter.replicas\n            selector: {\n                matchLabels: {\n                    \"app.oam.dev/component\": context.name\n                }\n            }\n            template: {\n                metadata: {\n                    labels: {\n                        \"app.oam.dev/name\":      context.appName\n                        \"app.oam.dev/component\": context.name\n                        \"app.oam.dev/revision\":  context.revision\n                    }\n                }\n                spec: {\n                    initContainers: [{\n                        name:  \"prepare-war\"\n                        image: \"busybox\"\n                        if parameter[\"deployToRoot\"] != _|_ {\n                            if parameter[\"deployToRoot\"] {\n                                command: [\"wget\", \"-O\", \"/usr/local/tomcat/webapps/ROOT.war\", parameter[\"warURL\"]]\n                            }\n                        }\n                        if parameter[\"deployToRoot\"] == _|_ {\n                            command: [\"wget\", \"-P\", \"/usr/local/tomcat/webapps/\", parameter[\"warURL\"]]\n                        }\n                        volumeMounts: [{\n                            name:      \"webapps\"\n                            mountPath: \"/usr/local/tomcat/webapps\"\n                        }]\n                    }]\n                    containers: [{\n                        name:  context.name\n                        image: \"tomcat:\" + parameter[\"envVersion\"]\n                        if parameter[\"cpu\"] != _|_ {\n                            resources: {\n                                limits: cpu:   parameter.cpu\n                                requests: cpu: parameter.cpu\n                            }\n                        }\n                        if parameter[\"memory\"] != _|_ {\n                            resources: {\n                                limits: memory:   parameter.memory\n                                requests: memory: parameter.memory\n                            }\n                        }\n                        ports: [{\n                            containerPort: 8080\n                            name:          \"webapp\"\n                        }]\n                        _envs: {\n                            custom: *parameter[\"env\"] | []\n                            inner: [\n                                if parameter[\"javaOpts\"] != _|_ {\n                                    {\n                                        name:  \"JAVA_OPTS\"\n                                        value: parameter.javaOpts\n                                    }\n                                },\n                            ]\n                        }\n                        env: _envs.custom + _envs.inner\n                        volumeMounts: [{\n                            name:      \"webapps\"\n                            mountPath: \"/usr/local/tomcat/webapps\"\n                        }]\n                    }]\n                    volumes: [{\n                        name: \"webapps\"\n                        emptyDir: {}\n                    }]\n                }\n            }\n        }\n    }\n\n    outputs: {\n        services: {\n            kind:       \"Service\"\n            apiVersion: \"v1\"\n            metadata: {\n                name:      context.name\n                namespace: context.namespace\n            }\n            spec: {\n                selector: \"app.oam.dev/component\": context.name\n                ports: [{\n                    port: 8080\n                }]\n                type: \"ClusterIP\"\n            }\n        }\n    }\n\n    parameter: {\n        // +usage=The URL of the war package.\n        warURL: string\n        // +usage=Select a environment version([tomcat version]-[jdk version])\n        envVersion: *\"8-jdk8\" | \"9-jdk8\" | \"10-jdk8\" | \"8-jdk11\" | \"9-jdk11\" | \"10-jdk11\" | \"8-jdk17\" | \"9-jdk17\" | \"10-jdk17\"\n        // +usage=Specifies the number of replicas.\n        replicas: *1 | int\n        // +usage=Define arguments by using environment variables\n        env?: [...{\n            name:   string\n            value?: string\n        }]\n        // +usage=Setting the Java Opts configuration.\n        javaOpts?: string\n        // +usage=Number of CPU units for the service, like `0.5` (0.5 CPU core), `1` (1 CPU core)\n        cpu?: string\n        // +usage=Specifies the attributes of the memory resource required for the container.\n        memory?:       =~\"^([1-9][0-9]{0,63})(E|P|T|G|M|K|Ei|Pi|Ti|Gi|Mi|Ki)$\"\n        deployToRoot?: bool\n    }\n}\n\nCopy the definition and create a file java-war.cue, then:\n\n```bash\nvela def apply java-war.cue\n```\n\nNow, other developers could create the application with a war URL, for example:\n\n```yaml\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: nanoservice\n  namespace: e2e-test\nspec:\n  components:\n  - name: catalog\n    properties:\n      envVersion: 8-jdk8\n      replicas: 1\n      warURL: https://static.kubevela.net/example/java-example/nanoservice/catalog.war\n    type: java-war\n  - name: customer\n    properties:\n      envVersion: 8-jdk8\n      replicas: 1\n      warURL: https://static.kubevela.net/example/java-example/nanoservice/customer.war\n    type: java-war\n  - dependsOn:\n    - catalog\n    - customer\n    name: order\n    properties:\n      env:\n      - name: CATALOG_HOST\n        value: catalog\n      - name: CUSTOMER_HOST\n        value: customer\n      envVersion: 8-jdk8\n      javaOpts: -Xms512m -Xmx512m -Xss256K\n      replicas: 1\n      warURL: https://static.kubevela.net/example/java-example/nanoservice/order.war\n    traits:\n    - properties:\n        domains:\n        - nanoservice.beijing.kubevela.net\n        rules:\n        - path:\n            type: PathPrefix\n            value: /order\n          port: 8080\n      type: http-route\n    type: java-war\n  policies:\n  - name: e2e-test\n    properties:\n      clusters:\n      - local\n      namespace: e2e-test\n    type: topology\n  workflow:\n    steps:\n    - name: deploy2-e2e-test\n      properties:\n        policies:\n        - e2e-test\n      type: deploy\n```\n\n![java-app](https://static.kubevela.net/images/1.5/java-war.jpg)\n\nThis example includes three components, and the order service depends on the catalog and the customer services. The developer only needs to care about the war package URL and the tomcat/JRE version, they are familiar to the Java developer. The developer should upload the war package to a repository, such as Jfrog. Get a download URL to assign to the warURL field.\n\nIn the same way, you could create a component type to deploy the Jar package and other binary packages.\n", "metadata": {"source_url": "https://kubevela.io/docs/tutorials/custom-image-delivery", "title": "Custom Image Delivery", "description": "This guide helps you simplify the webservice component type and create a new component type to deploy a WAR package in KubeVela.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-02-28 15:25:34", "type": "overview", "page_metadata": {"generator": "Docusaurus v2.4.3", "docusaurus_tag": "docs-default-v1.10", "docsearch:version": "v1.10", "og:description": "If the default webservice component type is not suitable for your team, and you want to get a more simple way to deploy your business application. This guide will help you. Before, you must have the platform manager's permission.", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogTitle": "Custom Container Delivery | KubeVela", "twitter:card": "summary_large_image", "docsearch:language": "en", "theme-color": "#ffffff", "ogDescription": "If the default webservice component type is not suitable for your team, and you want to get a more simple way to deploy your business application. This guide will help you. Before, you must have the platform manager's permission.", "viewport": "width=device-width, initial-scale=1.0", "og:url": "https://kubevela.io/docs/tutorials/custom-image-delivery/", "language": "en", "msapplication-config": "/img/favicons/browserconfig.xml", "title": "Custom Container Delivery | KubeVela", "docsearch:docusaurus_tag": "docs-default-v1.10", "docusaurus_locale": "en", "docusaurus_version": "v1.10", "ogUrl": "https://kubevela.io/docs/tutorials/custom-image-delivery/", "og:title": "Custom Container Delivery | KubeVela", "description": "If the default webservice component type is not suitable for your team, and you want to get a more simple way to deploy your business application. This guide will help you. Before, you must have the platform manager's permission.", "scrapeId": "fca9e501-9f63-4543-b269-c8fd92ab4e26", "sourceURL": "https://kubevela.io/docs/tutorials/custom-image-delivery", "url": "https://kubevela.io/docs/tutorials/custom-image-delivery/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"Custom Image Delivery\"?\n\nAssistant: Here are some code examples:\n\n### Change the UI schema to hide some fields\n```yaml\n...\n- jsonKey: exposeType\n  uiType: Select\n  label: ExposeType\n  disable: true\n...\n```\n\n### Get webservice definition\n```yaml\nvela def get webservice > custom-webservice.cue\n```\n\n### Apply custom webservice definition\n```yaml\nvela def apply custom-webservice.cue\n```\n\n### Create java-war component type\n```yaml\n\"java-war\": {\n    alias: \"\"\n    annotations: {}\n    attributes: {\n        workload: {\n            definition: {\n                apiVersion: \"apps/v1\"\n                kind:       \"Deployment\"\n            }\n            type: \"deployments.apps\"\n        }\n        status: {\n            customStatus: #\"\"\"\n                ready: {\n                    readyReplicas: *0 | int\n                } & {\n                    if context.output.status.readyReplicas != _|_ {\n                        readyReplicas: context.output.status.readyReplicas\n                    }\n                }\n                message: \"Ready:\\(ready.readyReplicas)/\\(context.output.spec.replicas)\"\n                \"\"\"\n            healthPolicy: #\"\"\"\n                ready: {\n                    updatedReplicas:    *0 | int\n                    readyReplicas:      *0 | int\n                    replicas:           *0 | int\n                    observedGeneration: *0 | int\n                } & {\n                    if context.output.status.updatedReplicas != _|_ {\n                        updatedReplicas: context.output.status.updatedReplicas\n                    }\n                    if context.output.status.readyReplicas != _|_ {\n                        readyReplicas: context.output.status.readyReplicas\n                    }\n                    if context.output.status.replicas != _|_ {\n                        replicas: context.output.status.replicas\n                    }\n                    if context.output.status.observedGeneration != _|_ {\n                        observedGeneration: context.output.status.observedGeneration\n                    }\n                }\n                isHealth: (context.output.spec.replicas == ready.readyReplicas) && (context.output.spec.replicas == ready.updatedReplicas) && (context.output.spec.replicas == ready.replicas) && (ready.observedGeneration == context.output.metadata.generation || ready.observedGeneration > context.output.metadata.generation)\n                \"\"\"\n        }\n    }\n    description: \"\"\n    labels: {}\n    type: \"component\"\n}\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/tutorials/custom-image-delivery", "title": "Custom Image Delivery", "description": "This guide helps you simplify the webservice component type and create a new component type to deploy a WAR package in KubeVela.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-02-28 15:25:34", "type": "code_examples", "page_metadata": {"generator": "Docusaurus v2.4.3", "docusaurus_tag": "docs-default-v1.10", "docsearch:version": "v1.10", "og:description": "If the default webservice component type is not suitable for your team, and you want to get a more simple way to deploy your business application. This guide will help you. Before, you must have the platform manager's permission.", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogTitle": "Custom Container Delivery | KubeVela", "twitter:card": "summary_large_image", "docsearch:language": "en", "theme-color": "#ffffff", "ogDescription": "If the default webservice component type is not suitable for your team, and you want to get a more simple way to deploy your business application. This guide will help you. Before, you must have the platform manager's permission.", "viewport": "width=device-width, initial-scale=1.0", "og:url": "https://kubevela.io/docs/tutorials/custom-image-delivery/", "language": "en", "msapplication-config": "/img/favicons/browserconfig.xml", "title": "Custom Container Delivery | KubeVela", "docsearch:docusaurus_tag": "docs-default-v1.10", "docusaurus_locale": "en", "docusaurus_version": "v1.10", "ogUrl": "https://kubevela.io/docs/tutorials/custom-image-delivery/", "og:title": "Custom Container Delivery | KubeVela", "description": "If the default webservice component type is not suitable for your team, and you want to get a more simple way to deploy your business application. This guide will help you. Before, you must have the platform manager's permission.", "scrapeId": "fca9e501-9f63-4543-b269-c8fd92ab4e26", "sourceURL": "https://kubevela.io/docs/tutorials/custom-image-delivery", "url": "https://kubevela.io/docs/tutorials/custom-image-delivery/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"Custom Image Delivery\"?\n\nAssistant: Here are the recommended best practices:\n\n• This way is only suitable for UI users when changing the UI schema to hide some fields.\n• Developers should upload the war package to a repository, such as Jfrog, and get a download URL to assign to the warURL field.\n", "metadata": {"source_url": "https://kubevela.io/docs/tutorials/custom-image-delivery", "title": "Custom Image Delivery", "description": "This guide helps you simplify the webservice component type and create a new component type to deploy a WAR package in KubeVela.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-02-28 15:25:34", "type": "best_practices", "page_metadata": {"generator": "Docusaurus v2.4.3", "docusaurus_tag": "docs-default-v1.10", "docsearch:version": "v1.10", "og:description": "If the default webservice component type is not suitable for your team, and you want to get a more simple way to deploy your business application. This guide will help you. Before, you must have the platform manager's permission.", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogTitle": "Custom Container Delivery | KubeVela", "twitter:card": "summary_large_image", "docsearch:language": "en", "theme-color": "#ffffff", "ogDescription": "If the default webservice component type is not suitable for your team, and you want to get a more simple way to deploy your business application. This guide will help you. Before, you must have the platform manager's permission.", "viewport": "width=device-width, initial-scale=1.0", "og:url": "https://kubevela.io/docs/tutorials/custom-image-delivery/", "language": "en", "msapplication-config": "/img/favicons/browserconfig.xml", "title": "Custom Container Delivery | KubeVela", "docsearch:docusaurus_tag": "docs-default-v1.10", "docusaurus_locale": "en", "docusaurus_version": "v1.10", "ogUrl": "https://kubevela.io/docs/tutorials/custom-image-delivery/", "og:title": "Custom Container Delivery | KubeVela", "description": "If the default webservice component type is not suitable for your team, and you want to get a more simple way to deploy your business application. This guide will help you. Before, you must have the platform manager's permission.", "scrapeId": "fca9e501-9f63-4543-b269-c8fd92ab4e26", "sourceURL": "https://kubevela.io/docs/tutorials/custom-image-delivery", "url": "https://kubevela.io/docs/tutorials/custom-image-delivery/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela Component References\"?\n\nAssistant: This documentation will walk through all the built-in component types sorted alphabetically.\n\nHere's a detailed explanation:\n\n\n## Cron-Task\nDescribes cron jobs that run code or a script to completion.\n\n### Examples (cron-task)\n```codeBlockLines_e6Vv\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: cron-worker\nspec:\n  components:\n    - name: mytask\n      type: cron-task\n      properties:\n        image: perl\n        count: 10\n        cmd: [\"perl\",  \"-Mbignum=bpi\", \"-wle\", \"print bpi(2000)\"]\n        schedule: \"*/1 * * * *\"\n```\n\n### Specification (cron-task)\n| Name | Description | Type | Required | Default |\n| --- | --- | --- | --- | --- |\n| labels | Specify the labels in the workload. | map[string]string | false |  |\n| annotations | Specify the annotations in the workload. | map[string]string | false |  |\n| schedule | Specify the schedule in Cron format, see [https://en.wikipedia.org/wiki/Cron](https://en.wikipedia.org/wiki/Cron). | string | true |  |\n| startingDeadlineSeconds | Specify deadline in seconds for starting the job if it misses scheduled. | int | false |  |\n| suspend | Suspend subsequent executions. | bool | false | false |\n| concurrencyPolicy | Specifies how to treat concurrent executions of a Job. | \"Allow\" or \"Forbid\" or \"Replace\" | false | Allow |\n| successfulJobsHistoryLimit | The number of successful finished jobs to retain. | int | false | 3 |\n| failedJobsHistoryLimit | The number of failed finished jobs to retain. | int | false | 1 |\n| count | Specify number of tasks to run in parallel. | int | false | 1 |\n| image | Which image would you like to use for your service. | string | true |  |\n| imagePullPolicy | Specify image pull policy for your service. | \"Always\" or \"Never\" or \"IfNotPresent\" | false |  |\n| imagePullSecrets | Specify image pull secrets for your service. | []string | false |  |\n| restart | Define the job restart policy, the value can only be Never or OnFailure. By default, it's Never. | string | false | Never |\n| cmd | Commands to run in the container. | []string | false |  |\n| env | Define arguments by using environment variables. | [[]env](https://kubevela.io/docs/end-user/components/references/#env-cron-task) | false |  |\n| cpu | Number of CPU units for the service, like `0.5` (0.5 CPU core), `1` (1 CPU core). | string | false |  |\n| memory | Specifies the attributes of the memory resource required for the container. | string | false |  |\n| volumes | Declare volumes and volumeMounts. | [[]volumes](https://kubevela.io/docs/end-user/components/references/#volumes-cron-task) | false |  |\n| hostAliases | An optional list of hosts and IPs that will be injected into the pod's hosts file. | [[]hostAliases](https://kubevela.io/docs/end-user/components/references/#hostaliases-cron-task) | false |  |\n| ttlSecondsAfterFinished | Limits the lifetime of a Job that has finished. | int | false |  |\n| activeDeadlineSeconds | The duration in seconds relative to the startTime that the job may be continuously active before the system tries to terminate it. | int | false |  |\n| backoffLimit | The number of retries before marking this job failed. | int | false | 6 |\n| livenessProbe | Instructions for assessing whether the container is alive. | [livenessProbe](https://kubevela.io/docs/end-user/components/references/#livenessprobe-cron-task) | false |  |\n| readinessProbe | Instructions for assessing whether the container is in a suitable state to serve traffic. | [readinessProbe](https://kubevela.io/docs/end-user/components/references/#readinessprobe-cron-task) | false |  |\n\n## Daemon\nDescribes daemonset services in Kubernetes.\n\n### Underlying Kubernetes Resources (daemon)\n- daemonsets.apps\n\n### Examples (daemon)\n```codeBlockLines_e6Vv\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: addon-node-exporter\n  namespace: vela-system\nspec:\n  components:\n  - name: node-exporter\n    type: daemon\n    properties:\n      image: prom/node-exporter\n      imagePullPolicy: IfNotPresent\n      volumeMounts:\n        hostPath:\n        - mountPath: /host/sys\n          mountPropagation: HostToContainer\n          name: sys\n          path: /sys\n          readOnly: true\n        - mountPath: /host/root\n          mountPropagation: HostToContainer\n          name: root\n          path: /\n          readOnly: true\n    traits:\n    - properties:\n        args:\n        - --path.sysfs=/host/sys\n        - --path.rootfs=/host/root\n        - --no-collector.wifi\n        - --no-collector.hwmon\n        - --collector.filesystem.ignored-mount-points=^/(dev|proc|sys|var/lib/docker/.+|var/lib/kubelet/pods/.+)($|/)\n        - --collector.netclass.ignored-devices=^(veth.*)$\n      type: command\n    - properties:\n        annotations:\n          prometheus.io/path: /metrics\n          prometheus.io/port: \"8080\"\n          prometheus.io/scrape: \"true\"\n        port:\n        - 9100\n      type: expose\n    - properties:\n        cpu: 0.1\n        memory: 250Mi\n      type: resource\n```\n\n### Specification (daemon)\n| Name | Description | Type | Required | Default |\n| --- | --- | --- | --- | --- |\n| labels | Specify the labels in the workload. | map[string]string | false |  |\n| annotations | Specify the annotations in the workload. | map[string]string | false |  |\n| image | Which image would you like to use for your service. | string | true |  |\n| imagePullPolicy | Specify image pull policy for your service. | \"Always\" or \"Never\" or \"IfNotPresent\" | false |  |\n| imagePullSecrets | Specify image pull secrets for your service. | []string | false |  |\n| ports | Which ports do you want customer traffic sent to, defaults to 80. | [[]ports](https://kubevela.io/docs/end-user/components/references/#ports-daemon) | false |  |\n| cmd | Commands to run in the container. | []string | false |  |\n| env | Define arguments by using environment variables. | [[]env](https://kubevela.io/docs/end-user/components/references/#env-daemon) | false |  |\n| cpu | Number of CPU units for the service, like `0.5` (0.5 CPU core), `1` (1 CPU core). | string | false |  |\n| memory | Specifies the attributes of the memory resource required for the container. | string | false |  |\n| volumeMounts |  | [volumeMounts](https://kubevela.io/docs/end-user/components/references/#volumemounts-daemon) | false |  |\n| volumes | Deprecated field, use volumeMounts instead. | [[]volumes](https://kubevela.io/docs/end-user/components/references/#volumes-daemon) | false |  |\n| livenessProbe | Instructions for assessing whether the container is alive. | [livenessProbe](https://kubevela.io/docs/end-user/components/references/#livenessprobe-daemon) | false |  |\n| readinessProbe | Instructions for assessing whether the container is in a suitable state to serve traffic. | [readinessProbe](https://kubevela.io/docs/end-user/components/references/#readinessprobe-daemon) | false |  |\n| hostAliases | Specify the hostAliases to add. | [[]hostAliases](https://kubevela.io/docs/end-user/components/references/#hostaliases-daemon) | false |  |\n\n## K8s-Objects\nK8s-objects allow users to specify raw K8s objects in properties.\n\n### Examples (k8s-objects)\n```codeBlockLines_e6Vv\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: app-raw\nspec:\n  components:\n    - name: myjob\n      type: k8s-objects\n      properties:\n        objects:\n        - apiVersion: batch/v1\n          kind: Job\n          metadata:\n            name: pi\n          spec:\n            template:\n              spec:\n                containers:\n                - name: pi\n                  image: perl\n                  command: [\"perl\",  \"-Mbignum=bpi\", \"-wle\", \"print bpi(2000)\"]\n                restartPolicy: Never\n            backoffLimit: 4\n```\n\n### Specification (k8s-objects)\n| NAME | DESCRIPTION | TYPE | REQUIRED | DEFAULT |\n| --- | --- | --- | --- | --- |\n| objects | A slice of Kubernetes resource manifests | [][]Kubernetes-Objects]( [https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/](https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/)) | true |  |\n\n## Task\nDescribes jobs that run code or a script to completion.\n\n### Underlying Kubernetes Resources (task)\n- jobs.batch\n\n### Examples (task)\n```codeBlockLines_e6Vv\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: app-worker\nspec:\n  components:\n    - name: mytask\n      type: task\n      properties:\n        image: perl\n        count: 10\n        cmd: [\"perl\",  \"-Mbignum=bpi\", \"-wle\", \"print bpi(2000)\"]\n```\n\n### Specification (task)\n| Name | Description | Type | Required | Default |\n| --- | --- | --- | --- | --- |\n| labels | Specify the labels in the workload. | map[string]string | false |  |\n| annotations | Specify the annotations in the workload. | map[string]string | false |  |\n| count | Specify number of tasks to run in parallel. | int | false | 1 |\n| image | Which image would you like to use for your service. | string | true |  |\n| imagePullPolicy | Specify image pull policy for your service. | \"Always\" or \"Never\" or \"IfNotPresent\" | false |  |\n| imagePullSecrets | Specify image pull secrets for your service. | []string | false |  |\n| restart | Define the job restart policy, the value can only be Never or OnFailure. By default, it's Never. | string | false | Never |\n| cmd | Commands to run in the container. | []string | false |  |\n| env | Define arguments by using environment variables. | [[]env](https://kubevela.io/docs/end-user/components/references/#env-task) | false |  |\n| cpu | Number of CPU units for the service, like `0.5` (0.5 CPU core), `1` (1 CPU core). | string | false |  |\n| memory | Specifies the attributes of the memory resource required for the container. | string | false |  |\n| volumes | Declare volumes and volumeMounts. | [[]volumes](https://kubevela.io/docs/end-user/components/references/#volumes-task) | false |  |\n| livenessProbe | Instructions for assessing whether the container is alive. | [livenessProbe](https://kubevela.io/docs/end-user/components/references/#livenessprobe-task) | false |  |\n| readinessProbe | Instructions for assessing whether the container is in a suitable state to serve traffic. | [readinessProbe](https://kubevela.io/docs/end-user/components/references/#readinessprobe-task) | false |  |\n\n## Webservice\nDescribes long-running, scalable, containerized services that have a stable network endpoint to receive external network traffic from customers.\n\n### Underlying Kubernetes Resources (webservice)\n- deployments.apps\n\n### Examples (webservice)\n```codeBlockLines_e6Vv\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: website\nspec:\n  components:\n    - name: frontend\n      type: webservice\n      properties:\n        image: oamdev/testapp:v1\n        cmd: [\"node\", \"server.js\"]\n        ports:\n          - port: 8080\n            expose: true\n        cpu: \"0.1\"\n        env:\n          - name: FOO\n            value: bar\n          - name: FOO\n            valueFrom:\n              secretKeyRef:\n                name: bar\n                key: bar\n```\n\n### Specification (webservice)\n| Name | Description | Type | Required | Default |\n| --- | --- | --- | --- | --- |\n| labels | Specify the labels in the workload. | map[string]string | false |  |\n| annotations | Specify the annotations in the workload. | map[string]string | false |  |\n| image | Which image would you like to use for your service. | string | true |  |\n| imagePullPolicy | Specify image pull policy for your service. | \"Always\" or \"Never\" or \"IfNotPresent\" | false |  |\n| imagePullSecrets | Specify image pull secrets for your service. | []string | false |  |\n| ports | Which ports do you want customer traffic sent to, defaults to 80. | [[]ports](https://kubevela.io/docs/end-user/components/references/#ports-webservice) | false |  |\n| cmd | Commands to run in the container. | []string | false |  |\n| args | Arguments to the entrypoint. | []string | false |  |\n| env | Define arguments by using environment variables. | [[]env](https://kubevela.io/docs/end-user/components/references/#env-webservice) | false |  |\n| cpu | Number of CPU units for the service, like `0.5` (0.5 CPU core), `1` (1 CPU core). | string | false |  |\n| memory | Specifies the attributes of the memory resource required for the container. | string | false |  |\n| volumeMounts |  | [volumeMounts](https://kubevela.io/docs/end-user/components/references/#volumemounts-webservice) | false |  |\n| volumes | Deprecated field, use volumeMounts instead. | [[]volumes](https://kubevela.io/docs/end-user/components/references/#volumes-webservice) | false |  |\n| livenessProbe | Instructions for assessing whether the container is alive. | [livenessProbe](https://kubevela.io/docs/end-user/components/references/#livenessprobe-webservice) | false |  |\n| readinessProbe | Instructions for assessing whether the container is in a suitable state to serve traffic. | [readinessProbe](https://kubevela.io/docs/end-user/components/references/#readinessprobe-webservice) | false |  |\n| hostAliases | Specify the hostAliases to add. | [[]hostAliases](https://kubevela.io/docs/end-user/components/references/#hostaliases-webservice) | false |  |\n", "metadata": {"source_url": "https://kubevela.io/docs/end-user/components/references", "title": "KubeVela Component References", "description": "This documentation will walk through all the built-in component types sorted alphabetically.", "has_code_examples": true, "has_best_practices": false, "section_count": 5, "timestamp": "2025-02-28 15:27:37", "type": "overview", "page_metadata": {"ogDescription": "This documentation will walk through all the built-in component types sorted alphabetically.", "description": "This documentation will walk through all the built-in component types sorted alphabetically.", "viewport": "width=device-width, initial-scale=1.0", "docsearch:docusaurus_tag": "docs-default-v1.10", "ogUrl": "https://kubevela.io/docs/end-user/components/references/", "og:title": "Built-in Component Type | KubeVela", "docsearch:version": "v1.10", "generator": "Docusaurus v2.4.3", "og:url": "https://kubevela.io/docs/end-user/components/references/", "theme-color": "#ffffff", "msapplication-config": "/img/favicons/browserconfig.xml", "twitter:card": "summary_large_image", "title": "Built-in Component Type | KubeVela", "language": "en", "docusaurus_version": "v1.10", "og:description": "This documentation will walk through all the built-in component types sorted alphabetically.", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_locale": "en", "docusaurus_tag": "docs-default-v1.10", "ogTitle": "Built-in Component Type | KubeVela", "docsearch:language": "en", "scrapeId": "1b8a1e4d-ea14-4aae-b0f4-751d8a048092", "sourceURL": "https://kubevela.io/docs/end-user/components/references", "url": "https://kubevela.io/docs/end-user/components/references/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"KubeVela Component References\"?\n\nAssistant: Here are some code examples:\n\n### Cron-Task Example\n```yaml\n```codeBlockLines_e6Vv\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: cron-worker\nspec:\n  components:\n    - name: mytask\n      type: cron-task\n      properties:\n        image: perl\n        count: 10\n        cmd: [\"perl\",  \"-Mbignum=bpi\", \"-wle\", \"print bpi(2000)\"]\n        schedule: \"*/1 * * * *\"\n```\n```\n\n### Daemon Example\n```yaml\n```codeBlockLines_e6Vv\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: addon-node-exporter\n  namespace: vela-system\nspec:\n  components:\n  - name: node-exporter\n    type: daemon\n    properties:\n      image: prom/node-exporter\n      imagePullPolicy: IfNotPresent\n      volumeMounts:\n        hostPath:\n        - mountPath: /host/sys\n          mountPropagation: HostToContainer\n          name: sys\n          path: /sys\n          readOnly: true\n        - mountPath: /host/root\n          mountPropagation: HostToContainer\n          name: root\n          path: /\n          readOnly: true\n    traits:\n    - properties:\n        args:\n        - --path.sysfs=/host/sys\n        - --path.rootfs=/host/root\n        - --no-collector.wifi\n        - --no-collector.hwmon\n        - --collector.filesystem.ignored-mount-points=^/(dev|proc|sys|var/lib/docker/.+|var/lib/kubelet/pods/.+)($|/)\n        - --collector.netclass.ignored-devices=^(veth.*)$\n      type: command\n    - properties:\n        annotations:\n          prometheus.io/path: /metrics\n          prometheus.io/port: \"8080\"\n          prometheus.io/scrape: \"true\"\n        port:\n        - 9100\n      type: expose\n    - properties:\n        cpu: 0.1\n        memory: 250Mi\n      type: resource\n```\n```\n\n### K8s-Objects Example\n```yaml\n```codeBlockLines_e6Vv\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: app-raw\nspec:\n  components:\n    - name: myjob\n      type: k8s-objects\n      properties:\n        objects:\n        - apiVersion: batch/v1\n          kind: Job\n          metadata:\n            name: pi\n          spec:\n            template:\n              spec:\n                containers:\n                - name: pi\n                  image: perl\n                  command: [\"perl\",  \"-Mbignum=bpi\", \"-wle\", \"print bpi(2000)\"]\n                restartPolicy: Never\n            backoffLimit: 4\n```\n```\n\n### Task Example\n```yaml\n```codeBlockLines_e6Vv\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: app-worker\nspec:\n  components:\n    - name: mytask\n      type: task\n      properties:\n        image: perl\n        count: 10\n        cmd: [\"perl\",  \"-Mbignum=bpi\", \"-wle\", \"print bpi(2000)\"]\n```\n```\n\n### Webservice Example\n```yaml\n```codeBlockLines_e6Vv\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: website\nspec:\n  components:\n    - name: frontend\n      type: webservice\n      properties:\n        image: oamdev/testapp:v1\n        cmd: [\"node\", \"server.js\"]\n        ports:\n          - port: 8080\n            expose: true\n        cpu: \"0.1\"\n        env:\n          - name: FOO\n            value: bar\n          - name: FOO\n            valueFrom:\n              secretKeyRef:\n                name: bar\n                key: bar\n```\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/end-user/components/references", "title": "KubeVela Component References", "description": "This documentation will walk through all the built-in component types sorted alphabetically.", "has_code_examples": true, "has_best_practices": false, "section_count": 5, "timestamp": "2025-02-28 15:27:37", "type": "code_examples", "page_metadata": {"ogDescription": "This documentation will walk through all the built-in component types sorted alphabetically.", "description": "This documentation will walk through all the built-in component types sorted alphabetically.", "viewport": "width=device-width, initial-scale=1.0", "docsearch:docusaurus_tag": "docs-default-v1.10", "ogUrl": "https://kubevela.io/docs/end-user/components/references/", "og:title": "Built-in Component Type | KubeVela", "docsearch:version": "v1.10", "generator": "Docusaurus v2.4.3", "og:url": "https://kubevela.io/docs/end-user/components/references/", "theme-color": "#ffffff", "msapplication-config": "/img/favicons/browserconfig.xml", "twitter:card": "summary_large_image", "title": "Built-in Component Type | KubeVela", "language": "en", "docusaurus_version": "v1.10", "og:description": "This documentation will walk through all the built-in component types sorted alphabetically.", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_locale": "en", "docusaurus_tag": "docs-default-v1.10", "ogTitle": "Built-in Component Type | KubeVela", "docsearch:language": "en", "scrapeId": "1b8a1e4d-ea14-4aae-b0f4-751d8a048092", "sourceURL": "https://kubevela.io/docs/end-user/components/references", "url": "https://kubevela.io/docs/end-user/components/references/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela Uninstall Command\"?\n\nAssistant: Uninstalls KubeVela from a Kubernetes cluster.\n\nHere's a detailed explanation:\n\n\n## Synopsis\nUninstalls KubeVela from a Kubernetes cluster.\n\n## Examples\n```bash\nvela uninstall\n```\n\n## Options\n```bash\n  -d, --detail             show detail log of installation (default true)\n  -f, --force              force uninstall whole vela include all addons\n  -h, --help               help for uninstall\n  -n, --namespace string   namespace scope for installing KubeVela Core (default \"vela-system\")\n```\n\n## Options inherited from parent commands\n```bash\n  -y, --yes   Assume yes for all user prompts\n```\n\n## SEE ALSO\nGo Back to [CLI Commands](https://kubevela.io/docs/v1.8/cli/vela/) Homepage.\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.8/cli/vela_uninstall", "title": "KubeVela Uninstall Command", "description": "Uninstalls KubeVela from a Kubernetes cluster.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:27:46", "type": "overview", "page_metadata": {"docusaurus_locale": "en", "docsearch:docusaurus_tag": "docs-default-v1.8", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docsearch:language": "en", "msapplication-config": "/img/favicons/browserconfig.xml", "generator": "Docusaurus v2.4.3", "ogUrl": "https://kubevela.io/docs/v1.8/cli/vela_uninstall/", "twitter:card": "summary_large_image", "og:title": "vela uninstall | KubeVela", "ogTitle": "vela uninstall | KubeVela", "description": "Uninstalls KubeVela from a Kubernetes cluster", "ogDescription": "Uninstalls KubeVela from a Kubernetes cluster", "theme-color": "#ffffff", "docsearch:version": "v1.8", "language": "en", "title": "vela uninstall | KubeVela", "docusaurus_version": "v1.8", "docusaurus_tag": "docs-default-v1.8", "og:url": "https://kubevela.io/docs/v1.8/cli/vela_uninstall/", "og:description": "Uninstalls KubeVela from a Kubernetes cluster", "viewport": "width=device-width, initial-scale=1.0", "scrapeId": "acf37369-517b-40d2-944e-384ce7e65a9e", "sourceURL": "https://kubevela.io/docs/v1.8/cli/vela_uninstall", "url": "https://kubevela.io/docs/v1.8/cli/vela_uninstall/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"KubeVela Uninstall Command\"?\n\nAssistant: Here are some code examples:\n\n### Uninstall Command Example\n```yaml\nvela uninstall\n```\n\n### Options Example\n```yaml\n  -d, --detail             show detail log of installation (default true)\n  -f, --force              force uninstall whole vela include all addons\n  -h, --help               help for uninstall\n  -n, --namespace string   namespace scope for installing KubeVela Core (default \"vela-system\")\n```\n\n### Inherited Options Example\n```yaml\n  -y, --yes   Assume yes for all user prompts\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.8/cli/vela_uninstall", "title": "KubeVela Uninstall Command", "description": "Uninstalls KubeVela from a Kubernetes cluster.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:27:46", "type": "code_examples", "page_metadata": {"docusaurus_locale": "en", "docsearch:docusaurus_tag": "docs-default-v1.8", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docsearch:language": "en", "msapplication-config": "/img/favicons/browserconfig.xml", "generator": "Docusaurus v2.4.3", "ogUrl": "https://kubevela.io/docs/v1.8/cli/vela_uninstall/", "twitter:card": "summary_large_image", "og:title": "vela uninstall | KubeVela", "ogTitle": "vela uninstall | KubeVela", "description": "Uninstalls KubeVela from a Kubernetes cluster", "ogDescription": "Uninstalls KubeVela from a Kubernetes cluster", "theme-color": "#ffffff", "docsearch:version": "v1.8", "language": "en", "title": "vela uninstall | KubeVela", "docusaurus_version": "v1.8", "docusaurus_tag": "docs-default-v1.8", "og:url": "https://kubevela.io/docs/v1.8/cli/vela_uninstall/", "og:description": "Uninstalls KubeVela from a Kubernetes cluster", "viewport": "width=device-width, initial-scale=1.0", "scrapeId": "acf37369-517b-40d2-944e-384ce7e65a9e", "sourceURL": "https://kubevela.io/docs/v1.8/cli/vela_uninstall", "url": "https://kubevela.io/docs/v1.8/cli/vela_uninstall/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela Uninstall Command\"?\n\nAssistant: Here are the recommended best practices:\n\n• For detailed logs during uninstallation, use the -d or --detail flag.\n• To forcefully uninstall KubeVela and all its addons, use the -f or --force flag.\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.8/cli/vela_uninstall", "title": "KubeVela Uninstall Command", "description": "Uninstalls KubeVela from a Kubernetes cluster.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:27:46", "type": "best_practices", "page_metadata": {"docusaurus_locale": "en", "docsearch:docusaurus_tag": "docs-default-v1.8", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docsearch:language": "en", "msapplication-config": "/img/favicons/browserconfig.xml", "generator": "Docusaurus v2.4.3", "ogUrl": "https://kubevela.io/docs/v1.8/cli/vela_uninstall/", "twitter:card": "summary_large_image", "og:title": "vela uninstall | KubeVela", "ogTitle": "vela uninstall | KubeVela", "description": "Uninstalls KubeVela from a Kubernetes cluster", "ogDescription": "Uninstalls KubeVela from a Kubernetes cluster", "theme-color": "#ffffff", "docsearch:version": "v1.8", "language": "en", "title": "vela uninstall | KubeVela", "docusaurus_version": "v1.8", "docusaurus_tag": "docs-default-v1.8", "og:url": "https://kubevela.io/docs/v1.8/cli/vela_uninstall/", "og:description": "Uninstalls KubeVela from a Kubernetes cluster", "viewport": "width=device-width, initial-scale=1.0", "scrapeId": "acf37369-517b-40d2-944e-384ce7e65a9e", "sourceURL": "https://kubevela.io/docs/v1.8/cli/vela_uninstall", "url": "https://kubevela.io/docs/v1.8/cli/vela_uninstall/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"vela def show\"?\n\nAssistant: Show the reference doc for a component, trait, policy or workflow.\n\nHere's a detailed explanation:\n\n\n## Synopsis\nShow the reference doc for component, trait, policy or workflow types. 'vela show' equals with 'vela def show'.\n\n## Examples\n0. Run 'vela show' directly to start a web server for all reference docs.\n1. Generate documentation for ComponentDefinition webservice:\n> vela show webservice -n vela-system\n2. Generate documentation for local CUE Definition file webservice.cue:\n> vela show webservice.cue\n3. Generate documentation for local Cloud Resource Definition YAML alibaba-vpc.yaml:\n> vela show alibaba-vpc.yaml\n4. Specify output format, markdown supported:\n> vela show webservice --format markdown\n5. Specify a language for output, by default, it's english. You can also load your own translation script:\n> vela show webservice --location zh\n> vela show webservice --location zh --i18n https://kubevela.io/reference-i18n.json\n6. Show doc for a specified revision, it must exist in control plane cluster:\n> vela show webservice --revision v1\n7. Generate docs for all capabilities into folder $HOME/.vela/reference/docs/\n> vela show\n8. Generate all docs and start a doc server\n> vela show --web\n\n## Options\n  -e, --env string         specify environment name for application\n      --format string      specify format of output data, by default it's a pretty human readable format, you can specify markdown(md)\n  -h, --help               help for show\n      --i18n string        specify the location for of the doc generated from definition, now supported options 'zh', 'en'.  (default \"https://kubevela.io/reference-i18n.json\")\n  -l, --location string    specify the location for of the doc generated from definition, now supported options 'zh', 'en'.\n  -n, --namespace string   specify the Kubernetes namespace to use\n  -p, --path string        Specify the path for of the doc generated from definition.\n  -r, --revision string    Get the specified revision of a definition. Use def get to list revisions.\n      --web                start web doc site\n\n## Options inherited from parent commands\n  -y, --yes   Assume yes for all user prompts\n\n## SEE ALSO\n- [vela def](https://kubevela.io/docs/v1.8/cli/vela_def/) \\- Manage Definitions\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.8/cli/vela_def_show", "title": "vela def show", "description": "Show the reference doc for a component, trait, policy or workflow.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:28:01", "type": "overview", "page_metadata": {"og:url": "https://kubevela.io/docs/v1.8/cli/vela_def_show/", "twitter:card": "summary_large_image", "docusaurus_version": "v1.8", "docusaurus_locale": "en", "language": "en", "ogDescription": "Show the reference doc for a component, trait, policy or workflow.", "ogUrl": "https://kubevela.io/docs/v1.8/cli/vela_def_show/", "docsearch:version": "v1.8", "msapplication-config": "/img/favicons/browserconfig.xml", "og:title": "vela def show | KubeVela", "ogTitle": "vela def show | KubeVela", "description": "Show the reference doc for a component, trait, policy or workflow.", "docsearch:docusaurus_tag": "docs-default-v1.8", "generator": "Docusaurus v2.4.3", "og:description": "Show the reference doc for a component, trait, policy or workflow.", "theme-color": "#ffffff", "docsearch:language": "en", "viewport": "width=device-width, initial-scale=1.0", "title": "vela def show | KubeVela", "docusaurus_tag": "docs-default-v1.8", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "scrapeId": "25739b3e-6c93-4697-b612-18064bc61c48", "sourceURL": "https://kubevela.io/docs/v1.8/cli/vela_def_show", "url": "https://kubevela.io/docs/v1.8/cli/vela_def_show/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"vela def show\"?\n\nAssistant: Here are some code examples:\n\n### Command to show reference documentation\n```yaml\nvela def show [flags]\n```\n\n### Example commands\n```yaml\n0. Run 'vela show' directly to start a web server for all reference docs.\n1. Generate documentation for ComponentDefinition webservice:\n> vela show webservice -n vela-system\n2. Generate documentation for local CUE Definition file webservice.cue:\n> vela show webservice.cue\n3. Generate documentation for local Cloud Resource Definition YAML alibaba-vpc.yaml:\n> vela show alibaba-vpc.yaml\n4. Specify output format, markdown supported:\n> vela show webservice --format markdown\n5. Specify a language for output, by default, it's english. You can also load your own translation script:\n> vela show webservice --location zh\n> vela show webservice --location zh --i18n https://kubevela.io/reference-i18n.json\n6. Show doc for a specified revision, it must exist in control plane cluster:\n> vela show webservice --revision v1\n7. Generate docs for all capabilities into folder $HOME/.vela/reference/docs/\n> vela show\n8. Generate all docs and start a doc server\n> vela show --web\n```\n\n### Options for command\n```yaml\n  -e, --env string         specify environment name for application\n      --format string      specify format of output data, by default it's a pretty human readable format, you can specify markdown(md)\n  -h, --help               help for show\n      --i18n string        specify the location for of the doc generated from definition, now supported options 'zh', 'en'.  (default \"https://kubevela.io/reference-i18n.json\")\n  -l, --location string    specify the location for of the doc generated from definition, now supported options 'zh', 'en'.\n  -n, --namespace string   specify the Kubernetes namespace to use\n  -p, --path string        Specify the path for of the doc generated from definition.\n  -r, --revision string    Get the specified revision of a definition. Use def get to list revisions.\n      --web                start web doc site\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.8/cli/vela_def_show", "title": "vela def show", "description": "Show the reference doc for a component, trait, policy or workflow.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:28:01", "type": "code_examples", "page_metadata": {"og:url": "https://kubevela.io/docs/v1.8/cli/vela_def_show/", "twitter:card": "summary_large_image", "docusaurus_version": "v1.8", "docusaurus_locale": "en", "language": "en", "ogDescription": "Show the reference doc for a component, trait, policy or workflow.", "ogUrl": "https://kubevela.io/docs/v1.8/cli/vela_def_show/", "docsearch:version": "v1.8", "msapplication-config": "/img/favicons/browserconfig.xml", "og:title": "vela def show | KubeVela", "ogTitle": "vela def show | KubeVela", "description": "Show the reference doc for a component, trait, policy or workflow.", "docsearch:docusaurus_tag": "docs-default-v1.8", "generator": "Docusaurus v2.4.3", "og:description": "Show the reference doc for a component, trait, policy or workflow.", "theme-color": "#ffffff", "docsearch:language": "en", "viewport": "width=device-width, initial-scale=1.0", "title": "vela def show | KubeVela", "docusaurus_tag": "docs-default-v1.8", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "scrapeId": "25739b3e-6c93-4697-b612-18064bc61c48", "sourceURL": "https://kubevela.io/docs/v1.8/cli/vela_def_show", "url": "https://kubevela.io/docs/v1.8/cli/vela_def_show/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"vela def show\"?\n\nAssistant: Here are the recommended best practices:\n\n• Run 'vela show' directly to start a web server for all reference docs.\n• Specify output format, markdown supported: use '--format markdown'.\n• Specify a language for output using '--location'.\n• Show doc for a specified revision using '--revision'.\n• Generate docs for all capabilities into a specified folder.\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.8/cli/vela_def_show", "title": "vela def show", "description": "Show the reference doc for a component, trait, policy or workflow.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:28:01", "type": "best_practices", "page_metadata": {"og:url": "https://kubevela.io/docs/v1.8/cli/vela_def_show/", "twitter:card": "summary_large_image", "docusaurus_version": "v1.8", "docusaurus_locale": "en", "language": "en", "ogDescription": "Show the reference doc for a component, trait, policy or workflow.", "ogUrl": "https://kubevela.io/docs/v1.8/cli/vela_def_show/", "docsearch:version": "v1.8", "msapplication-config": "/img/favicons/browserconfig.xml", "og:title": "vela def show | KubeVela", "ogTitle": "vela def show | KubeVela", "description": "Show the reference doc for a component, trait, policy or workflow.", "docsearch:docusaurus_tag": "docs-default-v1.8", "generator": "Docusaurus v2.4.3", "og:description": "Show the reference doc for a component, trait, policy or workflow.", "theme-color": "#ffffff", "docsearch:language": "en", "viewport": "width=device-width, initial-scale=1.0", "title": "vela def show | KubeVela", "docusaurus_tag": "docs-default-v1.8", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "scrapeId": "25739b3e-6c93-4697-b612-18064bc61c48", "sourceURL": "https://kubevela.io/docs/v1.8/cli/vela_def_show", "url": "https://kubevela.io/docs/v1.8/cli/vela_def_show/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela CLI: vela kube apply\"?\n\nAssistant: Apply resources in Kubernetes YAML file to clusters.\n\nHere's a detailed explanation:\n\n\n## Synopsis\nApply Kubernetes objects in clusters\n\nApply Kubernetes objects in multiple clusters. Use --clusters to specify which clusters to apply. If -n/--namespace is used, the original object namespace will be overridden.\n\nYou can use -f/--file to specify the object file/folder to apply. Multiple file inputs are allowed. Directory input and web url input is supported as well. File format can be in YAML, JSON or CUE.\n\n## Examples\n```bash\n  # Apply single object file in managed cluster\n  vela kube apply -f my.yaml --cluster cluster-1\n\n  # Apply object in CUE, the whole CUE file MUST follow the kubernetes API and contain only one object.\n  vela kube apply -f my.cue --cluster cluster-1\n\n  # Apply object in JSON, the whole JSON file MUST follow the kubernetes API and contain only one object.\n  vela kube apply -f my.json --cluster cluster-1\n\n  # Apply multiple object files in multiple managed clusters\n  vela kube apply -f my-1.yaml -f my-2.cue --cluster cluster-1 --cluster cluster-2\n\n  # Apply object file with web url in control plane\n  vela kube apply -f https://raw.githubusercontent.com/kubevela/kubevela/master/docs/examples/app-with-probe/app-with-probe.yaml\n\n  # Apply object files in directory to specified namespace in managed clusters\n  vela kube apply -f ./resources -n demo --cluster cluster-1 --cluster cluster-2\n\n  # Use dry-run to see what will be rendered out in YAML\n  vela kube apply -f my.cue --cluster cluster-1 --dry-run\n```\n\n## Options\n```bash\n  -c, --cluster strings    The cluster to apply objects. Setting multiple clusters will apply objects in order. (default [local])\n      --dry-run            Setting this flag will not apply resources in clusters. It will print out the resource to be applied.\n  -f, --file strings       Files that include native Kubernetes objects to apply.\n  -h, --help               help for apply\n  -n, --namespace string   The namespace to apply objects. If empty, the namespace declared in the YAML will be used.\n```\n\n## Options inherited from parent commands\n```bash\n  -y, --yes   Assume yes for all user prompts\n```\n\n## SEE ALSO\n- [vela kube](https://kubevela.io/docs/v1.8/cli/vela_kube/) \\- Managing native Kubernetes resources across clusters.\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.8/cli/vela_kube_apply", "title": "KubeVela CLI: vela kube apply", "description": "Apply resources in Kubernetes YAML file to clusters.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:28:22", "type": "overview", "page_metadata": {"favicon": "https://kubevela.io/img/favicons/favicon.ico", "og:description": "Apply resources in Kubernetes YAML file to clusters.", "docsearch:version": "v1.8", "theme-color": "#ffffff", "ogDescription": "Apply resources in Kubernetes YAML file to clusters.", "msapplication-config": "/img/favicons/browserconfig.xml", "docusaurus_tag": "docs-default-v1.8", "title": "vela kube apply | KubeVela", "og:title": "vela kube apply | KubeVela", "viewport": "width=device-width, initial-scale=1.0", "docsearch:docusaurus_tag": "docs-default-v1.8", "docsearch:language": "en", "docusaurus_locale": "en", "ogUrl": "https://kubevela.io/docs/v1.8/cli/vela_kube_apply/", "docusaurus_version": "v1.8", "description": "Apply resources in Kubernetes YAML file to clusters.", "og:url": "https://kubevela.io/docs/v1.8/cli/vela_kube_apply/", "twitter:card": "summary_large_image", "generator": "Docusaurus v2.4.3", "language": "en", "ogTitle": "vela kube apply | KubeVela", "scrapeId": "75c7ce2d-19b1-45cd-a08d-d279fca7903f", "sourceURL": "https://kubevela.io/docs/v1.8/cli/vela_kube_apply", "url": "https://kubevela.io/docs/v1.8/cli/vela_kube_apply/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"KubeVela CLI: vela kube apply\"?\n\nAssistant: Here are some code examples:\n\n### Apply single object file in managed cluster\n```yaml\nvela kube apply -f my.yaml --cluster cluster-1\n```\n\n### Apply object in CUE\n```yaml\nvela kube apply -f my.cue --cluster cluster-1\n```\n\n### Apply object in JSON\n```yaml\nvela kube apply -f my.json --cluster cluster-1\n```\n\n### Apply multiple object files in multiple managed clusters\n```yaml\nvela kube apply -f my-1.yaml -f my-2.cue --cluster cluster-1 --cluster cluster-2\n```\n\n### Apply object file with web url in control plane\n```yaml\nvela kube apply -f https://raw.githubusercontent.com/kubevela/kubevela/master/docs/examples/app-with-probe/app-with-probe.yaml\n```\n\n### Apply object files in directory to specified namespace in managed clusters\n```yaml\nvela kube apply -f ./resources -n demo --cluster cluster-1 --cluster cluster-2\n```\n\n### Use dry-run to see what will be rendered out in YAML\n```yaml\nvela kube apply -f my.cue --cluster cluster-1 --dry-run\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.8/cli/vela_kube_apply", "title": "KubeVela CLI: vela kube apply", "description": "Apply resources in Kubernetes YAML file to clusters.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:28:22", "type": "code_examples", "page_metadata": {"favicon": "https://kubevela.io/img/favicons/favicon.ico", "og:description": "Apply resources in Kubernetes YAML file to clusters.", "docsearch:version": "v1.8", "theme-color": "#ffffff", "ogDescription": "Apply resources in Kubernetes YAML file to clusters.", "msapplication-config": "/img/favicons/browserconfig.xml", "docusaurus_tag": "docs-default-v1.8", "title": "vela kube apply | KubeVela", "og:title": "vela kube apply | KubeVela", "viewport": "width=device-width, initial-scale=1.0", "docsearch:docusaurus_tag": "docs-default-v1.8", "docsearch:language": "en", "docusaurus_locale": "en", "ogUrl": "https://kubevela.io/docs/v1.8/cli/vela_kube_apply/", "docusaurus_version": "v1.8", "description": "Apply resources in Kubernetes YAML file to clusters.", "og:url": "https://kubevela.io/docs/v1.8/cli/vela_kube_apply/", "twitter:card": "summary_large_image", "generator": "Docusaurus v2.4.3", "language": "en", "ogTitle": "vela kube apply | KubeVela", "scrapeId": "75c7ce2d-19b1-45cd-a08d-d279fca7903f", "sourceURL": "https://kubevela.io/docs/v1.8/cli/vela_kube_apply", "url": "https://kubevela.io/docs/v1.8/cli/vela_kube_apply/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela CLI: vela kube apply\"?\n\nAssistant: Here are the recommended best practices:\n\n• Use the --clusters flag to specify which clusters to apply resources to.\n• Utilize the --dry-run option to preview the resources that will be applied without making changes.\n• Ensure that the object files follow the Kubernetes API and contain only one object when using CUE or JSON.\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.8/cli/vela_kube_apply", "title": "KubeVela CLI: vela kube apply", "description": "Apply resources in Kubernetes YAML file to clusters.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:28:22", "type": "best_practices", "page_metadata": {"favicon": "https://kubevela.io/img/favicons/favicon.ico", "og:description": "Apply resources in Kubernetes YAML file to clusters.", "docsearch:version": "v1.8", "theme-color": "#ffffff", "ogDescription": "Apply resources in Kubernetes YAML file to clusters.", "msapplication-config": "/img/favicons/browserconfig.xml", "docusaurus_tag": "docs-default-v1.8", "title": "vela kube apply | KubeVela", "og:title": "vela kube apply | KubeVela", "viewport": "width=device-width, initial-scale=1.0", "docsearch:docusaurus_tag": "docs-default-v1.8", "docsearch:language": "en", "docusaurus_locale": "en", "ogUrl": "https://kubevela.io/docs/v1.8/cli/vela_kube_apply/", "docusaurus_version": "v1.8", "description": "Apply resources in Kubernetes YAML file to clusters.", "og:url": "https://kubevela.io/docs/v1.8/cli/vela_kube_apply/", "twitter:card": "summary_large_image", "generator": "Docusaurus v2.4.3", "language": "en", "ogTitle": "vela kube apply | KubeVela", "scrapeId": "75c7ce2d-19b1-45cd-a08d-d279fca7903f", "sourceURL": "https://kubevela.io/docs/v1.8/cli/vela_kube_apply", "url": "https://kubevela.io/docs/v1.8/cli/vela_kube_apply/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela CLI - vela status\"?\n\nAssistant: This documentation provides details on how to show the status of a KubeVela application using the CLI command 'vela status'.\n\nHere's a detailed explanation:\n\n\n## Synopsis\nShow status of vela application.\n\n## Examples\n```bash\n  # Get basic app info\n  vela status APP_NAME\n\n  # Show detailed info in tree\n  vela status first-vela-app --tree --detail --detail-format list\n\n  # Show pod list\n  vela status first-vela-app --pod\n  vela status first-vela-app --pod --component express-server --cluster local\n\n  # Show endpoint list\n  vela status first-vela-app --endpoint\n\n  # Get raw Application yaml (without managedFields)\n  vela status first-vela-app -o yaml\n\n  # Get raw Application status using jsonpath\n  vela status first-vela-app -o jsonpath='{.status}'\n\n  # Get Application metrics status\n  vela status first-vela-app --metrics\n```\n\n## Options\n```bash\n      --cluster string         filter the endpoints or pods by cluster name\n  -c, --component string       filter the endpoints or pods by component name\n  -d, --detail                 display more details in the application like input/output data in context. Note that if you want to show the realtime details of application resources, please use it with --tree\n      --detail-format string   the format for displaying details, must be used with --detail. Can be one of inline, wide, list, table, raw. (default \"inline\")\n  -p, --endpoint               show all service endpoints of the application\n  -e, --env string             specify environment name for application\n  -h, --help                   help for status\n  -m, --metrics                show resource quota and consumption metrics of the application\n  -n, --namespace string       specify the Kubernetes namespace to use\n  -o, --output string          raw Application output format. One of: (json, yaml, jsonpath)\n      --pod                    show pod list of the application\n  -s, --svc string             service name\n  -t, --tree                   display the application resources into tree structure\n```\n\n## Options inherited from parent commands\n```bash\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n\n## SEE ALSO\nGo Back to [CLI Commands](https://kubevela.io/docs/v1.9/cli/vela/) Homepage.\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.9/cli/vela_status", "title": "KubeVela CLI - vela status", "description": "This documentation provides details on how to show the status of a KubeVela application using the CLI command 'vela status'.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:28:33", "type": "overview", "page_metadata": {"title": "vela status | KubeVela", "ogTitle": "vela status | KubeVela", "ogDescription": "Show status of an application.", "docusaurus_version": "v1.9", "docsearch:version": "v1.9", "viewport": "width=device-width, initial-scale=1.0", "twitter:card": "summary_large_image", "description": "Show status of an application.", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docsearch:docusaurus_tag": "docs-default-v1.9", "msapplication-config": "/img/favicons/browserconfig.xml", "theme-color": "#ffffff", "docsearch:language": "en", "generator": "Docusaurus v2.4.3", "og:description": "Show status of an application.", "docusaurus_tag": "docs-default-v1.9", "language": "en", "og:url": "https://kubevela.io/docs/v1.9/cli/vela_status/", "ogUrl": "https://kubevela.io/docs/v1.9/cli/vela_status/", "docusaurus_locale": "en", "og:title": "vela status | KubeVela", "scrapeId": "ac1f78a5-ba7a-4d73-9508-3434d199e42d", "sourceURL": "https://kubevela.io/docs/v1.9/cli/vela_status", "url": "https://kubevela.io/docs/v1.9/cli/vela_status/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"KubeVela CLI - vela status\"?\n\nAssistant: Here are some code examples:\n\n### Basic app info\n```yaml\nvela status APP_NAME\n```\n\n### Detailed info in tree\n```yaml\nvela status first-vela-app --tree --detail --detail-format list\n```\n\n### Show pod list\n```yaml\nvela status first-vela-app --pod\n```\n\n### Show endpoint list\n```yaml\nvela status first-vela-app --endpoint\n```\n\n### Get raw Application yaml\n```yaml\nvela status first-vela-app -o yaml\n```\n\n### Get raw Application status using jsonpath\n```yaml\nvela status first-vela-app -o jsonpath='{.status}'\n```\n\n### Get Application metrics status\n```yaml\nvela status first-vela-app --metrics\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.9/cli/vela_status", "title": "KubeVela CLI - vela status", "description": "This documentation provides details on how to show the status of a KubeVela application using the CLI command 'vela status'.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:28:33", "type": "code_examples", "page_metadata": {"title": "vela status | KubeVela", "ogTitle": "vela status | KubeVela", "ogDescription": "Show status of an application.", "docusaurus_version": "v1.9", "docsearch:version": "v1.9", "viewport": "width=device-width, initial-scale=1.0", "twitter:card": "summary_large_image", "description": "Show status of an application.", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docsearch:docusaurus_tag": "docs-default-v1.9", "msapplication-config": "/img/favicons/browserconfig.xml", "theme-color": "#ffffff", "docsearch:language": "en", "generator": "Docusaurus v2.4.3", "og:description": "Show status of an application.", "docusaurus_tag": "docs-default-v1.9", "language": "en", "og:url": "https://kubevela.io/docs/v1.9/cli/vela_status/", "ogUrl": "https://kubevela.io/docs/v1.9/cli/vela_status/", "docusaurus_locale": "en", "og:title": "vela status | KubeVela", "scrapeId": "ac1f78a5-ba7a-4d73-9508-3434d199e42d", "sourceURL": "https://kubevela.io/docs/v1.9/cli/vela_status", "url": "https://kubevela.io/docs/v1.9/cli/vela_status/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela CLI - vela status\"?\n\nAssistant: Here are the recommended best practices:\n\n• Use --detail with --tree for real-time details of application resources.\n• Specify the Kubernetes namespace using -n or --namespace for targeted operations.\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.9/cli/vela_status", "title": "KubeVela CLI - vela status", "description": "This documentation provides details on how to show the status of a KubeVela application using the CLI command 'vela status'.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:28:33", "type": "best_practices", "page_metadata": {"title": "vela status | KubeVela", "ogTitle": "vela status | KubeVela", "ogDescription": "Show status of an application.", "docusaurus_version": "v1.9", "docsearch:version": "v1.9", "viewport": "width=device-width, initial-scale=1.0", "twitter:card": "summary_large_image", "description": "Show status of an application.", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docsearch:docusaurus_tag": "docs-default-v1.9", "msapplication-config": "/img/favicons/browserconfig.xml", "theme-color": "#ffffff", "docsearch:language": "en", "generator": "Docusaurus v2.4.3", "og:description": "Show status of an application.", "docusaurus_tag": "docs-default-v1.9", "language": "en", "og:url": "https://kubevela.io/docs/v1.9/cli/vela_status/", "ogUrl": "https://kubevela.io/docs/v1.9/cli/vela_status/", "docusaurus_locale": "en", "og:title": "vela status | KubeVela", "scrapeId": "ac1f78a5-ba7a-4d73-9508-3434d199e42d", "sourceURL": "https://kubevela.io/docs/v1.9/cli/vela_status", "url": "https://kubevela.io/docs/v1.9/cli/vela_status/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela Authentication & Authorization\"?\n\nAssistant: This page covers the Authentication & Authorization mechanism introduced in KubeVela v1.4, allowing applications to manage resources using the identity of the application's creator/modifier.\n\nHere's a detailed explanation:\n\n\n## Installation\nTo enable Authentication & Authorization in your KubeVela system, you need to do the following steps\n\n1. Delete the ClusterRoleBinding ends with `vela-core:manager-rolebinding`. Usually you can do it through:\n\n```bash\nkubectl delete ClusterRoleBinding kubevela-vela-core:manager-rolebinding\n```\n\n2. Upgrade the controller, and wait for the installation finished:\n\n```bash\nhelm upgrade --install kubevela kubevela/vela-core --create-namespace -n vela-system --set authentication.enabled=true --set authentication.withUser=true --wait\n```\n\n3. Make sure your version Vela CLI v1.4.1+, refer to [the installation guide](https://kubevela.io/docs/install/#2-install-kubevela-cli).\n\n4. (Optional) Install [vela-prism](https://github.com/kubevela/prism) through running the following commands, which will allow you to enjoy the advanced API extensions in KubeVela.\n\n```bash\nhelm repo add prism https://charts.kubevela.net/prism\nhelm repo update\nhelm install vela-prism prism/vela-prism -n vela-system\n```\n\n## Usage\n0. Before we start, assume we already have two managed clusters joined in KubeVela, called `c2` and `c3`. You can refer to the [multi-cluster document](https://kubevela.io/docs/platform-engineers/system-operation/managing-clusters/#manage-the-cluster-via-cli) and see how to join managed clusters into KubeVela control plane.\n\n```bash\n$ vela cluster list\nNAME    ALIAS   CREDENTIAL_TYPE   ENDPOINT                      ACCEPTED   LABELS\nlocal           Internal          -                             true\nc3              X509Certificate   <c3 apiserver url>            true\nc2              X509Certificate   <c2 apiserver url>            true\n```\n\nThe following procedures are illustrated in the following figure. The operations below are associated with different users, which are identified by switching `KUBECONFIG` environment variable. (Each `KUBECONFIG` corresponds to one user.)\n\n![auth-procedure](https://kubevela.io/assets/images/auth-procedure-68c9fcbbfb5c9532284f5fd7442c5c42.jpg) \n\n### Create User\n1. Let's start with a new coming user named Alice. As the system administrator, you can assign a KubeConfig for Alice to use.\n\n```bash\n$ vela auth gen-kubeconfig --user alice > alice.kubeconfig\nPrivate key generated.\nCertificate request generated.\nCertificate signing request alice generated.\nCertificate signing request alice approved.\nSigned certificate retrieved.\n```\n\n### Grant Privileges\n2. Now alice is unable to do anything in the cluster with the given KubeConfig. We can grant her the privileges of Read/Write resources in the `dev` namespace of the control plane and managed cluster `c2`.\n\n```bash\n$ vela auth grant-privileges --user alice --for-namespace dev --for-cluster=local,c2 --create-namespace\nClusterRole kubevela:writer created in local.\nRoleBinding dev/kubevela:writer:binding created in local.\nClusterRole kubevela:writer created in c2.\nRoleBinding dev/kubevela:writer:binding created in c2.\nPrivileges granted.\n```\n\n3. We can check the privileges of Alice by the following command\n\n```bash\n$ vela auth list-privileges --user alice --cluster local,c2\nUser=alice\n├── [Cluster]  local\n│   └── [ClusterRole]  kubevela:writer\n│       ├── [Scope]\n│       │   └── [Namespaced]  dev (RoleBinding kubevela:writer:binding)\n│       └── [PolicyRules]\n│           ├── APIGroups:       *\n│           │   Resources:       *\n│           │   Verb:            get, list, watch, create, update, patch, delete\n│           └── NonResourceURLs: *\n│               Verb:            get, list, watch, create, update, patch, delete\n└── [Cluster]  c2\n    └── [ClusterRole]  kubevela:writer\n        ├── [Scope]\n        │   └── [Namespaced]  dev (RoleBinding kubevela:writer:binding)\n        └── [PolicyRules]\n            ├── APIGroups:       *\n            │   Resources:       *\n            │   Verb:            get, list, watch, create, update, patch, delete\n            └── NonResourceURLs: *\n                Verb:            get, list, watch, create, update, patch, delete\n```\n\n### Use Privileges\n4. Alice can create an application in the dev namespace now. The application can also dispatch resources into the dev namespace of cluster `c2`.\n\n```bash\ncat <<EOF | KUBECONFIG=alice.kubeconfig vela up -f -\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: podinfo\n  namespace: dev\nspec:\n  components:\n  - name: podinfo\n    type: webservice\n    properties:\n      image: stefanprodan/podinfo:6.0.1\n  policies:\n  - type: topology\n    name: topology\n    properties:\n      clusters: [\"c2\"]\nEOF\n```\n\n5. Alice can see the application is successfully deployed.\n\n```bash\n$ KUBECONFIG=alice.kubeconfig vela status podinfo -n dev\nAbout:\n\n  Name:         podinfo\n  Namespace:    dev\n  Created at:   2022-05-31 17:06:14 +0800 CST\n  Status:       running\n\nWorkflow:\n\n  mode: DAG\n  finished: true\n  Suspend: false\n  Terminated: false\n  Steps\n  - id:rk3npcpycl\n    name:deploy-topology\n    type:deploy\n    phase:succeeded\n    message:\n\nServices:\n\n  - Name: podinfo\n    Cluster: c2  Namespace: dev\n    Type: webservice\n    Healthy Ready:1/1\n    No trait applied\n```\n\n### Unauthorized access forbidden\n6. If Alice wants to access resources outside the dev namespace, she will be forbidden to do so.\n\n```bash\nKUBECONFIG=alice.kubeconfig kubectl get pod -n vela-system\nError from server (Forbidden): pods is forbidden: User \"alice\" cannot list resource \"pods\" in API group \"\" in the namespace \"vela-system\"\n```\n\n7. If Alice tries to create an application in the dev namespace and the application intends to dispatch resources in `c3` cluster (which Alice does not have the privileges), the application will not be able to do so.\n\nAlice creates the application `podinfo-bad`\n\n```bash\n$ cat <<EOF | KUBECONFIG=alice.kubeconfig vela up -f -\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: podinfo-bad\n  namespace: dev\nspec:\n  components:\n  - name: podinfo-bad\n    type: webservice\n    properties:\n      image: stefanprodan/podinfo:6.0.1\n  policies:\n  - type: topology\n    name: topology\n    properties:\n      clusters: [\"c3\"]\nEOF\n```\n\nAlice checks the status of `podinfo-bad`, the error message will be shown.\n\n```bash\n$ KUBECONFIG=alice.kubeconfig vela status podinfo-bad -n dev\nAbout:\n\n  Name:         podinfo-bad\n  Namespace:    dev\n  Created at:   2022-05-31 17:09:16 +0800 CST\n  Status:       runningWorkflow\n\nWorkflow:\n\n  mode: DAG\n  finished: false\n  Suspend: false\n  Terminated: false\n  Steps\n  - id:tw539smx7m\n    name:deploy-topology\n    type:deploy\n    phase:failed\n    message:step deploy: run step(provider=multicluster,do=deploy): Found 1 errors. [(error encountered in cluster c3: HandleComponentsRevision: controllerrevisions.apps is forbidden: User \"alice\" cannot list resource \"controllerrevisions\" in API group \"apps\" in the namespace \"dev\")]\n\nServices:\n```\n\n### Readonly Access\n8. Let's create a new KubeConfig for another new User Bob. Bob will only be granted with the readonly privileges for the resources in the dev namespace of the control plane and cluster `c2`.\n\n```bash\n$ vela auth gen-kubeconfig --user bob > bob.kubeconfig\nPrivate key generated.\nCertificate request generated.\nCertificate signing request bob generated.\nCertificate signing request bob approved.\nSigned certificate retrieved.\n\n$ vela auth grant-privileges --user bob --for-namespace dev --for-cluster=local,c2 --readonly\nClusterRole kubevela:reader created in local.\nRoleBinding dev/kubevela:reader:binding created in local.\nClusterRole kubevela:reader created in c2.\nRoleBinding dev/kubevela:reader:binding created in c2.\nPrivileges granted.\n```\n\n9. User Bob can see the applications and their status under the namespace of dev.\n\n```bash\n$ KUBECONFIG=bob.kubeconfig vela ls -n dev\nAPP             COMPONENT       TYPE            TRAITS  PHASE                   HEALTHY STATUS          CREATED-TIME\npodinfo         podinfo         webservice              running                 healthy Ready:1/1       2022-05-31 17:06:14 +0800 CST\npodinfo-bad     podinfo-bad     webservice              workflowTerminated                              2022-05-31 17:09:16 +0800 CST\n\n$ KUBECONFIG=bob.kubeconfig vela status podinfo -n dev\nAbout:\n\n  Name:         podinfo\n  Namespace:    dev\n  Created at:   2022-05-31 17:06:14 +0800 CST\n  Status:       running\n\nWorkflow:\n\n  mode: DAG\n  finished: true\n  Suspend: false\n  Terminated: false\n  Steps\n  - id:rk3npcpycl\n    name:deploy-topology\n    type:deploy\n    phase:succeeded\n    message:\n\nServices:\n\n  - Name: podinfo\n    Cluster: local  Namespace: dev\n    Type: webservice\n    Healthy Ready:1/1\n    No trait applied\n\n  - Name: podinfo\n    Cluster: c2  Namespace: dev\n    Type: webservice\n    Healthy Ready:1/1\n    No trait applied\n```\n\n10. But he is forbidden to do any mutating actions, such as deleting application in dev namespace.\n\n```bash\n$ KUBECONFIG=bob.kubeconfig vela delete podinfo-bad -n dev\nDeleting Application \"podinfo-bad\"\nError: delete application err: applications.core.oam.dev \"podinfo-bad\" is forbidden: User \"bob\" cannot delete resource \"applications\" in API group \"core.oam.dev\" in the namespace \"dev\"\n2022/05/31 17:17:51 delete application err: applications.core.oam.dev \"podinfo-bad\" is forbidden: User \"bob\" cannot delete resource \"applications\" in API group \"core.oam.dev\" in the namespace \"dev\"\n```\n\n11. Instead, User Alice can delete application.\n\n```bash\n$ KUBECONFIG=alice.kubeconfig vela delete podinfo-bad -n dev\napplication.core.oam.dev \"podinfo-bad\" deleted\n```\n\n### Listing resources in Application\n12. (Optional) After `vela-prism` installed, you will be able to list resources of the application through the following command\n\n```bash\n$ KUBECONFIG=bob.kubeconfig vela status podinfo -n dev --tree --detail\nCLUSTER       NAMESPACE     RESOURCE           STATUS    APPLY_TIME          DETAIL\nc2        ─── dev       ─── Deployment/podinfo updated   2022-05-31 17:06:14 Ready: 1/1  Up-to-date: 1  Available: 1  Age: 13m\nlocal     ─── dev       ─── Deployment/podinfo updated   2022-05-31 17:06:14 Ready: 1/1  Up-to-date: 1  Available: 1  Age: 13m\n```\n\n> Notice that if `vela-prism` is not installed, Alice and Bob will be forbidden to run this listing command.\n\n## Extension Reading\nThe guide above demonstrates how system operators can grant limited privileges for users and therefore restrict the access of their created applications. For more detail explanation on how this capability is achieved, read the [Underlying Mechanism](https://kubevela.io/docs/platform-engineers/auth/advance/) article.\n\n> As the platform builder, you may want to bind KubeVela application with your customized identity. For example, using a manual specified ServiceAccount for the application. If you want to do so, it is not mandatory to enable the Authentication feature flag in KubeVela. Read the [System Integration](https://kubevela.io/docs/platform-engineers/auth/integration/) for more details.\n", "metadata": {"source_url": "https://kubevela.io/docs/platform-engineers/auth/basic", "title": "KubeVela Authentication & Authorization", "description": "This page covers the Authentication & Authorization mechanism introduced in KubeVela v1.4, allowing applications to manage resources using the identity of the application's creator/modifier.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 15:29:18", "type": "overview", "page_metadata": {"og:description": "In KubeVela v1.4, Authentication & Authorization mechanism is introduced. This allows applications to dispatch and manage resources using the identity of the application's creator/modifier. With this feature, it will be easy to limit the access of KubeVela users/applications and isolate their living spaces, which will make your KubeVela system safer.", "description": "In KubeVela v1.4, Authentication & Authorization mechanism is introduced. This allows applications to dispatch and manage resources using the identity of the application's creator/modifier. With this feature, it will be easy to limit the access of KubeVela users/applications and isolate their living spaces, which will make your KubeVela system safer.", "docsearch:language": "en", "ogTitle": "Kubernetes RBAC | KubeVela", "docusaurus_locale": "en", "og:title": "Kubernetes RBAC | KubeVela", "og:url": "https://kubevela.io/docs/platform-engineers/auth/basic/", "language": "en", "viewport": "width=device-width, initial-scale=1.0", "ogDescription": "In KubeVela v1.4, Authentication & Authorization mechanism is introduced. This allows applications to dispatch and manage resources using the identity of the application's creator/modifier. With this feature, it will be easy to limit the access of KubeVela users/applications and isolate their living spaces, which will make your KubeVela system safer.", "docsearch:version": "v1.10", "twitter:card": "summary_large_image", "docsearch:docusaurus_tag": "docs-default-v1.10", "title": "Kubernetes RBAC | KubeVela", "docusaurus_version": "v1.10", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "theme-color": "#ffffff", "msapplication-config": "/img/favicons/browserconfig.xml", "generator": "Docusaurus v2.4.3", "docusaurus_tag": "docs-default-v1.10", "ogUrl": "https://kubevela.io/docs/platform-engineers/auth/basic/", "scrapeId": "647dd546-fb1c-40a4-b6b3-beea2ca44cb3", "sourceURL": "https://kubevela.io/docs/platform-engineers/auth/basic", "url": "https://kubevela.io/docs/platform-engineers/auth/basic/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"KubeVela Authentication & Authorization\"?\n\nAssistant: Here are some code examples:\n\n### Delete ClusterRoleBinding\n```yaml\nkubectl delete ClusterRoleBinding kubevela-vela-core:manager-rolebinding\n```\n\n### Upgrade Controller\n```yaml\nhelm upgrade --install kubevela kubevela/vela-core --create-namespace -n vela-system --set authentication.enabled=true --set authentication.withUser=true --wait\n```\n\n### Install vela-prism\n```yaml\nhelm repo add prism https://charts.kubevela.net/prism\nhelm repo update\nhelm install vela-prism prism/vela-prism -n vela-system\n```\n\n### List Clusters\n```yaml\n$ vela cluster list\nNAME    ALIAS   CREDENTIAL_TYPE   ENDPOINT                      ACCEPTED   LABELS\nlocal           Internal          -                             true\nc3              X509Certificate   <c3 apiserver url>            true\nc2              X509Certificate   <c2 apiserver url>            true\n```\n\n### Generate KubeConfig for Alice\n```yaml\n$ vela auth gen-kubeconfig --user alice > alice.kubeconfig\nPrivate key generated.\nCertificate request generated.\nCertificate signing request alice generated.\nCertificate signing request alice approved.\nSigned certificate retrieved.\n```\n\n### Grant Privileges to Alice\n```yaml\n$ vela auth grant-privileges --user alice --for-namespace dev --for-cluster=local,c2 --create-namespace\nClusterRole kubevela:writer created in local.\nRoleBinding dev/kubevela:writer:binding created in local.\nClusterRole kubevela:writer created in c2.\nRoleBinding dev/kubevela:writer:binding created in c2.\nPrivileges granted.\n```\n\n### List Privileges for Alice\n```yaml\n$ vela auth list-privileges --user alice --cluster local,c2\nUser=alice\n├── [Cluster]  local\n│   └── [ClusterRole]  kubevela:writer\n│       ├── [Scope]\n│       │   └── [Namespaced]  dev (RoleBinding kubevela:writer:binding)\n│       └── [PolicyRules]\n│           ├── APIGroups:       *\n│           │   Resources:       *\n│           │   Verb:            get, list, watch, create, update, patch, delete\n│           └── NonResourceURLs: *\n│               Verb:            get, list, watch, create, update, patch, delete\n└── [Cluster]  c2\n    └── [ClusterRole]  kubevela:writer\n        ├── [Scope]\n        │   └── [Namespaced]  dev (RoleBinding kubevela:writer:binding)\n        └── [PolicyRules]\n            ├── APIGroups:       *\n            │   Resources:       *\n            │   Verb:            get, list, watch, create, update, patch, delete\n            └── NonResourceURLs: *\n                Verb:            get, list, watch, create, update, patch, delete\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/platform-engineers/auth/basic", "title": "KubeVela Authentication & Authorization", "description": "This page covers the Authentication & Authorization mechanism introduced in KubeVela v1.4, allowing applications to manage resources using the identity of the application's creator/modifier.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 15:29:18", "type": "code_examples", "page_metadata": {"og:description": "In KubeVela v1.4, Authentication & Authorization mechanism is introduced. This allows applications to dispatch and manage resources using the identity of the application's creator/modifier. With this feature, it will be easy to limit the access of KubeVela users/applications and isolate their living spaces, which will make your KubeVela system safer.", "description": "In KubeVela v1.4, Authentication & Authorization mechanism is introduced. This allows applications to dispatch and manage resources using the identity of the application's creator/modifier. With this feature, it will be easy to limit the access of KubeVela users/applications and isolate their living spaces, which will make your KubeVela system safer.", "docsearch:language": "en", "ogTitle": "Kubernetes RBAC | KubeVela", "docusaurus_locale": "en", "og:title": "Kubernetes RBAC | KubeVela", "og:url": "https://kubevela.io/docs/platform-engineers/auth/basic/", "language": "en", "viewport": "width=device-width, initial-scale=1.0", "ogDescription": "In KubeVela v1.4, Authentication & Authorization mechanism is introduced. This allows applications to dispatch and manage resources using the identity of the application's creator/modifier. With this feature, it will be easy to limit the access of KubeVela users/applications and isolate their living spaces, which will make your KubeVela system safer.", "docsearch:version": "v1.10", "twitter:card": "summary_large_image", "docsearch:docusaurus_tag": "docs-default-v1.10", "title": "Kubernetes RBAC | KubeVela", "docusaurus_version": "v1.10", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "theme-color": "#ffffff", "msapplication-config": "/img/favicons/browserconfig.xml", "generator": "Docusaurus v2.4.3", "docusaurus_tag": "docs-default-v1.10", "ogUrl": "https://kubevela.io/docs/platform-engineers/auth/basic/", "scrapeId": "647dd546-fb1c-40a4-b6b3-beea2ca44cb3", "sourceURL": "https://kubevela.io/docs/platform-engineers/auth/basic", "url": "https://kubevela.io/docs/platform-engineers/auth/basic/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela Authentication & Authorization\"?\n\nAssistant: Here are the recommended best practices:\n\n• Ensure to delete the existing ClusterRoleBinding before upgrading the controller.\n• Always check the version of Vela CLI to ensure compatibility with the features being used.\n• Use the `vela-prism` for advanced API extensions if needed.\n• When granting privileges, specify the namespace and cluster to limit access appropriately.\n• Regularly review user privileges to ensure they align with current access requirements.\n", "metadata": {"source_url": "https://kubevela.io/docs/platform-engineers/auth/basic", "title": "KubeVela Authentication & Authorization", "description": "This page covers the Authentication & Authorization mechanism introduced in KubeVela v1.4, allowing applications to manage resources using the identity of the application's creator/modifier.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 15:29:18", "type": "best_practices", "page_metadata": {"og:description": "In KubeVela v1.4, Authentication & Authorization mechanism is introduced. This allows applications to dispatch and manage resources using the identity of the application's creator/modifier. With this feature, it will be easy to limit the access of KubeVela users/applications and isolate their living spaces, which will make your KubeVela system safer.", "description": "In KubeVela v1.4, Authentication & Authorization mechanism is introduced. This allows applications to dispatch and manage resources using the identity of the application's creator/modifier. With this feature, it will be easy to limit the access of KubeVela users/applications and isolate their living spaces, which will make your KubeVela system safer.", "docsearch:language": "en", "ogTitle": "Kubernetes RBAC | KubeVela", "docusaurus_locale": "en", "og:title": "Kubernetes RBAC | KubeVela", "og:url": "https://kubevela.io/docs/platform-engineers/auth/basic/", "language": "en", "viewport": "width=device-width, initial-scale=1.0", "ogDescription": "In KubeVela v1.4, Authentication & Authorization mechanism is introduced. This allows applications to dispatch and manage resources using the identity of the application's creator/modifier. With this feature, it will be easy to limit the access of KubeVela users/applications and isolate their living spaces, which will make your KubeVela system safer.", "docsearch:version": "v1.10", "twitter:card": "summary_large_image", "docsearch:docusaurus_tag": "docs-default-v1.10", "title": "Kubernetes RBAC | KubeVela", "docusaurus_version": "v1.10", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "theme-color": "#ffffff", "msapplication-config": "/img/favicons/browserconfig.xml", "generator": "Docusaurus v2.4.3", "docusaurus_tag": "docs-default-v1.10", "ogUrl": "https://kubevela.io/docs/platform-engineers/auth/basic/", "scrapeId": "647dd546-fb1c-40a4-b6b3-beea2ca44cb3", "sourceURL": "https://kubevela.io/docs/platform-engineers/auth/basic", "url": "https://kubevela.io/docs/platform-engineers/auth/basic/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela Roadmap - December 2022\"?\n\nAssistant: This page outlines the roadmap for KubeVela from October 2022 to December 2022, detailing core platform features, third-party integrations, and best practices.\n\nHere's a detailed explanation:\n\n\n## Core Platform\n- Support Iot/Edge Application Delivery: https://github.com/kubevela/kubevela/issues/4326\n- Support adopt existing workload such as Deployment/StatefulSet and CRD controllers, manage it by KubeVela Application.\n- Support application template and build application registry along with addon registry. Provide application export/load capability.\n- Support build application from source code for developer and use OCI infrastructure to delivery application.\n- Enhance the security for end to end application delivery and management.\n- Make automated out-of-box application level observability for more scenarios.\n- Enhance the input/output capability for Component and Workflow.\n\n## Third-party integrations and more addons\n- Integrate with OPA/Kyverno/Cosign and other projects to provide a secure software supply chain.\n- Integrate with OpenSergo for micro services governance.\n- Integrate with OpenYurt for Iot/edge application delivery.\n\n## Best practices\n- Provide one or more best practices about how to use KubeVela in game/financial/edge scenario.\n", "metadata": {"source_url": "https://kubevela.io/docs/roadmap/2022-12-roadmap", "title": "KubeVela Roadmap - December 2022", "description": "This page outlines the roadmap for KubeVela from October 2022 to December 2022, detailing core platform features, third-party integrations, and best practices.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 15:29:32", "type": "overview", "page_metadata": {"viewport": "width=device-width, initial-scale=1.0", "msapplication-config": "/img/favicons/browserconfig.xml", "docsearch:version": "v1.10", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_tag": "docs-default-v1.10", "twitter:card": "summary_large_image", "ogTitle": "Roadmap 2022.12 | KubeVela", "docsearch:language": "en", "ogDescription": "Date: 2022-10-01 to 2022-12-31", "docusaurus_version": "v1.10", "og:description": "Date: 2022-10-01 to 2022-12-31", "ogUrl": "https://kubevela.io/docs/roadmap/2022-12-roadmap/", "generator": "Docusaurus v2.4.3", "theme-color": "#ffffff", "og:url": "https://kubevela.io/docs/roadmap/2022-12-roadmap/", "docsearch:docusaurus_tag": "docs-default-v1.10", "docusaurus_locale": "en", "og:title": "Roadmap 2022.12 | KubeVela", "title": "Roadmap 2022.12 | KubeVela", "language": "en", "description": "Date: 2022-10-01 to 2022-12-31", "scrapeId": "59478c6a-1071-4259-a3c0-cb437006d77a", "sourceURL": "https://kubevela.io/docs/roadmap/2022-12-roadmap", "url": "https://kubevela.io/docs/roadmap/2022-12-roadmap/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela Roadmap - December 2022\"?\n\nAssistant: Here are the recommended best practices:\n\n• Provide one or more best practices about how to use KubeVela in game/financial/edge scenario.\n", "metadata": {"source_url": "https://kubevela.io/docs/roadmap/2022-12-roadmap", "title": "KubeVela Roadmap - December 2022", "description": "This page outlines the roadmap for KubeVela from October 2022 to December 2022, detailing core platform features, third-party integrations, and best practices.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 15:29:32", "type": "best_practices", "page_metadata": {"viewport": "width=device-width, initial-scale=1.0", "msapplication-config": "/img/favicons/browserconfig.xml", "docsearch:version": "v1.10", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_tag": "docs-default-v1.10", "twitter:card": "summary_large_image", "ogTitle": "Roadmap 2022.12 | KubeVela", "docsearch:language": "en", "ogDescription": "Date: 2022-10-01 to 2022-12-31", "docusaurus_version": "v1.10", "og:description": "Date: 2022-10-01 to 2022-12-31", "ogUrl": "https://kubevela.io/docs/roadmap/2022-12-roadmap/", "generator": "Docusaurus v2.4.3", "theme-color": "#ffffff", "og:url": "https://kubevela.io/docs/roadmap/2022-12-roadmap/", "docsearch:docusaurus_tag": "docs-default-v1.10", "docusaurus_locale": "en", "og:title": "Roadmap 2022.12 | KubeVela", "title": "Roadmap 2022.12 | KubeVela", "language": "en", "description": "Date: 2022-10-01 to 2022-12-31", "scrapeId": "59478c6a-1071-4259-a3c0-cb437006d77a", "sourceURL": "https://kubevela.io/docs/roadmap/2022-12-roadmap", "url": "https://kubevela.io/docs/roadmap/2022-12-roadmap/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela Quick Start\"?\n\nAssistant: This documentation provides a guide to deploying your first application using KubeVela.\n\nHere's a detailed explanation:\n\n\n## Deploy a classic application\nBelow is a classic KubeVela application which contains one component with one operational trait, basically, it means to deploy a container image as webservice with one replica. Additionally, there are three policies and workflow steps, it means to deploy the application into two different environments with different configurations.\n\n```codeBlockLines_e6Vv\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: first-vela-app\nspec:\n  components:\n    - name: express-server\n      type: webservice\n      properties:\n        image: oamdev/hello-world\n        ports:\n         - port: 8000\n           expose: true\n      traits:\n        - type: scaler\n          properties:\n            replicas: 1\n  policies:\n    - name: target-default\n      type: topology\n      properties:\n        # The cluster with name local is installed the KubeVela.\n        clusters: [\"local\"]\n        namespace: \"default\"\n    - name: target-prod\n      type: topology\n      properties:\n        clusters: [\"local\"]\n        # This namespace must be created before deploying.\n        namespace: \"prod\"\n    - name: deploy-ha\n      type: override\n      properties:\n        components:\n          - type: webservice\n            traits:\n              - type: scaler\n                properties:\n                  replicas: 2\n  workflow:\n    steps:\n      - name: deploy2default\n        type: deploy\n        properties:\n          policies: [\"target-default\"]\n      - name: manual-approval\n        type: suspend\n      - name: deploy2prod\n        type: deploy\n        properties:\n          policies: [\"target-prod\", \"deploy-ha\"]\n```\n\n- Create an environment for your first app.\n\n```codeBlockLines_e6Vv\n# This command will create a namespace in the local cluster\nvela env init prod --namespace prod\n```\n\nexpected output\n\n```codeBlockLines_e6Vv\nenvironment prod with namespace prod created\n```\n\n- Starting deploy the application\n\n```codeBlockLines_e6Vv\nvela up -f https://kubevela.net/example/applications/first-app.yaml\n```\n\nexpected output\n\n```codeBlockLines_e6Vv\nApplying an application in vela K8s object format...\nI0516 15:45:18.123356   27156 apply.go:107] \"creating object\" name=\"first-vela-app\" resource=\"core.oam.dev/v1beta1, Kind=Application\"\n✅ App has been deployed 🚀🚀🚀\n    Port forward: vela port-forward first-vela-app\n             SSH: vela exec first-vela-app\n         Logging: vela logs first-vela-app\n      App status: vela status first-vela-app\n        Endpoint: vela status first-vela-app --endpoint\nApplication prod/first-vela-app applied.\n```\n\n- View the process and status of the application deploy\n\n```codeBlockLines_e6Vv\nvela status first-vela-app\n```\n\nexpected output\n\n```codeBlockLines_e6Vv\nAbout:\n\n  Name:         first-vela-app\n  Namespace:    prod\n  Created at:   2022-05-16 15:45:18 +0800 CST\n  Status:       workflowSuspending\n\nWorkflow:\n\n  ...\n\nServices:\n\n  - Name: express-server\n    Cluster: local  Namespace: default\n    Type: webservice\n    Healthy Ready:1/1\n    Traits:\n      ✅ scaler\n```\n\nThe application will become a `workflowSuspending` status, it means the workflow has finished the first two steps and waiting for manual approval as the step specified.\n\n- Access the application\n\nWe can check the application by:\n\n```codeBlockLines_e6Vv\nvela port-forward first-vela-app 8000:8000\n```\n\nIt will invoke your browser and your can see the website:\n\nexpected output\n\n```codeBlockLines_e6Vv\n<xmp>\nHello KubeVela! Make shipping applications more enjoyable.\n\n...snip...\n```\n\n- Resume the workflow\n\nAfter we finished checking the application, we can approve the workflow to continue:\n\n```codeBlockLines_e6Vv\nvela workflow resume first-vela-app\n```\n\nexpected output\n\n```codeBlockLines_e6Vv\nSuccessfully resume workflow: first-vela-app\n```\n\nThen the rest will be delivered in the `prod` namespace:\n\n```codeBlockLines_e6Vv\nvela status first-vela-app\n```\n\nexpected output\n\n```codeBlockLines_e6Vv\nAbout:\n\n  Name:         first-vela-app\n  Namespace:    prod\n  Created at:   2022-05-16 15:45:18 +0800 CST\n  Status:       running\n\nWorkflow:\n\n  ...snipt...\n\nServices:\n\n  - Name: express-server\n    Cluster: local  Namespace: prod\n    Type: webservice\n    Healthy Ready:2/2\n    Traits:\n      ✅ scaler\n  - Name: express-server\n    Cluster: local  Namespace: default\n    Type: webservice\n    Healthy Ready:1/1\n    Traits:\n      ✅ scaler\n```\n\nGreat! You have finished deploying your first KubeVela application, you can also view and manage it in UI.\n\n## Manage application with UI Console\nAfter finished [the installation of VelaUX](https://kubevela.io/docs/v1.8/install/#2-install-velaux), you can view and manage the application created.\n\n- Port forward the UI if you don't have endpoint for access:\n\n```codeBlockLines_e6Vv\nvela port-forward addon-velaux -n vela-system 8080:80\n```\n\n- VelaUX need authentication, default username is `admin` and the password is **`VelaUX12345`**.\n\nIt requires you to override with a new password for the first login, please make sure to remember the new password.\n\n- Check the resources deployed\n\nClick the application card, then you can view the details of the application.\n\n![first-app-graph](https://static.kubevela.net/images/1.5/first-app-graph.jpg)\n\nThe UI console shares a different metadata layer with the controller. It's more like a PaaS architecture of a company which choose a database as the source of truth instead of relying on the etcd of Kubernetes.\n\nBy default, if you're using CLI to manage the applications directly from Kubernetes API, we will sync the metadata to UI backend automatically. Once you deployed the application from the UI console, the automatic sync process will be stopped as the source of truth may be changed.\n\n**Tip:** If the namespace of the application operated by CLI has already been associated with the corresponding environment in UI, then the application will be automatically synchronized to the project associated with that environment in UI. Otherwise, the application will be synchronized to the default project.\nIf you want to specify which project in UI console an application should be synchronized to, please refer to [Creating environments for the project](https://kubevela.io/docs/v1.8/how-to/dashboard/user/project/#creating-environments-for-the-project).\n\nIf there're any changes happen from CLI after that, the UI console will detect the difference and show it for you. However, it's not recommended to modify the application properties from both sides.\n\nIn conclusion, if you're a CLI/YAML/GitOps user, you'd better just use CLI to manage the application CRD and just use the UI console (velaux) as a dashboard. Once you've managed the app from the UI console, you need to align the behavior and manage apps from UI, API, or Webhook provided by velaux.\n\n## Clean up\n```codeBlockLines_e6Vv\nvela delete first-vela-app\n```\n\nexpected output\n\n```codeBlockLines_e6Vv\nDeleting Application \"first-vela-app\"\napp \"first-vela-app\" deleted from namespace \"prod\"\n```\n\nThat's it! You succeed at the first application delivery. Congratulation!\n\n## Next Step\n- View [Core Concepts](https://kubevela.io/docs/v1.8/getting-started/core-concept/) to learn more about how it works.\n- View [User Guide](https://kubevela.io/docs/v1.8/tutorials/webservice/) to look on more of what you can achieve with KubeVela.\n\n- [Deploy a classic application](https://kubevela.io/docs/v1.8/quick-start/#deploy-a-classic-application)\n- [Manage application with UI Console](https://kubevela.io/docs/v1.8/quick-start/#manage-application-with-ui-console)\n- [Clean up](https://kubevela.io/docs/v1.8/quick-start/#clean-up)\n- [Next Step](https://kubevela.io/docs/v1.8/quick-start/#next-step)\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.8/quick-start", "title": "KubeVela Quick Start", "description": "This documentation provides a guide to deploying your first application using KubeVela.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 15:31:20", "type": "overview", "page_metadata": {"language": "en", "ogUrl": "https://kubevela.io/docs/v1.8/quick-start/", "title": "Deploy First Application | KubeVela", "docsearch:version": "v1.8", "og:title": "Deploy First Application | KubeVela", "viewport": "width=device-width, initial-scale=1.0", "ogTitle": "Deploy First Application | KubeVela", "ogDescription": "Before starting, please confirm that you've installed KubeVela and enabled the VelaUX addon according to the installation guide.", "og:url": "https://kubevela.io/docs/v1.8/quick-start/", "docsearch:docusaurus_tag": "docs-default-v1.8", "og:description": "Before starting, please confirm that you've installed KubeVela and enabled the VelaUX addon according to the installation guide.", "docusaurus_tag": "docs-default-v1.8", "docusaurus_locale": "en", "generator": "Docusaurus v2.4.3", "description": "Before starting, please confirm that you've installed KubeVela and enabled the VelaUX addon according to the installation guide.", "theme-color": "#ffffff", "msapplication-config": "/img/favicons/browserconfig.xml", "docsearch:language": "en", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "twitter:card": "summary_large_image", "docusaurus_version": "v1.8", "scrapeId": "43251ee0-c1ee-4627-9ecb-07e5ed4001b6", "sourceURL": "https://kubevela.io/docs/v1.8/quick-start", "url": "https://kubevela.io/docs/v1.8/quick-start/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"KubeVela Quick Start\"?\n\nAssistant: Here are some code examples:\n\n### KubeVela Application Definition\n```yaml\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: first-vela-app\nspec:\n  components:\n    - name: express-server\n      type: webservice\n      properties:\n        image: oamdev/hello-world\n        ports:\n         - port: 8000\n           expose: true\n      traits:\n        - type: scaler\n          properties:\n            replicas: 1\n  policies:\n    - name: target-default\n      type: topology\n      properties:\n        clusters: [\"local\"]\n        namespace: \"default\"\n    - name: target-prod\n      type: topology\n      properties:\n        clusters: [\"local\"]\n        namespace: \"prod\"\n    - name: deploy-ha\n      type: override\n      properties:\n        components:\n          - type: webservice\n            traits:\n              - type: scaler\n                properties:\n                  replicas: 2\n  workflow:\n    steps:\n      - name: deploy2default\n        type: deploy\n        properties:\n          policies: [\"target-default\"]\n      - name: manual-approval\n        type: suspend\n      - name: deploy2prod\n        type: deploy\n        properties:\n          policies: [\"target-prod\", \"deploy-ha\"]\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.8/quick-start", "title": "KubeVela Quick Start", "description": "This documentation provides a guide to deploying your first application using KubeVela.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 15:31:20", "type": "code_examples", "page_metadata": {"language": "en", "ogUrl": "https://kubevela.io/docs/v1.8/quick-start/", "title": "Deploy First Application | KubeVela", "docsearch:version": "v1.8", "og:title": "Deploy First Application | KubeVela", "viewport": "width=device-width, initial-scale=1.0", "ogTitle": "Deploy First Application | KubeVela", "ogDescription": "Before starting, please confirm that you've installed KubeVela and enabled the VelaUX addon according to the installation guide.", "og:url": "https://kubevela.io/docs/v1.8/quick-start/", "docsearch:docusaurus_tag": "docs-default-v1.8", "og:description": "Before starting, please confirm that you've installed KubeVela and enabled the VelaUX addon according to the installation guide.", "docusaurus_tag": "docs-default-v1.8", "docusaurus_locale": "en", "generator": "Docusaurus v2.4.3", "description": "Before starting, please confirm that you've installed KubeVela and enabled the VelaUX addon according to the installation guide.", "theme-color": "#ffffff", "msapplication-config": "/img/favicons/browserconfig.xml", "docsearch:language": "en", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "twitter:card": "summary_large_image", "docusaurus_version": "v1.8", "scrapeId": "43251ee0-c1ee-4627-9ecb-07e5ed4001b6", "sourceURL": "https://kubevela.io/docs/v1.8/quick-start", "url": "https://kubevela.io/docs/v1.8/quick-start/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela Quick Start\"?\n\nAssistant: Here are the recommended best practices:\n\n• If the namespace of the application operated by CLI has already been associated with the corresponding environment in UI, then the application will be automatically synchronized to the project associated with that environment in UI.\n• It's not recommended to modify the application properties from both CLI and UI sides.\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.8/quick-start", "title": "KubeVela Quick Start", "description": "This documentation provides a guide to deploying your first application using KubeVela.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 15:31:20", "type": "best_practices", "page_metadata": {"language": "en", "ogUrl": "https://kubevela.io/docs/v1.8/quick-start/", "title": "Deploy First Application | KubeVela", "docsearch:version": "v1.8", "og:title": "Deploy First Application | KubeVela", "viewport": "width=device-width, initial-scale=1.0", "ogTitle": "Deploy First Application | KubeVela", "ogDescription": "Before starting, please confirm that you've installed KubeVela and enabled the VelaUX addon according to the installation guide.", "og:url": "https://kubevela.io/docs/v1.8/quick-start/", "docsearch:docusaurus_tag": "docs-default-v1.8", "og:description": "Before starting, please confirm that you've installed KubeVela and enabled the VelaUX addon according to the installation guide.", "docusaurus_tag": "docs-default-v1.8", "docusaurus_locale": "en", "generator": "Docusaurus v2.4.3", "description": "Before starting, please confirm that you've installed KubeVela and enabled the VelaUX addon according to the installation guide.", "theme-color": "#ffffff", "msapplication-config": "/img/favicons/browserconfig.xml", "docsearch:language": "en", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "twitter:card": "summary_large_image", "docusaurus_version": "v1.8", "scrapeId": "43251ee0-c1ee-4627-9ecb-07e5ed4001b6", "sourceURL": "https://kubevela.io/docs/v1.8/quick-start", "url": "https://kubevela.io/docs/v1.8/quick-start/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela Workflow Dependencies\"?\n\nAssistant: This section will introduce how to specify dependencies for workflow steps.\n\nHere's a detailed explanation:\n\n\n## How to use\nIn KubeVela, the dependencies between steps can be specified by `dependsOn` in the steps.\n\nFor example: we want to send a message notification after deploying the component:\n\n```yaml\nworkflow:\n  steps:\n    - name: comp\n      type: apply-component\n    - name: notify\n      type: notification\n      dependsOn:\n        - comp\n```\n\nIn this case, KubeVela waits for the completion of the step `comp` before executing the `notify` step to send a message notification.\n\nApply the following YAML:\n\n```yaml\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: dependsOn-app\n  namespace: default\nspec:\n  components:\n  - name: express-server\n    type: webservice\n    properties:\n      image: oamdev/hello-world\n      ports:\n        - port: 8000\n  workflow:\n    steps:\n      - name: comp\n        type: apply-component\n        properties:\n          component: express-server\n      - name: slack-message\n        type: notification\n        dependsOn:\n          - comp\n        properties:\n          slack:\n            url:\n              value: <your slack url>\n            message:\n              text: depends on comp\n```\n\n## Expected outcome\nUse `vela status` to check the status of the Application:\n\n```bash\n$ vela status depends\nAbout:\n\n  Name:         depends\n  Namespace:    default\n  Created at:   2022-06-24 17:20:50 +0800 CST\n  Status:       running\n\nWorkflow:\n\n  mode: StepByStep\n  finished: true\n  Suspend: false\n  Terminated: false\n  Steps\n  - id:e6votsntq3\n    name:comp\n    type:apply-component\n    phase:succeeded\n    message:\n  - id:esvzxehgwc\n    name:slack-message\n    type:notification\n    phase:succeeded\n    message:\n\nServices:\n\n  - Name: express-server\n    Cluster: local  Namespace: default\n    Type: webservice\n    Healthy Ready:1/1\n    No trait applied\n```\n\nAs you can see, all step statuses are succeeded. And when the component is successfully deployed, a message is also sent in slack.\n", "metadata": {"source_url": "https://kubevela.io/docs/end-user/workflow/dependency", "title": "KubeVela Workflow Dependencies", "description": "This section will introduce how to specify dependencies for workflow steps.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-02-28 15:31:35", "type": "overview", "page_metadata": {"docusaurus_tag": "docs-default-v1.10", "ogUrl": "https://kubevela.io/docs/end-user/workflow/dependency/", "og:description": "This section will introduce how to specify dependencies for workflow steps.", "twitter:card": "summary_large_image", "og:url": "https://kubevela.io/docs/end-user/workflow/dependency/", "docusaurus_locale": "en", "msapplication-config": "/img/favicons/browserconfig.xml", "docsearch:version": "v1.10", "description": "This section will introduce how to specify dependencies for workflow steps.", "language": "en", "docsearch:language": "en", "ogDescription": "This section will introduce how to specify dependencies for workflow steps.", "generator": "Docusaurus v2.4.3", "theme-color": "#ffffff", "ogTitle": "Dependency | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "og:title": "Dependency | KubeVela", "docusaurus_version": "v1.10", "viewport": "width=device-width, initial-scale=1.0", "title": "Dependency | KubeVela", "docsearch:docusaurus_tag": "docs-default-v1.10", "scrapeId": "59fcb265-1f9f-441e-98bc-814acd938ab9", "sourceURL": "https://kubevela.io/docs/end-user/workflow/dependency", "url": "https://kubevela.io/docs/end-user/workflow/dependency/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"KubeVela Workflow Dependencies\"?\n\nAssistant: Here are some code examples:\n\n### Workflow Steps Example\n```yaml\n```yaml\nworkflow:\n  steps:\n    - name: comp\n      type: apply-component\n    - name: notify\n      type: notification\n      dependsOn:\n        - comp\n```\n```\n\n### Application YAML Example\n```yaml\n```yaml\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: dependsOn-app\n  namespace: default\nspec:\n  components:\n  - name: express-server\n    type: webservice\n    properties:\n      image: oamdev/hello-world\n      ports:\n        - port: 8000\n  workflow:\n    steps:\n      - name: comp\n        type: apply-component\n        properties:\n          component: express-server\n      - name: slack-message\n        type: notification\n        dependsOn:\n          - comp\n        properties:\n          slack:\n            url:\n              value: <your slack url>\n            message:\n              text: depends on comp\n```\n```\n\n### Check Application Status Command\n```yaml\n```bash\n$ vela status depends\n```\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/end-user/workflow/dependency", "title": "KubeVela Workflow Dependencies", "description": "This section will introduce how to specify dependencies for workflow steps.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-02-28 15:31:35", "type": "code_examples", "page_metadata": {"docusaurus_tag": "docs-default-v1.10", "ogUrl": "https://kubevela.io/docs/end-user/workflow/dependency/", "og:description": "This section will introduce how to specify dependencies for workflow steps.", "twitter:card": "summary_large_image", "og:url": "https://kubevela.io/docs/end-user/workflow/dependency/", "docusaurus_locale": "en", "msapplication-config": "/img/favicons/browserconfig.xml", "docsearch:version": "v1.10", "description": "This section will introduce how to specify dependencies for workflow steps.", "language": "en", "docsearch:language": "en", "ogDescription": "This section will introduce how to specify dependencies for workflow steps.", "generator": "Docusaurus v2.4.3", "theme-color": "#ffffff", "ogTitle": "Dependency | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "og:title": "Dependency | KubeVela", "docusaurus_version": "v1.10", "viewport": "width=device-width, initial-scale=1.0", "title": "Dependency | KubeVela", "docsearch:docusaurus_tag": "docs-default-v1.10", "scrapeId": "59fcb265-1f9f-441e-98bc-814acd938ab9", "sourceURL": "https://kubevela.io/docs/end-user/workflow/dependency", "url": "https://kubevela.io/docs/end-user/workflow/dependency/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela Workflow Dependencies\"?\n\nAssistant: Here are the recommended best practices:\n\n• In versions 1.5+, you can display the execution method of the specified workflow steps (e.g., change to DAG parallel execution).\n• Use `vela status` to check the status of the Application.\n", "metadata": {"source_url": "https://kubevela.io/docs/end-user/workflow/dependency", "title": "KubeVela Workflow Dependencies", "description": "This section will introduce how to specify dependencies for workflow steps.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-02-28 15:31:35", "type": "best_practices", "page_metadata": {"docusaurus_tag": "docs-default-v1.10", "ogUrl": "https://kubevela.io/docs/end-user/workflow/dependency/", "og:description": "This section will introduce how to specify dependencies for workflow steps.", "twitter:card": "summary_large_image", "og:url": "https://kubevela.io/docs/end-user/workflow/dependency/", "docusaurus_locale": "en", "msapplication-config": "/img/favicons/browserconfig.xml", "docsearch:version": "v1.10", "description": "This section will introduce how to specify dependencies for workflow steps.", "language": "en", "docsearch:language": "en", "ogDescription": "This section will introduce how to specify dependencies for workflow steps.", "generator": "Docusaurus v2.4.3", "theme-color": "#ffffff", "ogTitle": "Dependency | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "og:title": "Dependency | KubeVela", "docusaurus_version": "v1.10", "viewport": "width=device-width, initial-scale=1.0", "title": "Dependency | KubeVela", "docsearch:docusaurus_tag": "docs-default-v1.10", "scrapeId": "59fcb265-1f9f-441e-98bc-814acd938ab9", "sourceURL": "https://kubevela.io/docs/end-user/workflow/dependency", "url": "https://kubevela.io/docs/end-user/workflow/dependency/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela Roadmap (2020-12)\"?\n\nAssistant: This page outlines the roadmap for KubeVela from October 2020 to December 2020, detailing core platform features, user experience improvements, integrations, and project enhancements.\n\nHere's a detailed explanation:\n\n\n## Core Platform\n- Merge CUE based abstraction into OAM user facing objects.\n- Compatibility checking between workload types and traits and `conflictsWith` feature.\n- Simplify revision mechanism in kubevela core.\n- Capability Center (i.e. addon registry).\n- CRD registry to manage the third-party dependencies easier.\n- Dapr trait as built-in capability.\n\n## User Experience\n- Smart Dashboard based on CUE schema.\n- Make defining CUE templates easier.\n- Generate reference doc automatically for capability based on CUE schema.\n- Better application observability.\n\n## Integration with other projects\n- Integrate with ArgoCD to do GitOps style application deployment.\n\n## Project improvement\n- Contributing the modularizing Flagger changes to upstream.\n", "metadata": {"source_url": "https://kubevela.io/docs/roadmap/2020-12-roadmap", "title": "KubeVela Roadmap (2020-12)", "description": "This page outlines the roadmap for KubeVela from October 2020 to December 2020, detailing core platform features, user experience improvements, integrations, and project enhancements.", "has_code_examples": false, "has_best_practices": false, "section_count": 4, "timestamp": "2025-02-28 15:31:41", "type": "overview", "page_metadata": {"title": "Roadmap | KubeVela", "ogTitle": "Roadmap | KubeVela", "docusaurus_locale": "en", "viewport": "width=device-width, initial-scale=1.0", "ogUrl": "https://kubevela.io/docs/roadmap/2020-12-roadmap/", "docusaurus_tag": "docs-default-v1.10", "docusaurus_version": "v1.10", "ogDescription": "Date: 2020-10-01 to 2020-12-31", "og:description": "Date: 2020-10-01 to 2020-12-31", "language": "en", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "generator": "Docusaurus v2.4.3", "twitter:card": "summary_large_image", "og:url": "https://kubevela.io/docs/roadmap/2020-12-roadmap/", "msapplication-config": "/img/favicons/browserconfig.xml", "theme-color": "#ffffff", "docsearch:version": "v1.10", "og:title": "Roadmap | KubeVela", "docsearch:docusaurus_tag": "docs-default-v1.10", "description": "Date: 2020-10-01 to 2020-12-31", "docsearch:language": "en", "scrapeId": "f03acca9-6e3a-4e0b-8ed4-9b06c658a891", "sourceURL": "https://kubevela.io/docs/roadmap/2020-12-roadmap", "url": "https://kubevela.io/docs/roadmap/2020-12-roadmap/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"MySQL Exporter\"?\n\nAssistant: Prometheus exporter for MySQL server metrics.\n\nHere's a detailed explanation:\n\n\n## Supported Versions\n- MySQL >= 5.6\n- MariaDB >= 10.3\n\nnote\n\nNot all collection methods are supported on MySQL/MariaDB < 5.6\n\n## Usecases\n- Work as a trait.\n\n```codeBlockLines_e6Vv\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: mysql\n  namespace: default\nspec:\n  components:\n  - name: mysql\n    type: helm\n    properties:\n      chart: mysql\n      repoType: helm\n      retries: 3\n      secretRef: \"\"\n      url: https://charts.bitnami.com/bitnami\n      values:\n        auth:\n          rootPassword: yueda123\n        primary:\n          persistence:\n            enabled: false\n        secondary:\n          persistence:\n            enabled: false\n      version: 9.2.0\n    traits:\n    - properties:\n        disableAnnotation: false\n        mysqlHost: mysql\n        mysqlPort: 3306\n        name: mysql-server-exporter\n        password: yueda123\n        username: root\n        version: v0.14.0\n      type: mysql-exporter\n```\n\n- Work as a component.\n\n> This mode also is suitable to the mysql serve that not managed by KubeVela.\n\n```codeBlockLines_e6Vv\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: mysql\n  namespace: default\nspec:\n  components:\n  - name: mysql\n    type: helm\n    properties:\n      chart: mysql\n      repoType: helm\n      retries: 3\n      secretRef: \"\"\n      url: https://charts.bitnami.com/bitnami\n      values:\n        auth:\n          rootPassword: yueda123\n        primary:\n          persistence:\n            enabled: false\n        secondary:\n          persistence:\n            enabled: false\n      version: 9.2.0\n  - name: mysql-exporter\n    properties:\n      disableAnnotation: false\n      mysqlHost: mysql-server\n      mysqlPort: 3306\n      name: mysql-server-exporter\n      password: yueda123\n      username: root\n      version: v0.14.0\n    type: mysql-exporter-server\n```\n", "metadata": {"source_url": "https://kubevela.io/docs/reference/addons/mysql-exporter", "title": "MySQL Exporter", "description": "Prometheus exporter for MySQL server metrics.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-02-28 15:31:59", "type": "overview", "page_metadata": {"viewport": "width=device-width, initial-scale=1.0", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "og:description": "Prometheus exporter for MySQL server metrics.", "ogDescription": "Prometheus exporter for MySQL server metrics.", "twitter:card": "summary_large_image", "docsearch:language": "en", "description": "Prometheus exporter for MySQL server metrics.", "title": "Mysql Exporter | KubeVela", "theme-color": "#ffffff", "generator": "Docusaurus v2.4.3", "ogTitle": "Mysql Exporter | KubeVela", "og:title": "Mysql Exporter | KubeVela", "docusaurus_tag": "docs-default-v1.10", "og:url": "https://kubevela.io/docs/reference/addons/mysql-exporter/", "docusaurus_locale": "en", "docsearch:version": "v1.10", "docusaurus_version": "v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "ogUrl": "https://kubevela.io/docs/reference/addons/mysql-exporter/", "language": "en", "docsearch:docusaurus_tag": "docs-default-v1.10", "scrapeId": "ae84a2a6-5518-4cee-abda-a17c6b7af00e", "sourceURL": "https://kubevela.io/docs/reference/addons/mysql-exporter", "url": "https://kubevela.io/docs/reference/addons/mysql-exporter/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"MySQL Exporter\"?\n\nAssistant: Here are some code examples:\n\n### Work as a trait\n```yaml\n```codeBlockLines_e6Vv\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: mysql\n  namespace: default\nspec:\n  components:\n  - name: mysql\n    type: helm\n    properties:\n      chart: mysql\n      repoType: helm\n      retries: 3\n      secretRef: \"\"\n      url: https://charts.bitnami.com/bitnami\n      values:\n        auth:\n          rootPassword: yueda123\n        primary:\n          persistence:\n            enabled: false\n        secondary:\n          persistence:\n            enabled: false\n      version: 9.2.0\n    traits:\n    - properties:\n        disableAnnotation: false\n        mysqlHost: mysql\n        mysqlPort: 3306\n        name: mysql-server-exporter\n        password: yueda123\n        username: root\n        version: v0.14.0\n      type: mysql-exporter\n```\n```\n\n### Work as a component\n```yaml\n```codeBlockLines_e6Vv\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: mysql\n  namespace: default\nspec:\n  components:\n  - name: mysql\n    type: helm\n    properties:\n      chart: mysql\n      repoType: helm\n      retries: 3\n      secretRef: \"\"\n      url: https://charts.bitnami.com/bitnami\n      values:\n        auth:\n          rootPassword: yueda123\n        primary:\n          persistence:\n            enabled: false\n        secondary:\n          persistence:\n            enabled: false\n      version: 9.2.0\n  - name: mysql-exporter\n    properties:\n      disableAnnotation: false\n      mysqlHost: mysql-server\n      mysqlPort: 3306\n      name: mysql-server-exporter\n      password: yueda123\n      username: root\n      version: v0.14.0\n    type: mysql-exporter-server\n```\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/reference/addons/mysql-exporter", "title": "MySQL Exporter", "description": "Prometheus exporter for MySQL server metrics.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-02-28 15:31:59", "type": "code_examples", "page_metadata": {"viewport": "width=device-width, initial-scale=1.0", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "og:description": "Prometheus exporter for MySQL server metrics.", "ogDescription": "Prometheus exporter for MySQL server metrics.", "twitter:card": "summary_large_image", "docsearch:language": "en", "description": "Prometheus exporter for MySQL server metrics.", "title": "Mysql Exporter | KubeVela", "theme-color": "#ffffff", "generator": "Docusaurus v2.4.3", "ogTitle": "Mysql Exporter | KubeVela", "og:title": "Mysql Exporter | KubeVela", "docusaurus_tag": "docs-default-v1.10", "og:url": "https://kubevela.io/docs/reference/addons/mysql-exporter/", "docusaurus_locale": "en", "docsearch:version": "v1.10", "docusaurus_version": "v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "ogUrl": "https://kubevela.io/docs/reference/addons/mysql-exporter/", "language": "en", "docsearch:docusaurus_tag": "docs-default-v1.10", "scrapeId": "ae84a2a6-5518-4cee-abda-a17c6b7af00e", "sourceURL": "https://kubevela.io/docs/reference/addons/mysql-exporter", "url": "https://kubevela.io/docs/reference/addons/mysql-exporter/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"MySQL Exporter\"?\n\nAssistant: Here are the recommended best practices:\n\n• Not all collection methods are supported on MySQL/MariaDB < 5.6\n", "metadata": {"source_url": "https://kubevela.io/docs/reference/addons/mysql-exporter", "title": "MySQL Exporter", "description": "Prometheus exporter for MySQL server metrics.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-02-28 15:31:59", "type": "best_practices", "page_metadata": {"viewport": "width=device-width, initial-scale=1.0", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "og:description": "Prometheus exporter for MySQL server metrics.", "ogDescription": "Prometheus exporter for MySQL server metrics.", "twitter:card": "summary_large_image", "docsearch:language": "en", "description": "Prometheus exporter for MySQL server metrics.", "title": "Mysql Exporter | KubeVela", "theme-color": "#ffffff", "generator": "Docusaurus v2.4.3", "ogTitle": "Mysql Exporter | KubeVela", "og:title": "Mysql Exporter | KubeVela", "docusaurus_tag": "docs-default-v1.10", "og:url": "https://kubevela.io/docs/reference/addons/mysql-exporter/", "docusaurus_locale": "en", "docsearch:version": "v1.10", "docusaurus_version": "v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "ogUrl": "https://kubevela.io/docs/reference/addons/mysql-exporter/", "language": "en", "docsearch:docusaurus_tag": "docs-default-v1.10", "scrapeId": "ae84a2a6-5518-4cee-abda-a17c6b7af00e", "sourceURL": "https://kubevela.io/docs/reference/addons/mysql-exporter", "url": "https://kubevela.io/docs/reference/addons/mysql-exporter/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"Check Reference Documentation\"?\n\nAssistant: This documentation shows how to check the detailed schema of a given capability (i.e. workload type or trait) in KubeVela.\n\nHere's a detailed explanation:\n\n\n## Using Browser\nActually, as a important part of its \"extensibility\" design, KubeVela will always **automatically generate** reference documentation for every workload type or trait registered in your Kubernetes cluster, based on its template in definition of course. This feature works for any capability: either built-in ones or your own workload types/traits.\n\nThus, as an end user, the only thing you need to do is:\n\n```codeBlockLines_e6Vv\n$ vela show WORKLOAD_TYPE or TRAIT --web\n```\n\nThis command will automatically open the reference documentation for given workload type or trait in your default browser.\n\n## For Workload Types\nLet's take `$ vela show webservice --web` as example. The detailed schema documentation for `Web Service` workload type will show up immediately as below:\n\n![](https://kubevela.io/assets/images/vela_show_webservice-9b50b8ef8367026e470bb34dcc4f50be.jpg)\n\nNote that there's in the section named `Specification`, it even provides you with a full sample for the usage of this workload type with a fake name `my-service-name`.\n\n## For Traits\nSimilarly, we can also do `$ vela show autoscale --web`:\n\n![](https://kubevela.io/assets/images/vela_show_autoscale-1eefa0ae534277bc073ad1c8302f7882.jpg)\n\nWith these auto-generated reference documentations, we could easily complete the application description by simple copy-paste, for example:\n\n```codeBlockLines_e6Vv\nname: helloworld\n\nservices:\n  backend: # copy-paste from the webservice ref doc above\n    image: oamdev/testapp:v1\n    cmd: [\"node\", \"server.js\"]\n    port: 8080\n    cpu: \"0.1\"\n\n    autoscale: # copy-paste and modify from autoscaler ref doc above\n      min: 1\n      max: 8\n      cron:\n        startAt:  \"19:00\"\n        duration: \"2h\"\n        days:     \"Friday\"\n        replicas: 4\n        timezone: \"America/Los_Angeles\"\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/developers/check-ref-doc", "title": "Check Reference Documentation", "description": "This documentation shows how to check the detailed schema of a given capability (i.e. workload type or trait) in KubeVela.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 15:32:20", "type": "overview", "page_metadata": {"og:title": "The Reference Documentation Guide of Capabilities | KubeVela", "docsearch:language": "en", "og:description": "In this documentation, we will show how to check the detailed schema of a given capability (i.e. workload type or trait).", "docsearch:version": "v1.10", "og:url": "https://kubevela.io/docs/developers/check-ref-doc/", "docusaurus_version": "v1.10", "docusaurus_tag": "docs-default-v1.10", "docusaurus_locale": "en", "title": "The Reference Documentation Guide of Capabilities | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogUrl": "https://kubevela.io/docs/developers/check-ref-doc/", "ogTitle": "The Reference Documentation Guide of Capabilities | KubeVela", "ogDescription": "In this documentation, we will show how to check the detailed schema of a given capability (i.e. workload type or trait).", "language": "en", "generator": "Docusaurus v2.4.3", "description": "In this documentation, we will show how to check the detailed schema of a given capability (i.e. workload type or trait).", "theme-color": "#ffffff", "twitter:card": "summary_large_image", "viewport": "width=device-width, initial-scale=1.0", "msapplication-config": "/img/favicons/browserconfig.xml", "docsearch:docusaurus_tag": "docs-default-v1.10", "scrapeId": "23f91675-b305-4f2a-a2c2-d19500307b79", "sourceURL": "https://kubevela.io/docs/developers/check-ref-doc", "url": "https://kubevela.io/docs/developers/check-ref-doc/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"Check Reference Documentation\"?\n\nAssistant: Here are some code examples:\n\n### Show Workload Type in Browser\n```yaml\n$ vela show WORKLOAD_TYPE or TRAIT --web\n```\n\n### Show Web Service Workload Type in Browser\n```yaml\n$ vela show webservice --web\n```\n\n### Show Autoscale Trait in Browser\n```yaml\n$ vela show autoscale --web\n```\n\n### Show Web Service in Terminal\n```yaml\n$ vela show webservice\n# Properties\n+-------+----------------------------------------------------------------------------------+---------------+----------+---------+\n| NAME  |                                   DESCRIPTION                                    |     TYPE      | REQUIRED | DEFAULT |\n+-------+----------------------------------------------------------------------------------+---------------+----------+---------+\n| cmd   | Commands to run in the container                                                 | []string      | false    |         |\n| env   | Define arguments by using environment variables                                  | [[]env](#env) | false    |         |\n| image | Which image would you like to use for your service                               | string        | true     |         |\n| port  | Which port do you want customer traffic sent to                                  | int           | true     |      80 |\n| cpu   | Number of CPU units for the service, like `0.5` (0.5 CPU core), `1` (1 CPU core) | string        | false    |         |\n+-------+----------------------------------------------------------------------------------+---------------+----------+---------+\n\n## env\n+-----------+-----------------------------------------------------------+-------------------------+----------+---------+\n|   NAME    |                        DESCRIPTION                        |          TYPE           | REQUIRED | DEFAULT |\n+-----------+-----------------------------------------------------------+-------------------------+----------+---------+\n| name      | Environment variable name                                 | string                  | true     |         |\n| value     | The value of the environment variable                     | string                  | false    |         |\n| valueFrom | Specifies a source the value of this var should come from | [valueFrom](#valueFrom) | false    |         |\n+-----------+-----------------------------------------------------------+-------------------------+----------+---------+\n\n### valueFrom\n+--------------+--------------------------------------------------+-------------------------------+----------+---------+\n|     NAME     |                   DESCRIPTION                    |             TYPE              | REQUIRED | DEFAULT |\n+--------------+--------------------------------------------------+-------------------------------+----------+---------+\n| secretKeyRef | Selects a key of a secret in the pod's namespace | [secretKeyRef](#secretKeyRef) | true     |         |\n+--------------+--------------------------------------------------+-------------------------------+----------+---------+\n\n#### secretKeyRef\n+------+------------------------------------------------------------------+--------+----------+---------+\n| NAME |                           DESCRIPTION                            |  TYPE  | REQUIRED | DEFAULT |\n+------+------------------------------------------------------------------+--------+----------+---------+\n| name | The name of the secret in the pod's namespace to select from     | string | true     |         |\n| key  | The key of the secret to select from. Must be a valid secret key | string | true     |         |\n+------+------------------------------------------------------------------+--------+----------+---------+\n\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/developers/check-ref-doc", "title": "Check Reference Documentation", "description": "This documentation shows how to check the detailed schema of a given capability (i.e. workload type or trait) in KubeVela.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 15:32:20", "type": "code_examples", "page_metadata": {"og:title": "The Reference Documentation Guide of Capabilities | KubeVela", "docsearch:language": "en", "og:description": "In this documentation, we will show how to check the detailed schema of a given capability (i.e. workload type or trait).", "docsearch:version": "v1.10", "og:url": "https://kubevela.io/docs/developers/check-ref-doc/", "docusaurus_version": "v1.10", "docusaurus_tag": "docs-default-v1.10", "docusaurus_locale": "en", "title": "The Reference Documentation Guide of Capabilities | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogUrl": "https://kubevela.io/docs/developers/check-ref-doc/", "ogTitle": "The Reference Documentation Guide of Capabilities | KubeVela", "ogDescription": "In this documentation, we will show how to check the detailed schema of a given capability (i.e. workload type or trait).", "language": "en", "generator": "Docusaurus v2.4.3", "description": "In this documentation, we will show how to check the detailed schema of a given capability (i.e. workload type or trait).", "theme-color": "#ffffff", "twitter:card": "summary_large_image", "viewport": "width=device-width, initial-scale=1.0", "msapplication-config": "/img/favicons/browserconfig.xml", "docsearch:docusaurus_tag": "docs-default-v1.10", "scrapeId": "23f91675-b305-4f2a-a2c2-d19500307b79", "sourceURL": "https://kubevela.io/docs/developers/check-ref-doc", "url": "https://kubevela.io/docs/developers/check-ref-doc/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"Check Reference Documentation\"?\n\nAssistant: Here are the recommended best practices:\n\n• KubeVela automatically generates reference documentation for every workload type or trait registered in your Kubernetes cluster.\n• For built-in capabilities, reference docs are already published based on the same doc generation mechanism.\n", "metadata": {"source_url": "https://kubevela.io/docs/developers/check-ref-doc", "title": "Check Reference Documentation", "description": "This documentation shows how to check the detailed schema of a given capability (i.e. workload type or trait) in KubeVela.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 15:32:20", "type": "best_practices", "page_metadata": {"og:title": "The Reference Documentation Guide of Capabilities | KubeVela", "docsearch:language": "en", "og:description": "In this documentation, we will show how to check the detailed schema of a given capability (i.e. workload type or trait).", "docsearch:version": "v1.10", "og:url": "https://kubevela.io/docs/developers/check-ref-doc/", "docusaurus_version": "v1.10", "docusaurus_tag": "docs-default-v1.10", "docusaurus_locale": "en", "title": "The Reference Documentation Guide of Capabilities | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogUrl": "https://kubevela.io/docs/developers/check-ref-doc/", "ogTitle": "The Reference Documentation Guide of Capabilities | KubeVela", "ogDescription": "In this documentation, we will show how to check the detailed schema of a given capability (i.e. workload type or trait).", "language": "en", "generator": "Docusaurus v2.4.3", "description": "In this documentation, we will show how to check the detailed schema of a given capability (i.e. workload type or trait).", "theme-color": "#ffffff", "twitter:card": "summary_large_image", "viewport": "width=device-width, initial-scale=1.0", "msapplication-config": "/img/favicons/browserconfig.xml", "docsearch:docusaurus_tag": "docs-default-v1.10", "scrapeId": "23f91675-b305-4f2a-a2c2-d19500307b79", "sourceURL": "https://kubevela.io/docs/developers/check-ref-doc", "url": "https://kubevela.io/docs/developers/check-ref-doc/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela Roadmap\"?\n\nAssistant: This page outlines the roadmap for KubeVela, detailing the core platform features, user experience improvements, and third-party integrations planned for the version v1.10.\n\nHere's a detailed explanation:\n\n\n## Core Platform\n- Add Application object as the deployment unit applied to k8s control plane.\n  - The new Application object will handle CUE template rendering on the server side. So the appfile would be translated to Application object directly without doing client side rendering.\n  - CLI/UI will be updated to replace ApplicationConfiguration and Component objects with Application object.\n- Integrate Terraform as one of the core templating engines so that platform builders can add Terraform modules as Workloads/Traits into KubeVela.\n- Re-architect API Server to have clean API and storage layer as designed.\n- Automatically sync Catalog server and display packages information as designed.\n- Add Rollout CRD to do native Workload and Application level application rollout management.\n- Support intermediate store (e.g. ConfigMap) and JSON patch operations in data input/output.\n\n## User Experience\n- Rewrite dashboard to support up-to-date Vela object model.\n  - Support dynamic form rendering based on OpenAPI schema generated from Definition objects.\n  - Support displaying pages of applications, capabilities, catalogs.\n- Automatically generate reference docs for capabilities and support displaying them in CLI/UI devtools.\n\n## Third-party integrations\n- Integrate with S2I (Source2Image) tooling like Derrick to enable more developer-friendly workflow in appfile.\n- Integrate with Dapr to enable end-to-end microservice application development and deployment workflow.\n", "metadata": {"source_url": "https://kubevela.io/docs/roadmap/2021-03-roadmap", "title": "KubeVela Roadmap", "description": "This page outlines the roadmap for KubeVela, detailing the core platform features, user experience improvements, and third-party integrations planned for the version v1.10.", "has_code_examples": false, "has_best_practices": false, "section_count": 3, "timestamp": "2025-02-28 15:32:27", "type": "overview", "page_metadata": {"docsearch:version": "v1.10", "docsearch:language": "en", "twitter:card": "summary_large_image", "description": "Date: 2021-01-01 to 2021-03-30", "og:title": "Roadmap | KubeVela", "language": "en", "ogTitle": "Roadmap | KubeVela", "msapplication-config": "/img/favicons/browserconfig.xml", "ogUrl": "https://kubevela.io/docs/roadmap/2021-03-roadmap/", "generator": "Docusaurus v2.4.3", "og:url": "https://kubevela.io/docs/roadmap/2021-03-roadmap/", "docusaurus_tag": "docs-default-v1.10", "ogDescription": "Date: 2021-01-01 to 2021-03-30", "theme-color": "#ffffff", "docusaurus_locale": "en", "og:description": "Date: 2021-01-01 to 2021-03-30", "viewport": "width=device-width, initial-scale=1.0", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "title": "Roadmap | KubeVela", "docsearch:docusaurus_tag": "docs-default-v1.10", "docusaurus_version": "v1.10", "scrapeId": "af6cb29b-da6d-4c74-9e27-78d26cf3ba51", "sourceURL": "https://kubevela.io/docs/roadmap/2021-03-roadmap", "url": "https://kubevela.io/docs/roadmap/2021-03-roadmap/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela Contributor Overview\"?\n\nAssistant: This documentation provides an overview for contributors to KubeVela, including guides on extending KubeVela and contributing to the community.\n\nHere's a detailed explanation:\n\n\n## Extension Guide\nThis part is a guide to help you extend capabilities for KubeVela. Make sure you have already understand the [**core concepts**](https://kubevela.io/docs/v1.9/getting-started/core-concept/) before you start.\n\n### Extend Addons\nBuilding or installing addons is the most important way to extend KubeVela, there's a growing [catalog](https://github.com/kubevela/catalog) of addons you can choose for installation. You can also share your platform extension by KubeVela addon registry.\n\n- [Build Your Own Addon](https://kubevela.io/docs/v1.9/platform-engineers/addon/intro/).\n- [Build Your Addon Registry](https://kubevela.io/docs/v1.9/platform-engineers/addon/addon-registry/).\n- [Extend Cloud Resources by Addon](https://kubevela.io/docs/v1.9/platform-engineers/addon/terraform/).\n\n### Learn CUE to extend more powerful features\nKubeVela use CUE as it's core engine, and you can use CUE and CRD controller to glue almost every infrastructure capabilities.\nAs a result, you can extend more powerful features for your platform.\n\n- Start to [Learn Manage Definition with CUE](https://kubevela.io/docs/v1.9/platform-engineers/cue/basic/).\n- Learn what is [CRD Controller](https://kubernetes.io/docs/concepts/extend-kubernetes/api-extension/custom-resources/) in Kubernetes.\n\n## Contribution Guide\nKubeVela project is initialized and maintained by the cloud native community since day 0 with [bootstrapping contributors from 8+ different organizations](https://github.com/kubevela/community/blob/main/OWNERS.md#bootstrap-contributors). We intend for KubeVela to have an open governance since the very beginning and donate the project to neutral foundation as soon as it's released.\n\nTo help us create a safe and positive community experience for all, we require all participants adhere to the CNCF Community [Code of Conduct](https://github.com/cncf/foundation/blob/main/code-of-conduct.md).\n\nThis part is a guide to help you through the process of contributing to KubeVela.\n\n### Become a contributor\nYou can contribute to KubeVela in several ways including code and non-code contributions,\nwe appreciate every effort you contribute to the community. Here are some examples:\n\n- Contribute to the codebase and docs.\n- Report and triage issues.\n- Organize meetups and user groups in your local area.\n- Help others by answering questions about KubeVela.\n\n### Non-code contribution\nThe Apache way says \"Community Over Code\". Although KubeVela is a CNCF/Linux project, we possess a strong resonance to it. To second and stretch this merit deeper, we regard non-coding contribution as equally important with code contribution for the community's very existence and its future growth.\n\n- Refer to [Non-code Contribution Guide](https://kubevela.io/docs/v1.9/contributor/non-code-contribute/) to know how you could help.\n\n### Code contribution\nUnsure where to begin contributing to KubeVela codebase? Start by browsing issues labeled `good first issue` or `help wanted`.\n\n- [Good first issue](https://github.com/kubevela/kubevela/labels/good%20first%20issue) issues are generally straightforward to complete.\n- [Help wanted](https://github.com/kubevela/kubevela/labels/help%20wanted) issues are problems we would like the community to help us with regardless of complexity.\n- Refer to [Code Contribution Guide](https://kubevela.io/docs/v1.9/contributor/code-contribute/) for more details.\n\nLearn the [Release Process And Cadence](https://kubevela.io/docs/v1.9/contributor/release-process/) to know when your code changes will be released.\n\n### Become a community member\nIf you're interested to become a community member or learn more about the governance, please check the [community membership](https://github.com/kubevela/community/blob/main/community-membership.md) for details.\n\n### Contribute to other community projects\n- [VelaUX Developer Guide](https://github.com/kubevela/velaux/blob/main/CONTRIBUTING.md)\n- [Terraform Controller Developer Guide](https://github.com/oam-dev/terraform-controller/blob/master/CONTRIBUTING.md)\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.9/contributor/overview", "title": "KubeVela Contributor Overview", "description": "This documentation provides an overview for contributors to KubeVela, including guides on extending KubeVela and contributing to the community.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-02-28 15:33:48", "type": "overview", "page_metadata": {"ogUrl": "https://kubevela.io/docs/v1.9/contributor/overview/", "language": "en", "docusaurus_locale": "en", "docsearch:version": "v1.9", "twitter:card": "summary_large_image", "docsearch:docusaurus_tag": "docs-default-v1.9", "og:description": "The developer guide including two parts:", "theme-color": "#ffffff", "viewport": "width=device-width, initial-scale=1.0", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogDescription": "The developer guide including two parts:", "docusaurus_tag": "docs-default-v1.9", "generator": "Docusaurus v2.4.3", "title": "Developer Overview | KubeVela", "description": "The developer guide including two parts:", "ogTitle": "Developer Overview | KubeVela", "msapplication-config": "/img/favicons/browserconfig.xml", "og:title": "Developer Overview | KubeVela", "docusaurus_version": "v1.9", "og:url": "https://kubevela.io/docs/v1.9/contributor/overview/", "docsearch:language": "en", "scrapeId": "b3364165-df98-4386-8609-5baf01ed345d", "sourceURL": "https://kubevela.io/docs/v1.9/contributor/overview", "url": "https://kubevela.io/docs/v1.9/contributor/overview/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela Contributor Overview\"?\n\nAssistant: Here are the recommended best practices:\n\n• Make sure you understand the core concepts before extending KubeVela.\n• Community Over Code: Non-code contributions are equally important as code contributions.\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.9/contributor/overview", "title": "KubeVela Contributor Overview", "description": "This documentation provides an overview for contributors to KubeVela, including guides on extending KubeVela and contributing to the community.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-02-28 15:33:48", "type": "best_practices", "page_metadata": {"ogUrl": "https://kubevela.io/docs/v1.9/contributor/overview/", "language": "en", "docusaurus_locale": "en", "docsearch:version": "v1.9", "twitter:card": "summary_large_image", "docsearch:docusaurus_tag": "docs-default-v1.9", "og:description": "The developer guide including two parts:", "theme-color": "#ffffff", "viewport": "width=device-width, initial-scale=1.0", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogDescription": "The developer guide including two parts:", "docusaurus_tag": "docs-default-v1.9", "generator": "Docusaurus v2.4.3", "title": "Developer Overview | KubeVela", "description": "The developer guide including two parts:", "ogTitle": "Developer Overview | KubeVela", "msapplication-config": "/img/favicons/browserconfig.xml", "og:title": "Developer Overview | KubeVela", "docusaurus_version": "v1.9", "og:url": "https://kubevela.io/docs/v1.9/contributor/overview/", "docsearch:language": "en", "scrapeId": "b3364165-df98-4386-8609-5baf01ed345d", "sourceURL": "https://kubevela.io/docs/v1.9/contributor/overview", "url": "https://kubevela.io/docs/v1.9/contributor/overview/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"Deploying a Container-based Application with KubeVela\"?\n\nAssistant: This documentation provides a comprehensive guide on how to deploy a container-based application using KubeVela, including steps for creating, deploying, updating, and deleting applications.\n\nHere's a detailed explanation:\n\n\n## Before starting\n- Containerize your business, you need a container image within your image registry that can be accessed by KubeVela.\n- Make sure you have [VelaUX addon](https://kubevela.io/docs/v1.9/reference/addons/velaux/) enabled.\n\n## Creating an application\nEnter the page of Application on the left, and click `New Application` to create. Pick your name, alias, and description; Select type of `webservice`; Decide your environment, Default environment is already available in the first place. You could also enter the page of Environments to set up new.\n\nClick `Next Step` so to the configuration page. You need to set up the Image address and resources limit. If you want to set up a command for the image, open up the row `CMD`.\n\nIf you want to deploy the private image, please create the registry integration configuration. refer to: [Image registry configuration](https://kubevela.io/docs/v1.9/how-to/dashboard/config/image-registry/)\n\nAfter inputting the Image address, the system will load the Image info from the registry. If the image belongs to the private image registry, the `Secret` field will be automatically assigned values.\n\nYou could refer to their information to configure the `Service Ports` and `Persistent Storage`.\n\n![set webservice application](https://static.kubevela.net/images/1.4/create-webservice.jpg)\n\nDone by clicking `Create` and then we enter the management page.\n\n## Deploying the application\nClick the `Deploy` button on the upper right and select a workflow. Note that each Environment of the application has its workflow. On the right of the `Baseline Config` tab is the environments. Check out the status of the environment and its instance information as you wish.\n\n![webservice application env page](https://kubevela.io/assets/images/webservice-env-1eef2c1259531e395271ec3aa76412c5.jpg)\n\nWhen it has several targets in this environment, you may find them all in the `Instances` list. If you want to look at the process of application deployment, click `Check the details` to reveal.\n\nIn the `Instances` list, you may find some of them are in pending status. Click `+` in the beginning to figure out the reason in more detail.\n\n## Update image\nAfter the first deployment, our business keeps evolving and the following updates come along.\n\nClick `Baseline Config` and you can see the all components. Then click the component name and open the configuration page, you can update your latest requirements for image, version, and environment variable.\n\n## Update replicas\nIf your business requires more than one replica, enter the `Properties` page. By default, The component has a `Set Replicas` trait. Click it so that you can update the replicas.\n\n![set application replicas](https://kubevela.io/assets/images/set-replicas-bc40ff5b12af9100c01f79d6a846d50b.jpg)\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.9/tutorials/webservice", "title": "Deploying a Container-based Application with KubeVela", "description": "This documentation provides a comprehensive guide on how to deploy a container-based application using KubeVela, including steps for creating, deploying, updating, and deleting applications.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:34:03", "type": "overview", "page_metadata": {"ogTitle": "Deploy Container Image | KubeVela", "docusaurus_tag": "docs-default-v1.9", "docusaurus_locale": "en", "msapplication-config": "/img/favicons/browserconfig.xml", "viewport": "width=device-width, initial-scale=1.0", "generator": "Docusaurus v2.4.3", "ogDescription": "Deploy the business application by kubevela", "title": "Deploy Container Image | KubeVela", "language": "en", "og:url": "https://kubevela.io/docs/v1.9/tutorials/webservice/", "theme-color": "#ffffff", "description": "Deploy the business application by kubevela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docsearch:docusaurus_tag": "docs-default-v1.9", "og:description": "Deploy the business application by kubevela", "docusaurus_version": "v1.9", "ogUrl": "https://kubevela.io/docs/v1.9/tutorials/webservice/", "docsearch:language": "en", "docsearch:version": "v1.9", "twitter:card": "summary_large_image", "og:title": "Deploy Container Image | KubeVela", "scrapeId": "f0a6d2f9-bcd2-434d-b4a5-d94f51fd3fb1", "sourceURL": "https://kubevela.io/docs/v1.9/tutorials/webservice", "url": "https://kubevela.io/docs/v1.9/tutorials/webservice/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"Deploying a Container-based Application with KubeVela\"?\n\nAssistant: Here are some code examples:\n\n### Enable VelaUX Addon\n```yaml\nvela addon enable velaux\n```\n\n### Deploy via CLI\n```yaml\ncat <<EOF | vela up -f -\n# YAML begins\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: webservice-app\nspec:\n  components:\n    - name: frontend\n      type: webservice\n      properties:\n        image: oamdev/testapp:v1\n        cmd: [\"node\", \"server.js\"]\n        ports:\n          - port: 8080\n            expose: true\n        exposeType: NodePort\n        cpu: \"0.5\"\n        memory: \"512Mi\"\n      traits:\n        - type: scaler\n          properties:\n            replicas: 1\n# YAML ends\nEOF\n```\n\n### Check Deployment Status\n```yaml\nvela status webservice-app\n```\n\n### Port Forward Command\n```yaml\nvela port-forward webservice-app -n default 8080:8080\n```\n\n### Check Application Endpoint\n```yaml\nvela status webservice-app --endpoint\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.9/tutorials/webservice", "title": "Deploying a Container-based Application with KubeVela", "description": "This documentation provides a comprehensive guide on how to deploy a container-based application using KubeVela, including steps for creating, deploying, updating, and deleting applications.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:34:03", "type": "code_examples", "page_metadata": {"ogTitle": "Deploy Container Image | KubeVela", "docusaurus_tag": "docs-default-v1.9", "docusaurus_locale": "en", "msapplication-config": "/img/favicons/browserconfig.xml", "viewport": "width=device-width, initial-scale=1.0", "generator": "Docusaurus v2.4.3", "ogDescription": "Deploy the business application by kubevela", "title": "Deploy Container Image | KubeVela", "language": "en", "og:url": "https://kubevela.io/docs/v1.9/tutorials/webservice/", "theme-color": "#ffffff", "description": "Deploy the business application by kubevela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docsearch:docusaurus_tag": "docs-default-v1.9", "og:description": "Deploy the business application by kubevela", "docusaurus_version": "v1.9", "ogUrl": "https://kubevela.io/docs/v1.9/tutorials/webservice/", "docsearch:language": "en", "docsearch:version": "v1.9", "twitter:card": "summary_large_image", "og:title": "Deploy Container Image | KubeVela", "scrapeId": "f0a6d2f9-bcd2-434d-b4a5-d94f51fd3fb1", "sourceURL": "https://kubevela.io/docs/v1.9/tutorials/webservice", "url": "https://kubevela.io/docs/v1.9/tutorials/webservice/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"Deploying a Container-based Application with KubeVela\"?\n\nAssistant: Here are the recommended best practices:\n\n• The application created by CLI will be synced to UI automatically.\n• If you are using a cloud server, please open the port in the security group to allow incoming traffic.\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.9/tutorials/webservice", "title": "Deploying a Container-based Application with KubeVela", "description": "This documentation provides a comprehensive guide on how to deploy a container-based application using KubeVela, including steps for creating, deploying, updating, and deleting applications.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:34:03", "type": "best_practices", "page_metadata": {"ogTitle": "Deploy Container Image | KubeVela", "docusaurus_tag": "docs-default-v1.9", "docusaurus_locale": "en", "msapplication-config": "/img/favicons/browserconfig.xml", "viewport": "width=device-width, initial-scale=1.0", "generator": "Docusaurus v2.4.3", "ogDescription": "Deploy the business application by kubevela", "title": "Deploy Container Image | KubeVela", "language": "en", "og:url": "https://kubevela.io/docs/v1.9/tutorials/webservice/", "theme-color": "#ffffff", "description": "Deploy the business application by kubevela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docsearch:docusaurus_tag": "docs-default-v1.9", "og:description": "Deploy the business application by kubevela", "docusaurus_version": "v1.9", "ogUrl": "https://kubevela.io/docs/v1.9/tutorials/webservice/", "docsearch:language": "en", "docsearch:version": "v1.9", "twitter:card": "summary_large_image", "og:title": "Deploy Container Image | KubeVela", "scrapeId": "f0a6d2f9-bcd2-434d-b4a5-d94f51fd3fb1", "sourceURL": "https://kubevela.io/docs/v1.9/tutorials/webservice", "url": "https://kubevela.io/docs/v1.9/tutorials/webservice/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela CLI Reference Documentation\"?\n\nAssistant: This guide is an introduction of how to generate docs automatically from Golang scripts.\n\nHere's a detailed explanation:\n\n\n## CLI Reference\nThis section introduce how to update CLI reference doc in the website. The whole process was done by script automatically. You need to follow this guide to build your environment.\n\n1. step up these two projects in the same folder.\n\n```codeBlockLines_e6Vv\n$ tree -L 1\n.\n├── kubevela\n└── kubevela.io\n```\n\n2. Run generate command in kubevela root dir.\n\n```codeBlockLines_e6Vv\ncd kubevela/\ngo run ./hack/docgen/cli/gen.go\n```\n\n3. Update more docs such as i18n zh\n\n```codeBlockLines_e6Vv\ngo run ./hack/docgen/cli/gen.go ../kubevela.io/i18n/zh/docusaurus-plugin-content-docs/current/cli\n```\n\n4. Then you can check the difference in kubevela.io.\n\n```codeBlockLines_e6Vv\ncd ../kubevela.io\ngit status\n```\n\n5. Check in the changes and send pull request.\n\n## Built-in Definition Reference\nThis section introduce how to definition reference docs in the website, including:\n\n- component definition reference doc\n- trait definition reference doc\n- policy definition reference doc\n- workflow step definition reference doc.\n\nMost of the steps are done by script automatically. You need to follow this guide to build your environment.\n\nBy default, the following steps will update for all definition reference at a time. Just follow these steps.\n\n1. step up these three projects in the same folder.\n\n```codeBlockLines_e6Vv\n$ tree -L 1\n.\n├── catalog\n├── kubevela\n└── kubevela.io\n```\n\n2. Run generate command in kubevela root dir.\n\n```codeBlockLines_e6Vv\ncd kubevela/\ngo run hack/docgen/def/gen.go\n```\n\n3. Then you can check the difference in kubevela.io.\n\n```codeBlockLines_e6Vv\ncd ../kubevela.io\ngit status\n```\n\n4. Check in the changes and send pull request.\n\nThat's finished for the general update.\n\n## Update for Specific\nYou can specify some args for more flexible usage.\n\n- Generate only for specified type\n\n```codeBlockLines_e6Vv\ngo run hack/docgen/def/gen.go --type component\ngo run hack/docgen/def/gen.go --type trait\ngo run hack/docgen/def/gen.go --type policy\ngo run hack/docgen/def/gen.go --type workflowstep\n```\n\n- Specify a path for output\n\n> You must choose one of the type generated if path specified.\n\n```codeBlockLines_e6Vv\ngo run hack/docgen/def/gen.go --type component --path ../kubevela.io/docs/end-user/components/references.md\n```\n\n- Specify the i18n location with a translation script data for the output\n\n```codeBlockLines_e6Vv\ngo run hack/docgen/def/gen.go --location zh --i18n ../kubevela.io/static/reference-i18n.json\ngo run hack/docgen/def/gen.go --location zh --i18n https://kubevela.io/reference-i18n.json\ngo run hack/docgen/def/gen.go --type component --path ../kubevela.io/docs/end-user/components/references.md --location zh --i18n ../kubevela.io/static/reference-i18n.json\n```\n\n## How the docs generated?\n1. Load definitions from Kubernetes.\n\nThe script will load all definitions from your Kubernetes Cluster, so you need to apply all built-in definitions before run.\n\n2. Compare the internal definition folder in the project.\n\nBesides the server side definitions, the script will also compare the cue files in the KubeVela project. Only definitions existing in these folders will be generated as reference docs.\n\n```codeBlockLines_e6Vv\n$ tree ./vela-templates/definitions/internal\nvela-templates/definitions/internal\n├── component\n│   ├── config-image-registry.cue\n│   ├── ...\n│   └── worker.cue\n├── policy\n│   ├── health.cue\n│   ├── override.cue\n│   └── topology.cue\n├── trait\n│   ├── affinity.cue\n│   ├── ...\n│   └── storage.cue\n└── workflowstep\n    ├── apply-application-in-parallel.cue\n    ├── ...\n    └── webhook.cue\n\n4 directories, 53 files\n```\n\n3. Generate Examples.\n\nBy default, the definition don't contain any examples, maintainers can specify example for the built-in definitions.\n\nThe docs folder will be embedded into CLI binary, you must write into the following hierarchy:\n\n```codeBlockLines_e6Vv\n$ tree references/docgen/def-doc\nreferences/docgen/def-doc\n├── component\n│   ├── webservice.eg.md\n│   ├── webservice.param.md\n│   ├── webservice.desc.md\n│   ├── ...\n│   └── worker.eg.md\n└── trait\n    ├── annotations.eg.md\n    ├── ...\n    └── sidecar.eg.md\n\n2 directories, 21 files\n```\n\nThe file name MUST have the same name with the definition, along with the suffix:\n\n- The example of definition MUST have suffix `.eg.md` and write in markdown format.\n- The parameter(specification) of definition MUST have suffix `.param.md`, if exists, it will override the one auto-generated from definition parameters.\n- The description of definition MUST have suffix `.desc.md`, if exists, it will override the one auto-generated from definition annotation.\n\n## Terraform Based Cloud Resource Reference\nThis section introduce how to update terraform based cloud resource reference doc in the website.\n\nMost of the steps are done by script automatically. You need to follow this guide to build your environment.\n\n1. step up these two projects in the same folder.\n\n```codeBlockLines_e6Vv\n$ tree -L 1\n.\n├── kubevela\n└── kubevela.io\n```\n\n2. Run generate command in kubevela root dir.\n\n```codeBlockLines_e6Vv\ncd kubevela/\ngo run ./hack/docgen/terraform/generate.go --i18n ../kubevela.io/static/reference-i18n.json\n```\n\n3. Update the resource catalog list if there're new cloud resources\n\n- Resource Catalog(English): `kubevela.io/docs/end-user/components/cloud-services/cloud-resources-list.md`\n- Resource Catalog(Chinese): `kubevela.io/i18n/zh/docusaurus-plugin-content-docs/current/end-user/components/cloud-services/cloud-resources-list.md`\n\n4. Then you can check the difference in kubevela.io.\n\n```codeBlockLines_e6Vv\ncd ../kubevela.io\ngit status\n```\n\n5. Check in the changes and send pull request.\n\n## Translate for the reference docs\nYou need to translate into this file if you want to contribute for internationalization(i18n):\n\n- File path: `kubevela.io/static/reference-i18n.json`\n- URL for public access: [https://kubevela.io/reference-i18n.json](https://kubevela.io/reference-i18n.json)\n\nAfter any translate, run the commands above to update all these reference docs.\n", "metadata": {"source_url": "https://kubevela.io/docs/contributor/cli-ref-doc", "title": "KubeVela CLI Reference Documentation", "description": "This guide is an introduction of how to generate docs automatically from Golang scripts.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-02-28 15:34:32", "type": "overview", "page_metadata": {"docsearch:language": "en", "ogTitle": "Update Reference Docs | KubeVela", "docusaurus_tag": "docs-default-v1.10", "language": "en", "title": "Update Reference Docs | KubeVela", "og:url": "https://kubevela.io/docs/contributor/cli-ref-doc/", "ogUrl": "https://kubevela.io/docs/contributor/cli-ref-doc/", "docsearch:version": "v1.10", "docusaurus_locale": "en", "docusaurus_version": "v1.10", "docsearch:docusaurus_tag": "docs-default-v1.10", "theme-color": "#ffffff", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "og:description": "This guide is an introduction of how to generate docs automatically from Golang scripts.", "msapplication-config": "/img/favicons/browserconfig.xml", "description": "This guide is an introduction of how to generate docs automatically from Golang scripts.", "ogDescription": "This guide is an introduction of how to generate docs automatically from Golang scripts.", "viewport": "width=device-width, initial-scale=1.0", "twitter:card": "summary_large_image", "og:title": "Update Reference Docs | KubeVela", "generator": "Docusaurus v2.4.3", "scrapeId": "584f80b2-7ec2-4bdf-b71c-2d7f39c7ab63", "sourceURL": "https://kubevela.io/docs/contributor/cli-ref-doc", "url": "https://kubevela.io/docs/contributor/cli-ref-doc/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"KubeVela CLI Reference Documentation\"?\n\nAssistant: Here are some code examples:\n\n### Generate CLI Reference Docs\n```yaml\ncd kubevela/\ngo run ./hack/docgen/cli/gen.go\n```\n\n### Update i18n Docs\n```yaml\ngo run ./hack/docgen/cli/gen.go ../kubevela.io/i18n/zh/docusaurus-plugin-content-docs/current/cli\n```\n\n### Check Git Status\n```yaml\ncd ../kubevela.io\ngit status\n```\n\n### Generate Built-in Definition Reference Docs\n```yaml\ncd kubevela/\ngo run hack/docgen/def/gen.go\n```\n\n### Generate Specific Type Docs\n```yaml\ngo run hack/docgen/def/gen.go --type component\n```\n\n### Specify Output Path\n```yaml\ngo run hack/docgen/def/gen.go --type component --path ../kubevela.io/docs/end-user/components/references.md\n```\n\n### Load Definitions from Kubernetes\n```yaml\n$ tree ./vela-templates/definitions/internal\n```\n\n### Generate Examples\n```yaml\n$ tree references/docgen/def-doc\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/contributor/cli-ref-doc", "title": "KubeVela CLI Reference Documentation", "description": "This guide is an introduction of how to generate docs automatically from Golang scripts.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-02-28 15:34:32", "type": "code_examples", "page_metadata": {"docsearch:language": "en", "ogTitle": "Update Reference Docs | KubeVela", "docusaurus_tag": "docs-default-v1.10", "language": "en", "title": "Update Reference Docs | KubeVela", "og:url": "https://kubevela.io/docs/contributor/cli-ref-doc/", "ogUrl": "https://kubevela.io/docs/contributor/cli-ref-doc/", "docsearch:version": "v1.10", "docusaurus_locale": "en", "docusaurus_version": "v1.10", "docsearch:docusaurus_tag": "docs-default-v1.10", "theme-color": "#ffffff", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "og:description": "This guide is an introduction of how to generate docs automatically from Golang scripts.", "msapplication-config": "/img/favicons/browserconfig.xml", "description": "This guide is an introduction of how to generate docs automatically from Golang scripts.", "ogDescription": "This guide is an introduction of how to generate docs automatically from Golang scripts.", "viewport": "width=device-width, initial-scale=1.0", "twitter:card": "summary_large_image", "og:title": "Update Reference Docs | KubeVela", "generator": "Docusaurus v2.4.3", "scrapeId": "584f80b2-7ec2-4bdf-b71c-2d7f39c7ab63", "sourceURL": "https://kubevela.io/docs/contributor/cli-ref-doc", "url": "https://kubevela.io/docs/contributor/cli-ref-doc/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela CLI Reference Documentation\"?\n\nAssistant: Here are the recommended best practices:\n\n• Ensure to set up the required projects in the same folder before running commands.\n• Always check the git status after generating documentation to see changes.\n• When specifying output paths, ensure to choose a type to generate.\n", "metadata": {"source_url": "https://kubevela.io/docs/contributor/cli-ref-doc", "title": "KubeVela CLI Reference Documentation", "description": "This guide is an introduction of how to generate docs automatically from Golang scripts.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-02-28 15:34:32", "type": "best_practices", "page_metadata": {"docsearch:language": "en", "ogTitle": "Update Reference Docs | KubeVela", "docusaurus_tag": "docs-default-v1.10", "language": "en", "title": "Update Reference Docs | KubeVela", "og:url": "https://kubevela.io/docs/contributor/cli-ref-doc/", "ogUrl": "https://kubevela.io/docs/contributor/cli-ref-doc/", "docsearch:version": "v1.10", "docusaurus_locale": "en", "docusaurus_version": "v1.10", "docsearch:docusaurus_tag": "docs-default-v1.10", "theme-color": "#ffffff", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "og:description": "This guide is an introduction of how to generate docs automatically from Golang scripts.", "msapplication-config": "/img/favicons/browserconfig.xml", "description": "This guide is an introduction of how to generate docs automatically from Golang scripts.", "ogDescription": "This guide is an introduction of how to generate docs automatically from Golang scripts.", "viewport": "width=device-width, initial-scale=1.0", "twitter:card": "summary_large_image", "og:title": "Update Reference Docs | KubeVela", "generator": "Docusaurus v2.4.3", "scrapeId": "584f80b2-7ec2-4bdf-b71c-2d7f39c7ab63", "sourceURL": "https://kubevela.io/docs/contributor/cli-ref-doc", "url": "https://kubevela.io/docs/contributor/cli-ref-doc/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela Roadmap (2022-09)\"?\n\nAssistant: This page outlines the roadmap for KubeVela from July 2022 to September 2022, detailing core platform upgrades, user experience improvements, third-party integrations, and best practices.\n\nHere's a detailed explanation:\n\n\n## Core Platform\n- Upgrade CUE engine of KubeVela from 0.2 to 0.4+.\n- Support KubeVela system level observability for multi-clusters.\n  - Support collect and show log, metrics in a unified Grafana for all KubeVela and addon controllers with the control plane cluster.\n- Support basic application level observability.\n  - Support collect and show log, metrics with multi-cluster capability.\n  - Automatically generate observability dashboard for application within a unified Grafana.\n  - Allow user to define customize observability rules including logs and metrics.\n- Support more flexible addons capability.\n  - Standardized definition to make the definition(such as helm component) as one kind of addon dependency, addon can depends on a standard definition instead of any specific implementation(fluxcd or argocd).\n  - Provide partial installation for addon to make it more lightweight.\n\n## User Experience\n- Provide end to end experience from source code development to multi-cluster/hybrid-cloud delivery.\n- Provide application export/load capability and build a KubeVela AppStore.\n\n## Third-party integrations and more addons\n- Integrate with OPA/Kyverno/Cosign and other projects to provide a secure software supply chain.\n\n## Best practices\n- Provide one or more best practices about how to use KubeVela in game/financial scenario.\n", "metadata": {"source_url": "https://kubevela.io/docs/roadmap/2022-09-roadmap", "title": "KubeVela Roadmap (2022-09)", "description": "This page outlines the roadmap for KubeVela from July 2022 to September 2022, detailing core platform upgrades, user experience improvements, third-party integrations, and best practices.", "has_code_examples": false, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 15:34:40", "type": "overview", "page_metadata": {"ogDescription": "Date: 2022-07-01 to 2022-09-31", "generator": "Docusaurus v2.4.3", "docusaurus_locale": "en", "docsearch:docusaurus_tag": "docs-default-v1.10", "theme-color": "#ffffff", "viewport": "width=device-width, initial-scale=1.0", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "language": "en", "twitter:card": "summary_large_image", "docsearch:language": "en", "og:title": "Roadmap 2022.09 | KubeVela", "description": "Date: 2022-07-01 to 2022-09-31", "og:url": "https://kubevela.io/docs/roadmap/2022-09-roadmap/", "ogTitle": "Roadmap 2022.09 | KubeVela", "ogUrl": "https://kubevela.io/docs/roadmap/2022-09-roadmap/", "title": "Roadmap 2022.09 | KubeVela", "docusaurus_tag": "docs-default-v1.10", "og:description": "Date: 2022-07-01 to 2022-09-31", "msapplication-config": "/img/favicons/browserconfig.xml", "docusaurus_version": "v1.10", "docsearch:version": "v1.10", "scrapeId": "92833e33-e957-47a5-be0b-89b65b40d3cd", "sourceURL": "https://kubevela.io/docs/roadmap/2022-09-roadmap", "url": "https://kubevela.io/docs/roadmap/2022-09-roadmap/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela Roadmap (2022-09)\"?\n\nAssistant: Here are the recommended best practices:\n\n• Provide one or more best practices about how to use KubeVela in game/financial scenario.\n", "metadata": {"source_url": "https://kubevela.io/docs/roadmap/2022-09-roadmap", "title": "KubeVela Roadmap (2022-09)", "description": "This page outlines the roadmap for KubeVela from July 2022 to September 2022, detailing core platform upgrades, user experience improvements, third-party integrations, and best practices.", "has_code_examples": false, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 15:34:40", "type": "best_practices", "page_metadata": {"ogDescription": "Date: 2022-07-01 to 2022-09-31", "generator": "Docusaurus v2.4.3", "docusaurus_locale": "en", "docsearch:docusaurus_tag": "docs-default-v1.10", "theme-color": "#ffffff", "viewport": "width=device-width, initial-scale=1.0", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "language": "en", "twitter:card": "summary_large_image", "docsearch:language": "en", "og:title": "Roadmap 2022.09 | KubeVela", "description": "Date: 2022-07-01 to 2022-09-31", "og:url": "https://kubevela.io/docs/roadmap/2022-09-roadmap/", "ogTitle": "Roadmap 2022.09 | KubeVela", "ogUrl": "https://kubevela.io/docs/roadmap/2022-09-roadmap/", "title": "Roadmap 2022.09 | KubeVela", "docusaurus_tag": "docs-default-v1.10", "og:description": "Date: 2022-07-01 to 2022-09-31", "msapplication-config": "/img/favicons/browserconfig.xml", "docusaurus_version": "v1.10", "docsearch:version": "v1.10", "scrapeId": "92833e33-e957-47a5-be0b-89b65b40d3cd", "sourceURL": "https://kubevela.io/docs/roadmap/2022-09-roadmap", "url": "https://kubevela.io/docs/roadmap/2022-09-roadmap/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela CLI UI Schema\"?\n\nAssistant: Manage UI schema for addons.\n\nHere's a detailed explanation:\n\n\n## Synopsis\nManage UI schema for addons.\n\n## Options\n```codeBlockLines_e6Vv\n  -h, --help   help for uischema\n```\n\n## Options inherited from parent commands\n```codeBlockLines_e6Vv\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n\n## SEE ALSO\n- [vela uischema apply](https://kubevela.io/docs/v1.9/cli/vela_uischema_apply/) \\- apply <ui schema file/dir path>\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.9/cli/vela_uischema", "title": "KubeVela CLI UI Schema", "description": "Manage UI schema for addons.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 15:34:46", "type": "overview", "page_metadata": {"twitter:card": "summary_large_image", "theme-color": "#ffffff", "docusaurus_tag": "docs-default-v1.9", "ogDescription": "Manage UI schema for addons.", "og:url": "https://kubevela.io/docs/v1.9/cli/vela_uischema/", "og:title": "vela uischema | KubeVela", "docsearch:language": "en", "og:description": "Manage UI schema for addons.", "msapplication-config": "/img/favicons/browserconfig.xml", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogTitle": "vela uischema | KubeVela", "ogUrl": "https://kubevela.io/docs/v1.9/cli/vela_uischema/", "docsearch:docusaurus_tag": "docs-default-v1.9", "docusaurus_version": "v1.9", "docsearch:version": "v1.9", "title": "vela uischema | KubeVela", "viewport": "width=device-width, initial-scale=1.0", "docusaurus_locale": "en", "language": "en", "generator": "Docusaurus v2.4.3", "description": "Manage UI schema for addons.", "scrapeId": "17e04675-49a6-4322-855c-45012a955ade", "sourceURL": "https://kubevela.io/docs/v1.9/cli/vela_uischema", "url": "https://kubevela.io/docs/v1.9/cli/vela_uischema/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"KubeVela CLI UI Schema\"?\n\nAssistant: Here are some code examples:\n\n### Options\n```yaml\n```codeBlockLines_e6Vv\n  -h, --help   help for uischema\n```\n```\n\n### Options inherited from parent commands\n```yaml\n```codeBlockLines_e6Vv\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.9/cli/vela_uischema", "title": "KubeVela CLI UI Schema", "description": "Manage UI schema for addons.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 15:34:46", "type": "code_examples", "page_metadata": {"twitter:card": "summary_large_image", "theme-color": "#ffffff", "docusaurus_tag": "docs-default-v1.9", "ogDescription": "Manage UI schema for addons.", "og:url": "https://kubevela.io/docs/v1.9/cli/vela_uischema/", "og:title": "vela uischema | KubeVela", "docsearch:language": "en", "og:description": "Manage UI schema for addons.", "msapplication-config": "/img/favicons/browserconfig.xml", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogTitle": "vela uischema | KubeVela", "ogUrl": "https://kubevela.io/docs/v1.9/cli/vela_uischema/", "docsearch:docusaurus_tag": "docs-default-v1.9", "docusaurus_version": "v1.9", "docsearch:version": "v1.9", "title": "vela uischema | KubeVela", "viewport": "width=device-width, initial-scale=1.0", "docusaurus_locale": "en", "language": "en", "generator": "Docusaurus v2.4.3", "description": "Manage UI schema for addons.", "scrapeId": "17e04675-49a6-4322-855c-45012a955ade", "sourceURL": "https://kubevela.io/docs/v1.9/cli/vela_uischema", "url": "https://kubevela.io/docs/v1.9/cli/vela_uischema/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela CLI UI Schema\"?\n\nAssistant: Here are the recommended best practices:\n\n• For up-to-date documentation, see the latest version (v1.10).\n• If you like KubeVela, give it a star on GitHub.\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.9/cli/vela_uischema", "title": "KubeVela CLI UI Schema", "description": "Manage UI schema for addons.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 15:34:46", "type": "best_practices", "page_metadata": {"twitter:card": "summary_large_image", "theme-color": "#ffffff", "docusaurus_tag": "docs-default-v1.9", "ogDescription": "Manage UI schema for addons.", "og:url": "https://kubevela.io/docs/v1.9/cli/vela_uischema/", "og:title": "vela uischema | KubeVela", "docsearch:language": "en", "og:description": "Manage UI schema for addons.", "msapplication-config": "/img/favicons/browserconfig.xml", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogTitle": "vela uischema | KubeVela", "ogUrl": "https://kubevela.io/docs/v1.9/cli/vela_uischema/", "docsearch:docusaurus_tag": "docs-default-v1.9", "docusaurus_version": "v1.9", "docsearch:version": "v1.9", "title": "vela uischema | KubeVela", "viewport": "width=device-width, initial-scale=1.0", "docusaurus_locale": "en", "language": "en", "generator": "Docusaurus v2.4.3", "description": "Manage UI schema for addons.", "scrapeId": "17e04675-49a6-4322-855c-45012a955ade", "sourceURL": "https://kubevela.io/docs/v1.9/cli/vela_uischema", "url": "https://kubevela.io/docs/v1.9/cli/vela_uischema/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"Trivy Operator Addon\"?\n\nAssistant: This addon provides a vulnerability scanner that continuously scans containers deployed in a Kubernetes cluster.\n\nHere's a detailed explanation:\n\n\n## Install\n```codeBlockLines_e6Vv\nvela addon enable trivy-operator\n```\n\n## Uninstall\n```codeBlockLines_e6Vv\nvela addon disable trivy-operator\n```\n\n## Quick start\n```codeBlockLines_e6Vv\n$ vela ls -A | grep trivy\nvela-system     addon-trivy-operator    trivy-system-ns         k8s-objects                     running healthy                                                               2022-08-14 11:26:53 +0800 CST\nvela-system     └─                      trivy-system-helm       helm                            running healthy Fetch repository successfully, Create helm release            2022-08-14 11:26:53 +0800 CST\n\nvela env set vela-system --labels trivy-operator-validation=true\nvela env set vela-system --labels trivy-scan=true\n\n$ kubectl get svc -n trivy-system\nNAME                                            TYPE        CLUSTER-IP        EXTERNAL-IP   PORT(S)    AGE\ntrivy-image-validator                           ClusterIP   192.168.113.102   <none>        443/TCP    13m\ntrivy-system-trivy-system-helm-trivy-operator   ClusterIP   192.168.163.69    <none>        9115/TCP   13m\n\n$ kubectl port-forward service/trivy-system-trivy-system-helm-trivy-operator 9999:9115 -n trivy-system\nForwarding from 127.0.0.1:9999 -> 9115\nForwarding from [::1]:9999 -> 9115\n\ncurl -s http://localhost:9115/metrics | grep trivy_vulnerabilities\n\ncurl -s http://localhost:9115/metrics | grep ac_vulnerabilities\n```\n", "metadata": {"source_url": "https://kubevela.io/docs/reference/addons/trivy-operator", "title": "Trivy Operator Addon", "description": "This addon provides a vulnerability scanner that continuously scans containers deployed in a Kubernetes cluster.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 15:35:03", "type": "overview", "page_metadata": {"og:url": "https://kubevela.io/docs/reference/addons/trivy-operator/", "twitter:card": "summary_large_image", "og:title": "Trivy-operator | KubeVela", "ogUrl": "https://kubevela.io/docs/reference/addons/trivy-operator/", "theme-color": "#ffffff", "docsearch:version": "v1.10", "title": "Trivy-operator | KubeVela", "ogDescription": "- This addon provides a vulnerability scanner that continuously scans containers deployed in a Kubernetes cluster.", "generator": "Docusaurus v2.4.3", "viewport": "width=device-width, initial-scale=1.0", "docusaurus_version": "v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "docsearch:language": "en", "docsearch:docusaurus_tag": "docs-default-v1.10", "description": "- This addon provides a vulnerability scanner that continuously scans containers deployed in a Kubernetes cluster.", "docusaurus_tag": "docs-default-v1.10", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "language": "en", "ogTitle": "Trivy-operator | KubeVela", "og:description": "- This addon provides a vulnerability scanner that continuously scans containers deployed in a Kubernetes cluster.", "docusaurus_locale": "en", "scrapeId": "86d37f4a-0dd1-43a6-b5cc-093a9ca48487", "sourceURL": "https://kubevela.io/docs/reference/addons/trivy-operator", "url": "https://kubevela.io/docs/reference/addons/trivy-operator/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"Trivy Operator Addon\"?\n\nAssistant: Here are some code examples:\n\n### Install Trivy Operator\n```yaml\nvela addon enable trivy-operator\n```\n\n### Uninstall Trivy Operator\n```yaml\nvela addon disable trivy-operator\n```\n\n### Quick Start Commands\n```yaml\n$ vela ls -A | grep trivy\nvela-system     addon-trivy-operator    trivy-system-ns         k8s-objects                     running healthy                                                               2022-08-14 11:26:53 +0800 CST\nvela-system     └─                      trivy-system-helm       helm                            running healthy Fetch repository successfully, Create helm release            2022-08-14 11:26:53 +0800 CST\n\nvela env set vela-system --labels trivy-operator-validation=true\nvela env set vela-system --labels trivy-scan=true\n\n$ kubectl get svc -n trivy-system\nNAME                                            TYPE        CLUSTER-IP        EXTERNAL-IP   PORT(S)    AGE\ntrivy-image-validator                           ClusterIP   192.168.113.102   <none>        443/TCP    13m\ntrivy-system-trivy-system-helm-trivy-operator   ClusterIP   192.168.163.69    <none>        9115/TCP   13m\n\n$ kubectl port-forward service/trivy-system-trivy-system-helm-trivy-operator 9999:9115 -n trivy-system\nForwarding from 127.0.0.1:9999 -> 9115\nForwarding from [::1]:9999 -> 9115\n\ncurl -s http://localhost:9115/metrics | grep trivy_vulnerabilities\n\ncurl -s http://localhost:9115/metrics | grep ac_vulnerabilities\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/reference/addons/trivy-operator", "title": "Trivy Operator Addon", "description": "This addon provides a vulnerability scanner that continuously scans containers deployed in a Kubernetes cluster.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 15:35:03", "type": "code_examples", "page_metadata": {"og:url": "https://kubevela.io/docs/reference/addons/trivy-operator/", "twitter:card": "summary_large_image", "og:title": "Trivy-operator | KubeVela", "ogUrl": "https://kubevela.io/docs/reference/addons/trivy-operator/", "theme-color": "#ffffff", "docsearch:version": "v1.10", "title": "Trivy-operator | KubeVela", "ogDescription": "- This addon provides a vulnerability scanner that continuously scans containers deployed in a Kubernetes cluster.", "generator": "Docusaurus v2.4.3", "viewport": "width=device-width, initial-scale=1.0", "docusaurus_version": "v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "docsearch:language": "en", "docsearch:docusaurus_tag": "docs-default-v1.10", "description": "- This addon provides a vulnerability scanner that continuously scans containers deployed in a Kubernetes cluster.", "docusaurus_tag": "docs-default-v1.10", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "language": "en", "ogTitle": "Trivy-operator | KubeVela", "og:description": "- This addon provides a vulnerability scanner that continuously scans containers deployed in a Kubernetes cluster.", "docusaurus_locale": "en", "scrapeId": "86d37f4a-0dd1-43a6-b5cc-093a9ca48487", "sourceURL": "https://kubevela.io/docs/reference/addons/trivy-operator", "url": "https://kubevela.io/docs/reference/addons/trivy-operator/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"Trivy Operator Addon\"?\n\nAssistant: Here are the recommended best practices:\n\n• Refer to the official Trivy Operator documentation for more information: https://github.com/devopstales/trivy-operator\n• Ensure that you have the necessary permissions to install and manage addons in your Kubernetes cluster.\n", "metadata": {"source_url": "https://kubevela.io/docs/reference/addons/trivy-operator", "title": "Trivy Operator Addon", "description": "This addon provides a vulnerability scanner that continuously scans containers deployed in a Kubernetes cluster.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 15:35:03", "type": "best_practices", "page_metadata": {"og:url": "https://kubevela.io/docs/reference/addons/trivy-operator/", "twitter:card": "summary_large_image", "og:title": "Trivy-operator | KubeVela", "ogUrl": "https://kubevela.io/docs/reference/addons/trivy-operator/", "theme-color": "#ffffff", "docsearch:version": "v1.10", "title": "Trivy-operator | KubeVela", "ogDescription": "- This addon provides a vulnerability scanner that continuously scans containers deployed in a Kubernetes cluster.", "generator": "Docusaurus v2.4.3", "viewport": "width=device-width, initial-scale=1.0", "docusaurus_version": "v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "docsearch:language": "en", "docsearch:docusaurus_tag": "docs-default-v1.10", "description": "- This addon provides a vulnerability scanner that continuously scans containers deployed in a Kubernetes cluster.", "docusaurus_tag": "docs-default-v1.10", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "language": "en", "ogTitle": "Trivy-operator | KubeVela", "og:description": "- This addon provides a vulnerability scanner that continuously scans containers deployed in a Kubernetes cluster.", "docusaurus_locale": "en", "scrapeId": "86d37f4a-0dd1-43a6-b5cc-093a9ca48487", "sourceURL": "https://kubevela.io/docs/reference/addons/trivy-operator", "url": "https://kubevela.io/docs/reference/addons/trivy-operator/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela Roadmap (2021-12)\"?\n\nAssistant: This page outlines the roadmap for KubeVela from October 2021 to December 2021, detailing core platform features, user experience improvements, and third-party integrations.\n\nHere's a detailed explanation:\n\n\n## Core Platform\n- Support multi-cluster rollout and multi-version deployment.\n- Improve cloud resource provisioning support on Alibaba and AWS.\n- Support application observability: collect and show log and metrics in Grafana.\n\n## User Experience\n- Enhance Dashboard to improve KubeVela experience on app delivery workflow, lifecycle management, addon center, etc.\n- Release APIServer for REST API integration.\n- Align vela CLI with the new features: workflow and env.\n- Support vela doctor command to help diagnose user issues and collect bug trace.\n\n## Third-party integrations\n- Provide OpenYurt integration to improve IoT/edge experience.\n- Provide ArgoCD integration to improve GitOps experience.\n", "metadata": {"source_url": "https://kubevela.io/docs/roadmap/2021-12-roadmap", "title": "KubeVela Roadmap (2021-12)", "description": "This page outlines the roadmap for KubeVela from October 2021 to December 2021, detailing core platform features, user experience improvements, and third-party integrations.", "has_code_examples": false, "has_best_practices": false, "section_count": 3, "timestamp": "2025-02-28 15:36:11", "type": "overview", "page_metadata": {"ogUrl": "https://kubevela.io/docs/roadmap/2021-12-roadmap/", "docusaurus_locale": "en", "language": "en", "docsearch:language": "en", "og:url": "https://kubevela.io/docs/roadmap/2021-12-roadmap/", "description": "Date: 2021-10-01 to 2021-12-30", "og:title": "Roadmap | KubeVela", "ogTitle": "Roadmap | KubeVela", "twitter:card": "summary_large_image", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:description": "Date: 2021-10-01 to 2021-12-30", "docsearch:version": "v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "viewport": "width=device-width, initial-scale=1.0", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_version": "v1.10", "ogDescription": "Date: 2021-10-01 to 2021-12-30", "title": "Roadmap | KubeVela", "docusaurus_tag": "docs-default-v1.10", "generator": "Docusaurus v2.4.3", "theme-color": "#ffffff", "scrapeId": "e0bbc984-8e38-44b4-8a18-d7138cc21882", "sourceURL": "https://kubevela.io/docs/roadmap/2021-12-roadmap", "url": "https://kubevela.io/docs/roadmap/2021-12-roadmap/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela CLI: Add Labels to Managed Cluster\"?\n\nAssistant: This documentation page covers how to add labels to a managed cluster using KubeVela CLI commands.\n\nHere's a detailed explanation:\n\n\n## Synopsis\nadd labels to managed cluster.\n\n## Examples\n```bash\nvela cluster labels add my-cluster project=kubevela,owner=oam-dev\n```\n\n## Options\n```bash\n  -h, --help   help for add\n```\n\n## Options inherited from parent commands\n```bash\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n\n## SEE ALSO\n- [vela cluster labels](https://kubevela.io/docs/v1.9/cli/vela_cluster_labels/) - Manage Kubernetes Cluster Labels.\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.9/cli/vela_cluster_labels_add", "title": "KubeVela CLI: Add Labels to Managed Cluster", "description": "This documentation page covers how to add labels to a managed cluster using KubeVela CLI commands.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:36:19", "type": "overview", "page_metadata": {"description": "add labels to managed cluster.", "title": "vela cluster labels add | KubeVela", "docusaurus_locale": "en", "twitter:card": "summary_large_image", "ogDescription": "add labels to managed cluster.", "docsearch:language": "en", "docusaurus_tag": "docs-default-v1.9", "ogUrl": "https://kubevela.io/docs/v1.9/cli/vela_cluster_labels_add/", "og:description": "add labels to managed cluster.", "docsearch:version": "v1.9", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "theme-color": "#ffffff", "og:title": "vela cluster labels add | KubeVela", "docusaurus_version": "v1.9", "generator": "Docusaurus v2.4.3", "language": "en", "ogTitle": "vela cluster labels add | KubeVela", "og:url": "https://kubevela.io/docs/v1.9/cli/vela_cluster_labels_add/", "viewport": "width=device-width, initial-scale=1.0", "docsearch:docusaurus_tag": "docs-default-v1.9", "msapplication-config": "/img/favicons/browserconfig.xml", "scrapeId": "68308678-985e-4cb4-afa0-18b9f380d403", "sourceURL": "https://kubevela.io/docs/v1.9/cli/vela_cluster_labels_add", "url": "https://kubevela.io/docs/v1.9/cli/vela_cluster_labels_add/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"KubeVela CLI: Add Labels to Managed Cluster\"?\n\nAssistant: Here are some code examples:\n\n### Command to Add Labels\n```yaml\nvela cluster labels add my-cluster project=kubevela,owner=oam-dev\n```\n\n### Basic Command Structure\n```yaml\nvela cluster labels add CLUSTER_NAME LABELS [flags]\n```\n\n### Help Option\n```yaml\n  -h, --help   help for add\n```\n\n### Verbosity Option\n```yaml\n  -V, --verbosity Level   number for the log level verbosity\n```\n\n### Assume Yes Option\n```yaml\n  -y, --yes               Assume yes for all user prompts\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.9/cli/vela_cluster_labels_add", "title": "KubeVela CLI: Add Labels to Managed Cluster", "description": "This documentation page covers how to add labels to a managed cluster using KubeVela CLI commands.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:36:19", "type": "code_examples", "page_metadata": {"description": "add labels to managed cluster.", "title": "vela cluster labels add | KubeVela", "docusaurus_locale": "en", "twitter:card": "summary_large_image", "ogDescription": "add labels to managed cluster.", "docsearch:language": "en", "docusaurus_tag": "docs-default-v1.9", "ogUrl": "https://kubevela.io/docs/v1.9/cli/vela_cluster_labels_add/", "og:description": "add labels to managed cluster.", "docsearch:version": "v1.9", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "theme-color": "#ffffff", "og:title": "vela cluster labels add | KubeVela", "docusaurus_version": "v1.9", "generator": "Docusaurus v2.4.3", "language": "en", "ogTitle": "vela cluster labels add | KubeVela", "og:url": "https://kubevela.io/docs/v1.9/cli/vela_cluster_labels_add/", "viewport": "width=device-width, initial-scale=1.0", "docsearch:docusaurus_tag": "docs-default-v1.9", "msapplication-config": "/img/favicons/browserconfig.xml", "scrapeId": "68308678-985e-4cb4-afa0-18b9f380d403", "sourceURL": "https://kubevela.io/docs/v1.9/cli/vela_cluster_labels_add", "url": "https://kubevela.io/docs/v1.9/cli/vela_cluster_labels_add/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela CLI: Add Labels to Managed Cluster\"?\n\nAssistant: Here are the recommended best practices:\n\n• Ensure you have the correct cluster name before adding labels.\n• Use the help option to understand command usage better.\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.9/cli/vela_cluster_labels_add", "title": "KubeVela CLI: Add Labels to Managed Cluster", "description": "This documentation page covers how to add labels to a managed cluster using KubeVela CLI commands.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:36:19", "type": "best_practices", "page_metadata": {"description": "add labels to managed cluster.", "title": "vela cluster labels add | KubeVela", "docusaurus_locale": "en", "twitter:card": "summary_large_image", "ogDescription": "add labels to managed cluster.", "docsearch:language": "en", "docusaurus_tag": "docs-default-v1.9", "ogUrl": "https://kubevela.io/docs/v1.9/cli/vela_cluster_labels_add/", "og:description": "add labels to managed cluster.", "docsearch:version": "v1.9", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "theme-color": "#ffffff", "og:title": "vela cluster labels add | KubeVela", "docusaurus_version": "v1.9", "generator": "Docusaurus v2.4.3", "language": "en", "ogTitle": "vela cluster labels add | KubeVela", "og:url": "https://kubevela.io/docs/v1.9/cli/vela_cluster_labels_add/", "viewport": "width=device-width, initial-scale=1.0", "docsearch:docusaurus_tag": "docs-default-v1.9", "msapplication-config": "/img/favicons/browserconfig.xml", "scrapeId": "68308678-985e-4cb4-afa0-18b9f380d403", "sourceURL": "https://kubevela.io/docs/v1.9/cli/vela_cluster_labels_add", "url": "https://kubevela.io/docs/v1.9/cli/vela_cluster_labels_add/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela Roadmap (2021-09)\"?\n\nAssistant: This page outlines the roadmap for KubeVela from July 1, 2021, to September 30, 2021, detailing core platform features, user experience improvements, and third-party integrations.\n\nHere's a detailed explanation:\n\n\n## Core Platform\n1. Support more built-in capabilities and cloud resources with unified experience, such as monitoring, auto-scaling, middle ware plugins.\n2. Auto binding for cloud resources.\n3. Support more security policy( integrate with OPA, CIS, Popeye ).\n\n## User Experience\n1. Support Dashboard for deploying KubeVela Application.\n2. Support velacp as non-K8s APIServer for CI integration.\n\n## Third-party integrations\n- Core Platform\n- User Experience\n- Third-party integrations\n", "metadata": {"source_url": "https://kubevela.io/docs/roadmap/2021-09-roadmap", "title": "KubeVela Roadmap (2021-09)", "description": "This page outlines the roadmap for KubeVela from July 1, 2021, to September 30, 2021, detailing core platform features, user experience improvements, and third-party integrations.", "has_code_examples": false, "has_best_practices": false, "section_count": 3, "timestamp": "2025-02-28 15:36:25", "type": "overview", "page_metadata": {"msapplication-config": "/img/favicons/browserconfig.xml", "generator": "Docusaurus v2.4.3", "docsearch:docusaurus_tag": "docs-default-v1.10", "twitter:card": "summary_large_image", "og:url": "https://kubevela.io/docs/roadmap/2021-09-roadmap/", "og:title": "Roadmap | KubeVela", "description": "Date: 2021-07-01 to 2021-09-30", "theme-color": "#ffffff", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_tag": "docs-default-v1.10", "ogDescription": "Date: 2021-07-01 to 2021-09-30", "docusaurus_version": "v1.10", "docsearch:version": "v1.10", "ogTitle": "Roadmap | KubeVela", "docusaurus_locale": "en", "docsearch:language": "en", "viewport": "width=device-width, initial-scale=1.0", "title": "Roadmap | KubeVela", "ogUrl": "https://kubevela.io/docs/roadmap/2021-09-roadmap/", "language": "en", "og:description": "Date: 2021-07-01 to 2021-09-30", "scrapeId": "ab50813c-93ae-458d-aa5a-139af0b097ab", "sourceURL": "https://kubevela.io/docs/roadmap/2021-09-roadmap", "url": "https://kubevela.io/docs/roadmap/2021-09-roadmap/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"Delete labels for managed cluster\"?\n\nAssistant: This page provides documentation on how to delete labels for a managed cluster using KubeVela CLI.\n\nHere's a detailed explanation:\n\n\n## Synopsis\nDelete labels for managed cluster.\n\n## Examples\n```codeBlockLines_e6Vv\nvela cluster labels del my-cluster project,owner\n```\n\n## Options\n```codeBlockLines_e6Vv\n  -h, --help   help for del\n```\n\n## Options inherited from parent commands\n```codeBlockLines_e6Vv\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n\n## SEE ALSO\n- [vela cluster labels](https://kubevela.io/docs/v1.9/cli/vela_cluster_labels/) \\- Manage Kubernetes Cluster Labels.\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.9/cli/vela_cluster_labels_del", "title": "Delete labels for managed cluster", "description": "This page provides documentation on how to delete labels for a managed cluster using KubeVela CLI.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:36:37", "type": "overview", "page_metadata": {"docusaurus_tag": "docs-default-v1.9", "ogUrl": "https://kubevela.io/docs/v1.9/cli/vela_cluster_labels_del/", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_version": "v1.9", "og:description": "Delete labels for managed cluster.", "ogDescription": "Delete labels for managed cluster.", "og:title": "vela cluster labels del | KubeVela", "language": "en", "title": "vela cluster labels del | KubeVela", "docusaurus_locale": "en", "ogTitle": "vela cluster labels del | KubeVela", "og:url": "https://kubevela.io/docs/v1.9/cli/vela_cluster_labels_del/", "theme-color": "#ffffff", "description": "Delete labels for managed cluster.", "docsearch:version": "v1.9", "generator": "Docusaurus v2.4.3", "twitter:card": "summary_large_image", "docsearch:language": "en", "docsearch:docusaurus_tag": "docs-default-v1.9", "msapplication-config": "/img/favicons/browserconfig.xml", "viewport": "width=device-width, initial-scale=1.0", "scrapeId": "15430526-81de-4070-8a7e-aed3a024c531", "sourceURL": "https://kubevela.io/docs/v1.9/cli/vela_cluster_labels_del", "url": "https://kubevela.io/docs/v1.9/cli/vela_cluster_labels_del/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"Delete labels for managed cluster\"?\n\nAssistant: Here are some code examples:\n\n### Delete labels command\n```yaml\nvela cluster labels del my-cluster project,owner\n```\n\n### Delete labels help option\n```yaml\n-h, --help   help for del\n```\n\n### Delete labels verbosity option\n```yaml\n-V, --verbosity Level   number for the log level verbosity\n```\n\n### Delete labels yes option\n```yaml\n-y, --yes               Assume yes for all user prompts\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.9/cli/vela_cluster_labels_del", "title": "Delete labels for managed cluster", "description": "This page provides documentation on how to delete labels for a managed cluster using KubeVela CLI.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:36:37", "type": "code_examples", "page_metadata": {"docusaurus_tag": "docs-default-v1.9", "ogUrl": "https://kubevela.io/docs/v1.9/cli/vela_cluster_labels_del/", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_version": "v1.9", "og:description": "Delete labels for managed cluster.", "ogDescription": "Delete labels for managed cluster.", "og:title": "vela cluster labels del | KubeVela", "language": "en", "title": "vela cluster labels del | KubeVela", "docusaurus_locale": "en", "ogTitle": "vela cluster labels del | KubeVela", "og:url": "https://kubevela.io/docs/v1.9/cli/vela_cluster_labels_del/", "theme-color": "#ffffff", "description": "Delete labels for managed cluster.", "docsearch:version": "v1.9", "generator": "Docusaurus v2.4.3", "twitter:card": "summary_large_image", "docsearch:language": "en", "docsearch:docusaurus_tag": "docs-default-v1.9", "msapplication-config": "/img/favicons/browserconfig.xml", "viewport": "width=device-width, initial-scale=1.0", "scrapeId": "15430526-81de-4070-8a7e-aed3a024c531", "sourceURL": "https://kubevela.io/docs/v1.9/cli/vela_cluster_labels_del", "url": "https://kubevela.io/docs/v1.9/cli/vela_cluster_labels_del/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"Delete labels for managed cluster\"?\n\nAssistant: Here are the recommended best practices:\n\n• For up-to-date documentation, refer to the latest version of KubeVela.\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.9/cli/vela_cluster_labels_del", "title": "Delete labels for managed cluster", "description": "This page provides documentation on how to delete labels for a managed cluster using KubeVela CLI.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:36:37", "type": "best_practices", "page_metadata": {"docusaurus_tag": "docs-default-v1.9", "ogUrl": "https://kubevela.io/docs/v1.9/cli/vela_cluster_labels_del/", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_version": "v1.9", "og:description": "Delete labels for managed cluster.", "ogDescription": "Delete labels for managed cluster.", "og:title": "vela cluster labels del | KubeVela", "language": "en", "title": "vela cluster labels del | KubeVela", "docusaurus_locale": "en", "ogTitle": "vela cluster labels del | KubeVela", "og:url": "https://kubevela.io/docs/v1.9/cli/vela_cluster_labels_del/", "theme-color": "#ffffff", "description": "Delete labels for managed cluster.", "docsearch:version": "v1.9", "generator": "Docusaurus v2.4.3", "twitter:card": "summary_large_image", "docsearch:language": "en", "docsearch:docusaurus_tag": "docs-default-v1.9", "msapplication-config": "/img/favicons/browserconfig.xml", "viewport": "width=device-width, initial-scale=1.0", "scrapeId": "15430526-81de-4070-8a7e-aed3a024c531", "sourceURL": "https://kubevela.io/docs/v1.9/cli/vela_cluster_labels_del", "url": "https://kubevela.io/docs/v1.9/cli/vela_cluster_labels_del/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela Roadmap\"?\n\nAssistant: This page outlines the roadmap for KubeVela, detailing the core platform features, third-party integrations, and best practices for usage.\n\nHere's a detailed explanation:\n\n\n## Core Platform\n- Support KubeVela Dynamic API in vela-prism. It will allow user to make integration with third-party APIs easily, with the use of CUE templates.\n- Upgrade CUE execution engine in KubeVela and allow user to integrate customized function providers and manage CUE templates into modules.\n- Support take-over policy, allowing user to adopt existing Kubernetes resources to KubeVela applications.\n- Support read-only policy, allowing user to attach traits and extra capabilities (like observability) to existing resources, on top of the application model.\n- Upgrade HealthScope controller which helps users to continuously track the status of applications.\n- Support metadata backup and migration for data recovery of the control plane.\n- Conduct load-testing experiments in multi-cluster scenario and conclude recommend settings and optimization techniques.\n\n## Third-party integrations and more addons\n- Integrate tracing and alerting tools into observability addons.\n\n## Best practices\n- Provide one or more best practices about how to use KubeVela in game/delivery/monitoring scenario.\n", "metadata": {"source_url": "https://kubevela.io/docs/roadmap/2023-03-roadmap", "title": "KubeVela Roadmap", "description": "This page outlines the roadmap for KubeVela, detailing the core platform features, third-party integrations, and best practices for usage.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 15:36:43", "type": "overview", "page_metadata": {"docsearch:version": "v1.10", "ogDescription": "Date: 2023-01-01 to 2023-03-31", "generator": "Docusaurus v2.4.3", "ogUrl": "https://kubevela.io/docs/roadmap/2023-03-roadmap/", "docusaurus_tag": "docs-default-v1.10", "docsearch:language": "en", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogTitle": "Roadmap 2023.03 | KubeVela", "docusaurus_version": "v1.10", "description": "Date: 2023-01-01 to 2023-03-31", "og:description": "Date: 2023-01-01 to 2023-03-31", "theme-color": "#ffffff", "og:url": "https://kubevela.io/docs/roadmap/2023-03-roadmap/", "og:title": "Roadmap 2023.03 | KubeVela", "viewport": "width=device-width, initial-scale=1.0", "title": "Roadmap 2023.03 | KubeVela", "language": "en", "msapplication-config": "/img/favicons/browserconfig.xml", "twitter:card": "summary_large_image", "docusaurus_locale": "en", "docsearch:docusaurus_tag": "docs-default-v1.10", "scrapeId": "3d8acf7d-6d44-422b-b095-cec8fa42371d", "sourceURL": "https://kubevela.io/docs/roadmap/2023-03-roadmap", "url": "https://kubevela.io/docs/roadmap/2023-03-roadmap/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela Roadmap\"?\n\nAssistant: Here are the recommended best practices:\n\n• Provide one or more best practices about how to use KubeVela in game/delivery/monitoring scenario.\n", "metadata": {"source_url": "https://kubevela.io/docs/roadmap/2023-03-roadmap", "title": "KubeVela Roadmap", "description": "This page outlines the roadmap for KubeVela, detailing the core platform features, third-party integrations, and best practices for usage.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 15:36:43", "type": "best_practices", "page_metadata": {"docsearch:version": "v1.10", "ogDescription": "Date: 2023-01-01 to 2023-03-31", "generator": "Docusaurus v2.4.3", "ogUrl": "https://kubevela.io/docs/roadmap/2023-03-roadmap/", "docusaurus_tag": "docs-default-v1.10", "docsearch:language": "en", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogTitle": "Roadmap 2023.03 | KubeVela", "docusaurus_version": "v1.10", "description": "Date: 2023-01-01 to 2023-03-31", "og:description": "Date: 2023-01-01 to 2023-03-31", "theme-color": "#ffffff", "og:url": "https://kubevela.io/docs/roadmap/2023-03-roadmap/", "og:title": "Roadmap 2023.03 | KubeVela", "viewport": "width=device-width, initial-scale=1.0", "title": "Roadmap 2023.03 | KubeVela", "language": "en", "msapplication-config": "/img/favicons/browserconfig.xml", "twitter:card": "summary_large_image", "docusaurus_locale": "en", "docsearch:docusaurus_tag": "docs-default-v1.10", "scrapeId": "3d8acf7d-6d44-422b-b095-cec8fa42371d", "sourceURL": "https://kubevela.io/docs/roadmap/2023-03-roadmap", "url": "https://kubevela.io/docs/roadmap/2023-03-roadmap/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela Roadmap\"?\n\nAssistant: This page outlines the roadmap for KubeVela from April 2021 to June 2021, detailing core platform features, user experience improvements, and third-party integrations.\n\nHere's a detailed explanation:\n\n\n## Core Platform\n1. Implement Application serverside Kustomize and Workflow.\n2. KubeVela as a control plane.\n   - Application Controller deploy resources directly to remote clusters and instead of using AppContext\n   - AppRollout should be able to work in runtime cluster or rollout remote cluster resources\n3. Multi-cluster and Multi-environment support, applications can deploy in different environments which contains different clusters with different strategies.\n4. Better Helm and Kustomize support, users can deploy a helm chart or a git repo directly without any more effort.\n5. Support built-in Application monitoring.\n6. Support more rollout strategies.\n   - blue-green\n   - traffic management rollout\n   - canary\n   - A/B\n7. Support a general CUE controller which can glue more than K8s CRDs, it should support more protocol such as restful API,\ngo function call, etc.\n8. Discoverable capability registries with more back integrations(file server/github/OSS).\n\n## User Experience\n1. Develop tools and CI integration.\n2. Refine our docs and website.\n\n## Third-party integrations\n1. Integrate with Open Cluster Management.\n2. Integrate with Flux CD\n3. Integrate with Dapr to enable end-to-end microservice application development and deployment workflow.\n4. Integrate with Tilt for local development.\n", "metadata": {"source_url": "https://kubevela.io/docs/roadmap/2021-06-roadmap", "title": "KubeVela Roadmap", "description": "This page outlines the roadmap for KubeVela from April 2021 to June 2021, detailing core platform features, user experience improvements, and third-party integrations.", "has_code_examples": false, "has_best_practices": false, "section_count": 3, "timestamp": "2025-02-28 15:36:50", "type": "overview", "page_metadata": {"ogUrl": "https://kubevela.io/docs/roadmap/2021-06-roadmap/", "docusaurus_locale": "en", "og:description": "Date: 2021-04-01 to 2021-06-30", "ogDescription": "Date: 2021-04-01 to 2021-06-30", "ogTitle": "Roadmap | KubeVela", "docsearch:language": "en", "docsearch:version": "v1.10", "language": "en", "twitter:card": "summary_large_image", "og:title": "Roadmap | KubeVela", "docusaurus_tag": "docs-default-v1.10", "generator": "Docusaurus v2.4.3", "docsearch:docusaurus_tag": "docs-default-v1.10", "description": "Date: 2021-04-01 to 2021-06-30", "viewport": "width=device-width, initial-scale=1.0", "og:url": "https://kubevela.io/docs/roadmap/2021-06-roadmap/", "theme-color": "#ffffff", "msapplication-config": "/img/favicons/browserconfig.xml", "docusaurus_version": "v1.10", "title": "Roadmap | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "scrapeId": "b324943d-24d0-4596-ac78-f9fc553c2d53", "sourceURL": "https://kubevela.io/docs/roadmap/2021-06-roadmap", "url": "https://kubevela.io/docs/roadmap/2021-06-roadmap/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela CLI - System Info\"?\n\nAssistant: Print the system deployment detail information in all namespaces with label app.kubernetes.io/name=vela-core.\n\nHere's a detailed explanation:\n\n\n## Synopsis\nPrint the system deployment detail information in all namespaces with label app.kubernetes.io/name=vela-core.\n\n## Options\n```codeBlockLines_e6Vv\n  -h, --help             help for info\n  -o, --output string    Specifies the output format. One of: (wide | yaml)\n  -s, --specify string   Specify the name of the deployment to check detail information. If empty, it will print all deployments information. Default to be empty.\n```\n\n## Options inherited from parent commands\n```codeBlockLines_e6Vv\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n\n## SEE ALSO\n- [vela system](https://kubevela.io/docs/v1.9/cli/vela_system/) \\- Manage system.\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.9/cli/vela_system_info", "title": "KubeVela CLI - System Info", "description": "Print the system deployment detail information in all namespaces with label app.kubernetes.io/name=vela-core.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 15:36:59", "type": "overview", "page_metadata": {"ogDescription": "Print the system deployment detail information in all namespaces with label app.kubernetes.io/name=vela-core.", "viewport": "width=device-width, initial-scale=1.0", "theme-color": "#ffffff", "docsearch:docusaurus_tag": "docs-default-v1.9", "og:description": "Print the system deployment detail information in all namespaces with label app.kubernetes.io/name=vela-core.", "language": "en", "twitter:card": "summary_large_image", "title": "vela system info | KubeVela", "docsearch:language": "en", "docusaurus_version": "v1.9", "docusaurus_tag": "docs-default-v1.9", "docsearch:version": "v1.9", "msapplication-config": "/img/favicons/browserconfig.xml", "og:url": "https://kubevela.io/docs/v1.9/cli/vela_system_info/", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogTitle": "vela system info | KubeVela", "ogUrl": "https://kubevela.io/docs/v1.9/cli/vela_system_info/", "og:title": "vela system info | KubeVela", "description": "Print the system deployment detail information in all namespaces with label app.kubernetes.io/name=vela-core.", "docusaurus_locale": "en", "generator": "Docusaurus v2.4.3", "scrapeId": "2329cce3-ace0-4d59-bb55-ad637a222bf2", "sourceURL": "https://kubevela.io/docs/v1.9/cli/vela_system_info", "url": "https://kubevela.io/docs/v1.9/cli/vela_system_info/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"KubeVela CLI - System Info\"?\n\nAssistant: Here are some code examples:\n\n### Command to print system info\n```yaml\nvela system info [flags]\n```\n\n### Options for system info command\n```yaml\n  -h, --help             help for info\n  -o, --output string    Specifies the output format. One of: (wide | yaml)\n  -s, --specify string   Specify the name of the deployment to check detail information. If empty, it will print all deployments information. Default to be empty.\n```\n\n### Inherited options from parent commands\n```yaml\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.9/cli/vela_system_info", "title": "KubeVela CLI - System Info", "description": "Print the system deployment detail information in all namespaces with label app.kubernetes.io/name=vela-core.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 15:36:59", "type": "code_examples", "page_metadata": {"ogDescription": "Print the system deployment detail information in all namespaces with label app.kubernetes.io/name=vela-core.", "viewport": "width=device-width, initial-scale=1.0", "theme-color": "#ffffff", "docsearch:docusaurus_tag": "docs-default-v1.9", "og:description": "Print the system deployment detail information in all namespaces with label app.kubernetes.io/name=vela-core.", "language": "en", "twitter:card": "summary_large_image", "title": "vela system info | KubeVela", "docsearch:language": "en", "docusaurus_version": "v1.9", "docusaurus_tag": "docs-default-v1.9", "docsearch:version": "v1.9", "msapplication-config": "/img/favicons/browserconfig.xml", "og:url": "https://kubevela.io/docs/v1.9/cli/vela_system_info/", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogTitle": "vela system info | KubeVela", "ogUrl": "https://kubevela.io/docs/v1.9/cli/vela_system_info/", "og:title": "vela system info | KubeVela", "description": "Print the system deployment detail information in all namespaces with label app.kubernetes.io/name=vela-core.", "docusaurus_locale": "en", "generator": "Docusaurus v2.4.3", "scrapeId": "2329cce3-ace0-4d59-bb55-ad637a222bf2", "sourceURL": "https://kubevela.io/docs/v1.9/cli/vela_system_info", "url": "https://kubevela.io/docs/v1.9/cli/vela_system_info/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela CLI - System Info\"?\n\nAssistant: Here are the recommended best practices:\n\n• For detailed information, specify the deployment name using the -s option.\n• Use the -o option to choose the output format that best suits your needs.\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.9/cli/vela_system_info", "title": "KubeVela CLI - System Info", "description": "Print the system deployment detail information in all namespaces with label app.kubernetes.io/name=vela-core.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 15:36:59", "type": "best_practices", "page_metadata": {"ogDescription": "Print the system deployment detail information in all namespaces with label app.kubernetes.io/name=vela-core.", "viewport": "width=device-width, initial-scale=1.0", "theme-color": "#ffffff", "docsearch:docusaurus_tag": "docs-default-v1.9", "og:description": "Print the system deployment detail information in all namespaces with label app.kubernetes.io/name=vela-core.", "language": "en", "twitter:card": "summary_large_image", "title": "vela system info | KubeVela", "docsearch:language": "en", "docusaurus_version": "v1.9", "docusaurus_tag": "docs-default-v1.9", "docsearch:version": "v1.9", "msapplication-config": "/img/favicons/browserconfig.xml", "og:url": "https://kubevela.io/docs/v1.9/cli/vela_system_info/", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogTitle": "vela system info | KubeVela", "ogUrl": "https://kubevela.io/docs/v1.9/cli/vela_system_info/", "og:title": "vela system info | KubeVela", "description": "Print the system deployment detail information in all namespaces with label app.kubernetes.io/name=vela-core.", "docusaurus_locale": "en", "generator": "Docusaurus v2.4.3", "scrapeId": "2329cce3-ace0-4d59-bb55-ad637a222bf2", "sourceURL": "https://kubevela.io/docs/v1.9/cli/vela_system_info", "url": "https://kubevela.io/docs/v1.9/cli/vela_system_info/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela Helm Multi-Cluster Tutorial\"?\n\nAssistant: This tutorial covers how to use KubeVela with Helm in a multi-cluster environment.\n\nHere's a detailed explanation:\n\n\n## Introduction\nKubeVela is a modern application delivery platform that enables developers to deploy applications across multiple clusters seamlessly.\n\n## Installation\nTo install KubeVela, follow the instructions provided in the official documentation.\n\n## Usage\nThis section explains how to use KubeVela with Helm to manage applications in a multi-cluster setup.\n\n## Conclusion\nKubeVela simplifies application delivery across clusters, making it easier for developers to manage their applications.\n", "metadata": {"source_url": "https://kubevela.io/docs/tutorials/helm-multi-cluster", "title": "KubeVela Helm Multi-Cluster Tutorial", "description": "This tutorial covers how to use KubeVela with Helm in a multi-cluster environment.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 15:37:16", "type": "overview", "page_metadata": {"og:title": "Multi Cluster Delivery | KubeVela", "msapplication-config": "/img/favicons/browserconfig.xml", "language": "en", "description": "This doc has been migrated to this blog.", "viewport": "width=device-width, initial-scale=1.0", "docsearch:language": "en", "og:description": "This doc has been migrated to this blog.", "theme-color": "#ffffff", "docusaurus_locale": "en", "og:url": "https://kubevela.io/docs/tutorials/helm-multi-cluster/", "docsearch:version": "v1.10", "ogDescription": "This doc has been migrated to this blog.", "ogTitle": "Multi Cluster Delivery | KubeVela", "twitter:card": "summary_large_image", "docusaurus_version": "v1.10", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_tag": "docs-default-v1.10", "generator": "Docusaurus v2.4.3", "title": "Multi Cluster Delivery | KubeVela", "ogUrl": "https://kubevela.io/docs/tutorials/helm-multi-cluster/", "docsearch:docusaurus_tag": "docs-default-v1.10", "scrapeId": "908d2341-c49c-420d-8a95-0539325e403d", "sourceURL": "https://kubevela.io/docs/tutorials/helm-multi-cluster", "url": "https://kubevela.io/docs/tutorials/helm-multi-cluster/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"KubeVela Helm Multi-Cluster Tutorial\"?\n\nAssistant: Here are some code examples:\n\n### KubeVela Installation Command\n```yaml\nkubectl apply -f https://charts.kubevela.net/core/v1.10.0/kubevela-core.yaml\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/tutorials/helm-multi-cluster", "title": "KubeVela Helm Multi-Cluster Tutorial", "description": "This tutorial covers how to use KubeVela with Helm in a multi-cluster environment.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 15:37:16", "type": "code_examples", "page_metadata": {"og:title": "Multi Cluster Delivery | KubeVela", "msapplication-config": "/img/favicons/browserconfig.xml", "language": "en", "description": "This doc has been migrated to this blog.", "viewport": "width=device-width, initial-scale=1.0", "docsearch:language": "en", "og:description": "This doc has been migrated to this blog.", "theme-color": "#ffffff", "docusaurus_locale": "en", "og:url": "https://kubevela.io/docs/tutorials/helm-multi-cluster/", "docsearch:version": "v1.10", "ogDescription": "This doc has been migrated to this blog.", "ogTitle": "Multi Cluster Delivery | KubeVela", "twitter:card": "summary_large_image", "docusaurus_version": "v1.10", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_tag": "docs-default-v1.10", "generator": "Docusaurus v2.4.3", "title": "Multi Cluster Delivery | KubeVela", "ogUrl": "https://kubevela.io/docs/tutorials/helm-multi-cluster/", "docsearch:docusaurus_tag": "docs-default-v1.10", "scrapeId": "908d2341-c49c-420d-8a95-0539325e403d", "sourceURL": "https://kubevela.io/docs/tutorials/helm-multi-cluster", "url": "https://kubevela.io/docs/tutorials/helm-multi-cluster/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela Helm Multi-Cluster Tutorial\"?\n\nAssistant: Here are the recommended best practices:\n\n• Always check for the latest version of KubeVela before installation.\n• Refer to the official documentation for detailed instructions.\n", "metadata": {"source_url": "https://kubevela.io/docs/tutorials/helm-multi-cluster", "title": "KubeVela Helm Multi-Cluster Tutorial", "description": "This tutorial covers how to use KubeVela with Helm in a multi-cluster environment.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 15:37:16", "type": "best_practices", "page_metadata": {"og:title": "Multi Cluster Delivery | KubeVela", "msapplication-config": "/img/favicons/browserconfig.xml", "language": "en", "description": "This doc has been migrated to this blog.", "viewport": "width=device-width, initial-scale=1.0", "docsearch:language": "en", "og:description": "This doc has been migrated to this blog.", "theme-color": "#ffffff", "docusaurus_locale": "en", "og:url": "https://kubevela.io/docs/tutorials/helm-multi-cluster/", "docsearch:version": "v1.10", "ogDescription": "This doc has been migrated to this blog.", "ogTitle": "Multi Cluster Delivery | KubeVela", "twitter:card": "summary_large_image", "docusaurus_version": "v1.10", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_tag": "docs-default-v1.10", "generator": "Docusaurus v2.4.3", "title": "Multi Cluster Delivery | KubeVela", "ogUrl": "https://kubevela.io/docs/tutorials/helm-multi-cluster/", "docsearch:docusaurus_tag": "docs-default-v1.10", "scrapeId": "908d2341-c49c-420d-8a95-0539325e403d", "sourceURL": "https://kubevela.io/docs/tutorials/helm-multi-cluster", "url": "https://kubevela.io/docs/tutorials/helm-multi-cluster/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela CLI Completion\"?\n\nAssistant: Output shell completion code for the specified shell (bash or zsh).\n\nHere's a detailed explanation:\n\n\n## Synopsis\nOutput shell completion code for the specified shell (bash or zsh). The shell code must be evaluated to provide interactive completion of vela commands.\n\n## Options\n```codeBlockLines_e6Vv\n  -h, --help   help for completion\n```\n\n## Options inherited from parent commands\n```codeBlockLines_e6Vv\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n\n## SEE ALSO\n- [vela completion bash](https://kubevela.io/docs/v1.9/cli/vela_completion_bash/) \\- generate autocompletions script for bash\n- [vela completion zsh](https://kubevela.io/docs/v1.9/cli/vela_completion_zsh/) \\- generate autocompletions script for zsh\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.9/cli/vela_completion", "title": "KubeVela CLI Completion", "description": "Output shell completion code for the specified shell (bash or zsh).", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 15:37:23", "type": "overview", "page_metadata": {"og:title": "vela completion | KubeVela", "ogUrl": "https://kubevela.io/docs/v1.9/cli/vela_completion/", "description": "Output shell completion code for the specified shell (bash or zsh).", "generator": "Docusaurus v2.4.3", "docsearch:version": "v1.9", "docusaurus_locale": "en", "title": "vela completion | KubeVela", "twitter:card": "summary_large_image", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docsearch:docusaurus_tag": "docs-default-v1.9", "theme-color": "#ffffff", "viewport": "width=device-width, initial-scale=1.0", "ogTitle": "vela completion | KubeVela", "og:description": "Output shell completion code for the specified shell (bash or zsh).", "language": "en", "docsearch:language": "en", "docusaurus_version": "v1.9", "docusaurus_tag": "docs-default-v1.9", "og:url": "https://kubevela.io/docs/v1.9/cli/vela_completion/", "msapplication-config": "/img/favicons/browserconfig.xml", "ogDescription": "Output shell completion code for the specified shell (bash or zsh).", "scrapeId": "da4e89dc-b7b5-490f-9982-7f2e26aec127", "sourceURL": "https://kubevela.io/docs/v1.9/cli/vela_completion", "url": "https://kubevela.io/docs/v1.9/cli/vela_completion/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"KubeVela CLI Completion\"?\n\nAssistant: Here are some code examples:\n\n### Options\n```yaml\n```codeBlockLines_e6Vv\n  -h, --help   help for completion\n```\n```\n\n### Options inherited from parent commands\n```yaml\n```codeBlockLines_e6Vv\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.9/cli/vela_completion", "title": "KubeVela CLI Completion", "description": "Output shell completion code for the specified shell (bash or zsh).", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 15:37:23", "type": "code_examples", "page_metadata": {"og:title": "vela completion | KubeVela", "ogUrl": "https://kubevela.io/docs/v1.9/cli/vela_completion/", "description": "Output shell completion code for the specified shell (bash or zsh).", "generator": "Docusaurus v2.4.3", "docsearch:version": "v1.9", "docusaurus_locale": "en", "title": "vela completion | KubeVela", "twitter:card": "summary_large_image", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docsearch:docusaurus_tag": "docs-default-v1.9", "theme-color": "#ffffff", "viewport": "width=device-width, initial-scale=1.0", "ogTitle": "vela completion | KubeVela", "og:description": "Output shell completion code for the specified shell (bash or zsh).", "language": "en", "docsearch:language": "en", "docusaurus_version": "v1.9", "docusaurus_tag": "docs-default-v1.9", "og:url": "https://kubevela.io/docs/v1.9/cli/vela_completion/", "msapplication-config": "/img/favicons/browserconfig.xml", "ogDescription": "Output shell completion code for the specified shell (bash or zsh).", "scrapeId": "da4e89dc-b7b5-490f-9982-7f2e26aec127", "sourceURL": "https://kubevela.io/docs/v1.9/cli/vela_completion", "url": "https://kubevela.io/docs/v1.9/cli/vela_completion/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela CLI Completion\"?\n\nAssistant: Here are the recommended best practices:\n\n• For up-to-date documentation, see the latest version (v1.10).\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.9/cli/vela_completion", "title": "KubeVela CLI Completion", "description": "Output shell completion code for the specified shell (bash or zsh).", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 15:37:23", "type": "best_practices", "page_metadata": {"og:title": "vela completion | KubeVela", "ogUrl": "https://kubevela.io/docs/v1.9/cli/vela_completion/", "description": "Output shell completion code for the specified shell (bash or zsh).", "generator": "Docusaurus v2.4.3", "docsearch:version": "v1.9", "docusaurus_locale": "en", "title": "vela completion | KubeVela", "twitter:card": "summary_large_image", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docsearch:docusaurus_tag": "docs-default-v1.9", "theme-color": "#ffffff", "viewport": "width=device-width, initial-scale=1.0", "ogTitle": "vela completion | KubeVela", "og:description": "Output shell completion code for the specified shell (bash or zsh).", "language": "en", "docsearch:language": "en", "docusaurus_version": "v1.9", "docusaurus_tag": "docs-default-v1.9", "og:url": "https://kubevela.io/docs/v1.9/cli/vela_completion/", "msapplication-config": "/img/favicons/browserconfig.xml", "ogDescription": "Output shell completion code for the specified shell (bash or zsh).", "scrapeId": "da4e89dc-b7b5-490f-9982-7f2e26aec127", "sourceURL": "https://kubevela.io/docs/v1.9/cli/vela_completion", "url": "https://kubevela.io/docs/v1.9/cli/vela_completion/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela Workflows Tutorial\"?\n\nAssistant: This documentation provides a tutorial on how to use workflows in KubeVela.\n\nHere's a detailed explanation:\n\n\n## Introduction\nThis is documentation for KubeVela **v1.9**, which is no longer actively maintained. For up-to-date documentation, see the **[latest version](https://kubevela.io/docs/tutorials/workflows/)** (v1.10).\n\n## Release Note\nKubeVela v1.10.0 is now available.(2025-02-06) [Read Release Note](https://github.com/kubevela/kubevela/releases/tag/v1.10.0).\n\n## Migration Notice\nThis docs is migrated to [here](https://kubevela.io/docs/v1.9/how-to/dashboard/application/create-application/#deploy-application).\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.9/tutorials/workflows", "title": "KubeVela Workflows Tutorial", "description": "This documentation provides a tutorial on how to use workflows in KubeVela.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 15:37:29", "type": "overview", "page_metadata": {"docusaurus_tag": "docs-default-v1.9", "og:description": "This article introduces the usage of Workflow and gives you a full picture of it.", "title": "Manage Workflow | KubeVela", "docsearch:version": "v1.9", "og:url": "https://kubevela.io/docs/v1.9/tutorials/workflows/", "docsearch:language": "en", "docusaurus_version": "v1.9", "generator": "Docusaurus v2.4.3", "docsearch:docusaurus_tag": "docs-default-v1.9", "description": "This article introduces the usage of Workflow and gives you a full picture of it.", "theme-color": "#ffffff", "language": "en", "ogDescription": "This article introduces the usage of Workflow and gives you a full picture of it.", "viewport": "width=device-width, initial-scale=1.0", "twitter:card": "summary_large_image", "msapplication-config": "/img/favicons/browserconfig.xml", "ogUrl": "https://kubevela.io/docs/v1.9/tutorials/workflows/", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_locale": "en", "og:title": "Manage Workflow | KubeVela", "ogTitle": "Manage Workflow | KubeVela", "scrapeId": "e4885fd6-56c0-4be7-a86b-d95521cc222e", "sourceURL": "https://kubevela.io/docs/v1.9/tutorials/workflows", "url": "https://kubevela.io/docs/v1.9/tutorials/workflows/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela Workflows Tutorial\"?\n\nAssistant: Here are the recommended best practices:\n\n• If you like KubeVela, give it a star on GitHub!\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.9/tutorials/workflows", "title": "KubeVela Workflows Tutorial", "description": "This documentation provides a tutorial on how to use workflows in KubeVela.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 15:37:29", "type": "best_practices", "page_metadata": {"docusaurus_tag": "docs-default-v1.9", "og:description": "This article introduces the usage of Workflow and gives you a full picture of it.", "title": "Manage Workflow | KubeVela", "docsearch:version": "v1.9", "og:url": "https://kubevela.io/docs/v1.9/tutorials/workflows/", "docsearch:language": "en", "docusaurus_version": "v1.9", "generator": "Docusaurus v2.4.3", "docsearch:docusaurus_tag": "docs-default-v1.9", "description": "This article introduces the usage of Workflow and gives you a full picture of it.", "theme-color": "#ffffff", "language": "en", "ogDescription": "This article introduces the usage of Workflow and gives you a full picture of it.", "viewport": "width=device-width, initial-scale=1.0", "twitter:card": "summary_large_image", "msapplication-config": "/img/favicons/browserconfig.xml", "ogUrl": "https://kubevela.io/docs/v1.9/tutorials/workflows/", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_locale": "en", "og:title": "Manage Workflow | KubeVela", "ogTitle": "Manage Workflow | KubeVela", "scrapeId": "e4885fd6-56c0-4be7-a86b-d95521cc222e", "sourceURL": "https://kubevela.io/docs/v1.9/tutorials/workflows", "url": "https://kubevela.io/docs/v1.9/tutorials/workflows/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela CLI - Manage Environments\"?\n\nAssistant: Manage environments for vela applications to run.\n\nHere's a detailed explanation:\n\n\n## Synopsis\nManage environments for vela applications to run.\n\n## Options\n```codeBlockLines_e6Vv\n  -h, --help   help for env\n```\n\n## Options inherited from parent commands\n```codeBlockLines_e6Vv\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n\n## SEE ALSO\n- [vela env delete](https://kubevela.io/docs/v1.9/cli/vela_env_delete/) \\- Delete an environment.\n- [vela env init](https://kubevela.io/docs/v1.9/cli/vela_env_init/) \\- Create environment for vela applications to run.\n- [vela env ls](https://kubevela.io/docs/v1.9/cli/vela_env_ls/) \\- List environments for vela applications to run.\n- [vela env set](https://kubevela.io/docs/v1.9/cli/vela_env_set/) \\- Set an environment.\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.9/cli/vela_env", "title": "KubeVela CLI - Manage Environments", "description": "Manage environments for vela applications to run.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 15:37:57", "type": "overview", "page_metadata": {"ogTitle": "vela env | KubeVela", "language": "en", "ogDescription": "Manage environments for vela applications to run.", "theme-color": "#ffffff", "docusaurus_locale": "en", "ogUrl": "https://kubevela.io/docs/v1.9/cli/vela_env/", "og:title": "vela env | KubeVela", "og:description": "Manage environments for vela applications to run.", "msapplication-config": "/img/favicons/browserconfig.xml", "docsearch:language": "en", "twitter:card": "summary_large_image", "docsearch:version": "v1.9", "title": "vela env | KubeVela", "generator": "Docusaurus v2.4.3", "og:url": "https://kubevela.io/docs/v1.9/cli/vela_env/", "docusaurus_version": "v1.9", "description": "Manage environments for vela applications to run.", "viewport": "width=device-width, initial-scale=1.0", "docusaurus_tag": "docs-default-v1.9", "docsearch:docusaurus_tag": "docs-default-v1.9", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "scrapeId": "6c4777c3-975a-440b-9698-c1ea9c95ea7f", "sourceURL": "https://kubevela.io/docs/v1.9/cli/vela_env", "url": "https://kubevela.io/docs/v1.9/cli/vela_env/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"KubeVela CLI - Manage Environments\"?\n\nAssistant: Here are some code examples:\n\n### Options\n```yaml\n```codeBlockLines_e6Vv\n  -h, --help   help for env\n```\n```\n\n### Options inherited from parent commands\n```yaml\n```codeBlockLines_e6Vv\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.9/cli/vela_env", "title": "KubeVela CLI - Manage Environments", "description": "Manage environments for vela applications to run.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 15:37:57", "type": "code_examples", "page_metadata": {"ogTitle": "vela env | KubeVela", "language": "en", "ogDescription": "Manage environments for vela applications to run.", "theme-color": "#ffffff", "docusaurus_locale": "en", "ogUrl": "https://kubevela.io/docs/v1.9/cli/vela_env/", "og:title": "vela env | KubeVela", "og:description": "Manage environments for vela applications to run.", "msapplication-config": "/img/favicons/browserconfig.xml", "docsearch:language": "en", "twitter:card": "summary_large_image", "docsearch:version": "v1.9", "title": "vela env | KubeVela", "generator": "Docusaurus v2.4.3", "og:url": "https://kubevela.io/docs/v1.9/cli/vela_env/", "docusaurus_version": "v1.9", "description": "Manage environments for vela applications to run.", "viewport": "width=device-width, initial-scale=1.0", "docusaurus_tag": "docs-default-v1.9", "docsearch:docusaurus_tag": "docs-default-v1.9", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "scrapeId": "6c4777c3-975a-440b-9698-c1ea9c95ea7f", "sourceURL": "https://kubevela.io/docs/v1.9/cli/vela_env", "url": "https://kubevela.io/docs/v1.9/cli/vela_env/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela CLI - Manage Environments\"?\n\nAssistant: Here are the recommended best practices:\n\n• For up-to-date documentation, see the latest version (v1.10).\n• If you like KubeVela, give it a star on GitHub!\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.9/cli/vela_env", "title": "KubeVela CLI - Manage Environments", "description": "Manage environments for vela applications to run.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 15:37:57", "type": "best_practices", "page_metadata": {"ogTitle": "vela env | KubeVela", "language": "en", "ogDescription": "Manage environments for vela applications to run.", "theme-color": "#ffffff", "docusaurus_locale": "en", "ogUrl": "https://kubevela.io/docs/v1.9/cli/vela_env/", "og:title": "vela env | KubeVela", "og:description": "Manage environments for vela applications to run.", "msapplication-config": "/img/favicons/browserconfig.xml", "docsearch:language": "en", "twitter:card": "summary_large_image", "docsearch:version": "v1.9", "title": "vela env | KubeVela", "generator": "Docusaurus v2.4.3", "og:url": "https://kubevela.io/docs/v1.9/cli/vela_env/", "docusaurus_version": "v1.9", "description": "Manage environments for vela applications to run.", "viewport": "width=device-width, initial-scale=1.0", "docusaurus_tag": "docs-default-v1.9", "docsearch:docusaurus_tag": "docs-default-v1.9", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "scrapeId": "6c4777c3-975a-440b-9698-c1ea9c95ea7f", "sourceURL": "https://kubevela.io/docs/v1.9/cli/vela_env", "url": "https://kubevela.io/docs/v1.9/cli/vela_env/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela CLI Version Command\"?\n\nAssistant: This documentation provides information on the 'vela version' command, which prints the build version information of KubeVela.\n\nHere's a detailed explanation:\n\n\n## Synopsis\nPrints vela build version information.\n\n## Options\n```codeBlockLines_e6Vv\n  -h, --help   help for version\n```\n\n## Options inherited from parent commands\n```codeBlockLines_e6Vv\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n\n## SEE ALSO\n- [vela version list](https://kubevela.io/docs/v1.9/cli/vela_version_list/) - List all available versions\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.9/cli/vela_version", "title": "KubeVela CLI Version Command", "description": "This documentation provides information on the 'vela version' command, which prints the build version information of KubeVela.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 15:39:06", "type": "overview", "page_metadata": {"ogTitle": "vela version | KubeVela", "ogDescription": "Prints vela build version information.", "og:title": "vela version | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "description": "Prints vela build version information.", "docusaurus_version": "v1.9", "msapplication-config": "/img/favicons/browserconfig.xml", "twitter:card": "summary_large_image", "language": "en", "docsearch:version": "v1.9", "docsearch:docusaurus_tag": "docs-default-v1.9", "theme-color": "#ffffff", "docsearch:language": "en", "og:description": "Prints vela build version information.", "generator": "Docusaurus v2.4.3", "title": "vela version | KubeVela", "docusaurus_locale": "en", "docusaurus_tag": "docs-default-v1.9", "viewport": "width=device-width, initial-scale=1.0", "ogUrl": "https://kubevela.io/docs/v1.9/cli/vela_version/", "og:url": "https://kubevela.io/docs/v1.9/cli/vela_version/", "scrapeId": "9ec977db-0f66-4822-a616-62998755f922", "sourceURL": "https://kubevela.io/docs/v1.9/cli/vela_version", "url": "https://kubevela.io/docs/v1.9/cli/vela_version/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"KubeVela CLI Version Command\"?\n\nAssistant: Here are some code examples:\n\n### Vela Version Command\n```yaml\nvela version [flags]\n```\n\n### Help Option\n```yaml\n  -h, --help   help for version\n```\n\n### Verbosity Option\n```yaml\n  -V, --verbosity Level   number for the log level verbosity\n```\n\n### Assume Yes Option\n```yaml\n  -y, --yes               Assume yes for all user prompts\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.9/cli/vela_version", "title": "KubeVela CLI Version Command", "description": "This documentation provides information on the 'vela version' command, which prints the build version information of KubeVela.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 15:39:06", "type": "code_examples", "page_metadata": {"ogTitle": "vela version | KubeVela", "ogDescription": "Prints vela build version information.", "og:title": "vela version | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "description": "Prints vela build version information.", "docusaurus_version": "v1.9", "msapplication-config": "/img/favicons/browserconfig.xml", "twitter:card": "summary_large_image", "language": "en", "docsearch:version": "v1.9", "docsearch:docusaurus_tag": "docs-default-v1.9", "theme-color": "#ffffff", "docsearch:language": "en", "og:description": "Prints vela build version information.", "generator": "Docusaurus v2.4.3", "title": "vela version | KubeVela", "docusaurus_locale": "en", "docusaurus_tag": "docs-default-v1.9", "viewport": "width=device-width, initial-scale=1.0", "ogUrl": "https://kubevela.io/docs/v1.9/cli/vela_version/", "og:url": "https://kubevela.io/docs/v1.9/cli/vela_version/", "scrapeId": "9ec977db-0f66-4822-a616-62998755f922", "sourceURL": "https://kubevela.io/docs/v1.9/cli/vela_version", "url": "https://kubevela.io/docs/v1.9/cli/vela_version/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela CLI Version Command\"?\n\nAssistant: Here are the recommended best practices:\n\n• For up-to-date documentation, see the latest version (v1.10).\n• If you like KubeVela, give it a star on GitHub.\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.9/cli/vela_version", "title": "KubeVela CLI Version Command", "description": "This documentation provides information on the 'vela version' command, which prints the build version information of KubeVela.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 15:39:06", "type": "best_practices", "page_metadata": {"ogTitle": "vela version | KubeVela", "ogDescription": "Prints vela build version information.", "og:title": "vela version | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "description": "Prints vela build version information.", "docusaurus_version": "v1.9", "msapplication-config": "/img/favicons/browserconfig.xml", "twitter:card": "summary_large_image", "language": "en", "docsearch:version": "v1.9", "docsearch:docusaurus_tag": "docs-default-v1.9", "theme-color": "#ffffff", "docsearch:language": "en", "og:description": "Prints vela build version information.", "generator": "Docusaurus v2.4.3", "title": "vela version | KubeVela", "docusaurus_locale": "en", "docusaurus_tag": "docs-default-v1.9", "viewport": "width=device-width, initial-scale=1.0", "ogUrl": "https://kubevela.io/docs/v1.9/cli/vela_version/", "og:url": "https://kubevela.io/docs/v1.9/cli/vela_version/", "scrapeId": "9ec977db-0f66-4822-a616-62998755f922", "sourceURL": "https://kubevela.io/docs/v1.9/cli/vela_version", "url": "https://kubevela.io/docs/v1.9/cli/vela_version/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela v1.10.0 Release Notes\"?\n\nAssistant: This page provides information about the release of KubeVela v1.10.0, including links to documentation for components and traits.\n\nHere's a detailed explanation:\n\n\n## Release Information\nKubeVela v1.10.0 is now available as of 2025-02-06.\n\n## Documentation Links\nThis documentation has been merged into the following sections: \n- [Component Documentation](https://kubevela.io/docs/platform-engineers/components/custom-component/)\n- [Trait Documentation](https://kubevela.io/docs/platform-engineers/traits/customize-trait/)\n", "metadata": {"source_url": "https://kubevela.io/docs/platform-engineers/traits/status", "title": "KubeVela v1.10.0 Release Notes", "description": "This page provides information about the release of KubeVela v1.10.0, including links to documentation for components and traits.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-02-28 15:39:11", "type": "overview", "page_metadata": {"generator": "Docusaurus v2.4.3", "msapplication-config": "/img/favicons/browserconfig.xml", "language": "en", "og:description": "This documentation has been merged into component and trait.", "ogUrl": "https://kubevela.io/docs/platform-engineers/traits/status/", "og:url": "https://kubevela.io/docs/platform-engineers/traits/status/", "docsearch:language": "en", "viewport": "width=device-width, initial-scale=1.0", "og:title": "Define Health for Definition | KubeVela", "docsearch:version": "v1.10", "twitter:card": "summary_large_image", "title": "Define Health for Definition | KubeVela", "ogDescription": "This documentation has been merged into component and trait.", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogTitle": "Define Health for Definition | KubeVela", "docusaurus_version": "v1.10", "theme-color": "#ffffff", "docsearch:docusaurus_tag": "docs-default-v1.10", "docusaurus_tag": "docs-default-v1.10", "docusaurus_locale": "en", "description": "This documentation has been merged into component and trait.", "scrapeId": "4064ebff-bda9-46a7-b751-e9854c3cb39e", "sourceURL": "https://kubevela.io/docs/platform-engineers/traits/status", "url": "https://kubevela.io/docs/platform-engineers/traits/status/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela v1.10.0 Release Notes\"?\n\nAssistant: Here are the recommended best practices:\n\n• If you like KubeVela, give it a star on GitHub.\n", "metadata": {"source_url": "https://kubevela.io/docs/platform-engineers/traits/status", "title": "KubeVela v1.10.0 Release Notes", "description": "This page provides information about the release of KubeVela v1.10.0, including links to documentation for components and traits.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-02-28 15:39:11", "type": "best_practices", "page_metadata": {"generator": "Docusaurus v2.4.3", "msapplication-config": "/img/favicons/browserconfig.xml", "language": "en", "og:description": "This documentation has been merged into component and trait.", "ogUrl": "https://kubevela.io/docs/platform-engineers/traits/status/", "og:url": "https://kubevela.io/docs/platform-engineers/traits/status/", "docsearch:language": "en", "viewport": "width=device-width, initial-scale=1.0", "og:title": "Define Health for Definition | KubeVela", "docsearch:version": "v1.10", "twitter:card": "summary_large_image", "title": "Define Health for Definition | KubeVela", "ogDescription": "This documentation has been merged into component and trait.", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogTitle": "Define Health for Definition | KubeVela", "docusaurus_version": "v1.10", "theme-color": "#ffffff", "docsearch:docusaurus_tag": "docs-default-v1.10", "docusaurus_tag": "docs-default-v1.10", "docusaurus_locale": "en", "description": "This documentation has been merged into component and trait.", "scrapeId": "4064ebff-bda9-46a7-b751-e9854c3cb39e", "sourceURL": "https://kubevela.io/docs/platform-engineers/traits/status", "url": "https://kubevela.io/docs/platform-engineers/traits/status/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela Documentation\"?\n\nAssistant: This page provides information about the KubeVela v1.10.0 release and migration details.\n\nHere's a detailed explanation:\n\n\n## Release Information\nKubeVela v1.10.0 is now available. (2025-02-06) [Read Release Note](https://github.com/kubevela/kubevela/releases/tag/v1.10.0)\n", "metadata": {"source_url": "https://kubevela.io/docs/platform-engineers/cue/advanced", "title": "KubeVela Documentation", "description": "This page provides information about the KubeVela v1.10.0 release and migration details.", "has_code_examples": false, "has_best_practices": true, "section_count": 1, "timestamp": "2025-02-28 15:39:15", "type": "overview", "page_metadata": {"docusaurus_tag": "docs-default-v1.10", "title": "CUE advanced | KubeVela", "docusaurus_version": "v1.10", "ogDescription": "The docs has been migrated, please refer to Learning Manage Definition with CUE sections for details.", "ogUrl": "https://kubevela.io/docs/platform-engineers/cue/advanced/", "docusaurus_locale": "en", "og:title": "CUE advanced | KubeVela", "theme-color": "#ffffff", "twitter:card": "summary_large_image", "generator": "Docusaurus v2.4.3", "docsearch:language": "en", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docsearch:version": "v1.10", "og:url": "https://kubevela.io/docs/platform-engineers/cue/advanced/", "description": "The docs has been migrated, please refer to Learning Manage Definition with CUE sections for details.", "og:description": "The docs has been migrated, please refer to Learning Manage Definition with CUE sections for details.", "ogTitle": "CUE advanced | KubeVela", "language": "en", "docsearch:docusaurus_tag": "docs-default-v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "viewport": "width=device-width, initial-scale=1.0", "scrapeId": "c27f1746-d26f-4e28-97a5-19de9677feff", "sourceURL": "https://kubevela.io/docs/platform-engineers/cue/advanced", "url": "https://kubevela.io/docs/platform-engineers/cue/advanced/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela Documentation\"?\n\nAssistant: Here are the recommended best practices:\n\n• If you like KubeVela, give it a star on GitHub!\n• Refer to the Learning Manage Definition with CUE sections for details.\n", "metadata": {"source_url": "https://kubevela.io/docs/platform-engineers/cue/advanced", "title": "KubeVela Documentation", "description": "This page provides information about the KubeVela v1.10.0 release and migration details.", "has_code_examples": false, "has_best_practices": true, "section_count": 1, "timestamp": "2025-02-28 15:39:15", "type": "best_practices", "page_metadata": {"docusaurus_tag": "docs-default-v1.10", "title": "CUE advanced | KubeVela", "docusaurus_version": "v1.10", "ogDescription": "The docs has been migrated, please refer to Learning Manage Definition with CUE sections for details.", "ogUrl": "https://kubevela.io/docs/platform-engineers/cue/advanced/", "docusaurus_locale": "en", "og:title": "CUE advanced | KubeVela", "theme-color": "#ffffff", "twitter:card": "summary_large_image", "generator": "Docusaurus v2.4.3", "docsearch:language": "en", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docsearch:version": "v1.10", "og:url": "https://kubevela.io/docs/platform-engineers/cue/advanced/", "description": "The docs has been migrated, please refer to Learning Manage Definition with CUE sections for details.", "og:description": "The docs has been migrated, please refer to Learning Manage Definition with CUE sections for details.", "ogTitle": "CUE advanced | KubeVela", "language": "en", "docsearch:docusaurus_tag": "docs-default-v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "viewport": "width=device-width, initial-scale=1.0", "scrapeId": "c27f1746-d26f-4e28-97a5-19de9677feff", "sourceURL": "https://kubevela.io/docs/platform-engineers/cue/advanced", "url": "https://kubevela.io/docs/platform-engineers/cue/advanced/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela Documentation\"?\n\nAssistant: This page provides information about KubeVela v1.10.0 and links to various resources for extending and using KubeVela.\n\nHere's a detailed explanation:\n\n\n## KubeVela v1.10.0 Release\nKubeVela v1.10.0 is now available as of 2025-02-06. Refer to the [Release Note](https://github.com/kubevela/kubevela/releases/tag/v1.10.0) for more details.\n\n## Trait References\nRefer to [All Trait References](https://kubevela.io/docs/end-user/traits/references/) for all other trait types.\n\n## Install Addons\nGet more from [install addons](https://kubevela.io/docs/how-to/cli/addon/addon/).\n\n## Extend KubeVela\nYou can extend KubeVela by yourself. Read [how to build definitions](https://kubevela.io/docs/platform-engineers/cue/definition-edit/) to build your own capability from existing ones. You can also [build your own capability from scratch](https://kubevela.io/docs/platform-engineers/cue/advanced/) and learn more features about how to [define custom components](https://kubevela.io/docs/platform-engineers/components/custom-component/). Additionally, you can [build your own addons](https://kubevela.io/docs/platform-engineers/addon/intro/).\n", "metadata": {"source_url": "https://kubevela.io/docs/end-user/traits/more", "title": "KubeVela Documentation", "description": "This page provides information about KubeVela v1.10.0 and links to various resources for extending and using KubeVela.", "has_code_examples": false, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 15:39:25", "type": "overview", "page_metadata": {"docsearch:docusaurus_tag": "docs-default-v1.10", "viewport": "width=device-width, initial-scale=1.0", "ogUrl": "https://kubevela.io/docs/end-user/traits/more/", "msapplication-config": "/img/favicons/browserconfig.xml", "og:title": "Get More Traits | KubeVela", "twitter:card": "summary_large_image", "docusaurus_locale": "en", "generator": "Docusaurus v2.4.3", "docsearch:version": "v1.10", "title": "Get More Traits | KubeVela", "theme-color": "#ffffff", "language": "en", "docsearch:language": "en", "og:url": "https://kubevela.io/docs/end-user/traits/more/", "docusaurus_tag": "docs-default-v1.10", "description": "* Refer to All Trait References for all other trait types.", "og:description": "* Refer to All Trait References for all other trait types.", "ogDescription": "* Refer to All Trait References for all other trait types.", "docusaurus_version": "v1.10", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogTitle": "Get More Traits | KubeVela", "scrapeId": "e25f9c0f-f871-4176-84c5-5bad77482262", "sourceURL": "https://kubevela.io/docs/end-user/traits/more", "url": "https://kubevela.io/docs/end-user/traits/more/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela Documentation\"?\n\nAssistant: Here are the recommended best practices:\n\n• If you like KubeVela, give it a star on GitHub!\n", "metadata": {"source_url": "https://kubevela.io/docs/end-user/traits/more", "title": "KubeVela Documentation", "description": "This page provides information about KubeVela v1.10.0 and links to various resources for extending and using KubeVela.", "has_code_examples": false, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 15:39:25", "type": "best_practices", "page_metadata": {"docsearch:docusaurus_tag": "docs-default-v1.10", "viewport": "width=device-width, initial-scale=1.0", "ogUrl": "https://kubevela.io/docs/end-user/traits/more/", "msapplication-config": "/img/favicons/browserconfig.xml", "og:title": "Get More Traits | KubeVela", "twitter:card": "summary_large_image", "docusaurus_locale": "en", "generator": "Docusaurus v2.4.3", "docsearch:version": "v1.10", "title": "Get More Traits | KubeVela", "theme-color": "#ffffff", "language": "en", "docsearch:language": "en", "og:url": "https://kubevela.io/docs/end-user/traits/more/", "docusaurus_tag": "docs-default-v1.10", "description": "* Refer to All Trait References for all other trait types.", "og:description": "* Refer to All Trait References for all other trait types.", "ogDescription": "* Refer to All Trait References for all other trait types.", "docusaurus_version": "v1.10", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogTitle": "Get More Traits | KubeVela", "scrapeId": "e25f9c0f-f871-4176-84c5-5bad77482262", "sourceURL": "https://kubevela.io/docs/end-user/traits/more", "url": "https://kubevela.io/docs/end-user/traits/more/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela Documentation\"?\n\nAssistant: This page provides information about the KubeVela v1.10.0 release and its migration to the Velaux addon introduction.\n\nHere's a detailed explanation:\n\n\n## KubeVela v1.10.0 Release\nKubeVela v1.10.0 is now available as of 2025-02-06. You can read the release notes for more details.\n\n## Version Information\nCurrent version: v1.10\n\n## Migration Notice\nThis documentation has migrated to the Velaux addon introduction.\n", "metadata": {"source_url": "https://kubevela.io/docs/getting-started/velaux-concept", "title": "KubeVela Documentation", "description": "This page provides information about the KubeVela v1.10.0 release and its migration to the Velaux addon introduction.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 15:39:32", "type": "overview", "page_metadata": {"ogTitle": "VelaUX Concept | KubeVela", "og:title": "VelaUX Concept | KubeVela", "og:url": "https://kubevela.io/docs/getting-started/velaux-concept/", "description": "This doc has migrated to velaux addon introdution.", "og:description": "This doc has migrated to velaux addon introdution.", "theme-color": "#ffffff", "viewport": "width=device-width, initial-scale=1.0", "docusaurus_version": "v1.10", "ogUrl": "https://kubevela.io/docs/getting-started/velaux-concept/", "docusaurus_locale": "en", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docsearch:language": "en", "docsearch:docusaurus_tag": "docs-default-v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "generator": "Docusaurus v2.4.3", "docusaurus_tag": "docs-default-v1.10", "title": "VelaUX Concept | KubeVela", "ogDescription": "This doc has migrated to velaux addon introdution.", "docsearch:version": "v1.10", "twitter:card": "summary_large_image", "language": "en", "scrapeId": "3512c586-3ea9-4d2c-a9f4-c54af125fc77", "sourceURL": "https://kubevela.io/docs/getting-started/velaux-concept", "url": "https://kubevela.io/docs/getting-started/velaux-concept/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela Documentation\"?\n\nAssistant: Here are the recommended best practices:\n\n• If you like KubeVela, give it a star on GitHub.\n", "metadata": {"source_url": "https://kubevela.io/docs/getting-started/velaux-concept", "title": "KubeVela Documentation", "description": "This page provides information about the KubeVela v1.10.0 release and its migration to the Velaux addon introduction.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 15:39:32", "type": "best_practices", "page_metadata": {"ogTitle": "VelaUX Concept | KubeVela", "og:title": "VelaUX Concept | KubeVela", "og:url": "https://kubevela.io/docs/getting-started/velaux-concept/", "description": "This doc has migrated to velaux addon introdution.", "og:description": "This doc has migrated to velaux addon introdution.", "theme-color": "#ffffff", "viewport": "width=device-width, initial-scale=1.0", "docusaurus_version": "v1.10", "ogUrl": "https://kubevela.io/docs/getting-started/velaux-concept/", "docusaurus_locale": "en", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docsearch:language": "en", "docsearch:docusaurus_tag": "docs-default-v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "generator": "Docusaurus v2.4.3", "docusaurus_tag": "docs-default-v1.10", "title": "VelaUX Concept | KubeVela", "ogDescription": "This doc has migrated to velaux addon introdution.", "docsearch:version": "v1.10", "twitter:card": "summary_large_image", "language": "en", "scrapeId": "3512c586-3ea9-4d2c-a9f4-c54af125fc77", "sourceURL": "https://kubevela.io/docs/getting-started/velaux-concept", "url": "https://kubevela.io/docs/getting-started/velaux-concept/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela Roadmap\"?\n\nAssistant: This page outlines the roadmap for KubeVela from March 2023 to June 2023, detailing the features and improvements planned for the core platform.\n\nHere's a detailed explanation:\n\n\n## Core Platform\n- Support controller sharding to provide horizontal scaling capability.\n- Support CueX in vela-core to support external CUE render/execution provider. Make best practices in SaaS integration and extending native APIs such as creating VelaUX Targets / Projects in the core control plane.\n- Support SDK auto-generation for KubeVela components, traits, policies and workflow steps.\n- Support initialization capability for cloud resources, including RDS, ACK, AWS EKS.\n", "metadata": {"source_url": "https://kubevela.io/docs/roadmap/2023-06-roadmap", "title": "KubeVela Roadmap", "description": "This page outlines the roadmap for KubeVela from March 2023 to June 2023, detailing the features and improvements planned for the core platform.", "has_code_examples": false, "has_best_practices": false, "section_count": 1, "timestamp": "2025-02-28 15:39:36", "type": "overview", "page_metadata": {"title": "Roadmap 2023.06 | KubeVela", "generator": "Docusaurus v2.4.3", "docsearch:language": "en", "description": "Date: 2023-03-01 to 2023-06-31", "og:description": "Date: 2023-03-01 to 2023-06-31", "og:url": "https://kubevela.io/docs/roadmap/2023-06-roadmap/", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "theme-color": "#ffffff", "viewport": "width=device-width, initial-scale=1.0", "twitter:card": "summary_large_image", "ogDescription": "Date: 2023-03-01 to 2023-06-31", "docusaurus_locale": "en", "ogTitle": "Roadmap 2023.06 | KubeVela", "docusaurus_version": "v1.10", "docusaurus_tag": "docs-default-v1.10", "language": "en", "docsearch:version": "v1.10", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:title": "Roadmap 2023.06 | KubeVela", "ogUrl": "https://kubevela.io/docs/roadmap/2023-06-roadmap/", "msapplication-config": "/img/favicons/browserconfig.xml", "scrapeId": "a79b0798-a1ed-436a-99a4-8f628974335f", "sourceURL": "https://kubevela.io/docs/roadmap/2023-06-roadmap", "url": "https://kubevela.io/docs/roadmap/2023-06-roadmap/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela Installation Guide\"?\n\nAssistant: This page provides detailed instructions on how to install KubeVela, including requirements, CLI installation, core installation, and optional components.\n\nHere's a detailed explanation:\n\n\n## Kubernetes Requirements\n- Kubernetes cluster >= v1.19 && <= v1.26\n\nKubeVela relies on Kubernetes as a control plane. The control plane could be any managed Kubernetes offering or your own clusters, such as:\n\n- Alibaba Cloud [ACK Service](https://www.aliyun.com/product/kubernetes)\n- AWS [EKS Service](https://aws.amazon.com/cn/eks)\n- Azure [AKS Service](https://azure.microsoft.com/en-us/services/kubernetes-service)\n- Google [GKE Service](https://cloud.google.com/kubernetes-engine)\n- Rancher [K3s](https://rancher.com/docs/k3s/latest/en/quick-start/) or [RKE](https://github.com/rancher/rke/releases)\n\n## Install KubeVela CLI\nKubeVela CLI provides an easy way to engage and manage your application delivery in command lines.\n\n- Script\n- Homebrew\n- Download directly from releases\n- Asdf-vm\n- Docker\n\n**MacOS/Linux**\n\n```bash\ncurl -fsSl https://kubevela.io/script/install.sh | bash\n```\n\n**Windows**\n\nnote\n\nOnly the official release version is supported.\n\n```powershell\npowershell -Command \"iwr -useb https://kubevela.io/script/install.ps1 | iex\"\n```\n\n**MacOS/Linux**\n\nUpdate your brew first. Please note that the brew method only supports the installation of the official release version.\n\n```bash\nbrew update\n```\n\nThen install KubeVela CLI\n\n```bash\nbrew install kubevela\n```\n\n- Download the latest `vela` binary file via [release log](https://github.com/kubevela/kubevela/releases).\n- Unzip the binary file, and configure the environment variables in `$PATH`, and you're done.\n\n```bash\nsudo mv ./vela /usr/local/bin/vela\n```\n\nnote\n\n- [Installation Tips](https://github.com/kubevela/kubevela/issues/625):\n- If you are using a Mac system, it will pop up a warning that \"vela\" cannot be opened because the package from the developer cannot be verified.\n- MacOS imposes stricter restrictions on the software that can run in the system. You can temporarily solve this problem by opening `System Preference ->Security & Privacy -> General` and clicking on `Allow Anyway`.\n\n**MacOS/Linux**\n\nIf you are using the [asdf version manager](https://asdf-vm.com/), you can install `vela` with:\n\n```bash\n# Add the vela plugin for asdf\nasdf plugin add vela\n\n# List all installable versions\nasdf list-all vela\n\n# Install the desired version (could be \"latest\")\nasdf install vela <version>\n\n# set it as the global version, unless a project declares it otherwise locally\nasdf global vela <version>\n```\n\nIf you have docker environment, you can easily run CLI with the vela CLI docker image called `oamdev/vela-cli`:\n\n```bash\n$ docker run --rm -it -v ~/.kube:/root/.kube oamdev/vela-cli version\nCLI Version: master\nCore Version: v1.3.4\nGitRevision: git-1d823780\nGolangVersion: go1.17.10\n```\n\nRefer to [using Vela CLI docker image](https://kubevela.io/docs/platform-engineers/system-operation/vela-cli-image/) for more usage.\n\n## Install KubeVela Core\n- Default\n- Helm\n\n```bash\n$ vela install\n```\n\ncheck out the outcome\n\n```bash\n...\nWatching for changes to Job kubevela-vela-core-cluster-gateway-tls-secret-patch with timeout of 18m0s\nAdd/Modify event for kubevela-vela-core-cluster-gateway-tls-secret-patch: ADDED\nkubevela-vela-core-cluster-gateway-tls-secret-patch: Jobs active: 0, jobs failed: 0, jobs succeeded: 0\nAdd/Modify event for kubevela-vela-core-cluster-gateway-tls-secret-patch: MODIFIED\nkubevela-vela-core-cluster-gateway-tls-secret-patch: Jobs active: 1, jobs failed: 0, jobs succeeded: 0\nAdd/Modify event for kubevela-vela-core-cluster-gateway-tls-secret-patch: MODIFIED\nkubevela-vela-core-cluster-gateway-tls-secret-patch: Jobs active: 1, jobs failed: 0, jobs succeeded: 0\nAdd/Modify event for kubevela-vela-core-cluster-gateway-tls-secret-patch: MODIFIED\nStarting delete for \"kubevela-vela-core-admission\" ServiceAccount\nStarting delete for \"kubevela-vela-core-admission\" ClusterRole\nStarting delete for \"kubevela-vela-core-admission\" ClusterRoleBinding\nStarting delete for \"kubevela-vela-core-admission\" Role\nStarting delete for \"kubevela-vela-core-admission\" RoleBinding\nStarting delete for \"kubevela-vela-core-admission-patch\" Job\nStarting delete for \"kubevela-vela-core-cluster-gateway-admission\" ServiceAccount\nStarting delete for \"kubevela-vela-core-cluster-gateway-admission\" Role\nStarting delete for \"kubevela-vela-core-cluster-gateway-admission\" RoleBinding\nStarting delete for \"kubevela-vela-core-cluster-gateway-tls-secret-patch\" Job\n\nKubeVela control plane has been successfully set up on your cluster.\nIf you want to enable dashboard, please run \"vela addon enable velaux\"\n```\n\nIf you are helm user, you can also use helm to install KubeVela core:\n\nnote\n\nhelm v3.2.0+ required\n\n```bash\nhelm repo add kubevela https://kubevela.github.io/charts\nhelm repo update\nhelm install --create-namespace -n vela-system kubevela kubevela/vela-core --wait\n```\n\n## Install VelaUX\nVelaUX is a dashboard for KubeVela. It is a web application that runs in your cluster. You can access it with your browser.\nThis is optional if you don't use UI console of KubeVela.\n\nPlease refer to [VelaUX Guide](https://kubevela.io/docs/reference/addons/velaux/).\n\n## Custom Installation or Upgrade\nPlease refer [advanced installation](https://kubevela.io/docs/platform-engineers/advanced-install/)\n", "metadata": {"source_url": "https://kubevela.io/docs/installation/kubernetes", "title": "KubeVela Installation Guide", "description": "This page provides detailed instructions on how to install KubeVela, including requirements, CLI installation, core installation, and optional components.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:41:04", "type": "overview", "page_metadata": {"ogTitle": "Install KubeVela on Kubernetes | KubeVela", "og:description": "1. Kubernetes Requirements:", "docusaurus_tag": "docs-default-v1.10", "ogDescription": "1. Kubernetes Requirements:", "theme-color": "#ffffff", "msapplication-config": "/img/favicons/browserconfig.xml", "description": "1. Kubernetes Requirements:", "og:url": "https://kubevela.io/docs/installation/kubernetes/", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "generator": "Docusaurus v2.4.3", "twitter:card": "summary_large_image", "docsearch:docusaurus_tag": "docs-default-v1.10", "title": "Install KubeVela on Kubernetes | KubeVela", "viewport": "width=device-width, initial-scale=1.0", "og:title": "Install KubeVela on Kubernetes | KubeVela", "docsearch:version": "v1.10", "docusaurus_locale": "en", "docusaurus_version": "v1.10", "docsearch:language": "en", "ogUrl": "https://kubevela.io/docs/installation/kubernetes/", "language": "en", "scrapeId": "777c2999-0c14-4d9d-8aa5-f1b8007fdfd9", "sourceURL": "https://kubevela.io/docs/installation/kubernetes", "url": "https://kubevela.io/docs/installation/kubernetes/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"KubeVela Installation Guide\"?\n\nAssistant: Here are some code examples:\n\n### Install KubeVela CLI (MacOS/Linux)\n```yaml\ncurl -fsSl https://kubevela.io/script/install.sh | bash\n```\n\n### Install KubeVela CLI (Windows)\n```yaml\npowershell -Command \"iwr -useb https://kubevela.io/script/install.ps1 | iex\"\n```\n\n### Update Homebrew\n```yaml\nbrew update\n```\n\n### Install KubeVela CLI via Homebrew\n```yaml\nbrew install kubevela\n```\n\n### Move Vela Binary to PATH\n```yaml\nsudo mv ./vela /usr/local/bin/vela\n```\n\n### Install Vela with asdf version manager\n```yaml\n# Add the vela plugin for asdf\nasdf plugin add vela\n\n# List all installable versions\nasdf list-all vela\n\n# Install the desired version (could be \"latest\")\nasdf install vela <version>\n\n# set it as the global version, unless a project declares it otherwise locally\nasdf global vela <version>\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/installation/kubernetes", "title": "KubeVela Installation Guide", "description": "This page provides detailed instructions on how to install KubeVela, including requirements, CLI installation, core installation, and optional components.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:41:04", "type": "code_examples", "page_metadata": {"ogTitle": "Install KubeVela on Kubernetes | KubeVela", "og:description": "1. Kubernetes Requirements:", "docusaurus_tag": "docs-default-v1.10", "ogDescription": "1. Kubernetes Requirements:", "theme-color": "#ffffff", "msapplication-config": "/img/favicons/browserconfig.xml", "description": "1. Kubernetes Requirements:", "og:url": "https://kubevela.io/docs/installation/kubernetes/", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "generator": "Docusaurus v2.4.3", "twitter:card": "summary_large_image", "docsearch:docusaurus_tag": "docs-default-v1.10", "title": "Install KubeVela on Kubernetes | KubeVela", "viewport": "width=device-width, initial-scale=1.0", "og:title": "Install KubeVela on Kubernetes | KubeVela", "docsearch:version": "v1.10", "docusaurus_locale": "en", "docusaurus_version": "v1.10", "docsearch:language": "en", "ogUrl": "https://kubevela.io/docs/installation/kubernetes/", "language": "en", "scrapeId": "777c2999-0c14-4d9d-8aa5-f1b8007fdfd9", "sourceURL": "https://kubevela.io/docs/installation/kubernetes", "url": "https://kubevela.io/docs/installation/kubernetes/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela Installation Guide\"?\n\nAssistant: Here are the recommended best practices:\n\n• If you are using a Mac system, it will pop up a warning that \"vela\" cannot be opened because the package from the developer cannot be verified. MacOS imposes stricter restrictions on the software that can run in the system. You can temporarily solve this problem by opening `System Preference ->Security & Privacy -> General` and clicking on `Allow Anyway`.\n• helm v3.2.0+ is required for Helm installation.\n", "metadata": {"source_url": "https://kubevela.io/docs/installation/kubernetes", "title": "KubeVela Installation Guide", "description": "This page provides detailed instructions on how to install KubeVela, including requirements, CLI installation, core installation, and optional components.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:41:04", "type": "best_practices", "page_metadata": {"ogTitle": "Install KubeVela on Kubernetes | KubeVela", "og:description": "1. Kubernetes Requirements:", "docusaurus_tag": "docs-default-v1.10", "ogDescription": "1. Kubernetes Requirements:", "theme-color": "#ffffff", "msapplication-config": "/img/favicons/browserconfig.xml", "description": "1. Kubernetes Requirements:", "og:url": "https://kubevela.io/docs/installation/kubernetes/", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "generator": "Docusaurus v2.4.3", "twitter:card": "summary_large_image", "docsearch:docusaurus_tag": "docs-default-v1.10", "title": "Install KubeVela on Kubernetes | KubeVela", "viewport": "width=device-width, initial-scale=1.0", "og:title": "Install KubeVela on Kubernetes | KubeVela", "docsearch:version": "v1.10", "docusaurus_locale": "en", "docusaurus_version": "v1.10", "docsearch:language": "en", "ogUrl": "https://kubevela.io/docs/installation/kubernetes/", "language": "en", "scrapeId": "777c2999-0c14-4d9d-8aa5-f1b8007fdfd9", "sourceURL": "https://kubevela.io/docs/installation/kubernetes", "url": "https://kubevela.io/docs/installation/kubernetes/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"Delete an application\"?\n\nAssistant: Delete KubeVela applications. KubeVela application deletion is associated with the recycle of underlying resources. By default, the resources created by the KubeVela application will be deleted once it is not in use or the application is deleted. There is garbage-collect policy in KubeVela application that you can use to configure customized recycle rules.\n\nHere's a detailed explanation:\n\n\n## Synopsis\nDelete applications\n\nDelete KubeVela applications. KubeVela application deletion is associated with the recycle of underlying resources. By default, the resources created by the KubeVela application will be deleted once it is not in use or the application is deleted. There is garbage-collect policy in KubeVela application that you can use to configure customized recycle rules.\n\nThis command supports delete application in various modes. Natively, you can use it like \"kubectl delete app [app-name]\". In the cases you only want to delete the application but leave the resources there, you can use the --orphan parameter. In the cases the server-side controller is uninstalled, or you want to manually skip some errors in the deletion process (like lack privileges or handle cluster disconnection), you can use the --force parameter.\n\n## Examples\n```shell\n  # Delete an application\n  vela delete my-app\n\n  # Delete multiple applications in a namespace\n  vela delete app-1 app-2 -n example\n\n  # Delete all applications in one namespace\n  vela delete -n example --all\n\n  # Delete application without waiting to be deleted\n  vela delete my-app --wait=false\n\n  # Delete application without confirmation\n  vela delete my-app -y\n\n  # Force delete application at client-side\n  vela delete my-app -f\n\n  # Delete application by orphaning resources and skip recycling them\n  vela delete my-app --orphan\n\n  # Delete application interactively\n  vela delete my-app -i\n```\n\n## Options\n```shell\n      --all                delete all the application under the given namespace\n  -e, --env string         The environment name for the CLI request\n  -f, --force              force delete the application\n  -h, --help               help for delete\n  -i, --interactive        delete the application interactively\n  -n, --namespace string   If present, the namespace scope for this CLI request\n  -o, --orphan             delete the application and orphan managed resources\n  -w, --wait               wait util the application is deleted completely (default true)\n```\n\n## Options inherited from parent commands\n```shell\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_delete", "title": "Delete an application", "description": "Delete KubeVela applications. KubeVela application deletion is associated with the recycle of underlying resources. By default, the resources created by the KubeVela application will be deleted once it is not in use or the application is deleted. There is garbage-collect policy in KubeVela application that you can use to configure customized recycle rules.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 15:41:45", "type": "overview", "page_metadata": {"og:url": "https://kubevela.io/docs/cli/vela_delete/", "twitter:card": "summary_large_image", "generator": "Docusaurus v2.4.3", "docusaurus_tag": "docs-default-v1.10", "ogUrl": "https://kubevela.io/docs/cli/vela_delete/", "docsearch:version": "v1.10", "docusaurus_locale": "en", "og:description": "Delete an application.", "language": "en", "docusaurus_version": "v1.10", "ogDescription": "Delete an application.", "viewport": "width=device-width, initial-scale=1.0", "og:title": "vela delete | KubeVela", "ogTitle": "vela delete | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "title": "vela delete | KubeVela", "docsearch:language": "en", "docsearch:docusaurus_tag": "docs-default-v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "description": "Delete an application.", "theme-color": "#ffffff", "scrapeId": "4fd4f716-549a-4f55-82b2-f054caa446e7", "sourceURL": "https://kubevela.io/docs/cli/vela_delete", "url": "https://kubevela.io/docs/cli/vela_delete/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"Delete an application\"?\n\nAssistant: Here are some code examples:\n\n### Delete an application\n```yaml\nvela delete my-app\n```\n\n### Delete multiple applications in a namespace\n```yaml\nvela delete app-1 app-2 -n example\n```\n\n### Delete all applications in one namespace\n```yaml\nvela delete -n example --all\n```\n\n### Delete application without waiting to be deleted\n```yaml\nvela delete my-app --wait=false\n```\n\n### Delete application without confirmation\n```yaml\nvela delete my-app -y\n```\n\n### Force delete application at client-side\n```yaml\nvela delete my-app -f\n```\n\n### Delete application by orphaning resources and skip recycling them\n```yaml\nvela delete my-app --orphan\n```\n\n### Delete application interactively\n```yaml\nvela delete my-app -i\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_delete", "title": "Delete an application", "description": "Delete KubeVela applications. KubeVela application deletion is associated with the recycle of underlying resources. By default, the resources created by the KubeVela application will be deleted once it is not in use or the application is deleted. There is garbage-collect policy in KubeVela application that you can use to configure customized recycle rules.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 15:41:45", "type": "code_examples", "page_metadata": {"og:url": "https://kubevela.io/docs/cli/vela_delete/", "twitter:card": "summary_large_image", "generator": "Docusaurus v2.4.3", "docusaurus_tag": "docs-default-v1.10", "ogUrl": "https://kubevela.io/docs/cli/vela_delete/", "docsearch:version": "v1.10", "docusaurus_locale": "en", "og:description": "Delete an application.", "language": "en", "docusaurus_version": "v1.10", "ogDescription": "Delete an application.", "viewport": "width=device-width, initial-scale=1.0", "og:title": "vela delete | KubeVela", "ogTitle": "vela delete | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "title": "vela delete | KubeVela", "docsearch:language": "en", "docsearch:docusaurus_tag": "docs-default-v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "description": "Delete an application.", "theme-color": "#ffffff", "scrapeId": "4fd4f716-549a-4f55-82b2-f054caa446e7", "sourceURL": "https://kubevela.io/docs/cli/vela_delete", "url": "https://kubevela.io/docs/cli/vela_delete/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"Delete an application\"?\n\nAssistant: Here are the recommended best practices:\n\n• Use the --orphan parameter if you want to delete the application but keep the resources.\n• Use the --force parameter to skip errors during deletion, such as lack of privileges or cluster disconnection.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_delete", "title": "Delete an application", "description": "Delete KubeVela applications. KubeVela application deletion is associated with the recycle of underlying resources. By default, the resources created by the KubeVela application will be deleted once it is not in use or the application is deleted. There is garbage-collect policy in KubeVela application that you can use to configure customized recycle rules.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 15:41:45", "type": "best_practices", "page_metadata": {"og:url": "https://kubevela.io/docs/cli/vela_delete/", "twitter:card": "summary_large_image", "generator": "Docusaurus v2.4.3", "docusaurus_tag": "docs-default-v1.10", "ogUrl": "https://kubevela.io/docs/cli/vela_delete/", "docsearch:version": "v1.10", "docusaurus_locale": "en", "og:description": "Delete an application.", "language": "en", "docusaurus_version": "v1.10", "ogDescription": "Delete an application.", "viewport": "width=device-width, initial-scale=1.0", "og:title": "vela delete | KubeVela", "ogTitle": "vela delete | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "title": "vela delete | KubeVela", "docsearch:language": "en", "docsearch:docusaurus_tag": "docs-default-v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "description": "Delete an application.", "theme-color": "#ffffff", "scrapeId": "4fd4f716-549a-4f55-82b2-f054caa446e7", "sourceURL": "https://kubevela.io/docs/cli/vela_delete", "url": "https://kubevela.io/docs/cli/vela_delete/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"vela def init\"?\n\nAssistant: Init a new definition with given arguments or interactively\n\nHere's a detailed explanation:\n\n\n## Synopsis\nInit a new definition with given arguments or interactively\n\n- We support parsing a single YAML file (like kubernetes objects) into the cue-style template.\nHowever, we do not support variables in YAML file currently, which prevents users from directly feeding files like helm chart directly.\nWe may introduce such features in the future.\n\n## Examples\n```shell\n# Command below initiate an empty TraitDefinition named my-ingress\n> vela def init my-ingress -t trait --desc \"My ingress trait definition.\" > ./my-ingress.cue\n# Command below initiate a definition named my-def interactively and save it to ./my-def.cue\n> vela def init my-def -i --output ./my-def.cue\n# Command below initiate a ComponentDefinition named my-webservice with the template parsed from ./template.yaml.\n> vela def init my-webservice -i --template-yaml ./template.yaml\n# Initiate a Terraform ComponentDefinition named vswitch from Github for Alibaba Cloud.\n> vela def init vswitch --type component --provider alibaba --desc xxx --git https://github.com/kubevela-contrib/terraform-modules.git --path alibaba/vswitch\n# Initiate a Terraform ComponentDefinition named redis from local file for AWS.\n> vela def init redis --type component --provider aws --desc \"Terraform configuration for AWS Redis\" --local redis.tf\n```\n\n## Options\n```shell\n  -a, --alias string           Specify the alias of the new definition.\n  -d, --desc string            Specify the description of the new definition.\n      --git string             Specify which git repository the configuration(HCL) is stored in. Valid when --provider/-p is set.\n  -h, --help                   help for init\n  -i, --interactive            Specify whether use interactive process to help generate definitions.\n      --local string           Specify the local path of the configuration(HCL) file. Valid when --provider/-p is set.\n  -o, --output string          Specify the output path of the generated definition. If empty, the definition will be printed in the console.\n      --path string            Specify which path the configuration(HCL) is stored in the Git repository. Valid when --git is set.\n  -p, --provider alibaba       Specify which provider the cloud resource definition belongs to. Only alibaba, `aws`, `azure`, `gcp`, `baidu`, `tencent`, `elastic`, `ucloud`, `vsphere` are supported.\n  -f, --template-yaml string   Specify the template yaml file that definition will use to build the schema. If empty, a default template for the given definition type will be used.\n  -t, --type string            Specify the type of the new definition. Valid types: trait, policy, workload, workflow-step, component\n```\n\n## Options inherited from parent commands\n```shell\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n\n## SEE ALSO\n- [vela def](https://kubevela.io/docs/cli/vela_def/) \\- Manage definitions.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_def_init", "title": "vela def init", "description": "Init a new definition with given arguments or interactively", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:42:36", "type": "overview", "page_metadata": {"title": "vela def init | KubeVela", "og:description": "Init a new definition", "ogUrl": "https://kubevela.io/docs/cli/vela_def_init/", "docusaurus_tag": "docs-default-v1.10", "description": "Init a new definition", "ogTitle": "vela def init | KubeVela", "og:title": "vela def init | KubeVela", "msapplication-config": "/img/favicons/browserconfig.xml", "og:url": "https://kubevela.io/docs/cli/vela_def_init/", "viewport": "width=device-width, initial-scale=1.0", "docsearch:version": "v1.10", "docsearch:docusaurus_tag": "docs-default-v1.10", "language": "en", "twitter:card": "summary_large_image", "theme-color": "#ffffff", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_locale": "en", "generator": "Docusaurus v2.4.3", "docsearch:language": "en", "ogDescription": "Init a new definition", "docusaurus_version": "v1.10", "scrapeId": "68be6e0c-4c3e-4b9d-9c32-20f0a03b403a", "sourceURL": "https://kubevela.io/docs/cli/vela_def_init", "url": "https://kubevela.io/docs/cli/vela_def_init/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"vela def init\"?\n\nAssistant: Here are some code examples:\n\n### Command Examples\n```yaml\n# Command below initiate an empty TraitDefinition named my-ingress\n> vela def init my-ingress -t trait --desc \"My ingress trait definition.\" > ./my-ingress.cue\n# Command below initiate a definition named my-def interactively and save it to ./my-def.cue\n> vela def init my-def -i --output ./my-def.cue\n# Command below initiate a ComponentDefinition named my-webservice with the template parsed from ./template.yaml.\n> vela def init my-webservice -i --template-yaml ./template.yaml\n# Initiate a Terraform ComponentDefinition named vswitch from Github for Alibaba Cloud.\n> vela def init vswitch --type component --provider alibaba --desc xxx --git https://github.com/kubevela-contrib/terraform-modules.git --path alibaba/vswitch\n# Initiate a Terraform ComponentDefinition named redis from local file for AWS.\n> vela def init redis --type component --provider aws --desc \"Terraform configuration for AWS Redis\" --local redis.tf\n\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_def_init", "title": "vela def init", "description": "Init a new definition with given arguments or interactively", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:42:36", "type": "code_examples", "page_metadata": {"title": "vela def init | KubeVela", "og:description": "Init a new definition", "ogUrl": "https://kubevela.io/docs/cli/vela_def_init/", "docusaurus_tag": "docs-default-v1.10", "description": "Init a new definition", "ogTitle": "vela def init | KubeVela", "og:title": "vela def init | KubeVela", "msapplication-config": "/img/favicons/browserconfig.xml", "og:url": "https://kubevela.io/docs/cli/vela_def_init/", "viewport": "width=device-width, initial-scale=1.0", "docsearch:version": "v1.10", "docsearch:docusaurus_tag": "docs-default-v1.10", "language": "en", "twitter:card": "summary_large_image", "theme-color": "#ffffff", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_locale": "en", "generator": "Docusaurus v2.4.3", "docsearch:language": "en", "ogDescription": "Init a new definition", "docusaurus_version": "v1.10", "scrapeId": "68be6e0c-4c3e-4b9d-9c32-20f0a03b403a", "sourceURL": "https://kubevela.io/docs/cli/vela_def_init", "url": "https://kubevela.io/docs/cli/vela_def_init/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"vela def init\"?\n\nAssistant: Here are the recommended best practices:\n\n• We support parsing a single YAML file into the cue-style template.\n• Variables in YAML file are not currently supported, which prevents direct feeding of files like helm charts.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_def_init", "title": "vela def init", "description": "Init a new definition with given arguments or interactively", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:42:36", "type": "best_practices", "page_metadata": {"title": "vela def init | KubeVela", "og:description": "Init a new definition", "ogUrl": "https://kubevela.io/docs/cli/vela_def_init/", "docusaurus_tag": "docs-default-v1.10", "description": "Init a new definition", "ogTitle": "vela def init | KubeVela", "og:title": "vela def init | KubeVela", "msapplication-config": "/img/favicons/browserconfig.xml", "og:url": "https://kubevela.io/docs/cli/vela_def_init/", "viewport": "width=device-width, initial-scale=1.0", "docsearch:version": "v1.10", "docsearch:docusaurus_tag": "docs-default-v1.10", "language": "en", "twitter:card": "summary_large_image", "theme-color": "#ffffff", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_locale": "en", "generator": "Docusaurus v2.4.3", "docsearch:language": "en", "ogDescription": "Init a new definition", "docusaurus_version": "v1.10", "scrapeId": "68be6e0c-4c3e-4b9d-9c32-20f0a03b403a", "sourceURL": "https://kubevela.io/docs/cli/vela_def_init", "url": "https://kubevela.io/docs/cli/vela_def_init/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela CLI: Upgrade an Addon\"?\n\nAssistant: This page provides instructions on how to upgrade an addon in a KubeVela cluster.\n\nHere's a detailed explanation:\n\n\n## Synopsis\nUpgrade an addon in cluster.\n\n## Examples\nUpgrade addon by:\n    vela addon upgrade <addon-name>\nUpgrade addon with specify version:\n    vela addon upgrade <addon-name> --version <addon-version>\nUpgrade addon for specific clusters, (local means control plane):\n    vela addon upgrade <addon-name> --clusters={local,cluster1,cluster2}\nUpgrade addon locally:\n    vela addon upgrade <your-local-addon-path>\nUpgrade addon with specified args (the args should be defined in addon's parameters):\n    vela addon upgrade <addon-name> <my-parameter-of-addon>=<my-value>\nThe specified args will be merged with legacy args, what user specified in 'vela addon enable', and non-empty legacy arg will be overridden by non-empty new arg.\n\n## Options\n-c, --clusters string           specify the runtime-clusters to upgrade\n-h, --help                      help for upgrade\n      --override-definitions      override existing definitions if conflict with those contained in this addon\n-s, --skip-version-validating   skip validating system version requirement\n-v, --version string            specify the addon version to upgrade.\n\n## Options inherited from parent commands\n-V, --verbosity Level   number for the log level verbosity\n-y, --yes               Assume yes for all user prompts.\n\n## SEE ALSO\n- [vela addon](https://kubevela.io/docs/cli/vela_addon/) - Manage addons for extension.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_addon_upgrade", "title": "KubeVela CLI: Upgrade an Addon", "description": "This page provides instructions on how to upgrade an addon in a KubeVela cluster.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:42:46", "type": "overview", "page_metadata": {"generator": "Docusaurus v2.4.3", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:title": "vela addon upgrade | KubeVela", "docusaurus_version": "v1.10", "og:url": "https://kubevela.io/docs/cli/vela_addon_upgrade/", "theme-color": "#ffffff", "ogTitle": "vela addon upgrade | KubeVela", "ogDescription": "upgrade an addon", "ogUrl": "https://kubevela.io/docs/cli/vela_addon_upgrade/", "og:description": "upgrade an addon", "title": "vela addon upgrade | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_locale": "en", "docsearch:language": "en", "msapplication-config": "/img/favicons/browserconfig.xml", "docusaurus_tag": "docs-default-v1.10", "description": "upgrade an addon", "viewport": "width=device-width, initial-scale=1.0", "language": "en", "docsearch:version": "v1.10", "twitter:card": "summary_large_image", "scrapeId": "258212b0-d7b3-4628-9d01-64c9b3e09bd2", "sourceURL": "https://kubevela.io/docs/cli/vela_addon_upgrade", "url": "https://kubevela.io/docs/cli/vela_addon_upgrade/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"KubeVela CLI: Upgrade an Addon\"?\n\nAssistant: Here are some code examples:\n\n### Command to Upgrade an Addon\n```yaml\nvela addon upgrade [flags]\n```\n\n### Upgrade Addon Examples\n```yaml\nvela addon upgrade <addon-name>\nvela addon upgrade <addon-name> --version <addon-version>\nvela addon upgrade <addon-name> --clusters={local,cluster1,cluster2}\nvela addon upgrade <your-local-addon-path>\nvela addon upgrade <addon-name> <my-parameter-of-addon>=<my-value>\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_addon_upgrade", "title": "KubeVela CLI: Upgrade an Addon", "description": "This page provides instructions on how to upgrade an addon in a KubeVela cluster.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:42:46", "type": "code_examples", "page_metadata": {"generator": "Docusaurus v2.4.3", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:title": "vela addon upgrade | KubeVela", "docusaurus_version": "v1.10", "og:url": "https://kubevela.io/docs/cli/vela_addon_upgrade/", "theme-color": "#ffffff", "ogTitle": "vela addon upgrade | KubeVela", "ogDescription": "upgrade an addon", "ogUrl": "https://kubevela.io/docs/cli/vela_addon_upgrade/", "og:description": "upgrade an addon", "title": "vela addon upgrade | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_locale": "en", "docsearch:language": "en", "msapplication-config": "/img/favicons/browserconfig.xml", "docusaurus_tag": "docs-default-v1.10", "description": "upgrade an addon", "viewport": "width=device-width, initial-scale=1.0", "language": "en", "docsearch:version": "v1.10", "twitter:card": "summary_large_image", "scrapeId": "258212b0-d7b3-4628-9d01-64c9b3e09bd2", "sourceURL": "https://kubevela.io/docs/cli/vela_addon_upgrade", "url": "https://kubevela.io/docs/cli/vela_addon_upgrade/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela CLI: Upgrade an Addon\"?\n\nAssistant: Here are the recommended best practices:\n\n• Ensure to specify the correct addon name and version when upgrading.\n• Use the --override-definitions flag if you want to override existing definitions in case of conflicts.\n• Validate the system version requirements before upgrading to avoid compatibility issues.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_addon_upgrade", "title": "KubeVela CLI: Upgrade an Addon", "description": "This page provides instructions on how to upgrade an addon in a KubeVela cluster.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:42:46", "type": "best_practices", "page_metadata": {"generator": "Docusaurus v2.4.3", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:title": "vela addon upgrade | KubeVela", "docusaurus_version": "v1.10", "og:url": "https://kubevela.io/docs/cli/vela_addon_upgrade/", "theme-color": "#ffffff", "ogTitle": "vela addon upgrade | KubeVela", "ogDescription": "upgrade an addon", "ogUrl": "https://kubevela.io/docs/cli/vela_addon_upgrade/", "og:description": "upgrade an addon", "title": "vela addon upgrade | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_locale": "en", "docsearch:language": "en", "msapplication-config": "/img/favicons/browserconfig.xml", "docusaurus_tag": "docs-default-v1.10", "description": "upgrade an addon", "viewport": "width=device-width, initial-scale=1.0", "language": "en", "docsearch:version": "v1.10", "twitter:card": "summary_large_image", "scrapeId": "258212b0-d7b3-4628-9d01-64c9b3e09bd2", "sourceURL": "https://kubevela.io/docs/cli/vela_addon_upgrade", "url": "https://kubevela.io/docs/cli/vela_addon_upgrade/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela CLI: Join Managed Cluster\"?\n\nAssistant: This page provides instructions on how to join a managed cluster using the KubeVela CLI.\n\nHere's a detailed explanation:\n\n\n## Synopsis\njoin managed cluster by kubeconfig.\n\n## Examples\n# Join cluster declared in my-child-cluster.kubeconfig\n> vela cluster join my-child-cluster.kubeconfig --name example-cluster\n> vela cluster join my-child-cluster.kubeconfig --name example-cluster --labels project=kubevela,owner=oam-dev\n\n## Options\n      --create-namespace string   Specifies the namespace need to create in managedCluster (default \"vela-system\")\n  -t, --engine string             Specify the cluster management engine. If empty, it will use cluster-gateway cluster management solution. Default to be empty. (default \"cluster-gateway\")\n  -h, --help                      help for join\n      --in-cluster-boostrap       If true, the registering managed cluster will use the internal endpoint prescribed in the hub cluster's configmap \"kube-public/cluster-info to register \"itself to the hub cluster. Otherwise use the original endpoint from the hub kubeconfig. (default true)\n      --labels string             Specifies the labels need to create in managedCluster\n  -n, --name string               Specify the cluster name. If empty, it will use the cluster name in config file. Default to be empty.\n\n## Options inherited from parent commands\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n\n## SEE ALSO\n- [vela cluster](https://kubevela.io/docs/cli/vela_cluster/) \\- Manage Kubernetes clusters.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_cluster_join", "title": "KubeVela CLI: Join Managed Cluster", "description": "This page provides instructions on how to join a managed cluster using the KubeVela CLI.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:42:58", "type": "overview", "page_metadata": {"favicon": "https://kubevela.io/img/favicons/favicon.ico", "og:description": "join managed cluster.", "ogTitle": "vela cluster join | KubeVela", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:title": "vela cluster join | KubeVela", "ogDescription": "join managed cluster.", "generator": "Docusaurus v2.4.3", "docusaurus_version": "v1.10", "docsearch:version": "v1.10", "docusaurus_tag": "docs-default-v1.10", "language": "en", "viewport": "width=device-width, initial-scale=1.0", "ogUrl": "https://kubevela.io/docs/cli/vela_cluster_join/", "docusaurus_locale": "en", "title": "vela cluster join | KubeVela", "og:url": "https://kubevela.io/docs/cli/vela_cluster_join/", "docsearch:language": "en", "description": "join managed cluster.", "theme-color": "#ffffff", "twitter:card": "summary_large_image", "msapplication-config": "/img/favicons/browserconfig.xml", "scrapeId": "268bd9af-5dd0-422f-be6c-92b6f5975d0a", "sourceURL": "https://kubevela.io/docs/cli/vela_cluster_join", "url": "https://kubevela.io/docs/cli/vela_cluster_join/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"KubeVela CLI: Join Managed Cluster\"?\n\nAssistant: Here are some code examples:\n\n### Join Managed Cluster Command\n```yaml\nvela cluster join [KUBECONFIG] [flags]\n```\n\n### Join Cluster Example 1\n```yaml\nvela cluster join my-child-cluster.kubeconfig --name example-cluster\n```\n\n### Join Cluster Example 2\n```yaml\nvela cluster join my-child-cluster.kubeconfig --name example-cluster --labels project=kubevela,owner=oam-dev\n```\n\n### Options Command\n```yaml\n--create-namespace string   Specifies the namespace need to create in managedCluster (default \"vela-system\")\n-t, --engine string             Specify the cluster management engine. If empty, it will use cluster-gateway cluster management solution. Default to be empty. (default \"cluster-gateway\")\n-h, --help                      help for join\n--in-cluster-boostrap       If true, the registering managed cluster will use the internal endpoint prescribed in the hub cluster's configmap \"kube-public/cluster-info to register \"itself to the hub cluster. Otherwise use the original endpoint from the hub kubeconfig. (default true)\n--labels string             Specifies the labels need to create in managedCluster\n-n, --name string               Specify the cluster name. If empty, it will use the cluster name in config file. Default to be empty.\n```\n\n### Inherited Options Command\n```yaml\n-V, --verbosity Level   number for the log level verbosity\n-y, --yes               Assume yes for all user prompts\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_cluster_join", "title": "KubeVela CLI: Join Managed Cluster", "description": "This page provides instructions on how to join a managed cluster using the KubeVela CLI.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:42:58", "type": "code_examples", "page_metadata": {"favicon": "https://kubevela.io/img/favicons/favicon.ico", "og:description": "join managed cluster.", "ogTitle": "vela cluster join | KubeVela", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:title": "vela cluster join | KubeVela", "ogDescription": "join managed cluster.", "generator": "Docusaurus v2.4.3", "docusaurus_version": "v1.10", "docsearch:version": "v1.10", "docusaurus_tag": "docs-default-v1.10", "language": "en", "viewport": "width=device-width, initial-scale=1.0", "ogUrl": "https://kubevela.io/docs/cli/vela_cluster_join/", "docusaurus_locale": "en", "title": "vela cluster join | KubeVela", "og:url": "https://kubevela.io/docs/cli/vela_cluster_join/", "docsearch:language": "en", "description": "join managed cluster.", "theme-color": "#ffffff", "twitter:card": "summary_large_image", "msapplication-config": "/img/favicons/browserconfig.xml", "scrapeId": "268bd9af-5dd0-422f-be6c-92b6f5975d0a", "sourceURL": "https://kubevela.io/docs/cli/vela_cluster_join", "url": "https://kubevela.io/docs/cli/vela_cluster_join/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela CLI: Join Managed Cluster\"?\n\nAssistant: Here are the recommended best practices:\n\n• If you like KubeVela, give it a star on GitHub!\n• Ensure to specify the correct KUBECONFIG file when joining a cluster.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_cluster_join", "title": "KubeVela CLI: Join Managed Cluster", "description": "This page provides instructions on how to join a managed cluster using the KubeVela CLI.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:42:58", "type": "best_practices", "page_metadata": {"favicon": "https://kubevela.io/img/favicons/favicon.ico", "og:description": "join managed cluster.", "ogTitle": "vela cluster join | KubeVela", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:title": "vela cluster join | KubeVela", "ogDescription": "join managed cluster.", "generator": "Docusaurus v2.4.3", "docusaurus_version": "v1.10", "docsearch:version": "v1.10", "docusaurus_tag": "docs-default-v1.10", "language": "en", "viewport": "width=device-width, initial-scale=1.0", "ogUrl": "https://kubevela.io/docs/cli/vela_cluster_join/", "docusaurus_locale": "en", "title": "vela cluster join | KubeVela", "og:url": "https://kubevela.io/docs/cli/vela_cluster_join/", "docsearch:language": "en", "description": "join managed cluster.", "theme-color": "#ffffff", "twitter:card": "summary_large_image", "msapplication-config": "/img/favicons/browserconfig.xml", "scrapeId": "268bd9af-5dd0-422f-be6c-92b6f5975d0a", "sourceURL": "https://kubevela.io/docs/cli/vela_cluster_join", "url": "https://kubevela.io/docs/cli/vela_cluster_join/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela CLI: Render X-Definition\"?\n\nAssistant: This page covers how to render X-Definition with cue format into Kubernetes YAML format using the KubeVela CLI.\n\nHere's a detailed explanation:\n\n\n## Synopsis\nRender X-Definition with cue format into kubernetes YAML format. Could be used to check whether the cue format definition is working as expected. If a directory is used as input, all cue definitions in the directory will be rendered.\n\n## Examples\n```bash\n# Command below will render my-webservice.cue into YAML format and print it out.\n> vela def render my-webservice.cue\n# Command below will render my-webservice.cue and save it in my-webservice.yaml.\n> vela def render my-webservice.cue -o my-webservice.yaml\n# Command below will render all cue format definitions in the ./defs/cue/ directory and save the YAML objects in ./defs/yaml/.\n> vela def render ./defs/cue/ -o ./defs/yaml/\n```\n\n## Options\n```bash\n  -h, --help             help for render\n      --message string   Specify the header message of the generated YAML file. For example, declaring author information.\n  -o, --output string    Specify the output path of the rendered definition YAML. If empty, the definition will be printed in the console. If input is a directory, the output path is expected to be a directory as well.\n```\n\n## Options inherited from parent commands\n```bash\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n\n## SEE ALSO\n- [vela def](https://kubevela.io/docs/cli/vela_def/) - Manage definitions.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_def_render", "title": "KubeVela CLI: Render X-Definition", "description": "This page covers how to render X-Definition with cue format into Kubernetes YAML format using the KubeVela CLI.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:43:15", "type": "overview", "page_metadata": {"generator": "Docusaurus v2.4.3", "title": "vela def render | KubeVela", "ogTitle": "vela def render | KubeVela", "docusaurus_locale": "en", "og:url": "https://kubevela.io/docs/cli/vela_def_render/", "ogDescription": "Render X-Definition.", "msapplication-config": "/img/favicons/browserconfig.xml", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "theme-color": "#ffffff", "docsearch:language": "en", "og:title": "vela def render | KubeVela", "description": "Render X-Definition.", "twitter:card": "summary_large_image", "ogUrl": "https://kubevela.io/docs/cli/vela_def_render/", "docusaurus_version": "v1.10", "docsearch:docusaurus_tag": "docs-default-v1.10", "viewport": "width=device-width, initial-scale=1.0", "docsearch:version": "v1.10", "docusaurus_tag": "docs-default-v1.10", "og:description": "Render X-Definition.", "language": "en", "scrapeId": "330ccb44-23df-4d90-ba0a-788aeda55223", "sourceURL": "https://kubevela.io/docs/cli/vela_def_render", "url": "https://kubevela.io/docs/cli/vela_def_render/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"KubeVela CLI: Render X-Definition\"?\n\nAssistant: Here are some code examples:\n\n### Render Command Example\n```yaml\nvela def render my-webservice.cue\n```\n\n### Render and Save Command Example\n```yaml\nvela def render my-webservice.cue -o my-webservice.yaml\n```\n\n### Render All Definitions Command Example\n```yaml\nvela def render ./defs/cue/ -o ./defs/yaml/\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_def_render", "title": "KubeVela CLI: Render X-Definition", "description": "This page covers how to render X-Definition with cue format into Kubernetes YAML format using the KubeVela CLI.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:43:15", "type": "code_examples", "page_metadata": {"generator": "Docusaurus v2.4.3", "title": "vela def render | KubeVela", "ogTitle": "vela def render | KubeVela", "docusaurus_locale": "en", "og:url": "https://kubevela.io/docs/cli/vela_def_render/", "ogDescription": "Render X-Definition.", "msapplication-config": "/img/favicons/browserconfig.xml", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "theme-color": "#ffffff", "docsearch:language": "en", "og:title": "vela def render | KubeVela", "description": "Render X-Definition.", "twitter:card": "summary_large_image", "ogUrl": "https://kubevela.io/docs/cli/vela_def_render/", "docusaurus_version": "v1.10", "docsearch:docusaurus_tag": "docs-default-v1.10", "viewport": "width=device-width, initial-scale=1.0", "docsearch:version": "v1.10", "docusaurus_tag": "docs-default-v1.10", "og:description": "Render X-Definition.", "language": "en", "scrapeId": "330ccb44-23df-4d90-ba0a-788aeda55223", "sourceURL": "https://kubevela.io/docs/cli/vela_def_render", "url": "https://kubevela.io/docs/cli/vela_def_render/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela CLI: Render X-Definition\"?\n\nAssistant: Here are the recommended best practices:\n\n• If using a directory as input, ensure the output path is also a directory.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_def_render", "title": "KubeVela CLI: Render X-Definition", "description": "This page covers how to render X-Definition with cue format into Kubernetes YAML format using the KubeVela CLI.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:43:15", "type": "best_practices", "page_metadata": {"generator": "Docusaurus v2.4.3", "title": "vela def render | KubeVela", "ogTitle": "vela def render | KubeVela", "docusaurus_locale": "en", "og:url": "https://kubevela.io/docs/cli/vela_def_render/", "ogDescription": "Render X-Definition.", "msapplication-config": "/img/favicons/browserconfig.xml", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "theme-color": "#ffffff", "docsearch:language": "en", "og:title": "vela def render | KubeVela", "description": "Render X-Definition.", "twitter:card": "summary_large_image", "ogUrl": "https://kubevela.io/docs/cli/vela_def_render/", "docusaurus_version": "v1.10", "docsearch:docusaurus_tag": "docs-default-v1.10", "viewport": "width=device-width, initial-scale=1.0", "docsearch:version": "v1.10", "docusaurus_tag": "docs-default-v1.10", "og:description": "Render X-Definition.", "language": "en", "scrapeId": "330ccb44-23df-4d90-ba0a-788aeda55223", "sourceURL": "https://kubevela.io/docs/cli/vela_def_render", "url": "https://kubevela.io/docs/cli/vela_def_render/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"vela kube delete\"?\n\nAssistant: Delete Kubernetes objects in clusters\n\nHere's a detailed explanation:\n\n\n## Synopsis\nDelete Kubernetes objects in multiple clusters. Use --clusters to specify which clusters to delete. Use -n/--namespace flags to specify which cluster the target resource locates.\n\nUse --all flag to delete all this kind of objects in the target namespace and clusters.\n\n## Examples\n```bash\n  # Delete the deployment nginx in default namespace in cluster-1\n  vela kube delete deployment nginx --cluster cluster-1\n\n  # Delete the deployment nginx in demo namespace in cluster-1 and cluster-2\n  vela kube delete deployment nginx -n demo --cluster cluster-1 --cluster cluster-2\n\n  # Delete all deployments in demo namespace in cluster-1\n  vela kube delete deployment --all -n demo --cluster cluster-1\n```\n\n## Options\n```bash\n      --all                Setting this flag will delete all this kind of resources.\n  -c, --cluster strings    The cluster to delete objects. Setting multiple clusters will delete objects in order. (default [local])\n  -h, --help               help for delete\n  -n, --namespace string   The namespace to delete objects. If empty, the default namespace will be used.\n```\n\n## Options inherited from parent commands\n```bash\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n\n## SEE ALSO\n- [vela kube](https://kubevela.io/docs/cli/vela_kube/) \\- Managing native Kubernetes resources across clusters.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_kube_delete", "title": "vela kube delete", "description": "Delete Kubernetes objects in clusters", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:43:23", "type": "overview", "page_metadata": {"docsearch:language": "en", "description": "Delete resources in clusters.", "og:description": "Delete resources in clusters.", "generator": "Docusaurus v2.4.3", "docusaurus_locale": "en", "viewport": "width=device-width, initial-scale=1.0", "ogUrl": "https://kubevela.io/docs/cli/vela_kube_delete/", "docsearch:docusaurus_tag": "docs-default-v1.10", "ogDescription": "Delete resources in clusters.", "og:url": "https://kubevela.io/docs/cli/vela_kube_delete/", "docusaurus_version": "v1.10", "language": "en", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_tag": "docs-default-v1.10", "ogTitle": "vela kube delete | KubeVela", "og:title": "vela kube delete | KubeVela", "msapplication-config": "/img/favicons/browserconfig.xml", "title": "vela kube delete | KubeVela", "docsearch:version": "v1.10", "twitter:card": "summary_large_image", "theme-color": "#ffffff", "scrapeId": "1577b35f-bebd-44b2-98ed-ac45ba0097e0", "sourceURL": "https://kubevela.io/docs/cli/vela_kube_delete", "url": "https://kubevela.io/docs/cli/vela_kube_delete/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"vela kube delete\"?\n\nAssistant: Here are some code examples:\n\n### Delete a specific deployment in a cluster\n```yaml\nvela kube delete deployment nginx --cluster cluster-1\n```\n\n### Delete a specific deployment in multiple clusters\n```yaml\nvela kube delete deployment nginx -n demo --cluster cluster-1 --cluster cluster-2\n```\n\n### Delete all deployments in a namespace\n```yaml\nvela kube delete deployment --all -n demo --cluster cluster-1\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_kube_delete", "title": "vela kube delete", "description": "Delete Kubernetes objects in clusters", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:43:23", "type": "code_examples", "page_metadata": {"docsearch:language": "en", "description": "Delete resources in clusters.", "og:description": "Delete resources in clusters.", "generator": "Docusaurus v2.4.3", "docusaurus_locale": "en", "viewport": "width=device-width, initial-scale=1.0", "ogUrl": "https://kubevela.io/docs/cli/vela_kube_delete/", "docsearch:docusaurus_tag": "docs-default-v1.10", "ogDescription": "Delete resources in clusters.", "og:url": "https://kubevela.io/docs/cli/vela_kube_delete/", "docusaurus_version": "v1.10", "language": "en", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_tag": "docs-default-v1.10", "ogTitle": "vela kube delete | KubeVela", "og:title": "vela kube delete | KubeVela", "msapplication-config": "/img/favicons/browserconfig.xml", "title": "vela kube delete | KubeVela", "docsearch:version": "v1.10", "twitter:card": "summary_large_image", "theme-color": "#ffffff", "scrapeId": "1577b35f-bebd-44b2-98ed-ac45ba0097e0", "sourceURL": "https://kubevela.io/docs/cli/vela_kube_delete", "url": "https://kubevela.io/docs/cli/vela_kube_delete/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"vela kube delete\"?\n\nAssistant: Here are the recommended best practices:\n\n• Use --all flag to delete all resources of a specific type in the target namespace and clusters.\n• Specify multiple clusters using the --cluster flag to delete objects in order.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_kube_delete", "title": "vela kube delete", "description": "Delete Kubernetes objects in clusters", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:43:23", "type": "best_practices", "page_metadata": {"docsearch:language": "en", "description": "Delete resources in clusters.", "og:description": "Delete resources in clusters.", "generator": "Docusaurus v2.4.3", "docusaurus_locale": "en", "viewport": "width=device-width, initial-scale=1.0", "ogUrl": "https://kubevela.io/docs/cli/vela_kube_delete/", "docsearch:docusaurus_tag": "docs-default-v1.10", "ogDescription": "Delete resources in clusters.", "og:url": "https://kubevela.io/docs/cli/vela_kube_delete/", "docusaurus_version": "v1.10", "language": "en", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_tag": "docs-default-v1.10", "ogTitle": "vela kube delete | KubeVela", "og:title": "vela kube delete | KubeVela", "msapplication-config": "/img/favicons/browserconfig.xml", "title": "vela kube delete | KubeVela", "docsearch:version": "v1.10", "twitter:card": "summary_large_image", "theme-color": "#ffffff", "scrapeId": "1577b35f-bebd-44b2-98ed-ac45ba0097e0", "sourceURL": "https://kubevela.io/docs/cli/vela_kube_delete", "url": "https://kubevela.io/docs/cli/vela_kube_delete/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"Enable an Addon\"?\n\nAssistant: This page covers how to enable an addon in a KubeVela cluster.\n\nHere's a detailed explanation:\n\n\n## Synopsis\nEnable an addon in cluster.\n\n## Examples\nEnable addon by:\n    vela addon enable <addon-name>\nEnable addon with specify version:\n    vela addon enable <addon-name> --version <addon-version>\nEnable addon for specific clusters, (local means control plane):\n    vela addon enable <addon-name> --clusters={local,cluster1,cluster2}\nEnable addon locally:\n    vela addon enable <your-local-addon-path>\nEnable addon with specified args (the args should be defined in addon's parameters):\n    vela addon enable <addon-name> <my-parameter-of-addon>=<my-value>\nEnable addon with specified registry:\n    vela addon enable <registryName>/<addonName>\n\n## Options\n-c, --clusters string           specify the runtime-clusters to enable\n    --dry-run                   render all yaml files out without real execute it\n-h, --help                      help for enable\n    --override-definitions      override existing definitions if conflict with those contained in this addon\n-s, --skip-version-validating   skip validating system version requirement\n-v, --version string            specify the addon version to enable\n-y, --yes                       all checks will be skipped and the default answer is yes for all validation check.\n\n## Options inherited from parent commands\n-V, --verbosity Level   number for the log level verbosity\n\n## SEE ALSO\n- [vela addon](https://kubevela.io/docs/cli/vela_addon/) - Manage addons for extension.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_addon_enable", "title": "Enable an Addon", "description": "This page covers how to enable an addon in a KubeVela cluster.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:43:51", "type": "overview", "page_metadata": {"theme-color": "#ffffff", "ogDescription": "enable an addon", "twitter:card": "summary_large_image", "description": "enable an addon", "ogTitle": "vela addon enable | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_version": "v1.10", "viewport": "width=device-width, initial-scale=1.0", "generator": "Docusaurus v2.4.3", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:title": "vela addon enable | KubeVela", "title": "vela addon enable | KubeVela", "ogUrl": "https://kubevela.io/docs/cli/vela_addon_enable/", "docusaurus_tag": "docs-default-v1.10", "language": "en", "og:description": "enable an addon", "og:url": "https://kubevela.io/docs/cli/vela_addon_enable/", "docsearch:version": "v1.10", "docsearch:language": "en", "docusaurus_locale": "en", "msapplication-config": "/img/favicons/browserconfig.xml", "scrapeId": "23b84519-a6ba-4e9e-806f-f510e8d71225", "sourceURL": "https://kubevela.io/docs/cli/vela_addon_enable", "url": "https://kubevela.io/docs/cli/vela_addon_enable/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"Enable an Addon\"?\n\nAssistant: Here are some code examples:\n\n### Command to Enable an Addon\n```yaml\nvela addon enable [flags]\n```\n\n### Command Examples\n```yaml\nvela addon enable <addon-name>\nvela addon enable <addon-name> --version <addon-version>\nvela addon enable <addon-name> --clusters={local,cluster1,cluster2}\nvela addon enable <your-local-addon-path>\nvela addon enable <addon-name> <my-parameter-of-addon>=<my-value>\nvela addon enable <registryName>/<addonName>\n```\n\n### Options for Enabling Addon\n```yaml\n-c, --clusters string           specify the runtime-clusters to enable\n    --dry-run                   render all yaml files out without real execute it\n-h, --help                      help for enable\n    --override-definitions      override existing definitions if conflict with those contained in this addon\n-s, --skip-version-validating   skip validating system version requirement\n-v, --version string            specify the addon version to enable\n-y, --yes                       all checks will be skipped and the default answer is yes for all validation check.\n```\n\n### Inherited Options\n```yaml\n-V, --verbosity Level   number for the log level verbosity\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_addon_enable", "title": "Enable an Addon", "description": "This page covers how to enable an addon in a KubeVela cluster.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:43:51", "type": "code_examples", "page_metadata": {"theme-color": "#ffffff", "ogDescription": "enable an addon", "twitter:card": "summary_large_image", "description": "enable an addon", "ogTitle": "vela addon enable | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_version": "v1.10", "viewport": "width=device-width, initial-scale=1.0", "generator": "Docusaurus v2.4.3", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:title": "vela addon enable | KubeVela", "title": "vela addon enable | KubeVela", "ogUrl": "https://kubevela.io/docs/cli/vela_addon_enable/", "docusaurus_tag": "docs-default-v1.10", "language": "en", "og:description": "enable an addon", "og:url": "https://kubevela.io/docs/cli/vela_addon_enable/", "docsearch:version": "v1.10", "docsearch:language": "en", "docusaurus_locale": "en", "msapplication-config": "/img/favicons/browserconfig.xml", "scrapeId": "23b84519-a6ba-4e9e-806f-f510e8d71225", "sourceURL": "https://kubevela.io/docs/cli/vela_addon_enable", "url": "https://kubevela.io/docs/cli/vela_addon_enable/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"Enable an Addon\"?\n\nAssistant: Here are the recommended best practices:\n\n• Use the --dry-run option to preview changes before applying them.\n• Always specify the version of the addon to avoid compatibility issues.\n• Use the --clusters option to target specific clusters for addon enabling.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_addon_enable", "title": "Enable an Addon", "description": "This page covers how to enable an addon in a KubeVela cluster.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:43:51", "type": "best_practices", "page_metadata": {"theme-color": "#ffffff", "ogDescription": "enable an addon", "twitter:card": "summary_large_image", "description": "enable an addon", "ogTitle": "vela addon enable | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_version": "v1.10", "viewport": "width=device-width, initial-scale=1.0", "generator": "Docusaurus v2.4.3", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:title": "vela addon enable | KubeVela", "title": "vela addon enable | KubeVela", "ogUrl": "https://kubevela.io/docs/cli/vela_addon_enable/", "docusaurus_tag": "docs-default-v1.10", "language": "en", "og:description": "enable an addon", "og:url": "https://kubevela.io/docs/cli/vela_addon_enable/", "docsearch:version": "v1.10", "docsearch:language": "en", "docusaurus_locale": "en", "msapplication-config": "/img/favicons/browserconfig.xml", "scrapeId": "23b84519-a6ba-4e9e-806f-f510e8d71225", "sourceURL": "https://kubevela.io/docs/cli/vela_addon_enable", "url": "https://kubevela.io/docs/cli/vela_addon_enable/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"Set an environment\"?\n\nAssistant: Set an environment as the default one for running vela applications.\n\nHere's a detailed explanation:\n\n\n## Synopsis\nSet an environment as the default one for running vela applications.\n\n## Examples\n```codeBlockLines_e6Vv\nvela env set test\n```\n\n## Options\n```codeBlockLines_e6Vv\n  -h, --help            help for set\n      --labels string   set labels for namespace\n```\n\n## Options inherited from parent commands\n```codeBlockLines_e6Vv\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n\n## SEE ALSO\n- [vela env](https://kubevela.io/docs/cli/vela_env/) \\- Manage environments for vela applications to run.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_env_set", "title": "Set an environment", "description": "Set an environment as the default one for running vela applications.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:43:58", "type": "overview", "page_metadata": {"theme-color": "#ffffff", "ogUrl": "https://kubevela.io/docs/cli/vela_env_set/", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "msapplication-config": "/img/favicons/browserconfig.xml", "docusaurus_version": "v1.10", "language": "en", "docsearch:docusaurus_tag": "docs-default-v1.10", "description": "Set an environment.", "og:title": "vela env set | KubeVela", "generator": "Docusaurus v2.4.3", "ogTitle": "vela env set | KubeVela", "og:description": "Set an environment.", "viewport": "width=device-width, initial-scale=1.0", "docusaurus_tag": "docs-default-v1.10", "title": "vela env set | KubeVela", "ogDescription": "Set an environment.", "docsearch:version": "v1.10", "twitter:card": "summary_large_image", "og:url": "https://kubevela.io/docs/cli/vela_env_set/", "docsearch:language": "en", "docusaurus_locale": "en", "scrapeId": "3777f8c3-7d25-46cf-b68b-fc86c91da045", "sourceURL": "https://kubevela.io/docs/cli/vela_env_set", "url": "https://kubevela.io/docs/cli/vela_env_set/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"Set an environment\"?\n\nAssistant: Here are some code examples:\n\n### Set an environment command\n```yaml\nvela env set\n```\n\n### Set a specific environment example\n```yaml\nvela env set test\n```\n\n### Options for setting environment\n```yaml\n  -h, --help            help for set\n      --labels string   set labels for namespace\n```\n\n### Inherited options from parent commands\n```yaml\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_env_set", "title": "Set an environment", "description": "Set an environment as the default one for running vela applications.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:43:58", "type": "code_examples", "page_metadata": {"theme-color": "#ffffff", "ogUrl": "https://kubevela.io/docs/cli/vela_env_set/", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "msapplication-config": "/img/favicons/browserconfig.xml", "docusaurus_version": "v1.10", "language": "en", "docsearch:docusaurus_tag": "docs-default-v1.10", "description": "Set an environment.", "og:title": "vela env set | KubeVela", "generator": "Docusaurus v2.4.3", "ogTitle": "vela env set | KubeVela", "og:description": "Set an environment.", "viewport": "width=device-width, initial-scale=1.0", "docusaurus_tag": "docs-default-v1.10", "title": "vela env set | KubeVela", "ogDescription": "Set an environment.", "docsearch:version": "v1.10", "twitter:card": "summary_large_image", "og:url": "https://kubevela.io/docs/cli/vela_env_set/", "docsearch:language": "en", "docusaurus_locale": "en", "scrapeId": "3777f8c3-7d25-46cf-b68b-fc86c91da045", "sourceURL": "https://kubevela.io/docs/cli/vela_env_set", "url": "https://kubevela.io/docs/cli/vela_env_set/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"Set an environment\"?\n\nAssistant: Here are the recommended best practices:\n\n• If you like KubeVela, give it a star on GitHub!\n• Check the release notes for updates and new features.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_env_set", "title": "Set an environment", "description": "Set an environment as the default one for running vela applications.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:43:58", "type": "best_practices", "page_metadata": {"theme-color": "#ffffff", "ogUrl": "https://kubevela.io/docs/cli/vela_env_set/", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "msapplication-config": "/img/favicons/browserconfig.xml", "docusaurus_version": "v1.10", "language": "en", "docsearch:docusaurus_tag": "docs-default-v1.10", "description": "Set an environment.", "og:title": "vela env set | KubeVela", "generator": "Docusaurus v2.4.3", "ogTitle": "vela env set | KubeVela", "og:description": "Set an environment.", "viewport": "width=device-width, initial-scale=1.0", "docusaurus_tag": "docs-default-v1.10", "title": "vela env set | KubeVela", "ogDescription": "Set an environment.", "docsearch:version": "v1.10", "twitter:card": "summary_large_image", "og:url": "https://kubevela.io/docs/cli/vela_env_set/", "docsearch:language": "en", "docusaurus_locale": "en", "scrapeId": "3777f8c3-7d25-46cf-b68b-fc86c91da045", "sourceURL": "https://kubevela.io/docs/cli/vela_env_set", "url": "https://kubevela.io/docs/cli/vela_env_set/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela CLI - Manage Definitions\"?\n\nAssistant: Manage X-Definitions for extension in KubeVela CLI.\n\nHere's a detailed explanation:\n\n\n## Synopsis\nManage X-Definitions for extension.\n\n## Options\n```codeBlockLines_e6Vv\n  -h, --help   help for def\n```\n\n## Options inherited from parent commands\n```codeBlockLines_e6Vv\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n\n## SEE ALSO\n- [vela def apply](https://kubevela.io/docs/cli/vela_def_apply/) \\- Apply X-Definition.\n- [vela def del](https://kubevela.io/docs/cli/vela_def_del/) \\- Delete X-Definition.\n- [vela def edit](https://kubevela.io/docs/cli/vela_def_edit/) \\- Edit X-Definition.\n- [vela def gen-api](https://kubevela.io/docs/cli/vela_def_gen-api/) \\- Generate SDK from X-Definition.\n- [vela def gen-cue](https://kubevela.io/docs/cli/vela_def_gen-cue/) \\- Generate CUE schema from Go code.\n- [vela def gen-doc](https://kubevela.io/docs/cli/vela_def_gen-doc/) \\- Generate documentation for non component, trait, policy and workflow definitions\n- [vela def get](https://kubevela.io/docs/cli/vela_def_get/) \\- Get definition\n- [vela def init](https://kubevela.io/docs/cli/vela_def_init/) \\- Init a new definition\n- [vela def list](https://kubevela.io/docs/cli/vela_def_list/) \\- List definitions.\n- [vela def render](https://kubevela.io/docs/cli/vela_def_render/) \\- Render X-Definition.\n- [vela def show](https://kubevela.io/docs/cli/vela_def_show/) \\- Show the reference doc for a component, trait, policy or workflow.\n- [vela def vet](https://kubevela.io/docs/cli/vela_def_vet/) \\- Validate X-Definition.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_def", "title": "KubeVela CLI - Manage Definitions", "description": "Manage X-Definitions for extension in KubeVela CLI.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 15:44:07", "type": "overview", "page_metadata": {"title": "vela def | KubeVela", "ogDescription": "Manage definitions.", "og:description": "Manage definitions.", "theme-color": "#ffffff", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "language": "en", "ogUrl": "https://kubevela.io/docs/cli/vela_def/", "generator": "Docusaurus v2.4.3", "ogTitle": "vela def | KubeVela", "docsearch:docusaurus_tag": "docs-default-v1.10", "description": "Manage definitions.", "msapplication-config": "/img/favicons/browserconfig.xml", "og:url": "https://kubevela.io/docs/cli/vela_def/", "docsearch:version": "v1.10", "docusaurus_tag": "docs-default-v1.10", "viewport": "width=device-width, initial-scale=1.0", "og:title": "vela def | KubeVela", "docsearch:language": "en", "docusaurus_version": "v1.10", "docusaurus_locale": "en", "twitter:card": "summary_large_image", "scrapeId": "ee935031-57a0-49e8-b833-89773ed23728", "sourceURL": "https://kubevela.io/docs/cli/vela_def", "url": "https://kubevela.io/docs/cli/vela_def/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"KubeVela CLI - Manage Definitions\"?\n\nAssistant: Here are some code examples:\n\n### Options\n```yaml\n```codeBlockLines_e6Vv\n  -h, --help   help for def\n```\n```\n\n### Options inherited from parent commands\n```yaml\n```codeBlockLines_e6Vv\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_def", "title": "KubeVela CLI - Manage Definitions", "description": "Manage X-Definitions for extension in KubeVela CLI.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 15:44:07", "type": "code_examples", "page_metadata": {"title": "vela def | KubeVela", "ogDescription": "Manage definitions.", "og:description": "Manage definitions.", "theme-color": "#ffffff", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "language": "en", "ogUrl": "https://kubevela.io/docs/cli/vela_def/", "generator": "Docusaurus v2.4.3", "ogTitle": "vela def | KubeVela", "docsearch:docusaurus_tag": "docs-default-v1.10", "description": "Manage definitions.", "msapplication-config": "/img/favicons/browserconfig.xml", "og:url": "https://kubevela.io/docs/cli/vela_def/", "docsearch:version": "v1.10", "docusaurus_tag": "docs-default-v1.10", "viewport": "width=device-width, initial-scale=1.0", "og:title": "vela def | KubeVela", "docsearch:language": "en", "docusaurus_version": "v1.10", "docusaurus_locale": "en", "twitter:card": "summary_large_image", "scrapeId": "ee935031-57a0-49e8-b833-89773ed23728", "sourceURL": "https://kubevela.io/docs/cli/vela_def", "url": "https://kubevela.io/docs/cli/vela_def/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela CLI - Manage Definitions\"?\n\nAssistant: Here are the recommended best practices:\n\n• If you like KubeVela, give it a star on GitHub!\n• Check the release notes for updates and new features.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_def", "title": "KubeVela CLI - Manage Definitions", "description": "Manage X-Definitions for extension in KubeVela CLI.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 15:44:07", "type": "best_practices", "page_metadata": {"title": "vela def | KubeVela", "ogDescription": "Manage definitions.", "og:description": "Manage definitions.", "theme-color": "#ffffff", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "language": "en", "ogUrl": "https://kubevela.io/docs/cli/vela_def/", "generator": "Docusaurus v2.4.3", "ogTitle": "vela def | KubeVela", "docsearch:docusaurus_tag": "docs-default-v1.10", "description": "Manage definitions.", "msapplication-config": "/img/favicons/browserconfig.xml", "og:url": "https://kubevela.io/docs/cli/vela_def/", "docsearch:version": "v1.10", "docusaurus_tag": "docs-default-v1.10", "viewport": "width=device-width, initial-scale=1.0", "og:title": "vela def | KubeVela", "docsearch:language": "en", "docusaurus_version": "v1.10", "docusaurus_locale": "en", "twitter:card": "summary_large_image", "scrapeId": "ee935031-57a0-49e8-b833-89773ed23728", "sourceURL": "https://kubevela.io/docs/cli/vela_def", "url": "https://kubevela.io/docs/cli/vela_def/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"vela def list\"?\n\nAssistant: List definitions in kubernetes cluster.\n\nHere's a detailed explanation:\n\n\n## Synopsis\nList definitions in kubernetes cluster.\n\n## Examples\n```shell\n# Command below will list all definitions in all namespaces\n> vela def list\n# Command below will list all definitions in the vela-system namespace\n> vela def get annotations --type trait --namespace vela-system\n```\n\n## Options\n```shell\n      --from string        Filter definitions by which addon installed them.\n  -h, --help               help for list\n  -n, --namespace string   Specify which namespace the definition locates. (default \"vela-system\")\n  -t, --type string        Specify which definition type to list. If empty, all types will be searched. Valid types: component, trait, policy, workload, workflow-step\n```\n\n## Options inherited from parent commands\n```shell\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n\n## SEE ALSO\n- [vela def](https://kubevela.io/docs/cli/vela_def/) \\- Manage definitions.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_def_list", "title": "vela def list", "description": "List definitions in kubernetes cluster.", "has_code_examples": true, "has_best_practices": false, "section_count": 5, "timestamp": "2025-02-28 15:44:16", "type": "overview", "page_metadata": {"viewport": "width=device-width, initial-scale=1.0", "ogDescription": "List definitions.", "msapplication-config": "/img/favicons/browserconfig.xml", "theme-color": "#ffffff", "docusaurus_version": "v1.10", "ogTitle": "vela def list | KubeVela", "docsearch:docusaurus_tag": "docs-default-v1.10", "docsearch:language": "en", "twitter:card": "summary_large_image", "docusaurus_tag": "docs-default-v1.10", "og:title": "vela def list | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "og:description": "List definitions.", "docusaurus_locale": "en", "description": "List definitions.", "language": "en", "ogUrl": "https://kubevela.io/docs/cli/vela_def_list/", "og:url": "https://kubevela.io/docs/cli/vela_def_list/", "title": "vela def list | KubeVela", "docsearch:version": "v1.10", "generator": "Docusaurus v2.4.3", "scrapeId": "3fc9b112-bae2-45f4-a353-78a8973e19d7", "sourceURL": "https://kubevela.io/docs/cli/vela_def_list", "url": "https://kubevela.io/docs/cli/vela_def_list/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"vela def list\"?\n\nAssistant: Here are some code examples:\n\n### Command to list all definitions in all namespaces\n```yaml\n> vela def list\n```\n\n### Command to list all definitions in the vela-system namespace\n```yaml\n> vela def get annotations --type trait --namespace vela-system\n```\n\n### Options for vela def list\n```yaml\n--from string        Filter definitions by which addon installed them.\n-h, --help               help for list\n-n, --namespace string   Specify which namespace the definition locates. (default \"vela-system\")\n-t, --type string        Specify which definition type to list. If empty, all types will be searched. Valid types: component, trait, policy, workload, workflow-step\n```\n\n### Options inherited from parent commands\n```yaml\n-V, --verbosity Level   number for the log level verbosity\n-y, --yes               Assume yes for all user prompts\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_def_list", "title": "vela def list", "description": "List definitions in kubernetes cluster.", "has_code_examples": true, "has_best_practices": false, "section_count": 5, "timestamp": "2025-02-28 15:44:16", "type": "code_examples", "page_metadata": {"viewport": "width=device-width, initial-scale=1.0", "ogDescription": "List definitions.", "msapplication-config": "/img/favicons/browserconfig.xml", "theme-color": "#ffffff", "docusaurus_version": "v1.10", "ogTitle": "vela def list | KubeVela", "docsearch:docusaurus_tag": "docs-default-v1.10", "docsearch:language": "en", "twitter:card": "summary_large_image", "docusaurus_tag": "docs-default-v1.10", "og:title": "vela def list | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "og:description": "List definitions.", "docusaurus_locale": "en", "description": "List definitions.", "language": "en", "ogUrl": "https://kubevela.io/docs/cli/vela_def_list/", "og:url": "https://kubevela.io/docs/cli/vela_def_list/", "title": "vela def list | KubeVela", "docsearch:version": "v1.10", "generator": "Docusaurus v2.4.3", "scrapeId": "3fc9b112-bae2-45f4-a353-78a8973e19d7", "sourceURL": "https://kubevela.io/docs/cli/vela_def_list", "url": "https://kubevela.io/docs/cli/vela_def_list/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"Vela Workflow Terminate\"?\n\nAssistant: Terminate a workflow in cluster.\n\nHere's a detailed explanation:\n\n\n## Synopsis\nTerminate a workflow in cluster.\n\n## Examples\n`vela workflow terminate <workflow-name>`\n\n## Options\n  -e, --env string         specify environment name for application\n  -h, --help               help for terminate\n  -n, --namespace string   specify the Kubernetes namespace to use\n  -t, --type string        the type of the resource, support: [app, workflow]\n\n## Options inherited from parent commands\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n\n## SEE ALSO\n- [vela workflow](https://kubevela.io/docs/cli/vela_workflow/) \\- Operate application delivery workflow.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_workflow_terminate", "title": "Vela Workflow Terminate", "description": "Terminate a workflow in cluster.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:44:26", "type": "overview", "page_metadata": {"og:url": "https://kubevela.io/docs/cli/vela_workflow_terminate/", "og:description": "Terminate a workflow.", "title": "vela workflow terminate | KubeVela", "theme-color": "#ffffff", "docusaurus_tag": "docs-default-v1.10", "ogTitle": "vela workflow terminate | KubeVela", "language": "en", "docusaurus_locale": "en", "docsearch:language": "en", "ogUrl": "https://kubevela.io/docs/cli/vela_workflow_terminate/", "og:title": "vela workflow terminate | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "msapplication-config": "/img/favicons/browserconfig.xml", "description": "Terminate a workflow.", "docusaurus_version": "v1.10", "docsearch:docusaurus_tag": "docs-default-v1.10", "generator": "Docusaurus v2.4.3", "viewport": "width=device-width, initial-scale=1.0", "ogDescription": "Terminate a workflow.", "twitter:card": "summary_large_image", "docsearch:version": "v1.10", "scrapeId": "eca2ea1f-5908-43ce-8c95-346fbc4f48f9", "sourceURL": "https://kubevela.io/docs/cli/vela_workflow_terminate", "url": "https://kubevela.io/docs/cli/vela_workflow_terminate/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"Vela Workflow Terminate\"?\n\nAssistant: Here are some code examples:\n\n### Terminate a workflow command\n```yaml\nvela workflow terminate [flags]\n```\n\n### Example of terminating a specific workflow\n```yaml\nvela workflow terminate <workflow-name>\n```\n\n### Options for terminating a workflow\n```yaml\n  -e, --env string         specify environment name for application\n  -h, --help               help for terminate\n  -n, --namespace string   specify the Kubernetes namespace to use\n  -t, --type string        the type of the resource, support: [app, workflow]\n```\n\n### Inherited options from parent commands\n```yaml\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_workflow_terminate", "title": "Vela Workflow Terminate", "description": "Terminate a workflow in cluster.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:44:26", "type": "code_examples", "page_metadata": {"og:url": "https://kubevela.io/docs/cli/vela_workflow_terminate/", "og:description": "Terminate a workflow.", "title": "vela workflow terminate | KubeVela", "theme-color": "#ffffff", "docusaurus_tag": "docs-default-v1.10", "ogTitle": "vela workflow terminate | KubeVela", "language": "en", "docusaurus_locale": "en", "docsearch:language": "en", "ogUrl": "https://kubevela.io/docs/cli/vela_workflow_terminate/", "og:title": "vela workflow terminate | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "msapplication-config": "/img/favicons/browserconfig.xml", "description": "Terminate a workflow.", "docusaurus_version": "v1.10", "docsearch:docusaurus_tag": "docs-default-v1.10", "generator": "Docusaurus v2.4.3", "viewport": "width=device-width, initial-scale=1.0", "ogDescription": "Terminate a workflow.", "twitter:card": "summary_large_image", "docsearch:version": "v1.10", "scrapeId": "eca2ea1f-5908-43ce-8c95-346fbc4f48f9", "sourceURL": "https://kubevela.io/docs/cli/vela_workflow_terminate", "url": "https://kubevela.io/docs/cli/vela_workflow_terminate/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"Vela Workflow Terminate\"?\n\nAssistant: Here are the recommended best practices:\n\n• Use the `-e` flag to specify the environment name for the application when terminating a workflow.\n• Always check the namespace with the `-n` flag to ensure you are terminating the correct workflow in the right context.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_workflow_terminate", "title": "Vela Workflow Terminate", "description": "Terminate a workflow in cluster.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:44:26", "type": "best_practices", "page_metadata": {"og:url": "https://kubevela.io/docs/cli/vela_workflow_terminate/", "og:description": "Terminate a workflow.", "title": "vela workflow terminate | KubeVela", "theme-color": "#ffffff", "docusaurus_tag": "docs-default-v1.10", "ogTitle": "vela workflow terminate | KubeVela", "language": "en", "docusaurus_locale": "en", "docsearch:language": "en", "ogUrl": "https://kubevela.io/docs/cli/vela_workflow_terminate/", "og:title": "vela workflow terminate | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "msapplication-config": "/img/favicons/browserconfig.xml", "description": "Terminate a workflow.", "docusaurus_version": "v1.10", "docsearch:docusaurus_tag": "docs-default-v1.10", "generator": "Docusaurus v2.4.3", "viewport": "width=device-width, initial-scale=1.0", "ogDescription": "Terminate a workflow.", "twitter:card": "summary_large_image", "docsearch:version": "v1.10", "scrapeId": "eca2ea1f-5908-43ce-8c95-346fbc4f48f9", "sourceURL": "https://kubevela.io/docs/cli/vela_workflow_terminate", "url": "https://kubevela.io/docs/cli/vela_workflow_terminate/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela SSO Tutorial\"?\n\nAssistant: This page provides a tutorial on how to configure Single Sign-On (SSO) with KubeVela using Dex and various connectors like GitHub and LDAP.\n\nHere's a detailed explanation:\n\n\n## Description\nIn KubeVela V1.3, we provide two methods to log in: local login and SSO.\n\nLocal login uses the username and password stored in the local database to log in, and SSO integrates Dex, which can be configured by configuring Dex's OpenID Connect to implement many different ways to log in, such as GitHub, LDAP, Gitlab, OIDC, SAML, Google etc.\n\nAfter the platform is initialized, local login is used by default. Platform administrators can configure SSO through the platform configuration page. In this tutorial, we'll use GitHub and LDAP Connector to show how to use SSO with KubeVela.\n\n## Enable Dex Addon\n1. You need to enable the Dex Addon in the Addon list first to use SSO:\n\n![alt](https://static.kubevela.net/images/1.3/dex-addon.png)\n\n2. After enabling the Dex Addon, we also need to upgrade the VelaUX addon and open its Dex option:\n\n![alt](https://static.kubevela.net/images/1.5/enable-dex-in-velaux.png)\n\n## Configure Dex Connectors\nNext, we need to configure the Dex Connectors.\n\n### Configure GitHub Connector\nTake GitHub Connector as an example, if you don't have a GitHub Oauth App, you need to create an OAuth App on GitHub's Developer settings first, and set the App's Authorization callback URL to `[Vela UX address]/dex/callback`.\n\n> Note that please make sure your Vela UX has a public IP address due to third-party redirection involved.\n\nAfter creating the Oauth App, configure the Dex Connector on the integration configuration page. We choose the type `GitHub`, and set the Client ID and Client Secret corresponding to the Oauth App. Note that the Redirect URI here must be the same as the `[Vela UX address]/dex/callback` previously configured when the Oauth App was created.\n\n![alt](https://static.kubevela.net/images/1.3/intergration.png)\n\n### Configure LDAP Connector\nIf you want to use LDAP for SSO, you need to set up the LDAP Connector first.\n\n> Before configuring, please make sure you have LDAP installed correctly and that LDAP can communicate with the Vela UX network.\n\nAfter selecting the Connector type as LDAP, fill in the address of the LDAP server in `Host`, and specify `BaseDN`.\n\n![alt](https://static.kubevela.net/images/1.3/ldap1.png)\n\nIf your LDAP does not provide anonymous authentication access, then you need to open the `Advanced Parameters`, fill in `BindDN` and `BindPW`, Connector will use these credentials for user search.\n\n![alt](https://static.kubevela.net/images/1.3/ldap2.png)\n\n> For more types of Dex Connectors, please refer to [Dex Connectors Configuration](https://kubevela.io/docs/how-to/dashboard/config/dex-connectors/).\n\n## Platform setting\nUsers who logged in through SSO will be automatically bound to the users who have the same email in the local database, otherwise, a new user will be created.\n\nSince the newly logged-in user does not have any permissions, we need to set an email address for the platform administrator first. After that, when you use a user with the same email address for SSO login, you can automatically have platform administrator privileges.\n\n> The admin user also could log in from the dex with the email and password.\n\nAfter configuring the user email, we can change the login method to SSO login on the platform configuration page. Before updating the configuration, it is strongly recommended to click `Click me to test open the dex page` to verify that the dex connector configuration is ready.\n\n![alt](https://static.kubevela.net/images/1.5/platform-setting.jpg)\n\nOn this page, you could set the default project and roles for the users who log in through SSO.\n\n## Use SSO Login\nLog out and refresh the page again, you can see that we have entered the Dex login page.\n\n![alt](https://static.kubevela.net/images/1.3/dex-login.png)\n\nThen, you select GitHub or LDAP to log in.\n\n![alt](https://static.kubevela.net/images/1.3/dex-grant-access.png)\n\nSo far, we have completed SSO login with GitHub. At this point, if the email of the log-in user can be associated with the email of the previously log-in user, the newly log-in user will inherit the permissions of the previous user.\n", "metadata": {"source_url": "https://kubevela.io/docs/tutorials/sso", "title": "KubeVela SSO Tutorial", "description": "This page provides a tutorial on how to configure Single Sign-On (SSO) with KubeVela using Dex and various connectors like GitHub and LDAP.", "has_code_examples": false, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:44:57", "type": "overview", "page_metadata": {"og:title": "SSO Login | KubeVela", "docsearch:language": "en", "og:description": "Description", "ogDescription": "Description", "language": "en", "viewport": "width=device-width, initial-scale=1.0", "ogTitle": "SSO Login | KubeVela", "docusaurus_version": "v1.10", "twitter:card": "summary_large_image", "docusaurus_tag": "docs-default-v1.10", "ogUrl": "https://kubevela.io/docs/tutorials/sso/", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docsearch:version": "v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "docsearch:docusaurus_tag": "docs-default-v1.10", "docusaurus_locale": "en", "title": "SSO Login | KubeVela", "generator": "Docusaurus v2.4.3", "og:url": "https://kubevela.io/docs/tutorials/sso/", "description": "Description", "theme-color": "#ffffff", "scrapeId": "d3749350-c0e3-4ec4-bdb8-9986e3892f58", "sourceURL": "https://kubevela.io/docs/tutorials/sso", "url": "https://kubevela.io/docs/tutorials/sso/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela SSO Tutorial\"?\n\nAssistant: Here are the recommended best practices:\n\n• Make sure your Vela UX has a public IP address due to third-party redirection involved when configuring GitHub Connector.\n• Before configuring LDAP, ensure that LDAP is installed correctly and can communicate with the Vela UX network.\n• It is strongly recommended to test the dex page before updating the configuration.\n", "metadata": {"source_url": "https://kubevela.io/docs/tutorials/sso", "title": "KubeVela SSO Tutorial", "description": "This page provides a tutorial on how to configure Single Sign-On (SSO) with KubeVela using Dex and various connectors like GitHub and LDAP.", "has_code_examples": false, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:44:57", "type": "best_practices", "page_metadata": {"og:title": "SSO Login | KubeVela", "docsearch:language": "en", "og:description": "Description", "ogDescription": "Description", "language": "en", "viewport": "width=device-width, initial-scale=1.0", "ogTitle": "SSO Login | KubeVela", "docusaurus_version": "v1.10", "twitter:card": "summary_large_image", "docusaurus_tag": "docs-default-v1.10", "ogUrl": "https://kubevela.io/docs/tutorials/sso/", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docsearch:version": "v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "docsearch:docusaurus_tag": "docs-default-v1.10", "docusaurus_locale": "en", "title": "SSO Login | KubeVela", "generator": "Docusaurus v2.4.3", "og:url": "https://kubevela.io/docs/tutorials/sso/", "description": "Description", "theme-color": "#ffffff", "scrapeId": "d3749350-c0e3-4ec4-bdb8-9986e3892f58", "sourceURL": "https://kubevela.io/docs/tutorials/sso", "url": "https://kubevela.io/docs/tutorials/sso/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"Restart a workflow\"?\n\nAssistant: Restart a workflow in cluster.\n\nHere's a detailed explanation:\n\n\n## Synopsis\nRestart a workflow in cluster.\n\n## Examples\n```codeBlockLines_e6Vv\nvela workflow restart <workflow-name>\n```\n\n## Options\n```codeBlockLines_e6Vv\n  -e, --env string         specify environment name for application\n  -h, --help               help for restart\n  -n, --namespace string   specify the Kubernetes namespace to use\n  -s, --step string        specify the step name in the workflow\n  -t, --type string        the type of the resource, support: [app, workflow]\n```\n\n## Options inherited from parent commands\n```codeBlockLines_e6Vv\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n\n## SEE ALSO\n- [vela workflow](https://kubevela.io/docs/cli/vela_workflow/) \\- Operate application delivery workflow.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_workflow_restart", "title": "Restart a workflow", "description": "Restart a workflow in cluster.", "has_code_examples": true, "has_best_practices": false, "section_count": 5, "timestamp": "2025-02-28 15:45:07", "type": "overview", "page_metadata": {"og:description": "Restart a workflow.", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogDescription": "Restart a workflow.", "msapplication-config": "/img/favicons/browserconfig.xml", "description": "Restart a workflow.", "docsearch:version": "v1.10", "twitter:card": "summary_large_image", "docusaurus_locale": "en", "docusaurus_tag": "docs-default-v1.10", "ogTitle": "vela workflow restart | KubeVela", "ogUrl": "https://kubevela.io/docs/cli/vela_workflow_restart/", "generator": "Docusaurus v2.4.3", "og:title": "vela workflow restart | KubeVela", "title": "vela workflow restart | KubeVela", "docsearch:docusaurus_tag": "docs-default-v1.10", "viewport": "width=device-width, initial-scale=1.0", "theme-color": "#ffffff", "docusaurus_version": "v1.10", "language": "en", "docsearch:language": "en", "og:url": "https://kubevela.io/docs/cli/vela_workflow_restart/", "scrapeId": "808b79d2-f0bf-40d6-b59e-98bc93f3a7e2", "sourceURL": "https://kubevela.io/docs/cli/vela_workflow_restart", "url": "https://kubevela.io/docs/cli/vela_workflow_restart/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"Restart a workflow\"?\n\nAssistant: Here are some code examples:\n\n### Restart a workflow\n```yaml\n```codeBlockLines_e6Vv\nvela workflow restart <workflow-name>\n```\n```\n\n### Options\n```yaml\n```codeBlockLines_e6Vv\n  -e, --env string         specify environment name for application\n  -h, --help               help for restart\n  -n, --namespace string   specify the Kubernetes namespace to use\n  -s, --step string        specify the step name in the workflow\n  -t, --type string        the type of the resource, support: [app, workflow]\n```\n```\n\n### Options inherited from parent commands\n```yaml\n```codeBlockLines_e6Vv\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_workflow_restart", "title": "Restart a workflow", "description": "Restart a workflow in cluster.", "has_code_examples": true, "has_best_practices": false, "section_count": 5, "timestamp": "2025-02-28 15:45:07", "type": "code_examples", "page_metadata": {"og:description": "Restart a workflow.", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogDescription": "Restart a workflow.", "msapplication-config": "/img/favicons/browserconfig.xml", "description": "Restart a workflow.", "docsearch:version": "v1.10", "twitter:card": "summary_large_image", "docusaurus_locale": "en", "docusaurus_tag": "docs-default-v1.10", "ogTitle": "vela workflow restart | KubeVela", "ogUrl": "https://kubevela.io/docs/cli/vela_workflow_restart/", "generator": "Docusaurus v2.4.3", "og:title": "vela workflow restart | KubeVela", "title": "vela workflow restart | KubeVela", "docsearch:docusaurus_tag": "docs-default-v1.10", "viewport": "width=device-width, initial-scale=1.0", "theme-color": "#ffffff", "docusaurus_version": "v1.10", "language": "en", "docsearch:language": "en", "og:url": "https://kubevela.io/docs/cli/vela_workflow_restart/", "scrapeId": "808b79d2-f0bf-40d6-b59e-98bc93f3a7e2", "sourceURL": "https://kubevela.io/docs/cli/vela_workflow_restart", "url": "https://kubevela.io/docs/cli/vela_workflow_restart/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela CLI: vela up\"?\n\nAssistant: Deploy one application based on local files or re-deploy an existing application using the KubeVela CLI.\n\nHere's a detailed explanation:\n\n\n## Synopsis\nDeploy one application based on local files or re-deploy an existing application. With the -n/--namespace flag, you can choose the location of the target application.\n\nTo apply application from file, use the -f/--file flag to specify the application file location.\n\nTo give a particular version to this deploy, use the -v/--publish-version flag. When you are deploying an existing application, the version name must be different from the current name. You can also use a history revision for the deploy and override the current application by using the -r/--revision flag.\n\n## Examples\n# Deploy an application from file\nvela up -f ./app.yaml\n\n# Deploy an application with a version name\nvela up example-app -n example-ns --publish-version beta\n\n# Deploy an application using existing revision\nvela up example-app -n example-ns --publish-version beta --revision example-app-v2\n\n# Deploy an application with specified shard-id assigned. This can be used to manually re-schedule application.\nvela up example-app --shard-id shard-1\n\n# Deploy an application from stdin\ncat <<EOF | vela up -f -\n... <app.yaml here> ...\nEOF\n\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_up", "title": "KubeVela CLI: vela up", "description": "Deploy one application based on local files or re-deploy an existing application using the KubeVela CLI.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-02-28 15:45:19", "type": "overview", "page_metadata": {"og:title": "vela up | KubeVela", "title": "vela up | KubeVela", "docusaurus_tag": "docs-default-v1.10", "description": "Deploy one application.", "docusaurus_version": "v1.10", "generator": "Docusaurus v2.4.3", "docsearch:language": "en", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "language": "en", "docusaurus_locale": "en", "ogDescription": "Deploy one application.", "docsearch:version": "v1.10", "docsearch:docusaurus_tag": "docs-default-v1.10", "twitter:card": "summary_large_image", "ogUrl": "https://kubevela.io/docs/cli/vela_up/", "theme-color": "#ffffff", "og:description": "Deploy one application.", "ogTitle": "vela up | KubeVela", "msapplication-config": "/img/favicons/browserconfig.xml", "og:url": "https://kubevela.io/docs/cli/vela_up/", "viewport": "width=device-width, initial-scale=1.0", "scrapeId": "974282e2-8717-4ab2-bf07-93b4197b9e70", "sourceURL": "https://kubevela.io/docs/cli/vela_up", "url": "https://kubevela.io/docs/cli/vela_up/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"KubeVela CLI: vela up\"?\n\nAssistant: Here are some code examples:\n\n### Basic Command\n```yaml\nvela up\n```\n\n### Options\n```yaml\n--debug                    Enable debug mode for application\n-e, --env string               The environment name for the CLI request\n-f, --file string              The file path for appfile or application. It could be a remote url.\n-h, --help                     help for up\n-n, --namespace string         If present, the namespace scope for this CLI request\n-v, --publish-version string   The publish version for deploying application.\n-r, --revision string          The revision to use for deploying the application, if empty, the current application configuration will be used.\n-s, --shard-id string          The shard id assigned to the application. If empty, it will not be used.\n--timeout string           Set the timout for wait app to be healthy, if not specified, the default duration is 300s. (default \"300s\")\n-w, --wait                     Wait app to be healthy until timout, if no timeout specified, the default duration is 300s.\n```\n\n### Inherited Options\n```yaml\n-V, --verbosity Level   number for the log level verbosity\n-y, --yes               Assume yes for all user prompts\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_up", "title": "KubeVela CLI: vela up", "description": "Deploy one application based on local files or re-deploy an existing application using the KubeVela CLI.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-02-28 15:45:19", "type": "code_examples", "page_metadata": {"og:title": "vela up | KubeVela", "title": "vela up | KubeVela", "docusaurus_tag": "docs-default-v1.10", "description": "Deploy one application.", "docusaurus_version": "v1.10", "generator": "Docusaurus v2.4.3", "docsearch:language": "en", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "language": "en", "docusaurus_locale": "en", "ogDescription": "Deploy one application.", "docsearch:version": "v1.10", "docsearch:docusaurus_tag": "docs-default-v1.10", "twitter:card": "summary_large_image", "ogUrl": "https://kubevela.io/docs/cli/vela_up/", "theme-color": "#ffffff", "og:description": "Deploy one application.", "ogTitle": "vela up | KubeVela", "msapplication-config": "/img/favicons/browserconfig.xml", "og:url": "https://kubevela.io/docs/cli/vela_up/", "viewport": "width=device-width, initial-scale=1.0", "scrapeId": "974282e2-8717-4ab2-bf07-93b4197b9e70", "sourceURL": "https://kubevela.io/docs/cli/vela_up", "url": "https://kubevela.io/docs/cli/vela_up/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela CLI: vela up\"?\n\nAssistant: Here are the recommended best practices:\n\n• Use the -n/--namespace flag to specify the target application location.\n• Utilize the -f/--file flag to apply applications from a file.\n• When deploying an existing application, ensure the version name is different from the current name.\n• Consider using the -r/--revision flag to override the current application with a history revision.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_up", "title": "KubeVela CLI: vela up", "description": "Deploy one application based on local files or re-deploy an existing application using the KubeVela CLI.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-02-28 15:45:19", "type": "best_practices", "page_metadata": {"og:title": "vela up | KubeVela", "title": "vela up | KubeVela", "docusaurus_tag": "docs-default-v1.10", "description": "Deploy one application.", "docusaurus_version": "v1.10", "generator": "Docusaurus v2.4.3", "docsearch:language": "en", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "language": "en", "docusaurus_locale": "en", "ogDescription": "Deploy one application.", "docsearch:version": "v1.10", "docsearch:docusaurus_tag": "docs-default-v1.10", "twitter:card": "summary_large_image", "ogUrl": "https://kubevela.io/docs/cli/vela_up/", "theme-color": "#ffffff", "og:description": "Deploy one application.", "ogTitle": "vela up | KubeVela", "msapplication-config": "/img/favicons/browserconfig.xml", "og:url": "https://kubevela.io/docs/cli/vela_up/", "viewport": "width=device-width, initial-scale=1.0", "scrapeId": "974282e2-8717-4ab2-bf07-93b4197b9e70", "sourceURL": "https://kubevela.io/docs/cli/vela_up", "url": "https://kubevela.io/docs/cli/vela_up/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"vela config list\"?\n\nAssistant: List the configs.\n\nHere's a detailed explanation:\n\n\n## Options\n```codeBlockLines_e6Vv\n  -A, --all-namespaces     If true, check the specified action in all namespaces.\n  -h, --help               help for list\n  -n, --namespace string   specify the namespace of the config (default \"vela-system\")\n  -t, --template string    specify the template of the config\n```\n\n## Options inherited from parent commands\n```codeBlockLines_e6Vv\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n\n## SEE ALSO\n- [vela config](https://kubevela.io/docs/cli/vela_config/) \\- Manage the configs.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_config_list", "title": "vela config list", "description": "List the configs.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 15:45:41", "type": "overview", "page_metadata": {"ogTitle": "vela config list | KubeVela", "ogDescription": "List the configs.", "docsearch:version": "v1.10", "docusaurus_version": "v1.10", "ogUrl": "https://kubevela.io/docs/cli/vela_config_list/", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "generator": "Docusaurus v2.4.3", "twitter:card": "summary_large_image", "docusaurus_locale": "en", "docsearch:language": "en", "description": "List the configs.", "og:url": "https://kubevela.io/docs/cli/vela_config_list/", "og:title": "vela config list | KubeVela", "docusaurus_tag": "docs-default-v1.10", "language": "en", "viewport": "width=device-width,initial-scale=1", "theme-color": "#ffffff", "msapplication-config": "/img/favicons/browserconfig.xml", "og:description": "List the configs.", "docsearch:docusaurus_tag": "docs-default-v1.10", "title": "vela config list | KubeVela", "scrapeId": "d45fb365-48ae-4217-8f33-5b4efe9aab8d", "sourceURL": "https://kubevela.io/docs/cli/vela_config_list", "url": "https://kubevela.io/docs/cli/vela_config_list/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"vela config list\"?\n\nAssistant: Here are some code examples:\n\n### Command to list configs\n```yaml\nvela config list [flags]\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_config_list", "title": "vela config list", "description": "List the configs.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 15:45:41", "type": "code_examples", "page_metadata": {"ogTitle": "vela config list | KubeVela", "ogDescription": "List the configs.", "docsearch:version": "v1.10", "docusaurus_version": "v1.10", "ogUrl": "https://kubevela.io/docs/cli/vela_config_list/", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "generator": "Docusaurus v2.4.3", "twitter:card": "summary_large_image", "docusaurus_locale": "en", "docsearch:language": "en", "description": "List the configs.", "og:url": "https://kubevela.io/docs/cli/vela_config_list/", "og:title": "vela config list | KubeVela", "docusaurus_tag": "docs-default-v1.10", "language": "en", "viewport": "width=device-width,initial-scale=1", "theme-color": "#ffffff", "msapplication-config": "/img/favicons/browserconfig.xml", "og:description": "List the configs.", "docsearch:docusaurus_tag": "docs-default-v1.10", "title": "vela config list | KubeVela", "scrapeId": "d45fb365-48ae-4217-8f33-5b4efe9aab8d", "sourceURL": "https://kubevela.io/docs/cli/vela_config_list", "url": "https://kubevela.io/docs/cli/vela_config_list/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"vela config list\"?\n\nAssistant: Here are the recommended best practices:\n\n• If you like KubeVela, give it a star on GitHub!\n• KubeVela v1.10.0 is now available.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_config_list", "title": "vela config list", "description": "List the configs.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 15:45:41", "type": "best_practices", "page_metadata": {"ogTitle": "vela config list | KubeVela", "ogDescription": "List the configs.", "docsearch:version": "v1.10", "docusaurus_version": "v1.10", "ogUrl": "https://kubevela.io/docs/cli/vela_config_list/", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "generator": "Docusaurus v2.4.3", "twitter:card": "summary_large_image", "docusaurus_locale": "en", "docsearch:language": "en", "description": "List the configs.", "og:url": "https://kubevela.io/docs/cli/vela_config_list/", "og:title": "vela config list | KubeVela", "docusaurus_tag": "docs-default-v1.10", "language": "en", "viewport": "width=device-width,initial-scale=1", "theme-color": "#ffffff", "msapplication-config": "/img/favicons/browserconfig.xml", "og:description": "List the configs.", "docsearch:docusaurus_tag": "docs-default-v1.10", "title": "vela config list | KubeVela", "scrapeId": "d45fb365-48ae-4217-8f33-5b4efe9aab8d", "sourceURL": "https://kubevela.io/docs/cli/vela_config_list", "url": "https://kubevela.io/docs/cli/vela_config_list/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela Installation Guide\"?\n\nAssistant: This documents will show you how to install KubeVela in standalone mode.\n\nHere's a detailed explanation:\n\n\n## Overview\nThis documents will show you how to install KubeVela in standalone mode. There are two options:\n\n1. Local machine: Install on a local machine based on Linux, macOS or Windows operating system.\n2. Remote Linux server: Install on a remote Linux server with accessible IP address.\n\n**Tip**: Install KubeVela on a remote server with non-linux operating system is not fully tested.\n\n## About VelaD\nWe'll use VelaD to install KubeVela in standalone mode. VelaD is a CLI tool that packages KubeVela with all dependencies for minimal installation and VelaUX. VelaD enables you to run KubeVela on any of docker compatible environments or Linux system.\n\n- VelaD leverages K3s and k3d to manage Kubernetes automatically. Users needn't care the details about Kubernetes.\n- KubeVela along with all related images, and `vela` command line are packaged together that enables air-gapped installation of KubeVela and VelaUX.\n\n**Caution**: Installation with standalone mode is suited for development and testing purpose best that you don't even aware of the Kubernetes inside. If you want to use it in production, you need to understand and maintain the K3s for Kubernetes management well.\n\n## Install in a local machine\n### 1. Prepare environment\nVelaD support installing KubeVela on machines based on these OS: Linux, macOS, Windows.\n\n**Requirements**\n1. If you are using Linux or macOS, make sure your machine have `curl` installed.\n2. If you are using macOS or Windows, make sure you've already installed Docker.\n3. Make sure the docker daemon is up and running.\n\n### 2. Install VelaD and Setup KubeVela\n#### Download VelaD\nIt will download and place the binary in your system `PATH`.\n\n- Linux/MacOS Script\n- Linux/MacOS with asdf-vm\n- Windows\n\nYou may be required for root privilege during the installation process if not using root. If you don't need the automation with root access, you can download from the release page and uncompress manually.\n\n```bash\ncurl -fsSl https://kubevela.io/script/install-velad.sh | bash\n```\n\nCheck `velad` installed in `/usr/local/bin/`\n\nIf you are using the asdf version manager, you can install `velad` with:\n\n```bash\n# Add the velad plugin for asdf\nasdf plugin add velad\n\n# List all installable versions\nasdf list-all velad\n\n# Install the desired version (could be \"latest\")\nasdf install velad <version>\n\n# set it as the global version, unless a project declares it otherwise locally\nasdf global velad <version>\n```\n\nRun following command in powershell with administrator privilege.\n\n```powershell\npowershell -Command \"iwr -useb https://static.kubevela.net/script/install-velad.ps1 | iex\"\n```\n\nCheck `velad` installed in `C:\\vela\\`\n\n**Info**: VelaD helps install Vela CLI, which requires administrator privilege.\n\nStart powershell as administrator\n1. Click on the 'Start' button to open the Start menu.\n2. Scroll to the Windows PowerShell shortcut folder then, right click on the Windows Powershell option and select 'Run as administrator'.\n\n#### Setup KubeVela\n```bash\nvelad install\n```\n\n**Expected output**\n```bash\nPreparing K3s images...\nSuccessfully prepare k3s image: /Users/sunjianbo/.vela/velad/k3s/k3s-airgap-images-amd64.tgz\nSuccessfully prepare k3d images\n\n...snip...\n\nKubeVela control plane has been successfully set up on your cluster.\nIf you want to enable dashboard, please run \"vela addon enable /Users/sunjianbo/.vela/addons/velaux\"\n\nKeep the token below if you want to restart the control plane\nK1075e7f6c77555e6ebdaf4854e4a2f39ae4287cfad23f27cdac5b33608d44633fe::server:zSpzbdbGzVxOwfBvvjgT\n\n🚀 Successfully install KubeVela control plane\n🔭 See available commands with `vela help`\n```\n\n#### Verify Installation\nExport kubeconfig and list all built-in ComponentDefinition:\n\n```bash\nexport KUBECONFIG=$(velad kubeconfig --host)\nvela comp\n```\n\n```powershell\n$env:PATH += \";$HOME\\.vela\\bin;\"\n$env:KUBECONFIG = $(velad kubeconfig --host)\nvela comp\n```\n\n**Tip**: When executing `velad install`, vela CLI ( `vela`) is already installed and add to `PATH` automatically. So you can use it directly.\n\n**Expected output**\n```bash\nNAME                    DEFINITION                  DESCRIPTION\nconfig-helm-repository  autodetects.core.oam.dev    Config information to authenticate helm chart repository\ndaemon                  daemonsets.apps             Describes daemonset services in Kubernetes.\ncron-task               cronjobs.batch              Describes cron jobs that run code or a script to completion.\nworker                  deployments.apps            Describes long-running, scalable, containerized services that running at backend. They do NOT have network endpoint to receive external network traffic.\ntask                    jobs.batch                  Describes jobs that run code or a script to completion.\nwebservice              deployments.apps            Describes long-running, scalable, containerized services that have a stable network endpoint to receive external network traffic from customers.\nconfig-image-registry   autodetects.core.oam.dev    Config information to authenticate image registry\nk8s-objects             autodetects.core.oam.dev    K8s-objects allow users to specify raw K8s objects in properties\nraw                     autodetects.core.oam.dev    Raw allow users to specify raw K8s object in properties. This definition is DEPRECATED, please use 'k8s-objects' instead.\nref-objects             autodetects.core.oam.dev    Ref-objects allow users to specify ref objects to use. Notice that this component type have special handle logic.\n```\n\n### 3. Install VelaUX\nVelaUX is a dashboard for KubeVela. It is a web application that runs in your cluster. You can access it with your browser. This is optional if you don't use UI console of KubeVela.\n\n```bash\nvela addon enable ~/.vela/addons/velaux\n```\n\n```powershell\nvela addon enable $HOME\\.vela\\addons\\velaux\n```\n\n**Expected output**\n```bash\nAddon: velaux enabled Successfully.\n```\n\nBy default, velaux don't have any exposed port, you can view it by:\n\n```bash\nvela port-forward addon-velaux -n vela-system 8080:80\n```\n\nChoose `> local | velaux | velaux` for visit.\n\n**Note**: For more VelaUX options, refer to VelaUX addon document for other advanced installation arguments. VelaUX needs authentication. The default username is `admin` and the password is **`VelaUX12345`**. It requires you to override with a new password for the first login, please make sure to remember the new password.\n\n### 4. Cleanup\nThis command will clean up KubeVela controllers along with the Kubernetes cluster, refer to the advanced guide for more detailed steps.\n\n```bash\nvelad uninstall\n```\n\n\n\n## Install on a remote Linux server\nThis documents show you how to install KubeVela on a remote Linux server (e.g. aws EC2 or aliyun ECS) in standalone mode.\n\n### 1. Prepare a machine\nPrepare a Linux server, make sure it meets the following requirements:\n\n**Requirements**\n1. Make sure your machine have `curl` installed.\n2. This server has a public IP, or you can access the server's IP if it's a on-premise server.\n3. If you are using a cloud server, make sure you have opened the port 6443 in secure group.\n\n### 2. Install VelaD and Setup KubeVela\n#### Download VelaD\nFollowing script will download and place the binary in your system `PATH`, so you may be required for root privilege during the installation process. If you don't need the automation with root access, you can download from the release page and uncompress manually.\n\n```bash\ncurl -fsSl https://kubevela.io/script/install-velad.sh | bash\n```\n\nCheck `velad` installed in `/usr/local/bin/`\n\n#### Setup KubeVela\nRun the following command and replace the `$SERVER_PUBLIC_IP` with your server's public IP.\n\n```bash\nvelad install --bind-ip=$SERVER_PUBLIC_IP\n```\n\n**Expected output**\n```bash\nPreparing K3s images...\nSuccessfully prepare k3s image: /Users/sunjianbo/.vela/velad/k3s/k3s-airgap-images-amd64.tgz\nSuccessfully prepare k3d images\n\n...snip...\n\nKubeVela control plane has been successfully set up on your cluster.\nIf you want to enable dashboard, please run \"vela addon enable /Users/sunjianbo/.vela/addons/velaux\"\n\nKeep the token below if you want to restart the control plane\nK1075e7f6c77555e6ebdaf4854e4a2f39ae4287cfad23f27cdac5b33608d44633fe::server:zSpzbdbGzVxOwfBvvjgT\n\n🚀 Successfully install KubeVela control plane\n🔭 See available commands with `vela help`\n🔑 To access the cluster, set KUBECONFIG:\nexport KUBECONFIG=$(velad kubeconfig --name default --host)\n```\n\n#### Verify Installation\nExport kubeconfig and list all built-in ComponentDefinition:\n\n```bash\nexport KUBECONFIG=$(velad kubeconfig --host)\nvela comp\n```\n\n**Tip**: When executing `velad install`, vela CLI ( `vela`) is already installed and add to `PATH` automatically. So you can use it directly. Later we will access KubeVela on local machine, we will install vela CLI on local machine again.\n\n**Expected output**\n```bash\nNAME                    DEFINITION                  DESCRIPTION\nconfig-helm-repository  autodetects.core.oam.dev    Config information to authenticate helm chart repository\ndaemon                  daemonsets.apps             Describes daemonset services in Kubernetes.\ncron-task               cronjobs.batch              Describes cron jobs that run code or a script to completion.\nworker                  deployments.apps            Describes long-running, scalable, containerized services that running at backend. They do NOT have network endpoint to receive external network traffic.\ntask                    jobs.batch                  Describes jobs that run code or a script to completion.\nwebservice              deployments.apps            Describes long-running, scalable, containerized services that have a stable network endpoint to receive external network traffic from customers.\nconfig-image-registry   autodetects.core.oam.dev    Config information to authenticate image registry\nk8s-objects             autodetects.core.oam.dev    K8s-objects allow users to specify raw K8s objects in properties\nraw                     autodetects.core.oam.dev    Raw allow users to specify raw K8s object in properties. This definition is DEPRECATED, please use 'k8s-objects' instead.\nref-objects             autodetects.core.oam.dev    Ref-objects allow users to specify ref objects to use. Notice that this component type have special handle logic.\n```\n\n### 3. Install VelaUX\nVelaUX is a dashboard for KubeVela. It is a web application that runs in your cluster. You can access it with your browser.\n\nRun this command on remote server.\n\n```bash\nvela addon enable ~/.vela/addons/velaux serviceType=NodePort\n```\n\n**Expected output**\n```bash\nAddon: velaux enabled Successfully.\n...\nI0907 12:03:11.462606   98769 utils.go:156] find cluster gateway service vela-system/kubevela-cluster-gateway-service:9443\nPlease access addon-velaux from the following endpoints:\n+---------+-----------+-------------------------------+----------------------------+-------+\n| CLUSTER | COMPONENT |   REF(KIND/NAMESPACE/NAME)    |          ENDPOINT          | INNER |\n+---------+-----------+-------------------------------+----------------------------+-------+\n| local   | apiserver | Service/vela-system/apiserver | apiserver.vela-system:8000 | true  |\n| local   | velaux    | Service/vela-system/velaux    | http://47.252.17.47:30000  | false |\n+---------+-----------+-------------------------------+----------------------------+-------+\n```\n\nBy adding `serviceType=NodePort`, we are telling VelaUX to expose service with K8s NodePort type. Check the endpoint of VelaUX with following command:\n\n```bash\nvela status addon-velaux -n vela-system --endpoint\n```\n\nIt will show URL like `http://PUBLIC-IP:PORT` access that URL with your browser.\n\n**Open the port**: If you are using a cloud server, please open this port in secure group.\n\n**Note**: For more VelaUX options, refer to VelaUX addon document for other advanced installation arguments. VelaUX needs authentication. The default username is `admin` and the password is **`VelaUX12345`**. It requires you to override with a new password for the first login, please make sure to remember the new password.\n\n### 4. Access cluster From Local (Optional)\nYou can access KubeVela with your local machine. Make sure you add `--bind-ip` when executing `velad install` command in the last step on the server.\n\n#### Copy KubeConfig\nFollowing command will print the kubeconfig for your cluster. `--external` means printed kubeconfig can be used from other machine (like your local machine).\n\n```bash\ncat $(velad kubeconfig --external)\n```\n\nThen you need to copy this kubeconfig to your local machine. Let's say you saving a file in `~/.kube/velad-config` in your local machine.\n\n#### Install Vela CLI in Local\nTo access the cluster, you also need to install `vela` CLI in your local machine.\n\n```bash\ncurl -fsSl https://kubevela.io/script/install.sh | bash\n```\n\n#### Access KubeVela\nExport KUBECONFIG environment variable and list all built-in ComponentDefinition:\n\n```bash\nexport KUBECONFIG=~/.kube/velad-config\nvela comp\n```\n\n### 5. Cleanup\nRun following command on remote server.\nThis command will clean up KubeVela controllers along with the Kubernetes cluster, refer to the advanced guide for more detailed steps.\n\n```bash\nvelad uninstall\n```\n", "metadata": {"source_url": "https://kubevela.io/docs/installation/standalone", "title": "KubeVela Installation Guide", "description": "This documents will show you how to install KubeVela in standalone mode.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 15:46:45", "type": "overview", "page_metadata": {"docsearch:docusaurus_tag": "docs-default-v1.10", "og:description": "Overview", "docusaurus_version": "v1.10", "theme-color": "#ffffff", "docsearch:version": "v1.10", "ogTitle": "Standalone Installation | KubeVela", "viewport": "width=device-width, initial-scale=1.0", "description": "Overview", "msapplication-config": "/img/favicons/browserconfig.xml", "og:title": "Standalone Installation | KubeVela", "ogDescription": "Overview", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "generator": "Docusaurus v2.4.3", "og:url": "https://kubevela.io/docs/installation/standalone/", "docsearch:language": "en", "twitter:card": "summary_large_image", "ogUrl": "https://kubevela.io/docs/installation/standalone/", "language": "en", "docusaurus_tag": "docs-default-v1.10", "docusaurus_locale": "en", "title": "Standalone Installation | KubeVela", "scrapeId": "12b1cafb-5fff-4b53-aa3c-e41b4dd7b961", "sourceURL": "https://kubevela.io/docs/installation/standalone", "url": "https://kubevela.io/docs/installation/standalone/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"KubeVela Installation Guide\"?\n\nAssistant: Here are some code examples:\n\n### Download VelaD\n```yaml\ncurl -fsSl https://kubevela.io/script/install-velad.sh | bash\n```\n\n### Install VelaD with asdf version manager\n```yaml\n# Add the velad plugin for asdf\nasdf plugin add velad\n\n# List all installable versions\nasdf list-all velad\n\n# Install the desired version (could be \"latest\")\nasdf install velad <version>\n\n# set it as the global version, unless a project declares it otherwise locally\nasdf global velad <version>\n\n```\n\n### Install VelaD on Windows\n```yaml\npowershell -Command \"iwr -useb https://static.kubevela.net/script/install-velad.ps1 | iex\"\n```\n\n### Setup KubeVela\n```yaml\nvelad install\n```\n\n### Verify Installation\n```yaml\nexport KUBECONFIG=$(velad kubeconfig --host)\nvela comp\n```\n\n### Install VelaUX\n```yaml\nvela addon enable ~/.vela/addons/velaux\n```\n\n### Cleanup KubeVela\n```yaml\nvelad uninstall\n```\n\n### Install VelaD on remote server\n```yaml\ncurl -fsSl https://kubevela.io/script/install-velad.sh | bash\n```\n\n### Setup KubeVela on remote server\n```yaml\nvelad install --bind-ip=$SERVER_PUBLIC_IP\n```\n\n### Verify Installation on remote server\n```yaml\nexport KUBECONFIG=$(velad kubeconfig --host)\nvela comp\n```\n\n### Install VelaUX on remote server\n```yaml\nvela addon enable ~/.vela/addons/velaux serviceType=NodePort\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/installation/standalone", "title": "KubeVela Installation Guide", "description": "This documents will show you how to install KubeVela in standalone mode.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 15:46:45", "type": "code_examples", "page_metadata": {"docsearch:docusaurus_tag": "docs-default-v1.10", "og:description": "Overview", "docusaurus_version": "v1.10", "theme-color": "#ffffff", "docsearch:version": "v1.10", "ogTitle": "Standalone Installation | KubeVela", "viewport": "width=device-width, initial-scale=1.0", "description": "Overview", "msapplication-config": "/img/favicons/browserconfig.xml", "og:title": "Standalone Installation | KubeVela", "ogDescription": "Overview", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "generator": "Docusaurus v2.4.3", "og:url": "https://kubevela.io/docs/installation/standalone/", "docsearch:language": "en", "twitter:card": "summary_large_image", "ogUrl": "https://kubevela.io/docs/installation/standalone/", "language": "en", "docusaurus_tag": "docs-default-v1.10", "docusaurus_locale": "en", "title": "Standalone Installation | KubeVela", "scrapeId": "12b1cafb-5fff-4b53-aa3c-e41b4dd7b961", "sourceURL": "https://kubevela.io/docs/installation/standalone", "url": "https://kubevela.io/docs/installation/standalone/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela Installation Guide\"?\n\nAssistant: Here are the recommended best practices:\n\n• Install KubeVela on a remote server with non-linux operating system is not fully tested.\n• Installation with standalone mode is suited for development and testing purpose best that you don't even aware of the Kubernetes inside.\n• When executing `velad install`, vela CLI ( `vela`) is already installed and add to `PATH` automatically. So you can use it directly.\n• A file used to configure access to clusters is called _kubeconfig file_.\n• If you are using a cloud server, make sure you have opened the port 6443 in secure group.\n", "metadata": {"source_url": "https://kubevela.io/docs/installation/standalone", "title": "KubeVela Installation Guide", "description": "This documents will show you how to install KubeVela in standalone mode.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 15:46:45", "type": "best_practices", "page_metadata": {"docsearch:docusaurus_tag": "docs-default-v1.10", "og:description": "Overview", "docusaurus_version": "v1.10", "theme-color": "#ffffff", "docsearch:version": "v1.10", "ogTitle": "Standalone Installation | KubeVela", "viewport": "width=device-width, initial-scale=1.0", "description": "Overview", "msapplication-config": "/img/favicons/browserconfig.xml", "og:title": "Standalone Installation | KubeVela", "ogDescription": "Overview", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "generator": "Docusaurus v2.4.3", "og:url": "https://kubevela.io/docs/installation/standalone/", "docsearch:language": "en", "twitter:card": "summary_large_image", "ogUrl": "https://kubevela.io/docs/installation/standalone/", "language": "en", "docusaurus_tag": "docs-default-v1.10", "docusaurus_locale": "en", "title": "Standalone Installation | KubeVela", "scrapeId": "12b1cafb-5fff-4b53-aa3c-e41b4dd7b961", "sourceURL": "https://kubevela.io/docs/installation/standalone", "url": "https://kubevela.io/docs/installation/standalone/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela Logs Command\"?\n\nAssistant: Tail logs for vela application.\n\nHere's a detailed explanation:\n\n\n## Synopsis\nTail logs for vela application.\n\n## Options\n```codeBlockLines_e6Vv\n      --cluster string     filter the pod by the cluster name\n  -c, --component string   filter the pod by the component name\n      --container string   specify the container name\n  -e, --env string         specify environment name for application\n  -h, --help               help for logs\n  -n, --namespace string   specify the Kubernetes namespace to use\n  -o, --output string      output format for logs, support: [default, raw, json] (default \"default\")\n  -p, --pod string         specify the pod name\n```\n\n## Options inherited from parent commands\n```codeBlockLines_e6Vv\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n\n## SEE ALSO\nGo Back to [CLI Commands](https://kubevela.io/docs/cli/vela/) Homepage.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_logs", "title": "KubeVela Logs Command", "description": "Tail logs for vela application.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 15:46:52", "type": "overview", "page_metadata": {"generator": "Docusaurus v2.4.3", "ogTitle": "vela logs | KubeVela", "twitter:card": "summary_large_image", "language": "en", "title": "vela logs | KubeVela", "ogUrl": "https://kubevela.io/docs/cli/vela_logs/", "theme-color": "#ffffff", "description": "Tail logs for application.", "docsearch:docusaurus_tag": "docs-default-v1.10", "docusaurus_tag": "docs-default-v1.10", "og:title": "vela logs | KubeVela", "msapplication-config": "/img/favicons/browserconfig.xml", "viewport": "width=device-width, initial-scale=1.0", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogDescription": "Tail logs for application.", "og:url": "https://kubevela.io/docs/cli/vela_logs/", "docsearch:version": "v1.10", "og:description": "Tail logs for application.", "docusaurus_locale": "en", "docusaurus_version": "v1.10", "docsearch:language": "en", "scrapeId": "585c917a-18e1-49eb-8ec8-72b0eed377bc", "sourceURL": "https://kubevela.io/docs/cli/vela_logs", "url": "https://kubevela.io/docs/cli/vela_logs/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"KubeVela Logs Command\"?\n\nAssistant: Here are some code examples:\n\n### Logs Command\n```yaml\nvela logs [flags]\n```\n\n### Options Command\n```yaml\n--cluster string     filter the pod by the cluster name\n-c, --component string   filter the pod by the component name\n--container string   specify the container name\n-e, --env string         specify environment name for application\n-h, --help               help for logs\n-n, --namespace string   specify the Kubernetes namespace to use\n-o, --output string      output format for logs, support: [default, raw, json] (default \"default\")\n-p, --pod string         specify the pod name\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_logs", "title": "KubeVela Logs Command", "description": "Tail logs for vela application.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 15:46:52", "type": "code_examples", "page_metadata": {"generator": "Docusaurus v2.4.3", "ogTitle": "vela logs | KubeVela", "twitter:card": "summary_large_image", "language": "en", "title": "vela logs | KubeVela", "ogUrl": "https://kubevela.io/docs/cli/vela_logs/", "theme-color": "#ffffff", "description": "Tail logs for application.", "docsearch:docusaurus_tag": "docs-default-v1.10", "docusaurus_tag": "docs-default-v1.10", "og:title": "vela logs | KubeVela", "msapplication-config": "/img/favicons/browserconfig.xml", "viewport": "width=device-width, initial-scale=1.0", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogDescription": "Tail logs for application.", "og:url": "https://kubevela.io/docs/cli/vela_logs/", "docsearch:version": "v1.10", "og:description": "Tail logs for application.", "docusaurus_locale": "en", "docusaurus_version": "v1.10", "docsearch:language": "en", "scrapeId": "585c917a-18e1-49eb-8ec8-72b0eed377bc", "sourceURL": "https://kubevela.io/docs/cli/vela_logs", "url": "https://kubevela.io/docs/cli/vela_logs/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela Logs Command\"?\n\nAssistant: Here are the recommended best practices:\n\n• Use the --namespace option to specify the Kubernetes namespace for better log filtering.\n• Utilize the --output option to format logs in a way that suits your needs.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_logs", "title": "KubeVela Logs Command", "description": "Tail logs for vela application.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 15:46:52", "type": "best_practices", "page_metadata": {"generator": "Docusaurus v2.4.3", "ogTitle": "vela logs | KubeVela", "twitter:card": "summary_large_image", "language": "en", "title": "vela logs | KubeVela", "ogUrl": "https://kubevela.io/docs/cli/vela_logs/", "theme-color": "#ffffff", "description": "Tail logs for application.", "docsearch:docusaurus_tag": "docs-default-v1.10", "docusaurus_tag": "docs-default-v1.10", "og:title": "vela logs | KubeVela", "msapplication-config": "/img/favicons/browserconfig.xml", "viewport": "width=device-width, initial-scale=1.0", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogDescription": "Tail logs for application.", "og:url": "https://kubevela.io/docs/cli/vela_logs/", "docsearch:version": "v1.10", "og:description": "Tail logs for application.", "docusaurus_locale": "en", "docusaurus_version": "v1.10", "docsearch:language": "en", "scrapeId": "585c917a-18e1-49eb-8ec8-72b0eed377bc", "sourceURL": "https://kubevela.io/docs/cli/vela_logs", "url": "https://kubevela.io/docs/cli/vela_logs/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela CLI - vela trait\"?\n\nAssistant: List trait types installed and discover more in registry.\n\nHere's a detailed explanation:\n\n\n## Synopsis\nList trait types installed and discover more in registry.\n\n## Examples\n```bash\nvela trait\n```\n\n## Options\n```bash\n      --discover                       discover traits in registries\n  -h, --help                           help for trait\n      --label --label type=terraform   a label to filter components, the format is --label type=terraform\n      --registry string                specify the registry name (default \"default\")\n      --token string                   specify token when using --url to specify registry url\n      --url string                     specify the registry URL\n```\n\n## Options inherited from parent commands\n```bash\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n\n## SEE ALSO\n- [vela trait get](https://kubevela.io/docs/cli/vela_trait_get/) \\- get trait from registry\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_trait", "title": "KubeVela CLI - vela trait", "description": "List trait types installed and discover more in registry.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:47:06", "type": "overview", "page_metadata": {"docusaurus_locale": "en", "viewport": "width=device-width, initial-scale=1.0", "og:url": "https://kubevela.io/docs/cli/vela_trait/", "ogDescription": "List/get traits.", "title": "vela trait | KubeVela", "language": "en", "twitter:card": "summary_large_image", "theme-color": "#ffffff", "docsearch:language": "en", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_tag": "docs-default-v1.10", "docsearch:docusaurus_tag": "docs-default-v1.10", "docsearch:version": "v1.10", "docusaurus_version": "v1.10", "description": "List/get traits.", "ogTitle": "vela trait | KubeVela", "ogUrl": "https://kubevela.io/docs/cli/vela_trait/", "og:description": "List/get traits.", "og:title": "vela trait | KubeVela", "msapplication-config": "/img/favicons/browserconfig.xml", "generator": "Docusaurus v2.4.3", "scrapeId": "23ae3a49-c5f2-4b9b-87a7-fe17d33d3a30", "sourceURL": "https://kubevela.io/docs/cli/vela_trait", "url": "https://kubevela.io/docs/cli/vela_trait/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"KubeVela CLI - vela trait\"?\n\nAssistant: Here are some code examples:\n\n### Command to list traits\n```yaml\nvela trait\n```\n\n### Options for vela trait command\n```yaml\n--discover\n-h, --help\n--label --label type=terraform\n--registry string\n--token string\n--url string\n```\n\n### Options inherited from parent commands\n```yaml\n-V, --verbosity Level\n-y, --yes\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_trait", "title": "KubeVela CLI - vela trait", "description": "List trait types installed and discover more in registry.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:47:06", "type": "code_examples", "page_metadata": {"docusaurus_locale": "en", "viewport": "width=device-width, initial-scale=1.0", "og:url": "https://kubevela.io/docs/cli/vela_trait/", "ogDescription": "List/get traits.", "title": "vela trait | KubeVela", "language": "en", "twitter:card": "summary_large_image", "theme-color": "#ffffff", "docsearch:language": "en", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_tag": "docs-default-v1.10", "docsearch:docusaurus_tag": "docs-default-v1.10", "docsearch:version": "v1.10", "docusaurus_version": "v1.10", "description": "List/get traits.", "ogTitle": "vela trait | KubeVela", "ogUrl": "https://kubevela.io/docs/cli/vela_trait/", "og:description": "List/get traits.", "og:title": "vela trait | KubeVela", "msapplication-config": "/img/favicons/browserconfig.xml", "generator": "Docusaurus v2.4.3", "scrapeId": "23ae3a49-c5f2-4b9b-87a7-fe17d33d3a30", "sourceURL": "https://kubevela.io/docs/cli/vela_trait", "url": "https://kubevela.io/docs/cli/vela_trait/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela CLI - vela trait\"?\n\nAssistant: Here are the recommended best practices:\n\n• If you like KubeVela, give it a star on GitHub!\n• Check the release notes for updates and new features.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_trait", "title": "KubeVela CLI - vela trait", "description": "List trait types installed and discover more in registry.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:47:06", "type": "best_practices", "page_metadata": {"docusaurus_locale": "en", "viewport": "width=device-width, initial-scale=1.0", "og:url": "https://kubevela.io/docs/cli/vela_trait/", "ogDescription": "List/get traits.", "title": "vela trait | KubeVela", "language": "en", "twitter:card": "summary_large_image", "theme-color": "#ffffff", "docsearch:language": "en", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_tag": "docs-default-v1.10", "docsearch:docusaurus_tag": "docs-default-v1.10", "docsearch:version": "v1.10", "docusaurus_version": "v1.10", "description": "List/get traits.", "ogTitle": "vela trait | KubeVela", "ogUrl": "https://kubevela.io/docs/cli/vela_trait/", "og:description": "List/get traits.", "og:title": "vela trait | KubeVela", "msapplication-config": "/img/favicons/browserconfig.xml", "generator": "Docusaurus v2.4.3", "scrapeId": "23ae3a49-c5f2-4b9b-87a7-fe17d33d3a30", "sourceURL": "https://kubevela.io/docs/cli/vela_trait", "url": "https://kubevela.io/docs/cli/vela_trait/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"Detach Managed Cluster\"?\n\nAssistant: This page provides information on how to detach a managed cluster using KubeVela CLI.\n\nHere's a detailed explanation:\n\n\n## Synopsis\ndetach managed cluster.\n\n## Options\n-h, --help                     help for detach\n-p, --kubeconfig-path string   Specify the kubeconfig path of managed cluster. If you use ocm to manage your cluster, you must set the kubeconfig-path.\n\n## Options inherited from parent commands\n-V, --verbosity Level   number for the log level verbosity\n-y, --yes               Assume yes for all user prompts.\n\n## SEE ALSO\n- [vela cluster](https://kubevela.io/docs/cli/vela_cluster/) - Manage Kubernetes clusters.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_cluster_detach", "title": "Detach Managed Cluster", "description": "This page provides information on how to detach a managed cluster using KubeVela CLI.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 15:47:53", "type": "overview", "page_metadata": {"msapplication-config": "/img/favicons/browserconfig.xml", "title": "vela cluster detach | KubeVela", "docusaurus_locale": "en", "docsearch:language": "en", "theme-color": "#ffffff", "language": "en", "docsearch:docusaurus_tag": "docs-default-v1.10", "docusaurus_tag": "docs-default-v1.10", "docusaurus_version": "v1.10", "ogDescription": "detach managed cluster.", "generator": "Docusaurus v2.4.3", "og:url": "https://kubevela.io/docs/cli/vela_cluster_detach/", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "viewport": "width=device-width, initial-scale=1.0", "og:title": "vela cluster detach | KubeVela", "ogTitle": "vela cluster detach | KubeVela", "ogUrl": "https://kubevela.io/docs/cli/vela_cluster_detach/", "twitter:card": "summary_large_image", "docsearch:version": "v1.10", "og:description": "detach managed cluster.", "description": "detach managed cluster.", "scrapeId": "26ac565e-c094-40a1-baf6-dcf8d0dd18aa", "sourceURL": "https://kubevela.io/docs/cli/vela_cluster_detach", "url": "https://kubevela.io/docs/cli/vela_cluster_detach/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"Detach Managed Cluster\"?\n\nAssistant: Here are some code examples:\n\n### Detach Command\n```yaml\nvela cluster detach [CLUSTER_NAME] [flags]\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_cluster_detach", "title": "Detach Managed Cluster", "description": "This page provides information on how to detach a managed cluster using KubeVela CLI.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 15:47:53", "type": "code_examples", "page_metadata": {"msapplication-config": "/img/favicons/browserconfig.xml", "title": "vela cluster detach | KubeVela", "docusaurus_locale": "en", "docsearch:language": "en", "theme-color": "#ffffff", "language": "en", "docsearch:docusaurus_tag": "docs-default-v1.10", "docusaurus_tag": "docs-default-v1.10", "docusaurus_version": "v1.10", "ogDescription": "detach managed cluster.", "generator": "Docusaurus v2.4.3", "og:url": "https://kubevela.io/docs/cli/vela_cluster_detach/", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "viewport": "width=device-width, initial-scale=1.0", "og:title": "vela cluster detach | KubeVela", "ogTitle": "vela cluster detach | KubeVela", "ogUrl": "https://kubevela.io/docs/cli/vela_cluster_detach/", "twitter:card": "summary_large_image", "docsearch:version": "v1.10", "og:description": "detach managed cluster.", "description": "detach managed cluster.", "scrapeId": "26ac565e-c094-40a1-baf6-dcf8d0dd18aa", "sourceURL": "https://kubevela.io/docs/cli/vela_cluster_detach", "url": "https://kubevela.io/docs/cli/vela_cluster_detach/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"Detach Managed Cluster\"?\n\nAssistant: Here are the recommended best practices:\n\n• If you use ocm to manage your cluster, you must set the kubeconfig-path.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_cluster_detach", "title": "Detach Managed Cluster", "description": "This page provides information on how to detach a managed cluster using KubeVela CLI.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 15:47:53", "type": "best_practices", "page_metadata": {"msapplication-config": "/img/favicons/browserconfig.xml", "title": "vela cluster detach | KubeVela", "docusaurus_locale": "en", "docsearch:language": "en", "theme-color": "#ffffff", "language": "en", "docsearch:docusaurus_tag": "docs-default-v1.10", "docusaurus_tag": "docs-default-v1.10", "docusaurus_version": "v1.10", "ogDescription": "detach managed cluster.", "generator": "Docusaurus v2.4.3", "og:url": "https://kubevela.io/docs/cli/vela_cluster_detach/", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "viewport": "width=device-width, initial-scale=1.0", "og:title": "vela cluster detach | KubeVela", "ogTitle": "vela cluster detach | KubeVela", "ogUrl": "https://kubevela.io/docs/cli/vela_cluster_detach/", "twitter:card": "summary_large_image", "docsearch:version": "v1.10", "og:description": "detach managed cluster.", "description": "detach managed cluster.", "scrapeId": "26ac565e-c094-40a1-baf6-dcf8d0dd18aa", "sourceURL": "https://kubevela.io/docs/cli/vela_cluster_detach", "url": "https://kubevela.io/docs/cli/vela_cluster_detach/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela Documentation v1.8\"?\n\nAssistant: This is documentation for KubeVela v1.8, which is no longer actively maintained. For up-to-date documentation, see the latest version (v1.10).\n\nHere's a detailed explanation:\n\n\n## What is KubeVela?\nKubeVela is a modern software delivery and management control plane. The goal is to make deploying and operating applications across today's hybrid, multi-cloud environments easier, faster and more reliable. Welcome onboard and sail Vela!\n\n## Why KubeVela?\n- The modern application should be able to deploy across hybrid environments including Kubernetes, cloud, or even IoT devices in a simple and robust way.\n- The app delivery control plane should be able to adapt to any existing infrastructure or extend with modular and reusable building blocks per users’ needs.\n- The developers should have an application platform that is vendor agnostic, consistent experience, and has a large number of reusable building blocks and best practices.\n\n## Key Features\n- **Deployment as Code**\n\nDeclare your deployment plan as [workflow](https://kubevela.io/docs/v1.8/getting-started/core-concept/), run it automatically with any CI/CD or GitOps system, extend or re-program the workflow steps with [CUE](https://cuelang.org/). No ad-hoc scripts, no dirty glue code, just deploy. The deployment workflow in KubeVela is powered by [Open Application Model](https://oam.dev/).\n\n- **Built-in security, compliance and observability building blocks**\n\nChoose from the wide range of LDAP integrations we provided out-of-box, enjoy enhanced [multi-cluster authorization and authentication](https://kubevela.io/docs/v1.8/platform-engineers/auth/advance/), pick and apply fine-grained RBAC modules and customize them per your own supply chain requirements. All delivery process has fully [automated observability](https://kubevela.io/docs/v1.8/platform-engineers/operations/observability/).\n\n- **Multi-cloud/hybrid-environments app delivery as first-class citizen**\n\nNatively supports multi-cluster/hybrid-cloud scenarios such as progressive rollout across test/staging/production environments, automatic canary, blue-green and continuous verification, rich placement strategy across clusters and clouds, along with automated cloud environments provision.\n\n- **Lightweight but highly extensible architecture**\n\nMinimize your control plane deployment with only one pod and 0.5c1g resources to handle thousands of application delivery. Glue and orchestrate all your infrastructure capabilities as reusable modules and share the large growing community [addons](https://kubevela.io/docs/v1.8/reference/addons/overview/).\n\n## KubeVela vs. Other Software\n### KubeVela vs. CI/CD (GitHub Actions, GitLab, CircleCI, Jenkins, etc.)\n\nKubeVela is a continuous delivery platform that works at downstream of your CI process. So you will reuse the CI process you already adopted, and KubeVela will take over CD process by empowering it with modern application delivery best practices, such as declarative deployment plan as workflow, hybrid/multi-cloud resource provision/binding, security and compliance, and much more. It natively supports GitOps if you want.\n\n> Feel free to check the [Integrating with Jenkins](https://kubevela.io/docs/v1.8/tutorials/jenkins/) or [GitOps](https://kubevela.io/docs/v1.8/case-studies/gitops/) documentation for more details.\n\n### KubeVela vs. GitOps (ArgoCD, FluxCD, etc.)\n\nKubeVela adopts your GitOps process and improves it by adding multi-cluster/hybrid-cloud capabilities:\n\n- KubeVela has a user-friendly workflow that allows you to extend, re-program or share any of your delivery process, including security and compliance flows.\n- KubeVela regards multi-cloud/hybrid-environments app delivery as first-class citizen, it provides rich deployment strategies across clusters and clouds with fully managed cloud environments provision.\n\n### KubeVela vs. PaaS (Heroku, Cloud Foundry, etc.)\n\nKubeVela shares the same goal with the traditional PaaS to provide full application deployment and management capabilities and aim to improve developer experience and efficiency.\n\nThough the biggest difference lies in **flexibility**.\n\nKubeVela is fully programmable, all of its deployment workflow and component feature set are LEGO-style CUE modules and can be extended or removed in-place when your needs change. As a CD control plane, KubeVela allow you to take full control over your infrastructure and tooling.\n\n### KubeVela vs. Helm\n\nHelm is a package manager for Kubernetes that provides package, install, and upgrade a set of YAML files for Kubernetes as a unit.\n\nKubeVela as a modern software delivery control plane can naturally deploy Helm charts. For example, you could use KubeVela to define an application that is composed by a WordPress chart and a AWS RDS Terraform module, orchestrate the components' topology, and then deploy them to multiple environments following certain strategy.\n\nOf course, KubeVela also supports other encapsulation formats including Kustomize etc.\n\n### KubeVela vs. Kubernetes\n\nKubeVela is a modern application delivery system built with cloud native stack. It leverages [Open Application Model](https://github.com/oam-dev/spec) and Kubernetes as control plane to resolve a hard problem - making shipping applications enjoyable.\n\n## Development Status\nKubeVela is being actively developed by the community, our releases can be found [here](https://github.com/kubevela/kubevela/releases).\n\n## Adoption\nOrganizations who have officially adopted KubeVela can be found [here](https://github.com/kubevela/community/blob/main/ADOPTERS.md).\n\n## What's Next\n- Start to [install KubeVela](https://kubevela.io/docs/v1.8/install/).\n- Learn [Core Concepts](https://kubevela.io/docs/v1.8/getting-started/core-concept/) to know more about how it works.\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.8", "title": "KubeVela Documentation v1.8", "description": "This is documentation for KubeVela v1.8, which is no longer actively maintained. For up-to-date documentation, see the latest version (v1.10).", "has_code_examples": false, "has_best_practices": true, "section_count": 7, "timestamp": "2025-02-28 15:48:12", "type": "overview", "page_metadata": {"favicon": "https://kubevela.io/img/favicons/favicon.ico", "theme-color": "#ffffff", "og:description": "What is KubeVela?", "title": "Introduction | KubeVela", "msapplication-config": "/img/favicons/browserconfig.xml", "twitter:card": "summary_large_image", "viewport": "width=device-width, initial-scale=1.0", "docusaurus_version": "v1.8", "docsearch:version": "v1.8", "ogUrl": "https://kubevela.io/docs/v1.8/", "docusaurus_locale": "en", "og:url": "https://kubevela.io/docs/v1.8/", "docsearch:language": "en", "ogDescription": "What is KubeVela?", "docusaurus_tag": "docs-default-v1.8", "docsearch:docusaurus_tag": "docs-default-v1.8", "language": "en", "og:title": "Introduction | KubeVela", "ogTitle": "Introduction | KubeVela", "description": "What is KubeVela?", "generator": "Docusaurus v2.4.3", "scrapeId": "f7a04046-48d2-4067-b568-a6277392c776", "sourceURL": "https://kubevela.io/docs/v1.8", "url": "https://kubevela.io/docs/v1.8/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela Documentation v1.8\"?\n\nAssistant: Here are the recommended best practices:\n\n• KubeVela is a continuous delivery platform that works at downstream of your CI process.\n• KubeVela adopts your GitOps process and improves it by adding multi-cluster/hybrid-cloud capabilities.\n• KubeVela is fully programmable, all of its deployment workflow and component feature set are LEGO-style CUE modules and can be extended or removed in-place when your needs change.\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.8", "title": "KubeVela Documentation v1.8", "description": "This is documentation for KubeVela v1.8, which is no longer actively maintained. For up-to-date documentation, see the latest version (v1.10).", "has_code_examples": false, "has_best_practices": true, "section_count": 7, "timestamp": "2025-02-28 15:48:12", "type": "best_practices", "page_metadata": {"favicon": "https://kubevela.io/img/favicons/favicon.ico", "theme-color": "#ffffff", "og:description": "What is KubeVela?", "title": "Introduction | KubeVela", "msapplication-config": "/img/favicons/browserconfig.xml", "twitter:card": "summary_large_image", "viewport": "width=device-width, initial-scale=1.0", "docusaurus_version": "v1.8", "docsearch:version": "v1.8", "ogUrl": "https://kubevela.io/docs/v1.8/", "docusaurus_locale": "en", "og:url": "https://kubevela.io/docs/v1.8/", "docsearch:language": "en", "ogDescription": "What is KubeVela?", "docusaurus_tag": "docs-default-v1.8", "docsearch:docusaurus_tag": "docs-default-v1.8", "language": "en", "og:title": "Introduction | KubeVela", "ogTitle": "Introduction | KubeVela", "description": "What is KubeVela?", "generator": "Docusaurus v2.4.3", "scrapeId": "f7a04046-48d2-4067-b568-a6277392c776", "sourceURL": "https://kubevela.io/docs/v1.8", "url": "https://kubevela.io/docs/v1.8/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"Add an addon registry\"?\n\nAssistant: Add an addon registry.\n\nHere's a detailed explanation:\n\n\n## Synopsis\nAdd an addon registry.\n\n## Examples\n```codeBlockLines_e6Vv\nadd a helm repo registry: vela addon registry add --type=helm my-repo --endpoint=<URL>\nadd a github registry: vela addon registry add my-repo --type git --endpoint=<URL> --path=<path> --gitToken=<git token>\nadd a specified github registry: vela addon registry add my-repo --type git --endpoint=https://github.com/kubevela/catalog --path=addons --gitToken=<git token>\nadd a gitlab registry: vela addon registry add my-repo --type gitlab --endpoint=<URL> --gitlabRepoName=<repoName> --path=<path> --gitToken=<git token>\nadd a specified gitlab registry: vela addon registry add my-repo --type gitlab --endpoint=http://gitlab.xxx.com/xxx/catalog --path=addons --gitlabRepoName=catalog --gitToken=<git token>\n```\n\n## Options\n```codeBlockLines_e6Vv\n      --bucket string           specify the OSS bucket name\n      --endpoint string         specify the addon registry endpoint\n      --gitToken string         specify the github repo token\n      --gitlabRepoName string   specify the gitlab addon registry repoName, must be set when registry is gitlab\n  -h, --help                    help for add\n      --insecureSkipTLS         specify the Helm addon registry skip tls verify\n      --password string         specify the Helm addon registry password\n      --path string             specify the addon registry path, must be set when addons are not in root of registry\n      --type string             specify the addon registry type\n      --username string         specify the Helm addon registry username\n```\n\n## Options inherited from parent commands\n```codeBlockLines_e6Vv\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n\n## SEE ALSO\n- [vela addon registry](https://kubevela.io/docs/cli/vela_addon_registry/) \\- Manage addon registry.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_addon_registry_add", "title": "Add an addon registry", "description": "Add an addon registry.", "has_code_examples": true, "has_best_practices": false, "section_count": 5, "timestamp": "2025-02-28 15:48:28", "type": "overview", "page_metadata": {"docusaurus_tag": "docs-default-v1.10", "title": "vela addon registry add | KubeVela", "docusaurus_locale": "en", "docsearch:version": "v1.10", "ogTitle": "vela addon registry add | KubeVela", "language": "en", "description": "Add an addon registry.", "ogUrl": "https://kubevela.io/docs/cli/vela_addon_registry_add/", "ogDescription": "Add an addon registry.", "msapplication-config": "/img/favicons/browserconfig.xml", "generator": "Docusaurus v2.4.3", "docsearch:language": "en", "og:title": "vela addon registry add | KubeVela", "twitter:card": "summary_large_image", "docsearch:docusaurus_tag": "docs-default-v1.10", "docusaurus_version": "v1.10", "og:description": "Add an addon registry.", "theme-color": "#ffffff", "viewport": "width=device-width, initial-scale=1.0", "og:url": "https://kubevela.io/docs/cli/vela_addon_registry_add/", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "scrapeId": "8ea73267-dc1a-4b02-b139-330cc577558d", "sourceURL": "https://kubevela.io/docs/cli/vela_addon_registry_add", "url": "https://kubevela.io/docs/cli/vela_addon_registry_add/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"Add an addon registry\"?\n\nAssistant: Here are some code examples:\n\n### Add a Helm Repo Registry\n```yaml\nvela addon registry add --type=helm my-repo --endpoint=<URL>\n```\n\n### Add a GitHub Registry\n```yaml\nvela addon registry add my-repo --type git --endpoint=<URL> --path=<path> --gitToken=<git token>\n```\n\n### Add a Specified GitHub Registry\n```yaml\nvela addon registry add my-repo --type git --endpoint=https://github.com/kubevela/catalog --path=addons --gitToken=<git token>\n```\n\n### Add a GitLab Registry\n```yaml\nvela addon registry add my-repo --type gitlab --endpoint=<URL> --gitlabRepoName=<repoName> --path=<path> --gitToken=<git token>\n```\n\n### Add a Specified GitLab Registry\n```yaml\nvela addon registry add my-repo --type gitlab --endpoint=http://gitlab.xxx.com/xxx/catalog --path=addons --gitlabRepoName=catalog --gitToken=<git token>\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_addon_registry_add", "title": "Add an addon registry", "description": "Add an addon registry.", "has_code_examples": true, "has_best_practices": false, "section_count": 5, "timestamp": "2025-02-28 15:48:28", "type": "code_examples", "page_metadata": {"docusaurus_tag": "docs-default-v1.10", "title": "vela addon registry add | KubeVela", "docusaurus_locale": "en", "docsearch:version": "v1.10", "ogTitle": "vela addon registry add | KubeVela", "language": "en", "description": "Add an addon registry.", "ogUrl": "https://kubevela.io/docs/cli/vela_addon_registry_add/", "ogDescription": "Add an addon registry.", "msapplication-config": "/img/favicons/browserconfig.xml", "generator": "Docusaurus v2.4.3", "docsearch:language": "en", "og:title": "vela addon registry add | KubeVela", "twitter:card": "summary_large_image", "docsearch:docusaurus_tag": "docs-default-v1.10", "docusaurus_version": "v1.10", "og:description": "Add an addon registry.", "theme-color": "#ffffff", "viewport": "width=device-width, initial-scale=1.0", "og:url": "https://kubevela.io/docs/cli/vela_addon_registry_add/", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "scrapeId": "8ea73267-dc1a-4b02-b139-330cc577558d", "sourceURL": "https://kubevela.io/docs/cli/vela_addon_registry_add", "url": "https://kubevela.io/docs/cli/vela_addon_registry_add/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela CLI - vela ls\"?\n\nAssistant: List all vela applications.\n\nHere's a detailed explanation:\n\n\n## Synopsis\nList all vela applications.\n\n## Examples\n```codeBlockLines_e6Vv\nvela ls\n```\n\n## Options\n```codeBlockLines_e6Vv\n  -A, --all-namespaces          If true, check the specified action in all namespaces.\n  -e, --env string              specify environment name for application\n      --field-selector string   Selector (field query) to filter on, supports '=', '==', and '!='.(e.g. --field-selector key1=value1,key2=value2).\n  -h, --help                    help for ls\n  -n, --namespace string        specify the Kubernetes namespace to use\n  -l, --selector string         Selector (label query) to filter on, supports '=', '==', and '!='.(e.g. -l key1=value1,key2=value2).\n```\n\n## Options inherited from parent commands\n```codeBlockLines_e6Vv\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n\n## SEE ALSO\nGo Back to [CLI Commands](https://kubevela.io/docs/cli/vela/) Homepage.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_ls", "title": "KubeVela CLI - vela ls", "description": "List all vela applications.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:48:54", "type": "overview", "page_metadata": {"twitter:card": "summary_large_image", "viewport": "width=device-width, initial-scale=1.0", "og:title": "vela ls | KubeVela", "og:description": "List applications.", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_version": "v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "docsearch:docusaurus_tag": "docs-default-v1.10", "ogDescription": "List applications.", "description": "List applications.", "docsearch:language": "en", "docusaurus_tag": "docs-default-v1.10", "language": "en", "title": "vela ls | KubeVela", "ogTitle": "vela ls | KubeVela", "theme-color": "#ffffff", "docsearch:version": "v1.10", "generator": "Docusaurus v2.4.3", "docusaurus_locale": "en", "og:url": "https://kubevela.io/docs/cli/vela_ls/", "ogUrl": "https://kubevela.io/docs/cli/vela_ls/", "scrapeId": "8c0ba470-e99d-41dd-887a-9d5d73277549", "sourceURL": "https://kubevela.io/docs/cli/vela_ls", "url": "https://kubevela.io/docs/cli/vela_ls/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"KubeVela CLI - vela ls\"?\n\nAssistant: Here are some code examples:\n\n### List Applications Command\n```yaml\nvela ls\n```\n\n### Options Command\n```yaml\n```codeBlockLines_e6Vv\n  -A, --all-namespaces          If true, check the specified action in all namespaces.\n  -e, --env string              specify environment name for application\n      --field-selector string   Selector (field query) to filter on, supports '=', '==', and '!='.(e.g. --field-selector key1=value1,key2=value2).\n  -h, --help                    help for ls\n  -n, --namespace string        specify the Kubernetes namespace to use\n  -l, --selector string         Selector (label query) to filter on, supports '=', '==', and '!='.(e.g. -l key1=value1,key2=value2).\n```\n```\n\n### Inherited Options Command\n```yaml\n```codeBlockLines_e6Vv\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_ls", "title": "KubeVela CLI - vela ls", "description": "List all vela applications.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:48:54", "type": "code_examples", "page_metadata": {"twitter:card": "summary_large_image", "viewport": "width=device-width, initial-scale=1.0", "og:title": "vela ls | KubeVela", "og:description": "List applications.", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_version": "v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "docsearch:docusaurus_tag": "docs-default-v1.10", "ogDescription": "List applications.", "description": "List applications.", "docsearch:language": "en", "docusaurus_tag": "docs-default-v1.10", "language": "en", "title": "vela ls | KubeVela", "ogTitle": "vela ls | KubeVela", "theme-color": "#ffffff", "docsearch:version": "v1.10", "generator": "Docusaurus v2.4.3", "docusaurus_locale": "en", "og:url": "https://kubevela.io/docs/cli/vela_ls/", "ogUrl": "https://kubevela.io/docs/cli/vela_ls/", "scrapeId": "8c0ba470-e99d-41dd-887a-9d5d73277549", "sourceURL": "https://kubevela.io/docs/cli/vela_ls", "url": "https://kubevela.io/docs/cli/vela_ls/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela CLI - vela ls\"?\n\nAssistant: Here are the recommended best practices:\n\n• Use the -A option to check actions across all namespaces.\n• Specify the environment name using the -e option for targeted application listing.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_ls", "title": "KubeVela CLI - vela ls", "description": "List all vela applications.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:48:54", "type": "best_practices", "page_metadata": {"twitter:card": "summary_large_image", "viewport": "width=device-width, initial-scale=1.0", "og:title": "vela ls | KubeVela", "og:description": "List applications.", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_version": "v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "docsearch:docusaurus_tag": "docs-default-v1.10", "ogDescription": "List applications.", "description": "List applications.", "docsearch:language": "en", "docusaurus_tag": "docs-default-v1.10", "language": "en", "title": "vela ls | KubeVela", "ogTitle": "vela ls | KubeVela", "theme-color": "#ffffff", "docsearch:version": "v1.10", "generator": "Docusaurus v2.4.3", "docusaurus_locale": "en", "og:url": "https://kubevela.io/docs/cli/vela_ls/", "ogUrl": "https://kubevela.io/docs/cli/vela_ls/", "scrapeId": "8c0ba470-e99d-41dd-887a-9d5d73277549", "sourceURL": "https://kubevela.io/docs/cli/vela_ls", "url": "https://kubevela.io/docs/cli/vela_ls/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela CLI Config Management\"?\n\nAssistant: Manage the configs, such as the terraform provider, image registry, helm repository, etc.\n\nHere's a detailed explanation:\n\n\n## Synopsis\nManage the configs, such as the terraform provider, image registry, helm repository, etc.\n\n## Options\n```codeBlockLines_e6Vv\n  -h, --help   help for config\n```\n\n## Options inherited from parent commands\n```codeBlockLines_e6Vv\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n\n## SEE ALSO\n- [vela config create](https://kubevela.io/docs/cli/vela_config_create/) \\- Create a config.\n- [vela config delete](https://kubevela.io/docs/cli/vela_config_delete/) \\- Delete a config.\n- [vela config distribute](https://kubevela.io/docs/cli/vela_config_distribute/) \\- Distribute a config\n- [vela config list](https://kubevela.io/docs/cli/vela_config_list/) \\- List the configs.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_config", "title": "KubeVela CLI Config Management", "description": "Manage the configs, such as the terraform provider, image registry, helm repository, etc.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 15:49:02", "type": "overview", "page_metadata": {"docusaurus_tag": "docs-default-v1.10", "og:description": "Manage the configs.", "theme-color": "#ffffff", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "language": "en", "ogTitle": "vela config | KubeVela", "og:title": "vela config | KubeVela", "msapplication-config": "/img/favicons/browserconfig.xml", "twitter:card": "summary_large_image", "ogUrl": "https://kubevela.io/docs/cli/vela_config/", "title": "vela config | KubeVela", "viewport": "width=device-width, initial-scale=1.0", "docsearch:language": "en", "docsearch:docusaurus_tag": "docs-default-v1.10", "description": "Manage the configs.", "ogDescription": "Manage the configs.", "docusaurus_locale": "en", "docsearch:version": "v1.10", "generator": "Docusaurus v2.4.3", "docusaurus_version": "v1.10", "og:url": "https://kubevela.io/docs/cli/vela_config/", "scrapeId": "18d81613-e22f-40f0-87e5-26b308dad0ab", "sourceURL": "https://kubevela.io/docs/cli/vela_config", "url": "https://kubevela.io/docs/cli/vela_config/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"KubeVela CLI Config Management\"?\n\nAssistant: Here are some code examples:\n\n### Options\n```yaml\n```codeBlockLines_e6Vv\n  -h, --help   help for config\n```\n```\n\n### Options inherited from parent commands\n```yaml\n```codeBlockLines_e6Vv\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_config", "title": "KubeVela CLI Config Management", "description": "Manage the configs, such as the terraform provider, image registry, helm repository, etc.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 15:49:02", "type": "code_examples", "page_metadata": {"docusaurus_tag": "docs-default-v1.10", "og:description": "Manage the configs.", "theme-color": "#ffffff", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "language": "en", "ogTitle": "vela config | KubeVela", "og:title": "vela config | KubeVela", "msapplication-config": "/img/favicons/browserconfig.xml", "twitter:card": "summary_large_image", "ogUrl": "https://kubevela.io/docs/cli/vela_config/", "title": "vela config | KubeVela", "viewport": "width=device-width, initial-scale=1.0", "docsearch:language": "en", "docsearch:docusaurus_tag": "docs-default-v1.10", "description": "Manage the configs.", "ogDescription": "Manage the configs.", "docusaurus_locale": "en", "docsearch:version": "v1.10", "generator": "Docusaurus v2.4.3", "docusaurus_version": "v1.10", "og:url": "https://kubevela.io/docs/cli/vela_config/", "scrapeId": "18d81613-e22f-40f0-87e5-26b308dad0ab", "sourceURL": "https://kubevela.io/docs/cli/vela_config", "url": "https://kubevela.io/docs/cli/vela_config/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela CLI Config Management\"?\n\nAssistant: Here are the recommended best practices:\n\n• If you like KubeVela, give it a star on GitHub!\n• Check the release notes for updates and new features.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_config", "title": "KubeVela CLI Config Management", "description": "Manage the configs, such as the terraform provider, image registry, helm repository, etc.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 15:49:02", "type": "best_practices", "page_metadata": {"docusaurus_tag": "docs-default-v1.10", "og:description": "Manage the configs.", "theme-color": "#ffffff", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "language": "en", "ogTitle": "vela config | KubeVela", "og:title": "vela config | KubeVela", "msapplication-config": "/img/favicons/browserconfig.xml", "twitter:card": "summary_large_image", "ogUrl": "https://kubevela.io/docs/cli/vela_config/", "title": "vela config | KubeVela", "viewport": "width=device-width, initial-scale=1.0", "docsearch:language": "en", "docsearch:docusaurus_tag": "docs-default-v1.10", "description": "Manage the configs.", "ogDescription": "Manage the configs.", "docusaurus_locale": "en", "docsearch:version": "v1.10", "generator": "Docusaurus v2.4.3", "docusaurus_version": "v1.10", "og:url": "https://kubevela.io/docs/cli/vela_config/", "scrapeId": "18d81613-e22f-40f0-87e5-26b308dad0ab", "sourceURL": "https://kubevela.io/docs/cli/vela_config", "url": "https://kubevela.io/docs/cli/vela_config/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela CLI: Workflow Debug\"?\n\nAssistant: This page provides information on how to debug workflow steps using the KubeVela CLI.\n\nHere's a detailed explanation:\n\n\n## Debug workflow steps\nDebug workflow steps\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_workflow_debug", "title": "KubeVela CLI: Workflow Debug", "description": "This page provides information on how to debug workflow steps using the KubeVela CLI.", "has_code_examples": true, "has_best_practices": true, "section_count": 1, "timestamp": "2025-02-28 15:49:14", "type": "overview", "page_metadata": {"description": "Debug workflow steps", "msapplication-config": "/img/favicons/browserconfig.xml", "generator": "Docusaurus v2.4.3", "title": "vela workflow debug | KubeVela", "docsearch:language": "en", "docusaurus_version": "v1.10", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:description": "Debug workflow steps", "ogUrl": "https://kubevela.io/docs/cli/vela_workflow_debug/", "ogTitle": "vela workflow debug | KubeVela", "language": "en", "twitter:card": "summary_large_image", "og:url": "https://kubevela.io/docs/cli/vela_workflow_debug/", "docusaurus_locale": "en", "docsearch:version": "v1.10", "ogDescription": "Debug workflow steps", "docusaurus_tag": "docs-default-v1.10", "theme-color": "#ffffff", "viewport": "width=device-width, initial-scale=1.0", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "og:title": "vela workflow debug | KubeVela", "scrapeId": "97d11ebc-90f0-4971-98b0-44459310b0d5", "sourceURL": "https://kubevela.io/docs/cli/vela_workflow_debug", "url": "https://kubevela.io/docs/cli/vela_workflow_debug/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"KubeVela CLI: Workflow Debug\"?\n\nAssistant: Here are some code examples:\n\n### Synopsis\n```yaml\nvela workflow debug [flags]\n```\n\n### Examples\n```yaml\nvela workflow debug <workflow-name>\n```\n\n### Options\n```yaml\n  -e, --env string         specify environment name for application\n  -f, --focus string       specify the focus value to debug, only valid for application with workflow\n  -h, --help               help for debug\n  -n, --namespace string   specify the Kubernetes namespace to use\n  -s, --step string        specify the step name in the workflow\n  -t, --type string        the type of the resource, support: [app, workflow]\n```\n\n### Options inherited from parent commands\n```yaml\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_workflow_debug", "title": "KubeVela CLI: Workflow Debug", "description": "This page provides information on how to debug workflow steps using the KubeVela CLI.", "has_code_examples": true, "has_best_practices": true, "section_count": 1, "timestamp": "2025-02-28 15:49:14", "type": "code_examples", "page_metadata": {"description": "Debug workflow steps", "msapplication-config": "/img/favicons/browserconfig.xml", "generator": "Docusaurus v2.4.3", "title": "vela workflow debug | KubeVela", "docsearch:language": "en", "docusaurus_version": "v1.10", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:description": "Debug workflow steps", "ogUrl": "https://kubevela.io/docs/cli/vela_workflow_debug/", "ogTitle": "vela workflow debug | KubeVela", "language": "en", "twitter:card": "summary_large_image", "og:url": "https://kubevela.io/docs/cli/vela_workflow_debug/", "docusaurus_locale": "en", "docsearch:version": "v1.10", "ogDescription": "Debug workflow steps", "docusaurus_tag": "docs-default-v1.10", "theme-color": "#ffffff", "viewport": "width=device-width, initial-scale=1.0", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "og:title": "vela workflow debug | KubeVela", "scrapeId": "97d11ebc-90f0-4971-98b0-44459310b0d5", "sourceURL": "https://kubevela.io/docs/cli/vela_workflow_debug", "url": "https://kubevela.io/docs/cli/vela_workflow_debug/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela CLI: Workflow Debug\"?\n\nAssistant: Here are the recommended best practices:\n\n• Use the -e flag to specify the environment name for the application when debugging.\n• Utilize the -f flag to focus on a specific value during debugging, applicable only for applications with workflows.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_workflow_debug", "title": "KubeVela CLI: Workflow Debug", "description": "This page provides information on how to debug workflow steps using the KubeVela CLI.", "has_code_examples": true, "has_best_practices": true, "section_count": 1, "timestamp": "2025-02-28 15:49:14", "type": "best_practices", "page_metadata": {"description": "Debug workflow steps", "msapplication-config": "/img/favicons/browserconfig.xml", "generator": "Docusaurus v2.4.3", "title": "vela workflow debug | KubeVela", "docsearch:language": "en", "docusaurus_version": "v1.10", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:description": "Debug workflow steps", "ogUrl": "https://kubevela.io/docs/cli/vela_workflow_debug/", "ogTitle": "vela workflow debug | KubeVela", "language": "en", "twitter:card": "summary_large_image", "og:url": "https://kubevela.io/docs/cli/vela_workflow_debug/", "docusaurus_locale": "en", "docsearch:version": "v1.10", "ogDescription": "Debug workflow steps", "docusaurus_tag": "docs-default-v1.10", "theme-color": "#ffffff", "viewport": "width=device-width, initial-scale=1.0", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "og:title": "vela workflow debug | KubeVela", "scrapeId": "97d11ebc-90f0-4971-98b0-44459310b0d5", "sourceURL": "https://kubevela.io/docs/cli/vela_workflow_debug", "url": "https://kubevela.io/docs/cli/vela_workflow_debug/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"Integrating KubeVela with Jenkins\"?\n\nAssistant: This page covers how to integrate KubeVela with Jenkins using webhook triggers for application workflow execution.\n\nHere's a detailed explanation:\n\n\n## Introduction\nThe workflow execution of KubeVela application can be triggered by webhooks. Therefore, it is rather easy for user to integrate KubeVela with existing Continuous Integration platforms, such as Jenkins or Gitlab.\n\nFrom KubeVela 1.2, VelaUX provides webhook triggers for applications to use. Only a simple curl command in Jenkins pipeline is needed to bridge CI and CD systems.\n\nIn this section, we will demonstrate how to integrate KubeVela with Jenkins in details.\n\n## Prerequisite\nThe following requirements are needed to be ensured before starting this tutorial:\n\n- KubeVela v1.2.0+ with VelaUX installed.\n- Jenkins installed.\n- VelaUX can be accessed by Jenkins. (If KubeVela is installed in an offline environment, you need to check this condition.)\n\n## Create Application\nTo use triggers, we need to create a new application on VelaUX first. For example, let's deploy a new WebService type application and use LoadBalancer to expose port 80 for access.\n\n## Setup Webhook Trigger for Jenkins\nIn the application view, we can see a default trigger as below.\n\nClick Manual Trigger, we can see the Webhook URL and the Curl Command. Either one is available to copy and use into Jenkins pipeline script.\n\n## Use Webhook in Jenkins\nTo use the webhook in Jenkins, we can paste the Curl Command in either Jenkins Freestyle project or Pipeline project.\n\n- In Freestyle project, click Add Build Step and select Execute Shell. Copy the Curl Command above into it.\n- In Pipeline project, similarly copy the Curl Command and wraps it with a `sh` command like the code below.\n\n## Advanced: Secure your Webhook URL\nThe KubeVela webhook url in Jenkins can be secured by storing it in Jenkins credentials, instead of directly referring it in the project. You can set up a secret text type credential in Jenkins and use it in the project.\n", "metadata": {"source_url": "https://kubevela.io/docs/tutorials/jenkins", "title": "Integrating KubeVela with Jenkins", "description": "This page covers how to integrate KubeVela with Jenkins using webhook triggers for application workflow execution.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-02-28 15:49:26", "type": "overview", "page_metadata": {"ogUrl": "https://kubevela.io/docs/tutorials/jenkins/", "ogTitle": "Jenkins CI | KubeVela", "og:title": "Jenkins CI | KubeVela", "docusaurus_tag": "docs-default-v1.10", "language": "en", "theme-color": "#ffffff", "docsearch:docusaurus_tag": "docs-default-v1.10", "docusaurus_locale": "en", "docsearch:version": "v1.10", "og:url": "https://kubevela.io/docs/tutorials/jenkins/", "og:description": "Introduction", "ogDescription": "Introduction", "docusaurus_version": "v1.10", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "msapplication-config": "/img/favicons/browserconfig.xml", "docsearch:language": "en", "title": "Jenkins CI | KubeVela", "generator": "Docusaurus v2.4.3", "viewport": "width=device-width, initial-scale=1.0", "description": "Introduction", "twitter:card": "summary_large_image", "scrapeId": "a716cd3f-3123-4fbd-85a2-9c03c1c18a5b", "sourceURL": "https://kubevela.io/docs/tutorials/jenkins", "url": "https://kubevela.io/docs/tutorials/jenkins/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"Integrating KubeVela with Jenkins\"?\n\nAssistant: Here are some code examples:\n\n### Jenkins Pipeline Curl Command\n```yaml\nstage('Deploy') {\n    steps {\n        sh '''#!/bin/bash\n            set -ex\n            curl -X POST -H 'content-type: application/json' --url http://47.251.6.101/api/v1/webhook/mbn6wckzh5lul3m2 -d '{\"upgrade\":{\"kubevela-jenkins-ci-demo\":{\"image\":\"busybox\"}},\"codeInfo\":{\"commit\":\"\",\"branch\":\"\",\"user\":\"\"}}'\n        '''\n    }\n}\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/tutorials/jenkins", "title": "Integrating KubeVela with Jenkins", "description": "This page covers how to integrate KubeVela with Jenkins using webhook triggers for application workflow execution.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-02-28 15:49:26", "type": "code_examples", "page_metadata": {"ogUrl": "https://kubevela.io/docs/tutorials/jenkins/", "ogTitle": "Jenkins CI | KubeVela", "og:title": "Jenkins CI | KubeVela", "docusaurus_tag": "docs-default-v1.10", "language": "en", "theme-color": "#ffffff", "docsearch:docusaurus_tag": "docs-default-v1.10", "docusaurus_locale": "en", "docsearch:version": "v1.10", "og:url": "https://kubevela.io/docs/tutorials/jenkins/", "og:description": "Introduction", "ogDescription": "Introduction", "docusaurus_version": "v1.10", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "msapplication-config": "/img/favicons/browserconfig.xml", "docsearch:language": "en", "title": "Jenkins CI | KubeVela", "generator": "Docusaurus v2.4.3", "viewport": "width=device-width, initial-scale=1.0", "description": "Introduction", "twitter:card": "summary_large_image", "scrapeId": "a716cd3f-3123-4fbd-85a2-9c03c1c18a5b", "sourceURL": "https://kubevela.io/docs/tutorials/jenkins", "url": "https://kubevela.io/docs/tutorials/jenkins/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"Integrating KubeVela with Jenkins\"?\n\nAssistant: Here are the recommended best practices:\n\n• Ensure KubeVela v1.2.0+ with VelaUX is installed before starting the tutorial.\n• Store the KubeVela webhook URL in Jenkins credentials for added security.\n", "metadata": {"source_url": "https://kubevela.io/docs/tutorials/jenkins", "title": "Integrating KubeVela with Jenkins", "description": "This page covers how to integrate KubeVela with Jenkins using webhook triggers for application workflow execution.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-02-28 15:49:26", "type": "best_practices", "page_metadata": {"ogUrl": "https://kubevela.io/docs/tutorials/jenkins/", "ogTitle": "Jenkins CI | KubeVela", "og:title": "Jenkins CI | KubeVela", "docusaurus_tag": "docs-default-v1.10", "language": "en", "theme-color": "#ffffff", "docsearch:docusaurus_tag": "docs-default-v1.10", "docusaurus_locale": "en", "docsearch:version": "v1.10", "og:url": "https://kubevela.io/docs/tutorials/jenkins/", "og:description": "Introduction", "ogDescription": "Introduction", "docusaurus_version": "v1.10", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "msapplication-config": "/img/favicons/browserconfig.xml", "docsearch:language": "en", "title": "Jenkins CI | KubeVela", "generator": "Docusaurus v2.4.3", "viewport": "width=device-width, initial-scale=1.0", "description": "Introduction", "twitter:card": "summary_large_image", "scrapeId": "a716cd3f-3123-4fbd-85a2-9c03c1c18a5b", "sourceURL": "https://kubevela.io/docs/tutorials/jenkins", "url": "https://kubevela.io/docs/tutorials/jenkins/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela Trigger Tutorial\"?\n\nAssistant: This page covers how to use KubeVela triggers to automatically deploy applications when image tags change, integrating with GitLab and Harbor.\n\nHere's a detailed explanation:\n\n\n## Introduction\nIn our daily development, when image tags changed, it is more convenient for CI/CD if the environments can automatically deploy the new image. KubeVela provides this mechanism.\n\nFrom KubeVela 1.2, VelaUX provides a good way to do this. We can use KubeVela triggers to apply applications automatically.\n\nIn this section, we will use GitLab as code repository and Harbor as image repository to integrate with KubeVela triggers, as a result, it will automatically update application when image tags changed.\n\n## Create Application\nTo use triggers, we need to create a new application on VelaUX first. We can create a new WebService type application and use LoadBalancer to expose port 80 for access.\n\n![alt](https://kubevela.io/assets/images/acr-trigger-newapp-37351acbac4f76cdc209e47184a16d9c.png)\n\n## Create Triggers for Application\nAfter creating the application, use `New Trigger` to create a trigger. Here we use `Harbor` as payload type to support requests from the `Harbor` image registry.\n\n![alt](https://kubevela.io/assets/images/harbor-trigger-newtrigger-1294a428077c9ce0e981d2ab1e27f4ad.png)\n\nCheck the details of the trigger, you can see the specific Webhook URL and the manual trigger command.\n\n![alt](https://kubevela.io/assets/images/acr-trigger-info-7cb29a072f544e98ffb0a41e17e7c5fd.png)\n\n## Setup Harbor Trigger\nHarbor payload triggers need to cooperate with Harbor image registry. After creating a trigger of type Harbor, we can copy the Webhook URL of the trigger and configure it in the Harbor image registry.\n\n![alt](https://kubevela.io/assets/images/harbor-trigger-6bba927c7425b4524c0d9f2c7a228a50.png)\n\n## Test and Apply\nAfter these setups, we can now test the trigger.\n\nLet's start by looking at the current app page, you can directly jump to the LoadBalancer address through the `Service Endpoint` of the application.\n\n![alt](https://kubevela.io/assets/images/acr-trigger-endpoints-721d7b7338443866723aa5e9efad1d6a.png)\n\nAs you can see, the current Demo application's version is `v1.0.0`.\n\n![alt](https://kubevela.io/assets/images/acr-trigger-appv1-b03cc90ba647e4f95751b1859a0ab262.png)\n\nThis source code of this demo is on the [GitLab](https://gitlab.com/FogDong/KubeVela-GitOps-Demo-Code). There is also a CI file in this repo, in which steps are simple, every time the code is updated, it will automatically build the image and pushed to the image registry.\n\nWe can change the version in the code to `v2.0.0`:\n\n```codeBlockLines_e6Vv\ndata(){\n    return {\n      v: 'v2.0.0',\n    }\n  },\n```\n\nAfter changing the code, the GitLab CI will automatically build the image and push it to the image registry.\n\nIn the access log of the Harbor trigger, we can see that Harbor sends a request to our Webhook URL when the latest image is pushed to the image registry.\n\n![alt](https://kubevela.io/assets/images/harbor-trigger-harborrecord-f644ee54d5904f4d0cca7c9b54811721.png)\n\nCheck the application revisions in VelaUX, you can see that the most recent revision was from `Webhook`.\n\n![alt](https://kubevela.io/assets/images/harbor-trigger-revisions-6c7e199a9e928cd3f0f4b30a4159613d.png)\n\nLooking back at the app page, you can see that the app version has changed to `v2.0.0` and the background of the page has changed with the version.\n\n![alt](https://kubevela.io/assets/images/acr-trigger-appv2-34fd8a1fe732693afab3dfec0726dbc8.png)\n\n## Summary\nThe KubeVela triggers' combination with the image registry is smooth and seamless. In addition to Harbor, KubeVela also supports ACR registry and custom trigger payload types.\n\nWith KubeVela triggers, we can easily apply application based on image tags automatically and complete iterations of application versions.\n", "metadata": {"source_url": "https://kubevela.io/docs/tutorials/trigger", "title": "KubeVela Trigger Tutorial", "description": "This page covers how to use KubeVela triggers to automatically deploy applications when image tags change, integrating with GitLab and Harbor.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-02-28 15:49:44", "type": "overview", "page_metadata": {"title": "Harbor Image Registry | KubeVela", "ogDescription": "Introduction", "docusaurus_version": "v1.10", "docsearch:version": "v1.10", "docsearch:docusaurus_tag": "docs-default-v1.10", "twitter:card": "summary_large_image", "docusaurus_locale": "en", "ogUrl": "https://kubevela.io/docs/tutorials/trigger/", "og:url": "https://kubevela.io/docs/tutorials/trigger/", "docusaurus_tag": "docs-default-v1.10", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "generator": "Docusaurus v2.4.3", "ogTitle": "Harbor Image Registry | KubeVela", "og:title": "Harbor Image Registry | KubeVela", "msapplication-config": "/img/favicons/browserconfig.xml", "viewport": "width=device-width, initial-scale=1.0", "language": "en", "docsearch:language": "en", "og:description": "Introduction", "description": "Introduction", "theme-color": "#ffffff", "scrapeId": "a424d7fa-10ef-4845-91ab-6acf2c72d151", "sourceURL": "https://kubevela.io/docs/tutorials/trigger", "url": "https://kubevela.io/docs/tutorials/trigger/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"KubeVela Trigger Tutorial\"?\n\nAssistant: Here are some code examples:\n\n### Change Version in Code\n```yaml\ndata(){\n    return {\n      v: 'v2.0.0',\n    }\n  }\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/tutorials/trigger", "title": "KubeVela Trigger Tutorial", "description": "This page covers how to use KubeVela triggers to automatically deploy applications when image tags change, integrating with GitLab and Harbor.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-02-28 15:49:44", "type": "code_examples", "page_metadata": {"title": "Harbor Image Registry | KubeVela", "ogDescription": "Introduction", "docusaurus_version": "v1.10", "docsearch:version": "v1.10", "docsearch:docusaurus_tag": "docs-default-v1.10", "twitter:card": "summary_large_image", "docusaurus_locale": "en", "ogUrl": "https://kubevela.io/docs/tutorials/trigger/", "og:url": "https://kubevela.io/docs/tutorials/trigger/", "docusaurus_tag": "docs-default-v1.10", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "generator": "Docusaurus v2.4.3", "ogTitle": "Harbor Image Registry | KubeVela", "og:title": "Harbor Image Registry | KubeVela", "msapplication-config": "/img/favicons/browserconfig.xml", "viewport": "width=device-width, initial-scale=1.0", "language": "en", "docsearch:language": "en", "og:description": "Introduction", "description": "Introduction", "theme-color": "#ffffff", "scrapeId": "a424d7fa-10ef-4845-91ab-6acf2c72d151", "sourceURL": "https://kubevela.io/docs/tutorials/trigger", "url": "https://kubevela.io/docs/tutorials/trigger/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela Trigger Tutorial\"?\n\nAssistant: Here are the recommended best practices:\n\n• Use KubeVela triggers to automate application deployment based on image tags.\n• Integrate with GitLab and Harbor for seamless CI/CD workflows.\n", "metadata": {"source_url": "https://kubevela.io/docs/tutorials/trigger", "title": "KubeVela Trigger Tutorial", "description": "This page covers how to use KubeVela triggers to automatically deploy applications when image tags change, integrating with GitLab and Harbor.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-02-28 15:49:44", "type": "best_practices", "page_metadata": {"title": "Harbor Image Registry | KubeVela", "ogDescription": "Introduction", "docusaurus_version": "v1.10", "docsearch:version": "v1.10", "docsearch:docusaurus_tag": "docs-default-v1.10", "twitter:card": "summary_large_image", "docusaurus_locale": "en", "ogUrl": "https://kubevela.io/docs/tutorials/trigger/", "og:url": "https://kubevela.io/docs/tutorials/trigger/", "docusaurus_tag": "docs-default-v1.10", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "generator": "Docusaurus v2.4.3", "ogTitle": "Harbor Image Registry | KubeVela", "og:title": "Harbor Image Registry | KubeVela", "msapplication-config": "/img/favicons/browserconfig.xml", "viewport": "width=device-width, initial-scale=1.0", "language": "en", "docsearch:language": "en", "og:description": "Introduction", "description": "Introduction", "theme-color": "#ffffff", "scrapeId": "a424d7fa-10ef-4845-91ab-6acf2c72d151", "sourceURL": "https://kubevela.io/docs/tutorials/trigger", "url": "https://kubevela.io/docs/tutorials/trigger/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela Workflow Logs\"?\n\nAssistant: Tail logs for workflow steps in KubeVela.\n\nHere's a detailed explanation:\n\n\n## Synopsis\nTail logs for workflow steps, note that you need to use op.#Logs in step definition to set the log config of the step.\n\n## Examples\nExample command to tail logs for a specific workflow.\n\n## Options\n-e, --env string         specify environment name for application\n-h, --help               help for logs\n-n, --namespace string   specify the Kubernetes namespace to use\n-o, --output string      output format for logs, support: [default, raw, json] (default \"default\")\n-s, --step string        specify the step name in the workflow\n-t, --type string        the type of the resource, support: [app, workflow]\n\n## Options inherited from parent commands\n-V, --verbosity Level   number for the log level verbosity\n-y, --yes               Assume yes for all user prompts\n\n## SEE ALSO\n- [vela workflow](https://kubevela.io/docs/cli/vela_workflow/) - Operate application delivery workflow.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_workflow_logs", "title": "KubeVela Workflow Logs", "description": "Tail logs for workflow steps in KubeVela.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:49:54", "type": "overview", "page_metadata": {"theme-color": "#ffffff", "docusaurus_tag": "docs-default-v1.10", "generator": "Docusaurus v2.4.3", "twitter:card": "summary_large_image", "viewport": "width=device-width, initial-scale=1.0", "docsearch:version": "v1.10", "title": "vela workflow logs | KubeVela", "description": "Tail logs for workflow steps", "msapplication-config": "/img/favicons/browserconfig.xml", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "language": "en", "docusaurus_version": "v1.10", "og:title": "vela workflow logs | KubeVela", "ogDescription": "Tail logs for workflow steps", "docsearch:language": "en", "ogUrl": "https://kubevela.io/docs/cli/vela_workflow_logs/", "ogTitle": "vela workflow logs | KubeVela", "og:url": "https://kubevela.io/docs/cli/vela_workflow_logs/", "docusaurus_locale": "en", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:description": "Tail logs for workflow steps", "scrapeId": "b44db162-11b5-4a96-9e89-60dd1660b3ce", "sourceURL": "https://kubevela.io/docs/cli/vela_workflow_logs", "url": "https://kubevela.io/docs/cli/vela_workflow_logs/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"KubeVela Workflow Logs\"?\n\nAssistant: Here are some code examples:\n\n### Command to Tail Logs\n```yaml\nvela workflow logs [flags]\n```\n\n### Example Command\n```yaml\nvela workflow logs <workflow-name>\n```\n\n### Options Command\n```yaml\n  -e, --env string         specify environment name for application\n  -h, --help               help for logs\n  -n, --namespace string   specify the Kubernetes namespace to use\n  -o, --output string      output format for logs, support: [default, raw, json] (default \"default\")\n  -s, --step string        specify the step name in the workflow\n  -t, --type string        the type of the resource, support: [app, workflow]\n```\n\n### Inherited Options Command\n```yaml\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_workflow_logs", "title": "KubeVela Workflow Logs", "description": "Tail logs for workflow steps in KubeVela.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:49:54", "type": "code_examples", "page_metadata": {"theme-color": "#ffffff", "docusaurus_tag": "docs-default-v1.10", "generator": "Docusaurus v2.4.3", "twitter:card": "summary_large_image", "viewport": "width=device-width, initial-scale=1.0", "docsearch:version": "v1.10", "title": "vela workflow logs | KubeVela", "description": "Tail logs for workflow steps", "msapplication-config": "/img/favicons/browserconfig.xml", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "language": "en", "docusaurus_version": "v1.10", "og:title": "vela workflow logs | KubeVela", "ogDescription": "Tail logs for workflow steps", "docsearch:language": "en", "ogUrl": "https://kubevela.io/docs/cli/vela_workflow_logs/", "ogTitle": "vela workflow logs | KubeVela", "og:url": "https://kubevela.io/docs/cli/vela_workflow_logs/", "docusaurus_locale": "en", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:description": "Tail logs for workflow steps", "scrapeId": "b44db162-11b5-4a96-9e89-60dd1660b3ce", "sourceURL": "https://kubevela.io/docs/cli/vela_workflow_logs", "url": "https://kubevela.io/docs/cli/vela_workflow_logs/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela Workflow Logs\"?\n\nAssistant: Here are the recommended best practices:\n\n• Use op.#Logs in step definition to set the log config of the step.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_workflow_logs", "title": "KubeVela Workflow Logs", "description": "Tail logs for workflow steps in KubeVela.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:49:54", "type": "best_practices", "page_metadata": {"theme-color": "#ffffff", "docusaurus_tag": "docs-default-v1.10", "generator": "Docusaurus v2.4.3", "twitter:card": "summary_large_image", "viewport": "width=device-width, initial-scale=1.0", "docsearch:version": "v1.10", "title": "vela workflow logs | KubeVela", "description": "Tail logs for workflow steps", "msapplication-config": "/img/favicons/browserconfig.xml", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "language": "en", "docusaurus_version": "v1.10", "og:title": "vela workflow logs | KubeVela", "ogDescription": "Tail logs for workflow steps", "docsearch:language": "en", "ogUrl": "https://kubevela.io/docs/cli/vela_workflow_logs/", "ogTitle": "vela workflow logs | KubeVela", "og:url": "https://kubevela.io/docs/cli/vela_workflow_logs/", "docusaurus_locale": "en", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:description": "Tail logs for workflow steps", "scrapeId": "b44db162-11b5-4a96-9e89-60dd1660b3ce", "sourceURL": "https://kubevela.io/docs/cli/vela_workflow_logs", "url": "https://kubevela.io/docs/cli/vela_workflow_logs/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"vela registry ls\"?\n\nAssistant: List all configured registry\n\nHere's a detailed explanation:\n\n\n## Synopsis\nList all configured registry\n\n## Examples\n```codeBlockLines_e6Vv\nvela registry ls\n```\n\n## Options\n```codeBlockLines_e6Vv\n  -h, --help   help for ls\n```\n\n## Options inherited from parent commands\n```codeBlockLines_e6Vv\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n\n## SEE ALSO\n- [vela registry](https://kubevela.io/docs/cli/vela_registry/) \\- Manage Registry\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_registry_ls", "title": "vela registry ls", "description": "List all configured registry", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:50:00", "type": "overview", "page_metadata": {"twitter:card": "summary_large_image", "title": "vela registry ls | KubeVela", "ogTitle": "vela registry ls | KubeVela", "generator": "Docusaurus v2.4.3", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:url": "https://kubevela.io/docs/cli/vela_registry_ls/", "description": "List all registry", "og:description": "List all registry", "msapplication-config": "/img/favicons/browserconfig.xml", "docusaurus_tag": "docs-default-v1.10", "docusaurus_version": "v1.10", "docsearch:version": "v1.10", "ogDescription": "List all registry", "viewport": "width=device-width, initial-scale=1.0", "ogUrl": "https://kubevela.io/docs/cli/vela_registry_ls/", "language": "en", "docusaurus_locale": "en", "docsearch:language": "en", "og:title": "vela registry ls | KubeVela", "theme-color": "#ffffff", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "scrapeId": "645f6a5a-1486-4cf0-bd84-59feda916b8d", "sourceURL": "https://kubevela.io/docs/cli/vela_registry_ls", "url": "https://kubevela.io/docs/cli/vela_registry_ls/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"vela registry ls\"?\n\nAssistant: Here are some code examples:\n\n### Command to list all registries\n```yaml\nvela registry ls\n```\n\n### Help option\n```yaml\n-h, --help   help for ls\n```\n\n### Verbosity option\n```yaml\n-V, --verbosity Level   number for the log level verbosity\n```\n\n### Assume yes option\n```yaml\n-y, --yes               Assume yes for all user prompts\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_registry_ls", "title": "vela registry ls", "description": "List all configured registry", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:50:00", "type": "code_examples", "page_metadata": {"twitter:card": "summary_large_image", "title": "vela registry ls | KubeVela", "ogTitle": "vela registry ls | KubeVela", "generator": "Docusaurus v2.4.3", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:url": "https://kubevela.io/docs/cli/vela_registry_ls/", "description": "List all registry", "og:description": "List all registry", "msapplication-config": "/img/favicons/browserconfig.xml", "docusaurus_tag": "docs-default-v1.10", "docusaurus_version": "v1.10", "docsearch:version": "v1.10", "ogDescription": "List all registry", "viewport": "width=device-width, initial-scale=1.0", "ogUrl": "https://kubevela.io/docs/cli/vela_registry_ls/", "language": "en", "docusaurus_locale": "en", "docsearch:language": "en", "og:title": "vela registry ls | KubeVela", "theme-color": "#ffffff", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "scrapeId": "645f6a5a-1486-4cf0-bd84-59feda916b8d", "sourceURL": "https://kubevela.io/docs/cli/vela_registry_ls", "url": "https://kubevela.io/docs/cli/vela_registry_ls/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"vela registry ls\"?\n\nAssistant: Here are the recommended best practices:\n\n• If you like KubeVela, give it a star on GitHub!\n• Check the release notes for the latest version updates.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_registry_ls", "title": "vela registry ls", "description": "List all configured registry", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:50:00", "type": "best_practices", "page_metadata": {"twitter:card": "summary_large_image", "title": "vela registry ls | KubeVela", "ogTitle": "vela registry ls | KubeVela", "generator": "Docusaurus v2.4.3", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:url": "https://kubevela.io/docs/cli/vela_registry_ls/", "description": "List all registry", "og:description": "List all registry", "msapplication-config": "/img/favicons/browserconfig.xml", "docusaurus_tag": "docs-default-v1.10", "docusaurus_version": "v1.10", "docsearch:version": "v1.10", "ogDescription": "List all registry", "viewport": "width=device-width, initial-scale=1.0", "ogUrl": "https://kubevela.io/docs/cli/vela_registry_ls/", "language": "en", "docusaurus_locale": "en", "docsearch:language": "en", "og:title": "vela registry ls | KubeVela", "theme-color": "#ffffff", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "scrapeId": "645f6a5a-1486-4cf0-bd84-59feda916b8d", "sourceURL": "https://kubevela.io/docs/cli/vela_registry_ls", "url": "https://kubevela.io/docs/cli/vela_registry_ls/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"Delete a config\"?\n\nAssistant: This page covers the command to delete a configuration in KubeVela.\n\nHere's a detailed explanation:\n\n\n## Delete a config\n```codeBlockLines_e6Vv\nvela config delete [flags]\n```\n\n## Options\n```codeBlockLines_e6Vv\n  -h, --help               help for delete\n  -n, --namespace string   specify the namespace of the config (default \"vela-system\")\n      --not-recall         means only deleting the config from the local and do not recall from targets.\n```\n\n## Options inherited from parent commands\n```codeBlockLines_e6Vv\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n\n## SEE ALSO\n- [vela config](https://kubevela.io/docs/cli/vela_config/) \\- Manage the configs.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_config_delete", "title": "Delete a config", "description": "This page covers the command to delete a configuration in KubeVela.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 15:50:23", "type": "overview", "page_metadata": {"generator": "Docusaurus v2.4.3", "viewport": "width=device-width, initial-scale=1.0", "twitter:card": "summary_large_image", "og:url": "https://kubevela.io/docs/cli/vela_config_delete/", "ogTitle": "vela config delete | KubeVela", "ogUrl": "https://kubevela.io/docs/cli/vela_config_delete/", "docsearch:language": "en", "docusaurus_version": "v1.10", "theme-color": "#ffffff", "ogDescription": "Delete a config.", "language": "en", "docsearch:docusaurus_tag": "docs-default-v1.10", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_locale": "en", "docusaurus_tag": "docs-default-v1.10", "og:title": "vela config delete | KubeVela", "msapplication-config": "/img/favicons/browserconfig.xml", "description": "Delete a config.", "title": "vela config delete | KubeVela", "docsearch:version": "v1.10", "og:description": "Delete a config.", "scrapeId": "3d4d183f-0a4e-4411-b362-7e9de306923b", "sourceURL": "https://kubevela.io/docs/cli/vela_config_delete", "url": "https://kubevela.io/docs/cli/vela_config_delete/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"Delete a config\"?\n\nAssistant: Here are some code examples:\n\n### Delete a config command\n```yaml\nvela config delete [flags]\n```\n\n### Options for delete command\n```yaml\n  -h, --help               help for delete\n  -n, --namespace string   specify the namespace of the config (default \"vela-system\")\n      --not-recall         means only deleting the config from the local and do not recall from targets.\n```\n\n### Options inherited from parent commands\n```yaml\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_config_delete", "title": "Delete a config", "description": "This page covers the command to delete a configuration in KubeVela.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 15:50:23", "type": "code_examples", "page_metadata": {"generator": "Docusaurus v2.4.3", "viewport": "width=device-width, initial-scale=1.0", "twitter:card": "summary_large_image", "og:url": "https://kubevela.io/docs/cli/vela_config_delete/", "ogTitle": "vela config delete | KubeVela", "ogUrl": "https://kubevela.io/docs/cli/vela_config_delete/", "docsearch:language": "en", "docusaurus_version": "v1.10", "theme-color": "#ffffff", "ogDescription": "Delete a config.", "language": "en", "docsearch:docusaurus_tag": "docs-default-v1.10", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_locale": "en", "docusaurus_tag": "docs-default-v1.10", "og:title": "vela config delete | KubeVela", "msapplication-config": "/img/favicons/browserconfig.xml", "description": "Delete a config.", "title": "vela config delete | KubeVela", "docsearch:version": "v1.10", "og:description": "Delete a config.", "scrapeId": "3d4d183f-0a4e-4411-b362-7e9de306923b", "sourceURL": "https://kubevela.io/docs/cli/vela_config_delete", "url": "https://kubevela.io/docs/cli/vela_config_delete/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"Delete a config\"?\n\nAssistant: Here are the recommended best practices:\n\n• Use the -n flag to specify the namespace if it's different from the default 'vela-system'.\n• Consider using --not-recall if you only want to delete the config locally without affecting targets.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_config_delete", "title": "Delete a config", "description": "This page covers the command to delete a configuration in KubeVela.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 15:50:23", "type": "best_practices", "page_metadata": {"generator": "Docusaurus v2.4.3", "viewport": "width=device-width, initial-scale=1.0", "twitter:card": "summary_large_image", "og:url": "https://kubevela.io/docs/cli/vela_config_delete/", "ogTitle": "vela config delete | KubeVela", "ogUrl": "https://kubevela.io/docs/cli/vela_config_delete/", "docsearch:language": "en", "docusaurus_version": "v1.10", "theme-color": "#ffffff", "ogDescription": "Delete a config.", "language": "en", "docsearch:docusaurus_tag": "docs-default-v1.10", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_locale": "en", "docusaurus_tag": "docs-default-v1.10", "og:title": "vela config delete | KubeVela", "msapplication-config": "/img/favicons/browserconfig.xml", "description": "Delete a config.", "title": "vela config delete | KubeVela", "docsearch:version": "v1.10", "og:description": "Delete a config.", "scrapeId": "3d4d183f-0a4e-4411-b362-7e9de306923b", "sourceURL": "https://kubevela.io/docs/cli/vela_config_delete", "url": "https://kubevela.io/docs/cli/vela_config_delete/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"Vela Workflow Suspend\"?\n\nAssistant: Suspend a workflow in cluster.\n\nHere's a detailed explanation:\n\n\n## Synopsis\nSuspend a workflow in cluster.\n\n## Examples\n```bash\nvela workflow suspend <workflow-name>\n```\n\n## Options\n```bash\n  -e, --env string         specify environment name for application\n  -h, --help               help for suspend\n  -n, --namespace string   specify the Kubernetes namespace to use\n  -s, --step string        specify the step name in the workflow\n  -t, --type string        the type of the resource, support: [app, workflow]\n```\n\n## Options inherited from parent commands\n```bash\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n\n## SEE ALSO\n- [vela workflow](https://kubevela.io/docs/cli/vela_workflow/) \\- Operate application delivery workflow.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_workflow_suspend", "title": "Vela Workflow Suspend", "description": "Suspend a workflow in cluster.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:50:36", "type": "overview", "page_metadata": {"favicon": "https://kubevela.io/img/favicons/favicon.ico", "language": "en", "title": "vela workflow suspend | KubeVela", "viewport": "width=device-width, initial-scale=1.0", "ogUrl": "https://kubevela.io/docs/cli/vela_workflow_suspend/", "ogTitle": "vela workflow suspend | KubeVela", "generator": "Docusaurus v2.4.3", "docusaurus_version": "v1.10", "docsearch:version": "v1.10", "theme-color": "#ffffff", "msapplication-config": "/img/favicons/browserconfig.xml", "ogDescription": "Suspend a workflow.", "og:title": "vela workflow suspend | KubeVela", "twitter:card": "summary_large_image", "og:url": "https://kubevela.io/docs/cli/vela_workflow_suspend/", "docusaurus_tag": "docs-default-v1.10", "docsearch:docusaurus_tag": "docs-default-v1.10", "description": "Suspend a workflow.", "docusaurus_locale": "en", "docsearch:language": "en", "og:description": "Suspend a workflow.", "scrapeId": "b82c002c-f857-4233-8c3e-1183e8df5719", "sourceURL": "https://kubevela.io/docs/cli/vela_workflow_suspend", "url": "https://kubevela.io/docs/cli/vela_workflow_suspend/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"Vela Workflow Suspend\"?\n\nAssistant: Here are some code examples:\n\n### Suspend a workflow\n```yaml\n```bash\nvela workflow suspend <workflow-name>\n```\n```\n\n### Options for suspend command\n```yaml\n```bash\n  -e, --env string         specify environment name for application\n  -h, --help               help for suspend\n  -n, --namespace string   specify the Kubernetes namespace to use\n  -s, --step string        specify the step name in the workflow\n  -t, --type string        the type of the resource, support: [app, workflow]\n```\n```\n\n### Options inherited from parent commands\n```yaml\n```bash\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_workflow_suspend", "title": "Vela Workflow Suspend", "description": "Suspend a workflow in cluster.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:50:36", "type": "code_examples", "page_metadata": {"favicon": "https://kubevela.io/img/favicons/favicon.ico", "language": "en", "title": "vela workflow suspend | KubeVela", "viewport": "width=device-width, initial-scale=1.0", "ogUrl": "https://kubevela.io/docs/cli/vela_workflow_suspend/", "ogTitle": "vela workflow suspend | KubeVela", "generator": "Docusaurus v2.4.3", "docusaurus_version": "v1.10", "docsearch:version": "v1.10", "theme-color": "#ffffff", "msapplication-config": "/img/favicons/browserconfig.xml", "ogDescription": "Suspend a workflow.", "og:title": "vela workflow suspend | KubeVela", "twitter:card": "summary_large_image", "og:url": "https://kubevela.io/docs/cli/vela_workflow_suspend/", "docusaurus_tag": "docs-default-v1.10", "docsearch:docusaurus_tag": "docs-default-v1.10", "description": "Suspend a workflow.", "docusaurus_locale": "en", "docsearch:language": "en", "og:description": "Suspend a workflow.", "scrapeId": "b82c002c-f857-4233-8c3e-1183e8df5719", "sourceURL": "https://kubevela.io/docs/cli/vela_workflow_suspend", "url": "https://kubevela.io/docs/cli/vela_workflow_suspend/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"Vela Workflow Suspend\"?\n\nAssistant: Here are the recommended best practices:\n\n• If you like KubeVela, give it a star on GitHub!\n• Check the release notes for the latest updates.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_workflow_suspend", "title": "Vela Workflow Suspend", "description": "Suspend a workflow in cluster.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:50:36", "type": "best_practices", "page_metadata": {"favicon": "https://kubevela.io/img/favicons/favicon.ico", "language": "en", "title": "vela workflow suspend | KubeVela", "viewport": "width=device-width, initial-scale=1.0", "ogUrl": "https://kubevela.io/docs/cli/vela_workflow_suspend/", "ogTitle": "vela workflow suspend | KubeVela", "generator": "Docusaurus v2.4.3", "docusaurus_version": "v1.10", "docsearch:version": "v1.10", "theme-color": "#ffffff", "msapplication-config": "/img/favicons/browserconfig.xml", "ogDescription": "Suspend a workflow.", "og:title": "vela workflow suspend | KubeVela", "twitter:card": "summary_large_image", "og:url": "https://kubevela.io/docs/cli/vela_workflow_suspend/", "docusaurus_tag": "docs-default-v1.10", "docsearch:docusaurus_tag": "docs-default-v1.10", "description": "Suspend a workflow.", "docusaurus_locale": "en", "docsearch:language": "en", "og:description": "Suspend a workflow.", "scrapeId": "b82c002c-f857-4233-8c3e-1183e8df5719", "sourceURL": "https://kubevela.io/docs/cli/vela_workflow_suspend", "url": "https://kubevela.io/docs/cli/vela_workflow_suspend/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela CLI: vela addon init\"?\n\nAssistant: Create an addon scaffold for quick starting.\n\nHere's a detailed explanation:\n\n\n## Synopsis\nCreate an addon scaffold for quick starting.\n\n## Examples\nStore the scaffold in a different directory:\n    vela addon init mongodb -p path/to/addon\n\nAdd a Helm component:\n    vela addon init mongodb --helm-repo https://marketplace.azurecr.io/helm/v1/repo --chart mongodb --chart-version 12.1.16\n\nAdd resources from URL using ref-objects component\n    vela addon init my-addon --url https://domain.com/resource.yaml\n\nUse --no-samples options to skip creating sample files\n    vela addon init my-addon --no-sample\n\nYou can combine all the options together.\n\n## Options\n--chart string           Helm Chart name\n--chart-version string   version of the Chart\n-f, --force                  overwrite existing addon files\n--helm-repo string       URL that points to a Helm repo\n-h, --help                   help for init\n--no-samples             do not generate sample files\n-p, --path string            path to the addon directory (default is ./<addon-name>)\n-u, --url stringArray        add URL resources using ref-object component\n\n## Options inherited from parent commands\n-V, --verbosity Level   number for the log level verbosity\n-y, --yes               Assume yes for all user prompts\n\n## SEE ALSO\n- [vela addon](https://kubevela.io/docs/cli/vela_addon/) - Manage addons for extension.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_addon_init", "title": "KubeVela CLI: vela addon init", "description": "Create an addon scaffold for quick starting.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:50:45", "type": "overview", "page_metadata": {"generator": "Docusaurus v2.4.3", "og:title": "vela addon init | KubeVela", "twitter:card": "summary_large_image", "ogDescription": "create an addon scaffold", "docsearch:language": "en", "docusaurus_tag": "docs-default-v1.10", "description": "create an addon scaffold", "language": "en", "docusaurus_locale": "en", "og:description": "create an addon scaffold", "theme-color": "#ffffff", "title": "vela addon init | KubeVela", "docsearch:version": "v1.10", "docsearch:docusaurus_tag": "docs-default-v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "ogUrl": "https://kubevela.io/docs/cli/vela_addon_init/", "og:url": "https://kubevela.io/docs/cli/vela_addon_init/", "ogTitle": "vela addon init | KubeVela", "viewport": "width=device-width, initial-scale=1.0", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_version": "v1.10", "scrapeId": "485f7c22-21bd-4eb0-9f3b-7ecb1f31c38b", "sourceURL": "https://kubevela.io/docs/cli/vela_addon_init", "url": "https://kubevela.io/docs/cli/vela_addon_init/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"KubeVela CLI: vela addon init\"?\n\nAssistant: Here are some code examples:\n\n### Command to create an addon scaffold\n```yaml\nvela addon init [flags]\n```\n\n### Example command to store scaffold in a different directory\n```yaml\nvela addon init mongodb -p path/to/addon\n```\n\n### Example command to add a Helm component\n```yaml\nvela addon init mongodb --helm-repo https://marketplace.azurecr.io/helm/v1/repo --chart mongodb --chart-version 12.1.16\n```\n\n### Example command to add resources from URL\n```yaml\nvela addon init my-addon --url https://domain.com/resource.yaml\n```\n\n### Example command to skip creating sample files\n```yaml\nvela addon init my-addon --no-sample\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_addon_init", "title": "KubeVela CLI: vela addon init", "description": "Create an addon scaffold for quick starting.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:50:45", "type": "code_examples", "page_metadata": {"generator": "Docusaurus v2.4.3", "og:title": "vela addon init | KubeVela", "twitter:card": "summary_large_image", "ogDescription": "create an addon scaffold", "docsearch:language": "en", "docusaurus_tag": "docs-default-v1.10", "description": "create an addon scaffold", "language": "en", "docusaurus_locale": "en", "og:description": "create an addon scaffold", "theme-color": "#ffffff", "title": "vela addon init | KubeVela", "docsearch:version": "v1.10", "docsearch:docusaurus_tag": "docs-default-v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "ogUrl": "https://kubevela.io/docs/cli/vela_addon_init/", "og:url": "https://kubevela.io/docs/cli/vela_addon_init/", "ogTitle": "vela addon init | KubeVela", "viewport": "width=device-width, initial-scale=1.0", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_version": "v1.10", "scrapeId": "485f7c22-21bd-4eb0-9f3b-7ecb1f31c38b", "sourceURL": "https://kubevela.io/docs/cli/vela_addon_init", "url": "https://kubevela.io/docs/cli/vela_addon_init/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela CLI: vela addon init\"?\n\nAssistant: Here are the recommended best practices:\n\n• You can combine all the options together.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_addon_init", "title": "KubeVela CLI: vela addon init", "description": "Create an addon scaffold for quick starting.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:50:45", "type": "best_practices", "page_metadata": {"generator": "Docusaurus v2.4.3", "og:title": "vela addon init | KubeVela", "twitter:card": "summary_large_image", "ogDescription": "create an addon scaffold", "docsearch:language": "en", "docusaurus_tag": "docs-default-v1.10", "description": "create an addon scaffold", "language": "en", "docusaurus_locale": "en", "og:description": "create an addon scaffold", "theme-color": "#ffffff", "title": "vela addon init | KubeVela", "docsearch:version": "v1.10", "docsearch:docusaurus_tag": "docs-default-v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "ogUrl": "https://kubevela.io/docs/cli/vela_addon_init/", "og:url": "https://kubevela.io/docs/cli/vela_addon_init/", "ogTitle": "vela addon init | KubeVela", "viewport": "width=device-width, initial-scale=1.0", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_version": "v1.10", "scrapeId": "485f7c22-21bd-4eb0-9f3b-7ecb1f31c38b", "sourceURL": "https://kubevela.io/docs/cli/vela_addon_init", "url": "https://kubevela.io/docs/cli/vela_addon_init/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"Vela Completion Bash\"?\n\nAssistant: Generate the autocompletion script for Vela for the bash shell.\n\nHere's a detailed explanation:\n\n\n## Synopsis\nGenerate the autocompletion script for Vela for the bash shell.\n\nTo load completions in your current shell session:\n$ source \\<(vela completion bash)\n\nTo load completions for every new session, execute once:\nLinux:\n$ vela completion bash > /etc/bash_completion.d/vela\nMacOS:\n$ vela completion bash > /usr/local/etc/bash_completion.d/vela\n\n```codeBlockLines_e6Vv\nvela completion bash\n```\n\n## Options\n```codeBlockLines_e6Vv\n  -h, --help   help for bash\n```\n\n## Options inherited from parent commands\n```codeBlockLines_e6Vv\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n\n## SEE ALSO\n- [vela completion](https://kubevela.io/docs/cli/vela_completion/) \\- Output shell completion code for the specified shell (bash or zsh).\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_completion_bash", "title": "Vela Completion Bash", "description": "Generate the autocompletion script for Vela for the bash shell.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 15:50:52", "type": "overview", "page_metadata": {"og:url": "https://kubevela.io/docs/cli/vela_completion_bash/", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_locale": "en", "ogDescription": "generate autocompletions script for bash", "language": "en", "ogUrl": "https://kubevela.io/docs/cli/vela_completion_bash/", "twitter:card": "summary_large_image", "docusaurus_version": "v1.10", "docusaurus_tag": "docs-default-v1.10", "docsearch:version": "v1.10", "og:title": "vela completion bash | KubeVela", "theme-color": "#ffffff", "viewport": "width=device-width, initial-scale=1.0", "msapplication-config": "/img/favicons/browserconfig.xml", "docsearch:docusaurus_tag": "docs-default-v1.10", "description": "generate autocompletions script for bash", "docsearch:language": "en", "ogTitle": "vela completion bash | KubeVela", "generator": "Docusaurus v2.4.3", "title": "vela completion bash | KubeVela", "og:description": "generate autocompletions script for bash", "scrapeId": "27a92b8d-1d1f-48f2-8a1c-a30d65b0a6b5", "sourceURL": "https://kubevela.io/docs/cli/vela_completion_bash", "url": "https://kubevela.io/docs/cli/vela_completion_bash/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"Vela Completion Bash\"?\n\nAssistant: Here are some code examples:\n\n### Bash Completion Command\n```yaml\nvela completion bash\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_completion_bash", "title": "Vela Completion Bash", "description": "Generate the autocompletion script for Vela for the bash shell.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 15:50:52", "type": "code_examples", "page_metadata": {"og:url": "https://kubevela.io/docs/cli/vela_completion_bash/", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_locale": "en", "ogDescription": "generate autocompletions script for bash", "language": "en", "ogUrl": "https://kubevela.io/docs/cli/vela_completion_bash/", "twitter:card": "summary_large_image", "docusaurus_version": "v1.10", "docusaurus_tag": "docs-default-v1.10", "docsearch:version": "v1.10", "og:title": "vela completion bash | KubeVela", "theme-color": "#ffffff", "viewport": "width=device-width, initial-scale=1.0", "msapplication-config": "/img/favicons/browserconfig.xml", "docsearch:docusaurus_tag": "docs-default-v1.10", "description": "generate autocompletions script for bash", "docsearch:language": "en", "ogTitle": "vela completion bash | KubeVela", "generator": "Docusaurus v2.4.3", "title": "vela completion bash | KubeVela", "og:description": "generate autocompletions script for bash", "scrapeId": "27a92b8d-1d1f-48f2-8a1c-a30d65b0a6b5", "sourceURL": "https://kubevela.io/docs/cli/vela_completion_bash", "url": "https://kubevela.io/docs/cli/vela_completion_bash/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"Vela Completion Bash\"?\n\nAssistant: Here are the recommended best practices:\n\n• To load completions in your current shell session, use the command: $ source \\<(vela completion bash)\n• To load completions for every new session, execute once for Linux: $ vela completion bash > /etc/bash_completion.d/vela and for MacOS: $ vela completion bash > /usr/local/etc/bash_completion.d/vela.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_completion_bash", "title": "Vela Completion Bash", "description": "Generate the autocompletion script for Vela for the bash shell.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 15:50:52", "type": "best_practices", "page_metadata": {"og:url": "https://kubevela.io/docs/cli/vela_completion_bash/", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_locale": "en", "ogDescription": "generate autocompletions script for bash", "language": "en", "ogUrl": "https://kubevela.io/docs/cli/vela_completion_bash/", "twitter:card": "summary_large_image", "docusaurus_version": "v1.10", "docusaurus_tag": "docs-default-v1.10", "docsearch:version": "v1.10", "og:title": "vela completion bash | KubeVela", "theme-color": "#ffffff", "viewport": "width=device-width, initial-scale=1.0", "msapplication-config": "/img/favicons/browserconfig.xml", "docsearch:docusaurus_tag": "docs-default-v1.10", "description": "generate autocompletions script for bash", "docsearch:language": "en", "ogTitle": "vela completion bash | KubeVela", "generator": "Docusaurus v2.4.3", "title": "vela completion bash | KubeVela", "og:description": "generate autocompletions script for bash", "scrapeId": "27a92b8d-1d1f-48f2-8a1c-a30d65b0a6b5", "sourceURL": "https://kubevela.io/docs/cli/vela_completion_bash", "url": "https://kubevela.io/docs/cli/vela_completion_bash/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"vela def apply\"?\n\nAssistant: Apply X-Definition from local storage to kubernetes cluster. It will apply file to vela-system namespace by default.\n\nHere's a detailed explanation:\n\n\n## Synopsis\nApply X-Definition from local storage to kubernetes cluster. It will apply file to vela-system namespace by default.\n\n## Examples\n# Command below will apply the local my-webservice.cue file to kubernetes vela-system namespace\n> vela def apply my-webservice.cue\n# Apply the local directory including all files(YAML and CUE definition) to kubernetes vela-system namespace\n> vela def apply def/\n# Command below will apply the ./defs/my-trait.cue file to kubernetes default namespace\n> vela def apply ./defs/my-trait.cue --namespace default\n# Command below will convert the ./defs/my-trait.cue file to kubernetes CRD object and print it without applying it to kubernetes\n> vela def apply ./defs/my-trait.cue --dry-run\n# Apply a CUE from URL\n> vela def apply https://my-host-to-def/my-trait.cue --dry-run\n# Apply a CUE from stdin\n> vela def apply -\n\n## Options\n--dry-run            only build definition from CUE into CRB object without applying it to kubernetes clusters\n-h, --help               help for apply\n-n, --namespace string   Specify which namespace the definition locates. (default \"vela-system\")\n\n## Options inherited from parent commands\n-V, --verbosity Level   number for the log level verbosity\n-y, --yes               Assume yes for all user prompts\n\n## SEE ALSO\n- [vela def](https://kubevela.io/docs/cli/vela_def/) \\- Manage definitions.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_def_apply", "title": "vela def apply", "description": "Apply X-Definition from local storage to kubernetes cluster. It will apply file to vela-system namespace by default.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:51:02", "type": "overview", "page_metadata": {"og:description": "Apply X-Definition.", "msapplication-config": "/img/favicons/browserconfig.xml", "ogDescription": "Apply X-Definition.", "viewport": "width=device-width, initial-scale=1.0", "generator": "Docusaurus v2.4.3", "og:title": "vela def apply | KubeVela", "theme-color": "#ffffff", "docsearch:docusaurus_tag": "docs-default-v1.10", "docusaurus_locale": "en", "ogUrl": "https://kubevela.io/docs/cli/vela_def_apply/", "docsearch:language": "en", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docsearch:version": "v1.10", "docusaurus_tag": "docs-default-v1.10", "docusaurus_version": "v1.10", "description": "Apply X-Definition.", "ogTitle": "vela def apply | KubeVela", "title": "vela def apply | KubeVela", "language": "en", "twitter:card": "summary_large_image", "og:url": "https://kubevela.io/docs/cli/vela_def_apply/", "scrapeId": "391ec90f-eb25-422c-a024-c27a607d8642", "sourceURL": "https://kubevela.io/docs/cli/vela_def_apply", "url": "https://kubevela.io/docs/cli/vela_def_apply/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"vela def apply\"?\n\nAssistant: Here are some code examples:\n\n### Command Examples\n```yaml\n# Command below will apply the local my-webservice.cue file to kubernetes vela-system namespace\n> vela def apply my-webservice.cue\n# Apply the local directory including all files(YAML and CUE definition) to kubernetes vela-system namespace\n> vela def apply def/\n# Command below will apply the ./defs/my-trait.cue file to kubernetes default namespace\n> vela def apply ./defs/my-trait.cue --namespace default\n# Command below will convert the ./defs/my-trait.cue file to kubernetes CRD object and print it without applying it to kubernetes\n> vela def apply ./defs/my-trait.cue --dry-run\n# Apply a CUE from URL\n> vela def apply https://my-host-to-def/my-trait.cue --dry-run\n# Apply a CUE from stdin\n> vela def apply -\n```\n\n### Options\n```yaml\n--dry-run            only build definition from CUE into CRB object without applying it to kubernetes clusters\n-h, --help               help for apply\n-n, --namespace string   Specify which namespace the definition locates. (default \"vela-system\")\n```\n\n### Options inherited from parent commands\n```yaml\n-V, --verbosity Level   number for the log level verbosity\n-y, --yes               Assume yes for all user prompts\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_def_apply", "title": "vela def apply", "description": "Apply X-Definition from local storage to kubernetes cluster. It will apply file to vela-system namespace by default.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:51:02", "type": "code_examples", "page_metadata": {"og:description": "Apply X-Definition.", "msapplication-config": "/img/favicons/browserconfig.xml", "ogDescription": "Apply X-Definition.", "viewport": "width=device-width, initial-scale=1.0", "generator": "Docusaurus v2.4.3", "og:title": "vela def apply | KubeVela", "theme-color": "#ffffff", "docsearch:docusaurus_tag": "docs-default-v1.10", "docusaurus_locale": "en", "ogUrl": "https://kubevela.io/docs/cli/vela_def_apply/", "docsearch:language": "en", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docsearch:version": "v1.10", "docusaurus_tag": "docs-default-v1.10", "docusaurus_version": "v1.10", "description": "Apply X-Definition.", "ogTitle": "vela def apply | KubeVela", "title": "vela def apply | KubeVela", "language": "en", "twitter:card": "summary_large_image", "og:url": "https://kubevela.io/docs/cli/vela_def_apply/", "scrapeId": "391ec90f-eb25-422c-a024-c27a607d8642", "sourceURL": "https://kubevela.io/docs/cli/vela_def_apply", "url": "https://kubevela.io/docs/cli/vela_def_apply/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"vela def apply\"?\n\nAssistant: Here are the recommended best practices:\n\n• Use the --dry-run option to test your commands without making changes to the cluster.\n• Always specify the namespace if you are not using the default 'vela-system'.\n• Consider applying definitions from a local directory to manage multiple files efficiently.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_def_apply", "title": "vela def apply", "description": "Apply X-Definition from local storage to kubernetes cluster. It will apply file to vela-system namespace by default.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:51:02", "type": "best_practices", "page_metadata": {"og:description": "Apply X-Definition.", "msapplication-config": "/img/favicons/browserconfig.xml", "ogDescription": "Apply X-Definition.", "viewport": "width=device-width, initial-scale=1.0", "generator": "Docusaurus v2.4.3", "og:title": "vela def apply | KubeVela", "theme-color": "#ffffff", "docsearch:docusaurus_tag": "docs-default-v1.10", "docusaurus_locale": "en", "ogUrl": "https://kubevela.io/docs/cli/vela_def_apply/", "docsearch:language": "en", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docsearch:version": "v1.10", "docusaurus_tag": "docs-default-v1.10", "docusaurus_version": "v1.10", "description": "Apply X-Definition.", "ogTitle": "vela def apply | KubeVela", "title": "vela def apply | KubeVela", "language": "en", "twitter:card": "summary_large_image", "og:url": "https://kubevela.io/docs/cli/vela_def_apply/", "scrapeId": "391ec90f-eb25-422c-a024-c27a607d8642", "sourceURL": "https://kubevela.io/docs/cli/vela_def_apply", "url": "https://kubevela.io/docs/cli/vela_def_apply/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela S2I Tutorial\"?\n\nAssistant: This page introduces how to orchestrate image build, image push and application delivery in KubeVela.\n\nHere's a detailed explanation:\n\n\n## Overview\nFrom code to application, one of the indispensable step is to build image. This section will introduce how to orchestrate image build, image push and application delivery in KubeVela.\n\n## How to use\n### Use standalone workflow\nKubeVela introduced standalone workflow in version v1.6 that can be used independently, which can be used to orchestrate the process between CI steps and application delivery. Different from the workflow in the KubeVela application, it is one-time and does not manage resources. Even if the workflow is deleted, the created resources will not be deleted.\n\n**Tip:** Please make sure that you have enabled workflow addon with `vela addon enable vela-workflow`.\n\nApply the following workflow:\n\n```yaml\napiVersion: core.oam.dev/v1alpha1\nkind: WorkflowRun\nmetadata:\n  name: build-push-image\n  namespace: default\nspec:\n  context:\n    image: my-registry/test-image:v2\n  workflowSpec:\n   steps:\n    - name: create-git-secret\n      type: export2secret\n      properties:\n        secretName: git-secret\n        data:\n          token: <git token>\n    - name: create-image-secret\n      type: export2secret\n      properties:\n        secretName: image-secret\n        kind: docker-registry\n        dockerRegistry:\n          username: <username>\n          password: <password>\n    - name: build-push\n      type: build-push-image\n      inputs:\n        - from: context.image\n          parameterKey: image\n      properties:\n        context:\n          git: github.com/FogDong/simple-web-demo\n          branch: main\n        image: my-registry/test-image:v1\n        credentials:\n          image:\n            name: image-secret\n    - name: apply-app\n      type: apply-app\n      inputs:\n        - from: context.image\n          parameterKey: data.spec.components[0].properties.image\n      properties:\n        data:\n          apiVersion: core.oam.dev/v1beta1\n          kind: Application\n          metadata:\n            name: my-app\n          spec:\n            components:\n              - name: my-web\n                type: webservice\n                properties:\n                  image: my-registry/test-image:v1\n                  imagePullSecrets:\n                    - image-secret\n                  ports:\n                    - port: 80\n                      expose: true\n```\n\nThe workflow has four steps in total:\n\n1. Create a secret with Git token, which is used to pull the code from the private repository to build the image. If your repository is public, you can skip this step.\n2. Create a secret with the image registry token to push the image to your image registry.\n3. Use the `build-push-image` step type to build and push the image. This step will use the specified Git url and the code in its branch to build the image.\n4. In the last step, the image version in `context.image` will be used to publish the application. When the application starts, you can use `vela port-forward my-app 8080:80` to check the result.\n\nIf you configure the process in VelaUX's Pipeline, you can directly see the status and sequence of all steps on the page, including step logs, input and output, etc.\n\n## Use Application workflow\nYou can also directly build the image in the application, and use the newly built image in the component. Apply the following application:\n\n```yaml\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: build-push-image\n  namespace: default\nspec:\n  components:\n  - name: my-web\n    type: webservice\n    properties:\n      image: my-registry/test-image:v1\n      ports:\n        - port: 80\n          expose: true\n  workflow:\n    steps:\n    - name: build-push\n      type: build-push-image\n      properties:\n        context:\n          git: github.com/FogDong/simple-web-demo\n          branch: main\n        image: my-registry/test-image:v1\n        credentials:\n          image:\n            name: image-secret\n    - name: apply-comp\n      type: apply-component\n      properties:\n        component: my-web\n```\n\nIn the application above, the first step in the workflow will use the `build-push-image` step to build the image, and the second step will deploy the component with the newly built image.\n", "metadata": {"source_url": "https://kubevela.io/docs/tutorials/s2i", "title": "KubeVela S2I Tutorial", "description": "This page introduces how to orchestrate image build, image push and application delivery in KubeVela.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 15:51:20", "type": "overview", "page_metadata": {"docusaurus_tag": "docs-default-v1.10", "og:title": "Unified Declarative CI/CD | KubeVela", "docusaurus_locale": "en", "docusaurus_version": "v1.10", "ogUrl": "https://kubevela.io/docs/tutorials/s2i/", "title": "Unified Declarative CI/CD | KubeVela", "language": "en", "generator": "Docusaurus v2.4.3", "og:url": "https://kubevela.io/docs/tutorials/s2i/", "ogDescription": "Overview", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "description": "Overview", "og:description": "Overview", "docsearch:language": "en", "msapplication-config": "/img/favicons/browserconfig.xml", "docsearch:docusaurus_tag": "docs-default-v1.10", "twitter:card": "summary_large_image", "docsearch:version": "v1.10", "viewport": "width=device-width, initial-scale=1.0", "ogTitle": "Unified Declarative CI/CD | KubeVela", "theme-color": "#ffffff", "scrapeId": "a43b465b-bf41-49ec-aadb-6632a5af1e68", "sourceURL": "https://kubevela.io/docs/tutorials/s2i", "url": "https://kubevela.io/docs/tutorials/s2i/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"KubeVela S2I Tutorial\"?\n\nAssistant: Here are some code examples:\n\n### Standalone Workflow Example\n```yaml\napiVersion: core.oam.dev/v1alpha1\nkind: WorkflowRun\nmetadata:\n  name: build-push-image\n  namespace: default\nspec:\n  context:\n    image: my-registry/test-image:v2\n  workflowSpec:\n   steps:\n    - name: create-git-secret\n      type: export2secret\n      properties:\n        secretName: git-secret\n        data:\n          token: <git token>\n    - name: create-image-secret\n      type: export2secret\n      properties:\n        secretName: image-secret\n        kind: docker-registry\n        dockerRegistry:\n          username: <username>\n          password: <password>\n    - name: build-push\n      type: build-push-image\n      inputs:\n        - from: context.image\n          parameterKey: image\n      properties:\n        context:\n          git: github.com/FogDong/simple-web-demo\n          branch: main\n        image: my-registry/test-image:v1\n        credentials:\n          image:\n            name: image-secret\n    - name: apply-app\n      type: apply-app\n      inputs:\n        - from: context.image\n          parameterKey: data.spec.components[0].properties.image\n      properties:\n        data:\n          apiVersion: core.oam.dev/v1beta1\n          kind: Application\n          metadata:\n            name: my-app\n          spec:\n            components:\n              - name: my-web\n                type: webservice\n                properties:\n                  image: my-registry/test-image:v1\n                  imagePullSecrets:\n                    - image-secret\n                  ports:\n                    - port: 80\n                      expose: true\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/tutorials/s2i", "title": "KubeVela S2I Tutorial", "description": "This page introduces how to orchestrate image build, image push and application delivery in KubeVela.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 15:51:20", "type": "code_examples", "page_metadata": {"docusaurus_tag": "docs-default-v1.10", "og:title": "Unified Declarative CI/CD | KubeVela", "docusaurus_locale": "en", "docusaurus_version": "v1.10", "ogUrl": "https://kubevela.io/docs/tutorials/s2i/", "title": "Unified Declarative CI/CD | KubeVela", "language": "en", "generator": "Docusaurus v2.4.3", "og:url": "https://kubevela.io/docs/tutorials/s2i/", "ogDescription": "Overview", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "description": "Overview", "og:description": "Overview", "docsearch:language": "en", "msapplication-config": "/img/favicons/browserconfig.xml", "docsearch:docusaurus_tag": "docs-default-v1.10", "twitter:card": "summary_large_image", "docsearch:version": "v1.10", "viewport": "width=device-width, initial-scale=1.0", "ogTitle": "Unified Declarative CI/CD | KubeVela", "theme-color": "#ffffff", "scrapeId": "a43b465b-bf41-49ec-aadb-6632a5af1e68", "sourceURL": "https://kubevela.io/docs/tutorials/s2i", "url": "https://kubevela.io/docs/tutorials/s2i/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela S2I Tutorial\"?\n\nAssistant: Here are the recommended best practices:\n\n• Make sure that you have enabled workflow addon with `vela addon enable vela-workflow`.\n• If your repository is public, you can skip the step of creating a Git secret.\n• You can skip the step of creating an image secret if you use the provided `kubectl` command.\n", "metadata": {"source_url": "https://kubevela.io/docs/tutorials/s2i", "title": "KubeVela S2I Tutorial", "description": "This page introduces how to orchestrate image build, image push and application delivery in KubeVela.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 15:51:20", "type": "best_practices", "page_metadata": {"docusaurus_tag": "docs-default-v1.10", "og:title": "Unified Declarative CI/CD | KubeVela", "docusaurus_locale": "en", "docusaurus_version": "v1.10", "ogUrl": "https://kubevela.io/docs/tutorials/s2i/", "title": "Unified Declarative CI/CD | KubeVela", "language": "en", "generator": "Docusaurus v2.4.3", "og:url": "https://kubevela.io/docs/tutorials/s2i/", "ogDescription": "Overview", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "description": "Overview", "og:description": "Overview", "docsearch:language": "en", "msapplication-config": "/img/favicons/browserconfig.xml", "docsearch:docusaurus_tag": "docs-default-v1.10", "twitter:card": "summary_large_image", "docsearch:version": "v1.10", "viewport": "width=device-width, initial-scale=1.0", "ogTitle": "Unified Declarative CI/CD | KubeVela", "theme-color": "#ffffff", "scrapeId": "a43b465b-bf41-49ec-aadb-6632a5af1e68", "sourceURL": "https://kubevela.io/docs/tutorials/s2i", "url": "https://kubevela.io/docs/tutorials/s2i/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela CLI Version List\"?\n\nAssistant: This page provides information on how to list all available versions of KubeVela using the CLI.\n\nHere's a detailed explanation:\n\n\n## List all available versions\nQuery all available versions from remote server.\n\n## Synopsis\n`vela version list [flags]`\n\n## Options\n```\n  -a, --all    List all available versions, if not, only list newer version\n  -h, --help   help for list\n```\n\n## Options inherited from parent commands\n```\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n\n## SEE ALSO\n- [vela version](https://kubevela.io/docs/cli/vela_version/) - Prints vela build version information.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_version_list", "title": "KubeVela CLI Version List", "description": "This page provides information on how to list all available versions of KubeVela using the CLI.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:51:27", "type": "overview", "page_metadata": {"docusaurus_tag": "docs-default-v1.10", "docsearch:version": "v1.10", "title": "vela version list | KubeVela", "theme-color": "#ffffff", "msapplication-config": "/img/favicons/browserconfig.xml", "viewport": "width=device-width, initial-scale=1.0", "language": "en", "twitter:card": "summary_large_image", "og:url": "https://kubevela.io/docs/cli/vela_version_list/", "generator": "Docusaurus v2.4.3", "docsearch:docusaurus_tag": "docs-default-v1.10", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogUrl": "https://kubevela.io/docs/cli/vela_version_list/", "ogDescription": "List all available versions", "ogTitle": "vela version list | KubeVela", "docsearch:language": "en", "og:title": "vela version list | KubeVela", "docusaurus_locale": "en", "description": "List all available versions", "og:description": "List all available versions", "docusaurus_version": "v1.10", "scrapeId": "b4c4b464-40e1-4ed3-b672-6f360f1465fc", "sourceURL": "https://kubevela.io/docs/cli/vela_version_list", "url": "https://kubevela.io/docs/cli/vela_version_list/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"KubeVela CLI Version List\"?\n\nAssistant: Here are some code examples:\n\n### Command to list versions\n```yaml\nvela version list [flags]\n```\n\n### Options for listing versions\n```yaml\n  -a, --all    List all available versions, if not, only list newer version\n  -h, --help   help for list\n```\n\n### Inherited options\n```yaml\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_version_list", "title": "KubeVela CLI Version List", "description": "This page provides information on how to list all available versions of KubeVela using the CLI.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:51:27", "type": "code_examples", "page_metadata": {"docusaurus_tag": "docs-default-v1.10", "docsearch:version": "v1.10", "title": "vela version list | KubeVela", "theme-color": "#ffffff", "msapplication-config": "/img/favicons/browserconfig.xml", "viewport": "width=device-width, initial-scale=1.0", "language": "en", "twitter:card": "summary_large_image", "og:url": "https://kubevela.io/docs/cli/vela_version_list/", "generator": "Docusaurus v2.4.3", "docsearch:docusaurus_tag": "docs-default-v1.10", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogUrl": "https://kubevela.io/docs/cli/vela_version_list/", "ogDescription": "List all available versions", "ogTitle": "vela version list | KubeVela", "docsearch:language": "en", "og:title": "vela version list | KubeVela", "docusaurus_locale": "en", "description": "List all available versions", "og:description": "List all available versions", "docusaurus_version": "v1.10", "scrapeId": "b4c4b464-40e1-4ed3-b672-6f360f1465fc", "sourceURL": "https://kubevela.io/docs/cli/vela_version_list", "url": "https://kubevela.io/docs/cli/vela_version_list/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela CLI Version List\"?\n\nAssistant: Here are the recommended best practices:\n\n• If you like KubeVela, give it a star on GitHub!\n• Check the release notes for the latest version updates.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_version_list", "title": "KubeVela CLI Version List", "description": "This page provides information on how to list all available versions of KubeVela using the CLI.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:51:27", "type": "best_practices", "page_metadata": {"docusaurus_tag": "docs-default-v1.10", "docsearch:version": "v1.10", "title": "vela version list | KubeVela", "theme-color": "#ffffff", "msapplication-config": "/img/favicons/browserconfig.xml", "viewport": "width=device-width, initial-scale=1.0", "language": "en", "twitter:card": "summary_large_image", "og:url": "https://kubevela.io/docs/cli/vela_version_list/", "generator": "Docusaurus v2.4.3", "docsearch:docusaurus_tag": "docs-default-v1.10", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogUrl": "https://kubevela.io/docs/cli/vela_version_list/", "ogDescription": "List all available versions", "ogTitle": "vela version list | KubeVela", "docsearch:language": "en", "og:title": "vela version list | KubeVela", "docusaurus_locale": "en", "description": "List all available versions", "og:description": "List all available versions", "docusaurus_version": "v1.10", "scrapeId": "b4c4b464-40e1-4ed3-b672-6f360f1465fc", "sourceURL": "https://kubevela.io/docs/cli/vela_version_list", "url": "https://kubevela.io/docs/cli/vela_version_list/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"vela registry remove\"?\n\nAssistant: Remove specified registry\n\nHere's a detailed explanation:\n\n\n## Synopsis\nRemove specified registry\n\n## Examples\n```bash\nvela registry remove mycenter\n```\n\n## Options\n```bash\n  -h, --help   help for remove\n```\n\n## Options inherited from parent commands\n```bash\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n\n## SEE ALSO\n- [vela registry](https://kubevela.io/docs/cli/vela_registry/) \\- Manage Registry\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_registry_remove", "title": "vela registry remove", "description": "Remove specified registry", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:51:40", "type": "overview", "page_metadata": {"og:url": "https://kubevela.io/docs/cli/vela_registry_remove/", "docsearch:docusaurus_tag": "docs-default-v1.10", "generator": "Docusaurus v2.4.3", "docsearch:language": "en", "theme-color": "#ffffff", "og:title": "vela registry remove | KubeVela", "viewport": "width=device-width, initial-scale=1.0", "docusaurus_version": "v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "og:description": "Remove specified registry", "ogUrl": "https://kubevela.io/docs/cli/vela_registry_remove/", "language": "en", "title": "vela registry remove | KubeVela", "docusaurus_tag": "docs-default-v1.10", "docsearch:version": "v1.10", "description": "Remove specified registry", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_locale": "en", "ogTitle": "vela registry remove | KubeVela", "ogDescription": "Remove specified registry", "twitter:card": "summary_large_image", "scrapeId": "c1471a1e-8781-4506-8080-cc2ab021887a", "sourceURL": "https://kubevela.io/docs/cli/vela_registry_remove", "url": "https://kubevela.io/docs/cli/vela_registry_remove/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"vela registry remove\"?\n\nAssistant: Here are some code examples:\n\n### Command to remove a registry\n```yaml\nvela registry remove mycenter\n```\n\n### Help option\n```yaml\n  -h, --help   help for remove\n```\n\n### Verbosity option\n```yaml\n  -V, --verbosity Level   number for the log level verbosity\n```\n\n### Assume yes option\n```yaml\n  -y, --yes               Assume yes for all user prompts\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_registry_remove", "title": "vela registry remove", "description": "Remove specified registry", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:51:40", "type": "code_examples", "page_metadata": {"og:url": "https://kubevela.io/docs/cli/vela_registry_remove/", "docsearch:docusaurus_tag": "docs-default-v1.10", "generator": "Docusaurus v2.4.3", "docsearch:language": "en", "theme-color": "#ffffff", "og:title": "vela registry remove | KubeVela", "viewport": "width=device-width, initial-scale=1.0", "docusaurus_version": "v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "og:description": "Remove specified registry", "ogUrl": "https://kubevela.io/docs/cli/vela_registry_remove/", "language": "en", "title": "vela registry remove | KubeVela", "docusaurus_tag": "docs-default-v1.10", "docsearch:version": "v1.10", "description": "Remove specified registry", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_locale": "en", "ogTitle": "vela registry remove | KubeVela", "ogDescription": "Remove specified registry", "twitter:card": "summary_large_image", "scrapeId": "c1471a1e-8781-4506-8080-cc2ab021887a", "sourceURL": "https://kubevela.io/docs/cli/vela_registry_remove", "url": "https://kubevela.io/docs/cli/vela_registry_remove/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"vela registry remove\"?\n\nAssistant: Here are the recommended best practices:\n\n• If you like KubeVela, give it a star on GitHub!\n• Always check the options available for commands to ensure proper usage.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_registry_remove", "title": "vela registry remove", "description": "Remove specified registry", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:51:40", "type": "best_practices", "page_metadata": {"og:url": "https://kubevela.io/docs/cli/vela_registry_remove/", "docsearch:docusaurus_tag": "docs-default-v1.10", "generator": "Docusaurus v2.4.3", "docsearch:language": "en", "theme-color": "#ffffff", "og:title": "vela registry remove | KubeVela", "viewport": "width=device-width, initial-scale=1.0", "docusaurus_version": "v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "og:description": "Remove specified registry", "ogUrl": "https://kubevela.io/docs/cli/vela_registry_remove/", "language": "en", "title": "vela registry remove | KubeVela", "docusaurus_tag": "docs-default-v1.10", "docsearch:version": "v1.10", "description": "Remove specified registry", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_locale": "en", "ogTitle": "vela registry remove | KubeVela", "ogDescription": "Remove specified registry", "twitter:card": "summary_large_image", "scrapeId": "c1471a1e-8781-4506-8080-cc2ab021887a", "sourceURL": "https://kubevela.io/docs/cli/vela_registry_remove", "url": "https://kubevela.io/docs/cli/vela_registry_remove/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"vela revision get\"?\n\nAssistant: get specific revision of application\n\nHere's a detailed explanation:\n\n\n## Synopsis\nget specific revision of application\n\n## Options\n  -d, --definition string   component definition\n  -e, --env string          specify environment name for application\n  -h, --help                help for get\n  -n, --namespace string    specify the Kubernetes namespace to use\n  -o, --output string       raw Application output format. One of: (json, yaml, jsonpath)\n\n## Options inherited from parent commands\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n\n## SEE ALSO\n- [vela revision](https://kubevela.io/docs/cli/vela_revision/) \\- Manage Application Revisions.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_revision_get", "title": "vela revision get", "description": "get specific revision of application", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 15:51:47", "type": "overview", "page_metadata": {"theme-color": "#ffffff", "title": "vela revision get | KubeVela", "msapplication-config": "/img/favicons/browserconfig.xml", "viewport": "width=device-width, initial-scale=1.0", "og:description": "get specific revision of application", "docsearch:version": "v1.10", "docusaurus_version": "v1.10", "ogUrl": "https://kubevela.io/docs/cli/vela_revision_get/", "docusaurus_tag": "docs-default-v1.10", "description": "get specific revision of application", "docsearch:language": "en", "ogTitle": "vela revision get | KubeVela", "language": "en", "generator": "Docusaurus v2.4.3", "ogDescription": "get specific revision of application", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "twitter:card": "summary_large_image", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:title": "vela revision get | KubeVela", "docusaurus_locale": "en", "og:url": "https://kubevela.io/docs/cli/vela_revision_get/", "scrapeId": "296b76d3-80bb-466c-9fde-b2d124129858", "sourceURL": "https://kubevela.io/docs/cli/vela_revision_get", "url": "https://kubevela.io/docs/cli/vela_revision_get/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"vela revision get\"?\n\nAssistant: Here are some code examples:\n\n### Command Example\n```yaml\nvela revision get [flags]\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_revision_get", "title": "vela revision get", "description": "get specific revision of application", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 15:51:47", "type": "code_examples", "page_metadata": {"theme-color": "#ffffff", "title": "vela revision get | KubeVela", "msapplication-config": "/img/favicons/browserconfig.xml", "viewport": "width=device-width, initial-scale=1.0", "og:description": "get specific revision of application", "docsearch:version": "v1.10", "docusaurus_version": "v1.10", "ogUrl": "https://kubevela.io/docs/cli/vela_revision_get/", "docusaurus_tag": "docs-default-v1.10", "description": "get specific revision of application", "docsearch:language": "en", "ogTitle": "vela revision get | KubeVela", "language": "en", "generator": "Docusaurus v2.4.3", "ogDescription": "get specific revision of application", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "twitter:card": "summary_large_image", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:title": "vela revision get | KubeVela", "docusaurus_locale": "en", "og:url": "https://kubevela.io/docs/cli/vela_revision_get/", "scrapeId": "296b76d3-80bb-466c-9fde-b2d124129858", "sourceURL": "https://kubevela.io/docs/cli/vela_revision_get", "url": "https://kubevela.io/docs/cli/vela_revision_get/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"vela revision get\"?\n\nAssistant: Here are the recommended best practices:\n\n• If you like KubeVela, give it a star on GitHub!\n• Read Release Note for the latest version updates.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_revision_get", "title": "vela revision get", "description": "get specific revision of application", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 15:51:47", "type": "best_practices", "page_metadata": {"theme-color": "#ffffff", "title": "vela revision get | KubeVela", "msapplication-config": "/img/favicons/browserconfig.xml", "viewport": "width=device-width, initial-scale=1.0", "og:description": "get specific revision of application", "docsearch:version": "v1.10", "docusaurus_version": "v1.10", "ogUrl": "https://kubevela.io/docs/cli/vela_revision_get/", "docusaurus_tag": "docs-default-v1.10", "description": "get specific revision of application", "docsearch:language": "en", "ogTitle": "vela revision get | KubeVela", "language": "en", "generator": "Docusaurus v2.4.3", "ogDescription": "get specific revision of application", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "twitter:card": "summary_large_image", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:title": "vela revision get | KubeVela", "docusaurus_locale": "en", "og:url": "https://kubevela.io/docs/cli/vela_revision_get/", "scrapeId": "296b76d3-80bb-466c-9fde-b2d124129858", "sourceURL": "https://kubevela.io/docs/cli/vela_revision_get", "url": "https://kubevela.io/docs/cli/vela_revision_get/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela CLI Documentation\"?\n\nAssistant: This page provides an overview of the KubeVela CLI commands and their usage for managing applications, extensions, and system tools.\n\nHere's a detailed explanation:\n\n\n## Getting Started\n- [vela init](https://kubevela.io/docs/cli/vela_init/) \\- Create scaffold for vela application.\n\n- [vela up](https://kubevela.io/docs/cli/vela_up/) \\- Deploy one application\n\nDeploy one application based on local files or re-deploy an existing application. With the -n/--namespace flag, you can choose the location of the target application.\n\nTo apply application from file, use the -f/--file flag to specify the application file location.\n\nTo give a particular version to this deploy, use the -v/--publish-version flag. When you are deploying an existing application, the version name must be different from the current name. You can also use a history revision for the deploy and override the current application by using the -r/--revision flag.\n\n- [vela status](https://kubevela.io/docs/cli/vela_status/) \\- Show status of vela application.\n\n- [vela ls](https://kubevela.io/docs/cli/vela_ls/) \\- List all vela applications.\n\n- [vela delete](https://kubevela.io/docs/cli/vela_delete/) \\- Delete applications\n\nDelete KubeVela applications. KubeVela application deletion is associated with the recycle of underlying resources. By default, the resources created by the KubeVela application will be deleted once it is not in use or the application is deleted. There is garbage-collect policy in KubeVela application that you can use to configure customized recycle rules.\n\nThis command supports delete application in various modes. Natively, you can use it like \"kubectl delete app \\[app-name\\]\". In the cases you only want to delete the application but leave the resources there, you can use the --orphan parameter. In the cases the server-side controller is uninstalled, or you want to manually skip some errors in the deletion process (like lack privileges or handle cluster disconnection), you can use the --force parameter.\n\n- [vela env](https://kubevela.io/docs/cli/vela_env/) \\- Manage environments for vela applications to run.\n\n- [vela show](https://kubevela.io/docs/cli/vela_show/) \\- Show the reference doc for component, trait, policy or workflow types. 'vela show' equals with 'vela def show'.\n\n## Managing Applications\n- [vela addon](https://kubevela.io/docs/cli/vela_addon/) \\- Manage addons for extension.\n- [vela dry-run](https://kubevela.io/docs/cli/vela_dry-run/) \\- Dry-run application locally, render the Kubernetes resources as result to stdout.\nvela dry-run -d /definition/directory/or/file/ -f /path/to/app.yaml\n\nYou can also specify a remote url for app:\nvela dry-run -d /definition/directory/or/file/ -f https://remote-host/app.yaml\n\nAnd more, you can specify policy and workflow with application file:\nvela dry-run -d /definition/directory/or/file/ -f /path/to/app.yaml -f /path/to/policy.yaml -f /path/to/workflow.yaml, OR\nvela dry-run -d /definition/directory/or/file/ -f /path/to/app.yaml,/path/to/policy.yaml,/path/to/workflow.yaml\n\nAdditionally, if the provided policy and workflow files are not referenced by application file, warning message will show up\nand those files will be ignored. You can use \"merge\" flag to make those standalone files effective:\nvela dry-run -d /definition/directory/or/file/ -f /path/to/app.yaml,/path/to/policy.yaml,/path/to/workflow.yaml --merge\n\nLimitation:\n\n```codeBlockLines_e6Vv\n1. Only support one object per file(yaml) for \"-f\" flag. More support will be added in the future improvement.\n2. Dry Run with policy and workflow will only take override/topology policies and deploy workflow step into considerations. Other workflow step will be ignored.\n```\n\n- [vela live-diff](https://kubevela.io/docs/cli/vela_live-diff/) \\- Compare application and revisions.\n- [vela logs](https://kubevela.io/docs/cli/vela_logs/) \\- Tail logs for vela application.\n- [vela port-forward](https://kubevela.io/docs/cli/vela_port-forward/) \\- Forward local ports to container/service port of vela application.\n- [vela exec](https://kubevela.io/docs/cli/vela_exec/) \\- Execute command inside container based vela application.\n- [vela revision](https://kubevela.io/docs/cli/vela_revision/) \\- Manage KubeVela Application Revisions\n- [vela debug](https://kubevela.io/docs/cli/vela_debug/) \\- Debug running application with debug policy.\n\n## Continuous Delivery\n- [vela workflow](https://kubevela.io/docs/cli/vela_workflow/) \\- Operate the Workflow during Application Delivery. Note that workflow command is both valid for Application Workflow and WorkflowRun(expect for \\[restart, rollout\\] command, they're only valid for Application Workflow). The command will try to find the Application first, if not found, it will try to find WorkflowRun. You can also specify the resource type by using --type flag.\n\n- [vela adopt](https://kubevela.io/docs/cli/vela_adopt/) \\- Adopt resources into applications\n\nAdopt resources into a KubeVela application. This command is useful when you already have resources applied in your Kubernetes cluster. These resources could be applied natively or with other tools, such as Helm. This command will automatically find out the resources to be adopted and assemble them into a new application which won't trigger any damage such as restart on the adoption.\n\nThere are two types of adoption supported by far, 'native' Kubernetes resources (by default) and 'helm' releases. 1. For 'native' type, you can specify a list of resources you want to adopt in the application. Only resources in local cluster are supported for now. 2. For 'helm' type, you can specify a helm release name. This helm release should be already published in the local cluster. The command will find the resources managed by the helm release and convert them into an adoption application.\n\nThere are two working mechanism (called 'modes' here) for the adoption by far, 'read-only' mode (by default) and 'take-over' mode. 1. In 'read-only' mode, adopted resources will not be touched. You can leverage vela tools (like Vela CLI or VelaUX) to observe those resources and attach traits to add new capabilities. The adopted resources will not be recycled or updated. This mode is recommended if you still want to keep using other tools to manage resources updates or deletion, like Helm. 2. In 'take-over' mode, adopted resources are completely managed by application which means they can be modified. You can use traits or directly modify the component to make edits to those resources. This mode can be helpful if you want to migrate existing resources into KubeVela system and let KubeVela to handle the life-cycle of target resources.\n\nThe adopted application can be customized. You can provide a CUE template file to the command and make your own assemble rules for the adoption application. You can refer to [https://github.com/kubevela/kubevela/blob/master/references/cli/adopt-templates/default.cue](https://github.com/kubevela/kubevela/blob/master/references/cli/adopt-templates/default.cue) to see the default implementation of adoption rules.\n\nIf you want to adopt all resources with resource topology rule to Applications, you can use: 'vela adopt --all'. The resource topology rule can be customized by '--resource-topology-rule' flag.\n\n## Managing Extensions\n- [vela uischema](https://kubevela.io/docs/cli/vela_uischema/) \\- Manage UI schema for addons.\n- [vela component](https://kubevela.io/docs/cli/vela_component/) \\- List component types installed and discover more in registry.\n- [vela trait](https://kubevela.io/docs/cli/vela_trait/) \\- List trait types installed and discover more in registry.\n- [vela def](https://kubevela.io/docs/cli/vela_def/) \\- Manage X-Definitions for extension.\n\n## System Tools\n- [vela install](https://kubevela.io/docs/cli/vela_install/) \\- The Kubevela CLI allows installing Kubevela on any Kubernetes derivative to which your kube config is pointing to.\n- [vela uninstall](https://kubevela.io/docs/cli/vela_uninstall/) \\- Uninstalls KubeVela from a Kubernetes cluster.\n- [vela system](https://kubevela.io/docs/cli/vela_system/) \\- Manage system, including printing the system deployment information in vela-system namespace and diagnosing the system's health.\n- [vela version](https://kubevela.io/docs/cli/vela_version/) \\- Prints vela build version information.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela", "title": "KubeVela CLI Documentation", "description": "This page provides an overview of the KubeVela CLI commands and their usage for managing applications, extensions, and system tools.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:52:18", "type": "overview", "page_metadata": {"docsearch:version": "v1.10", "ogDescription": "Getting Started", "ogUrl": "https://kubevela.io/docs/cli/vela/", "og:url": "https://kubevela.io/docs/cli/vela/", "docsearch:language": "en", "docusaurus_locale": "en", "docusaurus_tag": "docs-default-v1.10", "description": "Getting Started", "twitter:card": "summary_large_image", "viewport": "width=device-width, initial-scale=1.0", "docsearch:docusaurus_tag": "docs-default-v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "theme-color": "#ffffff", "docusaurus_version": "v1.10", "og:title": "CLI Commands | KubeVela", "language": "en", "title": "CLI Commands | KubeVela", "generator": "Docusaurus v2.4.3", "ogTitle": "CLI Commands | KubeVela", "og:description": "Getting Started", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "scrapeId": "9418311e-94d9-417a-bcf1-1b72ec57993f", "sourceURL": "https://kubevela.io/docs/cli/vela", "url": "https://kubevela.io/docs/cli/vela/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"KubeVela CLI Documentation\"?\n\nAssistant: Here are some code examples:\n\n### Dry Run Example\n```yaml\nvela dry-run -d /definition/directory/or/file/ -f /path/to/app.yaml\n```\n\n### Remote URL Dry Run Example\n```yaml\nvela dry-run -d /definition/directory/or/file/ -f https://remote-host/app.yaml\n```\n\n### Multiple Files Dry Run Example\n```yaml\nvela dry-run -d /definition/directory/or/file/ -f /path/to/app.yaml -f /path/to/policy.yaml -f /path/to/workflow.yaml\n```\n\n### Merge Flag Dry Run Example\n```yaml\nvela dry-run -d /definition/directory/or/file/ -f /path/to/app.yaml,/path/to/policy.yaml,/path/to/workflow.yaml --merge\n```\n\n### Adopt All Resources Example\n```yaml\nvela adopt --all\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela", "title": "KubeVela CLI Documentation", "description": "This page provides an overview of the KubeVela CLI commands and their usage for managing applications, extensions, and system tools.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:52:18", "type": "code_examples", "page_metadata": {"docsearch:version": "v1.10", "ogDescription": "Getting Started", "ogUrl": "https://kubevela.io/docs/cli/vela/", "og:url": "https://kubevela.io/docs/cli/vela/", "docsearch:language": "en", "docusaurus_locale": "en", "docusaurus_tag": "docs-default-v1.10", "description": "Getting Started", "twitter:card": "summary_large_image", "viewport": "width=device-width, initial-scale=1.0", "docsearch:docusaurus_tag": "docs-default-v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "theme-color": "#ffffff", "docusaurus_version": "v1.10", "og:title": "CLI Commands | KubeVela", "language": "en", "title": "CLI Commands | KubeVela", "generator": "Docusaurus v2.4.3", "ogTitle": "CLI Commands | KubeVela", "og:description": "Getting Started", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "scrapeId": "9418311e-94d9-417a-bcf1-1b72ec57993f", "sourceURL": "https://kubevela.io/docs/cli/vela", "url": "https://kubevela.io/docs/cli/vela/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela CLI Documentation\"?\n\nAssistant: Here are the recommended best practices:\n\n• Use the -n/--namespace flag to choose the location of the target application when deploying.\n• When deploying an existing application, ensure the version name is different from the current name.\n• Use the --orphan parameter to delete the application but leave the resources intact.\n• In 'read-only' mode, adopted resources will not be touched, allowing for observation and trait attachment without recycling or updating.\n• Customize the adopted application using a CUE template file for specific assembly rules.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela", "title": "KubeVela CLI Documentation", "description": "This page provides an overview of the KubeVela CLI commands and their usage for managing applications, extensions, and system tools.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:52:18", "type": "best_practices", "page_metadata": {"docsearch:version": "v1.10", "ogDescription": "Getting Started", "ogUrl": "https://kubevela.io/docs/cli/vela/", "og:url": "https://kubevela.io/docs/cli/vela/", "docsearch:language": "en", "docusaurus_locale": "en", "docusaurus_tag": "docs-default-v1.10", "description": "Getting Started", "twitter:card": "summary_large_image", "viewport": "width=device-width, initial-scale=1.0", "docsearch:docusaurus_tag": "docs-default-v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "theme-color": "#ffffff", "docusaurus_version": "v1.10", "og:title": "CLI Commands | KubeVela", "language": "en", "title": "CLI Commands | KubeVela", "generator": "Docusaurus v2.4.3", "ogTitle": "CLI Commands | KubeVela", "og:description": "Getting Started", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "scrapeId": "9418311e-94d9-417a-bcf1-1b72ec57993f", "sourceURL": "https://kubevela.io/docs/cli/vela", "url": "https://kubevela.io/docs/cli/vela/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela CLI: List Addons\"?\n\nAssistant: This page provides information on how to list addons in KubeVela using the CLI.\n\nHere's a detailed explanation:\n\n\n## List addons\n### Synopsis\nList addons in KubeVela\n\n```codeBlockLines_e6Vv\nvela addon list [flags]\n```\n\n### Examples\n```codeBlockLines_e6Vv\n  List addon by:\n    vela addon ls\n  List addons in a specific registry, useful to reveal addons with duplicated names:\n    vela addon ls --registry <registry-name>\n```\n\n### Options\n```codeBlockLines_e6Vv\n  -h, --help              help for list\n  -r, --registry string   specify the registry name to list\n```\n\n### Options inherited from parent commands\n```codeBlockLines_e6Vv\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n\n### SEE ALSO\n- [vela addon](https://kubevela.io/docs/cli/vela_addon/) - Manage addons for extension.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_addon_list", "title": "KubeVela CLI: List Addons", "description": "This page provides information on how to list addons in KubeVela using the CLI.", "has_code_examples": true, "has_best_practices": false, "section_count": 1, "timestamp": "2025-02-28 15:52:38", "type": "overview", "page_metadata": {"generator": "Docusaurus v2.4.3", "language": "en", "ogUrl": "https://kubevela.io/docs/cli/vela_addon_list/", "og:url": "https://kubevela.io/docs/cli/vela_addon_list/", "docusaurus_locale": "en", "msapplication-config": "/img/favicons/browserconfig.xml", "ogDescription": "List addons", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docsearch:docusaurus_tag": "docs-default-v1.10", "theme-color": "#ffffff", "viewport": "width=device-width, initial-scale=1.0", "description": "List addons", "twitter:card": "summary_large_image", "title": "vela addon list | KubeVela", "docusaurus_version": "v1.10", "og:description": "List addons", "docsearch:language": "en", "docsearch:version": "v1.10", "docusaurus_tag": "docs-default-v1.10", "og:title": "vela addon list | KubeVela", "ogTitle": "vela addon list | KubeVela", "scrapeId": "62a7cce8-ef4a-4a61-8f01-054fb6fd7723", "sourceURL": "https://kubevela.io/docs/cli/vela_addon_list", "url": "https://kubevela.io/docs/cli/vela_addon_list/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"KubeVela CLI: List Addons\"?\n\nAssistant: Here are some code examples:\n\n### List addons command\n```yaml\nvela addon list [flags]\n```\n\n### List addon examples\n```yaml\n  List addon by:\n    vela addon ls\n  List addons in a specific registry, useful to reveal addons with duplicated names:\n    vela addon ls --registry <registry-name>\n```\n\n### Options for list command\n```yaml\n  -h, --help              help for list\n  -r, --registry string   specify the registry name to list\n```\n\n### Options inherited from parent commands\n```yaml\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_addon_list", "title": "KubeVela CLI: List Addons", "description": "This page provides information on how to list addons in KubeVela using the CLI.", "has_code_examples": true, "has_best_practices": false, "section_count": 1, "timestamp": "2025-02-28 15:52:38", "type": "code_examples", "page_metadata": {"generator": "Docusaurus v2.4.3", "language": "en", "ogUrl": "https://kubevela.io/docs/cli/vela_addon_list/", "og:url": "https://kubevela.io/docs/cli/vela_addon_list/", "docusaurus_locale": "en", "msapplication-config": "/img/favicons/browserconfig.xml", "ogDescription": "List addons", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docsearch:docusaurus_tag": "docs-default-v1.10", "theme-color": "#ffffff", "viewport": "width=device-width, initial-scale=1.0", "description": "List addons", "twitter:card": "summary_large_image", "title": "vela addon list | KubeVela", "docusaurus_version": "v1.10", "og:description": "List addons", "docsearch:language": "en", "docsearch:version": "v1.10", "docusaurus_tag": "docs-default-v1.10", "og:title": "vela addon list | KubeVela", "ogTitle": "vela addon list | KubeVela", "scrapeId": "62a7cce8-ef4a-4a61-8f01-054fb6fd7723", "sourceURL": "https://kubevela.io/docs/cli/vela_addon_list", "url": "https://kubevela.io/docs/cli/vela_addon_list/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela Documentation v1.9\"?\n\nAssistant: This is documentation for KubeVela v1.9, which is no longer actively maintained. For up-to-date documentation, see the latest version (v1.10).\n\nHere's a detailed explanation:\n\n\n## What is KubeVela?\nKubeVela is a modern software delivery and management control plane. The goal is to make deploying and operating applications across today's hybrid, multi-cloud environments easier, faster and more reliable. Welcome onboard and sail Vela!\n\n## Why KubeVela?\n- The modern application should be able to deploy across hybrid environments including Kubernetes, cloud, or even IoT devices in a simple and robust way.\n- The app delivery control plane should be able to adapt to any existing infrastructure or extend with modular and reusable building blocks per users’ needs.\n- The developers should have an application platform that is vendor agnostic, consistent experience, and has a large number of reusable building blocks and best practices.\n\n## Key Features\n- **Deployment as Code**\n\nDeclare your deployment plan as [workflow](https://kubevela.io/docs/v1.9/getting-started/core-concept/), run it automatically with any CI/CD or GitOps system, extend or re-program the workflow steps with [CUE](https://cuelang.org/). No ad-hoc scripts, no dirty glue code, just deploy. The deployment workflow in KubeVela is powered by [Open Application Model](https://oam.dev/).\n\n- **Built-in security, compliance and observability building blocks**\n\nChoose from the wide range of LDAP integrations we provided out-of-box, enjoy enhanced [multi-cluster authorization and authentication](https://kubevela.io/docs/v1.9/platform-engineers/auth/advance/), pick and apply fine-grained RBAC modules and customize them per your own supply chain requirements. All delivery process has fully [automated observability](https://kubevela.io/docs/v1.9/platform-engineers/operations/observability/).\n\n- **Multi-cloud/hybrid-environments app delivery as first-class citizen**\n\nNatively supports multi-cluster/hybrid-cloud scenarios such as progressive rollout across test/staging/production environments, automatic canary, blue-green and continuous verification, rich placement strategy across clusters and clouds, along with automated cloud environments provision.\n\n- **Lightweight but highly extensible architecture**\n\nMinimize your control plane deployment with only one pod and 0.5c1g resources to handle thousands of application delivery. Glue and orchestrate all your infrastructure capabilities as reusable modules and share the large growing community [addons](https://kubevela.io/docs/v1.9/reference/addons/overview/).\n\n## KubeVela vs. Other Software\n### KubeVela vs. CI/CD (GitHub Actions, GitLab, CircleCI, Jenkins, etc.)\n\nKubeVela is a continuous delivery platform that works at downstream of your CI process. So you will reuse the CI process you already adopted, and KubeVela will take over CD process by empowering it with modern application delivery best practices, such as declarative deployment plan as workflow, hybrid/multi-cloud resource provision/binding, security and compliance, and much more. It natively supports GitOps if you want.\n\n> Feel free to check the [Integrating with Jenkins](https://kubevela.io/docs/v1.9/tutorials/jenkins/) or [GitOps](https://kubevela.io/docs/v1.9/case-studies/gitops/) documentation for more details.\n\n### KubeVela vs. GitOps (ArgoCD, FluxCD, etc.)\n\nKubeVela adopts your GitOps process and improves it by adding multi-cluster/hybrid-cloud capabilities:\n\n- KubeVela has a user-friendly workflow that allows you to extend, re-program or share any of your delivery process, including security and compliance flows.\n- KubeVela regards multi-cloud/hybrid-environments app delivery as first-class citizen, it provides rich deployment strategies across clusters and clouds with fully managed cloud environments provision.\n\n### KubeVela vs. PaaS (Heroku, Cloud Foundry, etc.)\n\nKubeVela shares the same goal with the traditional PaaS to provide full application deployment and management capabilities and aim to improve developer experience and efficiency.\n\nThough the biggest difference lies in **flexibility**.\n\nKubeVela is fully programmable, all of its deployment workflow and component feature set are LEGO-style CUE modules and can be extended or removed in-place when your needs change. As a CD control plane, KubeVela allow you to take full control over your infrastructure and tooling.\n\n### KubeVela vs. Helm\n\nHelm is a package manager for Kubernetes that provides package, install, and upgrade a set of YAML files for Kubernetes as a unit.\n\nKubeVela as a modern software delivery control plane can naturally deploy Helm charts. For example, you could use KubeVela to define an application that is composed by a WordPress chart and a AWS RDS Terraform module, orchestrate the components' topology, and then deploy them to multiple environments following certain strategy.\n\nOf course, KubeVela also supports other encapsulation formats including Kustomize etc.\n\n### KubeVela vs. Kubernetes\n\nKubeVela is a modern application delivery system built with cloud native stack. It leverages [Open Application Model](https://github.com/oam-dev/spec) and Kubernetes as control plane to resolve a hard problem - making shipping applications enjoyable.\n\n## Development Status\nKubeVela is being actively developed by the community, our releases can be found [here](https://github.com/kubevela/kubevela/releases).\n\n## Adoption\nOrganizations who have officially adopted KubeVela can be found [here](https://github.com/kubevela/community/blob/main/ADOPTERS.md).\n\n## What's Next\n- Start to [install KubeVela](https://kubevela.io/docs/v1.9/install/).\n- Learn [Core Concepts](https://kubevela.io/docs/v1.9/getting-started/core-concept/) to know more about how it works.\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.9", "title": "KubeVela Documentation v1.9", "description": "This is documentation for KubeVela v1.9, which is no longer actively maintained. For up-to-date documentation, see the latest version (v1.10).", "has_code_examples": false, "has_best_practices": true, "section_count": 7, "timestamp": "2025-02-28 15:52:54", "type": "overview", "page_metadata": {"docsearch:docusaurus_tag": "docs-default-v1.9", "viewport": "width=device-width, initial-scale=1.0", "msapplication-config": "/img/favicons/browserconfig.xml", "docusaurus_tag": "docs-default-v1.9", "og:url": "https://kubevela.io/docs/v1.9/", "ogDescription": "What is KubeVela?", "docusaurus_version": "v1.9", "og:title": "Introduction | KubeVela", "description": "What is KubeVela?", "theme-color": "#ffffff", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "twitter:card": "summary_large_image", "docsearch:version": "v1.9", "language": "en", "ogTitle": "Introduction | KubeVela", "docsearch:language": "en", "title": "Introduction | KubeVela", "generator": "Docusaurus v2.4.3", "og:description": "What is KubeVela?", "docusaurus_locale": "en", "ogUrl": "https://kubevela.io/docs/v1.9/", "scrapeId": "879f7ee0-acf7-4b36-a552-a63ca85d4cfe", "sourceURL": "https://kubevela.io/docs/v1.9", "url": "https://kubevela.io/docs/v1.9/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela Documentation v1.9\"?\n\nAssistant: Here are the recommended best practices:\n\n• KubeVela is a continuous delivery platform that works at downstream of your CI process.\n• KubeVela adopts your GitOps process and improves it by adding multi-cluster/hybrid-cloud capabilities.\n• KubeVela is fully programmable, all of its deployment workflow and component feature set are LEGO-style CUE modules.\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.9", "title": "KubeVela Documentation v1.9", "description": "This is documentation for KubeVela v1.9, which is no longer actively maintained. For up-to-date documentation, see the latest version (v1.10).", "has_code_examples": false, "has_best_practices": true, "section_count": 7, "timestamp": "2025-02-28 15:52:54", "type": "best_practices", "page_metadata": {"docsearch:docusaurus_tag": "docs-default-v1.9", "viewport": "width=device-width, initial-scale=1.0", "msapplication-config": "/img/favicons/browserconfig.xml", "docusaurus_tag": "docs-default-v1.9", "og:url": "https://kubevela.io/docs/v1.9/", "ogDescription": "What is KubeVela?", "docusaurus_version": "v1.9", "og:title": "Introduction | KubeVela", "description": "What is KubeVela?", "theme-color": "#ffffff", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "twitter:card": "summary_large_image", "docsearch:version": "v1.9", "language": "en", "ogTitle": "Introduction | KubeVela", "docsearch:language": "en", "title": "Introduction | KubeVela", "generator": "Docusaurus v2.4.3", "og:description": "What is KubeVela?", "docusaurus_locale": "en", "ogUrl": "https://kubevela.io/docs/v1.9/", "scrapeId": "879f7ee0-acf7-4b36-a552-a63ca85d4cfe", "sourceURL": "https://kubevela.io/docs/v1.9", "url": "https://kubevela.io/docs/v1.9/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela CLI - Create a Config\"?\n\nAssistant: This page provides instructions on how to create a configuration using the KubeVela CLI.\n\nHere's a detailed explanation:\n\n\n## Create a config\n```codeBlockLines_e6Vv\nvela config create [flags]\n```\n\n## Examples\n```codeBlockLines_e6Vv\n  # Generate a config with the args\n  vela config create test-registry --template=image-registry registry=index.docker.io auth.username=test auth.password=test\n\n  # Generate a config with the file\n  vela config create test-config --template=image-registry  -f config.yaml\n\n  # Generate a config without the template\n  vela config create test-vela -f config.yaml\n```\n\n## Options\n```codeBlockLines_e6Vv\n      --alias string         specify the alias of the config\n      --description string   specify the description of the config\n      --dry-run              Dry run to apply the config\n  -f, --file string          specify the file name of the config properties\n  -h, --help                 help for create\n  -n, --namespace string     specify the namespace of the config (default \"vela-system\")\n      --target stringArray   this config will be distributed if this flag is set\n  -t, --template string      specify the config template name and namespace\n```\n\n## Options inherited from parent commands\n```codeBlockLines_e6Vv\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n\n## SEE ALSO\n- [vela config](https://kubevela.io/docs/cli/vela_config/) \\- Manage the configs.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_config_create", "title": "KubeVela CLI - Create a Config", "description": "This page provides instructions on how to create a configuration using the KubeVela CLI.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:53:05", "type": "overview", "page_metadata": {"msapplication-config": "/img/favicons/browserconfig.xml", "viewport": "width=device-width, initial-scale=1.0", "theme-color": "#ffffff", "ogTitle": "vela config create | KubeVela", "ogUrl": "https://kubevela.io/docs/cli/vela_config_create/", "twitter:card": "summary_large_image", "language": "en", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "generator": "Docusaurus v2.4.3", "ogDescription": "Create a config.", "docusaurus_version": "v1.10", "og:title": "vela config create | KubeVela", "docusaurus_locale": "en", "og:url": "https://kubevela.io/docs/cli/vela_config_create/", "docsearch:version": "v1.10", "docsearch:language": "en", "description": "Create a config.", "title": "vela config create | KubeVela", "docusaurus_tag": "docs-default-v1.10", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:description": "Create a config.", "scrapeId": "3e738def-6390-44cc-8e45-61d35600d1a4", "sourceURL": "https://kubevela.io/docs/cli/vela_config_create", "url": "https://kubevela.io/docs/cli/vela_config_create/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"KubeVela CLI - Create a Config\"?\n\nAssistant: Here are some code examples:\n\n### Create a Config with Arguments\n```yaml\nvela config create test-registry --template=image-registry registry=index.docker.io auth.username=test auth.password=test\n```\n\n### Create a Config with a File\n```yaml\nvela config create test-config --template=image-registry  -f config.yaml\n```\n\n### Create a Config without Template\n```yaml\nvela config create test-vela -f config.yaml\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_config_create", "title": "KubeVela CLI - Create a Config", "description": "This page provides instructions on how to create a configuration using the KubeVela CLI.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:53:05", "type": "code_examples", "page_metadata": {"msapplication-config": "/img/favicons/browserconfig.xml", "viewport": "width=device-width, initial-scale=1.0", "theme-color": "#ffffff", "ogTitle": "vela config create | KubeVela", "ogUrl": "https://kubevela.io/docs/cli/vela_config_create/", "twitter:card": "summary_large_image", "language": "en", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "generator": "Docusaurus v2.4.3", "ogDescription": "Create a config.", "docusaurus_version": "v1.10", "og:title": "vela config create | KubeVela", "docusaurus_locale": "en", "og:url": "https://kubevela.io/docs/cli/vela_config_create/", "docsearch:version": "v1.10", "docsearch:language": "en", "description": "Create a config.", "title": "vela config create | KubeVela", "docusaurus_tag": "docs-default-v1.10", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:description": "Create a config.", "scrapeId": "3e738def-6390-44cc-8e45-61d35600d1a4", "sourceURL": "https://kubevela.io/docs/cli/vela_config_create", "url": "https://kubevela.io/docs/cli/vela_config_create/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela CLI - Create a Config\"?\n\nAssistant: Here are the recommended best practices:\n\n• Use the --dry-run option to test your config creation without applying it.\n• Always specify the namespace to avoid confusion with other configs.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_config_create", "title": "KubeVela CLI - Create a Config", "description": "This page provides instructions on how to create a configuration using the KubeVela CLI.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:53:05", "type": "best_practices", "page_metadata": {"msapplication-config": "/img/favicons/browserconfig.xml", "viewport": "width=device-width, initial-scale=1.0", "theme-color": "#ffffff", "ogTitle": "vela config create | KubeVela", "ogUrl": "https://kubevela.io/docs/cli/vela_config_create/", "twitter:card": "summary_large_image", "language": "en", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "generator": "Docusaurus v2.4.3", "ogDescription": "Create a config.", "docusaurus_version": "v1.10", "og:title": "vela config create | KubeVela", "docusaurus_locale": "en", "og:url": "https://kubevela.io/docs/cli/vela_config_create/", "docsearch:version": "v1.10", "docsearch:language": "en", "description": "Create a config.", "title": "vela config create | KubeVela", "docusaurus_tag": "docs-default-v1.10", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:description": "Create a config.", "scrapeId": "3e738def-6390-44cc-8e45-61d35600d1a4", "sourceURL": "https://kubevela.io/docs/cli/vela_config_create", "url": "https://kubevela.io/docs/cli/vela_config_create/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"vela addon registry list\"?\n\nAssistant: List addon registries.\n\nHere's a detailed explanation:\n\n\n## Synopsis\nList addon registries.\n\n## Examples\n```codeBlockLines_e6Vv\nvela addon registry list\n```\n\n## Options\n```codeBlockLines_e6Vv\n  -h, --help   help for list\n```\n\n## Options inherited from parent commands\n```codeBlockLines_e6Vv\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n\n## SEE ALSO\n- [vela addon registry](https://kubevela.io/docs/cli/vela_addon_registry/) \\- Manage addon registry.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_addon_registry_list", "title": "vela addon registry list", "description": "List addon registries.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:53:12", "type": "overview", "page_metadata": {"docusaurus_version": "v1.10", "og:title": "vela addon registry list | KubeVela", "msapplication-config": "/img/favicons/browserconfig.xml", "ogDescription": "List addon registries.", "docsearch:version": "v1.10", "language": "en", "twitter:card": "summary_large_image", "description": "List addon registries.", "title": "vela addon registry list | KubeVela", "generator": "Docusaurus v2.4.3", "og:url": "https://kubevela.io/docs/cli/vela_addon_registry_list/", "docusaurus_locale": "en", "og:description": "List addon registries.", "theme-color": "#ffffff", "viewport": "width=device-width, initial-scale=1.0", "ogUrl": "https://kubevela.io/docs/cli/vela_addon_registry_list/", "docsearch:docusaurus_tag": "docs-default-v1.10", "docusaurus_tag": "docs-default-v1.10", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogTitle": "vela addon registry list | KubeVela", "docsearch:language": "en", "scrapeId": "f4abcd73-7d6c-47b5-b6cf-935e31fb9b61", "sourceURL": "https://kubevela.io/docs/cli/vela_addon_registry_list", "url": "https://kubevela.io/docs/cli/vela_addon_registry_list/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"vela addon registry list\"?\n\nAssistant: Here are some code examples:\n\n### Command to list addon registries\n```yaml\nvela addon registry list\n```\n\n### Help option for list\n```yaml\n-h, --help   help for list\n```\n\n### Verbosity option\n```yaml\n-V, --verbosity Level   number for the log level verbosity\n```\n\n### Assume yes option\n```yaml\n-y, --yes               Assume yes for all user prompts\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_addon_registry_list", "title": "vela addon registry list", "description": "List addon registries.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:53:12", "type": "code_examples", "page_metadata": {"docusaurus_version": "v1.10", "og:title": "vela addon registry list | KubeVela", "msapplication-config": "/img/favicons/browserconfig.xml", "ogDescription": "List addon registries.", "docsearch:version": "v1.10", "language": "en", "twitter:card": "summary_large_image", "description": "List addon registries.", "title": "vela addon registry list | KubeVela", "generator": "Docusaurus v2.4.3", "og:url": "https://kubevela.io/docs/cli/vela_addon_registry_list/", "docusaurus_locale": "en", "og:description": "List addon registries.", "theme-color": "#ffffff", "viewport": "width=device-width, initial-scale=1.0", "ogUrl": "https://kubevela.io/docs/cli/vela_addon_registry_list/", "docsearch:docusaurus_tag": "docs-default-v1.10", "docusaurus_tag": "docs-default-v1.10", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogTitle": "vela addon registry list | KubeVela", "docsearch:language": "en", "scrapeId": "f4abcd73-7d6c-47b5-b6cf-935e31fb9b61", "sourceURL": "https://kubevela.io/docs/cli/vela_addon_registry_list", "url": "https://kubevela.io/docs/cli/vela_addon_registry_list/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"vela addon registry list\"?\n\nAssistant: Here are the recommended best practices:\n\n• If you like KubeVela, give it a star on GitHub!\n• Check the release notes for updates.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_addon_registry_list", "title": "vela addon registry list", "description": "List addon registries.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:53:12", "type": "best_practices", "page_metadata": {"docusaurus_version": "v1.10", "og:title": "vela addon registry list | KubeVela", "msapplication-config": "/img/favicons/browserconfig.xml", "ogDescription": "List addon registries.", "docsearch:version": "v1.10", "language": "en", "twitter:card": "summary_large_image", "description": "List addon registries.", "title": "vela addon registry list | KubeVela", "generator": "Docusaurus v2.4.3", "og:url": "https://kubevela.io/docs/cli/vela_addon_registry_list/", "docusaurus_locale": "en", "og:description": "List addon registries.", "theme-color": "#ffffff", "viewport": "width=device-width, initial-scale=1.0", "ogUrl": "https://kubevela.io/docs/cli/vela_addon_registry_list/", "docsearch:docusaurus_tag": "docs-default-v1.10", "docusaurus_tag": "docs-default-v1.10", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogTitle": "vela addon registry list | KubeVela", "docsearch:language": "en", "scrapeId": "f4abcd73-7d6c-47b5-b6cf-935e31fb9b61", "sourceURL": "https://kubevela.io/docs/cli/vela_addon_registry_list", "url": "https://kubevela.io/docs/cli/vela_addon_registry_list/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela CLI - Validate X-Definition\"?\n\nAssistant: This page covers the command to validate definition files in KubeVela, ensuring they have the correct cue format and fields set properly.\n\nHere's a detailed explanation:\n\n\n## Synopsis\nValidate definition file by checking whether it has the valid cue format with fields set correctly.\n\n- Currently, this command only checks the cue format. This function is still working in progress and we will support more functional validation mechanism in the future.\n\n## Examples\n```bash\n# Command below will validate the my-def.cue file.\n> vela def vet my-def.cue\n# Validate every cue file provided\n> vela def vet my-def1.cue my-def2.cue my-def3.cue\n# Validate every cue file in the specified directories\n> vela def vet ./test1/ ./test2/\n```\n\n## Options\n```bash\n  -h, --help   help for vet\n```\n\n## Options inherited from parent commands\n```bash\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n\n## SEE ALSO\n- [vela def](https://kubevela.io/docs/cli/vela_def/) - Manage definitions.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_def_vet", "title": "KubeVela CLI - Validate X-Definition", "description": "This page covers the command to validate definition files in KubeVela, ensuring they have the correct cue format and fields set properly.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:53:36", "type": "overview", "page_metadata": {"ogUrl": "https://kubevela.io/docs/cli/vela_def_vet/", "og:title": "vela def vet | KubeVela", "docsearch:language": "en", "title": "vela def vet | KubeVela", "description": "Validate X-Definition.", "theme-color": "#ffffff", "viewport": "width=device-width, initial-scale=1.0", "docsearch:docusaurus_tag": "docs-default-v1.10", "generator": "Docusaurus v2.4.3", "docusaurus_locale": "en", "twitter:card": "summary_large_image", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "og:url": "https://kubevela.io/docs/cli/vela_def_vet/", "language": "en", "og:description": "Validate X-Definition.", "ogDescription": "Validate X-Definition.", "docusaurus_tag": "docs-default-v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "ogTitle": "vela def vet | KubeVela", "docsearch:version": "v1.10", "docusaurus_version": "v1.10", "scrapeId": "8fdfdd91-db0a-4eeb-b95c-eb571043c868", "sourceURL": "https://kubevela.io/docs/cli/vela_def_vet", "url": "https://kubevela.io/docs/cli/vela_def_vet/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"KubeVela CLI - Validate X-Definition\"?\n\nAssistant: Here are some code examples:\n\n### Validate Definition Command\n```yaml\nvela def vet DEFINITION.cue [flags]\n```\n\n### Example Commands\n```yaml\n# Command below will validate the my-def.cue file.\n> vela def vet my-def.cue\n# Validate every cue file provided\n> vela def vet my-def1.cue my-def2.cue my-def3.cue\n# Validate every cue file in the specified directories\n> vela def vet ./test1/ ./test2/\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_def_vet", "title": "KubeVela CLI - Validate X-Definition", "description": "This page covers the command to validate definition files in KubeVela, ensuring they have the correct cue format and fields set properly.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:53:36", "type": "code_examples", "page_metadata": {"ogUrl": "https://kubevela.io/docs/cli/vela_def_vet/", "og:title": "vela def vet | KubeVela", "docsearch:language": "en", "title": "vela def vet | KubeVela", "description": "Validate X-Definition.", "theme-color": "#ffffff", "viewport": "width=device-width, initial-scale=1.0", "docsearch:docusaurus_tag": "docs-default-v1.10", "generator": "Docusaurus v2.4.3", "docusaurus_locale": "en", "twitter:card": "summary_large_image", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "og:url": "https://kubevela.io/docs/cli/vela_def_vet/", "language": "en", "og:description": "Validate X-Definition.", "ogDescription": "Validate X-Definition.", "docusaurus_tag": "docs-default-v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "ogTitle": "vela def vet | KubeVela", "docsearch:version": "v1.10", "docusaurus_version": "v1.10", "scrapeId": "8fdfdd91-db0a-4eeb-b95c-eb571043c868", "sourceURL": "https://kubevela.io/docs/cli/vela_def_vet", "url": "https://kubevela.io/docs/cli/vela_def_vet/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela CLI - Validate X-Definition\"?\n\nAssistant: Here are the recommended best practices:\n\n• Currently, this command only checks the cue format. This function is still working in progress and we will support more functional validation mechanism in the future.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_def_vet", "title": "KubeVela CLI - Validate X-Definition", "description": "This page covers the command to validate definition files in KubeVela, ensuring they have the correct cue format and fields set properly.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:53:36", "type": "best_practices", "page_metadata": {"ogUrl": "https://kubevela.io/docs/cli/vela_def_vet/", "og:title": "vela def vet | KubeVela", "docsearch:language": "en", "title": "vela def vet | KubeVela", "description": "Validate X-Definition.", "theme-color": "#ffffff", "viewport": "width=device-width, initial-scale=1.0", "docsearch:docusaurus_tag": "docs-default-v1.10", "generator": "Docusaurus v2.4.3", "docusaurus_locale": "en", "twitter:card": "summary_large_image", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "og:url": "https://kubevela.io/docs/cli/vela_def_vet/", "language": "en", "og:description": "Validate X-Definition.", "ogDescription": "Validate X-Definition.", "docusaurus_tag": "docs-default-v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "ogTitle": "vela def vet | KubeVela", "docsearch:version": "v1.10", "docusaurus_version": "v1.10", "scrapeId": "8fdfdd91-db0a-4eeb-b95c-eb571043c868", "sourceURL": "https://kubevela.io/docs/cli/vela_def_vet", "url": "https://kubevela.io/docs/cli/vela_def_vet/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela Addon Status\"?\n\nAssistant: Get an addon's status from the cluster.\n\nHere's a detailed explanation:\n\n\n## Synopsis\nGet an addon's status from cluster.\n\n## Examples\n`vela addon status <addon-name>`\n\n## Options\n```codeBlockLines_e6Vv\n  -h, --help      help for status\n  -v, --verbose   show addon descriptions and parameters in addition to status\n```\n\n## Options inherited from parent commands\n```codeBlockLines_e6Vv\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n\n## SEE ALSO\n- [vela addon](https://kubevela.io/docs/cli/vela_addon/) - Manage addons for extension.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_addon_status", "title": "KubeVela Addon Status", "description": "Get an addon's status from the cluster.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:53:43", "type": "overview", "page_metadata": {"docusaurus_version": "v1.10", "docusaurus_locale": "en", "docusaurus_tag": "docs-default-v1.10", "og:url": "https://kubevela.io/docs/cli/vela_addon_status/", "viewport": "width=device-width, initial-scale=1.0", "ogTitle": "vela addon status | KubeVela", "docsearch:language": "en", "og:description": "get an addon's status.", "title": "vela addon status | KubeVela", "ogUrl": "https://kubevela.io/docs/cli/vela_addon_status/", "docsearch:docusaurus_tag": "docs-default-v1.10", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogDescription": "get an addon's status.", "twitter:card": "summary_large_image", "og:title": "vela addon status | KubeVela", "description": "get an addon's status.", "theme-color": "#ffffff", "msapplication-config": "/img/favicons/browserconfig.xml", "generator": "Docusaurus v2.4.3", "language": "en", "docsearch:version": "v1.10", "scrapeId": "78b3d954-7693-4186-8b47-960843a15156", "sourceURL": "https://kubevela.io/docs/cli/vela_addon_status", "url": "https://kubevela.io/docs/cli/vela_addon_status/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"KubeVela Addon Status\"?\n\nAssistant: Here are some code examples:\n\n### Command to get addon status\n```yaml\nvela addon status [flags]\n```\n\n### Example usage\n```yaml\nvela addon status <addon-name>\n```\n\n### Options for status command\n```yaml\n  -h, --help      help for status\n  -v, --verbose   show addon descriptions and parameters in addition to status\n```\n\n### Inherited options\n```yaml\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_addon_status", "title": "KubeVela Addon Status", "description": "Get an addon's status from the cluster.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:53:43", "type": "code_examples", "page_metadata": {"docusaurus_version": "v1.10", "docusaurus_locale": "en", "docusaurus_tag": "docs-default-v1.10", "og:url": "https://kubevela.io/docs/cli/vela_addon_status/", "viewport": "width=device-width, initial-scale=1.0", "ogTitle": "vela addon status | KubeVela", "docsearch:language": "en", "og:description": "get an addon's status.", "title": "vela addon status | KubeVela", "ogUrl": "https://kubevela.io/docs/cli/vela_addon_status/", "docsearch:docusaurus_tag": "docs-default-v1.10", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogDescription": "get an addon's status.", "twitter:card": "summary_large_image", "og:title": "vela addon status | KubeVela", "description": "get an addon's status.", "theme-color": "#ffffff", "msapplication-config": "/img/favicons/browserconfig.xml", "generator": "Docusaurus v2.4.3", "language": "en", "docsearch:version": "v1.10", "scrapeId": "78b3d954-7693-4186-8b47-960843a15156", "sourceURL": "https://kubevela.io/docs/cli/vela_addon_status", "url": "https://kubevela.io/docs/cli/vela_addon_status/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela Addon Status\"?\n\nAssistant: Here are the recommended best practices:\n\n• Use the `-v` or `--verbose` flag to get more detailed information about the addon status.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_addon_status", "title": "KubeVela Addon Status", "description": "Get an addon's status from the cluster.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:53:43", "type": "best_practices", "page_metadata": {"docusaurus_version": "v1.10", "docusaurus_locale": "en", "docusaurus_tag": "docs-default-v1.10", "og:url": "https://kubevela.io/docs/cli/vela_addon_status/", "viewport": "width=device-width, initial-scale=1.0", "ogTitle": "vela addon status | KubeVela", "docsearch:language": "en", "og:description": "get an addon's status.", "title": "vela addon status | KubeVela", "ogUrl": "https://kubevela.io/docs/cli/vela_addon_status/", "docsearch:docusaurus_tag": "docs-default-v1.10", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogDescription": "get an addon's status.", "twitter:card": "summary_large_image", "og:title": "vela addon status | KubeVela", "description": "get an addon's status.", "theme-color": "#ffffff", "msapplication-config": "/img/favicons/browserconfig.xml", "generator": "Docusaurus v2.4.3", "language": "en", "docsearch:version": "v1.10", "scrapeId": "78b3d954-7693-4186-8b47-960843a15156", "sourceURL": "https://kubevela.io/docs/cli/vela_addon_status", "url": "https://kubevela.io/docs/cli/vela_addon_status/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"Delete X-Definition\"?\n\nAssistant: Delete X-Definition in kubernetes cluster.\n\nHere's a detailed explanation:\n\n\n## Synopsis\nDelete X-Definition in kubernetes cluster.\n\n## Examples\n# Command below will delete TraitDefinition of annotations in default namespace\n> vela def del annotations -t trait -n default\n\n## Options\n  -h, --help               help for del\n  -n, --namespace string   Specify which namespace the definition locates. (default \"vela-system\")\n  -t, --type string        Specify the definition type of target. Valid types: policy, workload, workflow-step, component, trait\n\n## Options inherited from parent commands\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n\n## SEE ALSO\n- [vela def](https://kubevela.io/docs/cli/vela_def/) \\- Manage definitions.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_def_del", "title": "Delete X-Definition", "description": "Delete X-Definition in kubernetes cluster.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:53:52", "type": "overview", "page_metadata": {"og:description": "Delete X-Definition.", "docusaurus_locale": "en", "og:title": "vela def del | KubeVela", "generator": "Docusaurus v2.4.3", "docusaurus_version": "v1.10", "og:url": "https://kubevela.io/docs/cli/vela_def_del/", "title": "vela def del | KubeVela", "language": "en", "ogTitle": "vela def del | KubeVela", "twitter:card": "summary_large_image", "docsearch:language": "en", "ogDescription": "Delete X-Definition.", "docsearch:version": "v1.10", "docsearch:docusaurus_tag": "docs-default-v1.10", "docusaurus_tag": "docs-default-v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "viewport": "width=device-width, initial-scale=1.0", "ogUrl": "https://kubevela.io/docs/cli/vela_def_del/", "theme-color": "#ffffff", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "description": "Delete X-Definition.", "scrapeId": "67c3979b-5a3a-4d8b-8df2-799acb2af41f", "sourceURL": "https://kubevela.io/docs/cli/vela_def_del", "url": "https://kubevela.io/docs/cli/vela_def_del/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"Delete X-Definition\"?\n\nAssistant: Here are some code examples:\n\n### Delete X-Definition Command\n```yaml\nvela def del DEFINITION_NAME [flags]\n```\n\n### Example Command\n```yaml\n# Command below will delete TraitDefinition of annotations in default namespace\n> vela def del annotations -t trait -n default\n```\n\n### Options Command\n```yaml\n  -h, --help               help for del\n  -n, --namespace string   Specify which namespace the definition locates. (default \"vela-system\")\n  -t, --type string        Specify the definition type of target. Valid types: policy, workload, workflow-step, component, trait\n```\n\n### Inherited Options Command\n```yaml\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_def_del", "title": "Delete X-Definition", "description": "Delete X-Definition in kubernetes cluster.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:53:52", "type": "code_examples", "page_metadata": {"og:description": "Delete X-Definition.", "docusaurus_locale": "en", "og:title": "vela def del | KubeVela", "generator": "Docusaurus v2.4.3", "docusaurus_version": "v1.10", "og:url": "https://kubevela.io/docs/cli/vela_def_del/", "title": "vela def del | KubeVela", "language": "en", "ogTitle": "vela def del | KubeVela", "twitter:card": "summary_large_image", "docsearch:language": "en", "ogDescription": "Delete X-Definition.", "docsearch:version": "v1.10", "docsearch:docusaurus_tag": "docs-default-v1.10", "docusaurus_tag": "docs-default-v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "viewport": "width=device-width, initial-scale=1.0", "ogUrl": "https://kubevela.io/docs/cli/vela_def_del/", "theme-color": "#ffffff", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "description": "Delete X-Definition.", "scrapeId": "67c3979b-5a3a-4d8b-8df2-799acb2af41f", "sourceURL": "https://kubevela.io/docs/cli/vela_def_del", "url": "https://kubevela.io/docs/cli/vela_def_del/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"Delete X-Definition\"?\n\nAssistant: Here are the recommended best practices:\n\n• If you like KubeVela, give it a star on GitHub!\n• Read Release Note for the latest version updates.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_def_del", "title": "Delete X-Definition", "description": "Delete X-Definition in kubernetes cluster.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:53:52", "type": "best_practices", "page_metadata": {"og:description": "Delete X-Definition.", "docusaurus_locale": "en", "og:title": "vela def del | KubeVela", "generator": "Docusaurus v2.4.3", "docusaurus_version": "v1.10", "og:url": "https://kubevela.io/docs/cli/vela_def_del/", "title": "vela def del | KubeVela", "language": "en", "ogTitle": "vela def del | KubeVela", "twitter:card": "summary_large_image", "docsearch:language": "en", "ogDescription": "Delete X-Definition.", "docsearch:version": "v1.10", "docsearch:docusaurus_tag": "docs-default-v1.10", "docusaurus_tag": "docs-default-v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "viewport": "width=device-width, initial-scale=1.0", "ogUrl": "https://kubevela.io/docs/cli/vela_def_del/", "theme-color": "#ffffff", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "description": "Delete X-Definition.", "scrapeId": "67c3979b-5a3a-4d8b-8df2-799acb2af41f", "sourceURL": "https://kubevela.io/docs/cli/vela_def_del", "url": "https://kubevela.io/docs/cli/vela_def_del/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela Workflow Command\"?\n\nAssistant: Operate application delivery workflow.\n\nHere's a detailed explanation:\n\n\n## Synopsis\nOperate the Workflow during Application Delivery. Note that workflow command is both valid for Application Workflow and WorkflowRun(expect for [restart, rollout] command, they're only valid for Application Workflow). The command will try to find the Application first, if not found, it will try to find WorkflowRun. You can also specify the resource type by using --type flag.\n\n## Options\n```codeBlockLines_e6Vv\n  -h, --help   help for workflow\n```\n\n## Options inherited from parent commands\n```codeBlockLines_e6Vv\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n\n## SEE ALSO\n- [vela workflow debug](https://kubevela.io/docs/cli/vela_workflow_debug/) \\- Debug workflow steps\n- [vela workflow logs](https://kubevela.io/docs/cli/vela_workflow_logs/) \\- Tail logs for workflow steps\n- [vela workflow restart](https://kubevela.io/docs/cli/vela_workflow_restart/) \\- Restart a workflow.\n- [vela workflow resume](https://kubevela.io/docs/cli/vela_workflow_resume/) \\- Resume a suspend workflow.\n- [vela workflow rollback](https://kubevela.io/docs/cli/vela_workflow_rollback/) \\- Rollback an application workflow to the latest revision.\n- [vela workflow suspend](https://kubevela.io/docs/cli/vela_workflow_suspend/) \\- Suspend a workflow.\n- [vela workflow terminate](https://kubevela.io/docs/cli/vela_workflow_terminate/) \\- Terminate a workflow.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_workflow", "title": "KubeVela Workflow Command", "description": "Operate application delivery workflow.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 15:54:00", "type": "overview", "page_metadata": {"docsearch:version": "v1.10", "og:url": "https://kubevela.io/docs/cli/vela_workflow/", "docusaurus_locale": "en", "title": "vela workflow | KubeVela", "language": "en", "twitter:card": "summary_large_image", "ogDescription": "Operate application delivery workflow.", "docsearch:docusaurus_tag": "docs-default-v1.10", "docusaurus_tag": "docs-default-v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "viewport": "width=device-width, initial-scale=1.0", "ogUrl": "https://kubevela.io/docs/cli/vela_workflow/", "docsearch:language": "en", "docusaurus_version": "v1.10", "og:title": "vela workflow | KubeVela", "description": "Operate application delivery workflow.", "generator": "Docusaurus v2.4.3", "ogTitle": "vela workflow | KubeVela", "og:description": "Operate application delivery workflow.", "theme-color": "#ffffff", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "scrapeId": "675762d1-9ff8-4154-b7fb-2b75c523dfb4", "sourceURL": "https://kubevela.io/docs/cli/vela_workflow", "url": "https://kubevela.io/docs/cli/vela_workflow/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"KubeVela Workflow Command\"?\n\nAssistant: Here are some code examples:\n\n### Options\n```yaml\n```codeBlockLines_e6Vv\n  -h, --help   help for workflow\n```\n```\n\n### Options inherited from parent commands\n```yaml\n```codeBlockLines_e6Vv\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_workflow", "title": "KubeVela Workflow Command", "description": "Operate application delivery workflow.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 15:54:00", "type": "code_examples", "page_metadata": {"docsearch:version": "v1.10", "og:url": "https://kubevela.io/docs/cli/vela_workflow/", "docusaurus_locale": "en", "title": "vela workflow | KubeVela", "language": "en", "twitter:card": "summary_large_image", "ogDescription": "Operate application delivery workflow.", "docsearch:docusaurus_tag": "docs-default-v1.10", "docusaurus_tag": "docs-default-v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "viewport": "width=device-width, initial-scale=1.0", "ogUrl": "https://kubevela.io/docs/cli/vela_workflow/", "docsearch:language": "en", "docusaurus_version": "v1.10", "og:title": "vela workflow | KubeVela", "description": "Operate application delivery workflow.", "generator": "Docusaurus v2.4.3", "ogTitle": "vela workflow | KubeVela", "og:description": "Operate application delivery workflow.", "theme-color": "#ffffff", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "scrapeId": "675762d1-9ff8-4154-b7fb-2b75c523dfb4", "sourceURL": "https://kubevela.io/docs/cli/vela_workflow", "url": "https://kubevela.io/docs/cli/vela_workflow/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela Workflow Command\"?\n\nAssistant: Here are the recommended best practices:\n\n• Use the --type flag to specify the resource type when operating the workflow.\n• Assume yes for all user prompts by using the -y flag.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_workflow", "title": "KubeVela Workflow Command", "description": "Operate application delivery workflow.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 15:54:00", "type": "best_practices", "page_metadata": {"docsearch:version": "v1.10", "og:url": "https://kubevela.io/docs/cli/vela_workflow/", "docusaurus_locale": "en", "title": "vela workflow | KubeVela", "language": "en", "twitter:card": "summary_large_image", "ogDescription": "Operate application delivery workflow.", "docsearch:docusaurus_tag": "docs-default-v1.10", "docusaurus_tag": "docs-default-v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "viewport": "width=device-width, initial-scale=1.0", "ogUrl": "https://kubevela.io/docs/cli/vela_workflow/", "docsearch:language": "en", "docusaurus_version": "v1.10", "og:title": "vela workflow | KubeVela", "description": "Operate application delivery workflow.", "generator": "Docusaurus v2.4.3", "ogTitle": "vela workflow | KubeVela", "og:description": "Operate application delivery workflow.", "theme-color": "#ffffff", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "scrapeId": "675762d1-9ff8-4154-b7fb-2b75c523dfb4", "sourceURL": "https://kubevela.io/docs/cli/vela_workflow", "url": "https://kubevela.io/docs/cli/vela_workflow/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela Addon Registry\"?\n\nAssistant: Manage addon registry.\n\nHere's a detailed explanation:\n\n\n## Synopsis\nManage addon registry.\n\n## Options\n```codeBlockLines_e6Vv\n  -h, --help   help for registry\n```\n\n## Options inherited from parent commands\n```codeBlockLines_e6Vv\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n\n## SEE ALSO\n- [vela addon](https://kubevela.io/docs/cli/vela_addon/) \\- Manage addons for extension.\n- [vela addon registry add](https://kubevela.io/docs/cli/vela_addon_registry_add/) \\- Add an addon registry.\n- [vela addon registry delete](https://kubevela.io/docs/cli/vela_addon_registry_delete/) \\- Delete an addon registry\n- [vela addon registry get](https://kubevela.io/docs/cli/vela_addon_registry_get/) \\- Get an addon registry.\n- [vela addon registry list](https://kubevela.io/docs/cli/vela_addon_registry_list/) \\- List addon registries.\n- [vela addon registry update](https://kubevela.io/docs/cli/vela_addon_registry_update/) \\- Update an addon registry.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_addon_registry", "title": "KubeVela Addon Registry", "description": "Manage addon registry.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 15:54:07", "type": "overview", "page_metadata": {"title": "vela addon registry | KubeVela", "ogUrl": "https://kubevela.io/docs/cli/vela_addon_registry/", "ogTitle": "vela addon registry | KubeVela", "docusaurus_locale": "en", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_version": "v1.10", "language": "en", "ogDescription": "Manage addon registry.", "og:description": "Manage addon registry.", "viewport": "width=device-width, initial-scale=1.0", "docsearch:docusaurus_tag": "docs-default-v1.10", "theme-color": "#ffffff", "og:url": "https://kubevela.io/docs/cli/vela_addon_registry/", "twitter:card": "summary_large_image", "docsearch:language": "en", "generator": "Docusaurus v2.4.3", "og:title": "vela addon registry | KubeVela", "description": "Manage addon registry.", "docsearch:version": "v1.10", "docusaurus_tag": "docs-default-v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "scrapeId": "47ad2158-512e-4cce-b813-d3ac3a702fa7", "sourceURL": "https://kubevela.io/docs/cli/vela_addon_registry", "url": "https://kubevela.io/docs/cli/vela_addon_registry/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"KubeVela Addon Registry\"?\n\nAssistant: Here are some code examples:\n\n### Options\n```yaml\n```codeBlockLines_e6Vv\n  -h, --help   help for registry\n```\n```\n\n### Options inherited from parent commands\n```yaml\n```codeBlockLines_e6Vv\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_addon_registry", "title": "KubeVela Addon Registry", "description": "Manage addon registry.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 15:54:07", "type": "code_examples", "page_metadata": {"title": "vela addon registry | KubeVela", "ogUrl": "https://kubevela.io/docs/cli/vela_addon_registry/", "ogTitle": "vela addon registry | KubeVela", "docusaurus_locale": "en", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_version": "v1.10", "language": "en", "ogDescription": "Manage addon registry.", "og:description": "Manage addon registry.", "viewport": "width=device-width, initial-scale=1.0", "docsearch:docusaurus_tag": "docs-default-v1.10", "theme-color": "#ffffff", "og:url": "https://kubevela.io/docs/cli/vela_addon_registry/", "twitter:card": "summary_large_image", "docsearch:language": "en", "generator": "Docusaurus v2.4.3", "og:title": "vela addon registry | KubeVela", "description": "Manage addon registry.", "docsearch:version": "v1.10", "docusaurus_tag": "docs-default-v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "scrapeId": "47ad2158-512e-4cce-b813-d3ac3a702fa7", "sourceURL": "https://kubevela.io/docs/cli/vela_addon_registry", "url": "https://kubevela.io/docs/cli/vela_addon_registry/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela Addon Registry\"?\n\nAssistant: Here are the recommended best practices:\n\n• If you like KubeVela, give it a star on GitHub!\n• Check the release notes for updates and new features.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_addon_registry", "title": "KubeVela Addon Registry", "description": "Manage addon registry.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 15:54:07", "type": "best_practices", "page_metadata": {"title": "vela addon registry | KubeVela", "ogUrl": "https://kubevela.io/docs/cli/vela_addon_registry/", "ogTitle": "vela addon registry | KubeVela", "docusaurus_locale": "en", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_version": "v1.10", "language": "en", "ogDescription": "Manage addon registry.", "og:description": "Manage addon registry.", "viewport": "width=device-width, initial-scale=1.0", "docsearch:docusaurus_tag": "docs-default-v1.10", "theme-color": "#ffffff", "og:url": "https://kubevela.io/docs/cli/vela_addon_registry/", "twitter:card": "summary_large_image", "docsearch:language": "en", "generator": "Docusaurus v2.4.3", "og:title": "vela addon registry | KubeVela", "description": "Manage addon registry.", "docsearch:version": "v1.10", "docusaurus_tag": "docs-default-v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "scrapeId": "47ad2158-512e-4cce-b813-d3ac3a702fa7", "sourceURL": "https://kubevela.io/docs/cli/vela_addon_registry", "url": "https://kubevela.io/docs/cli/vela_addon_registry/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"Get definition\"?\n\nAssistant: Get definition from kubernetes cluster\n\nHere's a detailed explanation:\n\n\n## Synopsis\nGet definition from kubernetes cluster\n\n## Examples\n# Command below will get the ComponentDefinition(or other definitions if exists) of webservice in all namespaces\n> vela def get webservice\n# Command below will get the TraitDefinition of annotations in namespace vela-system\n> vela def get annotations --type trait --namespace vela-system\n\n## Options\n  -h, --help               help for get\n  -n, --namespace string   Specify which namespace the definition locates. (default \"vela-system\")\n  -r, --revision string    Get the specified version of a definition.\n      --revisions          List revisions of the specified definition.\n  -t, --type string        Specify which definition type to get. If empty, all types will be searched. Valid types: policy, workload, workflow-step, component, trait\n\n## Options inherited from parent commands\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n\n## SEE ALSO\n- [vela def](https://kubevela.io/docs/cli/vela_def/) \\- Manage definitions.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_def_get", "title": "Get definition", "description": "Get definition from kubernetes cluster", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:54:14", "type": "overview", "page_metadata": {"viewport": "width=device-width, initial-scale=1.0", "theme-color": "#ffffff", "og:title": "vela def get | KubeVela", "og:url": "https://kubevela.io/docs/cli/vela_def_get/", "docusaurus_tag": "docs-default-v1.10", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogTitle": "vela def get | KubeVela", "docusaurus_locale": "en", "docsearch:language": "en", "ogDescription": "Get definition", "docusaurus_version": "v1.10", "docsearch:docusaurus_tag": "docs-default-v1.10", "ogUrl": "https://kubevela.io/docs/cli/vela_def_get/", "description": "Get definition", "msapplication-config": "/img/favicons/browserconfig.xml", "generator": "Docusaurus v2.4.3", "title": "vela def get | KubeVela", "language": "en", "twitter:card": "summary_large_image", "docsearch:version": "v1.10", "og:description": "Get definition", "scrapeId": "52941485-7568-41ed-9838-cde83968ca82", "sourceURL": "https://kubevela.io/docs/cli/vela_def_get", "url": "https://kubevela.io/docs/cli/vela_def_get/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"Get definition\"?\n\nAssistant: Here are some code examples:\n\n### Get ComponentDefinition\n```yaml\nvela def get webservice\n```\n\n### Get TraitDefinition\n```yaml\nvela def get annotations --type trait --namespace vela-system\n```\n\n### Command Syntax\n```yaml\nvela def get NAME [flags]\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_def_get", "title": "Get definition", "description": "Get definition from kubernetes cluster", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:54:14", "type": "code_examples", "page_metadata": {"viewport": "width=device-width, initial-scale=1.0", "theme-color": "#ffffff", "og:title": "vela def get | KubeVela", "og:url": "https://kubevela.io/docs/cli/vela_def_get/", "docusaurus_tag": "docs-default-v1.10", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogTitle": "vela def get | KubeVela", "docusaurus_locale": "en", "docsearch:language": "en", "ogDescription": "Get definition", "docusaurus_version": "v1.10", "docsearch:docusaurus_tag": "docs-default-v1.10", "ogUrl": "https://kubevela.io/docs/cli/vela_def_get/", "description": "Get definition", "msapplication-config": "/img/favicons/browserconfig.xml", "generator": "Docusaurus v2.4.3", "title": "vela def get | KubeVela", "language": "en", "twitter:card": "summary_large_image", "docsearch:version": "v1.10", "og:description": "Get definition", "scrapeId": "52941485-7568-41ed-9838-cde83968ca82", "sourceURL": "https://kubevela.io/docs/cli/vela_def_get", "url": "https://kubevela.io/docs/cli/vela_def_get/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"Get definition\"?\n\nAssistant: Here are the recommended best practices:\n\n• Use the -n flag to specify the namespace for the definition you want to retrieve.\n• Utilize the --type flag to filter the definition type when necessary.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_def_get", "title": "Get definition", "description": "Get definition from kubernetes cluster", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:54:14", "type": "best_practices", "page_metadata": {"viewport": "width=device-width, initial-scale=1.0", "theme-color": "#ffffff", "og:title": "vela def get | KubeVela", "og:url": "https://kubevela.io/docs/cli/vela_def_get/", "docusaurus_tag": "docs-default-v1.10", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogTitle": "vela def get | KubeVela", "docusaurus_locale": "en", "docsearch:language": "en", "ogDescription": "Get definition", "docusaurus_version": "v1.10", "docsearch:docusaurus_tag": "docs-default-v1.10", "ogUrl": "https://kubevela.io/docs/cli/vela_def_get/", "description": "Get definition", "msapplication-config": "/img/favicons/browserconfig.xml", "generator": "Docusaurus v2.4.3", "title": "vela def get | KubeVela", "language": "en", "twitter:card": "summary_large_image", "docsearch:version": "v1.10", "og:description": "Get definition", "scrapeId": "52941485-7568-41ed-9838-cde83968ca82", "sourceURL": "https://kubevela.io/docs/cli/vela_def_get", "url": "https://kubevela.io/docs/cli/vela_def_get/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"Manage Application Revisions\"?\n\nAssistant: Manage KubeVela Application Revisions\n\nHere's a detailed explanation:\n\n\n## Synopsis\nManage KubeVela Application Revisions\n\n## Options\n```codeBlockLines_e6Vv\n  -h, --help   help for revision\n```\n\n## Options inherited from parent commands\n```codeBlockLines_e6Vv\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n\n## SEE ALSO\n- [vela revision get](https://kubevela.io/docs/cli/vela_revision_get/) \\- get specific revision of application\n- [vela revision list](https://kubevela.io/docs/cli/vela_revision_list/) \\- list application revisions\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_revision", "title": "Manage Application Revisions", "description": "Manage KubeVela Application Revisions", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 15:54:20", "type": "overview", "page_metadata": {"og:url": "https://kubevela.io/docs/cli/vela_revision/", "docsearch:docusaurus_tag": "docs-default-v1.10", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_tag": "docs-default-v1.10", "language": "en", "og:title": "vela revision | KubeVela", "ogTitle": "vela revision | KubeVela", "docusaurus_locale": "en", "twitter:card": "summary_large_image", "msapplication-config": "/img/favicons/browserconfig.xml", "docsearch:language": "en", "description": "Manage Application Revisions.", "theme-color": "#ffffff", "viewport": "width=device-width, initial-scale=1.0", "ogUrl": "https://kubevela.io/docs/cli/vela_revision/", "generator": "Docusaurus v2.4.3", "title": "vela revision | KubeVela", "ogDescription": "Manage Application Revisions.", "og:description": "Manage Application Revisions.", "docusaurus_version": "v1.10", "docsearch:version": "v1.10", "scrapeId": "2f14e878-93bf-47ad-a170-3697b32b3ba5", "sourceURL": "https://kubevela.io/docs/cli/vela_revision", "url": "https://kubevela.io/docs/cli/vela_revision/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"Manage Application Revisions\"?\n\nAssistant: Here are some code examples:\n\n### Options\n```yaml\n```codeBlockLines_e6Vv\n  -h, --help   help for revision\n```\n```\n\n### Options inherited from parent commands\n```yaml\n```codeBlockLines_e6Vv\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_revision", "title": "Manage Application Revisions", "description": "Manage KubeVela Application Revisions", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 15:54:20", "type": "code_examples", "page_metadata": {"og:url": "https://kubevela.io/docs/cli/vela_revision/", "docsearch:docusaurus_tag": "docs-default-v1.10", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_tag": "docs-default-v1.10", "language": "en", "og:title": "vela revision | KubeVela", "ogTitle": "vela revision | KubeVela", "docusaurus_locale": "en", "twitter:card": "summary_large_image", "msapplication-config": "/img/favicons/browserconfig.xml", "docsearch:language": "en", "description": "Manage Application Revisions.", "theme-color": "#ffffff", "viewport": "width=device-width, initial-scale=1.0", "ogUrl": "https://kubevela.io/docs/cli/vela_revision/", "generator": "Docusaurus v2.4.3", "title": "vela revision | KubeVela", "ogDescription": "Manage Application Revisions.", "og:description": "Manage Application Revisions.", "docusaurus_version": "v1.10", "docsearch:version": "v1.10", "scrapeId": "2f14e878-93bf-47ad-a170-3697b32b3ba5", "sourceURL": "https://kubevela.io/docs/cli/vela_revision", "url": "https://kubevela.io/docs/cli/vela_revision/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"Manage Application Revisions\"?\n\nAssistant: Here are the recommended best practices:\n\n• If you like KubeVela, give it a star on GitHub!\n• Read Release Note for version v1.10.0.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_revision", "title": "Manage Application Revisions", "description": "Manage KubeVela Application Revisions", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 15:54:20", "type": "best_practices", "page_metadata": {"og:url": "https://kubevela.io/docs/cli/vela_revision/", "docsearch:docusaurus_tag": "docs-default-v1.10", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_tag": "docs-default-v1.10", "language": "en", "og:title": "vela revision | KubeVela", "ogTitle": "vela revision | KubeVela", "docusaurus_locale": "en", "twitter:card": "summary_large_image", "msapplication-config": "/img/favicons/browserconfig.xml", "docsearch:language": "en", "description": "Manage Application Revisions.", "theme-color": "#ffffff", "viewport": "width=device-width, initial-scale=1.0", "ogUrl": "https://kubevela.io/docs/cli/vela_revision/", "generator": "Docusaurus v2.4.3", "title": "vela revision | KubeVela", "ogDescription": "Manage Application Revisions.", "og:description": "Manage Application Revisions.", "docusaurus_version": "v1.10", "docsearch:version": "v1.10", "scrapeId": "2f14e878-93bf-47ad-a170-3697b32b3ba5", "sourceURL": "https://kubevela.io/docs/cli/vela_revision", "url": "https://kubevela.io/docs/cli/vela_revision/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela CLI - Provider\"?\n\nAssistant: Authenticate terraform cloud providers by managing terraform controller providers with its credential secret.\n\nHere's a detailed explanation:\n\n\n## Synopsis\nAuthenticate terraform cloud providers by managing terraform controller providers with its credential secret.\n\n## Options\n```codeBlockLines_e6Vv\n  -h, --help   help for provider\n```\n\n## Options inherited from parent commands\n```codeBlockLines_e6Vv\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n\n## SEE ALSO\n- [vela provider list](https://kubevela.io/docs/cli/vela_provider_list/) \\- List Terraform Cloud Providers\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_provider", "title": "KubeVela CLI - Provider", "description": "Authenticate terraform cloud providers by managing terraform controller providers with its credential secret.", "has_code_examples": true, "has_best_practices": false, "section_count": 4, "timestamp": "2025-02-28 15:54:30", "type": "overview", "page_metadata": {"docusaurus_tag": "docs-default-v1.10", "docsearch:version": "v1.10", "docusaurus_version": "v1.10", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:title": "vela provider | KubeVela", "ogUrl": "https://kubevela.io/docs/cli/vela_provider/", "og:url": "https://kubevela.io/docs/cli/vela_provider/", "ogDescription": "Authenticate terraform cloud providers.", "ogTitle": "vela provider | KubeVela", "docsearch:language": "en", "description": "Authenticate terraform cloud providers.", "twitter:card": "summary_large_image", "msapplication-config": "/img/favicons/browserconfig.xml", "viewport": "width=device-width, initial-scale=1.0", "docusaurus_locale": "en", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "theme-color": "#ffffff", "language": "en", "og:description": "Authenticate terraform cloud providers.", "title": "vela provider | KubeVela", "generator": "Docusaurus v2.4.3", "scrapeId": "6767ef78-1d6c-490b-a004-ba13e4914ecc", "sourceURL": "https://kubevela.io/docs/cli/vela_provider", "url": "https://kubevela.io/docs/cli/vela_provider/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"KubeVela CLI - Provider\"?\n\nAssistant: Here are some code examples:\n\n### Options\n```yaml\n```codeBlockLines_e6Vv\n  -h, --help   help for provider\n```\n```\n\n### Options inherited from parent commands\n```yaml\n```codeBlockLines_e6Vv\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_provider", "title": "KubeVela CLI - Provider", "description": "Authenticate terraform cloud providers by managing terraform controller providers with its credential secret.", "has_code_examples": true, "has_best_practices": false, "section_count": 4, "timestamp": "2025-02-28 15:54:30", "type": "code_examples", "page_metadata": {"docusaurus_tag": "docs-default-v1.10", "docsearch:version": "v1.10", "docusaurus_version": "v1.10", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:title": "vela provider | KubeVela", "ogUrl": "https://kubevela.io/docs/cli/vela_provider/", "og:url": "https://kubevela.io/docs/cli/vela_provider/", "ogDescription": "Authenticate terraform cloud providers.", "ogTitle": "vela provider | KubeVela", "docsearch:language": "en", "description": "Authenticate terraform cloud providers.", "twitter:card": "summary_large_image", "msapplication-config": "/img/favicons/browserconfig.xml", "viewport": "width=device-width, initial-scale=1.0", "docusaurus_locale": "en", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "theme-color": "#ffffff", "language": "en", "og:description": "Authenticate terraform cloud providers.", "title": "vela provider | KubeVela", "generator": "Docusaurus v2.4.3", "scrapeId": "6767ef78-1d6c-490b-a004-ba13e4914ecc", "sourceURL": "https://kubevela.io/docs/cli/vela_provider", "url": "https://kubevela.io/docs/cli/vela_provider/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"Disable an Addon\"?\n\nAssistant: This page covers how to disable an addon in a KubeVela cluster.\n\nHere's a detailed explanation:\n\n\n## Synopsis\nDisable an addon in cluster.\n\n## Examples\n`vela addon disable <addon-name>`\n\n## Options\n  -f, --force   skip checking if applications are still using this addon\n  -h, --help    help for disable\n\n## Options inherited from parent commands\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n\n## SEE ALSO\n- [vela addon](https://kubevela.io/docs/cli/vela_addon/) - Manage addons for extension.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_addon_disable", "title": "Disable an Addon", "description": "This page covers how to disable an addon in a KubeVela cluster.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:54:39", "type": "overview", "page_metadata": {"docusaurus_version": "v1.10", "twitter:card": "summary_large_image", "og:description": "disable an addon", "ogTitle": "vela addon disable | KubeVela", "title": "vela addon disable | KubeVela", "msapplication-config": "/img/favicons/browserconfig.xml", "viewport": "width=device-width, initial-scale=1.0", "theme-color": "#ffffff", "og:url": "https://kubevela.io/docs/cli/vela_addon_disable/", "docsearch:version": "v1.10", "generator": "Docusaurus v2.4.3", "language": "en", "docusaurus_locale": "en", "ogDescription": "disable an addon", "docsearch:language": "en", "og:title": "vela addon disable | KubeVela", "docusaurus_tag": "docs-default-v1.10", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "description": "disable an addon", "ogUrl": "https://kubevela.io/docs/cli/vela_addon_disable/", "docsearch:docusaurus_tag": "docs-default-v1.10", "scrapeId": "3e01acd9-25fa-4bd6-8d35-9ee6eed722a2", "sourceURL": "https://kubevela.io/docs/cli/vela_addon_disable", "url": "https://kubevela.io/docs/cli/vela_addon_disable/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"Disable an Addon\"?\n\nAssistant: Here are some code examples:\n\n### Command to disable an addon\n```yaml\nvela addon disable [flags]\n```\n\n### Example usage\n```yaml\nvela addon disable <addon-name>\n```\n\n### Options for disabling an addon\n```yaml\n  -f, --force   skip checking if applications are still using this addon\n  -h, --help    help for disable\n```\n\n### Inherited options\n```yaml\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_addon_disable", "title": "Disable an Addon", "description": "This page covers how to disable an addon in a KubeVela cluster.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:54:39", "type": "code_examples", "page_metadata": {"docusaurus_version": "v1.10", "twitter:card": "summary_large_image", "og:description": "disable an addon", "ogTitle": "vela addon disable | KubeVela", "title": "vela addon disable | KubeVela", "msapplication-config": "/img/favicons/browserconfig.xml", "viewport": "width=device-width, initial-scale=1.0", "theme-color": "#ffffff", "og:url": "https://kubevela.io/docs/cli/vela_addon_disable/", "docsearch:version": "v1.10", "generator": "Docusaurus v2.4.3", "language": "en", "docusaurus_locale": "en", "ogDescription": "disable an addon", "docsearch:language": "en", "og:title": "vela addon disable | KubeVela", "docusaurus_tag": "docs-default-v1.10", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "description": "disable an addon", "ogUrl": "https://kubevela.io/docs/cli/vela_addon_disable/", "docsearch:docusaurus_tag": "docs-default-v1.10", "scrapeId": "3e01acd9-25fa-4bd6-8d35-9ee6eed722a2", "sourceURL": "https://kubevela.io/docs/cli/vela_addon_disable", "url": "https://kubevela.io/docs/cli/vela_addon_disable/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"Disable an Addon\"?\n\nAssistant: Here are the recommended best practices:\n\n• If you like KubeVela, give it a star on GitHub!\n• Always check if applications are using the addon before disabling it unless using the --force option.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_addon_disable", "title": "Disable an Addon", "description": "This page covers how to disable an addon in a KubeVela cluster.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:54:39", "type": "best_practices", "page_metadata": {"docusaurus_version": "v1.10", "twitter:card": "summary_large_image", "og:description": "disable an addon", "ogTitle": "vela addon disable | KubeVela", "title": "vela addon disable | KubeVela", "msapplication-config": "/img/favicons/browserconfig.xml", "viewport": "width=device-width, initial-scale=1.0", "theme-color": "#ffffff", "og:url": "https://kubevela.io/docs/cli/vela_addon_disable/", "docsearch:version": "v1.10", "generator": "Docusaurus v2.4.3", "language": "en", "docusaurus_locale": "en", "ogDescription": "disable an addon", "docsearch:language": "en", "og:title": "vela addon disable | KubeVela", "docusaurus_tag": "docs-default-v1.10", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "description": "disable an addon", "ogUrl": "https://kubevela.io/docs/cli/vela_addon_disable/", "docsearch:docusaurus_tag": "docs-default-v1.10", "scrapeId": "3e01acd9-25fa-4bd6-8d35-9ee6eed722a2", "sourceURL": "https://kubevela.io/docs/cli/vela_addon_disable", "url": "https://kubevela.io/docs/cli/vela_addon_disable/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela CLI - Distribute a Config\"?\n\nAssistant: This page provides information on how to distribute a configuration using the KubeVela CLI.\n\nHere's a detailed explanation:\n\n\n## Distribute a config\n```codeBlockLines_e6Vv\nvela config distribute [flags]\n```\n\n## Examples\n```codeBlockLines_e6Vv\n  # distribute the config(test-registry) from the vela-system namespace to the default namespace in the local cluster.\n  vela config d test-registry -t default\n\n  # distribute the config(test-registry) from the vela-system namespace to the other clusters.\n  vela config d test-registry -t cluster1/default -t cluster2/default\n\n  # recall the config\n  vela config d test-registry --recall\n```\n\n## Options\n```codeBlockLines_e6Vv\n  -h, --help                 help for distribute\n  -n, --namespace string     specify the namespace of the distribution (default \"vela-system\")\n  -r, --recall               this field means recalling the configs from all targets.\n  -t, --target stringArray   specify the targets that want to distribute,the format is: <clusterName>/<namespace>\n```\n\n## Options inherited from parent commands\n```codeBlockLines_e6Vv\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n\n## SEE ALSO\n- [vela config](https://kubevela.io/docs/cli/vela_config/) \\- Manage the configs.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_config_distribute", "title": "KubeVela CLI - Distribute a Config", "description": "This page provides information on how to distribute a configuration using the KubeVela CLI.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:54:51", "type": "overview", "page_metadata": {"ogUrl": "https://kubevela.io/docs/cli/vela_config_distribute/", "title": "vela config distribute | KubeVela", "generator": "Docusaurus v2.4.3", "docsearch:language": "en", "docusaurus_version": "v1.10", "theme-color": "#ffffff", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:title": "vela config distribute | KubeVela", "msapplication-config": "/img/favicons/browserconfig.xml", "twitter:card": "summary_large_image", "docusaurus_tag": "docs-default-v1.10", "ogTitle": "vela config distribute | KubeVela", "og:url": "https://kubevela.io/docs/cli/vela_config_distribute/", "language": "en", "docsearch:version": "v1.10", "description": "Distribute a config", "ogDescription": "Distribute a config", "viewport": "width=device-width, initial-scale=1.0", "docusaurus_locale": "en", "og:description": "Distribute a config", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "scrapeId": "c62f8ea8-a328-4cee-90df-782fa5f8bb10", "sourceURL": "https://kubevela.io/docs/cli/vela_config_distribute", "url": "https://kubevela.io/docs/cli/vela_config_distribute/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"KubeVela CLI - Distribute a Config\"?\n\nAssistant: Here are some code examples:\n\n### Distribute a config\n```yaml\nvela config distribute [flags]\n```\n\n### Examples of distributing config\n```yaml\n# distribute the config(test-registry) from the vela-system namespace to the default namespace in the local cluster.\nvela config d test-registry -t default\n\n# distribute the config(test-registry) from the vela-system namespace to the other clusters.\nvela config d test-registry -t cluster1/default -t cluster2/default\n\n# recall the config\nvela config d test-registry --recall\n```\n\n### Options for distributing config\n```yaml\n-h, --help                 help for distribute\n-n, --namespace string     specify the namespace of the distribution (default \"vela-system\")\n-r, --recall               this field means recalling the configs from all targets.\n-t, --target stringArray   specify the targets that want to distribute,the format is: <clusterName>/<namespace>\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_config_distribute", "title": "KubeVela CLI - Distribute a Config", "description": "This page provides information on how to distribute a configuration using the KubeVela CLI.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:54:51", "type": "code_examples", "page_metadata": {"ogUrl": "https://kubevela.io/docs/cli/vela_config_distribute/", "title": "vela config distribute | KubeVela", "generator": "Docusaurus v2.4.3", "docsearch:language": "en", "docusaurus_version": "v1.10", "theme-color": "#ffffff", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:title": "vela config distribute | KubeVela", "msapplication-config": "/img/favicons/browserconfig.xml", "twitter:card": "summary_large_image", "docusaurus_tag": "docs-default-v1.10", "ogTitle": "vela config distribute | KubeVela", "og:url": "https://kubevela.io/docs/cli/vela_config_distribute/", "language": "en", "docsearch:version": "v1.10", "description": "Distribute a config", "ogDescription": "Distribute a config", "viewport": "width=device-width, initial-scale=1.0", "docusaurus_locale": "en", "og:description": "Distribute a config", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "scrapeId": "c62f8ea8-a328-4cee-90df-782fa5f8bb10", "sourceURL": "https://kubevela.io/docs/cli/vela_config_distribute", "url": "https://kubevela.io/docs/cli/vela_config_distribute/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela CLI - Distribute a Config\"?\n\nAssistant: Here are the recommended best practices:\n\n• Use the -n flag to specify a different namespace if needed.\n• Utilize the --recall option to revert any distributed configurations.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_config_distribute", "title": "KubeVela CLI - Distribute a Config", "description": "This page provides information on how to distribute a configuration using the KubeVela CLI.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:54:51", "type": "best_practices", "page_metadata": {"ogUrl": "https://kubevela.io/docs/cli/vela_config_distribute/", "title": "vela config distribute | KubeVela", "generator": "Docusaurus v2.4.3", "docsearch:language": "en", "docusaurus_version": "v1.10", "theme-color": "#ffffff", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:title": "vela config distribute | KubeVela", "msapplication-config": "/img/favicons/browserconfig.xml", "twitter:card": "summary_large_image", "docusaurus_tag": "docs-default-v1.10", "ogTitle": "vela config distribute | KubeVela", "og:url": "https://kubevela.io/docs/cli/vela_config_distribute/", "language": "en", "docsearch:version": "v1.10", "description": "Distribute a config", "ogDescription": "Distribute a config", "viewport": "width=device-width, initial-scale=1.0", "docusaurus_locale": "en", "og:description": "Distribute a config", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "scrapeId": "c62f8ea8-a328-4cee-90df-782fa5f8bb10", "sourceURL": "https://kubevela.io/docs/cli/vela_config_distribute", "url": "https://kubevela.io/docs/cli/vela_config_distribute/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela CLI - Addon Package\"?\n\nAssistant: This page covers the usage of the 'vela addon package' command in KubeVela CLI, including its synopsis, examples, options, and related commands.\n\nHere's a detailed explanation:\n\n\n## Synopsis\npackage an addon directory into a helm chart archive.\n\n## Examples\n```codeBlockLines_e6Vv\nvela addon package <addon directory>\n```\n\n## Options\n```codeBlockLines_e6Vv\n  -h, --help   help for package\n```\n\n## Options inherited from parent commands\n```codeBlockLines_e6Vv\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n\n## SEE ALSO\n- [vela addon](https://kubevela.io/docs/cli/vela_addon/) \\- Manage addons for extension.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_addon_package", "title": "KubeVela CLI - Addon Package", "description": "This page covers the usage of the 'vela addon package' command in KubeVela CLI, including its synopsis, examples, options, and related commands.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:54:56", "type": "overview", "page_metadata": {"og:description": "package an addon directory", "og:title": "vela addon package | KubeVela", "viewport": "width=device-width, initial-scale=1.0", "docusaurus_tag": "docs-default-v1.10", "docsearch:version": "v1.10", "ogUrl": "https://kubevela.io/docs/cli/vela_addon_package/", "language": "en", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogTitle": "vela addon package | KubeVela", "generator": "Docusaurus v2.4.3", "og:url": "https://kubevela.io/docs/cli/vela_addon_package/", "title": "vela addon package | KubeVela", "docsearch:language": "en", "description": "package an addon directory", "theme-color": "#ffffff", "docsearch:docusaurus_tag": "docs-default-v1.10", "twitter:card": "summary_large_image", "docusaurus_locale": "en", "ogDescription": "package an addon directory", "msapplication-config": "/img/favicons/browserconfig.xml", "docusaurus_version": "v1.10", "scrapeId": "09f13cc3-2427-4984-8905-d7a4f0f95269", "sourceURL": "https://kubevela.io/docs/cli/vela_addon_package", "url": "https://kubevela.io/docs/cli/vela_addon_package/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"KubeVela CLI - Addon Package\"?\n\nAssistant: Here are some code examples:\n\n### Command to package an addon directory\n```yaml\nvela addon package <addon directory>\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_addon_package", "title": "KubeVela CLI - Addon Package", "description": "This page covers the usage of the 'vela addon package' command in KubeVela CLI, including its synopsis, examples, options, and related commands.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:54:56", "type": "code_examples", "page_metadata": {"og:description": "package an addon directory", "og:title": "vela addon package | KubeVela", "viewport": "width=device-width, initial-scale=1.0", "docusaurus_tag": "docs-default-v1.10", "docsearch:version": "v1.10", "ogUrl": "https://kubevela.io/docs/cli/vela_addon_package/", "language": "en", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogTitle": "vela addon package | KubeVela", "generator": "Docusaurus v2.4.3", "og:url": "https://kubevela.io/docs/cli/vela_addon_package/", "title": "vela addon package | KubeVela", "docsearch:language": "en", "description": "package an addon directory", "theme-color": "#ffffff", "docsearch:docusaurus_tag": "docs-default-v1.10", "twitter:card": "summary_large_image", "docusaurus_locale": "en", "ogDescription": "package an addon directory", "msapplication-config": "/img/favicons/browserconfig.xml", "docusaurus_version": "v1.10", "scrapeId": "09f13cc3-2427-4984-8905-d7a4f0f95269", "sourceURL": "https://kubevela.io/docs/cli/vela_addon_package", "url": "https://kubevela.io/docs/cli/vela_addon_package/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela CLI - Addon Package\"?\n\nAssistant: Here are the recommended best practices:\n\n• If you like KubeVela, give it a star on GitHub!\n• KubeVela v1.10.0 is now available.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_addon_package", "title": "KubeVela CLI - Addon Package", "description": "This page covers the usage of the 'vela addon package' command in KubeVela CLI, including its synopsis, examples, options, and related commands.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 15:54:56", "type": "best_practices", "page_metadata": {"og:description": "package an addon directory", "og:title": "vela addon package | KubeVela", "viewport": "width=device-width, initial-scale=1.0", "docusaurus_tag": "docs-default-v1.10", "docsearch:version": "v1.10", "ogUrl": "https://kubevela.io/docs/cli/vela_addon_package/", "language": "en", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogTitle": "vela addon package | KubeVela", "generator": "Docusaurus v2.4.3", "og:url": "https://kubevela.io/docs/cli/vela_addon_package/", "title": "vela addon package | KubeVela", "docsearch:language": "en", "description": "package an addon directory", "theme-color": "#ffffff", "docsearch:docusaurus_tag": "docs-default-v1.10", "twitter:card": "summary_large_image", "docusaurus_locale": "en", "ogDescription": "package an addon directory", "msapplication-config": "/img/favicons/browserconfig.xml", "docusaurus_version": "v1.10", "scrapeId": "09f13cc3-2427-4984-8905-d7a4f0f95269", "sourceURL": "https://kubevela.io/docs/cli/vela_addon_package", "url": "https://kubevela.io/docs/cli/vela_addon_package/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"vela revision list\"?\n\nAssistant: list Kubevela application revisions\n\nHere's a detailed explanation:\n\n\n## Synopsis\nlist Kubevela application revisions\n\n## Options\n```codeBlockLines_e6Vv\n  -e, --env string         specify environment name for application\n  -h, --help               help for list\n  -n, --namespace string   specify the Kubernetes namespace to use\n```\n\n## Options inherited from parent commands\n```codeBlockLines_e6Vv\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n\n## SEE ALSO\n- [vela revision](https://kubevela.io/docs/cli/vela_revision/) \\- Manage Application Revisions.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_revision_list", "title": "vela revision list", "description": "list Kubevela application revisions", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 15:55:06", "type": "overview", "page_metadata": {"viewport": "width=device-width, initial-scale=1.0", "ogUrl": "https://kubevela.io/docs/cli/vela_revision_list/", "og:description": "list application revisions", "language": "en", "docsearch:version": "v1.10", "ogTitle": "vela revision list | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docsearch:language": "en", "msapplication-config": "/img/favicons/browserconfig.xml", "generator": "Docusaurus v2.4.3", "og:title": "vela revision list | KubeVela", "twitter:card": "summary_large_image", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:url": "https://kubevela.io/docs/cli/vela_revision_list/", "docusaurus_locale": "en", "ogDescription": "list application revisions", "docusaurus_tag": "docs-default-v1.10", "title": "vela revision list | KubeVela", "docusaurus_version": "v1.10", "description": "list application revisions", "theme-color": "#ffffff", "scrapeId": "05111d24-afd6-4b0c-82ad-6ff950dd4e75", "sourceURL": "https://kubevela.io/docs/cli/vela_revision_list", "url": "https://kubevela.io/docs/cli/vela_revision_list/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"vela revision list\"?\n\nAssistant: Here are some code examples:\n\n### Command to list application revisions\n```yaml\nvela revision list [flags]\n```\n\n### Options for listing revisions\n```yaml\n  -e, --env string         specify environment name for application\n  -h, --help               help for list\n  -n, --namespace string   specify the Kubernetes namespace to use\n```\n\n### Inherited options from parent commands\n```yaml\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_revision_list", "title": "vela revision list", "description": "list Kubevela application revisions", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 15:55:06", "type": "code_examples", "page_metadata": {"viewport": "width=device-width, initial-scale=1.0", "ogUrl": "https://kubevela.io/docs/cli/vela_revision_list/", "og:description": "list application revisions", "language": "en", "docsearch:version": "v1.10", "ogTitle": "vela revision list | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docsearch:language": "en", "msapplication-config": "/img/favicons/browserconfig.xml", "generator": "Docusaurus v2.4.3", "og:title": "vela revision list | KubeVela", "twitter:card": "summary_large_image", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:url": "https://kubevela.io/docs/cli/vela_revision_list/", "docusaurus_locale": "en", "ogDescription": "list application revisions", "docusaurus_tag": "docs-default-v1.10", "title": "vela revision list | KubeVela", "docusaurus_version": "v1.10", "description": "list application revisions", "theme-color": "#ffffff", "scrapeId": "05111d24-afd6-4b0c-82ad-6ff950dd4e75", "sourceURL": "https://kubevela.io/docs/cli/vela_revision_list", "url": "https://kubevela.io/docs/cli/vela_revision_list/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"vela revision list\"?\n\nAssistant: Here are the recommended best practices:\n\n• If you like KubeVela, give it a star on GitHub!\n• Check the release notes for the latest updates.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_revision_list", "title": "vela revision list", "description": "list Kubevela application revisions", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 15:55:06", "type": "best_practices", "page_metadata": {"viewport": "width=device-width, initial-scale=1.0", "ogUrl": "https://kubevela.io/docs/cli/vela_revision_list/", "og:description": "list application revisions", "language": "en", "docsearch:version": "v1.10", "ogTitle": "vela revision list | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docsearch:language": "en", "msapplication-config": "/img/favicons/browserconfig.xml", "generator": "Docusaurus v2.4.3", "og:title": "vela revision list | KubeVela", "twitter:card": "summary_large_image", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:url": "https://kubevela.io/docs/cli/vela_revision_list/", "docusaurus_locale": "en", "ogDescription": "list application revisions", "docusaurus_tag": "docs-default-v1.10", "title": "vela revision list | KubeVela", "docusaurus_version": "v1.10", "description": "list application revisions", "theme-color": "#ffffff", "scrapeId": "05111d24-afd6-4b0c-82ad-6ff950dd4e75", "sourceURL": "https://kubevela.io/docs/cli/vela_revision_list", "url": "https://kubevela.io/docs/cli/vela_revision_list/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"Manage Kubernetes Clusters\"?\n\nAssistant: Manage Kubernetes clusters for continuous delivery.\n\nHere's a detailed explanation:\n\n\n## Synopsis\nManage Kubernetes clusters for continuous delivery.\n\n## Options\n```codeBlockLines_e6Vv\n  -h, --help   help for cluster\n```\n\n## Options inherited from parent commands\n```codeBlockLines_e6Vv\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n\n## SEE ALSO\n- [vela cluster alias](https://kubevela.io/docs/cli/vela_cluster_alias/) \\- alias a named cluster.\n- [vela cluster detach](https://kubevela.io/docs/cli/vela_cluster_detach/) \\- detach managed cluster.\n- [vela cluster export-config](https://kubevela.io/docs/cli/vela_cluster_export-config/) \\- Export multi-cluster kubeconfig.\n- [vela cluster join](https://kubevela.io/docs/cli/vela_cluster_join/) \\- join managed cluster.\n- [vela cluster labels](https://kubevela.io/docs/cli/vela_cluster_labels/) \\- Manage Kubernetes Cluster Labels.\n- [vela cluster list](https://kubevela.io/docs/cli/vela_cluster_list/) \\- list managed clusters.\n- [vela cluster probe](https://kubevela.io/docs/cli/vela_cluster_probe/) \\- health probe managed cluster.\n- [vela cluster rename](https://kubevela.io/docs/cli/vela_cluster_rename/) \\- rename managed cluster.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_cluster", "title": "Manage Kubernetes Clusters", "description": "Manage Kubernetes clusters for continuous delivery.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 15:55:15", "type": "overview", "page_metadata": {"ogUrl": "https://kubevela.io/docs/cli/vela_cluster/", "twitter:card": "summary_large_image", "description": "Manage Kubernetes clusters.", "theme-color": "#ffffff", "ogTitle": "vela cluster | KubeVela", "docsearch:docusaurus_tag": "docs-default-v1.10", "docusaurus_tag": "docs-default-v1.10", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "msapplication-config": "/img/favicons/browserconfig.xml", "og:title": "vela cluster | KubeVela", "og:url": "https://kubevela.io/docs/cli/vela_cluster/", "viewport": "width=device-width, initial-scale=1.0", "language": "en", "docusaurus_locale": "en", "docsearch:language": "en", "docusaurus_version": "v1.10", "docsearch:version": "v1.10", "generator": "Docusaurus v2.4.3", "title": "vela cluster | KubeVela", "og:description": "Manage Kubernetes clusters.", "ogDescription": "Manage Kubernetes clusters.", "scrapeId": "d263c1f0-9824-42cd-b721-863e63ebb1a1", "sourceURL": "https://kubevela.io/docs/cli/vela_cluster", "url": "https://kubevela.io/docs/cli/vela_cluster/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"Manage Kubernetes Clusters\"?\n\nAssistant: Here are some code examples:\n\n### Options\n```yaml\n```codeBlockLines_e6Vv\n  -h, --help   help for cluster\n```\n```\n\n### Options inherited from parent commands\n```yaml\n```codeBlockLines_e6Vv\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_cluster", "title": "Manage Kubernetes Clusters", "description": "Manage Kubernetes clusters for continuous delivery.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 15:55:15", "type": "code_examples", "page_metadata": {"ogUrl": "https://kubevela.io/docs/cli/vela_cluster/", "twitter:card": "summary_large_image", "description": "Manage Kubernetes clusters.", "theme-color": "#ffffff", "ogTitle": "vela cluster | KubeVela", "docsearch:docusaurus_tag": "docs-default-v1.10", "docusaurus_tag": "docs-default-v1.10", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "msapplication-config": "/img/favicons/browserconfig.xml", "og:title": "vela cluster | KubeVela", "og:url": "https://kubevela.io/docs/cli/vela_cluster/", "viewport": "width=device-width, initial-scale=1.0", "language": "en", "docusaurus_locale": "en", "docsearch:language": "en", "docusaurus_version": "v1.10", "docsearch:version": "v1.10", "generator": "Docusaurus v2.4.3", "title": "vela cluster | KubeVela", "og:description": "Manage Kubernetes clusters.", "ogDescription": "Manage Kubernetes clusters.", "scrapeId": "d263c1f0-9824-42cd-b721-863e63ebb1a1", "sourceURL": "https://kubevela.io/docs/cli/vela_cluster", "url": "https://kubevela.io/docs/cli/vela_cluster/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"Manage Kubernetes Clusters\"?\n\nAssistant: Here are the recommended best practices:\n\n• If you like KubeVela, give it a star on GitHub!\n• Check the release notes for the latest updates.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_cluster", "title": "Manage Kubernetes Clusters", "description": "Manage Kubernetes clusters for continuous delivery.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 15:55:15", "type": "best_practices", "page_metadata": {"ogUrl": "https://kubevela.io/docs/cli/vela_cluster/", "twitter:card": "summary_large_image", "description": "Manage Kubernetes clusters.", "theme-color": "#ffffff", "ogTitle": "vela cluster | KubeVela", "docsearch:docusaurus_tag": "docs-default-v1.10", "docusaurus_tag": "docs-default-v1.10", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "msapplication-config": "/img/favicons/browserconfig.xml", "og:title": "vela cluster | KubeVela", "og:url": "https://kubevela.io/docs/cli/vela_cluster/", "viewport": "width=device-width, initial-scale=1.0", "language": "en", "docusaurus_locale": "en", "docsearch:language": "en", "docusaurus_version": "v1.10", "docsearch:version": "v1.10", "generator": "Docusaurus v2.4.3", "title": "vela cluster | KubeVela", "og:description": "Manage Kubernetes clusters.", "ogDescription": "Manage Kubernetes clusters.", "scrapeId": "d263c1f0-9824-42cd-b721-863e63ebb1a1", "sourceURL": "https://kubevela.io/docs/cli/vela_cluster", "url": "https://kubevela.io/docs/cli/vela_cluster/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"Update an Addon Registry\"?\n\nAssistant: This page covers how to update an addon registry in KubeVela.\n\nHere's a detailed explanation:\n\n\n## Synopsis\nUpdate an addon registry.\n\n## Examples\n`vela addon registry update <registry-name> --type OSS --endpoint=<URL> --bucket=<bucket name>`\n\n## Options\n`--bucket string           specify the OSS bucket name\n--endpoint string         specify the addon registry endpoint\n--gitToken string         specify the github repo token\n--gitlabRepoName string   specify the gitlab addon registry repoName, must be set when registry is gitlab\n-h, --help                    help for update\n--insecureSkipTLS         specify the Helm addon registry skip tls verify\n--password string         specify the Helm addon registry password\n--path string             specify the addon registry path, must be set when addons are not in root of registry\n--type string             specify the addon registry type\n--username string         specify the Helm addon registry username\n`\n\n## Options inherited from parent commands\n`-V, --verbosity Level   number for the log level verbosity\n-y, --yes               Assume yes for all user prompts\n`\n\n## SEE ALSO\n- [vela addon registry](https://kubevela.io/docs/cli/vela_addon_registry/) - Manage addon registry.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_addon_registry_update", "title": "Update an Addon Registry", "description": "This page covers how to update an addon registry in KubeVela.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 16:05:27", "type": "overview", "page_metadata": {"ogUrl": "https://kubevela.io/docs/cli/vela_addon_registry_update/", "og:url": "https://kubevela.io/docs/cli/vela_addon_registry_update/", "generator": "Docusaurus v2.4.3", "language": "en", "msapplication-config": "/img/favicons/browserconfig.xml", "twitter:card": "summary_large_image", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:title": "vela addon registry update | KubeVela", "docusaurus_locale": "en", "docusaurus_tag": "docs-default-v1.10", "ogTitle": "vela addon registry update | KubeVela", "title": "vela addon registry update | KubeVela", "og:description": "Update an addon registry.", "docsearch:language": "en", "description": "Update an addon registry.", "docusaurus_version": "v1.10", "theme-color": "#ffffff", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docsearch:version": "v1.10", "ogDescription": "Update an addon registry.", "viewport": "width=device-width, initial-scale=1.0", "scrapeId": "cefe07e5-3fc0-4afb-938d-ab863f12124c", "sourceURL": "https://kubevela.io/docs/cli/vela_addon_registry_update", "url": "https://kubevela.io/docs/cli/vela_addon_registry_update/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"Update an Addon Registry\"?\n\nAssistant: Here are some code examples:\n\n### Command to Update Addon Registry\n```yaml\nvela addon registry update <registry-name> --type OSS --endpoint=<URL> --bucket=<bucket name>\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_addon_registry_update", "title": "Update an Addon Registry", "description": "This page covers how to update an addon registry in KubeVela.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 16:05:27", "type": "code_examples", "page_metadata": {"ogUrl": "https://kubevela.io/docs/cli/vela_addon_registry_update/", "og:url": "https://kubevela.io/docs/cli/vela_addon_registry_update/", "generator": "Docusaurus v2.4.3", "language": "en", "msapplication-config": "/img/favicons/browserconfig.xml", "twitter:card": "summary_large_image", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:title": "vela addon registry update | KubeVela", "docusaurus_locale": "en", "docusaurus_tag": "docs-default-v1.10", "ogTitle": "vela addon registry update | KubeVela", "title": "vela addon registry update | KubeVela", "og:description": "Update an addon registry.", "docsearch:language": "en", "description": "Update an addon registry.", "docusaurus_version": "v1.10", "theme-color": "#ffffff", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docsearch:version": "v1.10", "ogDescription": "Update an addon registry.", "viewport": "width=device-width, initial-scale=1.0", "scrapeId": "cefe07e5-3fc0-4afb-938d-ab863f12124c", "sourceURL": "https://kubevela.io/docs/cli/vela_addon_registry_update", "url": "https://kubevela.io/docs/cli/vela_addon_registry_update/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"Update an Addon Registry\"?\n\nAssistant: Here are the recommended best practices:\n\n• Use the `--help` option to get more information about the command and its options.\n• Ensure that you have the correct permissions and tokens when updating the registry.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_addon_registry_update", "title": "Update an Addon Registry", "description": "This page covers how to update an addon registry in KubeVela.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 16:05:27", "type": "best_practices", "page_metadata": {"ogUrl": "https://kubevela.io/docs/cli/vela_addon_registry_update/", "og:url": "https://kubevela.io/docs/cli/vela_addon_registry_update/", "generator": "Docusaurus v2.4.3", "language": "en", "msapplication-config": "/img/favicons/browserconfig.xml", "twitter:card": "summary_large_image", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:title": "vela addon registry update | KubeVela", "docusaurus_locale": "en", "docusaurus_tag": "docs-default-v1.10", "ogTitle": "vela addon registry update | KubeVela", "title": "vela addon registry update | KubeVela", "og:description": "Update an addon registry.", "docsearch:language": "en", "description": "Update an addon registry.", "docusaurus_version": "v1.10", "theme-color": "#ffffff", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docsearch:version": "v1.10", "ogDescription": "Update an addon registry.", "viewport": "width=device-width, initial-scale=1.0", "scrapeId": "cefe07e5-3fc0-4afb-938d-ab863f12124c", "sourceURL": "https://kubevela.io/docs/cli/vela_addon_registry_update", "url": "https://kubevela.io/docs/cli/vela_addon_registry_update/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela CLI - Component\"?\n\nAssistant: This page provides information on how to list and get components using the KubeVela CLI.\n\nHere's a detailed explanation:\n\n\n## List/get components\nList component types installed and discover more in registry.\n\n## Synopsis\n`vela component [flags]`\n\n## Examples\n`vela comp`\n\n## Options\n```\n      --discover                       discover traits in registries\n  -h, --help                           help for component\n      --label --label type=terraform   a label to filter components, the format is --label type=terraform\n      --registry string                specify the registry name (default \"default\")\n      --token string                   specify token when using --url to specify registry url\n      --url string                     specify the registry URL\n```\n\n## Options inherited from parent commands\n```\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n\n## SEE ALSO\n- [vela component get](https://kubevela.io/docs/cli/vela_component_get/) \\- get component from registry\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_component", "title": "KubeVela CLI - Component", "description": "This page provides information on how to list and get components using the KubeVela CLI.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-02-28 16:05:34", "type": "overview", "page_metadata": {"og:description": "List/get components.", "og:title": "vela component | KubeVela", "docsearch:version": "v1.10", "theme-color": "#ffffff", "docusaurus_locale": "en", "ogUrl": "https://kubevela.io/docs/cli/vela_component/", "og:url": "https://kubevela.io/docs/cli/vela_component/", "language": "en", "msapplication-config": "/img/favicons/browserconfig.xml", "docusaurus_tag": "docs-default-v1.10", "viewport": "width=device-width, initial-scale=1.0", "ogDescription": "List/get components.", "docsearch:docusaurus_tag": "docs-default-v1.10", "title": "vela component | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_version": "v1.10", "ogTitle": "vela component | KubeVela", "generator": "Docusaurus v2.4.3", "twitter:card": "summary_large_image", "docsearch:language": "en", "description": "List/get components.", "scrapeId": "cc418a12-cb87-46d5-871b-22634761a9d4", "sourceURL": "https://kubevela.io/docs/cli/vela_component", "url": "https://kubevela.io/docs/cli/vela_component/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"KubeVela CLI - Component\"?\n\nAssistant: Here are some code examples:\n\n### Synopsis Example\n```yaml\nvela component [flags]\n```\n\n### Example Command\n```yaml\nvela comp\n```\n\n### Options Example\n```yaml\n--discover                       discover traits in registries\n-h, --help                           help for component\n--label --label type=terraform   a label to filter components, the format is --label type=terraform\n--registry string                specify the registry name (default \"default\")\n--token string                   specify token when using --url to specify registry url\n--url string                     specify the registry URL\n```\n\n### Inherited Options Example\n```yaml\n-V, --verbosity Level   number for the log level verbosity\n-y, --yes               Assume yes for all user prompts\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_component", "title": "KubeVela CLI - Component", "description": "This page provides information on how to list and get components using the KubeVela CLI.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-02-28 16:05:34", "type": "code_examples", "page_metadata": {"og:description": "List/get components.", "og:title": "vela component | KubeVela", "docsearch:version": "v1.10", "theme-color": "#ffffff", "docusaurus_locale": "en", "ogUrl": "https://kubevela.io/docs/cli/vela_component/", "og:url": "https://kubevela.io/docs/cli/vela_component/", "language": "en", "msapplication-config": "/img/favicons/browserconfig.xml", "docusaurus_tag": "docs-default-v1.10", "viewport": "width=device-width, initial-scale=1.0", "ogDescription": "List/get components.", "docsearch:docusaurus_tag": "docs-default-v1.10", "title": "vela component | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_version": "v1.10", "ogTitle": "vela component | KubeVela", "generator": "Docusaurus v2.4.3", "twitter:card": "summary_large_image", "docsearch:language": "en", "description": "List/get components.", "scrapeId": "cc418a12-cb87-46d5-871b-22634761a9d4", "sourceURL": "https://kubevela.io/docs/cli/vela_component", "url": "https://kubevela.io/docs/cli/vela_component/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela CLI - Component\"?\n\nAssistant: Here are the recommended best practices:\n\n• Use the `--discover` option to find traits in registries.\n• Utilize the `--label` option to filter components effectively.\n• Always check the help option `-h` for additional command information.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_component", "title": "KubeVela CLI - Component", "description": "This page provides information on how to list and get components using the KubeVela CLI.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-02-28 16:05:34", "type": "best_practices", "page_metadata": {"og:description": "List/get components.", "og:title": "vela component | KubeVela", "docsearch:version": "v1.10", "theme-color": "#ffffff", "docusaurus_locale": "en", "ogUrl": "https://kubevela.io/docs/cli/vela_component/", "og:url": "https://kubevela.io/docs/cli/vela_component/", "language": "en", "msapplication-config": "/img/favicons/browserconfig.xml", "docusaurus_tag": "docs-default-v1.10", "viewport": "width=device-width, initial-scale=1.0", "ogDescription": "List/get components.", "docsearch:docusaurus_tag": "docs-default-v1.10", "title": "vela component | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_version": "v1.10", "ogTitle": "vela component | KubeVela", "generator": "Docusaurus v2.4.3", "twitter:card": "summary_large_image", "docsearch:language": "en", "description": "List/get components.", "scrapeId": "cc418a12-cb87-46d5-871b-22634761a9d4", "sourceURL": "https://kubevela.io/docs/cli/vela_component", "url": "https://kubevela.io/docs/cli/vela_component/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"Manage System\"?\n\nAssistant: Manage system, including printing the system deployment information in vela-system namespace and diagnosing the system's health.\n\nHere's a detailed explanation:\n\n\n## Synopsis\nManage system, including printing the system deployment information in vela-system namespace and diagnosing the system's health.\n\n## Examples\n```codeBlockLines_e6Vv\n# Check all deployments information in all namespaces with label app.kubernetes.io/name=vela-core :\n> vela system info\n# Specify a deployment name with a namespace to check detail information:\n> vela system info -s kubevela-vela-core -n vela-system\n# Diagnose the system's health:\n> vela system diagnose\n```\n\n## Options\n```codeBlockLines_e6Vv\n  -h, --help   help for system\n```\n\n## Options inherited from parent commands\n```codeBlockLines_e6Vv\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n\n## SEE ALSO\n- [vela system diagnose](https://kubevela.io/docs/cli/vela_system_diagnose/) \\- Diagnoses system problems.\n- [vela system info](https://kubevela.io/docs/cli/vela_system_info/) \\- Print the system deployment detail information in all namespaces with label app.kubernetes.io/name=vela-core.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_system", "title": "Manage System", "description": "Manage system, including printing the system deployment information in vela-system namespace and diagnosing the system's health.", "has_code_examples": true, "has_best_practices": false, "section_count": 5, "timestamp": "2025-02-28 16:05:56", "type": "overview", "page_metadata": {"og:url": "https://kubevela.io/docs/cli/vela_system/", "msapplication-config": "/img/favicons/browserconfig.xml", "generator": "Docusaurus v2.4.3", "theme-color": "#ffffff", "title": "vela system | KubeVela", "docsearch:version": "v1.10", "ogUrl": "https://kubevela.io/docs/cli/vela_system/", "docusaurus_tag": "docs-default-v1.10", "docusaurus_version": "v1.10", "ogTitle": "vela system | KubeVela", "twitter:card": "summary_large_image", "og:title": "vela system | KubeVela", "description": "Manage system.", "docsearch:language": "en", "language": "en", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:description": "Manage system.", "ogDescription": "Manage system.", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "viewport": "width=device-width, initial-scale=1.0", "docusaurus_locale": "en", "scrapeId": "12ab636e-3f24-46c6-92f5-4ce2ecc3d92d", "sourceURL": "https://kubevela.io/docs/cli/vela_system", "url": "https://kubevela.io/docs/cli/vela_system/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"Manage System\"?\n\nAssistant: Here are some code examples:\n\n### Examples\n```yaml\n```codeBlockLines_e6Vv\n# Check all deployments information in all namespaces with label app.kubernetes.io/name=vela-core :\n> vela system info\n# Specify a deployment name with a namespace to check detail information:\n> vela system info -s kubevela-vela-core -n vela-system\n# Diagnose the system's health:\n> vela system diagnose\n```\n```\n\n### Options\n```yaml\n```codeBlockLines_e6Vv\n  -h, --help   help for system\n```\n```\n\n### Options inherited from parent commands\n```yaml\n```codeBlockLines_e6Vv\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_system", "title": "Manage System", "description": "Manage system, including printing the system deployment information in vela-system namespace and diagnosing the system's health.", "has_code_examples": true, "has_best_practices": false, "section_count": 5, "timestamp": "2025-02-28 16:05:56", "type": "code_examples", "page_metadata": {"og:url": "https://kubevela.io/docs/cli/vela_system/", "msapplication-config": "/img/favicons/browserconfig.xml", "generator": "Docusaurus v2.4.3", "theme-color": "#ffffff", "title": "vela system | KubeVela", "docsearch:version": "v1.10", "ogUrl": "https://kubevela.io/docs/cli/vela_system/", "docusaurus_tag": "docs-default-v1.10", "docusaurus_version": "v1.10", "ogTitle": "vela system | KubeVela", "twitter:card": "summary_large_image", "og:title": "vela system | KubeVela", "description": "Manage system.", "docsearch:language": "en", "language": "en", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:description": "Manage system.", "ogDescription": "Manage system.", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "viewport": "width=device-width, initial-scale=1.0", "docusaurus_locale": "en", "scrapeId": "12ab636e-3f24-46c6-92f5-4ce2ecc3d92d", "sourceURL": "https://kubevela.io/docs/cli/vela_system", "url": "https://kubevela.io/docs/cli/vela_system/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"Manage Registry\"?\n\nAssistant: Manage Registry of X-Definitions for extension.\n\nHere's a detailed explanation:\n\n\n## Synopsis\nManage Registry of X-Definitions for extension.\n\n## Options\n```codeBlockLines_e6Vv\n  -h, --help   help for registry\n```\n\n## Options inherited from parent commands\n```codeBlockLines_e6Vv\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n\n## SEE ALSO\n- [vela registry config](https://kubevela.io/docs/cli/vela_registry_config/) \\- Configure (add if not exist) a registry, default is local (built-in capabilities)\n- [vela registry ls](https://kubevela.io/docs/cli/vela_registry_ls/) \\- List all registry\n- [vela registry remove](https://kubevela.io/docs/cli/vela_registry_remove/) \\- Remove specified registry\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_registry", "title": "Manage Registry", "description": "Manage Registry of X-Definitions for extension.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 16:06:03", "type": "overview", "page_metadata": {"ogDescription": "Manage Registry", "og:description": "Manage Registry", "docusaurus_version": "v1.10", "docusaurus_locale": "en", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docsearch:docusaurus_tag": "docs-default-v1.10", "twitter:card": "summary_large_image", "title": "vela registry | KubeVela", "og:title": "vela registry | KubeVela", "description": "Manage Registry", "language": "en", "msapplication-config": "/img/favicons/browserconfig.xml", "docsearch:version": "v1.10", "viewport": "width=device-width, initial-scale=1.0", "theme-color": "#ffffff", "ogTitle": "vela registry | KubeVela", "docsearch:language": "en", "og:url": "https://kubevela.io/docs/cli/vela_registry/", "docusaurus_tag": "docs-default-v1.10", "ogUrl": "https://kubevela.io/docs/cli/vela_registry/", "generator": "Docusaurus v2.4.3", "scrapeId": "c12202fb-643a-47bf-a9b9-8d889dde1e79", "sourceURL": "https://kubevela.io/docs/cli/vela_registry", "url": "https://kubevela.io/docs/cli/vela_registry/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"Manage Registry\"?\n\nAssistant: Here are some code examples:\n\n### Options\n```yaml\n```codeBlockLines_e6Vv\n  -h, --help   help for registry\n```\n```\n\n### Options inherited from parent commands\n```yaml\n```codeBlockLines_e6Vv\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_registry", "title": "Manage Registry", "description": "Manage Registry of X-Definitions for extension.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 16:06:03", "type": "code_examples", "page_metadata": {"ogDescription": "Manage Registry", "og:description": "Manage Registry", "docusaurus_version": "v1.10", "docusaurus_locale": "en", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docsearch:docusaurus_tag": "docs-default-v1.10", "twitter:card": "summary_large_image", "title": "vela registry | KubeVela", "og:title": "vela registry | KubeVela", "description": "Manage Registry", "language": "en", "msapplication-config": "/img/favicons/browserconfig.xml", "docsearch:version": "v1.10", "viewport": "width=device-width, initial-scale=1.0", "theme-color": "#ffffff", "ogTitle": "vela registry | KubeVela", "docsearch:language": "en", "og:url": "https://kubevela.io/docs/cli/vela_registry/", "docusaurus_tag": "docs-default-v1.10", "ogUrl": "https://kubevela.io/docs/cli/vela_registry/", "generator": "Docusaurus v2.4.3", "scrapeId": "c12202fb-643a-47bf-a9b9-8d889dde1e79", "sourceURL": "https://kubevela.io/docs/cli/vela_registry", "url": "https://kubevela.io/docs/cli/vela_registry/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"Manage Registry\"?\n\nAssistant: Here are the recommended best practices:\n\n• If you like KubeVela, give it a star on GitHub!\n• KubeVela v1.10.0 is now available.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_registry", "title": "Manage Registry", "description": "Manage Registry of X-Definitions for extension.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 16:06:03", "type": "best_practices", "page_metadata": {"ogDescription": "Manage Registry", "og:description": "Manage Registry", "docusaurus_version": "v1.10", "docusaurus_locale": "en", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docsearch:docusaurus_tag": "docs-default-v1.10", "twitter:card": "summary_large_image", "title": "vela registry | KubeVela", "og:title": "vela registry | KubeVela", "description": "Manage Registry", "language": "en", "msapplication-config": "/img/favicons/browserconfig.xml", "docsearch:version": "v1.10", "viewport": "width=device-width, initial-scale=1.0", "theme-color": "#ffffff", "ogTitle": "vela registry | KubeVela", "docsearch:language": "en", "og:url": "https://kubevela.io/docs/cli/vela_registry/", "docusaurus_tag": "docs-default-v1.10", "ogUrl": "https://kubevela.io/docs/cli/vela_registry/", "generator": "Docusaurus v2.4.3", "scrapeId": "c12202fb-643a-47bf-a9b9-8d889dde1e79", "sourceURL": "https://kubevela.io/docs/cli/vela_registry", "url": "https://kubevela.io/docs/cli/vela_registry/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"Delete an addon registry\"?\n\nAssistant: This page provides information on how to delete an addon registry using the KubeVela CLI.\n\nHere's a detailed explanation:\n\n\n## Synopsis\nDelete an addon registry\n\n## Examples\n`vela addon registry delete <registry-name>`\n\n## Options\n`  -h, --help   help for delete`\n\n## Options inherited from parent commands\n`  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts`\n\n## SEE ALSO\n- [vela addon registry](https://kubevela.io/docs/cli/vela_addon_registry/) - Manage addon registry.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_addon_registry_delete", "title": "Delete an addon registry", "description": "This page provides information on how to delete an addon registry using the KubeVela CLI.", "has_code_examples": true, "has_best_practices": false, "section_count": 5, "timestamp": "2025-02-28 16:06:13", "type": "overview", "page_metadata": {"viewport": "width=device-width, initial-scale=1.0", "title": "vela addon registry delete | KubeVela", "docusaurus_version": "v1.10", "docsearch:language": "en", "theme-color": "#ffffff", "ogTitle": "vela addon registry delete | KubeVela", "docsearch:version": "v1.10", "generator": "Docusaurus v2.4.3", "ogUrl": "https://kubevela.io/docs/cli/vela_addon_registry_delete/", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:description": "Delete an addon registry", "docusaurus_locale": "en", "og:url": "https://kubevela.io/docs/cli/vela_addon_registry_delete/", "description": "Delete an addon registry", "twitter:card": "summary_large_image", "msapplication-config": "/img/favicons/browserconfig.xml", "language": "en", "og:title": "vela addon registry delete | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogDescription": "Delete an addon registry", "docusaurus_tag": "docs-default-v1.10", "scrapeId": "b53b7282-12d9-4d18-ad8d-4dc9a869fac8", "sourceURL": "https://kubevela.io/docs/cli/vela_addon_registry_delete", "url": "https://kubevela.io/docs/cli/vela_addon_registry_delete/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"Delete an addon registry\"?\n\nAssistant: Here are some code examples:\n\n### Command to delete an addon registry\n```yaml\nvela addon registry delete [flags]\n```\n\n### Example usage\n```yaml\nvela addon registry delete <registry-name>\n```\n\n### Options for delete command\n```yaml\n  -h, --help   help for delete\n```\n\n### Inherited options\n```yaml\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_addon_registry_delete", "title": "Delete an addon registry", "description": "This page provides information on how to delete an addon registry using the KubeVela CLI.", "has_code_examples": true, "has_best_practices": false, "section_count": 5, "timestamp": "2025-02-28 16:06:13", "type": "code_examples", "page_metadata": {"viewport": "width=device-width, initial-scale=1.0", "title": "vela addon registry delete | KubeVela", "docusaurus_version": "v1.10", "docsearch:language": "en", "theme-color": "#ffffff", "ogTitle": "vela addon registry delete | KubeVela", "docsearch:version": "v1.10", "generator": "Docusaurus v2.4.3", "ogUrl": "https://kubevela.io/docs/cli/vela_addon_registry_delete/", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:description": "Delete an addon registry", "docusaurus_locale": "en", "og:url": "https://kubevela.io/docs/cli/vela_addon_registry_delete/", "description": "Delete an addon registry", "twitter:card": "summary_large_image", "msapplication-config": "/img/favicons/browserconfig.xml", "language": "en", "og:title": "vela addon registry delete | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogDescription": "Delete an addon registry", "docusaurus_tag": "docs-default-v1.10", "scrapeId": "b53b7282-12d9-4d18-ad8d-4dc9a869fac8", "sourceURL": "https://kubevela.io/docs/cli/vela_addon_registry_delete", "url": "https://kubevela.io/docs/cli/vela_addon_registry_delete/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"Delete an Environment\"?\n\nAssistant: This page covers the command to delete an environment in KubeVela.\n\nHere's a detailed explanation:\n\n\n## Synopsis\nDelete an environment.\n\n## Examples\n```bash\nvela env delete test\n```\n\n## Options\n```bash\n  -h, --help   help for delete\n```\n\n## Options inherited from parent commands\n```bash\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n\n## SEE ALSO\n- [vela env](https://kubevela.io/docs/cli/vela_env/) - Manage environments for vela applications to run.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_env_delete", "title": "Delete an Environment", "description": "This page covers the command to delete an environment in KubeVela.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 16:06:19", "type": "overview", "page_metadata": {"og:url": "https://kubevela.io/docs/cli/vela_env_delete/", "docusaurus_locale": "en", "docsearch:version": "v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "ogUrl": "https://kubevela.io/docs/cli/vela_env_delete/", "generator": "Docusaurus v2.4.3", "language": "en", "viewport": "width=device-width, initial-scale=1.0", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogTitle": "vela env delete | KubeVela", "description": "Delete an environment.", "og:description": "Delete an environment.", "docsearch:docusaurus_tag": "docs-default-v1.10", "docsearch:language": "en", "docusaurus_tag": "docs-default-v1.10", "twitter:card": "summary_large_image", "docusaurus_version": "v1.10", "og:title": "vela env delete | KubeVela", "theme-color": "#ffffff", "ogDescription": "Delete an environment.", "title": "vela env delete | KubeVela", "scrapeId": "d9254fb8-1388-4415-866b-2c55ac7213f5", "sourceURL": "https://kubevela.io/docs/cli/vela_env_delete", "url": "https://kubevela.io/docs/cli/vela_env_delete/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"Delete an Environment\"?\n\nAssistant: Here are some code examples:\n\n### Delete an environment command\n```yaml\nvela env delete\n```\n\n### Delete a specific environment example\n```yaml\nvela env delete test\n```\n\n### Help option for delete command\n```yaml\n-h, --help   help for delete\n```\n\n### Verbosity option\n```yaml\n-V, --verbosity Level   number for the log level verbosity\n```\n\n### Assume yes option\n```yaml\n-y, --yes               Assume yes for all user prompts\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_env_delete", "title": "Delete an Environment", "description": "This page covers the command to delete an environment in KubeVela.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 16:06:19", "type": "code_examples", "page_metadata": {"og:url": "https://kubevela.io/docs/cli/vela_env_delete/", "docusaurus_locale": "en", "docsearch:version": "v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "ogUrl": "https://kubevela.io/docs/cli/vela_env_delete/", "generator": "Docusaurus v2.4.3", "language": "en", "viewport": "width=device-width, initial-scale=1.0", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogTitle": "vela env delete | KubeVela", "description": "Delete an environment.", "og:description": "Delete an environment.", "docsearch:docusaurus_tag": "docs-default-v1.10", "docsearch:language": "en", "docusaurus_tag": "docs-default-v1.10", "twitter:card": "summary_large_image", "docusaurus_version": "v1.10", "og:title": "vela env delete | KubeVela", "theme-color": "#ffffff", "ogDescription": "Delete an environment.", "title": "vela env delete | KubeVela", "scrapeId": "d9254fb8-1388-4415-866b-2c55ac7213f5", "sourceURL": "https://kubevela.io/docs/cli/vela_env_delete", "url": "https://kubevela.io/docs/cli/vela_env_delete/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"Delete an Environment\"?\n\nAssistant: Here are the recommended best practices:\n\n• Use the -y option to skip confirmation prompts when deleting an environment.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_env_delete", "title": "Delete an Environment", "description": "This page covers the command to delete an environment in KubeVela.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 16:06:19", "type": "best_practices", "page_metadata": {"og:url": "https://kubevela.io/docs/cli/vela_env_delete/", "docusaurus_locale": "en", "docsearch:version": "v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "ogUrl": "https://kubevela.io/docs/cli/vela_env_delete/", "generator": "Docusaurus v2.4.3", "language": "en", "viewport": "width=device-width, initial-scale=1.0", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogTitle": "vela env delete | KubeVela", "description": "Delete an environment.", "og:description": "Delete an environment.", "docsearch:docusaurus_tag": "docs-default-v1.10", "docsearch:language": "en", "docusaurus_tag": "docs-default-v1.10", "twitter:card": "summary_large_image", "docusaurus_version": "v1.10", "og:title": "vela env delete | KubeVela", "theme-color": "#ffffff", "ogDescription": "Delete an environment.", "title": "vela env delete | KubeVela", "scrapeId": "d9254fb8-1388-4415-866b-2c55ac7213f5", "sourceURL": "https://kubevela.io/docs/cli/vela_env_delete", "url": "https://kubevela.io/docs/cli/vela_env_delete/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela Dashboard Trigger Overview\"?\n\nAssistant: This page provides an overview of how to use KubeVela with CI systems through declarative workflows and triggers.\n\nHere's a detailed explanation:\n\n\n## Use declarative workflow with CI steps\nKubeVela v1.7+ provide built-in step for image building, please refer to Unified Declarative CI/CD for details.\n\n## Use triggers to integrate with CI system\nYou can use triggers from VelaUX addon to integrate with different CI systems. In VelaUX, a default trigger will be automatically generated after an application created, you can also delete it and create a new one. The architecture and supported platforms are described in the following picture, they're:\n\n- Custom, refer to Jenkins CI guide for a real world use case.\n- ACR\n- Harbor, refer to Harbor Integration guide for a real world use case.\n- DockerHub\n- JFrog\n\n## Custom Trigger\nCustom triggers will provide a webhook URL, which you can use to integrate with your CI tool using the specified request body.\n\nThe default trigger is a custom trigger, click Manual Trigger to get more info of this trigger:\n\nWebhook URL is the address of this trigger, you can see request body in Curl Command example:\n\n```json\n{\n  // required, the upgrade of this deployment\n  \"upgrade\": {\n    // key is the name of application\n    \"<application-name>\": {\n      // the fields that need to be patched\n      \"image\": \"<image-name>\"\n    }\n  },\n  // optional, the code info of this deployment\n  \"codeInfo\": {\n    \"commit\": \"<commit-id>\",\n    \"branch\": \"<branch>\",\n    \"user\": \"<user>\"\n  }\n}\n```\n\n`upgrade` is the key of the object that need to be patched, `<application-name>` is the name of application. `image` is the field that need to be patched. You can also add more fields in `<application-name>`.\n\nIn `codeInfo`, you can add some code infos of this deployment like commit id, branch or user.\n\n## Example of using Custom Trigger in Gitlab CI\nBelow is an example of using Custom Trigger in Gitlab CI, we use env in this example:\n\n```yaml\nwebhook-request:\n  stage: request\n  before_script:\n    - apk add --update curl && rm -rf /var/cache/apk/*\n  script:\n    - |\n      curl -X POST -H \"Content-Type: application/json\" -d '{\"upgrade\":{\"\"$APP_NAME\"\":{\"image\":\"\"$BUILD_IMAGE\"}},\"codeInfo\":{\"user\":\"\"$CI_COMMIT_AUTHOR\"\",\"commit\":\"\"$CI_COMMIT_SHA\"\",\"branch\":\"\"$CI_COMMIT_BRANCH\"\"}}' $WEBHOOK_URL\n```\n\nAfter CI have executed this step, we can see that application is deployed successfully in VelaUX. We can also see some relative code infos of this deployment.\n\n## Execute workflow\nIntegrate Custom Triggers into your CI tool to execute a workflow. This action behaves the same as the default custom trigger with no action provided. The request body for executing a workflow using Custom Triggers is as follows:\n\n```json\n{\n  \"action\":\"execute\",\n  // required, the upgrade of this deployment\n  \"upgrade\": {\n    // key is the name of application\n    \"<application-name>\": {\n      // the fields that need to be patched\n      \"image\": \"<image-name>\"\n    }\n  },\n  // optional, the code info of this deployment\n  \"codeInfo\": {\n    \"commit\": \"<commit-id>\",\n    \"branch\": \"<branch>\",\n    \"user\": \"<user>\"\n  }\n}\n```\n\n## Approve workflow\nDuring the `suspending` phase of a workflow step, the CI tool can approve the workflow by calling the Custom Trigger with the following request body:\n\n```json\n{\n  \"action\":\"approve\",\n  // optional, name of the suspending step\n  \"step\":\"suspend\"\n}\n```\n\n## Terminate workflow\nIf a workflow step is in the `suspending` phase, the CI tool can terminate the workflow by calling the Custom Trigger with the following request body:\n\n```json\n{\n  \"action\":\"terminate\",\n  // optional, name of the suspending step\n  \"step\":\"suspend\"\n}\n```\n\n## Rollback workflow\nIf a workflow step is in the `suspending` phase, the CI tool can initiate a rollback of an application workflow to the latest revision by calling the Custom Trigger with the following request body:\n\n```json\n{\n  \"action\":\"rollback\",\n  // optional, name of the suspending step\n  \"step\":\"suspend\"\n}\n```\n\n## Harbor Trigger\nHarbor Trigger can be integrated with Harbor image registry. You can refer to Harbor Image Registry guide for the end to end tutorial.\n\n## ACR Trigger\nACR Trigger can be integrated with ACR image registry. We can start with creating a new ACR trigger. The Payload Type is ACR, and the Execution Workflow is the workflow you want to deploy in the trigger.\n\n## DockerHub Trigger\nDockerHub Trigger can be integrated with DockerHub. We can start with creating a new DockerHub trigger. The Payload Type is DockerHub, and the Execution Workflow is the workflow you want to deploy in the trigger.\n\n## JFrog Trigger\njFrog Trigger can be integrated with JFrog Artifactory. We can start with creating a new jFrog trigger. The Payload Type is jFrog, and the Execution Workflow is the workflow you want to deploy in the trigger.\n", "metadata": {"source_url": "https://kubevela.io/docs/how-to/dashboard/trigger/overview", "title": "KubeVela Dashboard Trigger Overview", "description": "This page provides an overview of how to use KubeVela with CI systems through declarative workflows and triggers.", "has_code_examples": true, "has_best_practices": true, "section_count": 12, "timestamp": "2025-02-28 16:06:45", "type": "overview", "page_metadata": {"ogDescription": "Integrate with CI system by Triggers", "title": "Integrate with CI system | KubeVela", "docsearch:language": "en", "msapplication-config": "/img/favicons/browserconfig.xml", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "og:description": "Integrate with CI system by Triggers", "docsearch:docusaurus_tag": "docs-default-v1.10", "twitter:card": "summary_large_image", "viewport": "width=device-width, initial-scale=1.0", "docusaurus_locale": "en", "generator": "Docusaurus v2.4.3", "theme-color": "#ffffff", "ogTitle": "Integrate with CI system | KubeVela", "ogUrl": "https://kubevela.io/docs/how-to/dashboard/trigger/overview/", "og:url": "https://kubevela.io/docs/how-to/dashboard/trigger/overview/", "docsearch:version": "v1.10", "docusaurus_version": "v1.10", "docusaurus_tag": "docs-default-v1.10", "og:title": "Integrate with CI system | KubeVela", "description": "Integrate with CI system by Triggers", "language": "en", "scrapeId": "b925a2c6-be3d-4ac3-970b-2632deb79609", "sourceURL": "https://kubevela.io/docs/how-to/dashboard/trigger/overview", "url": "https://kubevela.io/docs/how-to/dashboard/trigger/overview/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"KubeVela Dashboard Trigger Overview\"?\n\nAssistant: Here are some code examples:\n\n### Custom Trigger Request Body Example\n```yaml\n{\n  // required, the upgrade of this deployment\n  \"upgrade\": {\n    // key is the name of application\n    \"<application-name>\": {\n      // the fields that need to be patched\n      \"image\": \"<image-name>\"\n    }\n  },\n  // optional, the code info of this deployment\n  \"codeInfo\": {\n    \"commit\": \"<commit-id>\",\n    \"branch\": \"<branch>\",\n    \"user\": \"<user>\"\n  }\n}\n```\n\n### Gitlab CI Example\n```yaml\nwebhook-request:\n  stage: request\n  before_script:\n    - apk add --update curl && rm -rf /var/cache/apk/*\n  script:\n    - |\n      curl -X POST -H \"Content-Type: application/json\" -d '{\"upgrade\":{\"\"$APP_NAME\"\":{\"image\":\"\"$BUILD_IMAGE\"}},\"codeInfo\":{\"user\":\"\"$CI_COMMIT_AUTHOR\"\",\"commit\":\"\"$CI_COMMIT_SHA\"\",\"branch\":\"\"$CI_COMMIT_BRANCH\"\"}}' $WEBHOOK_URL\n```\n\n### Execute Workflow Request Body Example\n```yaml\n{\n  \"action\":\"execute\",\n  // required, the upgrade of this deployment\n  \"upgrade\": {\n    // key is the name of application\n    \"<application-name>\": {\n      // the fields that need to be patched\n      \"image\": \"<image-name>\"\n    }\n  },\n  // optional, the code info of this deployment\n  \"codeInfo\": {\n    \"commit\": \"<commit-id>\",\n    \"branch\": \"<branch>\",\n    \"user\": \"<user>\"\n  }\n}\n```\n\n### Approve Workflow Request Body Example\n```yaml\n{\n  \"action\":\"approve\",\n  // optional, name of the suspending step\n  \"step\":\"suspend\"\n}\n```\n\n### Terminate Workflow Request Body Example\n```yaml\n{\n  \"action\":\"terminate\",\n  // optional, name of the suspending step\n  \"step\":\"suspend\"\n}\n```\n\n### Rollback Workflow Request Body Example\n```yaml\n{\n  \"action\":\"rollback\",\n  // optional, name of the suspending step\n  \"step\":\"suspend\"\n}\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/how-to/dashboard/trigger/overview", "title": "KubeVela Dashboard Trigger Overview", "description": "This page provides an overview of how to use KubeVela with CI systems through declarative workflows and triggers.", "has_code_examples": true, "has_best_practices": true, "section_count": 12, "timestamp": "2025-02-28 16:06:45", "type": "code_examples", "page_metadata": {"ogDescription": "Integrate with CI system by Triggers", "title": "Integrate with CI system | KubeVela", "docsearch:language": "en", "msapplication-config": "/img/favicons/browserconfig.xml", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "og:description": "Integrate with CI system by Triggers", "docsearch:docusaurus_tag": "docs-default-v1.10", "twitter:card": "summary_large_image", "viewport": "width=device-width, initial-scale=1.0", "docusaurus_locale": "en", "generator": "Docusaurus v2.4.3", "theme-color": "#ffffff", "ogTitle": "Integrate with CI system | KubeVela", "ogUrl": "https://kubevela.io/docs/how-to/dashboard/trigger/overview/", "og:url": "https://kubevela.io/docs/how-to/dashboard/trigger/overview/", "docsearch:version": "v1.10", "docusaurus_version": "v1.10", "docusaurus_tag": "docs-default-v1.10", "og:title": "Integrate with CI system | KubeVela", "description": "Integrate with CI system by Triggers", "language": "en", "scrapeId": "b925a2c6-be3d-4ac3-970b-2632deb79609", "sourceURL": "https://kubevela.io/docs/how-to/dashboard/trigger/overview", "url": "https://kubevela.io/docs/how-to/dashboard/trigger/overview/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela Dashboard Trigger Overview\"?\n\nAssistant: Here are the recommended best practices:\n\n• Refer to Unified Declarative CI/CD for details on using built-in steps for image building.\n• Use the VelaUX addon to integrate with different CI systems effectively.\n• Ensure to check the request body format when using custom triggers for integration.\n", "metadata": {"source_url": "https://kubevela.io/docs/how-to/dashboard/trigger/overview", "title": "KubeVela Dashboard Trigger Overview", "description": "This page provides an overview of how to use KubeVela with CI systems through declarative workflows and triggers.", "has_code_examples": true, "has_best_practices": true, "section_count": 12, "timestamp": "2025-02-28 16:06:45", "type": "best_practices", "page_metadata": {"ogDescription": "Integrate with CI system by Triggers", "title": "Integrate with CI system | KubeVela", "docsearch:language": "en", "msapplication-config": "/img/favicons/browserconfig.xml", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "og:description": "Integrate with CI system by Triggers", "docsearch:docusaurus_tag": "docs-default-v1.10", "twitter:card": "summary_large_image", "viewport": "width=device-width, initial-scale=1.0", "docusaurus_locale": "en", "generator": "Docusaurus v2.4.3", "theme-color": "#ffffff", "ogTitle": "Integrate with CI system | KubeVela", "ogUrl": "https://kubevela.io/docs/how-to/dashboard/trigger/overview/", "og:url": "https://kubevela.io/docs/how-to/dashboard/trigger/overview/", "docsearch:version": "v1.10", "docusaurus_version": "v1.10", "docusaurus_tag": "docs-default-v1.10", "og:title": "Integrate with CI system | KubeVela", "description": "Integrate with CI system by Triggers", "language": "en", "scrapeId": "b925a2c6-be3d-4ac3-970b-2632deb79609", "sourceURL": "https://kubevela.io/docs/how-to/dashboard/trigger/overview", "url": "https://kubevela.io/docs/how-to/dashboard/trigger/overview/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela Addon Management\"?\n\nAssistant: Manage addons for extension.\n\nHere's a detailed explanation:\n\n\n## Synopsis\nManage addons for extension.\n\n## Options\n```codeBlockLines_e6Vv\n  -h, --help   help for addon\n```\n\n## Options inherited from parent commands\n```codeBlockLines_e6Vv\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n\n## SEE ALSO\n- [vela addon disable](https://kubevela.io/docs/cli/vela_addon_disable/) \\- disable an addon\n- [vela addon enable](https://kubevela.io/docs/cli/vela_addon_enable/) \\- enable an addon\n- [vela addon init](https://kubevela.io/docs/cli/vela_addon_init/) \\- create an addon scaffold\n- [vela addon list](https://kubevela.io/docs/cli/vela_addon_list/) \\- List addons\n- [vela addon package](https://kubevela.io/docs/cli/vela_addon_package/) \\- package an addon directory\n- [vela addon push](https://kubevela.io/docs/cli/vela_addon_push/) \\- uploads an addon package to ChartMuseum\n- [vela addon registry](https://kubevela.io/docs/cli/vela_addon_registry/) \\- Manage addon registry.\n- [vela addon status](https://kubevela.io/docs/cli/vela_addon_status/) \\- get an addon's status.\n- [vela addon upgrade](https://kubevela.io/docs/cli/vela_addon_upgrade/) \\- upgrade an addon\n\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_addon", "title": "KubeVela Addon Management", "description": "Manage addons for extension.", "has_code_examples": true, "has_best_practices": false, "section_count": 4, "timestamp": "2025-02-28 16:06:52", "type": "overview", "page_metadata": {"og:url": "https://kubevela.io/docs/cli/vela_addon/", "generator": "Docusaurus v2.4.3", "ogUrl": "https://kubevela.io/docs/cli/vela_addon/", "og:title": "vela addon | KubeVela", "description": "Manage addons for extension.", "og:description": "Manage addons for extension.", "docusaurus_version": "v1.10", "language": "en", "twitter:card": "summary_large_image", "title": "vela addon | KubeVela", "docsearch:docusaurus_tag": "docs-default-v1.10", "theme-color": "#ffffff", "ogDescription": "Manage addons for extension.", "ogTitle": "vela addon | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docsearch:language": "en", "docusaurus_tag": "docs-default-v1.10", "docusaurus_locale": "en", "viewport": "width=device-width, initial-scale=1.0", "msapplication-config": "/img/favicons/browserconfig.xml", "docsearch:version": "v1.10", "scrapeId": "56e768af-50d3-4b55-a50a-2dae350a440b", "sourceURL": "https://kubevela.io/docs/cli/vela_addon", "url": "https://kubevela.io/docs/cli/vela_addon/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"KubeVela Addon Management\"?\n\nAssistant: Here are some code examples:\n\n### Options\n```yaml\n```codeBlockLines_e6Vv\n  -h, --help   help for addon\n```\n```\n\n### Options inherited from parent commands\n```yaml\n```codeBlockLines_e6Vv\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_addon", "title": "KubeVela Addon Management", "description": "Manage addons for extension.", "has_code_examples": true, "has_best_practices": false, "section_count": 4, "timestamp": "2025-02-28 16:06:52", "type": "code_examples", "page_metadata": {"og:url": "https://kubevela.io/docs/cli/vela_addon/", "generator": "Docusaurus v2.4.3", "ogUrl": "https://kubevela.io/docs/cli/vela_addon/", "og:title": "vela addon | KubeVela", "description": "Manage addons for extension.", "og:description": "Manage addons for extension.", "docusaurus_version": "v1.10", "language": "en", "twitter:card": "summary_large_image", "title": "vela addon | KubeVela", "docsearch:docusaurus_tag": "docs-default-v1.10", "theme-color": "#ffffff", "ogDescription": "Manage addons for extension.", "ogTitle": "vela addon | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docsearch:language": "en", "docusaurus_tag": "docs-default-v1.10", "docusaurus_locale": "en", "viewport": "width=device-width, initial-scale=1.0", "msapplication-config": "/img/favicons/browserconfig.xml", "docsearch:version": "v1.10", "scrapeId": "56e768af-50d3-4b55-a50a-2dae350a440b", "sourceURL": "https://kubevela.io/docs/cli/vela_addon", "url": "https://kubevela.io/docs/cli/vela_addon/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"vela cluster list\"?\n\nAssistant: list managed clusters.\n\nHere's a detailed explanation:\n\n\n## Synopsis\nlist worker clusters managed by KubeVela.\n\n## Options\n```codeBlockLines_e6Vv\n  -h, --help   help for list\n```\n\n## Options inherited from parent commands\n```codeBlockLines_e6Vv\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n\n## SEE ALSO\n- [vela cluster](https://kubevela.io/docs/cli/vela_cluster/) \\- Manage Kubernetes clusters.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_cluster_list", "title": "vela cluster list", "description": "list managed clusters.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 16:06:57", "type": "overview", "page_metadata": {"language": "en", "docusaurus_tag": "docs-default-v1.10", "description": "list managed clusters.", "og:url": "https://kubevela.io/docs/cli/vela_cluster_list/", "docsearch:language": "en", "twitter:card": "summary_large_image", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_version": "v1.10", "docsearch:version": "v1.10", "docusaurus_locale": "en", "og:description": "list managed clusters.", "ogDescription": "list managed clusters.", "viewport": "width=device-width, initial-scale=1.0", "og:title": "vela cluster list | KubeVela", "ogUrl": "https://kubevela.io/docs/cli/vela_cluster_list/", "generator": "Docusaurus v2.4.3", "ogTitle": "vela cluster list | KubeVela", "title": "vela cluster list | KubeVela", "docsearch:docusaurus_tag": "docs-default-v1.10", "theme-color": "#ffffff", "msapplication-config": "/img/favicons/browserconfig.xml", "scrapeId": "e6f31f4f-c354-4caf-929f-833393444dd4", "sourceURL": "https://kubevela.io/docs/cli/vela_cluster_list", "url": "https://kubevela.io/docs/cli/vela_cluster_list/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"vela cluster list\"?\n\nAssistant: Here are some code examples:\n\n### Command to list clusters\n```yaml\nvela cluster list [flags]\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_cluster_list", "title": "vela cluster list", "description": "list managed clusters.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 16:06:57", "type": "code_examples", "page_metadata": {"language": "en", "docusaurus_tag": "docs-default-v1.10", "description": "list managed clusters.", "og:url": "https://kubevela.io/docs/cli/vela_cluster_list/", "docsearch:language": "en", "twitter:card": "summary_large_image", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_version": "v1.10", "docsearch:version": "v1.10", "docusaurus_locale": "en", "og:description": "list managed clusters.", "ogDescription": "list managed clusters.", "viewport": "width=device-width, initial-scale=1.0", "og:title": "vela cluster list | KubeVela", "ogUrl": "https://kubevela.io/docs/cli/vela_cluster_list/", "generator": "Docusaurus v2.4.3", "ogTitle": "vela cluster list | KubeVela", "title": "vela cluster list | KubeVela", "docsearch:docusaurus_tag": "docs-default-v1.10", "theme-color": "#ffffff", "msapplication-config": "/img/favicons/browserconfig.xml", "scrapeId": "e6f31f4f-c354-4caf-929f-833393444dd4", "sourceURL": "https://kubevela.io/docs/cli/vela_cluster_list", "url": "https://kubevela.io/docs/cli/vela_cluster_list/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"vela cluster list\"?\n\nAssistant: Here are the recommended best practices:\n\n• If you like KubeVela, give it a star on GitHub!\n• KubeVela v1.10.0 is now available.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_cluster_list", "title": "vela cluster list", "description": "list managed clusters.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 16:06:57", "type": "best_practices", "page_metadata": {"language": "en", "docusaurus_tag": "docs-default-v1.10", "description": "list managed clusters.", "og:url": "https://kubevela.io/docs/cli/vela_cluster_list/", "docsearch:language": "en", "twitter:card": "summary_large_image", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_version": "v1.10", "docsearch:version": "v1.10", "docusaurus_locale": "en", "og:description": "list managed clusters.", "ogDescription": "list managed clusters.", "viewport": "width=device-width, initial-scale=1.0", "og:title": "vela cluster list | KubeVela", "ogUrl": "https://kubevela.io/docs/cli/vela_cluster_list/", "generator": "Docusaurus v2.4.3", "ogTitle": "vela cluster list | KubeVela", "title": "vela cluster list | KubeVela", "docsearch:docusaurus_tag": "docs-default-v1.10", "theme-color": "#ffffff", "msapplication-config": "/img/favicons/browserconfig.xml", "scrapeId": "e6f31f4f-c354-4caf-929f-833393444dd4", "sourceURL": "https://kubevela.io/docs/cli/vela_cluster_list", "url": "https://kubevela.io/docs/cli/vela_cluster_list/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela CLI - Export\"?\n\nAssistant: This page covers the command to export deploy manifests from an appfile or application in KubeVela.\n\nHere's a detailed explanation:\n\n\n## Export deploy manifests from appfile\nExport deploy manifests from appfile or application.\n\n## Synopsis\nExport deploy manifests from appfile or application.\n\n```codeBlockLines_e6Vv\nvela export\n```\n\n\n## Options\n```codeBlockLines_e6Vv\n  -e, --env string         specify environment name for application\n  -f, --file string        specify file path for appfile\n  -h, --help               help for export\n  -n, --namespace string   specify the Kubernetes namespace to use\n```\n\n\n## Options inherited from parent commands\n```codeBlockLines_e6Vv\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n\n\n## SEE ALSO\nGo Back to [CLI Commands](https://kubevela.io/docs/cli/vela/) Homepage.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_export", "title": "KubeVela CLI - Export", "description": "This page covers the command to export deploy manifests from an appfile or application in KubeVela.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 16:07:04", "type": "overview", "page_metadata": {"og:description": "Export deploy manifests from appfile", "language": "en", "generator": "Docusaurus v2.4.3", "ogDescription": "Export deploy manifests from appfile", "docusaurus_tag": "docs-default-v1.10", "viewport": "width=device-width, initial-scale=1.0", "ogTitle": "vela export | KubeVela", "docsearch:version": "v1.10", "theme-color": "#ffffff", "docsearch:docusaurus_tag": "docs-default-v1.10", "title": "vela export | KubeVela", "twitter:card": "summary_large_image", "docusaurus_locale": "en", "docsearch:language": "en", "ogUrl": "https://kubevela.io/docs/cli/vela_export/", "og:url": "https://kubevela.io/docs/cli/vela_export/", "og:title": "vela export | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "description": "Export deploy manifests from appfile", "msapplication-config": "/img/favicons/browserconfig.xml", "docusaurus_version": "v1.10", "scrapeId": "ad76917a-bcda-4362-a140-0a3deca1b417", "sourceURL": "https://kubevela.io/docs/cli/vela_export", "url": "https://kubevela.io/docs/cli/vela_export/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"KubeVela CLI - Export\"?\n\nAssistant: Here are some code examples:\n\n### Export Command\n```yaml\nvela export\n```\n\n### Options for Export Command\n```yaml\n  -e, --env string         specify environment name for application\n  -f, --file string        specify file path for appfile\n  -h, --help               help for export\n  -n, --namespace string   specify the Kubernetes namespace to use\n```\n\n### Inherited Options\n```yaml\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_export", "title": "KubeVela CLI - Export", "description": "This page covers the command to export deploy manifests from an appfile or application in KubeVela.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 16:07:04", "type": "code_examples", "page_metadata": {"og:description": "Export deploy manifests from appfile", "language": "en", "generator": "Docusaurus v2.4.3", "ogDescription": "Export deploy manifests from appfile", "docusaurus_tag": "docs-default-v1.10", "viewport": "width=device-width, initial-scale=1.0", "ogTitle": "vela export | KubeVela", "docsearch:version": "v1.10", "theme-color": "#ffffff", "docsearch:docusaurus_tag": "docs-default-v1.10", "title": "vela export | KubeVela", "twitter:card": "summary_large_image", "docusaurus_locale": "en", "docsearch:language": "en", "ogUrl": "https://kubevela.io/docs/cli/vela_export/", "og:url": "https://kubevela.io/docs/cli/vela_export/", "og:title": "vela export | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "description": "Export deploy manifests from appfile", "msapplication-config": "/img/favicons/browserconfig.xml", "docusaurus_version": "v1.10", "scrapeId": "ad76917a-bcda-4362-a140-0a3deca1b417", "sourceURL": "https://kubevela.io/docs/cli/vela_export", "url": "https://kubevela.io/docs/cli/vela_export/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela CLI - Export\"?\n\nAssistant: Here are the recommended best practices:\n\n• Use the -e option to specify the environment name for your application.\n• Always check the file path with the -f option to ensure the correct appfile is being used.\n• Utilize the -n option to define the Kubernetes namespace for better resource management.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_export", "title": "KubeVela CLI - Export", "description": "This page covers the command to export deploy manifests from an appfile or application in KubeVela.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 16:07:04", "type": "best_practices", "page_metadata": {"og:description": "Export deploy manifests from appfile", "language": "en", "generator": "Docusaurus v2.4.3", "ogDescription": "Export deploy manifests from appfile", "docusaurus_tag": "docs-default-v1.10", "viewport": "width=device-width, initial-scale=1.0", "ogTitle": "vela export | KubeVela", "docsearch:version": "v1.10", "theme-color": "#ffffff", "docsearch:docusaurus_tag": "docs-default-v1.10", "title": "vela export | KubeVela", "twitter:card": "summary_large_image", "docusaurus_locale": "en", "docsearch:language": "en", "ogUrl": "https://kubevela.io/docs/cli/vela_export/", "og:url": "https://kubevela.io/docs/cli/vela_export/", "og:title": "vela export | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "description": "Export deploy manifests from appfile", "msapplication-config": "/img/favicons/browserconfig.xml", "docusaurus_version": "v1.10", "scrapeId": "ad76917a-bcda-4362-a140-0a3deca1b417", "sourceURL": "https://kubevela.io/docs/cli/vela_export", "url": "https://kubevela.io/docs/cli/vela_export/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"vela component get\"?\n\nAssistant: get/download/install component from registry.\n\nHere's a detailed explanation:\n\n\n## Synopsis\nget/download/install component from registry.\n\n## Examples\n```codeBlockLines_e6Vv\nvela comp get <component>\n```\n\n## Options\n```codeBlockLines_e6Vv\n  -h, --help   help for get\n```\n\n## Options inherited from parent commands\n```codeBlockLines_e6Vv\n      --registry string   specify the registry name (default \"default\")\n      --token string      specify token when using --url to specify registry url\n      --url string        specify the registry URL\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n\n## SEE ALSO\n- [vela component](https://kubevela.io/docs/cli/vela_component/) \\- List/get components.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_component_get", "title": "vela component get", "description": "get/download/install component from registry.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 16:07:11", "type": "overview", "page_metadata": {"viewport": "width=device-width, initial-scale=1.0", "ogUrl": "https://kubevela.io/docs/cli/vela_component_get/", "title": "vela component get | KubeVela", "og:title": "vela component get | KubeVela", "description": "get component from registry", "theme-color": "#ffffff", "language": "en", "docsearch:language": "en", "docusaurus_version": "v1.10", "og:url": "https://kubevela.io/docs/cli/vela_component_get/", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "og:description": "get component from registry", "docsearch:docusaurus_tag": "docs-default-v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "ogDescription": "get component from registry", "ogTitle": "vela component get | KubeVela", "docsearch:version": "v1.10", "docusaurus_tag": "docs-default-v1.10", "twitter:card": "summary_large_image", "docusaurus_locale": "en", "generator": "Docusaurus v2.4.3", "scrapeId": "34af6387-03e2-4d34-94b6-c1f471323f54", "sourceURL": "https://kubevela.io/docs/cli/vela_component_get", "url": "https://kubevela.io/docs/cli/vela_component_get/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"vela component get\"?\n\nAssistant: Here are some code examples:\n\n### Command to get component\n```yaml\nvela component get <component> [flags]\n```\n\n### Example usage\n```yaml\nvela comp get <component>\n```\n\n### Options help\n```yaml\n  -h, --help   help for get\n```\n\n### Options inherited from parent commands\n```yaml\n      --registry string   specify the registry name (default \"default\")\n      --token string      specify token when using --url to specify registry url\n      --url string        specify the registry URL\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_component_get", "title": "vela component get", "description": "get/download/install component from registry.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 16:07:11", "type": "code_examples", "page_metadata": {"viewport": "width=device-width, initial-scale=1.0", "ogUrl": "https://kubevela.io/docs/cli/vela_component_get/", "title": "vela component get | KubeVela", "og:title": "vela component get | KubeVela", "description": "get component from registry", "theme-color": "#ffffff", "language": "en", "docsearch:language": "en", "docusaurus_version": "v1.10", "og:url": "https://kubevela.io/docs/cli/vela_component_get/", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "og:description": "get component from registry", "docsearch:docusaurus_tag": "docs-default-v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "ogDescription": "get component from registry", "ogTitle": "vela component get | KubeVela", "docsearch:version": "v1.10", "docusaurus_tag": "docs-default-v1.10", "twitter:card": "summary_large_image", "docusaurus_locale": "en", "generator": "Docusaurus v2.4.3", "scrapeId": "34af6387-03e2-4d34-94b6-c1f471323f54", "sourceURL": "https://kubevela.io/docs/cli/vela_component_get", "url": "https://kubevela.io/docs/cli/vela_component_get/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"vela component get\"?\n\nAssistant: Here are the recommended best practices:\n\n• If you like KubeVela, give it a star on GitHub!\n• Check the release notes for the latest updates.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_component_get", "title": "vela component get", "description": "get/download/install component from registry.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 16:07:11", "type": "best_practices", "page_metadata": {"viewport": "width=device-width, initial-scale=1.0", "ogUrl": "https://kubevela.io/docs/cli/vela_component_get/", "title": "vela component get | KubeVela", "og:title": "vela component get | KubeVela", "description": "get component from registry", "theme-color": "#ffffff", "language": "en", "docsearch:language": "en", "docusaurus_version": "v1.10", "og:url": "https://kubevela.io/docs/cli/vela_component_get/", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "og:description": "get component from registry", "docsearch:docusaurus_tag": "docs-default-v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "ogDescription": "get component from registry", "ogTitle": "vela component get | KubeVela", "docsearch:version": "v1.10", "docusaurus_tag": "docs-default-v1.10", "twitter:card": "summary_large_image", "docusaurus_locale": "en", "generator": "Docusaurus v2.4.3", "scrapeId": "34af6387-03e2-4d34-94b6-c1f471323f54", "sourceURL": "https://kubevela.io/docs/cli/vela_component_get", "url": "https://kubevela.io/docs/cli/vela_component_get/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"If Conditions in KubeVela Workflows\"?\n\nAssistant: This section introduces how to add if conditions to workflow steps in KubeVela.\n\nHere's a detailed explanation:\n\n\n## No If specified\nIn the case where a step does not specify an If, KubeVela will determine whether to execute the step based on the status of the previous steps. In default, if all the previous steps are succeeded, the step will be executed.\n\nThis also means that if step A fails, step B after step A will be skipped and will not be executed.\n\nApply the following example:\n\n```codeBlockLines_e6Vv\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: err-with-no-if\n  namespace: default\nspec:\n  components:\n  - name: express-server\n    type: webservice\n    properties:\n      image: oamdev/hello-world\n      ports:\n        - port: 8000\n  workflow:\n    steps:\n      - name: apply-err\n        type: apply-object\n        properties:\n          value:\n            test: err\n      - name: apply-comp\n        type: apply-component\n        properties:\n          component: express-server\n```\n\nUse `vela status` to check the status of the Application:\n\n```codeBlockLines_e6Vv\n$ vela status err-with-no-if\nAbout:\n\n  Name:         err-with-no-if\n  Namespace:    default\n  Created at:   2022-06-24 18:14:46 +0800 CST\n  Status:       workflowTerminated\n\nWorkflow:\n\n  mode: StepByStep\n  finished: true\n  Suspend: false\n  Terminated: true\n  Steps\n  - id:bztlmifsjl\n    name:apply-err\n    type:apply-object\n    phase:failed\n    message:step apply: run step(provider=kube,do=apply): Object 'Kind' is missing in '{\"test\":\"err\"}'\n  - id:el8quwh8jh\n    name:apply-comp\n    type:apply-component\n    phase:skipped\n    message:\n\nServices:\n```\n\nAs you can see, the step `apply-err` will fail due to an attempt to deploy an invalid resource, and the step `apply-comp` will be skipped because the previous step failed.\n\n## If Always\nIf you want a step to be executed anyway, you can specify `if` to `always` for this step.\n\nApply the following example:\n\n```codeBlockLines_e6Vv\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: err-with-always\n  namespace: default\nspec:\n  components:\n  - name: invalid\n    type: webservice\n    properties:\n      image: invalid\n      ports:\n        - port: 8000\n  workflow:\n    steps:\n      - name: comp\n        type: apply-component\n        timeout: 5s\n        outputs:\n          - name: status\n            valueFrom: output.status.conditions[0].type + output.status.conditions[0].status\n        properties:\n          component: invalid\n      - name: notification\n        type: notification\n        inputs:\n          - from: status\n            parameterKey: slack.message.text\n        if: always\n        properties:\n          slack:\n            url:\n              value: <your slack url>\n```\n\nUse `vela status` to check the status of the Application:\n\n```codeBlockLines_e6Vv\n$ vela status err-with-always\nAbout:\n\n  Name:         err-with-always\n  Namespace:    default\n  Created at:   2022-06-27 17:30:29 +0800 CST\n  Status:       workflowTerminated\n\nWorkflow:\n\n  mode: StepByStep\n  finished: true\n  Suspend: false\n  Terminated: true\n  Steps\n  - id:loeqr6dlcn\n    name:comp\n    type:apply-component\n    phase:failed\n    message:\n  - id:hul9tayu82\n    name:notification\n    type:notification\n    phase:succeeded\n    message:\n\nServices:\n\n  - Name: invalid\n    Cluster: local  Namespace: default\n    Type: webservice\n    Unhealthy Ready:0/1\n    No trait applied\n```\n\nYou can see that step `comp` will try to deploy a component whose image is `invalid`, and the component will fail due to timeout after five seconds because the image cannot be pulled. In the meanwhile, this step passes the component's `status` as outputs. The step `notification` will be executed because `if: always` is specified. At the same time, the content of the message notification is the status of the component in the previous step. Therefore, we can see the message notification carrying the status information in slack.\n\n## Custom If conditions\n> Note: You need to upgrade to version 1.5 or above to use custom If conditions.\n\nYou can also write your own judgment logic to determine whether the step should be executed. Note: The value in `if` will be executed as CUE codes. KubeVela provides some built-in variables in `if`, they are:\n\n- `status`： `status` contains status information for all workflow steps. You can use `status.<step-name>.phase == \"succeeded\"` to determine the status of a step, or you can use the simplified `status.<step-name>.succeeded` to determine.\n- `inputs`： `inputs` contains all the inputs parameters of the step. You can use `inputs.<input-name> == \"value\"` to get input for the step.\n\n> Note that if your step name or inputs name is not a valid CUE variable name (eg: contains `-`, or starts with a number, etc.), you can refer to it as follows: `status[\"invalid-name\"].failed`\n\nApply the following example:\n\n```codeBlockLines_e6Vv\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: custom-if\n  namespace: default\nspec:\n  components:\n  - name: comp-custom-if\n    type: webservice\n    properties:\n      image: crccheck/hello-world\n      port: 8000\n    traits:\n  workflow:\n    steps:\n    - name: apply\n      type: apply-component\n      properties:\n        component: comp-custom-if\n      outputs:\n        - name: comp-output\n          valueFrom: context.name\n    - name: notification\n      type: notification\n      inputs:\n        - from: comp-output\n          parameterKey: slack.message.text\n      if: inputs[\"comp-output\"] == \"custom-if\"\n      properties:\n        slack:\n          url:\n            value: <your slack url>\n    - name: notification-skip\n      type: notification\n      if: status.notification.failed\n      properties:\n        slack:\n          url:\n            value: <your slack url>\n          message:\n            text: this notification should be skipped\n    - name: notification-succeeded\n      type: notification\n      if: status.notification.succeeded\n      properties:\n        slack:\n          url:\n            value: <your slack url>\n          message:\n            text: the notification is succeeded\n```\n\nUse `vela status` to check the status of the Application:\n\n```codeBlockLines_e6Vv\n$ vela status custom-if\nAbout:\n\n  Name:         custom-if\n  Namespace:    default\n  Created at:   2022-06-25 00:37:14 +0800 CST\n  Status:       running\n\nWorkflow:\n\n  mode: StepByStep\n  finished: true\n  Suspend: false\n  Terminated: false\n  Steps\n  - id:un1zd8qc6h\n    name:apply\n    type:apply-component\n    phase:succeeded\n    message:\n  - id:n5xbtgsi68\n    name:notification\n    type:notification\n    phase:succeeded\n    message:\n  - id:2ufd3v6n78\n    name:notification-skip\n    type:notification\n    phase:skipped\n    message:\n  - id:h644x6o8mb\n    name:notification-succeeded\n    type:notification\n    phase:succeeded\n    message:\n\nServices:\n\n  - Name: comp-custom-if\n    Cluster: local  Namespace: default\n    Type: webservice\n    Healthy Ready:1/1\n    No trait applied\n```\n\nAs you can see, after the first step `apply` succeeded, the outputs `comp-output` will be output. The second step `notification` refers to the outputs of the first step as inputs and makes a judgment. After the condition is met, the notification is successfully sent. The third step `notification-skip` judges whether the second step is in a failed state. If the condition is not met, this step is skipped. The fourth step `notification-succeeded` judges whether the second step is successful, if the condition is met, the step is successfully executed.\n", "metadata": {"source_url": "https://kubevela.io/docs/end-user/workflow/if-condition", "title": "If Conditions in KubeVela Workflows", "description": "This section introduces how to add if conditions to workflow steps in KubeVela.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 16:08:02", "type": "overview", "page_metadata": {"favicon": "https://kubevela.io/img/favicons/favicon.ico", "language": "en", "docusaurus_tag": "docs-default-v1.10", "docusaurus_version": "v1.10", "title": "If Conditions | KubeVela", "og:description": "This section introduces how to add if conditions to workflow steps.", "og:url": "https://kubevela.io/docs/end-user/workflow/if-condition/", "ogTitle": "If Conditions | KubeVela", "ogUrl": "https://kubevela.io/docs/end-user/workflow/if-condition/", "og:title": "If Conditions | KubeVela", "generator": "Docusaurus v2.4.3", "docsearch:language": "en", "ogDescription": "This section introduces how to add if conditions to workflow steps.", "description": "This section introduces how to add if conditions to workflow steps.", "msapplication-config": "/img/favicons/browserconfig.xml", "docsearch:docusaurus_tag": "docs-default-v1.10", "docusaurus_locale": "en", "twitter:card": "summary_large_image", "theme-color": "#ffffff", "viewport": "width=device-width, initial-scale=1.0", "docsearch:version": "v1.10", "scrapeId": "1681441f-5756-4329-8bcb-0dc97f7aa1f5", "sourceURL": "https://kubevela.io/docs/end-user/workflow/if-condition", "url": "https://kubevela.io/docs/end-user/workflow/if-condition/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"If Conditions in KubeVela Workflows\"?\n\nAssistant: Here are some code examples:\n\n### No If specified Example\n```yaml\n```codeBlockLines_e6Vv\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: err-with-no-if\n  namespace: default\nspec:\n  components:\n  - name: express-server\n    type: webservice\n    properties:\n      image: oamdev/hello-world\n      ports:\n        - port: 8000\n  workflow:\n    steps:\n      - name: apply-err\n        type: apply-object\n        properties:\n          value:\n            test: err\n      - name: apply-comp\n        type: apply-component\n        properties:\n          component: express-server\n```\n```\n\n### vela status for No If specified\n```yaml\n```codeBlockLines_e6Vv\n$ vela status err-with-no-if\nAbout:\n\n  Name:         err-with-no-if\n  Namespace:    default\n  Created at:   2022-06-24 18:14:46 +0800 CST\n  Status:       workflowTerminated\n\nWorkflow:\n\n  mode: StepByStep\n  finished: true\n  Suspend: false\n  Terminated: true\n  Steps\n  - id:bztlmifsjl\n    name:apply-err\n    type:apply-object\n    phase:failed\n    message:step apply: run step(provider=kube,do=apply): Object 'Kind' is missing in '{\"test\":\"err\"}'\n  - id:el8quwh8jh\n    name:apply-comp\n    type:apply-component\n    phase:skipped\n    message:\n\nServices:\n```\n```\n\n### If Always Example\n```yaml\n```codeBlockLines_e6Vv\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: err-with-always\n  namespace: default\nspec:\n  components:\n  - name: invalid\n    type: webservice\n    properties:\n      image: invalid\n      ports:\n        - port: 8000\n  workflow:\n    steps:\n      - name: comp\n        type: apply-component\n        timeout: 5s\n        outputs:\n          - name: status\n            valueFrom: output.status.conditions[0].type + output.status.conditions[0].status\n        properties:\n          component: invalid\n      - name: notification\n        type: notification\n        inputs:\n          - from: status\n            parameterKey: slack.message.text\n        if: always\n        properties:\n          slack:\n            url:\n              value: <your slack url>\n```\n```\n\n### vela status for If Always\n```yaml\n```codeBlockLines_e6Vv\n$ vela status err-with-always\nAbout:\n\n  Name:         err-with-always\n  Namespace:    default\n  Created at:   2022-06-27 17:30:29 +0800 CST\n  Status:       workflowTerminated\n\nWorkflow:\n\n  mode: StepByStep\n  finished: true\n  Suspend: false\n  Terminated: true\n  Steps\n  - id:loeqr6dlcn\n    name:comp\n    type:apply-component\n    phase:failed\n    message:\n  - id:hul9tayu82\n    name:notification\n    type:notification\n    phase:succeeded\n    message:\n\nServices:\n\n  - Name: invalid\n    Cluster: local  Namespace: default\n    Type: webservice\n    Unhealthy Ready:0/1\n    No trait applied\n```\n```\n\n### Custom If conditions Example\n```yaml\n```codeBlockLines_e6Vv\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: custom-if\n  namespace: default\nspec:\n  components:\n  - name: comp-custom-if\n    type: webservice\n    properties:\n      image: crccheck/hello-world\n      port: 8000\n    traits:\n  workflow:\n    steps:\n    - name: apply\n      type: apply-component\n      properties:\n        component: comp-custom-if\n      outputs:\n        - name: comp-output\n          valueFrom: context.name\n    - name: notification\n      type: notification\n      inputs:\n        - from: comp-output\n          parameterKey: slack.message.text\n      if: inputs[\"comp-output\"] == \"custom-if\"\n      properties:\n        slack:\n          url:\n            value: <your slack url>\n    - name: notification-skip\n      type: notification\n      if: status.notification.failed\n      properties:\n        slack:\n          url:\n            value: <your slack url>\n          message:\n            text: this notification should be skipped\n    - name: notification-succeeded\n      type: notification\n      if: status.notification.succeeded\n      properties:\n        slack:\n          url:\n            value: <your slack url>\n          message:\n            text: the notification is succeeded\n```\n```\n\n### vela status for Custom If conditions\n```yaml\n```codeBlockLines_e6Vv\n$ vela status custom-if\nAbout:\n\n  Name:         custom-if\n  Namespace:    default\n  Created at:   2022-06-25 00:37:14 +0800 CST\n  Status:       running\n\nWorkflow:\n\n  mode: StepByStep\n  finished: true\n  Suspend: false\n  Terminated: false\n  Steps\n  - id:un1zd8qc6h\n    name:apply\n    type:apply-component\n    phase:succeeded\n    message:\n  - id:n5xbtgsi68\n    name:notification\n    type:notification\n    phase:succeeded\n    message:\n  - id:2ufd3v6n78\n    name:notification-skip\n    type:notification\n    phase:skipped\n    message:\n  - id:h644x6o8mb\n    name:notification-succeeded\n    type:notification\n    phase:succeeded\n    message:\n\nServices:\n\n  - Name: comp-custom-if\n    Cluster: local  Namespace: default\n    Type: webservice\n    Healthy Ready:1/1\n    No trait applied\n```\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/end-user/workflow/if-condition", "title": "If Conditions in KubeVela Workflows", "description": "This section introduces how to add if conditions to workflow steps in KubeVela.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 16:08:02", "type": "code_examples", "page_metadata": {"favicon": "https://kubevela.io/img/favicons/favicon.ico", "language": "en", "docusaurus_tag": "docs-default-v1.10", "docusaurus_version": "v1.10", "title": "If Conditions | KubeVela", "og:description": "This section introduces how to add if conditions to workflow steps.", "og:url": "https://kubevela.io/docs/end-user/workflow/if-condition/", "ogTitle": "If Conditions | KubeVela", "ogUrl": "https://kubevela.io/docs/end-user/workflow/if-condition/", "og:title": "If Conditions | KubeVela", "generator": "Docusaurus v2.4.3", "docsearch:language": "en", "ogDescription": "This section introduces how to add if conditions to workflow steps.", "description": "This section introduces how to add if conditions to workflow steps.", "msapplication-config": "/img/favicons/browserconfig.xml", "docsearch:docusaurus_tag": "docs-default-v1.10", "docusaurus_locale": "en", "twitter:card": "summary_large_image", "theme-color": "#ffffff", "viewport": "width=device-width, initial-scale=1.0", "docsearch:version": "v1.10", "scrapeId": "1681441f-5756-4329-8bcb-0dc97f7aa1f5", "sourceURL": "https://kubevela.io/docs/end-user/workflow/if-condition", "url": "https://kubevela.io/docs/end-user/workflow/if-condition/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"If Conditions in KubeVela Workflows\"?\n\nAssistant: Here are the recommended best practices:\n\n• Use `if: always` to ensure a step executes regardless of previous step outcomes.\n• Utilize custom If conditions for more complex logic in workflow steps.\n• Check the status of previous steps to determine the execution of subsequent steps.\n", "metadata": {"source_url": "https://kubevela.io/docs/end-user/workflow/if-condition", "title": "If Conditions in KubeVela Workflows", "description": "This section introduces how to add if conditions to workflow steps in KubeVela.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 16:08:02", "type": "best_practices", "page_metadata": {"favicon": "https://kubevela.io/img/favicons/favicon.ico", "language": "en", "docusaurus_tag": "docs-default-v1.10", "docusaurus_version": "v1.10", "title": "If Conditions | KubeVela", "og:description": "This section introduces how to add if conditions to workflow steps.", "og:url": "https://kubevela.io/docs/end-user/workflow/if-condition/", "ogTitle": "If Conditions | KubeVela", "ogUrl": "https://kubevela.io/docs/end-user/workflow/if-condition/", "og:title": "If Conditions | KubeVela", "generator": "Docusaurus v2.4.3", "docsearch:language": "en", "ogDescription": "This section introduces how to add if conditions to workflow steps.", "description": "This section introduces how to add if conditions to workflow steps.", "msapplication-config": "/img/favicons/browserconfig.xml", "docsearch:docusaurus_tag": "docs-default-v1.10", "docusaurus_locale": "en", "twitter:card": "summary_large_image", "theme-color": "#ffffff", "viewport": "width=device-width, initial-scale=1.0", "docsearch:version": "v1.10", "scrapeId": "1681441f-5756-4329-8bcb-0dc97f7aa1f5", "sourceURL": "https://kubevela.io/docs/end-user/workflow/if-condition", "url": "https://kubevela.io/docs/end-user/workflow/if-condition/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"Apply Once Policy in KubeVela\"?\n\nAssistant: This page describes the apply-once policy in KubeVela, which allows certain resources to remain mutable after the workflow is finished, preventing configuration drift for applied resources.\n\nHere's a detailed explanation:\n\n\n## Overview\nBy default, the KubeVela controller will prevent configuration drift for applied resources by reconciling them routinely. This is useful if you want to keep your application always having the desired configuration to avoid some unintentional changes by external modifiers.\n\nHowever, sometimes, you might want to use KubeVela Application to dispatch jobs and recycle jobs, but also want to leave those resources mutable after the workflow is finished. In this case, you can use the following apply-once policy. Some use cases:\n\n1. Working with HPA, which will change the deployment replicas.\n2. Working with Istio, which will change the deployment containers.\n3. Other controllers...\n\n## All managed fields once apply\nIn this case, if you change the replicas or other managed fields of the hello-world deployment after the application enters the running state, the change will not be reverted. On the contrary, if you disable the apply-once policy (by default), any changes to the replicas of the hello-world application will be brought back in the next reconcile loop.\n\n## Specified fields once apply\nIn this case, only support changing the replicas field by other controllers, such as HPA. The selector rule support: `componentNames`, `componentTypes`, `oamTypes`, `resourceNames`, `resourceTypes` and `traitTypes`.\n\nThe configuration drift check will be launched every 5 minutes after the application enters the running state or the suspending state without errors. You can configure the time by setting the `application-re-sync-period` bootstrap parameter in the controller. See [bootstrap parameters](https://kubevela.io/docs/platform-engineers/system-operation/bootstrap-parameters/) for details.\n", "metadata": {"source_url": "https://kubevela.io/docs/end-user/policies/apply-once", "title": "Apply Once Policy in KubeVela", "description": "This page describes the apply-once policy in KubeVela, which allows certain resources to remain mutable after the workflow is finished, preventing configuration drift for applied resources.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 16:09:06", "type": "overview", "page_metadata": {"ogUrl": "https://kubevela.io/docs/end-user/policies/apply-once/", "docsearch:language": "en", "viewport": "width=device-width, initial-scale=1.0", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogDescription": "By default, the KubeVela controller will prevent configuration drift for applied resources by reconciling them routinely. This is useful if you want to keep your application always having the desired configuration to avoid some unintentional changes by external modifiers.", "theme-color": "#ffffff", "docsearch:docusaurus_tag": "docs-default-v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "title": "One-time Delivery (Coordinate with Multi-Controllers) | KubeVela", "twitter:card": "summary_large_image", "docsearch:version": "v1.10", "ogTitle": "One-time Delivery (Coordinate with Multi-Controllers) | KubeVela", "generator": "Docusaurus v2.4.3", "language": "en", "docusaurus_tag": "docs-default-v1.10", "og:title": "One-time Delivery (Coordinate with Multi-Controllers) | KubeVela", "description": "By default, the KubeVela controller will prevent configuration drift for applied resources by reconciling them routinely. This is useful if you want to keep your application always having the desired configuration to avoid some unintentional changes by external modifiers.", "og:url": "https://kubevela.io/docs/end-user/policies/apply-once/", "docusaurus_locale": "en", "og:description": "By default, the KubeVela controller will prevent configuration drift for applied resources by reconciling them routinely. This is useful if you want to keep your application always having the desired configuration to avoid some unintentional changes by external modifiers.", "docusaurus_version": "v1.10", "scrapeId": "b39125b7-1f49-4c7b-ab05-0ccad69d8ee5", "sourceURL": "https://kubevela.io/docs/end-user/policies/apply-once", "url": "https://kubevela.io/docs/end-user/policies/apply-once/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"Apply Once Policy in KubeVela\"?\n\nAssistant: Here are some code examples:\n\n### All managed fields once apply\n```yaml\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: apply-once-app\nspec:\n  components:\n    - name: hello-world\n      type: webservice\n      properties:\n        image: oamdev/hello-world\n      traits:\n        - type: scaler\n          properties:\n            replicas: 3\n  policies:\n    - name: apply-once\n      type: apply-once\n      properties:\n        enable: true\n\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/end-user/policies/apply-once", "title": "Apply Once Policy in KubeVela", "description": "This page describes the apply-once policy in KubeVela, which allows certain resources to remain mutable after the workflow is finished, preventing configuration drift for applied resources.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 16:09:06", "type": "code_examples", "page_metadata": {"ogUrl": "https://kubevela.io/docs/end-user/policies/apply-once/", "docsearch:language": "en", "viewport": "width=device-width, initial-scale=1.0", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogDescription": "By default, the KubeVela controller will prevent configuration drift for applied resources by reconciling them routinely. This is useful if you want to keep your application always having the desired configuration to avoid some unintentional changes by external modifiers.", "theme-color": "#ffffff", "docsearch:docusaurus_tag": "docs-default-v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "title": "One-time Delivery (Coordinate with Multi-Controllers) | KubeVela", "twitter:card": "summary_large_image", "docsearch:version": "v1.10", "ogTitle": "One-time Delivery (Coordinate with Multi-Controllers) | KubeVela", "generator": "Docusaurus v2.4.3", "language": "en", "docusaurus_tag": "docs-default-v1.10", "og:title": "One-time Delivery (Coordinate with Multi-Controllers) | KubeVela", "description": "By default, the KubeVela controller will prevent configuration drift for applied resources by reconciling them routinely. This is useful if you want to keep your application always having the desired configuration to avoid some unintentional changes by external modifiers.", "og:url": "https://kubevela.io/docs/end-user/policies/apply-once/", "docusaurus_locale": "en", "og:description": "By default, the KubeVela controller will prevent configuration drift for applied resources by reconciling them routinely. This is useful if you want to keep your application always having the desired configuration to avoid some unintentional changes by external modifiers.", "docusaurus_version": "v1.10", "scrapeId": "b39125b7-1f49-4c7b-ab05-0ccad69d8ee5", "sourceURL": "https://kubevela.io/docs/end-user/policies/apply-once", "url": "https://kubevela.io/docs/end-user/policies/apply-once/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"Apply Once Policy in KubeVela\"?\n\nAssistant: Here are the recommended best practices:\n\n• The configuration drift check will be launched every 5 minutes after the application enters the running state or the suspending state without errors.\n• You can configure the time by setting the application-re-sync-period bootstrap parameter in the controller.\n", "metadata": {"source_url": "https://kubevela.io/docs/end-user/policies/apply-once", "title": "Apply Once Policy in KubeVela", "description": "This page describes the apply-once policy in KubeVela, which allows certain resources to remain mutable after the workflow is finished, preventing configuration drift for applied resources.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 16:09:06", "type": "best_practices", "page_metadata": {"ogUrl": "https://kubevela.io/docs/end-user/policies/apply-once/", "docsearch:language": "en", "viewport": "width=device-width, initial-scale=1.0", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogDescription": "By default, the KubeVela controller will prevent configuration drift for applied resources by reconciling them routinely. This is useful if you want to keep your application always having the desired configuration to avoid some unintentional changes by external modifiers.", "theme-color": "#ffffff", "docsearch:docusaurus_tag": "docs-default-v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "title": "One-time Delivery (Coordinate with Multi-Controllers) | KubeVela", "twitter:card": "summary_large_image", "docsearch:version": "v1.10", "ogTitle": "One-time Delivery (Coordinate with Multi-Controllers) | KubeVela", "generator": "Docusaurus v2.4.3", "language": "en", "docusaurus_tag": "docs-default-v1.10", "og:title": "One-time Delivery (Coordinate with Multi-Controllers) | KubeVela", "description": "By default, the KubeVela controller will prevent configuration drift for applied resources by reconciling them routinely. This is useful if you want to keep your application always having the desired configuration to avoid some unintentional changes by external modifiers.", "og:url": "https://kubevela.io/docs/end-user/policies/apply-once/", "docusaurus_locale": "en", "og:description": "By default, the KubeVela controller will prevent configuration drift for applied resources by reconciling them routinely. This is useful if you want to keep your application always having the desired configuration to avoid some unintentional changes by external modifiers.", "docusaurus_version": "v1.10", "scrapeId": "b39125b7-1f49-4c7b-ab05-0ccad69d8ee5", "sourceURL": "https://kubevela.io/docs/end-user/policies/apply-once", "url": "https://kubevela.io/docs/end-user/policies/apply-once/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela OAM Definitions\"?\n\nAssistant: This page provides detailed information about the OAM definitions in KubeVela, including ComponentDefinition, TraitDefinition, PolicyDefinition, and WorkflowStepDefinition, along with their structures and examples.\n\nHere's a detailed explanation:\n\n\n## Definition API\nEssentially, a definition object in KubeVela is a programmable building block. A definition object normally includes several information to model a certain platform capability that would used in further application deployment:\n\n- **Capability Indicator**\n  - `ComponentDefinition` uses `spec.workload` to indicate the workload type of this component.\n  - `TraitDefinition` uses `spec.definition` to indicate the provider of this trait.\n  - These indicators can be auto detected, so they're not necessary.\n- **Interoperability Fields**\n  - they are for the platform to ensure a trait can work with given workload type. Hence only `TraitDefinition` has these fields.\n- **Capability Encapsulation and Abstraction** defined by `spec.schematic`\n  - this defines the **templating and parametering** (i.e. encapsulation) of this capability.\n\nHence, the basic structure of definition object is as below:\n\n```yaml\napiVersion: core.oam.dev/v1beta1\nkind: XxxDefinition\nmetadata:\n  name: <definition name>\n  annotations:\n    <map of annotations>\n  labels:\n    <map of labels>\nspec:\n  ...\n  schematic:\n    cue:\n      # cue template ...\n  # ... interoperability fields\n```\n\n## The convert rule from CUE format to OAM API\nBelow is a framework of definition in CUE format:\n\n```yaml\n<definition name>: {\n    annotations: {}\n    labels: {}\n    attributes: {}\n    description: \"\"\n    type: \"<definition type>\"\n}\n\ntemplate: {\n    ...\n}\n```\n\n- The `\"<definition name>\"` aligns with the `.metadata.name` in OAM API.\n- The `.annotations` aligns with the `.metadata.annotations` in OAM API.\n- The `.labels` aligns with the `.metadata.labels` in OAM API.\n- The `.attributes.` aligns with the `.spec.` in OAM API except the `.spec.schematic` field.\n- The `template` aligns with the `.spec.schematic.cue` field, only CUE schematic supported in this conversion.\n- The `description` aligns with the `.metadata.annotations[\"definition.oam.dev/description\"]` field.\n\n## ComponentDefinition\nThe design goal of ComponentDefinition is to allow platform administrators to encapsulate any type of deployable products into \"components\" to be delivered. Once defined, this type of component can be referenced, instantiated and delivered by users in the `Application`.\n\nCommon component types include Helm Chart, Kustomize directory, a set of Kubernetes YAML files, container images, cloud resource IaC files, or CUE configuration file modules, etc. The component supplier corresponds to the real-world role, which is generally a third-party software distributor (ISV), a DevOps team engineer, or a code package and image generated by the CI system you built.\n\nComponentDefinition can be shared and reused. For example, a Helm chart, a CUE module, or a Terraform module. Another example is, for an `Alibaba Cloud RDS` component type, end users can select the same `Alibaba Cloud RDS` component type in different applications and instantiate them into cloud database instances with different specifications and different parameter configurations.\n\nLet's take a look at the frame format of ComponentDefinition:\n\n```yaml\napiVersion: core.oam.dev/v1beta1\nkind: ComponentDefinition\nmetadata:\n  name: <ComponentDefinition name>\n  annotations:\n    definition.oam.dev/description: <Function description>\nspec:\n  workload: # Workload Capability Indicator\n    definition:\n      apiVersion: <Kubernetes Workload resource group>\n      kind: <Kubernetes Workload types>\n  schematic:  # Component description\n    cue: # Details of components defined by CUE language\n      template: <CUE format template>\n```\n\n## TraitDefinition\nTraitDefinition provides a series of DevOps actions for the component that can be bound on demand. These operation and maintenance actions are usually provided by the platform administrator, such as adding a load balancing strategy, routing strategy, or performing scaler, gray release strategy, etc.\n\nThe format and field functions of the TraitDefinition are as follows:\n\n```yaml\napiVersion: core.oam.dev/v1beta1\nkind: TraitDefinition\nmetadata:\n  name: <TraitDefinition name>\n  annotations:\n    definition.oam.dev/description: <function description>\nspec:\n  definition:\n    apiVersion: <corresponding Kubernetes resource group>\n    kind: <corresponding Kubernetes resource type>\n  workloadRefPath: <The path to the reference field of the Workload object in the Trait>\n  podDisruptive: <whether the parameter update of Trait cause the underlying resource (pod) to restart>\n  manageWorkload: <Whether the workload is managed by this Trait>\n  skipRevisionAffect: <Whether this Trait is not included in the calculation of version changes>\n  appliesToWorkloads:\n  - <Workload that TraitDefinition can adapt to>\n  conflictsWith:\n  - <other Traits that conflict with this><>\n  revisionEnabled: <whether Trait is aware of changes in component version>\n  controlPlaneOnly: <Whether resources generated by trait are dispatched to the hubcluster (local)>\n  schematic:  # Abstract\n    cue: # There are many abstracts\n      template: <CUE format template>\n```\n\n## PolicyDefinition\nPolicyDefinition is simimarly to TraitDefinition, the difference is that TraitDefinition acts on a single component but PolicyDefinition is to act on the entire application as a whole (multiple components).\nIt can provide global policy for applications, commonly including global security policies (such as RBAC permissions, auditing, and key management), application insights (such as application SLO management, etc.).\n\nThe format is as follows:\n\n```yaml\napiVersion: core.oam.dev/v1beta1\nkind: PolicyDefinition\nmetadata:\n  name: <PolicyDefinition name>\n  annotations:\n    definition.oam.dev/description: <function description>\nspec:\n  schematic:  # strategy description\n    cue:\n      template: <CUE format template>\n```\n\n## WorkflowStepDefinition\nWorkflowStepDefinition is used to describe a series of steps that can be declared in the workflow, such as the deployment of execution resources, status check, data output, dependent input, external script call, etc.\n\n```yaml\napiVersion: core.oam.dev/v1beta1\nkind: WorkflowStepDefinition\nmetadata:\n  name: <WorkflowStepDefinition name>\n  annotations:\n    definition.oam.dev/description: <function description>\nspec:\n  schematic:  # node description\n    cue:\n      template: <CUE format template>\n```\n", "metadata": {"source_url": "https://kubevela.io/docs/platform-engineers/oam/x-definition", "title": "KubeVela OAM Definitions", "description": "This page provides detailed information about the OAM definitions in KubeVela, including ComponentDefinition, TraitDefinition, PolicyDefinition, and WorkflowStepDefinition, along with their structures and examples.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-02-28 16:09:43", "type": "overview", "page_metadata": {"favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogUrl": "https://kubevela.io/docs/platform-engineers/oam/x-definition/", "docusaurus_locale": "en", "description": "KubeVela is fully programmable via CUE, while it leverage Kubernetes as control plane and align with the API in yaml.", "og:url": "https://kubevela.io/docs/platform-engineers/oam/x-definition/", "og:title": "OAM Definition Protocol | KubeVela", "docsearch:docusaurus_tag": "docs-default-v1.10", "theme-color": "#ffffff", "docsearch:version": "v1.10", "title": "OAM Definition Protocol | KubeVela", "ogTitle": "OAM Definition Protocol | KubeVela", "og:description": "KubeVela is fully programmable via CUE, while it leverage Kubernetes as control plane and align with the API in yaml.", "viewport": "width=device-width, initial-scale=1.0", "docsearch:language": "en", "msapplication-config": "/img/favicons/browserconfig.xml", "docusaurus_version": "v1.10", "generator": "Docusaurus v2.4.3", "language": "en", "twitter:card": "summary_large_image", "ogDescription": "KubeVela is fully programmable via CUE, while it leverage Kubernetes as control plane and align with the API in yaml.", "docusaurus_tag": "docs-default-v1.10", "scrapeId": "3b1c2f14-4b17-49ab-aee5-7162aebdf585", "sourceURL": "https://kubevela.io/docs/platform-engineers/oam/x-definition", "url": "https://kubevela.io/docs/platform-engineers/oam/x-definition/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"KubeVela OAM Definitions\"?\n\nAssistant: Here are some code examples:\n\n### Basic structure of definition object\n```yaml\napiVersion: core.oam.dev/v1beta1\nkind: XxxDefinition\nmetadata:\n  name: <definition name>\n  annotations:\n    <map of annotations>\n  labels:\n    <map of labels>\nspec:\n  ...\n  schematic:\n    cue:\n      # cue template ...\n  # ... interoperability fields\n\n```\n\n### CUE format framework\n```yaml\n<definition name>: {\n    annotations: {}\n    labels: {}\n    attributes: {}\n    description: \"\"\n    type: \"<definition type>\"\n}\n\ntemplate: {\n    ...\n}\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/platform-engineers/oam/x-definition", "title": "KubeVela OAM Definitions", "description": "This page provides detailed information about the OAM definitions in KubeVela, including ComponentDefinition, TraitDefinition, PolicyDefinition, and WorkflowStepDefinition, along with their structures and examples.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-02-28 16:09:43", "type": "code_examples", "page_metadata": {"favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogUrl": "https://kubevela.io/docs/platform-engineers/oam/x-definition/", "docusaurus_locale": "en", "description": "KubeVela is fully programmable via CUE, while it leverage Kubernetes as control plane and align with the API in yaml.", "og:url": "https://kubevela.io/docs/platform-engineers/oam/x-definition/", "og:title": "OAM Definition Protocol | KubeVela", "docsearch:docusaurus_tag": "docs-default-v1.10", "theme-color": "#ffffff", "docsearch:version": "v1.10", "title": "OAM Definition Protocol | KubeVela", "ogTitle": "OAM Definition Protocol | KubeVela", "og:description": "KubeVela is fully programmable via CUE, while it leverage Kubernetes as control plane and align with the API in yaml.", "viewport": "width=device-width, initial-scale=1.0", "docsearch:language": "en", "msapplication-config": "/img/favicons/browserconfig.xml", "docusaurus_version": "v1.10", "generator": "Docusaurus v2.4.3", "language": "en", "twitter:card": "summary_large_image", "ogDescription": "KubeVela is fully programmable via CUE, while it leverage Kubernetes as control plane and align with the API in yaml.", "docusaurus_tag": "docs-default-v1.10", "scrapeId": "3b1c2f14-4b17-49ab-aee5-7162aebdf585", "sourceURL": "https://kubevela.io/docs/platform-engineers/oam/x-definition", "url": "https://kubevela.io/docs/platform-engineers/oam/x-definition/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela OAM Definitions\"?\n\nAssistant: Here are the recommended best practices:\n\n• Ensure to auto-detect capability indicators where possible to simplify definitions.\n• Use clear and descriptive annotations for better understanding of definitions.\n• Consider the implications of `podDisruptive` when updating traits to avoid unintended disruptions.\n", "metadata": {"source_url": "https://kubevela.io/docs/platform-engineers/oam/x-definition", "title": "KubeVela OAM Definitions", "description": "This page provides detailed information about the OAM definitions in KubeVela, including ComponentDefinition, TraitDefinition, PolicyDefinition, and WorkflowStepDefinition, along with their structures and examples.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-02-28 16:09:43", "type": "best_practices", "page_metadata": {"favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogUrl": "https://kubevela.io/docs/platform-engineers/oam/x-definition/", "docusaurus_locale": "en", "description": "KubeVela is fully programmable via CUE, while it leverage Kubernetes as control plane and align with the API in yaml.", "og:url": "https://kubevela.io/docs/platform-engineers/oam/x-definition/", "og:title": "OAM Definition Protocol | KubeVela", "docsearch:docusaurus_tag": "docs-default-v1.10", "theme-color": "#ffffff", "docsearch:version": "v1.10", "title": "OAM Definition Protocol | KubeVela", "ogTitle": "OAM Definition Protocol | KubeVela", "og:description": "KubeVela is fully programmable via CUE, while it leverage Kubernetes as control plane and align with the API in yaml.", "viewport": "width=device-width, initial-scale=1.0", "docsearch:language": "en", "msapplication-config": "/img/favicons/browserconfig.xml", "docusaurus_version": "v1.10", "generator": "Docusaurus v2.4.3", "language": "en", "twitter:card": "summary_large_image", "ogDescription": "KubeVela is fully programmable via CUE, while it leverage Kubernetes as control plane and align with the API in yaml.", "docusaurus_tag": "docs-default-v1.10", "scrapeId": "3b1c2f14-4b17-49ab-aee5-7162aebdf585", "sourceURL": "https://kubevela.io/docs/platform-engineers/oam/x-definition", "url": "https://kubevela.io/docs/platform-engineers/oam/x-definition/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"vela cluster rename\"?\n\nAssistant: rename managed cluster.\n\nHere's a detailed explanation:\n\n\n## Synopsis\nrename managed cluster.\n\n## Options\n```codeBlockLines_e6Vv\n  -h, --help   help for rename\n```\n\n## Options inherited from parent commands\n```codeBlockLines_e6Vv\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n\n## SEE ALSO\n- [vela cluster](https://kubevela.io/docs/cli/vela_cluster/) \\- Manage Kubernetes clusters.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_cluster_rename", "title": "vela cluster rename", "description": "rename managed cluster.", "has_code_examples": true, "has_best_practices": false, "section_count": 4, "timestamp": "2025-02-28 16:09:48", "type": "overview", "page_metadata": {"docusaurus_tag": "docs-default-v1.10", "ogTitle": "vela cluster rename | KubeVela", "docsearch:version": "v1.10", "og:description": "rename managed cluster.", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "language": "en", "description": "rename managed cluster.", "og:title": "vela cluster rename | KubeVela", "og:url": "https://kubevela.io/docs/cli/vela_cluster_rename/", "theme-color": "#ffffff", "generator": "Docusaurus v2.4.3", "ogDescription": "rename managed cluster.", "docsearch:language": "en", "docusaurus_locale": "en", "docusaurus_version": "v1.10", "ogUrl": "https://kubevela.io/docs/cli/vela_cluster_rename/", "title": "vela cluster rename | KubeVela", "docsearch:docusaurus_tag": "docs-default-v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "viewport": "width=device-width, initial-scale=1.0", "twitter:card": "summary_large_image", "scrapeId": "860a3ebf-3dce-4421-b547-997069299aef", "sourceURL": "https://kubevela.io/docs/cli/vela_cluster_rename", "url": "https://kubevela.io/docs/cli/vela_cluster_rename/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"vela cluster rename\"?\n\nAssistant: Here are some code examples:\n\n### Command to rename a managed cluster\n```yaml\nvela cluster rename [OLD_NAME] [NEW_NAME] [flags]\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_cluster_rename", "title": "vela cluster rename", "description": "rename managed cluster.", "has_code_examples": true, "has_best_practices": false, "section_count": 4, "timestamp": "2025-02-28 16:09:48", "type": "code_examples", "page_metadata": {"docusaurus_tag": "docs-default-v1.10", "ogTitle": "vela cluster rename | KubeVela", "docsearch:version": "v1.10", "og:description": "rename managed cluster.", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "language": "en", "description": "rename managed cluster.", "og:title": "vela cluster rename | KubeVela", "og:url": "https://kubevela.io/docs/cli/vela_cluster_rename/", "theme-color": "#ffffff", "generator": "Docusaurus v2.4.3", "ogDescription": "rename managed cluster.", "docsearch:language": "en", "docusaurus_locale": "en", "docusaurus_version": "v1.10", "ogUrl": "https://kubevela.io/docs/cli/vela_cluster_rename/", "title": "vela cluster rename | KubeVela", "docsearch:docusaurus_tag": "docs-default-v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "viewport": "width=device-width, initial-scale=1.0", "twitter:card": "summary_large_image", "scrapeId": "860a3ebf-3dce-4421-b547-997069299aef", "sourceURL": "https://kubevela.io/docs/cli/vela_cluster_rename", "url": "https://kubevela.io/docs/cli/vela_cluster_rename/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela CLI: Apply UI Schema\"?\n\nAssistant: This page provides details on how to apply a UI schema from a file or directory using the KubeVela CLI.\n\nHere's a detailed explanation:\n\n\n## Synopsis\napply UI schema from a file or dir\n\n## Options\n-h, --help   help for apply\n\n## Options inherited from parent commands\n-V, --verbosity Level   number for the log level verbosity\n-y, --yes               Assume yes for all user prompts\n\n## SEE ALSO\n- [vela uischema](https://kubevela.io/docs/cli/vela_uischema/) - Manage UI schema for addons.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_uischema_apply", "title": "KubeVela CLI: Apply UI Schema", "description": "This page provides details on how to apply a UI schema from a file or directory using the KubeVela CLI.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 16:09:54", "type": "overview", "page_metadata": {"language": "en", "description": "apply \\", "generator": "Docusaurus v2.4.3", "og:url": "https://kubevela.io/docs/cli/vela_uischema_apply/", "og:title": "vela uischema apply | KubeVela", "og:description": "apply \\", "msapplication-config": "/img/favicons/browserconfig.xml", "ogTitle": "vela uischema apply | KubeVela", "ogDescription": "apply \\", "twitter:card": "summary_large_image", "docusaurus_locale": "en", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_version": "v1.10", "docsearch:version": "v1.10", "ogUrl": "https://kubevela.io/docs/cli/vela_uischema_apply/", "docusaurus_tag": "docs-default-v1.10", "docsearch:docusaurus_tag": "docs-default-v1.10", "theme-color": "#ffffff", "title": "vela uischema apply | KubeVela", "viewport": "width=device-width, initial-scale=1.0", "docsearch:language": "en", "scrapeId": "a1782011-7c6e-4974-9ea9-d92e8eb29fc7", "sourceURL": "https://kubevela.io/docs/cli/vela_uischema_apply", "url": "https://kubevela.io/docs/cli/vela_uischema_apply/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"KubeVela CLI: Apply UI Schema\"?\n\nAssistant: Here are some code examples:\n\n### Apply UI Schema Command\n```yaml\nvela uischema apply [flags]\n```\n\n### Help Option\n```yaml\n-h, --help   help for apply\n```\n\n### Verbosity Option\n```yaml\n-V, --verbosity Level   number for the log level verbosity\n```\n\n### Assume Yes Option\n```yaml\n-y, --yes               Assume yes for all user prompts\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_uischema_apply", "title": "KubeVela CLI: Apply UI Schema", "description": "This page provides details on how to apply a UI schema from a file or directory using the KubeVela CLI.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 16:09:54", "type": "code_examples", "page_metadata": {"language": "en", "description": "apply \\", "generator": "Docusaurus v2.4.3", "og:url": "https://kubevela.io/docs/cli/vela_uischema_apply/", "og:title": "vela uischema apply | KubeVela", "og:description": "apply \\", "msapplication-config": "/img/favicons/browserconfig.xml", "ogTitle": "vela uischema apply | KubeVela", "ogDescription": "apply \\", "twitter:card": "summary_large_image", "docusaurus_locale": "en", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_version": "v1.10", "docsearch:version": "v1.10", "ogUrl": "https://kubevela.io/docs/cli/vela_uischema_apply/", "docusaurus_tag": "docs-default-v1.10", "docsearch:docusaurus_tag": "docs-default-v1.10", "theme-color": "#ffffff", "title": "vela uischema apply | KubeVela", "viewport": "width=device-width, initial-scale=1.0", "docsearch:language": "en", "scrapeId": "a1782011-7c6e-4974-9ea9-d92e8eb29fc7", "sourceURL": "https://kubevela.io/docs/cli/vela_uischema_apply", "url": "https://kubevela.io/docs/cli/vela_uischema_apply/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela CLI: Apply UI Schema\"?\n\nAssistant: Here are the recommended best practices:\n\n• If you like KubeVela, give it a star on GitHub!\n• Check the release notes for the latest version updates.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_uischema_apply", "title": "KubeVela CLI: Apply UI Schema", "description": "This page provides details on how to apply a UI schema from a file or directory using the KubeVela CLI.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 16:09:54", "type": "best_practices", "page_metadata": {"language": "en", "description": "apply \\", "generator": "Docusaurus v2.4.3", "og:url": "https://kubevela.io/docs/cli/vela_uischema_apply/", "og:title": "vela uischema apply | KubeVela", "og:description": "apply \\", "msapplication-config": "/img/favicons/browserconfig.xml", "ogTitle": "vela uischema apply | KubeVela", "ogDescription": "apply \\", "twitter:card": "summary_large_image", "docusaurus_locale": "en", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_version": "v1.10", "docsearch:version": "v1.10", "ogUrl": "https://kubevela.io/docs/cli/vela_uischema_apply/", "docusaurus_tag": "docs-default-v1.10", "docsearch:docusaurus_tag": "docs-default-v1.10", "theme-color": "#ffffff", "title": "vela uischema apply | KubeVela", "viewport": "width=device-width, initial-scale=1.0", "docsearch:language": "en", "scrapeId": "a1782011-7c6e-4974-9ea9-d92e8eb29fc7", "sourceURL": "https://kubevela.io/docs/cli/vela_uischema_apply", "url": "https://kubevela.io/docs/cli/vela_uischema_apply/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela CLI - Cluster Alias\"?\n\nAssistant: This page provides information on how to create an alias for a named cluster using the KubeVela CLI.\n\nHere's a detailed explanation:\n\n\n## Synopsis\nalias a named cluster.\n\n## Options\n-h, --help   help for alias\n\n## Options inherited from parent commands\n-V, --verbosity Level   number for the log level verbosity\n-y, --yes               Assume yes for all user prompts\n\n## SEE ALSO\n- [vela cluster](https://kubevela.io/docs/cli/vela_cluster/) - Manage Kubernetes clusters.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_cluster_alias", "title": "KubeVela CLI - Cluster Alias", "description": "This page provides information on how to create an alias for a named cluster using the KubeVela CLI.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 16:09:59", "type": "overview", "page_metadata": {"docusaurus_tag": "docs-default-v1.10", "theme-color": "#ffffff", "twitter:card": "summary_large_image", "ogUrl": "https://kubevela.io/docs/cli/vela_cluster_alias/", "description": "alias a named cluster.", "msapplication-config": "/img/favicons/browserconfig.xml", "ogDescription": "alias a named cluster.", "docusaurus_locale": "en", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:title": "vela cluster alias | KubeVela", "docsearch:language": "en", "ogTitle": "vela cluster alias | KubeVela", "docsearch:version": "v1.10", "docusaurus_version": "v1.10", "og:description": "alias a named cluster.", "language": "en", "viewport": "width=device-width, initial-scale=1.0", "title": "vela cluster alias | KubeVela", "generator": "Docusaurus v2.4.3", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "og:url": "https://kubevela.io/docs/cli/vela_cluster_alias/", "scrapeId": "a9d3ff6a-577b-406a-bdeb-24e8c5722913", "sourceURL": "https://kubevela.io/docs/cli/vela_cluster_alias", "url": "https://kubevela.io/docs/cli/vela_cluster_alias/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"KubeVela CLI - Cluster Alias\"?\n\nAssistant: Here are some code examples:\n\n### Command to create an alias for a cluster\n```yaml\nvela cluster alias CLUSTER_NAME ALIAS [flags]\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_cluster_alias", "title": "KubeVela CLI - Cluster Alias", "description": "This page provides information on how to create an alias for a named cluster using the KubeVela CLI.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 16:09:59", "type": "code_examples", "page_metadata": {"docusaurus_tag": "docs-default-v1.10", "theme-color": "#ffffff", "twitter:card": "summary_large_image", "ogUrl": "https://kubevela.io/docs/cli/vela_cluster_alias/", "description": "alias a named cluster.", "msapplication-config": "/img/favicons/browserconfig.xml", "ogDescription": "alias a named cluster.", "docusaurus_locale": "en", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:title": "vela cluster alias | KubeVela", "docsearch:language": "en", "ogTitle": "vela cluster alias | KubeVela", "docsearch:version": "v1.10", "docusaurus_version": "v1.10", "og:description": "alias a named cluster.", "language": "en", "viewport": "width=device-width, initial-scale=1.0", "title": "vela cluster alias | KubeVela", "generator": "Docusaurus v2.4.3", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "og:url": "https://kubevela.io/docs/cli/vela_cluster_alias/", "scrapeId": "a9d3ff6a-577b-406a-bdeb-24e8c5722913", "sourceURL": "https://kubevela.io/docs/cli/vela_cluster_alias", "url": "https://kubevela.io/docs/cli/vela_cluster_alias/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela CLI - Cluster Alias\"?\n\nAssistant: Here are the recommended best practices:\n\n• If you like KubeVela, give it a star on GitHub!\n• Check the release notes for the latest updates.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_cluster_alias", "title": "KubeVela CLI - Cluster Alias", "description": "This page provides information on how to create an alias for a named cluster using the KubeVela CLI.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 16:09:59", "type": "best_practices", "page_metadata": {"docusaurus_tag": "docs-default-v1.10", "theme-color": "#ffffff", "twitter:card": "summary_large_image", "ogUrl": "https://kubevela.io/docs/cli/vela_cluster_alias/", "description": "alias a named cluster.", "msapplication-config": "/img/favicons/browserconfig.xml", "ogDescription": "alias a named cluster.", "docusaurus_locale": "en", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:title": "vela cluster alias | KubeVela", "docsearch:language": "en", "ogTitle": "vela cluster alias | KubeVela", "docsearch:version": "v1.10", "docusaurus_version": "v1.10", "og:description": "alias a named cluster.", "language": "en", "viewport": "width=device-width, initial-scale=1.0", "title": "vela cluster alias | KubeVela", "generator": "Docusaurus v2.4.3", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "og:url": "https://kubevela.io/docs/cli/vela_cluster_alias/", "scrapeId": "a9d3ff6a-577b-406a-bdeb-24e8c5722913", "sourceURL": "https://kubevela.io/docs/cli/vela_cluster_alias", "url": "https://kubevela.io/docs/cli/vela_cluster_alias/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"Vela Workflow Resume\"?\n\nAssistant: Resume a suspend workflow in cluster.\n\nHere's a detailed explanation:\n\n\n## Synopsis\nResume a suspend workflow in cluster.\n\n## Examples\n```codeBlockLines_e6Vv\nvela workflow resume <workflow-name>\n```\n\n## Options\n```codeBlockLines_e6Vv\n  -e, --env string         specify environment name for application\n  -h, --help               help for resume\n  -n, --namespace string   specify the Kubernetes namespace to use\n  -s, --step string        specify the step name in the workflow\n  -t, --type string        the type of the resource, support: [app, workflow]\n```\n\n## Options inherited from parent commands\n```codeBlockLines_e6Vv\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n\n## SEE ALSO\n- [vela workflow](https://kubevela.io/docs/cli/vela_workflow/) \\- Operate application delivery workflow.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_workflow_resume", "title": "Vela Workflow Resume", "description": "Resume a suspend workflow in cluster.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 16:10:07", "type": "overview", "page_metadata": {"title": "vela workflow resume | KubeVela", "docsearch:docusaurus_tag": "docs-default-v1.10", "docusaurus_tag": "docs-default-v1.10", "docsearch:version": "v1.10", "docusaurus_version": "v1.10", "ogTitle": "vela workflow resume | KubeVela", "docusaurus_locale": "en", "ogUrl": "https://kubevela.io/docs/cli/vela_workflow_resume/", "language": "en", "docsearch:language": "en", "description": "Resume a suspend workflow.", "generator": "Docusaurus v2.4.3", "og:description": "Resume a suspend workflow.", "ogDescription": "Resume a suspend workflow.", "og:title": "vela workflow resume | KubeVela", "theme-color": "#ffffff", "viewport": "width=device-width, initial-scale=1.0", "og:url": "https://kubevela.io/docs/cli/vela_workflow_resume/", "twitter:card": "summary_large_image", "msapplication-config": "/img/favicons/browserconfig.xml", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "scrapeId": "5178bf29-9e4e-4d55-ab23-11aadceb41ed", "sourceURL": "https://kubevela.io/docs/cli/vela_workflow_resume", "url": "https://kubevela.io/docs/cli/vela_workflow_resume/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"Vela Workflow Resume\"?\n\nAssistant: Here are some code examples:\n\n### Resume a suspend workflow\n```yaml\nvela workflow resume <workflow-name>\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_workflow_resume", "title": "Vela Workflow Resume", "description": "Resume a suspend workflow in cluster.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 16:10:07", "type": "code_examples", "page_metadata": {"title": "vela workflow resume | KubeVela", "docsearch:docusaurus_tag": "docs-default-v1.10", "docusaurus_tag": "docs-default-v1.10", "docsearch:version": "v1.10", "docusaurus_version": "v1.10", "ogTitle": "vela workflow resume | KubeVela", "docusaurus_locale": "en", "ogUrl": "https://kubevela.io/docs/cli/vela_workflow_resume/", "language": "en", "docsearch:language": "en", "description": "Resume a suspend workflow.", "generator": "Docusaurus v2.4.3", "og:description": "Resume a suspend workflow.", "ogDescription": "Resume a suspend workflow.", "og:title": "vela workflow resume | KubeVela", "theme-color": "#ffffff", "viewport": "width=device-width, initial-scale=1.0", "og:url": "https://kubevela.io/docs/cli/vela_workflow_resume/", "twitter:card": "summary_large_image", "msapplication-config": "/img/favicons/browserconfig.xml", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "scrapeId": "5178bf29-9e4e-4d55-ab23-11aadceb41ed", "sourceURL": "https://kubevela.io/docs/cli/vela_workflow_resume", "url": "https://kubevela.io/docs/cli/vela_workflow_resume/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"Vela Workflow Resume\"?\n\nAssistant: Here are the recommended best practices:\n\n• If you like KubeVela, give it a star on GitHub!\n• KubeVela v1.10.0 is now available.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_workflow_resume", "title": "Vela Workflow Resume", "description": "Resume a suspend workflow in cluster.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 16:10:07", "type": "best_practices", "page_metadata": {"title": "vela workflow resume | KubeVela", "docsearch:docusaurus_tag": "docs-default-v1.10", "docusaurus_tag": "docs-default-v1.10", "docsearch:version": "v1.10", "docusaurus_version": "v1.10", "ogTitle": "vela workflow resume | KubeVela", "docusaurus_locale": "en", "ogUrl": "https://kubevela.io/docs/cli/vela_workflow_resume/", "language": "en", "docsearch:language": "en", "description": "Resume a suspend workflow.", "generator": "Docusaurus v2.4.3", "og:description": "Resume a suspend workflow.", "ogDescription": "Resume a suspend workflow.", "og:title": "vela workflow resume | KubeVela", "theme-color": "#ffffff", "viewport": "width=device-width, initial-scale=1.0", "og:url": "https://kubevela.io/docs/cli/vela_workflow_resume/", "twitter:card": "summary_large_image", "msapplication-config": "/img/favicons/browserconfig.xml", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "scrapeId": "5178bf29-9e4e-4d55-ab23-11aadceb41ed", "sourceURL": "https://kubevela.io/docs/cli/vela_workflow_resume", "url": "https://kubevela.io/docs/cli/vela_workflow_resume/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"Nacos Integration with KubeVela\"?\n\nAssistant: This page covers how to integrate Nacos with KubeVela for dynamic service discovery and configuration management.\n\nHere's a detailed explanation:\n\n\n## Nacos Integration\nBy default, KubeVela saves the config as a Secret. We could define the template and write the config to the Nacos server. In this case, the role of KubeVela is to check the config content and generate the configuration in a certain format and synchronize it to Nacos. Then, you could write the config to Nacos in Workflow and Pipeline.\n\n## Connector a Nacos server\nMake sure there is a config template named `nacos-server`.\n\n```codeBlockLines_e6Vv\nvela config-template show nacos-server\n```\n\nExpected Outputs\n\n```codeBlockLines_e6Vv\n+---------+--------+--------------------------------+----------+---------+---------+\n|  NAME   |  TYPE  |          DESCRIPTION           | REQUIRED | OPTIONS | DEFAULT |\n+---------+--------+--------------------------------+----------+---------+---------+\n| client  | object | Discover the Nacos servers by  | false    |         |         |\n|         |        | the client.                    |          |         |         |\n| servers | array  | Directly configure the Nacos   | false    |         |         |\n|         |        | server address                 |          |         |         |\n+---------+--------+--------------------------------+----------+---------+---------+\nclient\n+--------------------+---------+--------------------------------------------+----------+---------+---------+\n|        NAME        |  TYPE   |                DESCRIPTION                 | REQUIRED | OPTIONS | DEFAULT |\n+--------------------+---------+--------------------------------------------+----------+---------+---------+\n| (client).password  | string  | the password for nacos auth                | false    |         |         |\n| (client).regionId  | string  | the regionId for kms                       | false    |         |         |\n| (client).secretKey | string  | the SecretKey for kms                      | false    |         |         |\n| (client).username  | string  | the username for nacos auth                | false    |         |         |\n| (client).accessKey | string  | the AccessKey for kms                      | false    |         |         |\n| (client).endpoint  | string  | the endpoint for get Nacos                 | true     |         |         |\n|                    |         | server addresses                           |          |         |         |\n| (client).openKMS   | boolean | it's to open kms,default is false.         | false    |         |         |\n|                    |         | https://help.aliyun.com/product/28933.html |          |         |         |\n+--------------------+---------+--------------------------------------------+----------+---------+---------+\n```\n\nThen create a config to connect the Nacos server:\n\n```codeBlockLines_e6Vv\nvela config create nacos --template nacos-server servers[0].ipAddr=127.0.0.1 servers[0].port=8849\n```\n\n## Define a template\nThere is a default template to help you publish the config to the Nacos:\n\n```codeBlockLines_e6Vv\nvela config-template show nacos-config\n```\n\nExpected Outputs\n\n```codeBlockLines_e6Vv\n+-------------+--------+--------------------------------+----------+------------------------+---------------+\n|    NAME     |  TYPE  |          DESCRIPTION           | REQUIRED |        OPTIONS         |    DEFAULT    |\n+-------------+--------+--------------------------------+----------+------------------------+---------------+\n| tag         | string | The tag of the configuration   | false    |                        |               |\n| tenant      | string | The tenant, corresponding      | false    |                        |               |\n|             |        | to the namespace ID field of   |          |                        |               |\n|             |        | Nacos                          |          |                        |               |\n| appName     | string | The app name of the            | false    |                        |               |\n|             |        | configuration                  |          |                        |               |\n| content     | object | The configuration content.     | true     |                        |               |\n| contentType | string |                                | true     | json,yaml,properties,toml | json          |\n| dataId      | string | Configuration ID               | true     |                        |               |\n| group       | string | Configuration group            | true     |                        | DEFAULT_GROUP |\n| namespaceId | string | The namespaceId of the         | false    |                        |               |\n|             |        | configuration                  |          |                        |               |\n+-------------+--------+--------------------------------+----------+------------------------+---------------+\n```\n\nThis template cue is like this:\n\n```codeBlockLines_e6Vv\nmetadata: {\n    name:        \"nacos-config\"\n    alias:       \"Nacos Configuration\"\n    description: \"Write the configuration to the nacos\"\n    sensitive:   false\n    scope:       \"system\"\n}\n\ntemplate: {\n    nacos: {\n        // The endpoint can not references the parameter.\n        endpoint: {\n            // Users must create a config base the nacos-server template firstly.\n            name: \"nacos\"\n        }\n        format: parameter.contentType\n\n        // could references the parameter\n        metadata: {\n            dataId: parameter.dataId\n            group:  parameter.group\n            if parameter.appName != _|_ {\n                appName: parameter.appName\n            }\n            if parameter.namespaceId != _|_ {\n                namespaceId: parameter.namespaceId\n            }\n            if parameter.tenant != _|_ {\n                tenant: parameter.tenant\n            }\n            if parameter.tag != _|_ {\n                tag: parameter.tag\n            }\n        }\n        content: parameter.content\n    }\n    parameter: {\n        // +usage=Configuration ID\n        dataId: string\n        // +usage=Configuration group\n        group: *\"DEFAULT_GROUP\" | string\n        // +usage=The configuration content.\n        content: {\n            ...\n        }\n        contentType: *\"json\" | \"yaml\" | \"properties\" | \"toml\"\n        // +usage=The app name of the configuration\n        appName?: string\n        // +usage=The namespaceId of the configuration\n        namespaceId?: string\n        // +usage=The tenant, corresponding to the namespace ID field of Nacos\n        tenant?: string\n        // +usage=The tag of the configuration\n        tag?: string\n    }\n}\n```\n\nThe template includes the `template.nacos` section means the config created with this template should be written to the Nacos, There are some important sections:\n\n- `template.nacos.endpoint` KubeVela will read the Nacos server connector info from the provided config.\n- `template.nacos.format` KubeVela will generate the configuration content with the provided format. Supported options include `json`, `yaml`, `properties`, and `toml`.\n\nYou could refer to this template to custom the scene template. Expose the required parameters.\n\n## Write a config to Nacos\n```codeBlockLines_e6Vv\nvela config create db-config --template nacos-config dataId=db group=\"DEFAULT_GROUP\" contentType=\"properties\" content.host=127.0.0.1 content.port=3306 content.username=root\n```\n\nThen, the content will be written to the Nacos server.\n\n```codeBlockLines_e6Vv\nhost = 127.0.0.1\nport = 3306\nusername = root\n```\n\nAfter the command is executed successfully, let's check the config in the Nacos Dashboard.\n", "metadata": {"source_url": "https://kubevela.io/docs/how-to/dashboard/config/nacos", "title": "Nacos Integration with KubeVela", "description": "This page covers how to integrate Nacos with KubeVela for dynamic service discovery and configuration management.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 16:10:30", "type": "overview", "page_metadata": {"docsearch:language": "en", "title": "Write Config To Nacos | KubeVela", "generator": "Docusaurus v2.4.3", "docsearch:version": "v1.10", "language": "en", "viewport": "width=device-width, initial-scale=1.0", "docusaurus_tag": "docs-default-v1.10", "og:url": "https://kubevela.io/docs/how-to/dashboard/config/nacos/", "ogDescription": "Nacos /nɑ:kəʊs/ is the acronym for 'Dynamic Naming and Configuration Service', an easy-to-use dynamic service discovery, configuration and service management platform for building cloud-native applications。", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogTitle": "Write Config To Nacos | KubeVela", "ogUrl": "https://kubevela.io/docs/how-to/dashboard/config/nacos/", "twitter:card": "summary_large_image", "og:title": "Write Config To Nacos | KubeVela", "msapplication-config": "/img/favicons/browserconfig.xml", "theme-color": "#ffffff", "docusaurus_version": "v1.10", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:description": "Nacos /nɑ:kəʊs/ is the acronym for 'Dynamic Naming and Configuration Service', an easy-to-use dynamic service discovery, configuration and service management platform for building cloud-native applications。", "docusaurus_locale": "en", "description": "Nacos /nɑ:kəʊs/ is the acronym for 'Dynamic Naming and Configuration Service', an easy-to-use dynamic service discovery, configuration and service management platform for building cloud-native applications。", "scrapeId": "270ee6cc-f5dc-4b88-bf84-8cc93c9392cc", "sourceURL": "https://kubevela.io/docs/how-to/dashboard/config/nacos", "url": "https://kubevela.io/docs/how-to/dashboard/config/nacos/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"Nacos Integration with KubeVela\"?\n\nAssistant: Here are some code examples:\n\n### Show Nacos Server Config Template\n```yaml\nvela config-template show nacos-server\n```\n\n### Create Nacos Server Config\n```yaml\nvela config create nacos --template nacos-server servers[0].ipAddr=127.0.0.1 servers[0].port=8849\n```\n\n### Show Nacos Config Template\n```yaml\nvela config-template show nacos-config\n```\n\n### Create DB Config in Nacos\n```yaml\nvela config create db-config --template nacos-config dataId=db group=\"DEFAULT_GROUP\" contentType=\"properties\" content.host=127.0.0.1 content.port=3306 content.username=root\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/how-to/dashboard/config/nacos", "title": "Nacos Integration with KubeVela", "description": "This page covers how to integrate Nacos with KubeVela for dynamic service discovery and configuration management.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 16:10:30", "type": "code_examples", "page_metadata": {"docsearch:language": "en", "title": "Write Config To Nacos | KubeVela", "generator": "Docusaurus v2.4.3", "docsearch:version": "v1.10", "language": "en", "viewport": "width=device-width, initial-scale=1.0", "docusaurus_tag": "docs-default-v1.10", "og:url": "https://kubevela.io/docs/how-to/dashboard/config/nacos/", "ogDescription": "Nacos /nɑ:kəʊs/ is the acronym for 'Dynamic Naming and Configuration Service', an easy-to-use dynamic service discovery, configuration and service management platform for building cloud-native applications。", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogTitle": "Write Config To Nacos | KubeVela", "ogUrl": "https://kubevela.io/docs/how-to/dashboard/config/nacos/", "twitter:card": "summary_large_image", "og:title": "Write Config To Nacos | KubeVela", "msapplication-config": "/img/favicons/browserconfig.xml", "theme-color": "#ffffff", "docusaurus_version": "v1.10", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:description": "Nacos /nɑ:kəʊs/ is the acronym for 'Dynamic Naming and Configuration Service', an easy-to-use dynamic service discovery, configuration and service management platform for building cloud-native applications。", "docusaurus_locale": "en", "description": "Nacos /nɑ:kəʊs/ is the acronym for 'Dynamic Naming and Configuration Service', an easy-to-use dynamic service discovery, configuration and service management platform for building cloud-native applications。", "scrapeId": "270ee6cc-f5dc-4b88-bf84-8cc93c9392cc", "sourceURL": "https://kubevela.io/docs/how-to/dashboard/config/nacos", "url": "https://kubevela.io/docs/how-to/dashboard/config/nacos/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"Nacos Integration with KubeVela\"?\n\nAssistant: Here are the recommended best practices:\n\n• Ensure that the Nacos server is properly configured before attempting to connect.\n• Use the correct format for configuration content (json, yaml, properties, toml) as required by your application.\n• Check the Nacos Dashboard after creating configurations to verify that they have been written correctly.\n", "metadata": {"source_url": "https://kubevela.io/docs/how-to/dashboard/config/nacos", "title": "Nacos Integration with KubeVela", "description": "This page covers how to integrate Nacos with KubeVela for dynamic service discovery and configuration management.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 16:10:30", "type": "best_practices", "page_metadata": {"docsearch:language": "en", "title": "Write Config To Nacos | KubeVela", "generator": "Docusaurus v2.4.3", "docsearch:version": "v1.10", "language": "en", "viewport": "width=device-width, initial-scale=1.0", "docusaurus_tag": "docs-default-v1.10", "og:url": "https://kubevela.io/docs/how-to/dashboard/config/nacos/", "ogDescription": "Nacos /nɑ:kəʊs/ is the acronym for 'Dynamic Naming and Configuration Service', an easy-to-use dynamic service discovery, configuration and service management platform for building cloud-native applications。", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogTitle": "Write Config To Nacos | KubeVela", "ogUrl": "https://kubevela.io/docs/how-to/dashboard/config/nacos/", "twitter:card": "summary_large_image", "og:title": "Write Config To Nacos | KubeVela", "msapplication-config": "/img/favicons/browserconfig.xml", "theme-color": "#ffffff", "docusaurus_version": "v1.10", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:description": "Nacos /nɑ:kəʊs/ is the acronym for 'Dynamic Naming and Configuration Service', an easy-to-use dynamic service discovery, configuration and service management platform for building cloud-native applications。", "docusaurus_locale": "en", "description": "Nacos /nɑ:kəʊs/ is the acronym for 'Dynamic Naming and Configuration Service', an easy-to-use dynamic service discovery, configuration and service management platform for building cloud-native applications。", "scrapeId": "270ee6cc-f5dc-4b88-bf84-8cc93c9392cc", "sourceURL": "https://kubevela.io/docs/how-to/dashboard/config/nacos", "url": "https://kubevela.io/docs/how-to/dashboard/config/nacos/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"vela trait get\"?\n\nAssistant: get trait from registry\n\nHere's a detailed explanation:\n\n\n## Synopsis\nget trait from registry\n\n## Examples\n```codeBlockLines_e6Vv\nvela trait get <trait>\n```\n\n## Options\n```codeBlockLines_e6Vv\n  -h, --help   help for get\n```\n\n## Options inherited from parent commands\n```codeBlockLines_e6Vv\n      --registry string   specify the registry name (default \"default\")\n      --token string      specify token when using --url to specify registry url\n      --url string        specify the registry URL\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n\n## SEE ALSO\n- [vela trait](https://kubevela.io/docs/cli/vela_trait/) \\- List/get traits.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_trait_get", "title": "vela trait get", "description": "get trait from registry", "has_code_examples": true, "has_best_practices": false, "section_count": 5, "timestamp": "2025-02-28 16:10:36", "type": "overview", "page_metadata": {"description": "get trait from registry", "viewport": "width=device-width, initial-scale=1.0", "docsearch:language": "en", "ogTitle": "vela trait get | KubeVela", "twitter:card": "summary_large_image", "title": "vela trait get | KubeVela", "theme-color": "#ffffff", "ogUrl": "https://kubevela.io/docs/cli/vela_trait_get/", "docusaurus_tag": "docs-default-v1.10", "language": "en", "og:description": "get trait from registry", "ogDescription": "get trait from registry", "docsearch:version": "v1.10", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "og:url": "https://kubevela.io/docs/cli/vela_trait_get/", "docusaurus_version": "v1.10", "og:title": "vela trait get | KubeVela", "docusaurus_locale": "en", "generator": "Docusaurus v2.4.3", "docsearch:docusaurus_tag": "docs-default-v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "scrapeId": "74d935f3-a54f-45d0-b60e-f3e21675193e", "sourceURL": "https://kubevela.io/docs/cli/vela_trait_get", "url": "https://kubevela.io/docs/cli/vela_trait_get/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"vela trait get\"?\n\nAssistant: Here are some code examples:\n\n### Command to get trait\n```yaml\nvela trait get <trait>\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_trait_get", "title": "vela trait get", "description": "get trait from registry", "has_code_examples": true, "has_best_practices": false, "section_count": 5, "timestamp": "2025-02-28 16:10:36", "type": "code_examples", "page_metadata": {"description": "get trait from registry", "viewport": "width=device-width, initial-scale=1.0", "docsearch:language": "en", "ogTitle": "vela trait get | KubeVela", "twitter:card": "summary_large_image", "title": "vela trait get | KubeVela", "theme-color": "#ffffff", "ogUrl": "https://kubevela.io/docs/cli/vela_trait_get/", "docusaurus_tag": "docs-default-v1.10", "language": "en", "og:description": "get trait from registry", "ogDescription": "get trait from registry", "docsearch:version": "v1.10", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "og:url": "https://kubevela.io/docs/cli/vela_trait_get/", "docusaurus_version": "v1.10", "og:title": "vela trait get | KubeVela", "docusaurus_locale": "en", "generator": "Docusaurus v2.4.3", "docsearch:docusaurus_tag": "docs-default-v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "scrapeId": "74d935f3-a54f-45d0-b60e-f3e21675193e", "sourceURL": "https://kubevela.io/docs/cli/vela_trait_get", "url": "https://kubevela.io/docs/cli/vela_trait_get/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela Webservice Documentation\"?\n\nAssistant: This page provides information on deploying service-oriented components using KubeVela, including code examples and deployment status checks.\n\nHere's a detailed explanation:\n\n\n## Introduction\nService-oriented components are components that support external access to services with the container as the core, and their functions cover the needs of most of the microservice scenarios.\n\n## Deploying a Webservice\nPlease copy shell below and apply to the cluster:\n\n```codeBlockLines_e6Vv\ncat <<EOF | vela up -f -\n# YAML begins\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: website\nspec:\n  components:\n    - name: frontend\n      type: webservice\n      properties:\n        image: oamdev/testapp:v1\n        cmd: [\"node\", \"server.js\"]\n        ports:\n          - port: 8080\n        cpu: \"0.1\"\n        env:\n          - name: FOO\n            value: bar\n# YAML ends\nEOF\n``\n\nYou can also save the YAML file as website.yaml and use the `vela up -f website.yaml` command to deploy.\n\n## Checking Deployment Status\nNext, check the deployment status of the application through `vela status <application name>`:\n\n```codeBlockLines_e6Vv\n$ vela status website\nAbout:\n\n  Name:         website\n  Namespace:    default\n  Created at:   2022-01-11 21:04:59 +0800 CST\n  Status:       running\n\nWorkflow:\n\n  mode: DAG\n  finished: true\n  Suspend: false\n  Terminated: false\n  Steps\n  - id:2y4rv8479h\n    name:frontend\n    type:apply-component\n    phase:succeeded\n    message:\n\nServices:\n\n  - Name: frontend  Env:\n    Type: webservice\n    healthy Ready:1/1\n```\n\nWhen we see that the `finished` field in Workflow is `true` and the Status is `running`, it means that the entire application is delivered successfully.\n\n## Troubleshooting\nIf status shows as rendering or healthy as false, it means that the application has either failed to deploy or is still being deployed. Please proceed according to the information returned in `kubectl get application <application name> -o yaml`.\n\n## Viewing Application List\nYou can also view application list by using the following command:\n\n```codeBlockLines_e6Vv\n$ vela ls\nAPP     COMPONENT   TYPE        TRAITS  PHASE   HEALTHY STATUS  CREATED-TIME\nwebsite frontend    webservice          running healthy         2021-08-28 18:26:47 +0800 CST\n```\n\nWe also see that the PHASE of the app is running and the STATUS is healthy.\n", "metadata": {"source_url": "https://kubevela.io/docs/end-user/components/cue/webservice", "title": "KubeVela Webservice Documentation", "description": "This page provides information on deploying service-oriented components using KubeVela, including code examples and deployment status checks.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 16:10:58", "type": "overview", "page_metadata": {"msapplication-config": "/img/favicons/browserconfig.xml", "description": "Service-oriented components are components that support external access to services with the container as the core, and their functions cover the needs of most of he microservice scenarios.", "language": "en", "docusaurus_version": "v1.10", "docusaurus_tag": "docs-default-v1.10", "og:url": "https://kubevela.io/docs/end-user/components/cue/webservice/", "ogTitle": "Deploy Container as Web Service | KubeVela", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:description": "Service-oriented components are components that support external access to services with the container as the core, and their functions cover the needs of most of he microservice scenarios.", "docusaurus_locale": "en", "title": "Deploy Container as Web Service | KubeVela", "docsearch:version": "v1.10", "ogUrl": "https://kubevela.io/docs/end-user/components/cue/webservice/", "generator": "Docusaurus v2.4.3", "og:title": "Deploy Container as Web Service | KubeVela", "theme-color": "#ffffff", "docsearch:language": "en", "ogDescription": "Service-oriented components are components that support external access to services with the container as the core, and their functions cover the needs of most of he microservice scenarios.", "twitter:card": "summary_large_image", "viewport": "width=device-width, initial-scale=1.0", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "scrapeId": "3342afa0-49f5-45e3-a07b-f520f0388ea4", "sourceURL": "https://kubevela.io/docs/end-user/components/cue/webservice", "url": "https://kubevela.io/docs/end-user/components/cue/webservice/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"KubeVela Webservice Documentation\"?\n\nAssistant: Here are some code examples:\n\n### Deploying a Webservice\n```yaml\ncat <<EOF | vela up -f -\n# YAML begins\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: website\nspec:\n  components:\n    - name: frontend\n      type: webservice\n      properties:\n        image: oamdev/testapp:v1\n        cmd: [\"node\", \"server.js\"]\n        ports:\n          - port: 8080\n        cpu: \"0.1\"\n        env:\n          - name: FOO\n            value: bar\n# YAML ends\nEOF\n```\n\n### Checking Deployment Status\n```yaml\n$ vela status website\nAbout:\n\n  Name:         website\n  Namespace:    default\n  Created at:   2022-01-11 21:04:59 +0800 CST\n  Status:       running\n\nWorkflow:\n\n  mode: DAG\n  finished: true\n  Suspend: false\n  Terminated: false\n  Steps\n  - id:2y4rv8479h\n    name:frontend\n    type:apply-component\n    phase:succeeded\n    message:\n\nServices:\n\n  - Name: frontend  Env:\n    Type: webservice\n    healthy Ready:1/1\n```\n\n### Viewing Application List\n```yaml\n$ vela ls\nAPP     COMPONENT   TYPE        TRAITS  PHASE   HEALTHY STATUS  CREATED-TIME\nwebsite frontend    webservice          running healthy         2021-08-28 18:26:47 +0800 CST\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/end-user/components/cue/webservice", "title": "KubeVela Webservice Documentation", "description": "This page provides information on deploying service-oriented components using KubeVela, including code examples and deployment status checks.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 16:10:58", "type": "code_examples", "page_metadata": {"msapplication-config": "/img/favicons/browserconfig.xml", "description": "Service-oriented components are components that support external access to services with the container as the core, and their functions cover the needs of most of he microservice scenarios.", "language": "en", "docusaurus_version": "v1.10", "docusaurus_tag": "docs-default-v1.10", "og:url": "https://kubevela.io/docs/end-user/components/cue/webservice/", "ogTitle": "Deploy Container as Web Service | KubeVela", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:description": "Service-oriented components are components that support external access to services with the container as the core, and their functions cover the needs of most of he microservice scenarios.", "docusaurus_locale": "en", "title": "Deploy Container as Web Service | KubeVela", "docsearch:version": "v1.10", "ogUrl": "https://kubevela.io/docs/end-user/components/cue/webservice/", "generator": "Docusaurus v2.4.3", "og:title": "Deploy Container as Web Service | KubeVela", "theme-color": "#ffffff", "docsearch:language": "en", "ogDescription": "Service-oriented components are components that support external access to services with the container as the core, and their functions cover the needs of most of he microservice scenarios.", "twitter:card": "summary_large_image", "viewport": "width=device-width, initial-scale=1.0", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "scrapeId": "3342afa0-49f5-45e3-a07b-f520f0388ea4", "sourceURL": "https://kubevela.io/docs/end-user/components/cue/webservice", "url": "https://kubevela.io/docs/end-user/components/cue/webservice/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela Webservice Documentation\"?\n\nAssistant: Here are the recommended best practices:\n\n• If the application status shows as rendering or healthy as false, check the output of `kubectl get application <application name> -o yaml` for troubleshooting.\n• Ensure that the `finished` field in Workflow is `true` and the Status is `running` to confirm successful deployment.\n", "metadata": {"source_url": "https://kubevela.io/docs/end-user/components/cue/webservice", "title": "KubeVela Webservice Documentation", "description": "This page provides information on deploying service-oriented components using KubeVela, including code examples and deployment status checks.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 16:10:58", "type": "best_practices", "page_metadata": {"msapplication-config": "/img/favicons/browserconfig.xml", "description": "Service-oriented components are components that support external access to services with the container as the core, and their functions cover the needs of most of he microservice scenarios.", "language": "en", "docusaurus_version": "v1.10", "docusaurus_tag": "docs-default-v1.10", "og:url": "https://kubevela.io/docs/end-user/components/cue/webservice/", "ogTitle": "Deploy Container as Web Service | KubeVela", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:description": "Service-oriented components are components that support external access to services with the container as the core, and their functions cover the needs of most of he microservice scenarios.", "docusaurus_locale": "en", "title": "Deploy Container as Web Service | KubeVela", "docsearch:version": "v1.10", "ogUrl": "https://kubevela.io/docs/end-user/components/cue/webservice/", "generator": "Docusaurus v2.4.3", "og:title": "Deploy Container as Web Service | KubeVela", "theme-color": "#ffffff", "docsearch:language": "en", "ogDescription": "Service-oriented components are components that support external access to services with the container as the core, and their functions cover the needs of most of he microservice scenarios.", "twitter:card": "summary_large_image", "viewport": "width=device-width, initial-scale=1.0", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "scrapeId": "3342afa0-49f5-45e3-a07b-f520f0388ea4", "sourceURL": "https://kubevela.io/docs/end-user/components/cue/webservice", "url": "https://kubevela.io/docs/end-user/components/cue/webservice/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela Pyroscope Addon Documentation\"?\n\nAssistant: This documentation provides information on how to install and use the Pyroscope addon with KubeVela, including code examples for various programming languages.\n\nHere's a detailed explanation:\n\n\n## install\n```codeBlockLines_e6Vv\nvela addon enable pyroscope\n``` After enable pyroscope successfully, you can execute command to expose the port `4040` for Dashboard UI. ```codeBlockLines_e6Vv\nvela port-forward addon-pyroscope -n vela-system\n```\n\n## How to use pyroscope trait\nUse a component typed webservice to start, keep the following to pyroscope-demo.yaml, then vela up -f app-demo.yaml\n\n```codeBlockLines_e6Vv\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: pyroscope-app\n  namespace: fourier\nspec:\n  components:\n    - name: pyroscope-comp-01\n      type: webservice\n      properties:\n        image: nginx:latest\n        ports:\n          - expose: true\n            port: 80\n            protocol: TCP\n        imagePullPolicy: IfNotPresent\n      traits:\n        - type: pyroscope\n          properties:\n            server: \"http://pyroscope-server:9084\"\n            logger: \"pyroscope.StandardLogger\"\n            appName: \"pyroscope-test\"\n        - type: scaler\n          properties:\n            replicas: 1\n```\nAnd the parameter `appName` is a optional field, default value is the component name.\n\n## How to use pyroscope client\n### Pyroscope for Golang applications\n- To start profiling a Go application, you need to include our go module in your app\n\n```codeBlockLines_e6Vv\n# make sure you also upgrade pyroscope server to version 0.3.1 or higher\ngo get github.com/pyroscope-io/client/pyroscope\n```\n- Then add the following code to your application:\n\n```codeBlockLines_e6Vv\npackage main\n\nimport \"github.com/pyroscope-io/client/pyroscope\"\n\nfunc main() {\n  pyroscope.Start(pyroscope.Config{\n    ApplicationName: \"simple.golang.app\",\n    // replace this with the address of pyroscope server\n    ServerAddress:   \"http://pyroscope-server:4040\",\n    // you can disable logging by setting this to nil\n    Logger:          pyroscope.StandardLogger,\n\n    // optionally, if authentication is enabled, specify the API key:\n    // AuthToken: os.Getenv(\"PYROSCOPE_AUTH_TOKEN\"),\n\n    // by default all profilers are enabled, but you can select the ones you want to use:\n    ProfileTypes: []pyroscope.ProfileType{\n      pyroscope.ProfileCPU,\n      pyroscope.ProfileAllocObjects,\n      pyroscope.ProfileAllocSpace,\n      pyroscope.ProfileInuseObjects,\n      pyroscope.ProfileInuseSpace,\n    },\n  })\n\n  // your code goes here\n}\n```\n- Check out the [examples](https://github.com/pyroscope-io/pyroscope/tree/main/examples/golang-push) directory in our repository to learn more\n\n### Pyroscope for Java applications\n- Java integration is distributed as a single jar file: pyroscope.jar. It contains native async-profiler libraries\n- To start profiling a Java application, run your application with pyroscope.jar javaagent:\n\n```codeBlockLines_e6Vv\nexport PYROSCOPE_APPLICATION_NAME=my.java.app\nexport PYROSCOPE_SERVER_ADDRESS=http://pyroscope-server:4040\n\n# Optionally, if authentication is enabled, specify the API key.\n# export PYROSCOPE_AUTH_TOKEN={YOUR_API_KEY}\n\njava -javaagent:pyroscope.jar -jar app.jar\n```\n- Check out the [examples](https://github.com/pyroscope-io/pyroscope/tree/main/examples/java) folder in our repository to learn more\n\n### Pyroscope for .net applications\n- To start profiling a .NET application inside a container, you may wrap your application with pyroscope exec as an entrypoint of your image. The tricky part is that you need to copy pyroscope binary to your docker container. To do that, use COPY --from command in your Dockerfile.\nThe following example Dockerfile shows how to build the image:\n\n```codeBlockLines_e6Vv\nFROM mcr.microsoft.com/dotnet/sdk:5.0\n\nWORKDIR /dotnet\n\nCOPY --from=pyroscope/pyroscope:latest /usr/bin/pyroscope /usr/bin/pyroscope\nADD my-app .\nRUN dotnet publish -o . -r $(dotnet --info | grep RID | cut -b 6- | tr -d ' ')\n\n# optionally you may set the pyroscope server address as well as the app name and other configuration options.\nENV PYROSCOPE_SERVER_ADDRESS=http://pyroscope-server:4040\nENV PYROSCOPE_APPLICATION_NAME=my.dotnet.app\nENV PYROSCOPE_LOG_LEVEL=debug\n\nCMD [\"pyroscope\", \"exec\", \"dotnet\", \"/dotnet/my-app.dll\"]\n```\n- If you are using Docker Compose, you can run both pyroscope server and agent with this configuration:\n\n```codeBlockLines_e6Vv\n---\nversion: \"3.9\"\nservices:\n  pyroscope-server:\n    image: \"pyroscope/pyroscope:latest\"\n    ports:\n      - \"4040:4040\"\n    command:\n      - \"server\"\n  app:\n    image: \"my-app:latest\"\n    environment:\n      PYROSCOPE_APPLICATION_NAME: my.dotnet.app\n      PYROSCOPE_SERVER_ADDRESS: http://pyroscope-server:4040\n      PYROSCOPE_LOG_LEVEL: debug\n      ASPNETCORE_URLS: http://*:5000\n    ports:\n      - \"5000:5000\"\n    cap_add:\n      - SYS_PTRACE\n```\n- Check out the [examples](https://github.com/pyroscope-io/pyroscope/tree/main/examples/dotnet) folder in our repository to learn more\n\n### Pyroscope for Python applications\n- First, install pyroscope-io pip package:\n\n```codeBlockLines_e6Vv\npip install pyroscope-io\n```\n- Add the following code to your application. This code will initialize pyroscope profiler and start profiling:\n\n```codeBlockLines_e6Vv\nimport pyroscope\n\npyroscope.configure(\n  app_name       = \"my.python.app\", # replace this with some name for your application\n  server_address = \"http://my-pyroscope-server:4040\", # replace this with the address of your pyroscope server\n# auth_token     = \"{YOUR_API_KEY}\", # optionally, if authentication is enabled, specify the API key\n)\n```\n- Check out the [example python project in pyroscope repository](https://github.com/pyroscope-io/pyroscope/tree/main/examples/python) for examples of how you can use these features.\n\n### Pyroscope for PHP applications\n- To start profiling a PHP application in a container, you may wrap your application with pyroscope exec as an entrypoint of your image. The tricky part is that you need to copy pyroscope binary to your docker container. To do that, use COPY --from command in your Dockerfile.\nThe following example Dockerfile shows how to build the image:\n\n```codeBlockLines_e6Vv\nFROM php:7.3.27\n\nWORKDIR /var/www/html\n\n# this copies pyroscope binary from pyroscope image to your image:\nCOPY --from=pyroscope/pyroscope:latest /usr/bin/pyroscope /usr/bin/pyroscope\nCOPY main.php ./main.php\n\n# optionally you may set the pyroscope server address as well as the app name, make sure you change these:\nENV PYROSCOPE_APPLICATION_NAME=my.php.app\nENV PYROSCOPE_SERVER_ADDRESS=http://pyroscope:4040/\n\n# this starts your app with pyroscope profiler, make sure to change \"php\" and \"main.php\" to the actual command.\nCMD [\"pyroscope\", \"exec\", \"php\", \"main.php\"]\n```\n- If you are using Docker Compose, you can run both pyroscope server and agent with this configuration:\n\n```codeBlockLines_e6Vv\n---\nservices:\n  pyroscope-server:\n    image: \"pyroscope/pyroscope:latest\"\n    ports:\n      - \"4040:4040\"\n    command:\n      - \"server\"\n  app:\n    image: \"my-app:latest\"\n    env:\n      PYROSCOPE_SERVER_ADDRESS: http://pyroscope-server:4040\n      PYROSCOPE_APPLICATION_NAME: my.php.app\n    cap_add:\n      - SYS_PTRACE\n```\n- Check out the [examples](https://github.com/pyroscope-io/pyroscope/tree/main/examples/php) folder in our repository to learn more\n\n### Pyroscope for NodeJS applications\n- To start profiling a NodeJS application, you need to include the npm module in your app:\n\n```codeBlockLines_e6Vv\nnpm install @pyroscope/nodejs\n\n# or\nyarn add @pyroscope/nodejs\n```\n- Then add the following code to your application:\n\n```codeBlockLines_e6Vv\nconst Pyroscope = require('@pyroscope/nodejs');\n\nPyroscope.init({\n  serverAddress: 'http://pyroscope:4040',\n  appName: 'myNodeService'\n});\n\nPyroscope.start()\n```\n- Check out the [examples](https://github.com/pyroscope-io/pyroscope/tree/main/examples/nodejs) directory in our repository to learn more.\n\n## uninstall\n```codeBlockLines_e6Vv\nvela addon disable pyroscope\n```\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.9/reference/addons/pyroscope", "title": "KubeVela Pyroscope Addon Documentation", "description": "This documentation provides information on how to install and use the Pyroscope addon with KubeVela, including code examples for various programming languages.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 16:13:59", "type": "overview", "page_metadata": {"viewport": "width=device-width, initial-scale=1.0", "msapplication-config": "/img/favicons/browserconfig.xml", "language": "en", "og:url": "https://kubevela.io/docs/v1.9/reference/addons/pyroscope/", "generator": "Docusaurus v2.4.3", "docsearch:language": "en", "docsearch:docusaurus_tag": "docs-default-v1.9", "title": "Pyroscope | KubeVela", "docusaurus_version": "v1.9", "og:title": "Pyroscope | KubeVela", "description": "Pyroscope is an open source platform, consisting of server and agent. It allows the user to collect, store, and query the profiling data in a CPU and disk efficient way.", "docsearch:version": "v1.9", "twitter:card": "summary_large_image", "og:description": "Pyroscope is an open source platform, consisting of server and agent. It allows the user to collect, store, and query the profiling data in a CPU and disk efficient way.", "ogTitle": "Pyroscope | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogDescription": "Pyroscope is an open source platform, consisting of server and agent. It allows the user to collect, store, and query the profiling data in a CPU and disk efficient way.", "ogUrl": "https://kubevela.io/docs/v1.9/reference/addons/pyroscope/", "theme-color": "#ffffff", "docusaurus_tag": "docs-default-v1.9", "docusaurus_locale": "en", "scrapeId": "c597dc89-a705-4c8d-8bcf-ba14941c6c01", "sourceURL": "https://kubevela.io/docs/v1.9/reference/addons/pyroscope", "url": "https://kubevela.io/docs/v1.9/reference/addons/pyroscope/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"KubeVela Pyroscope Addon Documentation\"?\n\nAssistant: Here are some code examples:\n\n### Install Pyroscope Addon\n```yaml\nvela addon enable pyroscope\n```\n\n### Expose Dashboard UI Port\n```yaml\nvela port-forward addon-pyroscope -n vela-system\n```\n\n### Pyroscope Application YAML\n```yaml\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: pyroscope-app\n  namespace: fourier\nspec:\n  components:\n    - name: pyroscope-comp-01\n      type: webservice\n      properties:\n        image: nginx:latest\n        ports:\n          - expose: true\n            port: 80\n            protocol: TCP\n        imagePullPolicy: IfNotPresent\n      traits:\n        - type: pyroscope\n          properties:\n            server: \"http://pyroscope-server:9084\"\n            logger: \"pyroscope.StandardLogger\"\n            appName: \"pyroscope-test\"\n        - type: scaler\n          properties:\n            replicas: 1\n```\n\n### Golang Profiling Code\n```yaml\npackage main\n\nimport \"github.com/pyroscope-io/client/pyroscope\"\n\nfunc main() {\n  pyroscope.Start(pyroscope.Config{\n    ApplicationName: \"simple.golang.app\",\n    ServerAddress:   \"http://pyroscope-server:4040\",\n    Logger:          pyroscope.StandardLogger,\n    ProfileTypes: []pyroscope.ProfileType{\n      pyroscope.ProfileCPU,\n      pyroscope.ProfileAllocObjects,\n      pyroscope.ProfileAllocSpace,\n      pyroscope.ProfileInuseObjects,\n      pyroscope.ProfileInuseSpace,\n    },\n  })\n}\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.9/reference/addons/pyroscope", "title": "KubeVela Pyroscope Addon Documentation", "description": "This documentation provides information on how to install and use the Pyroscope addon with KubeVela, including code examples for various programming languages.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 16:13:59", "type": "code_examples", "page_metadata": {"viewport": "width=device-width, initial-scale=1.0", "msapplication-config": "/img/favicons/browserconfig.xml", "language": "en", "og:url": "https://kubevela.io/docs/v1.9/reference/addons/pyroscope/", "generator": "Docusaurus v2.4.3", "docsearch:language": "en", "docsearch:docusaurus_tag": "docs-default-v1.9", "title": "Pyroscope | KubeVela", "docusaurus_version": "v1.9", "og:title": "Pyroscope | KubeVela", "description": "Pyroscope is an open source platform, consisting of server and agent. It allows the user to collect, store, and query the profiling data in a CPU and disk efficient way.", "docsearch:version": "v1.9", "twitter:card": "summary_large_image", "og:description": "Pyroscope is an open source platform, consisting of server and agent. It allows the user to collect, store, and query the profiling data in a CPU and disk efficient way.", "ogTitle": "Pyroscope | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogDescription": "Pyroscope is an open source platform, consisting of server and agent. It allows the user to collect, store, and query the profiling data in a CPU and disk efficient way.", "ogUrl": "https://kubevela.io/docs/v1.9/reference/addons/pyroscope/", "theme-color": "#ffffff", "docusaurus_tag": "docs-default-v1.9", "docusaurus_locale": "en", "scrapeId": "c597dc89-a705-4c8d-8bcf-ba14941c6c01", "sourceURL": "https://kubevela.io/docs/v1.9/reference/addons/pyroscope", "url": "https://kubevela.io/docs/v1.9/reference/addons/pyroscope/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela Pyroscope Addon Documentation\"?\n\nAssistant: Here are the recommended best practices:\n\n• Make sure to upgrade the Pyroscope server to version 0.3.1 or higher for Golang applications.\n• For Java applications, ensure to run with the pyroscope.jar javaagent.\n• When using Docker, copy the pyroscope binary to your container for .NET and PHP applications.\n• For NodeJS applications, include the npm module in your app.\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.9/reference/addons/pyroscope", "title": "KubeVela Pyroscope Addon Documentation", "description": "This documentation provides information on how to install and use the Pyroscope addon with KubeVela, including code examples for various programming languages.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 16:13:59", "type": "best_practices", "page_metadata": {"viewport": "width=device-width, initial-scale=1.0", "msapplication-config": "/img/favicons/browserconfig.xml", "language": "en", "og:url": "https://kubevela.io/docs/v1.9/reference/addons/pyroscope/", "generator": "Docusaurus v2.4.3", "docsearch:language": "en", "docsearch:docusaurus_tag": "docs-default-v1.9", "title": "Pyroscope | KubeVela", "docusaurus_version": "v1.9", "og:title": "Pyroscope | KubeVela", "description": "Pyroscope is an open source platform, consisting of server and agent. It allows the user to collect, store, and query the profiling data in a CPU and disk efficient way.", "docsearch:version": "v1.9", "twitter:card": "summary_large_image", "og:description": "Pyroscope is an open source platform, consisting of server and agent. It allows the user to collect, store, and query the profiling data in a CPU and disk efficient way.", "ogTitle": "Pyroscope | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogDescription": "Pyroscope is an open source platform, consisting of server and agent. It allows the user to collect, store, and query the profiling data in a CPU and disk efficient way.", "ogUrl": "https://kubevela.io/docs/v1.9/reference/addons/pyroscope/", "theme-color": "#ffffff", "docusaurus_tag": "docs-default-v1.9", "docusaurus_locale": "en", "scrapeId": "c597dc89-a705-4c8d-8bcf-ba14941c6c01", "sourceURL": "https://kubevela.io/docs/v1.9/reference/addons/pyroscope", "url": "https://kubevela.io/docs/v1.9/reference/addons/pyroscope/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"Using Sub Steps in KubeVela\"?\n\nAssistant: This section describes how to use sub steps in KubeVela, specifically focusing on the `step-group` type in workflows.\n\nHere's a detailed explanation:\n\n\n## Introduction\nKubeVela v1.10.0 is now available. This section describes how to use sub steps in KubeVela.\n\n## Step Group Overview\nThere is a special step type `step-group` in KubeVela workflow where you can declare sub-steps when using `step-group` type steps.\n\n## Execution Modes\nIn the version less or equal than v1.4.x, sub steps in a step group are executed concurrently. In version 1.5+, you can specify the execution mode of steps and sub-steps.\n\n## Example\nApply the following example to understand how to implement sub-steps in a step group.\n\n## Default Execution Behavior\nBy default, steps are executed sequentially, so step2 is not executed until step1 is deployed. Whereas in the step-group, sub-steps will be executed concurrently by default, so step2-sub1 and step2-sub2 will be deployed at the same time.\n", "metadata": {"source_url": "https://kubevela.io/docs/end-user/workflow/step-group", "title": "Using Sub Steps in KubeVela", "description": "This section describes how to use sub steps in KubeVela, specifically focusing on the `step-group` type in workflows.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 16:14:15", "type": "overview", "page_metadata": {"language": "en", "description": "This section describes how to use sub steps in KubeVela.", "viewport": "width=device-width, initial-scale=1.0", "msapplication-config": "/img/favicons/browserconfig.xml", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_locale": "en", "title": "Sub Steps | KubeVela", "og:title": "Sub Steps | KubeVela", "twitter:card": "summary_large_image", "og:url": "https://kubevela.io/docs/end-user/workflow/step-group/", "docsearch:language": "en", "docusaurus_version": "v1.10", "ogDescription": "This section describes how to use sub steps in KubeVela.", "ogUrl": "https://kubevela.io/docs/end-user/workflow/step-group/", "docusaurus_tag": "docs-default-v1.10", "docsearch:docusaurus_tag": "docs-default-v1.10", "theme-color": "#ffffff", "docsearch:version": "v1.10", "generator": "Docusaurus v2.4.3", "ogTitle": "Sub Steps | KubeVela", "og:description": "This section describes how to use sub steps in KubeVela.", "scrapeId": "6d44f05d-3b01-42e4-a6a3-d47ad93a00a9", "sourceURL": "https://kubevela.io/docs/end-user/workflow/step-group", "url": "https://kubevela.io/docs/end-user/workflow/step-group/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"Using Sub Steps in KubeVela\"?\n\nAssistant: Here are some code examples:\n\n### KubeVela Application Example\n```yaml\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: sub-success\nspec:\n  components:\n    - name: express-server1\n      type: webservice\n      properties:\n        image: crccheck/hello-world\n    - name: express-server2\n      type: webservice\n      properties:\n        image: crccheck/hello-world\n    - name: express-server3\n      type: webservice\n      properties:\n        image: crccheck/hello-world\n\n  workflow:\n    steps:\n      - name: step1\n        type: apply-component\n        properties:\n          component: express-server1\n      - name: step2\n        type: step-group\n        subSteps:\n          - name: step2-sub1\n            type: apply-component\n            properties:\n              component: express-server2\n          - name: step2-sub2\n            type: apply-component\n            properties:\n              component: express-server3\n\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/end-user/workflow/step-group", "title": "Using Sub Steps in KubeVela", "description": "This section describes how to use sub steps in KubeVela, specifically focusing on the `step-group` type in workflows.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 16:14:15", "type": "code_examples", "page_metadata": {"language": "en", "description": "This section describes how to use sub steps in KubeVela.", "viewport": "width=device-width, initial-scale=1.0", "msapplication-config": "/img/favicons/browserconfig.xml", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_locale": "en", "title": "Sub Steps | KubeVela", "og:title": "Sub Steps | KubeVela", "twitter:card": "summary_large_image", "og:url": "https://kubevela.io/docs/end-user/workflow/step-group/", "docsearch:language": "en", "docusaurus_version": "v1.10", "ogDescription": "This section describes how to use sub steps in KubeVela.", "ogUrl": "https://kubevela.io/docs/end-user/workflow/step-group/", "docusaurus_tag": "docs-default-v1.10", "docsearch:docusaurus_tag": "docs-default-v1.10", "theme-color": "#ffffff", "docsearch:version": "v1.10", "generator": "Docusaurus v2.4.3", "ogTitle": "Sub Steps | KubeVela", "og:description": "This section describes how to use sub steps in KubeVela.", "scrapeId": "6d44f05d-3b01-42e4-a6a3-d47ad93a00a9", "sourceURL": "https://kubevela.io/docs/end-user/workflow/step-group", "url": "https://kubevela.io/docs/end-user/workflow/step-group/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"Using Sub Steps in KubeVela\"?\n\nAssistant: Here are the recommended best practices:\n\n• In version 1.5+, specify the execution mode of steps and sub-steps for better control over the workflow execution.\n", "metadata": {"source_url": "https://kubevela.io/docs/end-user/workflow/step-group", "title": "Using Sub Steps in KubeVela", "description": "This section describes how to use sub steps in KubeVela, specifically focusing on the `step-group` type in workflows.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 16:14:15", "type": "best_practices", "page_metadata": {"language": "en", "description": "This section describes how to use sub steps in KubeVela.", "viewport": "width=device-width, initial-scale=1.0", "msapplication-config": "/img/favicons/browserconfig.xml", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_locale": "en", "title": "Sub Steps | KubeVela", "og:title": "Sub Steps | KubeVela", "twitter:card": "summary_large_image", "og:url": "https://kubevela.io/docs/end-user/workflow/step-group/", "docsearch:language": "en", "docusaurus_version": "v1.10", "ogDescription": "This section describes how to use sub steps in KubeVela.", "ogUrl": "https://kubevela.io/docs/end-user/workflow/step-group/", "docusaurus_tag": "docs-default-v1.10", "docsearch:docusaurus_tag": "docs-default-v1.10", "theme-color": "#ffffff", "docsearch:version": "v1.10", "generator": "Docusaurus v2.4.3", "ogTitle": "Sub Steps | KubeVela", "og:description": "This section describes how to use sub steps in KubeVela.", "scrapeId": "6d44f05d-3b01-42e4-a6a3-d47ad93a00a9", "sourceURL": "https://kubevela.io/docs/end-user/workflow/step-group", "url": "https://kubevela.io/docs/end-user/workflow/step-group/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"User Project Management in KubeVela\"?\n\nAssistant: This page covers how to manage projects in KubeVela, including creating, updating, and deleting projects, as well as understanding the default project and associated environments.\n\nHere's a detailed explanation:\n\n\n## The Default Project\nOnce installed VelaUX has one default project with name `Default` owned by the `admin` user. At the same time, the default delivery target and environment are also generated automatically and bound to the project.\n\n## Creating Projects\nUsers with project management permissions can go to `Platform/Projects` page for settings，in this page you could create and delete project.\n\nClick the `New Project` button for creating a project. Each project should set name and owner, the owner user will be granted the project admin role automatically after the project created.\n\n## Creating Environments for the Project\nA project can have multiple associated environments. An environment is a logical concept that points to a namespace in the cluster. By default, if not specified, the namespace of an environment has the same name as the environment itself. When creating an environment, you need to associate it with a project.\n\n## Updating Projects\nProject owner, alias, and description fields can be updated. Click the project name and go to the project detail page, you can manage the members and roles in this project.\n\n## Deleting Projects\nIf there are applications and environments living in one project, then deleting the project is not allowed. You must clean up the applications, environments, and targets in the project before you can delete.\n", "metadata": {"source_url": "https://kubevela.io/docs/how-to/dashboard/user/project", "title": "User Project Management in KubeVela", "description": "This page covers how to manage projects in KubeVela, including creating, updating, and deleting projects, as well as understanding the default project and associated environments.", "has_code_examples": false, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 16:14:21", "type": "overview", "page_metadata": {"og:url": "https://kubevela.io/docs/how-to/dashboard/user/project/", "ogDescription": "Project provides a logical separation of applications、environments and delivery targets, this is helpful when VelaUX is used by multiple teams. Project can provide the following features:", "docsearch:language": "en", "docusaurus_version": "v1.10", "docsearch:version": "v1.10", "theme-color": "#ffffff", "docsearch:docusaurus_tag": "docs-default-v1.10", "description": "Project provides a logical separation of applications、environments and delivery targets, this is helpful when VelaUX is used by multiple teams. Project can provide the following features:", "language": "en", "docusaurus_tag": "docs-default-v1.10", "og:description": "Project provides a logical separation of applications、environments and delivery targets, this is helpful when VelaUX is used by multiple teams. Project can provide the following features:", "msapplication-config": "/img/favicons/browserconfig.xml", "viewport": "width=device-width, initial-scale=1.0", "ogUrl": "https://kubevela.io/docs/how-to/dashboard/user/project/", "docusaurus_locale": "en", "title": "Project Management | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "og:title": "Project Management | KubeVela", "generator": "Docusaurus v2.4.3", "ogTitle": "Project Management | KubeVela", "twitter:card": "summary_large_image", "scrapeId": "8170525c-85c9-4b2b-bde8-0998ad272f45", "sourceURL": "https://kubevela.io/docs/how-to/dashboard/user/project", "url": "https://kubevela.io/docs/how-to/dashboard/user/project/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"User Project Management in KubeVela\"?\n\nAssistant: Here are the recommended best practices:\n\n• Ensure to clean up applications, environments, and targets before attempting to delete a project.\n", "metadata": {"source_url": "https://kubevela.io/docs/how-to/dashboard/user/project", "title": "User Project Management in KubeVela", "description": "This page covers how to manage projects in KubeVela, including creating, updating, and deleting projects, as well as understanding the default project and associated environments.", "has_code_examples": false, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 16:14:21", "type": "best_practices", "page_metadata": {"og:url": "https://kubevela.io/docs/how-to/dashboard/user/project/", "ogDescription": "Project provides a logical separation of applications、environments and delivery targets, this is helpful when VelaUX is used by multiple teams. Project can provide the following features:", "docsearch:language": "en", "docusaurus_version": "v1.10", "docsearch:version": "v1.10", "theme-color": "#ffffff", "docsearch:docusaurus_tag": "docs-default-v1.10", "description": "Project provides a logical separation of applications、environments and delivery targets, this is helpful when VelaUX is used by multiple teams. Project can provide the following features:", "language": "en", "docusaurus_tag": "docs-default-v1.10", "og:description": "Project provides a logical separation of applications、environments and delivery targets, this is helpful when VelaUX is used by multiple teams. Project can provide the following features:", "msapplication-config": "/img/favicons/browserconfig.xml", "viewport": "width=device-width, initial-scale=1.0", "ogUrl": "https://kubevela.io/docs/how-to/dashboard/user/project/", "docusaurus_locale": "en", "title": "Project Management | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "og:title": "Project Management | KubeVela", "generator": "Docusaurus v2.4.3", "ogTitle": "Project Management | KubeVela", "twitter:card": "summary_large_image", "scrapeId": "8170525c-85c9-4b2b-bde8-0998ad272f45", "sourceURL": "https://kubevela.io/docs/how-to/dashboard/user/project", "url": "https://kubevela.io/docs/how-to/dashboard/user/project/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela Observability Addons Installation\"?\n\nAssistant: This page provides instructions on how to install observability addons for KubeVela, including quick start and multi-cluster installation guides.\n\nHere's a detailed explanation:\n\n\n## Quick Start\nTo enable the observability addons, you simply need to run the `vela addon enable` commands as below.\n\n1. Install the kube-state-metrics addon\n\n```bash\nvela addon enable kube-state-metrics\n```\n\n2. Install the node-exporter addon\n\n```bash\nvela addon enable node-exporter\n```\n\n3. Install the prometheus-server addon\n\n```bash\nvela addon enable prometheus-server\n```\n\n4. Install the loki addon\n\n```bash\nvela addon enable loki\n```\n\n5. Install the grafana addon\n\n```bash\nvela addon enable grafana\n```\n\n6. Access your grafana through port-forward.\n\n```bash\nkubectl port-forward svc/grafana -n o11y-system 8080:3000\n```\n\nNow you can access your grafana by access `http://localhost:8080` in your browser. The default username and password are `admin` and `kubevela` respectively.\n\n> You can change it by adding `adminUser=super-user adminPassword=PASSWORD` to step 6.\n\nYou will see several pre-installed dashboards and use them to view your system and applications. For more details of those pre-installed dashboards, see [Out-of-the-Box](https://kubevela.io/docs/platform-engineers/operations/o11y/out-of-the-box/) section.\n\n## Multi-cluster Installation\nIf you want to install observability addons in multi-cluster scenario, make sure your Kubernetes clusters support LoadBalancer service and are mutatually accessible.\n\nBy default, the installation process for `kube-state-metrics`, `node-exporter` and `prometheus-server` are natually multi-cluster supported (they will be automatically installed to all clusters). But to let your `grafana` on the control plane to be able to access prometheus-server in managed clusters, you need to use the following command to enable `prometheus-server`.\n\n```bash\nvela addon enable prometheus-server thanos=true serviceType=LoadBalancer\n```\n\nThis will install [thanos](https://github.com/thanos-io/thanos) sidecar & query along with prometheus-server. Then enable grafana, you will be able to see aggregated prometheus metrics now.\n\nYou can also choose which clusters to install addons by using commands as below\n\n```bash\nvela addon enable kube-state-metrics clusters={local,c2}\n```\n\nFor `loki` addon, the storage is hosted on the hub control plane by default, and the agent ( [promtail](https://grafana.com/docs/loki/latest/clients/promtail/) or [vector](https://vector.dev/)) installation is multi-cluster supported. You can run the following command to let multi-cluster agents to send logs to the loki service on the `local` cluster.\n\n```bash\nvela addon enable loki agent=vector serviceType=LoadBalancer\n```\n\n> If you add new clusters to your control plane after addons being installed, you need to re-enable the addon to let it take effect.\n", "metadata": {"source_url": "https://kubevela.io/docs/platform-engineers/operations/o11y/installation", "title": "KubeVela Observability Addons Installation", "description": "This page provides instructions on how to install observability addons for KubeVela, including quick start and multi-cluster installation guides.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-02-28 16:14:34", "type": "overview", "page_metadata": {"ogTitle": "Enable Observability Addons | KubeVela", "ogUrl": "https://kubevela.io/docs/platform-engineers/operations/o11y/installation/", "title": "Enable Observability Addons | KubeVela", "og:url": "https://kubevela.io/docs/platform-engineers/operations/o11y/installation/", "docusaurus_version": "v1.10", "docsearch:language": "en", "description": "Before installing observability addons, we recommend you to start from the introduction of the observability feature.", "theme-color": "#ffffff", "docsearch:version": "v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "viewport": "width=device-width, initial-scale=1.0", "docusaurus_locale": "en", "og:title": "Enable Observability Addons | KubeVela", "twitter:card": "summary_large_image", "docsearch:docusaurus_tag": "docs-default-v1.10", "language": "en", "generator": "Docusaurus v2.4.3", "docusaurus_tag": "docs-default-v1.10", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogDescription": "Before installing observability addons, we recommend you to start from the introduction of the observability feature.", "og:description": "Before installing observability addons, we recommend you to start from the introduction of the observability feature.", "scrapeId": "e85948a8-576a-4e6e-b20c-5c93a751c896", "sourceURL": "https://kubevela.io/docs/platform-engineers/operations/o11y/installation", "url": "https://kubevela.io/docs/platform-engineers/operations/o11y/installation/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"KubeVela Observability Addons Installation\"?\n\nAssistant: Here are some code examples:\n\n### Install kube-state-metrics addon\n```yaml\nvela addon enable kube-state-metrics\n```\n\n### Install node-exporter addon\n```yaml\nvela addon enable node-exporter\n```\n\n### Install prometheus-server addon\n```yaml\nvela addon enable prometheus-server\n```\n\n### Install loki addon\n```yaml\nvela addon enable loki\n```\n\n### Install grafana addon\n```yaml\nvela addon enable grafana\n```\n\n### Access grafana through port-forward\n```yaml\nkubectl port-forward svc/grafana -n o11y-system 8080:3000\n```\n\n### Enable prometheus-server for multi-cluster\n```yaml\nvela addon enable prometheus-server thanos=true serviceType=LoadBalancer\n```\n\n### Install kube-state-metrics for specific clusters\n```yaml\nvela addon enable kube-state-metrics clusters={local,c2}\n```\n\n### Enable loki addon with vector agent\n```yaml\nvela addon enable loki agent=vector serviceType=LoadBalancer\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/platform-engineers/operations/o11y/installation", "title": "KubeVela Observability Addons Installation", "description": "This page provides instructions on how to install observability addons for KubeVela, including quick start and multi-cluster installation guides.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-02-28 16:14:34", "type": "code_examples", "page_metadata": {"ogTitle": "Enable Observability Addons | KubeVela", "ogUrl": "https://kubevela.io/docs/platform-engineers/operations/o11y/installation/", "title": "Enable Observability Addons | KubeVela", "og:url": "https://kubevela.io/docs/platform-engineers/operations/o11y/installation/", "docusaurus_version": "v1.10", "docsearch:language": "en", "description": "Before installing observability addons, we recommend you to start from the introduction of the observability feature.", "theme-color": "#ffffff", "docsearch:version": "v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "viewport": "width=device-width, initial-scale=1.0", "docusaurus_locale": "en", "og:title": "Enable Observability Addons | KubeVela", "twitter:card": "summary_large_image", "docsearch:docusaurus_tag": "docs-default-v1.10", "language": "en", "generator": "Docusaurus v2.4.3", "docusaurus_tag": "docs-default-v1.10", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogDescription": "Before installing observability addons, we recommend you to start from the introduction of the observability feature.", "og:description": "Before installing observability addons, we recommend you to start from the introduction of the observability feature.", "scrapeId": "e85948a8-576a-4e6e-b20c-5c93a751c896", "sourceURL": "https://kubevela.io/docs/platform-engineers/operations/o11y/installation", "url": "https://kubevela.io/docs/platform-engineers/operations/o11y/installation/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela Observability Addons Installation\"?\n\nAssistant: Here are the recommended best practices:\n\n• Before installing observability addons, we recommend you to start from the introduction of the observability feature.\n• If you want to enable these addons in one command, you can use WorkflowRun to orchestrate the install process. It allows you to manage the addon enable process as code and make it reusable across different systems.\n• The observability suite includes several addons which requires some computation resources to work properly. The recommended installation resources for your cluster are 2 cores + 4 Gi memory.\n• We recommend you to use KubeVela (>= v1.6.0) to use the observability addons. For version v1.5.0, logging is not supported.\n", "metadata": {"source_url": "https://kubevela.io/docs/platform-engineers/operations/o11y/installation", "title": "KubeVela Observability Addons Installation", "description": "This page provides instructions on how to install observability addons for KubeVela, including quick start and multi-cluster installation guides.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-02-28 16:14:34", "type": "best_practices", "page_metadata": {"ogTitle": "Enable Observability Addons | KubeVela", "ogUrl": "https://kubevela.io/docs/platform-engineers/operations/o11y/installation/", "title": "Enable Observability Addons | KubeVela", "og:url": "https://kubevela.io/docs/platform-engineers/operations/o11y/installation/", "docusaurus_version": "v1.10", "docsearch:language": "en", "description": "Before installing observability addons, we recommend you to start from the introduction of the observability feature.", "theme-color": "#ffffff", "docsearch:version": "v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "viewport": "width=device-width, initial-scale=1.0", "docusaurus_locale": "en", "og:title": "Enable Observability Addons | KubeVela", "twitter:card": "summary_large_image", "docsearch:docusaurus_tag": "docs-default-v1.10", "language": "en", "generator": "Docusaurus v2.4.3", "docusaurus_tag": "docs-default-v1.10", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogDescription": "Before installing observability addons, we recommend you to start from the introduction of the observability feature.", "og:description": "Before installing observability addons, we recommend you to start from the introduction of the observability feature.", "scrapeId": "e85948a8-576a-4e6e-b20c-5c93a751c896", "sourceURL": "https://kubevela.io/docs/platform-engineers/operations/o11y/installation", "url": "https://kubevela.io/docs/platform-engineers/operations/o11y/installation/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"Patch Trait\"?\n\nAssistant: This page covers the patching capabilities in KubeVela, including strategies for patching components and traits, and how to use them in workflow steps.\n\nHere's a detailed explanation:\n\n\n## Patch Strategy\nBy default, KubeVela will merge patched values with CUE's merge. However, CUE cannot handle conflicting fields currently.\n\nFor example, if `replicas=5` has been set in a component instance, once there is another trait, attempting to patch the value of the replicas field, it will fail. So we recommend that you need to plan ahead and don't use duplicate fields between components and traits.\n\nBut in some cases, we do need to deal with overwriting fields that have already been assigned a value. For example, when set up resources in multi-environments, we hope that the `envs` in different environments are different: i.e., the default `env` is `MODE=PROD`, and in the test environment, it needs to be modified to `MODE=DEV DEBUG=true `.\n\nIn this case, we can apply the following application:\n\n```yaml\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: deploy-with-override\nspec:\n  components:\n    - name: nginx-with-override\n      type: webservice\n      properties:\n        image: nginx\n        env:\n          - name: MODE\n            value: prod\n  policies:\n    - name: test\n      type: topology\n      properties:\n        clusters: [\"local\"]\n        namespace: test\n    - name: prod\n      type: topology\n      properties:\n        clusters: [\"local\"]\n        namespace: prod\n    - name: override-env\n      type: override\n      properties:\n        components:\n          - name: nginx-with-override\n            traits:\n              - type: env\n                properties:\n                  env:\n                    MODE: test\n                    DEBUG: \"true\"\n\n  workflow:\n    steps:\n      - type: deploy\n        name: deploy-test\n        properties:\n          policies: [\"test\", \"override-env\"]\n      - type: deploy\n        name: deploy-prod\n        properties:\n          policies: [\"prod\"]\n```\n\nAfter deploying the application, you can see that in the `test` namespace, the `envs` of the nginx application are as follows:\n\n```yaml\nspec:\n  containers:\n  - env:\n    - name: MODE\n      value: test\n    - name: DEBUG\n      value: \"true\"\n```\n\nAt the same time, in the `prod` namespace, the `envs` are as follows:\n\n```yaml\nspec:\n  containers:\n  - env:\n    - name: MODE\n      value: prod\n```\n\n`deploy-test` will deploy nginx to the test namespace. At the same time, the `env` trait overwrite the same envs by using the patch strategy, thus adding `MODE=test DEBUG=true` in the test namespace, while the nginx in the prod namespace will retain the original `MODE=prod` env.\n\nKubeVela provides a series of patching strategies to help resolve conflicting issues. When writing patch traits and workflow steps, you can use these patch strategies to solve conflicting values. Note that the patch strategy is not an official capability provided by CUE, but an extension developed by KubeVela.\n\nFor the usage of all patch strategies, please refer to [Patch Strategy](https://kubevela.io/docs/platform-engineers/cue/patch-strategy/).\n\n## Patch in Traits\n**Patch** is a very common pattern of trait definitions, i.e. the app operators can amend/patch attributes to the component instance or traits to enable certain operational features such as sidecar or node affinity rules (and this should be done **before** the resources applied to target cluster).\n\nThis pattern is extremely useful when the component definition is provided by third-party component provider (e.g. software distributor) so app operators do not have privilege to change its template.\n\n### Patch to components\nBelow is an example for `node-affinity` trait:\n\n```yaml\napiVersion: core.oam.dev/v1beta1\nkind: TraitDefinition\nmetadata:\n  annotations:\n    definition.oam.dev/description: \"affinity specify node affinity and toleration\"\n  name: node-affinity\nspec:\n  appliesToWorkloads:\n    - deployments.apps\n  podDisruptive: true\n  schematic:\n    cue:\n      template: |\n        patch: {\n            spec: template: spec: {\n                if parameter.affinity != _|_ {\n                    affinity: nodeAffinity: requiredDuringSchedulingIgnoredDuringExecution: nodeSelectorTerms: [{\\\n                // +patchStrategy=retainKeys\\\n                        matchExpressions: [\\\n                            for k, v in parameter.affinity {\\\n                                key:      k\\\n                                operator: \"In\"\\\n                                values:   v\\\n                            },\\\n                        ]}]\n                }\n                if parameter.tolerations != _|_ {\n              // +patchStrategy=retainKeys\n                    tolerations: [\\\n                        for k, v in parameter.tolerations {\\\n                            effect:   \"NoSchedule\"\\\n                            key:      k\\\n                            operator: \"Equal\"\\\n                            value:    v\\\n                        }]\n                }\n            }\n        }\n\n        parameter: {\n            affinity?: [string]: [...string]\n            tolerations?: [string]: string\n        }\n```\n\nIn `patch`, we declare the component object fields that this trait will patch to.\n\nThe patch trait above assumes the target component instance have `spec.template.spec.affinity` field.\nHence, we need to use `appliesToWorkloads` to enforce the trait only applies to those workload types have this field. Meanwhile, we use `// +patchStrategy=retainKeys` to override the conflict fields in the original component instance.\n\nAnother important field is `podDisruptive`, this patch trait will patch to the pod template field,\nso changes on any field of this trait will cause the pod to restart, We should add `podDisruptive` and make it to be true\nto tell users that applying this trait will cause the pod to restart.\n\nNow the users could declare they want to add node affinity rules to the component instance as below:\n\n```yaml\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: testapp\nspec:\n  components:\n    - name: express-server\n      type: webservice\n      properties:\n        image: oamdev/testapp:v1\n      traits:\n        - type: \"gateway\"\n          properties:\n            domain: testsvc.example.com\n            http:\n              \"/\": 8000\n        - type: \"node-affinity\"\n          properties:\n            affinity:\n              server-owner: [\"owner1\",\"owner2\"]\n              resource-pool: [\"pool1\",\"pool2\",\"pool3\"]\n            tolerations:\n              resource-pool: \"broken-pool1\"\n              server-owner: \"old-owner\"\n```\n\n### Patch to traits\n> Note: it's available after KubeVela v1.4.\n\nYou can also patch to other traits by using `patchOutputs` in the Definition. Such as:\n\n```yaml\napiVersion: core.oam.dev/v1beta1\nkind: TraitDefinition\nmetadata:\n  name: patch-annotation\nspec:\n  schematic:\n    cue:\n      template: |\n        patchOutputs: {\n          ingress: {\n            metadata: annotations: {\n              \"kubernetes.io/ingress.class\": \"istio\"\n            }\n          }\n        }\n```\n\nThe patch trait above assumes that the component it binds has other traits which have `ingress` resource. The patch trait will patch an `istio` annotation to the `ingress` resource.\n\nWe can deploy the following application:\n\n```yaml\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: testapp\nspec:\n  components:\n    - name: express-server\n      type: webservice\n      properties:\n        image: oamdev/testapp:v1\n      traits:\n        - type: \"gateway\"\n          properties:\n            domain: testsvc.example.com\n            http:\n              \"/\": 8000\n        - type: \"patch-annotation\"\n          properties:\n            name: \"patch-annotation-trait\"\n```\n\nAnd the ingress resource is now like:\n\n```yaml\napiVersion: networking.k8s.io/v1beta1\nkind: Ingress\nmetadata:\n  annotations:\n    kubernetes.io/ingress.class: istio\n  name: ingress\nspec:\n  rules:\n  spec:\n    rules:\n    - host: testsvc.example.com\n      http:\n        paths:\n        - backend:\n            service:\n              name: express-server\n              port:\n                number: 8000\n          path: /\n          pathType: ImplementationSpecific\n```\n\nNote: You need to put this kind of trait at the last place to patch for other traits.\n\nYou can even write a `for-loop` in patch trait, below is an example that can patch for all resources with specific annotation.\n\n```yaml\napiVersion: core.oam.dev/v1beta1\nkind: TraitDefinition\nmetadata:\n  name: patch-for-argo\nspec:\n  schematic:\n    cue:\n      template: |\n        patch: {\n            metadata: annotations: {\n                \"argocd.argoproj.io/compare-options\": \"IgnoreExtraneous\"\n                \"argocd.argoproj.io/sync-options\": \"Prune=false\"\n            }\n        }\n        patchOutputs: {\n          for k, v in context.outputs {\n            \"\\(k)\": {\n              metadata: annotations: {\n                \"argocd.argoproj.io/compare-options\": \"IgnoreExtraneous\"\n                \"argocd.argoproj.io/sync-options\":    \"Prune=false\"\n              }\n            }\n          }\n        }\n```\n\nThis example solved a [real case](https://github.com/kubevela/kubevela/issues/4342).\n\n## Patch in Workflow Step\nWhen you use `op.#ApplyComponent` in a custom workflow step definition, you can patch component or traits in the `patch` field.\n\nFor example, when using Istio for canary release, you can add annotations of the release name to the component in `patch: workload` of `op.#ApplyComponent`; meanwhile, you can change the traffic and destination rule in `patch: traits: <trait-name>`.\n\nFollowing is a real example of canary rollout in a custom workflow step:\n\n```yaml\napiVersion: core.oam.dev/v1beta1\nkind: WorkflowStepDefinition\nmetadata:\n  name: canary-rollout\n  namespace: vela-system\nspec:\n  schematic:\n    cue:\n      template: |-\n        import (\"vela/op\")\n\n        parameter: {\n                batchPartition: int\n                traffic: weightedTargets: [...{\\\n                        revision: string\\\n                        weight:   int\\\n                }]\n        }\n\n        comps__: op.#Load\n        compNames__: [ for name, c in comps__.value {name}]\n        comp__: compNames__[0]\n\n        apply: op.#ApplyComponent & {\n                value: comps__.value[comp__]\n                patch: {\n\n                        workload: {\n                                // +patchStrategy=retainKeys\n                                metadata: metadata: annotations: {\n                                        \"rollout\": context.name\n                                }\n                        }\n\n                        traits: \"rollout\": {\n                               spec: rolloutPlan: batchPartition: parameter.batchPartition\n                        }\n\n                        traits: \"virtualService\": {\n                                spec:\n                                   // +patchStrategy=retainKeys\n                                   http: [\\\n                                        {\\\n                                                route: [\\\n                                                        for i, t in parameter.traffic.weightedTargets {\\\n                                                                destination: {\\\n                                                                        host:   comp__\\\n                                                                        subset: t.revision\\\n                                                                }\\\n                                                                weight: t.weight\\\n                                                        }]\\\n                                        },\\\n                                ]\n                        }\n\n                        traits: \"destinationRule\": {\n                                 // +patchStrategy=retainKeys\n                                 spec: {\n                                   host: comp__\n                                   subsets: [\\\n                                        for i, t in parameter.traffic.weightedTargets {\\\n                                                name: t.revision\\\n                                                labels: {\"app.oam.dev/revision\": t.revision}\\\n                                        },\\\n                                ]}\n                        }\n                }\n        }\n\n        applyRemaining: op.#ApplyRemaining & {\n            exceptions: [comp__]\n        }\n```\n\nAfter deploying the above definition, you can apply the following workflow to control the canary rollout:\n\n```yaml\n...\n  workflow:\n    steps:\n      - name: rollout-1st-batch\n        type: canary-rollout\n        properties:\n          batchPartition: 0\n          traffic:\n            weightedTargets:\n              - revision: reviews-v1\n                weight: 90\n              - revision: reviews-v2\n                weight: 10\n\n      - name: manual-approval\n        type: suspend\n\n      - name: rollout-rest\n        type: canary-rollout\n        properties:\n          batchPartition: 1\n          traffic:\n            weightedTargets:\n              - revision: reviews-v2\n                weight: 100\n...\n```\n\nIn the first and third steps, we declared different revisions and weight in traffic. In the step definition of `canary-rollout`, we will overwrite the revision and weight declared by the user through `patch`, so as to control the progressive rollout in the workflow.\n\n> For more details of using KubeVela with Istio progressive release, please refer to [Progressive Rollout with Istio](https://kubevela.io/docs/case-studies/canary-blue-green/).\n", "metadata": {"source_url": "https://kubevela.io/docs/platform-engineers/traits/patch-trait", "title": "Patch Trait", "description": "This page covers the patching capabilities in KubeVela, including strategies for patching components and traits, and how to use them in workflow steps.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 16:15:14", "type": "overview", "page_metadata": {"generator": "Docusaurus v2.4.3", "ogUrl": "https://kubevela.io/docs/platform-engineers/traits/patch-trait/", "theme-color": "#ffffff", "docusaurus_version": "v1.10", "docusaurus_tag": "docs-default-v1.10", "og:description": "When we are writing the definition, sometimes we need to patch to the corresponding component or traits. We can use the patch capability when you're writing trait definitions or workflow step definitions.", "docsearch:version": "v1.10", "ogDescription": "When we are writing the definition, sometimes we need to patch to the corresponding component or traits. We can use the patch capability when you're writing trait definitions or workflow step definitions.", "docsearch:docusaurus_tag": "docs-default-v1.10", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_locale": "en", "docsearch:language": "en", "title": "Patch in the Definitions | KubeVela", "ogTitle": "Patch in the Definitions | KubeVela", "twitter:card": "summary_large_image", "og:url": "https://kubevela.io/docs/platform-engineers/traits/patch-trait/", "og:title": "Patch in the Definitions | KubeVela", "description": "When we are writing the definition, sometimes we need to patch to the corresponding component or traits. We can use the patch capability when you're writing trait definitions or workflow step definitions.", "viewport": "width=device-width, initial-scale=1.0", "msapplication-config": "/img/favicons/browserconfig.xml", "language": "en", "scrapeId": "befb9d37-bfae-405e-b7ba-21f891dd0cbe", "sourceURL": "https://kubevela.io/docs/platform-engineers/traits/patch-trait", "url": "https://kubevela.io/docs/platform-engineers/traits/patch-trait/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"Patch Trait\"?\n\nAssistant: Here are some code examples:\n\n### Application with Override\n```yaml\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: deploy-with-override\nspec:\n  components:\n    - name: nginx-with-override\n      type: webservice\n      properties:\n        image: nginx\n        env:\n          - name: MODE\n            value: prod\n  policies:\n    - name: test\n      type: topology\n      properties:\n        clusters: [\"local\"]\n        namespace: test\n    - name: prod\n      type: topology\n      properties:\n        clusters: [\"local\"]\n        namespace: prod\n    - name: override-env\n      type: override\n      properties:\n        components:\n          - name: nginx-with-override\n            traits:\n              - type: env\n                properties:\n                  env:\n                    MODE: test\n                    DEBUG: \"true\"\n\n  workflow:\n    steps:\n      - type: deploy\n        name: deploy-test\n        properties:\n          policies: [\"test\", \"override-env\"]\n      - type: deploy\n        name: deploy-prod\n        properties:\n          policies: [\"prod\"]\n\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/platform-engineers/traits/patch-trait", "title": "Patch Trait", "description": "This page covers the patching capabilities in KubeVela, including strategies for patching components and traits, and how to use them in workflow steps.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 16:15:14", "type": "code_examples", "page_metadata": {"generator": "Docusaurus v2.4.3", "ogUrl": "https://kubevela.io/docs/platform-engineers/traits/patch-trait/", "theme-color": "#ffffff", "docusaurus_version": "v1.10", "docusaurus_tag": "docs-default-v1.10", "og:description": "When we are writing the definition, sometimes we need to patch to the corresponding component or traits. We can use the patch capability when you're writing trait definitions or workflow step definitions.", "docsearch:version": "v1.10", "ogDescription": "When we are writing the definition, sometimes we need to patch to the corresponding component or traits. We can use the patch capability when you're writing trait definitions or workflow step definitions.", "docsearch:docusaurus_tag": "docs-default-v1.10", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_locale": "en", "docsearch:language": "en", "title": "Patch in the Definitions | KubeVela", "ogTitle": "Patch in the Definitions | KubeVela", "twitter:card": "summary_large_image", "og:url": "https://kubevela.io/docs/platform-engineers/traits/patch-trait/", "og:title": "Patch in the Definitions | KubeVela", "description": "When we are writing the definition, sometimes we need to patch to the corresponding component or traits. We can use the patch capability when you're writing trait definitions or workflow step definitions.", "viewport": "width=device-width, initial-scale=1.0", "msapplication-config": "/img/favicons/browserconfig.xml", "language": "en", "scrapeId": "befb9d37-bfae-405e-b7ba-21f891dd0cbe", "sourceURL": "https://kubevela.io/docs/platform-engineers/traits/patch-trait", "url": "https://kubevela.io/docs/platform-engineers/traits/patch-trait/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"Patch Trait\"?\n\nAssistant: Here are the recommended best practices:\n\n• Plan ahead and avoid using duplicate fields between components and traits.\n• Use patch strategies to resolve conflicting values when writing patch traits and workflow steps.\n• Declare the component object fields that a trait will patch to in the patch definition.\n• Use `// +patchStrategy=retainKeys` to override conflict fields in the original component instance.\n", "metadata": {"source_url": "https://kubevela.io/docs/platform-engineers/traits/patch-trait", "title": "Patch Trait", "description": "This page covers the patching capabilities in KubeVela, including strategies for patching components and traits, and how to use them in workflow steps.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 16:15:14", "type": "best_practices", "page_metadata": {"generator": "Docusaurus v2.4.3", "ogUrl": "https://kubevela.io/docs/platform-engineers/traits/patch-trait/", "theme-color": "#ffffff", "docusaurus_version": "v1.10", "docusaurus_tag": "docs-default-v1.10", "og:description": "When we are writing the definition, sometimes we need to patch to the corresponding component or traits. We can use the patch capability when you're writing trait definitions or workflow step definitions.", "docsearch:version": "v1.10", "ogDescription": "When we are writing the definition, sometimes we need to patch to the corresponding component or traits. We can use the patch capability when you're writing trait definitions or workflow step definitions.", "docsearch:docusaurus_tag": "docs-default-v1.10", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_locale": "en", "docsearch:language": "en", "title": "Patch in the Definitions | KubeVela", "ogTitle": "Patch in the Definitions | KubeVela", "twitter:card": "summary_large_image", "og:url": "https://kubevela.io/docs/platform-engineers/traits/patch-trait/", "og:title": "Patch in the Definitions | KubeVela", "description": "When we are writing the definition, sometimes we need to patch to the corresponding component or traits. We can use the patch capability when you're writing trait definitions or workflow step definitions.", "viewport": "width=device-width, initial-scale=1.0", "msapplication-config": "/img/favicons/browserconfig.xml", "language": "en", "scrapeId": "befb9d37-bfae-405e-b7ba-21f891dd0cbe", "sourceURL": "https://kubevela.io/docs/platform-engineers/traits/patch-trait", "url": "https://kubevela.io/docs/platform-engineers/traits/patch-trait/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"UI-Schema Reference\"?\n\nAssistant: This page provides documentation on the UI-Schema specification used in KubeVela to customize UI elements for components, workflow steps, and operation and maintenance features.\n\nHere's a detailed explanation:\n\n\n## How UI-Schema works\nThe components, workflow steps, and operation and maintenance feature types with different UI-Schema working principles are defined through CUE, which we call XDefinition, and almost every definition includes the definition of input parameters. for example:\n\n```codeBlockLines_e6Vv\nscaler: {\n    type: \"trait\"\n    annotations: {}\n    labels: {}\n    description: \"Manually scale K8s pod for your workload which follows the pod spec in path 'spec.template'.\"\n    attributes: {\n        podDisruptive: false\n        appliesToWorkloads: [\"*\"]\n    }\n}\ntemplate: {\n    parameter: {\n        // +usage=Specify the number of workload\n        replicas: *1 | int\n    }\n    // +patchStrategy=retainKeys\n    patch: spec: replicas: parameter.replicas\n}\n```\n\nIn the above example, the user input parameter is `replicas`.\n\nIn the UI we want the user to be able to set the number of replicas via a number input form.\n\n![ui schema](https://kubevela.io/assets/images/ui-schema-18f0b0a3a4ba8af0cb8fed321fbd9a51.jpg)\n\nIts workflow is in the figure above. The API Schema is [generated through the defined CUE](https://kubevela.io/docs/v1.8/platform-engineers/openapi-v3-json-schema/), and then the default UI Schema is generated through the API Schema. If there is a custom UI Schema, the default configuration is patched with the custom configuration. The UI renders the front-end page based on the final UI Schema.\n\n## Supported react component types\n#### Basic form\n\n- [x] Input\n- [x] Number\n- [x] Select\n- [x] Switch\n- [x] Radio\n- [x] Password\n\n#### Business form\n\n- [x] Ignore: There are subordinate fields, and the current field is not displayed.\n- [x] SecretSelect: Load the secret list to assist user selection\n- [x] SecretKeySelect: Load the secret key list by the secret name of the user selected to assist user selection\n- [x] CPUNumber: CPU-style number input form.\n- [x] MemoryNumber: Memory-style number input form.\n- [x] DiskNumber: Disk-style number input form.\n- [x] K8sObjectsCode: The YAML input form of Kubernetes resource.\n- [x] HelmRepoSelect: Load the helm repositories from integration configs to assist user selection.\n- [x] HelmChartSelect: Load the helm charts to assist user selection.\n- [x] HelmChartVersionSelect: Load the versions of the selected helm chart to assist user selection.\n- [x] HelmValues: Load the default values of the selected helm chart and version to assist the user to configure the custom values.\n- [x] PolicySelect: Load the policies of the current application to assist user selection.\n- [x] ImageInput: Load and show the image info by users input image name.\n- [x] CertBase64: Support users upload or input the string, automatically base64 encoded. Suitable the fields such as the certificates and keys. (Added in 1.5+)\n\n#### Combination form\n\n- [x] KV\n- [x] Strings\n- [x] Structs\n- [x] Group: render as a titled container.\n\n## Example\nKubeVela store UISchema config in a ConfigMap in the same namespace with the definition object.\n\n> The default KubeVela system namespace is vela-system, the built-in capabilities and uischemas are laid there.\n\nYou can use the following command to get the ConfigMap list of Custom UISchema.\n\n```codeBlockLines_e6Vv\nkubectl get configmap -n vela-system | grep uischema\n```\n\n```codeBlockLines_e6Vv\nNAME                                                   DATA   AGE\naddon-uischema-velaux                                  1      25h\ncomponent-uischema-helm                                1      25h\ncomponent-uischema-k8s-objects                         1      25h\ncomponent-uischema-kustomize                           1      25h\ncomponent-uischema-task                                1      25h\nconfig-uischema-helm-repository                        1      25h\nconfig-uischema-image-registry                         1      25h\n```\n\nThe ConfigMap name is in the format of `<your-definition-type>-uischema-<your-definition-name>`, and the data key is `ui-schema`.\n\nFor example, we can use the following command to get the UISchema of `k8s-objects` which type is `component`.\n\n```codeBlockLines_e6Vv\nkubectl get configmap -n vela-system component-uischema-k8s-objects -oyaml\n```\n\n```codeBlockLines_e6Vv\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: component-uischema-k8s-objects\n  namespace: vela-system\ndata:\n  ui-schema: '[{\"jsonKey\":\"objects\",\"uiType\":\"K8sObjectsCode\"}]'\n```\n\nFor more examples, please refer to the following links： [https://github.com/kubevela/catalog/tree/master/addons/velaux/schemas](https://github.com/kubevela/catalog/tree/master/addons/velaux/schemas)\n\n## How to expand\nUI-Schema mainly extends front-end react components, refer to [https://github.com/kubevela/velaux/tree/main/packages/velaux-ui/src/extends](https://github.com/kubevela/velaux/tree/main/packages/velaux-ui/src/extends)\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.8/reference/ui-schema", "title": "UI-Schema Reference", "description": "This page provides documentation on the UI-Schema specification used in KubeVela to customize UI elements for components, workflow steps, and operation and maintenance features.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 16:17:17", "type": "overview", "page_metadata": {"theme-color": "#ffffff", "language": "en", "ogDescription": "VelaUX uses the UI-Schema specification to customize UI elements of components, workflow steps, and operation and maintenance feature resources, in the case of variable input parameters, to achieve a more native UI experience.", "ogTitle": "UX of Definition | KubeVela", "docsearch:version": "v1.8", "docusaurus_version": "v1.8", "title": "UX of Definition | KubeVela", "docusaurus_locale": "en", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogUrl": "https://kubevela.io/docs/v1.8/reference/ui-schema/", "twitter:card": "summary_large_image", "og:url": "https://kubevela.io/docs/v1.8/reference/ui-schema/", "docsearch:language": "en", "generator": "Docusaurus v2.4.3", "og:description": "VelaUX uses the UI-Schema specification to customize UI elements of components, workflow steps, and operation and maintenance feature resources, in the case of variable input parameters, to achieve a more native UI experience.", "description": "VelaUX uses the UI-Schema specification to customize UI elements of components, workflow steps, and operation and maintenance feature resources, in the case of variable input parameters, to achieve a more native UI experience.", "msapplication-config": "/img/favicons/browserconfig.xml", "viewport": "width=device-width, initial-scale=1.0", "docusaurus_tag": "docs-default-v1.8", "docsearch:docusaurus_tag": "docs-default-v1.8", "og:title": "UX of Definition | KubeVela", "scrapeId": "4ce47b4f-caa3-4888-9d93-b9e7d84dd550", "sourceURL": "https://kubevela.io/docs/v1.8/reference/ui-schema", "url": "https://kubevela.io/docs/v1.8/reference/ui-schema/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"UI-Schema Reference\"?\n\nAssistant: Here are some code examples:\n\n### Get ConfigMap list of Custom UISchema\n```yaml\nkubectl get configmap -n vela-system | grep uischema\n```\n\n### Get UISchema of k8s-objects\n```yaml\nkubectl get configmap -n vela-system component-uischema-k8s-objects -oyaml\n```\n\n### ConfigMap example\n```yaml\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: component-uischema-k8s-objects\n  namespace: vela-system\ndata:\n  ui-schema: '[{\"jsonKey\":\"objects\",\"uiType\":\"K8sObjectsCode\"}]'\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.8/reference/ui-schema", "title": "UI-Schema Reference", "description": "This page provides documentation on the UI-Schema specification used in KubeVela to customize UI elements for components, workflow steps, and operation and maintenance features.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 16:17:17", "type": "code_examples", "page_metadata": {"theme-color": "#ffffff", "language": "en", "ogDescription": "VelaUX uses the UI-Schema specification to customize UI elements of components, workflow steps, and operation and maintenance feature resources, in the case of variable input parameters, to achieve a more native UI experience.", "ogTitle": "UX of Definition | KubeVela", "docsearch:version": "v1.8", "docusaurus_version": "v1.8", "title": "UX of Definition | KubeVela", "docusaurus_locale": "en", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogUrl": "https://kubevela.io/docs/v1.8/reference/ui-schema/", "twitter:card": "summary_large_image", "og:url": "https://kubevela.io/docs/v1.8/reference/ui-schema/", "docsearch:language": "en", "generator": "Docusaurus v2.4.3", "og:description": "VelaUX uses the UI-Schema specification to customize UI elements of components, workflow steps, and operation and maintenance feature resources, in the case of variable input parameters, to achieve a more native UI experience.", "description": "VelaUX uses the UI-Schema specification to customize UI elements of components, workflow steps, and operation and maintenance feature resources, in the case of variable input parameters, to achieve a more native UI experience.", "msapplication-config": "/img/favicons/browserconfig.xml", "viewport": "width=device-width, initial-scale=1.0", "docusaurus_tag": "docs-default-v1.8", "docsearch:docusaurus_tag": "docs-default-v1.8", "og:title": "UX of Definition | KubeVela", "scrapeId": "4ce47b4f-caa3-4888-9d93-b9e7d84dd550", "sourceURL": "https://kubevela.io/docs/v1.8/reference/ui-schema", "url": "https://kubevela.io/docs/v1.8/reference/ui-schema/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"UI-Schema Reference\"?\n\nAssistant: Here are the recommended best practices:\n\n• For the default KubeVela system namespace, use 'vela-system' for built-in capabilities and UISchemas.\n• The ConfigMap name format is '<your-definition-type>-uischema-<your-definition-name>' for easy identification.\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.8/reference/ui-schema", "title": "UI-Schema Reference", "description": "This page provides documentation on the UI-Schema specification used in KubeVela to customize UI elements for components, workflow steps, and operation and maintenance features.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 16:17:17", "type": "best_practices", "page_metadata": {"theme-color": "#ffffff", "language": "en", "ogDescription": "VelaUX uses the UI-Schema specification to customize UI elements of components, workflow steps, and operation and maintenance feature resources, in the case of variable input parameters, to achieve a more native UI experience.", "ogTitle": "UX of Definition | KubeVela", "docsearch:version": "v1.8", "docusaurus_version": "v1.8", "title": "UX of Definition | KubeVela", "docusaurus_locale": "en", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogUrl": "https://kubevela.io/docs/v1.8/reference/ui-schema/", "twitter:card": "summary_large_image", "og:url": "https://kubevela.io/docs/v1.8/reference/ui-schema/", "docsearch:language": "en", "generator": "Docusaurus v2.4.3", "og:description": "VelaUX uses the UI-Schema specification to customize UI elements of components, workflow steps, and operation and maintenance feature resources, in the case of variable input parameters, to achieve a more native UI experience.", "description": "VelaUX uses the UI-Schema specification to customize UI elements of components, workflow steps, and operation and maintenance feature resources, in the case of variable input parameters, to achieve a more native UI experience.", "msapplication-config": "/img/favicons/browserconfig.xml", "viewport": "width=device-width, initial-scale=1.0", "docusaurus_tag": "docs-default-v1.8", "docsearch:docusaurus_tag": "docs-default-v1.8", "og:title": "UX of Definition | KubeVela", "scrapeId": "4ce47b4f-caa3-4888-9d93-b9e7d84dd550", "sourceURL": "https://kubevela.io/docs/v1.8/reference/ui-schema", "url": "https://kubevela.io/docs/v1.8/reference/ui-schema/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"Debugging Applications with KubeVela\"?\n\nAssistant: This documentation provides various CLI commands for debugging applications in KubeVela, including listing apps, showing app status, logs, executing commands in pods, and accessing ports locally.\n\nHere's a detailed explanation:\n\n\n## List Apps\nList all your applications.\n\n```codeBlockLines_e6Vv\nvela ls\n```\n\nexpected output\n\n```\nAPP COMPONENT TYPE TRAITS PHASE HEALTHY STATUS CREATED-TIME\nwar war java-war running healthy Ready:1/1 2022-09-30 17:32:29 +0800 CST\nck-instance ck-instance clickhouse running healthy 2022-09-30 17:38:13 +0800 CST\nkubecon-demo hello-world java-war gateway running healthy Ready:1/1 2022-10-08 11:32:47 +0800 CST\nck-app my-ck clickhouse gateway running healthy Host not specified, visit the cluster or load balancer in 2022-10-08 17:55:20 +0800 CST front of the cluster with IP: 47.251.8.82\ndemo2 catalog java-war workflowSuspending healthy Ready:1/1 2022-10-08 16:22:11 +0800 CST\n├─ customer java-war workflowSuspending healthy Ready:1/1 2022-10-08 16:22:11 +0800 CST\n└─ order-web java-war gateway workflowSuspending healthy Ready:1/1 2022-10-08 16:22:11 +0800 CST\nkubecon-demo2 hello-world2 java-war gateway workflowSuspending healthy Ready:1/1 2022-10-08 11:48:41 +0800 CST\n```\n\n## Show status of app\n- `vela status` can give you an overview of your deployed multi-cluster application.\n\n```codeBlockLines_e6Vv\nvela up -f https://kubevela.net/example/applications/first-app.yaml\nvela status first-vela-app\n```\n\nexpected output\n\n```codeBlockLines_e6Vv\nAbout:\n\n  Name:         first-vela-app\n  Namespace:    default\n  Created at:   2022-10-09 12:10:30 +0800 CST\n  Status:       workflowSuspending\n\nWorkflow:\n\n  mode: StepByStep\n  finished: false\n  Suspend: true\n  Terminated: false\n  Steps\n  - id: g1jtl5unra\n    name: deploy2default\n    type: deploy\n    phase: succeeded\n    message:\n  - id: 6cq88ufzq5\n    name: manual-approval\n    type: suspend\n    phase: running\n    message:\n\nServices:\n\n  - Name: express-server\n    Cluster: local  Namespace: default\n    Type: webservice\n    Healthy Ready:1/1\n    Traits:\n      ✅ scaler\n``` \n\n- `vela status --pod` can list the pod status of your application.\n\n```codeBlockLines_e6Vv\nvela status first-vela-app --pod\n```\n\nexpected output\n\n```codeBlockLines_e6Vv\nCLUSTER COMPONENT       POD NAME                        NAMESPACE   PHASE   CREATE TIME             REVISION    HOST\nlocal   express-server  express-server-b768d95b7-qnwb4  default     Running 2022-10-09T04:10:31Z                izrj9f9wodrsepwyb9mcetz\n``` \n\n- `vela status --endpoint` can list the access endpoints of your application.\n\n```codeBlockLines_e6Vv\nvela status first-vela-app --endpoint\n```\n\nexpected output\n\n```codeBlockLines_e6Vv\nPlease access first-vela-app from the following endpoints:\n+---------+----------------+--------------------------------+-----------------------------+-------+\n| CLUSTER |   COMPONENT    |    REF(KIND/NAMESPACE/NAME)    |          ENDPOINT           | INNER |\n+---------+----------------+--------------------------------+-----------------------------+-------+\n| local   | express-server | Service/default/express-server | express-server.default:8000 | true  |\n+---------+----------------+--------------------------------+-----------------------------+-------+\n``` \n\n- `vela status --tree --detail` can list resources of your application.\n\n```codeBlockLines_e6Vv\nvela status first-vela-app --tree --detail\n```\n\nexpected output\n\n```codeBlockLines_e6Vv\nCLUSTER       NAMESPACE     RESOURCE                  STATUS    APPLY_TIME          DETAIL\nlocal     ─── default   ─┬─ Service/express-server    updated   2022-10-09 12:10:30 Type: ClusterIP  Cluster-IP: 10.43.212.235  External-IP: <none>  Port(s): 8000/TCP  Age: 6m44s\n                         └─ Deployment/express-server updated   2022-10-09 12:10:30 Ready: 1/1  Up-to-date: 1  Available: 1  Age: 6m44s\n```\n\n## Show logs of app\n- `vela logs` shows pod logs in managed clusters.\n\n```codeBlockLines_e6Vv\nvela logs first-vela-app\n```\n\nexpected output\n\n```codeBlockLines_e6Vv\n+ express-server-b768d95b7-qnwb4 › express-server\nexpress-server 2022-10-09T12:10:33.785549770+08:00 httpd started\n```\n\n## Execute commands inside pod container\n- `vela exec` helps you execute commands in pods in managed clusters.\n\n```codeBlockLines_e6Vv\nvela exec first-vela-app -it -- ls\n```\n\nexpected output\n\n```codeBlockLines_e6Vv\nbin   dev   etc   home  proc  root  sys   tmp   usr   var   www\n```\n\n## Access port locally\n- `vela port-forward` can discover and forward ports of pods or services in managed clusters to your local endpoint.\n\n```codeBlockLines_e6Vv\nvela port-forward first-vela-app 8001:8000\n```\n\nYou can curl this app by `curl http://127.0.0.1:8001/`.\n\n## More CLI Details\nPlease refer to the [CLI docs](https://kubevela.io/docs/v1.9/cli/vela/).\n\n- [List Apps](https://kubevela.io/docs/v1.9/tutorials/debug-app/#list-apps)\n- [Show status of app](https://kubevela.io/docs/v1.9/tutorials/debug-app/#show-status-of-app)\n- [Show logs of app](https://kubevela.io/docs/v1.9/tutorials/debug-app/#show-logs-of-app)\n- [Execute commands inside pod container](https://kubevela.io/docs/v1.9/tutorials/debug-app/#execute-commands-inside-pod-container)\n- [Access port locally](https://kubevela.io/docs/v1.9/tutorials/debug-app/#access-port-locally)\n- [More CLI Details](https://kubevela.io/docs/v1.9/tutorials/debug-app/#more-cli-details)\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.9/tutorials/debug-app", "title": "Debugging Applications with KubeVela", "description": "This documentation provides various CLI commands for debugging applications in KubeVela, including listing apps, showing app status, logs, executing commands in pods, and accessing ports locally.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-02-28 16:17:47", "type": "overview", "page_metadata": {"docsearch:docusaurus_tag": "docs-default-v1.9", "ogUrl": "https://kubevela.io/docs/v1.9/tutorials/debug-app/", "twitter:card": "summary_large_image", "language": "en", "ogDescription": "KubeVela supports several CLI commands for debugging your applications, they can work on control plane and help you access resources across multi-clusters. Which also means you can play with your pods in managed clusters directly on the hub cluster, without switching KubeConfig context. If you have multiple clusters in on application, the CLI command will ask you to choose one interactively.", "og:url": "https://kubevela.io/docs/v1.9/tutorials/debug-app/", "title": "Debugging Application | KubeVela", "docsearch:language": "en", "docusaurus_tag": "docs-default-v1.9", "viewport": "width=device-width, initial-scale=1.0", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_locale": "en", "docusaurus_version": "v1.9", "theme-color": "#ffffff", "docsearch:version": "v1.9", "og:description": "KubeVela supports several CLI commands for debugging your applications, they can work on control plane and help you access resources across multi-clusters. Which also means you can play with your pods in managed clusters directly on the hub cluster, without switching KubeConfig context. If you have multiple clusters in on application, the CLI command will ask you to choose one interactively.", "ogTitle": "Debugging Application | KubeVela", "og:title": "Debugging Application | KubeVela", "msapplication-config": "/img/favicons/browserconfig.xml", "generator": "Docusaurus v2.4.3", "description": "KubeVela supports several CLI commands for debugging your applications, they can work on control plane and help you access resources across multi-clusters. Which also means you can play with your pods in managed clusters directly on the hub cluster, without switching KubeConfig context. If you have multiple clusters in on application, the CLI command will ask you to choose one interactively.", "scrapeId": "6cb573fd-a224-41ce-8717-a8fcdc2f8d70", "sourceURL": "https://kubevela.io/docs/v1.9/tutorials/debug-app", "url": "https://kubevela.io/docs/v1.9/tutorials/debug-app/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"Debugging Applications with KubeVela\"?\n\nAssistant: Here are some code examples:\n\n### List Apps\n```yaml\nvela ls\n```\n\n### Show status of app\n```yaml\nvela up -f https://kubevela.net/example/applications/first-app.yaml\nvela status first-vela-app\n```\n\n### Show pod status\n```yaml\nvela status first-vela-app --pod\n```\n\n### Show endpoint status\n```yaml\nvela status first-vela-app --endpoint\n```\n\n### Show resource status\n```yaml\nvela status first-vela-app --tree --detail\n```\n\n### Show logs of app\n```yaml\nvela logs first-vela-app\n```\n\n### Execute commands inside pod\n```yaml\nvela exec first-vela-app -it -- ls\n```\n\n### Access port locally\n```yaml\nvela port-forward first-vela-app 8001:8000\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.9/tutorials/debug-app", "title": "Debugging Applications with KubeVela", "description": "This documentation provides various CLI commands for debugging applications in KubeVela, including listing apps, showing app status, logs, executing commands in pods, and accessing ports locally.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-02-28 16:17:47", "type": "code_examples", "page_metadata": {"docsearch:docusaurus_tag": "docs-default-v1.9", "ogUrl": "https://kubevela.io/docs/v1.9/tutorials/debug-app/", "twitter:card": "summary_large_image", "language": "en", "ogDescription": "KubeVela supports several CLI commands for debugging your applications, they can work on control plane and help you access resources across multi-clusters. Which also means you can play with your pods in managed clusters directly on the hub cluster, without switching KubeConfig context. If you have multiple clusters in on application, the CLI command will ask you to choose one interactively.", "og:url": "https://kubevela.io/docs/v1.9/tutorials/debug-app/", "title": "Debugging Application | KubeVela", "docsearch:language": "en", "docusaurus_tag": "docs-default-v1.9", "viewport": "width=device-width, initial-scale=1.0", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_locale": "en", "docusaurus_version": "v1.9", "theme-color": "#ffffff", "docsearch:version": "v1.9", "og:description": "KubeVela supports several CLI commands for debugging your applications, they can work on control plane and help you access resources across multi-clusters. Which also means you can play with your pods in managed clusters directly on the hub cluster, without switching KubeConfig context. If you have multiple clusters in on application, the CLI command will ask you to choose one interactively.", "ogTitle": "Debugging Application | KubeVela", "og:title": "Debugging Application | KubeVela", "msapplication-config": "/img/favicons/browserconfig.xml", "generator": "Docusaurus v2.4.3", "description": "KubeVela supports several CLI commands for debugging your applications, they can work on control plane and help you access resources across multi-clusters. Which also means you can play with your pods in managed clusters directly on the hub cluster, without switching KubeConfig context. If you have multiple clusters in on application, the CLI command will ask you to choose one interactively.", "scrapeId": "6cb573fd-a224-41ce-8717-a8fcdc2f8d70", "sourceURL": "https://kubevela.io/docs/v1.9/tutorials/debug-app", "url": "https://kubevela.io/docs/v1.9/tutorials/debug-app/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"Debugging Applications with KubeVela\"?\n\nAssistant: Here are the recommended best practices:\n\n• Use `vela ls` to quickly list all applications and their statuses.\n• Utilize `vela status` with different flags to get detailed information about your application.\n• For debugging, `vela logs` is essential to view pod logs.\n• Use `vela exec` to run commands directly inside your pod for troubleshooting.\n• Port forwarding with `vela port-forward` allows local access to your application services.\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.9/tutorials/debug-app", "title": "Debugging Applications with KubeVela", "description": "This documentation provides various CLI commands for debugging applications in KubeVela, including listing apps, showing app status, logs, executing commands in pods, and accessing ports locally.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-02-28 16:17:47", "type": "best_practices", "page_metadata": {"docsearch:docusaurus_tag": "docs-default-v1.9", "ogUrl": "https://kubevela.io/docs/v1.9/tutorials/debug-app/", "twitter:card": "summary_large_image", "language": "en", "ogDescription": "KubeVela supports several CLI commands for debugging your applications, they can work on control plane and help you access resources across multi-clusters. Which also means you can play with your pods in managed clusters directly on the hub cluster, without switching KubeConfig context. If you have multiple clusters in on application, the CLI command will ask you to choose one interactively.", "og:url": "https://kubevela.io/docs/v1.9/tutorials/debug-app/", "title": "Debugging Application | KubeVela", "docsearch:language": "en", "docusaurus_tag": "docs-default-v1.9", "viewport": "width=device-width, initial-scale=1.0", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_locale": "en", "docusaurus_version": "v1.9", "theme-color": "#ffffff", "docsearch:version": "v1.9", "og:description": "KubeVela supports several CLI commands for debugging your applications, they can work on control plane and help you access resources across multi-clusters. Which also means you can play with your pods in managed clusters directly on the hub cluster, without switching KubeConfig context. If you have multiple clusters in on application, the CLI command will ask you to choose one interactively.", "ogTitle": "Debugging Application | KubeVela", "og:title": "Debugging Application | KubeVela", "msapplication-config": "/img/favicons/browserconfig.xml", "generator": "Docusaurus v2.4.3", "description": "KubeVela supports several CLI commands for debugging your applications, they can work on control plane and help you access resources across multi-clusters. Which also means you can play with your pods in managed clusters directly on the hub cluster, without switching KubeConfig context. If you have multiple clusters in on application, the CLI command will ask you to choose one interactively.", "scrapeId": "6cb573fd-a224-41ce-8717-a8fcdc2f8d70", "sourceURL": "https://kubevela.io/docs/v1.9/tutorials/debug-app", "url": "https://kubevela.io/docs/v1.9/tutorials/debug-app/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"Traefik Addon for KubeVela\"?\n\nAssistant: This documentation provides information on how to install and use the Traefik addon for KubeVela, including configuration for HTTP and HTTPS routes.\n\nHere's a detailed explanation:\n\n\n## Install\nTo install the Traefik addon, run the following command:\n\n```bash\nvela addon enable traefik\n```\n\n### Visit Traefik dashboard by port-forward\nPort forward will work as a proxy to allow visiting Traefik dashboard by local port.\n\n```bash\nvela port-forward -n vela-system addon-traefik\n```\n\nExpected output:\n\n```bash\nForwarding from 127.0.0.1:9000 -> 9000\nForwarding from [::1]:9000 -> 9000\n\nForward successfully! Opening browser ...\nHandling connection for 9000\n```\n\nYou can visit the Traefik dashboard with the address `http://127.0.0.1:9000/dashboard/`.\n\n### Setup with Specified Service Type\nIf your cluster has cloud LoadBalancer available:\n\n```bash\nvela addon enable traefik serviceType=LoadBalancer\n```\n\n## How to use\n1. Configure a HTTP domain for a component.\n\n```yaml\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: example\n  namespace: e2e-test\nspec:\n  components:\n  - name: express-server\n    type: webservice\n    properties:\n        image: oamdev/hello-world\n        ports:\n         - port: 8000\n           expose: true\n    traits:\n    - properties:\n        domains:\n        - example.domain.com\n        rules:\n        - path:\n            type: PathPrefix\n            value: /\n          port: 8080\n      type: http-route\n```\n\n2. Configure a HTTPS domain for a component.\nYou should create a secret that includes the certificate first.\n\n```yaml\napiVersion: v1\ntype: Opaque\ndata:\n  tls.crt: <BASE64>\n  tls.key: <BASE64>\nkind: Secret\nmetadata:\n  annotations:\n    config.oam.dev/alias: \"\"\n    config.oam.dev/description: \"\"\n  labels:\n    config.oam.dev/catalog: velacore-config\n    config.oam.dev/multi-cluster: \"true\"\n    config.oam.dev/project: addons\n    config.oam.dev/type: config-tls-certificate\n    workload.oam.dev/type: config-tls-certificate\n  name: example\n```\n\nThe example application configuration:\n\n```yaml\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: example-https\n  namespace: e2e-test\nspec:\n  components:\n  - name: express-server\n    type: webservice\n    properties:\n        image: oamdev/hello-world\n        ports:\n         - port: 8000\n           expose: true\n    traits:\n    - properties:\n        domains:\n        - example.domain.com\n        rules:\n        - path:\n            type: PathPrefix\n            value: /\n          port: 8080\n        secrets:\n        - name: example\n      type: https-route\n```\n\n## Definitions\n### http-route(trait)\ndefines HTTP rules for mapping requests from a Gateway to Application.\n\n#### Properties\n| Name | Description | Type | Required | Default |\n| --- | --- | --- | --- | --- |\n| gatewayName | Specify the gateway name | string | false | traefik-gateway |\n| listenerName | Specify the listener name of the gateway | string | false | web |\n| domains | Specify some domains, the domain may be prefixed with a wildcard label (*.) | []string | true |  |\n| rules | Specify some HTTP matchers, filters and actions. | [[]rules](https://kubevela.io/docs/v1.8/reference/addons/traefik/#rules) | true |  |\n\n##### rules\n| Name | Description | Type | Required | Default |\n| --- | --- | --- | --- | --- |\n| path | An HTTP request path matcher. If this field is not specified, a default prefix match on the \"/\" path is provided. | [path](https://kubevela.io/docs/v1.8/reference/addons/traefik/#path) | false |  |\n| headers | Conditions to select a HTTP route by matching HTTP request headers. | [[]headers](https://kubevela.io/docs/v1.8/reference/addons/traefik/#headers) | false |  |\n| serviceName | Specify the service name of component, the default is component name. | string | false |  |\n| port | Specify the service port of component. | int | true |  |\n\n### https-route(trait)\ndefines HTTPS rules for mapping requests from a Gateway to Application.\n\n#### Properties\n| Name | Description | Type | Required | Default |\n| --- | --- | --- | --- | --- |\n| secrets | Specify the TLS secrets | [[]secrets](https://kubevela.io/docs/v1.8/reference/addons/traefik/#secrets) | true |  |\n| TLSPort |  | int | true | 443 |\n| domains | Specify some domains, the domain may be prefixed with a wildcard label (*.) | []string | true |  |\n| rules | Specify some HTTP matchers, filters and actions. | [[]rules](https://kubevela.io/docs/v1.8/reference/addons/traefik/#rules) | true |  |\n\n### tcp-route(trait)\ndefines TCP rules for mapping requests from a Gateway to Application.\n\n#### Properties\n| Name | Description | Type | Required | Default |\n| --- | --- | --- | --- | --- |\n| rules | Specify the TCP matchers | [[]rules](https://kubevela.io/docs/v1.8/reference/addons/traefik/#rules) | true |  |\n\n### config-tls-certificate(config)\nThis component definition is designed to manage the TLS certificate\n\n#### Properties\n| Name | Description | Type | Required | Default |\n| --- | --- | --- | --- | --- |\n| cert | the certificate public key encrypted by base64 | string | true |  |\n| key | the certificate private key encrypted by base64 | string | true |  |\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.8/reference/addons/traefik", "title": "Traefik Addon for KubeVela", "description": "This documentation provides information on how to install and use the Traefik addon for KubeVela, including configuration for HTTP and HTTPS routes.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 16:18:16", "type": "overview", "page_metadata": {"generator": "Docusaurus v2.4.3", "og:title": "Traefik | KubeVela", "og:url": "https://kubevela.io/docs/v1.8/reference/addons/traefik/", "description": "Traefik is a modern HTTP reverse proxy and load balancer made to deploy microservices with ease. you can use this addon as a cluster gateway or a microservices gateway.", "docusaurus_tag": "docs-default-v1.8", "theme-color": "#ffffff", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogUrl": "https://kubevela.io/docs/v1.8/reference/addons/traefik/", "language": "en", "docsearch:version": "v1.8", "msapplication-config": "/img/favicons/browserconfig.xml", "docsearch:docusaurus_tag": "docs-default-v1.8", "viewport": "width=device-width, initial-scale=1.0", "twitter:card": "summary_large_image", "docusaurus_version": "v1.8", "og:description": "Traefik is a modern HTTP reverse proxy and load balancer made to deploy microservices with ease. you can use this addon as a cluster gateway or a microservices gateway.", "docusaurus_locale": "en", "ogDescription": "Traefik is a modern HTTP reverse proxy and load balancer made to deploy microservices with ease. you can use this addon as a cluster gateway or a microservices gateway.", "title": "Traefik | KubeVela", "docsearch:language": "en", "ogTitle": "Traefik | KubeVela", "scrapeId": "293b8f84-a1e8-45c9-8080-91855aee74b9", "sourceURL": "https://kubevela.io/docs/v1.8/reference/addons/traefik", "url": "https://kubevela.io/docs/v1.8/reference/addons/traefik/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"Traefik Addon for KubeVela\"?\n\nAssistant: Here are some code examples:\n\n### Install Traefik Addon\n```yaml\nvela addon enable traefik\n```\n\n### Visit Traefik Dashboard by Port-Forward\n```yaml\nvela port-forward -n vela-system addon-traefik\n```\n\n### Expected Output for Port-Forward\n```yaml\nForwarding from 127.0.0.1:9000 -> 9000\nForwarding from [::1]:9000 -> 9000\n\nForward successfully! Opening browser ...\nHandling connection for 9000\n```\n\n### Setup with Specified Service Type\n```yaml\nvela addon enable traefik serviceType=LoadBalancer\n```\n\n### HTTP Domain Configuration\n```yaml\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: example\n  namespace: e2e-test\nspec:\n  components:\n  - name: express-server\n    type: webservice\n    properties:\n        image: oamdev/hello-world\n        ports:\n         - port: 8000\n           expose: true\n    traits:\n    - properties:\n        domains:\n        - example.domain.com\n        rules:\n        - path:\n            type: PathPrefix\n            value: /\n          port: 8080\n      type: http-route\n```\n\n### HTTPS Domain Configuration\n```yaml\napiVersion: v1\ntype: Opaque\ndata:\n  tls.crt: <BASE64>\n  tls.key: <BASE64>\nkind: Secret\nmetadata:\n  annotations:\n    config.oam.dev/alias: \"\"\n    config.oam.dev/description: \"\"\n  labels:\n    config.oam.dev/catalog: velacore-config\n    config.oam.dev/multi-cluster: \"true\"\n    config.oam.dev/project: addons\n    config.oam.dev/type: config-tls-certificate\n    workload.oam.dev/type: config-tls-certificate\n  name: example\n```\n\n### Example Application Configuration for HTTPS\n```yaml\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: example-https\n  namespace: e2e-test\nspec:\n  components:\n  - name: express-server\n    type: webservice\n    properties:\n        image: oamdev/hello-world\n        ports:\n         - port: 8000\n           expose: true\n    traits:\n    - properties:\n        domains:\n        - example.domain.com\n        rules:\n        - path:\n            type: PathPrefix\n            value: /\n          port: 8080\n        secrets:\n        - name: example\n      type: https-route\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.8/reference/addons/traefik", "title": "Traefik Addon for KubeVela", "description": "This documentation provides information on how to install and use the Traefik addon for KubeVela, including configuration for HTTP and HTTPS routes.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 16:18:16", "type": "code_examples", "page_metadata": {"generator": "Docusaurus v2.4.3", "og:title": "Traefik | KubeVela", "og:url": "https://kubevela.io/docs/v1.8/reference/addons/traefik/", "description": "Traefik is a modern HTTP reverse proxy and load balancer made to deploy microservices with ease. you can use this addon as a cluster gateway or a microservices gateway.", "docusaurus_tag": "docs-default-v1.8", "theme-color": "#ffffff", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogUrl": "https://kubevela.io/docs/v1.8/reference/addons/traefik/", "language": "en", "docsearch:version": "v1.8", "msapplication-config": "/img/favicons/browserconfig.xml", "docsearch:docusaurus_tag": "docs-default-v1.8", "viewport": "width=device-width, initial-scale=1.0", "twitter:card": "summary_large_image", "docusaurus_version": "v1.8", "og:description": "Traefik is a modern HTTP reverse proxy and load balancer made to deploy microservices with ease. you can use this addon as a cluster gateway or a microservices gateway.", "docusaurus_locale": "en", "ogDescription": "Traefik is a modern HTTP reverse proxy and load balancer made to deploy microservices with ease. you can use this addon as a cluster gateway or a microservices gateway.", "title": "Traefik | KubeVela", "docsearch:language": "en", "ogTitle": "Traefik | KubeVela", "scrapeId": "293b8f84-a1e8-45c9-8080-91855aee74b9", "sourceURL": "https://kubevela.io/docs/v1.8/reference/addons/traefik", "url": "https://kubevela.io/docs/v1.8/reference/addons/traefik/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"Traefik Addon for KubeVela\"?\n\nAssistant: Here are the recommended best practices:\n\n• Ensure to create a secret for TLS certificates before configuring HTTPS domains.\n• Use port-forwarding to access the Traefik dashboard locally.\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.8/reference/addons/traefik", "title": "Traefik Addon for KubeVela", "description": "This documentation provides information on how to install and use the Traefik addon for KubeVela, including configuration for HTTP and HTTPS routes.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 16:18:16", "type": "best_practices", "page_metadata": {"generator": "Docusaurus v2.4.3", "og:title": "Traefik | KubeVela", "og:url": "https://kubevela.io/docs/v1.8/reference/addons/traefik/", "description": "Traefik is a modern HTTP reverse proxy and load balancer made to deploy microservices with ease. you can use this addon as a cluster gateway or a microservices gateway.", "docusaurus_tag": "docs-default-v1.8", "theme-color": "#ffffff", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogUrl": "https://kubevela.io/docs/v1.8/reference/addons/traefik/", "language": "en", "docsearch:version": "v1.8", "msapplication-config": "/img/favicons/browserconfig.xml", "docsearch:docusaurus_tag": "docs-default-v1.8", "viewport": "width=device-width, initial-scale=1.0", "twitter:card": "summary_large_image", "docusaurus_version": "v1.8", "og:description": "Traefik is a modern HTTP reverse proxy and load balancer made to deploy microservices with ease. you can use this addon as a cluster gateway or a microservices gateway.", "docusaurus_locale": "en", "ogDescription": "Traefik is a modern HTTP reverse proxy and load balancer made to deploy microservices with ease. you can use this addon as a cluster gateway or a microservices gateway.", "title": "Traefik | KubeVela", "docsearch:language": "en", "ogTitle": "Traefik | KubeVela", "scrapeId": "293b8f84-a1e8-45c9-8080-91855aee74b9", "sourceURL": "https://kubevela.io/docs/v1.8/reference/addons/traefik", "url": "https://kubevela.io/docs/v1.8/reference/addons/traefik/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela Auto-Scaler Tutorial\"?\n\nAssistant: This documentation covers how to integrate auto-scaling methods in KubeVela using KEDA, including examples and specifications for the keda-auto-scaler trait.\n\nHere's a detailed explanation:\n\n\n## Enable the addon\nTo enable the KEDA addon, run the following command:\n\n```bash\nvela addon enable keda\n```\n\nAfter installed, you'll get the `keda-auto-scaler` trait, you can learn [the specification](https://kubevela.io/docs/v1.8/tutorials/auto-scaler/#specification-of-keda-auto-scaler) below.\n\n## Use keda-auto-scaler in Application\nKeda supports lots of triggers such as `cron`, `cpu`, etc. When using HPA, you must specify the [`apply-once`](https://kubevela.io/docs/v1.8/end-user/policies/apply-once/) policy to let the HPA control the replica field.\n\n## How it works with Trigger?\nHere're several examples about how autoscaling works in KubeVela application.\n\n## Cron HPA\nWe can use cron hpa with the [keda cron trigger](https://keda.sh/docs/2.8/scalers/cron/).\n\n```yaml\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: scaler-eg-app\nspec:\n  components:\n    - name: hello-world-scaler\n      type: webservice\n      properties:\n        image: oamdev/hello-world\n        ports:\n         - port: 8000\n           expose: true\n      traits:\n        - type: scaler\n          properties:\n            replicas: 1\n        - type: keda-auto-scaler\n          properties:\n            triggers:\n            - type: cron\n              metadata:\n                timezone: Asia/Hong_Kong\n                start: 00 * * * *\n                end: 10 * * * *\n                desiredReplicas: \"3\"\n\n  policies:\n    - name: apply-once\n      type: apply-once\n      properties:\n        enable: true\n        rules:\n        - strategy:\n            path: [\"spec.replicas\"]\n          selector:\n            resourceTypes: [\"Deployment\"]\n```\n\nIn this example, it will scale up to 3 replicas from 0-10 in every hour. After that, it will scale back to the initial replica `1`.\n\n## CPU based HPA\nWe can use CPU based hpa with the [keda cpu trigger](https://keda.sh/docs/2.8/scalers/cpu/).\n\n**Tip:** You must follow the prerequisite of this keda trigger:\n\nKEDA uses standard `cpu` and `memory` metrics from the Kubernetes Metrics Server, which is not installed by default on certain Kubernetes deployments such as EKS on AWS. Additionally, the resources section of the relevant Kubernetes Pods must include limits (at a minimum).\n\n```yaml\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: scaler-eg-app\nspec:\n  components:\n    - name: frontend\n      type: webservice\n      properties:\n        image: oamdev/testapp:v1\n        cmd: [\"node\", \"server.js\"]\n        cpu: \"0.1\"\n        ports:\n          - port: 8080\n            expose: true\n      traits:\n        - type: scaler\n          properties:\n            replicas: 1\n        - type: gateway\n          properties:\n            class: traefik\n            classInSpec: true\n            domain: test.my.domain\n            http:\n              \"/\": 8080\n        - type: keda-auto-scaler\n          properties:\n            minReplicaCount: 1\n            maxReplicaCount: 10\n            cooldownPeriod: 10\n            pollingInterval: 10\n            triggers:\n            - type: cpu\n              metricType: Utilization\n              metadata:\n                value: \"80\"\n  policies:\n    - name: apply-once\n      type: apply-once\n      properties:\n        enable: true\n        rules:\n        - strategy:\n            path: [\"spec.replicas\"]\n          selector:\n            resourceTypes: [\"Deployment\"]\n```\n\nIn this example, we also exposed the service entrypoint by using the `gateway` trait, make sure you have the `traefik` ingress controller if you're not using `velad`.\n\n## Other Triggers\nAll of the triggers are supported and the trigger part spec in KubeVela `keda-auto-scaler` trait are all aligned with KEDA trigger, you can refer to [the docs of keda](https://keda.sh/docs/2.8/scalers/) to learn details.\n\n## Specify the Applied Workload\nIf your component is `webservice` which actually using Kubernetes Deployment as the underlying workload, you don't need to specify the workload type.\n\nIf you're using `helm` or customized component types, you should specify the `scaleTargetRef` field to tell the trait which workload it should work with.\n\n## Specification of `keda-auto-scaler`\n| Name | Description | Type | Required | Default |\n| --- | --- | --- | --- | --- |\n| triggers |  | [\\[\\]triggers](https://kubevela.io/docs/v1.8/tutorials/auto-scaler/#triggers) | true |  |\n| scaleTargetRef |  | [scaleTargetRef](https://kubevela.io/docs/v1.8/tutorials/auto-scaler/#scaletargetref) | true |  |\n| pollingInterval | specify the polling interval of metrics, Default: 30 seconds. | int | false | 30 |\n| cooldownPeriod | Specify the cool down period that prevents the scaler from scaling down after each trigger activation. Default: 60 seconds. | int | false | 60 |\n| idleReplicaCount | Specify the idle period that the scaler to scale to zero. Default: ignored, must be less than minReplicaCount. | int | false | 0 |\n| minReplicaCount | Specify the minimal replica count. Default: 0. | int | false | 1 |\n| maxReplicaCount | Specify the maximal replica count. Default: 100. | int | false | 100 |\n| fallback | Specify the fallback value when the metrics server is not available. | [fallback](https://kubevela.io/docs/v1.8/tutorials/auto-scaler/#fallback) | true |  |\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.8/tutorials/auto-scaler", "title": "KubeVela Auto-Scaler Tutorial", "description": "This documentation covers how to integrate auto-scaling methods in KubeVela using KEDA, including examples and specifications for the keda-auto-scaler trait.", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-02-28 16:18:53", "type": "overview", "page_metadata": {"msapplication-config": "/img/favicons/browserconfig.xml", "description": "KubeVela supports integrate any auto-scaling ways in Kubernetes world. In this doc, we'll use KEDA for auto-scaling. KEDA is a Kubernetes-based Event Driven Autoscaling component, it provides event driven scale for any container running in Kubernetes.", "og:url": "https://kubevela.io/docs/v1.8/tutorials/auto-scaler/", "docsearch:version": "v1.8", "title": "Auto Scaling | KubeVela", "docusaurus_tag": "docs-default-v1.8", "generator": "Docusaurus v2.4.3", "twitter:card": "summary_large_image", "og:description": "KubeVela supports integrate any auto-scaling ways in Kubernetes world. In this doc, we'll use KEDA for auto-scaling. KEDA is a Kubernetes-based Event Driven Autoscaling component, it provides event driven scale for any container running in Kubernetes.", "ogUrl": "https://kubevela.io/docs/v1.8/tutorials/auto-scaler/", "theme-color": ["#ffffff", "#fff"], "ogDescription": "KubeVela supports integrate any auto-scaling ways in Kubernetes world. In this doc, we'll use KEDA for auto-scaling. KEDA is a Kubernetes-based Event Driven Autoscaling component, it provides event driven scale for any container running in Kubernetes.", "ogTitle": "Auto Scaling | KubeVela", "docsearch:docusaurus_tag": "docs-default-v1.8", "docusaurus_version": "v1.8", "docsearch:language": "en", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "og:title": "Auto Scaling | KubeVela", "language": "en", "docusaurus_locale": "en", "viewport": ["width=device-width, initial-scale=1.0", "width=device-width, initial-scale=1.0,\n                                 maximum-scale=1.0, user-scalable=no"], "color-scheme": "light dark", "scrapeId": "b2a79206-be60-4122-82bc-c78ce6a890d0", "sourceURL": "https://kubevela.io/docs/v1.8/tutorials/auto-scaler", "url": "https://kubevela.io/docs/v1.8/tutorials/auto-scaler/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"KubeVela Auto-Scaler Tutorial\"?\n\nAssistant: Here are some code examples:\n\n### Enable KEDA Addon\n```yaml\nvela addon enable keda\n```\n\n### Cron HPA Example\n```yaml\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: scaler-eg-app\nspec:\n  components:\n    - name: hello-world-scaler\n      type: webservice\n      properties:\n        image: oamdev/hello-world\n        ports:\n         - port: 8000\n           expose: true\n      traits:\n        - type: scaler\n          properties:\n            replicas: 1\n        - type: keda-auto-scaler\n          properties:\n            triggers:\n            - type: cron\n              metadata:\n                timezone: Asia/Hong_Kong\n                start: 00 * * * *\n                end: 10 * * * *\n                desiredReplicas: \"3\"\n\n  policies:\n    - name: apply-once\n      type: apply-once\n      properties:\n        enable: true\n        rules:\n        - strategy:\n            path: [\"spec.replicas\"]\n          selector:\n            resourceTypes: [\"Deployment\"]\n```\n\n### CPU based HPA Example\n```yaml\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: scaler-eg-app\nspec:\n  components:\n    - name: frontend\n      type: webservice\n      properties:\n        image: oamdev/testapp:v1\n        cmd: [\"node\", \"server.js\"]\n        cpu: \"0.1\"\n        ports:\n          - port: 8080\n            expose: true\n      traits:\n        - type: scaler\n          properties:\n            replicas: 1\n        - type: gateway\n          properties:\n            class: traefik\n            classInSpec: true\n            domain: test.my.domain\n            http:\n              \"/\": 8080\n        - type: keda-auto-scaler\n          properties:\n            minReplicaCount: 1\n            maxReplicaCount: 10\n            cooldownPeriod: 10\n            pollingInterval: 10\n            triggers:\n            - type: cpu\n              metricType: Utilization\n              metadata:\n                value: \"80\"\n  policies:\n    - name: apply-once\n      type: apply-once\n      properties:\n        enable: true\n        rules:\n        - strategy:\n            path: [\"spec.replicas\"]\n          selector:\n            resourceTypes: [\"Deployment\"]\n```\n\n### Get Endpoint Command\n```yaml\n$ vela status scaler-eg-app --endpoint\n  Please access scaler-eg-app from the following endpoints:\n  +---------+-----------+--------------------------+------------------------------+-------+\n  | CLUSTER | COMPONENT | REF(KIND/NAMESPACE/NAME) |           ENDPOINT           | INNER |\n  +---------+-----------+--------------------------+------------------------------+-------+\n  | local   | frontend  | Service/default/frontend | http://frontend.default:8080 | true  |\n  | local   | frontend  | Ingress/default/frontend | http://test.my.domain        | false |\n  +---------+-----------+--------------------------+------------------------------+-------+\n```\n\n### Configure Hosts Command\n```yaml\necho \"<IP of your service>   test.my.domain\" >> /etc/hosts\n```\n\n### Add CPU Pressure Command\n```yaml\nab -n 300000 -c 200  http://test.my.domain/\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.8/tutorials/auto-scaler", "title": "KubeVela Auto-Scaler Tutorial", "description": "This documentation covers how to integrate auto-scaling methods in KubeVela using KEDA, including examples and specifications for the keda-auto-scaler trait.", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-02-28 16:18:53", "type": "code_examples", "page_metadata": {"msapplication-config": "/img/favicons/browserconfig.xml", "description": "KubeVela supports integrate any auto-scaling ways in Kubernetes world. In this doc, we'll use KEDA for auto-scaling. KEDA is a Kubernetes-based Event Driven Autoscaling component, it provides event driven scale for any container running in Kubernetes.", "og:url": "https://kubevela.io/docs/v1.8/tutorials/auto-scaler/", "docsearch:version": "v1.8", "title": "Auto Scaling | KubeVela", "docusaurus_tag": "docs-default-v1.8", "generator": "Docusaurus v2.4.3", "twitter:card": "summary_large_image", "og:description": "KubeVela supports integrate any auto-scaling ways in Kubernetes world. In this doc, we'll use KEDA for auto-scaling. KEDA is a Kubernetes-based Event Driven Autoscaling component, it provides event driven scale for any container running in Kubernetes.", "ogUrl": "https://kubevela.io/docs/v1.8/tutorials/auto-scaler/", "theme-color": ["#ffffff", "#fff"], "ogDescription": "KubeVela supports integrate any auto-scaling ways in Kubernetes world. In this doc, we'll use KEDA for auto-scaling. KEDA is a Kubernetes-based Event Driven Autoscaling component, it provides event driven scale for any container running in Kubernetes.", "ogTitle": "Auto Scaling | KubeVela", "docsearch:docusaurus_tag": "docs-default-v1.8", "docusaurus_version": "v1.8", "docsearch:language": "en", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "og:title": "Auto Scaling | KubeVela", "language": "en", "docusaurus_locale": "en", "viewport": ["width=device-width, initial-scale=1.0", "width=device-width, initial-scale=1.0,\n                                 maximum-scale=1.0, user-scalable=no"], "color-scheme": "light dark", "scrapeId": "b2a79206-be60-4122-82bc-c78ce6a890d0", "sourceURL": "https://kubevela.io/docs/v1.8/tutorials/auto-scaler", "url": "https://kubevela.io/docs/v1.8/tutorials/auto-scaler/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela Auto-Scaler Tutorial\"?\n\nAssistant: Here are the recommended best practices:\n\n• When using HPA, specify the `apply-once` policy to let the HPA control the replica field.\n• Ensure that the resources section of the relevant Kubernetes Pods includes limits for KEDA to function properly.\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.8/tutorials/auto-scaler", "title": "KubeVela Auto-Scaler Tutorial", "description": "This documentation covers how to integrate auto-scaling methods in KubeVela using KEDA, including examples and specifications for the keda-auto-scaler trait.", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-02-28 16:18:53", "type": "best_practices", "page_metadata": {"msapplication-config": "/img/favicons/browserconfig.xml", "description": "KubeVela supports integrate any auto-scaling ways in Kubernetes world. In this doc, we'll use KEDA for auto-scaling. KEDA is a Kubernetes-based Event Driven Autoscaling component, it provides event driven scale for any container running in Kubernetes.", "og:url": "https://kubevela.io/docs/v1.8/tutorials/auto-scaler/", "docsearch:version": "v1.8", "title": "Auto Scaling | KubeVela", "docusaurus_tag": "docs-default-v1.8", "generator": "Docusaurus v2.4.3", "twitter:card": "summary_large_image", "og:description": "KubeVela supports integrate any auto-scaling ways in Kubernetes world. In this doc, we'll use KEDA for auto-scaling. KEDA is a Kubernetes-based Event Driven Autoscaling component, it provides event driven scale for any container running in Kubernetes.", "ogUrl": "https://kubevela.io/docs/v1.8/tutorials/auto-scaler/", "theme-color": ["#ffffff", "#fff"], "ogDescription": "KubeVela supports integrate any auto-scaling ways in Kubernetes world. In this doc, we'll use KEDA for auto-scaling. KEDA is a Kubernetes-based Event Driven Autoscaling component, it provides event driven scale for any container running in Kubernetes.", "ogTitle": "Auto Scaling | KubeVela", "docsearch:docusaurus_tag": "docs-default-v1.8", "docusaurus_version": "v1.8", "docsearch:language": "en", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "og:title": "Auto Scaling | KubeVela", "language": "en", "docusaurus_locale": "en", "viewport": ["width=device-width, initial-scale=1.0", "width=device-width, initial-scale=1.0,\n                                 maximum-scale=1.0, user-scalable=no"], "color-scheme": "light dark", "scrapeId": "b2a79206-be60-4122-82bc-c78ce6a890d0", "sourceURL": "https://kubevela.io/docs/v1.8/tutorials/auto-scaler", "url": "https://kubevela.io/docs/v1.8/tutorials/auto-scaler/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"RBAC in KubeVela\"?\n\nAssistant: This page covers the RBAC feature in KubeVela, detailing built-in permission policies, roles, and how to customize roles for platform and project scopes.\n\nHere's a detailed explanation:\n\n\n## Built-in permission policies\nA permission policy consists of resources, action and effect, there are some built-in permission policies, including:\n\n* Cluster Management （resource:[cluster:*/*] action:* effect:allow scope:platform）\n* Project Management （resource:[project:*] action:* effect:allow scope:platform）\n* Addon Management   （resource:[addon:*,addonRegistry:*] action:* effect:allow scope:platform）\n* Target Management  （resource:[target:*,cluster:*/namespace:*] action:* effect:allow scope:platform）\n* User Management    （resource:[user:*] action:* effect:allow scope:platform）\n* Platform Role Management （resource:[role:*, permission:*] action:* effect:allow scope:platform）\n* Admin              （resource:[*:*] action:* effect:allow scope:platform）\n\n* Project Read       （resource:[project:{projectName}] action:detail effect:allow scope:project）\n* App Management     （resource:[project:{projectName}/application:*/*, definition:* ] action:* effect:allow scope:platform）\n* Environment Management （resource:[project:{projectName}/environment:*] action:* effect:allow scope:platform）\n* Role Management    （resource:[project:{projectName}/role:*,project:{projectName}/projectUser:*,project:{projectName}/permission:*] action:* effect:allow scope:project) \n\nCurrently, built-in permission policies cover all resources. It is conceivable that these permissions can be flexibly customized, we will provide the API and UI page to manage the custom permission.\n\n## Built-in roles\nA role consists of a role name and the set of permissions it contains, we have built in some common roles:\n\n- Admin：platform scope role，include the `Admin` permission，that all operation rights of all resources。\n- App Developer：project scope role，include permissions required for app development.\n- Project Admin：project scope role，including administrative rights for all resources under the project.\n\n## Custom roles\nYou can customize the list of roles for a platform or project based on your business or team needs.\n\n### platform scope role\nGo to `Platform/Roles` page，you can get all platform-scope roles。\n\nClick the `New Role` button, you can open the drawer page for creating a role, you should input some required info, such as the role's name, alias and permissions. Click the `Create` button then complete.\n\n### project scope role\nFirst you need to go to the project details page, If users with project list query permission can enter through the project list, If not, you can enter through the application detail page.\n\nSwitch to the role management page on the project details page to add or modify role information under the project.\n\n## User bound role\n- Platform-scope roles need to be bound to users on the user management page. One user can be bound to multiple platform-scope roles.\n\n- Project-scope roles need to be set in the project member management page, and roles need to be bound when users are added to the project, or modify the existing users' roles.\n\n## Working with Kubernetes RBAC\nThe VelaUX User will be projected into the underlying Kubernetes User when you configured the FeatureGates of the VelaUX apiserver through `--feature-gates=EnableImpersonation=true`. In this way, the application of VelaUX will use the identity of the Project and the VelaUX User, which means it is possible for system operators to restrict the user's access through Kubernetes RBAC mechanism behind VelaUX.\n", "metadata": {"source_url": "https://kubevela.io/docs/how-to/dashboard/user/rbac", "title": "RBAC in KubeVela", "description": "This page covers the RBAC feature in KubeVela, detailing built-in permission policies, roles, and how to customize roles for platform and project scopes.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 16:19:09", "type": "overview", "page_metadata": {"ogDescription": "The RBAC feature enabled restriction of access to VelaUX resources. The UI and API could strict permission verification. We designed platform-scope roles and project-scope roles, Each role can be bound to a set of permission policies, and users can obtain corresponding permissions when they are bound to the role.", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:title": "VelaUX RBAC | KubeVela", "og:description": "The RBAC feature enabled restriction of access to VelaUX resources. The UI and API could strict permission verification. We designed platform-scope roles and project-scope roles, Each role can be bound to a set of permission policies, and users can obtain corresponding permissions when they are bound to the role.", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "theme-color": "#ffffff", "generator": "Docusaurus v2.4.3", "docusaurus_version": "v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "viewport": "width=device-width, initial-scale=1.0", "title": "VelaUX RBAC | KubeVela", "docusaurus_locale": "en", "og:url": "https://kubevela.io/docs/how-to/dashboard/user/rbac/", "docusaurus_tag": "docs-default-v1.10", "docsearch:version": "v1.10", "description": "The RBAC feature enabled restriction of access to VelaUX resources. The UI and API could strict permission verification. We designed platform-scope roles and project-scope roles, Each role can be bound to a set of permission policies, and users can obtain corresponding permissions when they are bound to the role.", "language": "en", "ogTitle": "VelaUX RBAC | KubeVela", "docsearch:language": "en", "ogUrl": "https://kubevela.io/docs/how-to/dashboard/user/rbac/", "twitter:card": "summary_large_image", "scrapeId": "fb57b587-f93f-46bc-8848-44f3280ed097", "sourceURL": "https://kubevela.io/docs/how-to/dashboard/user/rbac", "url": "https://kubevela.io/docs/how-to/dashboard/user/rbac/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"RBAC in KubeVela\"?\n\nAssistant: Here are some code examples:\n\n### Built-in permission policies\n```yaml\n* Cluster Management （resource:[cluster:*/*] action:* effect:allow scope:platform）\n* Project Management （resource:[project:*] action:* effect:allow scope:platform）\n* Addon Management   （resource:[addon:*,addonRegistry:*] action:* effect:allow scope:platform）\n* Target Management  （resource:[target:*,cluster:*/namespace:*] action:* effect:allow scope:platform）\n* User Management    （resource:[user:*] action:* effect:allow scope:platform）\n* Platform Role Management （resource:[role:*, permission:*] action:* effect:allow scope:platform）\n* Admin              （resource:[*:*] action:* effect:allow scope:platform）\n\n* Project Read       （resource:[project:{projectName}] action:detail effect:allow scope:project）\n* App Management     （resource:[project:{projectName}/application:*/*, definition:* ] action:* effect:allow scope:platform）\n* Environment Management （resource:[project:{projectName}/environment:*] action:* effect:allow scope:platform）\n* Role Management    （resource:[project:{projectName}/role:*,project:{projectName}/projectUser:*,project:{projectName}/permission:*] action:* effect:allow scope:project)\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/how-to/dashboard/user/rbac", "title": "RBAC in KubeVela", "description": "This page covers the RBAC feature in KubeVela, detailing built-in permission policies, roles, and how to customize roles for platform and project scopes.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 16:19:09", "type": "code_examples", "page_metadata": {"ogDescription": "The RBAC feature enabled restriction of access to VelaUX resources. The UI and API could strict permission verification. We designed platform-scope roles and project-scope roles, Each role can be bound to a set of permission policies, and users can obtain corresponding permissions when they are bound to the role.", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:title": "VelaUX RBAC | KubeVela", "og:description": "The RBAC feature enabled restriction of access to VelaUX resources. The UI and API could strict permission verification. We designed platform-scope roles and project-scope roles, Each role can be bound to a set of permission policies, and users can obtain corresponding permissions when they are bound to the role.", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "theme-color": "#ffffff", "generator": "Docusaurus v2.4.3", "docusaurus_version": "v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "viewport": "width=device-width, initial-scale=1.0", "title": "VelaUX RBAC | KubeVela", "docusaurus_locale": "en", "og:url": "https://kubevela.io/docs/how-to/dashboard/user/rbac/", "docusaurus_tag": "docs-default-v1.10", "docsearch:version": "v1.10", "description": "The RBAC feature enabled restriction of access to VelaUX resources. The UI and API could strict permission verification. We designed platform-scope roles and project-scope roles, Each role can be bound to a set of permission policies, and users can obtain corresponding permissions when they are bound to the role.", "language": "en", "ogTitle": "VelaUX RBAC | KubeVela", "docsearch:language": "en", "ogUrl": "https://kubevela.io/docs/how-to/dashboard/user/rbac/", "twitter:card": "summary_large_image", "scrapeId": "fb57b587-f93f-46bc-8848-44f3280ed097", "sourceURL": "https://kubevela.io/docs/how-to/dashboard/user/rbac", "url": "https://kubevela.io/docs/how-to/dashboard/user/rbac/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"RBAC in KubeVela\"?\n\nAssistant: Here are the recommended best practices:\n\n• Customize roles based on your business or team needs.\n• Ensure to bind platform-scope roles to users on the user management page.\n• Modify existing users' roles as necessary.\n", "metadata": {"source_url": "https://kubevela.io/docs/how-to/dashboard/user/rbac", "title": "RBAC in KubeVela", "description": "This page covers the RBAC feature in KubeVela, detailing built-in permission policies, roles, and how to customize roles for platform and project scopes.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 16:19:09", "type": "best_practices", "page_metadata": {"ogDescription": "The RBAC feature enabled restriction of access to VelaUX resources. The UI and API could strict permission verification. We designed platform-scope roles and project-scope roles, Each role can be bound to a set of permission policies, and users can obtain corresponding permissions when they are bound to the role.", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:title": "VelaUX RBAC | KubeVela", "og:description": "The RBAC feature enabled restriction of access to VelaUX resources. The UI and API could strict permission verification. We designed platform-scope roles and project-scope roles, Each role can be bound to a set of permission policies, and users can obtain corresponding permissions when they are bound to the role.", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "theme-color": "#ffffff", "generator": "Docusaurus v2.4.3", "docusaurus_version": "v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "viewport": "width=device-width, initial-scale=1.0", "title": "VelaUX RBAC | KubeVela", "docusaurus_locale": "en", "og:url": "https://kubevela.io/docs/how-to/dashboard/user/rbac/", "docusaurus_tag": "docs-default-v1.10", "docsearch:version": "v1.10", "description": "The RBAC feature enabled restriction of access to VelaUX resources. The UI and API could strict permission verification. We designed platform-scope roles and project-scope roles, Each role can be bound to a set of permission policies, and users can obtain corresponding permissions when they are bound to the role.", "language": "en", "ogTitle": "VelaUX RBAC | KubeVela", "docsearch:language": "en", "ogUrl": "https://kubevela.io/docs/how-to/dashboard/user/rbac/", "twitter:card": "summary_large_image", "scrapeId": "fb57b587-f93f-46bc-8848-44f3280ed097", "sourceURL": "https://kubevela.io/docs/how-to/dashboard/user/rbac", "url": "https://kubevela.io/docs/how-to/dashboard/user/rbac/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela Dashboard Target Overview\"?\n\nAssistant: This page provides an overview of managing clusters and delivery targets in KubeVela, including how to create targets and bind them to environments for application deployment.\n\nHere's a detailed explanation:\n\n\n## Manage Clusters\nCurrently, VelaUX support manage two kinds of clusters:\n\n- Support connecting the exist kubernetes cluster.\n- Support connecting the Alibaba ACK cluster.\n\nUsers with cluster management permissions can enter the cluster management page to add or detach managed clusters.\n\n![cluster-management](https://static.kubevela.net/images/1.3/cluster-management.jpg)\n\nFor connecting the ACK clusters, the platform will save some cloud info, Region, VPC, Dashboard Address, etc. When users use the cluster to create a Target, the cloud information is automatically assigned to the Target, which the cloud service applications can use.\n\n## Manage Delivery Target\nTo deploy application components into different places, VelaUX provides a new concept **[Delivery Target](https://kubevela.io/docs/reference/addons/velaux/#delivery-target)** for user to manage their deploy destinations not only clusters or namespaces, but also cloud provider information such as region, vpc and so on.\n\n## Cluster\nFirst, before configuring Target, you need to ensure your clusters have been joined. You can check your clusters in the Cluster page. The **local** cluster represents the cluster that KubeVela control plane is running on. If you have other clusters, you can either connect those clusters directly to KubeVela by providing their KubeConfig, or join clusters from your cloud provider such as Alibaba Cloud.\n\n![manage-clusters](https://kubevela.io/assets/images/manage-clusters-6213289637cac22fe8d69e3b10bcf000.jpg)\n\nAfter adding clusters in KubeVela, you can edit their descriptions or disconnect them when there is no Application running on them.\n\n## Create Target\nNow you can creating Target for deploying your applications. A target identifies a specific namespace in one cluster. If the namespace does not exist in the cluster, you can also create the namespace by clicking the **New** button.\n\n![new-target](https://kubevela.io/assets/images/new-target-27c67c758ab6a95ec69b6bfdadaa9da3.jpg)\n\nIf you want to use the cloud resource (such as RDS from alibaba cloud), you can also set the _Shared Variables_ and fill the provider name and region name in it. Make sure you have related terraform addon installed already.\n\n## Bind Targets in Environment\nGo to **Environment** page and now you can bind your created targets in a environment.\n\n![new-environment](https://kubevela.io/assets/images/new-environment-234d3c5f387019e6b75af908e3e29b55.jpg)\n\n## Create Application with Environment\nNow you can use the environent which was bound to the targets just created.\n\n![bind-env-to-app](https://kubevela.io/assets/images/bind-env-to-app-90de7a5635a8dbcd3455e805f441fcb5.jpg)\n\nIn the newly created application, you will see two targets contained in the workflow.\n\n![app-with-target](https://kubevela.io/assets/images/app-with-target-b304926f1ccae3466b3084ef3f3e5571.jpg)\n\nAfter you deployed this application, the component will be dispatch to both targets for specific namespace of clusters.\n", "metadata": {"source_url": "https://kubevela.io/docs/how-to/dashboard/target/overview", "title": "KubeVela Dashboard Target Overview", "description": "This page provides an overview of managing clusters and delivery targets in KubeVela, including how to create targets and bind them to environments for application deployment.", "has_code_examples": false, "has_best_practices": true, "section_count": 6, "timestamp": "2025-02-28 16:19:52", "type": "overview", "page_metadata": {"ogUrl": "https://kubevela.io/docs/how-to/dashboard/target/overview/", "twitter:card": "summary_large_image", "ogTitle": "Manage Clusters on UI Console | KubeVela", "og:description": "This docs requires you to have velaux installed.", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docsearch:docusaurus_tag": "docs-default-v1.10", "docsearch:language": "en", "title": "Manage Clusters on UI Console | KubeVela", "og:url": "https://kubevela.io/docs/how-to/dashboard/target/overview/", "og:title": "Manage Clusters on UI Console | KubeVela", "description": "This docs requires you to have velaux installed.", "viewport": "width=device-width, initial-scale=1.0", "generator": "Docusaurus v2.4.3", "docusaurus_version": "v1.10", "docusaurus_tag": "docs-default-v1.10", "theme-color": "#ffffff", "docsearch:version": "v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "language": "en", "docusaurus_locale": "en", "ogDescription": "This docs requires you to have velaux installed.", "scrapeId": "4367b392-273d-4fe5-aef8-5c1db911e7d4", "sourceURL": "https://kubevela.io/docs/how-to/dashboard/target/overview", "url": "https://kubevela.io/docs/how-to/dashboard/target/overview/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela Dashboard Target Overview\"?\n\nAssistant: Here are the recommended best practices:\n\n• Ensure you have velaux installed before managing clusters and targets.\n• When connecting ACK clusters, remember to save cloud information such as Region and VPC.\n• Edit cluster descriptions or disconnect them if no applications are running on them.\n• Use the New button to create a namespace if it does not exist when creating a target.\n• Make sure to have the related terraform addon installed when using cloud resources.\n", "metadata": {"source_url": "https://kubevela.io/docs/how-to/dashboard/target/overview", "title": "KubeVela Dashboard Target Overview", "description": "This page provides an overview of managing clusters and delivery targets in KubeVela, including how to create targets and bind them to environments for application deployment.", "has_code_examples": false, "has_best_practices": true, "section_count": 6, "timestamp": "2025-02-28 16:19:52", "type": "best_practices", "page_metadata": {"ogUrl": "https://kubevela.io/docs/how-to/dashboard/target/overview/", "twitter:card": "summary_large_image", "ogTitle": "Manage Clusters on UI Console | KubeVela", "og:description": "This docs requires you to have velaux installed.", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docsearch:docusaurus_tag": "docs-default-v1.10", "docsearch:language": "en", "title": "Manage Clusters on UI Console | KubeVela", "og:url": "https://kubevela.io/docs/how-to/dashboard/target/overview/", "og:title": "Manage Clusters on UI Console | KubeVela", "description": "This docs requires you to have velaux installed.", "viewport": "width=device-width, initial-scale=1.0", "generator": "Docusaurus v2.4.3", "docusaurus_version": "v1.10", "docusaurus_tag": "docs-default-v1.10", "theme-color": "#ffffff", "docsearch:version": "v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "language": "en", "docusaurus_locale": "en", "ogDescription": "This docs requires you to have velaux installed.", "scrapeId": "4367b392-273d-4fe5-aef8-5c1db911e7d4", "sourceURL": "https://kubevela.io/docs/how-to/dashboard/target/overview", "url": "https://kubevela.io/docs/how-to/dashboard/target/overview/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela Addon: FluxCD\"?\n\nAssistant: This documentation covers the installation and usage of the FluxCD addon for KubeVela, including definitions, parameters, and examples for helm and kustomize.\n\nHere's a detailed explanation:\n\n\n## install\n```codeBlockLines_e6Vv\nvela addon enable fluxcd\n```If you only want to deploy the helm application with fluxcd addon, you can execute the following command to enable only helm related components.\n```codeBlockLines_e6Vv\n$ vela addon enable fluxcd onlyHelmComponents=true\n```\n\n## Definitions\nThe following definitions will be enabled after the installation of fluxcd addon.\n\n| DEFINITION NAME | DEFINITION TYPE | DEFINITION DESCRIPTION |\n| :-: | :-: | --- |\n| helm | ComponentDefinition | helps to deploy a helm chart from git repo, helm repo or S3 compatible bucket |\n| kustomize | ComponentDefinition | helps to deploy a kustomize style artifact and GitOps capability to watch changes from git repo or image registry |\n| kustomize-json-patch | TraitDefinition | A list of JSON6902 patch to selected target |\n| kustomize-patch | TraitDefinition | A list of StrategicMerge or JSON6902 patch to selected target |\n| kustomize-strategy-merge | TraitDefinition | A list of strategic merge to kustomize config |\n\n## helm\n#### Parameters\n\n| Parameters | Description | Example |\n| --- | --- | --- |\n| repoType | required, indicates the type of repository, should be \"helm\",\"git\", \"oss\", or \"oci\". | Helm |\n| pullInterval | optional, the interval at which to check for repository/bucket and release updates, default to 5m | 5m |\n| url | required, the Git or Helm repository URL, OSS endpoint, accept HTTP/S or SSH address as git url | [https://charts.bitnami.com/bitnami](https://charts.bitnami.com/bitnami) |\n| secretRef | optional, the name of the Secret object that holds the credentials required to pull the repo. The username and password fields must be included in the HTTP/S basic authentication Secret. For TLS the secret must contain a certFile and keyFile, and/or caCert fields. For TLS authentication, the secret must contain a certFile / keyFile field and/or caCert field. | sec-name |\n| timeout | optional, the timeout for operations like download index/clone repository | 60s |\n| chart | required, the relative path to helm chart for git/oss source. The chart name for helm resource | redis-cluster |\n| version | optional, chart version, * by default | 6.2.7 |\n| targetNamespace | optional, the namespace to install chart, decided by chart itself | your-ns |\n| releaseName | optional, release name after installed | your-rn |\n| values | optional, override the Values.yaml inchart, using for the rendering of Helm |  |\n| valuesFrom | optional, valuesFrom holds references to resources containing Helm values for this HelmRelease, and information about how they should be merged. It's a list of [ValueReference](https://kubevela.io/docs/v1.8/reference/addons/fluxcd/#valuereference) |  |\n| installTimeout | optional, the timeout for operation `helm install`, and 10 minutes by default | 20m |\n| interval | optional, the Interval at which to reconcile the Helm release, default to 30s | 1m |\n| oss | optional, The [oss](https://kubevela.io/docs/v1.8/reference/addons/fluxcd/#oss) source configuration |  |\n| git | optional, The [git](https://kubevela.io/docs/v1.8/reference/addons/fluxcd/#git) source configuration | dev |\n\n##### Example\nYou can create an application like below to deploy a helm chart which stored in helm repository.\n```codeBlockLines_e6Vv\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: helm-redis\nspec:\n  components:\n    - name: redis\n      type: helm\n      properties:\n        repoType: \"helm\"\n        url: \"https://charts.bitnami.com/bitnami\"\n        chart: \"redis\"\n        version: \"16.8.5\"\n        values:\n          master:\n            persistence:\n              size: 16Gi\n          replica:\n            persistence:\n              size: 16Gi\n```\nIf your helm chart is stored in OCI registry, you can create the application like this:\n```codeBlockLines_e6Vv\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: oci-app\n  namespace: default\nspec:\n  components:\n    - name: test-oci\n      type: helm\n      properties:\n        repoType: \"oci\"\n        url: oci://ghcr.io/stefanprodan/charts\n        chart: podinfo\n        version: '6.1.*'\n```\nIf your helm chart is stored in OSS, you can create the application like this:\n```codeBlockLines_e6Vv\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: bucket-app\nspec:\n  components:\n    - name: bucket-comp\n      type: helm\n      properties:\n        repoType: oss\n        # required if bucket is private\n        secretRef: bucket-secret\n        chart: ./chart/podinfo-5.1.3.tgz\n        url: oss-cn-beijing.aliyuncs.com\n        oss:\n            bucketName: definition-registry\n```\nIf your helm chart stored in git, you can create the application like this:\n```codeBlockLines_e6Vv\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n   name: app-delivering-chart\nspec:\n   components:\n     - name: terraform-controller\n       type: helm\n       properties:\n          repoType: git\n          url: https://github.com/oam-dev/terraform-controller\n          chart: ./chart\n          git:\n            branch: master\n```\n\n\n## kustomize\n#### Parameters\n\n| Parameters | Description | Example |\n| --- | --- | --- |\n| repoType | required, indicates the type of repository, should be \"helm\",\"git\" or \"oss\". | oss |\n| pullInterval | optional, Synchronize with Git repository, and the time interval between tuning helm release. The default value is 5m (5 minutes） | 10m |\n| url | required, bucket's endpoint, no need to fill in with scheme | oss-cn-beijing.aliyuncs.com |\n| secretRef | optional, Save the name of a Secret, which is the credential to read the bucket. Secret contains accesskey and secretkey fields | sec-name |\n| timeout | optional, The timeout period of the download operation, the default is 20s | 60s |\n| path | required, The directory containing the kustomization.yaml file, or the directory containing a set of YAML files (used to generate kustomization.yaml) | ./prod |\n| oss | optional, The [oss](https://kubevela.io/docs/v1.8/reference/addons/fluxcd/#OSS) source configuration |  |\n| git | optional, The [git](https://kubevela.io/docs/v1.8/reference/addons/fluxcd/#OSS) source configuration |  |\n| imageRepository | optional, The image [repository](#Image Repository) for automatically update image to git |  |\n\n##### Example\n1. If your kustomize style artifact is stored in oss, you can create application by flowing these steps:\n(Optional)If your OSS bucket needs identity verification, create a Secret first:\n```codeBlockLines_e6Vv\n$ kubectl create secret generic bucket-secret --from-literal=accesskey=<your-ak> --from-literal=secretkey=<your-sk>\nsecret/bucket-secret created\n```\nDeploy this application:\n```codeBlockLines_e6Vv\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: bucket-app\nspec:\n  components:\n    - name: bucket-comp\n      type: kustomize\n      properties:\n        repoType: oss\n        # If the bucket is private, you will need to provide\n        secretRef: bucket-secret\n        url: oss-cn-beijing.aliyuncs.com\n        oss:\n          bucketName: definition-registry\n        path: ./app/prod/\n```\n2. If your artifact is stored in git, you can create application like this:\n```codeBlockLines_e6Vv\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: git-app\nspec:\n  components:\n    - name: git-comp\n      type: kustomize\n      properties:\n        repoType: git\n        url: https://github.com/<path>/<to>/<repo>\n        git:\n          branch: master\n          provider: GitHub\n        path: ./app/dev/\n```\n3. If you want to create a application which updated automatically when image updated. You can create the application like this.\n```codeBlockLines_e6Vv\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: image-app\nspec:\n  components:\n    - name: image\n      type: kustomize\n      properties:\n        imageRepository:\n          image: <your image>\n          secretRef: imagesecret\n          filterTags:\n            pattern: '^master-[a-f0-9]+-(?P<ts>[0-9]+)'\n            extract: '$ts'\n          policy:\n            numerical:\n              order: asc\n          commitMessage: \"Image: {{range .Updated.Images}}{{println .}}{{end}}\"\n```\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.8/reference/addons/fluxcd", "title": "KubeVela Addon: FluxCD", "description": "This documentation covers the installation and usage of the FluxCD addon for KubeVela, including definitions, parameters, and examples for helm and kustomize.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 16:20:34", "type": "overview", "page_metadata": {"docusaurus_tag": "docs-default-v1.8", "theme-color": "#ffffff", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "title": "FluxCD | KubeVela", "generator": "Docusaurus v2.4.3", "ogTitle": "FluxCD | KubeVela", "docsearch:docusaurus_tag": "docs-default-v1.8", "language": "en", "viewport": "width=device-width, initial-scale=1.0", "ogDescription": "This addon is built based FluxCD", "msapplication-config": "/img/favicons/browserconfig.xml", "ogUrl": "https://kubevela.io/docs/v1.8/reference/addons/fluxcd/", "docsearch:version": "v1.8", "docusaurus_locale": "en", "og:title": "FluxCD | KubeVela", "description": "This addon is built based FluxCD", "docusaurus_version": "v1.8", "twitter:card": "summary_large_image", "og:url": "https://kubevela.io/docs/v1.8/reference/addons/fluxcd/", "og:description": "This addon is built based FluxCD", "docsearch:language": "en", "scrapeId": "6b23cff8-c86d-4ace-b05f-a5a7c700f3ba", "sourceURL": "https://kubevela.io/docs/v1.8/reference/addons/fluxcd", "url": "https://kubevela.io/docs/v1.8/reference/addons/fluxcd/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"KubeVela Addon: FluxCD\"?\n\nAssistant: Here are some code examples:\n\n### Install FluxCD Addon\n```yaml\n```codeBlockLines_e6Vv\nvela addon enable fluxcd\n```\n```\n\n### Enable Only Helm Components\n```yaml\n```codeBlockLines_e6Vv\n$ vela addon enable fluxcd onlyHelmComponents=true\n```\n```\n\n### Helm Application Example\n```yaml\n```codeBlockLines_e6Vv\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: helm-redis\nspec:\n  components:\n    - name: redis\n      type: helm\n      properties:\n        repoType: \"helm\"\n        url: \"https://charts.bitnami.com/bitnami\"\n        chart: \"redis\"\n        version: \"16.8.5\"\n        values:\n          master:\n            persistence:\n              size: 16Gi\n          replica:\n            persistence:\n              size: 16Gi\n```\n```\n\n### OCI Application Example\n```yaml\n```codeBlockLines_e6Vv\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: oci-app\n  namespace: default\nspec:\n  components:\n    - name: test-oci\n      type: helm\n      properties:\n        repoType: \"oci\"\n        url: oci://ghcr.io/stefanprodan/charts\n        chart: podinfo\n        version: '6.1.*'\n```\n```\n\n### OSS Application Example\n```yaml\n```codeBlockLines_e6Vv\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: bucket-app\nspec:\n  components:\n    - name: bucket-comp\n      type: helm\n      properties:\n        repoType: oss\n        # required if bucket is private\n        secretRef: bucket-secret\n        chart: ./chart/podinfo-5.1.3.tgz\n        url: oss-cn-beijing.aliyuncs.com\n        oss:\n            bucketName: definition-registry\n```\n```\n\n### Git Application Example\n```yaml\n```codeBlockLines_e6Vv\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n   name: app-delivering-chart\nspec:\n   components:\n     - name: terraform-controller\n       type: helm\n       properties:\n          repoType: git\n          url: https://github.com/oam-dev/terraform-controller\n          chart: ./chart\n          git:\n            branch: master\n```\n```\n\n### Kustomize Application Example\n```yaml\n```codeBlockLines_e6Vv\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: bucket-app\nspec:\n  components:\n    - name: bucket-comp\n      type: kustomize\n      properties:\n        repoType: oss\n        # If the bucket is private, you will need to provide\n        secretRef: bucket-secret\n        url: oss-cn-beijing.aliyuncs.com\n        oss:\n          bucketName: definition-registry\n        path: ./app/prod/\n```\n```\n\n### Git Kustomize Application Example\n```yaml\n```codeBlockLines_e6Vv\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: git-app\nspec:\n  components:\n    - name: git-comp\n      type: kustomize\n      properties:\n        repoType: git\n        url: https://github.com/<path>/<to>/<repo>\n        git:\n          branch: master\n          provider: GitHub\n        path: ./app/dev/\n```\n```\n\n### Image Update Application Example\n```yaml\n```codeBlockLines_e6Vv\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: image-app\nspec:\n  components:\n    - name: image\n      type: kustomize\n      properties:\n        imageRepository:\n          image: <your image>\n          secretRef: imagesecret\n          filterTags:\n            pattern: '^master-[a-f0-9]+-(?P<ts>[0-9]+)'\n            extract: '$ts'\n          policy:\n            numerical:\n              order: asc\n          commitMessage: \"Image: {{range .Updated.Images}}{{println .}}{{end}}\"\n```\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.8/reference/addons/fluxcd", "title": "KubeVela Addon: FluxCD", "description": "This documentation covers the installation and usage of the FluxCD addon for KubeVela, including definitions, parameters, and examples for helm and kustomize.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 16:20:34", "type": "code_examples", "page_metadata": {"docusaurus_tag": "docs-default-v1.8", "theme-color": "#ffffff", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "title": "FluxCD | KubeVela", "generator": "Docusaurus v2.4.3", "ogTitle": "FluxCD | KubeVela", "docsearch:docusaurus_tag": "docs-default-v1.8", "language": "en", "viewport": "width=device-width, initial-scale=1.0", "ogDescription": "This addon is built based FluxCD", "msapplication-config": "/img/favicons/browserconfig.xml", "ogUrl": "https://kubevela.io/docs/v1.8/reference/addons/fluxcd/", "docsearch:version": "v1.8", "docusaurus_locale": "en", "og:title": "FluxCD | KubeVela", "description": "This addon is built based FluxCD", "docusaurus_version": "v1.8", "twitter:card": "summary_large_image", "og:url": "https://kubevela.io/docs/v1.8/reference/addons/fluxcd/", "og:description": "This addon is built based FluxCD", "docsearch:language": "en", "scrapeId": "6b23cff8-c86d-4ace-b05f-a5a7c700f3ba", "sourceURL": "https://kubevela.io/docs/v1.8/reference/addons/fluxcd", "url": "https://kubevela.io/docs/v1.8/reference/addons/fluxcd/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela Addon: FluxCD\"?\n\nAssistant: Here are the recommended best practices:\n\n• Ensure your fluxcd addon version is >= v1.3.1 for OCI registry support.\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.8/reference/addons/fluxcd", "title": "KubeVela Addon: FluxCD", "description": "This documentation covers the installation and usage of the FluxCD addon for KubeVela, including definitions, parameters, and examples for helm and kustomize.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 16:20:34", "type": "best_practices", "page_metadata": {"docusaurus_tag": "docs-default-v1.8", "theme-color": "#ffffff", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "title": "FluxCD | KubeVela", "generator": "Docusaurus v2.4.3", "ogTitle": "FluxCD | KubeVela", "docsearch:docusaurus_tag": "docs-default-v1.8", "language": "en", "viewport": "width=device-width, initial-scale=1.0", "ogDescription": "This addon is built based FluxCD", "msapplication-config": "/img/favicons/browserconfig.xml", "ogUrl": "https://kubevela.io/docs/v1.8/reference/addons/fluxcd/", "docsearch:version": "v1.8", "docusaurus_locale": "en", "og:title": "FluxCD | KubeVela", "description": "This addon is built based FluxCD", "docusaurus_version": "v1.8", "twitter:card": "summary_large_image", "og:url": "https://kubevela.io/docs/v1.8/reference/addons/fluxcd/", "og:description": "This addon is built based FluxCD", "docsearch:language": "en", "scrapeId": "6b23cff8-c86d-4ace-b05f-a5a7c700f3ba", "sourceURL": "https://kubevela.io/docs/v1.8/reference/addons/fluxcd", "url": "https://kubevela.io/docs/v1.8/reference/addons/fluxcd/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"Terraform Addon for KubeVela\"?\n\nAssistant: This documentation covers how to enable and use the Terraform addon in KubeVela to provision cloud resources.\n\nHere's a detailed explanation:\n\n\n## Enable Terraform addon\nTo provision cloud resources, you can use terraform along with related cloud provider addons.\n\n```codeBlockLines_e6Vv\nvela addon enable terraform\n```\n\nAfter Terraform addon is enabled, you will have a basic capability to create cloud resources in CRD ways. Then you can enable a terraform provider addon for specific clouds.\n\n## Enable Terraform Provider addon\nKubeVela can support the following cloud providers by enabling the Terraform provider addons.\n\n```codeBlockLines_e6Vv\n$ vela addon list | grep terraform-\ntf-alibaba           KubeVela    Kubernetes Terraform Controller for Alibaba Cloud                                                       [1.0.2, 1.0.1]                          enabled (1.0.2)\ntf-tencent           KubeVela    Kubernetes Terraform Controller Provider for Tencent Cloud                                              [1.0.0, 1.0.1]                          enabled (1.0.0)\ntf-aws               KubeVela    Kubernetes Terraform Controller for AWS                                                                 [1.0.0, 1.0.1]                          enabled (1.0.0)\ntf-azure             KubeVela    Kubernetes Terraform Controller for Azure                                                               [1.0.0, 1.0.1]                          enabled (1.0.0)\ntf-baidu             KubeVela    Kubernetes Terraform Controller Provider for Baidu Cloud                                                [1.0.0, 1.0.1]                          enabled (1.0.0)\ntf-gcp               KubeVela    Kubernetes Terraform Controller Provider for Google Cloud Platform                                      [1.0.0, 1.0.1]                          enabled (1.0.0)\ntf-ucloud            KubeVela    Kubernetes Terraform Controller Provider for UCloud                                                     [1.0.1, 1.0.0]                          enabled (1.0.1)\n```\n\nTo enable one of them, use the following command:\n\n```codeBlockLines_e6Vv\nvela addon enable terraform-<provider-name>\n```\n\nYou can also disable, upgrade, and check the status of an addon by command `vela addon`.\n\n## Authenticate a Terraform provider\nView the supported Terraform providers.\n\n```codeBlockLines_e6Vv\nvela config-template list | grep terraform\n```\n\nFor example to create a provider config for AWS.\n\n```codeBlockLines_e6Vv\nvela config create aws -t terraform-aws AWS_ACCESS_KEY_ID=xxx AWS_SECRET_ACCESS_KEY=yyy AWS_DEFAULT_REGION=us-east-1\n```\n\n## Provision cloud resources\nAfter a Terraform provider is authenticated, you can [provision and/or consume cloud resources](https://kubevela.io/docs/v1.8/tutorials/consume-cloud-services/).\n\n- [Enable Terraform addon](https://kubevela.io/docs/v1.8/reference/addons/terraform/#enable-terraform-addon)\n- [Enable Terraform Provider addon](https://kubevela.io/docs/v1.8/reference/addons/terraform/#enable-terraform-provider-addon)\n  - [Authenticate a Terraform provider](https://kubevela.io/docs/v1.8/reference/addons/terraform/#authenticate-a-terraform-provider)\n  - [Provision cloud resources](https://kubevela.io/docs/v1.8/reference/addons/terraform/#provision-cloud-resources)\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.8/reference/addons/terraform", "title": "Terraform Addon for KubeVela", "description": "This documentation covers how to enable and use the Terraform addon in KubeVela to provision cloud resources.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 16:24:04", "type": "overview", "page_metadata": {"title": "Terraform | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "language": "en", "ogUrl": "https://kubevela.io/docs/v1.8/reference/addons/terraform/", "description": "To provision cloud resources, you can use terraform along with related cloud provider addons.", "theme-color": "#ffffff", "docsearch:language": "en", "og:url": "https://kubevela.io/docs/v1.8/reference/addons/terraform/", "docsearch:version": "v1.8", "generator": "Docusaurus v2.4.3", "docusaurus_tag": "docs-default-v1.8", "og:description": "To provision cloud resources, you can use terraform along with related cloud provider addons.", "docsearch:docusaurus_tag": "docs-default-v1.8", "msapplication-config": "/img/favicons/browserconfig.xml", "ogTitle": "Terraform | KubeVela", "twitter:card": "summary_large_image", "og:title": "Terraform | KubeVela", "docusaurus_version": "v1.8", "docusaurus_locale": "en", "viewport": "width=device-width, initial-scale=1.0", "ogDescription": "To provision cloud resources, you can use terraform along with related cloud provider addons.", "scrapeId": "a057336d-d91f-49a2-924f-214772395397", "sourceURL": "https://kubevela.io/docs/v1.8/reference/addons/terraform", "url": "https://kubevela.io/docs/v1.8/reference/addons/terraform/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"Terraform Addon for KubeVela\"?\n\nAssistant: Here are some code examples:\n\n### Enable Terraform addon\n```yaml\nvela addon enable terraform\n```\n\n### List Terraform addons\n```yaml\n$ vela addon list | grep terraform-\n```\n\n### Enable specific Terraform provider addon\n```yaml\nvela addon enable terraform-<provider-name>\n```\n\n### List supported Terraform providers\n```yaml\nvela config-template list | grep terraform\n```\n\n### Create AWS provider config\n```yaml\nvela config create aws -t terraform-aws AWS_ACCESS_KEY_ID=xxx AWS_SECRET_ACCESS_KEY=yyy AWS_DEFAULT_REGION=us-east-1\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.8/reference/addons/terraform", "title": "Terraform Addon for KubeVela", "description": "This documentation covers how to enable and use the Terraform addon in KubeVela to provision cloud resources.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 16:24:04", "type": "code_examples", "page_metadata": {"title": "Terraform | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "language": "en", "ogUrl": "https://kubevela.io/docs/v1.8/reference/addons/terraform/", "description": "To provision cloud resources, you can use terraform along with related cloud provider addons.", "theme-color": "#ffffff", "docsearch:language": "en", "og:url": "https://kubevela.io/docs/v1.8/reference/addons/terraform/", "docsearch:version": "v1.8", "generator": "Docusaurus v2.4.3", "docusaurus_tag": "docs-default-v1.8", "og:description": "To provision cloud resources, you can use terraform along with related cloud provider addons.", "docsearch:docusaurus_tag": "docs-default-v1.8", "msapplication-config": "/img/favicons/browserconfig.xml", "ogTitle": "Terraform | KubeVela", "twitter:card": "summary_large_image", "og:title": "Terraform | KubeVela", "docusaurus_version": "v1.8", "docusaurus_locale": "en", "viewport": "width=device-width, initial-scale=1.0", "ogDescription": "To provision cloud resources, you can use terraform along with related cloud provider addons.", "scrapeId": "a057336d-d91f-49a2-924f-214772395397", "sourceURL": "https://kubevela.io/docs/v1.8/reference/addons/terraform", "url": "https://kubevela.io/docs/v1.8/reference/addons/terraform/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"Terraform Addon for KubeVela\"?\n\nAssistant: Here are the recommended best practices:\n\n• Ensure to check the version compatibility of the Terraform provider addons before enabling them.\n• Use the command `vela addon` to manage the status of your addons effectively.\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.8/reference/addons/terraform", "title": "Terraform Addon for KubeVela", "description": "This documentation covers how to enable and use the Terraform addon in KubeVela to provision cloud resources.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 16:24:04", "type": "best_practices", "page_metadata": {"title": "Terraform | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "language": "en", "ogUrl": "https://kubevela.io/docs/v1.8/reference/addons/terraform/", "description": "To provision cloud resources, you can use terraform along with related cloud provider addons.", "theme-color": "#ffffff", "docsearch:language": "en", "og:url": "https://kubevela.io/docs/v1.8/reference/addons/terraform/", "docsearch:version": "v1.8", "generator": "Docusaurus v2.4.3", "docusaurus_tag": "docs-default-v1.8", "og:description": "To provision cloud resources, you can use terraform along with related cloud provider addons.", "docsearch:docusaurus_tag": "docs-default-v1.8", "msapplication-config": "/img/favicons/browserconfig.xml", "ogTitle": "Terraform | KubeVela", "twitter:card": "summary_large_image", "og:title": "Terraform | KubeVela", "docusaurus_version": "v1.8", "docusaurus_locale": "en", "viewport": "width=device-width, initial-scale=1.0", "ogDescription": "To provision cloud resources, you can use terraform along with related cloud provider addons.", "scrapeId": "a057336d-d91f-49a2-924f-214772395397", "sourceURL": "https://kubevela.io/docs/v1.8/reference/addons/terraform", "url": "https://kubevela.io/docs/v1.8/reference/addons/terraform/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela Addons Documentation\"?\n\nAssistant: This documentation covers the machine learning addons for KubeVela, including model-training and model-serving addons.\n\nHere's a detailed explanation:\n\n\n## Machine Learning Addon Overview\nMachine learning addon is divided into model-training addon and model-serving addon. Run the following command to install the addon:\n\n```codeBlockLines_e6Vv\nvela addon enable model-training\nvela addon enable model-serving\n```\n\n## Model-training addon\nIn model-training addon, we have two component definitions: `model-training` and `jupyter notebook`.\n\n## model-training\n```codeBlockLines_e6Vv\n$ vela show model-training\n# Properties\n+------------------+----------------------------------------------------------------------------------+-------------------------------+----------+---------+\n|       NAME       |                                   DESCRIPTION                                    |             TYPE              | REQUIRED | DEFAULT |\n+------------------+----------------------------------------------------------------------------------+-------------------------------+----------+---------+\n| env              | Define arguments by using environment variables                                  | [[]env](#env)                 | false    |         |\n| labels           | Specify the labels in the workload                                               | map[string]string             | false    |         |\n| annotations      | Specify the annotations in the workload                                          | map[string]string             | false    |         |\n| framework        | The training framework to use                                                    | string                        | true     |         |\n| image            | Which image would you like to use for your service                               | string                        | true     |         |\n| imagePullPolicy  | Specify image pull policy for your service                                       | string                        | false    |         |\n| cpu              | Number of CPU units for the service, like `0.5` (0.5 CPU core), `1` (1 CPU core) | string                        | false    |         |\n| memory           | Specifies the attributes of the memory resource required for the container.      | string                        | false    |         |\n| gpu              | Specifies the attributes of the gpu resource required for the container.         | string                        | false    |         |\n| storage          |                                                                                  | [[]storage](#storage)         | false    |         |\n| imagePullSecrets | Specify image pull secrets for your service                                      | []string                      | false    |         |\n| distribution     | If you want to train the model in distributed mode, specify here                 | [distribution](#distribution) | false    |         |\n| restartPolicy    |                                                                                  | string                        | true     | Never   |\n+------------------+----------------------------------------------------------------------------------+-------------------------------+----------+---------+\n```\n\n## distribution\n+-----------+---------------------------------------------------------+------+----------+---------+\n|   NAME    |                       DESCRIPTION                       | TYPE | REQUIRED | DEFAULT |\n+-----------+---------------------------------------------------------+------+----------+---------+\n| ps        | The number of PS replicas, suits for tensorflow model   | int  | false    |         |\n| master    | The number of Master replicas, suits for pytorch model  | int  | false    |         |\n| scheduler | The number of Scheduler replicas, suits for mxnet model | int  | false    |         |\n| server    | The number of Server replicas, suits for mxnet model    | int  | false    |         |\n| launcher  | The number of Launcher replicas, suits for mpi model    | int  | false    |         |\n| worker    | The number of Worker replicas                           | int  | false    |         |\n+-----------+---------------------------------------------------------+------+----------+---------+\n\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.9/reference/addons/ai", "title": "KubeVela Addons Documentation", "description": "This documentation covers the machine learning addons for KubeVela, including model-training and model-serving addons.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 16:24:28", "type": "overview", "page_metadata": {"docsearch:docusaurus_tag": "docs-default-v1.9", "og:title": "Machine Learning | KubeVela", "og:url": "https://kubevela.io/docs/v1.9/reference/addons/ai/", "language": "en", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "og:description": "Machine learning addon is divided into model-training addon and model-serving addon. Run the following command to install the addon:", "theme-color": "#ffffff", "ogDescription": "Machine learning addon is divided into model-training addon and model-serving addon. Run the following command to install the addon:", "docusaurus_locale": "en", "description": "Machine learning addon is divided into model-training addon and model-serving addon. Run the following command to install the addon:", "msapplication-config": "/img/favicons/browserconfig.xml", "docusaurus_version": "v1.9", "docsearch:version": "v1.9", "viewport": "width=device-width, initial-scale=1.0", "generator": "Docusaurus v2.4.3", "twitter:card": "summary_large_image", "docsearch:language": "en", "docusaurus_tag": "docs-default-v1.9", "title": "Machine Learning | KubeVela", "ogTitle": "Machine Learning | KubeVela", "ogUrl": "https://kubevela.io/docs/v1.9/reference/addons/ai/", "scrapeId": "cec23a19-3bdf-44fa-a570-623fb3333b98", "sourceURL": "https://kubevela.io/docs/v1.9/reference/addons/ai", "url": "https://kubevela.io/docs/v1.9/reference/addons/ai/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"KubeVela Addons Documentation\"?\n\nAssistant: Here are some code examples:\n\n### Model-training Command\n```yaml\n```codeBlockLines_e6Vv\n$ vela show model-training\n# Properties\n+------------------+----------------------------------------------------------------------------------+-------------------------------+----------+---------+\n|       NAME       |                                   DESCRIPTION                                    |             TYPE              | REQUIRED | DEFAULT |\n+------------------+----------------------------------------------------------------------------------+-------------------------------+----------+---------+\n| env              | Define arguments by using environment variables                                  | [[]env](#env)                 | false    |         |\n| labels           | Specify the labels in the workload                                               | map[string]string             | false    |         |\n| annotations      | Specify the annotations in the workload                                          | map[string]string             | false    |         |\n| framework        | The training framework to use                                                    | string                        | true     |         |\n| image            | Which image would you like to use for your service                               | string                        | true     |         |\n| imagePullPolicy  | Specify image pull policy for your service                                       | string                        | false    |         |\n| cpu              | Number of CPU units for the service, like `0.5` (0.5 CPU core), `1` (1 CPU core) | string                        | false    |         |\n| memory           | Specifies the attributes of the memory resource required for the container.      | string                        | false    |         |\n| gpu              | Specifies the attributes of the gpu resource required for the container.         | string                        | false    |         |\n| storage          |                                                                                  | [[]storage](#storage)         | false    |         |\n| imagePullSecrets | Specify image pull secrets for your service                                      | []string                      | false    |         |\n| distribution     | If you want to train the model in distributed mode, specify here                 | [distribution](#distribution) | false    |         |\n| restartPolicy    |                                                                                  | string                        | true     | Never   |\n+------------------+----------------------------------------------------------------------------------+-------------------------------+----------+---------+\n```\n```\n\n### Jupyter Notebook Command\n```yaml\n```codeBlockLines_e6Vv\n$ vela show jupyter-notebook\n# Properties\n+-------------+------------------------------------------------------------------------------------------------------+-----------------------+----------+-----------+\n|    NAME     |                                             DESCRIPTION                                              |         TYPE          | REQUIRED |  DEFAULT  |\n+-------------+------------------------------------------------------------------------------------------------------+-----------------------+----------+-----------+\n| cpu         | Number of CPU units for the service, like `0.5` (0.5 CPU core), `1` (1 CPU core)                     | string                | false    |           |\n| memory      | Specifies the attributes of the memory resource required for the container.                          | string                | false    |           |\n| gpu         | Specifies the attributes of the gpu resource required for the container.                             | string                | false    |           |\n| storage     |                                                                                                      | [[]storage](#storage) | false    |           |\n| serviceType | Specify what kind of Service you want. options: \"ClusterIP\",\"NodePort\",\"LoadBalancer\",\"ExternalName\" | string                | true     | ClusterIP |\n+-------------+------------------------------------------------------------------------------------------------------+-----------------------+----------+-----------+\n```\n```\n\n### Model-serving Command\n```yaml\n```codeBlockLines_e6Vv\n$ vela show model-serving\n# Properties\n+---------------+-----------------------------------------------------------------------+---------------------------------+----------+---------+\n|     NAME      |                              DESCRIPTION                              |              TYPE               | REQUIRED | DEFAULT |\n+---------------+-----------------------------------------------------------------------+---------------------------------+----------+---------+\n| timeout       | If you model serving need long time to return, please set the timeout | string                          | false    |         |\n| customRouting | Specify the custom routing of the serving                             | [customRouting](#customRouting) | false    |         |\n| protocol      | Protocol of model serving, default to seldon                          | string                          | false    |         |\n| predictors    | The predictors of the serving                                         | [[]predictors](#predictors)     | true     |         |\n+---------------+-----------------------------------------------------------------------+---------------------------------+----------+---------+\n```\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.9/reference/addons/ai", "title": "KubeVela Addons Documentation", "description": "This documentation covers the machine learning addons for KubeVela, including model-training and model-serving addons.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 16:24:28", "type": "code_examples", "page_metadata": {"docsearch:docusaurus_tag": "docs-default-v1.9", "og:title": "Machine Learning | KubeVela", "og:url": "https://kubevela.io/docs/v1.9/reference/addons/ai/", "language": "en", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "og:description": "Machine learning addon is divided into model-training addon and model-serving addon. Run the following command to install the addon:", "theme-color": "#ffffff", "ogDescription": "Machine learning addon is divided into model-training addon and model-serving addon. Run the following command to install the addon:", "docusaurus_locale": "en", "description": "Machine learning addon is divided into model-training addon and model-serving addon. Run the following command to install the addon:", "msapplication-config": "/img/favicons/browserconfig.xml", "docusaurus_version": "v1.9", "docsearch:version": "v1.9", "viewport": "width=device-width, initial-scale=1.0", "generator": "Docusaurus v2.4.3", "twitter:card": "summary_large_image", "docsearch:language": "en", "docusaurus_tag": "docs-default-v1.9", "title": "Machine Learning | KubeVela", "ogTitle": "Machine Learning | KubeVela", "ogUrl": "https://kubevela.io/docs/v1.9/reference/addons/ai/", "scrapeId": "cec23a19-3bdf-44fa-a570-623fb3333b98", "sourceURL": "https://kubevela.io/docs/v1.9/reference/addons/ai", "url": "https://kubevela.io/docs/v1.9/reference/addons/ai/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela Addons Documentation\"?\n\nAssistant: Here are the recommended best practices:\n\n• Ensure to specify the correct training framework when using the model-training addon.\n• Use appropriate resource limits for CPU and memory to optimize performance.\n• For distributed training, configure the distribution settings according to the model requirements.\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.9/reference/addons/ai", "title": "KubeVela Addons Documentation", "description": "This documentation covers the machine learning addons for KubeVela, including model-training and model-serving addons.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 16:24:28", "type": "best_practices", "page_metadata": {"docsearch:docusaurus_tag": "docs-default-v1.9", "og:title": "Machine Learning | KubeVela", "og:url": "https://kubevela.io/docs/v1.9/reference/addons/ai/", "language": "en", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "og:description": "Machine learning addon is divided into model-training addon and model-serving addon. Run the following command to install the addon:", "theme-color": "#ffffff", "ogDescription": "Machine learning addon is divided into model-training addon and model-serving addon. Run the following command to install the addon:", "docusaurus_locale": "en", "description": "Machine learning addon is divided into model-training addon and model-serving addon. Run the following command to install the addon:", "msapplication-config": "/img/favicons/browserconfig.xml", "docusaurus_version": "v1.9", "docsearch:version": "v1.9", "viewport": "width=device-width, initial-scale=1.0", "generator": "Docusaurus v2.4.3", "twitter:card": "summary_large_image", "docsearch:language": "en", "docusaurus_tag": "docs-default-v1.9", "title": "Machine Learning | KubeVela", "ogTitle": "Machine Learning | KubeVela", "ogUrl": "https://kubevela.io/docs/v1.9/reference/addons/ai/", "scrapeId": "cec23a19-3bdf-44fa-a570-623fb3333b98", "sourceURL": "https://kubevela.io/docs/v1.9/reference/addons/ai", "url": "https://kubevela.io/docs/v1.9/reference/addons/ai/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"VelaUX Addon Documentation\"?\n\nAssistant: This documentation provides information on how to install and configure the VelaUX addon for KubeVela, including service types, ingress setup, and database configuration.\n\nHere's a detailed explanation:\n\n\n## Install\nTo enable the VelaUX addon, use the following command:\n\n```codeBlockLines_e6Vv\nvela addon enable velaux\n```\n\nExpected output:\n\n```codeBlockLines_e6Vv\nAddon: velaux enabled Successfully.\n```\n\nVelaUX needs authentication. The default username is `admin` and the password is **`VelaUX12345`**. Please must set and remember the new password after the first login.\n\nBy default, VelaUX didn't have any exposed port.\n\n## Visit VelaUX by port-forward\nPort forward will work as a proxy to allow visiting VelaUX dashboard by local port.\n\n```codeBlockLines_e6Vv\nvela port-forward addon-velaux -n vela-system\n```\n\nChoose `> local | velaux | velaux` for visit.\n\n## Setup with Specified Service Type\nThere are three service types for VelaUX addon which aligned with Kubernetes service, they're `ClusterIP`, `NodePort` and `LoadBalancer`.\n\nBy default the service type is ClusterIP for security.\n\nIf you want to expose your VelaUX dashboard for convenience, you can specify the service type.\n\n- `LoadBalancer` type requires your cluster has cloud LoadBalancer available.\n\n```codeBlockLines_e6Vv\nvela addon enable velaux serviceType=LoadBalancer\n```\n\n- `NodePort` type requires you can access the Kubernetes Node IP/Port.\n\n```codeBlockLines_e6Vv\nvela addon enable velaux serviceType=NodePort\n```\n\nAfter the service type specified to `LoadBalancer` or `NodePort`, you can obtain the access address through `vela status`:\n\n```codeBlockLines_e6Vv\nvela status addon-velaux -n vela-system --endpoint\n```\n\nThe expected output:\n\n```codeBlockLines_e6Vv\n+----------------------------+----------------------+  \n|  REF(KIND/NAMESPACE/NAME)  |       ENDPOINT       |  \n+----------------------------+----------------------+  \n| Service/vela-system/velaux | http://<IP address> |  \n+----------------------------+----------------------+  \n```\n\n## Setup with Ingress domain\nIf you have ingress and domain available in your cluster, you can also deploy VelaUX by specify a domain like below:\n\n```codeBlockLines_e6Vv\nvela addon enable velaux domain=example.domain.com\n```\n\nThe expected output:\n\n```codeBlockLines_e6Vv\nI0112 15:23:40.428364   34884 apply.go:106] \"patching object\" name=\"addon-velaux\" resource=\"core.oam.dev/v1beta1, Kind=Application\"  \nI0112 15:23:40.676894   34884 apply.go:106] \"patching object\" name=\"addon-secret-velaux\" resource=\"/v1, Kind=Secret\"  \nAddon: velaux enabled Successfully.  \nPlease access the velaux from the following endpoints:  \n+----------------------------+---------------------------+  \n|  REF(KIND/NAMESPACE/NAME)  |         ENDPOINT          |  \n+----------------------------+---------------------------+  \n| Ingress/vela-system/velaux | http://example.domain.com |  \n+----------------------------+---------------------------+  \n```\n\n## Setup with MongoDB database\nVelaUX supports Kubernetes and MongoDB as the database. the default is Kubernetes. We strongly advise using the MongoDB database to power your production environment.\n\n```codeBlockLines_e6Vv\nvela addon enable velaux dbType=mongodb dbURL=mongodb://<MONGODB_USER>:<MONGODB_PASSWORD>@<MONGODB_URL>\n```\n\nYou can also deploy the MongoDB with this application configuration:\n\n> Your cluster must have a default storage class.\n\n```codeBlockLines_e6Vv\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: velaux-db\n  namespace: vela-system\nspec:\n  components:\n    - name: velaux-db\n      properties:\n        chart: mongodb\n        repoType: helm\n        url: https://charts.bitnami.com/bitnami\n        values:\n          persistence:\n            size: 20Gi\n        version: 12.1.12\n      type: helm\n  policies:\n    - name: vela-system\n      properties:\n        clusters:\n          - local\n        namespace: vela-system\n      type: topology\n  workflow:\n    steps:\n      - name: vela-system\n        properties:\n          policies:\n            - vela-system\n        type: deploy\n```\n\nAfter deployed, let's get the root password from the secret `vela-system/velaux-db-mongodb`.\n\n## Specify the addon image\nBy default the image repo is docker hub, you can specify the image repo by the `repo` parameter:\n\n```codeBlockLines_e6Vv\nvela addon enable velaux repo=acr.kubevela.net\n```\n\nYou can try to specify the `acr.kubevela.net` image registry as an alternative, It's maintained by KubeVela team, and we will upload/sync the built-in addon image for convenience. This feature can also help you to build your private installation, just upload all images to your private image registry.\n\n## Concept of VelaUX\nVelaUX is an addon on top of KubeVela, it works as UI console for KubeVela, while it's also an out-of-box platform for end-user. We add some more concepts for enterprise integration.\n\n## Project\nProject is where you manage all the applications and collaborate with your team member. Project is one stand alone scope that separates it from other project.\n\n## Environment\nEnvironment refers to the environment for development, testing, and production and it can include multiple Delivery Targets. Only applications in the same environment can visit and share resource with each other.\n\n- **Bind Application with Environment** The application can be bound to multiple Environments, and for each environment, you can set the unique parameter difference for each environment.\n\n## Delivery Target\nDelivery Target describes the space where the application resources actually delivered. One target describes one Kubernetes cluster and namespace, it can also describe a region or VPC for cloud providers which includes shared variables and machine resources.\n\nKubernetes cluster and Cloud resources are currently the main way for KubeVela application delivery. In one target, credentials of cloud resources created will automatically delivered to the Kubernetes cluster.\n\n## Application\nAn application in VelaUX is a bit different with KubeVela, we add lifecycle includes:\n\n- **Create** an application is just create a metadata records, it won't run in real cluster.\n- **Deploy** an application will bind with specified environment and instantiate application resource into Kubernetes clusters.\n- **Recycle** an application will delete the instance of the application and reclaim its resources from Kubernetes clusters.\n- **Delete** an application is actually delete the metadata.\n\nThe rest concept in VelaUX Application are align with KubeVela Core.\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.9/reference/addons/velaux", "title": "VelaUX Addon Documentation", "description": "This documentation provides information on how to install and configure the VelaUX addon for KubeVela, including service types, ingress setup, and database configuration.", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-02-28 16:24:55", "type": "overview", "page_metadata": {"favicon": "https://kubevela.io/img/favicons/favicon.ico", "title": "VelaUX | KubeVela", "ogUrl": "https://kubevela.io/docs/v1.9/reference/addons/velaux/", "language": "en", "docsearch:language": "en", "docusaurus_tag": "docs-default-v1.9", "ogDescription": "VelaUX provides the UI console of KubeVela.", "docsearch:docusaurus_tag": "docs-default-v1.9", "og:title": "VelaUX | KubeVela", "theme-color": "#ffffff", "docusaurus_locale": "en", "viewport": "width=device-width, initial-scale=1.0", "description": "VelaUX provides the UI console of KubeVela.", "twitter:card": "summary_large_image", "ogTitle": "VelaUX | KubeVela", "generator": "Docusaurus v2.4.3", "docusaurus_version": "v1.9", "og:description": "VelaUX provides the UI console of KubeVela.", "msapplication-config": "/img/favicons/browserconfig.xml", "docsearch:version": "v1.9", "og:url": "https://kubevela.io/docs/v1.9/reference/addons/velaux/", "scrapeId": "df598a3f-48ae-42a3-a178-fafe12c2bedc", "sourceURL": "https://kubevela.io/docs/v1.9/reference/addons/velaux", "url": "https://kubevela.io/docs/v1.9/reference/addons/velaux/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"VelaUX Addon Documentation\"?\n\nAssistant: Here are some code examples:\n\n### Install VelaUX\n```yaml\nvela addon enable velaux\n```\n\n### Visit VelaUX by port-forward\n```yaml\nvela port-forward addon-velaux -n vela-system\n```\n\n### Setup with LoadBalancer Service Type\n```yaml\nvela addon enable velaux serviceType=LoadBalancer\n```\n\n### Setup with NodePort Service Type\n```yaml\nvela addon enable velaux serviceType=NodePort\n```\n\n### Get Access Address\n```yaml\nvela status addon-velaux -n vela-system --endpoint\n```\n\n### Setup with Ingress Domain\n```yaml\nvela addon enable velaux domain=example.domain.com\n```\n\n### Enable VelaUX with SSL\n```yaml\nvela addon enable velaux domain=example.doamin.com gatewayDriver=traefik secretName=velaux-cert\n```\n\n### Setup with MongoDB Database\n```yaml\nvela addon enable velaux dbType=mongodb dbURL=mongodb://<MONGODB_USER>:<MONGODB_PASSWORD>@<MONGODB_URL>\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.9/reference/addons/velaux", "title": "VelaUX Addon Documentation", "description": "This documentation provides information on how to install and configure the VelaUX addon for KubeVela, including service types, ingress setup, and database configuration.", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-02-28 16:24:55", "type": "code_examples", "page_metadata": {"favicon": "https://kubevela.io/img/favicons/favicon.ico", "title": "VelaUX | KubeVela", "ogUrl": "https://kubevela.io/docs/v1.9/reference/addons/velaux/", "language": "en", "docsearch:language": "en", "docusaurus_tag": "docs-default-v1.9", "ogDescription": "VelaUX provides the UI console of KubeVela.", "docsearch:docusaurus_tag": "docs-default-v1.9", "og:title": "VelaUX | KubeVela", "theme-color": "#ffffff", "docusaurus_locale": "en", "viewport": "width=device-width, initial-scale=1.0", "description": "VelaUX provides the UI console of KubeVela.", "twitter:card": "summary_large_image", "ogTitle": "VelaUX | KubeVela", "generator": "Docusaurus v2.4.3", "docusaurus_version": "v1.9", "og:description": "VelaUX provides the UI console of KubeVela.", "msapplication-config": "/img/favicons/browserconfig.xml", "docsearch:version": "v1.9", "og:url": "https://kubevela.io/docs/v1.9/reference/addons/velaux/", "scrapeId": "df598a3f-48ae-42a3-a178-fafe12c2bedc", "sourceURL": "https://kubevela.io/docs/v1.9/reference/addons/velaux", "url": "https://kubevela.io/docs/v1.9/reference/addons/velaux/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"VelaUX Addon Documentation\"?\n\nAssistant: Here are the recommended best practices:\n\n• Please set and remember the new password after the first login.\n• By default, VelaUX didn't have any exposed port.\n• We strongly advise using the MongoDB database to power your production environment.\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.9/reference/addons/velaux", "title": "VelaUX Addon Documentation", "description": "This documentation provides information on how to install and configure the VelaUX addon for KubeVela, including service types, ingress setup, and database configuration.", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-02-28 16:24:55", "type": "best_practices", "page_metadata": {"favicon": "https://kubevela.io/img/favicons/favicon.ico", "title": "VelaUX | KubeVela", "ogUrl": "https://kubevela.io/docs/v1.9/reference/addons/velaux/", "language": "en", "docsearch:language": "en", "docusaurus_tag": "docs-default-v1.9", "ogDescription": "VelaUX provides the UI console of KubeVela.", "docsearch:docusaurus_tag": "docs-default-v1.9", "og:title": "VelaUX | KubeVela", "theme-color": "#ffffff", "docusaurus_locale": "en", "viewport": "width=device-width, initial-scale=1.0", "description": "VelaUX provides the UI console of KubeVela.", "twitter:card": "summary_large_image", "ogTitle": "VelaUX | KubeVela", "generator": "Docusaurus v2.4.3", "docusaurus_version": "v1.9", "og:description": "VelaUX provides the UI console of KubeVela.", "msapplication-config": "/img/favicons/browserconfig.xml", "docsearch:version": "v1.9", "og:url": "https://kubevela.io/docs/v1.9/reference/addons/velaux/", "scrapeId": "df598a3f-48ae-42a3-a178-fafe12c2bedc", "sourceURL": "https://kubevela.io/docs/v1.9/reference/addons/velaux", "url": "https://kubevela.io/docs/v1.9/reference/addons/velaux/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"Separation of Concerns in KubeVela\"?\n\nAssistant: This page discusses the separation of concerns in KubeVela, detailing the roles of platform teams and end users, and the benefits of this design.\n\nHere's a detailed explanation:\n\n\n## Roles of Users\nKubeVela designs for separation of concerns, as a result, there're two roles of users:\n\n- **Platform Team**  \n  The platform engineers initialize the deployment environments, provide stable infrastructure capabilities (e.g. mysql-operator) and register them as reusable templates using [KubeVela Definitions](https://kubevela.io/docs/getting-started/definition/) into the control plane. They should be experienced and skillful with the infrastructure.\n- **End Users**  \n  The end users are usually app developers. They choose target environment, and choose capability templates, fill in values and finally assemble them as a [KubeVela Application](https://kubevela.io/docs/getting-started/core-concept/). They don't need to understand the infrastructure details.\n\n## Addons\nThe KubeVela community has also maintained a bundle of infrastructure capabilities, they are called [addons](https://kubevela.io/docs/reference/addons/overview/).\n\n## Workflow\nThe work flow is shown as below:\n\n![alt](https://kubevela.io/assets/images/how-it-works-3c737d447fdc60ee5aaf4c048ded7fc1.jpg)\n\n## What's benefit?\nThe separation of concern benefit the end users most. They can enjoy the \"Application-Centric\" experience without learning any infrastructure details. To make it more concrete, they can be free from the following scenarios:\n\n- No need to learn Kubernetes API deprecations from versions upgrade.\n- No need to care about the difference between several ingress implementations.\n- No need to understand the CPU limit or even deeper infrastructure knowledge such as pod disruption budget.\n- Declare high availability or other operation requirements as application traits.\n- Use the capability with more confidence as they're enforced with best practices provided by platform teams.\n\nAs to platform teams, the benefits are also obvious:\n\n- They can provide reusable capabilities, enforce best practices and make application delivery safer.\n- They can provide flexible template parameters to serve different application teams with the same platform per their needs.\n- They can share and integrate capabilities with the whole open source community easily in a standard way.\n", "metadata": {"source_url": "https://kubevela.io/docs/getting-started/separate-of-concern", "title": "Separation of Concerns in KubeVela", "description": "This page discusses the separation of concerns in KubeVela, detailing the roles of platform teams and end users, and the benefits of this design.", "has_code_examples": false, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 16:25:13", "type": "overview", "page_metadata": {"language": "en", "docsearch:docusaurus_tag": "docs-default-v1.10", "docsearch:version": "v1.10", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_locale": "en", "og:title": "Separation of Concerns | KubeVela", "ogTitle": "Separation of Concerns | KubeVela", "og:url": "https://kubevela.io/docs/getting-started/separate-of-concern/", "docusaurus_tag": "docs-default-v1.10", "theme-color": "#ffffff", "title": "Separation of Concerns | KubeVela", "og:description": "KubeVela designs for separation of concerns, as a result, there're two roles of users:", "msapplication-config": "/img/favicons/browserconfig.xml", "generator": "Docusaurus v2.4.3", "twitter:card": "summary_large_image", "docusaurus_version": "v1.10", "ogDescription": "KubeVela designs for separation of concerns, as a result, there're two roles of users:", "ogUrl": "https://kubevela.io/docs/getting-started/separate-of-concern/", "description": "KubeVela designs for separation of concerns, as a result, there're two roles of users:", "viewport": "width=device-width, initial-scale=1.0", "docsearch:language": "en", "scrapeId": "f150f5da-d1ca-42cb-90ad-e051048e12d7", "sourceURL": "https://kubevela.io/docs/getting-started/separate-of-concern", "url": "https://kubevela.io/docs/getting-started/separate-of-concern/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"Separation of Concerns in KubeVela\"?\n\nAssistant: Here are the recommended best practices:\n\n• Platform teams should be experienced and skillful with the infrastructure.\n• End users do not need to understand infrastructure details.\n• Reusable capabilities should be provided by platform teams to enforce best practices.\n", "metadata": {"source_url": "https://kubevela.io/docs/getting-started/separate-of-concern", "title": "Separation of Concerns in KubeVela", "description": "This page discusses the separation of concerns in KubeVela, detailing the roles of platform teams and end users, and the benefits of this design.", "has_code_examples": false, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 16:25:13", "type": "best_practices", "page_metadata": {"language": "en", "docsearch:docusaurus_tag": "docs-default-v1.10", "docsearch:version": "v1.10", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_locale": "en", "og:title": "Separation of Concerns | KubeVela", "ogTitle": "Separation of Concerns | KubeVela", "og:url": "https://kubevela.io/docs/getting-started/separate-of-concern/", "docusaurus_tag": "docs-default-v1.10", "theme-color": "#ffffff", "title": "Separation of Concerns | KubeVela", "og:description": "KubeVela designs for separation of concerns, as a result, there're two roles of users:", "msapplication-config": "/img/favicons/browserconfig.xml", "generator": "Docusaurus v2.4.3", "twitter:card": "summary_large_image", "docusaurus_version": "v1.10", "ogDescription": "KubeVela designs for separation of concerns, as a result, there're two roles of users:", "ogUrl": "https://kubevela.io/docs/getting-started/separate-of-concern/", "description": "KubeVela designs for separation of concerns, as a result, there're two roles of users:", "viewport": "width=device-width, initial-scale=1.0", "docsearch:language": "en", "scrapeId": "f150f5da-d1ca-42cb-90ad-e051048e12d7", "sourceURL": "https://kubevela.io/docs/getting-started/separate-of-concern", "url": "https://kubevela.io/docs/getting-started/separate-of-concern/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela Configuration Commands\"?\n\nAssistant: This page provides documentation on the `vela config` command to manage configuration data in KubeVela.\n\nHere's a detailed explanation:\n\n\n## `vela config set`\nThe `vela config set` command is used to set configuration data. Example usage:\n\n```bash\nvela config set test a=b c=d\n```\n\nThis command will read existing config data and merge it with user input. The output will confirm that the config data has been saved successfully.\n\n## `vela config get`\nThe `vela config get` command retrieves the configuration data for a specified key. Example usage:\n\n```bash\nvela config get test\n```\n\nThe output will display the data associated with the key:\n```\nData:\n  a: b\n  c: d\n```\n\n## `vela config del`\nThe `vela config del` command deletes a specified configuration. Example usage:\n\n```bash\nvela config del test\n```\n\nThe output will confirm that the config has been deleted successfully.\n\n## `vela config ls`\nThe `vela config ls` command lists all configuration keys. Example usage:\n\n```bash\nvela config set test a=b\nvela config set test2 c=d\nvela config ls\n```\n\nThe output will display the names of the configurations:\n```\nNAME\ntest\ntest2\n```\n\n## Configure env in application\nConfiguration data can be set as environment variables in applications. Example usage:\n\n```bash\nvela config set demo DEMO_HELLO=helloworld\n```\n\nSave the following to `vela.yaml` in the current directory:\n\n```yaml\nname: testapp\nservices:\n  env-config-demo:\n    image: heroku/nodejs-hello-world\n    config: demo\n```\n\nThen run:\n\n```bash\nvela up\n```\n\nThe output will show the deployment process and confirm that the app has been deployed successfully.\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.9/developers/config-app", "title": "KubeVela Configuration Commands", "description": "This page provides documentation on the `vela config` command to manage configuration data in KubeVela.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 16:25:22", "type": "overview", "page_metadata": {"twitter:card": "summary_large_image", "docusaurus_version": "v1.9", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "og:title": "Configuring data/env in Application | KubeVela", "language": "en", "docusaurus_locale": "en", "docsearch:docusaurus_tag": "docs-default-v1.9", "ogTitle": "Configuring data/env in Application | KubeVela", "ogUrl": "https://kubevela.io/docs/v1.9/developers/config-app/", "title": "Configuring data/env in Application | KubeVela", "docusaurus_tag": "docs-default-v1.9", "docsearch:version": "v1.9", "og:description": "vela provides a config command to manage config data.", "viewport": "width=device-width, initial-scale=1.0", "og:url": "https://kubevela.io/docs/v1.9/developers/config-app/", "generator": "Docusaurus v2.4.3", "docsearch:language": "en", "ogDescription": "vela provides a config command to manage config data.", "msapplication-config": "/img/favicons/browserconfig.xml", "theme-color": "#ffffff", "description": "vela provides a config command to manage config data.", "scrapeId": "2e6ec310-7092-40e9-98a9-e14106990494", "sourceURL": "https://kubevela.io/docs/v1.9/developers/config-app", "url": "https://kubevela.io/docs/v1.9/developers/config-app/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"KubeVela Configuration Commands\"?\n\nAssistant: Here are some code examples:\n\n### Set Configuration\n```yaml\nvela config set test a=b c=d\n```\n\n### Get Configuration\n```yaml\nvela config get test\n```\n\n### Delete Configuration\n```yaml\nvela config del test\n```\n\n### List Configurations\n```yaml\nvela config set test a=b\nvela config set test2 c=d\nvela config ls\n```\n\n### Set Environment Variable in Application\n```yaml\nvela config set demo DEMO_HELLO=helloworld\n```\n\n### Deploy Application\n```yaml\nvela up\n```\n\n### Check Environment Variable\n```yaml\nvela exec testapp -- printenv | grep DEMO_HELLO\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.9/developers/config-app", "title": "KubeVela Configuration Commands", "description": "This page provides documentation on the `vela config` command to manage configuration data in KubeVela.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 16:25:22", "type": "code_examples", "page_metadata": {"twitter:card": "summary_large_image", "docusaurus_version": "v1.9", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "og:title": "Configuring data/env in Application | KubeVela", "language": "en", "docusaurus_locale": "en", "docsearch:docusaurus_tag": "docs-default-v1.9", "ogTitle": "Configuring data/env in Application | KubeVela", "ogUrl": "https://kubevela.io/docs/v1.9/developers/config-app/", "title": "Configuring data/env in Application | KubeVela", "docusaurus_tag": "docs-default-v1.9", "docsearch:version": "v1.9", "og:description": "vela provides a config command to manage config data.", "viewport": "width=device-width, initial-scale=1.0", "og:url": "https://kubevela.io/docs/v1.9/developers/config-app/", "generator": "Docusaurus v2.4.3", "docsearch:language": "en", "ogDescription": "vela provides a config command to manage config data.", "msapplication-config": "/img/favicons/browserconfig.xml", "theme-color": "#ffffff", "description": "vela provides a config command to manage config data.", "scrapeId": "2e6ec310-7092-40e9-98a9-e14106990494", "sourceURL": "https://kubevela.io/docs/v1.9/developers/config-app", "url": "https://kubevela.io/docs/v1.9/developers/config-app/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela Configuration Commands\"?\n\nAssistant: Here are the recommended best practices:\n\n• Use `vela config set` to create or update configuration data.\n• Use `vela config get` to retrieve existing configuration data.\n• Use `vela config del` to remove configuration data that is no longer needed.\n• Use `vela config ls` to view all configurations at once.\n• When deploying applications, ensure that the configuration is correctly referenced in the `vela.yaml` file.\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.9/developers/config-app", "title": "KubeVela Configuration Commands", "description": "This page provides documentation on the `vela config` command to manage configuration data in KubeVela.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 16:25:22", "type": "best_practices", "page_metadata": {"twitter:card": "summary_large_image", "docusaurus_version": "v1.9", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "og:title": "Configuring data/env in Application | KubeVela", "language": "en", "docusaurus_locale": "en", "docsearch:docusaurus_tag": "docs-default-v1.9", "ogTitle": "Configuring data/env in Application | KubeVela", "ogUrl": "https://kubevela.io/docs/v1.9/developers/config-app/", "title": "Configuring data/env in Application | KubeVela", "docusaurus_tag": "docs-default-v1.9", "docsearch:version": "v1.9", "og:description": "vela provides a config command to manage config data.", "viewport": "width=device-width, initial-scale=1.0", "og:url": "https://kubevela.io/docs/v1.9/developers/config-app/", "generator": "Docusaurus v2.4.3", "docsearch:language": "en", "ogDescription": "vela provides a config command to manage config data.", "msapplication-config": "/img/favicons/browserconfig.xml", "theme-color": "#ffffff", "description": "vela provides a config command to manage config data.", "scrapeId": "2e6ec310-7092-40e9-98a9-e14106990494", "sourceURL": "https://kubevela.io/docs/v1.9/developers/config-app", "url": "https://kubevela.io/docs/v1.9/developers/config-app/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"Logging with KubeVela\"?\n\nAssistant: This documentation page introduces how to use the loki addon to collect and analyze application logs in KubeVela.\n\nHere's a detailed explanation:\n\n\n## Quick start\nWe need to enable the loki and grafana addon for this capability.\n\n## Enable the loki addon\nThe loki addon can be enabled in two modes:\n\n- Collecting application logs by specify trait, this is the default behavior when enabling log collection.\n- Collecting all applications logs from container stdout.\n\n## Collecting logs by traits\nTo make this mode work, you need to enable loki addon by setting parameter `agent=vector`:\n\n```codeBlockLines_e6Vv\nvela addon enable loki agent=vector\n```\n\nWhen enable loki addon without the `agent` parameter, no log collector will be enabled, only loki service deployed.\n\nAfter this addon enabled with `agent=vector`, a [loki](https://github.com/grafana/loki) service will be deployed in the control plane as a log store, and a log collection agent [vector](http://vector.dev/) will be deployed as daemon for all nodes of each current managed clusters.\n\nIf you want to specify the clusters, you can specify the `clusters` parameter when enabling addon. When new cluster joined, you need to enable this addon once again to install on these newly joined ones.\n\nFinally, you will get the following traits for log collection.\n\n- `file-logs`\n- `stdout-logs`\n\nOne application needs to configure above trait to make the log collected. These traits can also support configuring the vector VRL configuration to perform specific parsing method on the log content. The following chapters will introduce this part in detail.\n\n## Collecting all STDOUT logs automatically\n```codeBlockLines_e6Vv\nvela addon enable loki agent=vector stdout=all\n```\n\nAfter the addon enabled with `stdout=all`, the vector agent will collect all stdout logs of application pods automatically. No additional traits need to be configured.\nThe collected logs will be delivered to the loki service in the control plane cluster for storage.\n\nThe most advantage of this mode is that all logs configuration is simple and automatic, while the disadvantage are:\n\n1. Collecting all running pods will **cause a lot of pressure** on the loki service when there are too many applications. On the one hand, not all logs are needed, it can waste disk storage a lot. On the other hand, the vector agents of each cluster need to transmit the collected logs to control plane cluster, which will consume lots of network bandwidth.\n2. The full collection mode can only collect logs in a unified way, and no special log parsing can be done on different applications.\n\n## Enable the grafana addon\n```codeBlockLines_e6Vv\nvela addon enable grafana\n```\n\nEven if you have enabled the grafana addon as described in the [\"Automated Observability Documentation\"](https://kubevela.io/docs/platform-engineers/operations/observability/), you still need to re-enable the addon to register the loki data source to grafana.\n\n## Kubernetes system events logs\nAfter the loki addon enabled, a component will be installed in each cluster, which is responsible for collecting Kubernetes events and converting them to logs transmit to loki. You can also view and analyze the events of the system through the Kubernetes events dashboard in the grafana addon.\n\n![event-log](https://kubevela.io/assets/images/event-log-3209d7f217189c3ac1f5b202745e6fb6.jpg)\n\nDetails\n\nKubeVela Events dashboard\n\n```codeBlockLines_e6Vv\n---\n\n**Kubernetes Event overview** Displays the number of latest Kubernetes events in each time period of the system.\n\n---\n\n**Warning Events** The number of `Warning` type events.\n\n---\n\n**Image Pull Failed/Container Crashed .../Pod Evicted** The number of events that indicate application failures, such as image pull failure and pod eviction in the last 12 hours.\n\n---\n\n**TOP 10 Kubernetes Events** Top 10 types of events with the highest number of occurrences in the last 12 hours.\n\n---\n\n**Kubernetes Events Source** Pie chart of the controllers producing these events.\n\n---\n\n**Kubernetes Events Type** Pie chart of involved resource object types of events.\n\n---\n\n**Kubernetes Live Events ** The recent event logs.\n```\n\n## Collecting stdout log\nAs mentioned above, if you're not enable the stdout full collection mode, you can collect stdout logs by specify trait.\n\nConfigure the `stdout-logs` trait in the component, as follows:\n\n```codeBlockLines_e6Vv\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: app-stdout-log\n  namespace: default\nspec:\n  components:\n    - type: webservice\n      name: comp-stdout-log\n      properties:\n        image: busybox\n      traits:\n        - type: command\n          properties:\n            command:\n              - sh\n              - -c\n              - |\n                while :\n                do\n                  now=$(date +\"%T\")\n                  echo \"stdout: $now\"\n                  sleep 10\n                done\n        - type: stdout-logs\n```\n\nAfter the application is created, you can find the deployment resource created by the application in the application dashboard of grafana, click `Detail` button to jump to the deployment resource dashboard, and find the log data below. as follows:\n\n![normal-log](https://kubevela.io/assets/images/normal-log-bb5f0cf2da4a02a2e17b4d62a6d5197f.jpg)\n", "metadata": {"source_url": "https://kubevela.io/docs/platform-engineers/operations/o11y/logging", "title": "Logging with KubeVela", "description": "This documentation page introduces how to use the loki addon to collect and analyze application logs in KubeVela.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-02-28 16:25:53", "type": "overview", "page_metadata": {"generator": "Docusaurus v2.4.3", "ogDescription": "The application logs are very important for users to find and locate problems especially in production environment.", "docsearch:docusaurus_tag": "docs-default-v1.10", "description": "The application logs are very important for users to find and locate problems especially in production environment.", "ogUrl": "https://kubevela.io/docs/platform-engineers/operations/o11y/logging/", "docusaurus_locale": "en", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docsearch:language": "en", "docusaurus_version": "v1.10", "og:url": "https://kubevela.io/docs/platform-engineers/operations/o11y/logging/", "og:title": "Log Collection | KubeVela", "msapplication-config": "/img/favicons/browserconfig.xml", "viewport": "width=device-width, initial-scale=1.0", "title": "Log Collection | KubeVela", "theme-color": "#ffffff", "docusaurus_tag": "docs-default-v1.10", "language": "en", "og:description": "The application logs are very important for users to find and locate problems especially in production environment.", "docsearch:version": "v1.10", "ogTitle": "Log Collection | KubeVela", "twitter:card": "summary_large_image", "scrapeId": "904590aa-75a9-43e3-94c3-d8e89fcec0b2", "sourceURL": "https://kubevela.io/docs/platform-engineers/operations/o11y/logging", "url": "https://kubevela.io/docs/platform-engineers/operations/o11y/logging/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"Logging with KubeVela\"?\n\nAssistant: Here are some code examples:\n\n### Enable loki addon with vector agent\n```yaml\nvela addon enable loki agent=vector\n```\n\n### Enable loki addon to collect all stdout logs\n```yaml\nvela addon enable loki agent=vector stdout=all\n```\n\n### Enable grafana addon\n```yaml\nvela addon enable grafana\n```\n\n### Collect stdout logs in application\n```yaml\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: app-stdout-log\n  namespace: default\nspec:\n  components:\n    - type: webservice\n      name: comp-stdout-log\n      properties:\n        image: busybox\n      traits:\n        - type: command\n          properties:\n            command:\n              - sh\n              - -c\n              - |\n                while :\n                do\n                  now=$(date +\"%T\")\n                  echo \"stdout: $now\"\n                  sleep 10\n                done\n        - type: stdout-logs\n```\n\n### Nginx access log analysis\n```yaml\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: nginx-app-2\nspec:\n  components:\n    - name: nginx-comp\n      type: webservice\n      properties:\n        image: nginx:1.14.2\n        ports:\n          - port: 80\n            expose: true\n      traits:\n        - type: stdout-logs\n          properties:\n            parser: nginx\n```\n\n### Customize log processing configuration\n```yaml\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: nginx-app-2\nspec:\n  components:\n    - name: nginx-comp\n      type: webservice\n      properties:\n        image: nginx:1.14.2\n        ports:\n          - port: 80\n            expose: true\n      traits:\n        - type: stdout-logs\n          properties:\n            parser: customize\n            VRL: |\n              .message = parse_nginx_log!(.message, \"combined\")\n              .new_field = \"new value\"\n```\n\n### Collecting file log\n```yaml\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: app-file\n  namespace: default\nspec:\n  components:\n    - type: webservice\n      name: file-log-comp\n      properties:\n        image: busybox\n      traits:\n        - type: command\n          properties:\n            command:\n              - sh\n              - -c\n              - |\n                while :\n                do\n                  now=$(date +\"%T\")\n                  echo \"file: $now\" >> /root/verbose.log\n                  sleep 10\n                done\n        - type: file-logs\n          properties:\n            path: /root/verbose.log\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/platform-engineers/operations/o11y/logging", "title": "Logging with KubeVela", "description": "This documentation page introduces how to use the loki addon to collect and analyze application logs in KubeVela.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-02-28 16:25:53", "type": "code_examples", "page_metadata": {"generator": "Docusaurus v2.4.3", "ogDescription": "The application logs are very important for users to find and locate problems especially in production environment.", "docsearch:docusaurus_tag": "docs-default-v1.10", "description": "The application logs are very important for users to find and locate problems especially in production environment.", "ogUrl": "https://kubevela.io/docs/platform-engineers/operations/o11y/logging/", "docusaurus_locale": "en", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docsearch:language": "en", "docusaurus_version": "v1.10", "og:url": "https://kubevela.io/docs/platform-engineers/operations/o11y/logging/", "og:title": "Log Collection | KubeVela", "msapplication-config": "/img/favicons/browserconfig.xml", "viewport": "width=device-width, initial-scale=1.0", "title": "Log Collection | KubeVela", "theme-color": "#ffffff", "docusaurus_tag": "docs-default-v1.10", "language": "en", "og:description": "The application logs are very important for users to find and locate problems especially in production environment.", "docsearch:version": "v1.10", "ogTitle": "Log Collection | KubeVela", "twitter:card": "summary_large_image", "scrapeId": "904590aa-75a9-43e3-94c3-d8e89fcec0b2", "sourceURL": "https://kubevela.io/docs/platform-engineers/operations/o11y/logging", "url": "https://kubevela.io/docs/platform-engineers/operations/o11y/logging/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"Logging with KubeVela\"?\n\nAssistant: Here are the recommended best practices:\n\n• If you just want to get real time logs from application for debug, you can just use `vela logs` command or check it on UI console provided by `velaux` addon.\n• It should be noted that the logs that need to be collected mustn't be in the root directory of the container, otherwise it may cause the container to fail to start.\n", "metadata": {"source_url": "https://kubevela.io/docs/platform-engineers/operations/o11y/logging", "title": "Logging with KubeVela", "description": "This documentation page introduces how to use the loki addon to collect and analyze application logs in KubeVela.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-02-28 16:25:53", "type": "best_practices", "page_metadata": {"generator": "Docusaurus v2.4.3", "ogDescription": "The application logs are very important for users to find and locate problems especially in production environment.", "docsearch:docusaurus_tag": "docs-default-v1.10", "description": "The application logs are very important for users to find and locate problems especially in production environment.", "ogUrl": "https://kubevela.io/docs/platform-engineers/operations/o11y/logging/", "docusaurus_locale": "en", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docsearch:language": "en", "docusaurus_version": "v1.10", "og:url": "https://kubevela.io/docs/platform-engineers/operations/o11y/logging/", "og:title": "Log Collection | KubeVela", "msapplication-config": "/img/favicons/browserconfig.xml", "viewport": "width=device-width, initial-scale=1.0", "title": "Log Collection | KubeVela", "theme-color": "#ffffff", "docusaurus_tag": "docs-default-v1.10", "language": "en", "og:description": "The application logs are very important for users to find and locate problems especially in production environment.", "docsearch:version": "v1.10", "ogTitle": "Log Collection | KubeVela", "twitter:card": "summary_large_image", "scrapeId": "904590aa-75a9-43e3-94c3-d8e89fcec0b2", "sourceURL": "https://kubevela.io/docs/platform-engineers/operations/o11y/logging", "url": "https://kubevela.io/docs/platform-engineers/operations/o11y/logging/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"Custom Component in KubeVela\"?\n\nAssistant: This page introduces how to use CUE to customize components via ComponentDefinition in KubeVela.\n\nHere's a detailed explanation:\n\n\n## Declare `ComponentDefinition`\nFirst, generate `ComponentDefinition` scaffolds via `vela def init` with existed YAML file.\n\nThe YAML file:\n\nstateless.yaml\n\n```codeBlockLines_e6Vv\napiVersion: \"apps/v1\"\nkind: \"Deployment\"\nspec:\n  selector:\n    matchLabels:\n      \"app.oam.dev/component\": \"name\"\n  template:\n    metadata:\n      labels:\n        \"app.oam.dev/component\": \"name\"\n    spec:\n      containers:\n      - name: \"name\"\n        image: \"image\"\n```\n\nGenerate `ComponentDefinition` based on the YAML file:\n\n```codeBlockLines_e6Vv\nvela def init stateless -t component --template-yaml ./stateless.yaml -o stateless.cue\n```\n\nIt generates a file:\n\nstateless.cue\n\n```codeBlockLines_e6Vv\nstateless: {\n    annotations: {}\n    attributes: workload: definition: {\n        apiVersion: \"<change me> apps/v1\"\n        kind:       \"<change me> Deployment\"\n    }\n    description: \"\"\n    labels: {}\n    type: \"component\"\n}\n\ntemplate: {\n    output: {\n        spec: {\n            selector: matchLabels: \"app.oam.dev/component\": \"name\"\n            template: {\n                metadata: labels: \"app.oam.dev/component\": \"name\"\n                spec: containers: [{\\\n                    name:  \"name\"\\\n                    image: \"image\"\\\n                }]\n            }\n        }\n        apiVersion: \"apps/v1\"\n        kind:       \"Deployment\"\n    }\n    outputs: {}\n    parameter: {}\n}\n```\n\nIn detail:\n\n- The `stateless` is the name of component definition, it can be defined by yourself when initialize the component.\n- `stateless.attributes.workload` indicates the workload type of this component, it can help integrate with traits that apply to this kind of workload.\n- `template` is a CUE template, specifically:\n  - The `output` and `outputs` fields define the resources that the component will be composed.\n  - The `parameter` field defines the parameters of the component, i.e. the configurable properties exposed in the `Application` (and schema will be automatically generated based on them for end users to learn this component).\n", "metadata": {"source_url": "https://kubevela.io/docs/platform-engineers/components/custom-component", "title": "Custom Component in KubeVela", "description": "This page introduces how to use CUE to customize components via ComponentDefinition in KubeVela.", "has_code_examples": true, "has_best_practices": true, "section_count": 1, "timestamp": "2025-02-28 16:26:08", "type": "overview", "page_metadata": {"theme-color": "#ffffff", "msapplication-config": "/img/favicons/browserconfig.xml", "docusaurus_version": "v1.10", "language": "en", "docsearch:language": "en", "docusaurus_tag": "docs-default-v1.10", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:description": "In this section, we will introduce how to use CUE to customize components via ComponentDefinition. Make sure you've learned the basic knowledge about Definition Concept and how to manage definition.", "docsearch:version": "v1.10", "ogDescription": "In this section, we will introduce how to use CUE to customize components via ComponentDefinition. Make sure you've learned the basic knowledge about Definition Concept and how to manage definition.", "ogTitle": "Component Definition | KubeVela", "title": "Component Definition | KubeVela", "docusaurus_locale": "en", "generator": "Docusaurus v2.4.3", "og:title": "Component Definition | KubeVela", "ogUrl": "https://kubevela.io/docs/platform-engineers/components/custom-component/", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "description": "In this section, we will introduce how to use CUE to customize components via ComponentDefinition. Make sure you've learned the basic knowledge about Definition Concept and how to manage definition.", "viewport": "width=device-width, initial-scale=1.0", "og:url": "https://kubevela.io/docs/platform-engineers/components/custom-component/", "twitter:card": "summary_large_image", "scrapeId": "d988ab4a-8f4c-4177-9229-8c11e610711d", "sourceURL": "https://kubevela.io/docs/platform-engineers/components/custom-component", "url": "https://kubevela.io/docs/platform-engineers/components/custom-component/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"Custom Component in KubeVela\"?\n\nAssistant: Here are some code examples:\n\n### Generate ComponentDefinition\n```yaml\nvela def init stateless -t component --template-yaml ./stateless.yaml -o stateless.cue\n```\n\n### Validate ComponentDefinition\n```yaml\nvela def vet stateless.cue\n```\n\n### Apply ComponentDefinition\n```yaml\nvela def apply stateless.cue\n```\n\n### Show ComponentDefinition Schema\n```yaml\nvela show stateless\n```\n\n### Declare Task Component\n```yaml\nvela def init task -t component -o task.cue\n```\n\n### Apply Task ComponentDefinition\n```yaml\nvela def apply task.cue\n```\n\n### Declare Application using Components\n```yaml\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: website\nspec:\n  components:\n    - name: hello\n      type: stateless\n      properties:\n        image: oamdev/hello-world\n        name: mysvc\n    - name: countdown\n      type: task\n      properties:\n        image: centos:7\n        cmd:\n          - \"bin/bash\"\n          - \"-c\"\n          - \"for i in 9 8 7 6 5 4 3 2 1 ; do echo $i ; done\"\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/platform-engineers/components/custom-component", "title": "Custom Component in KubeVela", "description": "This page introduces how to use CUE to customize components via ComponentDefinition in KubeVela.", "has_code_examples": true, "has_best_practices": true, "section_count": 1, "timestamp": "2025-02-28 16:26:08", "type": "code_examples", "page_metadata": {"theme-color": "#ffffff", "msapplication-config": "/img/favicons/browserconfig.xml", "docusaurus_version": "v1.10", "language": "en", "docsearch:language": "en", "docusaurus_tag": "docs-default-v1.10", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:description": "In this section, we will introduce how to use CUE to customize components via ComponentDefinition. Make sure you've learned the basic knowledge about Definition Concept and how to manage definition.", "docsearch:version": "v1.10", "ogDescription": "In this section, we will introduce how to use CUE to customize components via ComponentDefinition. Make sure you've learned the basic knowledge about Definition Concept and how to manage definition.", "ogTitle": "Component Definition | KubeVela", "title": "Component Definition | KubeVela", "docusaurus_locale": "en", "generator": "Docusaurus v2.4.3", "og:title": "Component Definition | KubeVela", "ogUrl": "https://kubevela.io/docs/platform-engineers/components/custom-component/", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "description": "In this section, we will introduce how to use CUE to customize components via ComponentDefinition. Make sure you've learned the basic knowledge about Definition Concept and how to manage definition.", "viewport": "width=device-width, initial-scale=1.0", "og:url": "https://kubevela.io/docs/platform-engineers/components/custom-component/", "twitter:card": "summary_large_image", "scrapeId": "d988ab4a-8f4c-4177-9229-8c11e610711d", "sourceURL": "https://kubevela.io/docs/platform-engineers/components/custom-component", "url": "https://kubevela.io/docs/platform-engineers/components/custom-component/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"Custom Component in KubeVela\"?\n\nAssistant: Here are the recommended best practices:\n\n• Use `vela def vet` to validate the format of your ComponentDefinition before applying it.\n• When defining health checks, ensure the CUE expression evaluates to a boolean type for accurate health status reporting.\n• Utilize context variables to dynamically reference application and component information during resource instantiation.\n", "metadata": {"source_url": "https://kubevela.io/docs/platform-engineers/components/custom-component", "title": "Custom Component in KubeVela", "description": "This page introduces how to use CUE to customize components via ComponentDefinition in KubeVela.", "has_code_examples": true, "has_best_practices": true, "section_count": 1, "timestamp": "2025-02-28 16:26:08", "type": "best_practices", "page_metadata": {"theme-color": "#ffffff", "msapplication-config": "/img/favicons/browserconfig.xml", "docusaurus_version": "v1.10", "language": "en", "docsearch:language": "en", "docusaurus_tag": "docs-default-v1.10", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:description": "In this section, we will introduce how to use CUE to customize components via ComponentDefinition. Make sure you've learned the basic knowledge about Definition Concept and how to manage definition.", "docsearch:version": "v1.10", "ogDescription": "In this section, we will introduce how to use CUE to customize components via ComponentDefinition. Make sure you've learned the basic knowledge about Definition Concept and how to manage definition.", "ogTitle": "Component Definition | KubeVela", "title": "Component Definition | KubeVela", "docusaurus_locale": "en", "generator": "Docusaurus v2.4.3", "og:title": "Component Definition | KubeVela", "ogUrl": "https://kubevela.io/docs/platform-engineers/components/custom-component/", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "description": "In this section, we will introduce how to use CUE to customize components via ComponentDefinition. Make sure you've learned the basic knowledge about Definition Concept and how to manage definition.", "viewport": "width=device-width, initial-scale=1.0", "og:url": "https://kubevela.io/docs/platform-engineers/components/custom-component/", "twitter:card": "summary_large_image", "scrapeId": "d988ab4a-8f4c-4177-9229-8c11e610711d", "sourceURL": "https://kubevela.io/docs/platform-engineers/components/custom-component", "url": "https://kubevela.io/docs/platform-engineers/components/custom-component/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"Flink-kubernetes-operator\"?\n\nAssistant: A Kubernetes operator for Apache Flink, it allows users to manage Flink applications and their lifecycle through native k8s tooling like kubectl.\n\nHere's a detailed explanation:\n\n\n## Install\n```codeBlockLines_e6Vv\nvela addon enable flink-kubernetes-operator\n```\n\n## Uninstall\n```codeBlockLines_e6Vv\nvela addon disable flink-kubernetes-operator\n```\n\n## Check the flink-kubernetes-operator running status\nSince this addon dependents `fluxcd` and `cert-manager` addon, so will enable them automatically. Check the status of them:\n\n```codeBlockLines_e6Vv\n$ vela ls -n vela-system\nAPP                             COMPONENT               TYPE            TRAITS  PHASE   HEALTHY STATUS                                                          CREATED-TIME\naddon-cert-manager              cert-manager            helm                    running healthy Fetch repository successfully, Create helm release              2022-06-16 11:50:19 +0800 CST\n                                                                                                successfully\naddon-flink-kubernetes-operator flink-namespace         raw                     running healthy                                                                 2022-06-16 11:50:20 +0800 CST\n└─                              flink-operator          helm                    running healthy Fetch repository successfully, Create helm release              2022-06-16 11:50:20 +0800 CST\n                                                                                                successfully\naddon-fluxcd                    flux-system-namespace   raw                     running healthy                                                                 2022-06-16 11:47:07 +0800 CST\n└─                              fluxcd-resources        k8s-objects             running healthy                                                                 2022-06-16 11:47:07 +0800 CST\n```\n\nShow the component type `flink-cluster`, so we know how to use it in one application. As a Flink user, you can choose the parameter to set for your Flink cluster\n\n```codeBlockLines_e6Vv\nvela show flink-cluster\n# Specification\n# Specification\n+--------------+------------------------------------------------------------------------------------------------------+--------+----------+---------+\n|     NAME     |                                             DESCRIPTION                                              |  TYPE  | REQUIRED | DEFAULT |\n+--------------+------------------------------------------------------------------------------------------------------+--------+----------+---------+\n| name         | Specify the flink cluster name.                                                                      | string | true     |         |\n| namespace    | Specify the namespace for flink cluster to install.                                                  | string | true     |         |\n| nots         | Specify the taskmanager.numberOfTaskSlots, e.g \"2\".                                                  | string | true     |         |\n| flinkVersion | Specify the flink cluster version, e.g \"v1_14\".                                                      | string | true     |         |\n| image        | Specify the image for flink cluster to run, e.g \"flink:latest\".                                      | string | true     |         |\n| jarURI       | Specify the uri for the jar of the flink cluster job, e.g                                            | string | true     |         |\n|              | \"local:///opt/flink/examples/streaming/StateMachineExample.jar\".                                     |        |          |         |\n| parallelism  | Specify the parallelism of the flink cluster job, e.g 2.                                             | int    | true     |         |\n| upgradeMode  | Specify the upgradeMode of the flink cluster job, e.g \"stateless\".                                   | string | true     |         |\n| replicas     | Specify the replicas of the flink cluster jobManager, e.g 1.                                         | int    | true     |         |\n| jmcpu        | Specify the cpu of the flink cluster jobManager, e.g 1.                                              | int    | true     |         |\n| jmmem        | Specify the memory of the flink cluster jobManager, e.g \"1024m\".                                     | string | true     |         |\n| tmcpu        | Specify the cpu of the flink cluster taskManager, e.g 1.                                             | int    | true     |         |\n| tmmem        | Specify the memory of the flink cluster taskManager, e.g \"1024m\".                                    | string | true     |         |\n+--------------+------------------------------------------------------------------------------------------------------+--------+----------+---------+\n```\n\n## Example for how to run a component typed flink-cluster in application\nFirst please make sure your cluster already exists namespace `flink-cluster`.\n\nThen deploy the application:\n\n```codeBlockLines_e6Vv\ncat <<EOF | vela up -f -\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: flink-app-v1\n  namespace: vela-system\nspec:\n  components:\n  - name: my-flink-component\n    type: flink-cluster\n    properties:\n      name: my-flink-cluster\n      namespace: flink-cluster\n      nots: '2'\n      flinkVersion: v1_14\n      image: flink:latest\n      jarURI: local:///opt/flink/examples/streaming/StateMachineExample.jar\n      parallelism: 2\n      upgradeMode:  stateless\n      replicas: 1\n      jmcpu: 1\n      jmmem: 1024m\n      tmcpu: 1\n      tmmem: 1024m\n\n```\n\nCheck the flink cluster\n\n```codeBlockLines_e6Vv\nvela ls  -n vela-system | grep app\nflink-app-v1                    my-flink-component      flink-cluster                   running healthy                                                               2022-07-30 18:53:34 +0800 CST\n```\n\nAccesss the flink cluster by website using http://localhost:8888\n\n```codeBlockLines_e6Vv\nkubectl get svc -n flink-cluster | grep rest\nmy-flink-cluster-rest   ClusterIP   192.168.149.175   <none>        8081/TCP            17m\n\nkubectl port-forward service/my-flink-cluster-rest 8888:8081 -n flink-cluster\nForwarding from 127.0.0.1:8888 -> 8081\n```\n", "metadata": {"source_url": "https://kubevela.io/docs/reference/addons/flink-kubernetes-operator", "title": "Flink-kubernetes-operator", "description": "A Kubernetes operator for Apache Flink, it allows users to manage Flink applications and their lifecycle through native k8s tooling like kubectl.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 16:26:43", "type": "overview", "page_metadata": {"favicon": "https://kubevela.io/img/favicons/favicon.ico", "language": "en", "ogUrl": "https://kubevela.io/docs/reference/addons/flink-kubernetes-operator/", "viewport": "width=device-width, initial-scale=1.0", "docusaurus_version": "v1.10", "twitter:card": "summary_large_image", "title": "Flink-kubernetes-operator | KubeVela", "ogTitle": "Flink-kubernetes-operator | KubeVela", "docsearch:language": "en", "og:title": "Flink-kubernetes-operator | KubeVela", "docusaurus_locale": "en", "generator": "Docusaurus v2.4.3", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:description": "A Kubernetes operator for Apache Flink(https://github.com/apache/flink-kubernetes-operator), it allows users to manage Flink applications and their lifecycle through native k8s tooling like kubectl.", "docsearch:version": "v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "og:url": "https://kubevela.io/docs/reference/addons/flink-kubernetes-operator/", "description": "A Kubernetes operator for Apache Flink(https://github.com/apache/flink-kubernetes-operator), it allows users to manage Flink applications and their lifecycle through native k8s tooling like kubectl.", "theme-color": "#ffffff", "ogDescription": "A Kubernetes operator for Apache Flink(https://github.com/apache/flink-kubernetes-operator), it allows users to manage Flink applications and their lifecycle through native k8s tooling like kubectl.", "docusaurus_tag": "docs-default-v1.10", "scrapeId": "bfc6c792-f4d3-43db-aa68-88d2c96f7d4c", "sourceURL": "https://kubevela.io/docs/reference/addons/flink-kubernetes-operator", "url": "https://kubevela.io/docs/reference/addons/flink-kubernetes-operator/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"Flink-kubernetes-operator\"?\n\nAssistant: Here are some code examples:\n\n### Install\n```yaml\n```codeBlockLines_e6Vv\nvela addon enable flink-kubernetes-operator\n```\n```\n\n### Uninstall\n```yaml\n```codeBlockLines_e6Vv\nvela addon disable flink-kubernetes-operator\n```\n```\n\n### Check the flink-kubernetes-operator running status\n```yaml\n```codeBlockLines_e6Vv\n$ vela ls -n vela-system\nAPP                             COMPONENT               TYPE            TRAITS  PHASE   HEALTHY STATUS                                                          CREATED-TIME\naddon-cert-manager              cert-manager            helm                    running healthy Fetch repository successfully, Create helm release              2022-06-16 11:50:19 +0800 CST\n                                                                                                successfully\naddon-flink-kubernetes-operator flink-namespace         raw                     running healthy                                                                 2022-06-16 11:50:20 +0800 CST\n└─                              flink-operator          helm                    running healthy Fetch repository successfully, Create helm release              2022-06-16 11:50:20 +0800 CST\n                                                                                                successfully\naddon-fluxcd                    flux-system-namespace   raw                     running healthy                                                                 2022-06-16 11:47:07 +0800 CST\n└─                              fluxcd-resources        k8s-objects             running healthy                                                                 2022-06-16 11:47:07 +0800 CST\n```\n```\n\n### Show flink-cluster specification\n```yaml\n```codeBlockLines_e6Vv\nvela show flink-cluster\n# Specification\n# Specification\n+--------------+------------------------------------------------------------------------------------------------------+--------+----------+---------+\n|     NAME     |                                             DESCRIPTION                                              |  TYPE  | REQUIRED | DEFAULT |\n+--------------+------------------------------------------------------------------------------------------------------+--------+----------+---------+\n| name         | Specify the flink cluster name.                                                                      | string | true     |         |\n| namespace    | Specify the namespace for flink cluster to install.                                                  | string | true     |         |\n| nots         | Specify the taskmanager.numberOfTaskSlots, e.g \"2\".                                                  | string | true     |         |\n| flinkVersion | Specify the flink cluster version, e.g \"v1_14\".                                                      | string | true     |         |\n| image        | Specify the image for flink cluster to run, e.g \"flink:latest\".                                      | string | true     |         |\n| jarURI       | Specify the uri for the jar of the flink cluster job, e.g                                            | string | true     |         |\n|              | \"local:///opt/flink/examples/streaming/StateMachineExample.jar\".                                     |        |          |         |\n| parallelism  | Specify the parallelism of the flink cluster job, e.g 2.                                             | int    | true     |         |\n| upgradeMode  | Specify the upgradeMode of the flink cluster job, e.g \"stateless\".                                   | string | true     |         |\n| replicas     | Specify the replicas of the flink cluster jobManager, e.g 1.                                         | int    | true     |         |\n| jmcpu        | Specify the cpu of the flink cluster jobManager, e.g 1.                                              | int    | true     |         |\n| jmmem        | Specify the memory of the flink cluster jobManager, e.g \"1024m\".                                     | string | true     |         |\n| tmcpu        | Specify the cpu of the flink cluster taskManager, e.g 1.                                             | int    | true     |         |\n| tmmem        | Specify the memory of the flink cluster taskManager, e.g \"1024m\".                                    | string | true     |         |\n+--------------+------------------------------------------------------------------------------------------------------+--------+----------+---------+\n```\n```\n\n### Deploy flink application\n```yaml\n```codeBlockLines_e6Vv\ncat <<EOF | vela up -f -\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: flink-app-v1\n  namespace: vela-system\nspec:\n  components:\n  - name: my-flink-component\n    type: flink-cluster\n    properties:\n      name: my-flink-cluster\n      namespace: flink-cluster\n      nots: '2'\n      flinkVersion: v1_14\n      image: flink:latest\n      jarURI: local:///opt/flink/examples/streaming/StateMachineExample.jar\n      parallelism: 2\n      upgradeMode:  stateless\n      replicas: 1\n      jmcpu: 1\n      jmmem: 1024m\n      tmcpu: 1\n      tmmem: 1024m\n\n```\n```\n\n### Check flink application status\n```yaml\n```codeBlockLines_e6Vv\nvela ls  -n vela-system | grep app\nflink-app-v1                    my-flink-component      flink-cluster                   running healthy                                                               2022-07-30 18:53:34 +0800 CST\n```\n```\n\n### Access flink cluster\n```yaml\n```codeBlockLines_e6Vv\nkubectl get svc -n flink-cluster | grep rest\nmy-flink-cluster-rest   ClusterIP   192.168.149.175   <none>        8081/TCP            17m\n\nkubectl port-forward service/my-flink-cluster-rest 8888:8081 -n flink-cluster\nForwarding from 127.0.0.1:8888 -> 8081\n```\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/reference/addons/flink-kubernetes-operator", "title": "Flink-kubernetes-operator", "description": "A Kubernetes operator for Apache Flink, it allows users to manage Flink applications and their lifecycle through native k8s tooling like kubectl.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 16:26:43", "type": "code_examples", "page_metadata": {"favicon": "https://kubevela.io/img/favicons/favicon.ico", "language": "en", "ogUrl": "https://kubevela.io/docs/reference/addons/flink-kubernetes-operator/", "viewport": "width=device-width, initial-scale=1.0", "docusaurus_version": "v1.10", "twitter:card": "summary_large_image", "title": "Flink-kubernetes-operator | KubeVela", "ogTitle": "Flink-kubernetes-operator | KubeVela", "docsearch:language": "en", "og:title": "Flink-kubernetes-operator | KubeVela", "docusaurus_locale": "en", "generator": "Docusaurus v2.4.3", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:description": "A Kubernetes operator for Apache Flink(https://github.com/apache/flink-kubernetes-operator), it allows users to manage Flink applications and their lifecycle through native k8s tooling like kubectl.", "docsearch:version": "v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "og:url": "https://kubevela.io/docs/reference/addons/flink-kubernetes-operator/", "description": "A Kubernetes operator for Apache Flink(https://github.com/apache/flink-kubernetes-operator), it allows users to manage Flink applications and their lifecycle through native k8s tooling like kubectl.", "theme-color": "#ffffff", "ogDescription": "A Kubernetes operator for Apache Flink(https://github.com/apache/flink-kubernetes-operator), it allows users to manage Flink applications and their lifecycle through native k8s tooling like kubectl.", "docusaurus_tag": "docs-default-v1.10", "scrapeId": "bfc6c792-f4d3-43db-aa68-88d2c96f7d4c", "sourceURL": "https://kubevela.io/docs/reference/addons/flink-kubernetes-operator", "url": "https://kubevela.io/docs/reference/addons/flink-kubernetes-operator/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"Flink-kubernetes-operator\"?\n\nAssistant: Here are the recommended best practices:\n\n• Make sure your cluster already exists namespace `flink-cluster` before deploying the application.\n• Access the flink cluster by website using http://localhost:8888 after deployment.\n", "metadata": {"source_url": "https://kubevela.io/docs/reference/addons/flink-kubernetes-operator", "title": "Flink-kubernetes-operator", "description": "A Kubernetes operator for Apache Flink, it allows users to manage Flink applications and their lifecycle through native k8s tooling like kubectl.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 16:26:43", "type": "best_practices", "page_metadata": {"favicon": "https://kubevela.io/img/favicons/favicon.ico", "language": "en", "ogUrl": "https://kubevela.io/docs/reference/addons/flink-kubernetes-operator/", "viewport": "width=device-width, initial-scale=1.0", "docusaurus_version": "v1.10", "twitter:card": "summary_large_image", "title": "Flink-kubernetes-operator | KubeVela", "ogTitle": "Flink-kubernetes-operator | KubeVela", "docsearch:language": "en", "og:title": "Flink-kubernetes-operator | KubeVela", "docusaurus_locale": "en", "generator": "Docusaurus v2.4.3", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:description": "A Kubernetes operator for Apache Flink(https://github.com/apache/flink-kubernetes-operator), it allows users to manage Flink applications and their lifecycle through native k8s tooling like kubectl.", "docsearch:version": "v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "og:url": "https://kubevela.io/docs/reference/addons/flink-kubernetes-operator/", "description": "A Kubernetes operator for Apache Flink(https://github.com/apache/flink-kubernetes-operator), it allows users to manage Flink applications and their lifecycle through native k8s tooling like kubectl.", "theme-color": "#ffffff", "ogDescription": "A Kubernetes operator for Apache Flink(https://github.com/apache/flink-kubernetes-operator), it allows users to manage Flink applications and their lifecycle through native k8s tooling like kubectl.", "docusaurus_tag": "docs-default-v1.10", "scrapeId": "bfc6c792-f4d3-43db-aa68-88d2c96f7d4c", "sourceURL": "https://kubevela.io/docs/reference/addons/flink-kubernetes-operator", "url": "https://kubevela.io/docs/reference/addons/flink-kubernetes-operator/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"Refer to Existing Kubernetes Objects in Component\"?\n\nAssistant: This page covers how to reference and distribute existing Kubernetes objects with KubeVela, including using existing objects in components, overriding configurations, and distributing reference objects across multiple clusters.\n\nHere's a detailed explanation:\n\n\n## Refer to Existing Kubernetes Objects in Component\nYou can reference and distribute existing Kubernetes objects with KubeVela in the following scenarios:\n\n- Copying secrets from the hub cluster into managed clusters.\n- Promote deployments from canary clusters into production clusters.\n- Using Kubernetes apiserver as the control plane and storing all Kubernetes objects data in external databases. Then dispatch those data into real Kubernetes managed clusters.\n\nBesides, you can also refer to Kubernetes objects from remote URL links.\n\n## Refer to objects in cluster\nTo use existing Kubernetes objects in the component, you need to use the `ref-objects` typed component and declare which resources you want to refer to. For example, in the following example, the secret `image-credential-to-copy` in namespace `examples` will be taken as the source object for the component. Then you can use the topology policy to dispatch it into hangzhou clusters.\n\n## Refer to objects from URL\nIf your source Kubernetes objects are from remote URLs, you can also refer to them in the component properties as follows. Your remote URL files could include multiple-resources as well.\n\n## Details for the _ref-objects_ typed component\nThe most simple way to specify resources is to directly use `resource: secret` or `resource: deployment` to describe the kind of resources. If no `name` or `labelSelector` is set, the application will try to find the resource with the same name as the component name in the application's namespace. You can also explicitly specify `name` and `namespace` for the target resource as well.\n\nIn addition to `name` and `namespace`, you can also specify the `cluster` field to let the application component refer to resources in managed clusters. You can also use the `labelSelector` to select resources in replace of finding resources by names.\n\n## Override Configuration for Reference Objects\nThe [override policy](https://kubevela.io/docs/case-studies/multi-cluster/#override-default-configurations-in-clusters) can be used to override properties defined in component and traits while the reference objects don't have those properties.\n\nIf you want to override configuration for the _ref-objects_ typed component, you can use traits. The implicit main workload is the first referenced object and trait patch will be applied on it.\n\n## Distribute Reference Objects with different configuration\nThe general idea is to using `override` policy to override traits. Then you can distribute reference objects with different traits for different clusters.\n", "metadata": {"source_url": "https://kubevela.io/docs/end-user/components/ref-objects", "title": "Refer to Existing Kubernetes Objects in Component", "description": "This page covers how to reference and distribute existing Kubernetes objects with KubeVela, including using existing objects in components, overriding configurations, and distributing reference objects across multiple clusters.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-02-28 16:27:17", "type": "overview", "page_metadata": {"docusaurus_locale": "en", "ogTitle": "Distribute Reference Objects | KubeVela", "theme-color": "#ffffff", "description": "This section requires you to know the basics about how to deploy multi-cluster application with policy and workflow.", "og:url": "https://kubevela.io/docs/end-user/components/ref-objects/", "msapplication-config": "/img/favicons/browserconfig.xml", "docsearch:docusaurus_tag": "docs-default-v1.10", "docusaurus_version": "v1.10", "og:description": "This section requires you to know the basics about how to deploy multi-cluster application with policy and workflow.", "generator": "Docusaurus v2.4.3", "docusaurus_tag": "docs-default-v1.10", "viewport": "width=device-width, initial-scale=1.0", "title": "Distribute Reference Objects | KubeVela", "docsearch:version": "v1.10", "og:title": "Distribute Reference Objects | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "twitter:card": "summary_large_image", "language": "en", "ogDescription": "This section requires you to know the basics about how to deploy multi-cluster application with policy and workflow.", "ogUrl": "https://kubevela.io/docs/end-user/components/ref-objects/", "docsearch:language": "en", "scrapeId": "39477596-fa5d-4dab-98be-438bef0fe85c", "sourceURL": "https://kubevela.io/docs/end-user/components/ref-objects", "url": "https://kubevela.io/docs/end-user/components/ref-objects/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"Refer to Existing Kubernetes Objects in Component\"?\n\nAssistant: Here are some code examples:\n\n### Refer to objects in cluster example\n```yaml\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: ref-objects-example\n  namespace: examples\nspec:\n  components:\n    - name: image-pull-secrets\n      type: ref-objects\n      properties:\n        objects:\n          - resource: secret\n            name: image-credential-to-copy\n  policies:\n    - name: topology-hangzhou-clusters\n      type: topology\n      properties:\n        clusterLabelSelector:\n          region: hangzhou\n\n```\n\n### Refer to objects from URL example\n```yaml\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: example-app\n  namespace: default\nspec:\n  components:\n  - name: busybox\n    type: ref-objects\n    properties:\n      urls: [\"https://gist.githubusercontent.com/Somefive/b189219a9222eaa70b8908cf4379402b/raw/e603987b3e0989e01e50f69ebb1e8bb436461326/example-busybox-deployment.yaml\"]\n\n```\n\n### Override Configuration for Reference Objects example\n```yaml\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: ref-objects-multiple-resources\n  namespace: examples\nspec:\n  components:\n    - name: nginx-ref-multiple-resources\n      type: ref-objects\n      properties:\n        objects:\n          - resource: deployment\n          - resource: service\n      traits:\n        - type: scaler\n          properties:\n            replicas: 3\n  policies:\n    - name: topology-hangzhou-clusters\n      type: topology\n      properties:\n        clusterLabelSelector:\n          region: hangzhou\n\n```\n\n### Distribute Reference Objects example\n```yaml\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: demo\n  namespace: demo\n  annotations:\n    app.oam.dev/publishVersion: version1\nspec:\n  components:\n    - name: demo\n      type: ref-objects\n      properties:\n        objects:\n          - apiVersion: apps/v1\n            kind: Deployment\n            name: demo\n  workflow:\n    ref: deploy-demo\n\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/end-user/components/ref-objects", "title": "Refer to Existing Kubernetes Objects in Component", "description": "This page covers how to reference and distribute existing Kubernetes objects with KubeVela, including using existing objects in components, overriding configurations, and distributing reference objects across multiple clusters.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-02-28 16:27:17", "type": "code_examples", "page_metadata": {"docusaurus_locale": "en", "ogTitle": "Distribute Reference Objects | KubeVela", "theme-color": "#ffffff", "description": "This section requires you to know the basics about how to deploy multi-cluster application with policy and workflow.", "og:url": "https://kubevela.io/docs/end-user/components/ref-objects/", "msapplication-config": "/img/favicons/browserconfig.xml", "docsearch:docusaurus_tag": "docs-default-v1.10", "docusaurus_version": "v1.10", "og:description": "This section requires you to know the basics about how to deploy multi-cluster application with policy and workflow.", "generator": "Docusaurus v2.4.3", "docusaurus_tag": "docs-default-v1.10", "viewport": "width=device-width, initial-scale=1.0", "title": "Distribute Reference Objects | KubeVela", "docsearch:version": "v1.10", "og:title": "Distribute Reference Objects | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "twitter:card": "summary_large_image", "language": "en", "ogDescription": "This section requires you to know the basics about how to deploy multi-cluster application with policy and workflow.", "ogUrl": "https://kubevela.io/docs/end-user/components/ref-objects/", "docsearch:language": "en", "scrapeId": "39477596-fa5d-4dab-98be-438bef0fe85c", "sourceURL": "https://kubevela.io/docs/end-user/components/ref-objects", "url": "https://kubevela.io/docs/end-user/components/ref-objects/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"Refer to Existing Kubernetes Objects in Component\"?\n\nAssistant: Here are the recommended best practices:\n\n• In some cases, you might want to restrict the scope for the application to access resources. You can set the `--ref-objects-available-scope` to `namespace` or `cluster` in KubeVela controller's bootstrap parameter, to restrict the application to be only able to refer to the resources inside the same namespace or the same cluster.\n", "metadata": {"source_url": "https://kubevela.io/docs/end-user/components/ref-objects", "title": "Refer to Existing Kubernetes Objects in Component", "description": "This page covers how to reference and distribute existing Kubernetes objects with KubeVela, including using existing objects in components, overriding configurations, and distributing reference objects across multiple clusters.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-02-28 16:27:17", "type": "best_practices", "page_metadata": {"docusaurus_locale": "en", "ogTitle": "Distribute Reference Objects | KubeVela", "theme-color": "#ffffff", "description": "This section requires you to know the basics about how to deploy multi-cluster application with policy and workflow.", "og:url": "https://kubevela.io/docs/end-user/components/ref-objects/", "msapplication-config": "/img/favicons/browserconfig.xml", "docsearch:docusaurus_tag": "docs-default-v1.10", "docusaurus_version": "v1.10", "og:description": "This section requires you to know the basics about how to deploy multi-cluster application with policy and workflow.", "generator": "Docusaurus v2.4.3", "docusaurus_tag": "docs-default-v1.10", "viewport": "width=device-width, initial-scale=1.0", "title": "Distribute Reference Objects | KubeVela", "docsearch:version": "v1.10", "og:title": "Distribute Reference Objects | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "twitter:card": "summary_large_image", "language": "en", "ogDescription": "This section requires you to know the basics about how to deploy multi-cluster application with policy and workflow.", "ogUrl": "https://kubevela.io/docs/end-user/components/ref-objects/", "docsearch:language": "en", "scrapeId": "39477596-fa5d-4dab-98be-438bef0fe85c", "sourceURL": "https://kubevela.io/docs/end-user/components/ref-objects", "url": "https://kubevela.io/docs/end-user/components/ref-objects/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KEDA Integration with KubeVela\"?\n\nAssistant: This documentation provides a step-by-step guide on how to add KEDA as a new autoscaling trait to your KubeVela based platform.\n\nHere's a detailed explanation:\n\n\n## Introduction\nIn the following tutorial, you will learn to add KEDA as a new autoscaling trait to your KubeVela based platform. KEDA is a Kubernetes-based Event Driven Autoscaler. With KEDA, you can drive the scaling of any container based on resource metrics or the number of events needing to be processed.\n\n## Step 1: Install KEDA controller\nInstall the KEDA controller into your K8s system.\n\n## Step 2: Create Trait Definition\nTo register KEDA as a new capability (i.e. trait) in KubeVela, the only thing needed is to create an `TraitDefinition` object for it. A full example can be found in this keda.yaml. Several highlights are listed below.\n\n## 1. Describe The Trait\nWe use label `definition.oam.dev/description` to add one line description for this trait. It will be shown in helper commands such as `$ vela traits`.\n\n## 2. Register API Resource\nThis is how you claim and register KEDA `ScaledObject`'s API resource ( `scaledobjects.keda.sh`) as a trait definition.\n\n## 3. Define `appliesToWorkloads`\nA trait can be attached to specified workload types or all (i.e. \"*\" or omitted means your trait can work with any workload type). For the case of KEDA, we will only allow user to attach it to Kubernetes workload type.\n\n## 4. Define Schematic\nIn this step, we will define the schematic of KEDA based autoscaling trait, i.e. we will create abstraction for KEDA `ScaledObject` with simplified primitives, so end users of this platform don't really need to know what is KEDA at all.\n\n## Step 2: Register New Trait to KubeVela\nAs long as the definition file is ready, you just need to apply it to Kubernetes. And the new trait will immediately become available for end users to use in `Application` resource.\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.9/platform-engineers/keda", "title": "KEDA Integration with KubeVela", "description": "This documentation provides a step-by-step guide on how to add KEDA as a new autoscaling trait to your KubeVela based platform.", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-02-28 16:27:29", "type": "overview", "page_metadata": {"og:url": "https://kubevela.io/docs/v1.9/platform-engineers/keda/", "docusaurus_locale": "en", "theme-color": "#ffffff", "title": "KEDA as Autoscaling Trait | KubeVela", "language": "en", "docusaurus_tag": "docs-default-v1.9", "generator": "Docusaurus v2.4.3", "docsearch:version": "v1.9", "ogDescription": "Before continue, make sure you have learned about the concepts of Definition Objects and Defining Traits with CUE section.", "docsearch:docusaurus_tag": "docs-default-v1.9", "viewport": "width=device-width, initial-scale=1.0", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "og:description": "Before continue, make sure you have learned about the concepts of Definition Objects and Defining Traits with CUE section.", "docusaurus_version": "v1.9", "ogUrl": "https://kubevela.io/docs/v1.9/platform-engineers/keda/", "ogTitle": "KEDA as Autoscaling Trait | KubeVela", "twitter:card": "summary_large_image", "msapplication-config": "/img/favicons/browserconfig.xml", "docsearch:language": "en", "og:title": "KEDA as Autoscaling Trait | KubeVela", "description": "Before continue, make sure you have learned about the concepts of Definition Objects and Defining Traits with CUE section.", "scrapeId": "ee3c4d60-4570-411c-ab76-c5a36b0c8f45", "sourceURL": "https://kubevela.io/docs/v1.9/platform-engineers/keda", "url": "https://kubevela.io/docs/v1.9/platform-engineers/keda/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"KEDA Integration with KubeVela\"?\n\nAssistant: Here are some code examples:\n\n### Describe The Trait Example\n```yaml\nname: keda-scaler\nannotations:\n  definition.oam.dev/description: \"keda supports multiple event to elastically scale applications, this scaler only applies to deployment as example\"\n```\n\n### Register API Resource Example\n```yaml\nspec:\n  definitionRef:\n    name: scaledobjects.keda.sh\n```\n\n### Define appliesToWorkloads Example\n```yaml\nspec:\n  ...\n  appliesToWorkloads:\n    - \"deployments.apps\"\n```\n\n### Define Schematic Example\n```yaml\nschematic:\n  cue:\n    template: |-\n      outputs: kedaScaler: {\n        apiVersion: \"keda.sh/v1alpha1\"\n        kind:       \"ScaledObject\"\n        metadata: {\n            name: context.name\n        }\n        spec: {\n            scaleTargetRef: {\n                name: context.name\n            }\n            triggers: [{\\\n                type: parameter.triggerType\\\n                metadata: {\\\n                    type:  \"Utilization\"\\\n                    value: parameter.value\\\n                }\\\n            }]\n        }\n      }\n      parameter: {\n        // +usage=Types of triggering application elastic scaling, Optional: cpu, memory\n        triggerType: string\n        // +usage=Value to trigger scaling actions, represented as a percentage of the requested value of the resource for the pods. like: \"60\"(60%)\n        value: string\n      }\n```\n\n### Register New Trait Command\n```yaml\nkubectl apply -f https://raw.githubusercontent.com/oam-dev/catalog/master/registry/keda-scaler.yaml\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.9/platform-engineers/keda", "title": "KEDA Integration with KubeVela", "description": "This documentation provides a step-by-step guide on how to add KEDA as a new autoscaling trait to your KubeVela based platform.", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-02-28 16:27:29", "type": "code_examples", "page_metadata": {"og:url": "https://kubevela.io/docs/v1.9/platform-engineers/keda/", "docusaurus_locale": "en", "theme-color": "#ffffff", "title": "KEDA as Autoscaling Trait | KubeVela", "language": "en", "docusaurus_tag": "docs-default-v1.9", "generator": "Docusaurus v2.4.3", "docsearch:version": "v1.9", "ogDescription": "Before continue, make sure you have learned about the concepts of Definition Objects and Defining Traits with CUE section.", "docsearch:docusaurus_tag": "docs-default-v1.9", "viewport": "width=device-width, initial-scale=1.0", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "og:description": "Before continue, make sure you have learned about the concepts of Definition Objects and Defining Traits with CUE section.", "docusaurus_version": "v1.9", "ogUrl": "https://kubevela.io/docs/v1.9/platform-engineers/keda/", "ogTitle": "KEDA as Autoscaling Trait | KubeVela", "twitter:card": "summary_large_image", "msapplication-config": "/img/favicons/browserconfig.xml", "docsearch:language": "en", "og:title": "KEDA as Autoscaling Trait | KubeVela", "description": "Before continue, make sure you have learned about the concepts of Definition Objects and Defining Traits with CUE section.", "scrapeId": "ee3c4d60-4570-411c-ab76-c5a36b0c8f45", "sourceURL": "https://kubevela.io/docs/v1.9/platform-engineers/keda", "url": "https://kubevela.io/docs/v1.9/platform-engineers/keda/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KEDA Integration with KubeVela\"?\n\nAssistant: Here are the recommended best practices:\n\n• Ensure you have learned about the concepts of Definition Objects and Defining Traits with CUE before proceeding.\n• Use the label definition.oam.dev/description to provide a description for your trait that will be shown in helper commands.\n• When defining appliesToWorkloads, specify the exact workload types your trait can be attached to for better control.\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.9/platform-engineers/keda", "title": "KEDA Integration with KubeVela", "description": "This documentation provides a step-by-step guide on how to add KEDA as a new autoscaling trait to your KubeVela based platform.", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-02-28 16:27:29", "type": "best_practices", "page_metadata": {"og:url": "https://kubevela.io/docs/v1.9/platform-engineers/keda/", "docusaurus_locale": "en", "theme-color": "#ffffff", "title": "KEDA as Autoscaling Trait | KubeVela", "language": "en", "docusaurus_tag": "docs-default-v1.9", "generator": "Docusaurus v2.4.3", "docsearch:version": "v1.9", "ogDescription": "Before continue, make sure you have learned about the concepts of Definition Objects and Defining Traits with CUE section.", "docsearch:docusaurus_tag": "docs-default-v1.9", "viewport": "width=device-width, initial-scale=1.0", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "og:description": "Before continue, make sure you have learned about the concepts of Definition Objects and Defining Traits with CUE section.", "docusaurus_version": "v1.9", "ogUrl": "https://kubevela.io/docs/v1.9/platform-engineers/keda/", "ogTitle": "KEDA as Autoscaling Trait | KubeVela", "twitter:card": "summary_large_image", "msapplication-config": "/img/favicons/browserconfig.xml", "docsearch:language": "en", "og:title": "KEDA as Autoscaling Trait | KubeVela", "description": "Before continue, make sure you have learned about the concepts of Definition Objects and Defining Traits with CUE section.", "scrapeId": "ee3c4d60-4570-411c-ab76-c5a36b0c8f45", "sourceURL": "https://kubevela.io/docs/v1.9/platform-engineers/keda", "url": "https://kubevela.io/docs/v1.9/platform-engineers/keda/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela Topology Rule Documentation\"?\n\nAssistant: This documentation covers the resource relationships in KubeVela, detailing how to establish topological relationships between resources managed by a KubeVela application.\n\nHere's a detailed explanation:\n\n\n## Resource Relationships\n`Resource Relationships` mainly specify the relationship between two types of resources. Its main function is to help KubeVela establish the topological relationship of the resources managed by a KubeVela application. For example, the system has a built-in relationship rule: The sub-resources under the [Deployment](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/) can only be [ReplicaSet](https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/), and the child resource of ReplicaSet can only be [Pod](https://kubernetes.io/docs/concepts/workloads/pods/).\n\nWhen a KubeVela application with Deployment as the workload is created, then view the topology graph of the application on VelaUX, KubeVela will first list all ReplicaSets in the same namespace with the Deployment, and filter out the results whose OwnerReference don't point to the Deployment, and then find the Pod under the ReplicaSet with the same way. This can help to establish the topology hierarchy of the managed resources under the application.\n\nIn general, these `Resource Relationships` are mainly used in the following scenarios:\n\n- Help to display the topology graph of an application on VelaUX. The following is an example of topology graph:\n\n![image](https://kubevela.io/assets/images/tree-c56eeb9fab803f566a371a29c2d934b1.png)\n\n- When using `vela port-forward`, `vela logs`, `vela exec` and `vela status --endpoint` via cli or check the log or access port of an application on VelaUX, it helps KubeVela to discover the pods or services of an application.\n\n## Add more rules\nThe built-in `Resource Relationships` in the system are limited. If a Kubernetes CustomResourceDefinition is added to your cluster, you can add new relationship rules to the system by creating a Kubernetes `configmap` to your cluster.\n\nThen we will introduce the details with an example.\n\nYou can first enable the [kruise](https://github.com/kubevela/catalog/tree/master/experimental/addons/kruise) addon which is an experimental addon by running follow command:\n\n```codeBlockLines_e6Vv\nvela addon registry add experimental --type=helm --endpoint=https://addons.kubevela.net/experimental/\nvela addon enable kruise\n```\n\nAfter enable succeed you will see the `cloneset` componentDefinition whose workload's type is `clonesets.apps.kruise.io`. The cloneset controller will create pods for application.\n\n```codeBlockLines_e6Vv\n$ vela componets\nNAME                    DEFINITION                      DESCRIPTION\ncloneset                autodetects.core.oam.dev        Describes long-running, scalable, containerized services\n                                                        that have a stable network endpoint to receive external\n                                                        network traffic from customers. If workload type is skipped\n                                                        for any service defined in Appfile, it will be defaulted to\n                                                        `webservice` type.\n```\n\nThen, create a `cloneset` application:\n\n```codeBlockLines_e6Vv\ncat <<EOF | vela up -f -\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: app-cloneset\nspec:\n  components:\n    - name: clone-set\n      type: cloneset\n      properties:\n        cmd:\n          - ./podinfo\n          - stress-cpu=1\n        image: stefanprodan/podinfo:4.0.3\n        port: 8080\n        updateStrategyType: InPlaceOnly\nEOF\n```\n\nWhen we view the application topology graph on VelaUX, we will find out the clonset resources has not any sub-resource, and the instance list is empty. As following picture shows:\n\n![image](https://kubevela.io/assets/images/cloneset-before-839d889c131816a622e5830591220406.jpg)\n\n![image](https://kubevela.io/assets/images/cloneset-before-pod-67827124e4e64d62f2b8d0d425a95dc7.jpg)\n\nIf we use command `vela logs` and `vela exec` will get error like follows:\n\n```codeBlockLines_e6Vv\n$ vela logs app-cloneset\nError: no pod found in your application\n```\n\n```codeBlockLines_e6Vv\n$ vela exec app-cloneset\nError: no pod found in your application\n```\n\nThe reason of these problems is system has not any relationship rule about the new added CustomResource `cloneset`. So KubeVela doesn't know how to lookup the sub-resource of the CustomResource, so you can apply a configmap as follows to solve this problem:\n\n```codeBlockLines_e6Vv\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: clone-set-relation\n  namespace: vela-system\n  labels:\n    \"rules.oam.dev/resource-format\": \"yaml\"\n    \"rules.oam.dev/resources\": \"true\"\ndata:\n  rules: |-\n    - parentResourceType:\n        group: apps.kruise.io\n        kind: CloneSet\n      childrenResourceType:\n        - apiVersion: v1\n          kind: Pod\n```\n\nAs the example shows the configmap must contain a special label \"rules.oam.dev/resources\": \"true\". Only a configmap containing such a label will be recognized by KubeVela as a configuration of `resource type relationship rule`. At the same time, in this example, we also add a \"rules.oam.dev/resource-format\": \"yaml\" annotation to specify the rules in `data.rules` field defined with YAML format, except Using YAML format, you can also define these rules with JSON format as follows:\n\n```codeBlockLines_e6Vv\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: clone-set-relation\n  namespace: vela-system\n  labels:\n    \"rules.oam.dev/resource-format\": \"json\"\n    \"rules.oam.dev/resources\": \"true\"\ndata:\n  rules: |-\n   [\\\n     {\\\n       \"parentResourceType\": {\\\n           \"group\": \"apps.kruise.io\",\\\n           \"kind\": \"CloneSet\"\\\n       },\\\n       \"childrenResourceType\": [\\\n           {\\\n               \"apiVersion\": \"v1\",\\\n               \"kind\": \"Pod\"\\\n           }\\\n       ]\\\n     }\\\n  ]\n```\n\nThe function of these two `configmap` is totally the same.\n\nIn the example above, the parent type is `Cloneset` in group `apps.kruise.io`, his child resource type is `v1/Pod`.\n\nThen we check the topology graph and instance list on VelaUX again will see:\n\n![image](https://kubevela.io/assets/images/cloneset-after-5a121e607be2d74a6c85eb460a0cd053.jpg)\n\n![image](https://kubevela.io/assets/images/cloneset-after-pod-a8dd4828ce579fff62547cc7cae81976.jpg)\n\nUsing `vela logs` and `vela exec` command won't meet error neither:\n\n```codeBlockLines_e6Vv\n$ vela logs app-cloneset\n+ clone-set-vsrj9 › clone-set\nclone-set 2022-08-22T11:53:46.005267600Z {\"level\":\"info\",\"ts\":\"2022-08-22T11:53:46.002Z\",\"caller\":\"podinfo/main.go:123\",\"msg\":\"Starting podinfo\",\"version\":\"4.0.3\",\"revision\":\"a2f9216fe43849c3b4844032771ba632307d8738\",\"port\":\"9898\"}\n```\n\nAs the same, if your CustomResource contains a Kubernetes service as sub-resource, you can also add a relationship rules to support `vela status --endpoints`.\n\n## Built inside with Addon\nA KubeVela [addon](https://kubevela.io/docs/v1.9/platform-engineers/addon/intro/) may install some Kubernetes CRD operators. By default, KubeVela cannot know what types of sub-resources this CRD can have, so you may encounter that the resources under the CRD cannot be displayed in the topology graph or cannot check the container logs of the application. Then you can add a configmap that define the relationship of resource type to solve this problem. You can define the configmap in `outputs` field in application template file of the addon. An example is as follows:\n\n```codeBlockLines_e6Vv\npackage main\n\noutput: {\n    apiVersion: \"core.oam.dev/v1beta1\"\n    kind:       \"Application\"\n    spec: {\n\n    }\n    ...\n}\n\noutputs: resourceTree: {\n    apiVersion: \"v1\"\n    kind:       \"ConfigMap\"\n    metadata: {\n        name:      \"resource-tree\"\n        namespace: \"vela-system\"\n        labels: {\n            \"rules.oam.dev/resources\":       \"true\"\n            \"rules.oam.dev/resource-format\": \"json\"\n        }\n    }\n    data: rules: json.Marshal(_rules)\n}\n\n_rules: {...}\n```\n\nPlease refer to [doc](https://kubevela.io/docs/v1.9/platform-engineers/addon/addon-cue/#auxiliary-resources) for more details.\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.9/reference/topology-rule", "title": "KubeVela Topology Rule Documentation", "description": "This documentation covers the resource relationships in KubeVela, detailing how to establish topological relationships between resources managed by a KubeVela application.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 16:28:02", "type": "overview", "page_metadata": {"favicon": "https://kubevela.io/img/favicons/favicon.ico", "title": "Resource Relationships | KubeVela", "generator": "Docusaurus v2.4.3", "docusaurus_tag": "docs-default-v1.9", "theme-color": "#ffffff", "docsearch:language": "en", "og:description": "Resource Relationships mainly specify the relationship between two types of resources. Its main function is to help KubeVela establish the topological relationship of the resources managed by a KubeVela application. For example, the system has a built-in relationship rule: The sub-resources under the Deployment  can only be ReplicaSet , and the child resource of ReplicaSet can only be Pod.", "twitter:card": "summary_large_image", "docusaurus_version": "v1.9", "ogDescription": "Resource Relationships mainly specify the relationship between two types of resources. Its main function is to help KubeVela establish the topological relationship of the resources managed by a KubeVela application. For example, the system has a built-in relationship rule: The sub-resources under the Deployment  can only be ReplicaSet , and the child resource of ReplicaSet can only be Pod.", "og:url": "https://kubevela.io/docs/v1.9/reference/topology-rule/", "description": "Resource Relationships mainly specify the relationship between two types of resources. Its main function is to help KubeVela establish the topological relationship of the resources managed by a KubeVela application. For example, the system has a built-in relationship rule: The sub-resources under the Deployment  can only be ReplicaSet , and the child resource of ReplicaSet can only be Pod.", "docusaurus_locale": "en", "ogTitle": "Resource Relationships | KubeVela", "docsearch:version": "v1.9", "og:title": "Resource Relationships | KubeVela", "docsearch:docusaurus_tag": "docs-default-v1.9", "msapplication-config": "/img/favicons/browserconfig.xml", "language": "en", "ogUrl": "https://kubevela.io/docs/v1.9/reference/topology-rule/", "viewport": "width=device-width, initial-scale=1.0", "scrapeId": "64ce94bf-3f2f-4bfa-8e4a-057574b72864", "sourceURL": "https://kubevela.io/docs/v1.9/reference/topology-rule", "url": "https://kubevela.io/docs/v1.9/reference/topology-rule/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"KubeVela Topology Rule Documentation\"?\n\nAssistant: Here are some code examples:\n\n### Enable Kruise Addon\n```yaml\nvela addon registry add experimental --type=helm --endpoint=https://addons.kubevela.net/experimental/\nvela addon enable kruise\n```\n\n### Create Cloneset Application\n```yaml\ncat <<EOF | vela up -f -\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: app-cloneset\nspec:\n  components:\n    - name: clone-set\n      type: cloneset\n      properties:\n        cmd:\n          - ./podinfo\n          - stress-cpu=1\n        image: stefanprodan/podinfo:4.0.3\n        port: 8080\n        updateStrategyType: InPlaceOnly\nEOF\n```\n\n### ConfigMap for Cloneset Relationship (YAML)\n```yaml\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: clone-set-relation\n  namespace: vela-system\n  labels:\n    \"rules.oam.dev/resource-format\": \"yaml\"\n    \"rules.oam.dev/resources\": \"true\"\ndata:\n  rules: |-\n    - parentResourceType:\n        group: apps.kruise.io\n        kind: CloneSet\n      childrenResourceType:\n        - apiVersion: v1\n          kind: Pod\n```\n\n### ConfigMap for Cloneset Relationship (JSON)\n```yaml\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: clone-set-relation\n  namespace: vela-system\n  labels:\n    \"rules.oam.dev/resource-format\": \"json\"\n    \"rules.oam.dev/resources\": \"true\"\ndata:\n  rules: |-\n   [\\\n     {\\\n       \"parentResourceType\": {\\\n           \"group\": \"apps.kruise.io\",\\\n           \"kind\": \"CloneSet\"\\\n       },\\\n       \"childrenResourceType\": [\\\n           {\\\n               \"apiVersion\": \"v1\",\\\n               \"kind\": \"Pod\"\\\n           }\\\n       ]\\\n     }\\\n  ]\n```\n\n### Check Cloneset Logs\n```yaml\n$ vela logs app-cloneset\n+ clone-set-vsrj9 › clone-set\nclone-set 2022-08-22T11:53:46.005267600Z {\"level\":\"info\",\"ts\":\"2022-08-22T11:53:46.002Z\",\"caller\":\"podinfo/main.go:123\",\"msg\":\"Starting podinfo\",\"version\":\"4.0.3\",\"revision\":\"a2f9216fe43849c3b4844032771ba632307d8738\",\"port\":\"9898\"\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.9/reference/topology-rule", "title": "KubeVela Topology Rule Documentation", "description": "This documentation covers the resource relationships in KubeVela, detailing how to establish topological relationships between resources managed by a KubeVela application.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 16:28:02", "type": "code_examples", "page_metadata": {"favicon": "https://kubevela.io/img/favicons/favicon.ico", "title": "Resource Relationships | KubeVela", "generator": "Docusaurus v2.4.3", "docusaurus_tag": "docs-default-v1.9", "theme-color": "#ffffff", "docsearch:language": "en", "og:description": "Resource Relationships mainly specify the relationship between two types of resources. Its main function is to help KubeVela establish the topological relationship of the resources managed by a KubeVela application. For example, the system has a built-in relationship rule: The sub-resources under the Deployment  can only be ReplicaSet , and the child resource of ReplicaSet can only be Pod.", "twitter:card": "summary_large_image", "docusaurus_version": "v1.9", "ogDescription": "Resource Relationships mainly specify the relationship between two types of resources. Its main function is to help KubeVela establish the topological relationship of the resources managed by a KubeVela application. For example, the system has a built-in relationship rule: The sub-resources under the Deployment  can only be ReplicaSet , and the child resource of ReplicaSet can only be Pod.", "og:url": "https://kubevela.io/docs/v1.9/reference/topology-rule/", "description": "Resource Relationships mainly specify the relationship between two types of resources. Its main function is to help KubeVela establish the topological relationship of the resources managed by a KubeVela application. For example, the system has a built-in relationship rule: The sub-resources under the Deployment  can only be ReplicaSet , and the child resource of ReplicaSet can only be Pod.", "docusaurus_locale": "en", "ogTitle": "Resource Relationships | KubeVela", "docsearch:version": "v1.9", "og:title": "Resource Relationships | KubeVela", "docsearch:docusaurus_tag": "docs-default-v1.9", "msapplication-config": "/img/favicons/browserconfig.xml", "language": "en", "ogUrl": "https://kubevela.io/docs/v1.9/reference/topology-rule/", "viewport": "width=device-width, initial-scale=1.0", "scrapeId": "64ce94bf-3f2f-4bfa-8e4a-057574b72864", "sourceURL": "https://kubevela.io/docs/v1.9/reference/topology-rule", "url": "https://kubevela.io/docs/v1.9/reference/topology-rule/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela Topology Rule Documentation\"?\n\nAssistant: Here are the recommended best practices:\n\n• Ensure to add the special label \"rules.oam.dev/resources\": \"true\" to the configmap for it to be recognized by KubeVela.\n• You can define resource relationship rules in either YAML or JSON format.\n• When adding new CustomResourceDefinitions, always check if you need to define new relationship rules to avoid issues with resource discovery.\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.9/reference/topology-rule", "title": "KubeVela Topology Rule Documentation", "description": "This documentation covers the resource relationships in KubeVela, detailing how to establish topological relationships between resources managed by a KubeVela application.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 16:28:02", "type": "best_practices", "page_metadata": {"favicon": "https://kubevela.io/img/favicons/favicon.ico", "title": "Resource Relationships | KubeVela", "generator": "Docusaurus v2.4.3", "docusaurus_tag": "docs-default-v1.9", "theme-color": "#ffffff", "docsearch:language": "en", "og:description": "Resource Relationships mainly specify the relationship between two types of resources. Its main function is to help KubeVela establish the topological relationship of the resources managed by a KubeVela application. For example, the system has a built-in relationship rule: The sub-resources under the Deployment  can only be ReplicaSet , and the child resource of ReplicaSet can only be Pod.", "twitter:card": "summary_large_image", "docusaurus_version": "v1.9", "ogDescription": "Resource Relationships mainly specify the relationship between two types of resources. Its main function is to help KubeVela establish the topological relationship of the resources managed by a KubeVela application. For example, the system has a built-in relationship rule: The sub-resources under the Deployment  can only be ReplicaSet , and the child resource of ReplicaSet can only be Pod.", "og:url": "https://kubevela.io/docs/v1.9/reference/topology-rule/", "description": "Resource Relationships mainly specify the relationship between two types of resources. Its main function is to help KubeVela establish the topological relationship of the resources managed by a KubeVela application. For example, the system has a built-in relationship rule: The sub-resources under the Deployment  can only be ReplicaSet , and the child resource of ReplicaSet can only be Pod.", "docusaurus_locale": "en", "ogTitle": "Resource Relationships | KubeVela", "docsearch:version": "v1.9", "og:title": "Resource Relationships | KubeVela", "docsearch:docusaurus_tag": "docs-default-v1.9", "msapplication-config": "/img/favicons/browserconfig.xml", "language": "en", "ogUrl": "https://kubevela.io/docs/v1.9/reference/topology-rule/", "viewport": "width=device-width, initial-scale=1.0", "scrapeId": "64ce94bf-3f2f-4bfa-8e4a-057574b72864", "sourceURL": "https://kubevela.io/docs/v1.9/reference/topology-rule", "url": "https://kubevela.io/docs/v1.9/reference/topology-rule/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela Multi-Environment Deployment Tutorial\"?\n\nAssistant: This documentation covers the process of deploying applications to multiple environments using KubeVela's UI operations.\n\nHere's a detailed explanation:\n\n\n## Overview\nThis section will mainly focus on UI operation on multi-environments delivery, if you want to deploy with YAML, just refer to multi-cluster delivery doc, just compose the topology policy with different clusters and namespaces to make them work as environment.\n\nEnvironments represent your deployment targets logically (develop, test, production, etc). VelaUX (the UI of KubeVela) provides some new concepts, the environment and delivery target for more flexible deployments on UI operations.\n\nYou can place multi targets to the same environment as you need. In KubeVela, the environment bonds a namespace in the control plane cluster. The application instance will be deployed into the Kubernetes namespace bonded with the specified environment. Actually, the application created in VelaUX is an application template before bound with environment. As a result, VelaUX allows you to easily deploy the same app into different environments.\n\n## Deploy the application to multi-environment\nIn the following sections, we'll guide you how to manage application to deploy into multi-environments with VelaUX.\n\n## 1. Create an environment\nCreate environment on VelaUX is very straightforward. One environment could include multi targets. The environment belongs to a project, One project could include multi environments. Only the application belonging to this project could bond this environment.\n\n## 2. Bind the application to an environment\nYou could select multi environments when you create an application, or modify the application later to bind more environments. The UI will automatically generate a workflow when the application bonds to an environment, that includes some deploy type steps. You can manually modify the workflow later. The default behavior is to deploy targets one by one in workflow steps. You could add other steps such as suspend between two deploy steps.\n\n## 3. Set the different configuration\nWe usually need to set different configurations for different environments, such as environment variables, replicas or resource limits. In this case, we can create some override policies. When we create an override policy, we need to choose affected environment or targets through selecting workflow and steps.\n\n## 4. Deploy\nBy default, all environments are independent of each other. When you deploy an application, you need to select the environment to be deployed. You can also leverage the custom trigger to connect deploy actions between environments.\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.9/tutorials/multi-env", "title": "KubeVela Multi-Environment Deployment Tutorial", "description": "This documentation covers the process of deploying applications to multiple environments using KubeVela's UI operations.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-02-28 16:28:11", "type": "overview", "page_metadata": {"generator": "Docusaurus v2.4.3", "ogTitle": "Deploy to Multi Environments | KubeVela", "og:description": "This section will mainly focus on UI operation on multi-environments delivery, if you want to deploy with YAML, just refer to multi-cluster delivery doc, just compose the topology policy with different clusters and namespaces to make them work as environment.", "docusaurus_tag": "docs-default-v1.9", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docsearch:version": "v1.9", "og:url": "https://kubevela.io/docs/v1.9/tutorials/multi-env/", "language": "en", "msapplication-config": "/img/favicons/browserconfig.xml", "twitter:card": "summary_large_image", "ogDescription": "This section will mainly focus on UI operation on multi-environments delivery, if you want to deploy with YAML, just refer to multi-cluster delivery doc, just compose the topology policy with different clusters and namespaces to make them work as environment.", "docsearch:language": "en", "docusaurus_locale": "en", "docsearch:docusaurus_tag": "docs-default-v1.9", "viewport": "width=device-width, initial-scale=1.0", "docusaurus_version": "v1.9", "description": "This section will mainly focus on UI operation on multi-environments delivery, if you want to deploy with YAML, just refer to multi-cluster delivery doc, just compose the topology policy with different clusters and namespaces to make them work as environment.", "title": "Deploy to Multi Environments | KubeVela", "ogUrl": "https://kubevela.io/docs/v1.9/tutorials/multi-env/", "theme-color": "#ffffff", "og:title": "Deploy to Multi Environments | KubeVela", "scrapeId": "edab2860-78c5-409a-9415-d129c780a0f4", "sourceURL": "https://kubevela.io/docs/v1.9/tutorials/multi-env", "url": "https://kubevela.io/docs/v1.9/tutorials/multi-env/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"KubeVela Multi-Environment Deployment Tutorial\"?\n\nAssistant: Here are some code examples:\n\n### Create an environment command\n```yaml\nvela env init prod --namespace prod\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.9/tutorials/multi-env", "title": "KubeVela Multi-Environment Deployment Tutorial", "description": "This documentation covers the process of deploying applications to multiple environments using KubeVela's UI operations.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-02-28 16:28:11", "type": "code_examples", "page_metadata": {"generator": "Docusaurus v2.4.3", "ogTitle": "Deploy to Multi Environments | KubeVela", "og:description": "This section will mainly focus on UI operation on multi-environments delivery, if you want to deploy with YAML, just refer to multi-cluster delivery doc, just compose the topology policy with different clusters and namespaces to make them work as environment.", "docusaurus_tag": "docs-default-v1.9", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docsearch:version": "v1.9", "og:url": "https://kubevela.io/docs/v1.9/tutorials/multi-env/", "language": "en", "msapplication-config": "/img/favicons/browserconfig.xml", "twitter:card": "summary_large_image", "ogDescription": "This section will mainly focus on UI operation on multi-environments delivery, if you want to deploy with YAML, just refer to multi-cluster delivery doc, just compose the topology policy with different clusters and namespaces to make them work as environment.", "docsearch:language": "en", "docusaurus_locale": "en", "docsearch:docusaurus_tag": "docs-default-v1.9", "viewport": "width=device-width, initial-scale=1.0", "docusaurus_version": "v1.9", "description": "This section will mainly focus on UI operation on multi-environments delivery, if you want to deploy with YAML, just refer to multi-cluster delivery doc, just compose the topology policy with different clusters and namespaces to make them work as environment.", "title": "Deploy to Multi Environments | KubeVela", "ogUrl": "https://kubevela.io/docs/v1.9/tutorials/multi-env/", "theme-color": "#ffffff", "og:title": "Deploy to Multi Environments | KubeVela", "scrapeId": "edab2860-78c5-409a-9415-d129c780a0f4", "sourceURL": "https://kubevela.io/docs/v1.9/tutorials/multi-env", "url": "https://kubevela.io/docs/v1.9/tutorials/multi-env/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela Multi-Environment Deployment Tutorial\"?\n\nAssistant: Here are the recommended best practices:\n\n• If no delivery target configured, a default one will be used with the default namespace in the control plane cluster.\n• You could create an environment with command ( `vela env init prod --namespace prod` ), but currently (v1.5) that does not sync to UI before you create an application in this environment.\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.9/tutorials/multi-env", "title": "KubeVela Multi-Environment Deployment Tutorial", "description": "This documentation covers the process of deploying applications to multiple environments using KubeVela's UI operations.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-02-28 16:28:11", "type": "best_practices", "page_metadata": {"generator": "Docusaurus v2.4.3", "ogTitle": "Deploy to Multi Environments | KubeVela", "og:description": "This section will mainly focus on UI operation on multi-environments delivery, if you want to deploy with YAML, just refer to multi-cluster delivery doc, just compose the topology policy with different clusters and namespaces to make them work as environment.", "docusaurus_tag": "docs-default-v1.9", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docsearch:version": "v1.9", "og:url": "https://kubevela.io/docs/v1.9/tutorials/multi-env/", "language": "en", "msapplication-config": "/img/favicons/browserconfig.xml", "twitter:card": "summary_large_image", "ogDescription": "This section will mainly focus on UI operation on multi-environments delivery, if you want to deploy with YAML, just refer to multi-cluster delivery doc, just compose the topology policy with different clusters and namespaces to make them work as environment.", "docsearch:language": "en", "docusaurus_locale": "en", "docsearch:docusaurus_tag": "docs-default-v1.9", "viewport": "width=device-width, initial-scale=1.0", "docusaurus_version": "v1.9", "description": "This section will mainly focus on UI operation on multi-environments delivery, if you want to deploy with YAML, just refer to multi-cluster delivery doc, just compose the topology policy with different clusters and namespaces to make them work as environment.", "title": "Deploy to Multi Environments | KubeVela", "ogUrl": "https://kubevela.io/docs/v1.9/tutorials/multi-env/", "theme-color": "#ffffff", "og:title": "Deploy to Multi Environments | KubeVela", "scrapeId": "edab2860-78c5-409a-9415-d129c780a0f4", "sourceURL": "https://kubevela.io/docs/v1.9/tutorials/multi-env", "url": "https://kubevela.io/docs/v1.9/tutorials/multi-env/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela Top Tool Documentation\"?\n\nAssistant: This guide introduces how to use the vela top tool in KubeVela, a UI based CLI tool for obtaining platform overview information and diagnosing application resource status.\n\nHere's a detailed explanation:\n\n\n## Launch tool\nWhen launching the tool, we can specify the Namespace of the Application displayed in the Application view which is the home page.\n\n- Default Namespace\n\n```bash\nvela top\n```\n\n- Aimed Namespace\n\n```bash\nvela top -n <namespace>\n```\n\n- All Namespace\n\n```bash\nvela top -A\n```\n\nAfter starting the tool, we will enter the home page: Application view.\n\n## Overview of platform information\nThis information panel component will display the performance information of the KubeVela system, including the version of Vela Core and Vela CLI, the proportion of applications running in the KubeVela system to all applications, and the performance information of the Vela controller (Vela Core) and the Vela gateway (Vela Cluster GateWay). The current usage of CPU and memory accounts for the proportion of the two set values of request and limit respectively).\n\nThe performance information for the Vela Controller and Vela Gateway here actually comes from the performance information of the Pod where they are located. It should be noted that to collect the performance information of the Pod, you need to install the [metrics server](https://github.com/kubernetes-sigs/metrics-server) in the cluster, otherwise the performance information of the Pod will not be obtained correctly.\n\n## Display information and status of multi-level resource\nThis section describes the different views available for displaying information and status of multi-level resources, including Application view, Managed Resource view, Pod view, and Container view.\n\n## Display Resource topology of application\nThis section explains how to view the complete resource topology of an application using the vela top tool.\n\n## General functions\nThis section covers various general functions available in the vela top tool, including displaying YAML of resources, printing logs, switching themes, and accessing help views.\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.8/tutorials/vela-top", "title": "KubeVela Top Tool Documentation", "description": "This guide introduces how to use the vela top tool in KubeVela, a UI based CLI tool for obtaining platform overview information and diagnosing application resource status.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 16:31:35", "type": "overview", "page_metadata": {"ogDescription": "In this guide, we want to introduce you how to use the vela top tool in KubeVela. This tool is a UI based CLI tool provided in KubeVela. By using it, you can obtain the overview information of the platform and diagnose the resource status of the application.", "docsearch:version": "v1.8", "og:url": "https://kubevela.io/docs/v1.8/tutorials/vela-top/", "generator": "Docusaurus v2.4.3", "docsearch:docusaurus_tag": "docs-default-v1.8", "docsearch:language": "en", "docusaurus_tag": "docs-default-v1.8", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "msapplication-config": "/img/favicons/browserconfig.xml", "docusaurus_version": "v1.8", "ogUrl": "https://kubevela.io/docs/v1.8/tutorials/vela-top/", "twitter:card": "summary_large_image", "theme-color": "#ffffff", "og:title": "Vela Top | KubeVela", "viewport": "width=device-width, initial-scale=1.0", "title": "Vela Top | KubeVela", "language": "en", "ogTitle": "Vela Top | KubeVela", "docusaurus_locale": "en", "og:description": "In this guide, we want to introduce you how to use the vela top tool in KubeVela. This tool is a UI based CLI tool provided in KubeVela. By using it, you can obtain the overview information of the platform and diagnose the resource status of the application.", "description": "In this guide, we want to introduce you how to use the vela top tool in KubeVela. This tool is a UI based CLI tool provided in KubeVela. By using it, you can obtain the overview information of the platform and diagnose the resource status of the application.", "scrapeId": "7c77dbff-606f-4a0b-b588-c024fa913262", "sourceURL": "https://kubevela.io/docs/v1.8/tutorials/vela-top", "url": "https://kubevela.io/docs/v1.8/tutorials/vela-top/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"KubeVela Top Tool Documentation\"?\n\nAssistant: Here are some code examples:\n\n### Launch tool commands\n```yaml\nvela top\nvela top -n <namespace>\nvela top -A\n```\n\n### Custom theme configuration\n```yaml\n# platform information component\ninfo:\n  title: \"#69d9ed\"\n  text: \"#c3eff7\"\n# menu component\nmenu:\n  description: \"#6b7f7f\"\n  key: \"#a7e24c\"\n# Logo component\nlogo:\n  text: \"#f72972\"\n# crumbs component\ncrumbs:\n  foreground: \"#e0e0e0\"\n  background: \"#5fd7ff\"\n# table component\ntable:\n  title: \"#ffffff\"\n  header: \"#ffffff\"\n  body: \"#5fd7ff\"\n# resource status color\nstatus:\n  starting: \"#69d9ed\"\n  healthy: \"#a7e24c\"\n  unhealthy: \"#f72972\"\n  waiting: \"#e47c20\"\n  succeeded: \"#3174a2\"\n  failed: \"#a7e24c\"\n  unknown: gray\n# YAML\nyaml:\n  key: \"#e47c20\"\n  colon: \"#e47c20\"\n  value: \"#ffffff\"\n# topology view\ntopology:\n  line: \"#69d9ed\"\n  app: \"#f72972\"\n  workflow: \"#5fd7ff\"\n  component: \"#a7e24c\"\n  policy: \"#e47c20\"\n  trait: \"#f72972\"\n  kind: \"#5fd7ff\"\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.8/tutorials/vela-top", "title": "KubeVela Top Tool Documentation", "description": "This guide introduces how to use the vela top tool in KubeVela, a UI based CLI tool for obtaining platform overview information and diagnosing application resource status.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 16:31:35", "type": "code_examples", "page_metadata": {"ogDescription": "In this guide, we want to introduce you how to use the vela top tool in KubeVela. This tool is a UI based CLI tool provided in KubeVela. By using it, you can obtain the overview information of the platform and diagnose the resource status of the application.", "docsearch:version": "v1.8", "og:url": "https://kubevela.io/docs/v1.8/tutorials/vela-top/", "generator": "Docusaurus v2.4.3", "docsearch:docusaurus_tag": "docs-default-v1.8", "docsearch:language": "en", "docusaurus_tag": "docs-default-v1.8", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "msapplication-config": "/img/favicons/browserconfig.xml", "docusaurus_version": "v1.8", "ogUrl": "https://kubevela.io/docs/v1.8/tutorials/vela-top/", "twitter:card": "summary_large_image", "theme-color": "#ffffff", "og:title": "Vela Top | KubeVela", "viewport": "width=device-width, initial-scale=1.0", "title": "Vela Top | KubeVela", "language": "en", "ogTitle": "Vela Top | KubeVela", "docusaurus_locale": "en", "og:description": "In this guide, we want to introduce you how to use the vela top tool in KubeVela. This tool is a UI based CLI tool provided in KubeVela. By using it, you can obtain the overview information of the platform and diagnose the resource status of the application.", "description": "In this guide, we want to introduce you how to use the vela top tool in KubeVela. This tool is a UI based CLI tool provided in KubeVela. By using it, you can obtain the overview information of the platform and diagnose the resource status of the application.", "scrapeId": "7c77dbff-606f-4a0b-b588-c024fa913262", "sourceURL": "https://kubevela.io/docs/v1.8/tutorials/vela-top", "url": "https://kubevela.io/docs/v1.8/tutorials/vela-top/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela Top Tool Documentation\"?\n\nAssistant: Here are the recommended best practices:\n\n• To collect performance information of the Pod, install the metrics server in the cluster.\n• Use the N button to reselect the Application Namespace in the Application view.\n• Press the T button to display the resource topology of the selected application.\n• Use the Q key to return to the previous view in Managed Resource and Pod views.\n• Press Ctrl+T to switch themes and restart vela top to apply the new theme.\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.8/tutorials/vela-top", "title": "KubeVela Top Tool Documentation", "description": "This guide introduces how to use the vela top tool in KubeVela, a UI based CLI tool for obtaining platform overview information and diagnosing application resource status.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 16:31:35", "type": "best_practices", "page_metadata": {"ogDescription": "In this guide, we want to introduce you how to use the vela top tool in KubeVela. This tool is a UI based CLI tool provided in KubeVela. By using it, you can obtain the overview information of the platform and diagnose the resource status of the application.", "docsearch:version": "v1.8", "og:url": "https://kubevela.io/docs/v1.8/tutorials/vela-top/", "generator": "Docusaurus v2.4.3", "docsearch:docusaurus_tag": "docs-default-v1.8", "docsearch:language": "en", "docusaurus_tag": "docs-default-v1.8", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "msapplication-config": "/img/favicons/browserconfig.xml", "docusaurus_version": "v1.8", "ogUrl": "https://kubevela.io/docs/v1.8/tutorials/vela-top/", "twitter:card": "summary_large_image", "theme-color": "#ffffff", "og:title": "Vela Top | KubeVela", "viewport": "width=device-width, initial-scale=1.0", "title": "Vela Top | KubeVela", "language": "en", "ogTitle": "Vela Top | KubeVela", "docusaurus_locale": "en", "og:description": "In this guide, we want to introduce you how to use the vela top tool in KubeVela. This tool is a UI based CLI tool provided in KubeVela. By using it, you can obtain the overview information of the platform and diagnose the resource status of the application.", "description": "In this guide, we want to introduce you how to use the vela top tool in KubeVela. This tool is a UI based CLI tool provided in KubeVela. By using it, you can obtain the overview information of the platform and diagnose the resource status of the application.", "scrapeId": "7c77dbff-606f-4a0b-b588-c024fa913262", "sourceURL": "https://kubevela.io/docs/v1.8/tutorials/vela-top", "url": "https://kubevela.io/docs/v1.8/tutorials/vela-top/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela Documentation\"?\n\nAssistant: This page provides information about the KubeVela v1.10.0 release and links to various debugging resources.\n\nHere's a detailed explanation:\n\n\n## KubeVela v1.10.0 Release\nKubeVela v1.10.0 is now available.(2025-02-06) [Read Release Note](https://github.com/kubevela/kubevela/releases/tag/v1.10.0)\n", "metadata": {"source_url": "https://kubevela.io/docs/platform-engineers/debug/dry-run", "title": "KubeVela Documentation", "description": "This page provides information about the KubeVela v1.10.0 release and links to various debugging resources.", "has_code_examples": false, "has_best_practices": true, "section_count": 1, "timestamp": "2025-02-28 16:31:39", "type": "overview", "page_metadata": {"favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogUrl": "https://kubevela.io/docs/platform-engineers/debug/dry-run/", "docsearch:docusaurus_tag": "docs-default-v1.10", "docusaurus_tag": "docs-default-v1.10", "ogDescription": "The docs has been migrated:", "description": "The docs has been migrated:", "og:title": "Debugging | KubeVela", "og:description": "The docs has been migrated:", "docusaurus_locale": "en", "og:url": "https://kubevela.io/docs/platform-engineers/debug/dry-run/", "twitter:card": "summary_large_image", "msapplication-config": "/img/favicons/browserconfig.xml", "ogTitle": "Debugging | KubeVela", "viewport": "width=device-width, initial-scale=1.0", "docsearch:version": "v1.10", "theme-color": "#ffffff", "docsearch:language": "en", "title": "Debugging | KubeVela", "docusaurus_version": "v1.10", "generator": "Docusaurus v2.4.3", "language": "en", "scrapeId": "2bf89df0-84f4-4401-bf34-15d96e005e97", "sourceURL": "https://kubevela.io/docs/platform-engineers/debug/dry-run", "url": "https://kubevela.io/docs/platform-engineers/debug/dry-run/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela Documentation\"?\n\nAssistant: Here are the recommended best practices:\n\n• If you like KubeVela, give it a star on GitHub!\n", "metadata": {"source_url": "https://kubevela.io/docs/platform-engineers/debug/dry-run", "title": "KubeVela Documentation", "description": "This page provides information about the KubeVela v1.10.0 release and links to various debugging resources.", "has_code_examples": false, "has_best_practices": true, "section_count": 1, "timestamp": "2025-02-28 16:31:39", "type": "best_practices", "page_metadata": {"favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogUrl": "https://kubevela.io/docs/platform-engineers/debug/dry-run/", "docsearch:docusaurus_tag": "docs-default-v1.10", "docusaurus_tag": "docs-default-v1.10", "ogDescription": "The docs has been migrated:", "description": "The docs has been migrated:", "og:title": "Debugging | KubeVela", "og:description": "The docs has been migrated:", "docusaurus_locale": "en", "og:url": "https://kubevela.io/docs/platform-engineers/debug/dry-run/", "twitter:card": "summary_large_image", "msapplication-config": "/img/favicons/browserconfig.xml", "ogTitle": "Debugging | KubeVela", "viewport": "width=device-width, initial-scale=1.0", "docsearch:version": "v1.10", "theme-color": "#ffffff", "docsearch:language": "en", "title": "Debugging | KubeVela", "docusaurus_version": "v1.10", "generator": "Docusaurus v2.4.3", "language": "en", "scrapeId": "2bf89df0-84f4-4401-bf34-15d96e005e97", "sourceURL": "https://kubevela.io/docs/platform-engineers/debug/dry-run", "url": "https://kubevela.io/docs/platform-engineers/debug/dry-run/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"Integration with Prometheus and Grafana\"?\n\nAssistant: This page provides guidance on integrating existing Prometheus and Grafana instances with KubeVela applications.\n\nHere's a detailed explanation:\n\n\n## Integrate Prometheus\nIf you already have external prometheus service and you want to connect it to Grafana (established by vela addon), you can create a GrafanaDatasource to register it through KubeVela application.\n\n```yaml\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: register-prometheus\nspec:\n  components:\n    - type: grafana-datasource\n      name: my-prometheus\n      properties:\n        access: proxy\n        basicAuth: false\n        isDefault: false\n        name: MyPrometheus\n        readOnly: true\n        withCredentials: true\n        jsonData:\n          httpHeaderName1: Authorization\n          tlsSkipVerify: true\n        secureJsonFields:\n          httpHeaderValue1: <token of your prometheus access>\n        type: prometheus\n        url: <my-prometheus url>\n```\n\nFor example, if you are using the Prometheus service on Alibaba Cloud (ARMS), you can go to the Prometheus setting page and find the access url & access token.\n\n> You need to ensure your grafana access is already available. You can run `kubectl get grafana default` and see if it exists.\n\n## Integrate Grafana\nIf you already have existing Grafana, similar to Prometheus integration, you can create a Grafana access through KubeVela application.\n\n```yaml\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: register-grafana\nspec:\n  components:\n    - type: grafana-access\n      name: my-grafana\n      properties:\n        name: my-grafana\n        endpoint: <my-grafana url>\n        token: <access token>\n```\n\nTo get your grafana access, you can go into your Grafana instance and configure API keys.\n\nAfter the application is successfully dispatched, you can check the registration by running the following command.\n\n```bash\nkubectl get grafana\n```\n\n```bash\nNAME         ENDPOINT                                                      CREDENTIAL_TYPE\ndefault      http://grafana.o11y-system:3000                               BasicAuth\nmy-grafana   https://grafana-rngwzwnsuvl4s9p66m.grafana.aliyuncs.com:80/   BearerToken\n```\n\nNow you can manage your dashboard and datasource on your grafana instance through the native Kubernetes API as well.\n\n```bash\n# show all the dashboard you have\nkubectl get grafanadashboard -l grafana=my-grafana\n```\n\n```bash\n# show all the datasource you have\nkubectl get grafanadatasource -l grafana=my-grafana\n```\n\n## Integrate through KubeVela Config Management\nIt is also possible to make integrations through KubeVela's configuration management system, no matter you are using CLI or VelaUX.\n\n## Integrate Other Tools or Systems\nThere are a wide range of community tools or eco-systems that users can leverage for building their observability system, such as prometheus-operator or DataDog. By far, KubeVela does not have existing best practices for those integration. We may integrate with those popular projects through KubeVela addons in the future. We are also welcome to community contributions for broader explorations and more connections.\n", "metadata": {"source_url": "https://kubevela.io/docs/platform-engineers/operations/o11y/integration", "title": "Integration with Prometheus and Grafana", "description": "This page provides guidance on integrating existing Prometheus and Grafana instances with KubeVela applications.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 16:32:11", "type": "overview", "page_metadata": {"docsearch:language": "en", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "og:url": "https://kubevela.io/docs/platform-engineers/operations/o11y/integration/", "twitter:card": "summary_large_image", "language": "en", "docusaurus_version": "v1.10", "og:title": "Cloud Service Integration | KubeVela", "description": "Sometimes, you might already have Prometheus & Grafana instances. They might be built by other tools, or come from cloud providers. Follow the below guide to integrate with existing systems.", "docusaurus_locale": "en", "ogUrl": "https://kubevela.io/docs/platform-engineers/operations/o11y/integration/", "docsearch:version": "v1.10", "theme-color": "#ffffff", "generator": "Docusaurus v2.4.3", "msapplication-config": "/img/favicons/browserconfig.xml", "viewport": "width=device-width, initial-scale=1.0", "title": "Cloud Service Integration | KubeVela", "docusaurus_tag": "docs-default-v1.10", "ogTitle": "Cloud Service Integration | KubeVela", "ogDescription": "Sometimes, you might already have Prometheus & Grafana instances. They might be built by other tools, or come from cloud providers. Follow the below guide to integrate with existing systems.", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:description": "Sometimes, you might already have Prometheus & Grafana instances. They might be built by other tools, or come from cloud providers. Follow the below guide to integrate with existing systems.", "scrapeId": "7e700f12-da7b-4e1a-8f55-1a6db3a9b83e", "sourceURL": "https://kubevela.io/docs/platform-engineers/operations/o11y/integration", "url": "https://kubevela.io/docs/platform-engineers/operations/o11y/integration/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"Integration with Prometheus and Grafana\"?\n\nAssistant: Here are some code examples:\n\n### Register Prometheus\n```yaml\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: register-prometheus\nspec:\n  components:\n    - type: grafana-datasource\n      name: my-prometheus\n      properties:\n        access: proxy\n        basicAuth: false\n        isDefault: false\n        name: MyPrometheus\n        readOnly: true\n        withCredentials: true\n        jsonData:\n          httpHeaderName1: Authorization\n          tlsSkipVerify: true\n        secureJsonFields:\n          httpHeaderValue1: <token of your prometheus access>\n        type: prometheus\n        url: <my-prometheus url>\n```\n\n### Register Grafana\n```yaml\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: register-grafana\nspec:\n  components:\n    - type: grafana-access\n      name: my-grafana\n      properties:\n        name: my-grafana\n        endpoint: <my-grafana url>\n        token: <access token>\n```\n\n### Check Grafana Registration\n```yaml\nkubectl get grafana\n```\n\n### Show All Dashboards\n```yaml\nkubectl get grafanadashboard -l grafana=my-grafana\n```\n\n### Show All Datasources\n```yaml\nkubectl get grafanadatasource -l grafana=my-grafana\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/platform-engineers/operations/o11y/integration", "title": "Integration with Prometheus and Grafana", "description": "This page provides guidance on integrating existing Prometheus and Grafana instances with KubeVela applications.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 16:32:11", "type": "code_examples", "page_metadata": {"docsearch:language": "en", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "og:url": "https://kubevela.io/docs/platform-engineers/operations/o11y/integration/", "twitter:card": "summary_large_image", "language": "en", "docusaurus_version": "v1.10", "og:title": "Cloud Service Integration | KubeVela", "description": "Sometimes, you might already have Prometheus & Grafana instances. They might be built by other tools, or come from cloud providers. Follow the below guide to integrate with existing systems.", "docusaurus_locale": "en", "ogUrl": "https://kubevela.io/docs/platform-engineers/operations/o11y/integration/", "docsearch:version": "v1.10", "theme-color": "#ffffff", "generator": "Docusaurus v2.4.3", "msapplication-config": "/img/favicons/browserconfig.xml", "viewport": "width=device-width, initial-scale=1.0", "title": "Cloud Service Integration | KubeVela", "docusaurus_tag": "docs-default-v1.10", "ogTitle": "Cloud Service Integration | KubeVela", "ogDescription": "Sometimes, you might already have Prometheus & Grafana instances. They might be built by other tools, or come from cloud providers. Follow the below guide to integrate with existing systems.", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:description": "Sometimes, you might already have Prometheus & Grafana instances. They might be built by other tools, or come from cloud providers. Follow the below guide to integrate with existing systems.", "scrapeId": "7e700f12-da7b-4e1a-8f55-1a6db3a9b83e", "sourceURL": "https://kubevela.io/docs/platform-engineers/operations/o11y/integration", "url": "https://kubevela.io/docs/platform-engineers/operations/o11y/integration/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"Integration with Prometheus and Grafana\"?\n\nAssistant: Here are the recommended best practices:\n\n• Ensure your Grafana access is already available before integration.\n• Refer to the Prometheus setting page for access URL and token if using Alibaba Cloud (ARMS).\n• Configure API keys in your Grafana instance to get access tokens.\n", "metadata": {"source_url": "https://kubevela.io/docs/platform-engineers/operations/o11y/integration", "title": "Integration with Prometheus and Grafana", "description": "This page provides guidance on integrating existing Prometheus and Grafana instances with KubeVela applications.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 16:32:11", "type": "best_practices", "page_metadata": {"docsearch:language": "en", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "og:url": "https://kubevela.io/docs/platform-engineers/operations/o11y/integration/", "twitter:card": "summary_large_image", "language": "en", "docusaurus_version": "v1.10", "og:title": "Cloud Service Integration | KubeVela", "description": "Sometimes, you might already have Prometheus & Grafana instances. They might be built by other tools, or come from cloud providers. Follow the below guide to integrate with existing systems.", "docusaurus_locale": "en", "ogUrl": "https://kubevela.io/docs/platform-engineers/operations/o11y/integration/", "docsearch:version": "v1.10", "theme-color": "#ffffff", "generator": "Docusaurus v2.4.3", "msapplication-config": "/img/favicons/browserconfig.xml", "viewport": "width=device-width, initial-scale=1.0", "title": "Cloud Service Integration | KubeVela", "docusaurus_tag": "docs-default-v1.10", "ogTitle": "Cloud Service Integration | KubeVela", "ogDescription": "Sometimes, you might already have Prometheus & Grafana instances. They might be built by other tools, or come from cloud providers. Follow the below guide to integrate with existing systems.", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:description": "Sometimes, you might already have Prometheus & Grafana instances. They might be built by other tools, or come from cloud providers. Follow the below guide to integrate with existing systems.", "scrapeId": "7e700f12-da7b-4e1a-8f55-1a6db3a9b83e", "sourceURL": "https://kubevela.io/docs/platform-engineers/operations/o11y/integration", "url": "https://kubevela.io/docs/platform-engineers/operations/o11y/integration/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"Addon CUE Documentation\"?\n\nAssistant: This document introduces how to define addon applications by writing CUE files in KubeVela.\n\nHere's a detailed explanation:\n\n\n## Application template file (template.cue)\nThe most important part in the application template is `output` field, which must place a KubeVela application as follows:\n\n```codeBlockLines_e6Vv\npackage main\n\noutput: {\n    apiVersion: \"core.oam.dev/v1beta1\"\n    kind:       \"Application\"\n    spec: {\n        components: [\\\n            {\\\n                type: \"k8s-objects\"\\\n                name: \"example-namespace\"\\\n                properties: objects: [{\\\n                    apiVersion: \"v1\"\\\n                    kind:       \"Namespace\"\\\n                    metadata: name: parameter.namespace\\\n                }]\\\n            },\\\n        ]\n    }\n}\n```\n\nIn this example, the name of the namespace defined in `spec.components[0].properties.objects[0]` of this application is determined by `parameter.namespace`, which means that its name will be dynamically rendered by the `namespace` parameter when the addon is enabled. If you want the created namespace to be `my-namespace`, you can run the following command:\n\n```codeBlockLines_e6Vv\nvela addon enable <addon-name> namespace=my-namespace\n```\n\nAfter rendered, the resulting application is:\n\n```codeBlockLines_e6Vv\nkind: Application\nmetadata:\nspec:\n  components:\n    - name: namespace\n      type: k8s-objects\n      properties:\n        objects:\n          - apiVersion: v1\n            kind: Namespace\n            metadata:\n              name: my-namespace\n```\n\nYou can refer to the [CUE basic](https://kubevela.io/docs/platform-engineers/cue/basic/) to learn language details.\n\n> Please notice: The name of Application in template file will be replaced by the addon name in `metadata.yaml`. The application will always have a unified name in the format of `addon-<addon_name>`.\n\n## Parameter definition file (parameter.cue)\nIn the example above, we use the parameter `namespace` to set the name of Kubernetes `namespace` resource. Actually, we also need a parameter definition file ( `parameter.cue`) to declare what parameters this addon has. For example,\n\n```codeBlockLines_e6Vv\nparameter: {\n  //+usage=namespace to create\n  namespace: string\n}\n```\n\nWhen enabling the addon, you can set the parameters declared in the parameter definition file by appending the parameters to the command, as follows:\n\n```codeBlockLines_e6Vv\nvela addon enable <addon-Name> <parameter-name-1=value> <parameter-name-2=value>\n```\n\n## Resource files (CUE files under `resources/` folder)\nKubeVela has supported CUE package in an addon, which means you can define any CUE files containing data or schema inside the `resources/` folder and reference them in application CUE file as a while package. This also help you avoid defining all content in one template file.\n\nContinuing with the example above, we split the CUE blocks that define the `namesapce` component under the `resources/` folder, the folder structure is as follows:\n\n```codeBlockLines_e6Vv\n├── resources/\n│   └── namespace.cue\n├── README.md\n├── metadata.yaml\n├── parameter.cue\n└── template.cue\n```\n\nThe `namespace.cue` file is as follows:\n\n```codeBlockLines_e6Vv\n// resources/namespace.cue\npackage main\n\nnamespace: {\n    type: \"k8s-objects\"\n    name: \"example-namespace\"\n    properties: objects: [{\\\n        apiVersion: \"v1\"\\\n        kind:       \"Namespace\"\\\n        metadata: name: parameter.namespace\\\n    }]\n}\n```\n\nThen we can reference this CUE block in `template.cue` :\n\n```codeBlockLines_e6Vv\n// template.cue\n\npackage main\n\noutput: {\n    apiVersion: \"core.oam.dev/v1beta1\"\n    kind:       \"Application\"\n    spec: {\n        // reference namespace block from resources/naemspace.cue\n        components: [namespace]\n    }\n}\n```\n\nAfter enabled this addon with command `$ vela addon enable <addon-name> namespace=my-namespace clusters=local,cluser1`, the resulting application is:\n\n```codeBlockLines_e6Vv\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: example\n  namespace: vela-system\nspec:\n  components:\n    - name: namespace\n      type: k8s-objects\n      properties:\n        objects:\n          - apiVersion: v1\n            kind: Namespace\n            metadata:\n              name: my-namespace\n```\n\n> Please notice: Only those CUE files with header `package main` can be reference by `template.cue`, this can be used to help you filter CUE files that you don't want to use in the rendering context.\n\nWe just use namespace as example here, other resources of an operator can also be defined in KubeVela application in the same way. This also gives your addon re-usability and validation capability powered by the CUE.\n\n## Notes info ( `NOTES.cue`)\nThe `NOTES.cue` file allows you to display dynamic notifications once the addon has been enabled, based on specified parameters.\n\nFor example, you can write the `NOTES.cue` as shown below:\n\n```codeBlockLines_e6Vv\ninfo: string\n\nif !parameter.pluginOnly {\n    info: \"\"\"\n        By default, the backstage app is strictly serving in the domain `127.0.0.1:7007`, check it by:\n\n            vela port-forward addon-backstage -n vela-system\n\n        You can build your own backstage app if you want to use it in other domains.\n        \"\"\"\n}\nif parameter.pluginOnly {\n    info: \"You can use the endpoint of 'backstage-plugin-vela' in your own backstage app by configuring the 'vela.host', refer to example https://github.com/wonderflow/vela-backstage-demo.\"\n}\nnotes: (info)\n```\n\nand `parameter.cue` as shown below:\n\n```codeBlockLines_e6Vv\nparamters: {\n    pluginOnly: *false | string\n}\n```\n\nWhen you enable the addon using the CLI, the information displayed in your console will vary depending on the specified parameter. For example, running the command:\n\n```codeBlockLines_e6Vv\n$ vela addon enable experimental/backstage\n```\n\nOnce the addon has been enabled, you will see the following notice::\n\n```codeBlockLines_e6Vv\nBy default, the backstage app is strictly serving in the domain `127.0.0.1:7007`, check it by:\n\n        vela port-forward addon-backstage -n vela-system\n\nYou can build your own backstage app if you want to use it in other domains.\n```\n\nIf you enable the addon with the `parameter.pluginOnly=true` setting, you will see this information:\n\n```codeBlockLines_e6Vv\nYou can use the endpoint of 'backstage-plugin-vela' in your own backstage app by configuring the 'vela.host', refer to example https://github.com/wonderflow/vela-backstage-demo.\n```\n\n## Features\nThis section will introduce the way of writing application description file to implement several core features of addon.\n\n### Determine which clusters to be installed by parameters\nIf you want the resources in the addon to be installed not only in the control-plane, but also in managed clusters, you can use the topology policy in your application as shown below. The parameter `clusters` field will be filled when the addon is enabled with the `clusters` parameter specified.\n\n```codeBlockLines_e6Vv\npackage main\n\noutput: {\n    apiVersion: \"core.oam.dev/v1beta1\"\n    kind:       \"Application\"\n    spec: {\n        components:{...}\n        policies: [{\\\n            type: \"topology\"\\\n            name: \"deploy-topology\"\\\n            properties: {\\\n                if parameter.clusters != _|_ {\\\n                    clusters: parameter.clusters\\\n                }\\\n                if parameter.clusters == _|_ {\\\n                    clusterLabelSelector: {}\\\n                }\\\n            }\\\n        }]\n    }}\n```\n\nIf you execute the command to enable the addon as follows:\n\n```codeBlockLines_e6Vv\n$ vela addon enable <addon-name> --clusters=local,cluster1\n```\n\nor:\n\n```codeBlockLines_e6Vv\n$ vela addon enable <addon-name> clusters=\"{local,cluster1}\"\n```\n\nThe rendering result will be:\n\n```codeBlockLines_e6Vv\nkind: Application\nmetadata:\n  name: addon-example\n  namespace: vela-system\nspec:\n  components: ...\n  policies:\n    - type: \"topology\"\n      name: \"deploy-topology\"\n      properties:\n        clusters:\n          - local\n          - cluster1\n```\n\nAfter enabling the addon, the KubeVela controller will install components to the `local` and `cluster1` clusters as defined in the application's topology policy.\n\nIf you need to enable the addon in all clusters, you can enable the addon by not setting the `cluster` parameter as follows:\n\n```codeBlockLines_e6Vv\n$ vela addon enable <addon-name>\n```\n\nThe rendering result is :\n\n```codeBlockLines_e6Vv\nkind: Application\nmetadata:\n  name: addon-example\n  namespace: vela-system\nspec:\n  components: ...\n  policies:\n    - type: \"topology\"\n      name: \"deploy-topology\"\n      properties:\n        clusterLabelSelector: {}\n```\n\nSince an empty ( `{}`) `clusterLabelSelector` topology will choose all exist clusters as target, so the components in the application will be dispatched to all clusters including both the control-plane and the managed clusters.\n\n### Auxiliary resources\nYou can also define some auxiliary resources in the `outputs` field of the `template.cue` file. These resources will only be applied to the control plane.\n\n```codeBlockLines_e6Vv\npackage main\n\noutput: {\n    apiVersion: \"core.oam.dev/v1beta1\"\n    kind:       \"Application\"\n    spec: {\n\n    }\n    ...\n}\n\noutputs: resourceTree: {\n    apiVersion: \"v1\"\n    kind:       \"ConfigMap\"\n    metadata: {\n        name:      \"resource-tree\"\n        namespace: \"vela-system\"\n        labels: {\n            \"rules.oam.dev/resources\":       \"true\"\n            \"rules.oam.dev/resource-format\": \"json\"\n        }\n    }\n    data: rules: json.Marshal(_rules)\n}\n\n_rules: {...}\n```\n\nIn this example, we define a configmap `resourceTree` as an auxiliary resource, this configmap is actually a [resource topology rule](https://kubevela.io/docs/reference/topology-rule/) . The function of this resource is to establish the relationship of CustomResources in the cluster, so that it can be displayed in the topology graph. It only needs to be applied to control-plane.\n\nYou can also run the `cue eval *.cue resources/*.cue -e output -d yaml` command from local to see the result of resource rendering.\n\n### Use metadata of context to render application\nIn addition to dynamically rendering the application by parameters, you can also read fields defined in `metadata.yaml` for rendering. For example, you can define a `template.cue` file as follows:\n\n```codeBlockLines_e6Vv\noutput: {\n    apiVersion: \"core.oam.dev/v1beta1\"\n    kind:       \"Application\"\n    spec: {\n        components: [\\\n            {\\\n                type: \"webservice\"\\\n                properties: {\\\n                    image: \"oamdev/vela-apiserver:\" + context.metadata.version\\\n                }\\\n            },\\\n        ]\n    }\n}\n```\n\nWhen rendering, the fields defined in `metadata.yaml` will be put into the CUE block of `context` and rendered together with other CUE files. For example, the `metadata.yaml` is:\n\n```codeBlockLines_e6Vv\n...\nname: velaux\nversion: 1.2.4\n...\n```\n\nResulting application is:\n\n```codeBlockLines_e6Vv\napiVersion: core.oam.dev/v1beta1\nkind:       Application\nmetadata:\n  name: addon-example\n  namespace: \"vela-system\"\nspec:\n  components:\n    - type: webservice\n      properties:\n        image: \"oamdev/vela-apiserver:v1.2.4\"\n```\n\nThe image tag becomes the addon's version which the `context.metadata.version` field points to. The real example is [VelaUX](https://github.com/kubevela/catalog/blob/master/addons/velaux/resources/apiserver.cue). Other available fields of metadata please refer to [metadata](https://kubevela.io/docs/platform-engineers/addon/intro/).\n\nWhen the addon is enabled, `template.cue`, `parameter.cue` and the resource files will be gathered with the addon metadata in `metadata.yaml` to render out the resources and apply them.\n\n### Binding the Definition to a component\nIf you want to bind a Definition to a component in the application, to dynamically enable the ability of one Definition, you can do it by setting `addon.oam.dev/bind-component` annotation on the Definition.\n\nAn actual example is [`fluxcd`](https://github.com/kubevela/catalog/tree/master/addons/fluxcd/definitions) addon.\n\nComponentDefinition `kustomize` in this addon is:\n\n```codeBlockLines_e6Vv\nkustomize: {\n    attributes: workload: type: \"autodetects.core.oam.dev\"\n    description: \"kustomize can fetching, building, updating and applying Kustomize manifests from git repo.\"\n    type:        \"component\"\n    annotations: {\n         \"addon.oam.dev/ignore-without-component\": \"fluxcd-kustomize-controller\"\n   }\n}\n```\n\nThis Definition has an annotation \"addon.oam.dev/bind-component\": \"fluxcd-kustomize-controller\", which means, bind the ComponentDefinition to `fluxcd-kustomize-controller` component.\n\nThe `template.cue` of this addon is:\n\n```codeBlockLines_e6Vv\n//...\n\nkustomizeController: {\n    type: \"webService\"\n    Name: \"fluxcd-kustomize-controller\",\n    //....\n}\n\ngitOpsController: [...]\n\nif parameter.onlyHelmComponents == false {\n    gitOpsController: [kustomizeController]\n}\n\noutput: {\n    apiVersion: \"core.oam.dev/v1beta1\"\n    kind:       \"Application\"\n    spec: {\n        //...\n        components: [\\\n            helmController,\\\n            sourceController,\\\n        ] + gitOpsController\n        //...\n    }\n}\n//...\n```\n\nIf you enable this addon by following the command:\n\n```codeBlockLines_e6Vv\n$ vela addon enable fluxcd `onlyHelmComponents=true`\n```\n\nThe `fluxcd-kustomize-controller` component won't be added to the application. The `kustomize` ComponentDefinitions will not be applied either.\n\n## Examples\nAn example is [ingress-nginx](https://github.com/kubevela/catalog/tree/master/addons/ingress-nginx) addon. All files included in this addon are all CUE typed.\n- [Application template file (template.cue)](https://kubevela.io/docs/platform-engineers/addon/addon-cue/#application-template-file-templatecue)\n- [Parameter definition file (parameter.cue)](https://kubevela.io/docs/platform-engineers/addon/addon-cue/#parameter-definition-file-parametercue)\n- [Resource files (CUE files under `resources/` folder)](https://kubevela.io/docs/platform-engineers/addon/addon-cue/#resource-files-cue-files-under-resources-folder)\n- [Notes info ( `NOTES.cue`)](https://kubevela.io/docs/platform-engineers/addon/addon-cue/#notes-info-notescue)\n- [Features](https://kubevela.io/docs/platform-engineers/addon/addon-cue/#features)\n  - [Determine which clusters to be installed by parameters](https://kubevela.io/docs/platform-engineers/addon/addon-cue/#determine-which-clusters-to-be-installed-by-parameters)\n  - [Auxiliary resources](https://kubevela.io/docs/platform-engineers/addon/addon-cue/#auxiliary-resources)\n  - [Use metadata of context to render application](https://kubevela.io/docs/platform-engineers/addon/addon-cue/#use-metadata-of-context-to-render-application)\n  - [Binding the Definition to a component](https://kubevela.io/docs/platform-engineers/addon/addon-cue/#binding-the-definition-to-a-component)\n- [Examples](https://kubevela.io/docs/platform-engineers/addon/addon-cue/#examples)\n", "metadata": {"source_url": "https://kubevela.io/docs/platform-engineers/addon/addon-cue", "title": "Addon CUE Documentation", "description": "This document introduces how to define addon applications by writing CUE files in KubeVela.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-02-28 16:35:21", "type": "overview", "page_metadata": {"description": "Previous tutorial introduces the basic structure of an addon and illustrate that any Kubernetes operator to be installed of an addon should be defined in a KubeVela application. Document YAML application description file explains the way of using YAML define the addon application. If you use CUE to write application description file, the addon will be able to have these abilities:", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "og:url": "https://kubevela.io/docs/platform-engineers/addon/addon-cue/", "og:title": "CUE based Addon Application | KubeVela", "msapplication-config": "/img/favicons/browserconfig.xml", "title": "CUE based Addon Application | KubeVela", "generator": "Docusaurus v2.4.3", "docsearch:docusaurus_tag": "docs-default-v1.10", "ogUrl": "https://kubevela.io/docs/platform-engineers/addon/addon-cue/", "viewport": "width=device-width, initial-scale=1.0", "docsearch:version": "v1.10", "docsearch:language": "en", "ogDescription": "Previous tutorial introduces the basic structure of an addon and illustrate that any Kubernetes operator to be installed of an addon should be defined in a KubeVela application. Document YAML application description file explains the way of using YAML define the addon application. If you use CUE to write application description file, the addon will be able to have these abilities:", "docusaurus_version": "v1.10", "og:description": "Previous tutorial introduces the basic structure of an addon and illustrate that any Kubernetes operator to be installed of an addon should be defined in a KubeVela application. Document YAML application description file explains the way of using YAML define the addon application. If you use CUE to write application description file, the addon will be able to have these abilities:", "twitter:card": "summary_large_image", "language": "en", "ogTitle": "CUE based Addon Application | KubeVela", "theme-color": "#ffffff", "docusaurus_locale": "en", "docusaurus_tag": "docs-default-v1.10", "scrapeId": "59a88a65-32dd-4df8-8695-a003b0fd0c8f", "sourceURL": "https://kubevela.io/docs/platform-engineers/addon/addon-cue", "url": "https://kubevela.io/docs/platform-engineers/addon/addon-cue/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"Addon CUE Documentation\"?\n\nAssistant: Here are some code examples:\n\n### Application template file example\n```yaml\n```codeBlockLines_e6Vv\npackage main\n\noutput: {\n    apiVersion: \"core.oam.dev/v1beta1\"\n    kind:       \"Application\"\n    spec: {\n        components: [\\\n            {\\\n                type: \"k8s-objects\"\\\n                name: \"example-namespace\"\\\n                properties: objects: [{\\\n                    apiVersion: \"v1\"\\\n                    kind:       \"Namespace\"\\\n                    metadata: name: parameter.namespace\\\n                }]\\\n            },\\\n        ]\n    }\n}\n```\n```\n\n### Enable addon command example\n```yaml\n```codeBlockLines_e6Vv\nvela addon enable <addon-name> namespace=my-namespace\n```\n```\n\n### Resulting application example\n```yaml\n```codeBlockLines_e6Vv\nkind: Application\nmetadata:\nspec:\n  components:\n    - name: namespace\n      type: k8s-objects\n      properties:\n        objects:\n          - apiVersion: v1\n            kind: Namespace\n            metadata:\n              name: my-namespace\n```\n```\n\n### Parameter definition file example\n```yaml\n```codeBlockLines_e6Vv\nparameter: {\n  //+usage=namespace to create\n  namespace: string\n}\n```\n```\n\n### Resource files structure example\n```yaml\n```codeBlockLines_e6Vv\n├── resources/\n│   └── namespace.cue\n├── README.md\n├── metadata.yaml\n├── parameter.cue\n└── template.cue\n```\n```\n\n### Namespace CUE file example\n```yaml\n```codeBlockLines_e6Vv\n// resources/namespace.cue\npackage main\n\nnamespace: {\n    type: \"k8s-objects\"\n    name: \"example-namespace\"\n    properties: objects: [{\\\n        apiVersion: \"v1\"\\\n        kind:       \"Namespace\"\\\n        metadata: name: parameter.namespace\\\n    }]\n}\n```\n```\n\n### Enable addon with clusters command example\n```yaml\n```codeBlockLines_e6Vv\n$ vela addon enable <addon-name> --clusters=local,cluster1\n```\n```\n\n### Resulting application with clusters example\n```yaml\n```codeBlockLines_e6Vv\nkind: Application\nmetadata:\n  name: addon-example\n  namespace: vela-system\nspec:\n  components: ...\n  policies:\n    - type: \"topology\"\n      name: \"deploy-topology\"\n      properties:\n        clusters:\n          - local\n          - cluster1\n```\n```\n\n### Auxiliary resources example\n```yaml\n```codeBlockLines_e6Vv\npackage main\n\noutput: {\n    apiVersion: \"core.oam.dev/v1beta1\"\n    kind:       \"Application\"\n    spec: {\n\n    }\n    ...\n}\n\noutputs: resourceTree: {\n    apiVersion: \"v1\"\n    kind:       \"ConfigMap\"\n    metadata: {\n        name:      \"resource-tree\"\n        namespace: \"vela-system\"\n        labels: {\n            \"rules.oam.dev/resources\":       \"true\"\n            \"rules.oam.dev/resource-format\": \"json\"\n        }\n    }\n    data: rules: json.Marshal(_rules)\n}\n\n_rules: {...}\n```\n```\n\n### Use metadata of context example\n```yaml\n```codeBlockLines_e6Vv\noutput: {\n    apiVersion: \"core.oam.dev/v1beta1\"\n    kind:       \"Application\"\n    spec: {\n        components: [\\\n            {\\\n                type: \"webservice\"\\\n                properties: {\\\n                    image: \"oamdev/vela-apiserver:\" + context.metadata.version\\\n                }\\\n            },\\\n        ]\n    }\n}\n```\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/platform-engineers/addon/addon-cue", "title": "Addon CUE Documentation", "description": "This document introduces how to define addon applications by writing CUE files in KubeVela.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-02-28 16:35:21", "type": "code_examples", "page_metadata": {"description": "Previous tutorial introduces the basic structure of an addon and illustrate that any Kubernetes operator to be installed of an addon should be defined in a KubeVela application. Document YAML application description file explains the way of using YAML define the addon application. If you use CUE to write application description file, the addon will be able to have these abilities:", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "og:url": "https://kubevela.io/docs/platform-engineers/addon/addon-cue/", "og:title": "CUE based Addon Application | KubeVela", "msapplication-config": "/img/favicons/browserconfig.xml", "title": "CUE based Addon Application | KubeVela", "generator": "Docusaurus v2.4.3", "docsearch:docusaurus_tag": "docs-default-v1.10", "ogUrl": "https://kubevela.io/docs/platform-engineers/addon/addon-cue/", "viewport": "width=device-width, initial-scale=1.0", "docsearch:version": "v1.10", "docsearch:language": "en", "ogDescription": "Previous tutorial introduces the basic structure of an addon and illustrate that any Kubernetes operator to be installed of an addon should be defined in a KubeVela application. Document YAML application description file explains the way of using YAML define the addon application. If you use CUE to write application description file, the addon will be able to have these abilities:", "docusaurus_version": "v1.10", "og:description": "Previous tutorial introduces the basic structure of an addon and illustrate that any Kubernetes operator to be installed of an addon should be defined in a KubeVela application. Document YAML application description file explains the way of using YAML define the addon application. If you use CUE to write application description file, the addon will be able to have these abilities:", "twitter:card": "summary_large_image", "language": "en", "ogTitle": "CUE based Addon Application | KubeVela", "theme-color": "#ffffff", "docusaurus_locale": "en", "docusaurus_tag": "docs-default-v1.10", "scrapeId": "59a88a65-32dd-4df8-8695-a003b0fd0c8f", "sourceURL": "https://kubevela.io/docs/platform-engineers/addon/addon-cue", "url": "https://kubevela.io/docs/platform-engineers/addon/addon-cue/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"Addon CUE Documentation\"?\n\nAssistant: Here are the recommended best practices:\n\n• Utilize the flexible and concise syntax of the CUE language, rich built-in functions and its parameter verification capabilities.\n• Only those CUE files with header `package main` can be referenced by `template.cue`, this can be used to help you filter CUE files that you don't want to use in the rendering context.\n• When enabling the addon, you can set the parameters declared in the parameter definition file by appending the parameters to the command.\n", "metadata": {"source_url": "https://kubevela.io/docs/platform-engineers/addon/addon-cue", "title": "Addon CUE Documentation", "description": "This document introduces how to define addon applications by writing CUE files in KubeVela.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-02-28 16:35:21", "type": "best_practices", "page_metadata": {"description": "Previous tutorial introduces the basic structure of an addon and illustrate that any Kubernetes operator to be installed of an addon should be defined in a KubeVela application. Document YAML application description file explains the way of using YAML define the addon application. If you use CUE to write application description file, the addon will be able to have these abilities:", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "og:url": "https://kubevela.io/docs/platform-engineers/addon/addon-cue/", "og:title": "CUE based Addon Application | KubeVela", "msapplication-config": "/img/favicons/browserconfig.xml", "title": "CUE based Addon Application | KubeVela", "generator": "Docusaurus v2.4.3", "docsearch:docusaurus_tag": "docs-default-v1.10", "ogUrl": "https://kubevela.io/docs/platform-engineers/addon/addon-cue/", "viewport": "width=device-width, initial-scale=1.0", "docsearch:version": "v1.10", "docsearch:language": "en", "ogDescription": "Previous tutorial introduces the basic structure of an addon and illustrate that any Kubernetes operator to be installed of an addon should be defined in a KubeVela application. Document YAML application description file explains the way of using YAML define the addon application. If you use CUE to write application description file, the addon will be able to have these abilities:", "docusaurus_version": "v1.10", "og:description": "Previous tutorial introduces the basic structure of an addon and illustrate that any Kubernetes operator to be installed of an addon should be defined in a KubeVela application. Document YAML application description file explains the way of using YAML define the addon application. If you use CUE to write application description file, the addon will be able to have these abilities:", "twitter:card": "summary_large_image", "language": "en", "ogTitle": "CUE based Addon Application | KubeVela", "theme-color": "#ffffff", "docusaurus_locale": "en", "docusaurus_tag": "docs-default-v1.10", "scrapeId": "59a88a65-32dd-4df8-8695-a003b0fd0c8f", "sourceURL": "https://kubevela.io/docs/platform-engineers/addon/addon-cue", "url": "https://kubevela.io/docs/platform-engineers/addon/addon-cue/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"Grant privileges for user/group/serviceaccount\"?\n\nAssistant: This documentation page covers how to grant privileges to users, groups, or service accounts in KubeVela, including options for namespace and cluster scope.\n\nHere's a detailed explanation:\n\n\n## Synopsis\nGrant privileges to user/group/serviceaccount. By using --for-namespace and --for-cluster, you can grant all read/write privileges for all resources in the specified namespace and cluster. If --for-namespace is not set, the privileges will be granted cluster-wide.\n\nSetting --create-namespace will automatically create namespace if the namespace of the granted privilege does not exists. By default, this flag is not enabled and errors will be returned if the namespace is not found in the corresponding cluster.\n\nSetting --readonly will only grant read privileges for all resources in the destination. This can be useful if you want to give somebody the privileges to view resources but do not want to allow them to edit any resource.\n\nIf multiple identity information are set, all the identity information will be bond to the intended privileges respectively.\n\nIf --kubeconfig is set, the user/serviceaccount information in the kubeconfig will be used as the identity to grant privileges. Groups will be ignored.\n\n## Examples\n# Grant privileges for User alice in the namespace demo of the control plane\nvela auth grant-privileges --user alice --for-namespace demo\n\n# Grant privileges for User alice in the namespace demo in cluster-1, create demo namespace if not exist\nvela auth grant-privileges --user alice --for-namespace demo --for-cluster cluster-1 --create-namespace\n\n# Grant cluster-scoped privileges for Group org:dev-team in the control plane\nvela auth grant-privileges --group org:dev-team\n\n# Grant privileges for Group org:dev-team and org:test-team in the namespace test on the control plane and managed cluster example-cluster\nvela auth grant-privileges --group org:dev-team --group org:test-team --for-namespace test --for-cluster local --for-cluster example-cluster\n\n# Grant read privileges for ServiceAccount observer in test namespace on the control plane\nvela auth grant-privileges --serviceaccount observer -n test --for-namespace test --readonly\n\n# Grant privileges for identity in kubeconfig in cluster-1\nvela auth grant-privileges --kubeconfig ./example.kubeconfig --for-cluster cluster-1\n\n## Options\n--create-namespace If set, non-exist namespace will be created automatically.\n-e, --env string The environment name for the CLI request\n--for-cluster strings The clusters privileges to grant. If empty, the control plane will be used.\n--for-namespace strings The namespaces privileges to grant. If empty, cluster-scoped privileges will be granted.\n-g, --group strings The group to grant privileges.\n-h, --help help for grant-privileges\n--kubeconfig string The kubeconfig to grant privileges. If set, it will override all the other identity flags.\n-n, --namespace --serviceaccount The namespace of the serviceaccount. This flag only works when --serviceaccount is set.\n--readonly If set, only read privileges of resources will be granted. Otherwise, read/write privileges will be granted.\n--serviceaccount string The serviceaccount to grant privileges.\n-u, --user string The user to grant privileges.\n\n## Options inherited from parent commands\n-V, --verbosity Level number for the log level verbosity\n-y, --yes Assume yes for all user prompts\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.9/cli/vela_auth_grant-privileges", "title": "Grant privileges for user/group/serviceaccount", "description": "This documentation page covers how to grant privileges to users, groups, or service accounts in KubeVela, including options for namespace and cluster scope.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 16:35:35", "type": "overview", "page_metadata": {"ogTitle": "vela auth grant-privileges | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "og:description": "Grant privileges for user/group/serviceaccount", "docusaurus_version": "v1.9", "ogDescription": "Grant privileges for user/group/serviceaccount", "docusaurus_locale": "en", "docsearch:language": "en", "description": "Grant privileges for user/group/serviceaccount", "twitter:card": "summary_large_image", "theme-color": "#ffffff", "docsearch:docusaurus_tag": "docs-default-v1.9", "og:title": "vela auth grant-privileges | KubeVela", "generator": "Docusaurus v2.4.3", "docusaurus_tag": "docs-default-v1.9", "og:url": "https://kubevela.io/docs/v1.9/cli/vela_auth_grant-privileges/", "msapplication-config": "/img/favicons/browserconfig.xml", "viewport": "width=device-width, initial-scale=1.0", "title": "vela auth grant-privileges | KubeVela", "language": "en", "ogUrl": "https://kubevela.io/docs/v1.9/cli/vela_auth_grant-privileges/", "docsearch:version": "v1.9", "scrapeId": "1de8e1f3-597f-4ee3-a9d9-29b305ee20bf", "sourceURL": "https://kubevela.io/docs/v1.9/cli/vela_auth_grant-privileges", "url": "https://kubevela.io/docs/v1.9/cli/vela_auth_grant-privileges/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"Grant privileges for user/group/serviceaccount\"?\n\nAssistant: Here are some code examples:\n\n### Basic Command\n```yaml\nvela auth grant-privileges\n```\n\n### Grant privileges for User alice in the namespace demo\n```yaml\nvela auth grant-privileges --user alice --for-namespace demo\n```\n\n### Grant privileges for User alice in the namespace demo in cluster-1\n```yaml\nvela auth grant-privileges --user alice --for-namespace demo --for-cluster cluster-1 --create-namespace\n```\n\n### Grant cluster-scoped privileges for Group org:dev-team\n```yaml\nvela auth grant-privileges --group org:dev-team\n```\n\n### Grant privileges for Group org:dev-team and org:test-team\n```yaml\nvela auth grant-privileges --group org:dev-team --group org:test-team --for-namespace test --for-cluster local --for-cluster example-cluster\n```\n\n### Grant read privileges for ServiceAccount observer\n```yaml\nvela auth grant-privileges --serviceaccount observer -n test --for-namespace test --readonly\n```\n\n### Grant privileges for identity in kubeconfig\n```yaml\nvela auth grant-privileges --kubeconfig ./example.kubeconfig --for-cluster cluster-1\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.9/cli/vela_auth_grant-privileges", "title": "Grant privileges for user/group/serviceaccount", "description": "This documentation page covers how to grant privileges to users, groups, or service accounts in KubeVela, including options for namespace and cluster scope.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 16:35:35", "type": "code_examples", "page_metadata": {"ogTitle": "vela auth grant-privileges | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "og:description": "Grant privileges for user/group/serviceaccount", "docusaurus_version": "v1.9", "ogDescription": "Grant privileges for user/group/serviceaccount", "docusaurus_locale": "en", "docsearch:language": "en", "description": "Grant privileges for user/group/serviceaccount", "twitter:card": "summary_large_image", "theme-color": "#ffffff", "docsearch:docusaurus_tag": "docs-default-v1.9", "og:title": "vela auth grant-privileges | KubeVela", "generator": "Docusaurus v2.4.3", "docusaurus_tag": "docs-default-v1.9", "og:url": "https://kubevela.io/docs/v1.9/cli/vela_auth_grant-privileges/", "msapplication-config": "/img/favicons/browserconfig.xml", "viewport": "width=device-width, initial-scale=1.0", "title": "vela auth grant-privileges | KubeVela", "language": "en", "ogUrl": "https://kubevela.io/docs/v1.9/cli/vela_auth_grant-privileges/", "docsearch:version": "v1.9", "scrapeId": "1de8e1f3-597f-4ee3-a9d9-29b305ee20bf", "sourceURL": "https://kubevela.io/docs/v1.9/cli/vela_auth_grant-privileges", "url": "https://kubevela.io/docs/v1.9/cli/vela_auth_grant-privileges/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"Grant privileges for user/group/serviceaccount\"?\n\nAssistant: Here are the recommended best practices:\n\n• Use --readonly flag to grant only read privileges when necessary.\n• Always check if the namespace exists before granting privileges to avoid errors.\n• Utilize --create-namespace to automatically create namespaces when granting privileges.\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.9/cli/vela_auth_grant-privileges", "title": "Grant privileges for user/group/serviceaccount", "description": "This documentation page covers how to grant privileges to users, groups, or service accounts in KubeVela, including options for namespace and cluster scope.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 16:35:35", "type": "best_practices", "page_metadata": {"ogTitle": "vela auth grant-privileges | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "og:description": "Grant privileges for user/group/serviceaccount", "docusaurus_version": "v1.9", "ogDescription": "Grant privileges for user/group/serviceaccount", "docusaurus_locale": "en", "docsearch:language": "en", "description": "Grant privileges for user/group/serviceaccount", "twitter:card": "summary_large_image", "theme-color": "#ffffff", "docsearch:docusaurus_tag": "docs-default-v1.9", "og:title": "vela auth grant-privileges | KubeVela", "generator": "Docusaurus v2.4.3", "docusaurus_tag": "docs-default-v1.9", "og:url": "https://kubevela.io/docs/v1.9/cli/vela_auth_grant-privileges/", "msapplication-config": "/img/favicons/browserconfig.xml", "viewport": "width=device-width, initial-scale=1.0", "title": "vela auth grant-privileges | KubeVela", "language": "en", "ogUrl": "https://kubevela.io/docs/v1.9/cli/vela_auth_grant-privileges/", "docsearch:version": "v1.9", "scrapeId": "1de8e1f3-597f-4ee3-a9d9-29b305ee20bf", "sourceURL": "https://kubevela.io/docs/v1.9/cli/vela_auth_grant-privileges", "url": "https://kubevela.io/docs/v1.9/cli/vela_auth_grant-privileges/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela CLI: Export Multi-Cluster Kubeconfig\"?\n\nAssistant: This documentation page covers how to export multi-cluster kubeconfig using KubeVela CLI commands.\n\nHere's a detailed explanation:\n\n\n## Export multi-cluster kubeconfig\nLoad existing cluster kubeconfig and list clusters registered in KubeVela. Export the proxy access of these clusters to KubeConfig and print it out.\n\n## Examples\n```codeBlockLines_e6Vv\n  # Export all clusters to kubeconfig\n  vela cluster export-config\n\n  # Export clusters with specified kubeconfig\n  KUBECONFIG=./my-hub-cluster.kubeconfig vela cluster export-config\n\n  # Export clusters with specified labels\n  vela cluster export-config -l gpu-cluster=true\n\n  # Export clusters to kubeconfig and save in file\n  vela cluster export-config > my-vela.kubeconfig\n\n  # Use the exported kubeconfig in kubectl\n  KUBECONFIG=my-vela.kubeconfig kubectl get namespaces --cluster c2\n```\n\n## Options\n```codeBlockLines_e6Vv\n  -h, --help              help for export-config\n  -l, --selector string   LabelSelector for select clusters to export.\n```\n\n## Options inherited from parent commands\n```codeBlockLines_e6Vv\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n\n## SEE ALSO\n- [vela cluster](https://kubevela.io/docs/v1.9/cli/vela_cluster/) \\- Manage Kubernetes clusters.\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.9/cli/vela_cluster_export-config", "title": "KubeVela CLI: Export Multi-Cluster Kubeconfig", "description": "This documentation page covers how to export multi-cluster kubeconfig using KubeVela CLI commands.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 16:35:42", "type": "overview", "page_metadata": {"msapplication-config": "/img/favicons/browserconfig.xml", "viewport": "width=device-width, initial-scale=1.0", "docusaurus_locale": "en", "twitter:card": "summary_large_image", "ogUrl": "https://kubevela.io/docs/v1.9/cli/vela_cluster_export-config/", "og:url": "https://kubevela.io/docs/v1.9/cli/vela_cluster_export-config/", "docusaurus_version": "v1.9", "og:description": "Export multi-cluster kubeconfig.", "og:title": "vela cluster export-config | KubeVela", "ogTitle": "vela cluster export-config | KubeVela", "generator": "Docusaurus v2.4.3", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "language": "en", "description": "Export multi-cluster kubeconfig.", "docsearch:language": "en", "docusaurus_tag": "docs-default-v1.9", "docsearch:version": "v1.9", "theme-color": "#ffffff", "ogDescription": "Export multi-cluster kubeconfig.", "docsearch:docusaurus_tag": "docs-default-v1.9", "title": "vela cluster export-config | KubeVela", "scrapeId": "f3427c0e-45c1-40b4-97ae-fc76c64eaf41", "sourceURL": "https://kubevela.io/docs/v1.9/cli/vela_cluster_export-config", "url": "https://kubevela.io/docs/v1.9/cli/vela_cluster_export-config/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"KubeVela CLI: Export Multi-Cluster Kubeconfig\"?\n\nAssistant: Here are some code examples:\n\n### Export all clusters to kubeconfig\n```yaml\nvela cluster export-config\n```\n\n### Export clusters with specified kubeconfig\n```yaml\nKUBECONFIG=./my-hub-cluster.kubeconfig vela cluster export-config\n```\n\n### Export clusters with specified labels\n```yaml\nvela cluster export-config -l gpu-cluster=true\n```\n\n### Export clusters to kubeconfig and save in file\n```yaml\nvela cluster export-config > my-vela.kubeconfig\n```\n\n### Use the exported kubeconfig in kubectl\n```yaml\nKUBECONFIG=my-vela.kubeconfig kubectl get namespaces --cluster c2\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.9/cli/vela_cluster_export-config", "title": "KubeVela CLI: Export Multi-Cluster Kubeconfig", "description": "This documentation page covers how to export multi-cluster kubeconfig using KubeVela CLI commands.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 16:35:42", "type": "code_examples", "page_metadata": {"msapplication-config": "/img/favicons/browserconfig.xml", "viewport": "width=device-width, initial-scale=1.0", "docusaurus_locale": "en", "twitter:card": "summary_large_image", "ogUrl": "https://kubevela.io/docs/v1.9/cli/vela_cluster_export-config/", "og:url": "https://kubevela.io/docs/v1.9/cli/vela_cluster_export-config/", "docusaurus_version": "v1.9", "og:description": "Export multi-cluster kubeconfig.", "og:title": "vela cluster export-config | KubeVela", "ogTitle": "vela cluster export-config | KubeVela", "generator": "Docusaurus v2.4.3", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "language": "en", "description": "Export multi-cluster kubeconfig.", "docsearch:language": "en", "docusaurus_tag": "docs-default-v1.9", "docsearch:version": "v1.9", "theme-color": "#ffffff", "ogDescription": "Export multi-cluster kubeconfig.", "docsearch:docusaurus_tag": "docs-default-v1.9", "title": "vela cluster export-config | KubeVela", "scrapeId": "f3427c0e-45c1-40b4-97ae-fc76c64eaf41", "sourceURL": "https://kubevela.io/docs/v1.9/cli/vela_cluster_export-config", "url": "https://kubevela.io/docs/v1.9/cli/vela_cluster_export-config/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela CLI: Export Multi-Cluster Kubeconfig\"?\n\nAssistant: Here are the recommended best practices:\n\n• For exporting clusters, ensure you have the correct kubeconfig file specified if not using the default.\n• Use label selectors to filter the clusters you want to export.\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.9/cli/vela_cluster_export-config", "title": "KubeVela CLI: Export Multi-Cluster Kubeconfig", "description": "This documentation page covers how to export multi-cluster kubeconfig using KubeVela CLI commands.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 16:35:42", "type": "best_practices", "page_metadata": {"msapplication-config": "/img/favicons/browserconfig.xml", "viewport": "width=device-width, initial-scale=1.0", "docusaurus_locale": "en", "twitter:card": "summary_large_image", "ogUrl": "https://kubevela.io/docs/v1.9/cli/vela_cluster_export-config/", "og:url": "https://kubevela.io/docs/v1.9/cli/vela_cluster_export-config/", "docusaurus_version": "v1.9", "og:description": "Export multi-cluster kubeconfig.", "og:title": "vela cluster export-config | KubeVela", "ogTitle": "vela cluster export-config | KubeVela", "generator": "Docusaurus v2.4.3", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "language": "en", "description": "Export multi-cluster kubeconfig.", "docsearch:language": "en", "docusaurus_tag": "docs-default-v1.9", "docsearch:version": "v1.9", "theme-color": "#ffffff", "ogDescription": "Export multi-cluster kubeconfig.", "docsearch:docusaurus_tag": "docs-default-v1.9", "title": "vela cluster export-config | KubeVela", "scrapeId": "f3427c0e-45c1-40b4-97ae-fc76c64eaf41", "sourceURL": "https://kubevela.io/docs/v1.9/cli/vela_cluster_export-config", "url": "https://kubevela.io/docs/v1.9/cli/vela_cluster_export-config/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"Resource Adoption in KubeVela\"?\n\nAssistant: This page covers how to use KubeVela application to adopt existing resources or from other sources like Helm release, including policies for resource adoption.\n\nHere's a detailed explanation:\n\n\n## Use in Application\nBy default, when KubeVela application tries to dispatch (create or update) one resource, it will first check if this resource belongs to itself. This check is done by comparing the label values of `app.oam.dev/name` & `app.oam.dev/namespace` and see whether they are equal to the application's name & namespace.\n\nIf this resource does not belong to the application itself (belongs to no one or some other application), the application will stop the dispatch operation and report an error. This mechanism is designed to prevent unintended edits to resources managed by other operators or systems.\n\nIf the resource is currently managed by other applications, you can refer to [shared-resource](https://kubevela.io/docs/end-user/policies/shared-resource/) policy and read more about sharing resources across multiple applications.\n\nIf the resource is managed by no one, to allow KubeVela application to manage the resource, you can leverage the `read-only` policy or `take-over` policy to enforce resource adoption on these resources.\n\n## ReadOnly Policy\nWith `read-only` policy, you can select resources that could be adopted by the current application. For example, in the below application, Deployment typed resources are treated as read-only resources and are able to be adopted by the given application.\n\n```yaml\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: read-only\nspec:\n  components:\n    - name: nginx\n      type: webservice\n      properties:\n        image: nginx\n  policies:\n    - type: read-only\n      name: read-only\n      properties:\n        rules:\n          - selector:\n              resourceTypes: [\"Deployment\"]\n```\n\nThe `read-only` policy allows application to read the selected resources but will skip all edits to the target resource. Error will be reported if the target resource does not exist.\n\nThe target resource will **NOT** be attached with the application's label. It is possible for multiple applications to use the same resource with `read-only` policy concurrently. The deletion of the application will also skip the recycle process of the target resources.\n\nAlthough the resources selected in the `read-only` policy will not be editable through application, both health check and resource topology graph can work normally. Therefore, you can use KubeVela application with `read-only` policy to build \"monitoring group\" for underlying resources and leverage tools such as `vela top` or `velaux` to observe them, without any modification.\n\n## TakeOver Policy\nIn the case you not only want KubeVela application to observe underlying resource but also want the application to be able to edit them, you can use the `take-over` policy in replace of the `read-only` policy.\n\n```yaml\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: take-over\nspec:\n  components:\n    - name: nginx-take-over\n      type: k8s-objects\n      properties:\n        objects:\n          - apiVersion: apps/v1\n            kind: Deployment\n            metadata:\n              name: nginx\n      traits:\n        - type: scaler\n          properties:\n            replicas: 3\n  policies:\n    - type: take-over\n      name: take-over\n      properties:\n        rules:\n          - selector:\n              resourceTypes: [\"Deployment\"]\n```\n\nIn the above application, the `nginx` deployment will be added with owner labels and marked as belonged to the current app. The attached `scaler` trait in the application will modify the replica number of the target deployment to 3, while keeping all other fields untouched.\n\nAfter the resource is taken over by the application, the application will control the upgrades and deletion of the target resource. Therefore, differ from `read-only` policy, each resource can only be managed by one application with `take-over` policy.\n\nThe `take-over` policy is helpful when you want to let the application to take the complete control for the given resources.\n\n## Use in CLI\nThe `read-only` policy and `take-over` policy provide a way for users to directly adopt resources within KubeVela application api. If you prefer directly build KubeVela application by existing resources from scratch, you can use the `vela adopt` CLI command.\n\n## Adopt Native Resource\nBy providing a list of native Kubernetes resources, `vela adopt` command can help you automatically adopt those resources in an application. You can follow the below procedure to try it out.\n\n1. Create some resources for adoption.\n\n```bash\nkubectl create deploy example --image=nginx\nkubectl create service clusterip example --tcp=80:80\nkubectl create configmap example\nkubectl create secret generic example\n```\n\n2. Run `vela adopt` command to create an application that contains all the resource mentioned above.\n\n```bash\nvela adopt deployment/example service/example configmap/example secret/example\n```\n\nexpected output\n\n```yaml\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  creationTimestamp: null\n  labels:\n    app.oam.dev/adopt: native\n  name: example\n  namespace: default\nspec:\n  components:\n  - name: example.Deployment.example\n    properties:\n      objects:\n      - apiVersion: apps/v1\n        kind: Deployment\n        metadata:\n          name: example\n          namespace: default\n        spec:\n          progressDeadlineSeconds: 600\n          replicas: 1\n          revisionHistoryLimit: 10\n          selector:\n            matchLabels:\n              app: example\n          strategy:\n            rollingUpdate:\n              maxSurge: 25%\n              maxUnavailable: 25%\n            type: RollingUpdate\n          template:\n            metadata:\n              creationTimestamp: null\n              labels:\n                app: example\n            spec:\n              containers:\n              - image: nginx\n                imagePullPolicy: Always\n                name: nginx\n                resources: {}\n                terminationMessagePath: /dev/termination-log\n                terminationMessagePolicy: File\n              dnsPolicy: ClusterFirst\n              restartPolicy: Always\n              schedulerName: default-scheduler\n              securityContext: {}\n              terminationGracePeriodSeconds: 30\n    type: k8s-objects\n  - name: example.Service.example\n    properties:\n      objects:\n      - apiVersion: v1\n        kind: Service\n        metadata:\n          name: example\n          namespace: default\n        spec:\n          clusterIP: 10.43.65.46\n          clusterIPs:\n          - 10.43.65.46\n          internalTrafficPolicy: Cluster\n          ipFamilies:\n          - IPv4\n          ipFamilyPolicy: SingleStack\n          ports:\n          - name: 80-80\n            port: 80\n            protocol: TCP\n            targetPort: 80\n          selector:\n            app: example\n          sessionAffinity: None\n          type: ClusterIP\n    type: k8s-objects\n  - name: example.config\n    properties:\n      objects:\n      - apiVersion: v1\n        kind: ConfigMap\n        metadata:\n          name: example\n          namespace: default\n      - apiVersion: v1\n        kind: Secret\n        metadata:\n          name: example\n          namespace: default\n    type: k8s-objects\n  policies:\n  - name: read-only\n    properties:\n      rules:\n      - selector:\n          componentNames:\n          - example.Deployment.example\n          - example.Service.example\n          - example.config\n    type: read-only\nstatus: {}\n```\n\nBy default, the application first embeds all the given resources in its components. Then it attaches the `read-only` policy. You can edit the returned configuration and make your own adoption application. Or you can directly apply this application with the `--apply` arg.\n\n## Adopt Helm Release\n`vela adopt` also supports directly reading native resources from existing helm release. This is helpful if you previously deployed resources through helm.\n\n1. For example, you can firstly deploy a mysql instance through helm.\n\n```bash\nhelm repo add bitnami https://charts.bitnami.com/bitnami\nhelm repo update\nhelm install mysql bitnami/mysql\n```\n\n2. You can validate the installation through `helm ls`.\n\n```bash\nhelm ls\n```\n\n```bash\nNAME    NAMESPACE       REVISION        UPDATED                                 STATUS          CHART           APP VERSION\nmysql   default         1               2023-01-11 14:34:36.653778 +0800 CST    deployed        mysql-9.4.6     8.0.31\n```\n\n2. Run `vela adopt` command to adopt resources from existing release. Similar to native resource adoption, you can get a KubeVela application with `read-only` policy.\n\n```bash\nvela adopt mysql --type helm\n```\n\nexpected output\n\n```yaml\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  creationTimestamp: null\n  labels:\n    app.oam.dev/adopt: helm\n  name: mysql\n  namespace: default\nspec:\n  components:\n  - name: mysql.StatefulSet.mysql\n    properties:\n      objects:\n      - apiVersion: apps/v1\n        kind: StatefulSet\n        metadata:\n          name: mysql\n          namespace: default\n        spec:\n          podManagementPolicy: \"\"\n          replicas: 1\n          selector:\n            matchLabels:\n              app.kubernetes.io/component: primary\n              app.kubernetes.io/instance: mysql\n              app.kubernetes.io/name: mysql\n          serviceName: mysql\n          template:\n            metadata:\n              annotations:\n                checksum/configuration: f8f3ad4a6e3ad93ae6ed28fdb7f7b4ff9585e08fa730e4e5845db5ebe5601e4d\n              labels:\n                app.kubernetes.io/component: primary\n                app.kubernetes.io/instance: mysql\n                app.kubernetes.io/managed-by: Helm\n                app.kubernetes.io/name: mysql\n                helm.sh/chart: mysql-9.4.6\n            spec:\n              affinity:\n                nodeAffinity: null\n                podAffinity: null\n                podAntiAffinity:\n                  preferredDuringSchedulingIgnoredDuringExecution:\n                  - podAffinityTerm:\n                      labelSelector:\n                        matchLabels:\n                          app.kubernetes.io/instance: mysql\n                          app.kubernetes.io/name: mysql\n                      topologyKey: kubernetes.io/hostname\n                    weight: 1\n              containers:\n              - env:\n                - name: BITNAMI_DEBUG\n                  value: \"false\"\n                - name: MYSQL_ROOT_PASSWORD\n                  valueFrom:\n                    secretKeyRef:\n                      key: mysql-root-password\n                      name: mysql\n                - name: MYSQL_DATABASE\n                  value: my_database\n                envFrom: null\n                image: docker.io/bitnami/mysql:8.0.31-debian-11-r30\n                imagePullPolicy: IfNotPresent\n                livenessProbe:\n                  exec:\n                    command:\n                    - /bin/bash\n                    - -ec\n                    - |\n                      password_aux=\"${MYSQL_ROOT_PASSWORD:-}\"\n                      if [[ -f \"${MYSQL_ROOT_PASSWORD_FILE:-}\" ]]; then\n                          password_aux=$(cat \"$MYSQL_ROOT_PASSWORD_FILE\")\n                      fi\n                      mysqladmin status -uroot -p\"${password_aux}\"\n                  failureThreshold: 3\n                  initialDelaySeconds: 5\n                  periodSeconds: 10\n                  successThreshold: 1\n                  timeoutSeconds: 1\n                name: mysql\n                ports:\n                - containerPort: 3306\n                  name: mysql\n                readinessProbe:\n                  exec:\n                    command:\n                    - /bin/bash\n                    - -ec\n                    - |\n                      password_aux=\"${MYSQL_ROOT_PASSWORD:-}\"\n                      if [[ -f \"${MYSQL_ROOT_PASSWORD_FILE:-}\" ]]; then\n                          password_aux=$(cat \"$MYSQL_ROOT_PASSWORD_FILE\")\n                      fi\n                      mysqladmin status -uroot -p\"${password_aux}\"\n                  failureThreshold: 3\n                  initialDelaySeconds: 5\n                  periodSeconds: 10\n                  successThreshold: 1\n                  timeoutSeconds: 1\n                resources:\n                  limits: {}\n                  requests: {}\n                securityContext:\n                  runAsNonRoot: true\n                  runAsUser: 1001\n                startupProbe:\n                  exec:\n                    command:\n                    - /bin/bash\n                    - -ec\n                    - |\n                      password_aux=\"${MYSQL_ROOT_PASSWORD:-}\"\n                      if [[ -f \"${MYSQL_ROOT_PASSWORD_FILE:-}\" ]]; then\n                          password_aux=$(cat \"$MYSQL_ROOT_PASSWORD_FILE\")\n                      fi\n                      mysqladmin status -uroot -p\"${password_aux}\"\n                  failureThreshold: 10\n                  initialDelaySeconds: 15\n                  periodSeconds: 10\n                  successThreshold: 1\n                  timeoutSeconds: 1\n                volumeMounts:\n                - mountPath: /bitnami/mysql\n                  name: data\n                - mountPath: /opt/bitnami/mysql/conf/my.cnf\n                  name: config\n                  subPath: my.cnf\n              initContainers: null\n              securityContext:\n                fsGroup: 1001\n              serviceAccountName: mysql\n              volumes:\n              - configMap:\n                  name: mysql\n                name: config\n          updateStrategy:\n            type: RollingUpdate\n          volumeClaimTemplates:\n          - metadata:\n              annotations: null\n              labels:\n                app.kubernetes.io/component: primary\n                app.kubernetes.io/instance: mysql\n                app.kubernetes.io/name: mysql\n              name: data\n            spec:\n              accessModes:\n              - ReadWriteOnce\n              resources:\n                requests:\n                  storage: 8Gi\n    type: k8s-objects\n  - name: mysql.Service.mysql\n    properties:\n      objects:\n      - apiVersion: v1\n        kind: Service\n        metadata:\n          name: mysql\n          namespace: default\n        spec:\n          ports:\n          - name: mysql\n            nodePort: null\n            port: 3306\n            protocol: TCP\n            targetPort: mysql\n          selector:\n            app.kubernetes.io/component: primary\n            app.kubernetes.io/instance: mysql\n            app.kubernetes.io/name: mysql\n          sessionAffinity: None\n          type: ClusterIP\n    type: k8s-objects\n  - name: mysql.Service.mysql-headless\n    properties:\n      objects:\n      - apiVersion: v1\n        kind: Service\n        metadata:\n          name: mysql-headless\n          namespace: default\n        spec:\n          clusterIP: None\n          ports:\n          - name: mysql\n            port: 3306\n            targetPort: mysql\n          publishNotReadyAddresses: true\n          selector:\n            app.kubernetes.io/component: primary\n            app.kubernetes.io/instance: mysql\n            app.kubernetes.io/name: mysql\n          type: ClusterIP\n    type: k8s-objects\n  - name: mysql.config\n    properties:\n      objects:\n      - apiVersion: v1\n        kind: Secret\n        metadata:\n          name: mysql\n          namespace: default\n      - apiVersion: v1\n        kind: ConfigMap\n        metadata:\n          name: mysql\n          namespace: default\n    type: k8s-objects\n  - name: mysql.sa\n    properties:\n      objects:\n      - apiVersion: v1\n        kind: Secret\n        metadata:\n          name: mysql\n          namespace: default\n      - apiVersion: v1\n        kind: ConfigMap\n        metadata:\n          name: mysql\n          namespace: default\n    type: k8s-objects\n  policies:\n  - name: read-only\n    properties:\n      rules:\n      - selector:\n          componentNames:\n          - mysql.StatefulSet.mysql\n          - mysql.Service.mysql\n          - mysql.Service.mysql-headless\n          - mysql.config\n          - mysql.sa\n    type: read-only\nstatus: {}\n```\n\n3. You can similarly use `--apply` parameter to apply the application into cluster and use `--mode=take-over` to allow modifications by enforcing `take-over` policy. In addition to that, if you want to completely adopt resources in helm chart into KubeVela application and disable the management of that helm chart (prevent multiple sources), you can add `--recycle` flag to remove the helm release secret after the application has entered running status.\n\n## Customized Adoption\nBy default, `vela adopt` will take resources from given source (native resource list or helm chart) and group them into different components. For resources like Deployments or Statefulsets, the original spec will be reserved. For other resources like ConfigMap or Secret, the data will not be recorded in the adoption application (which means the application does not care for the content in them). For special resources (CustomResourceDefinition), the `garbage-collect` and `apply-once` policy will be additionally attached in the application.\n\nThe conversion from resources into application is achieved by using the CUE template. You can refer to [GitHub](https://github.com/kubevela/kubevela/blob/master/references/cli/adopt-templates/default.cue) to see the default template.\n\nYou can also build your own adoption rule using CUE and add `--adopt-template` to `vela adopt` command.\n\n## Adopt All Resources\nIf you want to adopt all resources in a namespace, you can use `--all` flag.\n\n```bash\nvela adopt --all\n```\n\nBy default, it will adopt all Deployment/StatefulSet/DaemonSet resources in the namespace. You can also specify a Custom Resource to adopt.\n", "metadata": {"source_url": "https://kubevela.io/docs/end-user/policies/resource-adoption", "title": "Resource Adoption in KubeVela", "description": "This page covers how to use KubeVela application to adopt existing resources or from other sources like Helm release, including policies for resource adoption.", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-02-28 16:37:15", "type": "overview", "page_metadata": {"docusaurus_locale": "en", "docsearch:version": "v1.10", "og:url": "https://kubevela.io/docs/end-user/policies/resource-adoption/", "description": "There are times that you might want to use KubeVela application to adopt existing resources or from other sources like Helm release. In this case, you can leverage the capability of resource adoption in KubeVela.", "og:description": "There are times that you might want to use KubeVela application to adopt existing resources or from other sources like Helm release. In this case, you can leverage the capability of resource adoption in KubeVela.", "title": "Resource Adoption | KubeVela", "docsearch:language": "en", "ogUrl": "https://kubevela.io/docs/end-user/policies/resource-adoption/", "docusaurus_version": "v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "ogDescription": "There are times that you might want to use KubeVela application to adopt existing resources or from other sources like Helm release. In this case, you can leverage the capability of resource adoption in KubeVela.", "viewport": "width=device-width, initial-scale=1.0", "docusaurus_tag": "docs-default-v1.10", "ogTitle": "Resource Adoption | KubeVela", "twitter:card": "summary_large_image", "theme-color": "#ffffff", "generator": "Docusaurus v2.4.3", "docsearch:docusaurus_tag": "docs-default-v1.10", "language": "en", "og:title": "Resource Adoption | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "scrapeId": "6d71c8ce-9c9b-48af-bad1-8aa62c22bed5", "sourceURL": "https://kubevela.io/docs/end-user/policies/resource-adoption", "url": "https://kubevela.io/docs/end-user/policies/resource-adoption/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"Resource Adoption in KubeVela\"?\n\nAssistant: Here are some code examples:\n\n### ReadOnly Policy Example\n```yaml\n```yaml\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: read-only\nspec:\n  components:\n    - name: nginx\n      type: webservice\n      properties:\n        image: nginx\n  policies:\n    - type: read-only\n      name: read-only\n      properties:\n        rules:\n          - selector:\n              resourceTypes: [\"Deployment\"]\n```\n```\n\n### TakeOver Policy Example\n```yaml\n```yaml\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: take-over\nspec:\n  components:\n    - name: nginx-take-over\n      type: k8s-objects\n      properties:\n        objects:\n          - apiVersion: apps/v1\n            kind: Deployment\n            metadata:\n              name: nginx\n      traits:\n        - type: scaler\n          properties:\n            replicas: 3\n  policies:\n    - type: take-over\n      name: take-over\n      properties:\n        rules:\n          - selector:\n              resourceTypes: [\"Deployment\"]\n```\n```\n\n### Adopt Native Resource Example\n```yaml\n```bash\nkubectl create deploy example --image=nginx\nkubectl create service clusterip example --tcp=80:80\nkubectl create configmap example\nkubectl create secret generic example\n```\n\n```bash\nvela adopt deployment/example service/example configmap/example secret/example\n```\n```\n\n### Adopt Helm Release Example\n```yaml\n```bash\nhelm repo add bitnami https://charts.bitnami.com/bitnami\nhelm repo update\nhelm install mysql bitnami/mysql\n```\n\n```bash\nvela adopt mysql --type helm\n```\n```\n\n### Customized Adoption Example\n```yaml\n```bash\nkubectl create deploy custom-adopt --image=nginx\n```\n\n```bash\nvela adopt deployment/custom-adopt --adopt-template=my-adopt-rule.cue\n```\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/end-user/policies/resource-adoption", "title": "Resource Adoption in KubeVela", "description": "This page covers how to use KubeVela application to adopt existing resources or from other sources like Helm release, including policies for resource adoption.", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-02-28 16:37:15", "type": "code_examples", "page_metadata": {"docusaurus_locale": "en", "docsearch:version": "v1.10", "og:url": "https://kubevela.io/docs/end-user/policies/resource-adoption/", "description": "There are times that you might want to use KubeVela application to adopt existing resources or from other sources like Helm release. In this case, you can leverage the capability of resource adoption in KubeVela.", "og:description": "There are times that you might want to use KubeVela application to adopt existing resources or from other sources like Helm release. In this case, you can leverage the capability of resource adoption in KubeVela.", "title": "Resource Adoption | KubeVela", "docsearch:language": "en", "ogUrl": "https://kubevela.io/docs/end-user/policies/resource-adoption/", "docusaurus_version": "v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "ogDescription": "There are times that you might want to use KubeVela application to adopt existing resources or from other sources like Helm release. In this case, you can leverage the capability of resource adoption in KubeVela.", "viewport": "width=device-width, initial-scale=1.0", "docusaurus_tag": "docs-default-v1.10", "ogTitle": "Resource Adoption | KubeVela", "twitter:card": "summary_large_image", "theme-color": "#ffffff", "generator": "Docusaurus v2.4.3", "docsearch:docusaurus_tag": "docs-default-v1.10", "language": "en", "og:title": "Resource Adoption | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "scrapeId": "6d71c8ce-9c9b-48af-bad1-8aa62c22bed5", "sourceURL": "https://kubevela.io/docs/end-user/policies/resource-adoption", "url": "https://kubevela.io/docs/end-user/policies/resource-adoption/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"Resource Adoption in KubeVela\"?\n\nAssistant: Here are the recommended best practices:\n\n• If you want to use Helm to control the release process of charts and use KubeVela to monitor those resources, you can use the default mode ( `read-only`) and do not recycle the helm release secret.\n• If you want to migrate existing resources from Helm Chart to KubeVela application, you can use the `take-over` mode and use the `--apply` flag to recycle helm release records.\n", "metadata": {"source_url": "https://kubevela.io/docs/end-user/policies/resource-adoption", "title": "Resource Adoption in KubeVela", "description": "This page covers how to use KubeVela application to adopt existing resources or from other sources like Helm release, including policies for resource adoption.", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-02-28 16:37:15", "type": "best_practices", "page_metadata": {"docusaurus_locale": "en", "docsearch:version": "v1.10", "og:url": "https://kubevela.io/docs/end-user/policies/resource-adoption/", "description": "There are times that you might want to use KubeVela application to adopt existing resources or from other sources like Helm release. In this case, you can leverage the capability of resource adoption in KubeVela.", "og:description": "There are times that you might want to use KubeVela application to adopt existing resources or from other sources like Helm release. In this case, you can leverage the capability of resource adoption in KubeVela.", "title": "Resource Adoption | KubeVela", "docsearch:language": "en", "ogUrl": "https://kubevela.io/docs/end-user/policies/resource-adoption/", "docusaurus_version": "v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "ogDescription": "There are times that you might want to use KubeVela application to adopt existing resources or from other sources like Helm release. In this case, you can leverage the capability of resource adoption in KubeVela.", "viewport": "width=device-width, initial-scale=1.0", "docusaurus_tag": "docs-default-v1.10", "ogTitle": "Resource Adoption | KubeVela", "twitter:card": "summary_large_image", "theme-color": "#ffffff", "generator": "Docusaurus v2.4.3", "docsearch:docusaurus_tag": "docs-default-v1.10", "language": "en", "og:title": "Resource Adoption | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "scrapeId": "6d71c8ce-9c9b-48af-bad1-8aa62c22bed5", "sourceURL": "https://kubevela.io/docs/end-user/policies/resource-adoption", "url": "https://kubevela.io/docs/end-user/policies/resource-adoption/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"vela cluster probe\"?\n\nAssistant: health probe managed cluster.\n\nHere's a detailed explanation:\n\n\n## Synopsis\nhealth probe managed cluster.\n\n## Options\n```codeBlockLines_e6Vv\n  -h, --help   help for probe\n```\n\n## Options inherited from parent commands\n```codeBlockLines_e6Vv\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n\n## SEE ALSO\n- [vela cluster](https://kubevela.io/docs/cli/vela_cluster/) \\- Manage Kubernetes clusters.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_cluster_probe", "title": "vela cluster probe", "description": "health probe managed cluster.", "has_code_examples": true, "has_best_practices": false, "section_count": 4, "timestamp": "2025-02-28 16:38:03", "type": "overview", "page_metadata": {"msapplication-config": "/img/favicons/browserconfig.xml", "description": "health probe managed cluster.", "language": "en", "docusaurus_version": "v1.10", "generator": "Docusaurus v2.4.3", "docsearch:docusaurus_tag": "docs-default-v1.10", "viewport": "width=device-width, initial-scale=1.0", "ogTitle": "vela cluster probe | KubeVela", "twitter:card": "summary_large_image", "og:title": "vela cluster probe | KubeVela", "og:description": "health probe managed cluster.", "theme-color": "#ffffff", "title": "vela cluster probe | KubeVela", "og:url": "https://kubevela.io/docs/cli/vela_cluster_probe/", "docusaurus_tag": "docs-default-v1.10", "ogUrl": "https://kubevela.io/docs/cli/vela_cluster_probe/", "ogDescription": "health probe managed cluster.", "docsearch:version": "v1.10", "docusaurus_locale": "en", "docsearch:language": "en", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "scrapeId": "91bea207-531b-4817-a40a-c5e80adf73e7", "sourceURL": "https://kubevela.io/docs/cli/vela_cluster_probe", "url": "https://kubevela.io/docs/cli/vela_cluster_probe/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"vela cluster probe\"?\n\nAssistant: Here are some code examples:\n\n### vela cluster probe command\n```yaml\nvela cluster probe [CLUSTER_NAME] [flags]\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_cluster_probe", "title": "vela cluster probe", "description": "health probe managed cluster.", "has_code_examples": true, "has_best_practices": false, "section_count": 4, "timestamp": "2025-02-28 16:38:03", "type": "code_examples", "page_metadata": {"msapplication-config": "/img/favicons/browserconfig.xml", "description": "health probe managed cluster.", "language": "en", "docusaurus_version": "v1.10", "generator": "Docusaurus v2.4.3", "docsearch:docusaurus_tag": "docs-default-v1.10", "viewport": "width=device-width, initial-scale=1.0", "ogTitle": "vela cluster probe | KubeVela", "twitter:card": "summary_large_image", "og:title": "vela cluster probe | KubeVela", "og:description": "health probe managed cluster.", "theme-color": "#ffffff", "title": "vela cluster probe | KubeVela", "og:url": "https://kubevela.io/docs/cli/vela_cluster_probe/", "docusaurus_tag": "docs-default-v1.10", "ogUrl": "https://kubevela.io/docs/cli/vela_cluster_probe/", "ogDescription": "health probe managed cluster.", "docsearch:version": "v1.10", "docusaurus_locale": "en", "docsearch:language": "en", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "scrapeId": "91bea207-531b-4817-a40a-c5e80adf73e7", "sourceURL": "https://kubevela.io/docs/cli/vela_cluster_probe", "url": "https://kubevela.io/docs/cli/vela_cluster_probe/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"Addon YAML\"?\n\nAssistant: This documentation page provides details on how to create an addon in KubeVela, including the structure of application description files and examples of YAML configurations.\n\nHere's a detailed explanation:\n\n\n## Application template file (template.yaml)\nThe YAML typed application template file only accepts a KubeVela application that can contain components, policies or workflow. A simple example is as follows:\n\n```codeBlockLines_e6Vv\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: velaux\n  namespace: vela-system\nspec:\n  components:\n    - name: namespace\n      type: k8s-objects\n      properties:\n        objects:\n        - apiVersion: v1\n          kind: Namespace\n          metadata:\n            name: my-namespace\n```\n\nIn this example, we define the skeleton of an application. This application contains a `k8s-objects` typed component that contains one `namespace` typed resource. After the addon is enabled, this namespace will be applied to the clusters by KubeVela.\n\n## Resource files (YAML files in `resources/` folder)\nIn case your template file is too large, you can split the entire content of the application into multiple files under the `resources/` folder.\n\nYAML file in `resources/` folder must be Kubernetes objects, you can define many objects one by one in a file. These objects will be directly added to the application as a `K8s-objects` typed component during rendering. An example as follows:\n\n```codeBlockLines_e6Vv\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: my-service-account\n  namespace: default\nsecrets:\n- name: my-secret\n```\n\nIn this example, we define a ServiceAccount resource. The rendering result is:\n\n```codeBlockLines_e6Vv\nkind: Application\nmetadata:\n  name: example\n  namespace: vela-system\nspec:\n  components:\n    -\n    #   ...\n    #   other contents defined in template file\n    #   ...\n    - name: namespace\n      type: k8s-objects\n      components:\n        objects:\n        -  apiVersion: v1\n           kind: ServiceAccount\n           metadata:\n            name: my-service-account\n            namespace: default\n            secrets:\n            - name: my-secret\n```\n\nWe just use namespace and serviceAccount resources as an example here, other resources of an operator can also be defined in KubeVela application in the same way.\n\n## Example\nAn example is OCM. All files included in this addon are all YAML coded.\n\n- [Application template file (template.yaml)](https://kubevela.io/docs/platform-engineers/addon/addon-yaml/#application-template-file-templateyaml)\n- [Resource files (YAML files in `resources/` folder)](https://kubevela.io/docs/platform-engineers/addon/addon-yaml/#resource-files-yaml-files-in-resources-folder)\n- [Example](https://kubevela.io/docs/platform-engineers/addon/addon-yaml/#example)\n", "metadata": {"source_url": "https://kubevela.io/docs/platform-engineers/addon/addon-yaml", "title": "Addon YAML", "description": "This documentation page provides details on how to create an addon in KubeVela, including the structure of application description files and examples of YAML configurations.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 16:38:18", "type": "overview", "page_metadata": {"docusaurus_locale": "en", "ogTitle": "YAML based Addon Application | KubeVela", "og:description": "Make Your Own Addon introduces the basic structure of an addon, and illustrate that any Kubernetes operator to be installed of an addon should be defined in a KubeVela application. This doc will guide you with all the details of writing the application description file with YAML.", "msapplication-config": "/img/favicons/browserconfig.xml", "generator": "Docusaurus v2.4.3", "docusaurus_tag": "docs-default-v1.10", "docsearch:language": "en", "docusaurus_version": "v1.10", "docsearch:docusaurus_tag": "docs-default-v1.10", "twitter:card": "summary_large_image", "ogUrl": "https://kubevela.io/docs/platform-engineers/addon/addon-yaml/", "language": "en", "og:title": "YAML based Addon Application | KubeVela", "ogDescription": "Make Your Own Addon introduces the basic structure of an addon, and illustrate that any Kubernetes operator to be installed of an addon should be defined in a KubeVela application. This doc will guide you with all the details of writing the application description file with YAML.", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docsearch:version": "v1.10", "description": "Make Your Own Addon introduces the basic structure of an addon, and illustrate that any Kubernetes operator to be installed of an addon should be defined in a KubeVela application. This doc will guide you with all the details of writing the application description file with YAML.", "title": "YAML based Addon Application | KubeVela", "theme-color": "#ffffff", "viewport": "width=device-width, initial-scale=1.0", "og:url": "https://kubevela.io/docs/platform-engineers/addon/addon-yaml/", "scrapeId": "d81e6312-769c-4ede-8920-2e4afc491271", "sourceURL": "https://kubevela.io/docs/platform-engineers/addon/addon-yaml", "url": "https://kubevela.io/docs/platform-engineers/addon/addon-yaml/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"Addon YAML\"?\n\nAssistant: Here are some code examples:\n\n### Application Template Example\n```yaml\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: velaux\n  namespace: vela-system\nspec:\n  components:\n    - name: namespace\n      type: k8s-objects\n      properties:\n        objects:\n        - apiVersion: v1\n          kind: Namespace\n          metadata:\n            name: my-namespace\n\n```\n\n### ServiceAccount Resource Example\n```yaml\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: my-service-account\n  namespace: default\nsecrets:\n- name: my-secret\n\n```\n\n### Rendered Application Example\n```yaml\nkind: Application\nmetadata:\n  name: example\n  namespace: vela-system\nspec:\n  components:\n    -\n    #   ...\n    #   other contents defined in template file\n    #   ...\n    - name: namespace\n      type: k8s-objects\n      components:\n        objects:\n        -  apiVersion: v1\n           kind: ServiceAccount\n           metadata:\n            name: my-service-account\n            namespace: default\n            secrets:\n            - name: my-secret\n\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/platform-engineers/addon/addon-yaml", "title": "Addon YAML", "description": "This documentation page provides details on how to create an addon in KubeVela, including the structure of application description files and examples of YAML configurations.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 16:38:18", "type": "code_examples", "page_metadata": {"docusaurus_locale": "en", "ogTitle": "YAML based Addon Application | KubeVela", "og:description": "Make Your Own Addon introduces the basic structure of an addon, and illustrate that any Kubernetes operator to be installed of an addon should be defined in a KubeVela application. This doc will guide you with all the details of writing the application description file with YAML.", "msapplication-config": "/img/favicons/browserconfig.xml", "generator": "Docusaurus v2.4.3", "docusaurus_tag": "docs-default-v1.10", "docsearch:language": "en", "docusaurus_version": "v1.10", "docsearch:docusaurus_tag": "docs-default-v1.10", "twitter:card": "summary_large_image", "ogUrl": "https://kubevela.io/docs/platform-engineers/addon/addon-yaml/", "language": "en", "og:title": "YAML based Addon Application | KubeVela", "ogDescription": "Make Your Own Addon introduces the basic structure of an addon, and illustrate that any Kubernetes operator to be installed of an addon should be defined in a KubeVela application. This doc will guide you with all the details of writing the application description file with YAML.", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docsearch:version": "v1.10", "description": "Make Your Own Addon introduces the basic structure of an addon, and illustrate that any Kubernetes operator to be installed of an addon should be defined in a KubeVela application. This doc will guide you with all the details of writing the application description file with YAML.", "title": "YAML based Addon Application | KubeVela", "theme-color": "#ffffff", "viewport": "width=device-width, initial-scale=1.0", "og:url": "https://kubevela.io/docs/platform-engineers/addon/addon-yaml/", "scrapeId": "d81e6312-769c-4ede-8920-2e4afc491271", "sourceURL": "https://kubevela.io/docs/platform-engineers/addon/addon-yaml", "url": "https://kubevela.io/docs/platform-engineers/addon/addon-yaml/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"Addon YAML\"?\n\nAssistant: Here are the recommended best practices:\n\n• Ensure that the application template file is structured correctly to avoid rendering issues.\n• Split large application templates into multiple resource files for better organization and manageability.\n", "metadata": {"source_url": "https://kubevela.io/docs/platform-engineers/addon/addon-yaml", "title": "Addon YAML", "description": "This documentation page provides details on how to create an addon in KubeVela, including the structure of application description files and examples of YAML configurations.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 16:38:18", "type": "best_practices", "page_metadata": {"docusaurus_locale": "en", "ogTitle": "YAML based Addon Application | KubeVela", "og:description": "Make Your Own Addon introduces the basic structure of an addon, and illustrate that any Kubernetes operator to be installed of an addon should be defined in a KubeVela application. This doc will guide you with all the details of writing the application description file with YAML.", "msapplication-config": "/img/favicons/browserconfig.xml", "generator": "Docusaurus v2.4.3", "docusaurus_tag": "docs-default-v1.10", "docsearch:language": "en", "docusaurus_version": "v1.10", "docsearch:docusaurus_tag": "docs-default-v1.10", "twitter:card": "summary_large_image", "ogUrl": "https://kubevela.io/docs/platform-engineers/addon/addon-yaml/", "language": "en", "og:title": "YAML based Addon Application | KubeVela", "ogDescription": "Make Your Own Addon introduces the basic structure of an addon, and illustrate that any Kubernetes operator to be installed of an addon should be defined in a KubeVela application. This doc will guide you with all the details of writing the application description file with YAML.", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docsearch:version": "v1.10", "description": "Make Your Own Addon introduces the basic structure of an addon, and illustrate that any Kubernetes operator to be installed of an addon should be defined in a KubeVela application. This doc will guide you with all the details of writing the application description file with YAML.", "title": "YAML based Addon Application | KubeVela", "theme-color": "#ffffff", "viewport": "width=device-width, initial-scale=1.0", "og:url": "https://kubevela.io/docs/platform-engineers/addon/addon-yaml/", "scrapeId": "d81e6312-769c-4ede-8920-2e4afc491271", "sourceURL": "https://kubevela.io/docs/platform-engineers/addon/addon-yaml", "url": "https://kubevela.io/docs/platform-engineers/addon/addon-yaml/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"Addon Registry\"?\n\nAssistant: An addon registry can be used for discovering and distributing addons. Currently, KubeVela supports two kinds of registries: Git Repo and Helm repo.\n\nHere's a detailed explanation:\n\n\n## Build Addon Registry with Git Repository\nA directory with some subdirectories stored in a git repository can be used as an addon registry.\n\nThe git type registry type supports GitHub, GitLab, and Gitee.\n\nA typical git addon registry is like [catalog](https://github.com/kubevela/catalog/tree/master/addons). You can clone this repo to your local path and then push to your own git repository.\n\n```bash\n$ git clone https://github.com/kubevela/catalog/tree/master/addons\n$ git remote add <repoName> <you git server address>\n$ git push -u <repoName> master\n```\n\nIf your repository type is GitHub, you can use this command to add your addon registry.\n\n```bash\nvela addon registry add my-repo --type git --endpoint=<URL> --path=<ptah> --gitToken=<git token>\n```\n\nIf your type is Gitee, you can use:\n\n```bash\nvela addon registry add my-repo --type gitee --endpoint=<URL> --path=<ptah> --gitToken=<git token>\n```\n\nIf your type is GitLab, you can use:\n\n```bash\nvela addon registry add my-repo --type gitlab --gitRepoName=<repoName> --endpoint=<URL> --path=<ptah> --gitToken=<git token>\n```\n\nPush new addons just like checking code into your git repository.\n\n## Build and push to custom Helm Chart repository\nA [Helm Chart repository](https://helm.sh/docs/topics/chart_repository/) can be used to store versioned addon packages. [ChartMuseum](https://chartmuseum.com/) is an open-source and easy-to-deploy Helm Chart Repository server.\n\nIn this tutorial, we are going to use [ChartMuseum](https://chartmuseum.com/) to build our repository. If you don't have ChartMuseum but already have some helm registries, you can re-use your registry with the following guide. The only exception for not having ChartMuseum is that you cannot utilize `vela addon push` command and will have to manually upload your addon.\n\nNote: you can also use registries that are compatible with ChartMuseum (e.g. Harbor). They will have the same capabilities.\n\n## Install ChartMuseum by Addon\nYou can skip this step if you already have ChartMuseum.\n\nWe have provided a ChartMuseum addon, you can also create your own ChartMuseum instance or re-use exist one.\n\nTo enable it, run:\n\n```bash\nvela addon enable chartmuseum\n```\n\nIf you don't have access to the default registry, refer to [the air gap installation of chartmuseum](https://kubevela.io/docs/platform-engineers/addon/addon-registry/#sync-addons-to-chartmuseum-in-an-air-gapped-environment).\n\nTo customize addon parameters, either:\n- use VelaUX and fill out the form when enabling addon\n- or check out what parameters are available using `vela addon status chartmuseum -v`, and specify it using `vela addon enable chartmuseum externalPort=80`\n\nThis tutorial will assume you used the default parameters.\n\nAfter successfully enabling the addon, we need to make sure ChartMuseum is accessible to you by forwarding the default port (8080):\n\n```bash\nvela port-forward -n vela-system addon-chartmuseum 8080:8080 --address 0.0.0.0\n```\n\nTypically, you would configure ingress (achievable using addon parameters) to make the addon accessible to the outside.\n\n## Add an addon registry using Helm Repository\nUse your newly created ChartMuseum repository (or any other Helm Chart repository) as an addon registry. We will name it `localcm`:\n\n```bash\n$ vela addon registry add localcm --type helm --endpoint=http://localhost:8080\n# If username and password is required, you can specify them with --username and --password\n# If the repo setup with self-signed certificate, you can use flag `--insecureSkipTLS` to add it.\n```\n\nYou should see it in the list now:\n\n```bash\n$ vela addon registry list\nName        Type    URL\n...\nlocalcm     helm    http://localhost:8080\n```\n\n## Push an addon to your registry\nNote: you need to upgrade your CLI to v1.5.0+ for this feature.\n\nPrepare your addon. We will create a new one named `sample-addon` here:\n\n```bash\n$ vela addon init sample-addon\n# A conventional addon directory will be created\n# ./sample-addon\n# ├── definitions\n# ├── metadata.yaml\n# ├── readme.md\n# ├── resources\n# ├── schemas\n# └── template.yaml\n```\n\n(Optional) Package your addon:\n\n```bash\n$ vela addon package sample-addon\n# You should see a package named sample-addon-1.0.0.tgz\n```\n\nPush your addon ( `sample-addon`) to the registry ( `localcm`) that you just added:\n\n```bash\n# Notice how we automatically package the addon for you.\n$ vela addon push sample-addon localcm\nPushing sample-addon-1.0.0.tgz to localcm(http://localhost:8080)... Done\n# If you packaged it yourself, just replace `sample-addon` with `sample-addon-1.0.0.tgz\n\n# In addition to registry names (localcm, as we saw earlier), URLs are also supported.\n# If you use URLs, you don't even have to add it as an addon registry.\n$ vela addon push sample-addon-1.0.0.tgz http://localhost:8080 -f\nPushing sample-addon-1.0.0.tgz to http://localhost:8080... Done\n# Notice the `-f` option.\n# This is because we already pushed the exact same addon to the same registry earlier.\n# We need to use `-f` to overwrite it.\n```\n\nFor more advanced usages, please refer to `vela addon push -h`.\n\nYour addon is available in the registry now!\n\n```bash\n$ vela addon list\nNAME          REGISTRY   DESCRIPTION             AVAILABLE-VERSIONS  STATUS\n...\nsample-addon  localcm    An addon for KubeVela.  [1.0.0]             disabled\n```\n\n## Sync addons to ChartMuseum in an air-gapped environment\nAs described in [_Air-gapped Installation for Addon_](https://kubevela.io/docs/platform-engineers/system-operation/enable-addon-offline/), you can enable an addon from local filesystem. But some addons required a Helm Chart, then you will need to build a Chart repository for that. This section is to tackle that problem. You will also learn how to sync [addon catalog](https://github.com/kubevela/catalog) to your ChartMuseum instance, so that you can directly enable an addon from a registry, instead of enabling it from local filesystem.\n\n## Goals\n- Air-gapped installation of ChartMuseum addon\n- Sync addon catalog to your ChartMuseum instance\n- Sync Helm Charts to your ChartMuseum instance\n\n## Air-gapped installation of ChartMuseum addon\nSince all the required files to install ChartMuseum addon are stored in the catalog, you need to download [addon catalog](https://github.com/kubevela/catalog) first:\n\n```bash\n$ git clone --depth=1 https://github.com/kubevela/catalog\n```\n\nNavigate to ChartMuseum addon directory:\n\n```bash\n$ cd catalog/addons/chartmuseum\n```\n\nNow, you need to find a way to sync ChartMuseum image to your cluster. For example, you can pre-load the original image into your cluster or sync the image to your private image registry and use a custom image.\n\nTo find out the default image that ChartMuseum is using:\n\n```bash\n$ cat resources/parameter.cue | grep \"image\"\n    // +usage=ChartMuseum image\n    image: *\"ghcr.io/helm/chartmuseum:v0.15.0\" | string\n# At the time of writing, ChartMuseum is using ghcr.io/helm/chartmuseum:v0.15.0\n# Fetch this image and make it available in your private cluster.\n```\n\nTo use your custom image and enable the addon:\n\n```bash\n$ vela addon enable . image=your-private-repo.com/chartmuseum:v0.15.0\n# Since you are already inside chartmuseum/ dir, we use `.`\n```\n\nNow ChartMuseum addon should be enabled.\n\n## Sync addon catalog to your ChartMuseum instance\nBefore you continue, you need to make sure you can access your ChartMuseum instance. Check out the previous section on how to use it as an addon registry. We will assume you are using the same settings as the previous section (i.e. you can properly access it, and named as `localcm`).\n\nInside the repo that you just cloned, navigate to `catalog/addons`. You should see a list of community-verified addons.\n\nYou can sync all of our addons in the catalog to your ChartMuseum instance and use them in your private environment. We will leverage `vela addon push` command (CLI v1.5 or later) to package these and sync them to ChartMuseum.\n\nAs we all know, we can push a single addon to ChartMuseum by:\n\n```bash\n# push chartmusem/ to localcm registry\nvela addon push chartmuseum localcm\n```\n\nTherefore, we can use a loop to push all addons to ChartMuseum:\n\n```bash\n# You PWD should be catalog/addons.\n# Replace `localcm` with you own registry name.\nfor i in *; do \n    vela addon push $i localcm -f; \ndone;\n\nPushing cert-manager-1.7.1.tgz to localcm(http://10.2.1.4:8080)... Done\nPushing chartmuseum-4.0.0.tgz to localcm(http://10.2.1.4:8080)... Done\nPushing cloudshell-0.2.0.tgz to localcm(http://10.2.1.4:8080)... Done\n... \n```\n\nCongratulations, all community-verified addons are now available in your ChartMuseum instance (check it out using `vela addon list`, and enable them using `vela addon enable addon-name`). You can do the same thing with `experimental` addons.\n\n## Sync Helm Charts to your ChartMuseum instance\nThis is useful when you need to enable an addon that uses a Helm Chart inside, but you cannot access the Chart.\n\nWe will take `dex` addon as an example here. It originally uses a Chart named `dex` from `dexidp`. We are going to make that Chart available in our ChartMuseum instance and modify `dex` addon to use our custom Chart.\n\nCheck `template.yaml` or `resources/` directory to find out what Chart is `dex` using.\n\nAfter you know the right Chart, pull the corresponding Chart:\n\n```bash\n# Add the repo\n$ helm repo add dexidp https://charts.dexidp.io\n# Pull the right Chart\n$ helm pull dexidp/dex --version 0.6.5\n# You should see a package named `dex-0.6.5.tgz`\n```\n\nPush the Chart to ChartMuseum:\n\n```bash\n$ vela addon push dex-0.6.5.tgz localcm\n# You can use helm cm-push as well, if you have the Helm plugin installed.\n```\n\nNow you have `dex` inside your ChartMuseum instance. It is time to use it.\n\nEdit `template.yaml` or Helm component in `resources/` to use your custom Chart:\n\n```yaml\n# template.yaml of dex addon\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: dex\n  namespace: vela-system\nspec:\n  components:\n    - name: dex\n      type: helm\n      properties:\n        chart: dex\n        version: \"0.6.5\"\n        # Put your ChartMuseum URL here\n        url: \"http://10.2.1.4:8080\"\n        repoType: helm\n```\n\nGreat! After you enable this addon, it will try to fetch the Chart from your ChartMuseum instance. (You should also consider making the images inside the Chart available to you too).\n", "metadata": {"source_url": "https://kubevela.io/docs/platform-engineers/addon/addon-registry", "title": "Addon Registry", "description": "An addon registry can be used for discovering and distributing addons. Currently, KubeVela supports two kinds of registries: Git Repo and Helm repo.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-02-28 16:38:59", "type": "overview", "page_metadata": {"language": "en", "ogTitle": "Build your Own Registry | KubeVela", "ogDescription": "An addon registry can be used for discovering and distributing addons. Currently, KubeVela supports two kinds of registries:", "docsearch:version": "v1.10", "title": "Build your Own Registry | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogUrl": "https://kubevela.io/docs/platform-engineers/addon/addon-registry/", "docusaurus_tag": "docs-default-v1.10", "docsearch:language": "en", "docusaurus_locale": "en", "description": "An addon registry can be used for discovering and distributing addons. Currently, KubeVela supports two kinds of registries:", "og:title": "Build your Own Registry | KubeVela", "docsearch:docusaurus_tag": "docs-default-v1.10", "generator": "Docusaurus v2.4.3", "twitter:card": "summary_large_image", "og:url": "https://kubevela.io/docs/platform-engineers/addon/addon-registry/", "og:description": "An addon registry can be used for discovering and distributing addons. Currently, KubeVela supports two kinds of registries:", "docusaurus_version": "v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "theme-color": "#ffffff", "viewport": "width=device-width, initial-scale=1.0", "scrapeId": "eec0b8fc-5533-482f-be45-39f636cc0b42", "sourceURL": "https://kubevela.io/docs/platform-engineers/addon/addon-registry", "url": "https://kubevela.io/docs/platform-engineers/addon/addon-registry/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"Addon Registry\"?\n\nAssistant: Here are some code examples:\n\n### Clone Git Repository\n```yaml\n$ git clone https://github.com/kubevela/catalog/tree/master/addons\n$ git remote add <repoName> <you git server address>\n$ git push -u <repoName> master\n```\n\n### Add GitHub Addon Registry\n```yaml\nvela addon registry add my-repo --type git --endpoint=<URL> --path=<ptah> --gitToken=<git token>\n```\n\n### Add Gitee Addon Registry\n```yaml\nvela addon registry add my-repo --type gitee --endpoint=<URL> --path=<ptah> --gitToken=<git token>\n```\n\n### Add GitLab Addon Registry\n```yaml\nvela addon registry add my-repo --type gitlab --gitRepoName=<repoName> --endpoint=<URL> --path=<ptah> --gitToken=<git token>\n```\n\n### Enable ChartMuseum Addon\n```yaml\nvela addon enable chartmuseum\n```\n\n### Port Forward to ChartMuseum\n```yaml\nvela port-forward -n vela-system addon-chartmuseum 8080:8080 --address 0.0.0.0\n```\n\n### Add Helm Repository\n```yaml\n$ vela addon registry add localcm --type helm --endpoint=http://localhost:8080\n```\n\n### Push Sample Addon\n```yaml\n$ vela addon push sample-addon localcm\n```\n\n### Sync Addon Catalog\n```yaml\nfor i in *; do \n    vela addon push $i localcm -f; \ndone;\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/platform-engineers/addon/addon-registry", "title": "Addon Registry", "description": "An addon registry can be used for discovering and distributing addons. Currently, KubeVela supports two kinds of registries: Git Repo and Helm repo.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-02-28 16:38:59", "type": "code_examples", "page_metadata": {"language": "en", "ogTitle": "Build your Own Registry | KubeVela", "ogDescription": "An addon registry can be used for discovering and distributing addons. Currently, KubeVela supports two kinds of registries:", "docsearch:version": "v1.10", "title": "Build your Own Registry | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogUrl": "https://kubevela.io/docs/platform-engineers/addon/addon-registry/", "docusaurus_tag": "docs-default-v1.10", "docsearch:language": "en", "docusaurus_locale": "en", "description": "An addon registry can be used for discovering and distributing addons. Currently, KubeVela supports two kinds of registries:", "og:title": "Build your Own Registry | KubeVela", "docsearch:docusaurus_tag": "docs-default-v1.10", "generator": "Docusaurus v2.4.3", "twitter:card": "summary_large_image", "og:url": "https://kubevela.io/docs/platform-engineers/addon/addon-registry/", "og:description": "An addon registry can be used for discovering and distributing addons. Currently, KubeVela supports two kinds of registries:", "docusaurus_version": "v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "theme-color": "#ffffff", "viewport": "width=device-width, initial-scale=1.0", "scrapeId": "eec0b8fc-5533-482f-be45-39f636cc0b42", "sourceURL": "https://kubevela.io/docs/platform-engineers/addon/addon-registry", "url": "https://kubevela.io/docs/platform-engineers/addon/addon-registry/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"Addon Registry\"?\n\nAssistant: Here are the recommended best practices:\n\n• You can skip the installation of ChartMuseum if you already have it.\n• To customize addon parameters, use VelaUX or check available parameters using `vela addon status chartmuseum -v`.\n• Make sure ChartMuseum is accessible by forwarding the default port (8080).\n• If using a self-signed certificate for Helm repository, use the `--insecureSkipTLS` flag.\n", "metadata": {"source_url": "https://kubevela.io/docs/platform-engineers/addon/addon-registry", "title": "Addon Registry", "description": "An addon registry can be used for discovering and distributing addons. Currently, KubeVela supports two kinds of registries: Git Repo and Helm repo.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-02-28 16:38:59", "type": "best_practices", "page_metadata": {"language": "en", "ogTitle": "Build your Own Registry | KubeVela", "ogDescription": "An addon registry can be used for discovering and distributing addons. Currently, KubeVela supports two kinds of registries:", "docsearch:version": "v1.10", "title": "Build your Own Registry | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogUrl": "https://kubevela.io/docs/platform-engineers/addon/addon-registry/", "docusaurus_tag": "docs-default-v1.10", "docsearch:language": "en", "docusaurus_locale": "en", "description": "An addon registry can be used for discovering and distributing addons. Currently, KubeVela supports two kinds of registries:", "og:title": "Build your Own Registry | KubeVela", "docsearch:docusaurus_tag": "docs-default-v1.10", "generator": "Docusaurus v2.4.3", "twitter:card": "summary_large_image", "og:url": "https://kubevela.io/docs/platform-engineers/addon/addon-registry/", "og:description": "An addon registry can be used for discovering and distributing addons. Currently, KubeVela supports two kinds of registries:", "docusaurus_version": "v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "theme-color": "#ffffff", "viewport": "width=device-width, initial-scale=1.0", "scrapeId": "eec0b8fc-5533-482f-be45-39f636cc0b42", "sourceURL": "https://kubevela.io/docs/platform-engineers/addon/addon-registry", "url": "https://kubevela.io/docs/platform-engineers/addon/addon-registry/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela Definition Versioning\"?\n\nAssistant: This page covers how to manage and specify different revisions of OAM definitions in KubeVela.\n\nHere's a detailed explanation:\n\n\n## Listing Revisions of Definitions\nWhen an OAM definition is updated, KubeVela will automatically generate a new revision of this definition.\n\nTo list the revisions of the `webservice` Component, run:\n\n```bash\n$ vela def get webservice --revisions\nNAME        REVISION    TYPE        HASH\nwebservice  1           Component   dfa072dac5088ed8\nwebservice  2           Component   519e11eb7cbe9cdd\n```\n\nTo list the revisions of the `affinity` Trait, run:\n\n```bash\n$ vela def get affinity --revisions\nNAME            REVISION        TYPE    HASH\naffinity        1               Trait   9db54dd8d5314bd5\naffinity        2               Trait   8bf3e82a6884db2c\n```\n\nTo list the revisions of the `override` Policy, run:\n\n```bash\n$ vela def get override --revisions\nNAME            REVISION        TYPE    HASH\noverride        1               Policy  f6f87a5eb2271b8a\n```\n\nTo list the revisions of the `deploy` WorkflowStep, run:\n\n```bash\n$ vela def get deploy --revisions\nNAME    REVISION        TYPE            HASH\ndeploy  1               WorkflowStep    2ea741dae457850b\n```\n\n> Note: there is only one revision of a definition if the definition has never been updated.\n\n## Specifying a Specific Definition Revision in an Application\nUsers can specify the revision of a definition they would like to use by specifying definition types in the form `<definition-name>@<definition-revision>`.\n\nFor example, if a user wanted to use the `v3` revision of `webservice` Component, they would use `webservice@v3` as the `type` in their component specification.\n\n```yaml\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: myapp\nspec:\n  components:\n  - name: express-server\n    type: webservice@v3\n    properties:\n      image: stefanprodan/podinfo:4.0.3\n```\n\nThis ensures that if an administrator of your KubeVela instance modifies the `webservice` definition, your application will not be affected.\n\nIf no revision is specified for a definition, KubeVela will use the latest revision available at evaluation time. This will usually be the next time you upgrade your application.\n", "metadata": {"source_url": "https://kubevela.io/docs/platform-engineers/x-def-version", "title": "KubeVela Definition Versioning", "description": "This page covers how to manage and specify different revisions of OAM definitions in KubeVela.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-02-28 16:39:14", "type": "overview", "page_metadata": {"title": "Version Control for Definitions | KubeVela", "ogDescription": "When an OAM definition is updated, KubeVela will automatically generate a new revision of this definition.", "docsearch:docusaurus_tag": "docs-default-v1.10", "docusaurus_locale": "en", "docsearch:version": "v1.10", "language": "en", "docusaurus_version": "v1.10", "theme-color": "#ffffff", "twitter:card": "summary_large_image", "generator": "Docusaurus v2.4.3", "og:description": "When an OAM definition is updated, KubeVela will automatically generate a new revision of this definition.", "og:title": "Version Control for Definitions | KubeVela", "msapplication-config": "/img/favicons/browserconfig.xml", "og:url": "https://kubevela.io/docs/platform-engineers/x-def-version/", "description": "When an OAM definition is updated, KubeVela will automatically generate a new revision of this definition.", "ogTitle": "Version Control for Definitions | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogUrl": "https://kubevela.io/docs/platform-engineers/x-def-version/", "viewport": "width=device-width, initial-scale=1.0", "docsearch:language": "en", "docusaurus_tag": "docs-default-v1.10", "scrapeId": "4fba2faf-0b24-473c-a2c5-9d10a4542b1f", "sourceURL": "https://kubevela.io/docs/platform-engineers/x-def-version", "url": "https://kubevela.io/docs/platform-engineers/x-def-version/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"KubeVela Definition Versioning\"?\n\nAssistant: Here are some code examples:\n\n### List Revisions of webservice Component\n```yaml\n$ vela def get webservice --revisions\nNAME        REVISION    TYPE        HASH\nwebservice  1           Component   dfa072dac5088ed8\nwebservice  2           Component   519e11eb7cbe9cdd\n```\n\n### List Revisions of affinity Trait\n```yaml\n$ vela def get affinity --revisions\nNAME            REVISION        TYPE    HASH\naffinity        1               Trait   9db54dd8d5314bd5\naffinity        2               Trait   8bf3e82a6884db2c\n```\n\n### List Revisions of override Policy\n```yaml\n$ vela def get override --revisions\nNAME            REVISION        TYPE    HASH\noverride        1               Policy  f6f87a5eb2271b8a\n```\n\n### List Revisions of deploy WorkflowStep\n```yaml\n$ vela def get deploy --revisions\nNAME    REVISION        TYPE            HASH\ndeploy  1               WorkflowStep    2ea741dae457850b\n```\n\n### Specify Definition Revision in Application\n```yaml\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: myapp\nspec:\n  components:\n  - name: express-server\n    type: webservice@v3\n    properties:\n      image: stefanprodan/podinfo:4.0.3\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/platform-engineers/x-def-version", "title": "KubeVela Definition Versioning", "description": "This page covers how to manage and specify different revisions of OAM definitions in KubeVela.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-02-28 16:39:14", "type": "code_examples", "page_metadata": {"title": "Version Control for Definitions | KubeVela", "ogDescription": "When an OAM definition is updated, KubeVela will automatically generate a new revision of this definition.", "docsearch:docusaurus_tag": "docs-default-v1.10", "docusaurus_locale": "en", "docsearch:version": "v1.10", "language": "en", "docusaurus_version": "v1.10", "theme-color": "#ffffff", "twitter:card": "summary_large_image", "generator": "Docusaurus v2.4.3", "og:description": "When an OAM definition is updated, KubeVela will automatically generate a new revision of this definition.", "og:title": "Version Control for Definitions | KubeVela", "msapplication-config": "/img/favicons/browserconfig.xml", "og:url": "https://kubevela.io/docs/platform-engineers/x-def-version/", "description": "When an OAM definition is updated, KubeVela will automatically generate a new revision of this definition.", "ogTitle": "Version Control for Definitions | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogUrl": "https://kubevela.io/docs/platform-engineers/x-def-version/", "viewport": "width=device-width, initial-scale=1.0", "docsearch:language": "en", "docusaurus_tag": "docs-default-v1.10", "scrapeId": "4fba2faf-0b24-473c-a2c5-9d10a4542b1f", "sourceURL": "https://kubevela.io/docs/platform-engineers/x-def-version", "url": "https://kubevela.io/docs/platform-engineers/x-def-version/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela Definition Versioning\"?\n\nAssistant: Here are the recommended best practices:\n\n• Cluster administrators can create admission webhooks that will set a definition revision if the field is not set.\n", "metadata": {"source_url": "https://kubevela.io/docs/platform-engineers/x-def-version", "title": "KubeVela Definition Versioning", "description": "This page covers how to manage and specify different revisions of OAM definitions in KubeVela.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-02-28 16:39:14", "type": "best_practices", "page_metadata": {"title": "Version Control for Definitions | KubeVela", "ogDescription": "When an OAM definition is updated, KubeVela will automatically generate a new revision of this definition.", "docsearch:docusaurus_tag": "docs-default-v1.10", "docusaurus_locale": "en", "docsearch:version": "v1.10", "language": "en", "docusaurus_version": "v1.10", "theme-color": "#ffffff", "twitter:card": "summary_large_image", "generator": "Docusaurus v2.4.3", "og:description": "When an OAM definition is updated, KubeVela will automatically generate a new revision of this definition.", "og:title": "Version Control for Definitions | KubeVela", "msapplication-config": "/img/favicons/browserconfig.xml", "og:url": "https://kubevela.io/docs/platform-engineers/x-def-version/", "description": "When an OAM definition is updated, KubeVela will automatically generate a new revision of this definition.", "ogTitle": "Version Control for Definitions | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogUrl": "https://kubevela.io/docs/platform-engineers/x-def-version/", "viewport": "width=device-width, initial-scale=1.0", "docsearch:language": "en", "docusaurus_tag": "docs-default-v1.10", "scrapeId": "4fba2faf-0b24-473c-a2c5-9d10a4542b1f", "sourceURL": "https://kubevela.io/docs/platform-engineers/x-def-version", "url": "https://kubevela.io/docs/platform-engineers/x-def-version/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"Configuring Deployment Environments in KubeVela\"?\n\nAssistant: This documentation covers how to create and manage deployment environments in KubeVela, including configuring metadata, changing settings, and setting up domains for applications.\n\nHere's a detailed explanation:\n\n\n## Create environment\nA deployment environment is where you could configure the workspace, email for contact and domain for your applications globally. A typical set of deployment environment is `test`, `staging`, `prod`, etc.\n\n```codeBlockLines_e6Vv\nvela env init demo --email my@email.com\n```\n\n```codeBlockLines_e6Vv\nenvironment demo created, Namespace: default, Email: my@email.com\n```\n\n## Check the deployment environment metadata\nBy default, the environment will use `default` namespace in K8s.\n\n```codeBlockLines_e6Vv\nvela env ls\n```\n\n```codeBlockLines_e6Vv\nNAME    CURRENT NAMESPACE   EMAIL                   DOMAIN\ndefault         default\ndemo    *       default     my@email.com\n```\n\n## Configure changes\nYou could change the config by executing the environment again.\n\n```codeBlockLines_e6Vv\nvela env init demo --namespace demo\n```\n\n```codeBlockLines_e6Vv\nenvironment demo created, Namespace: demo, Email: my@email.com\n```\n\n```codeBlockLines_e6Vv\nvela env ls\n```\n\n```codeBlockLines_e6Vv\nNAME    CURRENT NAMESPACE   EMAIL                   DOMAIN\ndefault         default\ndemo    *       demo        my@email.com\n```\n\n**Note that the created apps won't be affected, only newly created apps will use the updated info.**\n\n## [Optional] Configure Domain if you have public IP\nIf your K8s cluster is provisioned by cloud provider and has public IP for ingress. You could configure your domain in the environment, then you'll be able to visit your app by this domain with an mTLS supported automatically.\n\nFor example, you could get the public IP from ingress service.\n\n```codeBlockLines_e6Vv\nkubectl get svc -A | grep LoadBalancer\n```\n\n```codeBlockLines_e6Vv\nNAME                         TYPE           CLUSTER-IP      EXTERNAL-IP     PORT(S)                      AGE\nnginx-ingress-lb             LoadBalancer   172.21.2.174    123.57.10.233   80:32740/TCP,443:32086/TCP   41d\n```\n\nThe fourth column is public IP. Configure 'A' record for your custom domain.\n\n```codeBlockLines_e6Vv\n*.your.domain => 123.57.10.233\n```\n\nYou could also use `123.57.10.233.xip.io` as your domain, if you don't have a custom one. `xip.io` will automatically route to the prefix IP `123.57.10.233`.\n\n```codeBlockLines_e6Vv\nvela env init demo --domain 123.57.10.233.xip.io\n```\n\n```codeBlockLines_e6Vv\nenvironment demo updated, Namespace: demo, Email: my@email.com\n```\n\n## Using domain in Appfile\nSince you now have domain configured globally in deployment environment, you don't need to specify the domain in route configuration anymore.\n\n```codeBlockLines_e6Vv\n# in demo environment\nservices:\n  express-server:\n    ...\n\n    route:\n      rules:\n        - path: /testapp\n          rewriteTarget: /\n```\n\n```codeBlockLines_e6Vv\ncurl http://123.57.10.233.xip.io/testapp\n```\n\n```codeBlockLines_e6Vv\nHello World\n```\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.9/developers/config-enviroments", "title": "Configuring Deployment Environments in KubeVela", "description": "This documentation covers how to create and manage deployment environments in KubeVela, including configuring metadata, changing settings, and setting up domains for applications.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 16:39:47", "type": "overview", "page_metadata": {"docusaurus_locale": "en", "description": "A deployment environment is where you could configure the workspace, email for contact and domain for your applications globally.", "msapplication-config": "/img/favicons/browserconfig.xml", "ogUrl": "https://kubevela.io/docs/v1.9/developers/config-enviroments/", "language": "en", "og:url": "https://kubevela.io/docs/v1.9/developers/config-enviroments/", "docsearch:language": "en", "docsearch:version": "v1.9", "generator": "Docusaurus v2.4.3", "docusaurus_tag": "docs-default-v1.9", "theme-color": "#ffffff", "ogDescription": "A deployment environment is where you could configure the workspace, email for contact and domain for your applications globally.", "og:title": "Setting Up Deployment Environment | KubeVela", "title": "Setting Up Deployment Environment | KubeVela", "viewport": "width=device-width, initial-scale=1.0", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogTitle": "Setting Up Deployment Environment | KubeVela", "twitter:card": "summary_large_image", "docusaurus_version": "v1.9", "docsearch:docusaurus_tag": "docs-default-v1.9", "og:description": "A deployment environment is where you could configure the workspace, email for contact and domain for your applications globally.", "scrapeId": "5b615ad5-076c-4307-aba7-50c636c48162", "sourceURL": "https://kubevela.io/docs/v1.9/developers/config-enviroments", "url": "https://kubevela.io/docs/v1.9/developers/config-enviroments/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"Configuring Deployment Environments in KubeVela\"?\n\nAssistant: Here are some code examples:\n\n### Create environment\n```yaml\nvela env init demo --email my@email.com\n```\n\n### Check deployment environment metadata\n```yaml\nvela env ls\n```\n\n### Configure changes\n```yaml\nvela env init demo --namespace demo\n```\n\n### Get public IP from ingress service\n```yaml\nkubectl get svc -A | grep LoadBalancer\n```\n\n### Configure domain\n```yaml\nvela env init demo --domain 123.57.10.233.xip.io\n```\n\n### Using domain in Appfile\n```yaml\ncurl http://123.57.10.233.xip.io/testapp\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.9/developers/config-enviroments", "title": "Configuring Deployment Environments in KubeVela", "description": "This documentation covers how to create and manage deployment environments in KubeVela, including configuring metadata, changing settings, and setting up domains for applications.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 16:39:47", "type": "code_examples", "page_metadata": {"docusaurus_locale": "en", "description": "A deployment environment is where you could configure the workspace, email for contact and domain for your applications globally.", "msapplication-config": "/img/favicons/browserconfig.xml", "ogUrl": "https://kubevela.io/docs/v1.9/developers/config-enviroments/", "language": "en", "og:url": "https://kubevela.io/docs/v1.9/developers/config-enviroments/", "docsearch:language": "en", "docsearch:version": "v1.9", "generator": "Docusaurus v2.4.3", "docusaurus_tag": "docs-default-v1.9", "theme-color": "#ffffff", "ogDescription": "A deployment environment is where you could configure the workspace, email for contact and domain for your applications globally.", "og:title": "Setting Up Deployment Environment | KubeVela", "title": "Setting Up Deployment Environment | KubeVela", "viewport": "width=device-width, initial-scale=1.0", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogTitle": "Setting Up Deployment Environment | KubeVela", "twitter:card": "summary_large_image", "docusaurus_version": "v1.9", "docsearch:docusaurus_tag": "docs-default-v1.9", "og:description": "A deployment environment is where you could configure the workspace, email for contact and domain for your applications globally.", "scrapeId": "5b615ad5-076c-4307-aba7-50c636c48162", "sourceURL": "https://kubevela.io/docs/v1.9/developers/config-enviroments", "url": "https://kubevela.io/docs/v1.9/developers/config-enviroments/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"Configuring Deployment Environments in KubeVela\"?\n\nAssistant: Here are the recommended best practices:\n\n• Note that the created apps won't be affected, only newly created apps will use the updated info.\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.9/developers/config-enviroments", "title": "Configuring Deployment Environments in KubeVela", "description": "This documentation covers how to create and manage deployment environments in KubeVela, including configuring metadata, changing settings, and setting up domains for applications.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 16:39:47", "type": "best_practices", "page_metadata": {"docusaurus_locale": "en", "description": "A deployment environment is where you could configure the workspace, email for contact and domain for your applications globally.", "msapplication-config": "/img/favicons/browserconfig.xml", "ogUrl": "https://kubevela.io/docs/v1.9/developers/config-enviroments/", "language": "en", "og:url": "https://kubevela.io/docs/v1.9/developers/config-enviroments/", "docsearch:language": "en", "docsearch:version": "v1.9", "generator": "Docusaurus v2.4.3", "docusaurus_tag": "docs-default-v1.9", "theme-color": "#ffffff", "ogDescription": "A deployment environment is where you could configure the workspace, email for contact and domain for your applications globally.", "og:title": "Setting Up Deployment Environment | KubeVela", "title": "Setting Up Deployment Environment | KubeVela", "viewport": "width=device-width, initial-scale=1.0", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogTitle": "Setting Up Deployment Environment | KubeVela", "twitter:card": "summary_large_image", "docusaurus_version": "v1.9", "docsearch:docusaurus_tag": "docs-default-v1.9", "og:description": "A deployment environment is where you could configure the workspace, email for contact and domain for your applications globally.", "scrapeId": "5b615ad5-076c-4307-aba7-50c636c48162", "sourceURL": "https://kubevela.io/docs/v1.9/developers/config-enviroments", "url": "https://kubevela.io/docs/v1.9/developers/config-enviroments/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela Addons Overview\"?\n\nAssistant: This page provides an overview of the out-of-box addons verified and maintained by the KubeVela community registry.\n\nHere's a detailed explanation:\n\n\n## KubeVela Platform\n- [VelaUX](https://kubevela.io/docs/v1.8/reference/addons/velaux/): The KubeVela User Experience (UX ) addon. It will launch a dashboard and an APIServer for better user experience.\n- [Vela Prism](https://kubevela.io/docs/v1.8/reference/addons/vela-prism/): Provide API Extensions to the core [KubeVela](https://github.com/kubevela/kubevela).\n- [KubeVela Website](https://kubevela.io/docs/v1.8/reference/addons/kubevela-io/): Help you to read the KubeVela document in your cluster which can be air-gaped environment.\n- [Cloud Shell](https://kubevela.io/docs/v1.8/tutorials/cloud-shell/): Set up a web terminal and cloud shell intended for a kubernetes-native environment.\n\n## Observability\n- [Prometheus Server](https://kubevela.io/docs/v1.8/platform-engineers/operations/observability/): Collects metrics from configured targets at given intervals, evaluates rule expressions, displays the results, and can trigger alerts if some condition is observed to be true.\n- [Node Exporter](https://kubevela.io/docs/v1.8/platform-engineers/operations/observability/): Prometheus exporter for hardware and OS metrics exposed by *NIX kernels, written in Go with pluggable metric collectors.\n- [Mysql Exporter](https://kubevela.io/docs/v1.8/reference/addons/mysql-exporter/): Prometheus exporter for MySQL server metrics.\n- [Grafana](https://kubevela.io/docs/v1.8/platform-engineers/operations/observability/): Grafana is an open source, feature rich metrics dashboard and graph editor for Graphite, Elasticsearch, OpenTSDB, Prometheus and InfluxDB.\n- [Loki](https://kubevela.io/docs/v1.8/platform-engineers/operations/o11y/logging/): A log aggregation system designed to store and query logs from all your applications and infrastructure.\n- [Kube State Metrics](https://kubevela.io/docs/v1.8/platform-engineers/operations/observability/): A simple service that listens to the Kubernetes API server and generates metrics about the state of the objects.\n\n## GitOps\n- [FluxCD](https://kubevela.io/docs/v1.8/reference/addons/fluxcd/): Provides capability to deliver helm chart and drive GitOps.\n\n## Cloud Resources\n- [Terraform](https://kubevela.io/docs/v1.8/reference/addons/terraform/): Terraform provider addon to provide the capability to deploy the cloud resource.\n\n## Rollout\n- [Kruise Rollout](https://kubevela.io/docs/v1.8/reference/addons/kruise-rollout/): [OpenKruise rollout](https://github.com/openkruise/rollouts) supports canary rollout for native deployment, stateful-set and OpenKruise [cloneset](https://openkruise.io/docs/user-manuals/cloneset/).\n- [Vela Rollout](https://kubevela.io/docs/v1.8/reference/addons/rollout/): The legacy rollout addon before kruise rollout exists, provide a capability rollout the application.\n\n## Gateway\n- [Traefik](https://kubevela.io/docs/v1.8/reference/addons/traefik/): Traefik is a modern HTTP reverse proxy and load balancer made to deploy microservices with ease.\n- [Nginx Ingress Controller](https://kubevela.io/docs/v1.8/reference/addons/nginx-ingress-controller/): An Ingress controller for Kubernetes using NGINX as a reverse proxy and load balancer.\n\n## AI\n- [Machine Learning Addon](https://kubevela.io/docs/v1.8/reference/addons/ai/): Machine learning addon is divided into model-training addon and model-serving addon.\n\n## Multi-Clusters\n- [OCM Cluster-Gateway Manager](https://kubevela.io/docs/v1.8/reference/addons/ocm-gateway-manager-addon/): An operator component into the hub cluster that help the administrator to easily operate the configuration of cluster-gateway instances via \"ClusterGatewayConfiguration\" custom resource. _WARNING_ this addon will restart the cluster-gateway instances upon the first-time installation.\n- [OCM Hub Control Plane](https://kubevela.io/docs/v1.8/reference/addons/ocm-hub-control-plane/): Help you to initiate and install the [cluster manager](https://open-cluster-management.io/getting-started/core/cluster-manager/) (i.e. OCM's control plane) components into the hosting cluster where your KubeVela control plane is running.\n\n## Security\n- [Cert Manager](https://kubevela.io/docs/v1.8/reference/addons/cert-manager/): Add certificates and certificate issuers as resource types in Kubernetes clusters, and simplifies the process of obtaining, renewing and using those certificates.\n- [Dex](https://kubevela.io/docs/v1.8/reference/addons/dex/): Provide [dex](https://github.com/dexidp/dex) login for VelaUX.\n- [Trivy Operator](https://kubevela.io/docs/v1.8/reference/addons/trivy-operator/): Provides a vulnerability scanner that continuously scans containers deployed in a Kubernetes cluster.\n\n## Big Data\n- [Flink Operator](https://kubevela.io/docs/v1.8/reference/addons/flink-kubernetes-operator/): A Kubernetes operator for Apache Flink ( [https://github.com/apache/flink-kubernetes-operator](https://github.com/apache/flink-kubernetes-operator)).\n\n## Storage\n- [ChartMuseum](https://kubevela.io/docs/v1.8/reference/addons/chartmuseum/): An open-source and easy to deploy Helm Chart Repository server.\n\n## SaaS Workload\n- [netlify](https://kubevela.io/docs/v1.8/reference/addons/netlify/): Netlify is a SaaS platform that can serve website especially for frontend service, it provides free allowances that was pretty cool to be used for demo and test.\n\n## Developer Tools\n- [Pyroscope](https://kubevela.io/docs/v1.8/reference/addons/pyroscope/): Pyroscope is an open source continuous profiling platform, consisting of server and agent. It allows the user to collect, store, and query the profiling data in a CPU and disk efficient way.\n- [Vegeta](https://kubevela.io/docs/v1.8/reference/addons/vegeta/): Vegeta is a versatile HTTP load testing tool built out of a need to drill HTTP services with a constant request rate. It can be used both as a command line utility and a library.\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.8/reference/addons/overview", "title": "KubeVela Addons Overview", "description": "This page provides an overview of the out-of-box addons verified and maintained by the KubeVela community registry.", "has_code_examples": false, "has_best_practices": true, "section_count": 13, "timestamp": "2025-02-28 16:40:18", "type": "overview", "page_metadata": {"docsearch:docusaurus_tag": "docs-default-v1.8", "ogDescription": "These following out-of-box addons are all verified and maintained by KubeVela community registry (https://addons.kubevela.net).", "twitter:card": "summary_large_image", "docusaurus_locale": "en", "docsearch:version": "v1.8", "docusaurus_tag": "docs-default-v1.8", "theme-color": "#ffffff", "viewport": "width=device-width, initial-scale=1.0", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "description": "These following out-of-box addons are all verified and maintained by KubeVela community registry (https://addons.kubevela.net).", "generator": "Docusaurus v2.4.3", "title": "Overview | KubeVela", "ogTitle": "Overview | KubeVela", "og:url": "https://kubevela.io/docs/v1.8/reference/addons/overview/", "docsearch:language": "en", "og:title": "Overview | KubeVela", "msapplication-config": "/img/favicons/browserconfig.xml", "og:description": "These following out-of-box addons are all verified and maintained by KubeVela community registry (https://addons.kubevela.net).", "docusaurus_version": "v1.8", "language": "en", "ogUrl": "https://kubevela.io/docs/v1.8/reference/addons/overview/", "scrapeId": "fce51a00-bfb7-4573-8ac1-5073460160fd", "sourceURL": "https://kubevela.io/docs/v1.8/reference/addons/overview", "url": "https://kubevela.io/docs/v1.8/reference/addons/overview/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela Addons Overview\"?\n\nAssistant: Here are the recommended best practices:\n\n• If you want to make your own addon, please refer to [this guide](https://kubevela.io/docs/v1.8/platform-engineers/addon/intro/).\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.8/reference/addons/overview", "title": "KubeVela Addons Overview", "description": "This page provides an overview of the out-of-box addons verified and maintained by the KubeVela community registry.", "has_code_examples": false, "has_best_practices": true, "section_count": 13, "timestamp": "2025-02-28 16:40:18", "type": "best_practices", "page_metadata": {"docsearch:docusaurus_tag": "docs-default-v1.8", "ogDescription": "These following out-of-box addons are all verified and maintained by KubeVela community registry (https://addons.kubevela.net).", "twitter:card": "summary_large_image", "docusaurus_locale": "en", "docsearch:version": "v1.8", "docusaurus_tag": "docs-default-v1.8", "theme-color": "#ffffff", "viewport": "width=device-width, initial-scale=1.0", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "description": "These following out-of-box addons are all verified and maintained by KubeVela community registry (https://addons.kubevela.net).", "generator": "Docusaurus v2.4.3", "title": "Overview | KubeVela", "ogTitle": "Overview | KubeVela", "og:url": "https://kubevela.io/docs/v1.8/reference/addons/overview/", "docsearch:language": "en", "og:title": "Overview | KubeVela", "msapplication-config": "/img/favicons/browserconfig.xml", "og:description": "These following out-of-box addons are all verified and maintained by KubeVela community registry (https://addons.kubevela.net).", "docusaurus_version": "v1.8", "language": "en", "ogUrl": "https://kubevela.io/docs/v1.8/reference/addons/overview/", "scrapeId": "fce51a00-bfb7-4573-8ac1-5073460160fd", "sourceURL": "https://kubevela.io/docs/v1.8/reference/addons/overview", "url": "https://kubevela.io/docs/v1.8/reference/addons/overview/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"Pyroscope Addon for KubeVela\"?\n\nAssistant: This documentation provides information on how to install and use the Pyroscope addon for KubeVela, including examples for various programming languages.\n\nHere's a detailed explanation:\n\n\n## install\n```codeBlockLines_e6Vv\nvela addon enable pyroscope\n```After enable pyroscope successfully, you can execute command to expose the port `4040` for Dashboard UI.\n```codeBlockLines_e6Vv\nvela port-forward addon-pyroscope -n vela-system\n```\n\n## How to use pyroscope trait\nUse a component typed webservice to start, keep the following to pyroscope-demo.yaml, then vela up -f app-demo.yaml\n```codeBlockLines_e6Vv\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: pyroscope-app\n  namespace: fourier\nspec:\n  components:\n    - name: pyroscope-comp-01\n      type: webservice\n      properties:\n        image: nginx:latest\n        ports:\n          - expose: true\n            port: 80\n            protocol: TCP\n        imagePullPolicy: IfNotPresent\n      traits:\n        - type: pyroscope\n          properties:\n            server: \"http://pyroscope-server:9084\"\n            logger: \"pyroscope.StandardLogger\"\n            appName: \"pyroscope-test\"\n        - type: scaler\n          properties:\n            replicas: 1\n```\nAnd the parameter `appName` is a optional field, default value is the component name.\n\n## How to use pyroscope client\n### Pyroscope for Golang applications\n- To start profiling a Go application, you need to include our go module in your app\n```codeBlockLines_e6Vv\n# make sure you also upgrade pyroscope server to version 0.3.1 or higher\ngo get github.com/pyroscope-io/client/pyroscope\n```\n- Then add the following code to your application:\n```codeBlockLines_e6Vv\npackage main\n\nimport \"github.com/pyroscope-io/client/pyroscope\"\n\nfunc main() {\n  pyroscope.Start(pyroscope.Config{\n    ApplicationName: \"simple.golang.app\",\n    // replace this with the address of pyroscope server\n    ServerAddress:   \"http://pyroscope-server:4040\",\n    // you can disable logging by setting this to nil\n    Logger:          pyroscope.StandardLogger,\n\n    // optionally, if authentication is enabled, specify the API key:\n    // AuthToken: os.Getenv(\"PYROSCOPE_AUTH_TOKEN\"),\n\n    // by default all profilers are enabled, but you can select the ones you want to use:\n    ProfileTypes: []pyroscope.ProfileType{\n      pyroscope.ProfileCPU,\n      pyroscope.ProfileAllocObjects,\n      pyroscope.ProfileAllocSpace,\n      pyroscope.ProfileInuseObjects,\n      pyroscope.ProfileInuseSpace,\n    },\n  })\n\n  // your code goes here\n}\n```\n- Check out the [examples](https://github.com/pyroscope-io/pyroscope/tree/main/examples/golang-push) directory in our repository to learn more\n\n### Pyroscope for Java applications\n- Java integration is distributed as a single jar file: pyroscope.jar. It contains native async-profiler libraries\n- To start profiling a Java application, run your application with pyroscope.jar javaagent:\n```codeBlockLines_e6Vv\nexport PYROSCOPE_APPLICATION_NAME=my.java.app\nexport PYROSCOPE_SERVER_ADDRESS=http://pyroscope-server:4040\n\n# Optionally, if authentication is enabled, specify the API key.\n# export PYROSCOPE_AUTH_TOKEN={YOUR_API_KEY}\n\njava -javaagent:pyroscope.jar -jar app.jar\n```\n- Check out the [examples](https://github.com/pyroscope-io/pyroscope/tree/main/examples/java) folder in our repository to learn more\n\n### Pyroscope for .net applications\n- To start profiling a .NET application inside a container, you may wrap your application with pyroscope exec as an entrypoint of your image. The tricky part is that you need to copy pyroscope binary to your docker container. To do that, use COPY --from command in your Dockerfile.\nThe following example Dockerfile shows how to build the image:\n```codeBlockLines_e6Vv\nFROM mcr.microsoft.com/dotnet/sdk:5.0\n\nWORKDIR /dotnet\n\nCOPY --from=pyroscope/pyroscope:latest /usr/bin/pyroscope /usr/bin/pyroscope\nADD my-app .\nRUN dotnet publish -o . -r $(dotnet --info | grep RID | cut -b 6- | tr -d ' ')\n\n# optionally you may set the pyroscope server address as well as the app name and other configuration options.\nENV PYROSCOPE_SERVER_ADDRESS=http://pyroscope-server:4040\nENV PYROSCOPE_APPLICATION_NAME=my.dotnet.app\nENV PYROSCOPE_LOG_LEVEL=debug\n\nCMD [\"pyroscope\", \"exec\", \"dotnet\", \"/dotnet/my-app.dll\"]\n```\n- If you are using Docker Compose, you can run both pyroscope server and agent with this configuration:\n```codeBlockLines_e6Vv\n---\nversion: \"3.9\"\nservices:\n  pyroscope-server:\n    image: \"pyroscope/pyroscope:latest\"\n    ports:\n      - \"4040:4040\"\n    command:\n      - \"server\"\n  app:\n    image: \"my-app:latest\"\n    environment:\n      PYROSCOPE_APPLICATION_NAME: my.dotnet.app\n      PYROSCOPE_SERVER_ADDRESS: http://pyroscope-server:4040\n      PYROSCOPE_LOG_LEVEL: debug\n      ASPNETCORE_URLS: http://*:5000\n    ports:\n      - \"5000:5000\"\n    cap_add:\n      - SYS_PTRACE\n```\n- Check out the [examples](https://github.com/pyroscope-io/pyroscope/tree/main/examples/dotnet) folder in our repository to learn more\n\n### Pyroscope for Python applications\n- First, install pyroscope-io pip package:\n```codeBlockLines_e6Vv\npip install pyroscope-io\n```\n- Add the following code to your application. This code will initialize pyroscope profiler and start profiling:\n```codeBlockLines_e6Vv\nimport pyroscope\n\npyroscope.configure(\n  app_name       = \"my.python.app\", # replace this with some name for your application\n  server_address = \"http://my-pyroscope-server:4040\", # replace this with the address of your pyroscope server\n# auth_token     = \"{YOUR_API_KEY}\", # optionally, if authentication is enabled, specify the API key\n)\n```\n- Check out the [example python project in pyroscope repository](https://github.com/pyroscope-io/pyroscope/tree/main/examples/python) for examples of how you can use these features.\n\n### Pyroscope for PHP applications\n- To start profiling a PHP application in a container, you may wrap your application with pyroscope exec as an entrypoint of your image. The tricky part is that you need to copy pyroscope binary to your docker container. To do that, use COPY --from command in your Dockerfile.\nThe following example Dockerfile shows how to build the image:\n```codeBlockLines_e6Vv\nFROM php:7.3.27\n\nWORKDIR /var/www/html\n\n# this copies pyroscope binary from pyroscope image to your image:\nCOPY --from=pyroscope/pyroscope:latest /usr/bin/pyroscope /usr/bin/pyroscope\nCOPY main.php ./main.php\n\n# optionally you may set the pyroscope server address as well as the app name, make sure you change these:\nENV PYROSCOPE_APPLICATION_NAME=my.php.app\nENV PYROSCOPE_SERVER_ADDRESS=http://pyroscope:4040/\n\n# this starts your app with pyroscope profiler, make sure to change \"php\" and \"main.php\" to the actual command.\nCMD [\"pyroscope\", \"exec\", \"php\", \"main.php\"]\n```\n- If you are using Docker Compose, you can run both pyroscope server and agent with this configuration:\n```codeBlockLines_e6Vv\n---\nservices:\n  pyroscope-server:\n    image: \"pyroscope/pyroscope:latest\"\n    ports:\n      - \"4040:4040\"\n    command:\n      - \"server\"\n  app:\n    image: \"my-app:latest\"\n    env:\n      PYROSCOPE_SERVER_ADDRESS: http://pyroscope-server:4040\n      PYROSCOPE_APPLICATION_NAME: my.php.app\n    cap_add:\n      - SYS_PTRACE\n```\n- Check out the [examples](https://github.com/pyroscope-io/pyroscope/tree/main/examples/php) folder in our repository to learn more\n\n### Pyroscope for NodeJS applications\n- To start profiling a NodeJS application, you need to include the npm module in your app:\n```codeBlockLines_e6Vv\nnpm install @pyroscope/nodejs\n\n# or\nyarn add @pyroscope/nodejs\n```\n- Then add the following code to your application:\n```codeBlockLines_e6Vv\nconst Pyroscope = require('@pyroscope/nodejs');\n\nPyroscope.init({\n  serverAddress: 'http://pyroscope:4040',\n  appName: 'myNodeService'\n});\n\nPyroscope.start()\n```\n- Check out the [examples](https://github.com/pyroscope-io/pyroscope/tree/main/examples/nodejs) directory in our repository to learn more.\n\n## uninstall\n```codeBlockLines_e6Vv\nvela addon disable pyroscope\n```\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.8/reference/addons/pyroscope", "title": "Pyroscope Addon for KubeVela", "description": "This documentation provides information on how to install and use the Pyroscope addon for KubeVela, including examples for various programming languages.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 16:40:56", "type": "overview", "page_metadata": {"theme-color": "#ffffff", "viewport": "width=device-width, initial-scale=1.0", "msapplication-config": "/img/favicons/browserconfig.xml", "og:title": "Pyroscope | KubeVela", "docusaurus_tag": "docs-default-v1.8", "title": "Pyroscope | KubeVela", "og:url": "https://kubevela.io/docs/v1.8/reference/addons/pyroscope/", "docusaurus_locale": "en", "docsearch:version": "v1.8", "docusaurus_version": "v1.8", "docsearch:language": "en", "ogUrl": "https://kubevela.io/docs/v1.8/reference/addons/pyroscope/", "docsearch:docusaurus_tag": "docs-default-v1.8", "ogDescription": "Pyroscope is an open source platform, consisting of server and agent. It allows the user to collect, store, and query the profiling data in a CPU and disk efficient way.", "language": "en", "generator": "Docusaurus v2.4.3", "twitter:card": "summary_large_image", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "og:description": "Pyroscope is an open source platform, consisting of server and agent. It allows the user to collect, store, and query the profiling data in a CPU and disk efficient way.", "ogTitle": "Pyroscope | KubeVela", "description": "Pyroscope is an open source platform, consisting of server and agent. It allows the user to collect, store, and query the profiling data in a CPU and disk efficient way.", "scrapeId": "11ad4308-4fd3-485f-99e4-8f06588bd1e4", "sourceURL": "https://kubevela.io/docs/v1.8/reference/addons/pyroscope", "url": "https://kubevela.io/docs/v1.8/reference/addons/pyroscope/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"Pyroscope Addon for KubeVela\"?\n\nAssistant: Here are some code examples:\n\n### Install Pyroscope Addon\n```yaml\nvela addon enable pyroscope\n```\n\n### Expose Dashboard UI Port\n```yaml\nvela port-forward addon-pyroscope -n vela-system\n```\n\n### Pyroscope Application YAML Example\n```yaml\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: pyroscope-app\n  namespace: fourier\nspec:\n  components:\n    - name: pyroscope-comp-01\n      type: webservice\n      properties:\n        image: nginx:latest\n        ports:\n          - expose: true\n            port: 80\n            protocol: TCP\n        imagePullPolicy: IfNotPresent\n      traits:\n        - type: pyroscope\n          properties:\n            server: \"http://pyroscope-server:9084\"\n            logger: \"pyroscope.StandardLogger\"\n            appName: \"pyroscope-test\"\n        - type: scaler\n          properties:\n            replicas: 1\n```\n\n### Golang Application Profiling Code\n```yaml\npackage main\n\nimport \"github.com/pyroscope-io/client/pyroscope\"\n\nfunc main() {\n  pyroscope.Start(pyroscope.Config{\n    ApplicationName: \"simple.golang.app\",\n    ServerAddress:   \"http://pyroscope-server:4040\",\n    Logger:          pyroscope.StandardLogger,\n    ProfileTypes: []pyroscope.ProfileType{\n      pyroscope.ProfileCPU,\n      pyroscope.ProfileAllocObjects,\n      pyroscope.ProfileAllocSpace,\n      pyroscope.ProfileInuseObjects,\n      pyroscope.ProfileInuseSpace,\n    },\n  })\n}\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.8/reference/addons/pyroscope", "title": "Pyroscope Addon for KubeVela", "description": "This documentation provides information on how to install and use the Pyroscope addon for KubeVela, including examples for various programming languages.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 16:40:56", "type": "code_examples", "page_metadata": {"theme-color": "#ffffff", "viewport": "width=device-width, initial-scale=1.0", "msapplication-config": "/img/favicons/browserconfig.xml", "og:title": "Pyroscope | KubeVela", "docusaurus_tag": "docs-default-v1.8", "title": "Pyroscope | KubeVela", "og:url": "https://kubevela.io/docs/v1.8/reference/addons/pyroscope/", "docusaurus_locale": "en", "docsearch:version": "v1.8", "docusaurus_version": "v1.8", "docsearch:language": "en", "ogUrl": "https://kubevela.io/docs/v1.8/reference/addons/pyroscope/", "docsearch:docusaurus_tag": "docs-default-v1.8", "ogDescription": "Pyroscope is an open source platform, consisting of server and agent. It allows the user to collect, store, and query the profiling data in a CPU and disk efficient way.", "language": "en", "generator": "Docusaurus v2.4.3", "twitter:card": "summary_large_image", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "og:description": "Pyroscope is an open source platform, consisting of server and agent. It allows the user to collect, store, and query the profiling data in a CPU and disk efficient way.", "ogTitle": "Pyroscope | KubeVela", "description": "Pyroscope is an open source platform, consisting of server and agent. It allows the user to collect, store, and query the profiling data in a CPU and disk efficient way.", "scrapeId": "11ad4308-4fd3-485f-99e4-8f06588bd1e4", "sourceURL": "https://kubevela.io/docs/v1.8/reference/addons/pyroscope", "url": "https://kubevela.io/docs/v1.8/reference/addons/pyroscope/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"Pyroscope Addon for KubeVela\"?\n\nAssistant: Here are the recommended best practices:\n\n• Make sure to upgrade the Pyroscope server to version 0.3.1 or higher for Golang applications.\n• The parameter `appName` is optional in the Pyroscope trait, with a default value of the component name.\n• For .NET applications, ensure to copy the Pyroscope binary to your Docker container using the COPY --from command in your Dockerfile.\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.8/reference/addons/pyroscope", "title": "Pyroscope Addon for KubeVela", "description": "This documentation provides information on how to install and use the Pyroscope addon for KubeVela, including examples for various programming languages.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 16:40:56", "type": "best_practices", "page_metadata": {"theme-color": "#ffffff", "viewport": "width=device-width, initial-scale=1.0", "msapplication-config": "/img/favicons/browserconfig.xml", "og:title": "Pyroscope | KubeVela", "docusaurus_tag": "docs-default-v1.8", "title": "Pyroscope | KubeVela", "og:url": "https://kubevela.io/docs/v1.8/reference/addons/pyroscope/", "docusaurus_locale": "en", "docsearch:version": "v1.8", "docusaurus_version": "v1.8", "docsearch:language": "en", "ogUrl": "https://kubevela.io/docs/v1.8/reference/addons/pyroscope/", "docsearch:docusaurus_tag": "docs-default-v1.8", "ogDescription": "Pyroscope is an open source platform, consisting of server and agent. It allows the user to collect, store, and query the profiling data in a CPU and disk efficient way.", "language": "en", "generator": "Docusaurus v2.4.3", "twitter:card": "summary_large_image", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "og:description": "Pyroscope is an open source platform, consisting of server and agent. It allows the user to collect, store, and query the profiling data in a CPU and disk efficient way.", "ogTitle": "Pyroscope | KubeVela", "description": "Pyroscope is an open source platform, consisting of server and agent. It allows the user to collect, store, and query the profiling data in a CPU and disk efficient way.", "scrapeId": "11ad4308-4fd3-485f-99e4-8f06588bd1e4", "sourceURL": "https://kubevela.io/docs/v1.8/reference/addons/pyroscope", "url": "https://kubevela.io/docs/v1.8/reference/addons/pyroscope/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"Dry Run\"?\n\nAssistant: This page covers the dry run feature in KubeVela, which allows users to check the correctness of application configurations and definitions.\n\nHere's a detailed explanation:\n\n\n## Introduction\nThe dry run feature is a very useful way to check the correctness of the application configuration and definitions. It will render the application and print the output resources that checked on the service side. If the definitions(component, trait) is invalid, the dry run will print the error message.\n\nWhen you do the following things, you'd better use `dry-run`.\n\n- Create or update an application.\n- Create or update the definition, and dry run some example applications.\n\n## Dry run via CLI\nThere is a simple application:\n\n```yaml\nkind: Application\napiVersion: core.oam.dev/v1beta1\nmetadata:\n  name: webservice-app\nspec:\n  components:\n    - name: frontend\n      type: webservice\n      properties:\n        image: oamdev/testapp:v1\n        cmd: [\"node\", \"server.js\"]\n        ports:\n          - port: 8080\n            expose: true\n      traits:\n        - type: scaler\n          properties:\n            replicas: 1\n```\n\nCopy it and write a file `app.yaml`, execute the following command, and then the resources will be printed.\n\n```bash\nvela dry-run app.yaml\n```\n\nexpected output\n\n```yaml\n---\n# Application(webservice-app) -- Component(frontend)\n---\n\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations: {}\n  labels:\n    app.oam.dev/appRevision: \"\"\n    app.oam.dev/component: frontend\n    app.oam.dev/name: webservice-app\n    app.oam.dev/namespace: default\n    app.oam.dev/resourceType: WORKLOAD\n    workload.oam.dev/type: webservice\n  name: frontend\n  namespace: default\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app.oam.dev/component: frontend\n  template:\n    metadata:\n      labels:\n        app.oam.dev/component: frontend\n        app.oam.dev/name: webservice-app\n    spec:\n      containers:\n      - command:\n        - node\n        - server.js\n        image: oamdev/testapp:v1\n        name: frontend\n        ports:\n        - containerPort: 8080\n          name: port-8080\n          protocol: TCP\n\n---\n## From the auxiliary workload\napiVersion: v1\nkind: Service\nmetadata:\n  annotations: {}\n  labels:\n    app.oam.dev/appRevision: \"\"\n    app.oam.dev/component: frontend\n    app.oam.dev/name: webservice-app\n    app.oam.dev/namespace: default\n    app.oam.dev/resourceType: TRAIT\n    trait.oam.dev/resource: webserviceExpose\n    trait.oam.dev/type: AuxiliaryWorkload\n  name: frontend\n  namespace: default\nspec:\n  ports:\n  - name: port-8080\n    port: 8080\n    targetPort: 8080\n  selector:\n    app.oam.dev/component: frontend\n  type: ClusterIP\n---\n```\n\nIf we set the expose field of the port as false, the output resources do not include the `Service`. If we set the replicas field as \"1\", the output will be an error message:\n\n```bash\nError: validate application: ./app.yaml by dry-run: admission webhook \"validating.core.oam.dev.v1beta1.applications\" denied the request: field \"schematic\": Invalid value error encountered, cannot evaluate trait \"scaler\": invalid template of trait scaler after merge with parameter and context: parameter.replicas: conflicting values (*1 | int) and \"1\" (mismatched types int and string) (and 1 more errors).\n```\n\nThis means the replicas field is int type but we provide a string value, this application configuration is not valid.\n\n## Dry run with policy and workflow via CLI\ntip\n\nOverride/topology Policies and deploy workflow are supported in v1.7.0+ now. While there're still some limitation that `dry-run` with policy and workflow will only take `override`, `topology` policies and `deploy` workflow step into considerations. Other workflow steps will be ignored.\n\nLet's take the following application as example, the application explicitly specify `override`, `topology` policies and `deploy` workflow step.\n\n```yaml\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: first-vela-app\nspec:\n  components:\n    - name: express-server\n      type: webservice\n      properties:\n        image: oamdev/hello-world\n        ports:\n         - port: 8000\n           expose: true\n      traits:\n        - type: scaler\n          properties:\n            replicas: 1\n  policies:\n    - name: target-default\n      type: topology\n      properties:\n        clusters: [\"local\"]\n        namespace: \"default\"\n    - name: target-prod\n      type: topology\n      properties:\n        clusters: [\"local\"]\n        namespace: \"prod\"\n    - name: deploy-ha\n      type: override\n      properties:\n        components:\n          - type: webservice\n            traits:\n              - type: scaler\n                properties:\n                  replicas: 5\n  workflow:\n    steps:\n      - name: deploy2default\n        type: deploy\n        properties:\n          policies: [\"target-default\"]\n      - name: manual-approval\n        type: suspend\n      - name: deploy2prod\n        type: deploy\n        properties:\n          policies: [\"target-prod\", \"deploy-ha\"]\n```\n\nDry run will produce rendered results for both `deploy2default` and `deploy2prod` deploy steps as below:\n\nexpected output\n\n```yaml\n---\n# Application(first-vela-app with topology target-default) -- Component(express-server)\n---\n\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations: {}\n  labels:\n    app.oam.dev/appRevision: \"\"\n    app.oam.dev/component: express-server\n    app.oam.dev/name: first-vela-app\n    app.oam.dev/namespace: default\n    app.oam.dev/resourceType: WORKLOAD\n    workload.oam.dev/type: webservice\n  name: express-server\n  namespace: default\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app.oam.dev/component: express-server\n  template:\n    metadata:\n      labels:\n        app.oam.dev/component: express-server\n        app.oam.dev/name: first-vela-app\n    spec:\n      containers:\n      - image: oamdev/hello-world\n        name: express-server\n        ports:\n        - containerPort: 8000\n          name: port-8000\n          protocol: TCP\n\n---\n## From the auxiliary workload\napiVersion: v1\nkind: Service\nmetadata:\n  annotations: {}\n  labels:\n    app.oam.dev/appRevision: \"\"\n    app.oam.dev/component: express-server\n    app.oam.dev/name: first-vela-app\n    app.oam.dev/namespace: default\n    app.oam.dev/resourceType: TRAIT\n    trait.oam.dev/resource: webserviceExpose\n    trait.oam.dev/type: AuxiliaryWorkload\n  name: express-server\n  namespace: default\nspec:\n  ports:\n  - name: port-8000\n    port: 8000\n    targetPort: 8000\n  selector:\n    app.oam.dev/component: express-server\n  type: ClusterIP\n---\n\n---\n# Application(first-vela-app with topology target-prod) -- Component(express-server)\n---\n\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations: {}\n  labels:\n    app.oam.dev/appRevision: \"\"\n    app.oam.dev/component: express-server\n    app.oam.dev/name: first-vela-app\n    app.oam.dev/namespace: default\n    app.oam.dev/resourceType: WORKLOAD\n    workload.oam.dev/type: webservice\n  name: express-server\n  namespace: default\nspec:\n  replicas: 5\n  selector:\n    matchLabels:\n      app.oam.dev/component: express-server\n  template:\n    metadata:\n      labels:\n        app.oam.dev/component: express-server\n        app.oam.dev/name: first-vela-app\n    spec:\n      containers:\n      - image: oamdev/hello-world\n        name: express-server\n        ports:\n        - containerPort: 8000\n          name: port-8000\n          protocol: TCP\n\n---\n## From the auxiliary workload\napiVersion: v1\nkind: Service\nmetadata:\n  annotations: {}\n  labels:\n    app.oam.dev/appRevision: \"\"\n    app.oam.dev/component: express-server\n    app.oam.dev/name: first-vela-app\n    app.oam.dev/namespace: default\n    app.oam.dev/resourceType: TRAIT\n    trait.oam.dev/resource: webserviceExpose\n    trait.oam.dev/type: AuxiliaryWorkload\n  name: express-server\n  namespace: default\nspec:\n  ports:\n  - name: port-8000\n    port: 8000\n    targetPort: 8000\n  selector:\n    app.oam.dev/component: express-server\n  type: ClusterIP\n---\n```\n\nEach deploy workflow step with topology policy will render individual result.\nIt can be a bit redundant for you as you may just need to dry run for one environment at a time. The, you can use the external workflow feature like below.\n\n## External Workflow Feature\nFirstly, define policy and workflow as below in individual files:\n\n- The `target-prod.yaml` and `ha.yaml` corresponding to the `production` environment.\n\n```yaml\n# target-prod.yaml\napiVersion: core.oam.dev/v1alpha1\nkind: Policy\nmetadata:\n    name: target-prod\ntype: topology\nproperties:\n    clusters: [\"local\"]\n    namespace: \"prod\"\n```\n\n```yaml\n# ha.yaml\napiVersion: core.oam.dev/v1alpha1\nkind: Policy\nmetadata:\n    name: ha\ntype: override\nproperties:\n    components:\n  - type: webservice\n    traits:\n    - type: scaler\n      properties:\n        replicas: 5\n```\n\n- The `prod-workflow.yaml` can glue them together.\n\n```yaml\n# prod-workflow.yaml\napiVersion: core.oam.dev/v1alpha1\nkind: Workflow\nmetadata:\n    name: deploy-prod\nsteps:\n  - type: deploy\n    name: deploy-prod\n    properties:\n      policies: [\"ha\", \"target-prod\"]\n```\n\n- Then the application can reference the workflow as below.\n\n```yaml\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n    name: first-vela-app\nspec:\n    components:\n    - name: express-server\n      type: webservice\n      properties:\n        image: oamdev/hello-world\n        ports:\n        - port: 8000\n          expose: true\n      traits:\n        - type: scaler\n          properties:\n            replicas: 1\nworkflow:\n    ref: deploy-prod\n```\n\nThe dry run command can be:\n\n```bash\nvela dry-run -f app.yaml -f target-prod.yaml -f ha.yaml -f prod-workflow.yaml\n```\n\nThen, the dry-run results will only contain resources in the `production` environment.\n\n## Dry Run via UI\nClicking the `Deploy` button to open the workflow selector dialog. You could select a workflow(every workflow corresponding to an environment) and click the `DryRun` button to execute a dry run. If passed, the result is like this.\n\n![dry-run-successfully](https://static.kubevela.net/images/1.5/dry-run-success.jpg)\n\nThe result report is different from the CLI, there is a complete application configuration that is generated from the application metadata, you could check it. Different environments may have different application configurations.\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.8/tutorials/dry-run", "title": "Dry Run", "description": "This page covers the dry run feature in KubeVela, which allows users to check the correctness of application configurations and definitions.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 16:44:56", "type": "overview", "page_metadata": {"title": "Dry Run | KubeVela", "ogTitle": "Dry Run | KubeVela", "docsearch:version": "v1.8", "language": "en", "og:title": "Dry Run | KubeVela", "og:description": "The dry run feature is a very useful way to check the correctness of the application configuration and definitions. It will render the application and print the output resources that checked on the service side. If the definitions(component, trait) is invalid, the dry run will print the error message.", "viewport": "width=device-width, initial-scale=1.0", "twitter:card": "summary_large_image", "ogDescription": "The dry run feature is a very useful way to check the correctness of the application configuration and definitions. It will render the application and print the output resources that checked on the service side. If the definitions(component, trait) is invalid, the dry run will print the error message.", "docsearch:docusaurus_tag": "docs-default-v1.8", "docusaurus_locale": "en", "docusaurus_version": "v1.8", "docsearch:language": "en", "theme-color": "#ffffff", "docusaurus_tag": "docs-default-v1.8", "ogUrl": "https://kubevela.io/docs/v1.8/tutorials/dry-run/", "generator": "Docusaurus v2.4.3", "og:url": "https://kubevela.io/docs/v1.8/tutorials/dry-run/", "description": "The dry run feature is a very useful way to check the correctness of the application configuration and definitions. It will render the application and print the output resources that checked on the service side. If the definitions(component, trait) is invalid, the dry run will print the error message.", "msapplication-config": "/img/favicons/browserconfig.xml", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "scrapeId": "d785634d-2ab2-44b3-a9c5-36099231781c", "sourceURL": "https://kubevela.io/docs/v1.8/tutorials/dry-run", "url": "https://kubevela.io/docs/v1.8/tutorials/dry-run/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"Dry Run\"?\n\nAssistant: Here are some code examples:\n\n### Simple Application Example\n```yaml\nkind: Application\napiVersion: core.oam.dev/v1beta1\nmetadata:\n  name: webservice-app\nspec:\n  components:\n    - name: frontend\n      type: webservice\n      properties:\n        image: oamdev/testapp:v1\n        cmd: [\"node\", \"server.js\"]\n        ports:\n          - port: 8080\n            expose: true\n      traits:\n        - type: scaler\n          properties:\n            replicas: 1\n\n```\n\n### Dry Run Command\n```yaml\nvela dry-run app.yaml\n```\n\n### Expected Output for Simple Application\n```yaml\n---\n# Application(webservice-app) -- Component(frontend)\n---\n\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations: {}\n  labels:\n    app.oam.dev/appRevision: \"\"\n    app.oam.dev/component: frontend\n    app.oam.dev/name: webservice-app\n    app.oam.dev/namespace: default\n    app.oam.dev/resourceType: WORKLOAD\n    workload.oam.dev/type: webservice\n  name: frontend\n  namespace: default\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app.oam.dev/component: frontend\n  template:\n    metadata:\n      labels:\n        app.oam.dev/component: frontend\n        app.oam.dev/name: webservice-app\n    spec:\n      containers:\n      - command:\n        - node\n        - server.js\n        image: oamdev/testapp:v1\n        name: frontend\n        ports:\n        - containerPort: 8080\n          name: port-8080\n          protocol: TCP\n\n---\n## From the auxiliary workload\napiVersion: v1\nkind: Service\nmetadata:\n  annotations: {}\n  labels:\n    app.oam.dev/appRevision: \"\"\n    app.oam.dev/component: frontend\n    app.oam.dev/name: webservice-app\n    app.oam.dev/namespace: default\n    app.oam.dev/resourceType: TRAIT\n    trait.oam.dev/resource: webserviceExpose\n    trait.oam.dev/type: AuxiliaryWorkload\n  name: frontend\n  namespace: default\nspec:\n  ports:\n  - name: port-8080\n    port: 8080\n    targetPort: 8080\n  selector:\n    app.oam.dev/component: frontend\n  type: ClusterIP\n---\n\n```\n\n### Error Message Example\n```yaml\nError: validate application: ./app.yaml by dry-run: admission webhook \"validating.core.oam.dev.v1beta1.applications\" denied the request: field \"schematic\": Invalid value error encountered, cannot evaluate trait \"scaler\": invalid template of trait scaler after merge with parameter and context: parameter.replicas: conflicting values (*1 | int) and \"1\" (mismatched types int and string) (and 1 more errors).\n```\n\n### External Workflow Example\n```yaml\nvela dry-run -f app.yaml -f target-prod.yaml -f ha.yaml -f prod-workflow.yaml\n```\n\n### Dry Run with Merge Flag\n```yaml\nvela dry-run -f app.yaml -f target-prod.yaml -f workflow.yaml --merge\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.8/tutorials/dry-run", "title": "Dry Run", "description": "This page covers the dry run feature in KubeVela, which allows users to check the correctness of application configurations and definitions.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 16:44:56", "type": "code_examples", "page_metadata": {"title": "Dry Run | KubeVela", "ogTitle": "Dry Run | KubeVela", "docsearch:version": "v1.8", "language": "en", "og:title": "Dry Run | KubeVela", "og:description": "The dry run feature is a very useful way to check the correctness of the application configuration and definitions. It will render the application and print the output resources that checked on the service side. If the definitions(component, trait) is invalid, the dry run will print the error message.", "viewport": "width=device-width, initial-scale=1.0", "twitter:card": "summary_large_image", "ogDescription": "The dry run feature is a very useful way to check the correctness of the application configuration and definitions. It will render the application and print the output resources that checked on the service side. If the definitions(component, trait) is invalid, the dry run will print the error message.", "docsearch:docusaurus_tag": "docs-default-v1.8", "docusaurus_locale": "en", "docusaurus_version": "v1.8", "docsearch:language": "en", "theme-color": "#ffffff", "docusaurus_tag": "docs-default-v1.8", "ogUrl": "https://kubevela.io/docs/v1.8/tutorials/dry-run/", "generator": "Docusaurus v2.4.3", "og:url": "https://kubevela.io/docs/v1.8/tutorials/dry-run/", "description": "The dry run feature is a very useful way to check the correctness of the application configuration and definitions. It will render the application and print the output resources that checked on the service side. If the definitions(component, trait) is invalid, the dry run will print the error message.", "msapplication-config": "/img/favicons/browserconfig.xml", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "scrapeId": "d785634d-2ab2-44b3-a9c5-36099231781c", "sourceURL": "https://kubevela.io/docs/v1.8/tutorials/dry-run", "url": "https://kubevela.io/docs/v1.8/tutorials/dry-run/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"Dry Run\"?\n\nAssistant: Here are the recommended best practices:\n\n• Use dry-run when creating or updating an application or definition.\n• Ensure that the replicas field is of the correct type (int) when configuring applications.\n• Use the --merge flag to include external policies and workflows when they are not referenced in the application.\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.8/tutorials/dry-run", "title": "Dry Run", "description": "This page covers the dry run feature in KubeVela, which allows users to check the correctness of application configurations and definitions.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 16:44:56", "type": "best_practices", "page_metadata": {"title": "Dry Run | KubeVela", "ogTitle": "Dry Run | KubeVela", "docsearch:version": "v1.8", "language": "en", "og:title": "Dry Run | KubeVela", "og:description": "The dry run feature is a very useful way to check the correctness of the application configuration and definitions. It will render the application and print the output resources that checked on the service side. If the definitions(component, trait) is invalid, the dry run will print the error message.", "viewport": "width=device-width, initial-scale=1.0", "twitter:card": "summary_large_image", "ogDescription": "The dry run feature is a very useful way to check the correctness of the application configuration and definitions. It will render the application and print the output resources that checked on the service side. If the definitions(component, trait) is invalid, the dry run will print the error message.", "docsearch:docusaurus_tag": "docs-default-v1.8", "docusaurus_locale": "en", "docusaurus_version": "v1.8", "docsearch:language": "en", "theme-color": "#ffffff", "docusaurus_tag": "docs-default-v1.8", "ogUrl": "https://kubevela.io/docs/v1.8/tutorials/dry-run/", "generator": "Docusaurus v2.4.3", "og:url": "https://kubevela.io/docs/v1.8/tutorials/dry-run/", "description": "The dry run feature is a very useful way to check the correctness of the application configuration and definitions. It will render the application and print the output resources that checked on the service side. If the definitions(component, trait) is invalid, the dry run will print the error message.", "msapplication-config": "/img/favicons/browserconfig.xml", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "scrapeId": "d785634d-2ab2-44b3-a9c5-36099231781c", "sourceURL": "https://kubevela.io/docs/v1.8/tutorials/dry-run", "url": "https://kubevela.io/docs/v1.8/tutorials/dry-run/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela Code Conventions\"?\n\nAssistant: This documentation covers the code conventions for all kinds of code related to the KubeVela project, including Go, Bash, API, Testing, Directory and File, and Logging conventions.\n\nHere's a detailed explanation:\n\n\n## Go Code Conventions\n- [Go Code Review Comments](https://github.com/golang/go/wiki/CodeReviewComments)\n\n- [Effective Go](https://golang.org/doc/effective_go.html)\n\n- Know and avoid [Go landmines](https://gist.github.com/lavalamp/4bd23295a9f32706a48f)\n\n- Comment your code.\n\n  - [Go's commenting conventions](https://go.dev/blog/godoc)\n  - If reviewers ask questions about why the code is the way it is, that's a sign that comments might be helpful.\n- Command-line flags should use dashes, not underscores\n\n- API\n\n  - According to RFC3986, URLs are \"case sensitive\". KubeVela uses snake_case for API URLs.\n    - e.g.: `POST /v1/cloud_clusters`\n- Naming\n\n  - Please consider package name when selecting an interface name, and avoid redundancy.\n\n    - e.g.: `storage.Interface` is better than `storage.StorageInterface`.\n  - Do not use uppercase characters, underscores, or dashes in package names.\n\n  - Please consider parent directory name when choosing a package name.\n\n    - so pkg/controllers/autoscaler/foo.go should say `package autoscaler`\n      not `package autoscalercontroller`.\n    - Unless there's a good reason, the `package foo` line should match\n      the name of the directory in which the .go file exists.\n    - Importers can use a different name if they need to disambiguate.\n  - Locks should be called `lock` and should never be embedded (always `lock sync.Mutex`). When multiple locks are present, give each lock a distinct name following Go conventions - `stateLock`, `mapLock` etc.\n\n## Bash or Script Conventions\n- [https://google.github.io/styleguide/shell.xml](https://google.github.io/styleguide/shell.xml)\n\n- Ensure that build, release, test, and cluster-management scripts run on macOS\n\n## API Conventions\n- KubeVela follows the Kubernetes conventions\n\n  - [API changes](https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api_changes.md)\n\n  - [API conventions](https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md)\n\n## Testing Conventions\n- All new packages and most new significant functionality must come with unit tests\n\n- Table-driven tests are preferred for testing multiple scenarios/inputs; for example, see [TestNamespaceAuthorization](https://git.k8s.io/kubernetes/test/integration/auth/auth_test.go)\n\n- Unit tests must pass on macOS and Windows platforms - if you use Linux specific features, your test case must either be skipped on windows or compiled out (skipped is better when running Linux specific commands, compiled out is required when your code does not compile on Windows).\n\n- Avoid waiting for a short amount of time (or without waiting) and expect an asynchronous thing to happen (e.g. wait for 1 seconds and expect a Pod to be running). Wait and retry instead.\n\n- Significant features should come with integration (test/integration) and/or end-to-end (e2e/) tests.\n\n- Including new vela cli commands and major features of existing commands\n\nPlease refer to [the principle of test](https://kubevela.io/docs/v1.9/contributor/principle-of-test/) for more details.\n\n## Directory and file Conventions\n- Avoid package sprawl. Find an appropriate subdirectory for new packages.\n\n  - Libraries with no more appropriate home belong in new package subdirectories of pkg/util\n- Avoid general utility packages. Packages called \"util\" are suspect. Instead, derive a name that describes your desired function. For example, the utility functions dealing with waiting for operations are in the \"wait\" package and include functionality like Poll. So the full name is wait.Poll\n\n- All filenames should be lowercase\n\n- Go source files and directories use underscores, not dashes\n\n  - Package directories should generally avoid using separators as much as possible (when packages are multiple words, they usually should be in nested subdirectories).\n- Document directories and filenames should use dashes rather than underscores\n\n- Contrived examples that illustrate system features belong in `/docs/user-guide` or `/docs/admin`, depending on whether it is a feature primarily intended for users that deploy applications or cluster administrators, respectively. Actual application examples belong in /examples.\n\n  - Examples should also illustrate [best practices for configuration and using the system](https://kubernetes.io/docs/concepts/configuration/overview/)\n- Third-party code\n\n  - Go code for normal third-party dependencies is managed using [go modules](https://github.com/golang/go/wiki/Modules)\n\n  - Other third-party code belongs in `/third_party`\n\n    - forked third party Go code goes in `/third_party/forked`\n    - forked _golang stdlib_ code goes in `/third_party/forked/golang`\n  - Third-party code must include licenses\n\n  - This includes modified third-party code and excerpts, as well.\n\n## Logging Conventions\n### Structured logging\n\nWe recommend using `klog.InfoS` to structure the log. The `msg` argument need start from a capital letter.\nand name arguments should always use lowerCamelCase.\n\n```go\n// func InfoS(msg string, keysAndValues ...interface{})\nklog.InfoS(\"Reconcile traitDefinition\", \"traitDefinition\", klog.KRef(req.Namespace, req.Name))\n// output:\n// I0605 10:10:57.308074   22276 traitdefinition_controller.go:59] \"Reconcile traitDefinition\" traitDefinition=\"vela-system/expose\"\n```\n\n### Use `klog.KObj` and `klog.KRef` for Kubernetes objects\n\n`klog.KObj` and `klog.KRef` can unify the output of kubernetes object.\n\n```go\n// KObj is used to create ObjectRef when logging information about Kubernetes objects\nklog.InfoS(\"Start to reconcile\", \"appDeployment\", klog.KObj(appDeployment))\n// KRef is used to create ObjectRef when logging information about Kubernetes objects without access to metav1.Object\nklog.InfoS(\"Reconcile application\", \"application\", klog.KRef(req.Namespace, req.Name))\n```\n\n### Logging Level\n\n[This file](https://github.com/kubevela/kubevela/blob/master/pkg/controller/common/logs.go) contains KubeVela's log level,\nyou can set the log level by `klog.V(level)`.\n\n```go\n// you can use klog.V(common.LogDebug) to print debug log\nklog.V(common.LogDebug).InfoS(\"Successfully applied components\", \"workloads\", len(workloads))\n```\n\nLooking for more details in [Structured Logging Guide](https://github.com/kubernetes/community/blob/master/contributors/devel/sig-instrumentation/migration-to-structured-logging.md#structured-logging-in-kubernetes).\n\n## Linting and formatting\nTo ensure consistency across the Go codebase, we require all code to pass a number of linter checks.\n\nTo run all linters, use the `reviewable` Makefile target:\n\n```bash\nmake reviewable\n```\n\nThe command will clean code along with some lint checks. Please remember to check in all changes after that.\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.9/contributor/code-conventions", "title": "KubeVela Code Conventions", "description": "This documentation covers the code conventions for all kinds of code related to the KubeVela project, including Go, Bash, API, Testing, Directory and File, and Logging conventions.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-02-28 16:45:29", "type": "overview", "page_metadata": {"generator": "Docusaurus v2.4.3", "title": "Code Conventions | KubeVela", "docusaurus_version": "v1.9", "msapplication-config": "/img/favicons/browserconfig.xml", "twitter:card": "summary_large_image", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogTitle": "Code Conventions | KubeVela", "docusaurus_locale": "en", "language": "en", "docusaurus_tag": "docs-default-v1.9", "og:title": "Code Conventions | KubeVela", "og:url": "https://kubevela.io/docs/v1.9/contributor/code-conventions/", "ogUrl": "https://kubevela.io/docs/v1.9/contributor/code-conventions/", "description": "In this section, you will find the code conventions for all kinds of code KubeVela project related. It's not necessary to learn all of them at once, but make sure you have read corresponding parts before you start to code.", "docsearch:version": "v1.9", "docsearch:language": "en", "ogDescription": "In this section, you will find the code conventions for all kinds of code KubeVela project related. It's not necessary to learn all of them at once, but make sure you have read corresponding parts before you start to code.", "docsearch:docusaurus_tag": "docs-default-v1.9", "theme-color": "#ffffff", "viewport": "width=device-width, initial-scale=1.0", "og:description": "In this section, you will find the code conventions for all kinds of code KubeVela project related. It's not necessary to learn all of them at once, but make sure you have read corresponding parts before you start to code.", "scrapeId": "b0e17fb2-1949-475b-80be-a5f725a3f2af", "sourceURL": "https://kubevela.io/docs/v1.9/contributor/code-conventions", "url": "https://kubevela.io/docs/v1.9/contributor/code-conventions/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"KubeVela Code Conventions\"?\n\nAssistant: Here are some code examples:\n\n### Structured logging example\n```yaml\n// func InfoS(msg string, keysAndValues ...interface{})\nklog.InfoS(\"Reconcile traitDefinition\", \"traitDefinition\", klog.KRef(req.Namespace, req.Name))\n// output:\n// I0605 10:10:57.308074   22276 traitdefinition_controller.go:59] \"Reconcile traitDefinition\" traitDefinition=\"vela-system/expose\"\n```\n\n### Using klog.KObj and klog.KRef\n```yaml\n// KObj is used to create ObjectRef when logging information about Kubernetes objects\nklog.InfoS(\"Start to reconcile\", \"appDeployment\", klog.KObj(appDeployment))\n// KRef is used to create ObjectRef when logging information about Kubernetes objects without access to metav1.Object\nklog.InfoS(\"Reconcile application\", \"application\", klog.KRef(req.Namespace, req.Name))\n```\n\n### Logging Level example\n```yaml\n// you can use klog.V(common.LogDebug) to print debug log\nklog.V(common.LogDebug).InfoS(\"Successfully applied components\", \"workloads\", len(workloads))\n```\n\n### Linting and formatting command\n```yaml\nmake reviewable\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.9/contributor/code-conventions", "title": "KubeVela Code Conventions", "description": "This documentation covers the code conventions for all kinds of code related to the KubeVela project, including Go, Bash, API, Testing, Directory and File, and Logging conventions.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-02-28 16:45:29", "type": "code_examples", "page_metadata": {"generator": "Docusaurus v2.4.3", "title": "Code Conventions | KubeVela", "docusaurus_version": "v1.9", "msapplication-config": "/img/favicons/browserconfig.xml", "twitter:card": "summary_large_image", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogTitle": "Code Conventions | KubeVela", "docusaurus_locale": "en", "language": "en", "docusaurus_tag": "docs-default-v1.9", "og:title": "Code Conventions | KubeVela", "og:url": "https://kubevela.io/docs/v1.9/contributor/code-conventions/", "ogUrl": "https://kubevela.io/docs/v1.9/contributor/code-conventions/", "description": "In this section, you will find the code conventions for all kinds of code KubeVela project related. It's not necessary to learn all of them at once, but make sure you have read corresponding parts before you start to code.", "docsearch:version": "v1.9", "docsearch:language": "en", "ogDescription": "In this section, you will find the code conventions for all kinds of code KubeVela project related. It's not necessary to learn all of them at once, but make sure you have read corresponding parts before you start to code.", "docsearch:docusaurus_tag": "docs-default-v1.9", "theme-color": "#ffffff", "viewport": "width=device-width, initial-scale=1.0", "og:description": "In this section, you will find the code conventions for all kinds of code KubeVela project related. It's not necessary to learn all of them at once, but make sure you have read corresponding parts before you start to code.", "scrapeId": "b0e17fb2-1949-475b-80be-a5f725a3f2af", "sourceURL": "https://kubevela.io/docs/v1.9/contributor/code-conventions", "url": "https://kubevela.io/docs/v1.9/contributor/code-conventions/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela Code Conventions\"?\n\nAssistant: Here are the recommended best practices:\n\n• Comment your code to help reviewers understand your decisions.\n• Use dashes for command-line flags instead of underscores.\n• Avoid package sprawl by finding appropriate subdirectories for new packages.\n• Use structured logging with klog for better log management.\n• Ensure all code passes linter checks for consistency.\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.9/contributor/code-conventions", "title": "KubeVela Code Conventions", "description": "This documentation covers the code conventions for all kinds of code related to the KubeVela project, including Go, Bash, API, Testing, Directory and File, and Logging conventions.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-02-28 16:45:29", "type": "best_practices", "page_metadata": {"generator": "Docusaurus v2.4.3", "title": "Code Conventions | KubeVela", "docusaurus_version": "v1.9", "msapplication-config": "/img/favicons/browserconfig.xml", "twitter:card": "summary_large_image", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogTitle": "Code Conventions | KubeVela", "docusaurus_locale": "en", "language": "en", "docusaurus_tag": "docs-default-v1.9", "og:title": "Code Conventions | KubeVela", "og:url": "https://kubevela.io/docs/v1.9/contributor/code-conventions/", "ogUrl": "https://kubevela.io/docs/v1.9/contributor/code-conventions/", "description": "In this section, you will find the code conventions for all kinds of code KubeVela project related. It's not necessary to learn all of them at once, but make sure you have read corresponding parts before you start to code.", "docsearch:version": "v1.9", "docsearch:language": "en", "ogDescription": "In this section, you will find the code conventions for all kinds of code KubeVela project related. It's not necessary to learn all of them at once, but make sure you have read corresponding parts before you start to code.", "docsearch:docusaurus_tag": "docs-default-v1.9", "theme-color": "#ffffff", "viewport": "width=device-width, initial-scale=1.0", "og:description": "In this section, you will find the code conventions for all kinds of code KubeVela project related. It's not necessary to learn all of them at once, but make sure you have read corresponding parts before you start to code.", "scrapeId": "b0e17fb2-1949-475b-80be-a5f725a3f2af", "sourceURL": "https://kubevela.io/docs/v1.9/contributor/code-conventions", "url": "https://kubevela.io/docs/v1.9/contributor/code-conventions/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"Custom Policy in KubeVela\"?\n\nAssistant: This page introduces how to define a custom policy with CUE in KubeVela, including generating resources and special policies.\n\nHere's a detailed explanation:\n\n\n## Generate Resources by Policy\nGenerate resources in policy is similar to trait, policy can be used to define things across components.\n\nLet's use `vela def init` to create a basic policy scaffold:\n\n```codeBlockLines_e6Vv\nvela def init my-plc -t policy --desc \"My ingress route policy.\" > myroute.cue\n```\n\nThe content of the scaffold expected to be:\n\n```codeBlockLines_e6Vv\n// $ cat myroute.cue\n\"my-plc\": {\n    annotations: {}\n    attributes: {}\n    description: \"My ingress route policy.\"\n    labels: {}\n    type: \"policy\"\n}\n\ntemplate: {\n}\n```\n\nThe rule is aligned with component definition, you must specify `output`, while you can use `outputs` for more objects, the format as below:\n\n```codeBlockLines_e6Vv\noutput: {\n    <full template data>\n}\noutputs: <unique-name>:\n  <full template data>\n```\n\nBelow is an example that we create a traffic split service mesh object in policy.\n\n```codeBlockLines_e6Vv\n\"my-plc\": {\n    description: \"My service mesh policy.\"\n    type:        \"policy\"\n}\n\ntemplate: {\n    #ServerWeight: {\n        service: string\n        weight:  int\n    }\n    parameter: {\n        weights: [...#ServerWeight]\n    }\n\n    output: {\n        apiVersion: \"split.smi-spec.io/v1alpha3\"\n        kind:       \"TrafficSplit\"\n        metadata: name: context.name\n        spec: {\n            service:  context.name\n            backends: parameter.weights\n        }\n    }\n}\n```\n\nApply to our control plane to make this Policy work:\n\n```codeBlockLines_e6Vv\nvela def apply myroute.cue\n```\n\nThen our end users can discover it immediately and use it in `Application`.\n\nAfter using `vela up` by the following command:\n\n```codeBlockLines_e6Vv\ncat <<EOF | vela up -f -\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: my-test-2\nspec:\n  components:\n    - name: server-v1\n      type: webservice\n      properties:\n        image: oamdev/hello-world:v1\n    - name: server-v2\n      type: webservice\n      properties:\n        image: oamdev/hello-world:v2\n  policies:\n    - type: my-plc\n      name: unified\n      properties:\n        weights:\n          - service: server-v1\n            weight: 80\n          - service: server-v2\n            weight: 20\nEOF\n```\n\nThe policy will generate Kubernetes resources by KubeVela like below:\n\n```codeBlockLines_e6Vv\napiVersion: split.smi-spec.io/v1alpha3\nkind: TrafficSplit\nmetadata:\n  name: unified\n  namespace: default\nspec:\n  backends:\n  - service: server-v1\n    weight: 80\n  - service: server-v2\n    weight: 20\n  service: unified\n```\n\nYou can define any Kubernetes API objects in policies if you want.\n\n## Special Policy\nNot all policies generate resources, there're several [built-in policies](https://kubevela.io/docs/end-user/policies/references/) which are used to control the whole delivery process and workflows.\n\ntip\n\nThese special policies are usually coded in the application controller.\n", "metadata": {"source_url": "https://kubevela.io/docs/platform-engineers/policy/custom-policy", "title": "Custom Policy in KubeVela", "description": "This page introduces how to define a custom policy with CUE in KubeVela, including generating resources and special policies.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-02-28 16:45:47", "type": "overview", "page_metadata": {"docsearch:language": "en", "title": "Policy Definition | KubeVela", "ogDescription": "In this section we will introduce how to define a custom policy with CUE. Make sure you've learned the basic knowledge about Definition Concept and how to manage definition.", "description": "In this section we will introduce how to define a custom policy with CUE. Make sure you've learned the basic knowledge about Definition Concept and how to manage definition.", "ogUrl": "https://kubevela.io/docs/platform-engineers/policy/custom-policy/", "theme-color": "#ffffff", "msapplication-config": "/img/favicons/browserconfig.xml", "viewport": "width=device-width, initial-scale=1.0", "generator": "Docusaurus v2.4.3", "ogTitle": "Policy Definition | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docsearch:version": "v1.10", "og:url": "https://kubevela.io/docs/platform-engineers/policy/custom-policy/", "docsearch:docusaurus_tag": "docs-default-v1.10", "docusaurus_tag": "docs-default-v1.10", "docusaurus_locale": "en", "docusaurus_version": "v1.10", "og:title": "Policy Definition | KubeVela", "og:description": "In this section we will introduce how to define a custom policy with CUE. Make sure you've learned the basic knowledge about Definition Concept and how to manage definition.", "language": "en", "twitter:card": "summary_large_image", "scrapeId": "502f5213-288c-4d3d-93be-e71a9a5b6d0a", "sourceURL": "https://kubevela.io/docs/platform-engineers/policy/custom-policy", "url": "https://kubevela.io/docs/platform-engineers/policy/custom-policy/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"Custom Policy in KubeVela\"?\n\nAssistant: Here are some code examples:\n\n### Create a Basic Policy Scaffold\n```yaml\nvela def init my-plc -t policy --desc \"My ingress route policy.\" > myroute.cue\n```\n\n### Expected Content of the Scaffold\n```yaml\n// $ cat myroute.cue\n\"my-plc\": {\n    annotations: {}\n    attributes: {}\n    description: \"My ingress route policy.\"\n    labels: {}\n    type: \"policy\"\n}\ntemplate: {\n}\n```\n\n### Define Output in Policy\n```yaml\noutput: {\n    <full template data>\n}\noutputs: <unique-name>:\n  <full template data>\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/platform-engineers/policy/custom-policy", "title": "Custom Policy in KubeVela", "description": "This page introduces how to define a custom policy with CUE in KubeVela, including generating resources and special policies.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-02-28 16:45:47", "type": "code_examples", "page_metadata": {"docsearch:language": "en", "title": "Policy Definition | KubeVela", "ogDescription": "In this section we will introduce how to define a custom policy with CUE. Make sure you've learned the basic knowledge about Definition Concept and how to manage definition.", "description": "In this section we will introduce how to define a custom policy with CUE. Make sure you've learned the basic knowledge about Definition Concept and how to manage definition.", "ogUrl": "https://kubevela.io/docs/platform-engineers/policy/custom-policy/", "theme-color": "#ffffff", "msapplication-config": "/img/favicons/browserconfig.xml", "viewport": "width=device-width, initial-scale=1.0", "generator": "Docusaurus v2.4.3", "ogTitle": "Policy Definition | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docsearch:version": "v1.10", "og:url": "https://kubevela.io/docs/platform-engineers/policy/custom-policy/", "docsearch:docusaurus_tag": "docs-default-v1.10", "docusaurus_tag": "docs-default-v1.10", "docusaurus_locale": "en", "docusaurus_version": "v1.10", "og:title": "Policy Definition | KubeVela", "og:description": "In this section we will introduce how to define a custom policy with CUE. Make sure you've learned the basic knowledge about Definition Concept and how to manage definition.", "language": "en", "twitter:card": "summary_large_image", "scrapeId": "502f5213-288c-4d3d-93be-e71a9a5b6d0a", "sourceURL": "https://kubevela.io/docs/platform-engineers/policy/custom-policy", "url": "https://kubevela.io/docs/platform-engineers/policy/custom-policy/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"Custom Policy in KubeVela\"?\n\nAssistant: Here are the recommended best practices:\n\n• These special policies are usually coded in the application controller.\n", "metadata": {"source_url": "https://kubevela.io/docs/platform-engineers/policy/custom-policy", "title": "Custom Policy in KubeVela", "description": "This page introduces how to define a custom policy with CUE in KubeVela, including generating resources and special policies.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-02-28 16:45:47", "type": "best_practices", "page_metadata": {"docsearch:language": "en", "title": "Policy Definition | KubeVela", "ogDescription": "In this section we will introduce how to define a custom policy with CUE. Make sure you've learned the basic knowledge about Definition Concept and how to manage definition.", "description": "In this section we will introduce how to define a custom policy with CUE. Make sure you've learned the basic knowledge about Definition Concept and how to manage definition.", "ogUrl": "https://kubevela.io/docs/platform-engineers/policy/custom-policy/", "theme-color": "#ffffff", "msapplication-config": "/img/favicons/browserconfig.xml", "viewport": "width=device-width, initial-scale=1.0", "generator": "Docusaurus v2.4.3", "ogTitle": "Policy Definition | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docsearch:version": "v1.10", "og:url": "https://kubevela.io/docs/platform-engineers/policy/custom-policy/", "docsearch:docusaurus_tag": "docs-default-v1.10", "docusaurus_tag": "docs-default-v1.10", "docusaurus_locale": "en", "docusaurus_version": "v1.10", "og:title": "Policy Definition | KubeVela", "og:description": "In this section we will introduce how to define a custom policy with CUE. Make sure you've learned the basic knowledge about Definition Concept and how to manage definition.", "language": "en", "twitter:card": "summary_large_image", "scrapeId": "502f5213-288c-4d3d-93be-e71a9a5b6d0a", "sourceURL": "https://kubevela.io/docs/platform-engineers/policy/custom-policy", "url": "https://kubevela.io/docs/platform-engineers/policy/custom-policy/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela CLI Config Template\"?\n\nAssistant: Manage the template of config.\n\nHere's a detailed explanation:\n\n\n## Options\n```codeBlockLines_e6Vv\n  -h, --help   help for config-template\n```\n\n## Options inherited from parent commands\n```codeBlockLines_e6Vv\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n\n## SEE ALSO\n- [vela config-template apply](https://kubevela.io/docs/v1.9/cli/vela_config-template_apply/) \\- Apply a config template.\n- [vela config-template delete](https://kubevela.io/docs/v1.9/cli/vela_config-template_delete/) \\- Delete a config template.\n- [vela config-template list](https://kubevela.io/docs/v1.9/cli/vela_config-template_list/) \\- List the config templates.\n- [vela config-template show](https://kubevela.io/docs/v1.9/cli/vela_config-template_show/) \\- Show the documents of the template properties\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.9/cli/vela_config-template", "title": "KubeVela CLI Config Template", "description": "Manage the template of config.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 16:45:53", "type": "overview", "page_metadata": {"docsearch:language": "en", "ogTitle": "vela config-template | KubeVela", "ogDescription": "Manage the template of config.", "docusaurus_version": "v1.9", "viewport": "width=device-width, initial-scale=1.0", "description": "Manage the template of config.", "title": "vela config-template | KubeVela", "ogUrl": "https://kubevela.io/docs/v1.9/cli/vela_config-template/", "og:description": "Manage the template of config.", "og:url": "https://kubevela.io/docs/v1.9/cli/vela_config-template/", "twitter:card": "summary_large_image", "language": "en", "docsearch:docusaurus_tag": "docs-default-v1.9", "og:title": "vela config-template | KubeVela", "msapplication-config": "/img/favicons/browserconfig.xml", "docusaurus_locale": "en", "docsearch:version": "v1.9", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "theme-color": "#ffffff", "docusaurus_tag": "docs-default-v1.9", "generator": "Docusaurus v2.4.3", "scrapeId": "323f7358-043b-4b21-b984-db1a2f230d25", "sourceURL": "https://kubevela.io/docs/v1.9/cli/vela_config-template", "url": "https://kubevela.io/docs/v1.9/cli/vela_config-template/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"KubeVela CLI Config Template\"?\n\nAssistant: Here are some code examples:\n\n### Options\n```yaml\n```codeBlockLines_e6Vv\n  -h, --help   help for config-template\n```\n```\n\n### Options inherited from parent commands\n```yaml\n```codeBlockLines_e6Vv\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.9/cli/vela_config-template", "title": "KubeVela CLI Config Template", "description": "Manage the template of config.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 16:45:53", "type": "code_examples", "page_metadata": {"docsearch:language": "en", "ogTitle": "vela config-template | KubeVela", "ogDescription": "Manage the template of config.", "docusaurus_version": "v1.9", "viewport": "width=device-width, initial-scale=1.0", "description": "Manage the template of config.", "title": "vela config-template | KubeVela", "ogUrl": "https://kubevela.io/docs/v1.9/cli/vela_config-template/", "og:description": "Manage the template of config.", "og:url": "https://kubevela.io/docs/v1.9/cli/vela_config-template/", "twitter:card": "summary_large_image", "language": "en", "docsearch:docusaurus_tag": "docs-default-v1.9", "og:title": "vela config-template | KubeVela", "msapplication-config": "/img/favicons/browserconfig.xml", "docusaurus_locale": "en", "docsearch:version": "v1.9", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "theme-color": "#ffffff", "docusaurus_tag": "docs-default-v1.9", "generator": "Docusaurus v2.4.3", "scrapeId": "323f7358-043b-4b21-b984-db1a2f230d25", "sourceURL": "https://kubevela.io/docs/v1.9/cli/vela_config-template", "url": "https://kubevela.io/docs/v1.9/cli/vela_config-template/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela CLI Config Template\"?\n\nAssistant: Here are the recommended best practices:\n\n• For up-to-date documentation, see the latest version (v1.10).\n• If you like KubeVela, give it a star on GitHub.\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.9/cli/vela_config-template", "title": "KubeVela CLI Config Template", "description": "Manage the template of config.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 16:45:53", "type": "best_practices", "page_metadata": {"docsearch:language": "en", "ogTitle": "vela config-template | KubeVela", "ogDescription": "Manage the template of config.", "docusaurus_version": "v1.9", "viewport": "width=device-width, initial-scale=1.0", "description": "Manage the template of config.", "title": "vela config-template | KubeVela", "ogUrl": "https://kubevela.io/docs/v1.9/cli/vela_config-template/", "og:description": "Manage the template of config.", "og:url": "https://kubevela.io/docs/v1.9/cli/vela_config-template/", "twitter:card": "summary_large_image", "language": "en", "docsearch:docusaurus_tag": "docs-default-v1.9", "og:title": "vela config-template | KubeVela", "msapplication-config": "/img/favicons/browserconfig.xml", "docusaurus_locale": "en", "docsearch:version": "v1.9", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "theme-color": "#ffffff", "docusaurus_tag": "docs-default-v1.9", "generator": "Docusaurus v2.4.3", "scrapeId": "323f7358-043b-4b21-b984-db1a2f230d25", "sourceURL": "https://kubevela.io/docs/v1.9/cli/vela_config-template", "url": "https://kubevela.io/docs/v1.9/cli/vela_config-template/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"Patch Strategies in KubeVela\"?\n\nAssistant: This page covers various patch strategies provided by KubeVela to resolve conflicting values when applying patches to Kubernetes workloads.\n\nHere's a detailed explanation:\n\n\n## Introduction\nBy default, KubeVela will merge patched values with CUE's merge. However, CUE cannot handle conflicting fields currently. KubeVela provides a series of patching strategies to help resolve conflicting issues. When writing patch traits and workflow steps, you can use these patch strategies to solve conflicting values. Note that the patch strategy is not an official capability provided by CUE, but an extension developed by KubeVela.\n\n## patchKey\nIf you want to add multiple environment variables for a specific container, you can use the `+patchKey=name` annotation to find the container. In this case, KubeVela will merge these environment variables by default. This means that `patchKey` cannot handle duplicate fields. After KubeVela version 1.4, you can use `,` to split multiple patchKeys, such as `patchKey=name,image`.\n\n## Using myenv Trait\nApply the following definition to your cluster:\n\n```codeBlockLines_e6Vv\nmyenv: {\n    type: \"trait\"\n    annotations: {}\n    labels: {\n        \"ui-hidden\": \"true\"\n    }\n    description: \"Add env on K8s pod for your workload which follows the pod spec in path 'spec.template'\"\n    attributes: appliesToWorkloads: [\"*\"]\n}\ntemplate: {\n    patch: {\n            spec: template: spec: {\n                    // +patchKey=name\n                    containers: [{\\\n                            name: context.name\\\n                            env: [\\\n                                    for k, v in parameter.env {\\\n                                            name:  k\\\n                                            value: v\\\n                                    },\\\n                            ]\\\n                    }]\n            }\n    }\n\n    parameter: {\n            env: [string]: string\n    }\n}\n```\n\nUse the above `myenv` trait in your application:\n\n```codeBlockLines_e6Vv\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: webservice-app\nspec:\n  components:\n    - name: express-server\n      type: webservice\n      properties:\n        image: crccheck/hello-world\n        env:\n          - name: OLD\n            value: old\n      traits:\n        - type: myenv\n          properties:\n            env:\n              NEW: new\n```\n\nBefore using the `myenv` patch trait, the `env` in the application is like:\n\n```codeBlockLines_e6Vv\nspec:\n  containers:\n  - env:\n    - name: OLD\n      value: old\n```\n\nAfter using the `myenv` patch trait, the `env` in the application is like:\n\n```codeBlockLines_e6Vv\nspec:\n  containers:\n  - env:\n    - name: OLD\n      value: old\n    - name: NEW\n      value: new\n```\n\nFinally, we can see that the application's `env` contains two environment variables: `OLD=old` and `NEW=new`.\n\n## retainKeys\nYou can use the `+patchStrategy=retainKeys` annotation if you want to be able to override duplicate values while merging variables. The strategy of this annotation is similar to the Kubernetes official retainKeys strategy. In the following example, `+patchKey=name` specifies which container the patch should be applied to, while `+patchStrategy=retainKeys` specifies that when merge environment variables, if a duplicate environment variable name is specified, the environment variable value will be overwritten.\n\n## Using myenv Trait with retainKeys\n```codeBlockLines_e6Vv\nmyenv: {\n    type: \"trait\"\n    annotations: {}\n    labels: {\n        \"ui-hidden\": \"true\"\n    }\n    description: \"Add env on K8s pod for your workload which follows the pod spec in path 'spec.template'\"\n    attributes: appliesToWorkloads: [\"*\"]\n}\ntemplate: {\n    patch: {\n            spec: template: spec: {\n                    // +patchKey=name\n                    containers: [{\\\n                            name: context.name\\\n                            // +patchStrategy=retainKeys\\\n                            env: [\\\n                                    for k, v in parameter.env {\\\n                                            name:  k\\\n                                            value: v\\\n                                    },\\\n                            ]\\\n                    }]\n            }\n    }\n\n    parameter: {\n            env: [string]: string\n    }\n}\n```\n\nUse the above `myenv` trait in your application:\n\n```codeBlockLines_e6Vv\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: webservice-app\nspec:\n  components:\n    - name: express-server\n      type: webservice\n      properties:\n        image: crccheck/hello-world\n        env:\n          - name: OLD\n            value: old\n          - name: OLD2\n            value: old2\n      traits:\n        - type: myenv\n          properties:\n            env:\n              NEW: new\n              OLD2: override\n```\n\nBefore using the `myenv` patch trait, the `env` in the application is like:\n\n```codeBlockLines_e6Vv\nspec:\n  containers:\n  - env:\n    - name: OLD\n      value: old\n    - name: OLD2\n      value: old2\n```\n\nAfter using the `myenv` patch trait, the `env` in the application is like:\n\n```codeBlockLines_e6Vv\nspec:\n  containers:\n  - env:\n    - name: OLD\n      value: old\n    - name: OLD2\n      value: override\n    - name: NEW\n      value: new\n```\n\nFinally, we can see that the application's `env` contains three environment variables: `OLD=old`, `OLD2=override` and `NEW=new`.\n\n## replace\nIf you wish to replace the entire env array directly, you can use the `+patchStrategy=replace` annotation. In the following example, `+patchKey=name` specifies which container the patch should be applied to, while `+patchStrategy=replace` specifies that when merge the arrays, the entire array of environment variables will be replaced directly.\n\n## Using myenv Trait with replace\n```codeBlockLines_e6Vv\nmyenv: {\n    type: \"trait\"\n    annotations: {}\n    labels: {\n        \"ui-hidden\": \"true\"\n    }\n    description: \"Add env on K8s pod for your workload which follows the pod spec in path 'spec.template'\"\n    attributes: appliesToWorkloads: [\"*\"]\n}\ntemplate: {\n    patch: {\n            spec: template: spec: {\n                    // +patchKey=name\n                    containers: [{\\\n                            name: context.name\\\n                            // +patchStrategy=replace\\\n                            env: [\\\n                                    for k, v in parameter.env {\\\n                                            name:  k\\\n                                            value: v\\\n                                    },\\\n                            ]\\\n                    }]\n            }\n    }\n\n    parameter: {\n            env: [string]: string\n    }\n}\n```\n\nUse the above `myenv` trait in your application:\n\n```codeBlockLines_e6Vv\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: webservice-app\nspec:\n  components:\n    - name: express-server\n      type: webservice\n      properties:\n        image: crccheck/hello-world\n        env:\n          - name: OLD\n            value: old\n          - name: OLD2\n            value: old2\n      traits:\n        - type: myenv\n          properties:\n            env:\n              NEW: replace\n```\n\nBefore using the `myenv` patch trait, the `env` in the application is like:\n\n```codeBlockLines_e6Vv\nspec:\n  containers:\n  - env:\n    - name: OLD\n      value: old\n    - name: OLD2\n      value: old2\n```\n\nAfter using the `myenv` patch trait, the `env` in the application is like:\n\n```codeBlockLines_e6Vv\nspec:\n  containers:\n  - env:\n    - name: NEW\n      value: replace\n```\n\nFinally, we can see that the application's `env` contains one environment variable: `NEW=replace`.\n", "metadata": {"source_url": "https://kubevela.io/docs/platform-engineers/cue/patch-strategy", "title": "Patch Strategies in KubeVela", "description": "This page covers various patch strategies provided by KubeVela to resolve conflicting values when applying patches to Kubernetes workloads.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-02-28 16:46:38", "type": "overview", "page_metadata": {"ogTitle": "Patch strategy | KubeVela", "msapplication-config": "/img/favicons/browserconfig.xml", "generator": "Docusaurus v2.4.3", "docusaurus_tag": "docs-default-v1.10", "description": "By default, KubeVela will merge patched values with CUE's merge. However, CUE cannot handle conflicting fields currently.", "ogUrl": "https://kubevela.io/docs/platform-engineers/cue/patch-strategy/", "docusaurus_version": "v1.10", "og:title": "Patch strategy | KubeVela", "theme-color": "#ffffff", "title": "Patch strategy | KubeVela", "ogDescription": "By default, KubeVela will merge patched values with CUE's merge. However, CUE cannot handle conflicting fields currently.", "twitter:card": "summary_large_image", "docsearch:language": "en", "docsearch:version": "v1.10", "language": "en", "og:url": "https://kubevela.io/docs/platform-engineers/cue/patch-strategy/", "docsearch:docusaurus_tag": "docs-default-v1.10", "docusaurus_locale": "en", "og:description": "By default, KubeVela will merge patched values with CUE's merge. However, CUE cannot handle conflicting fields currently.", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "viewport": "width=device-width, initial-scale=1.0", "scrapeId": "3f327329-cf55-4ac7-8653-e42abf82dc38", "sourceURL": "https://kubevela.io/docs/platform-engineers/cue/patch-strategy", "url": "https://kubevela.io/docs/platform-engineers/cue/patch-strategy/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"Patch Strategies in KubeVela\"?\n\nAssistant: Here are some code examples:\n\n### myenv Trait Definition\n```yaml\nmyenv: {\n    type: \"trait\"\n    annotations: {}\n    labels: {\n        \"ui-hidden\": \"true\"\n    }\n    description: \"Add env on K8s pod for your workload which follows the pod spec in path 'spec.template'\"\n    attributes: appliesToWorkloads: [\"*\"]\n}\ntemplate: {\n    patch: {\n            spec: template: spec: {\n                    // +patchKey=name\n                    containers: [{\\\n                            name: context.name\\\n                            env: [\\\n                                    for k, v in parameter.env {\\\n                                            name:  k\\\n                                            value: v\\\n                                    },\\\n                            ]\\\n                    }]\n            }\n    }\n\n    parameter: {\n            env: [string]: string\n    }\n}\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/platform-engineers/cue/patch-strategy", "title": "Patch Strategies in KubeVela", "description": "This page covers various patch strategies provided by KubeVela to resolve conflicting values when applying patches to Kubernetes workloads.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-02-28 16:46:38", "type": "code_examples", "page_metadata": {"ogTitle": "Patch strategy | KubeVela", "msapplication-config": "/img/favicons/browserconfig.xml", "generator": "Docusaurus v2.4.3", "docusaurus_tag": "docs-default-v1.10", "description": "By default, KubeVela will merge patched values with CUE's merge. However, CUE cannot handle conflicting fields currently.", "ogUrl": "https://kubevela.io/docs/platform-engineers/cue/patch-strategy/", "docusaurus_version": "v1.10", "og:title": "Patch strategy | KubeVela", "theme-color": "#ffffff", "title": "Patch strategy | KubeVela", "ogDescription": "By default, KubeVela will merge patched values with CUE's merge. However, CUE cannot handle conflicting fields currently.", "twitter:card": "summary_large_image", "docsearch:language": "en", "docsearch:version": "v1.10", "language": "en", "og:url": "https://kubevela.io/docs/platform-engineers/cue/patch-strategy/", "docsearch:docusaurus_tag": "docs-default-v1.10", "docusaurus_locale": "en", "og:description": "By default, KubeVela will merge patched values with CUE's merge. However, CUE cannot handle conflicting fields currently.", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "viewport": "width=device-width, initial-scale=1.0", "scrapeId": "3f327329-cf55-4ac7-8653-e42abf82dc38", "sourceURL": "https://kubevela.io/docs/platform-engineers/cue/patch-strategy", "url": "https://kubevela.io/docs/platform-engineers/cue/patch-strategy/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"Patch Strategies in KubeVela\"?\n\nAssistant: Here are the recommended best practices:\n\n• After KubeVela version 1.4, you can use `,` to split multiple patchKeys, such as `patchKey=name,image`.\n• When using `+patchStrategy=retainKeys`, if a duplicate environment variable name is specified, the environment variable value will be overwritten.\n• Using `+patchStrategy=replace` will replace the entire array of environment variables directly.\n", "metadata": {"source_url": "https://kubevela.io/docs/platform-engineers/cue/patch-strategy", "title": "Patch Strategies in KubeVela", "description": "This page covers various patch strategies provided by KubeVela to resolve conflicting values when applying patches to Kubernetes workloads.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-02-28 16:46:38", "type": "best_practices", "page_metadata": {"ogTitle": "Patch strategy | KubeVela", "msapplication-config": "/img/favicons/browserconfig.xml", "generator": "Docusaurus v2.4.3", "docusaurus_tag": "docs-default-v1.10", "description": "By default, KubeVela will merge patched values with CUE's merge. However, CUE cannot handle conflicting fields currently.", "ogUrl": "https://kubevela.io/docs/platform-engineers/cue/patch-strategy/", "docusaurus_version": "v1.10", "og:title": "Patch strategy | KubeVela", "theme-color": "#ffffff", "title": "Patch strategy | KubeVela", "ogDescription": "By default, KubeVela will merge patched values with CUE's merge. However, CUE cannot handle conflicting fields currently.", "twitter:card": "summary_large_image", "docsearch:language": "en", "docsearch:version": "v1.10", "language": "en", "og:url": "https://kubevela.io/docs/platform-engineers/cue/patch-strategy/", "docsearch:docusaurus_tag": "docs-default-v1.10", "docusaurus_locale": "en", "og:description": "By default, KubeVela will merge patched values with CUE's merge. However, CUE cannot handle conflicting fields currently.", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "viewport": "width=device-width, initial-scale=1.0", "scrapeId": "3f327329-cf55-4ac7-8653-e42abf82dc38", "sourceURL": "https://kubevela.io/docs/platform-engineers/cue/patch-strategy", "url": "https://kubevela.io/docs/platform-engineers/cue/patch-strategy/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"Nginx Ingress Controller\"?\n\nAssistant: This page covers the installation, setup, access, uninstallation, and example usage of the Nginx Ingress controller for Kubernetes using KubeVela.\n\nHere's a detailed explanation:\n\n\n## Install\nTo install the Nginx Ingress controller, use the following command:\n\n```bash\nvela addon enable ingress-nginx\n```\n\n## Setup with Specified Service Type\nThere are three service types for this addon which align with Kubernetes service: `ClusterIP`, `NodePort`, and `LoadBalancer`. By default, the service type is ClusterIP for security.\n\n- `LoadBalancer` type requires your cluster to have a cloud LoadBalancer available.\n\n```bash\nvela addon enable ingress-nginx serviceType=LoadBalancer\n```\n\n- `NodePort` type requires you to access the Kubernetes Node IP/Port.\n\n```bash\nvela addon enable ingress-nginx serviceType=NodePort\n```\n\n## Get access address\nAfter specifying the service type to `LoadBalancer` or `NodePort`, you can obtain the access address through the following command:\n\n```bash\nvela status addon-ingress-nginx -n vela-system --endpoint\n```\n\nIf the service type is `ClusterIP`, you can use `vela port-forward` to map the ingress-controller's port to local:\n\n```bash\nvela port-forward -n vela-system addon-ingress-nginx 9080:80\n```\n\n## Uninstall\nTo uninstall the Nginx Ingress controller, use the following command:\n\n```bash\nvela addon disable ingress-nginx\n```\n\n## Example\nTo use this addon by deploying an application, you can use the following command:\n\n```bash\ncat <<EOF | vela up -f -\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: demo\nspec:\n  components:\n  - name: demo\n    type: webservice\n    properties:\n      image: barnett/canarydemo:v1\n      ports:\n      - port: 8090\n    traits:\n    - type: gateway\n      properties:\n        domain: canary-demo.com\n        http:\n          \"/version\": 8090\nEOF\n```\n\nThen access the gateway's endpoint will see:\n\n```bash\n$ curl -H \"Host: canary-demo.com\" <ingress-nginx-endpoint>/version\nDemo: V1\n```\n", "metadata": {"source_url": "https://kubevela.io/docs/reference/addons/nginx-ingress-controller", "title": "Nginx Ingress Controller", "description": "This page covers the installation, setup, access, uninstallation, and example usage of the Nginx Ingress controller for Kubernetes using KubeVela.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 16:46:52", "type": "overview", "page_metadata": {"ogTitle": "Nginx Ingress Controller | KubeVela", "og:description": "Nginx Ingress controller is an Ingress controller for Kubernetes using NGINX as a reverse proxy and load balancer.", "viewport": "width=device-width, initial-scale=1.0", "docsearch:language": "en", "ogUrl": "https://kubevela.io/docs/reference/addons/nginx-ingress-controller/", "theme-color": "#ffffff", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "twitter:card": "summary_large_image", "description": "Nginx Ingress controller is an Ingress controller for Kubernetes using NGINX as a reverse proxy and load balancer.", "msapplication-config": "/img/favicons/browserconfig.xml", "language": "en", "generator": "Docusaurus v2.4.3", "og:title": "Nginx Ingress Controller | KubeVela", "title": "Nginx Ingress Controller | KubeVela", "ogDescription": "Nginx Ingress controller is an Ingress controller for Kubernetes using NGINX as a reverse proxy and load balancer.", "docusaurus_tag": "docs-default-v1.10", "docsearch:version": "v1.10", "docusaurus_locale": "en", "docusaurus_version": "v1.10", "og:url": "https://kubevela.io/docs/reference/addons/nginx-ingress-controller/", "docsearch:docusaurus_tag": "docs-default-v1.10", "scrapeId": "c5d644b6-48c7-4e79-be77-bea83a7732a5", "sourceURL": "https://kubevela.io/docs/reference/addons/nginx-ingress-controller", "url": "https://kubevela.io/docs/reference/addons/nginx-ingress-controller/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"Nginx Ingress Controller\"?\n\nAssistant: Here are some code examples:\n\n### Install Nginx Ingress Controller\n```yaml\nvela addon enable ingress-nginx\n```\n\n### Setup with LoadBalancer Service Type\n```yaml\nvela addon enable ingress-nginx serviceType=LoadBalancer\n```\n\n### Setup with NodePort Service Type\n```yaml\nvela addon enable ingress-nginx serviceType=NodePort\n```\n\n### Get Access Address\n```yaml\nvela status addon-ingress-nginx -n vela-system --endpoint\n```\n\n### Port Forward for ClusterIP\n```yaml\nvela port-forward -n vela-system addon-ingress-nginx 9080:80\n```\n\n### Uninstall Nginx Ingress Controller\n```yaml\nvela addon disable ingress-nginx\n```\n\n### Deploy Application Example\n```yaml\ncat <<EOF | vela up -f -\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: demo\nspec:\n  components:\n  - name: demo\n    type: webservice\n    properties:\n      image: barnett/canarydemo:v1\n      ports:\n      - port: 8090\n    traits:\n    - type: gateway\n      properties:\n        domain: canary-demo.com\n        http:\n          \"/version\": 8090\nEOF\n\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/reference/addons/nginx-ingress-controller", "title": "Nginx Ingress Controller", "description": "This page covers the installation, setup, access, uninstallation, and example usage of the Nginx Ingress controller for Kubernetes using KubeVela.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 16:46:52", "type": "code_examples", "page_metadata": {"ogTitle": "Nginx Ingress Controller | KubeVela", "og:description": "Nginx Ingress controller is an Ingress controller for Kubernetes using NGINX as a reverse proxy and load balancer.", "viewport": "width=device-width, initial-scale=1.0", "docsearch:language": "en", "ogUrl": "https://kubevela.io/docs/reference/addons/nginx-ingress-controller/", "theme-color": "#ffffff", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "twitter:card": "summary_large_image", "description": "Nginx Ingress controller is an Ingress controller for Kubernetes using NGINX as a reverse proxy and load balancer.", "msapplication-config": "/img/favicons/browserconfig.xml", "language": "en", "generator": "Docusaurus v2.4.3", "og:title": "Nginx Ingress Controller | KubeVela", "title": "Nginx Ingress Controller | KubeVela", "ogDescription": "Nginx Ingress controller is an Ingress controller for Kubernetes using NGINX as a reverse proxy and load balancer.", "docusaurus_tag": "docs-default-v1.10", "docsearch:version": "v1.10", "docusaurus_locale": "en", "docusaurus_version": "v1.10", "og:url": "https://kubevela.io/docs/reference/addons/nginx-ingress-controller/", "docsearch:docusaurus_tag": "docs-default-v1.10", "scrapeId": "c5d644b6-48c7-4e79-be77-bea83a7732a5", "sourceURL": "https://kubevela.io/docs/reference/addons/nginx-ingress-controller", "url": "https://kubevela.io/docs/reference/addons/nginx-ingress-controller/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"Nginx Ingress Controller\"?\n\nAssistant: Here are the recommended best practices:\n\n• If your cluster already has any kind of ingress controller, you don't need to enable this addon.\n• For security, the default service type is ClusterIP.\n", "metadata": {"source_url": "https://kubevela.io/docs/reference/addons/nginx-ingress-controller", "title": "Nginx Ingress Controller", "description": "This page covers the installation, setup, access, uninstallation, and example usage of the Nginx Ingress controller for Kubernetes using KubeVela.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 16:46:52", "type": "best_practices", "page_metadata": {"ogTitle": "Nginx Ingress Controller | KubeVela", "og:description": "Nginx Ingress controller is an Ingress controller for Kubernetes using NGINX as a reverse proxy and load balancer.", "viewport": "width=device-width, initial-scale=1.0", "docsearch:language": "en", "ogUrl": "https://kubevela.io/docs/reference/addons/nginx-ingress-controller/", "theme-color": "#ffffff", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "twitter:card": "summary_large_image", "description": "Nginx Ingress controller is an Ingress controller for Kubernetes using NGINX as a reverse proxy and load balancer.", "msapplication-config": "/img/favicons/browserconfig.xml", "language": "en", "generator": "Docusaurus v2.4.3", "og:title": "Nginx Ingress Controller | KubeVela", "title": "Nginx Ingress Controller | KubeVela", "ogDescription": "Nginx Ingress controller is an Ingress controller for Kubernetes using NGINX as a reverse proxy and load balancer.", "docusaurus_tag": "docs-default-v1.10", "docsearch:version": "v1.10", "docusaurus_locale": "en", "docusaurus_version": "v1.10", "og:url": "https://kubevela.io/docs/reference/addons/nginx-ingress-controller/", "docsearch:docusaurus_tag": "docs-default-v1.10", "scrapeId": "c5d644b6-48c7-4e79-be77-bea83a7732a5", "sourceURL": "https://kubevela.io/docs/reference/addons/nginx-ingress-controller", "url": "https://kubevela.io/docs/reference/addons/nginx-ingress-controller/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela Dry Run Command\"?\n\nAssistant: Documentation for the KubeVela dry run command, which allows users to render Kubernetes resources locally without applying them to a cluster.\n\nHere's a detailed explanation:\n\n\n## Synopsis\nDry-run application locally, render the Kubernetes resources as result to stdout.\n\nCommand:\n```\nvela dry-run -d /definition/directory/or/file/ -f /path/to/app.yaml\n```\n\nYou can also specify a remote url for app:\n```\nvela dry-run -d /definition/directory/or/file/ -f https://remote-host/app.yaml\n```\n\n## Examples\nExample command to run a dry run:\n```\nvela dry-run\n```\n\n## Options\nOptions for the dry-run command:\n```\n  -d, --definition string   specify a definition file or directory, it will only be used in dry-run rather than applied to K8s cluster\n  -e, --env string          specify environment name for application\n  -f, --file string         application file name (default \"./app.yaml\")\n  -h, --help                help for dry-run\n  -n, --namespace string    specify the Kubernetes namespace to use\n      --offline dry-run     Run dry-run in offline / local mode, all validation steps will be skipped\n```\n\n## Options inherited from parent commands\nInherited options from parent commands:\n```\n  -y, --yes   Assume yes for all user prompts\n```\n\n## SEE ALSO\nGo Back to [CLI Commands](https://kubevela.io/docs/v1.8/cli/vela/) Homepage.\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.8/cli/vela_dry-run", "title": "KubeVela Dry Run Command", "description": "Documentation for the KubeVela dry run command, which allows users to render Kubernetes resources locally without applying them to a cluster.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 16:47:01", "type": "overview", "page_metadata": {"generator": "Docusaurus v2.4.3", "og:title": "vela dry-run | KubeVela", "theme-color": "#ffffff", "docsearch:version": "v1.8", "docusaurus_version": "v1.8", "title": "vela dry-run | KubeVela", "ogTitle": "vela dry-run | KubeVela", "docusaurus_locale": "en", "ogDescription": "Dry Run an application, and output the K8s resources as result to stdout", "twitter:card": "summary_large_image", "docsearch:language": "en", "docusaurus_tag": "docs-default-v1.8", "og:url": "https://kubevela.io/docs/v1.8/cli/vela_dry-run/", "description": "Dry Run an application, and output the K8s resources as result to stdout", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "msapplication-config": "/img/favicons/browserconfig.xml", "ogUrl": "https://kubevela.io/docs/v1.8/cli/vela_dry-run/", "docsearch:docusaurus_tag": "docs-default-v1.8", "language": "en", "viewport": "width=device-width, initial-scale=1.0", "og:description": "Dry Run an application, and output the K8s resources as result to stdout", "scrapeId": "cbb321ed-ab11-4630-a7d5-8cfdda80cc9c", "sourceURL": "https://kubevela.io/docs/v1.8/cli/vela_dry-run", "url": "https://kubevela.io/docs/v1.8/cli/vela_dry-run/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"KubeVela Dry Run Command\"?\n\nAssistant: Here are some code examples:\n\n### Dry Run Command\n```yaml\nvela dry-run\n```\n\n### Dry Run with Definition and File\n```yaml\nvela dry-run -d /definition/directory/or/file/ -f /path/to/app.yaml\n```\n\n### Dry Run with Remote URL\n```yaml\nvela dry-run -d /definition/directory/or/file/ -f https://remote-host/app.yaml\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.8/cli/vela_dry-run", "title": "KubeVela Dry Run Command", "description": "Documentation for the KubeVela dry run command, which allows users to render Kubernetes resources locally without applying them to a cluster.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 16:47:01", "type": "code_examples", "page_metadata": {"generator": "Docusaurus v2.4.3", "og:title": "vela dry-run | KubeVela", "theme-color": "#ffffff", "docsearch:version": "v1.8", "docusaurus_version": "v1.8", "title": "vela dry-run | KubeVela", "ogTitle": "vela dry-run | KubeVela", "docusaurus_locale": "en", "ogDescription": "Dry Run an application, and output the K8s resources as result to stdout", "twitter:card": "summary_large_image", "docsearch:language": "en", "docusaurus_tag": "docs-default-v1.8", "og:url": "https://kubevela.io/docs/v1.8/cli/vela_dry-run/", "description": "Dry Run an application, and output the K8s resources as result to stdout", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "msapplication-config": "/img/favicons/browserconfig.xml", "ogUrl": "https://kubevela.io/docs/v1.8/cli/vela_dry-run/", "docsearch:docusaurus_tag": "docs-default-v1.8", "language": "en", "viewport": "width=device-width, initial-scale=1.0", "og:description": "Dry Run an application, and output the K8s resources as result to stdout", "scrapeId": "cbb321ed-ab11-4630-a7d5-8cfdda80cc9c", "sourceURL": "https://kubevela.io/docs/v1.8/cli/vela_dry-run", "url": "https://kubevela.io/docs/v1.8/cli/vela_dry-run/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela Dry Run Command\"?\n\nAssistant: Here are the recommended best practices:\n\n• Use the dry-run command to validate your application configuration before applying it to the Kubernetes cluster.\n• Specify the definition file or directory to ensure the correct resources are rendered.\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.8/cli/vela_dry-run", "title": "KubeVela Dry Run Command", "description": "Documentation for the KubeVela dry run command, which allows users to render Kubernetes resources locally without applying them to a cluster.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 16:47:01", "type": "best_practices", "page_metadata": {"generator": "Docusaurus v2.4.3", "og:title": "vela dry-run | KubeVela", "theme-color": "#ffffff", "docsearch:version": "v1.8", "docusaurus_version": "v1.8", "title": "vela dry-run | KubeVela", "ogTitle": "vela dry-run | KubeVela", "docusaurus_locale": "en", "ogDescription": "Dry Run an application, and output the K8s resources as result to stdout", "twitter:card": "summary_large_image", "docsearch:language": "en", "docusaurus_tag": "docs-default-v1.8", "og:url": "https://kubevela.io/docs/v1.8/cli/vela_dry-run/", "description": "Dry Run an application, and output the K8s resources as result to stdout", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "msapplication-config": "/img/favicons/browserconfig.xml", "ogUrl": "https://kubevela.io/docs/v1.8/cli/vela_dry-run/", "docsearch:docusaurus_tag": "docs-default-v1.8", "language": "en", "viewport": "width=device-width, initial-scale=1.0", "og:description": "Dry Run an application, and output the K8s resources as result to stdout", "scrapeId": "cbb321ed-ab11-4630-a7d5-8cfdda80cc9c", "sourceURL": "https://kubevela.io/docs/v1.8/cli/vela_dry-run", "url": "https://kubevela.io/docs/v1.8/cli/vela_dry-run/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"Inputs and Outputs in KubeVela Workflows\"?\n\nAssistant: This section introduces how to use Inputs and Outputs to pass data between workflow steps in KubeVela.\n\nHere's a detailed explanation:\n\n\n## Outputs\nOutputs consists of `name` and `valueFrom`. `name` declares the name of this output, which will be referenced by `from` in input.\n\n`valueFrom` can be written in the following ways:\n\n1. Use value expression, eg. `valueFrom: output.value.status.workflow.message`. Note that `output.value.status.workflow.message` will use the value of the variable from the CUE template of the current step. If this field does not exist in the CUE template of the step, the resulting value will be empty.\n2. Use CUE expressions, eg. use `+` to combine value and string: `valueFrom: output.metadata.name + \"testString\"` or you can import built-in packages in CUE like:\n\n```codeBlockLines_e6Vv\nvalueFrom: |\n          import \"strings\"\n          strings.Join([\"1\",\"2\"], \",\")\n```\n\n## Inputs\nInputs is made of `from` and `parameterKey`. Input uses `from` to reference output, `parameterKey` is a expression that assigns the value of the input to the corresponding field.\n\ncaution\n\nIf you want to set the parameterKey with a invalid CUE variable name (eg: contains `-`, or starts with a number, etc.), you can refer to it with `[]` like:\n\n```codeBlockLines_e6Vv\ninputs:\n   - from: output\n     parameterKey: data[\"my-input\"]\n``` \n\neg. Specify inputs:\n\n```codeBlockLines_e6Vv\n...\n- name: notify\n  type: notification\n  inputs:\n    - from: read-status\n      parameterKey: slack.message.text\n```\n\n## How to use\nSuppose we already have a `depends` application in the cluster, and we want to read the workflow status of the `depends` Application in a new Application and send the status information to Slack.\n\nApply the following YAML:\n\n```codeBlockLines_e6Vv\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: input-output\n  namespace: default\nspec:\n  components:\n  - name: express-server\n    type: webservice\n    properties:\n      image: oamdev/hello-world\n      ports:\n        - port: 8000\n  workflow:\n    steps:\n      - name: read\n        type: read-object\n        properties:\n          name: depends\n        outputs:\n          - name: read-status\n            valueFrom: output.value.status.workflow.message\n      - name: slack-message\n        type: notification\n        inputs:\n          - from: read-status\n            parameterKey: slack.message.text\n        properties:\n          slack:\n            url:\n              value: <your slack url>\n```\n\n> When reading the `depends` application, we use the `read-object` step type. In this step type, the read resources will be placed in `output.value`, so we can use `output.value.status.workflow.message` reads the workflow status information of `depends`.\n\nWhen the application runs successfully, we can receive the workflow status information of the `depends` application in the Slack message notification.\n", "metadata": {"source_url": "https://kubevela.io/docs/end-user/workflow/inputs-outputs", "title": "Inputs and Outputs in KubeVela Workflows", "description": "This section introduces how to use Inputs and Outputs to pass data between workflow steps in KubeVela.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 16:47:29", "type": "overview", "page_metadata": {"ogTitle": "Data Passing | KubeVela", "twitter:card": "summary_large_image", "docusaurus_version": "v1.10", "viewport": "width=device-width, initial-scale=1.0", "language": "en", "ogDescription": "This section introduces how to use Inputs and Outputs to pass data between workflow steps in KubeVela.", "docusaurus_tag": "docs-default-v1.10", "docsearch:language": "en", "og:description": "This section introduces how to use Inputs and Outputs to pass data between workflow steps in KubeVela.", "generator": "Docusaurus v2.4.3", "docsearch:version": "v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "ogUrl": "https://kubevela.io/docs/end-user/workflow/inputs-outputs/", "docusaurus_locale": "en", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "description": "This section introduces how to use Inputs and Outputs to pass data between workflow steps in KubeVela.", "title": "Data Passing | KubeVela", "og:url": "https://kubevela.io/docs/end-user/workflow/inputs-outputs/", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:title": "Data Passing | KubeVela", "theme-color": "#ffffff", "scrapeId": "7895e941-1001-40b7-a1be-22381f8b496a", "sourceURL": "https://kubevela.io/docs/end-user/workflow/inputs-outputs", "url": "https://kubevela.io/docs/end-user/workflow/inputs-outputs/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"Inputs and Outputs in KubeVela Workflows\"?\n\nAssistant: Here are some code examples:\n\n### Outputs Example\n```yaml\nvalueFrom: |\n          import \"strings\"\n          strings.Join([\"1\",\"2\"], \",\")\n```\n\n### Inputs Example\n```yaml\ninputs:\n   - from: output\n     parameterKey: data[\"my-input\"]\n```\n\n### YAML Application Example\n```yaml\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: input-output\n  namespace: default\nspec:\n  components:\n  - name: express-server\n    type: webservice\n    properties:\n      image: oamdev/hello-world\n      ports:\n        - port: 8000\n  workflow:\n    steps:\n      - name: read\n        type: read-object\n        properties:\n          name: depends\n        outputs:\n          - name: read-status\n            valueFrom: output.value.status.workflow.message\n      - name: slack-message\n        type: notification\n        inputs:\n          - from: read-status\n            parameterKey: slack.message.text\n        properties:\n          slack:\n            url:\n              value: <your slack url>\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/end-user/workflow/inputs-outputs", "title": "Inputs and Outputs in KubeVela Workflows", "description": "This section introduces how to use Inputs and Outputs to pass data between workflow steps in KubeVela.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 16:47:29", "type": "code_examples", "page_metadata": {"ogTitle": "Data Passing | KubeVela", "twitter:card": "summary_large_image", "docusaurus_version": "v1.10", "viewport": "width=device-width, initial-scale=1.0", "language": "en", "ogDescription": "This section introduces how to use Inputs and Outputs to pass data between workflow steps in KubeVela.", "docusaurus_tag": "docs-default-v1.10", "docsearch:language": "en", "og:description": "This section introduces how to use Inputs and Outputs to pass data between workflow steps in KubeVela.", "generator": "Docusaurus v2.4.3", "docsearch:version": "v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "ogUrl": "https://kubevela.io/docs/end-user/workflow/inputs-outputs/", "docusaurus_locale": "en", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "description": "This section introduces how to use Inputs and Outputs to pass data between workflow steps in KubeVela.", "title": "Data Passing | KubeVela", "og:url": "https://kubevela.io/docs/end-user/workflow/inputs-outputs/", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:title": "Data Passing | KubeVela", "theme-color": "#ffffff", "scrapeId": "7895e941-1001-40b7-a1be-22381f8b496a", "sourceURL": "https://kubevela.io/docs/end-user/workflow/inputs-outputs", "url": "https://kubevela.io/docs/end-user/workflow/inputs-outputs/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"Inputs and Outputs in KubeVela Workflows\"?\n\nAssistant: Here are the recommended best practices:\n\n• When using `valueFrom`, ensure the CUE template contains the referenced variable to avoid empty values.\n• For invalid CUE variable names, use the `[]` notation to reference them.\n", "metadata": {"source_url": "https://kubevela.io/docs/end-user/workflow/inputs-outputs", "title": "Inputs and Outputs in KubeVela Workflows", "description": "This section introduces how to use Inputs and Outputs to pass data between workflow steps in KubeVela.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 16:47:29", "type": "best_practices", "page_metadata": {"ogTitle": "Data Passing | KubeVela", "twitter:card": "summary_large_image", "docusaurus_version": "v1.10", "viewport": "width=device-width, initial-scale=1.0", "language": "en", "ogDescription": "This section introduces how to use Inputs and Outputs to pass data between workflow steps in KubeVela.", "docusaurus_tag": "docs-default-v1.10", "docsearch:language": "en", "og:description": "This section introduces how to use Inputs and Outputs to pass data between workflow steps in KubeVela.", "generator": "Docusaurus v2.4.3", "docsearch:version": "v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "ogUrl": "https://kubevela.io/docs/end-user/workflow/inputs-outputs/", "docusaurus_locale": "en", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "description": "This section introduces how to use Inputs and Outputs to pass data between workflow steps in KubeVela.", "title": "Data Passing | KubeVela", "og:url": "https://kubevela.io/docs/end-user/workflow/inputs-outputs/", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:title": "Data Passing | KubeVela", "theme-color": "#ffffff", "scrapeId": "7895e941-1001-40b7-a1be-22381f8b496a", "sourceURL": "https://kubevela.io/docs/end-user/workflow/inputs-outputs", "url": "https://kubevela.io/docs/end-user/workflow/inputs-outputs/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela Auto-Scaler Documentation\"?\n\nAssistant: This documentation covers the integration of auto-scaling methods in KubeVela using KEDA, including examples and specifications for the keda-auto-scaler trait.\n\nHere's a detailed explanation:\n\n\n## Enable the addon\nTo enable the KEDA addon, run the following command:\n\n```bash\nvela addon enable keda\n```\n\n## Use keda-auto-scaler in Application\nKeda supports various triggers such as `cron`, `cpu`, etc. Below are examples demonstrating how to use these triggers in KubeVela applications.\n\n**Caution:** When using HPA, specify the [`apply-once`](https://kubevela.io/docs/v1.7/end-user/policies/apply-once/) policy to allow HPA to control the replica field.\n\n## How it works with Trigger?\nHere are several examples of how autoscaling works in KubeVela applications.\n\n## Cron HPA\nYou can use cron HPA with the [keda cron trigger](https://keda.sh/docs/2.8/scalers/cron/).\n\n```yaml\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: scaler-eg-app\nspec:\n  components:\n    - name: hello-world-scaler\n      type: webservice\n      properties:\n        image: oamdev/hello-world\n        ports:\n         - port: 8000\n           expose: true\n      traits:\n        - type: scaler\n          properties:\n            replicas: 1\n        - type: keda-auto-scaler\n          properties:\n            triggers:\n            - type: cron\n              metadata:\n                timezone: Asia/Hong_Kong\n                start: 00 * * * *  # Every hour on the 30th minute\n                end: 10 * * * *    # Every hour on the 45th minute\n                desiredReplicas: \"3\"\n\n  policies:\n    - name: apply-once\n      type: apply-once\n      properties:\n        enable: true\n        rules:\n        - strategy:\n            path: [\"spec.replicas\"]\n          selector:\n            resourceTypes: [\"Deployment\"]\n```\nIn this example, it will scale up to 3 replicas from 0-10 in every hour, then scale back to the initial replica of 1.\n\n## CPU based HPA\nYou can use CPU based HPA with the [keda cpu trigger](https://keda.sh/docs/2.8/scalers/cpu/).\n\n**Tip:** Ensure that the Kubernetes Metrics Server is installed and that the relevant Pods have resource limits defined.\n\n```yaml\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: scaler-eg-app\nspec:\n  components:\n    - name: frontend\n      type: webservice\n      properties:\n        image: oamdev/testapp:v1\n        cmd: [\"node\", \"server.js\"]\n        cpu: \"0.1\"\n        ports:\n          - port: 8080\n            expose: true\n      traits:\n        - type: scaler\n          properties:\n            replicas: 1\n        - type: gateway\n          properties:\n            class: traefik\n            classInSpec: true\n            domain: test.my.domain\n            http:\n              \"/\": 8080\n        - type: keda-auto-scaler\n          properties:\n            minReplicaCount: 1\n            maxReplicaCount: 10\n            cooldownPeriod: 10\n            pollingInterval: 10\n            triggers:\n            - type: cpu\n              metricType: Utilization\n              metadata:\n                value: \"80\"\n  policies:\n    - name: apply-once\n      type: apply-once\n      properties:\n        enable: true\n        rules:\n        - strategy:\n            path: [\"spec.replicas\"]\n          selector:\n            resourceTypes: [\"Deployment\"]\n```\nIn this example, the service entry point is exposed using the `gateway` trait. Ensure you have the `traefik` ingress controller if not using `velad`.\n\n## Other Triggers\nAll triggers are supported, and the trigger specifications in the KubeVela `keda-auto-scaler` trait align with KEDA triggers. Refer to [KEDA documentation](https://keda.sh/docs/2.8/scalers/) for more details.\n\n## Specify the Applied Workload\nIf your component is a `webservice` using Kubernetes Deployment, you don't need to specify the workload type. For `helm` or customized component types, specify the `scaleTargetRef` field to indicate which workload the trait should work with.\n\n## Specification of `keda-auto-scaler`\n| Name | Description | Type | Required | Default |\n| --- | --- | --- | --- | --- |\n| triggers |  | [\\[\\]triggers](https://kubevela.io/docs/v1.7/tutorials/auto-scaler/#triggers) | true |  |\n| scaleTargetRef |  | [scaleTargetRef](https://kubevela.io/docs/v1.7/tutorials/auto-scaler/#scaletargetref) | true |  |\n| pollingInterval | specify the polling interval of metrics, Default: 30 seconds. | int | false | 30 |\n| cooldownPeriod | Specify the cool down period that prevents the scaler from scaling down after each trigger activation. Default: 60 seconds. | int | false | 60 |\n| idleReplicaCount | Specify the idle period that the scaler to scale to zero. Default: ignored, must be less than minReplicaCount. | int | false | 0 |\n| minReplicaCount | Specify the minimal replica count. Default: 0. | int | false | 1 |\n| maxReplicaCount | Specify the maximal replica count. Default: 100. | int | false | 100 |\n| fallback | Specify the fallback value when the metrics server is not available. | [fallback](https://kubevela.io/docs/v1.7/tutorials/auto-scaler/#fallback) | true |  |\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.7/tutorials/auto-scaler", "title": "KubeVela Auto-Scaler Documentation", "description": "This documentation covers the integration of auto-scaling methods in KubeVela using KEDA, including examples and specifications for the keda-auto-scaler trait.", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-02-28 16:47:56", "type": "overview", "page_metadata": {"viewport": ["width=device-width, initial-scale=1.0", "width=device-width, initial-scale=1.0,\n                                 maximum-scale=1.0, user-scalable=no"], "color-scheme": "light dark", "og:url": "https://kubevela.io/docs/v1.7/tutorials/auto-scaler/", "docsearch:docusaurus_tag": "docs-default-v1.7", "docusaurus_locale": "en", "language": "en", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "description": "KubeVela supports integrate any auto-scaling ways in Kubernetes world. In this doc, we'll use KEDA for auto-scaling. KEDA is a Kubernetes-based Event Driven Autoscaling component, it provides event driven scale for any container running in Kubernetes.", "title": "Auto Scaling | KubeVela", "ogUrl": "https://kubevela.io/docs/v1.7/tutorials/auto-scaler/", "docsearch:version": "v1.7", "docusaurus_tag": "docs-default-v1.7", "ogDescription": "KubeVela supports integrate any auto-scaling ways in Kubernetes world. In this doc, we'll use KEDA for auto-scaling. KEDA is a Kubernetes-based Event Driven Autoscaling component, it provides event driven scale for any container running in Kubernetes.", "generator": "Docusaurus v2.4.3", "theme-color": ["#ffffff", "#fff"], "og:description": "KubeVela supports integrate any auto-scaling ways in Kubernetes world. In this doc, we'll use KEDA for auto-scaling. KEDA is a Kubernetes-based Event Driven Autoscaling component, it provides event driven scale for any container running in Kubernetes.", "docusaurus_version": "v1.7", "twitter:card": "summary_large_image", "ogTitle": "Auto Scaling | KubeVela", "msapplication-config": "/img/favicons/browserconfig.xml", "docsearch:language": "en", "og:title": "Auto Scaling | KubeVela", "scrapeId": "565efcd4-cc45-427f-a8d6-9e85ab4ddd37", "sourceURL": "https://kubevela.io/docs/v1.7/tutorials/auto-scaler", "url": "https://kubevela.io/docs/v1.7/tutorials/auto-scaler/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"KubeVela Auto-Scaler Documentation\"?\n\nAssistant: Here are some code examples:\n\n### Enable the addon\n```yaml\nvela addon enable keda\n```\n\n### Cron HPA Example\n```yaml\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: scaler-eg-app\nspec:\n  components:\n    - name: hello-world-scaler\n      type: webservice\n      properties:\n        image: oamdev/hello-world\n        ports:\n         - port: 8000\n           expose: true\n      traits:\n        - type: scaler\n          properties:\n            replicas: 1\n        - type: keda-auto-scaler\n          properties:\n            triggers:\n            - type: cron\n              metadata:\n                timezone: Asia/Hong_Kong\n                start: 00 * * * *  # Every hour on the 30th minute\n                end: 10 * * * *    # Every hour on the 45th minute\n                desiredReplicas: \"3\"\n\n  policies:\n    - name: apply-once\n      type: apply-once\n      properties:\n        enable: true\n        rules:\n        - strategy:\n            path: [\"spec.replicas\"]\n          selector:\n            resourceTypes: [\"Deployment\"]\n```\n\n### CPU based HPA Example\n```yaml\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: scaler-eg-app\nspec:\n  components:\n    - name: frontend\n      type: webservice\n      properties:\n        image: oamdev/testapp:v1\n        cmd: [\"node\", \"server.js\"]\n        cpu: \"0.1\"\n        ports:\n          - port: 8080\n            expose: true\n      traits:\n        - type: scaler\n          properties:\n            replicas: 1\n        - type: gateway\n          properties:\n            class: traefik\n            classInSpec: true\n            domain: test.my.domain\n            http:\n              \"/\": 8080\n        - type: keda-auto-scaler\n          properties:\n            minReplicaCount: 1\n            maxReplicaCount: 10\n            cooldownPeriod: 10\n            pollingInterval: 10\n            triggers:\n            - type: cpu\n              metricType: Utilization\n              metadata:\n                value: \"80\"\n  policies:\n    - name: apply-once\n      type: apply-once\n      properties:\n        enable: true\n        rules:\n        - strategy:\n            path: [\"spec.replicas\"]\n          selector:\n            resourceTypes: [\"Deployment\"]\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.7/tutorials/auto-scaler", "title": "KubeVela Auto-Scaler Documentation", "description": "This documentation covers the integration of auto-scaling methods in KubeVela using KEDA, including examples and specifications for the keda-auto-scaler trait.", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-02-28 16:47:56", "type": "code_examples", "page_metadata": {"viewport": ["width=device-width, initial-scale=1.0", "width=device-width, initial-scale=1.0,\n                                 maximum-scale=1.0, user-scalable=no"], "color-scheme": "light dark", "og:url": "https://kubevela.io/docs/v1.7/tutorials/auto-scaler/", "docsearch:docusaurus_tag": "docs-default-v1.7", "docusaurus_locale": "en", "language": "en", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "description": "KubeVela supports integrate any auto-scaling ways in Kubernetes world. In this doc, we'll use KEDA for auto-scaling. KEDA is a Kubernetes-based Event Driven Autoscaling component, it provides event driven scale for any container running in Kubernetes.", "title": "Auto Scaling | KubeVela", "ogUrl": "https://kubevela.io/docs/v1.7/tutorials/auto-scaler/", "docsearch:version": "v1.7", "docusaurus_tag": "docs-default-v1.7", "ogDescription": "KubeVela supports integrate any auto-scaling ways in Kubernetes world. In this doc, we'll use KEDA for auto-scaling. KEDA is a Kubernetes-based Event Driven Autoscaling component, it provides event driven scale for any container running in Kubernetes.", "generator": "Docusaurus v2.4.3", "theme-color": ["#ffffff", "#fff"], "og:description": "KubeVela supports integrate any auto-scaling ways in Kubernetes world. In this doc, we'll use KEDA for auto-scaling. KEDA is a Kubernetes-based Event Driven Autoscaling component, it provides event driven scale for any container running in Kubernetes.", "docusaurus_version": "v1.7", "twitter:card": "summary_large_image", "ogTitle": "Auto Scaling | KubeVela", "msapplication-config": "/img/favicons/browserconfig.xml", "docsearch:language": "en", "og:title": "Auto Scaling | KubeVela", "scrapeId": "565efcd4-cc45-427f-a8d6-9e85ab4ddd37", "sourceURL": "https://kubevela.io/docs/v1.7/tutorials/auto-scaler", "url": "https://kubevela.io/docs/v1.7/tutorials/auto-scaler/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela Auto-Scaler Documentation\"?\n\nAssistant: Here are the recommended best practices:\n\n• When using HPA, specify the `apply-once` policy to let HPA control the replica field.\n• Ensure that the Kubernetes Metrics Server is installed and that the relevant Pods have resource limits defined.\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.7/tutorials/auto-scaler", "title": "KubeVela Auto-Scaler Documentation", "description": "This documentation covers the integration of auto-scaling methods in KubeVela using KEDA, including examples and specifications for the keda-auto-scaler trait.", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-02-28 16:47:56", "type": "best_practices", "page_metadata": {"viewport": ["width=device-width, initial-scale=1.0", "width=device-width, initial-scale=1.0,\n                                 maximum-scale=1.0, user-scalable=no"], "color-scheme": "light dark", "og:url": "https://kubevela.io/docs/v1.7/tutorials/auto-scaler/", "docsearch:docusaurus_tag": "docs-default-v1.7", "docusaurus_locale": "en", "language": "en", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "description": "KubeVela supports integrate any auto-scaling ways in Kubernetes world. In this doc, we'll use KEDA for auto-scaling. KEDA is a Kubernetes-based Event Driven Autoscaling component, it provides event driven scale for any container running in Kubernetes.", "title": "Auto Scaling | KubeVela", "ogUrl": "https://kubevela.io/docs/v1.7/tutorials/auto-scaler/", "docsearch:version": "v1.7", "docusaurus_tag": "docs-default-v1.7", "ogDescription": "KubeVela supports integrate any auto-scaling ways in Kubernetes world. In this doc, we'll use KEDA for auto-scaling. KEDA is a Kubernetes-based Event Driven Autoscaling component, it provides event driven scale for any container running in Kubernetes.", "generator": "Docusaurus v2.4.3", "theme-color": ["#ffffff", "#fff"], "og:description": "KubeVela supports integrate any auto-scaling ways in Kubernetes world. In this doc, we'll use KEDA for auto-scaling. KEDA is a Kubernetes-based Event Driven Autoscaling component, it provides event driven scale for any container running in Kubernetes.", "docusaurus_version": "v1.7", "twitter:card": "summary_large_image", "ogTitle": "Auto Scaling | KubeVela", "msapplication-config": "/img/favicons/browserconfig.xml", "docsearch:language": "en", "og:title": "Auto Scaling | KubeVela", "scrapeId": "565efcd4-cc45-427f-a8d6-9e85ab4ddd37", "sourceURL": "https://kubevela.io/docs/v1.7/tutorials/auto-scaler", "url": "https://kubevela.io/docs/v1.7/tutorials/auto-scaler/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela Quick Start CLI\"?\n\nAssistant: Welcome to KubeVela! In this guide, we'll walk you through how to install KubeVela, and deploy your first simple application.\n\nHere's a detailed explanation:\n\n\n## Installation\nMake sure you have finished and verified KubeVela installation following [this guide](https://kubevela.io/docs/install/).\n\n## A Simple Application\nA simple deployment definition in KubeVela looks as below:\n\n```codeBlockLines_e6Vv\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: first-vela-app\nspec:\n  components:\n    - name: express-server\n      type: webservice\n      properties:\n        image: oamdev/hello-world\n        port: 8000\n      traits:\n        - type: gateway\n          properties:\n            domain: testsvc.example.com\n            http:\n              \"/\": 8000\n```\n\nNow deploy it to KubeVela:\n\n```codeBlockLines_e6Vv\nvela up -f https://raw.githubusercontent.com/kubevela/kubevela/master/docs/examples/vela-app.yaml\n```\n\nThis command will deploy a web service component to target environment, which in our case is the Kubernetes cluster that KubeVela itself is installed.\n\nAfter deployed, you can now directly visit this application as it already attached with a `ingress` trait (assume your cluster has [ingress controller](https://kubernetes.io/docs/concepts/services-networking/ingress-controllers/) installed).\n\n```codeBlockLines_e6Vv\n$ curl -H \"Host:testsvc.example.com\" http://<some ip address>/\n<xmp>\nHello World\n\n                                       ##         .\n                                 ## ## ##        ==\n                              ## ## ## ## ##    ===\n                           /\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\\___/ ===\n                      ~~~ {~~ ~~~~ ~~~ ~~~~ ~~ ~ /  ===- ~~~\n                           \\______ o          _,/\n                            \\      \\       _,'\n                             `'--.._\\..--''\n</xmp>\n```\n\nGreat! You have finished deploying your first KubeVela application, the simplest component can only have one component, the rest fields are all optional including trait, policies and workflow.\n\n## Next Step\n- Read from [the introduction](https://kubevela.io/docs/) to learn more about the project.\n- Learn how to do [Multi-Cluster Application Delivery](https://kubevela.io/docs/case-studies/multi-cluster/). Components and traits are just the beginning of your vela sail, there're more powerful features around Policy and Workflow.\n- Refer to [VelaUX](https://kubevela.io/docs/quick-start/) for UI Console experience.\n\n- [Installation](https://kubevela.io/docs/end-user/quick-start-cli/#installation)\n- [A Simple Application](https://kubevela.io/docs/end-user/quick-start-cli/#a-simple-application)\n- [Next Step](https://kubevela.io/docs/end-user/quick-start-cli/#next-step)\n", "metadata": {"source_url": "https://kubevela.io/docs/end-user/quick-start-cli", "title": "KubeVela Quick Start CLI", "description": "Welcome to KubeVela! In this guide, we'll walk you through how to install KubeVela, and deploy your first simple application.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 16:48:09", "type": "overview", "page_metadata": {"msapplication-config": "/img/favicons/browserconfig.xml", "docsearch:language": "en", "ogTitle": "Deploy First Application | KubeVela", "og:description": "Welcome to KubeVela! In this guide, we'll walk you through how to install KubeVela, and deploy your first simple application.", "docsearch:version": "v1.10", "og:title": "Deploy First Application | KubeVela", "twitter:card": "summary_large_image", "docusaurus_version": "v1.10", "docusaurus_tag": "docs-default-v1.10", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docsearch:docusaurus_tag": "docs-default-v1.10", "generator": "Docusaurus v2.4.3", "ogDescription": "Welcome to KubeVela! In this guide, we'll walk you through how to install KubeVela, and deploy your first simple application.", "ogUrl": "https://kubevela.io/docs/end-user/quick-start-cli/", "theme-color": "#ffffff", "og:url": "https://kubevela.io/docs/end-user/quick-start-cli/", "viewport": "width=device-width, initial-scale=1.0", "language": "en", "title": "Deploy First Application | KubeVela", "docusaurus_locale": "en", "description": "Welcome to KubeVela! In this guide, we'll walk you through how to install KubeVela, and deploy your first simple application.", "scrapeId": "a8b84f09-c0a8-4017-9641-c703200752f7", "sourceURL": "https://kubevela.io/docs/end-user/quick-start-cli", "url": "https://kubevela.io/docs/end-user/quick-start-cli/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"KubeVela Quick Start CLI\"?\n\nAssistant: Here are some code examples:\n\n### Application Definition\n```yaml\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: first-vela-app\nspec:\n  components:\n    - name: express-server\n      type: webservice\n      properties:\n        image: oamdev/hello-world\n        port: 8000\n      traits:\n        - type: gateway\n          properties:\n            domain: testsvc.example.com\n            http:\n              \"/\": 8000\n```\n\n### Deploy Command\n```yaml\nvela up -f https://raw.githubusercontent.com/kubevela/kubevela/master/docs/examples/vela-app.yaml\n```\n\n### Curl Command\n```yaml\n$ curl -H \"Host:testsvc.example.com\" http://<some ip address>/\n<xmp>\nHello World\n\n                                       ##         .\n                                 ## ## ##        ==\n                              ## ## ## ## ##    ===\n                           /\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\\___/ ===\n                      ~~~ {~~ ~~~~ ~~~ ~~~~ ~~ ~ /  ===- ~~~\n                           \\______ o          _,/\n                            \\      \\       _,'\n                             `'--.._\\..--''\n</xmp>\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/end-user/quick-start-cli", "title": "KubeVela Quick Start CLI", "description": "Welcome to KubeVela! In this guide, we'll walk you through how to install KubeVela, and deploy your first simple application.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 16:48:09", "type": "code_examples", "page_metadata": {"msapplication-config": "/img/favicons/browserconfig.xml", "docsearch:language": "en", "ogTitle": "Deploy First Application | KubeVela", "og:description": "Welcome to KubeVela! In this guide, we'll walk you through how to install KubeVela, and deploy your first simple application.", "docsearch:version": "v1.10", "og:title": "Deploy First Application | KubeVela", "twitter:card": "summary_large_image", "docusaurus_version": "v1.10", "docusaurus_tag": "docs-default-v1.10", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docsearch:docusaurus_tag": "docs-default-v1.10", "generator": "Docusaurus v2.4.3", "ogDescription": "Welcome to KubeVela! In this guide, we'll walk you through how to install KubeVela, and deploy your first simple application.", "ogUrl": "https://kubevela.io/docs/end-user/quick-start-cli/", "theme-color": "#ffffff", "og:url": "https://kubevela.io/docs/end-user/quick-start-cli/", "viewport": "width=device-width, initial-scale=1.0", "language": "en", "title": "Deploy First Application | KubeVela", "docusaurus_locale": "en", "description": "Welcome to KubeVela! In this guide, we'll walk you through how to install KubeVela, and deploy your first simple application.", "scrapeId": "a8b84f09-c0a8-4017-9641-c703200752f7", "sourceURL": "https://kubevela.io/docs/end-user/quick-start-cli", "url": "https://kubevela.io/docs/end-user/quick-start-cli/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela Quick Start CLI\"?\n\nAssistant: Here are the recommended best practices:\n\n• Ensure you have completed the KubeVela installation before proceeding with the application deployment.\n• Assume that your Kubernetes cluster has an ingress controller installed to access the deployed application.\n", "metadata": {"source_url": "https://kubevela.io/docs/end-user/quick-start-cli", "title": "KubeVela Quick Start CLI", "description": "Welcome to KubeVela! In this guide, we'll walk you through how to install KubeVela, and deploy your first simple application.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 16:48:09", "type": "best_practices", "page_metadata": {"msapplication-config": "/img/favicons/browserconfig.xml", "docsearch:language": "en", "ogTitle": "Deploy First Application | KubeVela", "og:description": "Welcome to KubeVela! In this guide, we'll walk you through how to install KubeVela, and deploy your first simple application.", "docsearch:version": "v1.10", "og:title": "Deploy First Application | KubeVela", "twitter:card": "summary_large_image", "docusaurus_version": "v1.10", "docusaurus_tag": "docs-default-v1.10", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docsearch:docusaurus_tag": "docs-default-v1.10", "generator": "Docusaurus v2.4.3", "ogDescription": "Welcome to KubeVela! In this guide, we'll walk you through how to install KubeVela, and deploy your first simple application.", "ogUrl": "https://kubevela.io/docs/end-user/quick-start-cli/", "theme-color": "#ffffff", "og:url": "https://kubevela.io/docs/end-user/quick-start-cli/", "viewport": "width=device-width, initial-scale=1.0", "language": "en", "title": "Deploy First Application | KubeVela", "docusaurus_locale": "en", "description": "Welcome to KubeVela! In this guide, we'll walk you through how to install KubeVela, and deploy your first simple application.", "scrapeId": "a8b84f09-c0a8-4017-9641-c703200752f7", "sourceURL": "https://kubevela.io/docs/end-user/quick-start-cli", "url": "https://kubevela.io/docs/end-user/quick-start-cli/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"Service Binding Trait\"?\n\nAssistant: Service binding trait will bind data from Kubernetes Secret to the application container's ENV.\n\nHere's a detailed explanation:\n\n\n## How to use\n1. Prepare a Kubernetes Secret\n\nThe secret can be manually created, or generated by other component or external system.\n\nFor example, we have a secret `db-conn-example` whose data is as below:\n\n```codeBlockLines_e6Vv\nendpoint: https://xxx.com\npassword: 123\nusername: myname\n```\n\n2. Bind the Secret into your component by `service-binding` trait\n\nFor example, we have a webservice component who needs to consume a database. The database connection string should be set to Pod environments: `endpoint`, `username` and `DB_PASSWORD`.\n\nWe can set the properties for envMappings as below. For each environment, `secret` represents the secret name, and `key` represents the key of the secret.\n\nHere is the complete properties for the trait.\n\n```codeBlockLines_e6Vv\ntraits:\n- type: service-binding\n  properties:\n    envMappings:\n      DB_PASSWORD:\n        secret: db-conn-example\n        key: password\n      endpoint:\n        secret: db-conn-example\n        key: endpoint\n      username:\n        secret: db-conn-example\n        key: username\n```\n\nIn particular, if the environment name, like `endpoint`, is same to the `key` of the secret, we can omit the `key`.\nSo we can simplify the properties as below.\n\n```codeBlockLines_e6Vv\ntraits:\n- type: service-binding\n  properties:\n    envMappings:\n      DB_PASSWORD:\n        secret: db-conn-example\n        key: password\n      endpoint:\n        secret: db-conn-example\n      username:\n        secret: db-conn-example\n```\n\nWe can finally prepare an Application for the business component `binding-test-comp` to consume the secret, which is a representative of a database cloud resource.\n\n```codeBlockLines_e6Vv\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: webapp\nspec:\n  components:\n    - name: binding-test-comp\n      type: webservice\n      properties:\n        image: zzxwill/flask-web-application:v0.3.1-crossplane\n        ports: 80\n      traits:\n        - type: service-binding\n          properties:\n            envMappings:\n              # environments refer to db-conn secret\n              DB_PASSWORD:\n                secret: db-conn-example\n                key: password\n              endpoint:\n                secret: db-conn-example\n              username:\n                secret: db-conn-example\n```\n\nDeploy this YAML and the Secret `db-conn-example` will be binding into environment of workload.\n", "metadata": {"source_url": "https://kubevela.io/docs/end-user/traits/service-binding", "title": "Service Binding Trait", "description": "Service binding trait will bind data from Kubernetes Secret to the application container's ENV.", "has_code_examples": true, "has_best_practices": true, "section_count": 1, "timestamp": "2025-02-28 16:48:27", "type": "overview", "page_metadata": {"og:title": "Binding Configuration and Secrets | KubeVela", "description": "Service binding trait will bind data from Kubernetes Secret to the application container's ENV.", "title": "Binding Configuration and Secrets | KubeVela", "docsearch:version": "v1.10", "viewport": "width=device-width, initial-scale=1.0", "language": "en", "docusaurus_locale": "en", "docsearch:language": "en", "og:description": "Service binding trait will bind data from Kubernetes Secret to the application container's ENV.", "theme-color": "#ffffff", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "msapplication-config": "/img/favicons/browserconfig.xml", "docusaurus_version": "v1.10", "ogTitle": "Binding Configuration and Secrets | KubeVela", "docusaurus_tag": "docs-default-v1.10", "generator": "Docusaurus v2.4.3", "ogDescription": "Service binding trait will bind data from Kubernetes Secret to the application container's ENV.", "ogUrl": "https://kubevela.io/docs/end-user/traits/service-binding/", "twitter:card": "summary_large_image", "og:url": "https://kubevela.io/docs/end-user/traits/service-binding/", "docsearch:docusaurus_tag": "docs-default-v1.10", "scrapeId": "86294e4f-eeb3-4e8a-8909-d6a967a8cceb", "sourceURL": "https://kubevela.io/docs/end-user/traits/service-binding", "url": "https://kubevela.io/docs/end-user/traits/service-binding/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"Service Binding Trait\"?\n\nAssistant: Here are some code examples:\n\n### Kubernetes Secret Example\n```yaml\nendpoint: https://xxx.com\npassword: 123\nusername: myname\n```\n\n### Complete Properties for the Trait\n```yaml\ntraits:\n- type: service-binding\n  properties:\n    envMappings:\n      DB_PASSWORD:\n        secret: db-conn-example\n        key: password\n      endpoint:\n        secret: db-conn-example\n        key: endpoint\n      username:\n        secret: db-conn-example\n        key: username\n```\n\n### Simplified Properties for the Trait\n```yaml\ntraits:\n- type: service-binding\n  properties:\n    envMappings:\n      DB_PASSWORD:\n        secret: db-conn-example\n        key: password\n      endpoint:\n        secret: db-conn-example\n      username:\n        secret: db-conn-example\n```\n\n### Application YAML Example\n```yaml\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: webapp\nspec:\n  components:\n    - name: binding-test-comp\n      type: webservice\n      properties:\n        image: zzxwill/flask-web-application:v0.3.1-crossplane\n        ports: 80\n      traits:\n        - type: service-binding\n          properties:\n            envMappings:\n              # environments refer to db-conn secret\n              DB_PASSWORD:\n                secret: db-conn-example\n                key: password\n              endpoint:\n                secret: db-conn-example\n              username:\n                secret: db-conn-example\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/end-user/traits/service-binding", "title": "Service Binding Trait", "description": "Service binding trait will bind data from Kubernetes Secret to the application container's ENV.", "has_code_examples": true, "has_best_practices": true, "section_count": 1, "timestamp": "2025-02-28 16:48:27", "type": "code_examples", "page_metadata": {"og:title": "Binding Configuration and Secrets | KubeVela", "description": "Service binding trait will bind data from Kubernetes Secret to the application container's ENV.", "title": "Binding Configuration and Secrets | KubeVela", "docsearch:version": "v1.10", "viewport": "width=device-width, initial-scale=1.0", "language": "en", "docusaurus_locale": "en", "docsearch:language": "en", "og:description": "Service binding trait will bind data from Kubernetes Secret to the application container's ENV.", "theme-color": "#ffffff", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "msapplication-config": "/img/favicons/browserconfig.xml", "docusaurus_version": "v1.10", "ogTitle": "Binding Configuration and Secrets | KubeVela", "docusaurus_tag": "docs-default-v1.10", "generator": "Docusaurus v2.4.3", "ogDescription": "Service binding trait will bind data from Kubernetes Secret to the application container's ENV.", "ogUrl": "https://kubevela.io/docs/end-user/traits/service-binding/", "twitter:card": "summary_large_image", "og:url": "https://kubevela.io/docs/end-user/traits/service-binding/", "docsearch:docusaurus_tag": "docs-default-v1.10", "scrapeId": "86294e4f-eeb3-4e8a-8909-d6a967a8cceb", "sourceURL": "https://kubevela.io/docs/end-user/traits/service-binding", "url": "https://kubevela.io/docs/end-user/traits/service-binding/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"Service Binding Trait\"?\n\nAssistant: Here are the recommended best practices:\n\n• The `service-binding` trait is hidden by default in `VelaUX`, you can use it in CLI.\n", "metadata": {"source_url": "https://kubevela.io/docs/end-user/traits/service-binding", "title": "Service Binding Trait", "description": "Service binding trait will bind data from Kubernetes Secret to the application container's ENV.", "has_code_examples": true, "has_best_practices": true, "section_count": 1, "timestamp": "2025-02-28 16:48:27", "type": "best_practices", "page_metadata": {"og:title": "Binding Configuration and Secrets | KubeVela", "description": "Service binding trait will bind data from Kubernetes Secret to the application container's ENV.", "title": "Binding Configuration and Secrets | KubeVela", "docsearch:version": "v1.10", "viewport": "width=device-width, initial-scale=1.0", "language": "en", "docusaurus_locale": "en", "docsearch:language": "en", "og:description": "Service binding trait will bind data from Kubernetes Secret to the application container's ENV.", "theme-color": "#ffffff", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "msapplication-config": "/img/favicons/browserconfig.xml", "docusaurus_version": "v1.10", "ogTitle": "Binding Configuration and Secrets | KubeVela", "docusaurus_tag": "docs-default-v1.10", "generator": "Docusaurus v2.4.3", "ogDescription": "Service binding trait will bind data from Kubernetes Secret to the application container's ENV.", "ogUrl": "https://kubevela.io/docs/end-user/traits/service-binding/", "twitter:card": "summary_large_image", "og:url": "https://kubevela.io/docs/end-user/traits/service-binding/", "docsearch:docusaurus_tag": "docs-default-v1.10", "scrapeId": "86294e4f-eeb3-4e8a-8909-d6a967a8cceb", "sourceURL": "https://kubevela.io/docs/end-user/traits/service-binding", "url": "https://kubevela.io/docs/end-user/traits/service-binding/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"Component Terraform\"?\n\nAssistant: This page provides a guide for platform engineers to create Terraform typed ComponentDefinitions for cloud resources on providers like Alibaba Cloud, AWS, and Azure.\n\nHere's a detailed explanation:\n\n\n## Prerequisites\n- [`vela` binary](https://kubevela.io/docs/platform-engineers/advanced-install/#install-vela-cli)\n\n## Develop a Terraform resource or module\nCreate a Terraform resource or module for a cloud resource.\n\nFor example, we created a Terraform resource for AWS S3 bucket, and stored it in a local file named `aws_s3_bucket.tf`.\n\n```hcl\nresource \"aws_s3_bucket\" \"bucket-acl\" {\n  bucket = var.bucket\n  acl = var.acl\n}\n\noutput \"BUCKET_NAME\" {\n  value = aws_s3_bucket.bucket-acl.bucket_domain_name\n}\n\nvariable \"bucket\" {\n  description = \"S3 bucket name\"\n  default = \"vela-website\"\n  type = string\n}\n\nvariable \"acl\" {\n  description = \"S3 bucket ACL\"\n  default = \"private\"\n  type = string\n}\n```\n\nWe also created a Terraform module for Alibaba Cloud EIP, and stored it in GitHub repository [https://github.com/oam-dev/terraform-alibaba-eip.git](https://github.com/oam-dev/terraform-alibaba-eip.git).\n\n> Please make sure this module is fine and ready for use. You're recommended to debug these modules first with terraform command line and make sure they can work with parameters that should be shared with your end users.\n\n## Generate ComponentDefinition\nBy running `vela def init` command, we can generate a ComponentDefinition for a cloud resource based on Terraform resource or module either from a local file, or from a remote GitHub repository.\n\n```bash\n$ vela def init -h\n\n      --git string             Specify which git repository the configuration(HCL) is stored in. Valid when --provider/-p is set.\n      --local string           Specify the local path of the configuration(HCL) file. Valid when --provider/-p is set.\n```\n\nWe use `--local` to accept Terraform resource or module from a local file to generate a ComponentDefinition.\n\n```bash\n$ vela def init s3 --type component --provider aws --desc \"Terraform configuration for AWS S3\" --local aws_s3_bucket.tf\n\napiVersion: core.oam.dev/v1beta1\nkind: ComponentDefinition\nmetadata:\n  annotations:\n    definition.oam.dev/description: Terraform configuration for AWS S3\n  creationTimestamp: null\n  labels:\n    type: terraform\n  name: aws-s3\n  namespace: vela-system\nspec:\n  schematic:\n    terraform:\n      configuration: |\n        resource \"aws_s3_bucket\" \"bucket-acl\" {\n          bucket = var.bucket\n          acl = var.acl\n        }\n\n        output \"BUCKET_NAME\" {\n          value = aws_s3_bucket.bucket-acl.bucket_domain_name\n        }\n\n        variable \"bucket\" {\n          description = \"S3 bucket name\"\n          default = \"vela-website\"\n          type = string\n        }\n\n        variable \"acl\" {\n          description = \"S3 bucket ACL\"\n          default = \"private\"\n          type = string\n        }\n  workload:\n    definition:\n      apiVersion: terraform.core.oam.dev/v1beta1\n      kind: Configuration\nstatus: {}\n```\n\nWe use `--git` to accept Terraform module or resource from a remote GitHub repository to generate a ComponentDefinition.\n\n```bash\n$ vela def init eip --type component --provider alibaba --desc \"Terraform configuration for Alibaba Cloud Elastic IP\" --git https://github.com/oam-dev/terraform-alibaba-eip.git\n\napiVersion: core.oam.dev/v1beta1\nkind: ComponentDefinition\nmetadata:\n  annotations:\n    definition.oam.dev/description: Terraform configuration for Alibaba Cloud Elastic\n      IP\n  creationTimestamp: null\n  labels:\n    type: terraform\n  name: alibaba-eip\n  namespace: vela-system\nspec:\n  schematic:\n    terraform:\n      configuration: https://github.com/oam-dev/terraform-alibaba-eip.git\n      type: remote\n  workload:\n    definition:\n      apiVersion: terraform.core.oam.dev/v1beta1\n      kind: Configuration\nstatus: {}\n```\n\n## Apply ComponentDefinition\nWrite the generated ComponentDefinition into a file named `terraform-<ComponentDefinition_NAME>.yaml` and apply it to the running Kubernetes cluster.\n\n```bash\nkubectl apply -f <FILENAME>\n```\n\n## Verify\nYou can quickly verify the ComponentDefinition by command `vela show`. It may be a bit slow if you're loading terraform module from remote git server for the first time. After that, vela will cache the data in `$HOME/.vela/terraform` folder. You may need to clean up the cached data from this folder if you want to update the module.\n\n```bash\n$ vela show alibaba-eip\n# Properties\n+----------------------------+------------------------------------------------------------------------------------------+-----------------------------------------------------------+----------+---------+\n|            NAME            |                                       DESCRIPTION                                        |                           TYPE                            | REQUIRED | DEFAULT |\n+----------------------------+------------------------------------------------------------------------------------------+-----------------------------------------------------------+----------+---------+\n| name                       | Name to be used on all resources as prefix. Default to 'TF-Module-EIP'.                  | string                                                    | true     |         |\n| bandwidth                  | Maximum bandwidth to the elastic public network, measured in Mbps (Mega bit per second). | number                                                    | true     |         |\n| writeConnectionSecretToRef | The secret which the cloud resource connection will be written to                        | [writeConnectionSecretToRef](#writeConnectionSecretToRef) | false    |         |\n+----------------------------+------------------------------------------------------------------------------------------+-----------------------------------------------------------+----------+---------+\n\n## writeConnectionSecretToRef\n+-----------+-----------------------------------------------------------------------------+--------+----------+---------+\n|   NAME    |                                 DESCRIPTION                                 |  TYPE  | REQUIRED | DEFAULT |\n+-----------+-----------------------------------------------------------------------------+--------+----------+---------+\n| name      | The secret name which the cloud resource connection will be written to      | string | true     |         |\n| namespace | The secret namespace which the cloud resource connection will be written to | string | false    |         |\n+-----------+-----------------------------------------------------------------------------+--------+----------+---------+\n```\n\n## Create Application using the Component\nThe end user will be able to use the component in an application like below, he must follow the spec as `vela show`:\n\n```yaml\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: cloud-resource-example\nspec:\n  components:\n    - name: sample-eip\n      type: alibaba-eip\n      properties:\n        name: \"my-eip\"\n        bandwidth: 1\n        writeConnectionSecretToRef:\n          name: outputs-eip\n```\n\nGenerally, the values in the properties are aligned with the `variables` defined in the terraform module, the terraform controller will help run `terraform init`, `terraform plan` automatically and finally use the parameters defined in the properties of application component to run `terraform apply`.\n\nYou can refer to scenario docs such as [Provision cloud resources](https://kubevela.io/docs/tutorials/consume-cloud-services/#provision-cloud-resources) for more real use cases.\n\n## Generate documentation\nYou are encouraged to generate the documentation for your ComponentDefinition and submit it to [KubeVela official site](https://github.com/kubevela/kubevela.io).\n\nBy running `vela def doc-gen` command, we can generate related docs for the ComponentDefinition either from a local file, or from the running application on kubernetes cluster.\n\nIf you choose to generate docs from running cluster, you should provide the name of the ComponentDefinition and the namespace which it is running in.\n\n```bash\n$ vela def doc-gen alibaba-eip --path ./kubevela.io/docs/end-user/components/cloud-services/terraform/\nGenerated docs for alibaba-eip in ./kubevela.io/docs/end-user/components/cloud-services/terraform/alibaba-eip.md\n```\n\nIf you choose to generate docs from local ComponentDefinition file, you should provide the file path.\n\n```bash\n$ vela def doc-gen alibaba-eip.yaml\n```\n\nMove the file generated to [kubevela/kubevela.io](https://github.com/kubevela/kubevela.io) repo. Follow the [contribution guide](https://github.com/kubevela/kubevela.io#contributing-to-kubevela-en-docs) to submit the doc.\n", "metadata": {"source_url": "https://kubevela.io/docs/platform-engineers/components/component-terraform", "title": "Component Terraform", "description": "This page provides a guide for platform engineers to create Terraform typed ComponentDefinitions for cloud resources on providers like Alibaba Cloud, AWS, and Azure.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-02-28 16:48:57", "type": "overview", "page_metadata": {"language": "en", "ogDescription": "To enable end users to provision and consume cloud resources,", "docsearch:version": "v1.10", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogTitle": "Extend Cloud Resources | KubeVela", "docusaurus_version": "v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "docusaurus_tag": "docs-default-v1.10", "generator": "Docusaurus v2.4.3", "ogUrl": "https://kubevela.io/docs/platform-engineers/components/component-terraform/", "twitter:card": "summary_large_image", "docsearch:language": "en", "og:title": "Extend Cloud Resources | KubeVela", "docusaurus_locale": "en", "docsearch:docusaurus_tag": "docs-default-v1.10", "viewport": "width=device-width, initial-scale=1.0", "og:url": "https://kubevela.io/docs/platform-engineers/components/component-terraform/", "theme-color": "#ffffff", "description": "To enable end users to provision and consume cloud resources,", "og:description": "To enable end users to provision and consume cloud resources,", "title": "Extend Cloud Resources | KubeVela", "scrapeId": "2747f413-3f76-4b37-ac25-c138ca3b14c3", "sourceURL": "https://kubevela.io/docs/platform-engineers/components/component-terraform", "url": "https://kubevela.io/docs/platform-engineers/components/component-terraform/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"Component Terraform\"?\n\nAssistant: Here are some code examples:\n\n### Terraform resource for AWS S3 bucket\n```yaml\nresource \"aws_s3_bucket\" \"bucket-acl\" {\n  bucket = var.bucket\n  acl = var.acl\n}\n\noutput \"BUCKET_NAME\" {\n  value = aws_s3_bucket.bucket-acl.bucket_domain_name\n}\n\nvariable \"bucket\" {\n  description = \"S3 bucket name\"\n  default = \"vela-website\"\n  type = string\n}\n\nvariable \"acl\" {\n  description = \"S3 bucket ACL\"\n  default = \"private\"\n  type = string\n}\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/platform-engineers/components/component-terraform", "title": "Component Terraform", "description": "This page provides a guide for platform engineers to create Terraform typed ComponentDefinitions for cloud resources on providers like Alibaba Cloud, AWS, and Azure.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-02-28 16:48:57", "type": "code_examples", "page_metadata": {"language": "en", "ogDescription": "To enable end users to provision and consume cloud resources,", "docsearch:version": "v1.10", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogTitle": "Extend Cloud Resources | KubeVela", "docusaurus_version": "v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "docusaurus_tag": "docs-default-v1.10", "generator": "Docusaurus v2.4.3", "ogUrl": "https://kubevela.io/docs/platform-engineers/components/component-terraform/", "twitter:card": "summary_large_image", "docsearch:language": "en", "og:title": "Extend Cloud Resources | KubeVela", "docusaurus_locale": "en", "docsearch:docusaurus_tag": "docs-default-v1.10", "viewport": "width=device-width, initial-scale=1.0", "og:url": "https://kubevela.io/docs/platform-engineers/components/component-terraform/", "theme-color": "#ffffff", "description": "To enable end users to provision and consume cloud resources,", "og:description": "To enable end users to provision and consume cloud resources,", "title": "Extend Cloud Resources | KubeVela", "scrapeId": "2747f413-3f76-4b37-ac25-c138ca3b14c3", "sourceURL": "https://kubevela.io/docs/platform-engineers/components/component-terraform", "url": "https://kubevela.io/docs/platform-engineers/components/component-terraform/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"Component Terraform\"?\n\nAssistant: Here are the recommended best practices:\n\n• Make sure the Terraform module is fine and ready for use. Debug these modules first with terraform command line to ensure they work with parameters shared with end users.\n", "metadata": {"source_url": "https://kubevela.io/docs/platform-engineers/components/component-terraform", "title": "Component Terraform", "description": "This page provides a guide for platform engineers to create Terraform typed ComponentDefinitions for cloud resources on providers like Alibaba Cloud, AWS, and Azure.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-02-28 16:48:57", "type": "best_practices", "page_metadata": {"language": "en", "ogDescription": "To enable end users to provision and consume cloud resources,", "docsearch:version": "v1.10", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogTitle": "Extend Cloud Resources | KubeVela", "docusaurus_version": "v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "docusaurus_tag": "docs-default-v1.10", "generator": "Docusaurus v2.4.3", "ogUrl": "https://kubevela.io/docs/platform-engineers/components/component-terraform/", "twitter:card": "summary_large_image", "docsearch:language": "en", "og:title": "Extend Cloud Resources | KubeVela", "docusaurus_locale": "en", "docsearch:docusaurus_tag": "docs-default-v1.10", "viewport": "width=device-width, initial-scale=1.0", "og:url": "https://kubevela.io/docs/platform-engineers/components/component-terraform/", "theme-color": "#ffffff", "description": "To enable end users to provision and consume cloud resources,", "og:description": "To enable end users to provision and consume cloud resources,", "title": "Extend Cloud Resources | KubeVela", "scrapeId": "2747f413-3f76-4b37-ac25-c138ca3b14c3", "sourceURL": "https://kubevela.io/docs/platform-engineers/components/component-terraform", "url": "https://kubevela.io/docs/platform-engineers/components/component-terraform/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela Workflow Working Mechanism\"?\n\nAssistant: This document will give a brief introduction to the core mechanisms of KubeVela Workflow.\n\nHere's a detailed explanation:\n\n\n## Running Mode\nThe execution of workflow has two different running modes: **DAG** mode and **StepByStep** mode. In DAG mode, all steps in the workflow will execute concurrently. They will form a dependency graph for running according to the Input/Output in the step configuration automatically. If one workflow step has not met all its dependencies, it will wait for the conditions. In StepByStep mode, all steps will be executed in order. In KubeVela v1.2+, the defaut running mode is StepByStep. Using DAG mode is not supported in version before KubeVela v1.5.\n\n## Suspend and Retry\nWorkflow will retry steps and suspend for different reasons.\n\n1. If step fails or waits for conditions, the workflow will retry after a backoff time. The backoff time will increase by the retry times.\n2. If step fails too many times, the workflow will enter suspending state and stop retry.\n3. If step is waiting for manual approval, the workflow will enter suspending state immediately.\n\n## Backoff Time\nThe backoff time for workflow to retry can be calculated by `int(0.05 * 2^(n-1))` where `n` is the number of retries. The minimal backoff time is 1 second，the first ten backoff time will be like:\n\n| Times | 2^(n-1) | 0.05\\*2^(n-1) | Requeue After(s) |\n| --- | --- | --- | --- |\n| 1 | 1 | 0.05 | 1 |\n| 2 | 2 | 0.1 | 1 |\n| 3 | 4 | 0.2 | 1 |\n| 4 | 8 | 0.4 | 1 |\n| 5 | 16 | 0.8 | 1 |\n| 6 | 32 | 1.6 | 1 |\n| 7 | 64 | 3.2 | 3 |\n| 8 | 128 | 6.4 | 6 |\n| 9 | 256 | 12.8 | 12 |\n| 10 | 512 | 25.6 | 25 |\n| ... | ... | ... | ... |\n\nIf the workflow step is waiting, the max backoff time is 60s, you can change it by setting `--max-workflow-wait-backoff-time` in the [bootstrap parameter](https://kubevela.io/docs/platform-engineers/system-operation/bootstrap-parameters/) of KubeVela controller.\n\nIf the workflow step is failed, the max backoff time is 300s, you can change it by setting `--max-workflow-failed-backoff-time` in the [bootstrap parameter](https://kubevela.io/docs/platform-engineers/system-operation/bootstrap-parameters/) of KubeVela controller.\n\n## Maximum Retry Times\nFor failure case, the workflow will retry at most 10 times by default and enter suspending state after that. You can change the retry times by setting `--max-workflow-step-error-retry-times` in the [bootstrap parameter](https://kubevela.io/docs/platform-engineers/system-operation/bootstrap-parameters/) of KubeVela controller.\n\n> Note that if the workflow step is unhealthy, the workflow step will be marked as wait but not failed and it will wait for healthy.\n\n## Avoid Configuration Drift\nWhen workflow enters running state or suspends due to condition wait, KubeVela application will re-apply applied resources to prevent configuration drift routinely. This process is called **State Keep** in KubeVela. By default, the interval of State Keep is 5 minutes, which can be configured in the [bootstrap parameter](https://kubevela.io/docs/platform-engineers/system-operation/bootstrap-parameters/) of KubeVela controller by setting `--application-re-sync-period`. If you want to disable the state keep capability, you can also use the [apply-once](https://github.com/kubevela/kubevela/blob/master/docs/examples/app-with-policy/apply-once-policy/apply-once.md) policy in the application.\n", "metadata": {"source_url": "https://kubevela.io/docs/platform-engineers/workflow/working-mechanism", "title": "KubeVela Workflow Working Mechanism", "description": "This document will give a brief introduction to the core mechanisms of KubeVela Workflow.", "has_code_examples": false, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 16:49:11", "type": "overview", "page_metadata": {"twitter:card": "summary_large_image", "docsearch:docusaurus_tag": "docs-default-v1.10", "docsearch:language": "en", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "generator": "Docusaurus v2.4.3", "ogTitle": "Workflow Working Mechanism | KubeVela", "docusaurus_version": "v1.10", "docsearch:version": "v1.10", "theme-color": "#ffffff", "og:url": "https://kubevela.io/docs/platform-engineers/workflow/working-mechanism/", "language": "en", "msapplication-config": "/img/favicons/browserconfig.xml", "viewport": "width=device-width, initial-scale=1.0", "description": "This document will give a brief introduction to the core mechanisms of KubeVela Workflow.", "og:description": "This document will give a brief introduction to the core mechanisms of KubeVela Workflow.", "docusaurus_locale": "en", "ogDescription": "This document will give a brief introduction to the core mechanisms of KubeVela Workflow.", "ogUrl": "https://kubevela.io/docs/platform-engineers/workflow/working-mechanism/", "docusaurus_tag": "docs-default-v1.10", "title": "Workflow Working Mechanism | KubeVela", "og:title": "Workflow Working Mechanism | KubeVela", "scrapeId": "bf36ce9b-7062-40e1-96f7-5ea44d9b0b9a", "sourceURL": "https://kubevela.io/docs/platform-engineers/workflow/working-mechanism", "url": "https://kubevela.io/docs/platform-engineers/workflow/working-mechanism/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela Workflow Working Mechanism\"?\n\nAssistant: Here are the recommended best practices:\n\n• The default running mode is StepByStep in KubeVela v1.2+ and using DAG mode is not supported in version before KubeVela v1.5.\n• The minimal backoff time is 1 second, and the max backoff time for waiting steps is 60 seconds and for failed steps is 300 seconds.\n• The workflow will retry at most 10 times by default before entering a suspending state.\n", "metadata": {"source_url": "https://kubevela.io/docs/platform-engineers/workflow/working-mechanism", "title": "KubeVela Workflow Working Mechanism", "description": "This document will give a brief introduction to the core mechanisms of KubeVela Workflow.", "has_code_examples": false, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 16:49:11", "type": "best_practices", "page_metadata": {"twitter:card": "summary_large_image", "docsearch:docusaurus_tag": "docs-default-v1.10", "docsearch:language": "en", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "generator": "Docusaurus v2.4.3", "ogTitle": "Workflow Working Mechanism | KubeVela", "docusaurus_version": "v1.10", "docsearch:version": "v1.10", "theme-color": "#ffffff", "og:url": "https://kubevela.io/docs/platform-engineers/workflow/working-mechanism/", "language": "en", "msapplication-config": "/img/favicons/browserconfig.xml", "viewport": "width=device-width, initial-scale=1.0", "description": "This document will give a brief introduction to the core mechanisms of KubeVela Workflow.", "og:description": "This document will give a brief introduction to the core mechanisms of KubeVela Workflow.", "docusaurus_locale": "en", "ogDescription": "This document will give a brief introduction to the core mechanisms of KubeVela Workflow.", "ogUrl": "https://kubevela.io/docs/platform-engineers/workflow/working-mechanism/", "docusaurus_tag": "docs-default-v1.10", "title": "Workflow Working Mechanism | KubeVela", "og:title": "Workflow Working Mechanism | KubeVela", "scrapeId": "bf36ce9b-7062-40e1-96f7-5ea44d9b0b9a", "sourceURL": "https://kubevela.io/docs/platform-engineers/workflow/working-mechanism", "url": "https://kubevela.io/docs/platform-engineers/workflow/working-mechanism/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"VelaUX Addon Documentation\"?\n\nAssistant: This documentation provides information on how to install and configure the VelaUX addon for KubeVela, including service types, ingress setup, and database configuration.\n\nHere's a detailed explanation:\n\n\n## Install\nTo enable the VelaUX addon, use the following command:\n\n```codeBlockLines_e6Vv\nvela addon enable velaux\n```\n\nExpected output:\n```codeBlockLines_e6Vv\nAddon: velaux enabled Successfully.\n```\n\n## Visit VelaUX by port-forward\nTo visit the VelaUX dashboard, you can use port forwarding:\n\n```codeBlockLines_e6Vv\nvela port-forward addon-velaux -n vela-system\n```\n\nChoose `> local | velaux | velaux` for visit.\n\n## Setup with Specified Service Type\nYou can specify the service type for VelaUX addon. The available types are `ClusterIP`, `NodePort`, and `LoadBalancer`. By default, the service type is `ClusterIP` for security.\n\nTo enable VelaUX with a specific service type, use:\n\n- For LoadBalancer:\n```codeBlockLines_e6Vv\nvela addon enable velaux serviceType=LoadBalancer\n```\n\n- For NodePort:\n```codeBlockLines_e6Vv\nvela addon enable velaux serviceType=NodePort\n```\n\nAfter specifying the service type, obtain the access address using:\n```codeBlockLines_e6Vv\nvela status addon-velaux -n vela-system --endpoint\n```\n\nExpected output:\n```codeBlockLines_e6Vv\n+----------------------------+----------------------+  \n|  REF(KIND/NAMESPACE/NAME)  |       ENDPOINT       |  \n+----------------------------+----------------------+  \n| Service/vela-system/velaux | http://<IP address> |  \n+----------------------------+----------------------+  \n```\n\n## Setup with Ingress domain\nIf you have ingress and domain available, you can deploy VelaUX by specifying a domain:\n\n```codeBlockLines_e6Vv\nvela addon enable velaux domain=example.domain.com\n```\n\nExpected output:\n```codeBlockLines_e6Vv\nI0112 15:23:40.428364   34884 apply.go:106] \"patching object\" name=\"addon-velaux\" resource=\"core.oam.dev/v1beta1, Kind=Application\"\nI0112 15:23:40.676894   34884 apply.go:106] \"patching object\" name=\"addon-secret-velaux\" resource=\"/v1, Kind=Secret\"\nAddon: velaux enabled Successfully.\nPlease access the velaux from the following endpoints:\n+----------------------------+---------------------------+\n|  REF(KIND/NAMESPACE/NAME)  |         ENDPOINT          |\n+----------------------------+---------------------------+\n| Ingress/vela-system/velaux | http://example.domain.com |\n+----------------------------+---------------------------+\n```\n\n## Setup with MongoDB database\nVelaUX supports Kubernetes and MongoDB as the database. The default is Kubernetes. It is recommended to use MongoDB for production environments.\n\nTo enable VelaUX with MongoDB:\n```codeBlockLines_e6Vv\nvela addon enable velaux dbType=mongodb dbURL=mongodb://<MONGODB_USER>:<MONGODB_PASSWORD>@<MONGODB_URL>\n```\n\nYou can also deploy MongoDB with the following application configuration:\n```codeBlockLines_e6Vv\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: velaux-db\n  namespace: vela-system\nspec:\n  components:\n    - name: velaux-db\n      properties:\n        chart: mongodb\n        repoType: helm\n        url: https://charts.bitnami.com/bitnami\n        values:\n          persistence:\n            size: 20Gi\n        version: 12.1.12\n      type: helm\n  policies:\n    - name: vela-system\n      properties:\n        clusters:\n          - local\n        namespace: vela-system\n      type: topology\n  workflow:\n    steps:\n      - name: vela-system\n        properties:\n          policies:\n            - vela-system\n        type: deploy\n```\n\nAfter deployment, retrieve the root password from the secret `vela-system/velaux-db-mongodb`.\n\n## Specify the addon image\nBy default, the image repository is Docker Hub. You can specify a different image repository using the `repo` parameter:\n```codeBlockLines_e6Vv\nvela addon enable velaux repo=acr.kubevela.net\n```\n\nThis allows you to use a private image registry.\n\n## Concept of VelaUX\nVelaUX is an addon on top of KubeVela, serving as a UI console and an out-of-box platform for end-users. It includes several concepts for enterprise integration.\n\n## Project\nProjects manage all applications and facilitate collaboration among team members. Each project is a standalone scope.\n\n## Environment\nEnvironments refer to development, testing, and production settings, allowing applications to share resources.\n\n## Delivery Target\nDelivery Targets describe where application resources are delivered, including Kubernetes clusters and cloud resources.\n\n## Application\nApplications in VelaUX have a lifecycle that includes creating metadata records, deploying to environments, recycling resources, and deleting metadata.\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.8/reference/addons/velaux", "title": "VelaUX Addon Documentation", "description": "This documentation provides information on how to install and configure the VelaUX addon for KubeVela, including service types, ingress setup, and database configuration.", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-02-28 16:49:36", "type": "overview", "page_metadata": {"docsearch:language": "en", "ogUrl": "https://kubevela.io/docs/v1.8/reference/addons/velaux/", "twitter:card": "summary_large_image", "viewport": "width=device-width, initial-scale=1.0", "theme-color": "#ffffff", "docsearch:version": "v1.8", "description": "VelaUX provides the UI console of KubeVela.", "og:description": "VelaUX provides the UI console of KubeVela.", "ogTitle": "VelaUX | KubeVela", "generator": "Docusaurus v2.4.3", "docusaurus_tag": "docs-default-v1.8", "msapplication-config": "/img/favicons/browserconfig.xml", "language": "en", "ogDescription": "VelaUX provides the UI console of KubeVela.", "og:url": "https://kubevela.io/docs/v1.8/reference/addons/velaux/", "docusaurus_locale": "en", "og:title": "VelaUX | KubeVela", "docusaurus_version": "v1.8", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "title": "VelaUX | KubeVela", "docsearch:docusaurus_tag": "docs-default-v1.8", "scrapeId": "a0aa76ee-8be2-48ab-8fb2-b936992823c8", "sourceURL": "https://kubevela.io/docs/v1.8/reference/addons/velaux", "url": "https://kubevela.io/docs/v1.8/reference/addons/velaux/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"VelaUX Addon Documentation\"?\n\nAssistant: Here are some code examples:\n\n### Install VelaUX\n```yaml\nvela addon enable velaux\n```\n\n### Visit VelaUX by port-forward\n```yaml\nvela port-forward addon-velaux -n vela-system\n```\n\n### Setup with LoadBalancer\n```yaml\nvela addon enable velaux serviceType=LoadBalancer\n```\n\n### Setup with NodePort\n```yaml\nvela addon enable velaux serviceType=NodePort\n```\n\n### Get Access Address\n```yaml\nvela status addon-velaux -n vela-system --endpoint\n```\n\n### Setup with Ingress domain\n```yaml\nvela addon enable velaux domain=example.domain.com\n```\n\n### Enable VelaUX with MongoDB\n```yaml\nvela addon enable velaux dbType=mongodb dbURL=mongodb://<MONGODB_USER>:<MONGODB_PASSWORD>@<MONGODB_URL>\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.8/reference/addons/velaux", "title": "VelaUX Addon Documentation", "description": "This documentation provides information on how to install and configure the VelaUX addon for KubeVela, including service types, ingress setup, and database configuration.", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-02-28 16:49:36", "type": "code_examples", "page_metadata": {"docsearch:language": "en", "ogUrl": "https://kubevela.io/docs/v1.8/reference/addons/velaux/", "twitter:card": "summary_large_image", "viewport": "width=device-width, initial-scale=1.0", "theme-color": "#ffffff", "docsearch:version": "v1.8", "description": "VelaUX provides the UI console of KubeVela.", "og:description": "VelaUX provides the UI console of KubeVela.", "ogTitle": "VelaUX | KubeVela", "generator": "Docusaurus v2.4.3", "docusaurus_tag": "docs-default-v1.8", "msapplication-config": "/img/favicons/browserconfig.xml", "language": "en", "ogDescription": "VelaUX provides the UI console of KubeVela.", "og:url": "https://kubevela.io/docs/v1.8/reference/addons/velaux/", "docusaurus_locale": "en", "og:title": "VelaUX | KubeVela", "docusaurus_version": "v1.8", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "title": "VelaUX | KubeVela", "docsearch:docusaurus_tag": "docs-default-v1.8", "scrapeId": "a0aa76ee-8be2-48ab-8fb2-b936992823c8", "sourceURL": "https://kubevela.io/docs/v1.8/reference/addons/velaux", "url": "https://kubevela.io/docs/v1.8/reference/addons/velaux/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"VelaUX Addon Documentation\"?\n\nAssistant: Here are the recommended best practices:\n\n• Remember to set and remember the new password after the first login to VelaUX.\n• Use MongoDB for production environments for better performance and reliability.\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.8/reference/addons/velaux", "title": "VelaUX Addon Documentation", "description": "This documentation provides information on how to install and configure the VelaUX addon for KubeVela, including service types, ingress setup, and database configuration.", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-02-28 16:49:36", "type": "best_practices", "page_metadata": {"docsearch:language": "en", "ogUrl": "https://kubevela.io/docs/v1.8/reference/addons/velaux/", "twitter:card": "summary_large_image", "viewport": "width=device-width, initial-scale=1.0", "theme-color": "#ffffff", "docsearch:version": "v1.8", "description": "VelaUX provides the UI console of KubeVela.", "og:description": "VelaUX provides the UI console of KubeVela.", "ogTitle": "VelaUX | KubeVela", "generator": "Docusaurus v2.4.3", "docusaurus_tag": "docs-default-v1.8", "msapplication-config": "/img/favicons/browserconfig.xml", "language": "en", "ogDescription": "VelaUX provides the UI console of KubeVela.", "og:url": "https://kubevela.io/docs/v1.8/reference/addons/velaux/", "docusaurus_locale": "en", "og:title": "VelaUX | KubeVela", "docusaurus_version": "v1.8", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "title": "VelaUX | KubeVela", "docsearch:docusaurus_tag": "docs-default-v1.8", "scrapeId": "a0aa76ee-8be2-48ab-8fb2-b936992823c8", "sourceURL": "https://kubevela.io/docs/v1.8/reference/addons/velaux", "url": "https://kubevela.io/docs/v1.8/reference/addons/velaux/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela Definition Edit\"?\n\nAssistant: This page provides guidance on how to use the KubeVela CLI for editing definitions using CUE files.\n\nHere's a detailed explanation:\n\n\n## Introduction\nIn KubeVela CLI, `vela def` command group provides a series of convenient definition writing tools. With these commands, users only need to write CUE files to generate and edit definitions, instead of composing Kubernetes YAML object with mixed CUE string.\n\n## init\n`vela def init` is a command that helps users bootstrap new definitions. To create an empty trait definition, run:\n\n```bash\nvela def init my-trait -t trait --desc \"My trait description.\"\n```\n\nIt will generate the following scaffold:\n\n```json\n\"my-trait\": {\n        annotations: {}\n        attributes: {\n                appliesToWorkloads: []\n                conflictsWith: []\n                definitionRef:   \"\"\n                podDisruptive:   false\n                workloadRefPath: \"\"\n        }\n        description: \"My trait description.\"\n        labels: {}\n        type: \"trait\"\n}\ntemplate: patch: {}\n```\n\nYou can also initiate definitions interactively like below:\n\n```bash\nvela def init my-comp --interactive\n```\n\nexpected output\n\n```bash\nPlease choose one definition type from the following values: component, trait, policy, workload, scope, workflow-step\n> Definition type: component\n> Definition description: My component definition.\nPlease enter the location the template YAML file to build definition. Leave it empty to generate default template.\n> Definition template filename:\nPlease enter the output location of the generated definition. Leave it empty to print definition to stdout.\n> Definition output filename: my-component.cue\nDefinition written to my-component.cue\n```\n\nIn addition, users can create definitions from existing YAML files. For example, if a user want to create a ComponentDefinition which is designed to generate a deployment, and this deployment has already been created elsewhere, he/she can use the `--template-yaml` flag to complete the transformation. The YAML file is as below\n\n```yaml\n# my-deployment.yaml\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: hello-world\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app.kubernetes.io/name: hello-world\n  template:\n    metadata:\n      labels:\n        app.kubernetes.io/name: hello-world\n    spec:\n      containers:\n      - name: hello-world\n        image: somefive/hello-world\n        ports:\n        - name: http\n          containerPort: 80\n          protocol: TCP\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: hello-world-service\nspec:\n  selector:\n    app: hello-world\n  ports:\n  - name: http\n    protocol: TCP\n    port: 80\n    targetPort: 8080\n  type: LoadBalancer\n```\n\nRunning the following command to get the CUE-format ComponentDefinition:\n\n```bash\nvela def init my-comp -t component --desc \"My component.\" --template-yaml ./my-deployment.yaml\n```\n\nThe expect output will be:\n\n```json\n\"my-comp\": {\n        annotations: {}\n        attributes: workload: definition: {\n                apiVersion: \"<change me> apps/v1\"\n                kind:       \"<change me> Deployment\"\n        }\n        description: \"My component.\"\n        labels: {}\n        type: \"component\"\n}\ntemplate: {\n        output: {\n                metadata: name: \"hello-world\"\n                spec: {\n                        replicas: 1\n                        selector: matchLabels: \"app.kubernetes.io/name\": \"hello-world\"\n                        template: {\n                                metadata: labels: \"app.kubernetes.io/name\": \"hello-world\"\n                                spec: containers: [{\\\n                                        name:  \"hello-world\"\\\n                                        image: \"somefive/hello-world\"\\\n                                        ports: [{\\\n                                                name:          \"http\"\\\n                                                containerPort: 80\\\n                                                protocol:      \"TCP\"\\\n                                        }]\\\n                                }]\n                        }\n                }\n                apiVersion: \"apps/v1\"\n                kind:       \"Deployment\"\n        }\n        outputs: \"hello-world-service\": {\n                metadata: name: \"hello-world-service\"\n                spec: {\n                        ports: [{\\\n                                name:       \"http\"\\\n                                protocol:   \"TCP\"\\\n                                port:       80\\\n                                targetPort: 8080\\\n                        }]\n                        selector: app: \"hello-world\"\n                        type: \"LoadBalancer\"\n                }\n                apiVersion: \"v1\"\n                kind:       \"Service\"\n        }\n        parameter: {}\n}\n```\n\nThen the user can make further modifications based on the definition file above, like removing `<change me>` in **workload.definition**.\n\n## vet\nAfter initializing definition files, run `vela def vet <my-def.cue>` to validate if there are any syntax error in the definition file.\n\n```bash\nvela def vet my-comp.cue\n```\n\nIt can be used to detect some simple errors such as missing brackets.\n\n## apply\nAfter confirming the definition file has correct syntax, users can apply this definition into control plane by:\n\n```bash\nvela def apply my-comp.cue --namespace my-namespace\n```\n\nThe definition will be applied to the namespace named `my-namespace`, by default the namespace is `vela-system`.\n\nWhen definition applied to `vela-system`, the definition can be used for all applications in this cluster. If definitions are applied in some other namespaces, only the application in the same namespace can use that. It's useful when in multi-tenant cases.\n\n## dry-run\nIf you want to check the transformed Kubernetes API format, you can use `--dry-run` can achieve that.\n\n```bash\nvela def apply my-comp.cue --dry-run\n```\n\nexpected output\n\n```yaml\napiVersion: core.oam.dev/v1beta1\nkind: ComponentDefinition\nmetadata:\n  annotations:\n    definition.oam.dev/description: My component.\n  labels: {}\n  name: my-comp\n  namespace: vela-system\nspec:\n  schematic:\n    cue:\n      template: |\n        output: {\n                metadata: name: \"hello-world\"\n                spec: {\n                        replicas: 1\n                        selector: matchLabels: \"app.kubernetes.io/name\": \"hello-world\"\n                        template: {\n                                metadata: labels: \"app.kubernetes.io/name\": \"hello-world\"\n                                spec: containers: [{\\\n                                        name:  \"hello-world\"\\\n                                        image: \"somefive/hello-world\"\\\n                                        ports: [{\\\n                                                name:          \"http\"\\\n                                                containerPort: 80\\\n                                                protocol:      \"TCP\"\\\n                                        }]\\\n                                }]\n                        }\n                }\n                apiVersion: \"apps/v1\"\n                kind:       \"Deployment\"\n        }\n        outputs: \"hello-world-service\": {\n                metadata: name: \"hello-world-service\"\n                spec: {\n                        ports: [{\\\n                                name:       \"http\"\\\n                                protocol:   \"TCP\"\\\n                                port:       80\\\n                                targetPort: 8080\\\n                        }]\n                        selector: app: \"hello-world\"\n                        type: \"LoadBalancer\"\n                }\n                apiVersion: \"v1\"\n                kind:       \"Service\"\n        }\n        parameter: {}\n  workload:\n    definition:\n      apiVersion: apps/v1\n      kind: Deployment\n```\n\n\n## get\nWhile you can use native kubectl tools to confirm the results of the apply command, as mentioned above, the YAML object mixed with raw CUE template string is complex. Using `vela def get` will automatically convert the YAML object into the CUE-format definition.\n\n```bash\nvela def get my-comp\n```\n\n## list\nYou can list all definitions installed through:\n\n```bash\nvela def list\n```\n\nYou can filter type by:\n\n- List component only:\n\n```bash\nvela def list -t component\n```\n- List trait only:\n\n```bash\nvela def list -t trait\n```\n- List workflow step only:\n\n```bash\nvela def list -t workflow-step\n```\n- List policy only:\n\n```bash\nvela def list -t policy\n```\n\n## edit\nUsing `vela def edit` to edit definitions in pure CUE-format. The transformation between CUE-format definition and YAML object is done by the command. Besides, you can specify the `EDITOR` environment variable to use your favorite editor.\n\n```bash\nEDITOR=vim vela def edit my-comp\n```\n\n## delete\n`vela def del` can be utilized to delete existing definitions.\n\n```bash\n$ vela def del my-comp -n my-namespace\nAre you sure to delete the following definition in namespace my-namespace?\nComponentDefinition my-comp: My component.\n[yes|no] > yes\nComponentDefinition my-comp in namespace my-namespace deleted.\n```\n\n## debug with applications\nWhen we want to debug definition with application, we can use `vela dry-run --definitions` or `-d` for short, to specify local definitions.\n\nDry run will help you to understand what are the real resources which will to be expanded and deployed to the Kubernetes cluster. In other words, it will mock to run the same logic as KubeVela's controller and output the results locally.\n\nFor example, let's dry-run the following application:\n\n```yaml\n# app.yaml\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: vela-app\nspec:\n  components:\n    - name: express-server\n      type: my-comp\n```\n\nUse dry run for test:\n\n```bash\nvela dry-run -f app.yaml -d my-comp.cue\n```\n\nBefore KubeVela CLI 1.6.2, you can only use definition in Kubernetes API format.\n\n```bash\nvela dry-run -f app.yaml -d my-comp.yaml\n```\n\nexpected output\n\n```yaml\n---\n# Application(vela-app) -- Component(express-server)\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations: {}\n  labels:\n    app.oam.dev/appRevision: \"\"\n    app.oam.dev/component: express-server\n    app.oam.dev/name: vela-app\n    app.oam.dev/namespace: default\n    app.oam.dev/resourceType: WORKLOAD\n    workload.oam.dev/type: my-comp\n  name: hello-world\n  namespace: default\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app.kubernetes.io/name: hello-world\n  template:\n    metadata:\n      labels:\n        app.kubernetes.io/name: hello-world\n    spec:\n      containers:\n      - image: somefive/hello-world\n        name: hello-world\n        ports:\n        - containerPort: 80\n          name: http\n          protocol: TCP\n---\n## From the auxiliary workload\napiVersion: v1\nkind: Service\nmetadata:\n  annotations: {}\n  labels:\n    app.oam.dev/appRevision: \"\"\n    app.oam.dev/component: express-server\n    app.oam.dev/name: vela-app\n    app.oam.dev/namespace: default\n    app.oam.dev/resourceType: TRAIT\n    trait.oam.dev/resource: hello-world-service\n    trait.oam.dev/type: AuxiliaryWorkload\n  name: hello-world-service\n  namespace: default\nspec:\n  ports:\n  - name: http\n    port: 80\n    protocol: TCP\n    targetPort: 8080\n  selector:\n    app: hello-world\n  type: LoadBalancer\n---\n```\n\n## Next Step\n- Learn more about [defining customized component](https://kubevela.io/docs/platform-engineers/components/custom-component/).\n- Learn more about [defining customized trait](https://kubevela.io/docs/platform-engineers/traits/customize-trait/).\n- [init](https://kubevela.io/docs/platform-engineers/cue/definition-edit/#init)\n- [vet](https://kubevela.io/docs/platform-engineers/cue/definition-edit/#vet)\n- [apply](https://kubevela.io/docs/platform-engineers/cue/definition-edit/#apply)\n- [dry-run](https://kubevela.io/docs/platform-engineers/cue/definition-edit/#dry-run)\n- [get](https://kubevela.io/docs/platform-engineers/cue/definition-edit/#get)\n- [list](https://kubevela.io/docs/platform-engineers/cue/definition-edit/#list)\n- [edit](https://kubevela.io/docs/platform-engineers/cue/definition-edit/#edit)\n- [delete](https://kubevela.io/docs/platform-engineers/cue/definition-edit/#delete)\n- [debug with applications](https://kubevela.io/docs/platform-engineers/cue/definition-edit/#debug-with-applications)\n", "metadata": {"source_url": "https://kubevela.io/docs/platform-engineers/cue/definition-edit", "title": "KubeVela Definition Edit", "description": "This page provides guidance on how to use the KubeVela CLI for editing definitions using CUE files.", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-02-28 16:51:25", "type": "overview", "page_metadata": {"language": "en", "docsearch:docusaurus_tag": "docs-default-v1.10", "docusaurus_version": "v1.10", "og:title": "Manage Definition | KubeVela", "theme-color": "#ffffff", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "og:description": "Before reading this part, please make sure you've learned the Definition Concept of KubeVela.", "og:url": "https://kubevela.io/docs/platform-engineers/cue/definition-edit/", "docusaurus_locale": "en", "docusaurus_tag": "docs-default-v1.10", "generator": "Docusaurus v2.4.3", "description": "Before reading this part, please make sure you've learned the Definition Concept of KubeVela.", "title": "Manage Definition | KubeVela", "docsearch:version": "v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "ogTitle": "Manage Definition | KubeVela", "ogUrl": "https://kubevela.io/docs/platform-engineers/cue/definition-edit/", "viewport": "width=device-width, initial-scale=1.0", "docsearch:language": "en", "twitter:card": "summary_large_image", "ogDescription": "Before reading this part, please make sure you've learned the Definition Concept of KubeVela.", "scrapeId": "7d9735b1-33dd-40b8-9b55-ea99e5133d25", "sourceURL": "https://kubevela.io/docs/platform-engineers/cue/definition-edit", "url": "https://kubevela.io/docs/platform-engineers/cue/definition-edit/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"KubeVela Definition Edit\"?\n\nAssistant: Here are some code examples:\n\n### Initialize a Trait Definition\n```yaml\nvela def init my-trait -t trait --desc \"My trait description.\"\n```\n\n### Generate Scaffold for Trait Definition\n```yaml\n\"my-trait\": {\n        annotations: {}\n        attributes: {\n                appliesToWorkloads: []\n                conflictsWith: []\n                definitionRef:   \"\"\n                podDisruptive:   false\n                workloadRefPath: \"\"\n        }\n        description: \"My trait description.\"\n        labels: {}\n        type: \"trait\"\n}\ntemplate: patch: {}\n```\n\n### Interactive Initialization of Definition\n```yaml\nvela def init my-comp --interactive\n```\n\n### Create ComponentDefinition from YAML\n```yaml\nvela def init my-comp -t component --desc \"My component.\" --template-yaml ./my-deployment.yaml\n```\n\n### Validate Definition File\n```yaml\nvela def vet my-comp.cue\n```\n\n### Apply Definition to Control Plane\n```yaml\nvela def apply my-comp.cue --namespace my-namespace\n```\n\n### Dry Run to Check Transformed Format\n```yaml\nvela def apply my-comp.cue --dry-run\n```\n\n### Get CUE-format Definition\n```yaml\nvela def get my-comp\n```\n\n### List All Definitions\n```yaml\nvela def list\n```\n\n### Edit Definition in CUE-format\n```yaml\nEDITOR=vim vela def edit my-comp\n```\n\n### Delete Existing Definition\n```yaml\nvela def del my-comp -n my-namespace\n```\n\n### Debug with Applications\n```yaml\nvela dry-run -f app.yaml -d my-comp.cue\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/platform-engineers/cue/definition-edit", "title": "KubeVela Definition Edit", "description": "This page provides guidance on how to use the KubeVela CLI for editing definitions using CUE files.", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-02-28 16:51:25", "type": "code_examples", "page_metadata": {"language": "en", "docsearch:docusaurus_tag": "docs-default-v1.10", "docusaurus_version": "v1.10", "og:title": "Manage Definition | KubeVela", "theme-color": "#ffffff", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "og:description": "Before reading this part, please make sure you've learned the Definition Concept of KubeVela.", "og:url": "https://kubevela.io/docs/platform-engineers/cue/definition-edit/", "docusaurus_locale": "en", "docusaurus_tag": "docs-default-v1.10", "generator": "Docusaurus v2.4.3", "description": "Before reading this part, please make sure you've learned the Definition Concept of KubeVela.", "title": "Manage Definition | KubeVela", "docsearch:version": "v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "ogTitle": "Manage Definition | KubeVela", "ogUrl": "https://kubevela.io/docs/platform-engineers/cue/definition-edit/", "viewport": "width=device-width, initial-scale=1.0", "docsearch:language": "en", "twitter:card": "summary_large_image", "ogDescription": "Before reading this part, please make sure you've learned the Definition Concept of KubeVela.", "scrapeId": "7d9735b1-33dd-40b8-9b55-ea99e5133d25", "sourceURL": "https://kubevela.io/docs/platform-engineers/cue/definition-edit", "url": "https://kubevela.io/docs/platform-engineers/cue/definition-edit/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela Definition Edit\"?\n\nAssistant: Here are the recommended best practices:\n\n• Before reading this part, please make sure you've learned the Definition Concept of KubeVela.\n• When definition applied to `vela-system`, the definition can be used for all applications in this cluster. If definitions are applied in some other namespaces, only the application in the same namespace can use that. It's useful when in multi-tenant cases.\n", "metadata": {"source_url": "https://kubevela.io/docs/platform-engineers/cue/definition-edit", "title": "KubeVela Definition Edit", "description": "This page provides guidance on how to use the KubeVela CLI for editing definitions using CUE files.", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-02-28 16:51:25", "type": "best_practices", "page_metadata": {"language": "en", "docsearch:docusaurus_tag": "docs-default-v1.10", "docusaurus_version": "v1.10", "og:title": "Manage Definition | KubeVela", "theme-color": "#ffffff", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "og:description": "Before reading this part, please make sure you've learned the Definition Concept of KubeVela.", "og:url": "https://kubevela.io/docs/platform-engineers/cue/definition-edit/", "docusaurus_locale": "en", "docusaurus_tag": "docs-default-v1.10", "generator": "Docusaurus v2.4.3", "description": "Before reading this part, please make sure you've learned the Definition Concept of KubeVela.", "title": "Manage Definition | KubeVela", "docsearch:version": "v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "ogTitle": "Manage Definition | KubeVela", "ogUrl": "https://kubevela.io/docs/platform-engineers/cue/definition-edit/", "viewport": "width=device-width, initial-scale=1.0", "docsearch:language": "en", "twitter:card": "summary_large_image", "ogDescription": "Before reading this part, please make sure you've learned the Definition Concept of KubeVela.", "scrapeId": "7d9735b1-33dd-40b8-9b55-ea99e5133d25", "sourceURL": "https://kubevela.io/docs/platform-engineers/cue/definition-edit", "url": "https://kubevela.io/docs/platform-engineers/cue/definition-edit/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"Debugging Applications with KubeVela\"?\n\nAssistant: This documentation provides guidance on using KubeVela CLI commands for debugging applications across multi-clusters.\n\nHere's a detailed explanation:\n\n\n## List Apps\nList all your applications.\n\n```codeBlockLines_e6Vv\nvela ls\n```\n\nexpected output\n\n```\nAPP COMPONENT TYPE TRAITS PHASE HEALTHY STATUS CREATED-TIME\nwar war java-war running healthy Ready:1/1 2022-09-30 17:32:29 +0800 CST\nck-instance ck-instance clickhouse running healthy 2022-09-30 17:38:13 +0800 CST\nkubecon-demo hello-world java-war gateway running healthy Ready:1/1 2022-10-08 11:32:47 +0800 CST\nck-app my-ck clickhouse gateway running healthy Host not specified, visit the cluster or load balancer in 2022-10-08 17:55:20 +0800 CST front of the cluster with IP: 47.251.8.82\ndemo2 catalog java-war workflowSuspending healthy Ready:1/1 2022-10-08 16:22:11 +0800 CST\n├─ customer java-war workflowSuspending healthy Ready:1/1 2022-10-08 16:22:11 +0800 CST\n└─ order-web java-war gateway workflowSuspending healthy Ready:1/1 2022-10-08 16:22:11 +0800 CST\nkubecon-demo2 hello-world2 java-war gateway workflowSuspending healthy Ready:1/1 2022-10-08 11:48:41 +0800 CST\n```\n\n## Show status of app\n- `vela status` can give you an overview of your deployed multi-cluster application.\n\n```codeBlockLines_e6Vv\nvela up -f https://kubevela.net/example/applications/first-app.yaml\nvela status first-vela-app\n```\n\nexpected output\n\n```codeBlockLines_e6Vv\nAbout:\n\n  Name:         first-vela-app\n  Namespace:    default\n  Created at:   2022-10-09 12:10:30 +0800 CST\n  Status:       workflowSuspending\n\nWorkflow:\n\n  mode: StepByStep\n  finished: false\n  Suspend: true\n  Terminated: false\n  Steps\n  - id: g1jtl5unra\n    name: deploy2default\n    type: deploy\n    phase: succeeded\n    message:\n  - id: 6cq88ufzq5\n    name: manual-approval\n    type: suspend\n    phase: running\n    message:\n\nServices:\n\n  - Name: express-server\n    Cluster: local  Namespace: default\n    Type: webservice\n    Healthy Ready:1/1\n    Traits:\n      ✅ scaler\n```\n\n- `vela status --pod` can list the pod status of your application.\n\n```codeBlockLines_e6Vv\nvela status first-vela-app --pod\n```\n\nexpected output\n\n```codeBlockLines_e6Vv\nCLUSTER COMPONENT       POD NAME                        NAMESPACE   PHASE   CREATE TIME             REVISION    HOST\nlocal   express-server  express-server-b768d95b7-qnwb4  default     Running 2022-10-09T04:10:31Z                izrj9f9wodrsepwyb9mcetz\n```\n\n- `vela status --endpoint` can list the access endpoints of your application.\n\n```codeBlockLines_e6Vv\nvela status first-vela-app --endpoint\n```\n\nexpected output\n\n```codeBlockLines_e6Vv\nPlease access first-vela-app from the following endpoints:\n+---------+----------------+--------------------------------+-----------------------------+-------+\n| CLUSTER |   COMPONENT    |    REF(KIND/NAMESPACE/NAME)    |          ENDPOINT           | INNER |\n+---------+----------------+--------------------------------+-----------------------------+-------+\n| local   | express-server | Service/default/express-server | express-server.default:8000 | true  |\n+---------+----------------+--------------------------------+-----------------------------+-------+\n```\n\n- `vela status --tree --detail` can list resources of your application.\n\n```codeBlockLines_e6Vv\nvela status first-vela-app --tree --detail\n```\n\nexpected output\n\n```codeBlockLines_e6Vv\nCLUSTER       NAMESPACE     RESOURCE                  STATUS    APPLY_TIME          DETAIL\nlocal     ─── default   ─┬─ Service/express-server    updated   2022-10-09 12:10:30 Type: ClusterIP  Cluster-IP: 10.43.212.235  External-IP: <none>  Port(s): 8000/TCP  Age: 6m44s\n                         └─ Deployment/express-server updated   2022-10-09 12:10:30 Ready: 1/1  Up-to-date: 1  Available: 1  Age: 6m44s\n```\n\n## Show logs of app\n- `vela logs` shows pod logs in managed clusters.\n\n```codeBlockLines_e6Vv\nvela logs first-vela-app\n```\n\nexpected output\n\n```codeBlockLines_e6Vv\n+ express-server-b768d95b7-qnwb4 › express-server\nexpress-server 2022-10-09T12:10:33.785549770+08:00 httpd started\n```\n\n## Execute commands inside pod container\n- `vela exec` helps you execute commands in pods in managed clusters.\n\n```codeBlockLines_e6Vv\nvela exec first-vela-app -it -- ls\n```\n\nexpected output\n\n```codeBlockLines_e6Vv\nbin   dev   etc   home  proc  root  sys   tmp   usr   var   www\n```\n\n## Access port locally\n- `vela port-forward` can discover and forward ports of pods or services in managed clusters to your local endpoint.\n\n```codeBlockLines_e6Vv\nvela port-forward first-vela-app 8001:8000\n```\n\nYou can curl this app by `curl http://127.0.0.1:8001/`.\n\n## More CLI Details\nPlease refer to the [CLI docs](https://kubevela.io/docs/v1.8/cli/vela/).\n\n- [List Apps](https://kubevela.io/docs/v1.8/tutorials/debug-app/#list-apps)\n- [Show status of app](https://kubevela.io/docs/v1.8/tutorials/debug-app/#show-status-of-app)\n- [Show logs of app](https://kubevela.io/docs/v1.8/tutorials/debug-app/#show-logs-of-app)\n- [Execute commands inside pod container](https://kubevela.io/docs/v1.8/tutorials/debug-app/#execute-commands-inside-pod-container)\n- [Access port locally](https://kubevela.io/docs/v1.8/tutorials/debug-app/#access-port-locally)\n- [More CLI Details](https://kubevela.io/docs/v1.8/tutorials/debug-app/#more-cli-details)\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.8/tutorials/debug-app", "title": "Debugging Applications with KubeVela", "description": "This documentation provides guidance on using KubeVela CLI commands for debugging applications across multi-clusters.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-02-28 16:52:03", "type": "overview", "page_metadata": {"docsearch:language": "en", "og:description": "KubeVela supports several CLI commands for debugging your applications, they can work on control plane and help you access resources across multi-clusters. Which also means you can play with your pods in managed clusters directly on the hub cluster, without switching KubeConfig context. If you have multiple clusters in on application, the CLI command will ask you to choose one interactively.", "description": "KubeVela supports several CLI commands for debugging your applications, they can work on control plane and help you access resources across multi-clusters. Which also means you can play with your pods in managed clusters directly on the hub cluster, without switching KubeConfig context. If you have multiple clusters in on application, the CLI command will ask you to choose one interactively.", "docusaurus_tag": "docs-default-v1.8", "theme-color": "#ffffff", "viewport": "width=device-width, initial-scale=1.0", "generator": "Docusaurus v2.4.3", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "twitter:card": "summary_large_image", "docusaurus_locale": "en", "og:url": "https://kubevela.io/docs/v1.8/tutorials/debug-app/", "ogDescription": "KubeVela supports several CLI commands for debugging your applications, they can work on control plane and help you access resources across multi-clusters. Which also means you can play with your pods in managed clusters directly on the hub cluster, without switching KubeConfig context. If you have multiple clusters in on application, the CLI command will ask you to choose one interactively.", "title": "Debugging Application | KubeVela", "docsearch:docusaurus_tag": "docs-default-v1.8", "og:title": "Debugging Application | KubeVela", "msapplication-config": "/img/favicons/browserconfig.xml", "docusaurus_version": "v1.8", "ogTitle": "Debugging Application | KubeVela", "docsearch:version": "v1.8", "ogUrl": "https://kubevela.io/docs/v1.8/tutorials/debug-app/", "language": "en", "scrapeId": "1ee143cd-1c0b-4bdc-b2ec-9f0d94000e53", "sourceURL": "https://kubevela.io/docs/v1.8/tutorials/debug-app", "url": "https://kubevela.io/docs/v1.8/tutorials/debug-app/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"Debugging Applications with KubeVela\"?\n\nAssistant: Here are some code examples:\n\n### List Apps\n```yaml\nvela ls\n```\n\n### Show status of app\n```yaml\nvela up -f https://kubevela.net/example/applications/first-app.yaml\nvela status first-vela-app\n```\n\n### Show pod status\n```yaml\nvela status first-vela-app --pod\n```\n\n### Show endpoint status\n```yaml\nvela status first-vela-app --endpoint\n```\n\n### Show resource status\n```yaml\nvela status first-vela-app --tree --detail\n```\n\n### Show logs of app\n```yaml\nvela logs first-vela-app\n```\n\n### Execute commands inside pod container\n```yaml\nvela exec first-vela-app -it -- ls\n```\n\n### Access port locally\n```yaml\nvela port-forward first-vela-app 8001:8000\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.8/tutorials/debug-app", "title": "Debugging Applications with KubeVela", "description": "This documentation provides guidance on using KubeVela CLI commands for debugging applications across multi-clusters.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-02-28 16:52:03", "type": "code_examples", "page_metadata": {"docsearch:language": "en", "og:description": "KubeVela supports several CLI commands for debugging your applications, they can work on control plane and help you access resources across multi-clusters. Which also means you can play with your pods in managed clusters directly on the hub cluster, without switching KubeConfig context. If you have multiple clusters in on application, the CLI command will ask you to choose one interactively.", "description": "KubeVela supports several CLI commands for debugging your applications, they can work on control plane and help you access resources across multi-clusters. Which also means you can play with your pods in managed clusters directly on the hub cluster, without switching KubeConfig context. If you have multiple clusters in on application, the CLI command will ask you to choose one interactively.", "docusaurus_tag": "docs-default-v1.8", "theme-color": "#ffffff", "viewport": "width=device-width, initial-scale=1.0", "generator": "Docusaurus v2.4.3", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "twitter:card": "summary_large_image", "docusaurus_locale": "en", "og:url": "https://kubevela.io/docs/v1.8/tutorials/debug-app/", "ogDescription": "KubeVela supports several CLI commands for debugging your applications, they can work on control plane and help you access resources across multi-clusters. Which also means you can play with your pods in managed clusters directly on the hub cluster, without switching KubeConfig context. If you have multiple clusters in on application, the CLI command will ask you to choose one interactively.", "title": "Debugging Application | KubeVela", "docsearch:docusaurus_tag": "docs-default-v1.8", "og:title": "Debugging Application | KubeVela", "msapplication-config": "/img/favicons/browserconfig.xml", "docusaurus_version": "v1.8", "ogTitle": "Debugging Application | KubeVela", "docsearch:version": "v1.8", "ogUrl": "https://kubevela.io/docs/v1.8/tutorials/debug-app/", "language": "en", "scrapeId": "1ee143cd-1c0b-4bdc-b2ec-9f0d94000e53", "sourceURL": "https://kubevela.io/docs/v1.8/tutorials/debug-app", "url": "https://kubevela.io/docs/v1.8/tutorials/debug-app/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"Debugging Applications with KubeVela\"?\n\nAssistant: Here are the recommended best practices:\n\n• Use `vela ls` to quickly list all applications and their statuses.\n• Utilize `vela status` with different flags to get detailed information about your application.\n• For debugging, `vela logs` is essential to view pod logs.\n• Use `vela exec` to run commands directly inside your pod for troubleshooting.\n• Port forwarding with `vela port-forward` allows local access to your application services.\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.8/tutorials/debug-app", "title": "Debugging Applications with KubeVela", "description": "This documentation provides guidance on using KubeVela CLI commands for debugging applications across multi-clusters.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-02-28 16:52:03", "type": "best_practices", "page_metadata": {"docsearch:language": "en", "og:description": "KubeVela supports several CLI commands for debugging your applications, they can work on control plane and help you access resources across multi-clusters. Which also means you can play with your pods in managed clusters directly on the hub cluster, without switching KubeConfig context. If you have multiple clusters in on application, the CLI command will ask you to choose one interactively.", "description": "KubeVela supports several CLI commands for debugging your applications, they can work on control plane and help you access resources across multi-clusters. Which also means you can play with your pods in managed clusters directly on the hub cluster, without switching KubeConfig context. If you have multiple clusters in on application, the CLI command will ask you to choose one interactively.", "docusaurus_tag": "docs-default-v1.8", "theme-color": "#ffffff", "viewport": "width=device-width, initial-scale=1.0", "generator": "Docusaurus v2.4.3", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "twitter:card": "summary_large_image", "docusaurus_locale": "en", "og:url": "https://kubevela.io/docs/v1.8/tutorials/debug-app/", "ogDescription": "KubeVela supports several CLI commands for debugging your applications, they can work on control plane and help you access resources across multi-clusters. Which also means you can play with your pods in managed clusters directly on the hub cluster, without switching KubeConfig context. If you have multiple clusters in on application, the CLI command will ask you to choose one interactively.", "title": "Debugging Application | KubeVela", "docsearch:docusaurus_tag": "docs-default-v1.8", "og:title": "Debugging Application | KubeVela", "msapplication-config": "/img/favicons/browserconfig.xml", "docusaurus_version": "v1.8", "ogTitle": "Debugging Application | KubeVela", "docsearch:version": "v1.8", "ogUrl": "https://kubevela.io/docs/v1.8/tutorials/debug-app/", "language": "en", "scrapeId": "1ee143cd-1c0b-4bdc-b2ec-9f0d94000e53", "sourceURL": "https://kubevela.io/docs/v1.8/tutorials/debug-app", "url": "https://kubevela.io/docs/v1.8/tutorials/debug-app/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela GitOps Documentation\"?\n\nAssistant: This documentation introduces how to use KubeVela in the GitOps area and explains the benefits of using GitOps with KubeVela.\n\nHere's a detailed explanation:\n\n\n## Introduction to GitOps with KubeVela\nGitOps is a continuous delivery method that allows developers to automatically deploy applications by changing code and declarative configurations in a Git repository, with \"git-centric\" operations such as PR and commit. For detailed benefits of GitOps, you can refer to [this blog](https://www.weave.works/blog/what-is-gitops-really).\n\n## Benefits of Using KubeVela in GitOps\nKubeVela as a declarative application delivery control plane can be naturally used in GitOps approach, and this will provide below extra bonus to end users alongside with GitOps benefits:\n\n- application delivery workflow (CD pipeline)\n  - i.e. KubeVela supports pipeline style application delivery process in GitOps, instead of simply declaring final status;\n- handling deployment [dependencies and designing typologies (DAG)](https://kubevela.io/docs/v1.8/end-user/workflow/component-dependency-parameter/);\n- [unified higher level abstraction](https://kubevela.io/docs/v1.8/getting-started/core-concept/) atop various GitOps tools' primitives;\n- declare, provision and consume [cloud resources](https://kubevela.io/docs/v1.8/tutorials/consume-cloud-services/) in unified application definition;\n- various out-of-box deployment strategies (Canary, Blue-Green ...);\n- various out-of-box hybrid/multi-cloud deployment policies (placement rule, cluster selectors etc.);\n- Kustomize-style patch for multi-env deployment without the need to learn Kustomize at all;\n- ... and much more.\n\n## Using KubeVela in GitOps\nIn the following sections, we will introduce steps of using KubeVela directly in GitOps approach. You can choose any of the following addons for the whole GitOps process:\n\n- [GitOps with FluxCD](https://kubevela.io/docs/v1.8/end-user/gitops/fluxcd/)\n\nBesides these addons, the end user can use any GitOps tools they want to watch the Git repo for KubeVela applications as configuration.\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.8/case-studies/gitops", "title": "KubeVela GitOps Documentation", "description": "This documentation introduces how to use KubeVela in the GitOps area and explains the benefits of using GitOps with KubeVela.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 16:52:18", "type": "overview", "page_metadata": {"docusaurus_version": "v1.8", "og:url": "https://kubevela.io/docs/v1.8/case-studies/gitops/", "docsearch:docusaurus_tag": "docs-default-v1.8", "og:title": "Overview of GitOps | KubeVela", "twitter:card": "summary_large_image", "docsearch:language": "en", "msapplication-config": "/img/favicons/browserconfig.xml", "docusaurus_locale": "en", "language": "en", "docsearch:version": "v1.8", "og:description": "This section will introduce how to use KubeVela in GitOps area and why.", "ogUrl": "https://kubevela.io/docs/v1.8/case-studies/gitops/", "title": "Overview of GitOps | KubeVela", "description": "This section will introduce how to use KubeVela in GitOps area and why.", "generator": "Docusaurus v2.4.3", "theme-color": "#ffffff", "ogDescription": "This section will introduce how to use KubeVela in GitOps area and why.", "viewport": "width=device-width, initial-scale=1.0", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogTitle": "Overview of GitOps | KubeVela", "docusaurus_tag": "docs-default-v1.8", "scrapeId": "8f970389-2545-414e-88e7-a6b19c0c9d6e", "sourceURL": "https://kubevela.io/docs/v1.8/case-studies/gitops", "url": "https://kubevela.io/docs/v1.8/case-studies/gitops/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela GitOps Documentation\"?\n\nAssistant: Here are the recommended best practices:\n\n• For detailed benefits of GitOps, refer to the blog linked in the introduction.\n• Consider using KubeVela's out-of-box deployment strategies for efficient application delivery.\n• Explore various GitOps tools that can be integrated with KubeVela.\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.8/case-studies/gitops", "title": "KubeVela GitOps Documentation", "description": "This documentation introduces how to use KubeVela in the GitOps area and explains the benefits of using GitOps with KubeVela.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 16:52:18", "type": "best_practices", "page_metadata": {"docusaurus_version": "v1.8", "og:url": "https://kubevela.io/docs/v1.8/case-studies/gitops/", "docsearch:docusaurus_tag": "docs-default-v1.8", "og:title": "Overview of GitOps | KubeVela", "twitter:card": "summary_large_image", "docsearch:language": "en", "msapplication-config": "/img/favicons/browserconfig.xml", "docusaurus_locale": "en", "language": "en", "docsearch:version": "v1.8", "og:description": "This section will introduce how to use KubeVela in GitOps area and why.", "ogUrl": "https://kubevela.io/docs/v1.8/case-studies/gitops/", "title": "Overview of GitOps | KubeVela", "description": "This section will introduce how to use KubeVela in GitOps area and why.", "generator": "Docusaurus v2.4.3", "theme-color": "#ffffff", "ogDescription": "This section will introduce how to use KubeVela in GitOps area and why.", "viewport": "width=device-width, initial-scale=1.0", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogTitle": "Overview of GitOps | KubeVela", "docusaurus_tag": "docs-default-v1.8", "scrapeId": "8f970389-2545-414e-88e7-a6b19c0c9d6e", "sourceURL": "https://kubevela.io/docs/v1.8/case-studies/gitops", "url": "https://kubevela.io/docs/v1.8/case-studies/gitops/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela Port Forward Documentation\"?\n\nAssistant: This documentation covers how to access web services of the application deployed using KubeVela via port-forwarding.\n\nHere's a detailed explanation:\n\n\n## Introduction\nOnce your web services of the application deployed, you can access it locally via `port-forward`.\n\n## Checking Deployed Applications\nYou can list the deployed applications using the command `vela ls`.\n\n## Port Forwarding Command\nTo forward the port for your application, use the command `vela port-forward testapp`. This will open the browser for you.\n\n## Output Logs\nThe output logs will show the forwarding status and any connection handling.\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.9/developers/port-forward", "title": "KubeVela Port Forward Documentation", "description": "This documentation covers how to access web services of the application deployed using KubeVela via port-forwarding.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 16:52:25", "type": "overview", "page_metadata": {"og:url": "https://kubevela.io/docs/v1.9/developers/port-forward/", "language": "en", "theme-color": "#ffffff", "title": "Port Forwarding | KubeVela", "docusaurus_tag": "docs-default-v1.9", "description": "Once your web services of the application deployed, you can access it locally via port-forward.", "viewport": "width=device-width, initial-scale=1.0", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_locale": "en", "generator": "Docusaurus v2.4.3", "twitter:card": "summary_large_image", "docusaurus_version": "v1.9", "ogUrl": "https://kubevela.io/docs/v1.9/developers/port-forward/", "docsearch:docusaurus_tag": "docs-default-v1.9", "ogTitle": "Port Forwarding | KubeVela", "og:description": "Once your web services of the application deployed, you can access it locally via port-forward.", "docsearch:language": "en", "docsearch:version": "v1.9", "ogDescription": "Once your web services of the application deployed, you can access it locally via port-forward.", "msapplication-config": "/img/favicons/browserconfig.xml", "og:title": "Port Forwarding | KubeVela", "scrapeId": "b989c03d-664a-4f5b-8aa4-95387a36275d", "sourceURL": "https://kubevela.io/docs/v1.9/developers/port-forward", "url": "https://kubevela.io/docs/v1.9/developers/port-forward/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"KubeVela Port Forward Documentation\"?\n\nAssistant: Here are some code examples:\n\n### List Deployed Applications\n```yaml\nvela ls\n```\n\n### Output of vela ls\n```yaml\nNAME            APP     WORKLOAD      TRAITS    STATUS      CREATED-TIME\nexpress-server  testapp webservice              Deployed    2020-09-18 22:42:04 +0800 CST\n```\n\n### Port Forward Command\n```yaml\nvela port-forward testapp\n```\n\n### Port Forwarding Output\n```yaml\nForwarding from 127.0.0.1:8080 -> 80\nForwarding from [::1]:8080 -> 80\n\nForward successfully! Opening browser ...\nHandling connection for 8080\nHandling connection for 8080\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.9/developers/port-forward", "title": "KubeVela Port Forward Documentation", "description": "This documentation covers how to access web services of the application deployed using KubeVela via port-forwarding.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 16:52:25", "type": "code_examples", "page_metadata": {"og:url": "https://kubevela.io/docs/v1.9/developers/port-forward/", "language": "en", "theme-color": "#ffffff", "title": "Port Forwarding | KubeVela", "docusaurus_tag": "docs-default-v1.9", "description": "Once your web services of the application deployed, you can access it locally via port-forward.", "viewport": "width=device-width, initial-scale=1.0", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_locale": "en", "generator": "Docusaurus v2.4.3", "twitter:card": "summary_large_image", "docusaurus_version": "v1.9", "ogUrl": "https://kubevela.io/docs/v1.9/developers/port-forward/", "docsearch:docusaurus_tag": "docs-default-v1.9", "ogTitle": "Port Forwarding | KubeVela", "og:description": "Once your web services of the application deployed, you can access it locally via port-forward.", "docsearch:language": "en", "docsearch:version": "v1.9", "ogDescription": "Once your web services of the application deployed, you can access it locally via port-forward.", "msapplication-config": "/img/favicons/browserconfig.xml", "og:title": "Port Forwarding | KubeVela", "scrapeId": "b989c03d-664a-4f5b-8aa4-95387a36275d", "sourceURL": "https://kubevela.io/docs/v1.9/developers/port-forward", "url": "https://kubevela.io/docs/v1.9/developers/port-forward/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela Port Forward Documentation\"?\n\nAssistant: Here are the recommended best practices:\n\n• Ensure your application is deployed before attempting to use port-forwarding.\n• Use the latest version of KubeVela for the best experience.\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.9/developers/port-forward", "title": "KubeVela Port Forward Documentation", "description": "This documentation covers how to access web services of the application deployed using KubeVela via port-forwarding.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 16:52:25", "type": "best_practices", "page_metadata": {"og:url": "https://kubevela.io/docs/v1.9/developers/port-forward/", "language": "en", "theme-color": "#ffffff", "title": "Port Forwarding | KubeVela", "docusaurus_tag": "docs-default-v1.9", "description": "Once your web services of the application deployed, you can access it locally via port-forward.", "viewport": "width=device-width, initial-scale=1.0", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docusaurus_locale": "en", "generator": "Docusaurus v2.4.3", "twitter:card": "summary_large_image", "docusaurus_version": "v1.9", "ogUrl": "https://kubevela.io/docs/v1.9/developers/port-forward/", "docsearch:docusaurus_tag": "docs-default-v1.9", "ogTitle": "Port Forwarding | KubeVela", "og:description": "Once your web services of the application deployed, you can access it locally via port-forward.", "docsearch:language": "en", "docsearch:version": "v1.9", "ogDescription": "Once your web services of the application deployed, you can access it locally via port-forward.", "msapplication-config": "/img/favicons/browserconfig.xml", "og:title": "Port Forwarding | KubeVela", "scrapeId": "b989c03d-664a-4f5b-8aa4-95387a36275d", "sourceURL": "https://kubevela.io/docs/v1.9/developers/port-forward", "url": "https://kubevela.io/docs/v1.9/developers/port-forward/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela CLI Config Template\"?\n\nAssistant: Manage the template of config.\n\nHere's a detailed explanation:\n\n\n## Options\n```codeBlockLines_e6Vv\n  -h, --help   help for config-template\n```\n\n## Options inherited from parent commands\n```codeBlockLines_e6Vv\n  -y, --yes   Assume yes for all user prompts\n```\n\n## SEE ALSO\n- [vela config-template apply](https://kubevela.io/docs/v1.8/cli/vela_config-template_apply/) \\- Apply a config template.\n- [vela config-template delete](https://kubevela.io/docs/v1.8/cli/vela_config-template_delete/) \\- Delete a config template.\n- [vela config-template list](https://kubevela.io/docs/v1.8/cli/vela_config-template_list/) \\- List the config templates.\n- [vela config-template show](https://kubevela.io/docs/v1.8/cli/vela_config-template_show/) \\- Show the documents of the template properties\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.8/cli/vela_config-template", "title": "KubeVela CLI Config Template", "description": "Manage the template of config.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 16:52:32", "type": "overview", "page_metadata": {"ogUrl": "https://kubevela.io/docs/v1.8/cli/vela_config-template/", "ogTitle": "vela config-template | KubeVela", "generator": "Docusaurus v2.4.3", "description": "Manage the template of config.", "docsearch:docusaurus_tag": "docs-default-v1.8", "og:url": "https://kubevela.io/docs/v1.8/cli/vela_config-template/", "og:title": "vela config-template | KubeVela", "docusaurus_version": "v1.8", "og:description": "Manage the template of config.", "docsearch:version": "v1.8", "docusaurus_locale": "en", "title": "vela config-template | KubeVela", "docusaurus_tag": "docs-default-v1.8", "theme-color": "#ffffff", "language": "en", "docsearch:language": "en", "ogDescription": "Manage the template of config.", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "twitter:card": "summary_large_image", "msapplication-config": "/img/favicons/browserconfig.xml", "viewport": "width=device-width, initial-scale=1.0", "scrapeId": "9240ab06-5ced-48ee-b3a1-36303ace263a", "sourceURL": "https://kubevela.io/docs/v1.8/cli/vela_config-template", "url": "https://kubevela.io/docs/v1.8/cli/vela_config-template/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"KubeVela CLI Config Template\"?\n\nAssistant: Here are some code examples:\n\n### Options\n```yaml\n```codeBlockLines_e6Vv\n  -h, --help   help for config-template\n```\n```\n\n### Options inherited from parent commands\n```yaml\n```codeBlockLines_e6Vv\n  -y, --yes   Assume yes for all user prompts\n```\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.8/cli/vela_config-template", "title": "KubeVela CLI Config Template", "description": "Manage the template of config.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 16:52:32", "type": "code_examples", "page_metadata": {"ogUrl": "https://kubevela.io/docs/v1.8/cli/vela_config-template/", "ogTitle": "vela config-template | KubeVela", "generator": "Docusaurus v2.4.3", "description": "Manage the template of config.", "docsearch:docusaurus_tag": "docs-default-v1.8", "og:url": "https://kubevela.io/docs/v1.8/cli/vela_config-template/", "og:title": "vela config-template | KubeVela", "docusaurus_version": "v1.8", "og:description": "Manage the template of config.", "docsearch:version": "v1.8", "docusaurus_locale": "en", "title": "vela config-template | KubeVela", "docusaurus_tag": "docs-default-v1.8", "theme-color": "#ffffff", "language": "en", "docsearch:language": "en", "ogDescription": "Manage the template of config.", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "twitter:card": "summary_large_image", "msapplication-config": "/img/favicons/browserconfig.xml", "viewport": "width=device-width, initial-scale=1.0", "scrapeId": "9240ab06-5ced-48ee-b3a1-36303ace263a", "sourceURL": "https://kubevela.io/docs/v1.8/cli/vela_config-template", "url": "https://kubevela.io/docs/v1.8/cli/vela_config-template/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela CLI Config Template\"?\n\nAssistant: Here are the recommended best practices:\n\n• For up-to-date documentation, see the latest version (v1.10).\n• If you like KubeVela, give it a star on GitHub!\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.8/cli/vela_config-template", "title": "KubeVela CLI Config Template", "description": "Manage the template of config.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 16:52:32", "type": "best_practices", "page_metadata": {"ogUrl": "https://kubevela.io/docs/v1.8/cli/vela_config-template/", "ogTitle": "vela config-template | KubeVela", "generator": "Docusaurus v2.4.3", "description": "Manage the template of config.", "docsearch:docusaurus_tag": "docs-default-v1.8", "og:url": "https://kubevela.io/docs/v1.8/cli/vela_config-template/", "og:title": "vela config-template | KubeVela", "docusaurus_version": "v1.8", "og:description": "Manage the template of config.", "docsearch:version": "v1.8", "docusaurus_locale": "en", "title": "vela config-template | KubeVela", "docusaurus_tag": "docs-default-v1.8", "theme-color": "#ffffff", "language": "en", "docsearch:language": "en", "ogDescription": "Manage the template of config.", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "twitter:card": "summary_large_image", "msapplication-config": "/img/favicons/browserconfig.xml", "viewport": "width=device-width, initial-scale=1.0", "scrapeId": "9240ab06-5ced-48ee-b3a1-36303ace263a", "sourceURL": "https://kubevela.io/docs/v1.8/cli/vela_config-template", "url": "https://kubevela.io/docs/v1.8/cli/vela_config-template/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela Documentation\"?\n\nAssistant: This documentation covers the KubeVela platform, including its definitions and templates.\n\nHere's a detailed explanation:\n\n\n## Introduction\nKubeVela v1.10.0 is now available.(2025-02-06)\n", "metadata": {"source_url": "https://kubevela.io/docs/platform-engineers/definition-and-templates", "title": "KubeVela Documentation", "description": "This documentation covers the KubeVela platform, including its definitions and templates.", "has_code_examples": false, "has_best_practices": true, "section_count": 1, "timestamp": "2025-02-28 16:52:36", "type": "overview", "page_metadata": {"twitter:card": "summary_large_image", "docusaurus_locale": "en", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:title": "Definition Objects | KubeVela", "og:url": "https://kubevela.io/docs/platform-engineers/definition-and-templates/", "msapplication-config": "/img/favicons/browserconfig.xml", "viewport": "width=device-width, initial-scale=1.0", "theme-color": "#ffffff", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogDescription": "This documentation has been merged into Definition Protocol.", "generator": "Docusaurus v2.4.3", "description": "This documentation has been merged into Definition Protocol.", "ogUrl": "https://kubevela.io/docs/platform-engineers/definition-and-templates/", "language": "en", "docsearch:language": "en", "title": "Definition Objects | KubeVela", "docsearch:version": "v1.10", "docusaurus_version": "v1.10", "docusaurus_tag": "docs-default-v1.10", "og:description": "This documentation has been merged into Definition Protocol.", "ogTitle": "Definition Objects | KubeVela", "scrapeId": "d43d7e24-91b0-4526-8ace-83ec3e90eb6a", "sourceURL": "https://kubevela.io/docs/platform-engineers/definition-and-templates", "url": "https://kubevela.io/docs/platform-engineers/definition-and-templates/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela Documentation\"?\n\nAssistant: Here are the recommended best practices:\n\n• If you like KubeVela, give it a star on GitHub!\n• Read the Release Note for version v1.10.\n", "metadata": {"source_url": "https://kubevela.io/docs/platform-engineers/definition-and-templates", "title": "KubeVela Documentation", "description": "This documentation covers the KubeVela platform, including its definitions and templates.", "has_code_examples": false, "has_best_practices": true, "section_count": 1, "timestamp": "2025-02-28 16:52:36", "type": "best_practices", "page_metadata": {"twitter:card": "summary_large_image", "docusaurus_locale": "en", "docsearch:docusaurus_tag": "docs-default-v1.10", "og:title": "Definition Objects | KubeVela", "og:url": "https://kubevela.io/docs/platform-engineers/definition-and-templates/", "msapplication-config": "/img/favicons/browserconfig.xml", "viewport": "width=device-width, initial-scale=1.0", "theme-color": "#ffffff", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogDescription": "This documentation has been merged into Definition Protocol.", "generator": "Docusaurus v2.4.3", "description": "This documentation has been merged into Definition Protocol.", "ogUrl": "https://kubevela.io/docs/platform-engineers/definition-and-templates/", "language": "en", "docsearch:language": "en", "title": "Definition Objects | KubeVela", "docsearch:version": "v1.10", "docusaurus_version": "v1.10", "docusaurus_tag": "docs-default-v1.10", "og:description": "This documentation has been merged into Definition Protocol.", "ogTitle": "Definition Objects | KubeVela", "scrapeId": "d43d7e24-91b0-4526-8ace-83ec3e90eb6a", "sourceURL": "https://kubevela.io/docs/platform-engineers/definition-and-templates", "url": "https://kubevela.io/docs/platform-engineers/definition-and-templates/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"Webhook Notification\"?\n\nAssistant: This section covers how to set up and use webhook notifications in KubeVela workflows.\n\nHere's a detailed explanation:\n\n\n## Introduction\nWebhook notifications allow you to send real-time updates to external systems when certain events occur in your KubeVela workflows.\n\n## Setting Up Webhook Notifications\nTo set up webhook notifications, you need to configure the webhook URL and the events you want to listen to.\n\n## Example Configuration\nHere is an example of how to configure a webhook notification in your workflow definition.\n\n## Testing Webhook Notifications\nYou can test your webhook notifications by triggering events manually and checking if the notifications are received.\n", "metadata": {"source_url": "https://kubevela.io/docs/end-user/workflow/webhook-notification", "title": "Webhook Notification", "description": "This section covers how to set up and use webhook notifications in KubeVela workflows.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 16:52:43", "type": "overview", "page_metadata": {"docsearch:docusaurus_tag": "docs-default-v1.10", "ogTitle": "Notification | KubeVela", "ogDescription": "This docs is converted to here.", "generator": "Docusaurus v2.4.3", "language": "en", "og:url": "https://kubevela.io/docs/end-user/workflow/webhook-notification/", "docsearch:version": "v1.10", "docusaurus_locale": "en", "docusaurus_tag": "docs-default-v1.10", "twitter:card": "summary_large_image", "docsearch:language": "en", "docusaurus_version": "v1.10", "viewport": "width=device-width, initial-scale=1.0", "ogUrl": "https://kubevela.io/docs/end-user/workflow/webhook-notification/", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "theme-color": "#ffffff", "description": "This docs is converted to here.", "msapplication-config": "/img/favicons/browserconfig.xml", "og:title": "Notification | KubeVela", "title": "Notification | KubeVela", "og:description": "This docs is converted to here.", "scrapeId": "73e99f81-5822-4912-a66c-699c9d736547", "sourceURL": "https://kubevela.io/docs/end-user/workflow/webhook-notification", "url": "https://kubevela.io/docs/end-user/workflow/webhook-notification/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"Webhook Notification\"?\n\nAssistant: Here are some code examples:\n\n### Webhook Notification Example\n```yaml\napiVersion: workflow.kubevela.io/v1alpha1\nkind: Workflow\nmetadata:\n  name: example-workflow\nspec:\n  steps:\n    - name: notify\n      type: webhook\n      properties:\n        url: https://example.com/webhook\n        events:\n          - workflow.completed\n          - workflow.failed\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/end-user/workflow/webhook-notification", "title": "Webhook Notification", "description": "This section covers how to set up and use webhook notifications in KubeVela workflows.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 16:52:43", "type": "code_examples", "page_metadata": {"docsearch:docusaurus_tag": "docs-default-v1.10", "ogTitle": "Notification | KubeVela", "ogDescription": "This docs is converted to here.", "generator": "Docusaurus v2.4.3", "language": "en", "og:url": "https://kubevela.io/docs/end-user/workflow/webhook-notification/", "docsearch:version": "v1.10", "docusaurus_locale": "en", "docusaurus_tag": "docs-default-v1.10", "twitter:card": "summary_large_image", "docsearch:language": "en", "docusaurus_version": "v1.10", "viewport": "width=device-width, initial-scale=1.0", "ogUrl": "https://kubevela.io/docs/end-user/workflow/webhook-notification/", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "theme-color": "#ffffff", "description": "This docs is converted to here.", "msapplication-config": "/img/favicons/browserconfig.xml", "og:title": "Notification | KubeVela", "title": "Notification | KubeVela", "og:description": "This docs is converted to here.", "scrapeId": "73e99f81-5822-4912-a66c-699c9d736547", "sourceURL": "https://kubevela.io/docs/end-user/workflow/webhook-notification", "url": "https://kubevela.io/docs/end-user/workflow/webhook-notification/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"Webhook Notification\"?\n\nAssistant: Here are the recommended best practices:\n\n• Ensure the webhook URL is accessible from the KubeVela environment.\n• Use a tool like ngrok for local testing of webhooks.\n", "metadata": {"source_url": "https://kubevela.io/docs/end-user/workflow/webhook-notification", "title": "Webhook Notification", "description": "This section covers how to set up and use webhook notifications in KubeVela workflows.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 16:52:43", "type": "best_practices", "page_metadata": {"docsearch:docusaurus_tag": "docs-default-v1.10", "ogTitle": "Notification | KubeVela", "ogDescription": "This docs is converted to here.", "generator": "Docusaurus v2.4.3", "language": "en", "og:url": "https://kubevela.io/docs/end-user/workflow/webhook-notification/", "docsearch:version": "v1.10", "docusaurus_locale": "en", "docusaurus_tag": "docs-default-v1.10", "twitter:card": "summary_large_image", "docsearch:language": "en", "docusaurus_version": "v1.10", "viewport": "width=device-width, initial-scale=1.0", "ogUrl": "https://kubevela.io/docs/end-user/workflow/webhook-notification/", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "theme-color": "#ffffff", "description": "This docs is converted to here.", "msapplication-config": "/img/favicons/browserconfig.xml", "og:title": "Notification | KubeVela", "title": "Notification | KubeVela", "og:description": "This docs is converted to here.", "scrapeId": "73e99f81-5822-4912-a66c-699c9d736547", "sourceURL": "https://kubevela.io/docs/end-user/workflow/webhook-notification", "url": "https://kubevela.io/docs/end-user/workflow/webhook-notification/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela Documentation\"?\n\nAssistant: This page provides information about the KubeVela v1.10.0 release and links to relevant documentation.\n\nHere's a detailed explanation:\n\n\n## Release Information\nKubeVela v1.10.0 is now available as of 2025-02-06. You can read the release notes [here](https://github.com/kubevela/kubevela/releases/tag/v1.10.0).\n\n## Version\nVersion: v1.10\n\n## Migration Notice\nThis doc has been migrated, please refer to the [Application Concept](https://kubevela.io/docs/getting-started/core-concept/) for more information.\n", "metadata": {"source_url": "https://kubevela.io/docs/platform-engineers/oam/oam-model", "title": "KubeVela Documentation", "description": "This page provides information about the KubeVela v1.10.0 release and links to relevant documentation.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 16:52:47", "type": "overview", "page_metadata": {"ogDescription": "This doc has been migrated, please refer to Application Concept.", "generator": "Docusaurus v2.4.3", "msapplication-config": "/img/favicons/browserconfig.xml", "viewport": "width=device-width, initial-scale=1.0", "theme-color": "#ffffff", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docsearch:docusaurus_tag": "docs-default-v1.10", "title": "Introduction | KubeVela", "docusaurus_locale": "en", "og:title": "Introduction | KubeVela", "twitter:card": "summary_large_image", "language": "en", "docusaurus_version": "v1.10", "ogTitle": "Introduction | KubeVela", "og:url": "https://kubevela.io/docs/platform-engineers/oam/oam-model/", "docsearch:language": "en", "og:description": "This doc has been migrated, please refer to Application Concept.", "docusaurus_tag": "docs-default-v1.10", "description": "This doc has been migrated, please refer to Application Concept.", "docsearch:version": "v1.10", "ogUrl": "https://kubevela.io/docs/platform-engineers/oam/oam-model/", "scrapeId": "36fa698a-c914-4daa-b8d1-17a1579d1825", "sourceURL": "https://kubevela.io/docs/platform-engineers/oam/oam-model", "url": "https://kubevela.io/docs/platform-engineers/oam/oam-model/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela Documentation\"?\n\nAssistant: Here are the recommended best practices:\n\n• If you like KubeVela, give it a star on GitHub!\n", "metadata": {"source_url": "https://kubevela.io/docs/platform-engineers/oam/oam-model", "title": "KubeVela Documentation", "description": "This page provides information about the KubeVela v1.10.0 release and links to relevant documentation.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 16:52:47", "type": "best_practices", "page_metadata": {"ogDescription": "This doc has been migrated, please refer to Application Concept.", "generator": "Docusaurus v2.4.3", "msapplication-config": "/img/favicons/browserconfig.xml", "viewport": "width=device-width, initial-scale=1.0", "theme-color": "#ffffff", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docsearch:docusaurus_tag": "docs-default-v1.10", "title": "Introduction | KubeVela", "docusaurus_locale": "en", "og:title": "Introduction | KubeVela", "twitter:card": "summary_large_image", "language": "en", "docusaurus_version": "v1.10", "ogTitle": "Introduction | KubeVela", "og:url": "https://kubevela.io/docs/platform-engineers/oam/oam-model/", "docsearch:language": "en", "og:description": "This doc has been migrated, please refer to Application Concept.", "docusaurus_tag": "docs-default-v1.10", "description": "This doc has been migrated, please refer to Application Concept.", "docsearch:version": "v1.10", "ogUrl": "https://kubevela.io/docs/platform-engineers/oam/oam-model/", "scrapeId": "36fa698a-c914-4daa-b8d1-17a1579d1825", "sourceURL": "https://kubevela.io/docs/platform-engineers/oam/oam-model", "url": "https://kubevela.io/docs/platform-engineers/oam/oam-model/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"Check Logs\"?\n\nAssistant: This documentation provides guidance on how to check logs for applications deployed using KubeVela.\n\nHere's a detailed explanation:\n\n\n## Overview\nThis is documentation for KubeVela **v1.9**, which is no longer actively maintained. For up-to-date documentation, see the **[latest version](https://kubevela.io/docs/developers/check-logs/)** (v1.10).\n\n## Version Information\nKubeVela v1.10.0 is now available.(2025-02-06) [Read Release Note](https://github.com/kubevela/kubevela/releases/tag/v1.10.0)\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.9/developers/check-logs", "title": "Check Logs", "description": "This documentation provides guidance on how to check logs for applications deployed using KubeVela.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-02-28 16:53:01", "type": "overview", "page_metadata": {"favicon": "https://kubevela.io/img/favicons/favicon.ico", "docsearch:version": "v1.9", "ogDescription": "It will let you select the container to get logs from. If there is only one container it will select automatically.", "viewport": "width=device-width, initial-scale=1.0", "title": "Check Application Logs | KubeVela", "og:description": "It will let you select the container to get logs from. If there is only one container it will select automatically.", "docusaurus_locale": "en", "ogTitle": "Check Application Logs | KubeVela", "docusaurus_version": "v1.9", "theme-color": "#ffffff", "language": "en", "docusaurus_tag": "docs-default-v1.9", "og:title": "Check Application Logs | KubeVela", "generator": "Docusaurus v2.4.3", "docsearch:docusaurus_tag": "docs-default-v1.9", "msapplication-config": "/img/favicons/browserconfig.xml", "twitter:card": "summary_large_image", "og:url": "https://kubevela.io/docs/v1.9/developers/check-logs/", "description": "It will let you select the container to get logs from. If there is only one container it will select automatically.", "docsearch:language": "en", "ogUrl": "https://kubevela.io/docs/v1.9/developers/check-logs/", "scrapeId": "749b29a9-3f38-4017-b045-3b265c0a4208", "sourceURL": "https://kubevela.io/docs/v1.9/developers/check-logs", "url": "https://kubevela.io/docs/v1.9/developers/check-logs/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"Check Logs\"?\n\nAssistant: Here are some code examples:\n\n### Check Application Logs\n```yaml\nvela logs testapp\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.9/developers/check-logs", "title": "Check Logs", "description": "This documentation provides guidance on how to check logs for applications deployed using KubeVela.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-02-28 16:53:01", "type": "code_examples", "page_metadata": {"favicon": "https://kubevela.io/img/favicons/favicon.ico", "docsearch:version": "v1.9", "ogDescription": "It will let you select the container to get logs from. If there is only one container it will select automatically.", "viewport": "width=device-width, initial-scale=1.0", "title": "Check Application Logs | KubeVela", "og:description": "It will let you select the container to get logs from. If there is only one container it will select automatically.", "docusaurus_locale": "en", "ogTitle": "Check Application Logs | KubeVela", "docusaurus_version": "v1.9", "theme-color": "#ffffff", "language": "en", "docusaurus_tag": "docs-default-v1.9", "og:title": "Check Application Logs | KubeVela", "generator": "Docusaurus v2.4.3", "docsearch:docusaurus_tag": "docs-default-v1.9", "msapplication-config": "/img/favicons/browserconfig.xml", "twitter:card": "summary_large_image", "og:url": "https://kubevela.io/docs/v1.9/developers/check-logs/", "description": "It will let you select the container to get logs from. If there is only one container it will select automatically.", "docsearch:language": "en", "ogUrl": "https://kubevela.io/docs/v1.9/developers/check-logs/", "scrapeId": "749b29a9-3f38-4017-b045-3b265c0a4208", "sourceURL": "https://kubevela.io/docs/v1.9/developers/check-logs", "url": "https://kubevela.io/docs/v1.9/developers/check-logs/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"Check Logs\"?\n\nAssistant: Here are the recommended best practices:\n\n• If there is only one container it will select automatically.\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.9/developers/check-logs", "title": "Check Logs", "description": "This documentation provides guidance on how to check logs for applications deployed using KubeVela.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-02-28 16:53:01", "type": "best_practices", "page_metadata": {"favicon": "https://kubevela.io/img/favicons/favicon.ico", "docsearch:version": "v1.9", "ogDescription": "It will let you select the container to get logs from. If there is only one container it will select automatically.", "viewport": "width=device-width, initial-scale=1.0", "title": "Check Application Logs | KubeVela", "og:description": "It will let you select the container to get logs from. If there is only one container it will select automatically.", "docusaurus_locale": "en", "ogTitle": "Check Application Logs | KubeVela", "docusaurus_version": "v1.9", "theme-color": "#ffffff", "language": "en", "docusaurus_tag": "docs-default-v1.9", "og:title": "Check Application Logs | KubeVela", "generator": "Docusaurus v2.4.3", "docsearch:docusaurus_tag": "docs-default-v1.9", "msapplication-config": "/img/favicons/browserconfig.xml", "twitter:card": "summary_large_image", "og:url": "https://kubevela.io/docs/v1.9/developers/check-logs/", "description": "It will let you select the container to get logs from. If there is only one container it will select automatically.", "docsearch:language": "en", "ogUrl": "https://kubevela.io/docs/v1.9/developers/check-logs/", "scrapeId": "749b29a9-3f38-4017-b045-3b265c0a4208", "sourceURL": "https://kubevela.io/docs/v1.9/developers/check-logs", "url": "https://kubevela.io/docs/v1.9/developers/check-logs/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela Dex Addon Documentation\"?\n\nAssistant: This documentation provides information on the Dex addon for KubeVela, including installation and uninstallation instructions.\n\nHere's a detailed explanation:\n\n\n## Overview\nThis addon provides dex login for VelaUX.\n\nDex is an identity service that uses OpenID Connect to drive authentication for other apps. Dex acts as a portal to other identity providers through connectors. This lets Dex defer authentication to LDAP servers, SAML providers, or established identity providers like GitHub, Google, and Active Directory. Clients write their authentication logic once to talk to Dex, then Dex handles the protocols for a given backend.\n\nPlease refer to Dex website for more details.\n\n## Install\nTo install the Dex addon, run the following command:\n```bash\n$ vela addon enable dex\n```\n\n## Uninstall\nTo uninstall the Dex addon, run the following command:\n```bash\n$ vela addon uninstall dex\n```\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.8/reference/addons/dex", "title": "KubeVela Dex Addon Documentation", "description": "This documentation provides information on the Dex addon for KubeVela, including installation and uninstallation instructions.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 16:53:17", "type": "overview", "page_metadata": {"favicon": "https://kubevela.io/img/favicons/favicon.ico", "og:title": "dex | KubeVela", "msapplication-config": "/img/favicons/browserconfig.xml", "generator": "Docusaurus v2.4.3", "viewport": "width=device-width, initial-scale=1.0", "title": "dex | KubeVela", "ogUrl": "https://kubevela.io/docs/v1.8/reference/addons/dex/", "docusaurus_version": "v1.8", "description": "This addon provides dex login for VelaUX.", "docusaurus_tag": "docs-default-v1.8", "docsearch:language": "en", "og:description": "This addon provides dex login for VelaUX.", "theme-color": "#ffffff", "docsearch:version": "v1.8", "ogTitle": "dex | KubeVela", "language": "en", "docusaurus_locale": "en", "twitter:card": "summary_large_image", "og:url": "https://kubevela.io/docs/v1.8/reference/addons/dex/", "ogDescription": "This addon provides dex login for VelaUX.", "docsearch:docusaurus_tag": "docs-default-v1.8", "scrapeId": "6807bc9c-0ec8-4837-bcf5-ede86a3bc2ed", "sourceURL": "https://kubevela.io/docs/v1.8/reference/addons/dex", "url": "https://kubevela.io/docs/v1.8/reference/addons/dex/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"KubeVela Dex Addon Documentation\"?\n\nAssistant: Here are some code examples:\n\n### Install Dex Addon\n```yaml\n$ vela addon enable dex\n```\n\n### Uninstall Dex Addon\n```yaml\n$ vela addon uninstall dex\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.8/reference/addons/dex", "title": "KubeVela Dex Addon Documentation", "description": "This documentation provides information on the Dex addon for KubeVela, including installation and uninstallation instructions.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 16:53:17", "type": "code_examples", "page_metadata": {"favicon": "https://kubevela.io/img/favicons/favicon.ico", "og:title": "dex | KubeVela", "msapplication-config": "/img/favicons/browserconfig.xml", "generator": "Docusaurus v2.4.3", "viewport": "width=device-width, initial-scale=1.0", "title": "dex | KubeVela", "ogUrl": "https://kubevela.io/docs/v1.8/reference/addons/dex/", "docusaurus_version": "v1.8", "description": "This addon provides dex login for VelaUX.", "docusaurus_tag": "docs-default-v1.8", "docsearch:language": "en", "og:description": "This addon provides dex login for VelaUX.", "theme-color": "#ffffff", "docsearch:version": "v1.8", "ogTitle": "dex | KubeVela", "language": "en", "docusaurus_locale": "en", "twitter:card": "summary_large_image", "og:url": "https://kubevela.io/docs/v1.8/reference/addons/dex/", "ogDescription": "This addon provides dex login for VelaUX.", "docsearch:docusaurus_tag": "docs-default-v1.8", "scrapeId": "6807bc9c-0ec8-4837-bcf5-ede86a3bc2ed", "sourceURL": "https://kubevela.io/docs/v1.8/reference/addons/dex", "url": "https://kubevela.io/docs/v1.8/reference/addons/dex/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela Dex Addon Documentation\"?\n\nAssistant: Here are the recommended best practices:\n\n• Refer to the Dex website for more details on identity services and connectors.\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.8/reference/addons/dex", "title": "KubeVela Dex Addon Documentation", "description": "This documentation provides information on the Dex addon for KubeVela, including installation and uninstallation instructions.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 16:53:17", "type": "best_practices", "page_metadata": {"favicon": "https://kubevela.io/img/favicons/favicon.ico", "og:title": "dex | KubeVela", "msapplication-config": "/img/favicons/browserconfig.xml", "generator": "Docusaurus v2.4.3", "viewport": "width=device-width, initial-scale=1.0", "title": "dex | KubeVela", "ogUrl": "https://kubevela.io/docs/v1.8/reference/addons/dex/", "docusaurus_version": "v1.8", "description": "This addon provides dex login for VelaUX.", "docusaurus_tag": "docs-default-v1.8", "docsearch:language": "en", "og:description": "This addon provides dex login for VelaUX.", "theme-color": "#ffffff", "docsearch:version": "v1.8", "ogTitle": "dex | KubeVela", "language": "en", "docusaurus_locale": "en", "twitter:card": "summary_large_image", "og:url": "https://kubevela.io/docs/v1.8/reference/addons/dex/", "ogDescription": "This addon provides dex login for VelaUX.", "docsearch:docusaurus_tag": "docs-default-v1.8", "scrapeId": "6807bc9c-0ec8-4837-bcf5-ede86a3bc2ed", "sourceURL": "https://kubevela.io/docs/v1.8/reference/addons/dex", "url": "https://kubevela.io/docs/v1.8/reference/addons/dex/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"User Improvement Plan\"?\n\nAssistant: This documentation covers the User Improvement Plan for KubeVela, detailing how user data will be collected to improve the product.\n\nHere's a detailed explanation:\n\n\n## Introduction\nWelcome to join the \"User Improvement Plan\"! To improve the KubeVela open source product, avoid bugs and improve the product quality, we need to collect some of your system and usage information.\n\n## Purpose of Data Collection\nWe will use these data to guide us to improve the installation, user experience and performance. That can also help us to make more decision about features and designs.\n\n## Data Collection Policy\nThis plan follows the CNCF Telemetry data collection and usage policy, you can learn the collection data and more details here.\n\n## Opting Out\nIf you don't want to join this plan, just turn off the button in the \"platform setting\". This won't block you to use any features about the product.\n\n## Data Usage Promise\nWe promise the data collected can only be used within the community to improve the product user experience and help up to make feature design and decisions.\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.8/reference/user-improvement-plan", "title": "User Improvement Plan", "description": "This documentation covers the User Improvement Plan for KubeVela, detailing how user data will be collected to improve the product.", "has_code_examples": false, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 16:53:46", "type": "overview", "page_metadata": {"favicon": "https://kubevela.io/img/favicons/favicon.ico", "viewport": "width=device-width, initial-scale=1.0", "ogUrl": "https://kubevela.io/docs/v1.8/reference/user-improvement-plan/", "twitter:card": "summary_large_image", "og:url": "https://kubevela.io/docs/v1.8/reference/user-improvement-plan/", "docusaurus_locale": "en", "og:description": "Welcome to join the \"User Improvement Plan\"! To improve the KubeVela open source product, avoid bugs and improve the product quality, we need to collect some of your system and usage information.", "description": "Welcome to join the \"User Improvement Plan\"! To improve the KubeVela open source product, avoid bugs and improve the product quality, we need to collect some of your system and usage information.", "ogDescription": "Welcome to join the \"User Improvement Plan\"! To improve the KubeVela open source product, avoid bugs and improve the product quality, we need to collect some of your system and usage information.", "docsearch:docusaurus_tag": "docs-default-v1.8", "language": "en", "generator": "Docusaurus v2.4.3", "docusaurus_version": "v1.8", "title": "User Improvement Plan | KubeVela", "docusaurus_tag": "docs-default-v1.8", "docsearch:version": "v1.8", "msapplication-config": "/img/favicons/browserconfig.xml", "docsearch:language": "en", "theme-color": "#ffffff", "ogTitle": "User Improvement Plan | KubeVela", "og:title": "User Improvement Plan | KubeVela", "scrapeId": "abb038e8-f24d-4ab3-b285-491502df7f71", "sourceURL": "https://kubevela.io/docs/v1.8/reference/user-improvement-plan", "url": "https://kubevela.io/docs/v1.8/reference/user-improvement-plan/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"User Improvement Plan\"?\n\nAssistant: Here are the recommended best practices:\n\n• If you like KubeVela, give it a star on GitHub!\n• For up-to-date documentation, see the latest version (v1.10).\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.8/reference/user-improvement-plan", "title": "User Improvement Plan", "description": "This documentation covers the User Improvement Plan for KubeVela, detailing how user data will be collected to improve the product.", "has_code_examples": false, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 16:53:46", "type": "best_practices", "page_metadata": {"favicon": "https://kubevela.io/img/favicons/favicon.ico", "viewport": "width=device-width, initial-scale=1.0", "ogUrl": "https://kubevela.io/docs/v1.8/reference/user-improvement-plan/", "twitter:card": "summary_large_image", "og:url": "https://kubevela.io/docs/v1.8/reference/user-improvement-plan/", "docusaurus_locale": "en", "og:description": "Welcome to join the \"User Improvement Plan\"! To improve the KubeVela open source product, avoid bugs and improve the product quality, we need to collect some of your system and usage information.", "description": "Welcome to join the \"User Improvement Plan\"! To improve the KubeVela open source product, avoid bugs and improve the product quality, we need to collect some of your system and usage information.", "ogDescription": "Welcome to join the \"User Improvement Plan\"! To improve the KubeVela open source product, avoid bugs and improve the product quality, we need to collect some of your system and usage information.", "docsearch:docusaurus_tag": "docs-default-v1.8", "language": "en", "generator": "Docusaurus v2.4.3", "docusaurus_version": "v1.8", "title": "User Improvement Plan | KubeVela", "docusaurus_tag": "docs-default-v1.8", "docsearch:version": "v1.8", "msapplication-config": "/img/favicons/browserconfig.xml", "docsearch:language": "en", "theme-color": "#ffffff", "ogTitle": "User Improvement Plan | KubeVela", "og:title": "User Improvement Plan | KubeVela", "scrapeId": "abb038e8-f24d-4ab3-b285-491502df7f71", "sourceURL": "https://kubevela.io/docs/v1.8/reference/user-improvement-plan", "url": "https://kubevela.io/docs/v1.8/reference/user-improvement-plan/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"GCP Network-Peering\"?\n\nAssistant: GCP Network-Peering\n\nHere's a detailed explanation:\n\n\n## Description\nGCP Network-Peering\n\n## Specification\n### Properties\n\n| Name | Description | Type | Required | Default |\n| --- | --- | --- | --- | --- |\n| cluster_name | Name of the DC/OS cluster |  | true |  |\n| local_network_name | Local network name, used for naming the peering | string | true |  |\n| local_network_self_link | Local network self_link | string | true |  |\n| remote_network_name | Remote network name, used for naming the peering | string | true |  |\n| remote_network_self_link | Remote network self_link | string | true |  |\n| wait_for_peering_id | The peering ID we need to wait for, before we can create another peering |  | false |  |\n| writeConnectionSecretToRef | The secret which the cloud resource connection will be written to | [writeConnectionSecretToRef](https://kubevela.io/docs/end-user/components/cloud-services/terraform/gcp-network-peering/#writeConnectionSecretToRef) | false |  |\n\n#### writeConnectionSecretToRef\n\n| Name | Description | Type | Required | Default |\n| --- | --- | --- | --- | --- |\n| name | The secret name which the cloud resource connection will be written to | string | true |  |\n| namespace | The secret namespace which the cloud resource connection will be written to | string | false |  |\n", "metadata": {"source_url": "https://kubevela.io/docs/end-user/components/cloud-services/terraform/gcp-network-peering", "title": "GCP Network-Peering", "description": "GCP Network-Peering", "has_code_examples": false, "has_best_practices": false, "section_count": 2, "timestamp": "2025-02-28 16:53:53", "type": "overview", "page_metadata": {"docsearch:version": "v1.10", "theme-color": "#ffffff", "og:description": "Description", "viewport": "width=device-width, initial-scale=1.0", "og:url": "https://kubevela.io/docs/end-user/components/cloud-services/terraform/gcp-network-peering/", "docsearch:language": "en", "title": "Gcp-Network-Peering | KubeVela", "generator": "Docusaurus v2.4.3", "docusaurus_locale": "en", "ogUrl": "https://kubevela.io/docs/end-user/components/cloud-services/terraform/gcp-network-peering/", "twitter:card": "summary_large_image", "og:title": "Gcp-Network-Peering | KubeVela", "language": "en", "docsearch:docusaurus_tag": "docs-default-v1.10", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "description": "Description", "msapplication-config": "/img/favicons/browserconfig.xml", "docusaurus_tag": "docs-default-v1.10", "docusaurus_version": "v1.10", "ogDescription": "Description", "ogTitle": "Gcp-Network-Peering | KubeVela", "scrapeId": "73a55a9e-5747-4479-a1ac-264a906b54ea", "sourceURL": "https://kubevela.io/docs/end-user/components/cloud-services/terraform/gcp-network-peering", "url": "https://kubevela.io/docs/end-user/components/cloud-services/terraform/gcp-network-peering/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"vela addon push\"?\n\nAssistant: Uploads an addon package to ChartMuseum.\n\nHere's a detailed explanation:\n\n\n## Synopsis\nUploads an addon package to ChartMuseum.\n\nTwo arguments are needed <addon directory/package> and <name/URL of ChartMuseum>.\n\nThe first argument <addon directory/package> can be:\n\n- your conventional addon directory (containing metadata.yaml). We will package it for you.\n- packaged addon (.tgz) generated by 'vela addon package' command\n\nThe second argument <name/URL of ChartMuseum> can be:\n\n- registry name (helm type). You can add your ChartMuseum registry using 'vela addon registry add'.\n- ChartMuseum URL, e.g. http://localhost:8080\n\n```bash\nvela addon push [flags]\n```\n\n## Examples\n```bash\n# Push the addon in directory <your-addon> to a ChartMuseum registry named <localcm>\n$ vela addon push your-addon localcm\n\n# Push packaged addon mongo-1.0.0.tgz to a ChartMuseum registry at http://localhost:8080\n$ vela addon push mongo-1.0.0.tgz http://localhost:8080\n\n# Force push, overwriting existing ones\n$ vela addon push your-addon localcm -f\n\n# If you already written your own Chart.yaml and don't want us to generate it for you:\n$ vela addon push your-addon localcm --keep-chartmeta\n# Note: when using .tgz packages, we will always keep the original Chart.yaml\n\n# In addition to cli flags, you can also use environment variables\n$ HELM_REPO_USERNAME=name HELM_REPO_PASSWORD=pswd vela addon push mongo-1.0.0.tgz http://localhost:8080\n```\n\n## Options\n```bash\n      --access-token string   send token in Authorization header [$HELM_REPO_ACCESS_TOKEN]\n  -a, --app-version string    override app version pre-push\n      --auth-header string    alternative header to use for token auth [$HELM_REPO_AUTH_HEADER]\n      --ca-file string        verify certificates of HTTPS-enabled servers using this CA bundle [$HELM_REPO_CA_FILE]\n      --cert-file string      identify HTTPS client using this SSL certificate file [$HELM_REPO_CERT_FILE]\n      --context-path string   ChartMuseum context path [$HELM_REPO_CONTEXT_PATH]\n  -f, --force                 force upload even if chart version exists\n  -h, --help                  help for push\n      --insecure              connect to server with an insecure way by skipping certificate verification [$HELM_REPO_INSECURE]\n      --keep-chartmeta        do not update Chart.yaml automatically according to addon metadata (only when addon dir provided)\n      --key-file string       identify HTTPS client using this SSL key file [$HELM_REPO_KEY_FILE]\n  -p, --password string       override HTTP basic auth password [$HELM_REPO_PASSWORD]\n  -t, --timeout int           The duration (in seconds) vela cli will wait to get response from ChartMuseum (default 30)\n      --use-http              use HTTP\n  -u, --username string       override HTTP basic auth username [$HELM_REPO_USERNAME]\n  -v, --version string        override chart version pre-push\n```\n\n## Options inherited from parent commands\n```bash\n  -V, --verbosity Level   number for the log level verbosity\n  -y, --yes               Assume yes for all user prompts\n```\n\n## SEE ALSO\n- [vela addon](https://kubevela.io/docs/cli/vela_addon/) - Manage addons for extension.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_addon_push", "title": "vela addon push", "description": "Uploads an addon package to ChartMuseum.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 16:54:09", "type": "overview", "page_metadata": {"ogDescription": "uploads an addon package to ChartMuseum", "ogTitle": "vela addon push | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docsearch:docusaurus_tag": "docs-default-v1.10", "viewport": "width=device-width, initial-scale=1.0", "docusaurus_tag": "docs-default-v1.10", "language": "en", "generator": "Docusaurus v2.4.3", "description": "uploads an addon package to ChartMuseum", "og:description": "uploads an addon package to ChartMuseum", "title": "vela addon push | KubeVela", "ogUrl": "https://kubevela.io/docs/cli/vela_addon_push/", "docusaurus_version": "v1.10", "twitter:card": "summary_large_image", "docsearch:language": "en", "og:title": "vela addon push | KubeVela", "docusaurus_locale": "en", "theme-color": "#ffffff", "msapplication-config": "/img/favicons/browserconfig.xml", "docsearch:version": "v1.10", "og:url": "https://kubevela.io/docs/cli/vela_addon_push/", "scrapeId": "9ed54d59-a0ea-4225-9130-5c26c449d7d0", "sourceURL": "https://kubevela.io/docs/cli/vela_addon_push", "url": "https://kubevela.io/docs/cli/vela_addon_push/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"vela addon push\"?\n\nAssistant: Here are some code examples:\n\n### Push an addon to ChartMuseum\n```yaml\n$ vela addon push your-addon localcm\n```\n\n### Push packaged addon to ChartMuseum\n```yaml\n$ vela addon push mongo-1.0.0.tgz http://localhost:8080\n```\n\n### Force push an addon\n```yaml\n$ vela addon push your-addon localcm -f\n```\n\n### Push addon without generating Chart.yaml\n```yaml\n$ vela addon push your-addon localcm --keep-chartmeta\n```\n\n### Using environment variables for authentication\n```yaml\n$ HELM_REPO_USERNAME=name HELM_REPO_PASSWORD=pswd vela addon push mongo-1.0.0.tgz http://localhost:8080\n```\n\n### Options for push command\n```yaml\n--access-token string   send token in Authorization header [$HELM_REPO_ACCESS_TOKEN]\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_addon_push", "title": "vela addon push", "description": "Uploads an addon package to ChartMuseum.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 16:54:09", "type": "code_examples", "page_metadata": {"ogDescription": "uploads an addon package to ChartMuseum", "ogTitle": "vela addon push | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docsearch:docusaurus_tag": "docs-default-v1.10", "viewport": "width=device-width, initial-scale=1.0", "docusaurus_tag": "docs-default-v1.10", "language": "en", "generator": "Docusaurus v2.4.3", "description": "uploads an addon package to ChartMuseum", "og:description": "uploads an addon package to ChartMuseum", "title": "vela addon push | KubeVela", "ogUrl": "https://kubevela.io/docs/cli/vela_addon_push/", "docusaurus_version": "v1.10", "twitter:card": "summary_large_image", "docsearch:language": "en", "og:title": "vela addon push | KubeVela", "docusaurus_locale": "en", "theme-color": "#ffffff", "msapplication-config": "/img/favicons/browserconfig.xml", "docsearch:version": "v1.10", "og:url": "https://kubevela.io/docs/cli/vela_addon_push/", "scrapeId": "9ed54d59-a0ea-4225-9130-5c26c449d7d0", "sourceURL": "https://kubevela.io/docs/cli/vela_addon_push", "url": "https://kubevela.io/docs/cli/vela_addon_push/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"vela addon push\"?\n\nAssistant: Here are the recommended best practices:\n\n• Use the '--force' option to overwrite existing charts if necessary.\n• Always keep the original Chart.yaml when using .tgz packages.\n• Utilize environment variables for sensitive information like usernames and passwords.\n", "metadata": {"source_url": "https://kubevela.io/docs/cli/vela_addon_push", "title": "vela addon push", "description": "Uploads an addon package to ChartMuseum.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 16:54:09", "type": "best_practices", "page_metadata": {"ogDescription": "uploads an addon package to ChartMuseum", "ogTitle": "vela addon push | KubeVela", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docsearch:docusaurus_tag": "docs-default-v1.10", "viewport": "width=device-width, initial-scale=1.0", "docusaurus_tag": "docs-default-v1.10", "language": "en", "generator": "Docusaurus v2.4.3", "description": "uploads an addon package to ChartMuseum", "og:description": "uploads an addon package to ChartMuseum", "title": "vela addon push | KubeVela", "ogUrl": "https://kubevela.io/docs/cli/vela_addon_push/", "docusaurus_version": "v1.10", "twitter:card": "summary_large_image", "docsearch:language": "en", "og:title": "vela addon push | KubeVela", "docusaurus_locale": "en", "theme-color": "#ffffff", "msapplication-config": "/img/favicons/browserconfig.xml", "docsearch:version": "v1.10", "og:url": "https://kubevela.io/docs/cli/vela_addon_push/", "scrapeId": "9ed54d59-a0ea-4225-9130-5c26c449d7d0", "sourceURL": "https://kubevela.io/docs/cli/vela_addon_push", "url": "https://kubevela.io/docs/cli/vela_addon_push/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela Code Contribution Guide\"?\n\nAssistant: This document provides guidelines for contributing to the KubeVela project, including how to run KubeVela locally, create pull requests, and follow formatting guidelines.\n\nHere's a detailed explanation:\n\n\n## Run KubeVela Locally\nThis guide helps you get started developing KubeVela.\n\n### Prerequisites\n\n- Golang version 1.19+\n\nInstall Golang\n\n1. Install go1.19 from [official site](https://go.dev/dl/). Unpack the binary and place it somewhere, assume it's in the home path `~/go/`, below is an example command, you should choose the right binary according to your system.\n\n```bash\nwget https://go.dev/dl/go1.20.2.linux-amd64.tar.gz\ntar xzf go1.20.2.linux-amd64.tar.gz\n```\n\nIf you want to keep multiple golang version in your local develop environment, you can download the package and unfold it into some place, like `~/go/go1.19.1`, then the following commands should also change according to the path.\n\n1. Set environment variables for Golang\n\n```bash\nexport PATH=~/go/bin/:$PATH\nexport GOROOT=~/go/\nexport GOPATH=~/gopath/\n```\n\nCreate a gopath folder if not exist `mkdir ~/gopath`. These commands will add the go binary folder to the `PATH` environment (let it to be the primary choice for go), and set the `GOROOT` environment to this go folder. Please add these lines to your `~/.bashrc` or `~/.zshrc` file, so that you don't need to set these environment variables every time you open a new terminal.\n\n2. (Optional) Some area like China may be too slow to connect to the default go registry, you can configure GOPROXY to speed up the download process.\n\n```bash\ngo env -w GOPROXY=https://goproxy.cn,direct\n```\n\n- Kubernetes version v1.20+ with `~/.kube/config` configured. (Don't have a test cluster? Try [VelaD](https://github.com/kubevela/velad/blob/main/docs/06.develop_kubevela.md) to develop KubeVela)\n\n- golangci-lint 1.49.0+, it will install automatically if you run `make`, you can install it manually if the installation broken.\n\nInstall golangci-lint manually\n\nYou can install it manually follow [the guide](https://golangci-lint.run/usage/install/#local-installation) or the following command:\n\n```bash\ncd ~/go/ && curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s v1.49.0\n```\n\n- kustomize 4.5.4+, it will install automatically if you run `make reviewable`, you can install it manually if the installation broken.\n\nInstall kustomize manually\n\nYou can install it manually follow [the guide](https://kubectl.docs.kubernetes.io/installation/kustomize/) or the following commands:\n\n```bash\ncurl -s \"https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh\"  | bash\n```\n\nMove kustomize binary to your KubeVela repo folder:\n\n```bash\nmv kustomize ~/kubevela/bin/\n```\n\n- ginkgo 1.14.0+ (just for [E2E test](https://kubevela.io/docs/contributor/code-contribute/#e2e-test))\n\n```bash\ngo install github.com/onsi/ginkgo/v2/ginkgo@latest\n```\n\n- kubebuilder v3.1.0+ and you need to manually install the dependency tools for unit test.\n\nInstall Kubebuilder manually\n\nlinux:\n\n```bash\nwget https://storage.googleapis.com/kubebuilder-tools/kubebuilder-tools-1.21.2-linux-amd64.tar.gz\ntar -zxvf  kubebuilder-tools-1.21.2-linux-amd64.tar.gz\nmkdir -p /usr/local/kubebuilder/bin\nsudo mv kubebuilder/bin/* /usr/local/kubebuilder/bin\n```\n\nmacOS:\n\n```bash\ncurl -O https://storage.googleapis.com/kubebuilder-tools/kubebuilder-tools-1.21.2-darwin-amd64.tar.gz\ntar -zxvf  kubebuilder-tools-1.21.2-darwin-amd64.tar.gz\nmkdir -p /usr/local/kubebuilder/bin\nsudo mv kubebuilder/bin/* /usr/local/kubebuilder/bin\n```\n\nFor other OS or system architecture, please refer to [https://storage.googleapis.com/kubebuilder-tools/](https://storage.googleapis.com/kubebuilder-tools/)\n\n- [CUElang](https://github.com/cue-lang/cue/blob/master/doc/install.md) v0.4.3+\n\n```bash\ngo install cuelang.org/go/cmd/cue@latest\n```\n\n- Other tools for running `make reviewable` in KubeVela.\n\n```bash\ngo install honnef.co/go/tools/cmd/staticcheck@2022.1\ngo install sigs.k8s.io/controller-tools/cmd/controller-gen@v0.6.2\ngo install golang.org/x/tools/cmd/goimports@latest\n```\n\n**Caution**\n\nNote: For macOS, you may need to install [diffutils](https://www.gnu.org/software/diffutils/).\n\n**Tip**\n\nYou may also be interested with KubeVela's [design](https://github.com/oam-dev/kubevela/tree/master/design/vela-core) before diving into its code.\n\n## Build\n- Clone this project\n\n```bash\ngit clone git@github.com:kubevela/kubevela.git\n```\n\nKubeVela includes two parts, `vela core` and `vela cli`.\n\n- The `vela core` is actually a K8s controller, it will watch OAM Spec CRD and deploy resources.\n- The `vela cli` is a command line tool that can build, run apps(with the help of `vela core`).\n\nFor local development, we probably need to build both of them.\n\n- Build Vela CLI\n\n```bash\nmake\n```\n\nAfter the vela cli built successfully, `make` command will create `vela` binary to `bin/` under the project.\n\n- Configure `vela` binary to System PATH\n\n```bash\nexport PATH=$PATH:/your/path/to/project/kubevela/bin\n```\n\nThen you can use `vela` command directly.\n\n- Build Vela Core\n\n```bash\nmake manager\n```\n\n- Run Vela Core\n\nFirstly make sure your cluster has CRDs, below is the command that can help install all CRDs.\n\n```bash\nmake core-install\n```\n\nTo ensure you have created vela-system namespace and install definitions of necessary module.\nyou can run the command:\n\n```bash\nmake def-install\n```\n\nAnd then run locally:\n\n```bash\nmake core-run\n```\n\nThis command will run controller locally, it will use your local KubeConfig which means you need to have a k8s cluster locally. If you don't have one, try [VelaD](https://github.com/kubevela/velad/blob/main/docs/06.develop_kubevela.md) to develop KubeVela.\n\nWhen you're developing `vela-core`, make sure the controller installed by helm chart is not running.\nOtherwise, it will conflict with your local running controller.\n\nYou can check and uninstall it by using helm.\n\n```bash\nhelm list -A\nhelm uninstall -n vela-system kubevela\n```\n\n## Testing\nIt's necessary to write tests for good code quality, please refer to [the principle of test](https://kubevela.io/docs/contributor/principle-of-test/) before you start.\n\n#### Unit test\n\n```bash\nmake test\n```\n\nTo execute the unit test of the API module, the mongodb service needs to exist locally.\n\n```bash\nmake unit-test-apiserver\n```\n\n#### Integration and E2E test\n\n**Before e2e test start, make sure you have vela-core running.**\n\n```bash\nmake core-run\n```\n\nStart to test.\n\n```bash\nmake e2e-test\n```\n\n## Debugging Locally with Remote KubeVela Environment\nTo run vela-core locally for debugging with kubevela installed in the remote cluster:\n\n- Firstly, scaling the replicas of `kubevela-vela-core` to 0 for leader election of `controller-manager`:\n\n```bash\nkubectl scale deploy -n vela-system kubevela-vela-core --replicas=0\n```\n\n- Secondly, removing the `WebhookConfiguration`, otherwise an error will be reported when applying your application using `vela-cli` or `kubectl`:\n\n```bash\nkubectl delete ValidatingWebhookConfiguration kubevela-vela-core-admission -n vela-system\nkubectl delete MutatingWebhookConfiguration kubevela-vela-core-admission -n vela-system\n```\n\nFinally, you can use the commands in the above [Build](https://kubevela.io/docs/contributor/code-contribute/#build) and [Testing](https://kubevela.io/docs/contributor/code-contribute/#Testing) sections, such as `make run`, to code and debug in your local machine.\n\n**Caution**\n\nNote you will not be able to test features relate with validating/mutating webhooks in this way.\n\n## Run VelaUX Locally\nVelaUX is the UI console of KubeVela, it's also an addon including apiserver code in `kubevela` repo and the frontend code in `velaux` repo.\n\nBefore start, please make sure you have already started the vela controller environment in kubevela repo directory.\n\n```bash\nmake run-apiserver\n```\n\nBy default, the apiserver will be serving at \"0.0.0.0:8000\".\n\nGet the VelaUX code by:\n\n```bash\ngit clone git@github.com:kubevela/velaux.git\n```\n\nConfigure the apiserver address:\n\n```bash\ncd velaux\necho \"BASE_DOMAIN='http://127.0.0.1:8000'\" > .env\n```\n\nMake sure you have installed [yarn](https://classic.yarnpkg.com/en/docs/install).\n\n```bash\nyarn install\nyarn start\n```\n\nTo execute the e2e test of the API module, the mongodb service needs to exist locally.\n\n```bash\n# save your config\nmv ~/.kube/config  ~/.kube/config.save\n\nkind create cluster --image kindest/node:v1.20.7@sha256:688fba5ce6b825be62a7c7fe1415b35da2bdfbb5a69227c499ea4cc0008661ca --name worker\nkind get kubeconfig --name worker --internal > /tmp/worker.kubeconfig\nkind get kubeconfig --name worker > /tmp/worker.client.kubeconfig\n\n# restore your config\nmv ~/.kube/config.save  ~/.kube/config\n\nmake e2e-apiserver-test\n```\n\n## Create a pull request\nWe're excited that you're considering making a contribution to the KubeVela project!\nThis document guides you through the process of creating a [pull request](https://help.github.com/en/articles/about-pull-requests/).\n\n### Before you begin\n\nWe know you're excited to create your first pull request. Before we get started, make sure your code follows the relevant [code conventions](https://kubevela.io/docs/contributor/code-conventions/).\n\n### Your first pull request\n\nBefore you submit a PR, run this command to ensure it is ready:\n\n```bash\nmake reviewable\n```\n\nIf this is your first time contributing to an open-source project on GitHub, make sure you read about [Creating a pull request](https://help.github.com/en/articles/creating-a-pull-request).\n\nTo increase the chance of having your pull request accepted, make sure your pull request follows these guidelines:\n\n- Title and description matches the implementation.\n- Commits within the pull request follow the [Formatting guidelines](https://kubevela.io/docs/contributor/code-contribute/#Formatting-guidelines).\n- The pull request closes one related issue.\n- The pull request contains necessary tests that verify the intended behavior.\n- If your pull request has conflicts, rebase your branch onto the main branch.\n\nIf the pull request fixes a bug:\n\n- The pull request description must include `Closes #<issue number>` or `Fixes #<issue number>`.\n- To avoid regressions, the pull request should include tests that replicate the fixed bug.\n- Generally, we will maintain the last 2 releases for bugfix. You should add `backport release-x.x` label or comment `/backport release-x.y` for the releases contained the bug, github bot will automatically backport this PR to the specified release branch after PR merged. If there're any conflicts, you should cherry-pick it manually.\n\n## Code review\nOnce you've created a pull request, the next step is to have someone review your change.\nA review is a learning opportunity for both the reviewer and the author of the pull request.\n\nIf you think a specific person needs to review your pull request, then you can tag them in the description or in a comment.\nTag a user by typing the `@` symbol followed by their GitHub username.\n\nWe recommend that you read [How to do a code review](https://google.github.io/eng-practices/review/reviewer/) to learn more about code reviews.\n\n## Formatting guidelines\nA well-written pull request minimizes the time to get your change accepted.\nThese guidelines help you write good commit messages and descriptions for your pull requests.\n\n### Commit message format\n\nKubeVela follows the [conventional-commits](https://www.conventionalcommits.org/en/v1.0.0/) and [commit messages best practices](https://chris.beams.io/posts/git-commit/) to improve better history information.\nThe commit message should be structured as follows:\n\n```bash\n<type>[optional scope]: <subject>\n\n[optional body]\n```\n\n#### Examples:\n\nCommit message with scope:\n\n```bash\nFeat(lang): add polish language\n```\n\nCommit message with no body:\n\n```bash\nDocs: correct spelling of CHANGELOG\n```\n\nCommit message with multi-paragraph body:\n\n```bash\nFix: correct minor typos in code\n\nsee the issue for details\n\non typos fixed.\n\nReviewed-by: Z\nRefs #133\n```\n\n#### `<type>` (required)\n\nType is required to better capture the area of the commit, based on the [Angular convention](https://github.com/angular/angular/blob/22b96b9/CONTRIBUTING.md#-commit-message-guidelines).\nWe capitalize the `<type>` to make sure the subject line is capitalized. `<type>` can be one of the following:\n\n- **Feat**: A new feature\n- **Fix**: A bug fix\n- **Docs**: Documentation only changes\n- **Build**: Changes that affect the build system or external dependencies\n- **Style**: Changes that do not affect the meaning of the code (white-space, formatting, missing semi-colons, etc)\n- **Refactor**: A code change that neither fixes a bug nor adds a feature\n- **Perf**: A code change that improves performance\n- **Test**: Adding missing or correcting existing tests\n- **Chore**: Changes to the build process or auxiliary tools and libraries such as documentation generation\n\n#### `<scope>` (optional)\n\nScope is optional, it may be provided to a commit’s type, to provide additional contextual information and is contained within parenthesis, it is could be anything specifying place of the commit change. Github issue link is also a valid scope. For example: Fix(cli), Feat(api), Fix(#233), etc.\n\nYou can use `*` when the change affects more than a single scope.\n\n#### `<subject>` (required)\n\nThe subject MUST immediately follow the colon and space after the type/scope prefix. The description is a short summary of the code changes, e.g., \"Fix: array parsing issue when multiple spaces were contained in string\", instead of \"Fix: bug\".\n\n#### `<body>` (optional)\n\nA longer commit body may be provided after the short subject, providing additional contextual information about the code changes. The body MUST begin one blank line after the description.\n\n#### Area\n\nThe area should use upper camel case, e.g. UpperCamelCase.\nPrefer using one of the following areas:\n\n- **Application:** Changes to the application controller.\n- **Component:** Changes to the component related code or definition controller.\n- **Trait:** Changes to the trait related code or definition controller.\n- **CUE:** Changes to the CUE related logic.\n- **Docs:** Changes to documentation.\n\n**Examples**\n\n- `Application: Support workflow in application controller`\n- `CUE: Fix patch parse issues`\n- `Docs: Changed url to URL in all documentation files`\n\n## Pull request titles\nThe KubeVela team _squashes_ all commits into one when we accept a pull request.\nThe title of the pull request becomes the subject line of the squashed commit message.\nWe still encourage contributors to write informative commit messages, as they become a part of the Git commit body.\n\nWe use the pull request title when we generate change logs for releases. As such, we strive to make the title as informative as possible.\n\nMake sure that the title for your pull request uses the same format as the subject line in the commit message. If the format is not followed, we will add a label `title-needs-formatting` on the pull request.\n\n## Pass all the CI checks\nBefore merge, All test CI should pass green.\n\n- The `codecov/project` should also pass. This means the coverage should not drop. Currently, the coverage of the Pull Request should have at least 70%.\n\n- KubeVela uses [DCO](https://wiki.linuxfoundation.org/dco) for contributor agreements. It requires you to sign-off every commit before the pull request being merged.\n\n  - Git provides a convenient flag `-s` in your commit command to sign-off automatically:\n\n    ```bash\n    git commit -s -m 'This is my commit message'\n    ```\n\n  - Contributors can also sign-off manually by adding a `Signed-off-by` line to commit messages as the following format, make sure the email matches your github account or the check bot won't pass.\n\n    ```bash\n    This is my commit message\n\n    Signed-off-by: Random Developer <random@developer.example.org>\n    ```\n\n## Update the docs & website\nIf your pull request merged and this is a new feature or enhancement, it's necessary to update the docs and send a pull request to [kubevela.io](https://github.com/kubevela/kubevela.io) repo.\n\nLearn how to write the docs by the following guide:\n\n- [kubevela.io Developer Guide](https://github.com/kubevela/kubevela.io/blob/main/README.md)\n- [Update KubeVela.io CLI Reference Doc](https://kubevela.io/docs/contributor/cli-ref-doc/)\n", "metadata": {"source_url": "https://kubevela.io/docs/contributor/code-contribute", "title": "KubeVela Code Contribution Guide", "description": "This document provides guidelines for contributing to the KubeVela project, including how to run KubeVela locally, create pull requests, and follow formatting guidelines.", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-02-28 16:56:40", "type": "overview", "page_metadata": {"favicon": "https://kubevela.io/img/favicons/favicon.ico", "docsearch:language": "en", "docsearch:docusaurus_tag": "docs-default-v1.10", "language": "en", "description": "You will learn the following things in the code contribution guide:", "theme-color": "#ffffff", "viewport": "width=device-width, initial-scale=1.0", "ogTitle": "Code Contribution Guide | KubeVela", "ogDescription": "You will learn the following things in the code contribution guide:", "twitter:card": "summary_large_image", "docusaurus_locale": "en", "og:title": "Code Contribution Guide | KubeVela", "msapplication-config": "/img/favicons/browserconfig.xml", "og:description": "You will learn the following things in the code contribution guide:", "docusaurus_version": "v1.10", "generator": "Docusaurus v2.4.3", "ogUrl": "https://kubevela.io/docs/contributor/code-contribute/", "og:url": "https://kubevela.io/docs/contributor/code-contribute/", "docsearch:version": "v1.10", "title": "Code Contribution Guide | KubeVela", "docusaurus_tag": "docs-default-v1.10", "scrapeId": "b06bcef5-7f31-4fc0-ae86-0c9bc2c0ca8e", "sourceURL": "https://kubevela.io/docs/contributor/code-contribute", "url": "https://kubevela.io/docs/contributor/code-contribute/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"KubeVela Code Contribution Guide\"?\n\nAssistant: Here are some code examples:\n\n### Install Golang\n```yaml\nwget https://go.dev/dl/go1.20.2.linux-amd64.tar.gz\ntar xzf go1.20.2.linux-amd64.tar.gz\n```\n\n### Set environment variables for Golang\n```yaml\nexport PATH=~/go/bin/:$PATH\nexport GOROOT=~/go/\nexport GOPATH=~/gopath/\n```\n\n### Configure GOPROXY\n```yaml\ngo env -w GOPROXY=https://goproxy.cn,direct\n```\n\n### Install golangci-lint manually\n```yaml\ncd ~/go/ && curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s v1.49.0\n```\n\n### Install kustomize manually\n```yaml\ncurl -s \"https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh\"  | bash\n```\n\n### Move kustomize binary\n```yaml\nmv kustomize ~/kubevela/bin/\n```\n\n### Install ginkgo\n```yaml\ngo install github.com/onsi/ginkgo/v2/ginkgo@latest\n```\n\n### Clone KubeVela project\n```yaml\ngit clone git@github.com:kubevela/kubevela.git\n```\n\n### Build Vela CLI\n```yaml\nmake\n```\n\n### Configure vela binary to System PATH\n```yaml\nexport PATH=$PATH:/your/path/to/project/kubevela/bin\n```\n\n### Build Vela Core\n```yaml\nmake manager\n```\n\n### Run Vela Core\n```yaml\nmake core-install\n```\n\n### Run locally\n```yaml\nmake core-run\n```\n\n### Run unit test\n```yaml\nmake test\n```\n\n### Run integration and E2E test\n```yaml\nmake e2e-test\n```\n\n### Scale kubevela-vela-core\n```yaml\nkubectl scale deploy -n vela-system kubevela-vela-core --replicas=0\n```\n\n### Delete WebhookConfiguration\n```yaml\nkubectl delete ValidatingWebhookConfiguration kubevela-vela-core-admission -n vela-system\nkubectl delete MutatingWebhookConfiguration kubevela-vela-core-admission -n vela-system\n```\n\n### Run VelaUX\n```yaml\nmake run-apiserver\n```\n\n### Clone VelaUX project\n```yaml\ngit clone git@github.com:kubevela/velaux.git\n```\n\n### Configure apiserver address\n```yaml\ncd velaux\necho \"BASE_DOMAIN='http://127.0.0.1:8000'\" > .env\n```\n\n### Run e2e test of API module\n```yaml\nmake e2e-apiserver-test\n```\n\n### Run reviewable\n```yaml\nmake reviewable\n```\n\n### Check helm list\n```yaml\nhelm list -A\n```\n\n### Uninstall kubevela\n```yaml\nhelm uninstall -n vela-system kubevela\n```\n\n### Install goimports\n```yaml\ngo install golang.org/x/tools/cmd/goimports@latest\n```\n\n### Sign-off commit\n```yaml\ngit commit -s -m 'This is my commit message'\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/contributor/code-contribute", "title": "KubeVela Code Contribution Guide", "description": "This document provides guidelines for contributing to the KubeVela project, including how to run KubeVela locally, create pull requests, and follow formatting guidelines.", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-02-28 16:56:40", "type": "code_examples", "page_metadata": {"favicon": "https://kubevela.io/img/favicons/favicon.ico", "docsearch:language": "en", "docsearch:docusaurus_tag": "docs-default-v1.10", "language": "en", "description": "You will learn the following things in the code contribution guide:", "theme-color": "#ffffff", "viewport": "width=device-width, initial-scale=1.0", "ogTitle": "Code Contribution Guide | KubeVela", "ogDescription": "You will learn the following things in the code contribution guide:", "twitter:card": "summary_large_image", "docusaurus_locale": "en", "og:title": "Code Contribution Guide | KubeVela", "msapplication-config": "/img/favicons/browserconfig.xml", "og:description": "You will learn the following things in the code contribution guide:", "docusaurus_version": "v1.10", "generator": "Docusaurus v2.4.3", "ogUrl": "https://kubevela.io/docs/contributor/code-contribute/", "og:url": "https://kubevela.io/docs/contributor/code-contribute/", "docsearch:version": "v1.10", "title": "Code Contribution Guide | KubeVela", "docusaurus_tag": "docs-default-v1.10", "scrapeId": "b06bcef5-7f31-4fc0-ae86-0c9bc2c0ca8e", "sourceURL": "https://kubevela.io/docs/contributor/code-contribute", "url": "https://kubevela.io/docs/contributor/code-contribute/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela Code Contribution Guide\"?\n\nAssistant: Here are the recommended best practices:\n\n• Make sure your code follows the relevant code conventions before creating a pull request.\n• To increase the chance of having your pull request accepted, ensure it follows the guidelines provided in the document.\n• If your pull request fixes a bug, include necessary tests that replicate the fixed bug and mention the issue number in the description.\n• Before merging, ensure all test CI checks pass and the coverage of the Pull Request is at least 70%.\n• If your pull request introduces a new feature or enhancement, update the documentation accordingly.\n", "metadata": {"source_url": "https://kubevela.io/docs/contributor/code-contribute", "title": "KubeVela Code Contribution Guide", "description": "This document provides guidelines for contributing to the KubeVela project, including how to run KubeVela locally, create pull requests, and follow formatting guidelines.", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-02-28 16:56:40", "type": "best_practices", "page_metadata": {"favicon": "https://kubevela.io/img/favicons/favicon.ico", "docsearch:language": "en", "docsearch:docusaurus_tag": "docs-default-v1.10", "language": "en", "description": "You will learn the following things in the code contribution guide:", "theme-color": "#ffffff", "viewport": "width=device-width, initial-scale=1.0", "ogTitle": "Code Contribution Guide | KubeVela", "ogDescription": "You will learn the following things in the code contribution guide:", "twitter:card": "summary_large_image", "docusaurus_locale": "en", "og:title": "Code Contribution Guide | KubeVela", "msapplication-config": "/img/favicons/browserconfig.xml", "og:description": "You will learn the following things in the code contribution guide:", "docusaurus_version": "v1.10", "generator": "Docusaurus v2.4.3", "ogUrl": "https://kubevela.io/docs/contributor/code-contribute/", "og:url": "https://kubevela.io/docs/contributor/code-contribute/", "docsearch:version": "v1.10", "title": "Code Contribution Guide | KubeVela", "docusaurus_tag": "docs-default-v1.10", "scrapeId": "b06bcef5-7f31-4fc0-ae86-0c9bc2c0ca8e", "sourceURL": "https://kubevela.io/docs/contributor/code-contribute", "url": "https://kubevela.io/docs/contributor/code-contribute/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela Rollout Addon\"?\n\nAssistant: This page introduces how to use Rollout Trait to perform a rolling update on Component.\n\nHere's a detailed explanation:\n\n\n## How to\nThis section will introduce how to use Rollout Trait to perform a rolling update on Component.\n\nThe component supported for rollout is:\n\n- webservice\n- worker\n\n## Enable the rollout addon\nBefore using this trait you must enable the `rollout` addon by this command.\n\n```bash\nvela addon enable rollout\n```\n\n## First Deployment\nApply the Application YAML below which includes a webservice-type workload with Rollout Trait, and control version of component name to be express-server-v1.\n\n```bash\ncat <<EOF | vela up -f -\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: rollout-trait-test\nspec:\n  components:\n    - name: express-server\n      type: webservice\n      externalRevision: express-server-v1\n      properties:\n        image: stefanprodan/podinfo:4.0.3\n      traits:\n        - type: rollout\n          properties:\n            targetSize: 5\n            rolloutBatches:\n              - replicas: 2\n              - replicas: 3\nEOF\n```\n\nThis Rollout Trait has target size of 5 and two rollout batches. The first batch has 2 replicas and second batch has 3. Only after all replicas in the first batch are ready, it will start to rollout the second batch.\n\nCheck the Application status whether the rollout is successful:\n\n```bash\n$ vela status rollout-trait-test\nAbout:\n\n  Name:         rollout-trait-test\n  Namespace:    default\n  Created at:   2022-01-12 20:29:50 +0800 CST\n  Status:       running\n\nWorkflow:\n\n  mode: DAG\n  finished: true\n  Suspend: false\n  Terminated: false\n  Steps\n  - id:6pnibgonga\n    name:express-server\n    type:apply-component\n    phase:succeeded\n    message:\n\nServices:\n\n  - Name: express-server  Env:\n    Type: webservice\n    healthy Ready:5/5\n    Traits:\n      - ✅ rollout: rolloutSucceed\n```\n\n## Rollout Update\nApply the YAML below to modify the image of the container. It will generate a new ControllerRevision.\n\n```bash\ncat <<EOF | vela up -f -\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: rollout-trait-test\nspec:\n  components:\n    - name: express-server\n      type: webservice\n      externalRevision: express-server-v2\n      properties:\n        image: stefanprodan/podinfo:5.0.2\n      traits:\n        - type: rollout\n          properties:\n            targetSize: 5\n            batchPartition: 0\n            rolloutBatches:\n              - replicas: 2\n              - replicas: 3\nEOF\n```\n\nThis Rollout Trait represents the target size of replicas is 5 and update will be performed in 2 batches. The first batch will update 2 replicas and the second batch will update 3 replicas. Only 2 replicas in first batch will be updated by setting `batchPartition` to 0.\n\n## Rollback\nApply the YAML below to make controllerRevision roll back to express-server-v1 by assigning `targetRevision` field to express-server-v1 in Rollout Trait.\n\n```bash\ncat <<EOF | vela up -f -\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: rollout-trait-test\nspec:\n  components:\n    - name: express-server\n      type: webservice\n      externalRevision: express-server-v2\n      properties:\n        image: stefanprodan/podinfo:5.0.2\n      traits:\n        - type: rollout\n          properties:\n            targetRevision: express-server-v1\n            targetSize: 5\n            rolloutBatches:\n              - replicas: 2\n              - replicas: 3\nEOF\n```\n\n## Scale up\nRollout Trait also be able to scale up a Workload, apply the YAML below to modify the `targetSize`, in order to increase the number of replicas from 5 to 7.\n\n```bash\ncat <<EOF | vela up -f -\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: rollout-trait-test\nspec:\n  components:\n    - name: express-server\n      type: webservice\n      externalRevision: express-server-v2\n      properties:\n        image: stefanprodan/podinfo:5.0.2\n      traits:\n        - type: rollout\n          properties:\n            targetRevision: express-server-v1\n            targetSize: 7\nEOF\n```\n\n## Scale down\nApply the YAML below to scale down the size of replicas from 7 to 3.\n\n```bash\ncat <<EOF | vela up -f -\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: rollout-trait-test\nspec:\n  components:\n    - name: express-server\n      type: webservice\n      externalRevision: express-server-v2\n      properties:\n        image: stefanprodan/podinfo:5.0.2\n      traits:\n        - type: rollout\n          properties:\n            targetRevision: express-server-v1\n            targetSize: 5\nEOF\n```\n\n## Rollout cloneset type Workload\nYou need to enable kruise addon。\n\n```bash\n$ vela addon enable kruise\n```\n\nCheck types of components.\n\n```bash\n$ vela components\nNAME                NAMESPACE        WORKLOAD                        DESCRIPTION\ncloneset           vela-system     clonesets.apps.kruise.io\n```\n\nApply the YAML below to create an Application, this Application includes a Workload of type cloneset with a Rollout Trait.\n\n```bash\ncat <<EOF | vela up -f -\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: rollout-trait-test-cloneset\nspec:\n  components:\n    - name: cloneset-server\n      type: cloneset\n      externalRevision: cloneset-server-v1\n      properties:\n        image: stefanprodan/podinfo:4.0.3\n      traits:\n        - type: rollout\n          properties:\n            targetSize: 5\n            rolloutBatches:\n              - replicas: 2\n              - replicas: 3\nEOF\n```\n\n## Supported workload type\nRollout Trait supports following workload types: webservice,worker and cloneset.\n\nWhen using webservice/worker as Workload type with Rollout Trait, Workload's name will be controllerRevision's name. And when Workload's type is cloneset, because of clonset support in-place update Workload's name will always be component's name.\n", "metadata": {"source_url": "https://kubevela.io/docs/reference/addons/rollout", "title": "KubeVela Rollout Addon", "description": "This page introduces how to use Rollout Trait to perform a rolling update on Component.", "has_code_examples": true, "has_best_practices": true, "section_count": 9, "timestamp": "2025-02-28 16:57:09", "type": "overview", "page_metadata": {"ogUrl": "https://kubevela.io/docs/reference/addons/rollout/", "ogTitle": "Rollout | KubeVela", "ogDescription": "This section will introduce how to use Rollout Trait to perform a rolling update on Component.", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "twitter:card": "summary_large_image", "docsearch:version": "v1.10", "theme-color": "#ffffff", "msapplication-config": "/img/favicons/browserconfig.xml", "language": "en", "generator": "Docusaurus v2.4.3", "docusaurus_locale": "en", "docusaurus_version": "v1.10", "og:description": "This section will introduce how to use Rollout Trait to perform a rolling update on Component.", "viewport": "width=device-width, initial-scale=1.0", "description": "This section will introduce how to use Rollout Trait to perform a rolling update on Component.", "docusaurus_tag": "docs-default-v1.10", "docsearch:language": "en", "docsearch:docusaurus_tag": "docs-default-v1.10", "title": "Rollout | KubeVela", "og:url": "https://kubevela.io/docs/reference/addons/rollout/", "og:title": "Rollout | KubeVela", "scrapeId": "23df8135-bb02-433b-9289-49a0514f7a58", "sourceURL": "https://kubevela.io/docs/reference/addons/rollout", "url": "https://kubevela.io/docs/reference/addons/rollout/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"KubeVela Rollout Addon\"?\n\nAssistant: Here are some code examples:\n\n### Enable the rollout addon\n```yaml\nvela addon enable rollout\n```\n\n### First Deployment\n```yaml\ncat <<EOF | vela up -f -\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: rollout-trait-test\nspec:\n  components:\n    - name: express-server\n      type: webservice\n      externalRevision: express-server-v1\n      properties:\n        image: stefanprodan/podinfo:4.0.3\n      traits:\n        - type: rollout\n          properties:\n            targetSize: 5\n            rolloutBatches:\n              - replicas: 2\n              - replicas: 3\nEOF\n```\n\n### Check Application status\n```yaml\n$ vela status rollout-trait-test\nAbout:\n\n  Name:         rollout-trait-test\n  Namespace:    default\n  Created at:   2022-01-12 20:29:50 +0800 CST\n  Status:       running\n\nWorkflow:\n\n  mode: DAG\n  finished: true\n  Suspend: false\n  Terminated: false\n  Steps\n  - id:6pnibgonga\n    name:express-server\n    type:apply-component\n    phase:succeeded\n    message:\n\nServices:\n\n  - Name: express-server  Env:\n    Type: webservice\n    healthy Ready:5/5\n    Traits:\n      - ✅ rollout: rolloutSucceed\n\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/reference/addons/rollout", "title": "KubeVela Rollout Addon", "description": "This page introduces how to use Rollout Trait to perform a rolling update on Component.", "has_code_examples": true, "has_best_practices": true, "section_count": 9, "timestamp": "2025-02-28 16:57:09", "type": "code_examples", "page_metadata": {"ogUrl": "https://kubevela.io/docs/reference/addons/rollout/", "ogTitle": "Rollout | KubeVela", "ogDescription": "This section will introduce how to use Rollout Trait to perform a rolling update on Component.", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "twitter:card": "summary_large_image", "docsearch:version": "v1.10", "theme-color": "#ffffff", "msapplication-config": "/img/favicons/browserconfig.xml", "language": "en", "generator": "Docusaurus v2.4.3", "docusaurus_locale": "en", "docusaurus_version": "v1.10", "og:description": "This section will introduce how to use Rollout Trait to perform a rolling update on Component.", "viewport": "width=device-width, initial-scale=1.0", "description": "This section will introduce how to use Rollout Trait to perform a rolling update on Component.", "docusaurus_tag": "docs-default-v1.10", "docsearch:language": "en", "docsearch:docusaurus_tag": "docs-default-v1.10", "title": "Rollout | KubeVela", "og:url": "https://kubevela.io/docs/reference/addons/rollout/", "og:title": "Rollout | KubeVela", "scrapeId": "23df8135-bb02-433b-9289-49a0514f7a58", "sourceURL": "https://kubevela.io/docs/reference/addons/rollout", "url": "https://kubevela.io/docs/reference/addons/rollout/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela Rollout Addon\"?\n\nAssistant: Here are the recommended best practices:\n\n• A known issue exists if you scale up/down the workload twice or more times by not setting the `rolloutBatches`. So please set the `rolloutBatches` when scale up/down.\n", "metadata": {"source_url": "https://kubevela.io/docs/reference/addons/rollout", "title": "KubeVela Rollout Addon", "description": "This page introduces how to use Rollout Trait to perform a rolling update on Component.", "has_code_examples": true, "has_best_practices": true, "section_count": 9, "timestamp": "2025-02-28 16:57:09", "type": "best_practices", "page_metadata": {"ogUrl": "https://kubevela.io/docs/reference/addons/rollout/", "ogTitle": "Rollout | KubeVela", "ogDescription": "This section will introduce how to use Rollout Trait to perform a rolling update on Component.", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "twitter:card": "summary_large_image", "docsearch:version": "v1.10", "theme-color": "#ffffff", "msapplication-config": "/img/favicons/browserconfig.xml", "language": "en", "generator": "Docusaurus v2.4.3", "docusaurus_locale": "en", "docusaurus_version": "v1.10", "og:description": "This section will introduce how to use Rollout Trait to perform a rolling update on Component.", "viewport": "width=device-width, initial-scale=1.0", "description": "This section will introduce how to use Rollout Trait to perform a rolling update on Component.", "docusaurus_tag": "docs-default-v1.10", "docsearch:language": "en", "docsearch:docusaurus_tag": "docs-default-v1.10", "title": "Rollout | KubeVela", "og:url": "https://kubevela.io/docs/reference/addons/rollout/", "og:title": "Rollout | KubeVela", "scrapeId": "23df8135-bb02-433b-9289-49a0514f7a58", "sourceURL": "https://kubevela.io/docs/reference/addons/rollout", "url": "https://kubevela.io/docs/reference/addons/rollout/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"Dry Run\"?\n\nAssistant: This page covers the dry run feature in KubeVela, which allows users to check the correctness of application configurations and definitions before deployment.\n\nHere's a detailed explanation:\n\n\n## Introduction\nThe dry run feature is a very useful way to check the correctness of the application configuration and definitions. It will render the application and print the output resources that checked on the service side. If the definitions(component, trait) is invalid, the dry run will print the error message.\n\nWhen you do the following things, you'd better use `dry-run`.\n\n- Create or update an application.\n- Create or update the definition, and dry run some example applications.\n\n## Dry run via CLI\nThere is a simple application:\n\n```codeBlockLines_e6Vv\nkind: Application\napiVersion: core.oam.dev/v1beta1\nmetadata:\n  name: webservice-app\nspec:\n  components:\n    - name: frontend\n      type: webservice\n      properties:\n        image: oamdev/testapp:v1\n        cmd: [\"node\", \"server.js\"]\n        ports:\n          - port: 8080\n            expose: true\n      traits:\n        - type: scaler\n          properties:\n            replicas: 1\n```\n\nCopy it and write a file `app.yaml`, execute the following command, and then the resources will be printed.\n\n```codeBlockLines_e6Vv\nvela dry-run app.yaml\n```\n\nexpected output\n\n```codeBlockLines_e6Vv\n---\n# Application(webservice-app) -- Component(frontend)\n---\n\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations: {}\n  labels:\n    app.oam.dev/appRevision: \"\"\n    app.oam.dev/component: frontend\n    app.oam.dev/name: webservice-app\n    app.oam.dev/namespace: default\n    app.oam.dev/resourceType: WORKLOAD\n    workload.oam.dev/type: webservice\n  name: frontend\n  namespace: default\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app.oam.dev/component: frontend\n  template:\n    metadata:\n      labels:\n        app.oam.dev/component: frontend\n        app.oam.dev/name: webservice-app\n    spec:\n      containers:\n      - command:\n        - node\n        - server.js\n        image: oamdev/testapp:v1\n        name: frontend\n        ports:\n        - containerPort: 8080\n          name: port-8080\n          protocol: TCP\n\n---\n## From the auxiliary workload\napiVersion: v1\nkind: Service\nmetadata:\n  annotations: {}\n  labels:\n    app.oam.dev/appRevision: \"\"\n    app.oam.dev/component: frontend\n    app.oam.dev/name: webservice-app\n    app.oam.dev/namespace: default\n    app.oam.dev/resourceType: TRAIT\n    trait.oam.dev/resource: webserviceExpose\n    trait.oam.dev/type: AuxiliaryWorkload\n  name: frontend\n  namespace: default\nspec:\n  ports:\n  - name: port-8080\n    port: 8080\n    targetPort: 8080\n  selector:\n    app.oam.dev/component: frontend\n  type: ClusterIP\n---\n```\n\nIf we set the expose field of the port as false, the output resources do not include the `Service`. If we set the replicas field as \"1\", the output will be an error message:\n\n```codeBlockLines_e6Vv\nError: validate application: ./app.yaml by dry-run: admission webhook \"validating.core.oam.dev.v1beta1.applications\" denied the request: field \"schematic\": Invalid value error encountered, cannot evaluate trait \"scaler\": invalid template of trait scaler after merge with parameter and context: parameter.replicas: conflicting values (*1 | int) and \"1\" (mismatched types int and string) (and 1 more errors).\n```\n\nThis means the replicas field is int type but we provide a string value, this application configuration is not valid.\n\n## Dry run with policy and workflow via CLI\ntip\n\nOverride/topology Policies and deploy workflow are supported in v1.7.0+ now. While there're still some limitation that `dry-run` with policy and workflow will only take `override`, `topology` policies and `deploy` workflow step into considerations. Other workflow steps will be ignored.\n\nLet's take the following application as example, the application explicitly specify `override`, `topology` policies and `deploy` workflow step.\n\n```codeBlockLines_e6Vv\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: first-vela-app\nspec:\n  components:\n    - name: express-server\n      type: webservice\n      properties:\n        image: oamdev/hello-world\n        ports:\n         - port: 8000\n           expose: true\n      traits:\n        - type: scaler\n          properties:\n            replicas: 1\n  policies:\n    - name: target-default\n      type: topology\n      properties:\n        clusters: [\"local\"]\n        namespace: \"default\"\n    - name: target-prod\n      type: topology\n      properties:\n        clusters: [\"local\"]\n        namespace: \"prod\"\n    - name: deploy-ha\n      type: override\n      properties:\n        components:\n          - type: webservice\n            traits:\n              - type: scaler\n                properties:\n                  replicas: 5\n  workflow:\n    steps:\n      - name: deploy2default\n        type: deploy\n        properties:\n          policies: [\"target-default\"]\n      - name: manual-approval\n        type: suspend\n      - name: deploy2prod\n        type: deploy\n        properties:\n          policies: [\"target-prod\", \"deploy-ha\"]\n```\n\nDry run will produce rendered results for both `deploy2default` and `deploy2prod` deploy steps as below:\n\nexpected output\n\n```codeBlockLines_e6Vv\n---\n# Application(first-vela-app with topology target-default) -- Component(express-server)\n---\n\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations: {}\n  labels:\n    app.oam.dev/appRevision: \"\"\n    app.oam.dev/component: express-server\n    app.oam.dev/name: first-vela-app\n    app.oam.dev/namespace: default\n    app.oam.dev/resourceType: WORKLOAD\n    workload.oam.dev/type: webservice\n  name: express-server\n  namespace: default\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app.oam.dev/component: express-server\n  template:\n    metadata:\n      labels:\n        app.oam.dev/component: express-server\n        app.oam.dev/name: first-vela-app\n    spec:\n      containers:\n      - image: oamdev/hello-world\n        name: express-server\n        ports:\n        - containerPort: 8000\n          name: port-8000\n          protocol: TCP\n\n---\n## From the auxiliary workload\napiVersion: v1\nkind: Service\nmetadata:\n  annotations: {}\n  labels:\n    app.oam.dev/appRevision: \"\"\n    app.oam.dev/component: express-server\n    app.oam.dev/name: first-vela-app\n    app.oam.dev/namespace: default\n    app.oam.dev/resourceType: TRAIT\n    trait.oam.dev/resource: webserviceExpose\n    trait.oam.dev/type: AuxiliaryWorkload\n  name: express-server\n  namespace: default\nspec:\n  ports:\n  - name: port-8000\n    port: 8000\n    targetPort: 8000\n  selector:\n    app.oam.dev/component: express-server\n  type: ClusterIP\n---\n\n---\n# Application(first-vela-app with topology target-prod) -- Component(express-server)\n---\n\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations: {}\n  labels:\n    app.oam.dev/appRevision: \"\"\n    app.oam.dev/component: express-server\n    app.oam.dev/name: first-vela-app\n    app.oam.dev/namespace: default\n    app.oam.dev/resourceType: WORKLOAD\n    workload.oam.dev/type: webservice\n  name: express-server\n  namespace: default\nspec:\n  replicas: 5\n  selector:\n    matchLabels:\n      app.oam.dev/component: express-server\n  template:\n    metadata:\n      labels:\n        app.oam.dev/component: express-server\n        app.oam.dev/name: first-vela-app\n    spec:\n      containers:\n      - image: oamdev/hello-world\n        name: express-server\n        ports:\n        - containerPort: 8000\n          name: port-8000\n          protocol: TCP\n\n---\n## From the auxiliary workload\napiVersion: v1\nkind: Service\nmetadata:\n  annotations: {}\n  labels:\n    app.oam.dev/appRevision: \"\"\n    app.oam.dev/component: express-server\n    app.oam.dev/name: first-vela-app\n    app.oam.dev/namespace: default\n    app.oam.dev/resourceType: TRAIT\n    trait.oam.dev/resource: webserviceExpose\n    trait.oam.dev/type: AuxiliaryWorkload\n  name: express-server\n  namespace: default\nspec:\n  ports:\n  - name: port-8000\n    port: 8000\n    targetPort: 8000\n  selector:\n    app.oam.dev/component: express-server\n  type: ClusterIP\n---\n```\n\nEach deploy workflow step with topology policy will render individual result.\nIt can be a bit redundant for you as you may just need to dry run for one environment at a time. The, you can use the external workflow feature like below.\nFirstly, define policy and workflow as below in individual files:\n\n- The `target-prod.yaml` and `ha.yaml` corresponding to the `production` environment.\n\n```codeBlockLines_e6Vv\n# target-prod.yaml\napiVersion: core.oam.dev/v1alpha1\nkind: Policy\nmetadata:\n    name: target-prod\ntype: topology\nproperties:\n    clusters: [\"local\"]\n    namespace: \"prod\"\n```\n\n```codeBlockLines_e6Vv\n# ha.yaml\napiVersion: core.oam.dev/v1alpha1\nkind: Policy\nmetadata:\n    name: ha\ntype: override\nproperties:\n    components:\n  - type: webservice\n    traits:\n    - type: scaler\n      properties:\n        replicas: 5\n```\n\n- The `prod-workflow.yaml` can glue them together.\n\n```codeBlockLines_e6Vv\n# prod-workflow.yaml\napiVersion: core.oam.dev/v1alpha1\nkind: Workflow\nmetadata:\n    name: deploy-prod\nsteps:\n  - type: deploy\n    name: deploy-prod\n    properties:\n      policies: [\"ha\", \"target-prod\"]\n```\n\n- Then the application can reference the workflow as below.\n\n```codeBlockLines_e6Vv\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n    name: first-vela-app\nspec:\n    components:\n    - name: express-server\n      type: webservice\n      properties:\n        image: oamdev/hello-world\n        ports:\n        - port: 8000\n          expose: true\n      traits:\n        - type: scaler\n          properties:\n            replicas: 1\nworkflow:\n    ref: deploy-prod\n```\n\nThe dry run command can be:\n\n```codeBlockLines_e6Vv\nvela dry-run -f app.yaml -f target-prod.yaml -f ha.yaml -f prod-workflow.yaml\n```\n\nThen, the dry-run results will only contain resources in the `production` environment.\n\nexpected output\n\n```codeBlockLines_e6Vv\n---\n# Application(first-vela-app with topology target-prod) -- Component(express-server)\n---\n\napiVersion: apps/v1\nkind: Deployment\nmetadata:\nannotations: {}\nlabels:\n    app.oam.dev/appRevision: \"\"\n    app.oam.dev/component: express-server\n    app.oam.dev/name: first-vela-app\n    app.oam.dev/namespace: default\n    app.oam.dev/resourceType: WORKLOAD\n    workload.oam.dev/type: webservice\nname: express-server\nnamespace: default\nspec:\nreplicas: 5\nselector:\n    matchLabels:\n      app.oam.dev/component: express-server\ntemplate:\n    metadata:\n      labels:\n        app.oam.dev/component: express-server\n        app.oam.dev/name: first-vela-app\n    spec:\n      containers:\n      - image: oamdev/hello-world\n        name: express-server\n        ports:\n        - containerPort: 8000\n          name: port-8000\n          protocol: TCP\n\n---\n## From the auxiliary workload\napiVersion: v1\nkind: Service\nmetadata:\nannotations: {}\nlabels:\n    app.oam.dev/appRevision: \"\"\n    app.oam.dev/component: express-server\n    app.oam.dev/name: first-vela-app\n    app.oam.dev/namespace: default\n    app.oam.dev/resourceType: TRAIT\n    trait.oam.dev/resource: webserviceExpose\n    trait.oam.dev/type: AuxiliaryWorkload\nname: express-server\nnamespace: default\nspec:\nports:\n  - name: port-8000\n    port: 8000\n    targetPort: 8000\nselector:\n    app.oam.dev/component: express-server\ntype: ClusterIP\n---\n```\n\nMoreover, you can use `--merge` flag to merge external policies and workflow when application file is not reference to them.\nFor example, you can define the application as below, the only difference is there's no `workflow` field.\n\n```codeBlockLines_e6Vv\n# app.yaml\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\nname: first-vela-app\nspec:\ncomponents:\n    - name: express-server\n      type: webservice\n      properties:\n        image: oamdev/hello-world\n        ports:\n         - port: 8000\n           expose: true\n      traits:\n        - type: scaler\n          properties:\n            replicas: 1\n```\n\nthe workflow and policy can be defined the same way\n\n```codeBlockLines_e6Vv\n# workflow.yaml\napiVersion: core.oam.dev/v1alpha1\nkind: Workflow\nmetadata:\nname: deploy-demo\nsteps:\n  - type: deploy\n    name: deploy-prod\n    properties:\n      policies: [\"target-prod\"]\n```\n\n```codeBlockLines_e6Vv\n# target-prod.yaml\napiVersion: core.oam.dev/v1alpha1\nkind: Policy\nmetadata:\nname: target-prod\ntype: topology\nproperties:\nclusters: [\"local\"]\nnamespace: \"prod\"\n```\n\nIf you don't use `--merge` flag in this way, it will report warnings as below.\n\n```codeBlockLines_e6Vv\nvela dry-run -f app.yaml -f target-prod.yaml -f workflow.yaml\n```\n\nresult with warning messages\n\n```codeBlockLines_e6Vv\nWARNING: workflow deploy-demo not referenced by application\n\nWARNING: policy target-prod not referenced by application\n\n---\n# Application(default) -- Component(express-server)\n---\n\napiVersion: apps/v1\nkind: Deployment\nmetadata:\nannotations: {}\nlabels:\n    app.oam.dev/appRevision: \"\"\n    app.oam.dev/component: express-server\n    app.oam.dev/name: first-vela-app\n    app.oam.dev/namespace: default\n    app.oam.dev/resourceType: WORKLOAD\n    workload.oam.dev/type: webservice\nname: express-server\nnamespace: default\nspec:\nreplicas: 1\nselector:\n    matchLabels:\n      app.oam.dev/component: express-server\ntemplate:\n    metadata:\n      labels:\n        app.oam.dev/component: express-server\n        app.oam.dev/name: first-vela-app\n    spec:\n      containers:\n      - image: oamdev/hello-world\n        name: express-server\n        ports:\n        - containerPort: 8000\n          name: port-8000\n          protocol: TCP\n\n---\n## From the auxiliary workload\napiVersion: v1\nkind: Service\nmetadata:\nannotations: {}\nlabels:\n    app.oam.dev/appRevision: \"\"\n    app.oam.dev/component: express-server\n    app.oam.dev/name: first-vela-app\n    app.oam.dev/namespace: default\n    app.oam.dev/resourceType: TRAIT\n    trait.oam.dev/resource: webserviceExpose\n    trait.oam.dev/type: AuxiliaryWorkload\nname: express-server\nnamespace: default\nspec:\nports:\n  - name: port-8000\n    port: 8000\n    targetPort: 8000\nselector:\n    app.oam.dev/component: express-server\ntype: ClusterIP\n---\n```\n\nIn this case, the policy and workflow do not take effect. Because those are not referenced by the application and being viewed as standalone files and ignored.\nSo to make those external files work, please provide \"--merge\" flag as below:\n\n```codeBlockLines_e6Vv\nvela dry-run -f app.yaml -f target-prod.yaml -f workflow.yaml --merge\n```\n\nThen the application will be glued with external policies and workflows even no reference exists.\n\nexpected ouput\n\n```codeBlockLines_e6Vv\n---\n# Application(first-vela-app with topology target-prod) -- Component(express-server)\n---\n\napiVersion: apps/v1\nkind: Deployment\nmetadata:\nannotations: {}\nlabels:\n    app.oam.dev/appRevision: \"\"\n    app.oam.dev/component: express-server\n    app.oam.dev/name: first-vela-app\n    app.oam.dev/namespace: default\n    app.oam.dev/resourceType: WORKLOAD\n    workload.oam.dev/type: webservice\nname: express-server\nnamespace: default\nspec:\nreplicas: 1\nselector:\n    matchLabels:\n      app.oam.dev/component: express-server\ntemplate:\n    metadata:\n      labels:\n        app.oam.dev/component: express-server\n        app.oam.dev/name: first-vela-app\n    spec:\n      containers:\n      - image: oamdev/hello-world\n        name: express-server\n        ports:\n        - containerPort: 8000\n          name: port-8000\n          protocol: TCP\n\n---\n## From the auxiliary workload\napiVersion: v1\nkind: Service\nmetadata:\nannotations: {}\nlabels:\n    app.oam.dev/appRevision: \"\"\n    app.oam.dev/component: express-server\n    app.oam.dev/name: first-vela-app\n    app.oam.dev/namespace: default\n    app.oam.dev/resourceType: TRAIT\n    trait.oam.dev/resource: webserviceExpose\n    trait.oam.dev/type: AuxiliaryWorkload\nname: express-server\nnamespace: default\nspec:\nports:\n  - name: port-8000\n    port: 8000\n    targetPort: 8000\nselector:\n    app.oam.dev/component: express-server\ntype: ClusterIP\n---\n```\n\nYou can refer to the [Dry run command](https://kubevela.io/docs/cli/vela_dry-run/) for more command line use cases.\n\n## Dry run via UI\n![dry-run](https://static.kubevela.net/images/1.5/dry-run.jpg)\n\nClicking the `Deploy` button to open the workflow selector dialog. You could select a workflow(every workflow corresponding to an environment) and click the `DryRun` button to execute a dry run. If passed, the result is like this\n\n![dry-run-successfully](https://static.kubevela.net/images/1.5/dry-run-success.jpg)\n\nThe result report is different from the CLI, there is a complete application configuration that is generated from the application metadata, you could check it. Different environments may have different application configurations.\n", "metadata": {"source_url": "https://kubevela.io/docs/tutorials/dry-run", "title": "Dry Run", "description": "This page covers the dry run feature in KubeVela, which allows users to check the correctness of application configurations and definitions before deployment.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 17:29:07", "type": "overview", "page_metadata": {"description": "The dry run feature is a very useful way to check the correctness of the application configuration and definitions. It will render the application and print the output resources that checked on the service side. If the definitions(component, trait) is invalid, the dry run will print the error message.", "docsearch:docusaurus_tag": "docs-default-v1.10", "viewport": "width=device-width, initial-scale=1.0", "docsearch:version": "v1.10", "ogUrl": "https://kubevela.io/docs/tutorials/dry-run/", "og:url": "https://kubevela.io/docs/tutorials/dry-run/", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogDescription": "The dry run feature is a very useful way to check the correctness of the application configuration and definitions. It will render the application and print the output resources that checked on the service side. If the definitions(component, trait) is invalid, the dry run will print the error message.", "title": "Dry Run | KubeVela", "docusaurus_version": "v1.10", "docsearch:language": "en", "language": "en", "ogTitle": "Dry Run | KubeVela", "theme-color": "#ffffff", "twitter:card": "summary_large_image", "docusaurus_locale": "en", "og:title": "Dry Run | KubeVela", "og:description": "The dry run feature is a very useful way to check the correctness of the application configuration and definitions. It will render the application and print the output resources that checked on the service side. If the definitions(component, trait) is invalid, the dry run will print the error message.", "docusaurus_tag": "docs-default-v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "generator": "Docusaurus v2.4.3", "scrapeId": "aa7e7fcd-2d17-4881-893c-b3a2a59ed540", "sourceURL": "https://kubevela.io/docs/tutorials/dry-run", "url": "https://kubevela.io/docs/tutorials/dry-run/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"Dry Run\"?\n\nAssistant: Here are some code examples:\n\n### Simple Application Example\n```yaml\nkind: Application\napiVersion: core.oam.dev/v1beta1\nmetadata:\n  name: webservice-app\nspec:\n  components:\n    - name: frontend\n      type: webservice\n      properties:\n        image: oamdev/testapp:v1\n        cmd: [\"node\", \"server.js\"]\n        ports:\n          - port: 8080\n            expose: true\n      traits:\n        - type: scaler\n          properties:\n            replicas: 1\n```\n\n### Dry Run Command\n```yaml\nvela dry-run app.yaml\n```\n\n### Expected Output for Simple Application\n```yaml\n---\n# Application(webservice-app) -- Component(frontend)\n---\n\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations: {}\n  labels:\n    app.oam.dev/appRevision: \"\"\n    app.oam.dev/component: frontend\n    app.oam.dev/name: webservice-app\n    app.oam.dev/namespace: default\n    app.oam.dev/resourceType: WORKLOAD\n    workload.oam.dev/type: webservice\n  name: frontend\n  namespace: default\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app.oam.dev/component: frontend\n  template:\n    metadata:\n      labels:\n        app.oam.dev/component: frontend\n        app.oam.dev/name: webservice-app\n    spec:\n      containers:\n      - command:\n        - node\n        - server.js\n        image: oamdev/testapp:v1\n        name: frontend\n        ports:\n        - containerPort: 8080\n          name: port-8080\n          protocol: TCP\n\n---\n## From the auxiliary workload\napiVersion: v1\nkind: Service\nmetadata:\n  annotations: {}\n  labels:\n    app.oam.dev/appRevision: \"\"\n    app.oam.dev/component: frontend\n    app.oam.dev/name: webservice-app\n    app.oam.dev/namespace: default\n    app.oam.dev/resourceType: TRAIT\n    trait.oam.dev/resource: webserviceExpose\n    trait.oam.dev/type: AuxiliaryWorkload\n  name: frontend\n  namespace: default\nspec:\n  ports:\n  - name: port-8080\n    port: 8080\n    targetPort: 8080\n  selector:\n    app.oam.dev/component: frontend\n  type: ClusterIP\n---\n```\n\n### Error Message for Invalid Configuration\n```yaml\nError: validate application: ./app.yaml by dry-run: admission webhook \"validating.core.oam.dev.v1beta1.applications\" denied the request: field \"schematic\": Invalid value error encountered, cannot evaluate trait \"scaler\": invalid template of trait scaler after merge with parameter and context: parameter.replicas: conflicting values (*1 | int) and \"1\" (mismatched types int and string) (and 1 more errors).\n```\n\n### Dry Run Command with External Files\n```yaml\nvela dry-run -f app.yaml -f target-prod.yaml -f ha.yaml -f prod-workflow.yaml\n```\n\n### Dry Run Command with Merge Flag\n```yaml\nvela dry-run -f app.yaml -f target-prod.yaml -f workflow.yaml --merge\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/tutorials/dry-run", "title": "Dry Run", "description": "This page covers the dry run feature in KubeVela, which allows users to check the correctness of application configurations and definitions before deployment.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 17:29:07", "type": "code_examples", "page_metadata": {"description": "The dry run feature is a very useful way to check the correctness of the application configuration and definitions. It will render the application and print the output resources that checked on the service side. If the definitions(component, trait) is invalid, the dry run will print the error message.", "docsearch:docusaurus_tag": "docs-default-v1.10", "viewport": "width=device-width, initial-scale=1.0", "docsearch:version": "v1.10", "ogUrl": "https://kubevela.io/docs/tutorials/dry-run/", "og:url": "https://kubevela.io/docs/tutorials/dry-run/", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogDescription": "The dry run feature is a very useful way to check the correctness of the application configuration and definitions. It will render the application and print the output resources that checked on the service side. If the definitions(component, trait) is invalid, the dry run will print the error message.", "title": "Dry Run | KubeVela", "docusaurus_version": "v1.10", "docsearch:language": "en", "language": "en", "ogTitle": "Dry Run | KubeVela", "theme-color": "#ffffff", "twitter:card": "summary_large_image", "docusaurus_locale": "en", "og:title": "Dry Run | KubeVela", "og:description": "The dry run feature is a very useful way to check the correctness of the application configuration and definitions. It will render the application and print the output resources that checked on the service side. If the definitions(component, trait) is invalid, the dry run will print the error message.", "docusaurus_tag": "docs-default-v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "generator": "Docusaurus v2.4.3", "scrapeId": "aa7e7fcd-2d17-4881-893c-b3a2a59ed540", "sourceURL": "https://kubevela.io/docs/tutorials/dry-run", "url": "https://kubevela.io/docs/tutorials/dry-run/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"Dry Run\"?\n\nAssistant: Here are the recommended best practices:\n\n• Use dry-run when creating or updating an application or definition.\n• Ensure that the replicas field is of the correct type (int) to avoid validation errors.\n• Use the --merge flag to include external policies and workflows when they are not referenced in the application file.\n", "metadata": {"source_url": "https://kubevela.io/docs/tutorials/dry-run", "title": "Dry Run", "description": "This page covers the dry run feature in KubeVela, which allows users to check the correctness of application configurations and definitions before deployment.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 17:29:07", "type": "best_practices", "page_metadata": {"description": "The dry run feature is a very useful way to check the correctness of the application configuration and definitions. It will render the application and print the output resources that checked on the service side. If the definitions(component, trait) is invalid, the dry run will print the error message.", "docsearch:docusaurus_tag": "docs-default-v1.10", "viewport": "width=device-width, initial-scale=1.0", "docsearch:version": "v1.10", "ogUrl": "https://kubevela.io/docs/tutorials/dry-run/", "og:url": "https://kubevela.io/docs/tutorials/dry-run/", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "ogDescription": "The dry run feature is a very useful way to check the correctness of the application configuration and definitions. It will render the application and print the output resources that checked on the service side. If the definitions(component, trait) is invalid, the dry run will print the error message.", "title": "Dry Run | KubeVela", "docusaurus_version": "v1.10", "docsearch:language": "en", "language": "en", "ogTitle": "Dry Run | KubeVela", "theme-color": "#ffffff", "twitter:card": "summary_large_image", "docusaurus_locale": "en", "og:title": "Dry Run | KubeVela", "og:description": "The dry run feature is a very useful way to check the correctness of the application configuration and definitions. It will render the application and print the output resources that checked on the service side. If the definitions(component, trait) is invalid, the dry run will print the error message.", "docusaurus_tag": "docs-default-v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "generator": "Docusaurus v2.4.3", "scrapeId": "aa7e7fcd-2d17-4881-893c-b3a2a59ed540", "sourceURL": "https://kubevela.io/docs/tutorials/dry-run", "url": "https://kubevela.io/docs/tutorials/dry-run/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"KubeVela Rollout Trait Documentation\"?\n\nAssistant: This documentation introduces how to use Rollout Trait to perform a rolling update on Component in KubeVela.\n\nHere's a detailed explanation:\n\n\n## How to\nThis section will introduce how to use Rollout Trait to perform a rolling update on Component.\n\nThe component supported for rollout is:\n\n- webservice\n- worker\n\n## Enable the rollout addon\nBefore using this trait you must enable the `rollout` addon by this command.\n\n```codeBlockLines_e6Vv\nvela addon enable rollout\n```\n\n## First Deployment\nApply the Application YAML below which includes a webservice-type workload with Rollout Trait, and control version of component name to be express-server-v1.\n\n```codeBlockLines_e6Vv\ncat <<EOF | vela up -f -\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: rollout-trait-test\nspec:\n  components:\n    - name: express-server\n      type: webservice\n      externalRevision: express-server-v1\n      properties:\n        image: stefanprodan/podinfo:4.0.3\n      traits:\n        - type: rollout\n          properties:\n            targetSize: 5\n            rolloutBatches:\n              - replicas: 2\n              - replicas: 3\nEOF\n```\n\nThis Rollout Trait has target size of 5 and two rollout batches. The first batch has 2 replicas and second batch has 3. Only after all replicas in the first batch are ready, it will start to rollout the second batch.\n\nCheck the Application status whether the rollout is successful:\n\n```codeBlockLines_e6Vv\n$ vela status rollout-trait-test\nAbout:\n\n  Name:         rollout-trait-test\n  Namespace:    default\n  Created at:   2022-01-12 20:29:50 +0800 CST\n  Status:       running\n\nWorkflow:\n\n  mode: DAG\n  finished: true\n  Suspend: false\n  Terminated: false\n  Steps\n  - id:6pnibgonga\n    name:express-server\n    type:apply-component\n    phase:succeeded\n    message:\n\nServices:\n\n  - Name: express-server  Env:\n    Type: webservice\n    healthy Ready:5/5\n    Traits:\n      - ✅ rollout: rolloutSucceed\n```\n\nCheck the status of Rollout Trait. The rollout is successful only if `ROLLING-STATE` equals `rolloutSucceed`, and all replicas are ready only if `BATCH-STATE` equals `batchReady`. `TARGET`, `UPGRADED` and `READY` indicates target size of replicas is 5, updated number of replicas is 5 and all 5 replicas are ready.\n\n```codeBlockLines_e6Vv\n$ kubectl get rollout express-server\nNAME             TARGET   UPGRADED   READY   BATCH-STATE   ROLLING-STATE    AGE\nexpress-server   5        5          5       batchReady    rolloutSucceed   2d20h\n```\n\n## Rollout Update\nApply the YAML below to modify the image of the container. It will generate a new ControllerRevision.\n\n```codeBlockLines_e6Vv\ncat <<EOF | vela up -f -\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: rollout-trait-test\nspec:\n  components:\n    - name: express-server\n      type: webservice\n      externalRevision: express-server-v2\n      properties:\n        image: stefanprodan/podinfo:5.0.2\n      traits:\n        - type: rollout\n          properties:\n            targetSize: 5\n            batchPartition: 0\n            rolloutBatches:\n              - replicas: 2\n              - replicas: 3\nEOF\n```\n\nThis Rollout Trait represents the target size of replicas is 5 and update will be performed in 2 batches. The first batch will update 2 replicas and the second batch will update 3 replicas. Only 2 replicas in first batch will be updated by setting `batchPartition` to 0.\n\nCheck controllerRevision and there is a new controllerRevision express-server-v2.\n\n```codeBlockLines_e6Vv\n$ kubectl get controllerRevision -l controller.oam.dev/component=express-server\nNAME                CONTROLLER                                    REVISION   AGE\nexpress-server-v1   application.core.oam.dev/rollout-trait-test   1          2d22h\nexpress-server-v2   application.core.oam.dev/rollout-trait-test   2          1m\n```\n\nCheck the status of Rollout Trait after a while when first batch has been upgraded successfully. `TARGET`, `UPGREADED` and `READY` indicates the target size of replicas for this revision is 5, there are 2 replicas successfully upgraded and they are ready. batchReady means replicas in the first rolloutBatch are all ready, rollingInBatches means there are batches still yet to be upgraded.\n\n```codeBlockLines_e6Vv\n$ kubectl get rollout express-server\nNAME             TARGET   UPGRADED   READY   BATCH-STATE   ROLLING-STATE    AGE\nexpress-server   5        2          2       batchReady   rollingInBatches  2d20h\n```\n\n## Rollback\nApply the YAML below to make controllerRevision roll back to express-server-v1 by assigning `targetRevision` field to express-server-v1 in Rollout Trait.\n\n```codeBlockLines_e6Vv\ncat <<EOF | vela up -f -\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: rollout-trait-test\nspec:\n  components:\n    - name: express-server\n      type: webservice\n      externalRevision: express-server-v2\n      properties:\n        image: stefanprodan/podinfo:5.0.2\n      traits:\n        - type: rollout\n          properties:\n            targetRevision: express-server-v1\n            targetSize: 5\n            rolloutBatches:\n              - replicas: 2\n              - replicas: 3\nEOF\n```\n\nCheck Rollout Trait status after rollback has been succeed.\n\n```codeBlockLines_e6Vv\n$ kubectl get rollout express-server\nNAME             TARGET   UPGRADED   READY   BATCH-STATE   ROLLING-STATE    AGE\nexpress-server   5        5          5       batchReady    rolloutSucceed  2d20h\n```\n\n## Scale up\nRollout Trait also be able to scale up a Workload, apply the YAML below to modify the `targetSize`, in order to increase the number of replicas from 5 to 7.\n\n```codeBlockLines_e6Vv\ncat <<EOF | vela up -f -\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: rollout-trait-test\nspec:\n  components:\n    - name: express-server\n      type: webservice\n      externalRevision: express-server-v2\n      properties:\n        image: stefanprodan/podinfo:5.0.2\n      traits:\n        - type: rollout\n          properties:\n            targetRevision: express-server-v1\n            targetSize: 7\nEOF\n```\n\nThis Rollout Trait represents it will scale workload up to 7. You also can set every batch's number by setting `rolloutBatches`.\n\n**danger**\nA known issue exists if you scale up/down the workload twice or more times by not setting the `rolloutBatches`. So please set the `rolloutBatches` when scale up/down.\n\n## Scale down\nApply the YAML below to scale down the size of replicas from 7 to 3.\n\n```codeBlockLines_e6Vv\ncat <<EOF | vela up -f -\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: rollout-trait-test\nspec:\n  components:\n    - name: express-server\n      type: webservice\n      externalRevision: express-server-v2\n      properties:\n        image: stefanprodan/podinfo:5.0.2\n      traits:\n        - type: rollout\n          properties:\n            targetRevision: express-server-v1\n            targetSize: 5\nEOF\n```\n\nThis Rollout Trait scale workload down to 5.\n\n## Rollout cloneset type Workload\nYou need to enable kruise addon.\n\n```codeBlockLines_e6Vv\n$ vela addon enable kruise\n```\n\nCheck types of components.\n\n```codeBlockLines_e6Vv\n$ vela components\nNAME                NAMESPACE        WORKLOAD                        DESCRIPTION\ncloneset           vela-system     clonesets.apps.kruise.io\n```\n\nApply the YAML below to create an Application, this Application includes a Workload of type cloneset with a Rollout Trait.\n\n```codeBlockLines_e6Vv\ncat <<EOF | vela up -f -\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: rollout-trait-test-cloneset\nspec:\n  components:\n    - name: cloneset-server\n      type: cloneset\n      externalRevision: cloneset-server-v1\n      properties:\n        image: stefanprodan/podinfo:4.0.3\n      traits:\n        - type: rollout\n          properties:\n            targetSize: 5\n            rolloutBatches:\n              - replicas: 2\n              - replicas: 3\nEOF\n```\n\nCheck the status of related resources.\n\n## Supported workload type\nRollout Trait supports following workload types: webservice, worker and cloneset.\n\nWhen using webservice/worker as Workload type with Rollout Trait, Workload's name will be controllerRevision's name. And when Workload's type is cloneset, because of cloneset support in-place update Workload's name will always be component's name.\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.9/reference/addons/rollout", "title": "KubeVela Rollout Trait Documentation", "description": "This documentation introduces how to use Rollout Trait to perform a rolling update on Component in KubeVela.", "has_code_examples": true, "has_best_practices": true, "section_count": 9, "timestamp": "2025-02-28 17:35:07", "type": "overview", "page_metadata": {"docusaurus_locale": "en", "viewport": "width=device-width, initial-scale=1.0", "language": "en", "docsearch:version": "v1.9", "og:title": "Rollout | KubeVela", "ogDescription": "This section will introduce how to use Rollout Trait to perform a rolling update on Component.", "generator": "Docusaurus v2.4.3", "theme-color": "#ffffff", "twitter:card": "summary_large_image", "og:url": "https://kubevela.io/docs/v1.9/reference/addons/rollout/", "description": "This section will introduce how to use Rollout Trait to perform a rolling update on Component.", "docusaurus_version": "v1.9", "ogUrl": "https://kubevela.io/docs/v1.9/reference/addons/rollout/", "ogTitle": "Rollout | KubeVela", "docsearch:docusaurus_tag": "docs-default-v1.9", "og:description": "This section will introduce how to use Rollout Trait to perform a rolling update on Component.", "msapplication-config": "/img/favicons/browserconfig.xml", "docusaurus_tag": "docs-default-v1.9", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docsearch:language": "en", "title": "Rollout | KubeVela", "scrapeId": "b0fefd55-5bf5-429e-8306-cac7fa345b93", "sourceURL": "https://kubevela.io/docs/v1.9/reference/addons/rollout", "url": "https://kubevela.io/docs/v1.9/reference/addons/rollout/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"KubeVela Rollout Trait Documentation\"?\n\nAssistant: Here are some code examples:\n\n### Enable the rollout addon\n```yaml\nvela addon enable rollout\n```\n\n### First Deployment\n```yaml\ncat <<EOF | vela up -f -\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: rollout-trait-test\nspec:\n  components:\n    - name: express-server\n      type: webservice\n      externalRevision: express-server-v1\n      properties:\n        image: stefanprodan/podinfo:4.0.3\n      traits:\n        - type: rollout\n          properties:\n            targetSize: 5\n            rolloutBatches:\n              - replicas: 2\n              - replicas: 3\nEOF\n```\n\n### Check Application status\n```yaml\n$ vela status rollout-trait-test\n```\n\n### Check Rollout Trait status\n```yaml\n$ kubectl get rollout express-server\n```\n\n### Rollout Update\n```yaml\ncat <<EOF | vela up -f -\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: rollout-trait-test\nspec:\n  components:\n    - name: express-server\n      type: webservice\n      externalRevision: express-server-v2\n      properties:\n        image: stefanprodan/podinfo:5.0.2\n      traits:\n        - type: rollout\n          properties:\n            targetSize: 5\n            batchPartition: 0\n            rolloutBatches:\n              - replicas: 2\n              - replicas: 3\nEOF\n```\n\n### Check controllerRevision\n```yaml\n$ kubectl get controllerRevision -l controller.oam.dev/component=express-server\n```\n\n### Check Rollout Trait status after update\n```yaml\n$ kubectl get rollout express-server\n```\n\n### Rollback\n```yaml\ncat <<EOF | vela up -f -\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: rollout-trait-test\nspec:\n  components:\n    - name: express-server\n      type: webservice\n      externalRevision: express-server-v2\n      properties:\n        image: stefanprodan/podinfo:5.0.2\n      traits:\n        - type: rollout\n          properties:\n            targetRevision: express-server-v1\n            targetSize: 5\n            rolloutBatches:\n              - replicas: 2\n              - replicas: 3\nEOF\n```\n\n### Scale up\n```yaml\ncat <<EOF | vela up -f -\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: rollout-trait-test\nspec:\n  components:\n    - name: express-server\n      type: webservice\n      externalRevision: express-server-v2\n      properties:\n        image: stefanprodan/podinfo:5.0.2\n      traits:\n        - type: rollout\n          properties:\n            targetRevision: express-server-v1\n            targetSize: 7\nEOF\n```\n\n### Scale down\n```yaml\ncat <<EOF | vela up -f -\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: rollout-trait-test\nspec:\n  components:\n    - name: express-server\n      type: webservice\n      externalRevision: express-server-v2\n      properties:\n        image: stefanprodan/podinfo:5.0.2\n      traits:\n        - type: rollout\n          properties:\n            targetRevision: express-server-v1\n            targetSize: 5\nEOF\n```\n\n### Enable kruise addon\n```yaml\n$ vela addon enable kruise\n```\n\n### Create Application with cloneset\n```yaml\ncat <<EOF | vela up -f -\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: rollout-trait-test-cloneset\nspec:\n  components:\n    - name: cloneset-server\n      type: cloneset\n      externalRevision: cloneset-server-v1\n      properties:\n        image: stefanprodan/podinfo:4.0.3\n      traits:\n        - type: rollout\n          properties:\n            targetSize: 5\n            rolloutBatches:\n              - replicas: 2\n              - replicas: 3\nEOF\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.9/reference/addons/rollout", "title": "KubeVela Rollout Trait Documentation", "description": "This documentation introduces how to use Rollout Trait to perform a rolling update on Component in KubeVela.", "has_code_examples": true, "has_best_practices": true, "section_count": 9, "timestamp": "2025-02-28 17:35:07", "type": "code_examples", "page_metadata": {"docusaurus_locale": "en", "viewport": "width=device-width, initial-scale=1.0", "language": "en", "docsearch:version": "v1.9", "og:title": "Rollout | KubeVela", "ogDescription": "This section will introduce how to use Rollout Trait to perform a rolling update on Component.", "generator": "Docusaurus v2.4.3", "theme-color": "#ffffff", "twitter:card": "summary_large_image", "og:url": "https://kubevela.io/docs/v1.9/reference/addons/rollout/", "description": "This section will introduce how to use Rollout Trait to perform a rolling update on Component.", "docusaurus_version": "v1.9", "ogUrl": "https://kubevela.io/docs/v1.9/reference/addons/rollout/", "ogTitle": "Rollout | KubeVela", "docsearch:docusaurus_tag": "docs-default-v1.9", "og:description": "This section will introduce how to use Rollout Trait to perform a rolling update on Component.", "msapplication-config": "/img/favicons/browserconfig.xml", "docusaurus_tag": "docs-default-v1.9", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docsearch:language": "en", "title": "Rollout | KubeVela", "scrapeId": "b0fefd55-5bf5-429e-8306-cac7fa345b93", "sourceURL": "https://kubevela.io/docs/v1.9/reference/addons/rollout", "url": "https://kubevela.io/docs/v1.9/reference/addons/rollout/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"KubeVela Rollout Trait Documentation\"?\n\nAssistant: Here are the recommended best practices:\n\n• A known issue exists if you scale up/down the workload twice or more times by not setting the `rolloutBatches`. So please set the `rolloutBatches` when scale up/down.\n", "metadata": {"source_url": "https://kubevela.io/docs/v1.9/reference/addons/rollout", "title": "KubeVela Rollout Trait Documentation", "description": "This documentation introduces how to use Rollout Trait to perform a rolling update on Component in KubeVela.", "has_code_examples": true, "has_best_practices": true, "section_count": 9, "timestamp": "2025-02-28 17:35:07", "type": "best_practices", "page_metadata": {"docusaurus_locale": "en", "viewport": "width=device-width, initial-scale=1.0", "language": "en", "docsearch:version": "v1.9", "og:title": "Rollout | KubeVela", "ogDescription": "This section will introduce how to use Rollout Trait to perform a rolling update on Component.", "generator": "Docusaurus v2.4.3", "theme-color": "#ffffff", "twitter:card": "summary_large_image", "og:url": "https://kubevela.io/docs/v1.9/reference/addons/rollout/", "description": "This section will introduce how to use Rollout Trait to perform a rolling update on Component.", "docusaurus_version": "v1.9", "ogUrl": "https://kubevela.io/docs/v1.9/reference/addons/rollout/", "ogTitle": "Rollout | KubeVela", "docsearch:docusaurus_tag": "docs-default-v1.9", "og:description": "This section will introduce how to use Rollout Trait to perform a rolling update on Component.", "msapplication-config": "/img/favicons/browserconfig.xml", "docusaurus_tag": "docs-default-v1.9", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docsearch:language": "en", "title": "Rollout | KubeVela", "scrapeId": "b0fefd55-5bf5-429e-8306-cac7fa345b93", "sourceURL": "https://kubevela.io/docs/v1.9/reference/addons/rollout", "url": "https://kubevela.io/docs/v1.9/reference/addons/rollout/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"CUE Actions in KubeVela\"?\n\nAssistant: This document introduces the CUE operations that can be used in the workflow step definitions. You need to import the `vela/op` package to use these operations.\n\nHere's a detailed explanation:\n\n\n## Process Control\n### ConditionalWait\nMakes the workflow step wait until the condition is met.\n\n**Parameters**\n```codeBlockLines_e6Vv\n#ConditionalWait: {\n    // +usage=If continue is false, the step will wait for continue to be true.\n    continue: bool\n    // +usage=Optional message that will be shown in workflow step status, note that the message might be override by other actions.\n    message?: string\n}\n```\n\n**Example**\n```codeBlockLines_e6Vv\nimport \"vela/op\"\n\nmyRead: op.#Read & {\n  value: {\n    kind: \"Deployment\"\n    apiVersion: \"apps/v1\"\n    metadata: name: \"test-app\"\n  }\n}\n\nwait: op.#ConditionalWait & {\n  continue: myRead.value.status.phase == \"running\"\n}\n```\n\n### Fail\nMake the workflow step failed.\n\n**Parameters**\n```codeBlockLines_e6Vv\n#Fail: {\n    // +usage=Optional message that will be shown in workflow step status, note that the message might be override by other actions.\n    message?: string\n}\n```\n\n**Example**\n```codeBlockLines_e6Vv\nimport \"vela/op\"\n\nfail: op.#Fail & {\n  message: \"error in the step\"\n}\n```\n\n## Data Control\n### Log\nOutput the log or configure the log source for this step. If `op.#Log` is used in a step definition, then you can use `vela workflow logs <name>` to view the log for that step.\n\n**Parameters**\n```codeBlockLines_e6Vv\n#Log: {\n    // +usage=The data to print in the controller logs\n    data?: {...} | string\n    // +usage=The log level of the data\n    level: *3 | int\n    // +usage=The log source of this step. You can specify it from a url or resources. Note that if you set source in multiple op.#Log, only the latest one will work\n    source?: close({\n        // +usage=Specify the log source url of this step\n        url: string\n    }) | close({\n        // +usage=Specify the log resources of this step\n        resources?: [...{\n            // +usage=Specify the name of the resource\n            name?:      string\n            // +usage=Specify the cluster of the resource\n            cluster?:   string\n            // +usage=Specify the namespace of the resource\n            namespace?: string\n            // +usage=Specify the label selector of the resource\n            labelSelector?: {...}\n        }]\n    })\n}\n```\n\n**Example**\n```codeBlockLines_e6Vv\nimport \"vela/op\"\n\nmyLog: op.#Log & {\n  data: \"my custom log\"\n    resources: [{\n        labelsSelector: {\"test-key\": \"test-value\"}\n    }]\n}\n```\n\n### Message\nWrite message to the workflow step status.\n\n**Parameters**\n```codeBlockLines_e6Vv\n#Message: {\n    // +usage=Optional message that will be shown in workflow step status, note that the message might be override by other actions.\n    message?: string\n}\n```\n\n**Example**\n```codeBlockLines_e6Vv\nimport \"vela/op\"\n\nmsg: op.#Message & {\n  message: \"custom message\"\n}\n```\n\n### DoVar\nUsed to save or read user-defined data in the context of workflow.\n\n**Parameters**\n```codeBlockLines_e6Vv\n#DoVar: {\n    // +usage=The method to call on the variable\n    method: *\"Get\" | \"Put\"\n    // +usage=The path to the variable\n    path:   string\n    // +usage=The value of the variable\n    value?: _\n}\n```\n\n**Example**\n```codeBlockLines_e6Vv\nput: op.ws.#DoVar & {\n  method: \"Put\"\n  path: \"foo.score\"\n  value: 100\n}\n\n// The user can get the data saved above through get.value (100)\nget: op.ws.#DoVar & {\n  method: \"Get\"\n  path: \"foo.score\"\n}\n```\n\n## Requests\n### HTTPDo\nSend HTTP request to the specified URL.\n\n**Parameters**\n```codeBlockLines_e6Vv\n#HTTPDo: {\n    // +usage=The method of HTTP request\n    method: *\"GET\" | \"POST\" | \"PUT\" | \"DELETE\"\n    // +usage=The url to request\n    url: string\n    // +usage=The request config\n    request?: {\n        // +usage=The timeout of this request\n        timeout?: string\n        // +usage=The request body\n        body?: string\n        // +usage=The header of the request\n        header?: [string]: string\n        // +usage=The trailer of the request\n        trailer?: [string]: string\n        // +usage=The rate limiter of the request\n        ratelimiter?: {\n            limit:  int\n            period: string\n        }\n    }\n    // +usgae=The tls config of the request\n    tls_config?: secret: string\n    // +usage=The response of the request will be filled in this field after the action is executed\n    response: {\n        // +usage=The body of the response\n        body: string\n        // +usage=The header of the response\n        header?: [string]: [...string]\n        // +usage=The trailer of the response\n        trailer?: [string]: [...string]\n        // +usage=The status code of the response\n        statusCode: int\n    }\n}\n```\n\n**Example**\n```codeBlockLines_e6Vv\nimport \"vela/op\"\n\nmyRequest: op.#HTTPDo & {\n  method: \"POST\"\n  url:    \"http://my-url.com\"\n  request: {\n    body: {\n      \"hello\": \"body\"\n    }\n  }\n}\n```\n\n### HTTPGet\nSend HTTP GET request to the specified URL.\n\n**Parameters**\nSame as HTTPDo, but `method` has been specified as GET.\n\n**Example**\nPlease refer the example in HTTPDo.\n\n### HTTPPost\nSend HTTP POST request to the specified URL.\n\n**Parameters**\nSame as HTTPDo, but `method` has been specified as POST.\n\n**Example**\nPlease refer the example in HTTPDo.\n\n### HTTPPut\nSend HTTP PUT request to the specified URL.\n\n**Parameters**\nSame as HTTPDo, but `method` has been specified as PUT.\n\n**Example**\nPlease refer the example in HTTPDo.\n\n### HTTPDelete\nSend HTTP DELETE request to the specified URL.\n\n**Parameters**\nSame as HTTPDo, but `method` has been specified as DELETE.\n\n**Example**\nPlease refer the example in HTTPDo.\n\n### SendEmail\nSend emails.\n\n**Parameters**\n```codeBlockLines_e6Vv\n#SendEmail {\n    // +usage=The info of the sender\n    from: {\n        // +usage=The address of the sender\n        address:  string\n        // +usage=The alias of the sender\n        alias?:   string\n        // +usage=The password of the sender\n        password: string\n        // +usage=The host of the sender server\n        host:     string\n        // +usage=The port of the sender server\n        port:     int\n    }\n    // +usgae=The email address list of the recievers\n    to: [...string]\n    // +usage=The content of the email\n    content: {\n        // +usage=The subject of the email\n        subject: string\n        // +usage=The body of the email\n        body:    string\n    }\n}\n```\n\n**Example**\n```codeBlockLines_e6Vv\nimport \"vela/op\"\n\nmyEmail: op.#SendEmail & {\n  from: {\n        address: \"hello@mail.com\"\n        password: \"password\"\n        host: \"myhost\"\n        port: 465\n    }\n    to: [\"world@mail.com\", \"next@workflow.com\"]\n    content: {\n        subject: \"Hello Vela\"\n        body: \"Hello Vela, this is a test email\"\n    }\n}\n```\n\n## Resource Management\n### Apply\nApply resources in the Kubernetes cluster.\n\n**Parameters**\n```codeBlockLines_e6Vv\n#Apply: {\n    // +usage=The cluster to use\n    cluster: *\"\" | string\n    // +usage=The resource to apply\n    value: {...}\n}\n```\n\n**Example**\n```codeBlockLines_e6Vv\nimport \"vela/op\"\nmyApply: op.#Apply & {\n  value: {\n    kind: \"Deployment\"\n    apiVersion: \"apps/v1\"\n    metadata: name: \"test-app\"\n    spec: {\n      replicas: 2\n      ...\n    }\n  }\n}\n```\n\n### ApplyInParallel\nApply resources in parallel in the Kubernetes cluster.\n\n**Parameters**\n```codeBlockLines_e6Vv\n#ApplyInParallel: {\n    // +usage=The cluster to use\n    cluster: *\"\" | string\n    // +usage=The resources to apply in parallel\n    value: [...{...}]\n}\n```\n\n**Example**\n```codeBlockLines_e6Vv\nimport \"vela/op\"\nmyApply: op.#ApplyInParallel & {\n  value: [{\n    kind: \"Deployment\"\n    apiVersion: \"apps/v1\"\n    metadata: name: \"test-app\"\n    spec: {\n      replicas: 2\n      ...\n    }\n  }, {\n    kind: \"Deployment\"\n    apiVersion: \"apps/v1\"\n    metadata: name: \"test-app2\"\n    spec: {\n      replicas: 2\n      ...\n    }\n  }]\n}\n```\n\n### Read\nRead resources in the Kubernetes cluster.\n\n**Parameters**\n```codeBlockLines_e6Vv\n#Read: {\n    // +usage=The cluster to use\n    cluster: *\"\" | string\n    // +usage=The resource to read, this field will be filled with the resource read from the cluster after the action is executed\n    value?: {...}\n    ...\n}\n```\n\n**Example**\n```codeBlockLines_e6Vv\nimport \"vela/op\"\nmyRead: op.#Read & {\n  value: {\n    kind: \"Deployment\"\n    apiVersion: \"apps/v1\"\n    metadata: name: \"test-app\"\n  }\n}\n```\n\n### List\nList resources in the Kubernetes cluster.\n\n**Parameters**\n```codeBlockLines_e6Vv\n#List: {\n    // +usage=The cluster to use\n    cluster: *\"\" | string\n    // +usage=The resource to list\n    resource: {\n        // +usage=The api version of the resource\n        apiVersion: string\n        // +usage=The kind of the resource\n        kind: string\n    }\n    // +usage=The filter to list the resources\n    filter?: {\n        // +usage=The namespace to list the resources\n        namespace?: *\"\" | string\n        // +usage=The label selector to filter the resources\n        matchingLabels?: {...}\n    }\n    // +usage=The listed resources will be filled in this field after the action is executed\n    list?: {...}\n    ...\n}\n```\n\n**Example**\n```codeBlockLines_e6Vv\nimport \"vela/op\"\nmyList: op.#List & {\n  resource: {\n    kind: \"Deployment\"\n    apiVersion: \"apps/v1\"\n  }\n  filter: {\n    matchingLabels: {\n      \"mylabel\": \"myvalue\"\n    }\n  }\n}\n```\n\n### Delete\nDelete resources in the Kubernetes cluster.\n\n**Parameters**\n```codeBlockLines_e6Vv\n#Delete: {\n    // +usage=The cluster to use\n    cluster: *\"\" | string\n    // +usage=The resource to delete\n    value: {\n        // +usage=The api version of the resource\n        apiVersion: string\n        // +usage=The kind of the resource\n        kind: string\n        // +usage=The metadata of the resource\n        metadata: {\n            // +usage=The name of the resource\n            name?: string\n            // +usage=The namespace of the resource\n            namespace: *\"default\" | string\n        }\n    }\n    // +usage=The filter to delete the resources\n    filter?: {\n        // +usage=The namespace to list the resources\n        namespace?: string\n        // +usage=The label selector to filter the resources\n        matchingLabels?: {...}\n    }\n}\n```\n\n**Example**\n```codeBlockLines_e6Vv\nimport \"vela/op\"\nmyDelete: op.#Delete & {\n  resource: {\n    kind: \"Deployment\"\n    apiVersion: \"apps/v1\"\n    metadata: name: \"my-app\"\n  }\n}\n```\n\n## Application Operations\n### Load\nLoad all the components and its traits in the application.\n\n**Parameters**\n```codeBlockLines_e6Vv\n#Load: {\n  // +usage=If specify `app`, use specified application to load its component resources otherwise use current application\n    app?: string\n    // +usage=The value of the components will be filled in this field after the action is executed, you can use value[componentName] to refer a specified component\n    value?: {...}\n}\n```\n\n**Example**\n```codeBlockLines_e6Vv\nimport \"vela/op\"\n\n// You can use `load.value.[componentName] to refer the component.\nload: op.#Load & {}\n\nmycomp: load.value[\"my-comp\"]\n```\n\n### ApplyComponent\nCreate or update resources corresponding to the component in Kubernetes cluster. Note that need to use `Load` first to apply the resources.\n\n**Parameters**\n```codeBlockLines_e6Vv\n#ApplyComponent: {\n    // +usage=The cluster to use\n    cluster: *\"\" | string\n    // +usage=The env to use\n    env: *\"\" | string\n    // +usage=The namespace to apply\n    namespace: *\"\" | string\n    // +usage=Whether to wait healthy of the applied component\n    waitHealthy: *true | bool\n    // +usage=The value of the component resource\n    value: {...}\n    // +usage=The patcher that will be applied to the resource, you can define the strategy of list merge through comments. Reference doc here: https://kubevela.io/docs/platform-engineers/traits/patch-trait#patch-in-workflow-step\n    patch?: {...}\n}\n```\n\n**Example**\n```codeBlockLines_e6Vv\nimport \"vela/op\"\nload: op.#Load & {}\n\napply: op.#ApplyComponent & {\n  value: load.value[\"my-comp\"]\n}\n```\n\n### ApplyApplication\nCreate or update resources corresponding to the application in Kubernetes cluster.\n\n**Parameters**\n```codeBlockLines_e6Vv\n#ApplyApplication: {}\n```\n\n**Example**\n```codeBlockLines_e6Vv\nimport \"vela/op\"\napply: op.#ApplyApplication & {}\n```\n\n## Special Operations\n### Steps\nA combination of a set of operations that can be used to implement complex operation logic.\n\n**Parameters**\n```codeBlockLines_e6Vv\n#Steps: {}\n```\n\n**Example**\n```codeBlockLines_e6Vv\nimport \"vela/op\"\n\nenv: \"prod\"\n\napp: op.#Steps & {\n  if env == \"prod\" {\n    load: op.#Load & {\n      component: \"component-name\"\n    }\n    apply: op.#Apply & {\n      value: load.value.workload\n    }\n  }\n  if env != \"prod\" {\n    request: op.#HTTPGet & {\n      url: \"http://my-url.com\"\n    }\n  }\n}\n```\n\n## Deprecated Operations\n### Slack\nSend a request to the specified Slack URL. `#Slack` is actually a secondary wrapper for `#HTTPPost`, we will deprecate this operation in the next version. You can use `#HTTPPost` instead, like:\n\n```codeBlockLines_e6Vv\nimport (\n    \"vela/op\"\n    \"encoding/json\"\n)\n\nmessage: {\n    \"hello\": \"world\"\n}\n\nmySlack: op.#HTTPPost & {\n    url:    \"slackURL\"\n    request: {\n        body: json.Marshal(message)\n        header: \"Content-Type\": \"application/json\"\n    }\n}\n```\n\n**Parameters**\n```codeBlockLines_e6Vv\n#Slack: {\n    message: {...}\n    slackUrl: string\n}\n```\n\n**Example**\n```codeBlockLines_e6Vv\nimport \"vela/op\"\n\nmyMessage: {\n    \"hello\": \"world\"\n}\n\nmyRequest: op.#Slack & {\n  message: myMessage\n    slackUrl: \"slackURL\"\n}\n```\n\n### DingTalk\nSend a request to the specified DingTalk URL. `#DingTalk` is actually a secondary wrapper of `#HTTPPost`, we will deprecate this operation in the next version. You can use `#HTTPPost` instead, please refer to the example in Slack action.\n\n**Parameters**\n```codeBlockLines_e6Vv\n#DingTalk: {\n    message: {...}\n    dingUrl: string\n}\n```\n\n**Example**\n```codeBlockLines_e6Vv\nimport \"vela/op\"\n\nmyMessage: {\n    \"hello\": \"world\"\n}\n\nmyRequest: op.#DingTalk & {\n  message: myMessage\n    dingUrl: \"dingURL\"\n}\n```\n\n### Lark\nSend a request to the specified Lark URL. `#Lark` is actually a secondary wrapper of `#HTTPPost`, we will deprecate this operation in the next version. You can use `#HTTPPost` instead, please refer to the example in Slack action.\n\n**Parameters**\n```codeBlockLines_e6Vv\n#Lark: {\n    message: {...}\n    larkUrl: string\n}\n```\n\n**Example**\n```codeBlockLines_e6Vv\nimport \"vela/op\"\n\nmyMessage: {\n    \"hello\": \"world\"\n}\n\nmyRequest: op.#Lark & {\n  message: myMessage\n    larkUrl: \"larkURL\"\n}\n```\n", "metadata": {"source_url": "https://kubevela.io/docs/platform-engineers/workflow/cue-actions", "title": "CUE Actions in KubeVela", "description": "This document introduces the CUE operations that can be used in the workflow step definitions. You need to import the `vela/op` package to use these operations.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-02-28 17:36:04", "type": "overview", "page_metadata": {"og:description": "This document introduces the CUE operations that can be used in the workflow step definitions. You need to import the vela/op package to use these operations.", "docusaurus_version": "v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "og:title": "Built-in Workflow Operations | KubeVela", "ogTitle": "Built-in Workflow Operations | KubeVela", "docsearch:version": "v1.10", "generator": "Docusaurus v2.4.3", "ogUrl": "https://kubevela.io/docs/platform-engineers/workflow/cue-actions/", "title": "Built-in Workflow Operations | KubeVela", "docusaurus_tag": "docs-default-v1.10", "docusaurus_locale": "en", "ogDescription": "This document introduces the CUE operations that can be used in the workflow step definitions. You need to import the vela/op package to use these operations.", "language": "en", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "og:url": "https://kubevela.io/docs/platform-engineers/workflow/cue-actions/", "docsearch:language": "en", "description": "This document introduces the CUE operations that can be used in the workflow step definitions. You need to import the vela/op package to use these operations.", "viewport": "width=device-width, initial-scale=1.0", "twitter:card": "summary_large_image", "theme-color": "#ffffff", "docsearch:docusaurus_tag": "docs-default-v1.10", "scrapeId": "c3d74183-50f3-4567-81f7-57cddd7403c1", "sourceURL": "https://kubevela.io/docs/platform-engineers/workflow/cue-actions", "url": "https://kubevela.io/docs/platform-engineers/workflow/cue-actions/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"CUE Actions in KubeVela\"?\n\nAssistant: Here are some code examples:\n\n### ConditionalWait Example\n```yaml\n```codeBlockLines_e6Vv\nimport \"vela/op\"\n\nmyRead: op.#Read & {\n  value: {\n    kind: \"Deployment\"\n    apiVersion: \"apps/v1\"\n    metadata: name: \"test-app\"\n  }\n}\n\nwait: op.#ConditionalWait & {\n  continue: myRead.value.status.phase == \"running\"\n}\n```\n```\n\n### Fail Example\n```yaml\n```codeBlockLines_e6Vv\nimport \"vela/op\"\n\nfail: op.#Fail & {\n  message: \"error in the step\"\n}\n```\n```\n\n### Log Example\n```yaml\n```codeBlockLines_e6Vv\nimport \"vela/op\"\n\nmyLog: op.#Log & {\n  data: \"my custom log\"\n    resources: [{\n        labelsSelector: {\"test-key\": \"test-value\"}\n    }]\n}\n```\n```\n\n### Message Example\n```yaml\n```codeBlockLines_e6Vv\nimport \"vela/op\"\n\nmsg: op.#Message & {\n  message: \"custom message\"\n}\n```\n```\n\n### DoVar Example\n```yaml\n```codeBlockLines_e6Vv\nput: op.ws.#DoVar & {\n  method: \"Put\"\n  path: \"foo.score\"\n  value: 100\n}\n\n// The user can get the data saved above through get.value (100)\nget: op.ws.#DoVar & {\n  method: \"Get\"\n  path: \"foo.score\"\n}\n```\n```\n\n### HTTPDo Example\n```yaml\n```codeBlockLines_e6Vv\nimport \"vela/op\"\n\nmyRequest: op.#HTTPDo & {\n  method: \"POST\"\n  url:    \"http://my-url.com\"\n  request: {\n    body: {\n      \"hello\": \"body\"\n    }\n  }\n}\n```\n```\n\n### Apply Example\n```yaml\n```codeBlockLines_e6Vv\nimport \"vela/op\"\nmyApply: op.#Apply & {\n  value: {\n    kind: \"Deployment\"\n    apiVersion: \"apps/v1\"\n    metadata: name: \"test-app\"\n    spec: {\n      replicas: 2\n      ...\n    }\n  }\n}\n```\n```\n\n### Load Example\n```yaml\n```codeBlockLines_e6Vv\nimport \"vela/op\"\n\n// You can use `load.value.[componentName] to refer the component.\nload: op.#Load & {}\n\nmycomp: load.value[\"my-comp\"]\n```\n```\n\n### Steps Example\n```yaml\n```codeBlockLines_e6Vv\nimport \"vela/op\"\n\nenv: \"prod\"\n\napp: op.#Steps & {\n  if env == \"prod\" {\n    load: op.#Load & {\n      component: \"component-name\"\n    }\n    apply: op.#Apply & {\n      value: load.value.workload\n    }\n  }\n  if env != \"prod\" {\n    request: op.#HTTPGet & {\n      url: \"http://my-url.com\"\n    }\n  }\n}\n```\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/platform-engineers/workflow/cue-actions", "title": "CUE Actions in KubeVela", "description": "This document introduces the CUE operations that can be used in the workflow step definitions. You need to import the `vela/op` package to use these operations.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-02-28 17:36:04", "type": "code_examples", "page_metadata": {"og:description": "This document introduces the CUE operations that can be used in the workflow step definitions. You need to import the vela/op package to use these operations.", "docusaurus_version": "v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "og:title": "Built-in Workflow Operations | KubeVela", "ogTitle": "Built-in Workflow Operations | KubeVela", "docsearch:version": "v1.10", "generator": "Docusaurus v2.4.3", "ogUrl": "https://kubevela.io/docs/platform-engineers/workflow/cue-actions/", "title": "Built-in Workflow Operations | KubeVela", "docusaurus_tag": "docs-default-v1.10", "docusaurus_locale": "en", "ogDescription": "This document introduces the CUE operations that can be used in the workflow step definitions. You need to import the vela/op package to use these operations.", "language": "en", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "og:url": "https://kubevela.io/docs/platform-engineers/workflow/cue-actions/", "docsearch:language": "en", "description": "This document introduces the CUE operations that can be used in the workflow step definitions. You need to import the vela/op package to use these operations.", "viewport": "width=device-width, initial-scale=1.0", "twitter:card": "summary_large_image", "theme-color": "#ffffff", "docsearch:docusaurus_tag": "docs-default-v1.10", "scrapeId": "c3d74183-50f3-4567-81f7-57cddd7403c1", "sourceURL": "https://kubevela.io/docs/platform-engineers/workflow/cue-actions", "url": "https://kubevela.io/docs/platform-engineers/workflow/cue-actions/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"CUE Actions in KubeVela\"?\n\nAssistant: Here are the recommended best practices:\n\n• Before reading this section, make sure you understand how to customize workflow and learn the basics of CUE.\n", "metadata": {"source_url": "https://kubevela.io/docs/platform-engineers/workflow/cue-actions", "title": "CUE Actions in KubeVela", "description": "This document introduces the CUE operations that can be used in the workflow step definitions. You need to import the `vela/op` package to use these operations.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-02-28 17:36:04", "type": "best_practices", "page_metadata": {"og:description": "This document introduces the CUE operations that can be used in the workflow step definitions. You need to import the vela/op package to use these operations.", "docusaurus_version": "v1.10", "msapplication-config": "/img/favicons/browserconfig.xml", "og:title": "Built-in Workflow Operations | KubeVela", "ogTitle": "Built-in Workflow Operations | KubeVela", "docsearch:version": "v1.10", "generator": "Docusaurus v2.4.3", "ogUrl": "https://kubevela.io/docs/platform-engineers/workflow/cue-actions/", "title": "Built-in Workflow Operations | KubeVela", "docusaurus_tag": "docs-default-v1.10", "docusaurus_locale": "en", "ogDescription": "This document introduces the CUE operations that can be used in the workflow step definitions. You need to import the vela/op package to use these operations.", "language": "en", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "og:url": "https://kubevela.io/docs/platform-engineers/workflow/cue-actions/", "docsearch:language": "en", "description": "This document introduces the CUE operations that can be used in the workflow step definitions. You need to import the vela/op package to use these operations.", "viewport": "width=device-width, initial-scale=1.0", "twitter:card": "summary_large_image", "theme-color": "#ffffff", "docsearch:docusaurus_tag": "docs-default-v1.10", "scrapeId": "c3d74183-50f3-4567-81f7-57cddd7403c1", "sourceURL": "https://kubevela.io/docs/platform-engineers/workflow/cue-actions", "url": "https://kubevela.io/docs/platform-engineers/workflow/cue-actions/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What is \"Customize Trait\"?\n\nAssistant: This page introduces how to define a custom trait with CUE in KubeVela.\n\nHere's a detailed explanation:\n\n\n## Generate a Trait scaffold\nA trait can be something similar to component, while they're attached operational resources.\n\n- Kubernetes API resources like ingress, service, rollout.\n- The composition of these operational resources.\n- A patch of data, for example, patch sidecar to workload.\n\nLet's use `vela def init` to create a basic trait scaffold:\n\n```codeBlockLines_e6Vv\nvela def init my-route -t trait --desc \"My ingress route trait.\" > myroute.cue\n```\n\nThe content of the scaffold expected to be:\n\n```codeBlockLines_e6Vv\n// $ cat myroute.cue\n\"my-route\": {\n    annotations: {}\n    attributes: {\n        appliesToWorkloads: []\n        conflictsWith: []\n        podDisruptive:   false\n        workloadRefPath: \"\"\n    }\n    description: \"My ingress route trait.\"\n    labels: {}\n    type: \"trait\"\n}\n\ntemplate: {\n    patch: {}\n    parameter: {}\n}\n```\n\ncaution\n\nThere's a bug in vela CLI( `<=1.4.2`), the `vela def init` command will generate `definitionRef: \"\"` in `attributes` which is wrong, please remove that line.\n\n## Define a trait to compose resources\nUnlike component definition, KubeVela requires objects in traits **MUST** be defined in `outputs` section (not `output`) in CUE template with format as below:\n\n```codeBlockLines_e6Vv\noutputs: {\n  <unique-name>: {\n    <template of trait resource structural data>\n  }\n}\n```\n\ntip\n\nActually the CUE template of trait here will be evaluated with component CUE template in the same context, so the name can't be conflict. That also explain why the `output` can't be defined in trait.\n\nBelow is an example that we combine `ingress` and `service` of Kubernetes into our `my-route` trait.\n\n```codeBlockLines_e6Vv\n\"my-route\": {\n    annotations: {}\n    attributes: {\n        appliesToWorkloads: []\n        conflictsWith: []\n        podDisruptive:   false\n        workloadRefPath: \"\"\n    }\n    description: \"My ingress route trait.\"\n    labels: {}\n    type: \"trait\"\n}\n\ntemplate: {\n    parameter: {\n        domain: string\n        http: [string]: int\n    }\n\n    // trait template can have multiple outputs in one trait\n    outputs: service: {\n        apiVersion: \"v1\"\n        kind:       \"Service\"\n        spec: {\n            selector:\n                app: context.name\n            ports: [\\\n                for k, v in parameter.http {\\\n                    port:       v\\\n                    targetPort: v\\\n                },\\\n            ]\n        }\n    }\n\n    outputs: ingress: {\n        apiVersion: \"networking.k8s.io/v1beta1\"\n        kind:       \"Ingress\"\n        metadata:\n            name: context.name\n        spec: {\n            rules: [{\\\n                host: parameter.domain\\\n                http: {\\\n                    paths: [\\\n                        for k, v in parameter.http {\\\n                            path: k\\\n                            backend: {\\\n                                serviceName: context.name\\\n                                servicePort: v\\\n                            }\\\n                        },\\\n                    ]\\\n                }\\\n            }]\n        }\n    }\n}\n```\n\nApply to our control plane to make this trait work:\n\n```codeBlockLines_e6Vv\nvela def apply myroute.cue\n```\n\nThen our end users can discover it immediately and attach this trait to any component instance in `Application`.\n\nAfter using `vela up` by the following command:\n\n```codeBlockLines_e6Vv\ncat <<EOF | vela up -f -\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: testapp\nspec:\n  components:\n    - name: express-server\n      type: webservice\n      properties:\n        cmd:\n          - node\n          - server.js\n        image: oamdev/testapp:v1\n        port: 8080\n      traits:\n        - type: my-route\n          properties:\n            domain: test.my.domain\n            http:\n              \"/api\": 8080\nEOF\n```\n\nIt will generate Kubernetes resources by KubeVela.\n\nWith the help of CUE, we can achieve many advanced features in trait.\n\n## Render Multiple Resources With a Loop\nYou can define the for-loop inside the `outputs`.\n\nnote\n\nIn this case the type of `parameter` field used in the for-loop must be a map.\n\nBelow is an example that will render multiple Kubernetes Services in one trait:\n\n```codeBlockLines_e6Vv\n\"expose\": {\n    type: \"trait\"\n}\n\ntemplate: {\n    parameter: {\n        http: [string]: int\n    }\n    outputs: {\n        for k, v in parameter.http {\n            \"\\(k)\": {\n                apiVersion: \"v1\"\n                kind:       \"Service\"\n                spec: {\n                    selector:\n                        app: context.name\n                    ports: [{\\\n                        port:       v\\\n                        targetPort: v\\\n                    }]\n                }\n            }\n        }\n    }\n}\n```\n\nThe usage of this trait could be:\n\n```codeBlockLines_e6Vv\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: testapp\nspec:\n  components:\n    - name: express-server\n      type: webservice\n      properties:\n        ...\n      traits:\n        - type: expose\n          properties:\n            http:\n              myservice1: 8080\n              myservice2: 8081\n```\n\n## Execute HTTP Request in Trait Definition\nThe trait definition can send a HTTP request and capture the response to help you rendering the resource with keyword `processing`.\n\nYou can define HTTP request `method`, `url`, `body`, `header` and `trailer` in the `processing.http` section, and the returned data will be stored in `processing.output`.\n\ntip\n\nPlease ensure the target HTTP server returns a **JSON data** as `output`.\n\nThen you can reference the returned data from `processing.output` in `patch` or `output/outputs`.\n\nBelow is an example:\n\n```codeBlockLines_e6Vv\n\"auth-service\": {\n    type: \"trait\"\n}\n\ntemplate: {\n    parameter: {\n        serviceURL: string\n    }\n\n    processing: {\n        output: {\n            token?: string\n        }\n        // The target server will return a JSON data with `token` as key.\n        http: {\n            method: *\"GET\" | string\n            url:    parameter.serviceURL\n            request: {\n                body?: bytes\n                header: {}\n                trailer: {}\n            }\n        }\n    }\n\n    patch: {\n        data: token: processing.output.token\n    }\n}\n```\n\nIn above example, this trait definition will send request to get the `token` data, and then patch the data to given component instance.\n\n## CUE `Context` for runtime information\nA trait definition can read the generated resources (rendered from `output` and `outputs`) of given component definition.\n\ncaution\n\nGenerally, KubeVela will ensure the component definitions are evaluated before its traits. But there're a [stage mechanism](https://github.com/kubevela/kubevela/pull/4570) that allow trait be deployed before component.\n\nSpecifically, the `context.output` contains the rendered workload API resource (whose GVK is indicated by `spec.workload` in component definition), and use `context.outputs.<xx>` to contain all the other rendered API resources.\n\nLet's use an example to see this feature:\n\n1. Let's define a component definition `myworker` like below:\n\n```codeBlockLines_e6Vv\n\"myworker\": {\n    attributes: workload: definition: {\n        apiVersion: \"apps/v1\"\n        kind:       \"Deployment\"\n    }\n    type: \"component\"\n}\n\ntemplate: {\n    output: {\n        apiVersion: \"apps/v1\"\n        kind:       \"Deployment\"\n        spec: {\n            selector: matchLabels: {\n                \"app.oam.dev/component\": context.name\n            }\n\n            template: {\n                metadata: labels: {\n                    \"app.oam.dev/component\": context.name\n                }\n                spec: {\n                    containers: [{\\\n                        name:  context.name\\\n                        image: parameter.image\\\n                        ports: [{containerPort: parameter.port}]\\\n                        envFrom: [{\\\n                            configMapRef: name: context.name + \"game-config\"\\\n                        }]\\\n                        if parameter[\"cmd\"] != _|_ {\\\n                            command: parameter.cmd\\\n                        }\\\n                    }]\n                }\n            }\n        }\n    }\n\n    outputs: gameconfig: {\n        apiVersion: \"v1\"\n        kind:       \"ConfigMap\"\n        metadata: {\n            name: context.name + \"game-config\"\n        }\n        data: {\n            enemies: parameter.enemies\n            lives:   parameter.lives\n        }\n    }\n\n    parameter: {\n        // +usage=Which image would you like to use for your service\n        // +short=i\n        image: string\n        // +usage=Commands to run in the container\n        cmd?: [...string]\n        lives:   string\n        enemies: string\n        port:    int\n    }\n}\n```\n\n2. Define a new `myingress` trait that read the port.\n\n```codeBlockLines_e6Vv\n\"myingress\": {\n    type: \"trait\"\n  attributes: {\n        appliesToWorkloads: [\"myworker\"]\n  }\n}\n\ntemplate: {\n    parameter: {\n        domain:     string\n        path:       string\n        exposePort: int\n    }\n    // trait template can have multiple outputs in one trait\n    outputs: service: {\n        apiVersion: \"v1\"\n        kind:       \"Service\"\n        spec: {\n            selector:\n                app: context.name\n            ports: [{\\\n                port:       parameter.exposePort\\\n                targetPort: context.output.spec.template.spec.containers[0].ports[0].containerPort\\\n            }]\n        }\n    }\n    outputs: ingress: {\n        apiVersion: \"networking.k8s.io/v1beta1\"\n        kind:       \"Ingress\"\n        metadata:\n                name: context.name\n        labels: config: context.outputs.gameconfig.data.enemies\n        spec: {\n            rules: [{\\\n                host: parameter.domain\\\n                http: {\\\n                    paths: [{\\\n                        path: parameter.path\\\n                        backend: {\\\n                            serviceName: context.name\\\n                            servicePort: parameter.exposePort\\\n                        }\\\n                    }]\\\n                }\\\n            }]\n        }\n    }\n}\n```\n\nIn detail, The trait `myingress` can only apply to the specific ComponentDefinition `myworker`:\n\n1. the rendered Kubernetes Deployment resource will be stored in the `context.output`,\n2. all other rendered resources will be stored in `context.outputs.<xx>`, with `<xx>` is the unique name in every `template.outputs`.\n\nThus, in TraitDefinition `myingress`, it can read the rendered API resources (e.g. `context.outputs.gameconfig.data.enemies`) from the `context` and get the `targetPort` and `labels.config.`\n\n## Patch Trait\nBesides generate objects from trait, one more important thing we can do in trait is to patch or override the configuration of\nComponent. But why do we need to patch or override?\n\nThere're several reasons:\n\n1. The component could be defined by another person, for separation of concern, the operator can attach an operational trait to change that data.\n2. The component could be defined by third party which is not controlled by the one who use it.\n\nSo KubeVela allow patch or override in this case, please refer to [patch trait](https://kubevela.io/docs/platform-engineers/traits/patch-trait/) for more details. As trait and workflow step can both patch, so we write them together.\n\n## Define Health for Definition\nYou can also define health check policy and status message when a trait deployed and tell the real status to end users.\n\n### Health Check\n\nThe spec of health check is `<trait-type-name>.attributes.status.healthPolicy`, it's similar to component definition.\n\nIf not defined, the health result will always be `true`, which means it will be marked as healthy immediately after resources applied to Kubernetes. You can define a CUE expression in it to notify if the trait is healthy or not.\n\nThe keyword in CUE is `isHealth`, the result of CUE expression must be `bool` type.\n\nKubeVela runtime will evaluate the CUE expression periodically until it becomes healthy. Every time the controller will get all the Kubernetes resources and fill them into the `context` variables.\n\nSo the context will contain following information:\n\n```codeBlockLines_e6Vv\ncontext:{\n  name: <component name>\n  appName: <app name>\n  outputs: {\n    <resource1>: <K8s trait resource1>\n    <resource2>: <K8s trait resource2>\n  }\n}\n```\n\nThe example of health check likes below:\n\n```codeBlockLines_e6Vv\nmy-ingress: {\n    type: \"trait\"\n    ...\n    attributes: {\n        status: {\n            healthPolicy: #\"\"\"\n              isHealth: len(context.outputs.service.spec.clusterIP) > 0\n              \"\"\"\n        }\n    }\n}\n```\n\nYou can also use the `parameter` defined in the template like:\n\n```codeBlockLines_e6Vv\nmytrait: {\n    type: \"trait\"\n    ...\n    attributes: {\n        status: {\n            healthPolicy: #\"\"\"\n                isHealth: context.outputs.\"mytrait-\\(parameter.name)\".status.state == \"Available\"\n              \"\"\"\n        }\n    }\n  template: {\n    parameter: {\n      name: string\n    }\n    ...\n}\n```\n\nThe health check result will be recorded into the corresponding trait in `.status.services` of `Application` resource.\n\n```codeBlockLines_e6Vv\napiVersion: core.oam.dev/v1beta1\nkind: Application\nstatus:\n  ...\n  services:\n  - healthy: true\n    ...\n    name: myweb\n    traits:\n    - healthy: true\n      type: my-ingress\n  status: running\n```\n\n## Custom Status\nThe spec of custom status is `<trait-type-name>.attributes.status.customStatus`, it shares the same mechanism with the health check.\n\nThe keyword in CUE is `message`, the result of CUE expression must be `string` type.\n\nApplication CRD controller will evaluate the CUE expression after the health check succeed.\n\nThe example of custom status likes below:\n\n```codeBlockLines_e6Vv\nmy-service: {\n    type: \"trait\"\n    ...\n    attributes: {\n        status: {\n            customStatus: #\"\"\"\n                if context.outputs.ingress.status.loadBalancer.ingress != _|_ {\n                    let igs = context.outputs.ingress.status.loadBalancer.ingress\n                  if igs[0].ip != _|_ {\n                    if igs[0].host != _|_ {\n                        message: \"Visiting URL: \" + context.outputs.ingress.spec.rules[0].host + \", IP: \" + igs[0].ip\n                    }\n                    if igs[0].host == _|_ {\n                        message: \"Host not specified, visit the cluster or load balancer in front of the cluster with IP: \" + igs[0].ip\n                    }\n                  }\n                }\n                \"\"\"\n        }\n    }\n}\n```\n\nThe message will be recorded into the corresponding trait in `.status.services` of `Application` resource.\n\n```codeBlockLines_e6Vv\napiVersion: core.oam.dev/v1beta1\nkind: Application\nstatus:\n  ...\n  services:\n  - healthy: true\n    ...\n    name: myweb\n    traits:\n    - healthy: true\n      message: 'Visiting URL: www.example.com, IP: 47.111.233.220'\n      type: my-ingress\n  status: running\n```\n\n## Full available `context` in Trait\n| Context Variable | Description | Type |\n| :-: | :-: | :-: |\n| `context.appName` | The app name corresponding to the current instance of the application. | string |\n| `context.namespace` | The target namespace of the current resource is going to be deployed, it can be different with the namespace of application if overridden by some policies. | string |\n| `context.cluster` | The target cluster of the current resource is going to be deployed, it can be different with the namespace of application if overridden by some policies. | string |\n| `context.appRevision` | The app version name corresponding to the current instance of the application. | string |\n| `context.appRevisionNum` | The app version number corresponding to the current instance of the application. | int |\n| `context.name` | The component name corresponding to the current instance of the application. | string |\n| `context.revision` | The version name of the current component instance. | string |\n| `context.output` | The object structure after instantiation of current component. | Object Map |\n| `context.outputs.<resourceName>` | Structure after instantiation of current component auxiliary resources. | Object Map |\n| `context.workflowName` | The workflow name specified in annotation. | string |\n| `context.publishVersion` | The version of application instance specified in annotation. | string |\n| `context.components` | The object structure of components spec in this application. | Object Map |\n| `context.appLabels` | The labels of the current application instance. | Object Map |\n| `context.appAnnotations` | The annotations of the current application instance. | Object Map |\n\n## Cluster Version\n| Context Variable | Description | Type |\n| :-: | :-: | :-: |\n| `context.clusterVersion.major` | The major version of the runtime Kubernetes cluster. | string |\n| `context.clusterVersion.gitVersion` | The gitVersion of the runtime Kubernetes cluster. | string |\n| `context.clusterVersion.platform` | The platform information of the runtime Kubernetes cluster. | string |\n| `context.clusterVersion.minor` | The minor version of the runtime Kubernetes cluster. | int |\n\nThe cluster version context info can be used for graceful upgrade of definition. For example, you can define different API according to the cluster version.\n\n```codeBlockLines_e6Vv\n outputs: ingress: {\n    if context.clusterVersion.minor < 19 {\n        apiVersion: \"networking.k8s.io/v1beta1\"\n    }\n    if context.clusterVersion.minor >= 19 {\n        apiVersion: \"networking.k8s.io/v1\"\n    }\n    kind: \"Ingress\"\n}\n```\n\nOr use string contain pattern for this usage:\n\n```codeBlockLines_e6Vv\nimport \"strings\"\n\nif strings.Contains(context.clusterVersion.gitVersion, \"k3s\") {\n     provider: \"k3s\"\n}\nif strings.Contains(context.clusterVersion.gitVersion, \"aliyun\") {\n     provider: \"aliyun\"\n}\n```\n\n## Trait definition in Kubernetes\nKubeVela is fully programmable via CUE, while it leverage Kubernetes as control plane and align with the API in yaml.\nAs a result, the CUE definition will be converted as Kubernetes API when applied into cluster.\n\nThe trait definition will be in the following API format:\n\n```codeBlockLines_e6Vv\napiVersion: core.oam.dev/v1beta1\nkind: TraitDefinition\nmetadata:\n  name: <TraitDefinition name>\n  annotations:\n    definition.oam.dev/description: <function description>\nspec:\n  definition:\n    apiVersion: <corresponding Kubernetes resource group>\n    kind: <corresponding Kubernetes resource type>\n  workloadRefPath: <The path to the reference field of the Workload object in the Trait>\n  podDisruptive: <whether the parameter update of Trait cause the underlying resource (pod) to restart>\n  manageWorkload: <Whether the workload is managed by this Trait>\n  skipRevisionAffect: <Whether this Trait is not included in the calculation of version changes>\n  appliesToWorkloads:\n  - <Workload that TraitDefinition can adapt to>\n  conflictsWith:\n  - <other Traits that conflict with this><>\n  revisionEnabled: <whether Trait is aware of changes in component version>\n  controlPlaneOnly: <Whether resources generated by trait are dispatched to the hubcluster (local)>\n  schematic:  # Abstract\n    cue: # There are many abstracts\n      template: <CUE format template>\n```\n\nYou can check the detail of this format [here](https://kubevela.io/docs/platform-engineers/oam/x-definition/).\n\n## More examples to learn\nYou can check the following resources for more examples:\n\n- Builtin trait definitions in the [KubeVela github repo](https://github.com/kubevela/kubevela/tree/master/vela-templates/definitions/internal/trait).\n- Definitions defined in addons in the [catalog repo](https://github.com/kubevela/catalog/tree/master/addons).\n\n- [Generate a Trait scaffold](https://kubevela.io/docs/platform-engineers/traits/customize-trait/#generate-a-trait-scaffold)\n- [Define a trait to compose resources](https://kubevela.io/docs/platform-engineers/traits/customize-trait/#define-a-trait-to-compose-resources)\n  - [Render Multiple Resources With a Loop](https://kubevela.io/docs/platform-engineers/traits/customize-trait/#render-multiple-resources-with-a-loop)\n  - [Execute HTTP Request in Trait Definition](https://kubevela.io/docs/platform-engineers/traits/customize-trait/#execute-http-request-in-trait-definition)\n- [CUE `Context` for runtime information](https://kubevela.io/docs/platform-engineers/traits/customize-trait/#cue-context-for-runtime-information)\n- [Patch Trait](https://kubevela.io/docs/platform-engineers/traits/customize-trait/#patch-trait)\n- [Define Health for Definition](https://kubevela.io/docs/platform-engineers/traits/customize-trait/#define-health-for-definition)\n  - [Health Check](https://kubevela.io/docs/platform-engineers/traits/customize-trait/#health-check)\n  - [Custom Status](https://kubevela.io/docs/platform-engineers/traits/customize-trait/#custom-status)\n- [Full available `context` in Trait](https://kubevela.io/docs/platform-engineers/traits/customize-trait/#full-available-context-in-trait)\n  - [Cluster Version](https://kubevela.io/docs/platform-engineers/traits/customize-trait/#cluster-version)\n- [Trait definition in Kubernetes](https://kubevela.io/docs/platform-engineers/traits/customize-trait/#trait-definition-in-kubernetes)\n- [More examples to learn](https://kubevela.io/docs/platform-engineers/traits/customize-trait/#more-examples-to-learn)\n", "metadata": {"source_url": "https://kubevela.io/docs/platform-engineers/traits/customize-trait", "title": "Customize Trait", "description": "This page introduces how to define a custom trait with CUE in KubeVela.", "has_code_examples": true, "has_best_practices": true, "section_count": 12, "timestamp": "2025-02-28 19:00:00", "type": "overview", "page_metadata": {"docusaurus_version": "v1.10", "ogTitle": "Trait Definition | KubeVela", "og:title": "Trait Definition | KubeVela", "theme-color": "#ffffff", "og:url": "https://kubevela.io/docs/platform-engineers/traits/customize-trait/", "title": "Trait Definition | KubeVela", "ogUrl": "https://kubevela.io/docs/platform-engineers/traits/customize-trait/", "viewport": "width=device-width, initial-scale=1.0", "ogDescription": "In this section we will introduce how to define a custom trait with CUE. Make sure you've learned the basic knowledge about Definition Concept and how to manage definition.", "og:description": "In this section we will introduce how to define a custom trait with CUE. Make sure you've learned the basic knowledge about Definition Concept and how to manage definition.", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docsearch:docusaurus_tag": "docs-default-v1.10", "description": "In this section we will introduce how to define a custom trait with CUE. Make sure you've learned the basic knowledge about Definition Concept and how to manage definition.", "docsearch:language": "en", "twitter:card": "summary_large_image", "msapplication-config": "/img/favicons/browserconfig.xml", "language": "en", "docusaurus_locale": "en", "docusaurus_tag": "docs-default-v1.10", "docsearch:version": "v1.10", "generator": "Docusaurus v2.4.3", "scrapeId": "be7832f2-3ac9-4320-86c4-f83c66ad4522", "sourceURL": "https://kubevela.io/docs/platform-engineers/traits/customize-trait", "url": "https://kubevela.io/docs/platform-engineers/traits/customize-trait/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: Can you show me some code examples for \"Customize Trait\"?\n\nAssistant: Here are some code examples:\n\n### Generate a Trait scaffold\n```yaml\nvela def init my-route -t trait --desc \"My ingress route trait.\" > myroute.cue\n```\n\n### Expected content of the scaffold\n```yaml\n// $ cat myroute.cue\n\"my-route\": {\n    annotations: {}\n    attributes: {\n        appliesToWorkloads: []\n        conflictsWith: []\n        podDisruptive:   false\n        workloadRefPath: \"\"\n    }\n    description: \"My ingress route trait.\"\n    labels: {}\n    type: \"trait\"\n}\ntemplate: {\n    patch: {}\n    parameter: {}\n}\n```\n\n", "metadata": {"source_url": "https://kubevela.io/docs/platform-engineers/traits/customize-trait", "title": "Customize Trait", "description": "This page introduces how to define a custom trait with CUE in KubeVela.", "has_code_examples": true, "has_best_practices": true, "section_count": 12, "timestamp": "2025-02-28 19:00:00", "type": "code_examples", "page_metadata": {"docusaurus_version": "v1.10", "ogTitle": "Trait Definition | KubeVela", "og:title": "Trait Definition | KubeVela", "theme-color": "#ffffff", "og:url": "https://kubevela.io/docs/platform-engineers/traits/customize-trait/", "title": "Trait Definition | KubeVela", "ogUrl": "https://kubevela.io/docs/platform-engineers/traits/customize-trait/", "viewport": "width=device-width, initial-scale=1.0", "ogDescription": "In this section we will introduce how to define a custom trait with CUE. Make sure you've learned the basic knowledge about Definition Concept and how to manage definition.", "og:description": "In this section we will introduce how to define a custom trait with CUE. Make sure you've learned the basic knowledge about Definition Concept and how to manage definition.", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docsearch:docusaurus_tag": "docs-default-v1.10", "description": "In this section we will introduce how to define a custom trait with CUE. Make sure you've learned the basic knowledge about Definition Concept and how to manage definition.", "docsearch:language": "en", "twitter:card": "summary_large_image", "msapplication-config": "/img/favicons/browserconfig.xml", "language": "en", "docusaurus_locale": "en", "docusaurus_tag": "docs-default-v1.10", "docsearch:version": "v1.10", "generator": "Docusaurus v2.4.3", "scrapeId": "be7832f2-3ac9-4320-86c4-f83c66ad4522", "sourceURL": "https://kubevela.io/docs/platform-engineers/traits/customize-trait", "url": "https://kubevela.io/docs/platform-engineers/traits/customize-trait/", "statusCode": 200}}}
{"text": "System: You are a helpful KubeVela expert.\n\nUser: What are the best practices for \"Customize Trait\"?\n\nAssistant: Here are the recommended best practices:\n\n• There's a bug in vela CLI( `<=1.4.2`), the `vela def init` command will generate `definitionRef: \"\"` in `attributes` which is wrong, please remove that line.\n• Actually the CUE template of trait here will be evaluated with component CUE template in the same context, so the name can't be conflict. That also explain why the `output` can't be defined in trait.\n• Please ensure the target HTTP server returns a **JSON data** as `output`.\n", "metadata": {"source_url": "https://kubevela.io/docs/platform-engineers/traits/customize-trait", "title": "Customize Trait", "description": "This page introduces how to define a custom trait with CUE in KubeVela.", "has_code_examples": true, "has_best_practices": true, "section_count": 12, "timestamp": "2025-02-28 19:00:00", "type": "best_practices", "page_metadata": {"docusaurus_version": "v1.10", "ogTitle": "Trait Definition | KubeVela", "og:title": "Trait Definition | KubeVela", "theme-color": "#ffffff", "og:url": "https://kubevela.io/docs/platform-engineers/traits/customize-trait/", "title": "Trait Definition | KubeVela", "ogUrl": "https://kubevela.io/docs/platform-engineers/traits/customize-trait/", "viewport": "width=device-width, initial-scale=1.0", "ogDescription": "In this section we will introduce how to define a custom trait with CUE. Make sure you've learned the basic knowledge about Definition Concept and how to manage definition.", "og:description": "In this section we will introduce how to define a custom trait with CUE. Make sure you've learned the basic knowledge about Definition Concept and how to manage definition.", "favicon": "https://kubevela.io/img/favicons/favicon.ico", "docsearch:docusaurus_tag": "docs-default-v1.10", "description": "In this section we will introduce how to define a custom trait with CUE. Make sure you've learned the basic knowledge about Definition Concept and how to manage definition.", "docsearch:language": "en", "twitter:card": "summary_large_image", "msapplication-config": "/img/favicons/browserconfig.xml", "language": "en", "docusaurus_locale": "en", "docusaurus_tag": "docs-default-v1.10", "docsearch:version": "v1.10", "generator": "Docusaurus v2.4.3", "scrapeId": "be7832f2-3ac9-4320-86c4-f83c66ad4522", "sourceURL": "https://kubevela.io/docs/platform-engineers/traits/customize-trait", "url": "https://kubevela.io/docs/platform-engineers/traits/customize-trait/", "statusCode": 200}}}

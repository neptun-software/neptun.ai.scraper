[
  {
    "index": 0,
    "tags": [
      "npm CLI commands"
    ],
    "content": [
      "npm",
      "npm access",
      "npm adduser",
      "npm audit",
      "npm bugs",
      "npm cache",
      "npm ci",
      "npm completion",
      "npm config",
      "npm dedupe",
      "npm deprecate",
      "npm diff",
      "npm dist-tag",
      "npm docs",
      "npm doctor",
      "npm edit",
      "npm exec",
      "npm explain",
      "npm explore",
      "npm find-dupes",
      "npm fund",
      "npm help",
      "npm help-search",
      "npm init",
      "npm install",
      "npm install-ci-test",
      "npm install-test",
      "npm link",
      "npm login",
      "npm logout",
      "npm ls",
      "npm org",
      "npm outdated",
      "npm owner",
      "npm pack",
      "npm ping",
      "npm pkg",
      "npm prefix",
      "npm profile",
      "npm prune",
      "npm publish",
      "npm query",
      "npm rebuild",
      "npm repo",
      "npm restart",
      "npm root",
      "npm run-script",
      "npm sbom",
      "npm search",
      "npm shrinkwrap",
      "npm star",
      "npm stars",
      "npm start",
      "npm stop",
      "npm team",
      "npm test",
      "npm token",
      "npm uninstall",
      "npm unpublish",
      "npm unstar",
      "npm update",
      "npm version",
      "npm view",
      "npm whoami",
      "npx"
    ],
    "error": false
  },
  {
    "index": 1,
    "tags": [
      "npm features"
    ],
    "content": [
      "Workspaces is a generic term that refers to the set of features in the npm cli that provides support for managing multiple packages from your local file system from within a singular top-level, root package.",
      "This set of features makes up for a much more streamlined workflow handling linked packages from the local file system.",
      "It automates the linking process as part of npm install and removes the need to manually use npm link in order to add references to packages that should be symlinked into the current node_modules folder.",
      "We also refer to these packages being auto-symlinked during npm install as a single workspace, meaning it's a nested package within the current local file system that is explicitly defined in the package.json workspaces configuration."
    ],
    "error": false
  },
  {
    "index": 2,
    "tags": [
      "npm documentation"
    ],
    "content": [
      "Defining workspaces",
      "Workspaces are usually defined via the workspaces property of the package.json file, e.g:",
      "{ \"name\":\"my-workspaces-powered-project\", \"workspaces\":[\"packages/a\"] }",
      "Given the above package.json example living at a current working directory . that contains a folder named packages/a that itself contains a package.json inside it, defining a Node.js package, e.g:",
      ". +-- package.json `-- packages +-- a |`-- package.json",
      "The expected result once running npm install in this current working directory . is that the folder packages/a will get symlinked to the node_modules folder of the current working dir.",
      "Below is a post npm install example, given that same previous example structure of files and folders:",
      ". +-- node_modules |`-- a ->../packages/a +-- package-lock.json +-- package.json `-- packages +-- a |  `-- package.json"
    ],
    "error": false
  }
]
{"text": "System: You are a helpful biomejs-formatter expert.\n\nUser: Can you explain what Formatter is in biomejs-formatter?\n\nAssistant: Sure, I'd be happy to explain Formatter in biomejs-formatter.\n\n# Formatter\n\nBiome is an opinionated formatter that supports multiple languages. It follows a similar philosophy to Prettier, only supporting a few options to avoid debates over styles, turning into debates over Biome options.Here's a quick rundown of what this is about:\n\n## CLI\n\nThe following command checks the formatting of the files in the `src` directory. It emits text differences if it finds code that is not formatted.\n\n- npm\n- yarn\n- pnpm\n- bun\n- deno\n\n```\n\nnpx @biomejs/biome format ./src\n```\n\n```\nyarn biome format ./src\n```\n\n```\npnpm biome format ./src\n```\n\n```\nbunx biome format ./src\n```\n\n```\ndeno run -A npm:@biomejs/biome format ./src\n```\n\nIf you want to **apply** the new formatting, pass the `--write` option:\n\n- npm\n- yarn\n- pnpm\n- bun\n- deno\n\n```\n\nnpx @biomejs/biome format --write ./src\n```\n\n```\nyarn biome format --write ./src\n```\n\n```\npnpm biome format --write ./src\n```\n\n```\nbunx biome format --write ./src\n```\n\n```\ndeno run -A npm:@biomejs/biome format --write ./src\n```\n\nThe command accepts a list of files and directories.\n\nFor more information about all the available options, check the CLI reference.\n\n## Options\n\nBiome provides some options to tune the behavior of its formatter. Differently from other tools, Biome separates language-agnostic options from language-specific options.\n\nThe formatter options can be set on the CLI or via a Biome configuration file. As of v1.9, Biome supports loading `.editorconfig` files.\n\nIt’s recommended to use a Biome configuration file to ensure that both the Biome CLI and the Biome LSP apply the same options. The following defaults are applied:\n\n```\n{\n  \"formatter\": {\n    \"enabled\": true,\n    \"formatWithErrors\": false,\n    \"ignore\": [],\n    \"attributePosition\": \"auto\",\n    \"indentStyle\": \"tab\",\n    \"indentWidth\": 2,\n    \"lineWidth\": 80,\n    \"lineEnding\": \"lf\"\n  },\n  \"javascript\": {\n    \"formatter\": {\n      \"arrowParentheses\":\"always\",\n      \"bracketSameLine\": false,\n      \"bracketSpacing\": true,\n      \"jsxQuoteStyle\": \"double\",\n      \"quoteProperties\": \"asNeeded\",\n      \"semicolons\": \"always\",\n      \"trailingCommas\": \"all\"\n    }\n  },\n  \"json\": {\n    \"formatter\": {\n      \"trailingCommas\": \"none\"\n    }\n  }\n}\n```\n\nThe main language-agnostic options supported by the Biome formatter are:\n\n- indent style (default: `tab`): Use spaces or tabs for indention;\n- indent width (default: `2`): The number of spaces per indention level.\n- line width (default: `80`): The column width at which Biome wraps code;\n\nSee the configuration reference for more details.\n\n## Ignore Code\n\nThere are times when the formatted code isn’t ideal.\n\nFor these cases, you can use a format suppression comment:\n\n```\n// biome-ignore format: <explanation>\n```\n\nExample:\n\n```\nconst expr =\n  // biome-ignore format: the array should not be formatted\n  [\\\n    (2 * n) / (r - l),\\\n    0,\\\n    (r + l) / (r - l),\\\n    0,\\\n    0,\\\n    (2 * n) / (t - b),\\\n    (t + b) / (t - b),\\\n    0,\\\n    0,\\\n    0,\\\n    -(f + n) / (f - n),\\\n    -(2 * f * n) / (f - n),\\\n    0,\\\n    0,\\\n    -1,\\\n    0,\\\n  ];\n```\n\nBiome doesn’t provide ignore comments that ignore an entire file. However, you can ignore a file using the Biome configuration file.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://biomejs.dev/formatter", "title": "Formatter", "description": "Biome is an opinionated formatter that supports multiple languages. It follows a similar philosophy to Prettier, only supporting a few options to avoid debates over styles, turning into debates over Biome options.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 21:58:54", "type": "overview", "page_metadata": {"ogLocale": "en", "twitter:card": "summary_large_image", "language": "en", "favicon": "https://biomejs.dev/img/favicon.svg", "og:image": "https://biomejs.dev/og/formatter.png", "og:title": "Formatter", "viewport": "width=device-width, initial-scale=1", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "title": "Formatter | Biome", "og:description": "How to use the Biome formatter.", "ogUrl": "https://biomejs.dev/formatter/", "ogImage": "https://biomejs.dev/og/formatter.png", "og:site_name": "Biome", "ogDescription": "How to use the Biome formatter.", "og:url": "https://biomejs.dev/formatter/", "twitter:image": "https://biomejs.dev/og/formatter.png", "ogSiteName": "Biome", "og:locale": "en", "og:type": "article", "ogTitle": "Formatter", "description": "How to use the Biome formatter.", "scrapeId": "39abb2b0-384d-4fe3-9b35-40b662ff932c", "sourceURL": "https://biomejs.dev/formatter", "url": "https://biomejs.dev/formatter/", "statusCode": 200}}}
{"text": "System: You are a helpful biomejs-formatter expert.\n\nUser: How do I cli in biomejs-formatter?\n\nAssistant: To cli in biomejs-formatter, here's what you do:\nThe following command checks the formatting of the files in the `src` directory. It emits text differences if it finds code that is not formatted.\n\n- npm\n- yarn\n- pnpm\n- bun\n- deno\n\n```\n\nnpx @biomejs/biome format ./src\n```\n\n```\nyarn biome format ./src\n```\n\n```\npnpm biome format ./src\n```\n\n```\nbunx biome format ./src\n```\n\n```\ndeno run -A npm:@biomejs/biome format ./src\n```\n\nIf you want to **apply** the new formatting, pass the `--write` option:\n\n- npm\n- yarn\n- pnpm\n- bun\n- deno\n\n```\n\nnpx @biomejs/biome format --write ./src\n```\n\n```\nyarn biome format --write ./src\n```\n\n```\npnpm biome format --write ./src\n```\n\n```\nbunx biome format --write ./src\n```\n\n```\ndeno run -A npm:@biomejs/biome format --write ./src\n```\n\nThe command accepts a list of files and directories.\n\nFor more information about all the available options, check the CLI reference..\nPretty straightforward, right?", "metadata": {"source_url": "https://biomejs.dev/formatter", "title": "Formatter", "description": "Biome is an opinionated formatter that supports multiple languages. It follows a similar philosophy to Prettier, only supporting a few options to avoid debates over styles, turning into debates over Biome options.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 21:58:54", "type": "section_detail", "page_metadata": {"ogLocale": "en", "twitter:card": "summary_large_image", "language": "en", "favicon": "https://biomejs.dev/img/favicon.svg", "og:image": "https://biomejs.dev/og/formatter.png", "og:title": "Formatter", "viewport": "width=device-width, initial-scale=1", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "title": "Formatter | Biome", "og:description": "How to use the Biome formatter.", "ogUrl": "https://biomejs.dev/formatter/", "ogImage": "https://biomejs.dev/og/formatter.png", "og:site_name": "Biome", "ogDescription": "How to use the Biome formatter.", "og:url": "https://biomejs.dev/formatter/", "twitter:image": "https://biomejs.dev/og/formatter.png", "ogSiteName": "Biome", "og:locale": "en", "og:type": "article", "ogTitle": "Formatter", "description": "How to use the Biome formatter.", "scrapeId": "39abb2b0-384d-4fe3-9b35-40b662ff932c", "sourceURL": "https://biomejs.dev/formatter", "url": "https://biomejs.dev/formatter/", "statusCode": 200}}}
{"text": "System: You are a helpful biomejs-formatter expert.\n\nUser: How do I options in biomejs-formatter?\n\nAssistant: To options in biomejs-formatter, here's what you do:\nBiome provides some options to tune the behavior of its formatter. Differently from other tools, Biome separates language-agnostic options from language-specific options.\n\nThe formatter options can be set on the CLI or via a Biome configuration file. As of v1.9, Biome supports loading `.editorconfig` files.\n\nIt’s recommended to use a Biome configuration file to ensure that both the Biome CLI and the Biome LSP apply the same options. The following defaults are applied:\n\n```\n{\n  \"formatter\": {\n    \"enabled\": true,\n    \"formatWithErrors\": false,\n    \"ignore\": [],\n    \"attributePosition\": \"auto\",\n    \"indentStyle\": \"tab\",\n    \"indentWidth\": 2,\n    \"lineWidth\": 80,\n    \"lineEnding\": \"lf\"\n  },\n  \"javascript\": {\n    \"formatter\": {\n      \"arrowParentheses\":\"always\",\n      \"bracketSameLine\": false,\n      \"bracketSpacing\": true,\n      \"jsxQuoteStyle\": \"double\",\n      \"quoteProperties\": \"asNeeded\",\n      \"semicolons\": \"always\",\n      \"trailingCommas\": \"all\"\n    }\n  },\n  \"json\": {\n    \"formatter\": {\n      \"trailingCommas\": \"none\"\n    }\n  }\n}\n```\n\nThe main language-agnostic options supported by the Biome formatter are:\n\n- indent style (default: `tab`): Use spaces or tabs for indention;\n- indent width (default: `2`): The number of spaces per indention level.\n- line width (default: `80`): The column width at which Biome wraps code;\n\nSee the configuration reference for more details..\nPretty straightforward, right?", "metadata": {"source_url": "https://biomejs.dev/formatter", "title": "Formatter", "description": "Biome is an opinionated formatter that supports multiple languages. It follows a similar philosophy to Prettier, only supporting a few options to avoid debates over styles, turning into debates over Biome options.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 21:58:54", "type": "section_detail", "page_metadata": {"ogLocale": "en", "twitter:card": "summary_large_image", "language": "en", "favicon": "https://biomejs.dev/img/favicon.svg", "og:image": "https://biomejs.dev/og/formatter.png", "og:title": "Formatter", "viewport": "width=device-width, initial-scale=1", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "title": "Formatter | Biome", "og:description": "How to use the Biome formatter.", "ogUrl": "https://biomejs.dev/formatter/", "ogImage": "https://biomejs.dev/og/formatter.png", "og:site_name": "Biome", "ogDescription": "How to use the Biome formatter.", "og:url": "https://biomejs.dev/formatter/", "twitter:image": "https://biomejs.dev/og/formatter.png", "ogSiteName": "Biome", "og:locale": "en", "og:type": "article", "ogTitle": "Formatter", "description": "How to use the Biome formatter.", "scrapeId": "39abb2b0-384d-4fe3-9b35-40b662ff932c", "sourceURL": "https://biomejs.dev/formatter", "url": "https://biomejs.dev/formatter/", "statusCode": 200}}}
{"text": "System: You are a helpful biomejs-formatter expert.\n\nUser: How do I ignore code in biomejs-formatter?\n\nAssistant: To ignore code in biomejs-formatter, here's what you do:\nThere are times when the formatted code isn’t ideal.\n\nFor these cases, you can use a format suppression comment:\n\n```\n// biome-ignore format: <explanation>\n```\n\nExample:\n\n```\nconst expr =\n  // biome-ignore format: the array should not be formatted\n  [\\\n    (2 * n) / (r - l),\\\n    0,\\\n    (r + l) / (r - l),\\\n    0,\\\n    0,\\\n    (2 * n) / (t - b),\\\n    (t + b) / (t - b),\\\n    0,\\\n    0,\\\n    0,\\\n    -(f + n) / (f - n),\\\n    -(2 * f * n) / (f - n),\\\n    0,\\\n    0,\\\n    -1,\\\n    0,\\\n  ];\n```\n\nBiome doesn’t provide ignore comments that ignore an entire file. However, you can ignore a file using the Biome configuration file..\nPretty straightforward, right?", "metadata": {"source_url": "https://biomejs.dev/formatter", "title": "Formatter", "description": "Biome is an opinionated formatter that supports multiple languages. It follows a similar philosophy to Prettier, only supporting a few options to avoid debates over styles, turning into debates over Biome options.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 21:58:54", "type": "section_detail", "page_metadata": {"ogLocale": "en", "twitter:card": "summary_large_image", "language": "en", "favicon": "https://biomejs.dev/img/favicon.svg", "og:image": "https://biomejs.dev/og/formatter.png", "og:title": "Formatter", "viewport": "width=device-width, initial-scale=1", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "title": "Formatter | Biome", "og:description": "How to use the Biome formatter.", "ogUrl": "https://biomejs.dev/formatter/", "ogImage": "https://biomejs.dev/og/formatter.png", "og:site_name": "Biome", "ogDescription": "How to use the Biome formatter.", "og:url": "https://biomejs.dev/formatter/", "twitter:image": "https://biomejs.dev/og/formatter.png", "ogSiteName": "Biome", "og:locale": "en", "og:type": "article", "ogTitle": "Formatter", "description": "How to use the Biome formatter.", "scrapeId": "39abb2b0-384d-4fe3-9b35-40b662ff932c", "sourceURL": "https://biomejs.dev/formatter", "url": "https://biomejs.dev/formatter/", "statusCode": 200}}}
{"text": "System: You are a helpful biomejs-formatter expert.\n\nUser: Can you give me some code examples for Formatter in biomejs-formatter?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Check Formatting**:\n\n```yaml\nnpx @biomejs/biome format ./src\n```\n\nThis snippet shows you how to check formatting, which is an important aspect of formatter.\n\n**Apply Formatting**:\n\n```yaml\nnpx @biomejs/biome format --write ./src\n```\n\nThis snippet shows you how to apply formatting, which is an important aspect of formatter.\n\n**Default Configuration**:\n\n```yaml\n{\n  \"formatter\": {\n    \"enabled\": true,\n    \"formatWithErrors\": false,\n    \"ignore\": [],\n    \"attributePosition\": \"auto\",\n    \"indentStyle\": \"tab\",\n    \"indentWidth\": 2,\n    \"lineWidth\": 80,\n    \"lineEnding\": \"lf\"\n  },\n  \"javascript\": {\n    \"formatter\": {\n      \"arrowParentheses\":\"always\",\n      \"bracketSameLine\": false,\n      \"bracketSpacing\": true,\n      \"jsxQuoteStyle\": \"double\",\n      \"quoteProperties\": \"asNeeded\",\n      \"semicolons\": \"always\",\n      \"trailingCommas\": \"all\"\n    }\n  },\n  \"json\": {\n    \"formatter\": {\n      \"trailingCommas\": \"none\"\n    }\n  }\n}\n```\n\nThis snippet shows you how to default configuration, which is an important aspect of formatter.\n\n", "metadata": {"source_url": "https://biomejs.dev/formatter", "title": "Formatter", "description": "Biome is an opinionated formatter that supports multiple languages. It follows a similar philosophy to Prettier, only supporting a few options to avoid debates over styles, turning into debates over Biome options.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 21:58:54", "type": "code_examples", "page_metadata": {"ogLocale": "en", "twitter:card": "summary_large_image", "language": "en", "favicon": "https://biomejs.dev/img/favicon.svg", "og:image": "https://biomejs.dev/og/formatter.png", "og:title": "Formatter", "viewport": "width=device-width, initial-scale=1", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "title": "Formatter | Biome", "og:description": "How to use the Biome formatter.", "ogUrl": "https://biomejs.dev/formatter/", "ogImage": "https://biomejs.dev/og/formatter.png", "og:site_name": "Biome", "ogDescription": "How to use the Biome formatter.", "og:url": "https://biomejs.dev/formatter/", "twitter:image": "https://biomejs.dev/og/formatter.png", "ogSiteName": "Biome", "og:locale": "en", "og:type": "article", "ogTitle": "Formatter", "description": "How to use the Biome formatter.", "scrapeId": "39abb2b0-384d-4fe3-9b35-40b662ff932c", "sourceURL": "https://biomejs.dev/formatter", "url": "https://biomejs.dev/formatter/", "statusCode": 200}}}
{"text": "System: You are a helpful biomejs-formatter expert.\n\nUser: What are some tips for using Formatter in biomejs-formatter effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nUse a Biome configuration file to ensure consistent options across CLI and LSP.\n\nUse format suppression comments for specific cases where formatting is not ideal.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://biomejs.dev/formatter", "title": "Formatter", "description": "Biome is an opinionated formatter that supports multiple languages. It follows a similar philosophy to Prettier, only supporting a few options to avoid debates over styles, turning into debates over Biome options.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-02-28 21:58:54", "type": "best_practices", "page_metadata": {"ogLocale": "en", "twitter:card": "summary_large_image", "language": "en", "favicon": "https://biomejs.dev/img/favicon.svg", "og:image": "https://biomejs.dev/og/formatter.png", "og:title": "Formatter", "viewport": "width=device-width, initial-scale=1", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "title": "Formatter | Biome", "og:description": "How to use the Biome formatter.", "ogUrl": "https://biomejs.dev/formatter/", "ogImage": "https://biomejs.dev/og/formatter.png", "og:site_name": "Biome", "ogDescription": "How to use the Biome formatter.", "og:url": "https://biomejs.dev/formatter/", "twitter:image": "https://biomejs.dev/og/formatter.png", "ogSiteName": "Biome", "og:locale": "en", "og:type": "article", "ogTitle": "Formatter", "description": "How to use the Biome formatter.", "scrapeId": "39abb2b0-384d-4fe3-9b35-40b662ff932c", "sourceURL": "https://biomejs.dev/formatter", "url": "https://biomejs.dev/formatter/", "statusCode": 200}}}
{"text": "System: You are a helpful biomejs-formatter expert.\n\nUser: Can you explain what Differences with Prettier is in biomejs-formatter?\n\nAssistant: Sure, I'd be happy to explain Differences with Prettier in biomejs-formatter.\n\n# Differences with Prettier\n\nIn some cases, Biome has intentionally decided to format code in a way that doesn’t match Prettier’s output. These divergences are explained below.Here's a quick rundown of what this is about:\n\n## Prettier doesn’t unquote some object properties that are valid JavaScript identifiers.\n\nPrettier and Biome unquote object and class properties that are valid JavaScript identifiers. Prettier unquotes only valid ES5 identifiers. This is a legacy restriction in an ecosystem where ES2015 is now widespread. Thus, we decided to diverge here by un-quoting all valid JavaScript identifiers in ES2015+. A possible workaround would be to introduce a configuration to set the ECMAScript version a project uses. We could then adjust the un-quoting behaviour based on that version. Setting the ECMAScript version to `ES5` could match Prettier’s behaviour.\n\n## Prettier has an inconsistent behavior for assignment in computed keys.\n\nPrettier and Biome enclose some assignment expressions between parentheses, particularly in conditionals. This allows Biome to identify an expression that should be a comparison. Prettier has inconsistent behaviour because it adds parentheses for an assignment in a computed key of an object property and doesn’t for a computed key of a class property.\n\n## Prettier adds a trailing comma to type parameters of arrow functions even when it is not required.\n\nIn some specific cases, a type parameter list of an arrow function requires a trailing comma to distinguish it from a JSX element. When a default type is provided, this trailing comma is not required. Here, we diverge from Prettier because we think it better respects the original intent of Prettier, which was to add a trailing comma only when required.\n\n## Prettier has an inconsistent behavior for parenthesized non-null-asserted optional chains\n\nIn TypeScript, the non-null assertion operator `!` allows asserting that a value is non-null. When applied on an optional chain, the assertion applies to the entire chain regardless of the presence of parentheses, making equivalent `(a.?.b)!` and `a.?.b!`. The previous code examples are already well-formatted, according to Prettier. Prettier is used to enforce the presence or the absence of parentheses. This looks like a missed opportunity to normalize the code.\n\n## Prettier formats invalid syntaxes\n\nPrettier’s Babel-based parsing for JavaScript and TypeScript is very loose and allows multiple errors to be ignored. Biome’s parser is intentionally stricter than the Prettier parser. It correctly identifies the following syntax errors: - A function cannot have duplicate modifiers - invalid order of properties’ modifiers - Function declarations are not allowed to have bodies - non-abstract classes cannot have abstract properties - An optional chain cannot be assigned - the `const` modifier cannot be set on a type parameter of an interface - top-level return - etc.\n\n## Duplicate modifiers on class properties\n\nInput: // Multiple accessibility modifiers class Foo { private public a  = 1; } // Declare function with body declare function foo ( ) {  } // Invalid use of abstract class Bar { abstract  foo  ; } // Duplicate Readonly class Read { readonly readonly   x: number; }\n\n## Assignment to an optional chain\n\nInput: (a?.b) = c; \n\n## Incorrect modifier for the type parameters of an interface\n\nInput: interface L<in const T> {}\n\n## Top-level return\n\nInput: return someVeryLongStringA && someVeryLongStringB && someVeryLongStringC && someVeryLongStringD\n\n## Erroneous self-increment and self-decrement\n\nInput: (1)++; \n\n## Use of abstract modifier in non-abstract classes\n\nInput: class C { abstract f() : number; }\n\n## Prettier has inconsistencies between TypeScript and Babel parsing\n\nPrettier supports a number of different parsers for JavaScript and TypeScript code, all of which are meant to be compatible with the estree spec. Most of the time, Prettier uses Babel as the default parser for JavaScript code, but when parsing TypeScript, it will try to use TypeScript’s own parser first and only fall back to Babel with TypeScript enabled afterward.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://biomejs.dev/formatter/differences-with-prettier", "title": "Differences with Prettier", "description": "In some cases, Biome has intentionally decided to format code in a way that doesn’t match Prettier’s output. These divergences are explained below.", "has_code_examples": true, "has_best_practices": true, "section_count": 12, "timestamp": "2025-02-28 21:59:32", "type": "overview", "page_metadata": {"og:type": "article", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "ogImage": "https://biomejs.dev/og/formatter/differences-with-prettier.png", "og:title": "Differences with Prettier", "twitter:card": "summary_large_image", "og:url": "https://biomejs.dev/formatter/differences-with-prettier/", "og:description": "In-depth explanation of the differences with Prettier.", "ogSiteName": "Biome", "title": "Differences with Prettier | Biome", "ogTitle": "Differences with Prettier", "ogLocale": "en", "language": "en", "og:locale": "en", "ogDescription": "In-depth explanation of the differences with Prettier.", "og:site_name": "Biome", "favicon": "https://biomejs.dev/img/favicon.svg", "description": "In-depth explanation of the differences with Prettier.", "ogUrl": "https://biomejs.dev/formatter/differences-with-prettier/", "og:image": "https://biomejs.dev/og/formatter/differences-with-prettier.png", "twitter:image": "https://biomejs.dev/og/formatter/differences-with-prettier.png", "viewport": "width=device-width, initial-scale=1", "scrapeId": "6c813031-e17f-436f-aeb8-85e5c25886ca", "sourceURL": "https://biomejs.dev/formatter/differences-with-prettier", "url": "https://biomejs.dev/formatter/differences-with-prettier/", "statusCode": 200}}}
{"text": "System: You are a helpful biomejs-formatter expert.\n\nUser: How do I prettier doesn’t unquote some object properties that are valid javascript identifiers. in biomejs-formatter?\n\nAssistant: To prettier doesn’t unquote some object properties that are valid javascript identifiers. in biomejs-formatter, here's what you do:\nPrettier and Biome unquote object and class properties that are valid JavaScript identifiers. Prettier unquotes only valid ES5 identifiers. This is a legacy restriction in an ecosystem where ES2015 is now widespread. Thus, we decided to diverge here by un-quoting all valid JavaScript identifiers in ES2015+. A possible workaround would be to introduce a configuration to set the ECMAScript version a project uses. We could then adjust the un-quoting behaviour based on that version. Setting the ECMAScript version to `ES5` could match Prettier’s behaviour..\nPretty straightforward, right?", "metadata": {"source_url": "https://biomejs.dev/formatter/differences-with-prettier", "title": "Differences with Prettier", "description": "In some cases, Biome has intentionally decided to format code in a way that doesn’t match Prettier’s output. These divergences are explained below.", "has_code_examples": true, "has_best_practices": true, "section_count": 12, "timestamp": "2025-02-28 21:59:32", "type": "section_detail", "page_metadata": {"og:type": "article", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "ogImage": "https://biomejs.dev/og/formatter/differences-with-prettier.png", "og:title": "Differences with Prettier", "twitter:card": "summary_large_image", "og:url": "https://biomejs.dev/formatter/differences-with-prettier/", "og:description": "In-depth explanation of the differences with Prettier.", "ogSiteName": "Biome", "title": "Differences with Prettier | Biome", "ogTitle": "Differences with Prettier", "ogLocale": "en", "language": "en", "og:locale": "en", "ogDescription": "In-depth explanation of the differences with Prettier.", "og:site_name": "Biome", "favicon": "https://biomejs.dev/img/favicon.svg", "description": "In-depth explanation of the differences with Prettier.", "ogUrl": "https://biomejs.dev/formatter/differences-with-prettier/", "og:image": "https://biomejs.dev/og/formatter/differences-with-prettier.png", "twitter:image": "https://biomejs.dev/og/formatter/differences-with-prettier.png", "viewport": "width=device-width, initial-scale=1", "scrapeId": "6c813031-e17f-436f-aeb8-85e5c25886ca", "sourceURL": "https://biomejs.dev/formatter/differences-with-prettier", "url": "https://biomejs.dev/formatter/differences-with-prettier/", "statusCode": 200}}}
{"text": "System: You are a helpful biomejs-formatter expert.\n\nUser: How do I prettier has an inconsistent behavior for assignment in computed keys. in biomejs-formatter?\n\nAssistant: To prettier has an inconsistent behavior for assignment in computed keys. in biomejs-formatter, here's what you do:\nPrettier and Biome enclose some assignment expressions between parentheses, particularly in conditionals. This allows Biome to identify an expression that should be a comparison. Prettier has inconsistent behaviour because it adds parentheses for an assignment in a computed key of an object property and doesn’t for a computed key of a class property..\nPretty straightforward, right?", "metadata": {"source_url": "https://biomejs.dev/formatter/differences-with-prettier", "title": "Differences with Prettier", "description": "In some cases, Biome has intentionally decided to format code in a way that doesn’t match Prettier’s output. These divergences are explained below.", "has_code_examples": true, "has_best_practices": true, "section_count": 12, "timestamp": "2025-02-28 21:59:32", "type": "section_detail", "page_metadata": {"og:type": "article", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "ogImage": "https://biomejs.dev/og/formatter/differences-with-prettier.png", "og:title": "Differences with Prettier", "twitter:card": "summary_large_image", "og:url": "https://biomejs.dev/formatter/differences-with-prettier/", "og:description": "In-depth explanation of the differences with Prettier.", "ogSiteName": "Biome", "title": "Differences with Prettier | Biome", "ogTitle": "Differences with Prettier", "ogLocale": "en", "language": "en", "og:locale": "en", "ogDescription": "In-depth explanation of the differences with Prettier.", "og:site_name": "Biome", "favicon": "https://biomejs.dev/img/favicon.svg", "description": "In-depth explanation of the differences with Prettier.", "ogUrl": "https://biomejs.dev/formatter/differences-with-prettier/", "og:image": "https://biomejs.dev/og/formatter/differences-with-prettier.png", "twitter:image": "https://biomejs.dev/og/formatter/differences-with-prettier.png", "viewport": "width=device-width, initial-scale=1", "scrapeId": "6c813031-e17f-436f-aeb8-85e5c25886ca", "sourceURL": "https://biomejs.dev/formatter/differences-with-prettier", "url": "https://biomejs.dev/formatter/differences-with-prettier/", "statusCode": 200}}}
{"text": "System: You are a helpful biomejs-formatter expert.\n\nUser: How do I prettier adds a trailing comma to type parameters of arrow functions even when it is not required. in biomejs-formatter?\n\nAssistant: To prettier adds a trailing comma to type parameters of arrow functions even when it is not required. in biomejs-formatter, here's what you do:\nIn some specific cases, a type parameter list of an arrow function requires a trailing comma to distinguish it from a JSX element. When a default type is provided, this trailing comma is not required. Here, we diverge from Prettier because we think it better respects the original intent of Prettier, which was to add a trailing comma only when required..\nPretty straightforward, right?", "metadata": {"source_url": "https://biomejs.dev/formatter/differences-with-prettier", "title": "Differences with Prettier", "description": "In some cases, Biome has intentionally decided to format code in a way that doesn’t match Prettier’s output. These divergences are explained below.", "has_code_examples": true, "has_best_practices": true, "section_count": 12, "timestamp": "2025-02-28 21:59:32", "type": "section_detail", "page_metadata": {"og:type": "article", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "ogImage": "https://biomejs.dev/og/formatter/differences-with-prettier.png", "og:title": "Differences with Prettier", "twitter:card": "summary_large_image", "og:url": "https://biomejs.dev/formatter/differences-with-prettier/", "og:description": "In-depth explanation of the differences with Prettier.", "ogSiteName": "Biome", "title": "Differences with Prettier | Biome", "ogTitle": "Differences with Prettier", "ogLocale": "en", "language": "en", "og:locale": "en", "ogDescription": "In-depth explanation of the differences with Prettier.", "og:site_name": "Biome", "favicon": "https://biomejs.dev/img/favicon.svg", "description": "In-depth explanation of the differences with Prettier.", "ogUrl": "https://biomejs.dev/formatter/differences-with-prettier/", "og:image": "https://biomejs.dev/og/formatter/differences-with-prettier.png", "twitter:image": "https://biomejs.dev/og/formatter/differences-with-prettier.png", "viewport": "width=device-width, initial-scale=1", "scrapeId": "6c813031-e17f-436f-aeb8-85e5c25886ca", "sourceURL": "https://biomejs.dev/formatter/differences-with-prettier", "url": "https://biomejs.dev/formatter/differences-with-prettier/", "statusCode": 200}}}
{"text": "System: You are a helpful biomejs-formatter expert.\n\nUser: How do I prettier has an inconsistent behavior for parenthesized non-null-asserted optional chains in biomejs-formatter?\n\nAssistant: To prettier has an inconsistent behavior for parenthesized non-null-asserted optional chains in biomejs-formatter, here's what you do:\nIn TypeScript, the non-null assertion operator `!` allows asserting that a value is non-null. When applied on an optional chain, the assertion applies to the entire chain regardless of the presence of parentheses, making equivalent `(a.?.b)!` and `a.?.b!`. The previous code examples are already well-formatted, according to Prettier. Prettier is used to enforce the presence or the absence of parentheses. This looks like a missed opportunity to normalize the code..\nPretty straightforward, right?", "metadata": {"source_url": "https://biomejs.dev/formatter/differences-with-prettier", "title": "Differences with Prettier", "description": "In some cases, Biome has intentionally decided to format code in a way that doesn’t match Prettier’s output. These divergences are explained below.", "has_code_examples": true, "has_best_practices": true, "section_count": 12, "timestamp": "2025-02-28 21:59:32", "type": "section_detail", "page_metadata": {"og:type": "article", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "ogImage": "https://biomejs.dev/og/formatter/differences-with-prettier.png", "og:title": "Differences with Prettier", "twitter:card": "summary_large_image", "og:url": "https://biomejs.dev/formatter/differences-with-prettier/", "og:description": "In-depth explanation of the differences with Prettier.", "ogSiteName": "Biome", "title": "Differences with Prettier | Biome", "ogTitle": "Differences with Prettier", "ogLocale": "en", "language": "en", "og:locale": "en", "ogDescription": "In-depth explanation of the differences with Prettier.", "og:site_name": "Biome", "favicon": "https://biomejs.dev/img/favicon.svg", "description": "In-depth explanation of the differences with Prettier.", "ogUrl": "https://biomejs.dev/formatter/differences-with-prettier/", "og:image": "https://biomejs.dev/og/formatter/differences-with-prettier.png", "twitter:image": "https://biomejs.dev/og/formatter/differences-with-prettier.png", "viewport": "width=device-width, initial-scale=1", "scrapeId": "6c813031-e17f-436f-aeb8-85e5c25886ca", "sourceURL": "https://biomejs.dev/formatter/differences-with-prettier", "url": "https://biomejs.dev/formatter/differences-with-prettier/", "statusCode": 200}}}
{"text": "System: You are a helpful biomejs-formatter expert.\n\nUser: How do I prettier formats invalid syntaxes in biomejs-formatter?\n\nAssistant: To prettier formats invalid syntaxes in biomejs-formatter, here's what you do:\nPrettier’s Babel-based parsing for JavaScript and TypeScript is very loose and allows multiple errors to be ignored. Biome’s parser is intentionally stricter than the Prettier parser. It correctly identifies the following syntax errors: - A function cannot have duplicate modifiers - invalid order of properties’ modifiers - Function declarations are not allowed to have bodies - non-abstract classes cannot have abstract properties - An optional chain cannot be assigned - the `const` modifier cannot be set on a type parameter of an interface - top-level return - etc..\nPretty straightforward, right?", "metadata": {"source_url": "https://biomejs.dev/formatter/differences-with-prettier", "title": "Differences with Prettier", "description": "In some cases, Biome has intentionally decided to format code in a way that doesn’t match Prettier’s output. These divergences are explained below.", "has_code_examples": true, "has_best_practices": true, "section_count": 12, "timestamp": "2025-02-28 21:59:32", "type": "section_detail", "page_metadata": {"og:type": "article", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "ogImage": "https://biomejs.dev/og/formatter/differences-with-prettier.png", "og:title": "Differences with Prettier", "twitter:card": "summary_large_image", "og:url": "https://biomejs.dev/formatter/differences-with-prettier/", "og:description": "In-depth explanation of the differences with Prettier.", "ogSiteName": "Biome", "title": "Differences with Prettier | Biome", "ogTitle": "Differences with Prettier", "ogLocale": "en", "language": "en", "og:locale": "en", "ogDescription": "In-depth explanation of the differences with Prettier.", "og:site_name": "Biome", "favicon": "https://biomejs.dev/img/favicon.svg", "description": "In-depth explanation of the differences with Prettier.", "ogUrl": "https://biomejs.dev/formatter/differences-with-prettier/", "og:image": "https://biomejs.dev/og/formatter/differences-with-prettier.png", "twitter:image": "https://biomejs.dev/og/formatter/differences-with-prettier.png", "viewport": "width=device-width, initial-scale=1", "scrapeId": "6c813031-e17f-436f-aeb8-85e5c25886ca", "sourceURL": "https://biomejs.dev/formatter/differences-with-prettier", "url": "https://biomejs.dev/formatter/differences-with-prettier/", "statusCode": 200}}}
{"text": "System: You are a helpful biomejs-formatter expert.\n\nUser: How do I duplicate modifiers on class properties in biomejs-formatter?\n\nAssistant: To duplicate modifiers on class properties in biomejs-formatter, here's what you do:\nInput: // Multiple accessibility modifiers class Foo { private public a  = 1; } // Declare function with body declare function foo ( ) {  } // Invalid use of abstract class Bar { abstract  foo  ; } // Duplicate Readonly class Read { readonly readonly   x: number; }.\nPretty straightforward, right?", "metadata": {"source_url": "https://biomejs.dev/formatter/differences-with-prettier", "title": "Differences with Prettier", "description": "In some cases, Biome has intentionally decided to format code in a way that doesn’t match Prettier’s output. These divergences are explained below.", "has_code_examples": true, "has_best_practices": true, "section_count": 12, "timestamp": "2025-02-28 21:59:32", "type": "section_detail", "page_metadata": {"og:type": "article", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "ogImage": "https://biomejs.dev/og/formatter/differences-with-prettier.png", "og:title": "Differences with Prettier", "twitter:card": "summary_large_image", "og:url": "https://biomejs.dev/formatter/differences-with-prettier/", "og:description": "In-depth explanation of the differences with Prettier.", "ogSiteName": "Biome", "title": "Differences with Prettier | Biome", "ogTitle": "Differences with Prettier", "ogLocale": "en", "language": "en", "og:locale": "en", "ogDescription": "In-depth explanation of the differences with Prettier.", "og:site_name": "Biome", "favicon": "https://biomejs.dev/img/favicon.svg", "description": "In-depth explanation of the differences with Prettier.", "ogUrl": "https://biomejs.dev/formatter/differences-with-prettier/", "og:image": "https://biomejs.dev/og/formatter/differences-with-prettier.png", "twitter:image": "https://biomejs.dev/og/formatter/differences-with-prettier.png", "viewport": "width=device-width, initial-scale=1", "scrapeId": "6c813031-e17f-436f-aeb8-85e5c25886ca", "sourceURL": "https://biomejs.dev/formatter/differences-with-prettier", "url": "https://biomejs.dev/formatter/differences-with-prettier/", "statusCode": 200}}}
{"text": "System: You are a helpful biomejs-formatter expert.\n\nUser: How do I assignment to an optional chain in biomejs-formatter?\n\nAssistant: To assignment to an optional chain in biomejs-formatter, here's what you do:\nInput: (a?.b) = c; .\nPretty straightforward, right?", "metadata": {"source_url": "https://biomejs.dev/formatter/differences-with-prettier", "title": "Differences with Prettier", "description": "In some cases, Biome has intentionally decided to format code in a way that doesn’t match Prettier’s output. These divergences are explained below.", "has_code_examples": true, "has_best_practices": true, "section_count": 12, "timestamp": "2025-02-28 21:59:32", "type": "section_detail", "page_metadata": {"og:type": "article", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "ogImage": "https://biomejs.dev/og/formatter/differences-with-prettier.png", "og:title": "Differences with Prettier", "twitter:card": "summary_large_image", "og:url": "https://biomejs.dev/formatter/differences-with-prettier/", "og:description": "In-depth explanation of the differences with Prettier.", "ogSiteName": "Biome", "title": "Differences with Prettier | Biome", "ogTitle": "Differences with Prettier", "ogLocale": "en", "language": "en", "og:locale": "en", "ogDescription": "In-depth explanation of the differences with Prettier.", "og:site_name": "Biome", "favicon": "https://biomejs.dev/img/favicon.svg", "description": "In-depth explanation of the differences with Prettier.", "ogUrl": "https://biomejs.dev/formatter/differences-with-prettier/", "og:image": "https://biomejs.dev/og/formatter/differences-with-prettier.png", "twitter:image": "https://biomejs.dev/og/formatter/differences-with-prettier.png", "viewport": "width=device-width, initial-scale=1", "scrapeId": "6c813031-e17f-436f-aeb8-85e5c25886ca", "sourceURL": "https://biomejs.dev/formatter/differences-with-prettier", "url": "https://biomejs.dev/formatter/differences-with-prettier/", "statusCode": 200}}}
{"text": "System: You are a helpful biomejs-formatter expert.\n\nUser: How do I incorrect modifier for the type parameters of an interface in biomejs-formatter?\n\nAssistant: To incorrect modifier for the type parameters of an interface in biomejs-formatter, here's what you do:\nInput: interface L<in const T> {}.\nPretty straightforward, right?", "metadata": {"source_url": "https://biomejs.dev/formatter/differences-with-prettier", "title": "Differences with Prettier", "description": "In some cases, Biome has intentionally decided to format code in a way that doesn’t match Prettier’s output. These divergences are explained below.", "has_code_examples": true, "has_best_practices": true, "section_count": 12, "timestamp": "2025-02-28 21:59:32", "type": "section_detail", "page_metadata": {"og:type": "article", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "ogImage": "https://biomejs.dev/og/formatter/differences-with-prettier.png", "og:title": "Differences with Prettier", "twitter:card": "summary_large_image", "og:url": "https://biomejs.dev/formatter/differences-with-prettier/", "og:description": "In-depth explanation of the differences with Prettier.", "ogSiteName": "Biome", "title": "Differences with Prettier | Biome", "ogTitle": "Differences with Prettier", "ogLocale": "en", "language": "en", "og:locale": "en", "ogDescription": "In-depth explanation of the differences with Prettier.", "og:site_name": "Biome", "favicon": "https://biomejs.dev/img/favicon.svg", "description": "In-depth explanation of the differences with Prettier.", "ogUrl": "https://biomejs.dev/formatter/differences-with-prettier/", "og:image": "https://biomejs.dev/og/formatter/differences-with-prettier.png", "twitter:image": "https://biomejs.dev/og/formatter/differences-with-prettier.png", "viewport": "width=device-width, initial-scale=1", "scrapeId": "6c813031-e17f-436f-aeb8-85e5c25886ca", "sourceURL": "https://biomejs.dev/formatter/differences-with-prettier", "url": "https://biomejs.dev/formatter/differences-with-prettier/", "statusCode": 200}}}
{"text": "System: You are a helpful biomejs-formatter expert.\n\nUser: How do I top-level return in biomejs-formatter?\n\nAssistant: To top-level return in biomejs-formatter, here's what you do:\nInput: return someVeryLongStringA && someVeryLongStringB && someVeryLongStringC && someVeryLongStringD.\nPretty straightforward, right?", "metadata": {"source_url": "https://biomejs.dev/formatter/differences-with-prettier", "title": "Differences with Prettier", "description": "In some cases, Biome has intentionally decided to format code in a way that doesn’t match Prettier’s output. These divergences are explained below.", "has_code_examples": true, "has_best_practices": true, "section_count": 12, "timestamp": "2025-02-28 21:59:32", "type": "section_detail", "page_metadata": {"og:type": "article", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "ogImage": "https://biomejs.dev/og/formatter/differences-with-prettier.png", "og:title": "Differences with Prettier", "twitter:card": "summary_large_image", "og:url": "https://biomejs.dev/formatter/differences-with-prettier/", "og:description": "In-depth explanation of the differences with Prettier.", "ogSiteName": "Biome", "title": "Differences with Prettier | Biome", "ogTitle": "Differences with Prettier", "ogLocale": "en", "language": "en", "og:locale": "en", "ogDescription": "In-depth explanation of the differences with Prettier.", "og:site_name": "Biome", "favicon": "https://biomejs.dev/img/favicon.svg", "description": "In-depth explanation of the differences with Prettier.", "ogUrl": "https://biomejs.dev/formatter/differences-with-prettier/", "og:image": "https://biomejs.dev/og/formatter/differences-with-prettier.png", "twitter:image": "https://biomejs.dev/og/formatter/differences-with-prettier.png", "viewport": "width=device-width, initial-scale=1", "scrapeId": "6c813031-e17f-436f-aeb8-85e5c25886ca", "sourceURL": "https://biomejs.dev/formatter/differences-with-prettier", "url": "https://biomejs.dev/formatter/differences-with-prettier/", "statusCode": 200}}}
{"text": "System: You are a helpful biomejs-formatter expert.\n\nUser: How do I erroneous self-increment and self-decrement in biomejs-formatter?\n\nAssistant: To erroneous self-increment and self-decrement in biomejs-formatter, here's what you do:\nInput: (1)++; .\nPretty straightforward, right?", "metadata": {"source_url": "https://biomejs.dev/formatter/differences-with-prettier", "title": "Differences with Prettier", "description": "In some cases, Biome has intentionally decided to format code in a way that doesn’t match Prettier’s output. These divergences are explained below.", "has_code_examples": true, "has_best_practices": true, "section_count": 12, "timestamp": "2025-02-28 21:59:32", "type": "section_detail", "page_metadata": {"og:type": "article", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "ogImage": "https://biomejs.dev/og/formatter/differences-with-prettier.png", "og:title": "Differences with Prettier", "twitter:card": "summary_large_image", "og:url": "https://biomejs.dev/formatter/differences-with-prettier/", "og:description": "In-depth explanation of the differences with Prettier.", "ogSiteName": "Biome", "title": "Differences with Prettier | Biome", "ogTitle": "Differences with Prettier", "ogLocale": "en", "language": "en", "og:locale": "en", "ogDescription": "In-depth explanation of the differences with Prettier.", "og:site_name": "Biome", "favicon": "https://biomejs.dev/img/favicon.svg", "description": "In-depth explanation of the differences with Prettier.", "ogUrl": "https://biomejs.dev/formatter/differences-with-prettier/", "og:image": "https://biomejs.dev/og/formatter/differences-with-prettier.png", "twitter:image": "https://biomejs.dev/og/formatter/differences-with-prettier.png", "viewport": "width=device-width, initial-scale=1", "scrapeId": "6c813031-e17f-436f-aeb8-85e5c25886ca", "sourceURL": "https://biomejs.dev/formatter/differences-with-prettier", "url": "https://biomejs.dev/formatter/differences-with-prettier/", "statusCode": 200}}}
{"text": "System: You are a helpful biomejs-formatter expert.\n\nUser: How do I use of abstract modifier in non-abstract classes in biomejs-formatter?\n\nAssistant: To use of abstract modifier in non-abstract classes in biomejs-formatter, here's what you do:\nInput: class C { abstract f() : number; }.\nPretty straightforward, right?", "metadata": {"source_url": "https://biomejs.dev/formatter/differences-with-prettier", "title": "Differences with Prettier", "description": "In some cases, Biome has intentionally decided to format code in a way that doesn’t match Prettier’s output. These divergences are explained below.", "has_code_examples": true, "has_best_practices": true, "section_count": 12, "timestamp": "2025-02-28 21:59:32", "type": "section_detail", "page_metadata": {"og:type": "article", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "ogImage": "https://biomejs.dev/og/formatter/differences-with-prettier.png", "og:title": "Differences with Prettier", "twitter:card": "summary_large_image", "og:url": "https://biomejs.dev/formatter/differences-with-prettier/", "og:description": "In-depth explanation of the differences with Prettier.", "ogSiteName": "Biome", "title": "Differences with Prettier | Biome", "ogTitle": "Differences with Prettier", "ogLocale": "en", "language": "en", "og:locale": "en", "ogDescription": "In-depth explanation of the differences with Prettier.", "og:site_name": "Biome", "favicon": "https://biomejs.dev/img/favicon.svg", "description": "In-depth explanation of the differences with Prettier.", "ogUrl": "https://biomejs.dev/formatter/differences-with-prettier/", "og:image": "https://biomejs.dev/og/formatter/differences-with-prettier.png", "twitter:image": "https://biomejs.dev/og/formatter/differences-with-prettier.png", "viewport": "width=device-width, initial-scale=1", "scrapeId": "6c813031-e17f-436f-aeb8-85e5c25886ca", "sourceURL": "https://biomejs.dev/formatter/differences-with-prettier", "url": "https://biomejs.dev/formatter/differences-with-prettier/", "statusCode": 200}}}
{"text": "System: You are a helpful biomejs-formatter expert.\n\nUser: How do I prettier has inconsistencies between typescript and babel parsing in biomejs-formatter?\n\nAssistant: To prettier has inconsistencies between typescript and babel parsing in biomejs-formatter, here's what you do:\nPrettier supports a number of different parsers for JavaScript and TypeScript code, all of which are meant to be compatible with the estree spec. Most of the time, Prettier uses Babel as the default parser for JavaScript code, but when parsing TypeScript, it will try to use TypeScript’s own parser first and only fall back to Babel with TypeScript enabled afterward..\nPretty straightforward, right?", "metadata": {"source_url": "https://biomejs.dev/formatter/differences-with-prettier", "title": "Differences with Prettier", "description": "In some cases, Biome has intentionally decided to format code in a way that doesn’t match Prettier’s output. These divergences are explained below.", "has_code_examples": true, "has_best_practices": true, "section_count": 12, "timestamp": "2025-02-28 21:59:32", "type": "section_detail", "page_metadata": {"og:type": "article", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "ogImage": "https://biomejs.dev/og/formatter/differences-with-prettier.png", "og:title": "Differences with Prettier", "twitter:card": "summary_large_image", "og:url": "https://biomejs.dev/formatter/differences-with-prettier/", "og:description": "In-depth explanation of the differences with Prettier.", "ogSiteName": "Biome", "title": "Differences with Prettier | Biome", "ogTitle": "Differences with Prettier", "ogLocale": "en", "language": "en", "og:locale": "en", "ogDescription": "In-depth explanation of the differences with Prettier.", "og:site_name": "Biome", "favicon": "https://biomejs.dev/img/favicon.svg", "description": "In-depth explanation of the differences with Prettier.", "ogUrl": "https://biomejs.dev/formatter/differences-with-prettier/", "og:image": "https://biomejs.dev/og/formatter/differences-with-prettier.png", "twitter:image": "https://biomejs.dev/og/formatter/differences-with-prettier.png", "viewport": "width=device-width, initial-scale=1", "scrapeId": "6c813031-e17f-436f-aeb8-85e5c25886ca", "sourceURL": "https://biomejs.dev/formatter/differences-with-prettier", "url": "https://biomejs.dev/formatter/differences-with-prettier/", "statusCode": 200}}}
{"text": "System: You are a helpful biomejs-formatter expert.\n\nUser: Can you give me some code examples for Differences with Prettier in biomejs-formatter?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Prettier doesn’t unquote some object properties that are valid JavaScript identifiers.**:\n\n```yaml\nconst obj = {\n 'a': true,\n b: true,\n \"𐊧\": true,\n} \n\nDiff\n\nconst obj = {\n  a: true,\n  b: true,\n  \"𐊧\": true,\n  𐊧: true,\n};\n```\n\nThis snippet shows you how to prettier doesn’t unquote some object properties that are valid javascript identifiers., which is an important aspect of differences with prettier.\n\n**Prettier has an inconsistent behavior for assignment in computed keys.**:\n\n```yaml\nInput\n\na = {\n  [x = 0]: 1,\n}\n\nclass C {\n  [x = 0] = 1\n}\n\nDiff\n\na = {\n  [(x = 0)]: 1,\n  [x = 0]: 1,\n};\n\nclass C {\n  [x = 0] = 1;\n}\n```\n\nThis snippet shows you how to prettier has an inconsistent behavior for assignment in computed keys., which is an important aspect of differences with prettier.\n\n", "metadata": {"source_url": "https://biomejs.dev/formatter/differences-with-prettier", "title": "Differences with Prettier", "description": "In some cases, Biome has intentionally decided to format code in a way that doesn’t match Prettier’s output. These divergences are explained below.", "has_code_examples": true, "has_best_practices": true, "section_count": 12, "timestamp": "2025-02-28 21:59:32", "type": "code_examples", "page_metadata": {"og:type": "article", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "ogImage": "https://biomejs.dev/og/formatter/differences-with-prettier.png", "og:title": "Differences with Prettier", "twitter:card": "summary_large_image", "og:url": "https://biomejs.dev/formatter/differences-with-prettier/", "og:description": "In-depth explanation of the differences with Prettier.", "ogSiteName": "Biome", "title": "Differences with Prettier | Biome", "ogTitle": "Differences with Prettier", "ogLocale": "en", "language": "en", "og:locale": "en", "ogDescription": "In-depth explanation of the differences with Prettier.", "og:site_name": "Biome", "favicon": "https://biomejs.dev/img/favicon.svg", "description": "In-depth explanation of the differences with Prettier.", "ogUrl": "https://biomejs.dev/formatter/differences-with-prettier/", "og:image": "https://biomejs.dev/og/formatter/differences-with-prettier.png", "twitter:image": "https://biomejs.dev/og/formatter/differences-with-prettier.png", "viewport": "width=device-width, initial-scale=1", "scrapeId": "6c813031-e17f-436f-aeb8-85e5c25886ca", "sourceURL": "https://biomejs.dev/formatter/differences-with-prettier", "url": "https://biomejs.dev/formatter/differences-with-prettier/", "statusCode": 200}}}
{"text": "System: You are a helpful biomejs-formatter expert.\n\nUser: What are some tips for using Differences with Prettier in biomejs-formatter effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nTo match Prettier’s behavior, set the ECMAScript version to ES5 for unquoting object properties.\n\nConsider the implications of parentheses in computed keys for consistent formatting.\n\nBe aware of the differences in handling trailing commas in type parameters of arrow functions.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://biomejs.dev/formatter/differences-with-prettier", "title": "Differences with Prettier", "description": "In some cases, Biome has intentionally decided to format code in a way that doesn’t match Prettier’s output. These divergences are explained below.", "has_code_examples": true, "has_best_practices": true, "section_count": 12, "timestamp": "2025-02-28 21:59:32", "type": "best_practices", "page_metadata": {"og:type": "article", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "ogImage": "https://biomejs.dev/og/formatter/differences-with-prettier.png", "og:title": "Differences with Prettier", "twitter:card": "summary_large_image", "og:url": "https://biomejs.dev/formatter/differences-with-prettier/", "og:description": "In-depth explanation of the differences with Prettier.", "ogSiteName": "Biome", "title": "Differences with Prettier | Biome", "ogTitle": "Differences with Prettier", "ogLocale": "en", "language": "en", "og:locale": "en", "ogDescription": "In-depth explanation of the differences with Prettier.", "og:site_name": "Biome", "favicon": "https://biomejs.dev/img/favicon.svg", "description": "In-depth explanation of the differences with Prettier.", "ogUrl": "https://biomejs.dev/formatter/differences-with-prettier/", "og:image": "https://biomejs.dev/og/formatter/differences-with-prettier.png", "twitter:image": "https://biomejs.dev/og/formatter/differences-with-prettier.png", "viewport": "width=device-width, initial-scale=1", "scrapeId": "6c813031-e17f-436f-aeb8-85e5c25886ca", "sourceURL": "https://biomejs.dev/formatter/differences-with-prettier", "url": "https://biomejs.dev/formatter/differences-with-prettier/", "statusCode": 200}}}
{"text": "System: You are a helpful biomejs-formatter expert.\n\nUser: Can you explain what Formatter Option Philosophy is in biomejs-formatter?\n\nAssistant: Sure, I'd be happy to explain Formatter Option Philosophy in biomejs-formatter.\n\n# Formatter Option Philosophy\n\nThis document explains some history about how and why Biome got to where it is today, and an outlook for the future.Here's a quick rundown of what this is about:\n\n## Existing Options\n\nBiome started out with a strict subset of configuration options, targeting the most common and contentious style guidelines in the JavaScript ecosystem: indent styles (tabs vs spaces), indent widths (2 spaces to equal a tab, or 4?), and enforced semicolons. Adding options for these points was considered sufficient enough to address most people’s needs, and there was no strong consideration for adding any others.\n\nLeaning on the Prettier Option Philosophy, Biome had the chance to start fresh and avoid the pitfalls that Prettier had fallen into with its other existing options, like `--bracket-same-line` and `--arrow-parens`:\n\n> …[these] are not the type of options we’re happy to have. They cause a lot of bike-shedding in teams, and we’re sorry for that. Difficult to remove now, these options exist as a historical artifact and should not motivate adding more options (“If _those_ options exist, why can’t this one?”).\n\nHowever, when the Prettier Challenge was announced, Biome decided to accept the challenge, which required implementing all of the configuration options that Prettier had to achieve full compatibility.\n\nBiome still shares Prettier’s philosophy about these options and considers them a legacy feature for compatibility rather than a baseline feature set. Their existence does not indicate that more options will be added, nor should they be used as a rationale to support the existence of other options in the future.\n\n## New Options\n\nMuch like Prettier, Biome believes the current set of options is stable, sufficient, and not open for additions or other changes. Requests for additional configuration options are not likely to be considered and may be closed without discussion.\n\nThat said, even as Biome has established itself as a capable and robust formatting tool, it is also still relatively new, meaning there is plenty of opportunity to pave the way for new advancements and ideas that may not seem feasible otherwise.\n\nThe formatting style of Biome is also considered relatively stable, continuing to match Prettier as much as possible, with few intentional deviations. Changes to the style of Biome may be considered and implemented. Still, these are also unlikely to become configurable options and would instead be applied universally for all future versions of Biome.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://biomejs.dev/formatter/option-philosophy", "title": "Formatter Option Philosophy", "description": "This document explains some history about how and why Biome got to where it is today, and an outlook for the future.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-02-28 22:00:22", "type": "overview", "page_metadata": {"ogDescription": "Configuring an opinionated formatter.", "ogImage": "https://biomejs.dev/og/formatter/option-philosophy.png", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "og:type": "article", "ogTitle": "Formatter Option Philosophy", "viewport": "width=device-width, initial-scale=1", "og:title": "Formatter Option Philosophy", "ogLocale": "en", "description": "Configuring an opinionated formatter.", "ogUrl": "https://biomejs.dev/formatter/option-philosophy/", "title": "Formatter Option Philosophy | Biome", "ogSiteName": "Biome", "og:locale": "en", "twitter:card": "summary_large_image", "favicon": "https://biomejs.dev/img/favicon.svg", "language": "en", "og:url": "https://biomejs.dev/formatter/option-philosophy/", "og:image": "https://biomejs.dev/og/formatter/option-philosophy.png", "og:description": "Configuring an opinionated formatter.", "og:site_name": "Biome", "twitter:image": "https://biomejs.dev/og/formatter/option-philosophy.png", "scrapeId": "f646378f-399e-403c-a1ab-79ef1cdb4331", "sourceURL": "https://biomejs.dev/formatter/option-philosophy", "url": "https://biomejs.dev/formatter/option-philosophy/", "statusCode": 200}}}
{"text": "System: You are a helpful biomejs-formatter expert.\n\nUser: How do I existing options in biomejs-formatter?\n\nAssistant: To existing options in biomejs-formatter, here's what you do:\nBiome started out with a strict subset of configuration options, targeting the most common and contentious style guidelines in the JavaScript ecosystem: indent styles (tabs vs spaces), indent widths (2 spaces to equal a tab, or 4?), and enforced semicolons. Adding options for these points was considered sufficient enough to address most people’s needs, and there was no strong consideration for adding any others.\n\nLeaning on the Prettier Option Philosophy, Biome had the chance to start fresh and avoid the pitfalls that Prettier had fallen into with its other existing options, like `--bracket-same-line` and `--arrow-parens`:\n\n> …[these] are not the type of options we’re happy to have. They cause a lot of bike-shedding in teams, and we’re sorry for that. Difficult to remove now, these options exist as a historical artifact and should not motivate adding more options (“If _those_ options exist, why can’t this one?”).\n\nHowever, when the Prettier Challenge was announced, Biome decided to accept the challenge, which required implementing all of the configuration options that Prettier had to achieve full compatibility.\n\nBiome still shares Prettier’s philosophy about these options and considers them a legacy feature for compatibility rather than a baseline feature set. Their existence does not indicate that more options will be added, nor should they be used as a rationale to support the existence of other options in the future..\nPretty straightforward, right?", "metadata": {"source_url": "https://biomejs.dev/formatter/option-philosophy", "title": "Formatter Option Philosophy", "description": "This document explains some history about how and why Biome got to where it is today, and an outlook for the future.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-02-28 22:00:22", "type": "section_detail", "page_metadata": {"ogDescription": "Configuring an opinionated formatter.", "ogImage": "https://biomejs.dev/og/formatter/option-philosophy.png", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "og:type": "article", "ogTitle": "Formatter Option Philosophy", "viewport": "width=device-width, initial-scale=1", "og:title": "Formatter Option Philosophy", "ogLocale": "en", "description": "Configuring an opinionated formatter.", "ogUrl": "https://biomejs.dev/formatter/option-philosophy/", "title": "Formatter Option Philosophy | Biome", "ogSiteName": "Biome", "og:locale": "en", "twitter:card": "summary_large_image", "favicon": "https://biomejs.dev/img/favicon.svg", "language": "en", "og:url": "https://biomejs.dev/formatter/option-philosophy/", "og:image": "https://biomejs.dev/og/formatter/option-philosophy.png", "og:description": "Configuring an opinionated formatter.", "og:site_name": "Biome", "twitter:image": "https://biomejs.dev/og/formatter/option-philosophy.png", "scrapeId": "f646378f-399e-403c-a1ab-79ef1cdb4331", "sourceURL": "https://biomejs.dev/formatter/option-philosophy", "url": "https://biomejs.dev/formatter/option-philosophy/", "statusCode": 200}}}
{"text": "System: You are a helpful biomejs-formatter expert.\n\nUser: How do I new options in biomejs-formatter?\n\nAssistant: To new options in biomejs-formatter, here's what you do:\nMuch like Prettier, Biome believes the current set of options is stable, sufficient, and not open for additions or other changes. Requests for additional configuration options are not likely to be considered and may be closed without discussion.\n\nThat said, even as Biome has established itself as a capable and robust formatting tool, it is also still relatively new, meaning there is plenty of opportunity to pave the way for new advancements and ideas that may not seem feasible otherwise.\n\nThe formatting style of Biome is also considered relatively stable, continuing to match Prettier as much as possible, with few intentional deviations. Changes to the style of Biome may be considered and implemented. Still, these are also unlikely to become configurable options and would instead be applied universally for all future versions of Biome..\nPretty straightforward, right?", "metadata": {"source_url": "https://biomejs.dev/formatter/option-philosophy", "title": "Formatter Option Philosophy", "description": "This document explains some history about how and why Biome got to where it is today, and an outlook for the future.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-02-28 22:00:22", "type": "section_detail", "page_metadata": {"ogDescription": "Configuring an opinionated formatter.", "ogImage": "https://biomejs.dev/og/formatter/option-philosophy.png", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "og:type": "article", "ogTitle": "Formatter Option Philosophy", "viewport": "width=device-width, initial-scale=1", "og:title": "Formatter Option Philosophy", "ogLocale": "en", "description": "Configuring an opinionated formatter.", "ogUrl": "https://biomejs.dev/formatter/option-philosophy/", "title": "Formatter Option Philosophy | Biome", "ogSiteName": "Biome", "og:locale": "en", "twitter:card": "summary_large_image", "favicon": "https://biomejs.dev/img/favicon.svg", "language": "en", "og:url": "https://biomejs.dev/formatter/option-philosophy/", "og:image": "https://biomejs.dev/og/formatter/option-philosophy.png", "og:description": "Configuring an opinionated formatter.", "og:site_name": "Biome", "twitter:image": "https://biomejs.dev/og/formatter/option-philosophy.png", "scrapeId": "f646378f-399e-403c-a1ab-79ef1cdb4331", "sourceURL": "https://biomejs.dev/formatter/option-philosophy", "url": "https://biomejs.dev/formatter/option-philosophy/", "statusCode": 200}}}
{"text": "System: You are a helpful biomejs-formatter expert.\n\nUser: What are some tips for using Formatter Option Philosophy in biomejs-formatter effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nBiome is an opinionated formatter, enforcing a consistent style across projects.\n\nAdoption of consistent formatters benefits the entire web ecosystem, making it easier for newcomers to learn and recognize patterns.\n\nBiome aims for high compatibility with Prettier, making migration easier for users.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://biomejs.dev/formatter/option-philosophy", "title": "Formatter Option Philosophy", "description": "This document explains some history about how and why Biome got to where it is today, and an outlook for the future.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-02-28 22:00:22", "type": "best_practices", "page_metadata": {"ogDescription": "Configuring an opinionated formatter.", "ogImage": "https://biomejs.dev/og/formatter/option-philosophy.png", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "og:type": "article", "ogTitle": "Formatter Option Philosophy", "viewport": "width=device-width, initial-scale=1", "og:title": "Formatter Option Philosophy", "ogLocale": "en", "description": "Configuring an opinionated formatter.", "ogUrl": "https://biomejs.dev/formatter/option-philosophy/", "title": "Formatter Option Philosophy | Biome", "ogSiteName": "Biome", "og:locale": "en", "twitter:card": "summary_large_image", "favicon": "https://biomejs.dev/img/favicon.svg", "language": "en", "og:url": "https://biomejs.dev/formatter/option-philosophy/", "og:image": "https://biomejs.dev/og/formatter/option-philosophy.png", "og:description": "Configuring an opinionated formatter.", "og:site_name": "Biome", "twitter:image": "https://biomejs.dev/og/formatter/option-philosophy.png", "scrapeId": "f646378f-399e-403c-a1ab-79ef1cdb4331", "sourceURL": "https://biomejs.dev/formatter/option-philosophy", "url": "https://biomejs.dev/formatter/option-philosophy/", "statusCode": 200}}}

{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you explain what Harbor 2.12 Documentation is in harbor-2-12-0?\n\nAssistant: Sure, I'd be happy to explain Harbor 2.12 Documentation in harbor-2-12-0.\n\n# Harbor 2.12 Documentation\n\nWelcome to the Harbor 2.12.x documentation. This documentation includes all of the information that you need to install, configure, and use Harbor.Here's a quick rundown of what this is about:\n\n## Harbor Installation and Configuration\n\nThis section describes how to install Harbor and perform the required initial configuration. These day 1 operations are performed by the Harbor Administrator.\n[Read more](https://goharbor.io/docs/2.12.0/install-config/)\n\n## Harbor Administration\n\nThis section describes how to use and maintain your Harbor registry instance after deployment. These day 2 operations are performed by the Harbor Administrator.\n[Read more](https://goharbor.io/docs/2.12.0/administration/)\n\n## Working with Harbor Projects\n\nThis section describes how users with the developer, maintainer, and project administrator roles manage users, and create, configure, and participate in Harbor projects.\n[Read more](https://goharbor.io/docs/2.12.0/working-with-projects/)\n\n## Building, Customizing, and Contributing to Harbor\n\nThis section describes how developers can build from Harbor source code, customize their deployments, and contribute to the open-source Harbor project.\n[Read more](https://goharbor.io/docs/2.12.0/build-customize-contribute/)\n\n## Access the Documentation Source Files\n\nThe source files for this documentation set are located in the\n[Harbor repository on Github](https://github.com/goharbor/harbor/tree/release-2.8.0/docs).\n\nFor the previous versions of the docs, go to the\n[`docs` folder in the Github repository](https://github.com/goharbor/harbor/tree/main/docs) and select the appropriate `release-X.Y.Z` branch.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0", "title": "Harbor 2.12 Documentation", "description": "Welcome to the Harbor 2.12.x documentation. This documentation includes all of the information that you need to install, configure, and use Harbor.", "has_code_examples": false, "has_best_practices": false, "section_count": 5, "timestamp": "2025-03-01 02:50:21", "type": "overview", "page_metadata": {"viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:title": "Harbor &ndash; Harbor 2.12 Documentation", "og:site_name": "Harbor", "ogUrl": "https://goharbor.io/docs/2.12.0/", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "twitter:card": "summary", "og:image:alt": "Harbor &ndash; Harbor 2.12 Documentation project logo", "og:type": ["documentation", "article"], "favicon": "https://goharbor.io/favicon.svg", "ogTitle": "Harbor &ndash; Harbor 2.12 Documentation", "ogLocale": "en_US", "og:url": "https://goharbor.io/docs/2.12.0/", "og:image:type": "image/png", "title": "\n      \nHarbor docs | Harbor 2.12 Documentation\n\n    ", "og:locale": "en_US", "generator": "Hugo 0.74.0", "twitter:creator": "@project_harbor", "twitter:site": "@project_harbor", "ogSiteName": "Harbor", "scrapeId": "2e591b12-9360-4cda-b102-a5368258c3ba", "sourceURL": "https://goharbor.io/docs/2.12.0", "url": "https://goharbor.io/docs/2.12.0/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I harbor installation and configuration in harbor-2-12-0?\n\nAssistant: To harbor installation and configuration in harbor-2-12-0, here's what you do:\nThis section describes how to install Harbor and perform the required initial configuration. These day 1 operations are performed by the Harbor Administrator.\n[Read more](https://goharbor.io/docs/2.12.0/install-config/).\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0", "title": "Harbor 2.12 Documentation", "description": "Welcome to the Harbor 2.12.x documentation. This documentation includes all of the information that you need to install, configure, and use Harbor.", "has_code_examples": false, "has_best_practices": false, "section_count": 5, "timestamp": "2025-03-01 02:50:21", "type": "section_detail", "page_metadata": {"viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:title": "Harbor &ndash; Harbor 2.12 Documentation", "og:site_name": "Harbor", "ogUrl": "https://goharbor.io/docs/2.12.0/", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "twitter:card": "summary", "og:image:alt": "Harbor &ndash; Harbor 2.12 Documentation project logo", "og:type": ["documentation", "article"], "favicon": "https://goharbor.io/favicon.svg", "ogTitle": "Harbor &ndash; Harbor 2.12 Documentation", "ogLocale": "en_US", "og:url": "https://goharbor.io/docs/2.12.0/", "og:image:type": "image/png", "title": "\n      \nHarbor docs | Harbor 2.12 Documentation\n\n    ", "og:locale": "en_US", "generator": "Hugo 0.74.0", "twitter:creator": "@project_harbor", "twitter:site": "@project_harbor", "ogSiteName": "Harbor", "scrapeId": "2e591b12-9360-4cda-b102-a5368258c3ba", "sourceURL": "https://goharbor.io/docs/2.12.0", "url": "https://goharbor.io/docs/2.12.0/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I harbor administration in harbor-2-12-0?\n\nAssistant: To harbor administration in harbor-2-12-0, here's what you do:\nThis section describes how to use and maintain your Harbor registry instance after deployment. These day 2 operations are performed by the Harbor Administrator.\n[Read more](https://goharbor.io/docs/2.12.0/administration/).\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0", "title": "Harbor 2.12 Documentation", "description": "Welcome to the Harbor 2.12.x documentation. This documentation includes all of the information that you need to install, configure, and use Harbor.", "has_code_examples": false, "has_best_practices": false, "section_count": 5, "timestamp": "2025-03-01 02:50:21", "type": "section_detail", "page_metadata": {"viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:title": "Harbor &ndash; Harbor 2.12 Documentation", "og:site_name": "Harbor", "ogUrl": "https://goharbor.io/docs/2.12.0/", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "twitter:card": "summary", "og:image:alt": "Harbor &ndash; Harbor 2.12 Documentation project logo", "og:type": ["documentation", "article"], "favicon": "https://goharbor.io/favicon.svg", "ogTitle": "Harbor &ndash; Harbor 2.12 Documentation", "ogLocale": "en_US", "og:url": "https://goharbor.io/docs/2.12.0/", "og:image:type": "image/png", "title": "\n      \nHarbor docs | Harbor 2.12 Documentation\n\n    ", "og:locale": "en_US", "generator": "Hugo 0.74.0", "twitter:creator": "@project_harbor", "twitter:site": "@project_harbor", "ogSiteName": "Harbor", "scrapeId": "2e591b12-9360-4cda-b102-a5368258c3ba", "sourceURL": "https://goharbor.io/docs/2.12.0", "url": "https://goharbor.io/docs/2.12.0/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I working with harbor projects in harbor-2-12-0?\n\nAssistant: To working with harbor projects in harbor-2-12-0, here's what you do:\nThis section describes how users with the developer, maintainer, and project administrator roles manage users, and create, configure, and participate in Harbor projects.\n[Read more](https://goharbor.io/docs/2.12.0/working-with-projects/).\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0", "title": "Harbor 2.12 Documentation", "description": "Welcome to the Harbor 2.12.x documentation. This documentation includes all of the information that you need to install, configure, and use Harbor.", "has_code_examples": false, "has_best_practices": false, "section_count": 5, "timestamp": "2025-03-01 02:50:21", "type": "section_detail", "page_metadata": {"viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:title": "Harbor &ndash; Harbor 2.12 Documentation", "og:site_name": "Harbor", "ogUrl": "https://goharbor.io/docs/2.12.0/", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "twitter:card": "summary", "og:image:alt": "Harbor &ndash; Harbor 2.12 Documentation project logo", "og:type": ["documentation", "article"], "favicon": "https://goharbor.io/favicon.svg", "ogTitle": "Harbor &ndash; Harbor 2.12 Documentation", "ogLocale": "en_US", "og:url": "https://goharbor.io/docs/2.12.0/", "og:image:type": "image/png", "title": "\n      \nHarbor docs | Harbor 2.12 Documentation\n\n    ", "og:locale": "en_US", "generator": "Hugo 0.74.0", "twitter:creator": "@project_harbor", "twitter:site": "@project_harbor", "ogSiteName": "Harbor", "scrapeId": "2e591b12-9360-4cda-b102-a5368258c3ba", "sourceURL": "https://goharbor.io/docs/2.12.0", "url": "https://goharbor.io/docs/2.12.0/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I building, customizing, and contributing to harbor in harbor-2-12-0?\n\nAssistant: To building, customizing, and contributing to harbor in harbor-2-12-0, here's what you do:\nThis section describes how developers can build from Harbor source code, customize their deployments, and contribute to the open-source Harbor project.\n[Read more](https://goharbor.io/docs/2.12.0/build-customize-contribute/).\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0", "title": "Harbor 2.12 Documentation", "description": "Welcome to the Harbor 2.12.x documentation. This documentation includes all of the information that you need to install, configure, and use Harbor.", "has_code_examples": false, "has_best_practices": false, "section_count": 5, "timestamp": "2025-03-01 02:50:21", "type": "section_detail", "page_metadata": {"viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:title": "Harbor &ndash; Harbor 2.12 Documentation", "og:site_name": "Harbor", "ogUrl": "https://goharbor.io/docs/2.12.0/", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "twitter:card": "summary", "og:image:alt": "Harbor &ndash; Harbor 2.12 Documentation project logo", "og:type": ["documentation", "article"], "favicon": "https://goharbor.io/favicon.svg", "ogTitle": "Harbor &ndash; Harbor 2.12 Documentation", "ogLocale": "en_US", "og:url": "https://goharbor.io/docs/2.12.0/", "og:image:type": "image/png", "title": "\n      \nHarbor docs | Harbor 2.12 Documentation\n\n    ", "og:locale": "en_US", "generator": "Hugo 0.74.0", "twitter:creator": "@project_harbor", "twitter:site": "@project_harbor", "ogSiteName": "Harbor", "scrapeId": "2e591b12-9360-4cda-b102-a5368258c3ba", "sourceURL": "https://goharbor.io/docs/2.12.0", "url": "https://goharbor.io/docs/2.12.0/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I access the documentation source files in harbor-2-12-0?\n\nAssistant: To access the documentation source files in harbor-2-12-0, here's what you do:\nThe source files for this documentation set are located in the\n[Harbor repository on Github](https://github.com/goharbor/harbor/tree/release-2.8.0/docs).\n\nFor the previous versions of the docs, go to the\n[`docs` folder in the Github repository](https://github.com/goharbor/harbor/tree/main/docs) and select the appropriate `release-X.Y.Z` branch..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0", "title": "Harbor 2.12 Documentation", "description": "Welcome to the Harbor 2.12.x documentation. This documentation includes all of the information that you need to install, configure, and use Harbor.", "has_code_examples": false, "has_best_practices": false, "section_count": 5, "timestamp": "2025-03-01 02:50:21", "type": "section_detail", "page_metadata": {"viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:title": "Harbor &ndash; Harbor 2.12 Documentation", "og:site_name": "Harbor", "ogUrl": "https://goharbor.io/docs/2.12.0/", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "twitter:card": "summary", "og:image:alt": "Harbor &ndash; Harbor 2.12 Documentation project logo", "og:type": ["documentation", "article"], "favicon": "https://goharbor.io/favicon.svg", "ogTitle": "Harbor &ndash; Harbor 2.12 Documentation", "ogLocale": "en_US", "og:url": "https://goharbor.io/docs/2.12.0/", "og:image:type": "image/png", "title": "\n      \nHarbor docs | Harbor 2.12 Documentation\n\n    ", "og:locale": "en_US", "generator": "Hugo 0.74.0", "twitter:creator": "@project_harbor", "twitter:site": "@project_harbor", "ogSiteName": "Harbor", "scrapeId": "2e591b12-9360-4cda-b102-a5368258c3ba", "sourceURL": "https://goharbor.io/docs/2.12.0", "url": "https://goharbor.io/docs/2.12.0/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you explain what Harbor Installation and Configuration is in harbor-2-12-0?\n\nAssistant: Sure, I'd be happy to explain Harbor Installation and Configuration in harbor-2-12-0.\n\n# Harbor Installation and Configuration\n\nThis section describes how to perform a new installation of Harbor.Here's a quick rundown of what this is about:\n\n## Installation Process\n\nThe standard Harbor installation process involves the following stages:\n\n1. Make sure that your target host meets the [Harbor Installation Prerequisites](https://goharbor.io/docs/2.12.0/install-config/installation-prereqs/).\n2. [Download the Harbor Installer](https://goharbor.io/docs/2.12.0/install-config/download-installer/)\n3. [Configure HTTPS Access to Harbor](https://goharbor.io/docs/2.12.0/install-config/configure-https/)\n4. [Configure the Harbor YML File](https://goharbor.io/docs/2.12.0/install-config/configure-yml-file/)\n5. [Configure Enabling Internal TLS](https://goharbor.io/docs/2.12.0/install-config/configure-internal-tls/)\n6. [Run the Installer Script](https://goharbor.io/docs/2.12.0/install-config/run-installer-script/)\n\nIf installation fails, see [Troubleshooting Harbor Installation](https://goharbor.io/docs/2.12.0/install-config/troubleshoot-installation/).\n\n## Deploy Harbor on Kubernetes\n\nYou can also use Helm to install Harbor on a Kubernetes cluster, to make Harbor highly available. For information about installing Harbor with Helm on a Kubernetes cluster, see [Deploying Harbor with High Availability via Helm](https://goharbor.io/docs/2.12.0/install-config/harbor-ha-helm/).\n\n## Post-Installation Configuration\n\nFor information about how to manage your deployed Harbor instance, see [Reconfigure Harbor and Manage the Harbor Lifecycle](https://goharbor.io/docs/2.12.0/install-config/reconfigure-manage-lifecycle/).\n\nBy default, Harbor uses its own private key and certificate to authenticate with Docker. For information about how to optionally customize your configuration to use your own key and certificate, see [Customize the Harbor Token Service](https://goharbor.io/docs/2.12.0/install-config/customize-token-service/).\n\nAfter installation, log into your Harbor via the web console to configure the instance under ‘configuration’. Harbor also provides a command line interface (CLI) that allows you to [Configure Harbor System Settings at the Command Line](https://goharbor.io/docs/2.12.0/install-config/configure-system-settings-cli/).\n\n## Harbor Components\n\nThe table below lists the some of the key components that are deployed when you deploy Harbor.\n\n| Component | Version |\n| --- | --- |\n| Postgresql | 14.10 |\n| Redis | 7.2.2 |\n| Beego | 2.0.6 |\n| Distribution/Distribution | 2.8.3 |\n| Helm | 2.9.1 |\n| Swagger-ui | 5.9.1 |\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/install-config", "title": "Harbor Installation and Configuration", "description": "This section describes how to perform a new installation of Harbor.", "has_code_examples": false, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 02:51:39", "type": "overview", "page_metadata": {"og:url": "https://goharbor.io/docs/2.12.0/install-config/", "twitter:site": "@project_harbor", "generator": "Hugo 0.74.0", "og:title": "Harbor &ndash; Harbor Installation and Configuration", "og:image:type": "image/png", "twitter:creator": "@project_harbor", "title": "\n      \nHarbor docs | Harbor Installation and Configuration\n\n    ", "ogLocale": "en_US", "og:site_name": "Harbor", "ogSiteName": "Harbor", "og:image:alt": "Harbor &ndash; Harbor Installation and Configuration project logo", "ogTitle": "Harbor &ndash; Harbor Installation and Configuration", "og:type": ["documentation", "article"], "favicon": "https://goharbor.io/favicon.svg", "ogUrl": "https://goharbor.io/docs/2.12.0/install-config/", "twitter:card": "summary", "og:locale": "en_US", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "scrapeId": "44c156f6-106d-4456-9625-f0330344d053", "sourceURL": "https://goharbor.io/docs/2.12.0/install-config", "url": "https://goharbor.io/docs/2.12.0/install-config/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I installation process in harbor-2-12-0?\n\nAssistant: To installation process in harbor-2-12-0, here's what you do:\nThe standard Harbor installation process involves the following stages:\n\n1. Make sure that your target host meets the [Harbor Installation Prerequisites](https://goharbor.io/docs/2.12.0/install-config/installation-prereqs/).\n2. [Download the Harbor Installer](https://goharbor.io/docs/2.12.0/install-config/download-installer/)\n3. [Configure HTTPS Access to Harbor](https://goharbor.io/docs/2.12.0/install-config/configure-https/)\n4. [Configure the Harbor YML File](https://goharbor.io/docs/2.12.0/install-config/configure-yml-file/)\n5. [Configure Enabling Internal TLS](https://goharbor.io/docs/2.12.0/install-config/configure-internal-tls/)\n6. [Run the Installer Script](https://goharbor.io/docs/2.12.0/install-config/run-installer-script/)\n\nIf installation fails, see [Troubleshooting Harbor Installation](https://goharbor.io/docs/2.12.0/install-config/troubleshoot-installation/)..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/install-config", "title": "Harbor Installation and Configuration", "description": "This section describes how to perform a new installation of Harbor.", "has_code_examples": false, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 02:51:39", "type": "section_detail", "page_metadata": {"og:url": "https://goharbor.io/docs/2.12.0/install-config/", "twitter:site": "@project_harbor", "generator": "Hugo 0.74.0", "og:title": "Harbor &ndash; Harbor Installation and Configuration", "og:image:type": "image/png", "twitter:creator": "@project_harbor", "title": "\n      \nHarbor docs | Harbor Installation and Configuration\n\n    ", "ogLocale": "en_US", "og:site_name": "Harbor", "ogSiteName": "Harbor", "og:image:alt": "Harbor &ndash; Harbor Installation and Configuration project logo", "ogTitle": "Harbor &ndash; Harbor Installation and Configuration", "og:type": ["documentation", "article"], "favicon": "https://goharbor.io/favicon.svg", "ogUrl": "https://goharbor.io/docs/2.12.0/install-config/", "twitter:card": "summary", "og:locale": "en_US", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "scrapeId": "44c156f6-106d-4456-9625-f0330344d053", "sourceURL": "https://goharbor.io/docs/2.12.0/install-config", "url": "https://goharbor.io/docs/2.12.0/install-config/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I deploy harbor on kubernetes in harbor-2-12-0?\n\nAssistant: To deploy harbor on kubernetes in harbor-2-12-0, here's what you do:\nYou can also use Helm to install Harbor on a Kubernetes cluster, to make Harbor highly available. For information about installing Harbor with Helm on a Kubernetes cluster, see [Deploying Harbor with High Availability via Helm](https://goharbor.io/docs/2.12.0/install-config/harbor-ha-helm/)..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/install-config", "title": "Harbor Installation and Configuration", "description": "This section describes how to perform a new installation of Harbor.", "has_code_examples": false, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 02:51:39", "type": "section_detail", "page_metadata": {"og:url": "https://goharbor.io/docs/2.12.0/install-config/", "twitter:site": "@project_harbor", "generator": "Hugo 0.74.0", "og:title": "Harbor &ndash; Harbor Installation and Configuration", "og:image:type": "image/png", "twitter:creator": "@project_harbor", "title": "\n      \nHarbor docs | Harbor Installation and Configuration\n\n    ", "ogLocale": "en_US", "og:site_name": "Harbor", "ogSiteName": "Harbor", "og:image:alt": "Harbor &ndash; Harbor Installation and Configuration project logo", "ogTitle": "Harbor &ndash; Harbor Installation and Configuration", "og:type": ["documentation", "article"], "favicon": "https://goharbor.io/favicon.svg", "ogUrl": "https://goharbor.io/docs/2.12.0/install-config/", "twitter:card": "summary", "og:locale": "en_US", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "scrapeId": "44c156f6-106d-4456-9625-f0330344d053", "sourceURL": "https://goharbor.io/docs/2.12.0/install-config", "url": "https://goharbor.io/docs/2.12.0/install-config/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I post-installation configuration in harbor-2-12-0?\n\nAssistant: To post-installation configuration in harbor-2-12-0, here's what you do:\nFor information about how to manage your deployed Harbor instance, see [Reconfigure Harbor and Manage the Harbor Lifecycle](https://goharbor.io/docs/2.12.0/install-config/reconfigure-manage-lifecycle/).\n\nBy default, Harbor uses its own private key and certificate to authenticate with Docker. For information about how to optionally customize your configuration to use your own key and certificate, see [Customize the Harbor Token Service](https://goharbor.io/docs/2.12.0/install-config/customize-token-service/).\n\nAfter installation, log into your Harbor via the web console to configure the instance under ‘configuration’. Harbor also provides a command line interface (CLI) that allows you to [Configure Harbor System Settings at the Command Line](https://goharbor.io/docs/2.12.0/install-config/configure-system-settings-cli/)..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/install-config", "title": "Harbor Installation and Configuration", "description": "This section describes how to perform a new installation of Harbor.", "has_code_examples": false, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 02:51:39", "type": "section_detail", "page_metadata": {"og:url": "https://goharbor.io/docs/2.12.0/install-config/", "twitter:site": "@project_harbor", "generator": "Hugo 0.74.0", "og:title": "Harbor &ndash; Harbor Installation and Configuration", "og:image:type": "image/png", "twitter:creator": "@project_harbor", "title": "\n      \nHarbor docs | Harbor Installation and Configuration\n\n    ", "ogLocale": "en_US", "og:site_name": "Harbor", "ogSiteName": "Harbor", "og:image:alt": "Harbor &ndash; Harbor Installation and Configuration project logo", "ogTitle": "Harbor &ndash; Harbor Installation and Configuration", "og:type": ["documentation", "article"], "favicon": "https://goharbor.io/favicon.svg", "ogUrl": "https://goharbor.io/docs/2.12.0/install-config/", "twitter:card": "summary", "og:locale": "en_US", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "scrapeId": "44c156f6-106d-4456-9625-f0330344d053", "sourceURL": "https://goharbor.io/docs/2.12.0/install-config", "url": "https://goharbor.io/docs/2.12.0/install-config/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I harbor components in harbor-2-12-0?\n\nAssistant: To harbor components in harbor-2-12-0, here's what you do:\nThe table below lists the some of the key components that are deployed when you deploy Harbor.\n\n| Component | Version |\n| --- | --- |\n| Postgresql | 14.10 |\n| Redis | 7.2.2 |\n| Beego | 2.0.6 |\n| Distribution/Distribution | 2.8.3 |\n| Helm | 2.9.1 |\n| Swagger-ui | 5.9.1 |.\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/install-config", "title": "Harbor Installation and Configuration", "description": "This section describes how to perform a new installation of Harbor.", "has_code_examples": false, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 02:51:39", "type": "section_detail", "page_metadata": {"og:url": "https://goharbor.io/docs/2.12.0/install-config/", "twitter:site": "@project_harbor", "generator": "Hugo 0.74.0", "og:title": "Harbor &ndash; Harbor Installation and Configuration", "og:image:type": "image/png", "twitter:creator": "@project_harbor", "title": "\n      \nHarbor docs | Harbor Installation and Configuration\n\n    ", "ogLocale": "en_US", "og:site_name": "Harbor", "ogSiteName": "Harbor", "og:image:alt": "Harbor &ndash; Harbor Installation and Configuration project logo", "ogTitle": "Harbor &ndash; Harbor Installation and Configuration", "og:type": ["documentation", "article"], "favicon": "https://goharbor.io/favicon.svg", "ogUrl": "https://goharbor.io/docs/2.12.0/install-config/", "twitter:card": "summary", "og:locale": "en_US", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "scrapeId": "44c156f6-106d-4456-9625-f0330344d053", "sourceURL": "https://goharbor.io/docs/2.12.0/install-config", "url": "https://goharbor.io/docs/2.12.0/install-config/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: What are some tips for using Harbor Installation and Configuration in harbor-2-12-0 effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nMake sure that your target host meets the Harbor Installation Prerequisites before starting the installation process.\n\nIf installation fails, refer to the Troubleshooting Harbor Installation guide for assistance.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/install-config", "title": "Harbor Installation and Configuration", "description": "This section describes how to perform a new installation of Harbor.", "has_code_examples": false, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 02:51:39", "type": "best_practices", "page_metadata": {"og:url": "https://goharbor.io/docs/2.12.0/install-config/", "twitter:site": "@project_harbor", "generator": "Hugo 0.74.0", "og:title": "Harbor &ndash; Harbor Installation and Configuration", "og:image:type": "image/png", "twitter:creator": "@project_harbor", "title": "\n      \nHarbor docs | Harbor Installation and Configuration\n\n    ", "ogLocale": "en_US", "og:site_name": "Harbor", "ogSiteName": "Harbor", "og:image:alt": "Harbor &ndash; Harbor Installation and Configuration project logo", "ogTitle": "Harbor &ndash; Harbor Installation and Configuration", "og:type": ["documentation", "article"], "favicon": "https://goharbor.io/favicon.svg", "ogUrl": "https://goharbor.io/docs/2.12.0/install-config/", "twitter:card": "summary", "og:locale": "en_US", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "scrapeId": "44c156f6-106d-4456-9625-f0330344d053", "sourceURL": "https://goharbor.io/docs/2.12.0/install-config", "url": "https://goharbor.io/docs/2.12.0/install-config/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you explain what Configuring Authentication is in harbor-2-12-0?\n\nAssistant: Sure, I'd be happy to explain Configuring Authentication in harbor-2-12-0.\n\n# Configuring Authentication\n\nHarbor supports different modes for authenticating users and managing user accounts. You should select an authentication mode as soon as you deploy Harbor.Here's a quick rundown of what this is about:\n\n## Authentication Modes\n\nHarbor supports different modes for authenticating users and managing user accounts. You should select an authentication mode as soon as you deploy Harbor.\n\nIf you create user accounts in the Harbor database, Harbor is locked in database mode. You cannot change to a different authentication mode after creating local users.\n\n- [Database Authentication](https://goharbor.io/docs/2.12.0/administration/configure-authentication/db-auth/): You create and manage user accounts directly in Harbor. The user accounts are stored in the Harbor database.\n- [LDAP/Active Directory Authentication](https://goharbor.io/docs/2.12.0/administration/configure-authentication/ldap-auth/): You connect Harbor to an external LDAP/Active Directory server. The user accounts are created and managed by your LDAP/AD provider.\n- [OIDC Provider Authentication](https://goharbor.io/docs/2.12.0/administration/configure-authentication/oidc-auth/): You connect Harbor to an external OIDC provider. The user accounts are created and managed by your OIDC provider.\n\nThe Harbor interface offers an option to configure UAA authentication. This authentication mode is not recommended and is not documented in this guide.\n\n## Pages in this section\n\n- [Configure Database Authentication](https://goharbor.io/docs/2.12.0/administration/configure-authentication/db-auth/)\n- [Configure LDAP/Active Directory Authentication](https://goharbor.io/docs/2.12.0/administration/configure-authentication/ldap-auth/)\n- [Configure OIDC Provider Authentication](https://goharbor.io/docs/2.12.0/administration/configure-authentication/oidc-auth/)\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/configure-authentication", "title": "Configuring Authentication", "description": "Harbor supports different modes for authenticating users and managing user accounts. You should select an authentication mode as soon as you deploy Harbor.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 02:52:28", "type": "overview", "page_metadata": {"twitter:creator": "@project_harbor", "og:type": ["documentation", "article"], "og:locale": "en_US", "ogSiteName": "Harbor", "generator": "Hugo 0.74.0", "og:title": "Harbor &ndash; Configuring Authentication", "twitter:card": "summary", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:image:type": "image/png", "og:image:alt": "Harbor &ndash; Configuring Authentication project logo", "title": "\n      \nHarbor docs | Configuring Authentication\n\n    ", "ogTitle": "Harbor &ndash; Configuring Authentication", "ogLocale": "en_US", "twitter:site": "@project_harbor", "og:url": "https://goharbor.io/docs/2.12.0/administration/configure-authentication/", "favicon": "https://goharbor.io/favicon.svg", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/configure-authentication/", "og:site_name": "Harbor", "scrapeId": "dbd8dd4d-dd21-428d-9ff3-f70a8e2a7312", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/configure-authentication", "url": "https://goharbor.io/docs/2.12.0/administration/configure-authentication/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I authentication modes in harbor-2-12-0?\n\nAssistant: To authentication modes in harbor-2-12-0, here's what you do:\nHarbor supports different modes for authenticating users and managing user accounts. You should select an authentication mode as soon as you deploy Harbor.\n\nIf you create user accounts in the Harbor database, Harbor is locked in database mode. You cannot change to a different authentication mode after creating local users.\n\n- [Database Authentication](https://goharbor.io/docs/2.12.0/administration/configure-authentication/db-auth/): You create and manage user accounts directly in Harbor. The user accounts are stored in the Harbor database.\n- [LDAP/Active Directory Authentication](https://goharbor.io/docs/2.12.0/administration/configure-authentication/ldap-auth/): You connect Harbor to an external LDAP/Active Directory server. The user accounts are created and managed by your LDAP/AD provider.\n- [OIDC Provider Authentication](https://goharbor.io/docs/2.12.0/administration/configure-authentication/oidc-auth/): You connect Harbor to an external OIDC provider. The user accounts are created and managed by your OIDC provider.\n\nThe Harbor interface offers an option to configure UAA authentication. This authentication mode is not recommended and is not documented in this guide..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/configure-authentication", "title": "Configuring Authentication", "description": "Harbor supports different modes for authenticating users and managing user accounts. You should select an authentication mode as soon as you deploy Harbor.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 02:52:28", "type": "section_detail", "page_metadata": {"twitter:creator": "@project_harbor", "og:type": ["documentation", "article"], "og:locale": "en_US", "ogSiteName": "Harbor", "generator": "Hugo 0.74.0", "og:title": "Harbor &ndash; Configuring Authentication", "twitter:card": "summary", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:image:type": "image/png", "og:image:alt": "Harbor &ndash; Configuring Authentication project logo", "title": "\n      \nHarbor docs | Configuring Authentication\n\n    ", "ogTitle": "Harbor &ndash; Configuring Authentication", "ogLocale": "en_US", "twitter:site": "@project_harbor", "og:url": "https://goharbor.io/docs/2.12.0/administration/configure-authentication/", "favicon": "https://goharbor.io/favicon.svg", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/configure-authentication/", "og:site_name": "Harbor", "scrapeId": "dbd8dd4d-dd21-428d-9ff3-f70a8e2a7312", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/configure-authentication", "url": "https://goharbor.io/docs/2.12.0/administration/configure-authentication/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I pages in this section in harbor-2-12-0?\n\nAssistant: To pages in this section in harbor-2-12-0, here's what you do:\n- [Configure Database Authentication](https://goharbor.io/docs/2.12.0/administration/configure-authentication/db-auth/)\n- [Configure LDAP/Active Directory Authentication](https://goharbor.io/docs/2.12.0/administration/configure-authentication/ldap-auth/)\n- [Configure OIDC Provider Authentication](https://goharbor.io/docs/2.12.0/administration/configure-authentication/oidc-auth/).\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/configure-authentication", "title": "Configuring Authentication", "description": "Harbor supports different modes for authenticating users and managing user accounts. You should select an authentication mode as soon as you deploy Harbor.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 02:52:28", "type": "section_detail", "page_metadata": {"twitter:creator": "@project_harbor", "og:type": ["documentation", "article"], "og:locale": "en_US", "ogSiteName": "Harbor", "generator": "Hugo 0.74.0", "og:title": "Harbor &ndash; Configuring Authentication", "twitter:card": "summary", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:image:type": "image/png", "og:image:alt": "Harbor &ndash; Configuring Authentication project logo", "title": "\n      \nHarbor docs | Configuring Authentication\n\n    ", "ogTitle": "Harbor &ndash; Configuring Authentication", "ogLocale": "en_US", "twitter:site": "@project_harbor", "og:url": "https://goharbor.io/docs/2.12.0/administration/configure-authentication/", "favicon": "https://goharbor.io/favicon.svg", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/configure-authentication/", "og:site_name": "Harbor", "scrapeId": "dbd8dd4d-dd21-428d-9ff3-f70a8e2a7312", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/configure-authentication", "url": "https://goharbor.io/docs/2.12.0/administration/configure-authentication/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: What are some tips for using Configuring Authentication in harbor-2-12-0 effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nSelect an authentication mode as soon as you deploy Harbor.\n\nIf you create user accounts in the Harbor database, you cannot change to a different authentication mode afterwards.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/configure-authentication", "title": "Configuring Authentication", "description": "Harbor supports different modes for authenticating users and managing user accounts. You should select an authentication mode as soon as you deploy Harbor.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 02:52:28", "type": "best_practices", "page_metadata": {"twitter:creator": "@project_harbor", "og:type": ["documentation", "article"], "og:locale": "en_US", "ogSiteName": "Harbor", "generator": "Hugo 0.74.0", "og:title": "Harbor &ndash; Configuring Authentication", "twitter:card": "summary", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:image:type": "image/png", "og:image:alt": "Harbor &ndash; Configuring Authentication project logo", "title": "\n      \nHarbor docs | Configuring Authentication\n\n    ", "ogTitle": "Harbor &ndash; Configuring Authentication", "ogLocale": "en_US", "twitter:site": "@project_harbor", "og:url": "https://goharbor.io/docs/2.12.0/administration/configure-authentication/", "favicon": "https://goharbor.io/favicon.svg", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/configure-authentication/", "og:site_name": "Harbor", "scrapeId": "dbd8dd4d-dd21-428d-9ff3-f70a8e2a7312", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/configure-authentication", "url": "https://goharbor.io/docs/2.12.0/administration/configure-authentication/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you explain what Harbor Administration is in harbor-2-12-0?\n\nAssistant: Sure, I'd be happy to explain Harbor Administration in harbor-2-12-0.\n\n# Harbor Administration\n\nThis section describes how to configure and maintain Harbor after deployment. These operations are performed by the Harbor system administrator. The Harbor system administrator performs global configuration operations that apply to the whole Harbor instance.Here's a quick rundown of what this is about:\n\n## Harbor System Administrator Operations\n\nThe operations that are performed by the Harbor system administrator are the following:\n\n- Select database, LDAP/Active Directory, or OIDC based authentication. For information, see [Configuring Authentication](https://goharbor.io/docs/2.12.0/administration/configure-authentication/).\n- Add users in database authentication mode and assign the system administrator role to other users. For information, see [Managing Users](https://goharbor.io/docs/2.12.0/administration/managing-users/).\n- Configure global settings, such as setting the registry to read-only mode, and restriction who can create projects. For information, see [Configure Global Settings](https://goharbor.io/docs/2.12.0/administration/general-settings/).\n- Apply resource quotas to projects. For information, see [Configure Project Quotas](https://goharbor.io/docs/2.12.0/administration/configure-project-quotas/).\n- Set up replication of images between Harbor and another Harbor instance or a 3rd party replication target. For information, see [Configuring Replication](https://goharbor.io/docs/2.12.0/administration/configuring-replication/).\n- Set up vulnerability scanners to check the images in the registry for CVE vulnerabilities. For information, see [Vulnerability Scanning](https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/).\n- Perform garbage collection, to remove unnecessary data from Harbor. For information, see [Garbage Collection](https://goharbor.io/docs/2.12.0/administration/garbage-collection/).\n- Manage audit logs by configuring an audit log retention window and setting a syslog endpoint to forward audit logs. For information, see [Log Rotation](https://goharbor.io/docs/2.12.0/administration/log-rotation/).\n- Upgrade Harbor when a new version becomes available. For information, see [Upgrading Harbor](https://goharbor.io/docs/2.12.0/administration/upgrade/).\n- Set up P2P preheat provider instances to preheat the specified images into the P2P network. For information, see [P2P preheat](https://goharbor.io/docs/2.12.0/administration/p2p-preheat/).\n- Details of defining a user-defined OCI artifact so that Harbor can manage it. For information, see [user-defined OCI artifact](https://goharbor.io/docs/2.12.0/administration/user-defined-oci-artifact/).\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration", "title": "Harbor Administration", "description": "This section describes how to configure and maintain Harbor after deployment. These operations are performed by the Harbor system administrator. The Harbor system administrator performs global configuration operations that apply to the whole Harbor instance.", "has_code_examples": false, "has_best_practices": false, "section_count": 1, "timestamp": "2025-03-01 02:52:45", "type": "overview", "page_metadata": {"favicon": "https://goharbor.io/favicon.svg", "og:type": ["documentation", "article"], "twitter:site": "@project_harbor", "ogSiteName": "Harbor", "og:title": "Harbor &ndash; Harbor Administration", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:url": "https://goharbor.io/docs/2.12.0/administration/", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/", "generator": "Hugo 0.74.0", "twitter:card": "summary", "twitter:creator": "@project_harbor", "ogTitle": "Harbor &ndash; Harbor Administration", "og:site_name": "Harbor", "og:image:type": "image/png", "title": "\n      \nHarbor docs | Harbor Administration\n\n    ", "ogLocale": "en_US", "og:locale": "en_US", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:image:alt": "Harbor &ndash; Harbor Administration project logo", "scrapeId": "9a40287c-5556-4019-9e84-95dc69e01505", "sourceURL": "https://goharbor.io/docs/2.12.0/administration", "url": "https://goharbor.io/docs/2.12.0/administration/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I harbor system administrator operations in harbor-2-12-0?\n\nAssistant: To harbor system administrator operations in harbor-2-12-0, here's what you do:\nThe operations that are performed by the Harbor system administrator are the following:\n\n- Select database, LDAP/Active Directory, or OIDC based authentication. For information, see [Configuring Authentication](https://goharbor.io/docs/2.12.0/administration/configure-authentication/).\n- Add users in database authentication mode and assign the system administrator role to other users. For information, see [Managing Users](https://goharbor.io/docs/2.12.0/administration/managing-users/).\n- Configure global settings, such as setting the registry to read-only mode, and restriction who can create projects. For information, see [Configure Global Settings](https://goharbor.io/docs/2.12.0/administration/general-settings/).\n- Apply resource quotas to projects. For information, see [Configure Project Quotas](https://goharbor.io/docs/2.12.0/administration/configure-project-quotas/).\n- Set up replication of images between Harbor and another Harbor instance or a 3rd party replication target. For information, see [Configuring Replication](https://goharbor.io/docs/2.12.0/administration/configuring-replication/).\n- Set up vulnerability scanners to check the images in the registry for CVE vulnerabilities. For information, see [Vulnerability Scanning](https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/).\n- Perform garbage collection, to remove unnecessary data from Harbor. For information, see [Garbage Collection](https://goharbor.io/docs/2.12.0/administration/garbage-collection/).\n- Manage audit logs by configuring an audit log retention window and setting a syslog endpoint to forward audit logs. For information, see [Log Rotation](https://goharbor.io/docs/2.12.0/administration/log-rotation/).\n- Upgrade Harbor when a new version becomes available. For information, see [Upgrading Harbor](https://goharbor.io/docs/2.12.0/administration/upgrade/).\n- Set up P2P preheat provider instances to preheat the specified images into the P2P network. For information, see [P2P preheat](https://goharbor.io/docs/2.12.0/administration/p2p-preheat/).\n- Details of defining a user-defined OCI artifact so that Harbor can manage it. For information, see [user-defined OCI artifact](https://goharbor.io/docs/2.12.0/administration/user-defined-oci-artifact/)..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration", "title": "Harbor Administration", "description": "This section describes how to configure and maintain Harbor after deployment. These operations are performed by the Harbor system administrator. The Harbor system administrator performs global configuration operations that apply to the whole Harbor instance.", "has_code_examples": false, "has_best_practices": false, "section_count": 1, "timestamp": "2025-03-01 02:52:45", "type": "section_detail", "page_metadata": {"favicon": "https://goharbor.io/favicon.svg", "og:type": ["documentation", "article"], "twitter:site": "@project_harbor", "ogSiteName": "Harbor", "og:title": "Harbor &ndash; Harbor Administration", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:url": "https://goharbor.io/docs/2.12.0/administration/", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/", "generator": "Hugo 0.74.0", "twitter:card": "summary", "twitter:creator": "@project_harbor", "ogTitle": "Harbor &ndash; Harbor Administration", "og:site_name": "Harbor", "og:image:type": "image/png", "title": "\n      \nHarbor docs | Harbor Administration\n\n    ", "ogLocale": "en_US", "og:locale": "en_US", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:image:alt": "Harbor &ndash; Harbor Administration project logo", "scrapeId": "9a40287c-5556-4019-9e84-95dc69e01505", "sourceURL": "https://goharbor.io/docs/2.12.0/administration", "url": "https://goharbor.io/docs/2.12.0/administration/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you explain what Test Harbor with the Demo Server is in harbor-2-12-0?\n\nAssistant: Sure, I'd be happy to explain Test Harbor with the Demo Server in harbor-2-12-0.\n\n# Test Harbor with the Demo Server\n\nThe Harbor team has made available a demo Harbor instance that you can use to experiment with Harbor and test its functionalities.Here's a quick rundown of what this is about:\n\n## Conditions of Use of the Demo Server\n\n- The demo server is reserved for experimental use only, to allow you to test Harbor functionality.\n- Do not upload sensitive images to the demo server.\n- The demo server is not a production environment. The Harbor team is not responsible for any loss of data, functionality, or service that might result from its use.\n- The demo server is cleaned and reset every two days.\n- The demo server only allows you to test user functionalities. You cannot test administrator functionalities. To test administrator functionalities and advanced features, set up a Harbor instance.\n- Do not push images >100MB to the demo server, as it has limited storage capacity.\n\n## Access the Demo Server\n\n01. Go to [https://demo.goharbor.io](https://demo.goharbor.io/).\n\n02. Click **Sign up for an account**.\n\n03. Create a user account by providing a username, your email address, your name, and a password.\n\n04. Log in to the Harbor interface using the account you created.\n\n05. Explore the default project, `library`.\n\n06. Click **New Project** to create your own project.\n\n    For information about how to create a project, see [Create a Project](https://goharbor.io/docs/2.12.0/working-with-projects/create-projects/).\n\n07. Open a Docker client and log in to Harbor with the credentials that you created above.\n\n08. Create a very simple `Dockerfile` with the following contents.\n\n09. Build an image from this Dockerfile and tag it.\n\n10. Push the image to your project in Harbor.\n\n11. In the Harbor interface, go to **Projects** \\> _your_project_ \\> **Repositories** to view the image repository that you pushed to your Harbor project.\n\n## What to Do Next\n\nSee the [Harbor Installation Prerequisites](https://goharbor.io/docs/2.12.0/install-config/installation-prereqs/).\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/install-config/demo-server", "title": "Test Harbor with the Demo Server", "description": "The Harbor team has made available a demo Harbor instance that you can use to experiment with Harbor and test its functionalities.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 02:53:08", "type": "overview", "page_metadata": {"og:locale": "en_US", "og:image:alt": "Harbor &ndash; Test Harbor with the Demo Server project logo", "ogLocale": "en_US", "ogTitle": "Harbor &ndash; Test Harbor with the Demo Server", "favicon": "https://goharbor.io/favicon.svg", "twitter:site": "@project_harbor", "og:type": ["documentation", "article"], "title": "\n      \nHarbor docs | Test Harbor with the Demo Server\n\n    ", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "twitter:creator": "@project_harbor", "og:url": "https://goharbor.io/docs/2.12.0/install-config/demo-server/", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:title": "Harbor &ndash; Test Harbor with the Demo Server", "og:image:type": "image/png", "twitter:card": "summary", "ogSiteName": "Harbor", "ogUrl": "https://goharbor.io/docs/2.12.0/install-config/demo-server/", "generator": "Hugo 0.74.0", "og:site_name": "Harbor", "scrapeId": "315392e6-dd8b-4ee5-91a6-c72a82d419b1", "sourceURL": "https://goharbor.io/docs/2.12.0/install-config/demo-server", "url": "https://goharbor.io/docs/2.12.0/install-config/demo-server/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I conditions of use of the demo server in harbor-2-12-0?\n\nAssistant: To conditions of use of the demo server in harbor-2-12-0, here's what you do:\n- The demo server is reserved for experimental use only, to allow you to test Harbor functionality.\n- Do not upload sensitive images to the demo server.\n- The demo server is not a production environment. The Harbor team is not responsible for any loss of data, functionality, or service that might result from its use.\n- The demo server is cleaned and reset every two days.\n- The demo server only allows you to test user functionalities. You cannot test administrator functionalities. To test administrator functionalities and advanced features, set up a Harbor instance.\n- Do not push images >100MB to the demo server, as it has limited storage capacity..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/install-config/demo-server", "title": "Test Harbor with the Demo Server", "description": "The Harbor team has made available a demo Harbor instance that you can use to experiment with Harbor and test its functionalities.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 02:53:08", "type": "section_detail", "page_metadata": {"og:locale": "en_US", "og:image:alt": "Harbor &ndash; Test Harbor with the Demo Server project logo", "ogLocale": "en_US", "ogTitle": "Harbor &ndash; Test Harbor with the Demo Server", "favicon": "https://goharbor.io/favicon.svg", "twitter:site": "@project_harbor", "og:type": ["documentation", "article"], "title": "\n      \nHarbor docs | Test Harbor with the Demo Server\n\n    ", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "twitter:creator": "@project_harbor", "og:url": "https://goharbor.io/docs/2.12.0/install-config/demo-server/", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:title": "Harbor &ndash; Test Harbor with the Demo Server", "og:image:type": "image/png", "twitter:card": "summary", "ogSiteName": "Harbor", "ogUrl": "https://goharbor.io/docs/2.12.0/install-config/demo-server/", "generator": "Hugo 0.74.0", "og:site_name": "Harbor", "scrapeId": "315392e6-dd8b-4ee5-91a6-c72a82d419b1", "sourceURL": "https://goharbor.io/docs/2.12.0/install-config/demo-server", "url": "https://goharbor.io/docs/2.12.0/install-config/demo-server/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I access the demo server in harbor-2-12-0?\n\nAssistant: To access the demo server in harbor-2-12-0, here's what you do:\n01. Go to [https://demo.goharbor.io](https://demo.goharbor.io/).\n\n02. Click **Sign up for an account**.\n\n03. Create a user account by providing a username, your email address, your name, and a password.\n\n04. Log in to the Harbor interface using the account you created.\n\n05. Explore the default project, `library`.\n\n06. Click **New Project** to create your own project.\n\n    For information about how to create a project, see [Create a Project](https://goharbor.io/docs/2.12.0/working-with-projects/create-projects/).\n\n07. Open a Docker client and log in to Harbor with the credentials that you created above.\n\n08. Create a very simple `Dockerfile` with the following contents.\n\n09. Build an image from this Dockerfile and tag it.\n\n10. Push the image to your project in Harbor.\n\n11. In the Harbor interface, go to **Projects** \\> _your_project_ \\> **Repositories** to view the image repository that you pushed to your Harbor project..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/install-config/demo-server", "title": "Test Harbor with the Demo Server", "description": "The Harbor team has made available a demo Harbor instance that you can use to experiment with Harbor and test its functionalities.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 02:53:08", "type": "section_detail", "page_metadata": {"og:locale": "en_US", "og:image:alt": "Harbor &ndash; Test Harbor with the Demo Server project logo", "ogLocale": "en_US", "ogTitle": "Harbor &ndash; Test Harbor with the Demo Server", "favicon": "https://goharbor.io/favicon.svg", "twitter:site": "@project_harbor", "og:type": ["documentation", "article"], "title": "\n      \nHarbor docs | Test Harbor with the Demo Server\n\n    ", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "twitter:creator": "@project_harbor", "og:url": "https://goharbor.io/docs/2.12.0/install-config/demo-server/", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:title": "Harbor &ndash; Test Harbor with the Demo Server", "og:image:type": "image/png", "twitter:card": "summary", "ogSiteName": "Harbor", "ogUrl": "https://goharbor.io/docs/2.12.0/install-config/demo-server/", "generator": "Hugo 0.74.0", "og:site_name": "Harbor", "scrapeId": "315392e6-dd8b-4ee5-91a6-c72a82d419b1", "sourceURL": "https://goharbor.io/docs/2.12.0/install-config/demo-server", "url": "https://goharbor.io/docs/2.12.0/install-config/demo-server/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I what to do next in harbor-2-12-0?\n\nAssistant: To what to do next in harbor-2-12-0, here's what you do:\nSee the [Harbor Installation Prerequisites](https://goharbor.io/docs/2.12.0/install-config/installation-prereqs/)..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/install-config/demo-server", "title": "Test Harbor with the Demo Server", "description": "The Harbor team has made available a demo Harbor instance that you can use to experiment with Harbor and test its functionalities.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 02:53:08", "type": "section_detail", "page_metadata": {"og:locale": "en_US", "og:image:alt": "Harbor &ndash; Test Harbor with the Demo Server project logo", "ogLocale": "en_US", "ogTitle": "Harbor &ndash; Test Harbor with the Demo Server", "favicon": "https://goharbor.io/favicon.svg", "twitter:site": "@project_harbor", "og:type": ["documentation", "article"], "title": "\n      \nHarbor docs | Test Harbor with the Demo Server\n\n    ", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "twitter:creator": "@project_harbor", "og:url": "https://goharbor.io/docs/2.12.0/install-config/demo-server/", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:title": "Harbor &ndash; Test Harbor with the Demo Server", "og:image:type": "image/png", "twitter:card": "summary", "ogSiteName": "Harbor", "ogUrl": "https://goharbor.io/docs/2.12.0/install-config/demo-server/", "generator": "Hugo 0.74.0", "og:site_name": "Harbor", "scrapeId": "315392e6-dd8b-4ee5-91a6-c72a82d419b1", "sourceURL": "https://goharbor.io/docs/2.12.0/install-config/demo-server", "url": "https://goharbor.io/docs/2.12.0/install-config/demo-server/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you give me some code examples for Test Harbor with the Demo Server in harbor-2-12-0?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Docker Login Command**:\n\n```yaml\ndocker login demo.goharbor.io\n```\n\nThis snippet shows you how to docker login command, which is an important aspect of test harbor with the demo server.\n\n**Dockerfile Example**:\n\n```yaml\nFROM busybox:latest\n```\n\nThis snippet shows you how to dockerfile example, which is an important aspect of test harbor with the demo server.\n\n**Docker Build Command**:\n\n```yaml\ndocker build -t demo.goharbor.io/your-project/test-image .\n```\n\nThis snippet shows you how to docker build command, which is an important aspect of test harbor with the demo server.\n\n**Docker Push Command**:\n\n```yaml\ndocker push demo.goharbor.io/your-project/test-image\n```\n\nThis snippet shows you how to docker push command, which is an important aspect of test harbor with the demo server.\n\n", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/install-config/demo-server", "title": "Test Harbor with the Demo Server", "description": "The Harbor team has made available a demo Harbor instance that you can use to experiment with Harbor and test its functionalities.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 02:53:08", "type": "code_examples", "page_metadata": {"og:locale": "en_US", "og:image:alt": "Harbor &ndash; Test Harbor with the Demo Server project logo", "ogLocale": "en_US", "ogTitle": "Harbor &ndash; Test Harbor with the Demo Server", "favicon": "https://goharbor.io/favicon.svg", "twitter:site": "@project_harbor", "og:type": ["documentation", "article"], "title": "\n      \nHarbor docs | Test Harbor with the Demo Server\n\n    ", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "twitter:creator": "@project_harbor", "og:url": "https://goharbor.io/docs/2.12.0/install-config/demo-server/", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:title": "Harbor &ndash; Test Harbor with the Demo Server", "og:image:type": "image/png", "twitter:card": "summary", "ogSiteName": "Harbor", "ogUrl": "https://goharbor.io/docs/2.12.0/install-config/demo-server/", "generator": "Hugo 0.74.0", "og:site_name": "Harbor", "scrapeId": "315392e6-dd8b-4ee5-91a6-c72a82d419b1", "sourceURL": "https://goharbor.io/docs/2.12.0/install-config/demo-server", "url": "https://goharbor.io/docs/2.12.0/install-config/demo-server/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: What are some tips for using Test Harbor with the Demo Server in harbor-2-12-0 effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nThe demo server is reserved for experimental use only, to allow you to test Harbor functionality.\n\nDo not upload sensitive images to the demo server.\n\nThe demo server is not a production environment. The Harbor team is not responsible for any loss of data, functionality, or service that might result from its use.\n\nThe demo server is cleaned and reset every two days.\n\nThe demo server only allows you to test user functionalities. You cannot test administrator functionalities. To test administrator functionalities and advanced features, set up a Harbor instance.\n\nDo not push images >100MB to the demo server, as it has limited storage capacity.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/install-config/demo-server", "title": "Test Harbor with the Demo Server", "description": "The Harbor team has made available a demo Harbor instance that you can use to experiment with Harbor and test its functionalities.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 02:53:08", "type": "best_practices", "page_metadata": {"og:locale": "en_US", "og:image:alt": "Harbor &ndash; Test Harbor with the Demo Server project logo", "ogLocale": "en_US", "ogTitle": "Harbor &ndash; Test Harbor with the Demo Server", "favicon": "https://goharbor.io/favicon.svg", "twitter:site": "@project_harbor", "og:type": ["documentation", "article"], "title": "\n      \nHarbor docs | Test Harbor with the Demo Server\n\n    ", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "twitter:creator": "@project_harbor", "og:url": "https://goharbor.io/docs/2.12.0/install-config/demo-server/", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:title": "Harbor &ndash; Test Harbor with the Demo Server", "og:image:type": "image/png", "twitter:card": "summary", "ogSiteName": "Harbor", "ogUrl": "https://goharbor.io/docs/2.12.0/install-config/demo-server/", "generator": "Hugo 0.74.0", "og:site_name": "Harbor", "scrapeId": "315392e6-dd8b-4ee5-91a6-c72a82d419b1", "sourceURL": "https://goharbor.io/docs/2.12.0/install-config/demo-server", "url": "https://goharbor.io/docs/2.12.0/install-config/demo-server/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you explain what Configure Database Authentication is in harbor-2-12-0?\n\nAssistant: Sure, I'd be happy to explain Configure Database Authentication in harbor-2-12-0.\n\n# Configure Database Authentication\n\nIn database authentication mode, user accounts are stored in the local database. By default, only the Harbor system administrator can create user accounts to add users to Harbor. You can optionally configure Harbor to allow self-registration.Here's a quick rundown of what this is about:\n\n## Overview\n\nIn database authentication mode, user accounts are stored in the local database. By default, only the Harbor system administrator can create user accounts to add users to Harbor. You can optionally configure Harbor to allow self-registration.\n\nIf you create users in the database, Harbor is locked in database mode. You cannot change to a different authentication mode after you have created local users.\n\n## Steps to Configure Database Authentication\n\n1. Log in to the Harbor interface with an account that has Harbor system administrator privileges.\n\n2. Under **Administration**, go to **Configuration** and select the **Authentication** tab.\n\n3. Leave **Auth Mode** set to the default **Database** option.\n\n4. Optionally select the **Allow Self-Registration** check box.\n\nIf you enable the self registration option, users can register themselves in Harbor. Self-registration is deactivated by default. If you enable self-registration, unregistered users can sign up for a Harbor account by clicking **Sign up for an account** in the Harbor log in page.\n\n## Images\n\n![Database authentication](https://goharbor.io/docs/2.12.0/img/db-auth.png)\n\n![Enable self-registration](https://goharbor.io/docs/2.12.0/img/new-self-reg.png)\n\n![Enable self-registration](https://goharbor.io/docs/2.12.0/img/self-registration-login.png)\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/configure-authentication/db-auth", "title": "Configure Database Authentication", "description": "In database authentication mode, user accounts are stored in the local database. By default, only the Harbor system administrator can create user accounts to add users to Harbor. You can optionally configure Harbor to allow self-registration.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 02:53:25", "type": "overview", "page_metadata": {"twitter:card": "summary", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:locale": "en_US", "og:site_name": "Harbor", "generator": "Hugo 0.74.0", "ogTitle": "Harbor &ndash; Configure Database Authentication", "og:title": "Harbor &ndash; Configure Database Authentication", "og:image:type": "image/png", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/configure-authentication/db-auth/", "og:type": ["documentation", "article"], "twitter:site": "@project_harbor", "og:url": "https://goharbor.io/docs/2.12.0/administration/configure-authentication/db-auth/", "title": "\n      \nHarbor docs | Configure Database Authentication\n\n    ", "favicon": "https://goharbor.io/favicon.svg", "twitter:creator": "@project_harbor", "og:image:alt": "Harbor &ndash; Configure Database Authentication project logo", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogLocale": "en_US", "ogSiteName": "Harbor", "scrapeId": "4cae45b8-bb8b-4ce1-a578-dd4de5a87209", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/configure-authentication/db-auth", "url": "https://goharbor.io/docs/2.12.0/administration/configure-authentication/db-auth/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I overview in harbor-2-12-0?\n\nAssistant: To overview in harbor-2-12-0, here's what you do:\nIn database authentication mode, user accounts are stored in the local database. By default, only the Harbor system administrator can create user accounts to add users to Harbor. You can optionally configure Harbor to allow self-registration.\n\nIf you create users in the database, Harbor is locked in database mode. You cannot change to a different authentication mode after you have created local users..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/configure-authentication/db-auth", "title": "Configure Database Authentication", "description": "In database authentication mode, user accounts are stored in the local database. By default, only the Harbor system administrator can create user accounts to add users to Harbor. You can optionally configure Harbor to allow self-registration.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 02:53:25", "type": "section_detail", "page_metadata": {"twitter:card": "summary", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:locale": "en_US", "og:site_name": "Harbor", "generator": "Hugo 0.74.0", "ogTitle": "Harbor &ndash; Configure Database Authentication", "og:title": "Harbor &ndash; Configure Database Authentication", "og:image:type": "image/png", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/configure-authentication/db-auth/", "og:type": ["documentation", "article"], "twitter:site": "@project_harbor", "og:url": "https://goharbor.io/docs/2.12.0/administration/configure-authentication/db-auth/", "title": "\n      \nHarbor docs | Configure Database Authentication\n\n    ", "favicon": "https://goharbor.io/favicon.svg", "twitter:creator": "@project_harbor", "og:image:alt": "Harbor &ndash; Configure Database Authentication project logo", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogLocale": "en_US", "ogSiteName": "Harbor", "scrapeId": "4cae45b8-bb8b-4ce1-a578-dd4de5a87209", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/configure-authentication/db-auth", "url": "https://goharbor.io/docs/2.12.0/administration/configure-authentication/db-auth/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I steps to configure database authentication in harbor-2-12-0?\n\nAssistant: To steps to configure database authentication in harbor-2-12-0, here's what you do:\n1. Log in to the Harbor interface with an account that has Harbor system administrator privileges.\n\n2. Under **Administration**, go to **Configuration** and select the **Authentication** tab.\n\n3. Leave **Auth Mode** set to the default **Database** option.\n\n4. Optionally select the **Allow Self-Registration** check box.\n\nIf you enable the self registration option, users can register themselves in Harbor. Self-registration is deactivated by default. If you enable self-registration, unregistered users can sign up for a Harbor account by clicking **Sign up for an account** in the Harbor log in page..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/configure-authentication/db-auth", "title": "Configure Database Authentication", "description": "In database authentication mode, user accounts are stored in the local database. By default, only the Harbor system administrator can create user accounts to add users to Harbor. You can optionally configure Harbor to allow self-registration.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 02:53:25", "type": "section_detail", "page_metadata": {"twitter:card": "summary", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:locale": "en_US", "og:site_name": "Harbor", "generator": "Hugo 0.74.0", "ogTitle": "Harbor &ndash; Configure Database Authentication", "og:title": "Harbor &ndash; Configure Database Authentication", "og:image:type": "image/png", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/configure-authentication/db-auth/", "og:type": ["documentation", "article"], "twitter:site": "@project_harbor", "og:url": "https://goharbor.io/docs/2.12.0/administration/configure-authentication/db-auth/", "title": "\n      \nHarbor docs | Configure Database Authentication\n\n    ", "favicon": "https://goharbor.io/favicon.svg", "twitter:creator": "@project_harbor", "og:image:alt": "Harbor &ndash; Configure Database Authentication project logo", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogLocale": "en_US", "ogSiteName": "Harbor", "scrapeId": "4cae45b8-bb8b-4ce1-a578-dd4de5a87209", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/configure-authentication/db-auth", "url": "https://goharbor.io/docs/2.12.0/administration/configure-authentication/db-auth/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I images in harbor-2-12-0?\n\nAssistant: To images in harbor-2-12-0, here's what you do:\n![Database authentication](https://goharbor.io/docs/2.12.0/img/db-auth.png)\n\n![Enable self-registration](https://goharbor.io/docs/2.12.0/img/new-self-reg.png)\n\n![Enable self-registration](https://goharbor.io/docs/2.12.0/img/self-registration-login.png).\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/configure-authentication/db-auth", "title": "Configure Database Authentication", "description": "In database authentication mode, user accounts are stored in the local database. By default, only the Harbor system administrator can create user accounts to add users to Harbor. You can optionally configure Harbor to allow self-registration.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 02:53:25", "type": "section_detail", "page_metadata": {"twitter:card": "summary", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:locale": "en_US", "og:site_name": "Harbor", "generator": "Hugo 0.74.0", "ogTitle": "Harbor &ndash; Configure Database Authentication", "og:title": "Harbor &ndash; Configure Database Authentication", "og:image:type": "image/png", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/configure-authentication/db-auth/", "og:type": ["documentation", "article"], "twitter:site": "@project_harbor", "og:url": "https://goharbor.io/docs/2.12.0/administration/configure-authentication/db-auth/", "title": "\n      \nHarbor docs | Configure Database Authentication\n\n    ", "favicon": "https://goharbor.io/favicon.svg", "twitter:creator": "@project_harbor", "og:image:alt": "Harbor &ndash; Configure Database Authentication project logo", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogLocale": "en_US", "ogSiteName": "Harbor", "scrapeId": "4cae45b8-bb8b-4ce1-a578-dd4de5a87209", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/configure-authentication/db-auth", "url": "https://goharbor.io/docs/2.12.0/administration/configure-authentication/db-auth/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: What are some tips for using Configure Database Authentication in harbor-2-12-0 effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nIf you create users in the database, Harbor is locked in database mode and cannot change to a different authentication mode after local users are created.\n\nSelf-registration is deactivated by default; enable it if you want users to register themselves.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/configure-authentication/db-auth", "title": "Configure Database Authentication", "description": "In database authentication mode, user accounts are stored in the local database. By default, only the Harbor system administrator can create user accounts to add users to Harbor. You can optionally configure Harbor to allow self-registration.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 02:53:25", "type": "best_practices", "page_metadata": {"twitter:card": "summary", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:locale": "en_US", "og:site_name": "Harbor", "generator": "Hugo 0.74.0", "ogTitle": "Harbor &ndash; Configure Database Authentication", "og:title": "Harbor &ndash; Configure Database Authentication", "og:image:type": "image/png", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/configure-authentication/db-auth/", "og:type": ["documentation", "article"], "twitter:site": "@project_harbor", "og:url": "https://goharbor.io/docs/2.12.0/administration/configure-authentication/db-auth/", "title": "\n      \nHarbor docs | Configure Database Authentication\n\n    ", "favicon": "https://goharbor.io/favicon.svg", "twitter:creator": "@project_harbor", "og:image:alt": "Harbor &ndash; Configure Database Authentication project logo", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogLocale": "en_US", "ogSiteName": "Harbor", "scrapeId": "4cae45b8-bb8b-4ce1-a578-dd4de5a87209", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/configure-authentication/db-auth", "url": "https://goharbor.io/docs/2.12.0/administration/configure-authentication/db-auth/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you explain what Harbor Compatibility List is in harbor-2-12-0?\n\nAssistant: Sure, I'd be happy to explain Harbor Compatibility List in harbor-2-12-0.\n\n# Harbor Compatibility List\n\nThis document provides compatibility information for all Harbor components.Here's a quick rundown of what this is about:\n\n## Replication Adapters\n\n|  | Registries | Pull Mode | Push Mode | Proxy Cache | Introduced in Release | Automated Pipeline Covered |\n| --- | --- | --- | --- | --- | --- | --- |\n| [Harbor](https://goharbor.io/) | ![Harbor](https://goharbor.io/docs/2.12.0/img/replication-adapters/harbor-logo.png) | ![Y](https://goharbor.io/docs/2.12.0/img/replication-adapters/right.png) | ![Y](https://goharbor.io/docs/2.12.0/img/replication-adapters/right.png) | ![Y](https://goharbor.io/docs/2.12.0/img/replication-adapters/right.png) | V1.8 | ![Y](https://goharbor.io/docs/2.12.0/img/replication-adapters/right.png) |\n| [distribution](https://github.com/distribution/distribution) | ![distribution](https://goharbor.io/docs/2.12.0/img/replication-adapters/distribution.png) | ![Y](https://goharbor.io/docs/2.12.0/img/replication-adapters/right.png) | ![Y](https://goharbor.io/docs/2.12.0/img/replication-adapters/right.png) | ![Y](https://goharbor.io/docs/2.12.0/img/replication-adapters/right.png) | V1.8 | ![Y](https://goharbor.io/docs/2.12.0/img/replication-adapters/right.png) |\n| [docker hub](https://hub.docker.com/) | ![docker hub](https://goharbor.io/docs/2.12.0/img/replication-adapters/docker-hub.png) | ![Y](https://goharbor.io/docs/2.12.0/img/replication-adapters/right.png) | ![Y](https://goharbor.io/docs/2.12.0/img/replication-adapters/right.png) | ![Y](https://goharbor.io/docs/2.12.0/img/replication-adapters/right.png) | V1.8 | ![Y](https://goharbor.io/docs/2.12.0/img/replication-adapters/right.png) |\n| [Huawei SWR](https://www.huaweicloud.com/en-us/product/swr.html) | ![Huawei SWR](https://goharbor.io/docs/2.12.0/img/replication-adapters/hw.png) | ![Y](https://goharbor.io/docs/2.12.0/img/replication-adapters/right.png) | ![Y](https://goharbor.io/docs/2.12.0/img/replication-adapters/right.png) | ![N](https://goharbor.io/docs/2.12.0/img/replication-adapters/no.png) | V1.8 | ![N](https://goharbor.io/docs/2.12.0/img/replication-adapters/no.png) |\n| [GCR](https://cloud.google.com/container-registry/) | ![GCR](https://goharbor.io/docs/2.12.0/img/replication-adapters/gcr.png) | ![Y](https://goharbor.io/docs/2.12.0/img/replication-adapters/right.png) | ![Y](https://goharbor.io/docs/2.12.0/img/replication-adapters/right.png) | ![Y](https://goharbor.io/docs/2.12.0/img/replication-adapters/right.png) | V1.9 | ![Y](https://goharbor.io/docs/2.12.0/img/replication-adapters/right.png) |\n| [ECR](https://aws.amazon.com/ecr/) | ![ECR](https://goharbor.io/docs/2.12.0/img/replication-adapters/ecr.png) | ![Y](https://goharbor.io/docs/2.12.0/img/replication-adapters/right.png) | ![Y](https://goharbor.io/docs/2.12.0/img/replication-adapters/right.png) | ![Y](https://goharbor.io/docs/2.12.0/img/replication-adapters/right.png) | V1.9 | ![Y](https://goharbor.io/docs/2.12.0/img/replication-adapters/right.png) |\n| [ACR](https://azure.microsoft.com/en-us/services/container-registry/) | ![ACR](https://goharbor.io/docs/2.12.0/img/replication-adapters/acr.png) | ![Y](https://goharbor.io/docs/2.12.0/img/replication-adapters/right.png) | ![Y](https://goharbor.io/docs/2.12.0/img/replication-adapters/right.png) | ![Y](https://goharbor.io/docs/2.12.0/img/replication-adapters/right.png) | V1.9 | ![N](https://goharbor.io/docs/2.12.0/img/replication-adapters/no.png) |\n| [AliCR](https://www.alibabacloud.com/product/container-registry) | ![AliCR](https://goharbor.io/docs/2.12.0/img/replication-adapters/ali-cr.png) | ![Y](https://goharbor.io/docs/2.12.0/img/replication-adapters/right.png) | ![Y](https://goharbor.io/docs/2.12.0/img/replication-adapters/right.png) | ![N](https://goharbor.io/docs/2.12.0/img/replication-adapters/no.png) | V1.9 | ![N](https://goharbor.io/docs/2.12.0/img/replication-adapters/no.png) |\n| [Artifact Hub](https://artifacthub.io/) | ![Artifact Hub](https://goharbor.io/docs/2.12.0/img/replication-adapters/artifacthub.png) | ![Y](https://goharbor.io/docs/2.12.0/img/replication-adapters/right.png) | ![N](https://goharbor.io/docs/2.12.0/img/replication-adapters/no.png) | ![N](https://goharbor.io/docs/2.12.0/img/replication-adapters/no.png) | V2.2 | ![N](https://goharbor.io/docs/2.12.0/img/replication-adapters/no.png) |\n| [Artifactory](https://jfrog.com/artifactory/) | ![Artifactory](https://goharbor.io/docs/2.12.0/img/replication-adapters/artifactory.png) | ![Y](https://goharbor.io/docs/2.12.0/img/replication-adapters/right.png) | ![Y](https://goharbor.io/docs/2.12.0/img/replication-adapters/right.png) | ![Y](https://goharbor.io/docs/2.12.0/img/replication-adapters/right.png) | V1.10 | ![N](https://goharbor.io/docs/2.12.0/img/replication-adapters/no.png) |\n| [Quay](https://github.com/quay/quay) | ![Quay](https://goharbor.io/docs/2.12.0/img/replication-adapters/quay.png) | ![Y](https://goharbor.io/docs/2.12.0/img/replication-adapters/right.png) | ![Y](https://goharbor.io/docs/2.12.0/img/replication-adapters/right.png) | ![Y](https://goharbor.io/docs/2.12.0/img/replication-adapters/right.png) | V1.10 | ![N](https://goharbor.io/docs/2.12.0/img/replication-adapters/no.png) |\n| [GitLab Registry](https://docs.gitlab.com/ee/user/packages/container_registry/) | ![GitLab Registry](https://goharbor.io/docs/2.12.0/img/replication-adapters/gitlab.png) | ![Y](https://goharbor.io/docs/2.12.0/img/replication-adapters/right.png) | ![Y](https://goharbor.io/docs/2.12.0/img/replication-adapters/right.png) | ![N](https://goharbor.io/docs/2.12.0/img/replication-adapters/no.png) | V1.10 | ![N](https://goharbor.io/docs/2.12.0/img/replication-adapters/no.png) |\n\n- `Pull` mode replicates artifacts from the specified source registries into Harbor.\n- `Push` mode replicates artifacts from Harbor to the specified target registries.\n- `Proxy Cache` means the replication adapter can be used as a proxy cache registry.\n\n## OIDC Adapters\n\n|  | OIDC Providers | Officially Verified | End User Verified | Verified in Release |\n| --- | --- | --- | --- | --- |\n| [Google Identity](https://developers.google.com/identity/protocols/OpenIDConnect) | ![google identity](https://goharbor.io/docs/2.12.0/img/OIDC/google-identity.png) | ![Y](https://goharbor.io/docs/2.12.0/img/replication-adapters/right.png) |  | V1.9 |\n| [Dex](https://github.com/dexidp/dex) | ![dex](https://goharbor.io/docs/2.12.0/img/OIDC/dex.png) | ![Y](https://goharbor.io/docs/2.12.0/img/replication-adapters/right.png) |  | V1.9 |\n| [Ping Identity](https://www.pingidentity.com/) | ![ping identity](https://goharbor.io/docs/2.12.0/img/OIDC/ping.png) |  | ![Y](https://goharbor.io/docs/2.12.0/img/replication-adapters/right.png) | V1.9 |\n| [Keycloak](https://www.keycloak.org/) | ![Keycloak](https://goharbor.io/docs/2.12.0/img/OIDC/keycloak.png) | ![Y](https://goharbor.io/docs/2.12.0/img/replication-adapters/right.png) |  | V1.10 |\n| [Auth0](https://auth0.com/) | ![Auth0](https://goharbor.io/docs/2.12.0/img/OIDC/auth0.png) | ![Y](https://goharbor.io/docs/2.12.0/img/replication-adapters/right.png) |  | V1.10 |\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/install-config/harbor-compatibility-list", "title": "Harbor Compatibility List", "description": "This document provides compatibility information for all Harbor components.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 02:54:08", "type": "overview", "page_metadata": {"og:title": "Harbor &ndash; Harbor Compatibility List", "og:type": ["documentation", "article"], "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "twitter:creator": "@project_harbor", "og:image:alt": "Harbor &ndash; Harbor Compatibility List project logo", "og:locale": "en_US", "ogSiteName": "Harbor", "ogLocale": "en_US", "generator": "Hugo 0.74.0", "favicon": "https://goharbor.io/favicon.svg", "ogTitle": "Harbor &ndash; Harbor Compatibility List", "twitter:card": "summary", "title": "\n      \nHarbor docs | Harbor Compatibility List\n\n    ", "ogUrl": "https://goharbor.io/docs/2.12.0/install-config/harbor-compatibility-list/", "og:site_name": "Harbor", "og:url": "https://goharbor.io/docs/2.12.0/install-config/harbor-compatibility-list/", "og:image:type": "image/png", "twitter:site": "@project_harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "scrapeId": "4ea686d6-88d8-4733-ba99-7ccfad4600cb", "sourceURL": "https://goharbor.io/docs/2.12.0/install-config/harbor-compatibility-list", "url": "https://goharbor.io/docs/2.12.0/install-config/harbor-compatibility-list/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I replication adapters in harbor-2-12-0?\n\nAssistant: To replication adapters in harbor-2-12-0, here's what you do:\n|  | Registries | Pull Mode | Push Mode | Proxy Cache | Introduced in Release | Automated Pipeline Covered |\n| --- | --- | --- | --- | --- | --- | --- |\n| [Harbor](https://goharbor.io/) | ![Harbor](https://goharbor.io/docs/2.12.0/img/replication-adapters/harbor-logo.png) | ![Y](https://goharbor.io/docs/2.12.0/img/replication-adapters/right.png) | ![Y](https://goharbor.io/docs/2.12.0/img/replication-adapters/right.png) | ![Y](https://goharbor.io/docs/2.12.0/img/replication-adapters/right.png) | V1.8 | ![Y](https://goharbor.io/docs/2.12.0/img/replication-adapters/right.png) |\n| [distribution](https://github.com/distribution/distribution) | ![distribution](https://goharbor.io/docs/2.12.0/img/replication-adapters/distribution.png) | ![Y](https://goharbor.io/docs/2.12.0/img/replication-adapters/right.png) | ![Y](https://goharbor.io/docs/2.12.0/img/replication-adapters/right.png) | ![Y](https://goharbor.io/docs/2.12.0/img/replication-adapters/right.png) | V1.8 | ![Y](https://goharbor.io/docs/2.12.0/img/replication-adapters/right.png) |\n| [docker hub](https://hub.docker.com/) | ![docker hub](https://goharbor.io/docs/2.12.0/img/replication-adapters/docker-hub.png) | ![Y](https://goharbor.io/docs/2.12.0/img/replication-adapters/right.png) | ![Y](https://goharbor.io/docs/2.12.0/img/replication-adapters/right.png) | ![Y](https://goharbor.io/docs/2.12.0/img/replication-adapters/right.png) | V1.8 | ![Y](https://goharbor.io/docs/2.12.0/img/replication-adapters/right.png) |\n| [Huawei SWR](https://www.huaweicloud.com/en-us/product/swr.html) | ![Huawei SWR](https://goharbor.io/docs/2.12.0/img/replication-adapters/hw.png) | ![Y](https://goharbor.io/docs/2.12.0/img/replication-adapters/right.png) | ![Y](https://goharbor.io/docs/2.12.0/img/replication-adapters/right.png) | ![N](https://goharbor.io/docs/2.12.0/img/replication-adapters/no.png) | V1.8 | ![N](https://goharbor.io/docs/2.12.0/img/replication-adapters/no.png) |\n| [GCR](https://cloud.google.com/container-registry/) | ![GCR](https://goharbor.io/docs/2.12.0/img/replication-adapters/gcr.png) | ![Y](https://goharbor.io/docs/2.12.0/img/replication-adapters/right.png) | ![Y](https://goharbor.io/docs/2.12.0/img/replication-adapters/right.png) | ![Y](https://goharbor.io/docs/2.12.0/img/replication-adapters/right.png) | V1.9 | ![Y](https://goharbor.io/docs/2.12.0/img/replication-adapters/right.png) |\n| [ECR](https://aws.amazon.com/ecr/) | ![ECR](https://goharbor.io/docs/2.12.0/img/replication-adapters/ecr.png) | ![Y](https://goharbor.io/docs/2.12.0/img/replication-adapters/right.png) | ![Y](https://goharbor.io/docs/2.12.0/img/replication-adapters/right.png) | ![Y](https://goharbor.io/docs/2.12.0/img/replication-adapters/right.png) | V1.9 | ![Y](https://goharbor.io/docs/2.12.0/img/replication-adapters/right.png) |\n| [ACR](https://azure.microsoft.com/en-us/services/container-registry/) | ![ACR](https://goharbor.io/docs/2.12.0/img/replication-adapters/acr.png) | ![Y](https://goharbor.io/docs/2.12.0/img/replication-adapters/right.png) | ![Y](https://goharbor.io/docs/2.12.0/img/replication-adapters/right.png) | ![Y](https://goharbor.io/docs/2.12.0/img/replication-adapters/right.png) | V1.9 | ![N](https://goharbor.io/docs/2.12.0/img/replication-adapters/no.png) |\n| [AliCR](https://www.alibabacloud.com/product/container-registry) | ![AliCR](https://goharbor.io/docs/2.12.0/img/replication-adapters/ali-cr.png) | ![Y](https://goharbor.io/docs/2.12.0/img/replication-adapters/right.png) | ![Y](https://goharbor.io/docs/2.12.0/img/replication-adapters/right.png) | ![N](https://goharbor.io/docs/2.12.0/img/replication-adapters/no.png) | V1.9 | ![N](https://goharbor.io/docs/2.12.0/img/replication-adapters/no.png) |\n| [Artifact Hub](https://artifacthub.io/) | ![Artifact Hub](https://goharbor.io/docs/2.12.0/img/replication-adapters/artifacthub.png) | ![Y](https://goharbor.io/docs/2.12.0/img/replication-adapters/right.png) | ![N](https://goharbor.io/docs/2.12.0/img/replication-adapters/no.png) | ![N](https://goharbor.io/docs/2.12.0/img/replication-adapters/no.png) | V2.2 | ![N](https://goharbor.io/docs/2.12.0/img/replication-adapters/no.png) |\n| [Artifactory](https://jfrog.com/artifactory/) | ![Artifactory](https://goharbor.io/docs/2.12.0/img/replication-adapters/artifactory.png) | ![Y](https://goharbor.io/docs/2.12.0/img/replication-adapters/right.png) | ![Y](https://goharbor.io/docs/2.12.0/img/replication-adapters/right.png) | ![Y](https://goharbor.io/docs/2.12.0/img/replication-adapters/right.png) | V1.10 | ![N](https://goharbor.io/docs/2.12.0/img/replication-adapters/no.png) |\n| [Quay](https://github.com/quay/quay) | ![Quay](https://goharbor.io/docs/2.12.0/img/replication-adapters/quay.png) | ![Y](https://goharbor.io/docs/2.12.0/img/replication-adapters/right.png) | ![Y](https://goharbor.io/docs/2.12.0/img/replication-adapters/right.png) | ![Y](https://goharbor.io/docs/2.12.0/img/replication-adapters/right.png) | V1.10 | ![N](https://goharbor.io/docs/2.12.0/img/replication-adapters/no.png) |\n| [GitLab Registry](https://docs.gitlab.com/ee/user/packages/container_registry/) | ![GitLab Registry](https://goharbor.io/docs/2.12.0/img/replication-adapters/gitlab.png) | ![Y](https://goharbor.io/docs/2.12.0/img/replication-adapters/right.png) | ![Y](https://goharbor.io/docs/2.12.0/img/replication-adapters/right.png) | ![N](https://goharbor.io/docs/2.12.0/img/replication-adapters/no.png) | V1.10 | ![N](https://goharbor.io/docs/2.12.0/img/replication-adapters/no.png) |\n\n- `Pull` mode replicates artifacts from the specified source registries into Harbor.\n- `Push` mode replicates artifacts from Harbor to the specified target registries.\n- `Proxy Cache` means the replication adapter can be used as a proxy cache registry..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/install-config/harbor-compatibility-list", "title": "Harbor Compatibility List", "description": "This document provides compatibility information for all Harbor components.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 02:54:08", "type": "section_detail", "page_metadata": {"og:title": "Harbor &ndash; Harbor Compatibility List", "og:type": ["documentation", "article"], "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "twitter:creator": "@project_harbor", "og:image:alt": "Harbor &ndash; Harbor Compatibility List project logo", "og:locale": "en_US", "ogSiteName": "Harbor", "ogLocale": "en_US", "generator": "Hugo 0.74.0", "favicon": "https://goharbor.io/favicon.svg", "ogTitle": "Harbor &ndash; Harbor Compatibility List", "twitter:card": "summary", "title": "\n      \nHarbor docs | Harbor Compatibility List\n\n    ", "ogUrl": "https://goharbor.io/docs/2.12.0/install-config/harbor-compatibility-list/", "og:site_name": "Harbor", "og:url": "https://goharbor.io/docs/2.12.0/install-config/harbor-compatibility-list/", "og:image:type": "image/png", "twitter:site": "@project_harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "scrapeId": "4ea686d6-88d8-4733-ba99-7ccfad4600cb", "sourceURL": "https://goharbor.io/docs/2.12.0/install-config/harbor-compatibility-list", "url": "https://goharbor.io/docs/2.12.0/install-config/harbor-compatibility-list/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I oidc adapters in harbor-2-12-0?\n\nAssistant: To oidc adapters in harbor-2-12-0, here's what you do:\n|  | OIDC Providers | Officially Verified | End User Verified | Verified in Release |\n| --- | --- | --- | --- | --- |\n| [Google Identity](https://developers.google.com/identity/protocols/OpenIDConnect) | ![google identity](https://goharbor.io/docs/2.12.0/img/OIDC/google-identity.png) | ![Y](https://goharbor.io/docs/2.12.0/img/replication-adapters/right.png) |  | V1.9 |\n| [Dex](https://github.com/dexidp/dex) | ![dex](https://goharbor.io/docs/2.12.0/img/OIDC/dex.png) | ![Y](https://goharbor.io/docs/2.12.0/img/replication-adapters/right.png) |  | V1.9 |\n| [Ping Identity](https://www.pingidentity.com/) | ![ping identity](https://goharbor.io/docs/2.12.0/img/OIDC/ping.png) |  | ![Y](https://goharbor.io/docs/2.12.0/img/replication-adapters/right.png) | V1.9 |\n| [Keycloak](https://www.keycloak.org/) | ![Keycloak](https://goharbor.io/docs/2.12.0/img/OIDC/keycloak.png) | ![Y](https://goharbor.io/docs/2.12.0/img/replication-adapters/right.png) |  | V1.10 |\n| [Auth0](https://auth0.com/) | ![Auth0](https://goharbor.io/docs/2.12.0/img/OIDC/auth0.png) | ![Y](https://goharbor.io/docs/2.12.0/img/replication-adapters/right.png) |  | V1.10 |.\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/install-config/harbor-compatibility-list", "title": "Harbor Compatibility List", "description": "This document provides compatibility information for all Harbor components.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 02:54:08", "type": "section_detail", "page_metadata": {"og:title": "Harbor &ndash; Harbor Compatibility List", "og:type": ["documentation", "article"], "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "twitter:creator": "@project_harbor", "og:image:alt": "Harbor &ndash; Harbor Compatibility List project logo", "og:locale": "en_US", "ogSiteName": "Harbor", "ogLocale": "en_US", "generator": "Hugo 0.74.0", "favicon": "https://goharbor.io/favicon.svg", "ogTitle": "Harbor &ndash; Harbor Compatibility List", "twitter:card": "summary", "title": "\n      \nHarbor docs | Harbor Compatibility List\n\n    ", "ogUrl": "https://goharbor.io/docs/2.12.0/install-config/harbor-compatibility-list/", "og:site_name": "Harbor", "og:url": "https://goharbor.io/docs/2.12.0/install-config/harbor-compatibility-list/", "og:image:type": "image/png", "twitter:site": "@project_harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "scrapeId": "4ea686d6-88d8-4733-ba99-7ccfad4600cb", "sourceURL": "https://goharbor.io/docs/2.12.0/install-config/harbor-compatibility-list", "url": "https://goharbor.io/docs/2.12.0/install-config/harbor-compatibility-list/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: What are some tips for using Harbor Compatibility List in harbor-2-12-0 effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nEvaluated means that the scanner implementation has been officially tested and verified.\n\nAs Default means that the scanner is provided as a default option and can be deployed together with the main Harbor components by providing extra options during installation. You must install other scanners manually.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/install-config/harbor-compatibility-list", "title": "Harbor Compatibility List", "description": "This document provides compatibility information for all Harbor components.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 02:54:08", "type": "best_practices", "page_metadata": {"og:title": "Harbor &ndash; Harbor Compatibility List", "og:type": ["documentation", "article"], "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "twitter:creator": "@project_harbor", "og:image:alt": "Harbor &ndash; Harbor Compatibility List project logo", "og:locale": "en_US", "ogSiteName": "Harbor", "ogLocale": "en_US", "generator": "Hugo 0.74.0", "favicon": "https://goharbor.io/favicon.svg", "ogTitle": "Harbor &ndash; Harbor Compatibility List", "twitter:card": "summary", "title": "\n      \nHarbor docs | Harbor Compatibility List\n\n    ", "ogUrl": "https://goharbor.io/docs/2.12.0/install-config/harbor-compatibility-list/", "og:site_name": "Harbor", "og:url": "https://goharbor.io/docs/2.12.0/install-config/harbor-compatibility-list/", "og:image:type": "image/png", "twitter:site": "@project_harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "scrapeId": "4ea686d6-88d8-4733-ba99-7ccfad4600cb", "sourceURL": "https://goharbor.io/docs/2.12.0/install-config/harbor-compatibility-list", "url": "https://goharbor.io/docs/2.12.0/install-config/harbor-compatibility-list/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you explain what Managing Users is in harbor-2-12-0?\n\nAssistant: Sure, I'd be happy to explain Managing Users in harbor-2-12-0.\n\n# Managing Users\n\nThis page covers how to manage user roles and permissions in Harbor, including assigning roles and creating user accounts.Here's a quick rundown of what this is about:\n\n## User Roles and Permissions\n\nHarbor manages images through projects. You provide access to these images to users by including the users in projects and assigning one of the following roles to them.\n\n- **Limited Guest**: A Limited Guest does not have full read privileges for a project. They can pull images but cannot push, and they cannot see logs or the other members of a project. For example, you can create limited guests for users from different organizations who share access to a project.\n- **Guest**: Guest has read-only privilege for a specified project. They can pull and retag images, but cannot push.\n- **Developer**: Developer has read and write privileges for a project.\n- **Maintainer**: Maintainer has elevated permissions beyond those of ‘Developer’ including the ability to scan images, view replications jobs, and delete images and helm charts.\n- **ProjectAdmin**: When creating a new project, you will be assigned the “ProjectAdmin” role to the project. Besides read-write privileges, the “ProjectAdmin” also has some management privileges, such as adding and removing members, starting a vulnerability scan.\n\nBesides the above roles, there are two system-level roles:\n\n- **Harbor system administrator**: “Harbor system administrator” has the most privileges. In addition to the privileges mentioned above, “Harbor system administrator” can also list all projects, set an ordinary user as administrator, delete users and set vulnerability scan policy for all images. The public project “library” is also owned by the administrator.\n- **Anonymous**: When a user is not logged in, the user is considered as an “Anonymous” user. An anonymous user has no access to private projects and has read-only access to public projects.\n\nFor full details of the permissions of the different roles, see [User Permissions By Role](https://goharbor.io/docs/2.12.0/administration/managing-users/user-permissions-by-role/).\n\n## User Account Management\n\nIf you run Harbor in database authentication mode, you create user accounts directly in the Harbor interface. For information about how to create local user accounts, see [Create User Accounts in Database Mode](https://goharbor.io/docs/2.12.0/administration/managing-users/create-users-db/).\n\nIf you run Harbor in LDAP/AD or OIDC authentication mode, you create and manage user accounts in your LDAP/AD or OIDC provider. Harbor obtains the users from the LDAP/AD or OIDC server and displays them in the **Users** tab of the Harbor interface.\n\n## Assigning the Harbor System Administrator Role\n\nHarbor system administrators can assign the Harbor system administrator role to other users by selecting usernames and clicking **Set as Administrator** in the **Users** tab.\n\nTo delete users, select a user and click `DELETE`. When deleting the user, its privilege will be removed. for LDAP/AD or OIDC authentication mode, it just delete the user data in Harbor, not in the LDAP/AD or OIDC.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/managing-users", "title": "Managing Users", "description": "This page covers how to manage user roles and permissions in Harbor, including assigning roles and creating user accounts.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 02:54:19", "type": "overview", "page_metadata": {"og:url": "https://goharbor.io/docs/2.12.0/administration/managing-users/", "og:site_name": "Harbor", "og:image:alt": "Harbor &ndash; Managing Users project logo", "title": "\n      \nHarbor docs | Managing Users\n\n    ", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogSiteName": "Harbor", "og:title": "Harbor &ndash; Managing Users", "twitter:creator": "@project_harbor", "og:locale": "en_US", "og:image:type": "image/png", "generator": "Hugo 0.74.0", "og:type": ["documentation", "article"], "ogTitle": "Harbor &ndash; Managing Users", "ogLocale": "en_US", "twitter:card": "summary", "twitter:site": "@project_harbor", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "favicon": "https://goharbor.io/favicon.svg", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/managing-users/", "scrapeId": "1e0dea7c-6d58-4df4-bb1d-09209b9747b2", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/managing-users", "url": "https://goharbor.io/docs/2.12.0/administration/managing-users/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I user roles and permissions in harbor-2-12-0?\n\nAssistant: To user roles and permissions in harbor-2-12-0, here's what you do:\nHarbor manages images through projects. You provide access to these images to users by including the users in projects and assigning one of the following roles to them.\n\n- **Limited Guest**: A Limited Guest does not have full read privileges for a project. They can pull images but cannot push, and they cannot see logs or the other members of a project. For example, you can create limited guests for users from different organizations who share access to a project.\n- **Guest**: Guest has read-only privilege for a specified project. They can pull and retag images, but cannot push.\n- **Developer**: Developer has read and write privileges for a project.\n- **Maintainer**: Maintainer has elevated permissions beyond those of ‘Developer’ including the ability to scan images, view replications jobs, and delete images and helm charts.\n- **ProjectAdmin**: When creating a new project, you will be assigned the “ProjectAdmin” role to the project. Besides read-write privileges, the “ProjectAdmin” also has some management privileges, such as adding and removing members, starting a vulnerability scan.\n\nBesides the above roles, there are two system-level roles:\n\n- **Harbor system administrator**: “Harbor system administrator” has the most privileges. In addition to the privileges mentioned above, “Harbor system administrator” can also list all projects, set an ordinary user as administrator, delete users and set vulnerability scan policy for all images. The public project “library” is also owned by the administrator.\n- **Anonymous**: When a user is not logged in, the user is considered as an “Anonymous” user. An anonymous user has no access to private projects and has read-only access to public projects.\n\nFor full details of the permissions of the different roles, see [User Permissions By Role](https://goharbor.io/docs/2.12.0/administration/managing-users/user-permissions-by-role/)..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/managing-users", "title": "Managing Users", "description": "This page covers how to manage user roles and permissions in Harbor, including assigning roles and creating user accounts.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 02:54:19", "type": "section_detail", "page_metadata": {"og:url": "https://goharbor.io/docs/2.12.0/administration/managing-users/", "og:site_name": "Harbor", "og:image:alt": "Harbor &ndash; Managing Users project logo", "title": "\n      \nHarbor docs | Managing Users\n\n    ", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogSiteName": "Harbor", "og:title": "Harbor &ndash; Managing Users", "twitter:creator": "@project_harbor", "og:locale": "en_US", "og:image:type": "image/png", "generator": "Hugo 0.74.0", "og:type": ["documentation", "article"], "ogTitle": "Harbor &ndash; Managing Users", "ogLocale": "en_US", "twitter:card": "summary", "twitter:site": "@project_harbor", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "favicon": "https://goharbor.io/favicon.svg", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/managing-users/", "scrapeId": "1e0dea7c-6d58-4df4-bb1d-09209b9747b2", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/managing-users", "url": "https://goharbor.io/docs/2.12.0/administration/managing-users/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I user account management in harbor-2-12-0?\n\nAssistant: To user account management in harbor-2-12-0, here's what you do:\nIf you run Harbor in database authentication mode, you create user accounts directly in the Harbor interface. For information about how to create local user accounts, see [Create User Accounts in Database Mode](https://goharbor.io/docs/2.12.0/administration/managing-users/create-users-db/).\n\nIf you run Harbor in LDAP/AD or OIDC authentication mode, you create and manage user accounts in your LDAP/AD or OIDC provider. Harbor obtains the users from the LDAP/AD or OIDC server and displays them in the **Users** tab of the Harbor interface..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/managing-users", "title": "Managing Users", "description": "This page covers how to manage user roles and permissions in Harbor, including assigning roles and creating user accounts.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 02:54:19", "type": "section_detail", "page_metadata": {"og:url": "https://goharbor.io/docs/2.12.0/administration/managing-users/", "og:site_name": "Harbor", "og:image:alt": "Harbor &ndash; Managing Users project logo", "title": "\n      \nHarbor docs | Managing Users\n\n    ", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogSiteName": "Harbor", "og:title": "Harbor &ndash; Managing Users", "twitter:creator": "@project_harbor", "og:locale": "en_US", "og:image:type": "image/png", "generator": "Hugo 0.74.0", "og:type": ["documentation", "article"], "ogTitle": "Harbor &ndash; Managing Users", "ogLocale": "en_US", "twitter:card": "summary", "twitter:site": "@project_harbor", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "favicon": "https://goharbor.io/favicon.svg", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/managing-users/", "scrapeId": "1e0dea7c-6d58-4df4-bb1d-09209b9747b2", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/managing-users", "url": "https://goharbor.io/docs/2.12.0/administration/managing-users/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I assigning the harbor system administrator role in harbor-2-12-0?\n\nAssistant: To assigning the harbor system administrator role in harbor-2-12-0, here's what you do:\nHarbor system administrators can assign the Harbor system administrator role to other users by selecting usernames and clicking **Set as Administrator** in the **Users** tab.\n\nTo delete users, select a user and click `DELETE`. When deleting the user, its privilege will be removed. for LDAP/AD or OIDC authentication mode, it just delete the user data in Harbor, not in the LDAP/AD or OIDC..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/managing-users", "title": "Managing Users", "description": "This page covers how to manage user roles and permissions in Harbor, including assigning roles and creating user accounts.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 02:54:19", "type": "section_detail", "page_metadata": {"og:url": "https://goharbor.io/docs/2.12.0/administration/managing-users/", "og:site_name": "Harbor", "og:image:alt": "Harbor &ndash; Managing Users project logo", "title": "\n      \nHarbor docs | Managing Users\n\n    ", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogSiteName": "Harbor", "og:title": "Harbor &ndash; Managing Users", "twitter:creator": "@project_harbor", "og:locale": "en_US", "og:image:type": "image/png", "generator": "Hugo 0.74.0", "og:type": ["documentation", "article"], "ogTitle": "Harbor &ndash; Managing Users", "ogLocale": "en_US", "twitter:card": "summary", "twitter:site": "@project_harbor", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "favicon": "https://goharbor.io/favicon.svg", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/managing-users/", "scrapeId": "1e0dea7c-6d58-4df4-bb1d-09209b9747b2", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/managing-users", "url": "https://goharbor.io/docs/2.12.0/administration/managing-users/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you give me some code examples for Managing Users in harbor-2-12-0?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Delete User Command**:\n\n```yaml\nSELECT a user and click `DELETE`.\n```\n\nThis snippet shows you how to delete user command, which is an important aspect of managing users.\n\n", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/managing-users", "title": "Managing Users", "description": "This page covers how to manage user roles and permissions in Harbor, including assigning roles and creating user accounts.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 02:54:19", "type": "code_examples", "page_metadata": {"og:url": "https://goharbor.io/docs/2.12.0/administration/managing-users/", "og:site_name": "Harbor", "og:image:alt": "Harbor &ndash; Managing Users project logo", "title": "\n      \nHarbor docs | Managing Users\n\n    ", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogSiteName": "Harbor", "og:title": "Harbor &ndash; Managing Users", "twitter:creator": "@project_harbor", "og:locale": "en_US", "og:image:type": "image/png", "generator": "Hugo 0.74.0", "og:type": ["documentation", "article"], "ogTitle": "Harbor &ndash; Managing Users", "ogLocale": "en_US", "twitter:card": "summary", "twitter:site": "@project_harbor", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "favicon": "https://goharbor.io/favicon.svg", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/managing-users/", "scrapeId": "1e0dea7c-6d58-4df4-bb1d-09209b9747b2", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/managing-users", "url": "https://goharbor.io/docs/2.12.0/administration/managing-users/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: What are some tips for using Managing Users in harbor-2-12-0 effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nFor limited access, consider using the Limited Guest role for users from different organizations.\n\nAlways review user permissions to ensure they align with their roles.\n\nWhen using LDAP/AD or OIDC, remember that deleting a user in Harbor does not remove them from the LDAP/AD or OIDC system.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/managing-users", "title": "Managing Users", "description": "This page covers how to manage user roles and permissions in Harbor, including assigning roles and creating user accounts.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 02:54:19", "type": "best_practices", "page_metadata": {"og:url": "https://goharbor.io/docs/2.12.0/administration/managing-users/", "og:site_name": "Harbor", "og:image:alt": "Harbor &ndash; Managing Users project logo", "title": "\n      \nHarbor docs | Managing Users\n\n    ", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogSiteName": "Harbor", "og:title": "Harbor &ndash; Managing Users", "twitter:creator": "@project_harbor", "og:locale": "en_US", "og:image:type": "image/png", "generator": "Hugo 0.74.0", "og:type": ["documentation", "article"], "ogTitle": "Harbor &ndash; Managing Users", "ogLocale": "en_US", "twitter:card": "summary", "twitter:site": "@project_harbor", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "favicon": "https://goharbor.io/favicon.svg", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/managing-users/", "scrapeId": "1e0dea7c-6d58-4df4-bb1d-09209b9747b2", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/managing-users", "url": "https://goharbor.io/docs/2.12.0/administration/managing-users/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you explain what Working with Projects is in harbor-2-12-0?\n\nAssistant: Sure, I'd be happy to explain Working with Projects in harbor-2-12-0.\n\n# Working with Projects\n\nThis section describes how users with the developer, maintainer, and project administrator roles manage and participate in Harbor projects. The Harbor administrator can also perform all of these tasks.Here's a quick rundown of what this is about:\n\n## Subsections\n\n- [Create Projects](https://goharbor.io/docs/2.12.0/working-with-projects/create-projects/)\n- [Project Configuration](https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/)\n- [Working with Images and Tags](https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/)\n- [Working with OCI Artifacts](https://goharbor.io/docs/2.12.0/working-with-projects/working-with-oci/)\n- [View the Harbor REST API](https://goharbor.io/docs/2.12.0/working-with-projects/using-api-explorer/)\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects", "title": "Working with Projects", "description": "This section describes how users with the developer, maintainer, and project administrator roles manage and participate in Harbor projects. The Harbor administrator can also perform all of these tasks.", "has_code_examples": false, "has_best_practices": false, "section_count": 1, "timestamp": "2025-03-01 02:54:24", "type": "overview", "page_metadata": {"og:title": "Harbor &ndash; Working with Projects", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/", "title": "\n      \nHarbor docs | Working with Projects\n\n    ", "og:type": ["documentation", "article"], "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/", "og:site_name": "Harbor", "ogLocale": "en_US", "generator": "Hugo 0.74.0", "favicon": "https://goharbor.io/favicon.svg", "og:image:type": "image/png", "twitter:site": "@project_harbor", "og:image:alt": "Harbor &ndash; Working with Projects project logo", "twitter:card": "summary", "ogSiteName": "Harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogTitle": "Harbor &ndash; Working with Projects", "og:locale": "en_US", "twitter:creator": "@project_harbor", "scrapeId": "2a1a3983-cc6f-49f8-8aeb-18ede0eb8ee2", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I subsections in harbor-2-12-0?\n\nAssistant: To subsections in harbor-2-12-0, here's what you do:\n- [Create Projects](https://goharbor.io/docs/2.12.0/working-with-projects/create-projects/)\n- [Project Configuration](https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/)\n- [Working with Images and Tags](https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/)\n- [Working with OCI Artifacts](https://goharbor.io/docs/2.12.0/working-with-projects/working-with-oci/)\n- [View the Harbor REST API](https://goharbor.io/docs/2.12.0/working-with-projects/using-api-explorer/).\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects", "title": "Working with Projects", "description": "This section describes how users with the developer, maintainer, and project administrator roles manage and participate in Harbor projects. The Harbor administrator can also perform all of these tasks.", "has_code_examples": false, "has_best_practices": false, "section_count": 1, "timestamp": "2025-03-01 02:54:24", "type": "section_detail", "page_metadata": {"og:title": "Harbor &ndash; Working with Projects", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/", "title": "\n      \nHarbor docs | Working with Projects\n\n    ", "og:type": ["documentation", "article"], "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/", "og:site_name": "Harbor", "ogLocale": "en_US", "generator": "Hugo 0.74.0", "favicon": "https://goharbor.io/favicon.svg", "og:image:type": "image/png", "twitter:site": "@project_harbor", "og:image:alt": "Harbor &ndash; Working with Projects project logo", "twitter:card": "summary", "ogSiteName": "Harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogTitle": "Harbor &ndash; Working with Projects", "og:locale": "en_US", "twitter:creator": "@project_harbor", "scrapeId": "2a1a3983-cc6f-49f8-8aeb-18ede0eb8ee2", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you explain what Building, Customizing, and Contributing to Harbor is in harbor-2-12-0?\n\nAssistant: Sure, I'd be happy to explain Building, Customizing, and Contributing to Harbor in harbor-2-12-0.\n\n# Building, Customizing, and Contributing to Harbor\n\nThis section describes how developers can build from Harbor source code, customize their deployments, and contribute to the open-source Harbor project.Here's a quick rundown of what this is about:\n\n## Pages in this section\n\n- [Build Harbor from Source Code](https://goharbor.io/docs/2.12.0/build-customize-contribute/compile-guide/)\n- [Customize the Look and Feel of Harbor](https://goharbor.io/docs/2.12.0/build-customize-contribute/customize-look-feel/)\n- [Developing for Internationalization](https://goharbor.io/docs/2.12.0/build-customize-contribute/developer-guide-i18n/)\n- [Developing the Harbor Frontend](https://goharbor.io/docs/2.12.0/build-customize-contribute/ui-contribution-get-started/)\n- [Documentation Style Guide](https://goharbor.io/docs/2.12.0/build-customize-contribute/style-guide/)\n- [Registry Landscape](https://goharbor.io/docs/2.12.0/build-customize-contribute/registry-landscape/)\n- [Using Make](https://goharbor.io/docs/2.12.0/build-customize-contribute/use-make/)\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/build-customize-contribute", "title": "Building, Customizing, and Contributing to Harbor", "description": "This section describes how developers can build from Harbor source code, customize their deployments, and contribute to the open-source Harbor project.", "has_code_examples": false, "has_best_practices": false, "section_count": 1, "timestamp": "2025-03-01 02:54:30", "type": "overview", "page_metadata": {"twitter:card": "summary", "generator": "Hugo 0.74.0", "og:type": ["documentation", "article"], "og:site_name": "Harbor", "ogTitle": "Harbor &ndash; Building, Customizing, and Contributing to Harbor", "og:title": "Harbor &ndash; Building, Customizing, and Contributing to Harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "favicon": "https://goharbor.io/favicon.svg", "title": "\n      \nHarbor docs | Building, Customizing, and Contributing to Harbor\n\n    ", "og:image:type": "image/png", "twitter:creator": "@project_harbor", "og:url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/", "twitter:site": "@project_harbor", "og:image:alt": "Harbor &ndash; Building, Customizing, and Contributing to Harbor project logo", "ogSiteName": "Harbor", "ogLocale": "en_US", "og:locale": "en_US", "ogUrl": "https://goharbor.io/docs/2.12.0/build-customize-contribute/", "scrapeId": "bef2da26-5be6-40a3-a709-50f1e64194ef", "sourceURL": "https://goharbor.io/docs/2.12.0/build-customize-contribute", "url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I pages in this section in harbor-2-12-0?\n\nAssistant: To pages in this section in harbor-2-12-0, here's what you do:\n- [Build Harbor from Source Code](https://goharbor.io/docs/2.12.0/build-customize-contribute/compile-guide/)\n- [Customize the Look and Feel of Harbor](https://goharbor.io/docs/2.12.0/build-customize-contribute/customize-look-feel/)\n- [Developing for Internationalization](https://goharbor.io/docs/2.12.0/build-customize-contribute/developer-guide-i18n/)\n- [Developing the Harbor Frontend](https://goharbor.io/docs/2.12.0/build-customize-contribute/ui-contribution-get-started/)\n- [Documentation Style Guide](https://goharbor.io/docs/2.12.0/build-customize-contribute/style-guide/)\n- [Registry Landscape](https://goharbor.io/docs/2.12.0/build-customize-contribute/registry-landscape/)\n- [Using Make](https://goharbor.io/docs/2.12.0/build-customize-contribute/use-make/).\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/build-customize-contribute", "title": "Building, Customizing, and Contributing to Harbor", "description": "This section describes how developers can build from Harbor source code, customize their deployments, and contribute to the open-source Harbor project.", "has_code_examples": false, "has_best_practices": false, "section_count": 1, "timestamp": "2025-03-01 02:54:30", "type": "section_detail", "page_metadata": {"twitter:card": "summary", "generator": "Hugo 0.74.0", "og:type": ["documentation", "article"], "og:site_name": "Harbor", "ogTitle": "Harbor &ndash; Building, Customizing, and Contributing to Harbor", "og:title": "Harbor &ndash; Building, Customizing, and Contributing to Harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "favicon": "https://goharbor.io/favicon.svg", "title": "\n      \nHarbor docs | Building, Customizing, and Contributing to Harbor\n\n    ", "og:image:type": "image/png", "twitter:creator": "@project_harbor", "og:url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/", "twitter:site": "@project_harbor", "og:image:alt": "Harbor &ndash; Building, Customizing, and Contributing to Harbor project logo", "ogSiteName": "Harbor", "ogLocale": "en_US", "og:locale": "en_US", "ogUrl": "https://goharbor.io/docs/2.12.0/build-customize-contribute/", "scrapeId": "bef2da26-5be6-40a3-a709-50f1e64194ef", "sourceURL": "https://goharbor.io/docs/2.12.0/build-customize-contribute", "url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you explain what Configure Global Settings is in harbor-2-12-0?\n\nAssistant: Sure, I'd be happy to explain Configure Global Settings in harbor-2-12-0.\n\n# Configure Global Settings\n\nYou can configure Harbor to set the registry in read-only mode, and configure Harbor so that only system administrators can create projects.Here's a quick rundown of what this is about:\n\n## Make the Registry Read Only\n\nYou can set Harbor to read-only mode. In read-only mode, Harbor allows `docker pull` but prevents `docker push` and the deletion of repositories and tags.\n\nIf it set to true, deleting repositories, tags and pushing images are not permitted.\n\n## Set Who Can Create Projects\n\nUse the **Project Creation** drop-down menu to set which users can create projects. Select **Everyone** to allow all users to create projects. Select **Admin Only** to allow only users with the Harbor system administrator role to create projects.\n\n## Retain image last pull time on scanning\n\nBy default, a vulnerability scanner(e.g. Trivy) will update the image’s last `pull time` when the image is scanned. This affects the **Tag Retention Rules** based on pull time. If you want to eliminate this effect, you can enable this option to avoid updating the pull time on scanning.\n\n## Set a banner message on the Harbor UI\n\nSet a custom banner message that will be displayed on the top of the Harbor UI， then every user including anonymous users can see the banner message.\n\n- **Message Content**: Enter your message content in the text area. This filed is required.\n- **Message Type**: Select a message type, each message type has its corresponding style.\n- **Closable**: Decide whether the banner message can be closed temporarily.\n- **Duration**: Set the display time period of the banner message, which is from 0:00 of the start date to 0:00 of the end date. This filed is required.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/general-settings", "title": "Configure Global Settings", "description": "You can configure Harbor to set the registry in read-only mode, and configure Harbor so that only system administrators can create projects.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 02:54:37", "type": "overview", "page_metadata": {"og:locale": "en_US", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/general-settings/", "og:type": ["documentation", "article"], "ogSiteName": "Harbor", "ogLocale": "en_US", "favicon": "https://goharbor.io/favicon.svg", "twitter:creator": "@project_harbor", "title": "\n      \nHarbor docs | Configure Global Settings\n\n    ", "og:url": "https://goharbor.io/docs/2.12.0/administration/general-settings/", "twitter:site": "@project_harbor", "generator": "Hugo 0.74.0", "twitter:card": "summary", "ogTitle": "Harbor &ndash; Configure Global Settings", "og:site_name": "Harbor", "og:image:type": "image/png", "og:title": "Harbor &ndash; Configure Global Settings", "og:image:alt": "Harbor &ndash; Configure Global Settings project logo", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "scrapeId": "d8afb47a-d01f-4798-abec-82a94ea224e0", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/general-settings", "url": "https://goharbor.io/docs/2.12.0/administration/general-settings/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I make the registry read only in harbor-2-12-0?\n\nAssistant: To make the registry read only in harbor-2-12-0, here's what you do:\nYou can set Harbor to read-only mode. In read-only mode, Harbor allows `docker pull` but prevents `docker push` and the deletion of repositories and tags.\n\nIf it set to true, deleting repositories, tags and pushing images are not permitted..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/general-settings", "title": "Configure Global Settings", "description": "You can configure Harbor to set the registry in read-only mode, and configure Harbor so that only system administrators can create projects.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 02:54:37", "type": "section_detail", "page_metadata": {"og:locale": "en_US", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/general-settings/", "og:type": ["documentation", "article"], "ogSiteName": "Harbor", "ogLocale": "en_US", "favicon": "https://goharbor.io/favicon.svg", "twitter:creator": "@project_harbor", "title": "\n      \nHarbor docs | Configure Global Settings\n\n    ", "og:url": "https://goharbor.io/docs/2.12.0/administration/general-settings/", "twitter:site": "@project_harbor", "generator": "Hugo 0.74.0", "twitter:card": "summary", "ogTitle": "Harbor &ndash; Configure Global Settings", "og:site_name": "Harbor", "og:image:type": "image/png", "og:title": "Harbor &ndash; Configure Global Settings", "og:image:alt": "Harbor &ndash; Configure Global Settings project logo", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "scrapeId": "d8afb47a-d01f-4798-abec-82a94ea224e0", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/general-settings", "url": "https://goharbor.io/docs/2.12.0/administration/general-settings/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I set who can create projects in harbor-2-12-0?\n\nAssistant: To set who can create projects in harbor-2-12-0, here's what you do:\nUse the **Project Creation** drop-down menu to set which users can create projects. Select **Everyone** to allow all users to create projects. Select **Admin Only** to allow only users with the Harbor system administrator role to create projects..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/general-settings", "title": "Configure Global Settings", "description": "You can configure Harbor to set the registry in read-only mode, and configure Harbor so that only system administrators can create projects.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 02:54:37", "type": "section_detail", "page_metadata": {"og:locale": "en_US", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/general-settings/", "og:type": ["documentation", "article"], "ogSiteName": "Harbor", "ogLocale": "en_US", "favicon": "https://goharbor.io/favicon.svg", "twitter:creator": "@project_harbor", "title": "\n      \nHarbor docs | Configure Global Settings\n\n    ", "og:url": "https://goharbor.io/docs/2.12.0/administration/general-settings/", "twitter:site": "@project_harbor", "generator": "Hugo 0.74.0", "twitter:card": "summary", "ogTitle": "Harbor &ndash; Configure Global Settings", "og:site_name": "Harbor", "og:image:type": "image/png", "og:title": "Harbor &ndash; Configure Global Settings", "og:image:alt": "Harbor &ndash; Configure Global Settings project logo", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "scrapeId": "d8afb47a-d01f-4798-abec-82a94ea224e0", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/general-settings", "url": "https://goharbor.io/docs/2.12.0/administration/general-settings/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I retain image last pull time on scanning in harbor-2-12-0?\n\nAssistant: To retain image last pull time on scanning in harbor-2-12-0, here's what you do:\nBy default, a vulnerability scanner(e.g. Trivy) will update the image’s last `pull time` when the image is scanned. This affects the **Tag Retention Rules** based on pull time. If you want to eliminate this effect, you can enable this option to avoid updating the pull time on scanning..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/general-settings", "title": "Configure Global Settings", "description": "You can configure Harbor to set the registry in read-only mode, and configure Harbor so that only system administrators can create projects.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 02:54:37", "type": "section_detail", "page_metadata": {"og:locale": "en_US", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/general-settings/", "og:type": ["documentation", "article"], "ogSiteName": "Harbor", "ogLocale": "en_US", "favicon": "https://goharbor.io/favicon.svg", "twitter:creator": "@project_harbor", "title": "\n      \nHarbor docs | Configure Global Settings\n\n    ", "og:url": "https://goharbor.io/docs/2.12.0/administration/general-settings/", "twitter:site": "@project_harbor", "generator": "Hugo 0.74.0", "twitter:card": "summary", "ogTitle": "Harbor &ndash; Configure Global Settings", "og:site_name": "Harbor", "og:image:type": "image/png", "og:title": "Harbor &ndash; Configure Global Settings", "og:image:alt": "Harbor &ndash; Configure Global Settings project logo", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "scrapeId": "d8afb47a-d01f-4798-abec-82a94ea224e0", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/general-settings", "url": "https://goharbor.io/docs/2.12.0/administration/general-settings/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I set a banner message on the harbor ui in harbor-2-12-0?\n\nAssistant: To set a banner message on the harbor ui in harbor-2-12-0, here's what you do:\nSet a custom banner message that will be displayed on the top of the Harbor UI， then every user including anonymous users can see the banner message.\n\n- **Message Content**: Enter your message content in the text area. This filed is required.\n- **Message Type**: Select a message type, each message type has its corresponding style.\n- **Closable**: Decide whether the banner message can be closed temporarily.\n- **Duration**: Set the display time period of the banner message, which is from 0:00 of the start date to 0:00 of the end date. This filed is required..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/general-settings", "title": "Configure Global Settings", "description": "You can configure Harbor to set the registry in read-only mode, and configure Harbor so that only system administrators can create projects.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 02:54:37", "type": "section_detail", "page_metadata": {"og:locale": "en_US", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/general-settings/", "og:type": ["documentation", "article"], "ogSiteName": "Harbor", "ogLocale": "en_US", "favicon": "https://goharbor.io/favicon.svg", "twitter:creator": "@project_harbor", "title": "\n      \nHarbor docs | Configure Global Settings\n\n    ", "og:url": "https://goharbor.io/docs/2.12.0/administration/general-settings/", "twitter:site": "@project_harbor", "generator": "Hugo 0.74.0", "twitter:card": "summary", "ogTitle": "Harbor &ndash; Configure Global Settings", "og:site_name": "Harbor", "og:image:type": "image/png", "og:title": "Harbor &ndash; Configure Global Settings", "og:image:alt": "Harbor &ndash; Configure Global Settings project logo", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "scrapeId": "d8afb47a-d01f-4798-abec-82a94ea224e0", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/general-settings", "url": "https://goharbor.io/docs/2.12.0/administration/general-settings/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you give me some code examples for Configure Global Settings in harbor-2-12-0?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Docker Push in Read-Only Mode**:\n\n```yaml\n```sh\ndocker push 10.117.169.182/demo/ubuntu:14.04\nThe push refers to a repository [10.117.169.182/demo/ubuntu]\n0271b8eebde3: Preparing\ndenied: The system is in read only mode. Any modification is prohibited.\n```\n```\n\nThis snippet shows you how to docker push in read-only mode, which is an important aspect of configure global settings.\n\n", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/general-settings", "title": "Configure Global Settings", "description": "You can configure Harbor to set the registry in read-only mode, and configure Harbor so that only system administrators can create projects.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 02:54:37", "type": "code_examples", "page_metadata": {"og:locale": "en_US", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/general-settings/", "og:type": ["documentation", "article"], "ogSiteName": "Harbor", "ogLocale": "en_US", "favicon": "https://goharbor.io/favicon.svg", "twitter:creator": "@project_harbor", "title": "\n      \nHarbor docs | Configure Global Settings\n\n    ", "og:url": "https://goharbor.io/docs/2.12.0/administration/general-settings/", "twitter:site": "@project_harbor", "generator": "Hugo 0.74.0", "twitter:card": "summary", "ogTitle": "Harbor &ndash; Configure Global Settings", "og:site_name": "Harbor", "og:image:type": "image/png", "og:title": "Harbor &ndash; Configure Global Settings", "og:image:alt": "Harbor &ndash; Configure Global Settings project logo", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "scrapeId": "d8afb47a-d01f-4798-abec-82a94ea224e0", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/general-settings", "url": "https://goharbor.io/docs/2.12.0/administration/general-settings/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: What are some tips for using Configure Global Settings in harbor-2-12-0 effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nEnsure to set the registry to read-only mode to prevent unauthorized modifications.\n\nUse the Project Creation settings to control who can create projects effectively.\n\nConsider enabling the option to retain image last pull time on scanning to maintain accurate tag retention rules.\n\nCustomize the banner message to communicate important information to all users.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/general-settings", "title": "Configure Global Settings", "description": "You can configure Harbor to set the registry in read-only mode, and configure Harbor so that only system administrators can create projects.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 02:54:37", "type": "best_practices", "page_metadata": {"og:locale": "en_US", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/general-settings/", "og:type": ["documentation", "article"], "ogSiteName": "Harbor", "ogLocale": "en_US", "favicon": "https://goharbor.io/favicon.svg", "twitter:creator": "@project_harbor", "title": "\n      \nHarbor docs | Configure Global Settings\n\n    ", "og:url": "https://goharbor.io/docs/2.12.0/administration/general-settings/", "twitter:site": "@project_harbor", "generator": "Hugo 0.74.0", "twitter:card": "summary", "ogTitle": "Harbor &ndash; Configure Global Settings", "og:site_name": "Harbor", "og:image:type": "image/png", "og:title": "Harbor &ndash; Configure Global Settings", "og:image:alt": "Harbor &ndash; Configure Global Settings project logo", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "scrapeId": "d8afb47a-d01f-4798-abec-82a94ea224e0", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/general-settings", "url": "https://goharbor.io/docs/2.12.0/administration/general-settings/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you explain what Configure LDAP/Active Directory Authentication is in harbor-2-12-0?\n\nAssistant: Sure, I'd be happy to explain Configure LDAP/Active Directory Authentication in harbor-2-12-0.\n\n# Configure LDAP/Active Directory Authentication\n\nThis page covers the configuration of LDAP/Active Directory authentication for Harbor, allowing users to log in using credentials stored in an external LDAP or AD server.Here's a quick rundown of what this is about:\n\n## Overview\n\nIf you select LDAP/AD authentication, users whose credentials are stored in an external LDAP or AD server can log in to Harbor directly. In this case, you do not create user accounts in Harbor.\n\nYou can change the authentication mode from database to LDAP only if no local users have been added to the database. If there is at least one user other than `admin` in the Harbor database, you cannot change the authentication mode.\n\nBecause the users are managed by LDAP or AD, self-registration, creating users, deleting users, changing passwords, and resetting passwords are not supported in LDAP/AD authentication mode.\n\nIf you want to manage user authentication by using LDAP groups, you must enable the `memberof` feature on the LDAP/AD server. With the `memberof` feature, the LDAP/AD user entity’s `memberof` attribute is updated when the group entity’s `member` attribute is updated, for example by adding or removing an LDAP/AD user from the LDAP/AD group. This feature is enabled by default in Active Directory. For information about how to enable and verify `memberof` overlay in OpenLDAP, see [this technical note](https://technicalnotes.wordpress.com/2014/04/19/openldap-setup-with-memberof-overlay).\n\n## Configuration Steps\n\n1. Log in to the Harbor interface with an account that has Harbor system administrator privileges.\n\n2. Under **Administration**, go to **Configuration** and select the **Authentication** tab.\n\n3. Use the **Auth Mode** drop-down menu to select **LDAP**.\n\n4. Enter the address of your LDAP server, for example `ldaps://10.162.16.194`.\n\n5. Enter information about your LDAP server.\n   - **LDAP Search DN** and **LDAP Search Password**: When a user logs in to Harbor with their LDAP username and password, Harbor uses these values to bind to the LDAP/AD server. For example, `cn=admin,dc=example.com`.\n   - **LDAP Base DN**: Harbor looks up the user under the LDAP Base DN entry, including the subtree. For example, `dc=example.com`.\n   - **LDAP Filter**: The filter to search for LDAP/AD users. For example, `objectclass=user`.\n   - **LDAP UID**: An attribute, for example `uid`, or `cn`, that is used to match a user with the username. If a match is found, the user’s password is verified by a bind request to the LDAP/AD server.\n   - **LDAP Scope**: The scope to search for LDAP/AD users. Select from **Subtree**, **Base**, and **OneLevel**.\n\n6. If you want to manage user authentication with LDAP groups, configure the group settings.\n   - **LDAP Group Base DN**: The base DN from which to lookup a group in LDAP/AD. For example, `ou=groups,dc=example,dc=com`. This field cannot be empty when LDAP group feature is enabled.\n   - **LDAP Group Filter**: The filter to search for LDAP/AD groups. for OpenLDAP: `objectclass=groupOfNames`. for Active Directory: `objectclass=group`. This field cannot be empty when LDAP group feature is enabled.\n   - **LDAP Group GID**: The attribute used to name an LDAP/AD group. For example, `cn`. This field cannot be empty when LDAP group feature is enabled.\n   - **LDAP Group Admin DN**: All LDAP/AD users in this group DN have Harbor system administrator privileges.\n   - **LDAP Group Membership**: The user attribute used to identify a user as a member of a group. By default this is `memberof`.\n   - **LDAP Scope**: The scope to search for LDAP/AD groups. Select from **Subtree**, **Base**, and **OneLevel**.\n   - **LDAP Group Attached in Parallel**: Enable this option to attach group in parallel to avoid timeout in user login when there are too many groups associated with the LDAP user.\n\n7. Uncheck **LDAP Verify Cert** if the LDAP/AD server uses a self-signed or untrusted certificate.\n\n8. Click **Test LDAP Server** to make sure that your configuration is correct.\n\n9. Click **Save** to complete the configuration.\n\n## Images\n\n![LDAP authentication](https://goharbor.io/docs/2.12.0/img/select-ldap-auth.png)\n![Basic LDAP configuration](https://goharbor.io/docs/2.12.0/img/ldap-auth.png)\n![LDAP group configuration](https://goharbor.io/docs/2.12.0/img/ldap-groups.png)\n![LDAP group attached in Parallel](https://goharbor.io/docs/2.12.0/img/ldap-group-parallel.png)\n![LDAP certificate verification](https://goharbor.io/docs/2.12.0/img/ldap-cert-test.png)\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/configure-authentication/ldap-auth", "title": "Configure LDAP/Active Directory Authentication", "description": "This page covers the configuration of LDAP/Active Directory authentication for Harbor, allowing users to log in using credentials stored in an external LDAP or AD server.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 02:54:55", "type": "overview", "page_metadata": {"ogTitle": "Harbor &ndash; Configure LDAP/Active Directory Authentication", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:site_name": "Harbor", "twitter:creator": "@project_harbor", "og:type": ["documentation", "article"], "title": "\n      \nHarbor docs | Configure LDAP/Active Directory Authentication\n\n    ", "generator": "Hugo 0.74.0", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/configure-authentication/ldap-auth/", "twitter:site": "@project_harbor", "og:title": "Harbor &ndash; Configure LDAP/Active Directory Authentication", "favicon": "https://goharbor.io/favicon.svg", "ogSiteName": "Harbor", "og:locale": "en_US", "og:image:type": "image/png", "twitter:card": "summary", "og:url": "https://goharbor.io/docs/2.12.0/administration/configure-authentication/ldap-auth/", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:image:alt": "Harbor &ndash; Configure LDAP/Active Directory Authentication project logo", "ogLocale": "en_US", "scrapeId": "c4c65458-cb0d-45fc-8596-651950a7f73c", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/configure-authentication/ldap-auth", "url": "https://goharbor.io/docs/2.12.0/administration/configure-authentication/ldap-auth/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I overview in harbor-2-12-0?\n\nAssistant: To overview in harbor-2-12-0, here's what you do:\nIf you select LDAP/AD authentication, users whose credentials are stored in an external LDAP or AD server can log in to Harbor directly. In this case, you do not create user accounts in Harbor.\n\nYou can change the authentication mode from database to LDAP only if no local users have been added to the database. If there is at least one user other than `admin` in the Harbor database, you cannot change the authentication mode.\n\nBecause the users are managed by LDAP or AD, self-registration, creating users, deleting users, changing passwords, and resetting passwords are not supported in LDAP/AD authentication mode.\n\nIf you want to manage user authentication by using LDAP groups, you must enable the `memberof` feature on the LDAP/AD server. With the `memberof` feature, the LDAP/AD user entity’s `memberof` attribute is updated when the group entity’s `member` attribute is updated, for example by adding or removing an LDAP/AD user from the LDAP/AD group. This feature is enabled by default in Active Directory. For information about how to enable and verify `memberof` overlay in OpenLDAP, see [this technical note](https://technicalnotes.wordpress.com/2014/04/19/openldap-setup-with-memberof-overlay)..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/configure-authentication/ldap-auth", "title": "Configure LDAP/Active Directory Authentication", "description": "This page covers the configuration of LDAP/Active Directory authentication for Harbor, allowing users to log in using credentials stored in an external LDAP or AD server.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 02:54:55", "type": "section_detail", "page_metadata": {"ogTitle": "Harbor &ndash; Configure LDAP/Active Directory Authentication", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:site_name": "Harbor", "twitter:creator": "@project_harbor", "og:type": ["documentation", "article"], "title": "\n      \nHarbor docs | Configure LDAP/Active Directory Authentication\n\n    ", "generator": "Hugo 0.74.0", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/configure-authentication/ldap-auth/", "twitter:site": "@project_harbor", "og:title": "Harbor &ndash; Configure LDAP/Active Directory Authentication", "favicon": "https://goharbor.io/favicon.svg", "ogSiteName": "Harbor", "og:locale": "en_US", "og:image:type": "image/png", "twitter:card": "summary", "og:url": "https://goharbor.io/docs/2.12.0/administration/configure-authentication/ldap-auth/", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:image:alt": "Harbor &ndash; Configure LDAP/Active Directory Authentication project logo", "ogLocale": "en_US", "scrapeId": "c4c65458-cb0d-45fc-8596-651950a7f73c", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/configure-authentication/ldap-auth", "url": "https://goharbor.io/docs/2.12.0/administration/configure-authentication/ldap-auth/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I configuration steps in harbor-2-12-0?\n\nAssistant: To configuration steps in harbor-2-12-0, here's what you do:\n1. Log in to the Harbor interface with an account that has Harbor system administrator privileges.\n\n2. Under **Administration**, go to **Configuration** and select the **Authentication** tab.\n\n3. Use the **Auth Mode** drop-down menu to select **LDAP**.\n\n4. Enter the address of your LDAP server, for example `ldaps://10.162.16.194`.\n\n5. Enter information about your LDAP server.\n   - **LDAP Search DN** and **LDAP Search Password**: When a user logs in to Harbor with their LDAP username and password, Harbor uses these values to bind to the LDAP/AD server. For example, `cn=admin,dc=example.com`.\n   - **LDAP Base DN**: Harbor looks up the user under the LDAP Base DN entry, including the subtree. For example, `dc=example.com`.\n   - **LDAP Filter**: The filter to search for LDAP/AD users. For example, `objectclass=user`.\n   - **LDAP UID**: An attribute, for example `uid`, or `cn`, that is used to match a user with the username. If a match is found, the user’s password is verified by a bind request to the LDAP/AD server.\n   - **LDAP Scope**: The scope to search for LDAP/AD users. Select from **Subtree**, **Base**, and **OneLevel**.\n\n6. If you want to manage user authentication with LDAP groups, configure the group settings.\n   - **LDAP Group Base DN**: The base DN from which to lookup a group in LDAP/AD. For example, `ou=groups,dc=example,dc=com`. This field cannot be empty when LDAP group feature is enabled.\n   - **LDAP Group Filter**: The filter to search for LDAP/AD groups. for OpenLDAP: `objectclass=groupOfNames`. for Active Directory: `objectclass=group`. This field cannot be empty when LDAP group feature is enabled.\n   - **LDAP Group GID**: The attribute used to name an LDAP/AD group. For example, `cn`. This field cannot be empty when LDAP group feature is enabled.\n   - **LDAP Group Admin DN**: All LDAP/AD users in this group DN have Harbor system administrator privileges.\n   - **LDAP Group Membership**: The user attribute used to identify a user as a member of a group. By default this is `memberof`.\n   - **LDAP Scope**: The scope to search for LDAP/AD groups. Select from **Subtree**, **Base**, and **OneLevel**.\n   - **LDAP Group Attached in Parallel**: Enable this option to attach group in parallel to avoid timeout in user login when there are too many groups associated with the LDAP user.\n\n7. Uncheck **LDAP Verify Cert** if the LDAP/AD server uses a self-signed or untrusted certificate.\n\n8. Click **Test LDAP Server** to make sure that your configuration is correct.\n\n9. Click **Save** to complete the configuration..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/configure-authentication/ldap-auth", "title": "Configure LDAP/Active Directory Authentication", "description": "This page covers the configuration of LDAP/Active Directory authentication for Harbor, allowing users to log in using credentials stored in an external LDAP or AD server.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 02:54:55", "type": "section_detail", "page_metadata": {"ogTitle": "Harbor &ndash; Configure LDAP/Active Directory Authentication", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:site_name": "Harbor", "twitter:creator": "@project_harbor", "og:type": ["documentation", "article"], "title": "\n      \nHarbor docs | Configure LDAP/Active Directory Authentication\n\n    ", "generator": "Hugo 0.74.0", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/configure-authentication/ldap-auth/", "twitter:site": "@project_harbor", "og:title": "Harbor &ndash; Configure LDAP/Active Directory Authentication", "favicon": "https://goharbor.io/favicon.svg", "ogSiteName": "Harbor", "og:locale": "en_US", "og:image:type": "image/png", "twitter:card": "summary", "og:url": "https://goharbor.io/docs/2.12.0/administration/configure-authentication/ldap-auth/", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:image:alt": "Harbor &ndash; Configure LDAP/Active Directory Authentication project logo", "ogLocale": "en_US", "scrapeId": "c4c65458-cb0d-45fc-8596-651950a7f73c", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/configure-authentication/ldap-auth", "url": "https://goharbor.io/docs/2.12.0/administration/configure-authentication/ldap-auth/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I images in harbor-2-12-0?\n\nAssistant: To images in harbor-2-12-0, here's what you do:\n![LDAP authentication](https://goharbor.io/docs/2.12.0/img/select-ldap-auth.png)\n![Basic LDAP configuration](https://goharbor.io/docs/2.12.0/img/ldap-auth.png)\n![LDAP group configuration](https://goharbor.io/docs/2.12.0/img/ldap-groups.png)\n![LDAP group attached in Parallel](https://goharbor.io/docs/2.12.0/img/ldap-group-parallel.png)\n![LDAP certificate verification](https://goharbor.io/docs/2.12.0/img/ldap-cert-test.png).\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/configure-authentication/ldap-auth", "title": "Configure LDAP/Active Directory Authentication", "description": "This page covers the configuration of LDAP/Active Directory authentication for Harbor, allowing users to log in using credentials stored in an external LDAP or AD server.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 02:54:55", "type": "section_detail", "page_metadata": {"ogTitle": "Harbor &ndash; Configure LDAP/Active Directory Authentication", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:site_name": "Harbor", "twitter:creator": "@project_harbor", "og:type": ["documentation", "article"], "title": "\n      \nHarbor docs | Configure LDAP/Active Directory Authentication\n\n    ", "generator": "Hugo 0.74.0", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/configure-authentication/ldap-auth/", "twitter:site": "@project_harbor", "og:title": "Harbor &ndash; Configure LDAP/Active Directory Authentication", "favicon": "https://goharbor.io/favicon.svg", "ogSiteName": "Harbor", "og:locale": "en_US", "og:image:type": "image/png", "twitter:card": "summary", "og:url": "https://goharbor.io/docs/2.12.0/administration/configure-authentication/ldap-auth/", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:image:alt": "Harbor &ndash; Configure LDAP/Active Directory Authentication project logo", "ogLocale": "en_US", "scrapeId": "c4c65458-cb0d-45fc-8596-651950a7f73c", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/configure-authentication/ldap-auth", "url": "https://goharbor.io/docs/2.12.0/administration/configure-authentication/ldap-auth/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: What are some tips for using Configure LDAP/Active Directory Authentication in harbor-2-12-0 effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nEnsure that the `memberof` feature is enabled on the LDAP/AD server for group management.\n\nUncheck **LDAP Verify Cert** if using a self-signed or untrusted certificate.\n\nTest the LDAP server configuration before saving.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/configure-authentication/ldap-auth", "title": "Configure LDAP/Active Directory Authentication", "description": "This page covers the configuration of LDAP/Active Directory authentication for Harbor, allowing users to log in using credentials stored in an external LDAP or AD server.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 02:54:55", "type": "best_practices", "page_metadata": {"ogTitle": "Harbor &ndash; Configure LDAP/Active Directory Authentication", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:site_name": "Harbor", "twitter:creator": "@project_harbor", "og:type": ["documentation", "article"], "title": "\n      \nHarbor docs | Configure LDAP/Active Directory Authentication\n\n    ", "generator": "Hugo 0.74.0", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/configure-authentication/ldap-auth/", "twitter:site": "@project_harbor", "og:title": "Harbor &ndash; Configure LDAP/Active Directory Authentication", "favicon": "https://goharbor.io/favicon.svg", "ogSiteName": "Harbor", "og:locale": "en_US", "og:image:type": "image/png", "twitter:card": "summary", "og:url": "https://goharbor.io/docs/2.12.0/administration/configure-authentication/ldap-auth/", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:image:alt": "Harbor &ndash; Configure LDAP/Active Directory Authentication project logo", "ogLocale": "en_US", "scrapeId": "c4c65458-cb0d-45fc-8596-651950a7f73c", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/configure-authentication/ldap-auth", "url": "https://goharbor.io/docs/2.12.0/administration/configure-authentication/ldap-auth/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you explain what Create Projects is in harbor-2-12-0?\n\nAssistant: Sure, I'd be happy to explain Create Projects in harbor-2-12-0.\n\n# Create Projects\n\nA project in Harbor contains all repositories of an application. Images cannot be pushed to Harbor before a project is created. Role-Based Access Control (RBAC) is applied to projects, so that only users with the appropriate roles can perform certain operations.Here's a quick rundown of what this is about:\n\n## Types of Projects\n\nThere are two types of project in Harbor:\n\n- **Public**: Any user can pull images from this project. This is a convenient way for you to share repositories with others.\n- **Private**: Only users who are members of the project can pull images.\n\n## Creating a Project\n\nYou create different projects to which you assign users so that they can push and pull image repositories. You also configure project-specific settings. When you first deploy Harbor, a default public project named `library` is created.\n\n## Prerequisites\n\nLog in to Harbor with a Harbor administrator or project administrator account.\n\n## Procedure\n\n1. Go to **Projects** and click **New Project**.\n\n2. Provide a name for the project.\n\n3. (Optional) Check the **Public** check box to make the project public.\n\nIf you set the project to **Public**, any user can pull images from this project. If you leave the project set to **Private**, only users who are members of the project can pull images. You can toggle projects from public to private, or the reverse, at any moment after you create the project.\n\n4. Click **OK**.\n\nAfter the project is created, you can browse summary, repositories, helm charts, members, labels, scanner, p2p preheat, policy, robot accounts, logs and configuration using the navigation tab.\n\n## Project Properties\n\nProject properties can be changed by clicking “Configuration”.\n\n- To make all repositories under the project accessible to everyone, select the `Public` checkbox.\n\n- To prevent un-signed images under the project from being pulled, select the `Prevent vulnerable images from running` checkbox. For more information about content trust, see [Implementing Content Trust](https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/implementing-content-trust/).\n\n## Searching Projects, Repositories and Helm charts\n\nEntering a keyword in the search field at the top lists all matching projects, repositories and helm charts. The search result includes both public and private repositories you have access to.\n\n## What to Do Next\n\n[Assign Users to a Project](https://goharbor.io/docs/2.12.0/working-with-projects/create-projects/add-users/)\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/create-projects", "title": "Create Projects", "description": "A project in Harbor contains all repositories of an application. Images cannot be pushed to Harbor before a project is created. Role-Based Access Control (RBAC) is applied to projects, so that only users with the appropriate roles can perform certain operations.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 02:55:05", "type": "overview", "page_metadata": {"title": "\n      \nHarbor docs | Create Projects\n\n    ", "ogTitle": "Harbor &ndash; Create Projects", "twitter:creator": "@project_harbor", "og:locale": "en_US", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "favicon": "https://goharbor.io/favicon.svg", "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/create-projects/", "og:site_name": "Harbor", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:type": ["documentation", "article"], "og:image:alt": "Harbor &ndash; Create Projects project logo", "og:image:type": "image/png", "twitter:site": "@project_harbor", "ogSiteName": "Harbor", "generator": "Hugo 0.74.0", "og:title": "Harbor &ndash; Create Projects", "twitter:card": "summary", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/create-projects/", "ogLocale": "en_US", "scrapeId": "d7e5d6dd-7de1-4798-845e-64d49d4d9d83", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/create-projects", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/create-projects/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I types of projects in harbor-2-12-0?\n\nAssistant: To types of projects in harbor-2-12-0, here's what you do:\nThere are two types of project in Harbor:\n\n- **Public**: Any user can pull images from this project. This is a convenient way for you to share repositories with others.\n- **Private**: Only users who are members of the project can pull images..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/create-projects", "title": "Create Projects", "description": "A project in Harbor contains all repositories of an application. Images cannot be pushed to Harbor before a project is created. Role-Based Access Control (RBAC) is applied to projects, so that only users with the appropriate roles can perform certain operations.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 02:55:05", "type": "section_detail", "page_metadata": {"title": "\n      \nHarbor docs | Create Projects\n\n    ", "ogTitle": "Harbor &ndash; Create Projects", "twitter:creator": "@project_harbor", "og:locale": "en_US", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "favicon": "https://goharbor.io/favicon.svg", "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/create-projects/", "og:site_name": "Harbor", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:type": ["documentation", "article"], "og:image:alt": "Harbor &ndash; Create Projects project logo", "og:image:type": "image/png", "twitter:site": "@project_harbor", "ogSiteName": "Harbor", "generator": "Hugo 0.74.0", "og:title": "Harbor &ndash; Create Projects", "twitter:card": "summary", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/create-projects/", "ogLocale": "en_US", "scrapeId": "d7e5d6dd-7de1-4798-845e-64d49d4d9d83", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/create-projects", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/create-projects/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I creating a project in harbor-2-12-0?\n\nAssistant: To creating a project in harbor-2-12-0, here's what you do:\nYou create different projects to which you assign users so that they can push and pull image repositories. You also configure project-specific settings. When you first deploy Harbor, a default public project named `library` is created..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/create-projects", "title": "Create Projects", "description": "A project in Harbor contains all repositories of an application. Images cannot be pushed to Harbor before a project is created. Role-Based Access Control (RBAC) is applied to projects, so that only users with the appropriate roles can perform certain operations.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 02:55:05", "type": "section_detail", "page_metadata": {"title": "\n      \nHarbor docs | Create Projects\n\n    ", "ogTitle": "Harbor &ndash; Create Projects", "twitter:creator": "@project_harbor", "og:locale": "en_US", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "favicon": "https://goharbor.io/favicon.svg", "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/create-projects/", "og:site_name": "Harbor", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:type": ["documentation", "article"], "og:image:alt": "Harbor &ndash; Create Projects project logo", "og:image:type": "image/png", "twitter:site": "@project_harbor", "ogSiteName": "Harbor", "generator": "Hugo 0.74.0", "og:title": "Harbor &ndash; Create Projects", "twitter:card": "summary", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/create-projects/", "ogLocale": "en_US", "scrapeId": "d7e5d6dd-7de1-4798-845e-64d49d4d9d83", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/create-projects", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/create-projects/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I prerequisites in harbor-2-12-0?\n\nAssistant: To prerequisites in harbor-2-12-0, here's what you do:\nLog in to Harbor with a Harbor administrator or project administrator account..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/create-projects", "title": "Create Projects", "description": "A project in Harbor contains all repositories of an application. Images cannot be pushed to Harbor before a project is created. Role-Based Access Control (RBAC) is applied to projects, so that only users with the appropriate roles can perform certain operations.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 02:55:05", "type": "section_detail", "page_metadata": {"title": "\n      \nHarbor docs | Create Projects\n\n    ", "ogTitle": "Harbor &ndash; Create Projects", "twitter:creator": "@project_harbor", "og:locale": "en_US", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "favicon": "https://goharbor.io/favicon.svg", "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/create-projects/", "og:site_name": "Harbor", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:type": ["documentation", "article"], "og:image:alt": "Harbor &ndash; Create Projects project logo", "og:image:type": "image/png", "twitter:site": "@project_harbor", "ogSiteName": "Harbor", "generator": "Hugo 0.74.0", "og:title": "Harbor &ndash; Create Projects", "twitter:card": "summary", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/create-projects/", "ogLocale": "en_US", "scrapeId": "d7e5d6dd-7de1-4798-845e-64d49d4d9d83", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/create-projects", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/create-projects/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I procedure in harbor-2-12-0?\n\nAssistant: To procedure in harbor-2-12-0, here's what you do:\n1. Go to **Projects** and click **New Project**.\n\n2. Provide a name for the project.\n\n3. (Optional) Check the **Public** check box to make the project public.\n\nIf you set the project to **Public**, any user can pull images from this project. If you leave the project set to **Private**, only users who are members of the project can pull images. You can toggle projects from public to private, or the reverse, at any moment after you create the project.\n\n4. Click **OK**.\n\nAfter the project is created, you can browse summary, repositories, helm charts, members, labels, scanner, p2p preheat, policy, robot accounts, logs and configuration using the navigation tab..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/create-projects", "title": "Create Projects", "description": "A project in Harbor contains all repositories of an application. Images cannot be pushed to Harbor before a project is created. Role-Based Access Control (RBAC) is applied to projects, so that only users with the appropriate roles can perform certain operations.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 02:55:05", "type": "section_detail", "page_metadata": {"title": "\n      \nHarbor docs | Create Projects\n\n    ", "ogTitle": "Harbor &ndash; Create Projects", "twitter:creator": "@project_harbor", "og:locale": "en_US", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "favicon": "https://goharbor.io/favicon.svg", "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/create-projects/", "og:site_name": "Harbor", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:type": ["documentation", "article"], "og:image:alt": "Harbor &ndash; Create Projects project logo", "og:image:type": "image/png", "twitter:site": "@project_harbor", "ogSiteName": "Harbor", "generator": "Hugo 0.74.0", "og:title": "Harbor &ndash; Create Projects", "twitter:card": "summary", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/create-projects/", "ogLocale": "en_US", "scrapeId": "d7e5d6dd-7de1-4798-845e-64d49d4d9d83", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/create-projects", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/create-projects/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I project properties in harbor-2-12-0?\n\nAssistant: To project properties in harbor-2-12-0, here's what you do:\nProject properties can be changed by clicking “Configuration”.\n\n- To make all repositories under the project accessible to everyone, select the `Public` checkbox.\n\n- To prevent un-signed images under the project from being pulled, select the `Prevent vulnerable images from running` checkbox. For more information about content trust, see [Implementing Content Trust](https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/implementing-content-trust/)..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/create-projects", "title": "Create Projects", "description": "A project in Harbor contains all repositories of an application. Images cannot be pushed to Harbor before a project is created. Role-Based Access Control (RBAC) is applied to projects, so that only users with the appropriate roles can perform certain operations.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 02:55:05", "type": "section_detail", "page_metadata": {"title": "\n      \nHarbor docs | Create Projects\n\n    ", "ogTitle": "Harbor &ndash; Create Projects", "twitter:creator": "@project_harbor", "og:locale": "en_US", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "favicon": "https://goharbor.io/favicon.svg", "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/create-projects/", "og:site_name": "Harbor", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:type": ["documentation", "article"], "og:image:alt": "Harbor &ndash; Create Projects project logo", "og:image:type": "image/png", "twitter:site": "@project_harbor", "ogSiteName": "Harbor", "generator": "Hugo 0.74.0", "og:title": "Harbor &ndash; Create Projects", "twitter:card": "summary", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/create-projects/", "ogLocale": "en_US", "scrapeId": "d7e5d6dd-7de1-4798-845e-64d49d4d9d83", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/create-projects", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/create-projects/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I searching projects, repositories and helm charts in harbor-2-12-0?\n\nAssistant: To searching projects, repositories and helm charts in harbor-2-12-0, here's what you do:\nEntering a keyword in the search field at the top lists all matching projects, repositories and helm charts. The search result includes both public and private repositories you have access to..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/create-projects", "title": "Create Projects", "description": "A project in Harbor contains all repositories of an application. Images cannot be pushed to Harbor before a project is created. Role-Based Access Control (RBAC) is applied to projects, so that only users with the appropriate roles can perform certain operations.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 02:55:05", "type": "section_detail", "page_metadata": {"title": "\n      \nHarbor docs | Create Projects\n\n    ", "ogTitle": "Harbor &ndash; Create Projects", "twitter:creator": "@project_harbor", "og:locale": "en_US", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "favicon": "https://goharbor.io/favicon.svg", "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/create-projects/", "og:site_name": "Harbor", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:type": ["documentation", "article"], "og:image:alt": "Harbor &ndash; Create Projects project logo", "og:image:type": "image/png", "twitter:site": "@project_harbor", "ogSiteName": "Harbor", "generator": "Hugo 0.74.0", "og:title": "Harbor &ndash; Create Projects", "twitter:card": "summary", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/create-projects/", "ogLocale": "en_US", "scrapeId": "d7e5d6dd-7de1-4798-845e-64d49d4d9d83", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/create-projects", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/create-projects/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I what to do next in harbor-2-12-0?\n\nAssistant: To what to do next in harbor-2-12-0, here's what you do:\n[Assign Users to a Project](https://goharbor.io/docs/2.12.0/working-with-projects/create-projects/add-users/).\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/create-projects", "title": "Create Projects", "description": "A project in Harbor contains all repositories of an application. Images cannot be pushed to Harbor before a project is created. Role-Based Access Control (RBAC) is applied to projects, so that only users with the appropriate roles can perform certain operations.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 02:55:05", "type": "section_detail", "page_metadata": {"title": "\n      \nHarbor docs | Create Projects\n\n    ", "ogTitle": "Harbor &ndash; Create Projects", "twitter:creator": "@project_harbor", "og:locale": "en_US", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "favicon": "https://goharbor.io/favicon.svg", "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/create-projects/", "og:site_name": "Harbor", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:type": ["documentation", "article"], "og:image:alt": "Harbor &ndash; Create Projects project logo", "og:image:type": "image/png", "twitter:site": "@project_harbor", "ogSiteName": "Harbor", "generator": "Hugo 0.74.0", "og:title": "Harbor &ndash; Create Projects", "twitter:card": "summary", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/create-projects/", "ogLocale": "en_US", "scrapeId": "d7e5d6dd-7de1-4798-845e-64d49d4d9d83", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/create-projects", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/create-projects/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you give me some code examples for Create Projects in harbor-2-12-0?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Project Creation Example**:\n\n```yaml\n1. Go to **Projects** and click **New Project**.\n2. Provide a name for the project.\n3. (Optional) Check the **Public** check box to make the project public.\n4. Click **OK**.\n```\n\nThis snippet shows you how to project creation example, which is an important aspect of create projects.\n\n**Project Configuration Example**:\n\n```yaml\n- To make all repositories under the project accessible to everyone, select the `Public` checkbox.\n- To prevent un-signed images under the project from being pulled, select the `Prevent vulnerable images from running` checkbox.\n```\n\nThis snippet shows you how to project configuration example, which is an important aspect of create projects.\n\n", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/create-projects", "title": "Create Projects", "description": "A project in Harbor contains all repositories of an application. Images cannot be pushed to Harbor before a project is created. Role-Based Access Control (RBAC) is applied to projects, so that only users with the appropriate roles can perform certain operations.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 02:55:05", "type": "code_examples", "page_metadata": {"title": "\n      \nHarbor docs | Create Projects\n\n    ", "ogTitle": "Harbor &ndash; Create Projects", "twitter:creator": "@project_harbor", "og:locale": "en_US", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "favicon": "https://goharbor.io/favicon.svg", "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/create-projects/", "og:site_name": "Harbor", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:type": ["documentation", "article"], "og:image:alt": "Harbor &ndash; Create Projects project logo", "og:image:type": "image/png", "twitter:site": "@project_harbor", "ogSiteName": "Harbor", "generator": "Hugo 0.74.0", "og:title": "Harbor &ndash; Create Projects", "twitter:card": "summary", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/create-projects/", "ogLocale": "en_US", "scrapeId": "d7e5d6dd-7de1-4798-845e-64d49d4d9d83", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/create-projects", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/create-projects/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: What are some tips for using Create Projects in harbor-2-12-0 effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nYou can toggle projects from public to private, or the reverse, at any moment after you create the project.\n\nUse the search field to quickly find projects, repositories, and helm charts.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/create-projects", "title": "Create Projects", "description": "A project in Harbor contains all repositories of an application. Images cannot be pushed to Harbor before a project is created. Role-Based Access Control (RBAC) is applied to projects, so that only users with the appropriate roles can perform certain operations.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 02:55:05", "type": "best_practices", "page_metadata": {"title": "\n      \nHarbor docs | Create Projects\n\n    ", "ogTitle": "Harbor &ndash; Create Projects", "twitter:creator": "@project_harbor", "og:locale": "en_US", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "favicon": "https://goharbor.io/favicon.svg", "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/create-projects/", "og:site_name": "Harbor", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:type": ["documentation", "article"], "og:image:alt": "Harbor &ndash; Create Projects project logo", "og:image:type": "image/png", "twitter:site": "@project_harbor", "ogSiteName": "Harbor", "generator": "Hugo 0.74.0", "og:title": "Harbor &ndash; Create Projects", "twitter:card": "summary", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/create-projects/", "ogLocale": "en_US", "scrapeId": "d7e5d6dd-7de1-4798-845e-64d49d4d9d83", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/create-projects", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/create-projects/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you explain what Creating Replication Endpoints is in harbor-2-12-0?\n\nAssistant: Sure, I'd be happy to explain Creating Replication Endpoints in harbor-2-12-0.\n\n# Creating Replication Endpoints\n\nTo replicate image repositories from one instance of Harbor to another Harbor or non-Harbor registry, you first create replication endpoints.Here's a quick rundown of what this is about:\n\n## Creating Replication Endpoints\n\nTo replicate image repositories from one instance of Harbor to another Harbor or non-Harbor registry, you first create replication endpoints.\n\nYou can also use an endpoint in a proxy cache project. Read more about how to [Configure Proxy Cache](https://goharbor.io/docs/2.12.0/administration/configure-proxy-cache/).\n\n1. Go to **Registries** and click the **\\+ New Endpoint** button.\n\n![New replication endpoint](https://goharbor.io/docs/2.12.0/img/replication-endpoint1.png)\n\n2. For **Provider**, use the drop-down menu to select the type of registry to set up as a replication endpoint.\n\nThe endpoint can be another Harbor instance, or a non-Harbor registry. Currently, the following non-Harbor registries are supported:\n\n   - Docker Hub\n   - Docker registry\n   - AWS Elastic Container Registry\n   - Azure Container Registry\n   - Ali Cloud Container Registry\n   - Google Container Registry (and Google Cloud Artifact Registry)\n   - Huawei SWR\n   - Gitlab\n   - Quay\n   - Jfrog Artifactory\n\nIf you plan to use this endpoint in a proxy cache project, note that they only support Harbor, Docker Hub, AWS Elastic Container Registry, Azure Container Registry, Google Container Registry/Google Cloud Artifact Registry, and Quay registries. Read more about how to [Configure Proxy Cache](https://goharbor.io/docs/2.12.0/administration/configure-proxy-cache/).\n\n![Replication providers](https://goharbor.io/docs/2.12.0/img/replication-endpoint2.png)\n\n3. Enter a suitable name and description for the new replication endpoint.\n\n4. Enter the full URL of the registry to set up as a replication endpoint.\n\nFor example, to replicate to another Harbor instance, enter https://harbor_instance_address:443. The registry must exist and be running before you create the endpoint.\n\n5. Enter the Access ID and Access Secret for the endpoint registry instance.\n\nUse an account that has the appropriate privileges on that registry, or an account that has write permission on the corresponding project in a Harbor registry. See more information about [Access ID and Secret Configuration](https://goharbor.io/docs/2.12.0/administration/configuring-replication/create-replication-endpoints/#access-id-and-secret-configuration).\n\nIf you plan to use this endpoint with a proxy cache project, the access accounts you provide here enables the proxy cache project to pull every image from the target registry that the access account has permission to pull.\n\n6. Optionally, select the **Verify Remote Cert** check box.\n\nDeselect the check box if the remote registry uses a self-signed or untrusted certificate.\n\n7. Click **Test Connection**.\n\n8. When you have successfully tested the connection, click **OK**.\n\n## Access ID and Secret Configuration\n\n- AWS ECR adapters should use access keys, not a username and password. The access key should have sufficient permissions, such as storage permission.\n\n- Google GCR adapters should use the entire JSON key generated in the service account. The namespace should start with the project ID.\n\n- Quay Registry\n\n  - Supported scope\n    - [Quay.io](https://quay.io/) (cloud version) does not allow to create namespaces (organizations) automatically, due to Recaptcha enabled on the Quay.io side.\n    - [RedHat Quay](https://www.openshift.com/products/quay) (enterprise on-premises version) is fully supported (tested on v3.2.0)\n    - [Project Quay](https://github.com/quay/quay) (open sourced version) is also supported theoretically, but has not been tested yet.\n  - Authorization\n    - If you are connecting to a registry without authorization, keep Access ID and Access Secret empty.\n    - If you are connecting to a registry with authorization, you don’t need to input an Access ID. Harbor uses json_file as the default Access ID. Input your Access Secret in json format, example:\n\n```fallback\n{\n\"oauth2_token\": \"YmQZ1QZENVmOD6v9kENzmfptNVhgBuy5oVl85eGV\", // optional\n\"account_name\": \"jack\",\n\"docker_cli_password\": \"q6NVazikNqIf4coiQ+JvV4iqiCpkNjE0DLX8ZMQuFRbkHk5iMv6/hd4WdV3W3nyX\"\n}\n```\n\n    - `oauth2_token` is required only if you want to create an organization automatically.\n    - `account_name` is your login name. Its not recommended to use a robot account because a robot account can not access different organization’s repositories.\n    - `docker_cli_password` is your cli password. You can generate this on the Quay ui page.\n\nHarbor does not support Docker registry manifest schema1 in Quay registries.\n\n## Managing Registries\n\nYou can list, add, edit and delete registries under **Administration** -\\> **Registries**. Only registries which are not referenced by any rules can be deleted.\n\n![browse project](https://goharbor.io/docs/2.12.0/img/manage-registry.png)\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/configuring-replication/create-replication-endpoints", "title": "Creating Replication Endpoints", "description": "To replicate image repositories from one instance of Harbor to another Harbor or non-Harbor registry, you first create replication endpoints.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 02:55:24", "type": "overview", "page_metadata": {"generator": "Hugo 0.74.0", "title": "\n      \nHarbor docs | Creating Replication Endpoints\n\n    ", "twitter:card": "summary", "favicon": "https://goharbor.io/favicon.svg", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:title": "Harbor &ndash; Creating Replication Endpoints", "og:site_name": "Harbor", "ogLocale": "en_US", "og:image:type": "image/png", "ogTitle": "Harbor &ndash; Creating Replication Endpoints", "ogSiteName": "Harbor", "og:url": "https://goharbor.io/docs/2.12.0/administration/configuring-replication/create-replication-endpoints/", "og:type": ["documentation", "article"], "og:locale": "en_US", "og:image:alt": "Harbor &ndash; Creating Replication Endpoints project logo", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/configuring-replication/create-replication-endpoints/", "twitter:creator": "@project_harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "twitter:site": "@project_harbor", "scrapeId": "ca57e785-19fd-47bc-ac72-724cb48022c6", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/configuring-replication/create-replication-endpoints", "url": "https://goharbor.io/docs/2.12.0/administration/configuring-replication/create-replication-endpoints/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I creating replication endpoints in harbor-2-12-0?\n\nAssistant: To creating replication endpoints in harbor-2-12-0, here's what you do:\nTo replicate image repositories from one instance of Harbor to another Harbor or non-Harbor registry, you first create replication endpoints.\n\nYou can also use an endpoint in a proxy cache project. Read more about how to [Configure Proxy Cache](https://goharbor.io/docs/2.12.0/administration/configure-proxy-cache/).\n\n1. Go to **Registries** and click the **\\+ New Endpoint** button.\n\n![New replication endpoint](https://goharbor.io/docs/2.12.0/img/replication-endpoint1.png)\n\n2. For **Provider**, use the drop-down menu to select the type of registry to set up as a replication endpoint.\n\nThe endpoint can be another Harbor instance, or a non-Harbor registry. Currently, the following non-Harbor registries are supported:\n\n   - Docker Hub\n   - Docker registry\n   - AWS Elastic Container Registry\n   - Azure Container Registry\n   - Ali Cloud Container Registry\n   - Google Container Registry (and Google Cloud Artifact Registry)\n   - Huawei SWR\n   - Gitlab\n   - Quay\n   - Jfrog Artifactory\n\nIf you plan to use this endpoint in a proxy cache project, note that they only support Harbor, Docker Hub, AWS Elastic Container Registry, Azure Container Registry, Google Container Registry/Google Cloud Artifact Registry, and Quay registries. Read more about how to [Configure Proxy Cache](https://goharbor.io/docs/2.12.0/administration/configure-proxy-cache/).\n\n![Replication providers](https://goharbor.io/docs/2.12.0/img/replication-endpoint2.png)\n\n3. Enter a suitable name and description for the new replication endpoint.\n\n4. Enter the full URL of the registry to set up as a replication endpoint.\n\nFor example, to replicate to another Harbor instance, enter https://harbor_instance_address:443. The registry must exist and be running before you create the endpoint.\n\n5. Enter the Access ID and Access Secret for the endpoint registry instance.\n\nUse an account that has the appropriate privileges on that registry, or an account that has write permission on the corresponding project in a Harbor registry. See more information about [Access ID and Secret Configuration](https://goharbor.io/docs/2.12.0/administration/configuring-replication/create-replication-endpoints/#access-id-and-secret-configuration).\n\nIf you plan to use this endpoint with a proxy cache project, the access accounts you provide here enables the proxy cache project to pull every image from the target registry that the access account has permission to pull.\n\n6. Optionally, select the **Verify Remote Cert** check box.\n\nDeselect the check box if the remote registry uses a self-signed or untrusted certificate.\n\n7. Click **Test Connection**.\n\n8. When you have successfully tested the connection, click **OK**..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/configuring-replication/create-replication-endpoints", "title": "Creating Replication Endpoints", "description": "To replicate image repositories from one instance of Harbor to another Harbor or non-Harbor registry, you first create replication endpoints.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 02:55:24", "type": "section_detail", "page_metadata": {"generator": "Hugo 0.74.0", "title": "\n      \nHarbor docs | Creating Replication Endpoints\n\n    ", "twitter:card": "summary", "favicon": "https://goharbor.io/favicon.svg", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:title": "Harbor &ndash; Creating Replication Endpoints", "og:site_name": "Harbor", "ogLocale": "en_US", "og:image:type": "image/png", "ogTitle": "Harbor &ndash; Creating Replication Endpoints", "ogSiteName": "Harbor", "og:url": "https://goharbor.io/docs/2.12.0/administration/configuring-replication/create-replication-endpoints/", "og:type": ["documentation", "article"], "og:locale": "en_US", "og:image:alt": "Harbor &ndash; Creating Replication Endpoints project logo", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/configuring-replication/create-replication-endpoints/", "twitter:creator": "@project_harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "twitter:site": "@project_harbor", "scrapeId": "ca57e785-19fd-47bc-ac72-724cb48022c6", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/configuring-replication/create-replication-endpoints", "url": "https://goharbor.io/docs/2.12.0/administration/configuring-replication/create-replication-endpoints/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I access id and secret configuration in harbor-2-12-0?\n\nAssistant: To access id and secret configuration in harbor-2-12-0, here's what you do:\n- AWS ECR adapters should use access keys, not a username and password. The access key should have sufficient permissions, such as storage permission.\n\n- Google GCR adapters should use the entire JSON key generated in the service account. The namespace should start with the project ID.\n\n- Quay Registry\n\n  - Supported scope\n    - [Quay.io](https://quay.io/) (cloud version) does not allow to create namespaces (organizations) automatically, due to Recaptcha enabled on the Quay.io side.\n    - [RedHat Quay](https://www.openshift.com/products/quay) (enterprise on-premises version) is fully supported (tested on v3.2.0)\n    - [Project Quay](https://github.com/quay/quay) (open sourced version) is also supported theoretically, but has not been tested yet.\n  - Authorization\n    - If you are connecting to a registry without authorization, keep Access ID and Access Secret empty.\n    - If you are connecting to a registry with authorization, you don’t need to input an Access ID. Harbor uses json_file as the default Access ID. Input your Access Secret in json format, example:\n\n```fallback\n{\n\"oauth2_token\": \"YmQZ1QZENVmOD6v9kENzmfptNVhgBuy5oVl85eGV\", // optional\n\"account_name\": \"jack\",\n\"docker_cli_password\": \"q6NVazikNqIf4coiQ+JvV4iqiCpkNjE0DLX8ZMQuFRbkHk5iMv6/hd4WdV3W3nyX\"\n}\n```\n\n    - `oauth2_token` is required only if you want to create an organization automatically.\n    - `account_name` is your login name. Its not recommended to use a robot account because a robot account can not access different organization’s repositories.\n    - `docker_cli_password` is your cli password. You can generate this on the Quay ui page.\n\nHarbor does not support Docker registry manifest schema1 in Quay registries..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/configuring-replication/create-replication-endpoints", "title": "Creating Replication Endpoints", "description": "To replicate image repositories from one instance of Harbor to another Harbor or non-Harbor registry, you first create replication endpoints.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 02:55:24", "type": "section_detail", "page_metadata": {"generator": "Hugo 0.74.0", "title": "\n      \nHarbor docs | Creating Replication Endpoints\n\n    ", "twitter:card": "summary", "favicon": "https://goharbor.io/favicon.svg", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:title": "Harbor &ndash; Creating Replication Endpoints", "og:site_name": "Harbor", "ogLocale": "en_US", "og:image:type": "image/png", "ogTitle": "Harbor &ndash; Creating Replication Endpoints", "ogSiteName": "Harbor", "og:url": "https://goharbor.io/docs/2.12.0/administration/configuring-replication/create-replication-endpoints/", "og:type": ["documentation", "article"], "og:locale": "en_US", "og:image:alt": "Harbor &ndash; Creating Replication Endpoints project logo", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/configuring-replication/create-replication-endpoints/", "twitter:creator": "@project_harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "twitter:site": "@project_harbor", "scrapeId": "ca57e785-19fd-47bc-ac72-724cb48022c6", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/configuring-replication/create-replication-endpoints", "url": "https://goharbor.io/docs/2.12.0/administration/configuring-replication/create-replication-endpoints/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I managing registries in harbor-2-12-0?\n\nAssistant: To managing registries in harbor-2-12-0, here's what you do:\nYou can list, add, edit and delete registries under **Administration** -\\> **Registries**. Only registries which are not referenced by any rules can be deleted.\n\n![browse project](https://goharbor.io/docs/2.12.0/img/manage-registry.png).\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/configuring-replication/create-replication-endpoints", "title": "Creating Replication Endpoints", "description": "To replicate image repositories from one instance of Harbor to another Harbor or non-Harbor registry, you first create replication endpoints.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 02:55:24", "type": "section_detail", "page_metadata": {"generator": "Hugo 0.74.0", "title": "\n      \nHarbor docs | Creating Replication Endpoints\n\n    ", "twitter:card": "summary", "favicon": "https://goharbor.io/favicon.svg", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:title": "Harbor &ndash; Creating Replication Endpoints", "og:site_name": "Harbor", "ogLocale": "en_US", "og:image:type": "image/png", "ogTitle": "Harbor &ndash; Creating Replication Endpoints", "ogSiteName": "Harbor", "og:url": "https://goharbor.io/docs/2.12.0/administration/configuring-replication/create-replication-endpoints/", "og:type": ["documentation", "article"], "og:locale": "en_US", "og:image:alt": "Harbor &ndash; Creating Replication Endpoints project logo", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/configuring-replication/create-replication-endpoints/", "twitter:creator": "@project_harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "twitter:site": "@project_harbor", "scrapeId": "ca57e785-19fd-47bc-ac72-724cb48022c6", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/configuring-replication/create-replication-endpoints", "url": "https://goharbor.io/docs/2.12.0/administration/configuring-replication/create-replication-endpoints/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you give me some code examples for Creating Replication Endpoints in harbor-2-12-0?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Access Secret JSON Example**:\n\n```yaml\n{\n\"oauth2_token\": \"YmQZ1QZENVmOD6v9kENzmfptNVhgBuy5oVl85eGV\", // optional\n\"account_name\": \"jack\",\n\"docker_cli_password\": \"q6NVazikNqIf4coiQ+JvV4iqiCpkNjE0DLX8ZMQuFRbkHk5iMv6/hd4WdV3W3nyX\"\n}\n```\n\nThis snippet shows you how to access secret json example, which is an important aspect of creating replication endpoints.\n\n", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/configuring-replication/create-replication-endpoints", "title": "Creating Replication Endpoints", "description": "To replicate image repositories from one instance of Harbor to another Harbor or non-Harbor registry, you first create replication endpoints.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 02:55:24", "type": "code_examples", "page_metadata": {"generator": "Hugo 0.74.0", "title": "\n      \nHarbor docs | Creating Replication Endpoints\n\n    ", "twitter:card": "summary", "favicon": "https://goharbor.io/favicon.svg", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:title": "Harbor &ndash; Creating Replication Endpoints", "og:site_name": "Harbor", "ogLocale": "en_US", "og:image:type": "image/png", "ogTitle": "Harbor &ndash; Creating Replication Endpoints", "ogSiteName": "Harbor", "og:url": "https://goharbor.io/docs/2.12.0/administration/configuring-replication/create-replication-endpoints/", "og:type": ["documentation", "article"], "og:locale": "en_US", "og:image:alt": "Harbor &ndash; Creating Replication Endpoints project logo", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/configuring-replication/create-replication-endpoints/", "twitter:creator": "@project_harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "twitter:site": "@project_harbor", "scrapeId": "ca57e785-19fd-47bc-ac72-724cb48022c6", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/configuring-replication/create-replication-endpoints", "url": "https://goharbor.io/docs/2.12.0/administration/configuring-replication/create-replication-endpoints/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: What are some tips for using Creating Replication Endpoints in harbor-2-12-0 effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nIf you plan to use this endpoint in a proxy cache project, note that they only support Harbor, Docker Hub, AWS Elastic Container Registry, Azure Container Registry, Google Container Registry/Google Cloud Artifact Registry, and Quay registries.\n\nUse an account that has the appropriate privileges on that registry, or an account that has write permission on the corresponding project in a Harbor registry.\n\nDeselect the check box if the remote registry uses a self-signed or untrusted certificate.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/configuring-replication/create-replication-endpoints", "title": "Creating Replication Endpoints", "description": "To replicate image repositories from one instance of Harbor to another Harbor or non-Harbor registry, you first create replication endpoints.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 02:55:24", "type": "best_practices", "page_metadata": {"generator": "Hugo 0.74.0", "title": "\n      \nHarbor docs | Creating Replication Endpoints\n\n    ", "twitter:card": "summary", "favicon": "https://goharbor.io/favicon.svg", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:title": "Harbor &ndash; Creating Replication Endpoints", "og:site_name": "Harbor", "ogLocale": "en_US", "og:image:type": "image/png", "ogTitle": "Harbor &ndash; Creating Replication Endpoints", "ogSiteName": "Harbor", "og:url": "https://goharbor.io/docs/2.12.0/administration/configuring-replication/create-replication-endpoints/", "og:type": ["documentation", "article"], "og:locale": "en_US", "og:image:alt": "Harbor &ndash; Creating Replication Endpoints project logo", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/configuring-replication/create-replication-endpoints/", "twitter:creator": "@project_harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "twitter:site": "@project_harbor", "scrapeId": "ca57e785-19fd-47bc-ac72-724cb48022c6", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/configuring-replication/create-replication-endpoints", "url": "https://goharbor.io/docs/2.12.0/administration/configuring-replication/create-replication-endpoints/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you explain what Harbor Installation Prerequisites is in harbor-2-12-0?\n\nAssistant: Sure, I'd be happy to explain Harbor Installation Prerequisites in harbor-2-12-0.\n\n# Harbor Installation Prerequisites\n\nThis page outlines the prerequisites for installing Harbor, including hardware, software, and network requirements.Here's a quick rundown of what this is about:\n\n## Hardware\n\nThe following table lists the minimum and recommended hardware configurations for deploying Harbor.\n\n| Resource | Minimum | Recommended |\n| --- | --- | --- |\n| CPU | 2 CPU | 4 CPU |\n| Mem | 4 GB | 8 GB |\n| Disk | 40 GB | 160 GB |\n\n## Software\n\nThe following table lists the software versions that must be installed on the target host.\n\n| Software | Version | Description |\n| --- | --- | --- |\n| Docker Engine | Version 20.10.10-ce+ or higher | For installation instructions, see <br>[Docker Engine documentation](https://docs.docker.com/engine/installation/) |\n| Docker Compose | docker-compose (v1.18.0+) or docker compose v2 (docker-compose-plugin) | For installation instructions, see <br>[Docker Compose documentation](https://docs.docker.com/compose/install/) |\n| OpenSSL | Latest is preferred | Used to generate certificate and keys for Harbor |\n\n## Network ports\n\nHarbor requires that the following ports be open on the target host.\n\n| Port | Protocol | Description |\n| --- | --- | --- |\n| 443 | HTTPS | Harbor portal and core API accept HTTPS requests on this port. You can change this port in the configuration file. |\n| 4443 | HTTPS | Connections to the Docker Content Trust service for Harbor. You can change this port in the configuration file. |\n| 80 | HTTP | Harbor portal and core API accept HTTP requests on this port. You can change this port in the configuration file.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/install-config/installation-prereqs", "title": "Harbor Installation Prerequisites", "description": "This page outlines the prerequisites for installing Harbor, including hardware, software, and network requirements.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 02:55:32", "type": "overview", "page_metadata": {"viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:locale": "en_US", "og:title": "Harbor &ndash; Harbor Installation Prerequisites", "og:image:type": "image/png", "og:url": "https://goharbor.io/docs/2.12.0/install-config/installation-prereqs/", "og:site_name": "Harbor", "favicon": "https://goharbor.io/favicon.svg", "ogLocale": "en_US", "twitter:site": "@project_harbor", "ogSiteName": "Harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "twitter:creator": "@project_harbor", "og:type": ["documentation", "article"], "generator": "Hugo 0.74.0", "title": "\n      \nHarbor docs | Harbor Installation Prerequisites\n\n    ", "og:image:alt": "Harbor &ndash; Harbor Installation Prerequisites project logo", "ogUrl": "https://goharbor.io/docs/2.12.0/install-config/installation-prereqs/", "ogTitle": "Harbor &ndash; Harbor Installation Prerequisites", "twitter:card": "summary", "scrapeId": "e27f8aa8-9c7a-42b8-8ad3-517baf902215", "sourceURL": "https://goharbor.io/docs/2.12.0/install-config/installation-prereqs", "url": "https://goharbor.io/docs/2.12.0/install-config/installation-prereqs/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I hardware in harbor-2-12-0?\n\nAssistant: To hardware in harbor-2-12-0, here's what you do:\nThe following table lists the minimum and recommended hardware configurations for deploying Harbor.\n\n| Resource | Minimum | Recommended |\n| --- | --- | --- |\n| CPU | 2 CPU | 4 CPU |\n| Mem | 4 GB | 8 GB |\n| Disk | 40 GB | 160 GB |.\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/install-config/installation-prereqs", "title": "Harbor Installation Prerequisites", "description": "This page outlines the prerequisites for installing Harbor, including hardware, software, and network requirements.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 02:55:32", "type": "section_detail", "page_metadata": {"viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:locale": "en_US", "og:title": "Harbor &ndash; Harbor Installation Prerequisites", "og:image:type": "image/png", "og:url": "https://goharbor.io/docs/2.12.0/install-config/installation-prereqs/", "og:site_name": "Harbor", "favicon": "https://goharbor.io/favicon.svg", "ogLocale": "en_US", "twitter:site": "@project_harbor", "ogSiteName": "Harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "twitter:creator": "@project_harbor", "og:type": ["documentation", "article"], "generator": "Hugo 0.74.0", "title": "\n      \nHarbor docs | Harbor Installation Prerequisites\n\n    ", "og:image:alt": "Harbor &ndash; Harbor Installation Prerequisites project logo", "ogUrl": "https://goharbor.io/docs/2.12.0/install-config/installation-prereqs/", "ogTitle": "Harbor &ndash; Harbor Installation Prerequisites", "twitter:card": "summary", "scrapeId": "e27f8aa8-9c7a-42b8-8ad3-517baf902215", "sourceURL": "https://goharbor.io/docs/2.12.0/install-config/installation-prereqs", "url": "https://goharbor.io/docs/2.12.0/install-config/installation-prereqs/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I software in harbor-2-12-0?\n\nAssistant: To software in harbor-2-12-0, here's what you do:\nThe following table lists the software versions that must be installed on the target host.\n\n| Software | Version | Description |\n| --- | --- | --- |\n| Docker Engine | Version 20.10.10-ce+ or higher | For installation instructions, see <br>[Docker Engine documentation](https://docs.docker.com/engine/installation/) |\n| Docker Compose | docker-compose (v1.18.0+) or docker compose v2 (docker-compose-plugin) | For installation instructions, see <br>[Docker Compose documentation](https://docs.docker.com/compose/install/) |\n| OpenSSL | Latest is preferred | Used to generate certificate and keys for Harbor |.\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/install-config/installation-prereqs", "title": "Harbor Installation Prerequisites", "description": "This page outlines the prerequisites for installing Harbor, including hardware, software, and network requirements.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 02:55:32", "type": "section_detail", "page_metadata": {"viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:locale": "en_US", "og:title": "Harbor &ndash; Harbor Installation Prerequisites", "og:image:type": "image/png", "og:url": "https://goharbor.io/docs/2.12.0/install-config/installation-prereqs/", "og:site_name": "Harbor", "favicon": "https://goharbor.io/favicon.svg", "ogLocale": "en_US", "twitter:site": "@project_harbor", "ogSiteName": "Harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "twitter:creator": "@project_harbor", "og:type": ["documentation", "article"], "generator": "Hugo 0.74.0", "title": "\n      \nHarbor docs | Harbor Installation Prerequisites\n\n    ", "og:image:alt": "Harbor &ndash; Harbor Installation Prerequisites project logo", "ogUrl": "https://goharbor.io/docs/2.12.0/install-config/installation-prereqs/", "ogTitle": "Harbor &ndash; Harbor Installation Prerequisites", "twitter:card": "summary", "scrapeId": "e27f8aa8-9c7a-42b8-8ad3-517baf902215", "sourceURL": "https://goharbor.io/docs/2.12.0/install-config/installation-prereqs", "url": "https://goharbor.io/docs/2.12.0/install-config/installation-prereqs/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I network ports in harbor-2-12-0?\n\nAssistant: To network ports in harbor-2-12-0, here's what you do:\nHarbor requires that the following ports be open on the target host.\n\n| Port | Protocol | Description |\n| --- | --- | --- |\n| 443 | HTTPS | Harbor portal and core API accept HTTPS requests on this port. You can change this port in the configuration file. |\n| 4443 | HTTPS | Connections to the Docker Content Trust service for Harbor. You can change this port in the configuration file. |\n| 80 | HTTP | Harbor portal and core API accept HTTP requests on this port. You can change this port in the configuration file..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/install-config/installation-prereqs", "title": "Harbor Installation Prerequisites", "description": "This page outlines the prerequisites for installing Harbor, including hardware, software, and network requirements.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 02:55:32", "type": "section_detail", "page_metadata": {"viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:locale": "en_US", "og:title": "Harbor &ndash; Harbor Installation Prerequisites", "og:image:type": "image/png", "og:url": "https://goharbor.io/docs/2.12.0/install-config/installation-prereqs/", "og:site_name": "Harbor", "favicon": "https://goharbor.io/favicon.svg", "ogLocale": "en_US", "twitter:site": "@project_harbor", "ogSiteName": "Harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "twitter:creator": "@project_harbor", "og:type": ["documentation", "article"], "generator": "Hugo 0.74.0", "title": "\n      \nHarbor docs | Harbor Installation Prerequisites\n\n    ", "og:image:alt": "Harbor &ndash; Harbor Installation Prerequisites project logo", "ogUrl": "https://goharbor.io/docs/2.12.0/install-config/installation-prereqs/", "ogTitle": "Harbor &ndash; Harbor Installation Prerequisites", "twitter:card": "summary", "scrapeId": "e27f8aa8-9c7a-42b8-8ad3-517baf902215", "sourceURL": "https://goharbor.io/docs/2.12.0/install-config/installation-prereqs", "url": "https://goharbor.io/docs/2.12.0/install-config/installation-prereqs/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: What are some tips for using Harbor Installation Prerequisites in harbor-2-12-0 effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nEnsure that the target host supports Docker and Docker Compose before installation.\n\nFollow the installation instructions provided in the linked documentation for Docker Engine and Docker Compose.\n\nMake sure to open the required network ports on the target host.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/install-config/installation-prereqs", "title": "Harbor Installation Prerequisites", "description": "This page outlines the prerequisites for installing Harbor, including hardware, software, and network requirements.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 02:55:32", "type": "best_practices", "page_metadata": {"viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:locale": "en_US", "og:title": "Harbor &ndash; Harbor Installation Prerequisites", "og:image:type": "image/png", "og:url": "https://goharbor.io/docs/2.12.0/install-config/installation-prereqs/", "og:site_name": "Harbor", "favicon": "https://goharbor.io/favicon.svg", "ogLocale": "en_US", "twitter:site": "@project_harbor", "ogSiteName": "Harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "twitter:creator": "@project_harbor", "og:type": ["documentation", "article"], "generator": "Hugo 0.74.0", "title": "\n      \nHarbor docs | Harbor Installation Prerequisites\n\n    ", "og:image:alt": "Harbor &ndash; Harbor Installation Prerequisites project logo", "ogUrl": "https://goharbor.io/docs/2.12.0/install-config/installation-prereqs/", "ogTitle": "Harbor &ndash; Harbor Installation Prerequisites", "twitter:card": "summary", "scrapeId": "e27f8aa8-9c7a-42b8-8ad3-517baf902215", "sourceURL": "https://goharbor.io/docs/2.12.0/install-config/installation-prereqs", "url": "https://goharbor.io/docs/2.12.0/install-config/installation-prereqs/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you explain what Manage Preheat Provider Instances is in harbor-2-12-0?\n\nAssistant: Sure, I'd be happy to explain Manage Preheat Provider Instances in harbor-2-12-0.\n\n# Manage Preheat Provider Instances\n\nThis page covers how to create and manage P2P preheat provider instances in the system.Here's a quick rundown of what this is about:\n\n## Create Preheat Provider Instance\n\nTo preheat images, you need to create preheat provider instances first.\n\n1. Go to **Distributions** item under **Administration** and click **+NEW INSTANCE** to open the creation dialog.\n\n![creation dialog](https://goharbor.io/docs/2.12.0/img/p2p-preheat/creation-dialog.png)\n\n2. For the **Provider**, select **Dragonfly** or **Kraken** based on the target P2P environment.\n\n3. Enter a proper name and description (optional) for the new P2P provider instance.\n\n4. Input the preheating API endpoint of the target P2P provider.\ne.g.: [http://my-provider.com](http://my-provider.com/) or [http://my-provider.com](http://my-provider.com/):8002\n\n5. Select the proper **Auth Mode** based on the target P2P provider configuration and, if required, input the necessary access credentials.\nThe following modes are supported:\nSo far, the following modes are supported:\n   - **NONE**: no authentication needed.\n   - **Basic**: HTTP basic authentication mode, **Username** and **Password** are required.\n   - **OAuth**: OAuth bearer token mode, bearer **Token** is required.\n6. Check or uncheck the **Enable** checkbox to enable/deactivate the instance after creation.\n\n7. Optionally, select the **Skip certificate verification** check box.\n\nSelect the check box if the preheat provider instance uses a self-signed or untrusted certificate.\n\n8. Click **TEST CONNECTION** button to test the connectivity of the creating instance.\n\n9. If the connectivity testing is successful, click **OK** button to save the creating instance.\n\n## Manage Preheat Provider Instances\n\nThe existing configured preheat provider instances are listed in the datagrid view.\n\nThe healthy status of the managed provider instances are also shown in the view. If the connectivity of the provider instance is ok, the status column will be marked with **Healthy** in a green box.\n\n![provider instances](https://goharbor.io/docs/2.12.0/img/p2p-preheat/provider-instances.png)\n\nSelect the provider instance by checking the checkbox at front of the row, click **ACTIONS** to open the drop down menu.\n\n![actions](https://goharbor.io/docs/2.12.0/img/p2p-preheat/actions.png)\n\n1. Click **Edit** to open the edit dialog to do modifications to the selected provider instance.\n2. Click **Enable**/ **Deactivate** to enable/deactivate the selected provider instance if it is disabled/deactivated.\n3. Click **Delete** to delete the selected provider instance.\n\nOnly P2P provider instances which are not referenced by any preheat policies can be deleted. Delete all the related preheat policies and then try deleting again.\n\n## What to Do Next\n\nAfter adding preheat provider instances, now you can go to your project to create preheat policies to [preheat images](https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/preheat-images/).\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/p2p-preheat/manage-preheat-providers", "title": "Manage Preheat Provider Instances", "description": "This page covers how to create and manage P2P preheat provider instances in the system.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 02:55:44", "type": "overview", "page_metadata": {"og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:image:alt": "Harbor &ndash; Manage Preheat Provider Instances project logo", "favicon": "https://goharbor.io/favicon.svg", "ogSiteName": "Harbor", "og:title": "Harbor &ndash; Manage Preheat Provider Instances", "twitter:creator": "@project_harbor", "og:image:type": "image/png", "title": "\n      \nHarbor docs | Manage Preheat Provider Instances\n\n    ", "twitter:site": "@project_harbor", "og:url": "https://goharbor.io/docs/2.12.0/administration/p2p-preheat/manage-preheat-providers/", "og:locale": "en_US", "ogTitle": "Harbor &ndash; Manage Preheat Provider Instances", "og:type": ["documentation", "article"], "generator": "Hugo 0.74.0", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/p2p-preheat/manage-preheat-providers/", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "twitter:card": "summary", "ogLocale": "en_US", "og:site_name": "Harbor", "scrapeId": "2fde1cf0-1718-4cd0-903f-4ed9be28a10e", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/p2p-preheat/manage-preheat-providers", "url": "https://goharbor.io/docs/2.12.0/administration/p2p-preheat/manage-preheat-providers/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I create preheat provider instance in harbor-2-12-0?\n\nAssistant: To create preheat provider instance in harbor-2-12-0, here's what you do:\nTo preheat images, you need to create preheat provider instances first.\n\n1. Go to **Distributions** item under **Administration** and click **+NEW INSTANCE** to open the creation dialog.\n\n![creation dialog](https://goharbor.io/docs/2.12.0/img/p2p-preheat/creation-dialog.png)\n\n2. For the **Provider**, select **Dragonfly** or **Kraken** based on the target P2P environment.\n\n3. Enter a proper name and description (optional) for the new P2P provider instance.\n\n4. Input the preheating API endpoint of the target P2P provider.\ne.g.: [http://my-provider.com](http://my-provider.com/) or [http://my-provider.com](http://my-provider.com/):8002\n\n5. Select the proper **Auth Mode** based on the target P2P provider configuration and, if required, input the necessary access credentials.\nThe following modes are supported:\nSo far, the following modes are supported:\n   - **NONE**: no authentication needed.\n   - **Basic**: HTTP basic authentication mode, **Username** and **Password** are required.\n   - **OAuth**: OAuth bearer token mode, bearer **Token** is required.\n6. Check or uncheck the **Enable** checkbox to enable/deactivate the instance after creation.\n\n7. Optionally, select the **Skip certificate verification** check box.\n\nSelect the check box if the preheat provider instance uses a self-signed or untrusted certificate.\n\n8. Click **TEST CONNECTION** button to test the connectivity of the creating instance.\n\n9. If the connectivity testing is successful, click **OK** button to save the creating instance..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/p2p-preheat/manage-preheat-providers", "title": "Manage Preheat Provider Instances", "description": "This page covers how to create and manage P2P preheat provider instances in the system.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 02:55:44", "type": "section_detail", "page_metadata": {"og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:image:alt": "Harbor &ndash; Manage Preheat Provider Instances project logo", "favicon": "https://goharbor.io/favicon.svg", "ogSiteName": "Harbor", "og:title": "Harbor &ndash; Manage Preheat Provider Instances", "twitter:creator": "@project_harbor", "og:image:type": "image/png", "title": "\n      \nHarbor docs | Manage Preheat Provider Instances\n\n    ", "twitter:site": "@project_harbor", "og:url": "https://goharbor.io/docs/2.12.0/administration/p2p-preheat/manage-preheat-providers/", "og:locale": "en_US", "ogTitle": "Harbor &ndash; Manage Preheat Provider Instances", "og:type": ["documentation", "article"], "generator": "Hugo 0.74.0", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/p2p-preheat/manage-preheat-providers/", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "twitter:card": "summary", "ogLocale": "en_US", "og:site_name": "Harbor", "scrapeId": "2fde1cf0-1718-4cd0-903f-4ed9be28a10e", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/p2p-preheat/manage-preheat-providers", "url": "https://goharbor.io/docs/2.12.0/administration/p2p-preheat/manage-preheat-providers/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I manage preheat provider instances in harbor-2-12-0?\n\nAssistant: To manage preheat provider instances in harbor-2-12-0, here's what you do:\nThe existing configured preheat provider instances are listed in the datagrid view.\n\nThe healthy status of the managed provider instances are also shown in the view. If the connectivity of the provider instance is ok, the status column will be marked with **Healthy** in a green box.\n\n![provider instances](https://goharbor.io/docs/2.12.0/img/p2p-preheat/provider-instances.png)\n\nSelect the provider instance by checking the checkbox at front of the row, click **ACTIONS** to open the drop down menu.\n\n![actions](https://goharbor.io/docs/2.12.0/img/p2p-preheat/actions.png)\n\n1. Click **Edit** to open the edit dialog to do modifications to the selected provider instance.\n2. Click **Enable**/ **Deactivate** to enable/deactivate the selected provider instance if it is disabled/deactivated.\n3. Click **Delete** to delete the selected provider instance.\n\nOnly P2P provider instances which are not referenced by any preheat policies can be deleted. Delete all the related preheat policies and then try deleting again..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/p2p-preheat/manage-preheat-providers", "title": "Manage Preheat Provider Instances", "description": "This page covers how to create and manage P2P preheat provider instances in the system.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 02:55:44", "type": "section_detail", "page_metadata": {"og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:image:alt": "Harbor &ndash; Manage Preheat Provider Instances project logo", "favicon": "https://goharbor.io/favicon.svg", "ogSiteName": "Harbor", "og:title": "Harbor &ndash; Manage Preheat Provider Instances", "twitter:creator": "@project_harbor", "og:image:type": "image/png", "title": "\n      \nHarbor docs | Manage Preheat Provider Instances\n\n    ", "twitter:site": "@project_harbor", "og:url": "https://goharbor.io/docs/2.12.0/administration/p2p-preheat/manage-preheat-providers/", "og:locale": "en_US", "ogTitle": "Harbor &ndash; Manage Preheat Provider Instances", "og:type": ["documentation", "article"], "generator": "Hugo 0.74.0", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/p2p-preheat/manage-preheat-providers/", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "twitter:card": "summary", "ogLocale": "en_US", "og:site_name": "Harbor", "scrapeId": "2fde1cf0-1718-4cd0-903f-4ed9be28a10e", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/p2p-preheat/manage-preheat-providers", "url": "https://goharbor.io/docs/2.12.0/administration/p2p-preheat/manage-preheat-providers/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I what to do next in harbor-2-12-0?\n\nAssistant: To what to do next in harbor-2-12-0, here's what you do:\nAfter adding preheat provider instances, now you can go to your project to create preheat policies to [preheat images](https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/preheat-images/)..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/p2p-preheat/manage-preheat-providers", "title": "Manage Preheat Provider Instances", "description": "This page covers how to create and manage P2P preheat provider instances in the system.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 02:55:44", "type": "section_detail", "page_metadata": {"og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:image:alt": "Harbor &ndash; Manage Preheat Provider Instances project logo", "favicon": "https://goharbor.io/favicon.svg", "ogSiteName": "Harbor", "og:title": "Harbor &ndash; Manage Preheat Provider Instances", "twitter:creator": "@project_harbor", "og:image:type": "image/png", "title": "\n      \nHarbor docs | Manage Preheat Provider Instances\n\n    ", "twitter:site": "@project_harbor", "og:url": "https://goharbor.io/docs/2.12.0/administration/p2p-preheat/manage-preheat-providers/", "og:locale": "en_US", "ogTitle": "Harbor &ndash; Manage Preheat Provider Instances", "og:type": ["documentation", "article"], "generator": "Hugo 0.74.0", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/p2p-preheat/manage-preheat-providers/", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "twitter:card": "summary", "ogLocale": "en_US", "og:site_name": "Harbor", "scrapeId": "2fde1cf0-1718-4cd0-903f-4ed9be28a10e", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/p2p-preheat/manage-preheat-providers", "url": "https://goharbor.io/docs/2.12.0/administration/p2p-preheat/manage-preheat-providers/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: What are some tips for using Manage Preheat Provider Instances in harbor-2-12-0 effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nEnsure you have system administrator privileges to create and manage preheat provider instances.\n\nSelect the appropriate provider based on your P2P environment.\n\nUse valid API endpoints for the preheating provider.\n\nChoose the correct authentication mode and provide necessary credentials if required.\n\nTest the connection after creating the instance to ensure it is configured correctly.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/p2p-preheat/manage-preheat-providers", "title": "Manage Preheat Provider Instances", "description": "This page covers how to create and manage P2P preheat provider instances in the system.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 02:55:44", "type": "best_practices", "page_metadata": {"og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:image:alt": "Harbor &ndash; Manage Preheat Provider Instances project logo", "favicon": "https://goharbor.io/favicon.svg", "ogSiteName": "Harbor", "og:title": "Harbor &ndash; Manage Preheat Provider Instances", "twitter:creator": "@project_harbor", "og:image:type": "image/png", "title": "\n      \nHarbor docs | Manage Preheat Provider Instances\n\n    ", "twitter:site": "@project_harbor", "og:url": "https://goharbor.io/docs/2.12.0/administration/p2p-preheat/manage-preheat-providers/", "og:locale": "en_US", "ogTitle": "Harbor &ndash; Manage Preheat Provider Instances", "og:type": ["documentation", "article"], "generator": "Hugo 0.74.0", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/p2p-preheat/manage-preheat-providers/", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "twitter:card": "summary", "ogLocale": "en_US", "og:site_name": "Harbor", "scrapeId": "2fde1cf0-1718-4cd0-903f-4ed9be28a10e", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/p2p-preheat/manage-preheat-providers", "url": "https://goharbor.io/docs/2.12.0/administration/p2p-preheat/manage-preheat-providers/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you explain what User Permissions By Role is in harbor-2-12-0?\n\nAssistant: Sure, I'd be happy to explain User Permissions By Role in harbor-2-12-0.\n\n# User Permissions By Role\n\nUsers have different abilities depending on the role they have in a project.Here's a quick rundown of what this is about:\n\n## Project members permissions\n\nThe following table depicts the various user permission levels in a project.\n\n| Action | Limited Guest | Guest | Developer | Maintainer | Project Admin |\n| --- | --- | --- | --- | --- | --- |\n| See the project configurations | ✓ | ✓ | ✓ | ✓ | ✓ |\n| Edit the project configurations |  |  |  |  | ✓ |\n| See a list of project members |  | ✓ | ✓ | ✓ | ✓ |\n| Create/edit/delete project members |  |  |  |  | ✓ |\n| See a list of project logs |  | ✓ | ✓ | ✓ | ✓ |\n| See a list of project replications |  |  |  | ✓ | ✓ |\n| See a list of project replication jobs |  |  |  |  | ✓ |\n| See a list of project labels |  |  |  | ✓ | ✓ |\n| Create/edit/delete project labels |  |  |  | ✓ | ✓ |\n| See a list of repositories | ✓ | ✓ | ✓ | ✓ | ✓ |\n| Create repositories |  |  | ✓ | ✓ | ✓ |\n| Edit/delete repositories |  |  |  | ✓ | ✓ |\n| See a list of images | ✓ | ✓ | ✓ | ✓ | ✓ |\n| Retag image |  | ✓ | ✓ | ✓ | ✓ |\n| Pull image | ✓ | ✓ | ✓ | ✓ | ✓ |\n| Push image |  |  | ✓ | ✓ | ✓ |\n| Scan/delete image |  |  |  | ✓ | ✓ |\n| Add scanners to Harbor * |  |  |  |  |  |\n| Edit scanners in projects |  |  |  |  | ✓ |\n| See a list of image vulnerabilities | ✓ | ✓ | ✓ | ✓ | ✓ |\n| Create list of project vulnerabilities |  |  | ✓ | ✓ | ✓ |\n| Read list of project vulnerabilities |  |  | ✓ | ✓ | ✓ |\n| Export list of project vulnerabilities |  |  | ✓ | ✓ | ✓ |\n| See image build history | ✓ | ✓ | ✓ | ✓ | ✓ |\n| Add/Remove labels of image |  |  | ✓ | ✓ | ✓ |\n| See a list of helm charts | ✓ | ✓ | ✓ | ✓ | ✓ |\n| Download helm charts | ✓ | ✓ | ✓ | ✓ | ✓ |\n| Upload helm charts |  |  | ✓ | ✓ | ✓ |\n| Delete helm charts |  |  |  | ✓ | ✓ |\n| See a list of helm chart versions | ✓ | ✓ | ✓ | ✓ | ✓ |\n| Download helm chart versions | ✓ | ✓ | ✓ | ✓ | ✓ |\n| Upload helm chart versions |  |  | ✓ | ✓ | ✓ |\n| Delete helm chart versions |  |  |  | ✓ | ✓ |\n| Add/Remove labels of helm chart version |  |  | ✓ | ✓ | ✓ |\n| See a list of project robots |  |  |  | ✓ | ✓ |\n| Create/edit/delete project robots |  |  |  |  | ✓ |\n| See configured CVE allowlist | ✓ | ✓ | ✓ | ✓ | ✓ |\n| Create/edit/remove CVE allowlist |  |  |  |  | ✓ |\n| View webhook events |  |  |  | ✓ | ✓ |\n| Add new webhook events |  |  |  |  | ✓ |\n| Enable/deactivate webhooks |  |  |  |  | ✓ |\n| Create/delete tag retention rules |  |  | ✓ | ✓ | ✓ |\n| Enable/deactivate tag retention rules |  |  | ✓ | ✓ | ✓ |\n| Create/delete tag immutability rules |  |  |  | ✓ | ✓ |\n| Enable/deactivate tag immutability rules |  |  |  | ✓ | ✓ |\n| See project quotas | ✓ | ✓ | ✓ | ✓ | ✓ |\n| Edit project quotas * |  |  |  |  |  |\n| Delete Project |  |  |  |  | ✓ |\n\n* Only the Harbor system administrator can edit project quotas and add new scanners.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/managing-users/user-permissions-by-role", "title": "User Permissions By Role", "description": "Users have different abilities depending on the role they have in a project.", "has_code_examples": false, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 02:56:00", "type": "overview", "page_metadata": {"title": "\n      \nHarbor docs | User Permissions By Role\n\n    ", "favicon": "https://goharbor.io/favicon.svg", "ogSiteName": "Harbor", "og:type": ["documentation", "article"], "og:site_name": "Harbor", "twitter:card": "summary", "twitter:site": "@project_harbor", "generator": "Hugo 0.74.0", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/managing-users/user-permissions-by-role/", "ogLocale": "en_US", "og:image:type": "image/png", "og:locale": "en_US", "og:title": "Harbor &ndash; User Permissions By Role", "twitter:creator": "@project_harbor", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:image:alt": "Harbor &ndash; User Permissions By Role project logo", "og:url": "https://goharbor.io/docs/2.12.0/administration/managing-users/user-permissions-by-role/", "ogTitle": "Harbor &ndash; User Permissions By Role", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "scrapeId": "686a5ece-f6e3-4daa-94e1-c423495e5d50", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/managing-users/user-permissions-by-role", "url": "https://goharbor.io/docs/2.12.0/administration/managing-users/user-permissions-by-role/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I project members permissions in harbor-2-12-0?\n\nAssistant: To project members permissions in harbor-2-12-0, here's what you do:\nThe following table depicts the various user permission levels in a project.\n\n| Action | Limited Guest | Guest | Developer | Maintainer | Project Admin |\n| --- | --- | --- | --- | --- | --- |\n| See the project configurations | ✓ | ✓ | ✓ | ✓ | ✓ |\n| Edit the project configurations |  |  |  |  | ✓ |\n| See a list of project members |  | ✓ | ✓ | ✓ | ✓ |\n| Create/edit/delete project members |  |  |  |  | ✓ |\n| See a list of project logs |  | ✓ | ✓ | ✓ | ✓ |\n| See a list of project replications |  |  |  | ✓ | ✓ |\n| See a list of project replication jobs |  |  |  |  | ✓ |\n| See a list of project labels |  |  |  | ✓ | ✓ |\n| Create/edit/delete project labels |  |  |  | ✓ | ✓ |\n| See a list of repositories | ✓ | ✓ | ✓ | ✓ | ✓ |\n| Create repositories |  |  | ✓ | ✓ | ✓ |\n| Edit/delete repositories |  |  |  | ✓ | ✓ |\n| See a list of images | ✓ | ✓ | ✓ | ✓ | ✓ |\n| Retag image |  | ✓ | ✓ | ✓ | ✓ |\n| Pull image | ✓ | ✓ | ✓ | ✓ | ✓ |\n| Push image |  |  | ✓ | ✓ | ✓ |\n| Scan/delete image |  |  |  | ✓ | ✓ |\n| Add scanners to Harbor * |  |  |  |  |  |\n| Edit scanners in projects |  |  |  |  | ✓ |\n| See a list of image vulnerabilities | ✓ | ✓ | ✓ | ✓ | ✓ |\n| Create list of project vulnerabilities |  |  | ✓ | ✓ | ✓ |\n| Read list of project vulnerabilities |  |  | ✓ | ✓ | ✓ |\n| Export list of project vulnerabilities |  |  | ✓ | ✓ | ✓ |\n| See image build history | ✓ | ✓ | ✓ | ✓ | ✓ |\n| Add/Remove labels of image |  |  | ✓ | ✓ | ✓ |\n| See a list of helm charts | ✓ | ✓ | ✓ | ✓ | ✓ |\n| Download helm charts | ✓ | ✓ | ✓ | ✓ | ✓ |\n| Upload helm charts |  |  | ✓ | ✓ | ✓ |\n| Delete helm charts |  |  |  | ✓ | ✓ |\n| See a list of helm chart versions | ✓ | ✓ | ✓ | ✓ | ✓ |\n| Download helm chart versions | ✓ | ✓ | ✓ | ✓ | ✓ |\n| Upload helm chart versions |  |  | ✓ | ✓ | ✓ |\n| Delete helm chart versions |  |  |  | ✓ | ✓ |\n| Add/Remove labels of helm chart version |  |  | ✓ | ✓ | ✓ |\n| See a list of project robots |  |  |  | ✓ | ✓ |\n| Create/edit/delete project robots |  |  |  |  | ✓ |\n| See configured CVE allowlist | ✓ | ✓ | ✓ | ✓ | ✓ |\n| Create/edit/remove CVE allowlist |  |  |  |  | ✓ |\n| View webhook events |  |  |  | ✓ | ✓ |\n| Add new webhook events |  |  |  |  | ✓ |\n| Enable/deactivate webhooks |  |  |  |  | ✓ |\n| Create/delete tag retention rules |  |  | ✓ | ✓ | ✓ |\n| Enable/deactivate tag retention rules |  |  | ✓ | ✓ | ✓ |\n| Create/delete tag immutability rules |  |  |  | ✓ | ✓ |\n| Enable/deactivate tag immutability rules |  |  |  | ✓ | ✓ |\n| See project quotas | ✓ | ✓ | ✓ | ✓ | ✓ |\n| Edit project quotas * |  |  |  |  |  |\n| Delete Project |  |  |  |  | ✓ |\n\n* Only the Harbor system administrator can edit project quotas and add new scanners..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/managing-users/user-permissions-by-role", "title": "User Permissions By Role", "description": "Users have different abilities depending on the role they have in a project.", "has_code_examples": false, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 02:56:00", "type": "section_detail", "page_metadata": {"title": "\n      \nHarbor docs | User Permissions By Role\n\n    ", "favicon": "https://goharbor.io/favicon.svg", "ogSiteName": "Harbor", "og:type": ["documentation", "article"], "og:site_name": "Harbor", "twitter:card": "summary", "twitter:site": "@project_harbor", "generator": "Hugo 0.74.0", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/managing-users/user-permissions-by-role/", "ogLocale": "en_US", "og:image:type": "image/png", "og:locale": "en_US", "og:title": "Harbor &ndash; User Permissions By Role", "twitter:creator": "@project_harbor", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:image:alt": "Harbor &ndash; User Permissions By Role project logo", "og:url": "https://goharbor.io/docs/2.12.0/administration/managing-users/user-permissions-by-role/", "ogTitle": "Harbor &ndash; User Permissions By Role", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "scrapeId": "686a5ece-f6e3-4daa-94e1-c423495e5d50", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/managing-users/user-permissions-by-role", "url": "https://goharbor.io/docs/2.12.0/administration/managing-users/user-permissions-by-role/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: What are some tips for using User Permissions By Role in harbor-2-12-0 effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nOnly the Harbor system administrator can edit project quotas and add new scanners.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/managing-users/user-permissions-by-role", "title": "User Permissions By Role", "description": "Users have different abilities depending on the role they have in a project.", "has_code_examples": false, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 02:56:00", "type": "best_practices", "page_metadata": {"title": "\n      \nHarbor docs | User Permissions By Role\n\n    ", "favicon": "https://goharbor.io/favicon.svg", "ogSiteName": "Harbor", "og:type": ["documentation", "article"], "og:site_name": "Harbor", "twitter:card": "summary", "twitter:site": "@project_harbor", "generator": "Hugo 0.74.0", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/managing-users/user-permissions-by-role/", "ogLocale": "en_US", "og:image:type": "image/png", "og:locale": "en_US", "og:title": "Harbor &ndash; User Permissions By Role", "twitter:creator": "@project_harbor", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:image:alt": "Harbor &ndash; User Permissions By Role project logo", "og:url": "https://goharbor.io/docs/2.12.0/administration/managing-users/user-permissions-by-role/", "ogTitle": "Harbor &ndash; User Permissions By Role", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "scrapeId": "686a5ece-f6e3-4daa-94e1-c423495e5d50", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/managing-users/user-permissions-by-role", "url": "https://goharbor.io/docs/2.12.0/administration/managing-users/user-permissions-by-role/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you explain what Assign Users to a Project is in harbor-2-12-0?\n\nAssistant: Sure, I'd be happy to explain Assign Users to a Project in harbor-2-12-0.\n\n# Assign Users to a Project\n\nThis page explains how to add individual users and groups to a project in Harbor, including LDAP/AD and OIDC users and groups, and how to assign roles to them.Here's a quick rundown of what this is about:\n\n## Add Individual Members to Projects\n\n1. Log in to the Harbor interface with an account that has at least project administrator privileges.\n\n2. Go to **Projects** and select a project.\n\n3. Select the **Members** tab and click **+User**.\n\n![browse project](https://goharbor.io/docs/2.12.0/img/project-members.png)\n\n4. Enter the name of an existing database, LDAP/AD, or OIDC user and select a role for this user.\n\n![browse project](https://goharbor.io/docs/2.12.0/img/new-add-member.png)\n\n5. Optionally select one or more members, click **Action**, and select a different role for the user or users, or select **Remove** to remove them from the project.\n\n![browse project](https://goharbor.io/docs/2.12.0/img/new-remove-update-member.png)\n\n## Add LDAP/AD Groups to Projects\n\n1. Log in to the Harbor interface with an account that has at least project administrator privileges.\n\n2. Go to **Projects** and select a project.\n\n3. Select the **Members** tab and click **+Group**.\n\n![Add group](https://goharbor.io/docs/2.12.0/img/add-group.png)\n\n4. Enter the name of a group that you have already used in Harbor and assign a role to that group.\n\n![Screenshot of add group dialog](https://goharbor.io/docs/2.12.0/img/ldap-group-addgroup-dialog.png)\n\nOnce an LDAP group has been assigned a role in a project, all LDAP/AD users in this group have the privileges of the role you assigned to the group. If a user has both user-level role and group-level role, these privileges are merged.\n\nIf a user in the LDAP group has admin privilege, the user has the same privileges as the Harbor system administrator.\n\n## Add OIDC Groups to Projects\n\nTo be able to add OIDC groups to projects, your OIDC provider and Harbor instance must be configured correctly. For information about how to configure OIDC so that Harbor can use groups, see [OIDC Provider Authentication](https://goharbor.io/docs/2.12.0/administration/configure-authentication/oidc-auth/).\n\n1. Log in to the Harbor interface with an account that has at least project administrator privileges.\n\n2. Go to **Projects** and select a project.\n\n3. Select the **Members** tab and click **+Group**.\n\n![Add group](https://goharbor.io/docs/2.12.0/img/add-group.png)\n\n4. Enter the name of a group that already exists in your OIDC provider and assign a role to that group.\n\n![Add group](https://goharbor.io/docs/2.12.0/img/add-oidc-group.png)\n\nUnlike with LDAP groups, Harbor cannot check whether OIDC groups exist when you add them to a project. If you mistype the group name, or if the group does not exist in your OIDC provider, Harbor still creates the group.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/create-projects/add-users", "title": "Assign Users to a Project", "description": "This page explains how to add individual users and groups to a project in Harbor, including LDAP/AD and OIDC users and groups, and how to assign roles to them.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 02:56:11", "type": "overview", "page_metadata": {"ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/create-projects/add-users/", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "ogTitle": "Harbor &ndash; Assign Users to a Project", "og:title": "Harbor &ndash; Assign Users to a Project", "title": "\n      \nHarbor docs | Assign Users to a Project\n\n    ", "og:site_name": "Harbor", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/create-projects/add-users/", "favicon": "https://goharbor.io/favicon.svg", "ogLocale": "en_US", "og:image:type": "image/png", "twitter:card": "summary", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:image:alt": "Harbor &ndash; Assign Users to a Project project logo", "og:locale": "en_US", "og:type": ["documentation", "article"], "twitter:creator": "@project_harbor", "generator": "Hugo 0.74.0", "ogSiteName": "Harbor", "twitter:site": "@project_harbor", "scrapeId": "66177cbe-3404-4740-b868-d63511658c61", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/create-projects/add-users", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/create-projects/add-users/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I add individual members to projects in harbor-2-12-0?\n\nAssistant: To add individual members to projects in harbor-2-12-0, here's what you do:\n1. Log in to the Harbor interface with an account that has at least project administrator privileges.\n\n2. Go to **Projects** and select a project.\n\n3. Select the **Members** tab and click **+User**.\n\n![browse project](https://goharbor.io/docs/2.12.0/img/project-members.png)\n\n4. Enter the name of an existing database, LDAP/AD, or OIDC user and select a role for this user.\n\n![browse project](https://goharbor.io/docs/2.12.0/img/new-add-member.png)\n\n5. Optionally select one or more members, click **Action**, and select a different role for the user or users, or select **Remove** to remove them from the project.\n\n![browse project](https://goharbor.io/docs/2.12.0/img/new-remove-update-member.png).\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/create-projects/add-users", "title": "Assign Users to a Project", "description": "This page explains how to add individual users and groups to a project in Harbor, including LDAP/AD and OIDC users and groups, and how to assign roles to them.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 02:56:11", "type": "section_detail", "page_metadata": {"ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/create-projects/add-users/", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "ogTitle": "Harbor &ndash; Assign Users to a Project", "og:title": "Harbor &ndash; Assign Users to a Project", "title": "\n      \nHarbor docs | Assign Users to a Project\n\n    ", "og:site_name": "Harbor", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/create-projects/add-users/", "favicon": "https://goharbor.io/favicon.svg", "ogLocale": "en_US", "og:image:type": "image/png", "twitter:card": "summary", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:image:alt": "Harbor &ndash; Assign Users to a Project project logo", "og:locale": "en_US", "og:type": ["documentation", "article"], "twitter:creator": "@project_harbor", "generator": "Hugo 0.74.0", "ogSiteName": "Harbor", "twitter:site": "@project_harbor", "scrapeId": "66177cbe-3404-4740-b868-d63511658c61", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/create-projects/add-users", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/create-projects/add-users/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I add ldap/ad groups to projects in harbor-2-12-0?\n\nAssistant: To add ldap/ad groups to projects in harbor-2-12-0, here's what you do:\n1. Log in to the Harbor interface with an account that has at least project administrator privileges.\n\n2. Go to **Projects** and select a project.\n\n3. Select the **Members** tab and click **+Group**.\n\n![Add group](https://goharbor.io/docs/2.12.0/img/add-group.png)\n\n4. Enter the name of a group that you have already used in Harbor and assign a role to that group.\n\n![Screenshot of add group dialog](https://goharbor.io/docs/2.12.0/img/ldap-group-addgroup-dialog.png)\n\nOnce an LDAP group has been assigned a role in a project, all LDAP/AD users in this group have the privileges of the role you assigned to the group. If a user has both user-level role and group-level role, these privileges are merged.\n\nIf a user in the LDAP group has admin privilege, the user has the same privileges as the Harbor system administrator..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/create-projects/add-users", "title": "Assign Users to a Project", "description": "This page explains how to add individual users and groups to a project in Harbor, including LDAP/AD and OIDC users and groups, and how to assign roles to them.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 02:56:11", "type": "section_detail", "page_metadata": {"ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/create-projects/add-users/", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "ogTitle": "Harbor &ndash; Assign Users to a Project", "og:title": "Harbor &ndash; Assign Users to a Project", "title": "\n      \nHarbor docs | Assign Users to a Project\n\n    ", "og:site_name": "Harbor", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/create-projects/add-users/", "favicon": "https://goharbor.io/favicon.svg", "ogLocale": "en_US", "og:image:type": "image/png", "twitter:card": "summary", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:image:alt": "Harbor &ndash; Assign Users to a Project project logo", "og:locale": "en_US", "og:type": ["documentation", "article"], "twitter:creator": "@project_harbor", "generator": "Hugo 0.74.0", "ogSiteName": "Harbor", "twitter:site": "@project_harbor", "scrapeId": "66177cbe-3404-4740-b868-d63511658c61", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/create-projects/add-users", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/create-projects/add-users/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I add oidc groups to projects in harbor-2-12-0?\n\nAssistant: To add oidc groups to projects in harbor-2-12-0, here's what you do:\nTo be able to add OIDC groups to projects, your OIDC provider and Harbor instance must be configured correctly. For information about how to configure OIDC so that Harbor can use groups, see [OIDC Provider Authentication](https://goharbor.io/docs/2.12.0/administration/configure-authentication/oidc-auth/).\n\n1. Log in to the Harbor interface with an account that has at least project administrator privileges.\n\n2. Go to **Projects** and select a project.\n\n3. Select the **Members** tab and click **+Group**.\n\n![Add group](https://goharbor.io/docs/2.12.0/img/add-group.png)\n\n4. Enter the name of a group that already exists in your OIDC provider and assign a role to that group.\n\n![Add group](https://goharbor.io/docs/2.12.0/img/add-oidc-group.png)\n\nUnlike with LDAP groups, Harbor cannot check whether OIDC groups exist when you add them to a project. If you mistype the group name, or if the group does not exist in your OIDC provider, Harbor still creates the group..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/create-projects/add-users", "title": "Assign Users to a Project", "description": "This page explains how to add individual users and groups to a project in Harbor, including LDAP/AD and OIDC users and groups, and how to assign roles to them.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 02:56:11", "type": "section_detail", "page_metadata": {"ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/create-projects/add-users/", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "ogTitle": "Harbor &ndash; Assign Users to a Project", "og:title": "Harbor &ndash; Assign Users to a Project", "title": "\n      \nHarbor docs | Assign Users to a Project\n\n    ", "og:site_name": "Harbor", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/create-projects/add-users/", "favicon": "https://goharbor.io/favicon.svg", "ogLocale": "en_US", "og:image:type": "image/png", "twitter:card": "summary", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:image:alt": "Harbor &ndash; Assign Users to a Project project logo", "og:locale": "en_US", "og:type": ["documentation", "article"], "twitter:creator": "@project_harbor", "generator": "Hugo 0.74.0", "ogSiteName": "Harbor", "twitter:site": "@project_harbor", "scrapeId": "66177cbe-3404-4740-b868-d63511658c61", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/create-projects/add-users", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/create-projects/add-users/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: What are some tips for using Assign Users to a Project in harbor-2-12-0 effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nEnsure you have project administrator privileges before attempting to add users or groups to a project.\n\nDouble-check the group names when adding OIDC groups, as Harbor cannot verify their existence.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/create-projects/add-users", "title": "Assign Users to a Project", "description": "This page explains how to add individual users and groups to a project in Harbor, including LDAP/AD and OIDC users and groups, and how to assign roles to them.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 02:56:11", "type": "best_practices", "page_metadata": {"ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/create-projects/add-users/", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "ogTitle": "Harbor &ndash; Assign Users to a Project", "og:title": "Harbor &ndash; Assign Users to a Project", "title": "\n      \nHarbor docs | Assign Users to a Project\n\n    ", "og:site_name": "Harbor", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/create-projects/add-users/", "favicon": "https://goharbor.io/favicon.svg", "ogLocale": "en_US", "og:image:type": "image/png", "twitter:card": "summary", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:image:alt": "Harbor &ndash; Assign Users to a Project project logo", "og:locale": "en_US", "og:type": ["documentation", "article"], "twitter:creator": "@project_harbor", "generator": "Hugo 0.74.0", "ogSiteName": "Harbor", "twitter:site": "@project_harbor", "scrapeId": "66177cbe-3404-4740-b868-d63511658c61", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/create-projects/add-users", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/create-projects/add-users/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you explain what Configure OIDC Provider Authentication is in harbor-2-12-0?\n\nAssistant: Sure, I'd be happy to explain Configure OIDC Provider Authentication in harbor-2-12-0.\n\n# Configure OIDC Provider Authentication\n\nThis page covers the configuration of OpenID Connect (OIDC) authentication for Harbor, including setup instructions and user onboarding processes.Here's a quick rundown of what this is about:\n\n## Configure Your OIDC Provider\n\nYou must configure your OIDC provider so that you can use it with Harbor. For precise information about how to perform these configurations, see the documentation for your OIDC provider.\n\n- Set up the users and groups that will use the OIDC provider to log in to Harbor. You do not need to assign any specific OIDC roles to users or groups as these do not get mapped to Harbor roles.\n- The URL of the OIDC provider endpoint, known as the Authorization Server in OAuth terminology, must service the well-known URI for its configuration document. For more information about the configuration document, see the [OpenID documentation](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderConfigurationRequest).\n- To manage users by using OIDC groups, create a custom group claim that contains all of the user groups that you want to register in Harbor. The group claim must be mapped in the ID token that is sent to Harbor when users log in. You can enable the `memberof` feature on the OIDC provider. With the `memberof` feature, the OIDC user entity’s `memberof` attribute is updated when the group entity’s `member` attribute is updated, for example by adding or removing an OIDC user from the OIDC group.\n- Register Harbor as a client application with the OIDC provider. Associate Harbor’s callback URI to the client application as a `redirectURI`. This is the address to which the OIDC provider sends ID tokens.\n\n## Configure an OIDC Provider in Harbor\n\nBefore configuring an OIDC provider in Harbor, make sure that your provider is configured correctly according to the preceding section.\n\n1. Log in to the Harbor interface with an account that has Harbor system administrator privileges.\n\n2. Under **Administration**, go to **Configuration** and select the **Authentication** tab.\n\n3. Use the **Auth Mode** drop-down menu to select **OIDC**.\n\n![LDAP authentication](https://goharbor.io/docs/2.12.0/img/select-oidc-auth.png)\n\n4. Enter information about your OIDC provider.\n   - **Primary Auth Mode**: Whether to use the OIDC mode as the primary auth mode.\n   \n   To override and login via DB is possible when visiting the URL ‘/account/sign-in’ explicitly\n\n   - **OIDC Provider Name**: The name of the OIDC provider.\n\n   - **OIDC Provider Endpoint**: The URL of the endpoint of the OIDC provider.\n\n   - **OIDC Client ID**: The client ID with which Harbor is registered as client application with the OIDC provider.\n\n   - **OIDC Client Secret**: The secret for the Harbor client application.\n\n   - **OIDC Group Filter**: The [regular expression](https://pkg.go.dev/regexp/syntax) to select matching groups from the `Group Claim Name` list. Matching groups are added to Harbor. This filter does not limit the users’ capability to log in into Harbor.\n\n   - **Group Claim Name**: The name of a custom group claim that you have configured in your OIDC provider, that includes the groups to add to Harbor.\n\n   - **OIDC Admin Group**: The name of the admin group, if the ID token of the user shows that he is a member of this group, the user will have admin privilege in Harbor. **Note**: You can only set one Admin Group. Please also make sure the value in this field matches the value of group item in ID token.\n\n   - **OIDC Scope**: A comma-separated string listing the scopes to be used during authentication.\n\n     The OIDC scope must contain `openid` and usually also contains `profile` and `email`. To obtain refresh tokens it should also contain `offline_access`. If you are using OIDC groups, a scope must identify the group claim. Check with your OIDC provider administrator for precise details of how to identify the group claim scope, as this differs from vendor to vendor.\n\n     ![OIDC settings](https://goharbor.io/docs/2.12.0/img/oidc-auth-setting.png)\n5. Uncheck **Verify Certificate** if the OIDC Provider uses a self-signed or untrusted certificate.\n\n6. Check the **Automatic onboarding** if you don’t want user to set his username in Harbor during his first login. When this option is checked, the attribute **Username Claim** must be set, Harbor will read the value of this claim from ID token and use it as the username for onboarding the user. Therefore, you must make sure the value you set in **Username Claim** is included in the ID token returned by the OIDC provider you set, otherwise there will be a system error when Harbor tries to onboard the user.\n\n7. Verify that the Redirect URI that you configured in your OIDC provider is the same as the one displayed at the bottom of the page.\n\n![OIDC_auto_onboarding](https://goharbor.io/docs/2.12.0/img/oidc-cert-verifi-auto-onboard.png)\n\n8. Click **Test OIDC Server** to make sure that your configuration is correct.\n\n9. Click **Save** to complete the configuration.\n\n## Log In to Harbor via an OIDC Provider\n\nWhen the Harbor system administrator has configured Harbor to authenticate via OIDC a **LOGIN WITH ${your_oidc_provider_name}** button appears on the Harbor login page.\n\n![oidc_login](https://goharbor.io/docs/2.12.0/img/oidc-login.png)\n\n**NOTE:** When Harbor is configured authentication via OIDC, the **LOGIN VIA LOCAL DB** button is for the local Harbor system administrator to log in.\n\n1. As a Harbor user, click the **LOGIN WITH ${your_oidc_provider_name}** button.\n\nThis redirects you to the OIDC Provider for authentication, after the OIDC provider has authenticated you, you are redirected back to Harbor.\n\n2. If this is the first time you are logging in to Harbor with OIDC, you will be onboarded to Harbor so that you have a user record in Harbor’s database, which is used when adding you to projects, assigning roles, and so on. The flow of this process depends on the configuration:\n1. If the option **Automatic onboarding** is not checked, a dialog will be displayed for specifying a user name for Harbor to associate with your OIDC username.\n\n      ![Specify Harbor username for OIDC](https://goharbor.io/docs/2.12.0/img/oidc-onboard-dlg.png)\n\n      If the username is already taken, you are prompted to choose another one.\n2. If the option **Automatic onboarding** is checked, you will not be prompted to set the user name, instead, Harbor will try to extract the user name from ID token via the claim set in **Username Claim** and automatically onboard the user using this username.\n\n## Using OIDC from the Docker or Helm CLI\n\nAfter you have authenticated via OIDC and logged into the Harbor interface for the first time, you can use the Docker or Helm CLI to access Harbor.\n\nThe Docker and Helm CLIs cannot handle redirection for OIDC, so Harbor provides a CLI secret for use when logging in from Docker or Helm. This is only available when Harbor uses OIDC authentication.\n\n1. Log in to Harbor with an OIDC user account.\n\n2. Click your username at the top of the screen and select **User Profile**.\n\n![Access user profile](https://goharbor.io/docs/2.12.0/img/user-profile.png)\n\n3. Click the clipboard icon to copy the CLI secret associated with your account.\n\n![Copy CLI secret](https://goharbor.io/docs/2.12.0/img/profile-dlg.png)\n\n4. Optionally click the **…** icon in your user profile to display buttons for automatically generating or manually creating a new CLI secret.\n\n![Copy CLI secret](https://goharbor.io/docs/2.12.0/img/generate-create-new-secret.png)\n\nA user can only have one CLI secret, so when a new secret is generated or create, the old one becomes invalid.\n\n5. If you generated a new CLI secret, click the clipboard icon to copy it.\n\nYou can now use your CLI secret as the password when logging in to Harbor from the Docker or Helm CLI.\n\n```\ndocker login -u testuser -p cli_secret jt-dev.local.goharbor.io\n```\n\nThe CLI secret is associated with the OIDC ID token. Harbor will try to refresh the token, so the CLI secret will be valid after the ID token expires. However, if the OIDC Provider does not provide a refresh token or the refresh fails, the CLI secret becomes invalid. In this case, log out and log back in to Harbor via your OIDC provider so that Harbor can get a new ID token. The CLI secret will then work again.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/configure-authentication/oidc-auth", "title": "Configure OIDC Provider Authentication", "description": "This page covers the configuration of OpenID Connect (OIDC) authentication for Harbor, including setup instructions and user onboarding processes.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 02:56:41", "type": "overview", "page_metadata": {"viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:url": "https://goharbor.io/docs/2.12.0/administration/configure-authentication/oidc-auth/", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:image:alt": "Harbor &ndash; Configure OIDC Provider Authentication project logo", "title": "\n      \nHarbor docs | Configure OIDC Provider Authentication\n\n    ", "favicon": "https://goharbor.io/favicon.svg", "og:type": ["documentation", "article"], "og:locale": "en_US", "twitter:card": "summary", "ogSiteName": "Harbor", "ogTitle": "Harbor &ndash; Configure OIDC Provider Authentication", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/configure-authentication/oidc-auth/", "ogLocale": "en_US", "og:image:type": "image/png", "generator": "Hugo 0.74.0", "og:site_name": "Harbor", "twitter:site": "@project_harbor", "twitter:creator": "@project_harbor", "og:title": "Harbor &ndash; Configure OIDC Provider Authentication", "scrapeId": "49a5795c-1431-4809-9d12-83f097bd8e12", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/configure-authentication/oidc-auth", "url": "https://goharbor.io/docs/2.12.0/administration/configure-authentication/oidc-auth/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I configure your oidc provider in harbor-2-12-0?\n\nAssistant: To configure your oidc provider in harbor-2-12-0, here's what you do:\nYou must configure your OIDC provider so that you can use it with Harbor. For precise information about how to perform these configurations, see the documentation for your OIDC provider.\n\n- Set up the users and groups that will use the OIDC provider to log in to Harbor. You do not need to assign any specific OIDC roles to users or groups as these do not get mapped to Harbor roles.\n- The URL of the OIDC provider endpoint, known as the Authorization Server in OAuth terminology, must service the well-known URI for its configuration document. For more information about the configuration document, see the [OpenID documentation](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderConfigurationRequest).\n- To manage users by using OIDC groups, create a custom group claim that contains all of the user groups that you want to register in Harbor. The group claim must be mapped in the ID token that is sent to Harbor when users log in. You can enable the `memberof` feature on the OIDC provider. With the `memberof` feature, the OIDC user entity’s `memberof` attribute is updated when the group entity’s `member` attribute is updated, for example by adding or removing an OIDC user from the OIDC group.\n- Register Harbor as a client application with the OIDC provider. Associate Harbor’s callback URI to the client application as a `redirectURI`. This is the address to which the OIDC provider sends ID tokens..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/configure-authentication/oidc-auth", "title": "Configure OIDC Provider Authentication", "description": "This page covers the configuration of OpenID Connect (OIDC) authentication for Harbor, including setup instructions and user onboarding processes.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 02:56:41", "type": "section_detail", "page_metadata": {"viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:url": "https://goharbor.io/docs/2.12.0/administration/configure-authentication/oidc-auth/", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:image:alt": "Harbor &ndash; Configure OIDC Provider Authentication project logo", "title": "\n      \nHarbor docs | Configure OIDC Provider Authentication\n\n    ", "favicon": "https://goharbor.io/favicon.svg", "og:type": ["documentation", "article"], "og:locale": "en_US", "twitter:card": "summary", "ogSiteName": "Harbor", "ogTitle": "Harbor &ndash; Configure OIDC Provider Authentication", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/configure-authentication/oidc-auth/", "ogLocale": "en_US", "og:image:type": "image/png", "generator": "Hugo 0.74.0", "og:site_name": "Harbor", "twitter:site": "@project_harbor", "twitter:creator": "@project_harbor", "og:title": "Harbor &ndash; Configure OIDC Provider Authentication", "scrapeId": "49a5795c-1431-4809-9d12-83f097bd8e12", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/configure-authentication/oidc-auth", "url": "https://goharbor.io/docs/2.12.0/administration/configure-authentication/oidc-auth/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I configure an oidc provider in harbor in harbor-2-12-0?\n\nAssistant: To configure an oidc provider in harbor in harbor-2-12-0, here's what you do:\nBefore configuring an OIDC provider in Harbor, make sure that your provider is configured correctly according to the preceding section.\n\n1. Log in to the Harbor interface with an account that has Harbor system administrator privileges.\n\n2. Under **Administration**, go to **Configuration** and select the **Authentication** tab.\n\n3. Use the **Auth Mode** drop-down menu to select **OIDC**.\n\n![LDAP authentication](https://goharbor.io/docs/2.12.0/img/select-oidc-auth.png)\n\n4. Enter information about your OIDC provider.\n   - **Primary Auth Mode**: Whether to use the OIDC mode as the primary auth mode.\n   \n   To override and login via DB is possible when visiting the URL ‘/account/sign-in’ explicitly\n\n   - **OIDC Provider Name**: The name of the OIDC provider.\n\n   - **OIDC Provider Endpoint**: The URL of the endpoint of the OIDC provider.\n\n   - **OIDC Client ID**: The client ID with which Harbor is registered as client application with the OIDC provider.\n\n   - **OIDC Client Secret**: The secret for the Harbor client application.\n\n   - **OIDC Group Filter**: The [regular expression](https://pkg.go.dev/regexp/syntax) to select matching groups from the `Group Claim Name` list. Matching groups are added to Harbor. This filter does not limit the users’ capability to log in into Harbor.\n\n   - **Group Claim Name**: The name of a custom group claim that you have configured in your OIDC provider, that includes the groups to add to Harbor.\n\n   - **OIDC Admin Group**: The name of the admin group, if the ID token of the user shows that he is a member of this group, the user will have admin privilege in Harbor. **Note**: You can only set one Admin Group. Please also make sure the value in this field matches the value of group item in ID token.\n\n   - **OIDC Scope**: A comma-separated string listing the scopes to be used during authentication.\n\n     The OIDC scope must contain `openid` and usually also contains `profile` and `email`. To obtain refresh tokens it should also contain `offline_access`. If you are using OIDC groups, a scope must identify the group claim. Check with your OIDC provider administrator for precise details of how to identify the group claim scope, as this differs from vendor to vendor.\n\n     ![OIDC settings](https://goharbor.io/docs/2.12.0/img/oidc-auth-setting.png)\n5. Uncheck **Verify Certificate** if the OIDC Provider uses a self-signed or untrusted certificate.\n\n6. Check the **Automatic onboarding** if you don’t want user to set his username in Harbor during his first login. When this option is checked, the attribute **Username Claim** must be set, Harbor will read the value of this claim from ID token and use it as the username for onboarding the user. Therefore, you must make sure the value you set in **Username Claim** is included in the ID token returned by the OIDC provider you set, otherwise there will be a system error when Harbor tries to onboard the user.\n\n7. Verify that the Redirect URI that you configured in your OIDC provider is the same as the one displayed at the bottom of the page.\n\n![OIDC_auto_onboarding](https://goharbor.io/docs/2.12.0/img/oidc-cert-verifi-auto-onboard.png)\n\n8. Click **Test OIDC Server** to make sure that your configuration is correct.\n\n9. Click **Save** to complete the configuration..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/configure-authentication/oidc-auth", "title": "Configure OIDC Provider Authentication", "description": "This page covers the configuration of OpenID Connect (OIDC) authentication for Harbor, including setup instructions and user onboarding processes.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 02:56:41", "type": "section_detail", "page_metadata": {"viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:url": "https://goharbor.io/docs/2.12.0/administration/configure-authentication/oidc-auth/", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:image:alt": "Harbor &ndash; Configure OIDC Provider Authentication project logo", "title": "\n      \nHarbor docs | Configure OIDC Provider Authentication\n\n    ", "favicon": "https://goharbor.io/favicon.svg", "og:type": ["documentation", "article"], "og:locale": "en_US", "twitter:card": "summary", "ogSiteName": "Harbor", "ogTitle": "Harbor &ndash; Configure OIDC Provider Authentication", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/configure-authentication/oidc-auth/", "ogLocale": "en_US", "og:image:type": "image/png", "generator": "Hugo 0.74.0", "og:site_name": "Harbor", "twitter:site": "@project_harbor", "twitter:creator": "@project_harbor", "og:title": "Harbor &ndash; Configure OIDC Provider Authentication", "scrapeId": "49a5795c-1431-4809-9d12-83f097bd8e12", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/configure-authentication/oidc-auth", "url": "https://goharbor.io/docs/2.12.0/administration/configure-authentication/oidc-auth/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I log in to harbor via an oidc provider in harbor-2-12-0?\n\nAssistant: To log in to harbor via an oidc provider in harbor-2-12-0, here's what you do:\nWhen the Harbor system administrator has configured Harbor to authenticate via OIDC a **LOGIN WITH ${your_oidc_provider_name}** button appears on the Harbor login page.\n\n![oidc_login](https://goharbor.io/docs/2.12.0/img/oidc-login.png)\n\n**NOTE:** When Harbor is configured authentication via OIDC, the **LOGIN VIA LOCAL DB** button is for the local Harbor system administrator to log in.\n\n1. As a Harbor user, click the **LOGIN WITH ${your_oidc_provider_name}** button.\n\nThis redirects you to the OIDC Provider for authentication, after the OIDC provider has authenticated you, you are redirected back to Harbor.\n\n2. If this is the first time you are logging in to Harbor with OIDC, you will be onboarded to Harbor so that you have a user record in Harbor’s database, which is used when adding you to projects, assigning roles, and so on. The flow of this process depends on the configuration:\n1. If the option **Automatic onboarding** is not checked, a dialog will be displayed for specifying a user name for Harbor to associate with your OIDC username.\n\n      ![Specify Harbor username for OIDC](https://goharbor.io/docs/2.12.0/img/oidc-onboard-dlg.png)\n\n      If the username is already taken, you are prompted to choose another one.\n2. If the option **Automatic onboarding** is checked, you will not be prompted to set the user name, instead, Harbor will try to extract the user name from ID token via the claim set in **Username Claim** and automatically onboard the user using this username..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/configure-authentication/oidc-auth", "title": "Configure OIDC Provider Authentication", "description": "This page covers the configuration of OpenID Connect (OIDC) authentication for Harbor, including setup instructions and user onboarding processes.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 02:56:41", "type": "section_detail", "page_metadata": {"viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:url": "https://goharbor.io/docs/2.12.0/administration/configure-authentication/oidc-auth/", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:image:alt": "Harbor &ndash; Configure OIDC Provider Authentication project logo", "title": "\n      \nHarbor docs | Configure OIDC Provider Authentication\n\n    ", "favicon": "https://goharbor.io/favicon.svg", "og:type": ["documentation", "article"], "og:locale": "en_US", "twitter:card": "summary", "ogSiteName": "Harbor", "ogTitle": "Harbor &ndash; Configure OIDC Provider Authentication", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/configure-authentication/oidc-auth/", "ogLocale": "en_US", "og:image:type": "image/png", "generator": "Hugo 0.74.0", "og:site_name": "Harbor", "twitter:site": "@project_harbor", "twitter:creator": "@project_harbor", "og:title": "Harbor &ndash; Configure OIDC Provider Authentication", "scrapeId": "49a5795c-1431-4809-9d12-83f097bd8e12", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/configure-authentication/oidc-auth", "url": "https://goharbor.io/docs/2.12.0/administration/configure-authentication/oidc-auth/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I using oidc from the docker or helm cli in harbor-2-12-0?\n\nAssistant: To using oidc from the docker or helm cli in harbor-2-12-0, here's what you do:\nAfter you have authenticated via OIDC and logged into the Harbor interface for the first time, you can use the Docker or Helm CLI to access Harbor.\n\nThe Docker and Helm CLIs cannot handle redirection for OIDC, so Harbor provides a CLI secret for use when logging in from Docker or Helm. This is only available when Harbor uses OIDC authentication.\n\n1. Log in to Harbor with an OIDC user account.\n\n2. Click your username at the top of the screen and select **User Profile**.\n\n![Access user profile](https://goharbor.io/docs/2.12.0/img/user-profile.png)\n\n3. Click the clipboard icon to copy the CLI secret associated with your account.\n\n![Copy CLI secret](https://goharbor.io/docs/2.12.0/img/profile-dlg.png)\n\n4. Optionally click the **…** icon in your user profile to display buttons for automatically generating or manually creating a new CLI secret.\n\n![Copy CLI secret](https://goharbor.io/docs/2.12.0/img/generate-create-new-secret.png)\n\nA user can only have one CLI secret, so when a new secret is generated or create, the old one becomes invalid.\n\n5. If you generated a new CLI secret, click the clipboard icon to copy it.\n\nYou can now use your CLI secret as the password when logging in to Harbor from the Docker or Helm CLI.\n\n```\ndocker login -u testuser -p cli_secret jt-dev.local.goharbor.io\n```\n\nThe CLI secret is associated with the OIDC ID token. Harbor will try to refresh the token, so the CLI secret will be valid after the ID token expires. However, if the OIDC Provider does not provide a refresh token or the refresh fails, the CLI secret becomes invalid. In this case, log out and log back in to Harbor via your OIDC provider so that Harbor can get a new ID token. The CLI secret will then work again..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/configure-authentication/oidc-auth", "title": "Configure OIDC Provider Authentication", "description": "This page covers the configuration of OpenID Connect (OIDC) authentication for Harbor, including setup instructions and user onboarding processes.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 02:56:41", "type": "section_detail", "page_metadata": {"viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:url": "https://goharbor.io/docs/2.12.0/administration/configure-authentication/oidc-auth/", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:image:alt": "Harbor &ndash; Configure OIDC Provider Authentication project logo", "title": "\n      \nHarbor docs | Configure OIDC Provider Authentication\n\n    ", "favicon": "https://goharbor.io/favicon.svg", "og:type": ["documentation", "article"], "og:locale": "en_US", "twitter:card": "summary", "ogSiteName": "Harbor", "ogTitle": "Harbor &ndash; Configure OIDC Provider Authentication", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/configure-authentication/oidc-auth/", "ogLocale": "en_US", "og:image:type": "image/png", "generator": "Hugo 0.74.0", "og:site_name": "Harbor", "twitter:site": "@project_harbor", "twitter:creator": "@project_harbor", "og:title": "Harbor &ndash; Configure OIDC Provider Authentication", "scrapeId": "49a5795c-1431-4809-9d12-83f097bd8e12", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/configure-authentication/oidc-auth", "url": "https://goharbor.io/docs/2.12.0/administration/configure-authentication/oidc-auth/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you give me some code examples for Configure OIDC Provider Authentication in harbor-2-12-0?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Docker Login Command**:\n\n```yaml\ndocker login -u testuser -p cli_secret jt-dev.local.goharbor.io\n```\n\nThis snippet shows you how to docker login command, which is an important aspect of configure oidc provider authentication.\n\n", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/configure-authentication/oidc-auth", "title": "Configure OIDC Provider Authentication", "description": "This page covers the configuration of OpenID Connect (OIDC) authentication for Harbor, including setup instructions and user onboarding processes.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 02:56:41", "type": "code_examples", "page_metadata": {"viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:url": "https://goharbor.io/docs/2.12.0/administration/configure-authentication/oidc-auth/", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:image:alt": "Harbor &ndash; Configure OIDC Provider Authentication project logo", "title": "\n      \nHarbor docs | Configure OIDC Provider Authentication\n\n    ", "favicon": "https://goharbor.io/favicon.svg", "og:type": ["documentation", "article"], "og:locale": "en_US", "twitter:card": "summary", "ogSiteName": "Harbor", "ogTitle": "Harbor &ndash; Configure OIDC Provider Authentication", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/configure-authentication/oidc-auth/", "ogLocale": "en_US", "og:image:type": "image/png", "generator": "Hugo 0.74.0", "og:site_name": "Harbor", "twitter:site": "@project_harbor", "twitter:creator": "@project_harbor", "og:title": "Harbor &ndash; Configure OIDC Provider Authentication", "scrapeId": "49a5795c-1431-4809-9d12-83f097bd8e12", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/configure-authentication/oidc-auth", "url": "https://goharbor.io/docs/2.12.0/administration/configure-authentication/oidc-auth/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: What are some tips for using Configure OIDC Provider Authentication in harbor-2-12-0 effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nYou cannot change the authentication mode from database to OIDC if there are local users other than `admin` in the database.\n\nSelf-registration, creating users, deleting users, changing passwords, and resetting passwords are not supported in OIDC authentication mode.\n\nEnsure the Redirect URI configured in your OIDC provider matches the one displayed in Harbor.\n\nIf using a self-signed or untrusted certificate, uncheck **Verify Certificate**.\n\nFor automatic onboarding, ensure the **Username Claim** is included in the ID token returned by the OIDC provider.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/configure-authentication/oidc-auth", "title": "Configure OIDC Provider Authentication", "description": "This page covers the configuration of OpenID Connect (OIDC) authentication for Harbor, including setup instructions and user onboarding processes.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 02:56:41", "type": "best_practices", "page_metadata": {"viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:url": "https://goharbor.io/docs/2.12.0/administration/configure-authentication/oidc-auth/", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:image:alt": "Harbor &ndash; Configure OIDC Provider Authentication project logo", "title": "\n      \nHarbor docs | Configure OIDC Provider Authentication\n\n    ", "favicon": "https://goharbor.io/favicon.svg", "og:type": ["documentation", "article"], "og:locale": "en_US", "twitter:card": "summary", "ogSiteName": "Harbor", "ogTitle": "Harbor &ndash; Configure OIDC Provider Authentication", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/configure-authentication/oidc-auth/", "ogLocale": "en_US", "og:image:type": "image/png", "generator": "Hugo 0.74.0", "og:site_name": "Harbor", "twitter:site": "@project_harbor", "twitter:creator": "@project_harbor", "og:title": "Harbor &ndash; Configure OIDC Provider Authentication", "scrapeId": "49a5795c-1431-4809-9d12-83f097bd8e12", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/configure-authentication/oidc-auth", "url": "https://goharbor.io/docs/2.12.0/administration/configure-authentication/oidc-auth/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you explain what Configure Project Quotas is in harbor-2-12-0?\n\nAssistant: Sure, I'd be happy to explain Configure Project Quotas in harbor-2-12-0.\n\n# Configure Project Quotas\n\nThis page covers how to set and manage quotas on projects in Harbor to control resource usage.Here's a quick rundown of what this is about:\n\n## Setting Global Default Quotas\n\n1. Select the **Project Quotas** view.\n\n![Project quotas](https://goharbor.io/docs/2.12.0/img/project-quota1.png)\n\n2. To set global default quotas on all projects, click **Edit**.\n\n![Project quotas](https://goharbor.io/docs/2.12.0/img/project-quota2.png)\n\n3. For **Default storage consumption**, enter the maximum quantity of storage that any project can consume, selecting `MiB`, `GiB`, or `TiB` from the drop-down menu, or enter `-1` to set the default to unlimited.\n\n![Project quotas](https://goharbor.io/docs/2.12.0/img/project-quota3.png)\n\n4. Click **OK**.\n\n## Setting Individual Project Quotas\n\n1. To set quotas on an individual project, select the project and then click **Edit**.\n\n![Project quotas](https://goharbor.io/docs/2.12.0/img/project-quota4.png)\n\n2. For **Default storage consumption**, enter the maximum quantity of storage that this individual project can consume, selecting `MiB`, `GiB`, or `TiB` from the drop-down menu.\n\nAfter you set quotas, you can see how much of their quotas each project has consumed.\n\n![Project quotas](https://goharbor.io/docs/2.12.0/img/project-quota5.png)\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/configure-project-quotas", "title": "Configure Project Quotas", "description": "This page covers how to set and manage quotas on projects in Harbor to control resource usage.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 02:56:48", "type": "overview", "page_metadata": {"twitter:creator": "@project_harbor", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/configure-project-quotas/", "ogSiteName": "Harbor", "og:locale": "en_US", "favicon": "https://goharbor.io/favicon.svg", "og:image:alt": "Harbor &ndash; Configure Project Quotas project logo", "og:image:type": "image/png", "og:site_name": "Harbor", "twitter:site": "@project_harbor", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:type": ["documentation", "article"], "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "title": "\n      \nHarbor docs | Configure Project Quotas\n\n    ", "ogTitle": "Harbor &ndash; Configure Project Quotas", "ogLocale": "en_US", "og:url": "https://goharbor.io/docs/2.12.0/administration/configure-project-quotas/", "twitter:card": "summary", "generator": "Hugo 0.74.0", "og:title": "Harbor &ndash; Configure Project Quotas", "scrapeId": "85e4799f-a468-4bd3-b522-521900582a41", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/configure-project-quotas", "url": "https://goharbor.io/docs/2.12.0/administration/configure-project-quotas/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I setting global default quotas in harbor-2-12-0?\n\nAssistant: To setting global default quotas in harbor-2-12-0, here's what you do:\n1. Select the **Project Quotas** view.\n\n![Project quotas](https://goharbor.io/docs/2.12.0/img/project-quota1.png)\n\n2. To set global default quotas on all projects, click **Edit**.\n\n![Project quotas](https://goharbor.io/docs/2.12.0/img/project-quota2.png)\n\n3. For **Default storage consumption**, enter the maximum quantity of storage that any project can consume, selecting `MiB`, `GiB`, or `TiB` from the drop-down menu, or enter `-1` to set the default to unlimited.\n\n![Project quotas](https://goharbor.io/docs/2.12.0/img/project-quota3.png)\n\n4. Click **OK**..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/configure-project-quotas", "title": "Configure Project Quotas", "description": "This page covers how to set and manage quotas on projects in Harbor to control resource usage.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 02:56:48", "type": "section_detail", "page_metadata": {"twitter:creator": "@project_harbor", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/configure-project-quotas/", "ogSiteName": "Harbor", "og:locale": "en_US", "favicon": "https://goharbor.io/favicon.svg", "og:image:alt": "Harbor &ndash; Configure Project Quotas project logo", "og:image:type": "image/png", "og:site_name": "Harbor", "twitter:site": "@project_harbor", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:type": ["documentation", "article"], "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "title": "\n      \nHarbor docs | Configure Project Quotas\n\n    ", "ogTitle": "Harbor &ndash; Configure Project Quotas", "ogLocale": "en_US", "og:url": "https://goharbor.io/docs/2.12.0/administration/configure-project-quotas/", "twitter:card": "summary", "generator": "Hugo 0.74.0", "og:title": "Harbor &ndash; Configure Project Quotas", "scrapeId": "85e4799f-a468-4bd3-b522-521900582a41", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/configure-project-quotas", "url": "https://goharbor.io/docs/2.12.0/administration/configure-project-quotas/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I setting individual project quotas in harbor-2-12-0?\n\nAssistant: To setting individual project quotas in harbor-2-12-0, here's what you do:\n1. To set quotas on an individual project, select the project and then click **Edit**.\n\n![Project quotas](https://goharbor.io/docs/2.12.0/img/project-quota4.png)\n\n2. For **Default storage consumption**, enter the maximum quantity of storage that this individual project can consume, selecting `MiB`, `GiB`, or `TiB` from the drop-down menu.\n\nAfter you set quotas, you can see how much of their quotas each project has consumed.\n\n![Project quotas](https://goharbor.io/docs/2.12.0/img/project-quota5.png).\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/configure-project-quotas", "title": "Configure Project Quotas", "description": "This page covers how to set and manage quotas on projects in Harbor to control resource usage.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 02:56:48", "type": "section_detail", "page_metadata": {"twitter:creator": "@project_harbor", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/configure-project-quotas/", "ogSiteName": "Harbor", "og:locale": "en_US", "favicon": "https://goharbor.io/favicon.svg", "og:image:alt": "Harbor &ndash; Configure Project Quotas project logo", "og:image:type": "image/png", "og:site_name": "Harbor", "twitter:site": "@project_harbor", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:type": ["documentation", "article"], "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "title": "\n      \nHarbor docs | Configure Project Quotas\n\n    ", "ogTitle": "Harbor &ndash; Configure Project Quotas", "ogLocale": "en_US", "og:url": "https://goharbor.io/docs/2.12.0/administration/configure-project-quotas/", "twitter:card": "summary", "generator": "Hugo 0.74.0", "og:title": "Harbor &ndash; Configure Project Quotas", "scrapeId": "85e4799f-a468-4bd3-b522-521900582a41", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/configure-project-quotas", "url": "https://goharbor.io/docs/2.12.0/administration/configure-project-quotas/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: What are some tips for using Configure Project Quotas in harbor-2-12-0 effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nDefault quotas apply to projects created after the default quota is set or changed.\n\nPer-project quotas take precedence over global default quotas.\n\nBy default, all projects have unlimited quotas for storage use.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/configure-project-quotas", "title": "Configure Project Quotas", "description": "This page covers how to set and manage quotas on projects in Harbor to control resource usage.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 02:56:48", "type": "best_practices", "page_metadata": {"twitter:creator": "@project_harbor", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/configure-project-quotas/", "ogSiteName": "Harbor", "og:locale": "en_US", "favicon": "https://goharbor.io/favicon.svg", "og:image:alt": "Harbor &ndash; Configure Project Quotas project logo", "og:image:type": "image/png", "og:site_name": "Harbor", "twitter:site": "@project_harbor", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:type": ["documentation", "article"], "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "title": "\n      \nHarbor docs | Configure Project Quotas\n\n    ", "ogTitle": "Harbor &ndash; Configure Project Quotas", "ogLocale": "en_US", "og:url": "https://goharbor.io/docs/2.12.0/administration/configure-project-quotas/", "twitter:card": "summary", "generator": "Hugo 0.74.0", "og:title": "Harbor &ndash; Configure Project Quotas", "scrapeId": "85e4799f-a468-4bd3-b522-521900582a41", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/configure-project-quotas", "url": "https://goharbor.io/docs/2.12.0/administration/configure-project-quotas/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you explain what Connect Harbor to Additional Vulnerability Scanners is in harbor-2-12-0?\n\nAssistant: Sure, I'd be happy to explain Connect Harbor to Additional Vulnerability Scanners in harbor-2-12-0.\n\n# Connect Harbor to Additional Vulnerability Scanners\n\nThis page provides instructions on how to connect Harbor to additional vulnerability scanners, including installation, configuration, and connection testing.Here's a quick rundown of what this is about:\n\n## Connecting Harbor to Additional Vulnerability Scanners\n\nTo connect Harbor to additional vulnerability scanners, you must install and configure an instance of the additional scanner according to the scanner vendor’s requirements. The scanner must expose an API endpoint to allow Harbor to trigger the scan process or get reports. You can deploy multiple different scanners, and multiple instances of the same type of scanner.\n\n01. Log in to the Harbor interface with an account that has Harbor system administrator privileges.\n\n02. Expand **Administration**, and select **Interrogation Services**.\n\n03. Click the **New Scanner** button.\n\n04. Enter the information to identify the scanner.\n    - A unique name for this scanner instance, to display in the Harbor interface.\n    - An optional description of this scanner instance.\n    - The address of the API endpoint that the scanner exposes to Harbor.\n\n05. Select how to connect to the scanner from the **Authorization** drop-down menu.\n    - **None**: The scanner allows all connections without any security.\n    - **Basic**: Enter a username and password for an account that can connect to the scanner.\n    - **Bearer**: Paste the contents of a bearer token in the **Token** text box.\n    - **APIKey**: Paste the contents of an API key for the scanner in the **APIKey** text box.\n06. Optionally select **Skip certificate verification** if the scanner uses a self-signed or untrusted certificate.\n07. Optionally select **Use internal registry address** if the scanner should connect to Harbor using an internal network address rather than its external URL.\n    **NOTE**: To use this option, the scanner must be deployed in a network that allows the scanner to reach Harbor via Harbor’s internal network.\n08. Click **Test Connection** to make sure that Harbor can connect successfully to the scanner.\n09. Click **Add** to connect Harbor to the scanner.\n10. Optionally repeat the procedure to add more scanners.\n11. If you configure multiple scanners, select one and click **Set as Default** to designate it as the default scanner.\n\n## Vulnerability Metadata\n\nVulnerability scanners depend on the vulnerability metadata to complete the analysis process. After the first initial installation, the vulnerability scanner automatically starts to update the metadata database from different vulnerability repositories. The database update might take a while, based on the data size and network connection.\n\nDepending on the scanner that you use, once the database is ready, the timestamp of the last update is shown in the **Interrogation Services** > **Vulnerability** tab. Currently, only Trivy, Clair and Anchore provide timestamp information.\n\nUntil the database has been fully populated, the timestamp is replaced by a warning symbol. When the database is ready, you can scan images individually or scan all images across all projects.\n\nIf your Harbor instance is not connected to the external internet, you must manually update the vulnerability metadata. For information about how to update Clair manually, see [Import Vulnerability Data to an Offline Harbor instance](https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/import-vulnerability-data/).\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/pluggable-scanners", "title": "Connect Harbor to Additional Vulnerability Scanners", "description": "This page provides instructions on how to connect Harbor to additional vulnerability scanners, including installation, configuration, and connection testing.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 02:57:00", "type": "overview", "page_metadata": {"twitter:site": "@project_harbor", "og:type": ["documentation", "article"], "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/pluggable-scanners/", "twitter:creator": "@project_harbor", "twitter:card": "summary", "og:title": "Harbor &ndash; Connect Harbor to Additional Vulnerability Scanners", "favicon": "https://goharbor.io/favicon.svg", "og:image:type": "image/png", "generator": "Hugo 0.74.0", "title": "\n      \nHarbor docs | Connect Harbor to Additional Vulnerability Scanners\n\n    ", "og:locale": "en_US", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogLocale": "en_US", "og:site_name": "Harbor", "og:image:alt": "Harbor &ndash; Connect Harbor to Additional Vulnerability Scanners project logo", "og:url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/pluggable-scanners/", "ogTitle": "Harbor &ndash; Connect Harbor to Additional Vulnerability Scanners", "ogSiteName": "Harbor", "scrapeId": "9bdc0002-ddff-4819-b877-19d68b27e182", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/pluggable-scanners", "url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/pluggable-scanners/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I connecting harbor to additional vulnerability scanners in harbor-2-12-0?\n\nAssistant: To connecting harbor to additional vulnerability scanners in harbor-2-12-0, here's what you do:\nTo connect Harbor to additional vulnerability scanners, you must install and configure an instance of the additional scanner according to the scanner vendor’s requirements. The scanner must expose an API endpoint to allow Harbor to trigger the scan process or get reports. You can deploy multiple different scanners, and multiple instances of the same type of scanner.\n\n01. Log in to the Harbor interface with an account that has Harbor system administrator privileges.\n\n02. Expand **Administration**, and select **Interrogation Services**.\n\n03. Click the **New Scanner** button.\n\n04. Enter the information to identify the scanner.\n    - A unique name for this scanner instance, to display in the Harbor interface.\n    - An optional description of this scanner instance.\n    - The address of the API endpoint that the scanner exposes to Harbor.\n\n05. Select how to connect to the scanner from the **Authorization** drop-down menu.\n    - **None**: The scanner allows all connections without any security.\n    - **Basic**: Enter a username and password for an account that can connect to the scanner.\n    - **Bearer**: Paste the contents of a bearer token in the **Token** text box.\n    - **APIKey**: Paste the contents of an API key for the scanner in the **APIKey** text box.\n06. Optionally select **Skip certificate verification** if the scanner uses a self-signed or untrusted certificate.\n07. Optionally select **Use internal registry address** if the scanner should connect to Harbor using an internal network address rather than its external URL.\n    **NOTE**: To use this option, the scanner must be deployed in a network that allows the scanner to reach Harbor via Harbor’s internal network.\n08. Click **Test Connection** to make sure that Harbor can connect successfully to the scanner.\n09. Click **Add** to connect Harbor to the scanner.\n10. Optionally repeat the procedure to add more scanners.\n11. If you configure multiple scanners, select one and click **Set as Default** to designate it as the default scanner..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/pluggable-scanners", "title": "Connect Harbor to Additional Vulnerability Scanners", "description": "This page provides instructions on how to connect Harbor to additional vulnerability scanners, including installation, configuration, and connection testing.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 02:57:00", "type": "section_detail", "page_metadata": {"twitter:site": "@project_harbor", "og:type": ["documentation", "article"], "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/pluggable-scanners/", "twitter:creator": "@project_harbor", "twitter:card": "summary", "og:title": "Harbor &ndash; Connect Harbor to Additional Vulnerability Scanners", "favicon": "https://goharbor.io/favicon.svg", "og:image:type": "image/png", "generator": "Hugo 0.74.0", "title": "\n      \nHarbor docs | Connect Harbor to Additional Vulnerability Scanners\n\n    ", "og:locale": "en_US", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogLocale": "en_US", "og:site_name": "Harbor", "og:image:alt": "Harbor &ndash; Connect Harbor to Additional Vulnerability Scanners project logo", "og:url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/pluggable-scanners/", "ogTitle": "Harbor &ndash; Connect Harbor to Additional Vulnerability Scanners", "ogSiteName": "Harbor", "scrapeId": "9bdc0002-ddff-4819-b877-19d68b27e182", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/pluggable-scanners", "url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/pluggable-scanners/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I vulnerability metadata in harbor-2-12-0?\n\nAssistant: To vulnerability metadata in harbor-2-12-0, here's what you do:\nVulnerability scanners depend on the vulnerability metadata to complete the analysis process. After the first initial installation, the vulnerability scanner automatically starts to update the metadata database from different vulnerability repositories. The database update might take a while, based on the data size and network connection.\n\nDepending on the scanner that you use, once the database is ready, the timestamp of the last update is shown in the **Interrogation Services** > **Vulnerability** tab. Currently, only Trivy, Clair and Anchore provide timestamp information.\n\nUntil the database has been fully populated, the timestamp is replaced by a warning symbol. When the database is ready, you can scan images individually or scan all images across all projects.\n\nIf your Harbor instance is not connected to the external internet, you must manually update the vulnerability metadata. For information about how to update Clair manually, see [Import Vulnerability Data to an Offline Harbor instance](https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/import-vulnerability-data/)..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/pluggable-scanners", "title": "Connect Harbor to Additional Vulnerability Scanners", "description": "This page provides instructions on how to connect Harbor to additional vulnerability scanners, including installation, configuration, and connection testing.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 02:57:00", "type": "section_detail", "page_metadata": {"twitter:site": "@project_harbor", "og:type": ["documentation", "article"], "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/pluggable-scanners/", "twitter:creator": "@project_harbor", "twitter:card": "summary", "og:title": "Harbor &ndash; Connect Harbor to Additional Vulnerability Scanners", "favicon": "https://goharbor.io/favicon.svg", "og:image:type": "image/png", "generator": "Hugo 0.74.0", "title": "\n      \nHarbor docs | Connect Harbor to Additional Vulnerability Scanners\n\n    ", "og:locale": "en_US", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogLocale": "en_US", "og:site_name": "Harbor", "og:image:alt": "Harbor &ndash; Connect Harbor to Additional Vulnerability Scanners project logo", "og:url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/pluggable-scanners/", "ogTitle": "Harbor &ndash; Connect Harbor to Additional Vulnerability Scanners", "ogSiteName": "Harbor", "scrapeId": "9bdc0002-ddff-4819-b877-19d68b27e182", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/pluggable-scanners", "url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/pluggable-scanners/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you give me some code examples for Connect Harbor to Additional Vulnerability Scanners in harbor-2-12-0?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Scanner Configuration Example**:\n\n```yaml\n- Name: MyScanner\n- Description: A scanner for vulnerability assessment\n- API Endpoint: http://myscanner.example.com/api\n- Authorization: Basic\n- Username: admin\n- Password: password123\n```\n\nThis snippet shows you how to scanner configuration example, which is an important aspect of connect harbor to additional vulnerability scanners.\n\n", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/pluggable-scanners", "title": "Connect Harbor to Additional Vulnerability Scanners", "description": "This page provides instructions on how to connect Harbor to additional vulnerability scanners, including installation, configuration, and connection testing.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 02:57:00", "type": "code_examples", "page_metadata": {"twitter:site": "@project_harbor", "og:type": ["documentation", "article"], "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/pluggable-scanners/", "twitter:creator": "@project_harbor", "twitter:card": "summary", "og:title": "Harbor &ndash; Connect Harbor to Additional Vulnerability Scanners", "favicon": "https://goharbor.io/favicon.svg", "og:image:type": "image/png", "generator": "Hugo 0.74.0", "title": "\n      \nHarbor docs | Connect Harbor to Additional Vulnerability Scanners\n\n    ", "og:locale": "en_US", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogLocale": "en_US", "og:site_name": "Harbor", "og:image:alt": "Harbor &ndash; Connect Harbor to Additional Vulnerability Scanners project logo", "og:url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/pluggable-scanners/", "ogTitle": "Harbor &ndash; Connect Harbor to Additional Vulnerability Scanners", "ogSiteName": "Harbor", "scrapeId": "9bdc0002-ddff-4819-b877-19d68b27e182", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/pluggable-scanners", "url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/pluggable-scanners/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: What are some tips for using Connect Harbor to Additional Vulnerability Scanners in harbor-2-12-0 effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nEnsure the scanner exposes an API endpoint for Harbor to connect.\n\nUse unique names for each scanner instance to avoid confusion.\n\nTest the connection after configuring each scanner to ensure proper setup.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/pluggable-scanners", "title": "Connect Harbor to Additional Vulnerability Scanners", "description": "This page provides instructions on how to connect Harbor to additional vulnerability scanners, including installation, configuration, and connection testing.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 02:57:00", "type": "best_practices", "page_metadata": {"twitter:site": "@project_harbor", "og:type": ["documentation", "article"], "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/pluggable-scanners/", "twitter:creator": "@project_harbor", "twitter:card": "summary", "og:title": "Harbor &ndash; Connect Harbor to Additional Vulnerability Scanners", "favicon": "https://goharbor.io/favicon.svg", "og:image:type": "image/png", "generator": "Hugo 0.74.0", "title": "\n      \nHarbor docs | Connect Harbor to Additional Vulnerability Scanners\n\n    ", "og:locale": "en_US", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogLocale": "en_US", "og:site_name": "Harbor", "og:image:alt": "Harbor &ndash; Connect Harbor to Additional Vulnerability Scanners project logo", "og:url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/pluggable-scanners/", "ogTitle": "Harbor &ndash; Connect Harbor to Additional Vulnerability Scanners", "ogSiteName": "Harbor", "scrapeId": "9bdc0002-ddff-4819-b877-19d68b27e182", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/pluggable-scanners", "url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/pluggable-scanners/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you explain what Create User Accounts in Database Mode is in harbor-2-12-0?\n\nAssistant: Sure, I'd be happy to explain Create User Accounts in Database Mode in harbor-2-12-0.\n\n# Create User Accounts in Database Mode\n\nIn database authentication mode, the Harbor system administrator creates user accounts manually.Here's a quick rundown of what this is about:\n\n## Creating User Accounts\n\n1. Log in to the Harbor interface with an account that has Harbor system administrator privileges.\n\n2. Under **Administration**, go to **Users**.\n\n3. Click **New User**.\n\n4. Enter information about the new user.\n\n   - The username must be unique in the Harbor system\n   - The email address must be unique in the Harbor system\n   - The password must contain at least 8 characters with 1 lowercase letter, 1 uppercase letter and 1 numeric character\n\nIf users forget their password, they need to ask the administrator to [reset their password](https://goharbor.io/docs/2.12.0/administration/managing-users/reset-user-password/)\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/managing-users/create-users-db", "title": "Create User Accounts in Database Mode", "description": "In database authentication mode, the Harbor system administrator creates user accounts manually.", "has_code_examples": false, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 02:57:09", "type": "overview", "page_metadata": {"og:url": "https://goharbor.io/docs/2.12.0/administration/managing-users/create-users-db/", "title": "\n      \nHarbor docs | Create User Accounts in Database Mode\n\n    ", "generator": "Hugo 0.74.0", "og:image:alt": "Harbor &ndash; Create User Accounts in Database Mode project logo", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/managing-users/create-users-db/", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogSiteName": "Harbor", "ogLocale": "en_US", "twitter:creator": "@project_harbor", "og:locale": "en_US", "og:type": ["documentation", "article"], "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "ogTitle": "Harbor &ndash; Create User Accounts in Database Mode", "og:title": "Harbor &ndash; Create User Accounts in Database Mode", "og:site_name": "Harbor", "twitter:card": "summary", "og:image:type": "image/png", "twitter:site": "@project_harbor", "favicon": "https://goharbor.io/favicon.svg", "scrapeId": "60b6b288-dffb-4c4e-8b24-3663c50c9b6a", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/managing-users/create-users-db", "url": "https://goharbor.io/docs/2.12.0/administration/managing-users/create-users-db/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I creating user accounts in harbor-2-12-0?\n\nAssistant: To creating user accounts in harbor-2-12-0, here's what you do:\n1. Log in to the Harbor interface with an account that has Harbor system administrator privileges.\n\n2. Under **Administration**, go to **Users**.\n\n3. Click **New User**.\n\n4. Enter information about the new user.\n\n   - The username must be unique in the Harbor system\n   - The email address must be unique in the Harbor system\n   - The password must contain at least 8 characters with 1 lowercase letter, 1 uppercase letter and 1 numeric character\n\nIf users forget their password, they need to ask the administrator to [reset their password](https://goharbor.io/docs/2.12.0/administration/managing-users/reset-user-password/).\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/managing-users/create-users-db", "title": "Create User Accounts in Database Mode", "description": "In database authentication mode, the Harbor system administrator creates user accounts manually.", "has_code_examples": false, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 02:57:09", "type": "section_detail", "page_metadata": {"og:url": "https://goharbor.io/docs/2.12.0/administration/managing-users/create-users-db/", "title": "\n      \nHarbor docs | Create User Accounts in Database Mode\n\n    ", "generator": "Hugo 0.74.0", "og:image:alt": "Harbor &ndash; Create User Accounts in Database Mode project logo", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/managing-users/create-users-db/", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogSiteName": "Harbor", "ogLocale": "en_US", "twitter:creator": "@project_harbor", "og:locale": "en_US", "og:type": ["documentation", "article"], "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "ogTitle": "Harbor &ndash; Create User Accounts in Database Mode", "og:title": "Harbor &ndash; Create User Accounts in Database Mode", "og:site_name": "Harbor", "twitter:card": "summary", "og:image:type": "image/png", "twitter:site": "@project_harbor", "favicon": "https://goharbor.io/favicon.svg", "scrapeId": "60b6b288-dffb-4c4e-8b24-3663c50c9b6a", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/managing-users/create-users-db", "url": "https://goharbor.io/docs/2.12.0/administration/managing-users/create-users-db/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: What are some tips for using Create User Accounts in Database Mode in harbor-2-12-0 effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nThe username must be unique in the Harbor system\n\nThe email address must be unique in the Harbor system\n\nThe password must contain at least 8 characters with 1 lowercase letter, 1 uppercase letter and 1 numeric character\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/managing-users/create-users-db", "title": "Create User Accounts in Database Mode", "description": "In database authentication mode, the Harbor system administrator creates user accounts manually.", "has_code_examples": false, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 02:57:09", "type": "best_practices", "page_metadata": {"og:url": "https://goharbor.io/docs/2.12.0/administration/managing-users/create-users-db/", "title": "\n      \nHarbor docs | Create User Accounts in Database Mode\n\n    ", "generator": "Hugo 0.74.0", "og:image:alt": "Harbor &ndash; Create User Accounts in Database Mode project logo", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/managing-users/create-users-db/", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogSiteName": "Harbor", "ogLocale": "en_US", "twitter:creator": "@project_harbor", "og:locale": "en_US", "og:type": ["documentation", "article"], "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "ogTitle": "Harbor &ndash; Create User Accounts in Database Mode", "og:title": "Harbor &ndash; Create User Accounts in Database Mode", "og:site_name": "Harbor", "twitter:card": "summary", "og:image:type": "image/png", "twitter:site": "@project_harbor", "favicon": "https://goharbor.io/favicon.svg", "scrapeId": "60b6b288-dffb-4c4e-8b24-3663c50c9b6a", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/managing-users/create-users-db", "url": "https://goharbor.io/docs/2.12.0/administration/managing-users/create-users-db/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you explain what Creating a Replication Rule is in harbor-2-12-0?\n\nAssistant: Sure, I'd be happy to explain Creating a Replication Rule in harbor-2-12-0.\n\n# Creating a Replication Rule\n\nThis page provides instructions on how to create a replication rule in Harbor, including prerequisites, steps, and options available during the configuration.Here's a quick rundown of what this is about:\n\n## Prerequisites\n\nA replication endpoint must exist before you create a replication rule. To create an endpoint, follow the instructions in [Creating Replication Endpoints](https://goharbor.io/docs/2.12.0/administration/configuring-replication/create-replication-endpoints/).\n\n## Important Notes\n\nBecause of major API changes in the v2.0 release to support [OCI](https://github.com/opencontainers/distribution-spec). You **can not** replicate from Harbor v1.x to v2.0 and later, and you **can not** replicate artifacts with **manifest list** from v2.0 and later to v1.x.\n\n## Steps to Create a Replication Rule\n\n01. Log in to the Harbor interface with an account that has Harbor system administrator privileges.\n\n02. Expand **Administration**, and select **Replications**.\n\n03. Click **New Replication Rule**.\n\n04. Provide a name and description for the replication rule.\n\n05. Select **Push-based** or **Pull-based** replication, depending on whether you want to replicate artifacts to or from the remote registry.\n\n06. If you are creating a Pull-based rule, use the **Source Registry** drop-down menu to select from the configured replication endpoints.\n\n07. For **Source resource filter**, identify the artifacts to replicate.\n\n    - **Name**: Replicate resources with a given name by entering an artifact name or fragment.\n    - **Tag**: Replicate resources with a given tag by entering a tag name or fragment. You can also specify matching/excluding for this filter.\n    - **Label**: Replicate resources with a given label by using the drop-down menu to select from the available labels. You can also specify matching/excluding for this filter.\n    - **Resource**: Replicate images, artifacts or all. Artifacts contain images and other OCI compatible resources.\n\nThe name filter and tag filters support the following patterns:\n\n    - **\\***: Matches any sequence of non-separator characters `/`.\n    - **\\*\\***: Matches any sequence of characters, including path separators `/`. Note that the doublestar must appear as a path component by itself. A pattern such as /path\\*\\* is invalid and will be treated the same as /path\\*, but /path\\*/\\*\\* should achieve the desired result.\n    - **?**: Matches any single non-separator character `/`.\n    - **{alt1,…}**: Matches a sequence of characters if one of the comma-separated alternatives matches.\n\n**NOTE:** You must add `library` if you want to replicate the official artifacts of Docker Hub. For example, `library/hello-world` matches the official hello-world artifacts.\n\n08. If you are creating a Push-based replication rule, use the **Destination Registry** drop-down menu to select from the configured replication endpoints.\n\n09. For **Destination Namespace**, enter the name of the namespace in which to replicate resources in the text box. If you do not enter a namespace, resources are placed in the same namespace as in the source registry.\n\n10. Use the Destination Flattening drop-down to select how you want Harbor treat to image hierarchy when replicating images. Depending on what you select, Harbor will remove the same number of levels from the image’s hierarchy, starting from the left, when replicating an image into your chosen destination namespace.\n    - **Flatten All Levels**: Remove all hierarchy from the replicated image. For example, `a/b/c/d/img` replicates to `namespace/img`. This is the default behavior of replication in v2.2 and before. All replication rules created before upgrading to v2.3.0 will default to using this flattening option after upgrade.\n    - **No Flattening**: Use the same hierarchy when replicating an image. For example, `a/b/c/d/img` replicates to `namespace/a/b/c/d/img`.\n    - **Flattening 1 level**: Remove one level from the image hierarchy. For example, `a/b/c/d/img` replicates to `namespace/b/c/d/img`. This is the default selection.\n    - **Flattening 2 levels**: Remove two levels from the image hierarchy. For example, `a/b/c/d/img` replicates to `namespace/c/d/img`\n    - **Flattening 3 levels**: Remove three levels from the image hierarchy. For example, `a/b/c/d/img` replicates to `namespace/d/img`\n\n11. Use the Trigger Mode drop-down menu to select how and when to run the rule.\n    - **Manual**: Replicate the resources manually when needed. **Note**: Deletion operations are not replicated.\n    - **Scheduled**: Replicate the resources periodically by defining a cron job. **Note**: Deletion operations are not replicated.\n    - **Event Based**: When a new resource is pushed to the project, or an artifact is retagged, it is replicated to the remote registry immediately. If you select the **Delete remote resources when locally deleted**, if you delete an artifact, it is automatically deleted from the replication target.\n\n12. Optionally set the maximum network bandwidth for each replication task, please pay attention to the number of concurrent executions, the default value is 10 for each job-service pod. The unit is kilo bytes per second, and -1 stands for unlimited bandwidth.\n\n13. Optionally select the Override checkbox to force replicated resources to replace resources at the destination with the same name.\n\n14. Optionally select the Copy by chunk checkbox to enable the artifact blobs copied by chunks, currently only supported for source and destination registry are both harbor, but you can enable this by calling harbor API manually for other type registries.\n\n15. Click **Save** to create the replication rule.\n\n## What to Do Next\n\nAfter you create a replication rule, see [Running Replication Manually](https://goharbor.io/docs/2.12.0/administration/configuring-replication/manage-replications/).\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/configuring-replication/create-replication-rules", "title": "Creating a Replication Rule", "description": "This page provides instructions on how to create a replication rule in Harbor, including prerequisites, steps, and options available during the configuration.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 02:57:37", "type": "overview", "page_metadata": {"ogTitle": "Harbor &ndash; Creating a Replication Rule", "generator": "Hugo 0.74.0", "favicon": "https://goharbor.io/favicon.svg", "og:image:alt": "Harbor &ndash; Creating a Replication Rule project logo", "ogLocale": "en_US", "og:locale": "en_US", "twitter:creator": "@project_harbor", "og:image:type": "image/png", "ogSiteName": "Harbor", "twitter:card": "summary", "title": "\n      \nHarbor docs | Creating a Replication Rule\n\n    ", "og:title": "Harbor &ndash; Creating a Replication Rule", "og:type": ["documentation", "article"], "og:site_name": "Harbor", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/configuring-replication/create-replication-rules/", "twitter:site": "@project_harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:url": "https://goharbor.io/docs/2.12.0/administration/configuring-replication/create-replication-rules/", "scrapeId": "728687f0-4cb7-4e89-a4d9-3679da018f0f", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/configuring-replication/create-replication-rules", "url": "https://goharbor.io/docs/2.12.0/administration/configuring-replication/create-replication-rules/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I prerequisites in harbor-2-12-0?\n\nAssistant: To prerequisites in harbor-2-12-0, here's what you do:\nA replication endpoint must exist before you create a replication rule. To create an endpoint, follow the instructions in [Creating Replication Endpoints](https://goharbor.io/docs/2.12.0/administration/configuring-replication/create-replication-endpoints/)..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/configuring-replication/create-replication-rules", "title": "Creating a Replication Rule", "description": "This page provides instructions on how to create a replication rule in Harbor, including prerequisites, steps, and options available during the configuration.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 02:57:37", "type": "section_detail", "page_metadata": {"ogTitle": "Harbor &ndash; Creating a Replication Rule", "generator": "Hugo 0.74.0", "favicon": "https://goharbor.io/favicon.svg", "og:image:alt": "Harbor &ndash; Creating a Replication Rule project logo", "ogLocale": "en_US", "og:locale": "en_US", "twitter:creator": "@project_harbor", "og:image:type": "image/png", "ogSiteName": "Harbor", "twitter:card": "summary", "title": "\n      \nHarbor docs | Creating a Replication Rule\n\n    ", "og:title": "Harbor &ndash; Creating a Replication Rule", "og:type": ["documentation", "article"], "og:site_name": "Harbor", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/configuring-replication/create-replication-rules/", "twitter:site": "@project_harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:url": "https://goharbor.io/docs/2.12.0/administration/configuring-replication/create-replication-rules/", "scrapeId": "728687f0-4cb7-4e89-a4d9-3679da018f0f", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/configuring-replication/create-replication-rules", "url": "https://goharbor.io/docs/2.12.0/administration/configuring-replication/create-replication-rules/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I important notes in harbor-2-12-0?\n\nAssistant: To important notes in harbor-2-12-0, here's what you do:\nBecause of major API changes in the v2.0 release to support [OCI](https://github.com/opencontainers/distribution-spec). You **can not** replicate from Harbor v1.x to v2.0 and later, and you **can not** replicate artifacts with **manifest list** from v2.0 and later to v1.x..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/configuring-replication/create-replication-rules", "title": "Creating a Replication Rule", "description": "This page provides instructions on how to create a replication rule in Harbor, including prerequisites, steps, and options available during the configuration.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 02:57:37", "type": "section_detail", "page_metadata": {"ogTitle": "Harbor &ndash; Creating a Replication Rule", "generator": "Hugo 0.74.0", "favicon": "https://goharbor.io/favicon.svg", "og:image:alt": "Harbor &ndash; Creating a Replication Rule project logo", "ogLocale": "en_US", "og:locale": "en_US", "twitter:creator": "@project_harbor", "og:image:type": "image/png", "ogSiteName": "Harbor", "twitter:card": "summary", "title": "\n      \nHarbor docs | Creating a Replication Rule\n\n    ", "og:title": "Harbor &ndash; Creating a Replication Rule", "og:type": ["documentation", "article"], "og:site_name": "Harbor", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/configuring-replication/create-replication-rules/", "twitter:site": "@project_harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:url": "https://goharbor.io/docs/2.12.0/administration/configuring-replication/create-replication-rules/", "scrapeId": "728687f0-4cb7-4e89-a4d9-3679da018f0f", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/configuring-replication/create-replication-rules", "url": "https://goharbor.io/docs/2.12.0/administration/configuring-replication/create-replication-rules/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I steps to create a replication rule in harbor-2-12-0?\n\nAssistant: To steps to create a replication rule in harbor-2-12-0, here's what you do:\n01. Log in to the Harbor interface with an account that has Harbor system administrator privileges.\n\n02. Expand **Administration**, and select **Replications**.\n\n03. Click **New Replication Rule**.\n\n04. Provide a name and description for the replication rule.\n\n05. Select **Push-based** or **Pull-based** replication, depending on whether you want to replicate artifacts to or from the remote registry.\n\n06. If you are creating a Pull-based rule, use the **Source Registry** drop-down menu to select from the configured replication endpoints.\n\n07. For **Source resource filter**, identify the artifacts to replicate.\n\n    - **Name**: Replicate resources with a given name by entering an artifact name or fragment.\n    - **Tag**: Replicate resources with a given tag by entering a tag name or fragment. You can also specify matching/excluding for this filter.\n    - **Label**: Replicate resources with a given label by using the drop-down menu to select from the available labels. You can also specify matching/excluding for this filter.\n    - **Resource**: Replicate images, artifacts or all. Artifacts contain images and other OCI compatible resources.\n\nThe name filter and tag filters support the following patterns:\n\n    - **\\***: Matches any sequence of non-separator characters `/`.\n    - **\\*\\***: Matches any sequence of characters, including path separators `/`. Note that the doublestar must appear as a path component by itself. A pattern such as /path\\*\\* is invalid and will be treated the same as /path\\*, but /path\\*/\\*\\* should achieve the desired result.\n    - **?**: Matches any single non-separator character `/`.\n    - **{alt1,…}**: Matches a sequence of characters if one of the comma-separated alternatives matches.\n\n**NOTE:** You must add `library` if you want to replicate the official artifacts of Docker Hub. For example, `library/hello-world` matches the official hello-world artifacts.\n\n08. If you are creating a Push-based replication rule, use the **Destination Registry** drop-down menu to select from the configured replication endpoints.\n\n09. For **Destination Namespace**, enter the name of the namespace in which to replicate resources in the text box. If you do not enter a namespace, resources are placed in the same namespace as in the source registry.\n\n10. Use the Destination Flattening drop-down to select how you want Harbor treat to image hierarchy when replicating images. Depending on what you select, Harbor will remove the same number of levels from the image’s hierarchy, starting from the left, when replicating an image into your chosen destination namespace.\n    - **Flatten All Levels**: Remove all hierarchy from the replicated image. For example, `a/b/c/d/img` replicates to `namespace/img`. This is the default behavior of replication in v2.2 and before. All replication rules created before upgrading to v2.3.0 will default to using this flattening option after upgrade.\n    - **No Flattening**: Use the same hierarchy when replicating an image. For example, `a/b/c/d/img` replicates to `namespace/a/b/c/d/img`.\n    - **Flattening 1 level**: Remove one level from the image hierarchy. For example, `a/b/c/d/img` replicates to `namespace/b/c/d/img`. This is the default selection.\n    - **Flattening 2 levels**: Remove two levels from the image hierarchy. For example, `a/b/c/d/img` replicates to `namespace/c/d/img`\n    - **Flattening 3 levels**: Remove three levels from the image hierarchy. For example, `a/b/c/d/img` replicates to `namespace/d/img`\n\n11. Use the Trigger Mode drop-down menu to select how and when to run the rule.\n    - **Manual**: Replicate the resources manually when needed. **Note**: Deletion operations are not replicated.\n    - **Scheduled**: Replicate the resources periodically by defining a cron job. **Note**: Deletion operations are not replicated.\n    - **Event Based**: When a new resource is pushed to the project, or an artifact is retagged, it is replicated to the remote registry immediately. If you select the **Delete remote resources when locally deleted**, if you delete an artifact, it is automatically deleted from the replication target.\n\n12. Optionally set the maximum network bandwidth for each replication task, please pay attention to the number of concurrent executions, the default value is 10 for each job-service pod. The unit is kilo bytes per second, and -1 stands for unlimited bandwidth.\n\n13. Optionally select the Override checkbox to force replicated resources to replace resources at the destination with the same name.\n\n14. Optionally select the Copy by chunk checkbox to enable the artifact blobs copied by chunks, currently only supported for source and destination registry are both harbor, but you can enable this by calling harbor API manually for other type registries.\n\n15. Click **Save** to create the replication rule..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/configuring-replication/create-replication-rules", "title": "Creating a Replication Rule", "description": "This page provides instructions on how to create a replication rule in Harbor, including prerequisites, steps, and options available during the configuration.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 02:57:37", "type": "section_detail", "page_metadata": {"ogTitle": "Harbor &ndash; Creating a Replication Rule", "generator": "Hugo 0.74.0", "favicon": "https://goharbor.io/favicon.svg", "og:image:alt": "Harbor &ndash; Creating a Replication Rule project logo", "ogLocale": "en_US", "og:locale": "en_US", "twitter:creator": "@project_harbor", "og:image:type": "image/png", "ogSiteName": "Harbor", "twitter:card": "summary", "title": "\n      \nHarbor docs | Creating a Replication Rule\n\n    ", "og:title": "Harbor &ndash; Creating a Replication Rule", "og:type": ["documentation", "article"], "og:site_name": "Harbor", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/configuring-replication/create-replication-rules/", "twitter:site": "@project_harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:url": "https://goharbor.io/docs/2.12.0/administration/configuring-replication/create-replication-rules/", "scrapeId": "728687f0-4cb7-4e89-a4d9-3679da018f0f", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/configuring-replication/create-replication-rules", "url": "https://goharbor.io/docs/2.12.0/administration/configuring-replication/create-replication-rules/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I what to do next in harbor-2-12-0?\n\nAssistant: To what to do next in harbor-2-12-0, here's what you do:\nAfter you create a replication rule, see [Running Replication Manually](https://goharbor.io/docs/2.12.0/administration/configuring-replication/manage-replications/)..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/configuring-replication/create-replication-rules", "title": "Creating a Replication Rule", "description": "This page provides instructions on how to create a replication rule in Harbor, including prerequisites, steps, and options available during the configuration.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 02:57:37", "type": "section_detail", "page_metadata": {"ogTitle": "Harbor &ndash; Creating a Replication Rule", "generator": "Hugo 0.74.0", "favicon": "https://goharbor.io/favicon.svg", "og:image:alt": "Harbor &ndash; Creating a Replication Rule project logo", "ogLocale": "en_US", "og:locale": "en_US", "twitter:creator": "@project_harbor", "og:image:type": "image/png", "ogSiteName": "Harbor", "twitter:card": "summary", "title": "\n      \nHarbor docs | Creating a Replication Rule\n\n    ", "og:title": "Harbor &ndash; Creating a Replication Rule", "og:type": ["documentation", "article"], "og:site_name": "Harbor", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/configuring-replication/create-replication-rules/", "twitter:site": "@project_harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:url": "https://goharbor.io/docs/2.12.0/administration/configuring-replication/create-replication-rules/", "scrapeId": "728687f0-4cb7-4e89-a4d9-3679da018f0f", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/configuring-replication/create-replication-rules", "url": "https://goharbor.io/docs/2.12.0/administration/configuring-replication/create-replication-rules/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you give me some code examples for Creating a Replication Rule in harbor-2-12-0?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Bandwidth Configuration**:\n\n```yaml\nThe default chunk size is 10MB, you can override it by setting env `REPLICATION_CHUNK_SIZE` in the jobservice, the value should be united as bytes, for example `10MB=1024*1024*10` then you should set `REPLICATION_CHUNK_SIZE=10485760`.\n```\n\nThis snippet shows you how to bandwidth configuration, which is an important aspect of creating a replication rule.\n\n**Known Issue**:\n\n```yaml\nThere’s a known issue [15708](https://github.com/goharbor/harbor/issues/15708), that if you limit the bandwidth too slow, and stop the replication job, it may take quite a long time to really release the job worker to run a new job.\n```\n\nThis snippet shows you how to known issue, which is an important aspect of creating a replication rule.\n\n", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/configuring-replication/create-replication-rules", "title": "Creating a Replication Rule", "description": "This page provides instructions on how to create a replication rule in Harbor, including prerequisites, steps, and options available during the configuration.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 02:57:37", "type": "code_examples", "page_metadata": {"ogTitle": "Harbor &ndash; Creating a Replication Rule", "generator": "Hugo 0.74.0", "favicon": "https://goharbor.io/favicon.svg", "og:image:alt": "Harbor &ndash; Creating a Replication Rule project logo", "ogLocale": "en_US", "og:locale": "en_US", "twitter:creator": "@project_harbor", "og:image:type": "image/png", "ogSiteName": "Harbor", "twitter:card": "summary", "title": "\n      \nHarbor docs | Creating a Replication Rule\n\n    ", "og:title": "Harbor &ndash; Creating a Replication Rule", "og:type": ["documentation", "article"], "og:site_name": "Harbor", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/configuring-replication/create-replication-rules/", "twitter:site": "@project_harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:url": "https://goharbor.io/docs/2.12.0/administration/configuring-replication/create-replication-rules/", "scrapeId": "728687f0-4cb7-4e89-a4d9-3679da018f0f", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/configuring-replication/create-replication-rules", "url": "https://goharbor.io/docs/2.12.0/administration/configuring-replication/create-replication-rules/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: What are some tips for using Creating a Replication Rule in harbor-2-12-0 effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nYou must add `library` if you want to replicate the official artifacts of Docker Hub. For example, `library/hello-world` matches the official hello-world artifacts.\n\nChanging a label on an artifact does not trigger replication. Event-based replication is limited to pushing, retagging, and deleting artifacts.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/configuring-replication/create-replication-rules", "title": "Creating a Replication Rule", "description": "This page provides instructions on how to create a replication rule in Harbor, including prerequisites, steps, and options available during the configuration.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 02:57:37", "type": "best_practices", "page_metadata": {"ogTitle": "Harbor &ndash; Creating a Replication Rule", "generator": "Hugo 0.74.0", "favicon": "https://goharbor.io/favicon.svg", "og:image:alt": "Harbor &ndash; Creating a Replication Rule project logo", "ogLocale": "en_US", "og:locale": "en_US", "twitter:creator": "@project_harbor", "og:image:type": "image/png", "ogSiteName": "Harbor", "twitter:card": "summary", "title": "\n      \nHarbor docs | Creating a Replication Rule\n\n    ", "og:title": "Harbor &ndash; Creating a Replication Rule", "og:type": ["documentation", "article"], "og:site_name": "Harbor", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/configuring-replication/create-replication-rules/", "twitter:site": "@project_harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:url": "https://goharbor.io/docs/2.12.0/administration/configuring-replication/create-replication-rules/", "scrapeId": "728687f0-4cb7-4e89-a4d9-3679da018f0f", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/configuring-replication/create-replication-rules", "url": "https://goharbor.io/docs/2.12.0/administration/configuring-replication/create-replication-rules/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you explain what Download the Harbor Installer is in harbor-2-12-0?\n\nAssistant: Sure, I'd be happy to explain Download the Harbor Installer in harbor-2-12-0.\n\n# Download the Harbor Installer\n\nInstructions on how to download and verify the Harbor installer for both online and offline installations.Here's a quick rundown of what this is about:\n\n## Download and Unpack the Installer\n\n1. Go to the [Harbor releases page](https://github.com/goharbor/harbor/releases).\n\n2. Download the online or offline installer for the version you want to install.\n\n3. Optionally download the corresponding `*.asc` file to verify that the package is genuine.\n\nThe `*.asc` file is an OpenPGP key file. Perform the following steps to verify that the downloaded bundle is genuine.\n1. Obtain the public key for the `*.asc` file.\n\n\n      ```sh\n      gpg --keyserver hkps://keyserver.ubuntu.com --receive-keys 644FF454C0B4115C\n      ```\n\n\n      You should see the message ` public key \"Harbor-sign (The key for signing Harbor build) <jiangd@vmware.com>\" imported`\n\n2. Verify that the package is genuine by running one of the following commands.\n\n\n      - Online installer:\n\n\n        ```sh\n        gpg -v --keyserver hkps://keyserver.ubuntu.com --verify harbor-online-installer-version.tgz.asc\n        ```\n\n      - Offline installer:\n\n\n        ```sh\n        gpg -v --keyserver hkps://keyserver.ubuntu.com --verify harbor-offline-installer-version.tgz.asc\n        ```\n\n\nThe `gpg` command verifies that the bundle’s signature matches that of the `*.asc` key file. You should see confirmation that the signature is correct.\n\n```sh\ngpg: armor header: Version: GnuPG v1\ngpg: assuming signed data in 'harbor-online-installer-v2.0.2.tgz'\ngpg: Signature made Tue Jul 28 09:49:20 2020 UTC\ngpg:                using RSA key 644FF454C0B4115C\ngpg: using pgp trust model\ngpg: Good signature from \"Harbor-sign (The key for signing Harbor build) <jiangd@vmware.com>\" [unknown]\ngpg: WARNING: This key is not certified with a trusted signature!\ngpg:          There is no indication that the signature belongs to the owner.\nPrimary key fingerprint: 7722 D168 DAEC 4578 06C9  6FF9 644F F454 C0B4 115C\ngpg: binary signature, digest algorithm SHA1, key algorithm rsa4096\n```\n\n4. Use `tar` to extract the installer package:\n   - Online installer:\n\n\n     ```sh\n     bash $ tar xzvf harbor-online-installer-version.tgz\n     ```\n\n   - Offline installer:\n\n\n     ```sh\n     bash $ tar xzvf harbor-offline-installer-version.tgz\n     ```\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/install-config/download-installer", "title": "Download the Harbor Installer", "description": "Instructions on how to download and verify the Harbor installer for both online and offline installations.", "has_code_examples": true, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 02:58:27", "type": "overview", "page_metadata": {"og:site_name": "Harbor", "twitter:card": "summary", "ogLocale": "en_US", "og:title": "Harbor &ndash; Download the Harbor Installer", "ogTitle": "Harbor &ndash; Download the Harbor Installer", "ogSiteName": "Harbor", "og:type": ["documentation", "article"], "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "generator": "Hugo 0.74.0", "og:url": "https://goharbor.io/docs/2.12.0/install-config/download-installer/", "og:image:alt": "Harbor &ndash; Download the Harbor Installer project logo", "title": "\n      \nHarbor docs | Download the Harbor Installer\n\n    ", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:locale": "en_US", "ogUrl": "https://goharbor.io/docs/2.12.0/install-config/download-installer/", "og:image:type": "image/png", "twitter:site": "@project_harbor", "favicon": "https://goharbor.io/favicon.svg", "twitter:creator": "@project_harbor", "scrapeId": "5aaa2c76-5837-4eb3-a0e2-6e1a385532fe", "sourceURL": "https://goharbor.io/docs/2.12.0/install-config/download-installer", "url": "https://goharbor.io/docs/2.12.0/install-config/download-installer/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I download and unpack the installer in harbor-2-12-0?\n\nAssistant: To download and unpack the installer in harbor-2-12-0, here's what you do:\n1. Go to the [Harbor releases page](https://github.com/goharbor/harbor/releases).\n\n2. Download the online or offline installer for the version you want to install.\n\n3. Optionally download the corresponding `*.asc` file to verify that the package is genuine.\n\nThe `*.asc` file is an OpenPGP key file. Perform the following steps to verify that the downloaded bundle is genuine.\n1. Obtain the public key for the `*.asc` file.\n\n\n      ```sh\n      gpg --keyserver hkps://keyserver.ubuntu.com --receive-keys 644FF454C0B4115C\n      ```\n\n\n      You should see the message ` public key \"Harbor-sign (The key for signing Harbor build) <jiangd@vmware.com>\" imported`\n\n2. Verify that the package is genuine by running one of the following commands.\n\n\n      - Online installer:\n\n\n        ```sh\n        gpg -v --keyserver hkps://keyserver.ubuntu.com --verify harbor-online-installer-version.tgz.asc\n        ```\n\n      - Offline installer:\n\n\n        ```sh\n        gpg -v --keyserver hkps://keyserver.ubuntu.com --verify harbor-offline-installer-version.tgz.asc\n        ```\n\n\nThe `gpg` command verifies that the bundle’s signature matches that of the `*.asc` key file. You should see confirmation that the signature is correct.\n\n```sh\ngpg: armor header: Version: GnuPG v1\ngpg: assuming signed data in 'harbor-online-installer-v2.0.2.tgz'\ngpg: Signature made Tue Jul 28 09:49:20 2020 UTC\ngpg:                using RSA key 644FF454C0B4115C\ngpg: using pgp trust model\ngpg: Good signature from \"Harbor-sign (The key for signing Harbor build) <jiangd@vmware.com>\" [unknown]\ngpg: WARNING: This key is not certified with a trusted signature!\ngpg:          There is no indication that the signature belongs to the owner.\nPrimary key fingerprint: 7722 D168 DAEC 4578 06C9  6FF9 644F F454 C0B4 115C\ngpg: binary signature, digest algorithm SHA1, key algorithm rsa4096\n```\n\n4. Use `tar` to extract the installer package:\n   - Online installer:\n\n\n     ```sh\n     bash $ tar xzvf harbor-online-installer-version.tgz\n     ```\n\n   - Offline installer:\n\n\n     ```sh\n     bash $ tar xzvf harbor-offline-installer-version.tgz\n     ```.\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/install-config/download-installer", "title": "Download the Harbor Installer", "description": "Instructions on how to download and verify the Harbor installer for both online and offline installations.", "has_code_examples": true, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 02:58:27", "type": "section_detail", "page_metadata": {"og:site_name": "Harbor", "twitter:card": "summary", "ogLocale": "en_US", "og:title": "Harbor &ndash; Download the Harbor Installer", "ogTitle": "Harbor &ndash; Download the Harbor Installer", "ogSiteName": "Harbor", "og:type": ["documentation", "article"], "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "generator": "Hugo 0.74.0", "og:url": "https://goharbor.io/docs/2.12.0/install-config/download-installer/", "og:image:alt": "Harbor &ndash; Download the Harbor Installer project logo", "title": "\n      \nHarbor docs | Download the Harbor Installer\n\n    ", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:locale": "en_US", "ogUrl": "https://goharbor.io/docs/2.12.0/install-config/download-installer/", "og:image:type": "image/png", "twitter:site": "@project_harbor", "favicon": "https://goharbor.io/favicon.svg", "twitter:creator": "@project_harbor", "scrapeId": "5aaa2c76-5837-4eb3-a0e2-6e1a385532fe", "sourceURL": "https://goharbor.io/docs/2.12.0/install-config/download-installer", "url": "https://goharbor.io/docs/2.12.0/install-config/download-installer/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you give me some code examples for Download the Harbor Installer in harbor-2-12-0?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Obtain Public Key**:\n\n```yaml\ngpg --keyserver hkps://keyserver.ubuntu.com --receive-keys 644FF454C0B4115C\n```\n\nThis snippet shows you how to obtain public key, which is an important aspect of download the harbor installer.\n\n**Verify Online Installer**:\n\n```yaml\ngpg -v --keyserver hkps://keyserver.ubuntu.com --verify harbor-online-installer-version.tgz.asc\n```\n\nThis snippet shows you how to verify online installer, which is an important aspect of download the harbor installer.\n\n**Verify Offline Installer**:\n\n```yaml\ngpg -v --keyserver hkps://keyserver.ubuntu.com --verify harbor-offline-installer-version.tgz.asc\n```\n\nThis snippet shows you how to verify offline installer, which is an important aspect of download the harbor installer.\n\n**Extract Online Installer Package**:\n\n```yaml\nbash $ tar xzvf harbor-online-installer-version.tgz\n```\n\nThis snippet shows you how to extract online installer package, which is an important aspect of download the harbor installer.\n\n**Extract Offline Installer Package**:\n\n```yaml\nbash $ tar xzvf harbor-offline-installer-version.tgz\n```\n\nThis snippet shows you how to extract offline installer package, which is an important aspect of download the harbor installer.\n\n", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/install-config/download-installer", "title": "Download the Harbor Installer", "description": "Instructions on how to download and verify the Harbor installer for both online and offline installations.", "has_code_examples": true, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 02:58:27", "type": "code_examples", "page_metadata": {"og:site_name": "Harbor", "twitter:card": "summary", "ogLocale": "en_US", "og:title": "Harbor &ndash; Download the Harbor Installer", "ogTitle": "Harbor &ndash; Download the Harbor Installer", "ogSiteName": "Harbor", "og:type": ["documentation", "article"], "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "generator": "Hugo 0.74.0", "og:url": "https://goharbor.io/docs/2.12.0/install-config/download-installer/", "og:image:alt": "Harbor &ndash; Download the Harbor Installer project logo", "title": "\n      \nHarbor docs | Download the Harbor Installer\n\n    ", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:locale": "en_US", "ogUrl": "https://goharbor.io/docs/2.12.0/install-config/download-installer/", "og:image:type": "image/png", "twitter:site": "@project_harbor", "favicon": "https://goharbor.io/favicon.svg", "twitter:creator": "@project_harbor", "scrapeId": "5aaa2c76-5837-4eb3-a0e2-6e1a385532fe", "sourceURL": "https://goharbor.io/docs/2.12.0/install-config/download-installer", "url": "https://goharbor.io/docs/2.12.0/install-config/download-installer/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: What are some tips for using Download the Harbor Installer in harbor-2-12-0 effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nOptionally download the corresponding `*.asc` file to verify that the package is genuine.\n\nEnsure to verify the downloaded bundle using the `gpg` command to confirm its authenticity.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/install-config/download-installer", "title": "Download the Harbor Installer", "description": "Instructions on how to download and verify the Harbor installer for both online and offline installations.", "has_code_examples": true, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 02:58:27", "type": "best_practices", "page_metadata": {"og:site_name": "Harbor", "twitter:card": "summary", "ogLocale": "en_US", "og:title": "Harbor &ndash; Download the Harbor Installer", "ogTitle": "Harbor &ndash; Download the Harbor Installer", "ogSiteName": "Harbor", "og:type": ["documentation", "article"], "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "generator": "Hugo 0.74.0", "og:url": "https://goharbor.io/docs/2.12.0/install-config/download-installer/", "og:image:alt": "Harbor &ndash; Download the Harbor Installer project logo", "title": "\n      \nHarbor docs | Download the Harbor Installer\n\n    ", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:locale": "en_US", "ogUrl": "https://goharbor.io/docs/2.12.0/install-config/download-installer/", "og:image:type": "image/png", "twitter:site": "@project_harbor", "favicon": "https://goharbor.io/favicon.svg", "twitter:creator": "@project_harbor", "scrapeId": "5aaa2c76-5837-4eb3-a0e2-6e1a385532fe", "sourceURL": "https://goharbor.io/docs/2.12.0/install-config/download-installer", "url": "https://goharbor.io/docs/2.12.0/install-config/download-installer/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you explain what Reset User Password in Database Mode is in harbor-2-12-0?\n\nAssistant: Sure, I'd be happy to explain Reset User Password in Database Mode in harbor-2-12-0.\n\n# Reset User Password in Database Mode\n\nIn database authentication mode, the Harbor system administrator can reset passwords for the specified users.Here's a quick rundown of what this is about:\n\n## Steps to Reset User Password\n\n1. Log in to the Harbor interface with an account that has Harbor system administrator privileges.\n\n2. Under **Administration**, go to **Users**.\n\n3. Select a user then click the **Reset Password** button under the **Actions** dropdown.\n\n4. Enter a new password for the selected user.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/managing-users/reset-user-password", "title": "Reset User Password in Database Mode", "description": "In database authentication mode, the Harbor system administrator can reset passwords for the specified users.", "has_code_examples": false, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 02:59:49", "type": "overview", "page_metadata": {"title": "\n      \nHarbor docs | Reset User Password in Database Mode\n\n    ", "og:title": "Harbor &ndash; Reset User Password in Database Mode", "ogTitle": "Harbor &ndash; Reset User Password in Database Mode", "generator": "Hugo 0.74.0", "ogLocale": "en_US", "favicon": "https://goharbor.io/favicon.svg", "twitter:card": "summary", "og:url": "https://goharbor.io/docs/2.12.0/administration/managing-users/reset-user-password/", "og:type": ["documentation", "article"], "og:image:alt": "Harbor &ndash; Reset User Password in Database Mode project logo", "twitter:creator": "@project_harbor", "og:locale": "en_US", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/managing-users/reset-user-password/", "og:site_name": "Harbor", "twitter:site": "@project_harbor", "og:image:type": "image/png", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogSiteName": "Harbor", "scrapeId": "45206da7-263a-4ee3-82f5-53caa3283cab", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/managing-users/reset-user-password", "url": "https://goharbor.io/docs/2.12.0/administration/managing-users/reset-user-password/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I steps to reset user password in harbor-2-12-0?\n\nAssistant: To steps to reset user password in harbor-2-12-0, here's what you do:\n1. Log in to the Harbor interface with an account that has Harbor system administrator privileges.\n\n2. Under **Administration**, go to **Users**.\n\n3. Select a user then click the **Reset Password** button under the **Actions** dropdown.\n\n4. Enter a new password for the selected user..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/managing-users/reset-user-password", "title": "Reset User Password in Database Mode", "description": "In database authentication mode, the Harbor system administrator can reset passwords for the specified users.", "has_code_examples": false, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 02:59:49", "type": "section_detail", "page_metadata": {"title": "\n      \nHarbor docs | Reset User Password in Database Mode\n\n    ", "og:title": "Harbor &ndash; Reset User Password in Database Mode", "ogTitle": "Harbor &ndash; Reset User Password in Database Mode", "generator": "Hugo 0.74.0", "ogLocale": "en_US", "favicon": "https://goharbor.io/favicon.svg", "twitter:card": "summary", "og:url": "https://goharbor.io/docs/2.12.0/administration/managing-users/reset-user-password/", "og:type": ["documentation", "article"], "og:image:alt": "Harbor &ndash; Reset User Password in Database Mode project logo", "twitter:creator": "@project_harbor", "og:locale": "en_US", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/managing-users/reset-user-password/", "og:site_name": "Harbor", "twitter:site": "@project_harbor", "og:image:type": "image/png", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogSiteName": "Harbor", "scrapeId": "45206da7-263a-4ee3-82f5-53caa3283cab", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/managing-users/reset-user-password", "url": "https://goharbor.io/docs/2.12.0/administration/managing-users/reset-user-password/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: What are some tips for using Reset User Password in Database Mode in harbor-2-12-0 effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nYou are not allowed to reset your own password\n\nThe new password must contain at least 8 characters with 1 lowercase letter, 1 uppercase letter and 1 numeric character\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/managing-users/reset-user-password", "title": "Reset User Password in Database Mode", "description": "In database authentication mode, the Harbor system administrator can reset passwords for the specified users.", "has_code_examples": false, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 02:59:49", "type": "best_practices", "page_metadata": {"title": "\n      \nHarbor docs | Reset User Password in Database Mode\n\n    ", "og:title": "Harbor &ndash; Reset User Password in Database Mode", "ogTitle": "Harbor &ndash; Reset User Password in Database Mode", "generator": "Hugo 0.74.0", "ogLocale": "en_US", "favicon": "https://goharbor.io/favicon.svg", "twitter:card": "summary", "og:url": "https://goharbor.io/docs/2.12.0/administration/managing-users/reset-user-password/", "og:type": ["documentation", "article"], "og:image:alt": "Harbor &ndash; Reset User Password in Database Mode project logo", "twitter:creator": "@project_harbor", "og:locale": "en_US", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/managing-users/reset-user-password/", "og:site_name": "Harbor", "twitter:site": "@project_harbor", "og:image:type": "image/png", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogSiteName": "Harbor", "scrapeId": "45206da7-263a-4ee3-82f5-53caa3283cab", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/managing-users/reset-user-password", "url": "https://goharbor.io/docs/2.12.0/administration/managing-users/reset-user-password/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you explain what User-defined OCI artifact is in harbor-2-12-0?\n\nAssistant: Sure, I'd be happy to explain User-defined OCI artifact in harbor-2-12-0.\n\n# User-defined OCI artifact\n\nHarbor now can expands support for Machine Learning on K8s datamodels such as Kubeflow datamodels. Actually, they are still OCI artifacts. These artifacts follow Harbor-specific configuration so that harbor can show their rich metadata in a way and their icons. They are called user-defined OCI artifact.Here's a quick rundown of what this is about:\n\n## Harbor-specific Configuration\n\nThe Harbor-specific configuration defines annotations keys in the manifest of an OCI artifact.\n\n- **`io.goharbor.artifact.v1alpha1.skip-list`** string\n\nIt is in `manifest.config.annotations`.\n\nOPTIONAL property. The list of skip keys. Harbor will ignore these keys in configuration JSON layer. The value for this key should be type string separated by comma.\n\n- **`io.goharbor.artifact.v1alpha1.icon`** empty string\n\nIt is in `manifest.layers[].annotations`.\n\nThe identifier of artifact icon. The value for this key should be empty string. Only key will be processed, the value will not be used.\nIf an icon is used by artifacts, the icon must be a layer of artifacts when building artifacts.\nNote: The mediaType of icons support “image/gif, image/png, image/jpeg”.\n\n## Example OCI Manifest\n\nExample showing a user-defined OCI artifact:\n\n```fallback\n{\n    \"schemaVersion\": 2,\n    \"config\": {\n        \"mediaType\": \"application/vnd.caicloud.model.config.v1alpha1+json\",\n        \"digest\": \"sha256:be948daf0e22f264ea70b713ea0db35050ae659c185706aa2fad74834455fe8c\",\n        \"size\": 187,\n        \"annotations\": {\n            \"io.goharbor.artifact.v1alpha1.skip-list\": \"metrics,git\"\n        }\n    },\n    \"layers\": [\\\n        {\\\n            \"mediaType\": \"image/png\",\\\n            \"digest\": \"sha256:d923b93eadde0af5c639a972710a4d919066aba5d0dfbf4b9385099f70272da0\",\\\n            \"size\": 166015,\\\n            \"annotations\": {\\\n                \"io.goharbor.artifact.v1alpha1.icon\": \"\"\\\n            }\\\n        },\\\n        {\\\n            \"mediaType\": \"application/tar+gzip\",\\\n            \"digest\": \"sha256:d923b93eadde0af5c639a972710a4d919066aba5d0dfbf4b9385099f70272da0\",\\\n            \"size\": 166015\\\n        }\\\n    ]\n}\n```\n\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/user-defined-oci-artifact", "title": "User-defined OCI artifact", "description": "Harbor now can expands support for Machine Learning on K8s datamodels such as Kubeflow datamodels. Actually, they are still OCI artifacts. These artifacts follow Harbor-specific configuration so that harbor can show their rich metadata in a way and their icons. They are called user-defined OCI artifact.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:00:37", "type": "overview", "page_metadata": {"favicon": "https://goharbor.io/favicon.svg", "og:site_name": "Harbor", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/user-defined-oci-artifact/", "ogLocale": "en_US", "twitter:card": "summary", "title": "\n      \nHarbor docs | User-defined OCI artifact\n\n    ", "og:image:type": "image/png", "twitter:site": "@project_harbor", "og:title": "Harbor &ndash; User-defined OCI artifact", "og:url": "https://goharbor.io/docs/2.12.0/administration/user-defined-oci-artifact/", "ogSiteName": "Harbor", "og:locale": "en_US", "twitter:creator": "@project_harbor", "ogTitle": "Harbor &ndash; User-defined OCI artifact", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:image:alt": "Harbor &ndash; User-defined OCI artifact project logo", "generator": "Hugo 0.74.0", "og:type": ["documentation", "article"], "scrapeId": "d19caf91-7a44-4dc0-baf5-b76f1fa9ffcc", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/user-defined-oci-artifact", "url": "https://goharbor.io/docs/2.12.0/administration/user-defined-oci-artifact/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I harbor-specific configuration in harbor-2-12-0?\n\nAssistant: To harbor-specific configuration in harbor-2-12-0, here's what you do:\nThe Harbor-specific configuration defines annotations keys in the manifest of an OCI artifact.\n\n- **`io.goharbor.artifact.v1alpha1.skip-list`** string\n\nIt is in `manifest.config.annotations`.\n\nOPTIONAL property. The list of skip keys. Harbor will ignore these keys in configuration JSON layer. The value for this key should be type string separated by comma.\n\n- **`io.goharbor.artifact.v1alpha1.icon`** empty string\n\nIt is in `manifest.layers[].annotations`.\n\nThe identifier of artifact icon. The value for this key should be empty string. Only key will be processed, the value will not be used.\nIf an icon is used by artifacts, the icon must be a layer of artifacts when building artifacts.\nNote: The mediaType of icons support “image/gif, image/png, image/jpeg”..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/user-defined-oci-artifact", "title": "User-defined OCI artifact", "description": "Harbor now can expands support for Machine Learning on K8s datamodels such as Kubeflow datamodels. Actually, they are still OCI artifacts. These artifacts follow Harbor-specific configuration so that harbor can show their rich metadata in a way and their icons. They are called user-defined OCI artifact.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:00:37", "type": "section_detail", "page_metadata": {"favicon": "https://goharbor.io/favicon.svg", "og:site_name": "Harbor", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/user-defined-oci-artifact/", "ogLocale": "en_US", "twitter:card": "summary", "title": "\n      \nHarbor docs | User-defined OCI artifact\n\n    ", "og:image:type": "image/png", "twitter:site": "@project_harbor", "og:title": "Harbor &ndash; User-defined OCI artifact", "og:url": "https://goharbor.io/docs/2.12.0/administration/user-defined-oci-artifact/", "ogSiteName": "Harbor", "og:locale": "en_US", "twitter:creator": "@project_harbor", "ogTitle": "Harbor &ndash; User-defined OCI artifact", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:image:alt": "Harbor &ndash; User-defined OCI artifact project logo", "generator": "Hugo 0.74.0", "og:type": ["documentation", "article"], "scrapeId": "d19caf91-7a44-4dc0-baf5-b76f1fa9ffcc", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/user-defined-oci-artifact", "url": "https://goharbor.io/docs/2.12.0/administration/user-defined-oci-artifact/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I example oci manifest in harbor-2-12-0?\n\nAssistant: To example oci manifest in harbor-2-12-0, here's what you do:\nExample showing a user-defined OCI artifact:\n\n```fallback\n{\n    \"schemaVersion\": 2,\n    \"config\": {\n        \"mediaType\": \"application/vnd.caicloud.model.config.v1alpha1+json\",\n        \"digest\": \"sha256:be948daf0e22f264ea70b713ea0db35050ae659c185706aa2fad74834455fe8c\",\n        \"size\": 187,\n        \"annotations\": {\n            \"io.goharbor.artifact.v1alpha1.skip-list\": \"metrics,git\"\n        }\n    },\n    \"layers\": [\\\n        {\\\n            \"mediaType\": \"image/png\",\\\n            \"digest\": \"sha256:d923b93eadde0af5c639a972710a4d919066aba5d0dfbf4b9385099f70272da0\",\\\n            \"size\": 166015,\\\n            \"annotations\": {\\\n                \"io.goharbor.artifact.v1alpha1.icon\": \"\"\\\n            }\\\n        },\\\n        {\\\n            \"mediaType\": \"application/tar+gzip\",\\\n            \"digest\": \"sha256:d923b93eadde0af5c639a972710a4d919066aba5d0dfbf4b9385099f70272da0\",\\\n            \"size\": 166015\\\n        }\\\n    ]\n}\n```\n.\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/user-defined-oci-artifact", "title": "User-defined OCI artifact", "description": "Harbor now can expands support for Machine Learning on K8s datamodels such as Kubeflow datamodels. Actually, they are still OCI artifacts. These artifacts follow Harbor-specific configuration so that harbor can show their rich metadata in a way and their icons. They are called user-defined OCI artifact.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:00:37", "type": "section_detail", "page_metadata": {"favicon": "https://goharbor.io/favicon.svg", "og:site_name": "Harbor", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/user-defined-oci-artifact/", "ogLocale": "en_US", "twitter:card": "summary", "title": "\n      \nHarbor docs | User-defined OCI artifact\n\n    ", "og:image:type": "image/png", "twitter:site": "@project_harbor", "og:title": "Harbor &ndash; User-defined OCI artifact", "og:url": "https://goharbor.io/docs/2.12.0/administration/user-defined-oci-artifact/", "ogSiteName": "Harbor", "og:locale": "en_US", "twitter:creator": "@project_harbor", "ogTitle": "Harbor &ndash; User-defined OCI artifact", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:image:alt": "Harbor &ndash; User-defined OCI artifact project logo", "generator": "Hugo 0.74.0", "og:type": ["documentation", "article"], "scrapeId": "d19caf91-7a44-4dc0-baf5-b76f1fa9ffcc", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/user-defined-oci-artifact", "url": "https://goharbor.io/docs/2.12.0/administration/user-defined-oci-artifact/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you give me some code examples for User-defined OCI artifact in harbor-2-12-0?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Example OCI Manifest**:\n\n```yaml\n{\n    \"schemaVersion\": 2,\n    \"config\": {\n        \"mediaType\": \"application/vnd.caicloud.model.config.v1alpha1+json\",\n        \"digest\": \"sha256:be948daf0e22f264ea70b713ea0db35050ae659c185706aa2fad74834455fe8c\",\n        \"size\": 187,\n        \"annotations\": {\n            \"io.goharbor.artifact.v1alpha1.skip-list\": \"metrics,git\"\n        }\n    },\n    \"layers\": [\\\n        {\\\n            \"mediaType\": \"image/png\",\\\n            \"digest\": \"sha256:d923b93eadde0af5c639a972710a4d919066aba5d0dfbf4b9385099f70272da0\",\\\n            \"size\": 166015,\\\n            \"annotations\": {\\\n                \"io.goharbor.artifact.v1alpha1.icon\": \"\"\\\n            }\\\n        },\\\n        {\\\n            \"mediaType\": \"application/tar+gzip\",\\\n            \"digest\": \"sha256:d923b93eadde0af5c639a972710a4d919066aba5d0dfbf4b9385099f70272da0\",\\\n            \"size\": 166015\\\n        }\\\n    ]\n}\n```\n\nThis snippet shows you how to example oci manifest, which is an important aspect of user-defined oci artifact.\n\n", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/user-defined-oci-artifact", "title": "User-defined OCI artifact", "description": "Harbor now can expands support for Machine Learning on K8s datamodels such as Kubeflow datamodels. Actually, they are still OCI artifacts. These artifacts follow Harbor-specific configuration so that harbor can show their rich metadata in a way and their icons. They are called user-defined OCI artifact.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:00:37", "type": "code_examples", "page_metadata": {"favicon": "https://goharbor.io/favicon.svg", "og:site_name": "Harbor", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/user-defined-oci-artifact/", "ogLocale": "en_US", "twitter:card": "summary", "title": "\n      \nHarbor docs | User-defined OCI artifact\n\n    ", "og:image:type": "image/png", "twitter:site": "@project_harbor", "og:title": "Harbor &ndash; User-defined OCI artifact", "og:url": "https://goharbor.io/docs/2.12.0/administration/user-defined-oci-artifact/", "ogSiteName": "Harbor", "og:locale": "en_US", "twitter:creator": "@project_harbor", "ogTitle": "Harbor &ndash; User-defined OCI artifact", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:image:alt": "Harbor &ndash; User-defined OCI artifact project logo", "generator": "Hugo 0.74.0", "og:type": ["documentation", "article"], "scrapeId": "d19caf91-7a44-4dc0-baf5-b76f1fa9ffcc", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/user-defined-oci-artifact", "url": "https://goharbor.io/docs/2.12.0/administration/user-defined-oci-artifact/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: What are some tips for using User-defined OCI artifact in harbor-2-12-0 effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nThe value for the skip-list key should be a string separated by commas.\n\nThe icon must be a layer of artifacts when building artifacts.\n\nSupported media types for icons are image/gif, image/png, and image/jpeg.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/user-defined-oci-artifact", "title": "User-defined OCI artifact", "description": "Harbor now can expands support for Machine Learning on K8s datamodels such as Kubeflow datamodels. Actually, they are still OCI artifacts. These artifacts follow Harbor-specific configuration so that harbor can show their rich metadata in a way and their icons. They are called user-defined OCI artifact.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:00:37", "type": "best_practices", "page_metadata": {"favicon": "https://goharbor.io/favicon.svg", "og:site_name": "Harbor", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/user-defined-oci-artifact/", "ogLocale": "en_US", "twitter:card": "summary", "title": "\n      \nHarbor docs | User-defined OCI artifact\n\n    ", "og:image:type": "image/png", "twitter:site": "@project_harbor", "og:title": "Harbor &ndash; User-defined OCI artifact", "og:url": "https://goharbor.io/docs/2.12.0/administration/user-defined-oci-artifact/", "ogSiteName": "Harbor", "og:locale": "en_US", "twitter:creator": "@project_harbor", "ogTitle": "Harbor &ndash; User-defined OCI artifact", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:image:alt": "Harbor &ndash; User-defined OCI artifact project logo", "generator": "Hugo 0.74.0", "og:type": ["documentation", "article"], "scrapeId": "d19caf91-7a44-4dc0-baf5-b76f1fa9ffcc", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/user-defined-oci-artifact", "url": "https://goharbor.io/docs/2.12.0/administration/user-defined-oci-artifact/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you explain what Configure HTTPS Access to Harbor is in harbor-2-12-0?\n\nAssistant: Sure, I'd be happy to explain Configure HTTPS Access to Harbor in harbor-2-12-0.\n\n# Configure HTTPS Access to Harbor\n\nThis page describes how to configure HTTPS access to Harbor by generating SSL certificates and providing them to Harbor and Docker.Here's a quick rundown of what this is about:\n\n## Generate a Certificate Authority Certificate\n\nIn a production environment, you should obtain a certificate from a CA. In a test or development environment, you can generate your own CA. To generate a CA certficate, run the following commands.\n\n1. Generate a CA certificate private key.\n\n```sh\nopenssl genrsa -out ca.key 4096\n```\n\n2. Generate the CA certificate.\n\nAdapt the values in the `-subj` option to reflect your organization. If you use an FQDN to connect your Harbor host, you must specify it as the common name ( `CN`) attribute.\n\n```sh\nopenssl req -x509 -new -nodes -sha512 -days 3650 \\\n    -subj \"/C=CN/ST=Beijing/L=Beijing/O=example/OU=Personal/CN=MyPersonal Root CA\" \\\n    -key ca.key \\\n    -out ca.crt\n```\n\n## Generate a Server Certificate\n\nThe certificate usually contains a `.crt` file and a `.key` file, for example, `yourdomain.com.crt` and `yourdomain.com.key`.\n\n1. Generate a private key.\n\n```sh\nopenssl genrsa -out yourdomain.com.key 4096\n```\n\n2. Generate a certificate signing request (CSR).\n\nAdapt the values in the `-subj` option to reflect your organization. If you use an FQDN to connect your Harbor host, you must specify it as the common name ( `CN`) attribute and use it in the key and CSR filenames.\n\n```sh\nopenssl req -sha512 -new \\\n       -subj \"/C=CN/ST=Beijing/L=Beijing/O=example/OU=Personal/CN=yourdomain.com\" \\\n       -key yourdomain.com.key \\\n       -out yourdomain.com.csr\n```\n\n3. Generate an x509 v3 extension file.\n\nRegardless of whether you’re using either an FQDN or an IP address to connect to your Harbor host, you must create this file so that you can generate a certificate for your Harbor host that complies with the Subject Alternative Name (SAN) and x509 v3 extension requirements. Replace the `DNS` entries to reflect your domain.\n\n```sh\ncat > v3.ext <<-EOF\nauthorityKeyIdentifier=keyid,issuer\nbasicConstraints=CA:FALSE\nkeyUsage = digitalSignature, nonRepudiation, keyEncipherment, dataEncipherment\nextendedKeyUsage = serverAuth\nsubjectAltName = @alt_names\n\n[alt_names]\nDNS.1=yourdomain.com\nDNS.2=yourdomain\nDNS.3=hostname\nEOF\n```\n\n4. Use the `v3.ext` file to generate a certificate for your Harbor host.\n\nReplace the `yourdomain.com` in the CSR and CRT file names with the Harbor host name.\n\n```sh\nopenssl x509 -req -sha512 -days 3650 \\\n       -extfile v3.ext \\\n       -CA ca.crt -CAkey ca.key -CAcreateserial \\\n       -in yourdomain.com.csr \\\n       -out yourdomain.com.crt\n```\n\n## Provide the Certificates to Harbor and Docker\n\nAfter generating the `ca.crt`, `yourdomain.com.crt`, and `yourdomain.com.key` files, you must provide them to Harbor and to Docker, and reconfigure Harbor to use them.\n\n1. Copy the server certificate and key into the certficates folder on your Harbor host.\n\n```sh\ncp yourdomain.com.crt /data/cert/\ncp yourdomain.com.key /data/cert/\n```\n\n2. Convert `yourdomain.com.crt` to `yourdomain.com.cert`, for use by Docker.\n\nThe Docker daemon interprets `.crt` files as CA certificates and `.cert` files as client certificates.\n\n```sh\nopenssl x509 -inform PEM -in yourdomain.com.crt -out yourdomain.com.cert\n```\n\n3. Copy the server certificate, key and CA files into the Docker certificates folder on the Harbor host. You must create the appropriate folders first.\n\n```sh\ncp yourdomain.com.cert /etc/docker/certs.d/yourdomain.com/\ncp yourdomain.com.key /etc/docker/certs.d/yourdomain.com/\ncp ca.crt /etc/docker/certs.d/yourdomain.com/\n```\n\nIf you mapped the default `nginx` port 443 to a different port, create the folder `/etc/docker/certs.d/yourdomain.com:port`, or `/etc/docker/certs.d/harbor_IP:port`.\n\n4. Restart Docker Engine.\n\n```sh\nsystemctl restart docker\n```\n\n## Deploy or Reconfigure Harbor\n\nIf you have not yet deployed Harbor, see [Configure the Harbor YML File](https://goharbor.io/docs/2.12.0/install-config/configure-yml-file/) for information about how to configure Harbor to use the certificates by specifying the `hostname` and `https` attributes in `harbor.yml`.\n\nIf you already deployed Harbor with HTTP and want to reconfigure it to use HTTPS, perform the following steps.\n\n1. Run the `prepare` script to enable HTTPS.\n\nHarbor uses an `nginx` instance as a reverse proxy for all services. You use the `prepare` script to configure `nginx` to use HTTPS. The `prepare` is in the Harbor installer bundle, at the same level as the `install.sh` script.\n\n```sh\n./prepare\n```\n\n2. If Harbor is running, stop and remove the existing instance.\n\nYour image data remains in the file system, so no data is lost.\n\n```sh\ndocker compose down -v\n```\n\n3. Restart Harbor:\n\n```sh\ndocker compose up -d\n```\n\n## Verify the HTTPS Connection\n\nAfter setting up HTTPS for Harbor, you can verify the HTTPS connection by performing the following steps.\n\n- Open a browser and enter [https://yourdomain.com](https://yourdomain.com/). It should display the Harbor interface.\n\nSome browsers might show a warning stating that the Certificate Authority (CA) is unknown. This happens when using a self-signed CA that is not from a trusted third-party CA. You can import the CA to the browser to remove the warning.\n\n- On a machine that runs the Docker daemon, check the `/etc/docker/daemon.json` file to make sure that the `-insecure-registry` option is not set for [https://yourdomain.com](https://yourdomain.com/).\n\n- Log into Harbor from the Docker client.\n\n```sh\ndocker login yourdomain.com\n```\n\nIf you’ve mapped `nginx` 443 port to a different port, add the port in the `login` command.\n\n```sh\ndocker login yourdomain.com:port\n```\n\n## What to Do Next\n\n- If the verification succeeds, see [Harbor Administration](https://goharbor.io/docs/2.12.0/administration/) for information about using Harbor.\n- If installation fails, see [Troubleshooting Harbor Installation](https://goharbor.io/docs/2.12.0/install-config/troubleshoot-installation/).\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/install-config/configure-https", "title": "Configure HTTPS Access to Harbor", "description": "This page describes how to configure HTTPS access to Harbor by generating SSL certificates and providing them to Harbor and Docker.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:01:26", "type": "overview", "page_metadata": {"twitter:creator": "@project_harbor", "og:site_name": "Harbor", "ogUrl": "https://goharbor.io/docs/2.12.0/install-config/configure-https/", "og:locale": "en_US", "og:image:alt": "Harbor &ndash; Configure HTTPS Access to Harbor project logo", "ogTitle": "Harbor &ndash; Configure HTTPS Access to Harbor", "title": "\n      \nHarbor docs | Configure HTTPS Access to Harbor\n\n    ", "ogLocale": "en_US", "og:type": ["documentation", "article"], "og:title": "Harbor &ndash; Configure HTTPS Access to Harbor", "twitter:card": "summary", "twitter:site": "@project_harbor", "og:url": "https://goharbor.io/docs/2.12.0/install-config/configure-https/", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "generator": "Hugo 0.74.0", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:image:type": "image/png", "favicon": "https://goharbor.io/favicon.svg", "ogSiteName": "Harbor", "scrapeId": "b70a1de5-6ab2-47e1-afc6-dfb4cd50db28", "sourceURL": "https://goharbor.io/docs/2.12.0/install-config/configure-https", "url": "https://goharbor.io/docs/2.12.0/install-config/configure-https/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I generate a certificate authority certificate in harbor-2-12-0?\n\nAssistant: To generate a certificate authority certificate in harbor-2-12-0, here's what you do:\nIn a production environment, you should obtain a certificate from a CA. In a test or development environment, you can generate your own CA. To generate a CA certficate, run the following commands.\n\n1. Generate a CA certificate private key.\n\n```sh\nopenssl genrsa -out ca.key 4096\n```\n\n2. Generate the CA certificate.\n\nAdapt the values in the `-subj` option to reflect your organization. If you use an FQDN to connect your Harbor host, you must specify it as the common name ( `CN`) attribute.\n\n```sh\nopenssl req -x509 -new -nodes -sha512 -days 3650 \\\n    -subj \"/C=CN/ST=Beijing/L=Beijing/O=example/OU=Personal/CN=MyPersonal Root CA\" \\\n    -key ca.key \\\n    -out ca.crt\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/install-config/configure-https", "title": "Configure HTTPS Access to Harbor", "description": "This page describes how to configure HTTPS access to Harbor by generating SSL certificates and providing them to Harbor and Docker.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:01:26", "type": "section_detail", "page_metadata": {"twitter:creator": "@project_harbor", "og:site_name": "Harbor", "ogUrl": "https://goharbor.io/docs/2.12.0/install-config/configure-https/", "og:locale": "en_US", "og:image:alt": "Harbor &ndash; Configure HTTPS Access to Harbor project logo", "ogTitle": "Harbor &ndash; Configure HTTPS Access to Harbor", "title": "\n      \nHarbor docs | Configure HTTPS Access to Harbor\n\n    ", "ogLocale": "en_US", "og:type": ["documentation", "article"], "og:title": "Harbor &ndash; Configure HTTPS Access to Harbor", "twitter:card": "summary", "twitter:site": "@project_harbor", "og:url": "https://goharbor.io/docs/2.12.0/install-config/configure-https/", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "generator": "Hugo 0.74.0", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:image:type": "image/png", "favicon": "https://goharbor.io/favicon.svg", "ogSiteName": "Harbor", "scrapeId": "b70a1de5-6ab2-47e1-afc6-dfb4cd50db28", "sourceURL": "https://goharbor.io/docs/2.12.0/install-config/configure-https", "url": "https://goharbor.io/docs/2.12.0/install-config/configure-https/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I generate a server certificate in harbor-2-12-0?\n\nAssistant: To generate a server certificate in harbor-2-12-0, here's what you do:\nThe certificate usually contains a `.crt` file and a `.key` file, for example, `yourdomain.com.crt` and `yourdomain.com.key`.\n\n1. Generate a private key.\n\n```sh\nopenssl genrsa -out yourdomain.com.key 4096\n```\n\n2. Generate a certificate signing request (CSR).\n\nAdapt the values in the `-subj` option to reflect your organization. If you use an FQDN to connect your Harbor host, you must specify it as the common name ( `CN`) attribute and use it in the key and CSR filenames.\n\n```sh\nopenssl req -sha512 -new \\\n       -subj \"/C=CN/ST=Beijing/L=Beijing/O=example/OU=Personal/CN=yourdomain.com\" \\\n       -key yourdomain.com.key \\\n       -out yourdomain.com.csr\n```\n\n3. Generate an x509 v3 extension file.\n\nRegardless of whether you’re using either an FQDN or an IP address to connect to your Harbor host, you must create this file so that you can generate a certificate for your Harbor host that complies with the Subject Alternative Name (SAN) and x509 v3 extension requirements. Replace the `DNS` entries to reflect your domain.\n\n```sh\ncat > v3.ext <<-EOF\nauthorityKeyIdentifier=keyid,issuer\nbasicConstraints=CA:FALSE\nkeyUsage = digitalSignature, nonRepudiation, keyEncipherment, dataEncipherment\nextendedKeyUsage = serverAuth\nsubjectAltName = @alt_names\n\n[alt_names]\nDNS.1=yourdomain.com\nDNS.2=yourdomain\nDNS.3=hostname\nEOF\n```\n\n4. Use the `v3.ext` file to generate a certificate for your Harbor host.\n\nReplace the `yourdomain.com` in the CSR and CRT file names with the Harbor host name.\n\n```sh\nopenssl x509 -req -sha512 -days 3650 \\\n       -extfile v3.ext \\\n       -CA ca.crt -CAkey ca.key -CAcreateserial \\\n       -in yourdomain.com.csr \\\n       -out yourdomain.com.crt\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/install-config/configure-https", "title": "Configure HTTPS Access to Harbor", "description": "This page describes how to configure HTTPS access to Harbor by generating SSL certificates and providing them to Harbor and Docker.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:01:26", "type": "section_detail", "page_metadata": {"twitter:creator": "@project_harbor", "og:site_name": "Harbor", "ogUrl": "https://goharbor.io/docs/2.12.0/install-config/configure-https/", "og:locale": "en_US", "og:image:alt": "Harbor &ndash; Configure HTTPS Access to Harbor project logo", "ogTitle": "Harbor &ndash; Configure HTTPS Access to Harbor", "title": "\n      \nHarbor docs | Configure HTTPS Access to Harbor\n\n    ", "ogLocale": "en_US", "og:type": ["documentation", "article"], "og:title": "Harbor &ndash; Configure HTTPS Access to Harbor", "twitter:card": "summary", "twitter:site": "@project_harbor", "og:url": "https://goharbor.io/docs/2.12.0/install-config/configure-https/", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "generator": "Hugo 0.74.0", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:image:type": "image/png", "favicon": "https://goharbor.io/favicon.svg", "ogSiteName": "Harbor", "scrapeId": "b70a1de5-6ab2-47e1-afc6-dfb4cd50db28", "sourceURL": "https://goharbor.io/docs/2.12.0/install-config/configure-https", "url": "https://goharbor.io/docs/2.12.0/install-config/configure-https/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I provide the certificates to harbor and docker in harbor-2-12-0?\n\nAssistant: To provide the certificates to harbor and docker in harbor-2-12-0, here's what you do:\nAfter generating the `ca.crt`, `yourdomain.com.crt`, and `yourdomain.com.key` files, you must provide them to Harbor and to Docker, and reconfigure Harbor to use them.\n\n1. Copy the server certificate and key into the certficates folder on your Harbor host.\n\n```sh\ncp yourdomain.com.crt /data/cert/\ncp yourdomain.com.key /data/cert/\n```\n\n2. Convert `yourdomain.com.crt` to `yourdomain.com.cert`, for use by Docker.\n\nThe Docker daemon interprets `.crt` files as CA certificates and `.cert` files as client certificates.\n\n```sh\nopenssl x509 -inform PEM -in yourdomain.com.crt -out yourdomain.com.cert\n```\n\n3. Copy the server certificate, key and CA files into the Docker certificates folder on the Harbor host. You must create the appropriate folders first.\n\n```sh\ncp yourdomain.com.cert /etc/docker/certs.d/yourdomain.com/\ncp yourdomain.com.key /etc/docker/certs.d/yourdomain.com/\ncp ca.crt /etc/docker/certs.d/yourdomain.com/\n```\n\nIf you mapped the default `nginx` port 443 to a different port, create the folder `/etc/docker/certs.d/yourdomain.com:port`, or `/etc/docker/certs.d/harbor_IP:port`.\n\n4. Restart Docker Engine.\n\n```sh\nsystemctl restart docker\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/install-config/configure-https", "title": "Configure HTTPS Access to Harbor", "description": "This page describes how to configure HTTPS access to Harbor by generating SSL certificates and providing them to Harbor and Docker.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:01:26", "type": "section_detail", "page_metadata": {"twitter:creator": "@project_harbor", "og:site_name": "Harbor", "ogUrl": "https://goharbor.io/docs/2.12.0/install-config/configure-https/", "og:locale": "en_US", "og:image:alt": "Harbor &ndash; Configure HTTPS Access to Harbor project logo", "ogTitle": "Harbor &ndash; Configure HTTPS Access to Harbor", "title": "\n      \nHarbor docs | Configure HTTPS Access to Harbor\n\n    ", "ogLocale": "en_US", "og:type": ["documentation", "article"], "og:title": "Harbor &ndash; Configure HTTPS Access to Harbor", "twitter:card": "summary", "twitter:site": "@project_harbor", "og:url": "https://goharbor.io/docs/2.12.0/install-config/configure-https/", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "generator": "Hugo 0.74.0", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:image:type": "image/png", "favicon": "https://goharbor.io/favicon.svg", "ogSiteName": "Harbor", "scrapeId": "b70a1de5-6ab2-47e1-afc6-dfb4cd50db28", "sourceURL": "https://goharbor.io/docs/2.12.0/install-config/configure-https", "url": "https://goharbor.io/docs/2.12.0/install-config/configure-https/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I deploy or reconfigure harbor in harbor-2-12-0?\n\nAssistant: To deploy or reconfigure harbor in harbor-2-12-0, here's what you do:\nIf you have not yet deployed Harbor, see [Configure the Harbor YML File](https://goharbor.io/docs/2.12.0/install-config/configure-yml-file/) for information about how to configure Harbor to use the certificates by specifying the `hostname` and `https` attributes in `harbor.yml`.\n\nIf you already deployed Harbor with HTTP and want to reconfigure it to use HTTPS, perform the following steps.\n\n1. Run the `prepare` script to enable HTTPS.\n\nHarbor uses an `nginx` instance as a reverse proxy for all services. You use the `prepare` script to configure `nginx` to use HTTPS. The `prepare` is in the Harbor installer bundle, at the same level as the `install.sh` script.\n\n```sh\n./prepare\n```\n\n2. If Harbor is running, stop and remove the existing instance.\n\nYour image data remains in the file system, so no data is lost.\n\n```sh\ndocker compose down -v\n```\n\n3. Restart Harbor:\n\n```sh\ndocker compose up -d\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/install-config/configure-https", "title": "Configure HTTPS Access to Harbor", "description": "This page describes how to configure HTTPS access to Harbor by generating SSL certificates and providing them to Harbor and Docker.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:01:26", "type": "section_detail", "page_metadata": {"twitter:creator": "@project_harbor", "og:site_name": "Harbor", "ogUrl": "https://goharbor.io/docs/2.12.0/install-config/configure-https/", "og:locale": "en_US", "og:image:alt": "Harbor &ndash; Configure HTTPS Access to Harbor project logo", "ogTitle": "Harbor &ndash; Configure HTTPS Access to Harbor", "title": "\n      \nHarbor docs | Configure HTTPS Access to Harbor\n\n    ", "ogLocale": "en_US", "og:type": ["documentation", "article"], "og:title": "Harbor &ndash; Configure HTTPS Access to Harbor", "twitter:card": "summary", "twitter:site": "@project_harbor", "og:url": "https://goharbor.io/docs/2.12.0/install-config/configure-https/", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "generator": "Hugo 0.74.0", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:image:type": "image/png", "favicon": "https://goharbor.io/favicon.svg", "ogSiteName": "Harbor", "scrapeId": "b70a1de5-6ab2-47e1-afc6-dfb4cd50db28", "sourceURL": "https://goharbor.io/docs/2.12.0/install-config/configure-https", "url": "https://goharbor.io/docs/2.12.0/install-config/configure-https/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I verify the https connection in harbor-2-12-0?\n\nAssistant: To verify the https connection in harbor-2-12-0, here's what you do:\nAfter setting up HTTPS for Harbor, you can verify the HTTPS connection by performing the following steps.\n\n- Open a browser and enter [https://yourdomain.com](https://yourdomain.com/). It should display the Harbor interface.\n\nSome browsers might show a warning stating that the Certificate Authority (CA) is unknown. This happens when using a self-signed CA that is not from a trusted third-party CA. You can import the CA to the browser to remove the warning.\n\n- On a machine that runs the Docker daemon, check the `/etc/docker/daemon.json` file to make sure that the `-insecure-registry` option is not set for [https://yourdomain.com](https://yourdomain.com/).\n\n- Log into Harbor from the Docker client.\n\n```sh\ndocker login yourdomain.com\n```\n\nIf you’ve mapped `nginx` 443 port to a different port, add the port in the `login` command.\n\n```sh\ndocker login yourdomain.com:port\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/install-config/configure-https", "title": "Configure HTTPS Access to Harbor", "description": "This page describes how to configure HTTPS access to Harbor by generating SSL certificates and providing them to Harbor and Docker.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:01:26", "type": "section_detail", "page_metadata": {"twitter:creator": "@project_harbor", "og:site_name": "Harbor", "ogUrl": "https://goharbor.io/docs/2.12.0/install-config/configure-https/", "og:locale": "en_US", "og:image:alt": "Harbor &ndash; Configure HTTPS Access to Harbor project logo", "ogTitle": "Harbor &ndash; Configure HTTPS Access to Harbor", "title": "\n      \nHarbor docs | Configure HTTPS Access to Harbor\n\n    ", "ogLocale": "en_US", "og:type": ["documentation", "article"], "og:title": "Harbor &ndash; Configure HTTPS Access to Harbor", "twitter:card": "summary", "twitter:site": "@project_harbor", "og:url": "https://goharbor.io/docs/2.12.0/install-config/configure-https/", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "generator": "Hugo 0.74.0", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:image:type": "image/png", "favicon": "https://goharbor.io/favicon.svg", "ogSiteName": "Harbor", "scrapeId": "b70a1de5-6ab2-47e1-afc6-dfb4cd50db28", "sourceURL": "https://goharbor.io/docs/2.12.0/install-config/configure-https", "url": "https://goharbor.io/docs/2.12.0/install-config/configure-https/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I what to do next in harbor-2-12-0?\n\nAssistant: To what to do next in harbor-2-12-0, here's what you do:\n- If the verification succeeds, see [Harbor Administration](https://goharbor.io/docs/2.12.0/administration/) for information about using Harbor.\n- If installation fails, see [Troubleshooting Harbor Installation](https://goharbor.io/docs/2.12.0/install-config/troubleshoot-installation/)..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/install-config/configure-https", "title": "Configure HTTPS Access to Harbor", "description": "This page describes how to configure HTTPS access to Harbor by generating SSL certificates and providing them to Harbor and Docker.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:01:26", "type": "section_detail", "page_metadata": {"twitter:creator": "@project_harbor", "og:site_name": "Harbor", "ogUrl": "https://goharbor.io/docs/2.12.0/install-config/configure-https/", "og:locale": "en_US", "og:image:alt": "Harbor &ndash; Configure HTTPS Access to Harbor project logo", "ogTitle": "Harbor &ndash; Configure HTTPS Access to Harbor", "title": "\n      \nHarbor docs | Configure HTTPS Access to Harbor\n\n    ", "ogLocale": "en_US", "og:type": ["documentation", "article"], "og:title": "Harbor &ndash; Configure HTTPS Access to Harbor", "twitter:card": "summary", "twitter:site": "@project_harbor", "og:url": "https://goharbor.io/docs/2.12.0/install-config/configure-https/", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "generator": "Hugo 0.74.0", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:image:type": "image/png", "favicon": "https://goharbor.io/favicon.svg", "ogSiteName": "Harbor", "scrapeId": "b70a1de5-6ab2-47e1-afc6-dfb4cd50db28", "sourceURL": "https://goharbor.io/docs/2.12.0/install-config/configure-https", "url": "https://goharbor.io/docs/2.12.0/install-config/configure-https/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you give me some code examples for Configure HTTPS Access to Harbor in harbor-2-12-0?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Generate a CA certificate private key**:\n\n```yaml\nopenssl genrsa -out ca.key 4096\n```\n\nThis snippet shows you how to generate a ca certificate private key, which is an important aspect of configure https access to harbor.\n\n**Generate the CA certificate**:\n\n```yaml\nopenssl req -x509 -new -nodes -sha512 -days 3650 \\\n    -subj \"/C=CN/ST=Beijing/L=Beijing/O=example/OU=Personal/CN=MyPersonal Root CA\" \\\n    -key ca.key \\\n    -out ca.crt\n```\n\nThis snippet shows you how to generate the ca certificate, which is an important aspect of configure https access to harbor.\n\n**Generate a private key for server certificate**:\n\n```yaml\nopenssl genrsa -out yourdomain.com.key 4096\n```\n\nThis snippet shows you how to generate a private key for server certificate, which is an important aspect of configure https access to harbor.\n\n**Generate a certificate signing request (CSR)**:\n\n```yaml\nopenssl req -sha512 -new \\\n       -subj \"/C=CN/ST=Beijing/L=Beijing/O=example/OU=Personal/CN=yourdomain.com\" \\\n       -key yourdomain.com.key \\\n       -out yourdomain.com.csr\n```\n\nThis snippet shows you how to generate a certificate signing request (csr), which is an important aspect of configure https access to harbor.\n\n**Generate an x509 v3 extension file**:\n\n```yaml\ncat > v3.ext <<-EOF\nauthorityKeyIdentifier=keyid,issuer\nbasicConstraints=CA:FALSE\nkeyUsage = digitalSignature, nonRepudiation, keyEncipherment, dataEncipherment\nextendedKeyUsage = serverAuth\nsubjectAltName = @alt_names\n\n[alt_names]\nDNS.1=yourdomain.com\nDNS.2=yourdomain\nDNS.3=hostname\nEOF\n```\n\nThis snippet shows you how to generate an x509 v3 extension file, which is an important aspect of configure https access to harbor.\n\n**Use the v3.ext file to generate a certificate for your Harbor host**:\n\n```yaml\nopenssl x509 -req -sha512 -days 3650 \\\n       -extfile v3.ext \\\n       -CA ca.crt -CAkey ca.key -CAcreateserial \\\n       -in yourdomain.com.csr \\\n       -out yourdomain.com.crt\n```\n\nThis snippet shows you how to use the v3.ext file to generate a certificate for your harbor host, which is an important aspect of configure https access to harbor.\n\n**Copy the server certificate and key into the certificates folder on your Harbor host**:\n\n```yaml\ncp yourdomain.com.crt /data/cert/\ncp yourdomain.com.key /data/cert/\n\n```\n\nThis snippet shows you how to copy the server certificate and key into the certificates folder on your harbor host, which is an important aspect of configure https access to harbor.\n\n**Convert yourdomain.com.crt to yourdomain.com.cert for use by Docker**:\n\n```yaml\nopenssl x509 -inform PEM -in yourdomain.com.crt -out yourdomain.com.cert\n```\n\nThis snippet shows you how to convert yourdomain.com.crt to yourdomain.com.cert for use by docker, which is an important aspect of configure https access to harbor.\n\n**Copy the server certificate, key and CA files into the Docker certificates folder**:\n\n```yaml\ncp yourdomain.com.cert /etc/docker/certs.d/yourdomain.com/\ncp yourdomain.com.key /etc/docker/certs.d/yourdomain.com/\ncp ca.crt /etc/docker/certs.d/yourdomain.com/\n\n```\n\nThis snippet shows you how to copy the server certificate, key and ca files into the docker certificates folder, which is an important aspect of configure https access to harbor.\n\n**Restart Docker Engine**:\n\n```yaml\nsystemctl restart docker\n```\n\nThis snippet shows you how to restart docker engine, which is an important aspect of configure https access to harbor.\n\n**Run the prepare script to enable HTTPS**:\n\n```yaml\n./prepare\n```\n\nThis snippet shows you how to run the prepare script to enable https, which is an important aspect of configure https access to harbor.\n\n**Stop and remove the existing Harbor instance**:\n\n```yaml\ndocker compose down -v\n```\n\nThis snippet shows you how to stop and remove the existing harbor instance, which is an important aspect of configure https access to harbor.\n\n**Restart Harbor**:\n\n```yaml\ndocker compose up -d\n```\n\nThis snippet shows you how to restart harbor, which is an important aspect of configure https access to harbor.\n\n**Log into Harbor from the Docker client**:\n\n```yaml\ndocker login yourdomain.com\n```\n\nThis snippet shows you how to log into harbor from the docker client, which is an important aspect of configure https access to harbor.\n\n**Log into Harbor with port**:\n\n```yaml\ndocker login yourdomain.com:port\n```\n\nThis snippet shows you how to log into harbor with port, which is an important aspect of configure https access to harbor.\n\n", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/install-config/configure-https", "title": "Configure HTTPS Access to Harbor", "description": "This page describes how to configure HTTPS access to Harbor by generating SSL certificates and providing them to Harbor and Docker.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:01:26", "type": "code_examples", "page_metadata": {"twitter:creator": "@project_harbor", "og:site_name": "Harbor", "ogUrl": "https://goharbor.io/docs/2.12.0/install-config/configure-https/", "og:locale": "en_US", "og:image:alt": "Harbor &ndash; Configure HTTPS Access to Harbor project logo", "ogTitle": "Harbor &ndash; Configure HTTPS Access to Harbor", "title": "\n      \nHarbor docs | Configure HTTPS Access to Harbor\n\n    ", "ogLocale": "en_US", "og:type": ["documentation", "article"], "og:title": "Harbor &ndash; Configure HTTPS Access to Harbor", "twitter:card": "summary", "twitter:site": "@project_harbor", "og:url": "https://goharbor.io/docs/2.12.0/install-config/configure-https/", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "generator": "Hugo 0.74.0", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:image:type": "image/png", "favicon": "https://goharbor.io/favicon.svg", "ogSiteName": "Harbor", "scrapeId": "b70a1de5-6ab2-47e1-afc6-dfb4cd50db28", "sourceURL": "https://goharbor.io/docs/2.12.0/install-config/configure-https", "url": "https://goharbor.io/docs/2.12.0/install-config/configure-https/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: What are some tips for using Configure HTTPS Access to Harbor in harbor-2-12-0 effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nAlways use HTTPS in production environments to avoid man-in-the-middle attacks.\n\nUse trusted third-party CA certificates for production environments.\n\nFor test or development environments, self-signed certificates can be used.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/install-config/configure-https", "title": "Configure HTTPS Access to Harbor", "description": "This page describes how to configure HTTPS access to Harbor by generating SSL certificates and providing them to Harbor and Docker.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:01:26", "type": "best_practices", "page_metadata": {"twitter:creator": "@project_harbor", "og:site_name": "Harbor", "ogUrl": "https://goharbor.io/docs/2.12.0/install-config/configure-https/", "og:locale": "en_US", "og:image:alt": "Harbor &ndash; Configure HTTPS Access to Harbor project logo", "ogTitle": "Harbor &ndash; Configure HTTPS Access to Harbor", "title": "\n      \nHarbor docs | Configure HTTPS Access to Harbor\n\n    ", "ogLocale": "en_US", "og:type": ["documentation", "article"], "og:title": "Harbor &ndash; Configure HTTPS Access to Harbor", "twitter:card": "summary", "twitter:site": "@project_harbor", "og:url": "https://goharbor.io/docs/2.12.0/install-config/configure-https/", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "generator": "Hugo 0.74.0", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:image:type": "image/png", "favicon": "https://goharbor.io/favicon.svg", "ogSiteName": "Harbor", "scrapeId": "b70a1de5-6ab2-47e1-afc6-dfb4cd50db28", "sourceURL": "https://goharbor.io/docs/2.12.0/install-config/configure-https", "url": "https://goharbor.io/docs/2.12.0/install-config/configure-https/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you explain what Configure Internal TLS communication between Harbor Component is in harbor-2-12-0?\n\nAssistant: Sure, I'd be happy to explain Configure Internal TLS communication between Harbor Component in harbor-2-12-0.\n\n# Configure Internal TLS communication between Harbor Component\n\nThis page covers the configuration of internal TLS communication between various components of Harbor, ensuring secure communication in production environments.Here's a quick rundown of what this is about:\n\n## Overview\n\nBy default, The internal communication between Harbor’s component (harbor-core,harbor-jobservice,proxy,harbor-portal,registry,registryctl,trivy_adapter,chartmuseum) use HTTP protocol which might not be secure enough for some production environment. Since Harbor v2.0, TLS can be used for this internal network. In production environments, always use HTTPS is a recommended best practice.\n\n## Enabling Internal TLS\n\nThis functionality is introduced via the `internal_tls` in `harbor.yml` file. To enabled internal TLS, set `enabled` to `true` and set the `dir` value to the path of directory that contains the internal cert files.\n\n## Generating Certificates\n\nAll certs can be automatically generated by `prepare` tool. User also can provide their own CA to generate the other certs. Just put certificate and key of the CA on internal tls cert directory and name them as `harbor_internal_ca.key` and `harbor_internal_ca.crt`. Besides, a user can also provide the certs for all components. However, there are some constraints for the certs:\n\n- First, all certs must be signed by a single unique CA\n- Second, the filename of the internal cert and `CN` field on cert file must follow the convention listed below.\n- Third, because the self signed certificate without SAN was deprecated in Golang 1.5, you must add the SAN extension to your cert files when generating certs by yourself or the Harbor instance will not start up normally. The DNS name in SAN extension should the same as CN field in the table below. For more information please refer to [golang 1.5 release notes](https://golang.org/doc/go1.15#commonname) and [this issue](https://github.com/golang/go/issues/24151).\n\n## Certificate Requirements\n\n| name | usage | CN |\n| --- | --- | --- |\n| `harbor_internal_ca.key` | ca’s key file for internal TLS | N/A |\n| `harbor_internal_ca.crt` | ca’s certificate file for internal TLS | N/A |\n| `core.key` | core’s key file | N/A |\n| `core.crt` | core’s certificate file | `core` |\n| `job_service.key` | job_service’s key file | N/A |\n| `job_service.crt` | job_service’s certificate file | `jobservice` |\n| `proxy.key` | proxy’s key file | N/A |\n| `proxy.crt` | proxy’s certificate file | `proxy` |\n| `portal.key` | portal’s key file | N/A |\n| `portal.crt` | portal’s certificate file | `portal` |\n| `registry.key` | registry’s key file | N/A |\n| `registry.crt` | registry’s certificate file | `registry` |\n| `registryctl.key` | registryctl’s key file | N/A |\n| `registryctl.crt` | registryctl’s certificate file | `registryctl` |\n| `trivy_adapter.key` | trivy_adapter.’s key file | N/A |\n| `trivy_adapter.crt` | trivy_adapter.’s certificate file | `trivy-adapter` |\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/install-config/configure-internal-tls", "title": "Configure Internal TLS communication between Harbor Component", "description": "This page covers the configuration of internal TLS communication between various components of Harbor, ensuring secure communication in production environments.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:02:51", "type": "overview", "page_metadata": {"og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogTitle": "Harbor &ndash; Configure Internal TLS communication between Harbor Component", "ogSiteName": "Harbor", "og:image:alt": "Harbor &ndash; Configure Internal TLS communication between Harbor Component project logo", "og:url": "https://goharbor.io/docs/2.12.0/install-config/configure-internal-tls/", "og:locale": "en_US", "og:site_name": "Harbor", "ogUrl": "https://goharbor.io/docs/2.12.0/install-config/configure-internal-tls/", "favicon": "https://goharbor.io/favicon.svg", "og:image:type": "image/png", "twitter:creator": "@project_harbor", "twitter:site": "@project_harbor", "title": "\n      \nHarbor docs | Configure Internal TLS communication between Harbor Component\n\n    ", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:type": ["documentation", "article"], "twitter:card": "summary", "generator": "Hugo 0.74.0", "og:title": "Harbor &ndash; Configure Internal TLS communication between Harbor Component", "ogLocale": "en_US", "scrapeId": "4dd12230-d6f2-41a2-bdfd-d876449085f9", "sourceURL": "https://goharbor.io/docs/2.12.0/install-config/configure-internal-tls", "url": "https://goharbor.io/docs/2.12.0/install-config/configure-internal-tls/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I overview in harbor-2-12-0?\n\nAssistant: To overview in harbor-2-12-0, here's what you do:\nBy default, The internal communication between Harbor’s component (harbor-core,harbor-jobservice,proxy,harbor-portal,registry,registryctl,trivy_adapter,chartmuseum) use HTTP protocol which might not be secure enough for some production environment. Since Harbor v2.0, TLS can be used for this internal network. In production environments, always use HTTPS is a recommended best practice..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/install-config/configure-internal-tls", "title": "Configure Internal TLS communication between Harbor Component", "description": "This page covers the configuration of internal TLS communication between various components of Harbor, ensuring secure communication in production environments.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:02:51", "type": "section_detail", "page_metadata": {"og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogTitle": "Harbor &ndash; Configure Internal TLS communication between Harbor Component", "ogSiteName": "Harbor", "og:image:alt": "Harbor &ndash; Configure Internal TLS communication between Harbor Component project logo", "og:url": "https://goharbor.io/docs/2.12.0/install-config/configure-internal-tls/", "og:locale": "en_US", "og:site_name": "Harbor", "ogUrl": "https://goharbor.io/docs/2.12.0/install-config/configure-internal-tls/", "favicon": "https://goharbor.io/favicon.svg", "og:image:type": "image/png", "twitter:creator": "@project_harbor", "twitter:site": "@project_harbor", "title": "\n      \nHarbor docs | Configure Internal TLS communication between Harbor Component\n\n    ", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:type": ["documentation", "article"], "twitter:card": "summary", "generator": "Hugo 0.74.0", "og:title": "Harbor &ndash; Configure Internal TLS communication between Harbor Component", "ogLocale": "en_US", "scrapeId": "4dd12230-d6f2-41a2-bdfd-d876449085f9", "sourceURL": "https://goharbor.io/docs/2.12.0/install-config/configure-internal-tls", "url": "https://goharbor.io/docs/2.12.0/install-config/configure-internal-tls/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I enabling internal tls in harbor-2-12-0?\n\nAssistant: To enabling internal tls in harbor-2-12-0, here's what you do:\nThis functionality is introduced via the `internal_tls` in `harbor.yml` file. To enabled internal TLS, set `enabled` to `true` and set the `dir` value to the path of directory that contains the internal cert files..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/install-config/configure-internal-tls", "title": "Configure Internal TLS communication between Harbor Component", "description": "This page covers the configuration of internal TLS communication between various components of Harbor, ensuring secure communication in production environments.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:02:51", "type": "section_detail", "page_metadata": {"og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogTitle": "Harbor &ndash; Configure Internal TLS communication between Harbor Component", "ogSiteName": "Harbor", "og:image:alt": "Harbor &ndash; Configure Internal TLS communication between Harbor Component project logo", "og:url": "https://goharbor.io/docs/2.12.0/install-config/configure-internal-tls/", "og:locale": "en_US", "og:site_name": "Harbor", "ogUrl": "https://goharbor.io/docs/2.12.0/install-config/configure-internal-tls/", "favicon": "https://goharbor.io/favicon.svg", "og:image:type": "image/png", "twitter:creator": "@project_harbor", "twitter:site": "@project_harbor", "title": "\n      \nHarbor docs | Configure Internal TLS communication between Harbor Component\n\n    ", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:type": ["documentation", "article"], "twitter:card": "summary", "generator": "Hugo 0.74.0", "og:title": "Harbor &ndash; Configure Internal TLS communication between Harbor Component", "ogLocale": "en_US", "scrapeId": "4dd12230-d6f2-41a2-bdfd-d876449085f9", "sourceURL": "https://goharbor.io/docs/2.12.0/install-config/configure-internal-tls", "url": "https://goharbor.io/docs/2.12.0/install-config/configure-internal-tls/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I generating certificates in harbor-2-12-0?\n\nAssistant: To generating certificates in harbor-2-12-0, here's what you do:\nAll certs can be automatically generated by `prepare` tool. User also can provide their own CA to generate the other certs. Just put certificate and key of the CA on internal tls cert directory and name them as `harbor_internal_ca.key` and `harbor_internal_ca.crt`. Besides, a user can also provide the certs for all components. However, there are some constraints for the certs:\n\n- First, all certs must be signed by a single unique CA\n- Second, the filename of the internal cert and `CN` field on cert file must follow the convention listed below.\n- Third, because the self signed certificate without SAN was deprecated in Golang 1.5, you must add the SAN extension to your cert files when generating certs by yourself or the Harbor instance will not start up normally. The DNS name in SAN extension should the same as CN field in the table below. For more information please refer to [golang 1.5 release notes](https://golang.org/doc/go1.15#commonname) and [this issue](https://github.com/golang/go/issues/24151)..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/install-config/configure-internal-tls", "title": "Configure Internal TLS communication between Harbor Component", "description": "This page covers the configuration of internal TLS communication between various components of Harbor, ensuring secure communication in production environments.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:02:51", "type": "section_detail", "page_metadata": {"og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogTitle": "Harbor &ndash; Configure Internal TLS communication between Harbor Component", "ogSiteName": "Harbor", "og:image:alt": "Harbor &ndash; Configure Internal TLS communication between Harbor Component project logo", "og:url": "https://goharbor.io/docs/2.12.0/install-config/configure-internal-tls/", "og:locale": "en_US", "og:site_name": "Harbor", "ogUrl": "https://goharbor.io/docs/2.12.0/install-config/configure-internal-tls/", "favicon": "https://goharbor.io/favicon.svg", "og:image:type": "image/png", "twitter:creator": "@project_harbor", "twitter:site": "@project_harbor", "title": "\n      \nHarbor docs | Configure Internal TLS communication between Harbor Component\n\n    ", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:type": ["documentation", "article"], "twitter:card": "summary", "generator": "Hugo 0.74.0", "og:title": "Harbor &ndash; Configure Internal TLS communication between Harbor Component", "ogLocale": "en_US", "scrapeId": "4dd12230-d6f2-41a2-bdfd-d876449085f9", "sourceURL": "https://goharbor.io/docs/2.12.0/install-config/configure-internal-tls", "url": "https://goharbor.io/docs/2.12.0/install-config/configure-internal-tls/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I certificate requirements in harbor-2-12-0?\n\nAssistant: To certificate requirements in harbor-2-12-0, here's what you do:\n| name | usage | CN |\n| --- | --- | --- |\n| `harbor_internal_ca.key` | ca’s key file for internal TLS | N/A |\n| `harbor_internal_ca.crt` | ca’s certificate file for internal TLS | N/A |\n| `core.key` | core’s key file | N/A |\n| `core.crt` | core’s certificate file | `core` |\n| `job_service.key` | job_service’s key file | N/A |\n| `job_service.crt` | job_service’s certificate file | `jobservice` |\n| `proxy.key` | proxy’s key file | N/A |\n| `proxy.crt` | proxy’s certificate file | `proxy` |\n| `portal.key` | portal’s key file | N/A |\n| `portal.crt` | portal’s certificate file | `portal` |\n| `registry.key` | registry’s key file | N/A |\n| `registry.crt` | registry’s certificate file | `registry` |\n| `registryctl.key` | registryctl’s key file | N/A |\n| `registryctl.crt` | registryctl’s certificate file | `registryctl` |\n| `trivy_adapter.key` | trivy_adapter.’s key file | N/A |\n| `trivy_adapter.crt` | trivy_adapter.’s certificate file | `trivy-adapter` |.\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/install-config/configure-internal-tls", "title": "Configure Internal TLS communication between Harbor Component", "description": "This page covers the configuration of internal TLS communication between various components of Harbor, ensuring secure communication in production environments.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:02:51", "type": "section_detail", "page_metadata": {"og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogTitle": "Harbor &ndash; Configure Internal TLS communication between Harbor Component", "ogSiteName": "Harbor", "og:image:alt": "Harbor &ndash; Configure Internal TLS communication between Harbor Component project logo", "og:url": "https://goharbor.io/docs/2.12.0/install-config/configure-internal-tls/", "og:locale": "en_US", "og:site_name": "Harbor", "ogUrl": "https://goharbor.io/docs/2.12.0/install-config/configure-internal-tls/", "favicon": "https://goharbor.io/favicon.svg", "og:image:type": "image/png", "twitter:creator": "@project_harbor", "twitter:site": "@project_harbor", "title": "\n      \nHarbor docs | Configure Internal TLS communication between Harbor Component\n\n    ", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:type": ["documentation", "article"], "twitter:card": "summary", "generator": "Hugo 0.74.0", "og:title": "Harbor &ndash; Configure Internal TLS communication between Harbor Component", "ogLocale": "en_US", "scrapeId": "4dd12230-d6f2-41a2-bdfd-d876449085f9", "sourceURL": "https://goharbor.io/docs/2.12.0/install-config/configure-internal-tls", "url": "https://goharbor.io/docs/2.12.0/install-config/configure-internal-tls/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you give me some code examples for Configure Internal TLS communication between Harbor Component in harbor-2-12-0?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Generate Internal TLS Certificates**:\n\n```yaml\ndocker run -v /:/hostfs goharbor/prepare:<current_harbor_version> gencert -p /path/to/internal/tls/cert\n```\n\nThis snippet shows you how to generate internal tls certificates, which is an important aspect of configure internal tls communication between harbor component.\n\n", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/install-config/configure-internal-tls", "title": "Configure Internal TLS communication between Harbor Component", "description": "This page covers the configuration of internal TLS communication between various components of Harbor, ensuring secure communication in production environments.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:02:51", "type": "code_examples", "page_metadata": {"og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogTitle": "Harbor &ndash; Configure Internal TLS communication between Harbor Component", "ogSiteName": "Harbor", "og:image:alt": "Harbor &ndash; Configure Internal TLS communication between Harbor Component project logo", "og:url": "https://goharbor.io/docs/2.12.0/install-config/configure-internal-tls/", "og:locale": "en_US", "og:site_name": "Harbor", "ogUrl": "https://goharbor.io/docs/2.12.0/install-config/configure-internal-tls/", "favicon": "https://goharbor.io/favicon.svg", "og:image:type": "image/png", "twitter:creator": "@project_harbor", "twitter:site": "@project_harbor", "title": "\n      \nHarbor docs | Configure Internal TLS communication between Harbor Component\n\n    ", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:type": ["documentation", "article"], "twitter:card": "summary", "generator": "Hugo 0.74.0", "og:title": "Harbor &ndash; Configure Internal TLS communication between Harbor Component", "ogLocale": "en_US", "scrapeId": "4dd12230-d6f2-41a2-bdfd-d876449085f9", "sourceURL": "https://goharbor.io/docs/2.12.0/install-config/configure-internal-tls", "url": "https://goharbor.io/docs/2.12.0/install-config/configure-internal-tls/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: What are some tips for using Configure Internal TLS communication between Harbor Component in harbor-2-12-0 effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nIn production environments, always use HTTPS as a recommended best practice.\n\nEnsure all certs are signed by a single unique CA.\n\nFollow the filename and CN field conventions for internal certs.\n\nAdd the SAN extension to cert files when generating certs.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/install-config/configure-internal-tls", "title": "Configure Internal TLS communication between Harbor Component", "description": "This page covers the configuration of internal TLS communication between various components of Harbor, ensuring secure communication in production environments.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:02:51", "type": "best_practices", "page_metadata": {"og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogTitle": "Harbor &ndash; Configure Internal TLS communication between Harbor Component", "ogSiteName": "Harbor", "og:image:alt": "Harbor &ndash; Configure Internal TLS communication between Harbor Component project logo", "og:url": "https://goharbor.io/docs/2.12.0/install-config/configure-internal-tls/", "og:locale": "en_US", "og:site_name": "Harbor", "ogUrl": "https://goharbor.io/docs/2.12.0/install-config/configure-internal-tls/", "favicon": "https://goharbor.io/favicon.svg", "og:image:type": "image/png", "twitter:creator": "@project_harbor", "twitter:site": "@project_harbor", "title": "\n      \nHarbor docs | Configure Internal TLS communication between Harbor Component\n\n    ", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:type": ["documentation", "article"], "twitter:card": "summary", "generator": "Hugo 0.74.0", "og:title": "Harbor &ndash; Configure Internal TLS communication between Harbor Component", "ogLocale": "en_US", "scrapeId": "4dd12230-d6f2-41a2-bdfd-d876449085f9", "sourceURL": "https://goharbor.io/docs/2.12.0/install-config/configure-internal-tls", "url": "https://goharbor.io/docs/2.12.0/install-config/configure-internal-tls/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you explain what Configuring Replication is in harbor-2-12-0?\n\nAssistant: Sure, I'd be happy to explain Configuring Replication in harbor-2-12-0.\n\n# Configuring Replication\n\nReplication allows users to replicate resources, namely images and charts, between Harbor and non-Harbor registries, in both pull or push mode.Here's a quick rundown of what this is about:\n\n## Overview\n\nWhen the Harbor system administrator has set a replication rule, all resources, and any associated Cosign signatures, that match the defined filter patterns are replicated to the destination registry when the triggering condition is met. Each resource that is replicated starts a replication task. If the namespace does not exist in the destination registry, a new namespace is created automatically. If it already exists and the user account that is configured in the replication policy does not have write privileges in it, the process fails. Member information is not replicated.\n\nThere might be some delay during replication based on the condition of the network. If a replication task fails, it is re-scheduled for a few minutes later and retried several times.\n\nDue to API changes, replication between different versions of Harbor is not supported.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/configuring-replication", "title": "Configuring Replication", "description": "Replication allows users to replicate resources, namely images and charts, between Harbor and non-Harbor registries, in both pull or push mode.", "has_code_examples": false, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 03:04:03", "type": "overview", "page_metadata": {"ogTitle": "Harbor &ndash; Configuring Replication", "og:image:alt": "Harbor &ndash; Configuring Replication project logo", "twitter:card": "summary", "generator": "Hugo 0.74.0", "og:site_name": "Harbor", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/configuring-replication/", "ogSiteName": "Harbor", "og:title": "Harbor &ndash; Configuring Replication", "og:locale": "en_US", "ogLocale": "en_US", "og:type": ["documentation", "article"], "og:image:type": "image/png", "title": "\n      \nHarbor docs | Configuring Replication\n\n    ", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "twitter:creator": "@project_harbor", "twitter:site": "@project_harbor", "og:url": "https://goharbor.io/docs/2.12.0/administration/configuring-replication/", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "favicon": "https://goharbor.io/favicon.svg", "scrapeId": "47bfe079-5557-4321-b384-bb580a3d4b27", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/configuring-replication", "url": "https://goharbor.io/docs/2.12.0/administration/configuring-replication/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I overview in harbor-2-12-0?\n\nAssistant: To overview in harbor-2-12-0, here's what you do:\nWhen the Harbor system administrator has set a replication rule, all resources, and any associated Cosign signatures, that match the defined filter patterns are replicated to the destination registry when the triggering condition is met. Each resource that is replicated starts a replication task. If the namespace does not exist in the destination registry, a new namespace is created automatically. If it already exists and the user account that is configured in the replication policy does not have write privileges in it, the process fails. Member information is not replicated.\n\nThere might be some delay during replication based on the condition of the network. If a replication task fails, it is re-scheduled for a few minutes later and retried several times.\n\nDue to API changes, replication between different versions of Harbor is not supported..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/configuring-replication", "title": "Configuring Replication", "description": "Replication allows users to replicate resources, namely images and charts, between Harbor and non-Harbor registries, in both pull or push mode.", "has_code_examples": false, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 03:04:03", "type": "section_detail", "page_metadata": {"ogTitle": "Harbor &ndash; Configuring Replication", "og:image:alt": "Harbor &ndash; Configuring Replication project logo", "twitter:card": "summary", "generator": "Hugo 0.74.0", "og:site_name": "Harbor", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/configuring-replication/", "ogSiteName": "Harbor", "og:title": "Harbor &ndash; Configuring Replication", "og:locale": "en_US", "ogLocale": "en_US", "og:type": ["documentation", "article"], "og:image:type": "image/png", "title": "\n      \nHarbor docs | Configuring Replication\n\n    ", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "twitter:creator": "@project_harbor", "twitter:site": "@project_harbor", "og:url": "https://goharbor.io/docs/2.12.0/administration/configuring-replication/", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "favicon": "https://goharbor.io/favicon.svg", "scrapeId": "47bfe079-5557-4321-b384-bb580a3d4b27", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/configuring-replication", "url": "https://goharbor.io/docs/2.12.0/administration/configuring-replication/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: What are some tips for using Configuring Replication in harbor-2-12-0 effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nEnsure that the user account configured in the replication policy has write privileges in the destination namespace to avoid failures.\n\nBe aware of potential delays during replication based on network conditions.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/configuring-replication", "title": "Configuring Replication", "description": "Replication allows users to replicate resources, namely images and charts, between Harbor and non-Harbor registries, in both pull or push mode.", "has_code_examples": false, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 03:04:03", "type": "best_practices", "page_metadata": {"ogTitle": "Harbor &ndash; Configuring Replication", "og:image:alt": "Harbor &ndash; Configuring Replication project logo", "twitter:card": "summary", "generator": "Hugo 0.74.0", "og:site_name": "Harbor", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/configuring-replication/", "ogSiteName": "Harbor", "og:title": "Harbor &ndash; Configuring Replication", "og:locale": "en_US", "ogLocale": "en_US", "og:type": ["documentation", "article"], "og:image:type": "image/png", "title": "\n      \nHarbor docs | Configuring Replication\n\n    ", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "twitter:creator": "@project_harbor", "twitter:site": "@project_harbor", "og:url": "https://goharbor.io/docs/2.12.0/administration/configuring-replication/", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "favicon": "https://goharbor.io/favicon.svg", "scrapeId": "47bfe079-5557-4321-b384-bb580a3d4b27", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/configuring-replication", "url": "https://goharbor.io/docs/2.12.0/administration/configuring-replication/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you explain what P2P Preheat is in harbor-2-12-0?\n\nAssistant: Sure, I'd be happy to explain P2P Preheat in harbor-2-12-0.\n\n# P2P Preheat\n\nP2P preheating integrates key P2P distribution capabilities of CNCF projects like Dragonfly and Uber Kraken into Harbor and allows users to define policies around this action.Here's a quick rundown of what this is about:\n\n## Overview\n\nP2P preheating integrates key P2P distribution capabilities of CNCF projects like Dragonfly (v1.0.5+) and Uber Kraken (v0.1.3+) into Harbor and allows users to define policies around this action.\n\n## Installation Requirements\n\nBefore preheating images from Harbor, you must first install a P2P engine in your environment. Refer to your P2P distribution engine’s installation guide for specific configuration steps.\n\n## Kraken Configuration\n\nDue to the limitations of the Kraken preheat API, there are extra configurations steps needed. Follow the Kraken configuration guide for more information on integrating Kraken and Harbor.\n\n## Creating P2P Preheat Provider Instances\n\nThe system admin can create P2P preheat provider instances by providing preheat API endpoint of the selected vendor (Dragonfly or Kraken) and related credential if necessary. The created preheat provider instances can be used across all the projects.\n\n## Creating Preheat Policies\n\nThe project admin can create multiple preheat policies under the specified project by setting the resource filters and preheat criteria (including: content trust and vulnerability situation) and choosing the P2P preheat provider instance added by the system administrator. The preheating policy can be triggered to start by manual, on a scheduled basis, or event-based ways. When the preheating policy is executing, all the images that match the criteria defined in the policy will be distributed to and cached in the target P2P engine for future pulling requests.\n\n## Execution Logs\n\nHarbor records each time a preheating policy is executed. You can check the details of preheating executions and the related logs from the Project’s page.\n\n## Version Compatibility\n\nPlease note that due to some historical reasons, there are two versions of Dragonfly, v1 and v2, and v1 has been archived and is no longer maintained, and v2 has a complete refactoring of v1, so v2 is not compatible with v1. The following is the version-compatible relationship between Harbor and Dragonfly, and it is recommended that you upgrade to the latest version of Dragonfly.\n\n| Harbor Version | Dragonfly Version |\n| :-- | :-- |\n| `>=v2.12.0` | `>=v2.1.59` |\n| `<v2.12.0` | `>=v1.0.5, <v2.1.59` |\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/p2p-preheat", "title": "P2P Preheat", "description": "P2P preheating integrates key P2P distribution capabilities of CNCF projects like Dragonfly and Uber Kraken into Harbor and allows users to define policies around this action.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:04:28", "type": "overview", "page_metadata": {"ogSiteName": "Harbor", "title": "\n      \nHarbor docs | P2P Preheat\n\n    ", "og:locale": "en_US", "twitter:card": "summary", "twitter:site": "@project_harbor", "og:url": "https://goharbor.io/docs/2.12.0/administration/p2p-preheat/", "ogTitle": "Harbor &ndash; P2P Preheat", "og:type": ["documentation", "article"], "og:title": "Harbor &ndash; P2P Preheat", "og:image:type": "image/png", "twitter:creator": "@project_harbor", "favicon": "https://goharbor.io/favicon.svg", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/p2p-preheat/", "ogLocale": "en_US", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "generator": "Hugo 0.74.0", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:image:alt": "Harbor &ndash; P2P Preheat project logo", "og:site_name": "Harbor", "scrapeId": "b1acc9bd-ad34-4d51-b3fb-73cd8f32562d", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/p2p-preheat", "url": "https://goharbor.io/docs/2.12.0/administration/p2p-preheat/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I overview in harbor-2-12-0?\n\nAssistant: To overview in harbor-2-12-0, here's what you do:\nP2P preheating integrates key P2P distribution capabilities of CNCF projects like Dragonfly (v1.0.5+) and Uber Kraken (v0.1.3+) into Harbor and allows users to define policies around this action..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/p2p-preheat", "title": "P2P Preheat", "description": "P2P preheating integrates key P2P distribution capabilities of CNCF projects like Dragonfly and Uber Kraken into Harbor and allows users to define policies around this action.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:04:28", "type": "section_detail", "page_metadata": {"ogSiteName": "Harbor", "title": "\n      \nHarbor docs | P2P Preheat\n\n    ", "og:locale": "en_US", "twitter:card": "summary", "twitter:site": "@project_harbor", "og:url": "https://goharbor.io/docs/2.12.0/administration/p2p-preheat/", "ogTitle": "Harbor &ndash; P2P Preheat", "og:type": ["documentation", "article"], "og:title": "Harbor &ndash; P2P Preheat", "og:image:type": "image/png", "twitter:creator": "@project_harbor", "favicon": "https://goharbor.io/favicon.svg", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/p2p-preheat/", "ogLocale": "en_US", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "generator": "Hugo 0.74.0", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:image:alt": "Harbor &ndash; P2P Preheat project logo", "og:site_name": "Harbor", "scrapeId": "b1acc9bd-ad34-4d51-b3fb-73cd8f32562d", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/p2p-preheat", "url": "https://goharbor.io/docs/2.12.0/administration/p2p-preheat/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I installation requirements in harbor-2-12-0?\n\nAssistant: To installation requirements in harbor-2-12-0, here's what you do:\nBefore preheating images from Harbor, you must first install a P2P engine in your environment. Refer to your P2P distribution engine’s installation guide for specific configuration steps..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/p2p-preheat", "title": "P2P Preheat", "description": "P2P preheating integrates key P2P distribution capabilities of CNCF projects like Dragonfly and Uber Kraken into Harbor and allows users to define policies around this action.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:04:28", "type": "section_detail", "page_metadata": {"ogSiteName": "Harbor", "title": "\n      \nHarbor docs | P2P Preheat\n\n    ", "og:locale": "en_US", "twitter:card": "summary", "twitter:site": "@project_harbor", "og:url": "https://goharbor.io/docs/2.12.0/administration/p2p-preheat/", "ogTitle": "Harbor &ndash; P2P Preheat", "og:type": ["documentation", "article"], "og:title": "Harbor &ndash; P2P Preheat", "og:image:type": "image/png", "twitter:creator": "@project_harbor", "favicon": "https://goharbor.io/favicon.svg", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/p2p-preheat/", "ogLocale": "en_US", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "generator": "Hugo 0.74.0", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:image:alt": "Harbor &ndash; P2P Preheat project logo", "og:site_name": "Harbor", "scrapeId": "b1acc9bd-ad34-4d51-b3fb-73cd8f32562d", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/p2p-preheat", "url": "https://goharbor.io/docs/2.12.0/administration/p2p-preheat/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I kraken configuration in harbor-2-12-0?\n\nAssistant: To kraken configuration in harbor-2-12-0, here's what you do:\nDue to the limitations of the Kraken preheat API, there are extra configurations steps needed. Follow the Kraken configuration guide for more information on integrating Kraken and Harbor..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/p2p-preheat", "title": "P2P Preheat", "description": "P2P preheating integrates key P2P distribution capabilities of CNCF projects like Dragonfly and Uber Kraken into Harbor and allows users to define policies around this action.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:04:28", "type": "section_detail", "page_metadata": {"ogSiteName": "Harbor", "title": "\n      \nHarbor docs | P2P Preheat\n\n    ", "og:locale": "en_US", "twitter:card": "summary", "twitter:site": "@project_harbor", "og:url": "https://goharbor.io/docs/2.12.0/administration/p2p-preheat/", "ogTitle": "Harbor &ndash; P2P Preheat", "og:type": ["documentation", "article"], "og:title": "Harbor &ndash; P2P Preheat", "og:image:type": "image/png", "twitter:creator": "@project_harbor", "favicon": "https://goharbor.io/favicon.svg", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/p2p-preheat/", "ogLocale": "en_US", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "generator": "Hugo 0.74.0", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:image:alt": "Harbor &ndash; P2P Preheat project logo", "og:site_name": "Harbor", "scrapeId": "b1acc9bd-ad34-4d51-b3fb-73cd8f32562d", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/p2p-preheat", "url": "https://goharbor.io/docs/2.12.0/administration/p2p-preheat/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I creating p2p preheat provider instances in harbor-2-12-0?\n\nAssistant: To creating p2p preheat provider instances in harbor-2-12-0, here's what you do:\nThe system admin can create P2P preheat provider instances by providing preheat API endpoint of the selected vendor (Dragonfly or Kraken) and related credential if necessary. The created preheat provider instances can be used across all the projects..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/p2p-preheat", "title": "P2P Preheat", "description": "P2P preheating integrates key P2P distribution capabilities of CNCF projects like Dragonfly and Uber Kraken into Harbor and allows users to define policies around this action.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:04:28", "type": "section_detail", "page_metadata": {"ogSiteName": "Harbor", "title": "\n      \nHarbor docs | P2P Preheat\n\n    ", "og:locale": "en_US", "twitter:card": "summary", "twitter:site": "@project_harbor", "og:url": "https://goharbor.io/docs/2.12.0/administration/p2p-preheat/", "ogTitle": "Harbor &ndash; P2P Preheat", "og:type": ["documentation", "article"], "og:title": "Harbor &ndash; P2P Preheat", "og:image:type": "image/png", "twitter:creator": "@project_harbor", "favicon": "https://goharbor.io/favicon.svg", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/p2p-preheat/", "ogLocale": "en_US", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "generator": "Hugo 0.74.0", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:image:alt": "Harbor &ndash; P2P Preheat project logo", "og:site_name": "Harbor", "scrapeId": "b1acc9bd-ad34-4d51-b3fb-73cd8f32562d", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/p2p-preheat", "url": "https://goharbor.io/docs/2.12.0/administration/p2p-preheat/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I creating preheat policies in harbor-2-12-0?\n\nAssistant: To creating preheat policies in harbor-2-12-0, here's what you do:\nThe project admin can create multiple preheat policies under the specified project by setting the resource filters and preheat criteria (including: content trust and vulnerability situation) and choosing the P2P preheat provider instance added by the system administrator. The preheating policy can be triggered to start by manual, on a scheduled basis, or event-based ways. When the preheating policy is executing, all the images that match the criteria defined in the policy will be distributed to and cached in the target P2P engine for future pulling requests..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/p2p-preheat", "title": "P2P Preheat", "description": "P2P preheating integrates key P2P distribution capabilities of CNCF projects like Dragonfly and Uber Kraken into Harbor and allows users to define policies around this action.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:04:28", "type": "section_detail", "page_metadata": {"ogSiteName": "Harbor", "title": "\n      \nHarbor docs | P2P Preheat\n\n    ", "og:locale": "en_US", "twitter:card": "summary", "twitter:site": "@project_harbor", "og:url": "https://goharbor.io/docs/2.12.0/administration/p2p-preheat/", "ogTitle": "Harbor &ndash; P2P Preheat", "og:type": ["documentation", "article"], "og:title": "Harbor &ndash; P2P Preheat", "og:image:type": "image/png", "twitter:creator": "@project_harbor", "favicon": "https://goharbor.io/favicon.svg", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/p2p-preheat/", "ogLocale": "en_US", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "generator": "Hugo 0.74.0", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:image:alt": "Harbor &ndash; P2P Preheat project logo", "og:site_name": "Harbor", "scrapeId": "b1acc9bd-ad34-4d51-b3fb-73cd8f32562d", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/p2p-preheat", "url": "https://goharbor.io/docs/2.12.0/administration/p2p-preheat/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I execution logs in harbor-2-12-0?\n\nAssistant: To execution logs in harbor-2-12-0, here's what you do:\nHarbor records each time a preheating policy is executed. You can check the details of preheating executions and the related logs from the Project’s page..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/p2p-preheat", "title": "P2P Preheat", "description": "P2P preheating integrates key P2P distribution capabilities of CNCF projects like Dragonfly and Uber Kraken into Harbor and allows users to define policies around this action.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:04:28", "type": "section_detail", "page_metadata": {"ogSiteName": "Harbor", "title": "\n      \nHarbor docs | P2P Preheat\n\n    ", "og:locale": "en_US", "twitter:card": "summary", "twitter:site": "@project_harbor", "og:url": "https://goharbor.io/docs/2.12.0/administration/p2p-preheat/", "ogTitle": "Harbor &ndash; P2P Preheat", "og:type": ["documentation", "article"], "og:title": "Harbor &ndash; P2P Preheat", "og:image:type": "image/png", "twitter:creator": "@project_harbor", "favicon": "https://goharbor.io/favicon.svg", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/p2p-preheat/", "ogLocale": "en_US", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "generator": "Hugo 0.74.0", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:image:alt": "Harbor &ndash; P2P Preheat project logo", "og:site_name": "Harbor", "scrapeId": "b1acc9bd-ad34-4d51-b3fb-73cd8f32562d", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/p2p-preheat", "url": "https://goharbor.io/docs/2.12.0/administration/p2p-preheat/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I version compatibility in harbor-2-12-0?\n\nAssistant: To version compatibility in harbor-2-12-0, here's what you do:\nPlease note that due to some historical reasons, there are two versions of Dragonfly, v1 and v2, and v1 has been archived and is no longer maintained, and v2 has a complete refactoring of v1, so v2 is not compatible with v1. The following is the version-compatible relationship between Harbor and Dragonfly, and it is recommended that you upgrade to the latest version of Dragonfly.\n\n| Harbor Version | Dragonfly Version |\n| :-- | :-- |\n| `>=v2.12.0` | `>=v2.1.59` |\n| `<v2.12.0` | `>=v1.0.5, <v2.1.59` |.\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/p2p-preheat", "title": "P2P Preheat", "description": "P2P preheating integrates key P2P distribution capabilities of CNCF projects like Dragonfly and Uber Kraken into Harbor and allows users to define policies around this action.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:04:28", "type": "section_detail", "page_metadata": {"ogSiteName": "Harbor", "title": "\n      \nHarbor docs | P2P Preheat\n\n    ", "og:locale": "en_US", "twitter:card": "summary", "twitter:site": "@project_harbor", "og:url": "https://goharbor.io/docs/2.12.0/administration/p2p-preheat/", "ogTitle": "Harbor &ndash; P2P Preheat", "og:type": ["documentation", "article"], "og:title": "Harbor &ndash; P2P Preheat", "og:image:type": "image/png", "twitter:creator": "@project_harbor", "favicon": "https://goharbor.io/favicon.svg", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/p2p-preheat/", "ogLocale": "en_US", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "generator": "Hugo 0.74.0", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:image:alt": "Harbor &ndash; P2P Preheat project logo", "og:site_name": "Harbor", "scrapeId": "b1acc9bd-ad34-4d51-b3fb-73cd8f32562d", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/p2p-preheat", "url": "https://goharbor.io/docs/2.12.0/administration/p2p-preheat/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you give me some code examples for P2P Preheat in harbor-2-12-0?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Version Compatibility Matrix**:\n\n```yaml\n| Harbor Version | Dragonfly Version |\n| :-- | :-- |\n| `>=v2.12.0` | `>=v2.1.59` |\n| `<v2.12.0` | `>=v1.0.5, <v2.1.59` |\n```\n\nThis snippet shows you how to version compatibility matrix, which is an important aspect of p2p preheat.\n\n", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/p2p-preheat", "title": "P2P Preheat", "description": "P2P preheating integrates key P2P distribution capabilities of CNCF projects like Dragonfly and Uber Kraken into Harbor and allows users to define policies around this action.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:04:28", "type": "code_examples", "page_metadata": {"ogSiteName": "Harbor", "title": "\n      \nHarbor docs | P2P Preheat\n\n    ", "og:locale": "en_US", "twitter:card": "summary", "twitter:site": "@project_harbor", "og:url": "https://goharbor.io/docs/2.12.0/administration/p2p-preheat/", "ogTitle": "Harbor &ndash; P2P Preheat", "og:type": ["documentation", "article"], "og:title": "Harbor &ndash; P2P Preheat", "og:image:type": "image/png", "twitter:creator": "@project_harbor", "favicon": "https://goharbor.io/favicon.svg", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/p2p-preheat/", "ogLocale": "en_US", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "generator": "Hugo 0.74.0", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:image:alt": "Harbor &ndash; P2P Preheat project logo", "og:site_name": "Harbor", "scrapeId": "b1acc9bd-ad34-4d51-b3fb-73cd8f32562d", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/p2p-preheat", "url": "https://goharbor.io/docs/2.12.0/administration/p2p-preheat/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: What are some tips for using P2P Preheat in harbor-2-12-0 effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nRefer to your P2P distribution engine’s installation guide for specific configuration steps.\n\nFollow the Kraken configuration guide for more information on integrating Kraken and Harbor.\n\nIt is recommended to upgrade to the latest version of Dragonfly.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/p2p-preheat", "title": "P2P Preheat", "description": "P2P preheating integrates key P2P distribution capabilities of CNCF projects like Dragonfly and Uber Kraken into Harbor and allows users to define policies around this action.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:04:28", "type": "best_practices", "page_metadata": {"ogSiteName": "Harbor", "title": "\n      \nHarbor docs | P2P Preheat\n\n    ", "og:locale": "en_US", "twitter:card": "summary", "twitter:site": "@project_harbor", "og:url": "https://goharbor.io/docs/2.12.0/administration/p2p-preheat/", "ogTitle": "Harbor &ndash; P2P Preheat", "og:type": ["documentation", "article"], "og:title": "Harbor &ndash; P2P Preheat", "og:image:type": "image/png", "twitter:creator": "@project_harbor", "favicon": "https://goharbor.io/favicon.svg", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/p2p-preheat/", "ogLocale": "en_US", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "generator": "Hugo 0.74.0", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:image:alt": "Harbor &ndash; P2P Preheat project logo", "og:site_name": "Harbor", "scrapeId": "b1acc9bd-ad34-4d51-b3fb-73cd8f32562d", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/p2p-preheat", "url": "https://goharbor.io/docs/2.12.0/administration/p2p-preheat/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you explain what Preheat Images is in harbor-2-12-0?\n\nAssistant: Sure, I'd be happy to explain Preheat Images in harbor-2-12-0.\n\n# Preheat Images\n\nThis page provides instructions on how to preheat images in Harbor, including creating and managing preheat policies.Here's a quick rundown of what this is about:\n\n## Create Preheat Policy\n\nTo preheat images, you need to create a preheat policy first.\n\n01. Go to **Projects** and open your project from the project list.\n\n02. Open the **P2P Preheat** tab and then click **\\+ NEW POLICY** button to open the policy creation dialog.\n\n03. For the **Provider**, select a pre-configured preheat provider instance as target from the dropdown list.\n\n04. Input a suitable name and description(optional) for the policy to identify and describe your creating policy.\n\n05. Set the repository filter(required) by following the [doublestar pattern](https://github.com/bmatcuk/doublestar#patterns).\n\n06. Set the tags filter(required) by following the same [doublestar pattern](https://github.com/bmatcuk/doublestar#patterns).\n\n07. Optionally, set the labels filter. Only images with matching labels will be put into the candidate list. Use comma to split multiple labels, e.g.: `label1`, `label2`, `labeln` and the relationship among multiple labels is **AND**.\n\n08. Under certain conditions(deployment security is configured), more criteria may be visible in the policy.\n\n    The criteria **Only signed images** and **No vulnerability severity of [severity] and above** are directly inherited from corresponding settings of the project configuration. They cannot be changed in the preheat policy, and the only way to change them is via project configuration. If they’re configured, they will be visible in the preheat policy and taken into account when calculating the phreating candidates, otherwise, they will be hidden and no influences to the policy.\n\n    - If the **Deployment Security** configuration option **Enable content trust** is set, **Only signed images** will also be available as a criteria for the preheating policy. This means that only images with valid signatures will be preheated.\n    - If a vulnerability scanner is configured and the **Deployment Security** configuration option **Prevent vulnerable images from pulling** is set, **No vulnerability severity of [severity] and above** will also be available as a preheating criteria. With this criteria, only the images whose vulnerability severity match the criteria can be taken into account.\n\n09. For the policy **trigger**, there are multiple ways supported, choose the proper one based on your use case.\n\n    - **Manual**: manually start the preheating process.\n    - **Schedule**: set CRON style schedule to periodically start the preheating process.\n      - some pre-defined cron schedule patterns are provided: `Hourly`, `Daily` and `Weekly`.\n      - customize your own cron schedule by following the [cron guide](https://en.wikipedia.org/wiki/Cron) - e.g.: `*/15 0 * * *`, execute policy every 15 minutes at every midnight\n    - **Event-based**: check if the image should be preheated when the related events occurred, the events includes:\n      - **OnPush**: when the image has been pushed to Harbor\n      - **OnScanComplete**: when the image has been scanned successfully (no action when scan failed)\n      - **OnLabel**: when the image has been marked with labels (no action when a label is removed)\n\nWhen an event occurs, the preheating process is not started immediately. Instead an evaluation process is launched. The evaluation process will traverse the existing event-based preheat policies under the project where the target image bound in the event is pushed. If the target image matches the pre-defined filters and criteria of some event-based preheat policies, then the matched event-based preheat policies with fixed source image will be executed to complete the preheating process.\n\n10. Click **ADD** button to save the policy.\n\n## Manage Preheat Policy\n\n1. Go to **Projects** and open your project from the project list.\n\n2. Open the **P2P Preheat** tab, all the existing preheat policies are listed in the datagrid view.\n\n3. Select the policy by checking the checkbox at front of the row, click **ACTIONS** to open the drop down menu.\n\n4. Click **Execute** to start the execution of the selected policy immediately.\n\n5. Click **Deactivate**/ **Enable** to deactivate/enable the selected policy.\n\n    A deactivated policy cannot be executed.\n\n6. Click **Edit** to open the edit dialog and do modifications to the selected policy.\n\n7. Click **Delete** to delete the selected policy.\n\n    If the executions of the selected policy are still in progress, the deletion will be rejected.\n\n## Manage Executions of Preheat Policy\n\n1. Select the policy by clicking the radio button at the front of the row. If the policy has been executed before, the relevant executions will be listed in the execution data grid.\n\n2. For each execution, you can find the following data:\n   - ID: identity of the execution with a hyperlink pointing to the detailed page\n   - Status: `Success`, `Error` and `Running`\n   - Trigger: the trigger way of the execution, it can be `Manual`, `Scheduled` and `Event-based`\n   - Start Time: the start time of the execution (rendered as local time format)\n   - Duration: the overall duration of the execution\n   - Success Rate: each execution may contain multiple tasks, the percent of the success ones over the total\n\nFor the `Error` status, there will be a small info icon with tooltip that containing the error message next to it. For the `Success` status, if there are no images matching the filters and criteria defined in the policy, a small info icon with tooltip which indicates that no images to preheat will be placed next to it.\n\n3. Click the ID hyperlink to open the detailed page of the execution.\n\n4. Besides the general info, you can also find a simple metrics grouped by the status of tasks:\n   - **SUCCESS**: how many tasks have been finished\n   - **FAILURE**: how many tasks are failed to complete\n   - **IN PROGRESS**: how many tasks are under running\n   - **STOPPED**: how many tasks have been stopped\n5. All the related tasks of the execution are listed in the task data grid. You can find more detailed info of the task:\n   - **Artifact**: which artifact is preheating\n   - **Status**: the status of this preheating task\n   - **Digest**: the digest of the preheating image\n   - **Type**: the artifact type of the preheating artifact\n   - **Start Time**: the start time of this preheating task\n   - **Duration**: the overall duration of this preheating task\n   - **Logs**: a hyperlink to open the task logs for checking more details of this preheating task\n\nHarbor only supports preheating images so the value of `Type` will always be `image`.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/preheat-images", "title": "Preheat Images", "description": "This page provides instructions on how to preheat images in Harbor, including creating and managing preheat policies.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:04:58", "type": "overview", "page_metadata": {"og:image:alt": "Harbor &ndash; Preheat Images project logo", "favicon": "https://goharbor.io/favicon.svg", "ogLocale": "en_US", "og:locale": "en_US", "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/preheat-images/", "og:type": ["documentation", "article"], "og:site_name": "Harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogTitle": "Harbor &ndash; Preheat Images", "twitter:creator": "@project_harbor", "title": "\n      \nHarbor docs | Preheat Images\n\n    ", "twitter:card": "summary", "og:image:type": "image/png", "generator": "Hugo 0.74.0", "ogSiteName": "Harbor", "og:title": "Harbor &ndash; Preheat Images", "twitter:site": "@project_harbor", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/preheat-images/", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "scrapeId": "cef67a81-1da5-47bb-8750-7f5c80bc4f8a", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/preheat-images", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/preheat-images/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I create preheat policy in harbor-2-12-0?\n\nAssistant: To create preheat policy in harbor-2-12-0, here's what you do:\nTo preheat images, you need to create a preheat policy first.\n\n01. Go to **Projects** and open your project from the project list.\n\n02. Open the **P2P Preheat** tab and then click **\\+ NEW POLICY** button to open the policy creation dialog.\n\n03. For the **Provider**, select a pre-configured preheat provider instance as target from the dropdown list.\n\n04. Input a suitable name and description(optional) for the policy to identify and describe your creating policy.\n\n05. Set the repository filter(required) by following the [doublestar pattern](https://github.com/bmatcuk/doublestar#patterns).\n\n06. Set the tags filter(required) by following the same [doublestar pattern](https://github.com/bmatcuk/doublestar#patterns).\n\n07. Optionally, set the labels filter. Only images with matching labels will be put into the candidate list. Use comma to split multiple labels, e.g.: `label1`, `label2`, `labeln` and the relationship among multiple labels is **AND**.\n\n08. Under certain conditions(deployment security is configured), more criteria may be visible in the policy.\n\n    The criteria **Only signed images** and **No vulnerability severity of [severity] and above** are directly inherited from corresponding settings of the project configuration. They cannot be changed in the preheat policy, and the only way to change them is via project configuration. If they’re configured, they will be visible in the preheat policy and taken into account when calculating the phreating candidates, otherwise, they will be hidden and no influences to the policy.\n\n    - If the **Deployment Security** configuration option **Enable content trust** is set, **Only signed images** will also be available as a criteria for the preheating policy. This means that only images with valid signatures will be preheated.\n    - If a vulnerability scanner is configured and the **Deployment Security** configuration option **Prevent vulnerable images from pulling** is set, **No vulnerability severity of [severity] and above** will also be available as a preheating criteria. With this criteria, only the images whose vulnerability severity match the criteria can be taken into account.\n\n09. For the policy **trigger**, there are multiple ways supported, choose the proper one based on your use case.\n\n    - **Manual**: manually start the preheating process.\n    - **Schedule**: set CRON style schedule to periodically start the preheating process.\n      - some pre-defined cron schedule patterns are provided: `Hourly`, `Daily` and `Weekly`.\n      - customize your own cron schedule by following the [cron guide](https://en.wikipedia.org/wiki/Cron) - e.g.: `*/15 0 * * *`, execute policy every 15 minutes at every midnight\n    - **Event-based**: check if the image should be preheated when the related events occurred, the events includes:\n      - **OnPush**: when the image has been pushed to Harbor\n      - **OnScanComplete**: when the image has been scanned successfully (no action when scan failed)\n      - **OnLabel**: when the image has been marked with labels (no action when a label is removed)\n\nWhen an event occurs, the preheating process is not started immediately. Instead an evaluation process is launched. The evaluation process will traverse the existing event-based preheat policies under the project where the target image bound in the event is pushed. If the target image matches the pre-defined filters and criteria of some event-based preheat policies, then the matched event-based preheat policies with fixed source image will be executed to complete the preheating process.\n\n10. Click **ADD** button to save the policy..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/preheat-images", "title": "Preheat Images", "description": "This page provides instructions on how to preheat images in Harbor, including creating and managing preheat policies.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:04:58", "type": "section_detail", "page_metadata": {"og:image:alt": "Harbor &ndash; Preheat Images project logo", "favicon": "https://goharbor.io/favicon.svg", "ogLocale": "en_US", "og:locale": "en_US", "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/preheat-images/", "og:type": ["documentation", "article"], "og:site_name": "Harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogTitle": "Harbor &ndash; Preheat Images", "twitter:creator": "@project_harbor", "title": "\n      \nHarbor docs | Preheat Images\n\n    ", "twitter:card": "summary", "og:image:type": "image/png", "generator": "Hugo 0.74.0", "ogSiteName": "Harbor", "og:title": "Harbor &ndash; Preheat Images", "twitter:site": "@project_harbor", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/preheat-images/", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "scrapeId": "cef67a81-1da5-47bb-8750-7f5c80bc4f8a", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/preheat-images", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/preheat-images/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I manage preheat policy in harbor-2-12-0?\n\nAssistant: To manage preheat policy in harbor-2-12-0, here's what you do:\n1. Go to **Projects** and open your project from the project list.\n\n2. Open the **P2P Preheat** tab, all the existing preheat policies are listed in the datagrid view.\n\n3. Select the policy by checking the checkbox at front of the row, click **ACTIONS** to open the drop down menu.\n\n4. Click **Execute** to start the execution of the selected policy immediately.\n\n5. Click **Deactivate**/ **Enable** to deactivate/enable the selected policy.\n\n    A deactivated policy cannot be executed.\n\n6. Click **Edit** to open the edit dialog and do modifications to the selected policy.\n\n7. Click **Delete** to delete the selected policy.\n\n    If the executions of the selected policy are still in progress, the deletion will be rejected..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/preheat-images", "title": "Preheat Images", "description": "This page provides instructions on how to preheat images in Harbor, including creating and managing preheat policies.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:04:58", "type": "section_detail", "page_metadata": {"og:image:alt": "Harbor &ndash; Preheat Images project logo", "favicon": "https://goharbor.io/favicon.svg", "ogLocale": "en_US", "og:locale": "en_US", "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/preheat-images/", "og:type": ["documentation", "article"], "og:site_name": "Harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogTitle": "Harbor &ndash; Preheat Images", "twitter:creator": "@project_harbor", "title": "\n      \nHarbor docs | Preheat Images\n\n    ", "twitter:card": "summary", "og:image:type": "image/png", "generator": "Hugo 0.74.0", "ogSiteName": "Harbor", "og:title": "Harbor &ndash; Preheat Images", "twitter:site": "@project_harbor", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/preheat-images/", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "scrapeId": "cef67a81-1da5-47bb-8750-7f5c80bc4f8a", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/preheat-images", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/preheat-images/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I manage executions of preheat policy in harbor-2-12-0?\n\nAssistant: To manage executions of preheat policy in harbor-2-12-0, here's what you do:\n1. Select the policy by clicking the radio button at the front of the row. If the policy has been executed before, the relevant executions will be listed in the execution data grid.\n\n2. For each execution, you can find the following data:\n   - ID: identity of the execution with a hyperlink pointing to the detailed page\n   - Status: `Success`, `Error` and `Running`\n   - Trigger: the trigger way of the execution, it can be `Manual`, `Scheduled` and `Event-based`\n   - Start Time: the start time of the execution (rendered as local time format)\n   - Duration: the overall duration of the execution\n   - Success Rate: each execution may contain multiple tasks, the percent of the success ones over the total\n\nFor the `Error` status, there will be a small info icon with tooltip that containing the error message next to it. For the `Success` status, if there are no images matching the filters and criteria defined in the policy, a small info icon with tooltip which indicates that no images to preheat will be placed next to it.\n\n3. Click the ID hyperlink to open the detailed page of the execution.\n\n4. Besides the general info, you can also find a simple metrics grouped by the status of tasks:\n   - **SUCCESS**: how many tasks have been finished\n   - **FAILURE**: how many tasks are failed to complete\n   - **IN PROGRESS**: how many tasks are under running\n   - **STOPPED**: how many tasks have been stopped\n5. All the related tasks of the execution are listed in the task data grid. You can find more detailed info of the task:\n   - **Artifact**: which artifact is preheating\n   - **Status**: the status of this preheating task\n   - **Digest**: the digest of the preheating image\n   - **Type**: the artifact type of the preheating artifact\n   - **Start Time**: the start time of this preheating task\n   - **Duration**: the overall duration of this preheating task\n   - **Logs**: a hyperlink to open the task logs for checking more details of this preheating task\n\nHarbor only supports preheating images so the value of `Type` will always be `image`..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/preheat-images", "title": "Preheat Images", "description": "This page provides instructions on how to preheat images in Harbor, including creating and managing preheat policies.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:04:58", "type": "section_detail", "page_metadata": {"og:image:alt": "Harbor &ndash; Preheat Images project logo", "favicon": "https://goharbor.io/favicon.svg", "ogLocale": "en_US", "og:locale": "en_US", "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/preheat-images/", "og:type": ["documentation", "article"], "og:site_name": "Harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogTitle": "Harbor &ndash; Preheat Images", "twitter:creator": "@project_harbor", "title": "\n      \nHarbor docs | Preheat Images\n\n    ", "twitter:card": "summary", "og:image:type": "image/png", "generator": "Hugo 0.74.0", "ogSiteName": "Harbor", "og:title": "Harbor &ndash; Preheat Images", "twitter:site": "@project_harbor", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/preheat-images/", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "scrapeId": "cef67a81-1da5-47bb-8750-7f5c80bc4f8a", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/preheat-images", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/preheat-images/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you give me some code examples for Preheat Images in harbor-2-12-0?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Cron Schedule Example**:\n\n```yaml\n*/15 0 * * *\n```\n\nThis snippet shows you how to cron schedule example, which is an important aspect of preheat images.\n\n", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/preheat-images", "title": "Preheat Images", "description": "This page provides instructions on how to preheat images in Harbor, including creating and managing preheat policies.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:04:58", "type": "code_examples", "page_metadata": {"og:image:alt": "Harbor &ndash; Preheat Images project logo", "favicon": "https://goharbor.io/favicon.svg", "ogLocale": "en_US", "og:locale": "en_US", "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/preheat-images/", "og:type": ["documentation", "article"], "og:site_name": "Harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogTitle": "Harbor &ndash; Preheat Images", "twitter:creator": "@project_harbor", "title": "\n      \nHarbor docs | Preheat Images\n\n    ", "twitter:card": "summary", "og:image:type": "image/png", "generator": "Hugo 0.74.0", "ogSiteName": "Harbor", "og:title": "Harbor &ndash; Preheat Images", "twitter:site": "@project_harbor", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/preheat-images/", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "scrapeId": "cef67a81-1da5-47bb-8750-7f5c80bc4f8a", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/preheat-images", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/preheat-images/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: What are some tips for using Preheat Images in harbor-2-12-0 effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nUse the doublestar pattern for repository and tags filters.\n\nEnsure to configure deployment security options for better control over image preheating.\n\nRegularly review and manage preheat policies to ensure they meet current project needs.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/preheat-images", "title": "Preheat Images", "description": "This page provides instructions on how to preheat images in Harbor, including creating and managing preheat policies.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:04:58", "type": "best_practices", "page_metadata": {"og:image:alt": "Harbor &ndash; Preheat Images project logo", "favicon": "https://goharbor.io/favicon.svg", "ogLocale": "en_US", "og:locale": "en_US", "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/preheat-images/", "og:type": ["documentation", "article"], "og:site_name": "Harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogTitle": "Harbor &ndash; Preheat Images", "twitter:creator": "@project_harbor", "title": "\n      \nHarbor docs | Preheat Images\n\n    ", "twitter:card": "summary", "og:image:type": "image/png", "generator": "Hugo 0.74.0", "ogSiteName": "Harbor", "og:title": "Harbor &ndash; Preheat Images", "twitter:site": "@project_harbor", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/preheat-images/", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "scrapeId": "cef67a81-1da5-47bb-8750-7f5c80bc4f8a", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/preheat-images", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/preheat-images/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you explain what Project Configuration is in harbor-2-12-0?\n\nAssistant: Sure, I'd be happy to explain Project Configuration in harbor-2-12-0.\n\n# Project Configuration\n\nThis page covers how to configure or reconfigure project properties in Harbor, including settings for vulnerability management and project accessibility.Here's a quick rundown of what this is about:\n\n## Project Configuration\n\nAfter the initial creation of a project, you can configure or reconfigure its properties in the **Configuration** tab for that project.\n\n1. Log in to the Harbor interface with an account that has at least project administrator privileges.\n2. Go to **Projects** and select a project.\n3. Select the **Configuration** tab.\n4. To make all repositories under the project accessible to everyone, select the `Public` checkbox, or deselect this checkbox to make the project private.\n5. To prevent un-signed images under the project from being pulled, select the `Prevent vulnerable images from running` checkbox.\n\n## Searching projects and repositories\n\nEnter a keyword in the search field at the top to list all matching projects and repositories. The search result includes both public and private repositories you have access to.\n\n## Configure Vulnerability Settings in Projects\n\nYou can configure projects so that images with vulnerabilities cannot be run, and to automatically scan images as soon as they are pushed into the project.\n\n1. Log in to the Harbor interface with an account that has at least project administrator privileges.\n2. Go to **Projects** and select a project.\n3. Select the **Configuration** tab.\n4. To prevent vulnerable images under the project from being pulled, select the **Prevent vulnerable images from running** checkbox.\n5. Select the severity level of vulnerabilities to prevent images from running.\n\nImages cannot be pulled if their level is equal to or higher than the selected level of severity. Harbor does not prevent images with a vulnerability severity of `negligible` from running.\n6. To activate an immediate vulnerability scan on new images that are pushed to the project, select the **Automatically scan images on push** check box.\n\n## Build history\n\nBuild history makes it easy to see the contents of a container image, find the code which builds an image, or locate the image for a source repository.\n\nIn Harbor portal, enter your project, select the repository, click on the link of artifact you’d like to see its build history, the detail page will be opened. Then switch to `Build History` tab, you can see the build history information.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration", "title": "Project Configuration", "description": "This page covers how to configure or reconfigure project properties in Harbor, including settings for vulnerability management and project accessibility.", "has_code_examples": false, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:05:17", "type": "overview", "page_metadata": {"ogTitle": "Harbor &ndash; Project Configuration", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "ogLocale": "en_US", "og:type": ["documentation", "article"], "og:locale": "en_US", "og:site_name": "Harbor", "og:image:type": "image/png", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "twitter:card": "summary", "twitter:site": "@project_harbor", "twitter:creator": "@project_harbor", "og:image:alt": "Harbor &ndash; Project Configuration project logo", "ogSiteName": "Harbor", "generator": "Hugo 0.74.0", "og:title": "Harbor &ndash; Project Configuration", "favicon": "https://goharbor.io/favicon.svg", "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/", "title": "\n      \nHarbor docs | Project Configuration\n\n    ", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/", "scrapeId": "2d756fd6-05ab-4e7e-93f4-0a4d3382eaef", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I project configuration in harbor-2-12-0?\n\nAssistant: To project configuration in harbor-2-12-0, here's what you do:\nAfter the initial creation of a project, you can configure or reconfigure its properties in the **Configuration** tab for that project.\n\n1. Log in to the Harbor interface with an account that has at least project administrator privileges.\n2. Go to **Projects** and select a project.\n3. Select the **Configuration** tab.\n4. To make all repositories under the project accessible to everyone, select the `Public` checkbox, or deselect this checkbox to make the project private.\n5. To prevent un-signed images under the project from being pulled, select the `Prevent vulnerable images from running` checkbox..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration", "title": "Project Configuration", "description": "This page covers how to configure or reconfigure project properties in Harbor, including settings for vulnerability management and project accessibility.", "has_code_examples": false, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:05:17", "type": "section_detail", "page_metadata": {"ogTitle": "Harbor &ndash; Project Configuration", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "ogLocale": "en_US", "og:type": ["documentation", "article"], "og:locale": "en_US", "og:site_name": "Harbor", "og:image:type": "image/png", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "twitter:card": "summary", "twitter:site": "@project_harbor", "twitter:creator": "@project_harbor", "og:image:alt": "Harbor &ndash; Project Configuration project logo", "ogSiteName": "Harbor", "generator": "Hugo 0.74.0", "og:title": "Harbor &ndash; Project Configuration", "favicon": "https://goharbor.io/favicon.svg", "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/", "title": "\n      \nHarbor docs | Project Configuration\n\n    ", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/", "scrapeId": "2d756fd6-05ab-4e7e-93f4-0a4d3382eaef", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I searching projects and repositories in harbor-2-12-0?\n\nAssistant: To searching projects and repositories in harbor-2-12-0, here's what you do:\nEnter a keyword in the search field at the top to list all matching projects and repositories. The search result includes both public and private repositories you have access to..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration", "title": "Project Configuration", "description": "This page covers how to configure or reconfigure project properties in Harbor, including settings for vulnerability management and project accessibility.", "has_code_examples": false, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:05:17", "type": "section_detail", "page_metadata": {"ogTitle": "Harbor &ndash; Project Configuration", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "ogLocale": "en_US", "og:type": ["documentation", "article"], "og:locale": "en_US", "og:site_name": "Harbor", "og:image:type": "image/png", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "twitter:card": "summary", "twitter:site": "@project_harbor", "twitter:creator": "@project_harbor", "og:image:alt": "Harbor &ndash; Project Configuration project logo", "ogSiteName": "Harbor", "generator": "Hugo 0.74.0", "og:title": "Harbor &ndash; Project Configuration", "favicon": "https://goharbor.io/favicon.svg", "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/", "title": "\n      \nHarbor docs | Project Configuration\n\n    ", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/", "scrapeId": "2d756fd6-05ab-4e7e-93f4-0a4d3382eaef", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I configure vulnerability settings in projects in harbor-2-12-0?\n\nAssistant: To configure vulnerability settings in projects in harbor-2-12-0, here's what you do:\nYou can configure projects so that images with vulnerabilities cannot be run, and to automatically scan images as soon as they are pushed into the project.\n\n1. Log in to the Harbor interface with an account that has at least project administrator privileges.\n2. Go to **Projects** and select a project.\n3. Select the **Configuration** tab.\n4. To prevent vulnerable images under the project from being pulled, select the **Prevent vulnerable images from running** checkbox.\n5. Select the severity level of vulnerabilities to prevent images from running.\n\nImages cannot be pulled if their level is equal to or higher than the selected level of severity. Harbor does not prevent images with a vulnerability severity of `negligible` from running.\n6. To activate an immediate vulnerability scan on new images that are pushed to the project, select the **Automatically scan images on push** check box..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration", "title": "Project Configuration", "description": "This page covers how to configure or reconfigure project properties in Harbor, including settings for vulnerability management and project accessibility.", "has_code_examples": false, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:05:17", "type": "section_detail", "page_metadata": {"ogTitle": "Harbor &ndash; Project Configuration", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "ogLocale": "en_US", "og:type": ["documentation", "article"], "og:locale": "en_US", "og:site_name": "Harbor", "og:image:type": "image/png", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "twitter:card": "summary", "twitter:site": "@project_harbor", "twitter:creator": "@project_harbor", "og:image:alt": "Harbor &ndash; Project Configuration project logo", "ogSiteName": "Harbor", "generator": "Hugo 0.74.0", "og:title": "Harbor &ndash; Project Configuration", "favicon": "https://goharbor.io/favicon.svg", "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/", "title": "\n      \nHarbor docs | Project Configuration\n\n    ", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/", "scrapeId": "2d756fd6-05ab-4e7e-93f4-0a4d3382eaef", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I build history in harbor-2-12-0?\n\nAssistant: To build history in harbor-2-12-0, here's what you do:\nBuild history makes it easy to see the contents of a container image, find the code which builds an image, or locate the image for a source repository.\n\nIn Harbor portal, enter your project, select the repository, click on the link of artifact you’d like to see its build history, the detail page will be opened. Then switch to `Build History` tab, you can see the build history information..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration", "title": "Project Configuration", "description": "This page covers how to configure or reconfigure project properties in Harbor, including settings for vulnerability management and project accessibility.", "has_code_examples": false, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:05:17", "type": "section_detail", "page_metadata": {"ogTitle": "Harbor &ndash; Project Configuration", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "ogLocale": "en_US", "og:type": ["documentation", "article"], "og:locale": "en_US", "og:site_name": "Harbor", "og:image:type": "image/png", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "twitter:card": "summary", "twitter:site": "@project_harbor", "twitter:creator": "@project_harbor", "og:image:alt": "Harbor &ndash; Project Configuration project logo", "ogSiteName": "Harbor", "generator": "Hugo 0.74.0", "og:title": "Harbor &ndash; Project Configuration", "favicon": "https://goharbor.io/favicon.svg", "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/", "title": "\n      \nHarbor docs | Project Configuration\n\n    ", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/", "scrapeId": "2d756fd6-05ab-4e7e-93f4-0a4d3382eaef", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: What are some tips for using Project Configuration in harbor-2-12-0 effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nLog in with an account that has project administrator privileges to access configuration settings.\n\nSelect the appropriate severity level for vulnerabilities to ensure proper image management.\n\nUtilize the search field effectively to find projects and repositories quickly.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration", "title": "Project Configuration", "description": "This page covers how to configure or reconfigure project properties in Harbor, including settings for vulnerability management and project accessibility.", "has_code_examples": false, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:05:17", "type": "best_practices", "page_metadata": {"ogTitle": "Harbor &ndash; Project Configuration", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "ogLocale": "en_US", "og:type": ["documentation", "article"], "og:locale": "en_US", "og:site_name": "Harbor", "og:image:type": "image/png", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "twitter:card": "summary", "twitter:site": "@project_harbor", "twitter:creator": "@project_harbor", "og:image:alt": "Harbor &ndash; Project Configuration project logo", "ogSiteName": "Harbor", "generator": "Hugo 0.74.0", "og:title": "Harbor &ndash; Project Configuration", "favicon": "https://goharbor.io/favicon.svg", "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/", "title": "\n      \nHarbor docs | Project Configuration\n\n    ", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/", "scrapeId": "2d756fd6-05ab-4e7e-93f4-0a4d3382eaef", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you explain what Running Replication Manually is in harbor-2-12-0?\n\nAssistant: Sure, I'd be happy to explain Running Replication Manually in harbor-2-12-0.\n\n# Running Replication Manually\n\nThis page provides instructions on how to manually run replication in Harbor.Here's a quick rundown of what this is about:\n\n## Steps to Run Replication Manually\n\n1. Log in to the Harbor interface with an account that has Harbor system administrator privileges.\n\n2. Expand **Administration**, and select **Replications**.\n\n3. Select a replication rule and click **Replicate**.\n\nThe resources to which the rule is applied start to replicate from the source registry to the destination immediately.\n\n4. Click the rule to see its execution status.\n\n5. Click the **ID** of the execution to see the details of the replication and the task list. The count of `IN PROGRESS` status in the summary includes both `Pending` and `In Progress` tasks.\n\n6. Optionally click **STOP** to stop the replication.\n\n7. Click the log icon to see detailed information about the replication task.\n\nTo edit or delete a replication rule, select the replication rule in the **Replications** view and click **Edit** or **Delete**. Only rules which have no executions in progress can be edited deleted.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/configuring-replication/manage-replications", "title": "Running Replication Manually", "description": "This page provides instructions on how to manually run replication in Harbor.", "has_code_examples": false, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 03:05:24", "type": "overview", "page_metadata": {"og:type": ["documentation", "article"], "og:image:alt": "Harbor &ndash; Running Replication Manually project logo", "twitter:card": "summary", "ogLocale": "en_US", "ogTitle": "Harbor &ndash; Running Replication Manually", "og:site_name": "Harbor", "og:title": "Harbor &ndash; Running Replication Manually", "og:image:type": "image/png", "generator": "Hugo 0.74.0", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/configuring-replication/manage-replications/", "og:url": "https://goharbor.io/docs/2.12.0/administration/configuring-replication/manage-replications/", "og:locale": "en_US", "ogSiteName": "Harbor", "favicon": "https://goharbor.io/favicon.svg", "twitter:creator": "@project_harbor", "twitter:site": "@project_harbor", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "title": "\n      \nHarbor docs | Running Replication Manually\n\n    ", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "scrapeId": "38183e26-4b7c-42a1-8460-dabc2a488c1c", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/configuring-replication/manage-replications", "url": "https://goharbor.io/docs/2.12.0/administration/configuring-replication/manage-replications/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I steps to run replication manually in harbor-2-12-0?\n\nAssistant: To steps to run replication manually in harbor-2-12-0, here's what you do:\n1. Log in to the Harbor interface with an account that has Harbor system administrator privileges.\n\n2. Expand **Administration**, and select **Replications**.\n\n3. Select a replication rule and click **Replicate**.\n\nThe resources to which the rule is applied start to replicate from the source registry to the destination immediately.\n\n4. Click the rule to see its execution status.\n\n5. Click the **ID** of the execution to see the details of the replication and the task list. The count of `IN PROGRESS` status in the summary includes both `Pending` and `In Progress` tasks.\n\n6. Optionally click **STOP** to stop the replication.\n\n7. Click the log icon to see detailed information about the replication task.\n\nTo edit or delete a replication rule, select the replication rule in the **Replications** view and click **Edit** or **Delete**. Only rules which have no executions in progress can be edited deleted..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/configuring-replication/manage-replications", "title": "Running Replication Manually", "description": "This page provides instructions on how to manually run replication in Harbor.", "has_code_examples": false, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 03:05:24", "type": "section_detail", "page_metadata": {"og:type": ["documentation", "article"], "og:image:alt": "Harbor &ndash; Running Replication Manually project logo", "twitter:card": "summary", "ogLocale": "en_US", "ogTitle": "Harbor &ndash; Running Replication Manually", "og:site_name": "Harbor", "og:title": "Harbor &ndash; Running Replication Manually", "og:image:type": "image/png", "generator": "Hugo 0.74.0", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/configuring-replication/manage-replications/", "og:url": "https://goharbor.io/docs/2.12.0/administration/configuring-replication/manage-replications/", "og:locale": "en_US", "ogSiteName": "Harbor", "favicon": "https://goharbor.io/favicon.svg", "twitter:creator": "@project_harbor", "twitter:site": "@project_harbor", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "title": "\n      \nHarbor docs | Running Replication Manually\n\n    ", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "scrapeId": "38183e26-4b7c-42a1-8460-dabc2a488c1c", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/configuring-replication/manage-replications", "url": "https://goharbor.io/docs/2.12.0/administration/configuring-replication/manage-replications/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: What are some tips for using Running Replication Manually in harbor-2-12-0 effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nEnsure you have administrator privileges to access the replication settings.\n\nOnly edit or delete replication rules that have no executions in progress.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/configuring-replication/manage-replications", "title": "Running Replication Manually", "description": "This page provides instructions on how to manually run replication in Harbor.", "has_code_examples": false, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 03:05:24", "type": "best_practices", "page_metadata": {"og:type": ["documentation", "article"], "og:image:alt": "Harbor &ndash; Running Replication Manually project logo", "twitter:card": "summary", "ogLocale": "en_US", "ogTitle": "Harbor &ndash; Running Replication Manually", "og:site_name": "Harbor", "og:title": "Harbor &ndash; Running Replication Manually", "og:image:type": "image/png", "generator": "Hugo 0.74.0", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/configuring-replication/manage-replications/", "og:url": "https://goharbor.io/docs/2.12.0/administration/configuring-replication/manage-replications/", "og:locale": "en_US", "ogSiteName": "Harbor", "favicon": "https://goharbor.io/favicon.svg", "twitter:creator": "@project_harbor", "twitter:site": "@project_harbor", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "title": "\n      \nHarbor docs | Running Replication Manually\n\n    ", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "scrapeId": "38183e26-4b7c-42a1-8460-dabc2a488c1c", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/configuring-replication/manage-replications", "url": "https://goharbor.io/docs/2.12.0/administration/configuring-replication/manage-replications/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you explain what Scan Individual Artifacts is in harbor-2-12-0?\n\nAssistant: Sure, I'd be happy to explain Scan Individual Artifacts in harbor-2-12-0.\n\n# Scan Individual Artifacts\n\nThis page provides instructions on how to scan individual artifacts for vulnerabilities in Harbor.Here's a quick rundown of what this is about:\n\n## Scanning Individual Artifacts\n\n1. Log in to the Harbor interface with an account that has at least project administrator privileges.\n\n2. Go to **Projects** and select a project.\n\n3. Select the **Scanner** tab.\n\nThe **Scanner** tab shows the details of the scanner that is currently set as the scanner to use for this project.\n\n4. Click **Edit** to select a different scanner from the list of scanners that are connected to this Harbor instance, and click **OK**.\n\nIf you have selected the **Prevent vulnerable images from running** option in the project **Configuration** tab, the prevention of pulling vulnerable artifacts is determined by the scanner that is set in the project, or by the global default scanner if no scanner is configured specifically for the project. Different scanners might apply different levels of severity to artifact vulnerabilities.\n\n5. Select the **Repositories** tab and select a repository.\n\nFor each artifact in the repository, the **Vulnerabilities** column displays the vulnerability scanning status and related information.\n\n6. Select an artifact, or use the check box at the top to select all artifacts in the repository, and click the **Scan** button to run the vulnerability scan on this artifact.\n\n**NOTE**: You can start a scan at any time, unless the status is **Queued** or **Scanning**. If the database has not been fully populated, you should not run a scan. The following statuses are displayed in the **Vulnerabilities** column:\n\n   - **Not Scanned:** The artifact has never been scanned.\n   - **Unsupported:** The artifact is not supported by the scanner.\n   - **Queued:** The scanning task is scheduled but has not run yet.\n   - **Scanning:** The scanning task is in progress and a progress bar is displayed.\n   - **Scan stopped:** The scanning task has been cancelled by a stop scan request.\n   - **View log:** The scanning task failed to complete. Click **View Log** link to view the related logs.\n   - **Complete:** The scanning task completed successfully.\n\nIf the process completes successfully, the result indicates the overall severity level, with the total number of vulnerabilities found for each severity level, and the number of fixable vulnerabilities.\n\n   - **Red:** At least one critical vulnerability found\n   - **Orange:** At least one high level vulnerability found\n   - **Yellow:** At least one medium level vulnerability found\n   - **Blue:** At least one low level vulnerability found\n   - **Green:** No vulnerabilities found\n   - **Grey:** Unknown vulnerabilities\n\n7. Hover over the number of fixable vulnerabilities to see a summary of the vulnerability report.\n\n8. Click on the artifact digest to see a detailed vulnerability report.\n\nIn addition to information about the artifact, all of the vulnerabilities found in the last scan are listed. You can order or filter the list by the different columns. You can also click **Scan** in the report page to run a scan on this artifact.\n\n## Vulnerability scanning for OCI image index\n\nWhen scanning an OCI image index, Harbor will send scan requests for each of the referenced artifact which is supported by the scanner to the scanner. If the image scanning status of any referenced image is **Scanning**, the status for the OCI image index as a whole will also be **Scanning**. The scan for the index is considered successful only if all referenced images are successfully scanned. It is considered limited successful when not all referenced images are successfully scanned but at least one of referenced image is successfully scanned, otherwise it is considered failed.\n\nWhen an OCI image index is successfully scanned, the summary of the vulnerability report for the OCI image index is aggregated from the individual scan results of the artifacts referenced by the index. The vulnerability report will show both sets of statistics.\n\n## Export Vulnerability Scans\n\nAs a project administrator, maintainer, or developer you are able to export vulnerability scan results from your projects as a CVS and download it from your Harbor instance. Note that you can only export vulnerability data from one project at a time.\n\n1. Log in to the Harbor interface.\n2. Go to **Projects** and select a project.\n3. Select **Action** and then **Export CVE(s)**.\n\nIn the Export CVE window you can apply any filters you want to the data included in the CVS.\n\n- **Repositories:** Filters by repository name. Enter multiple repository names in a comma separated list, repositories match a name `repo*`,or ** for all repositories in the projects.\n\n- **Tags:** Filters by tags. Enter multiple tags in a comma separated list, tags match a name `tag*`,or ** for all tags in the projects.\n\n- **Labels:** Filters by labels. Select multiple labels from the drop down.\n\n- **CVE IDs:** Filters by CVE number. Enter comma separated list of CVE IDs.\n\nClick **Export**. Harbor will begin creating the CVS file with your exported CVE details. The generated CVE file will be named `csv_file_` and the current date and time formatted as yyyyMMddHHmmss. For example, `csv_file_20220804123037.csv` was created on 08/04/2022 at 12:30:37.\n\nDownload the CVE file from the Event Log window. Expand the Event Log window by clicking on **Event Log** from the Harbor interface.\n\nClick the download icon next to the CSV file you want to download. Once you download the file, Harbor will delete it.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/scan-individual-artifact", "title": "Scan Individual Artifacts", "description": "This page provides instructions on how to scan individual artifacts for vulnerabilities in Harbor.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:05:45", "type": "overview", "page_metadata": {"og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "twitter:site": "@project_harbor", "favicon": "https://goharbor.io/favicon.svg", "ogTitle": "Harbor &ndash; Scan Individual Artifacts", "twitter:card": "summary", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "generator": "Hugo 0.74.0", "og:locale": "en_US", "og:image:type": "image/png", "og:image:alt": "Harbor &ndash; Scan Individual Artifacts project logo", "ogLocale": "en_US", "title": "\n      \nHarbor docs | Scan Individual Artifacts\n\n    ", "og:url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/scan-individual-artifact/", "ogSiteName": "Harbor", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/scan-individual-artifact/", "og:title": "Harbor &ndash; Scan Individual Artifacts", "og:site_name": "Harbor", "og:type": ["documentation", "article"], "twitter:creator": "@project_harbor", "scrapeId": "30b2a7d6-027c-488c-87f4-1249791a4af8", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/scan-individual-artifact", "url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/scan-individual-artifact/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I scanning individual artifacts in harbor-2-12-0?\n\nAssistant: To scanning individual artifacts in harbor-2-12-0, here's what you do:\n1. Log in to the Harbor interface with an account that has at least project administrator privileges.\n\n2. Go to **Projects** and select a project.\n\n3. Select the **Scanner** tab.\n\nThe **Scanner** tab shows the details of the scanner that is currently set as the scanner to use for this project.\n\n4. Click **Edit** to select a different scanner from the list of scanners that are connected to this Harbor instance, and click **OK**.\n\nIf you have selected the **Prevent vulnerable images from running** option in the project **Configuration** tab, the prevention of pulling vulnerable artifacts is determined by the scanner that is set in the project, or by the global default scanner if no scanner is configured specifically for the project. Different scanners might apply different levels of severity to artifact vulnerabilities.\n\n5. Select the **Repositories** tab and select a repository.\n\nFor each artifact in the repository, the **Vulnerabilities** column displays the vulnerability scanning status and related information.\n\n6. Select an artifact, or use the check box at the top to select all artifacts in the repository, and click the **Scan** button to run the vulnerability scan on this artifact.\n\n**NOTE**: You can start a scan at any time, unless the status is **Queued** or **Scanning**. If the database has not been fully populated, you should not run a scan. The following statuses are displayed in the **Vulnerabilities** column:\n\n   - **Not Scanned:** The artifact has never been scanned.\n   - **Unsupported:** The artifact is not supported by the scanner.\n   - **Queued:** The scanning task is scheduled but has not run yet.\n   - **Scanning:** The scanning task is in progress and a progress bar is displayed.\n   - **Scan stopped:** The scanning task has been cancelled by a stop scan request.\n   - **View log:** The scanning task failed to complete. Click **View Log** link to view the related logs.\n   - **Complete:** The scanning task completed successfully.\n\nIf the process completes successfully, the result indicates the overall severity level, with the total number of vulnerabilities found for each severity level, and the number of fixable vulnerabilities.\n\n   - **Red:** At least one critical vulnerability found\n   - **Orange:** At least one high level vulnerability found\n   - **Yellow:** At least one medium level vulnerability found\n   - **Blue:** At least one low level vulnerability found\n   - **Green:** No vulnerabilities found\n   - **Grey:** Unknown vulnerabilities\n\n7. Hover over the number of fixable vulnerabilities to see a summary of the vulnerability report.\n\n8. Click on the artifact digest to see a detailed vulnerability report.\n\nIn addition to information about the artifact, all of the vulnerabilities found in the last scan are listed. You can order or filter the list by the different columns. You can also click **Scan** in the report page to run a scan on this artifact..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/scan-individual-artifact", "title": "Scan Individual Artifacts", "description": "This page provides instructions on how to scan individual artifacts for vulnerabilities in Harbor.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:05:45", "type": "section_detail", "page_metadata": {"og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "twitter:site": "@project_harbor", "favicon": "https://goharbor.io/favicon.svg", "ogTitle": "Harbor &ndash; Scan Individual Artifacts", "twitter:card": "summary", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "generator": "Hugo 0.74.0", "og:locale": "en_US", "og:image:type": "image/png", "og:image:alt": "Harbor &ndash; Scan Individual Artifacts project logo", "ogLocale": "en_US", "title": "\n      \nHarbor docs | Scan Individual Artifacts\n\n    ", "og:url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/scan-individual-artifact/", "ogSiteName": "Harbor", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/scan-individual-artifact/", "og:title": "Harbor &ndash; Scan Individual Artifacts", "og:site_name": "Harbor", "og:type": ["documentation", "article"], "twitter:creator": "@project_harbor", "scrapeId": "30b2a7d6-027c-488c-87f4-1249791a4af8", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/scan-individual-artifact", "url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/scan-individual-artifact/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I vulnerability scanning for oci image index in harbor-2-12-0?\n\nAssistant: To vulnerability scanning for oci image index in harbor-2-12-0, here's what you do:\nWhen scanning an OCI image index, Harbor will send scan requests for each of the referenced artifact which is supported by the scanner to the scanner. If the image scanning status of any referenced image is **Scanning**, the status for the OCI image index as a whole will also be **Scanning**. The scan for the index is considered successful only if all referenced images are successfully scanned. It is considered limited successful when not all referenced images are successfully scanned but at least one of referenced image is successfully scanned, otherwise it is considered failed.\n\nWhen an OCI image index is successfully scanned, the summary of the vulnerability report for the OCI image index is aggregated from the individual scan results of the artifacts referenced by the index. The vulnerability report will show both sets of statistics..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/scan-individual-artifact", "title": "Scan Individual Artifacts", "description": "This page provides instructions on how to scan individual artifacts for vulnerabilities in Harbor.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:05:45", "type": "section_detail", "page_metadata": {"og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "twitter:site": "@project_harbor", "favicon": "https://goharbor.io/favicon.svg", "ogTitle": "Harbor &ndash; Scan Individual Artifacts", "twitter:card": "summary", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "generator": "Hugo 0.74.0", "og:locale": "en_US", "og:image:type": "image/png", "og:image:alt": "Harbor &ndash; Scan Individual Artifacts project logo", "ogLocale": "en_US", "title": "\n      \nHarbor docs | Scan Individual Artifacts\n\n    ", "og:url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/scan-individual-artifact/", "ogSiteName": "Harbor", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/scan-individual-artifact/", "og:title": "Harbor &ndash; Scan Individual Artifacts", "og:site_name": "Harbor", "og:type": ["documentation", "article"], "twitter:creator": "@project_harbor", "scrapeId": "30b2a7d6-027c-488c-87f4-1249791a4af8", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/scan-individual-artifact", "url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/scan-individual-artifact/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I export vulnerability scans in harbor-2-12-0?\n\nAssistant: To export vulnerability scans in harbor-2-12-0, here's what you do:\nAs a project administrator, maintainer, or developer you are able to export vulnerability scan results from your projects as a CVS and download it from your Harbor instance. Note that you can only export vulnerability data from one project at a time.\n\n1. Log in to the Harbor interface.\n2. Go to **Projects** and select a project.\n3. Select **Action** and then **Export CVE(s)**.\n\nIn the Export CVE window you can apply any filters you want to the data included in the CVS.\n\n- **Repositories:** Filters by repository name. Enter multiple repository names in a comma separated list, repositories match a name `repo*`,or ** for all repositories in the projects.\n\n- **Tags:** Filters by tags. Enter multiple tags in a comma separated list, tags match a name `tag*`,or ** for all tags in the projects.\n\n- **Labels:** Filters by labels. Select multiple labels from the drop down.\n\n- **CVE IDs:** Filters by CVE number. Enter comma separated list of CVE IDs.\n\nClick **Export**. Harbor will begin creating the CVS file with your exported CVE details. The generated CVE file will be named `csv_file_` and the current date and time formatted as yyyyMMddHHmmss. For example, `csv_file_20220804123037.csv` was created on 08/04/2022 at 12:30:37.\n\nDownload the CVE file from the Event Log window. Expand the Event Log window by clicking on **Event Log** from the Harbor interface.\n\nClick the download icon next to the CSV file you want to download. Once you download the file, Harbor will delete it..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/scan-individual-artifact", "title": "Scan Individual Artifacts", "description": "This page provides instructions on how to scan individual artifacts for vulnerabilities in Harbor.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:05:45", "type": "section_detail", "page_metadata": {"og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "twitter:site": "@project_harbor", "favicon": "https://goharbor.io/favicon.svg", "ogTitle": "Harbor &ndash; Scan Individual Artifacts", "twitter:card": "summary", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "generator": "Hugo 0.74.0", "og:locale": "en_US", "og:image:type": "image/png", "og:image:alt": "Harbor &ndash; Scan Individual Artifacts project logo", "ogLocale": "en_US", "title": "\n      \nHarbor docs | Scan Individual Artifacts\n\n    ", "og:url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/scan-individual-artifact/", "ogSiteName": "Harbor", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/scan-individual-artifact/", "og:title": "Harbor &ndash; Scan Individual Artifacts", "og:site_name": "Harbor", "og:type": ["documentation", "article"], "twitter:creator": "@project_harbor", "scrapeId": "30b2a7d6-027c-488c-87f4-1249791a4af8", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/scan-individual-artifact", "url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/scan-individual-artifact/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: What are some tips for using Scan Individual Artifacts in harbor-2-12-0 effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nEnsure you have project administrator privileges to access the scanning features.\n\nSelect the appropriate scanner for your project to ensure accurate vulnerability assessments.\n\nRegularly scan your artifacts to keep track of vulnerabilities and their severities.\n\nUse the export feature to keep a record of vulnerabilities for compliance and auditing purposes.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/scan-individual-artifact", "title": "Scan Individual Artifacts", "description": "This page provides instructions on how to scan individual artifacts for vulnerabilities in Harbor.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:05:45", "type": "best_practices", "page_metadata": {"og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "twitter:site": "@project_harbor", "favicon": "https://goharbor.io/favicon.svg", "ogTitle": "Harbor &ndash; Scan Individual Artifacts", "twitter:card": "summary", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "generator": "Hugo 0.74.0", "og:locale": "en_US", "og:image:type": "image/png", "og:image:alt": "Harbor &ndash; Scan Individual Artifacts project logo", "ogLocale": "en_US", "title": "\n      \nHarbor docs | Scan Individual Artifacts\n\n    ", "og:url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/scan-individual-artifact/", "ogSiteName": "Harbor", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/scan-individual-artifact/", "og:title": "Harbor &ndash; Scan Individual Artifacts", "og:site_name": "Harbor", "og:type": ["documentation", "article"], "twitter:creator": "@project_harbor", "scrapeId": "30b2a7d6-027c-488c-87f4-1249791a4af8", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/scan-individual-artifact", "url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/scan-individual-artifact/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you explain what Stop Scan & Stop Scan All is in harbor-2-12-0?\n\nAssistant: Sure, I'd be happy to explain Stop Scan & Stop Scan All in harbor-2-12-0.\n\n# Stop Scan & Stop Scan All\n\nThis page covers the features of stopping individual and all scan jobs in Harbor, including how to use these features effectively.Here's a quick rundown of what this is about:\n\n## Stop Scan Individual Artifacts\n\nThere is a `STOP SCAN` button sitting next to `SCAN` button which you click to trigger a scan job of a given artifact. When you click `SCAN`, the value in **Vulnerabilities** field changes to **Queued**, and then **Scanning**. And at this point, if you click `STOP SCAN`, a stop scan request will be sent to Harbor backend, and the value of **Vulnerabilities** field will be soon changed to **Scan stopped**.\n\nUsers can also create a webhook for **Scanning stopped** event.\n\n1. Login to Harbor web portal. And navigate into a preferred project.\n2. Click the **Webhooks** tab, and click **NEW WEBHOOK** button to add a new webhook.\n3. Please fulfill the form and make sure you select **Scanning stopped** checkbox, before clicking the **ADD** button to submit.\n\nIf you create a webhook of a given project for **Scanning stopped** event, then try stop scan feature again (stop scan an artifact of this given project). And you should be able to receive a webhook payload this time.\n\n## Stop Scan All\n\nIn the case of stop scan all, there is no additional `STOP SCAN` button, but the text of `SCAN NOW` button will be changed to `STOP SCAN` after users click `SCAN NOW` to create a scan all request. And once the text is changed to `STOP SCAN`, you can then click it to send a stop scan all request. And the value of **Vulnerabilities** field of all stopped jobs will be changed to **Scan stopped**, and webhooks, if any, will also be sent out.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/stop-scan", "title": "Stop Scan & Stop Scan All", "description": "This page covers the features of stopping individual and all scan jobs in Harbor, including how to use these features effectively.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:05:53", "type": "overview", "page_metadata": {"og:type": ["documentation", "article"], "favicon": "https://goharbor.io/favicon.svg", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/stop-scan/", "ogLocale": "en_US", "ogTitle": "Harbor &ndash; Stop Scan & Stop Scan All", "ogSiteName": "Harbor", "og:site_name": "Harbor", "og:url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/stop-scan/", "twitter:card": "summary", "title": "\n      \nHarbor docs | Stop Scan & Stop Scan All\n\n    ", "og:image:type": "image/png", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "twitter:site": "@project_harbor", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:title": "Harbor &ndash; Stop Scan & Stop Scan All", "og:locale": "en_US", "og:image:alt": "Harbor &ndash; Stop Scan & Stop Scan All project logo", "generator": "Hugo 0.74.0", "twitter:creator": "@project_harbor", "scrapeId": "01f290a5-3aea-4b78-b1e5-b62f12a15180", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/stop-scan", "url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/stop-scan/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I stop scan individual artifacts in harbor-2-12-0?\n\nAssistant: To stop scan individual artifacts in harbor-2-12-0, here's what you do:\nThere is a `STOP SCAN` button sitting next to `SCAN` button which you click to trigger a scan job of a given artifact. When you click `SCAN`, the value in **Vulnerabilities** field changes to **Queued**, and then **Scanning**. And at this point, if you click `STOP SCAN`, a stop scan request will be sent to Harbor backend, and the value of **Vulnerabilities** field will be soon changed to **Scan stopped**.\n\nUsers can also create a webhook for **Scanning stopped** event.\n\n1. Login to Harbor web portal. And navigate into a preferred project.\n2. Click the **Webhooks** tab, and click **NEW WEBHOOK** button to add a new webhook.\n3. Please fulfill the form and make sure you select **Scanning stopped** checkbox, before clicking the **ADD** button to submit.\n\nIf you create a webhook of a given project for **Scanning stopped** event, then try stop scan feature again (stop scan an artifact of this given project). And you should be able to receive a webhook payload this time..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/stop-scan", "title": "Stop Scan & Stop Scan All", "description": "This page covers the features of stopping individual and all scan jobs in Harbor, including how to use these features effectively.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:05:53", "type": "section_detail", "page_metadata": {"og:type": ["documentation", "article"], "favicon": "https://goharbor.io/favicon.svg", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/stop-scan/", "ogLocale": "en_US", "ogTitle": "Harbor &ndash; Stop Scan & Stop Scan All", "ogSiteName": "Harbor", "og:site_name": "Harbor", "og:url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/stop-scan/", "twitter:card": "summary", "title": "\n      \nHarbor docs | Stop Scan & Stop Scan All\n\n    ", "og:image:type": "image/png", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "twitter:site": "@project_harbor", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:title": "Harbor &ndash; Stop Scan & Stop Scan All", "og:locale": "en_US", "og:image:alt": "Harbor &ndash; Stop Scan & Stop Scan All project logo", "generator": "Hugo 0.74.0", "twitter:creator": "@project_harbor", "scrapeId": "01f290a5-3aea-4b78-b1e5-b62f12a15180", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/stop-scan", "url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/stop-scan/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I stop scan all in harbor-2-12-0?\n\nAssistant: To stop scan all in harbor-2-12-0, here's what you do:\nIn the case of stop scan all, there is no additional `STOP SCAN` button, but the text of `SCAN NOW` button will be changed to `STOP SCAN` after users click `SCAN NOW` to create a scan all request. And once the text is changed to `STOP SCAN`, you can then click it to send a stop scan all request. And the value of **Vulnerabilities** field of all stopped jobs will be changed to **Scan stopped**, and webhooks, if any, will also be sent out..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/stop-scan", "title": "Stop Scan & Stop Scan All", "description": "This page covers the features of stopping individual and all scan jobs in Harbor, including how to use these features effectively.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:05:53", "type": "section_detail", "page_metadata": {"og:type": ["documentation", "article"], "favicon": "https://goharbor.io/favicon.svg", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/stop-scan/", "ogLocale": "en_US", "ogTitle": "Harbor &ndash; Stop Scan & Stop Scan All", "ogSiteName": "Harbor", "og:site_name": "Harbor", "og:url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/stop-scan/", "twitter:card": "summary", "title": "\n      \nHarbor docs | Stop Scan & Stop Scan All\n\n    ", "og:image:type": "image/png", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "twitter:site": "@project_harbor", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:title": "Harbor &ndash; Stop Scan & Stop Scan All", "og:locale": "en_US", "og:image:alt": "Harbor &ndash; Stop Scan & Stop Scan All project logo", "generator": "Hugo 0.74.0", "twitter:creator": "@project_harbor", "scrapeId": "01f290a5-3aea-4b78-b1e5-b62f12a15180", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/stop-scan", "url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/stop-scan/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: What are some tips for using Stop Scan & Stop Scan All in harbor-2-12-0 effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nEnsure to create a webhook for the Scanning stopped event to receive notifications when a scan is stopped.\n\nAlways check the status of the Vulnerabilities field after stopping a scan to confirm the action was successful.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/stop-scan", "title": "Stop Scan & Stop Scan All", "description": "This page covers the features of stopping individual and all scan jobs in Harbor, including how to use these features effectively.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:05:53", "type": "best_practices", "page_metadata": {"og:type": ["documentation", "article"], "favicon": "https://goharbor.io/favicon.svg", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/stop-scan/", "ogLocale": "en_US", "ogTitle": "Harbor &ndash; Stop Scan & Stop Scan All", "ogSiteName": "Harbor", "og:site_name": "Harbor", "og:url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/stop-scan/", "twitter:card": "summary", "title": "\n      \nHarbor docs | Stop Scan & Stop Scan All\n\n    ", "og:image:type": "image/png", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "twitter:site": "@project_harbor", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:title": "Harbor &ndash; Stop Scan & Stop Scan All", "og:locale": "en_US", "og:image:alt": "Harbor &ndash; Stop Scan & Stop Scan All project logo", "generator": "Hugo 0.74.0", "twitter:creator": "@project_harbor", "scrapeId": "01f290a5-3aea-4b78-b1e5-b62f12a15180", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/stop-scan", "url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/stop-scan/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you explain what Deployment Security is in harbor-2-12-0?\n\nAssistant: Sure, I'd be happy to explain Deployment Security in harbor-2-12-0.\n\n# Deployment Security\n\nThis section covers the deployment security features added in Harbor version 2.0, including artifact type checks, OCI image index support, and vulnerability policies.Here's a quick rundown of what this is about:\n\n## Deployment Security Features\n\nStarting in version 2.0, Harbor has added capabilities to check for supported artifact types in the pluggable scanners. It will use the **consumes_mime_types** metadata of the scanner to decide whether a requested artifact is supported by this scanner. For example, helm charts cannot be scanned for vulnerabilities by the supported scanner, Aqua Trivy.\n\nHarbor v2.0 now supports OCI image index, which is a higher-level manifest which points to specific image manifests, ideal for one or more platform. Scanning for OCI image index is also supported, with the scan result of the index being an aggregation of the scan results of the artifacts referenced within.\n\nHarbor has ‘deployment security’ which can prevent artifacts from being pulled if vulnerabilities are discovered. For pulling indexes, ‘deployment security’ will skip this policy checking for the index artifact itself and will only apply policy checking on the referenced artifacts and at the individual artifact level and not on the index as a whole. This means when pulling Redis for ARM for example, it only checks to see if whether Redis for ARM has vulnerabilities and not impacted by whether amd64 has CVEs. This applies to CNABs as well.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/deployment-security", "title": "Deployment Security", "description": "This section covers the deployment security features added in Harbor version 2.0, including artifact type checks, OCI image index support, and vulnerability policies.", "has_code_examples": false, "has_best_practices": false, "section_count": 1, "timestamp": "2025-03-01 03:06:00", "type": "overview", "page_metadata": {"ogUrl": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/deployment-security/", "favicon": "https://goharbor.io/favicon.svg", "og:site_name": "Harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "twitter:creator": "@project_harbor", "og:title": "Harbor &ndash; Deployment security", "og:url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/deployment-security/", "title": "\n      \nHarbor docs | Deployment security\n\n    ", "ogTitle": "Harbor &ndash; Deployment security", "generator": "Hugo 0.74.0", "ogLocale": "en_US", "og:type": ["documentation", "article"], "og:locale": "en_US", "ogSiteName": "Harbor", "og:image:alt": "Harbor &ndash; Deployment security project logo", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "twitter:card": "summary", "twitter:site": "@project_harbor", "og:image:type": "image/png", "scrapeId": "46cc6749-ade7-40b9-8fb3-9bc12eb6806f", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/deployment-security", "url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/deployment-security/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I deployment security features in harbor-2-12-0?\n\nAssistant: To deployment security features in harbor-2-12-0, here's what you do:\nStarting in version 2.0, Harbor has added capabilities to check for supported artifact types in the pluggable scanners. It will use the **consumes_mime_types** metadata of the scanner to decide whether a requested artifact is supported by this scanner. For example, helm charts cannot be scanned for vulnerabilities by the supported scanner, Aqua Trivy.\n\nHarbor v2.0 now supports OCI image index, which is a higher-level manifest which points to specific image manifests, ideal for one or more platform. Scanning for OCI image index is also supported, with the scan result of the index being an aggregation of the scan results of the artifacts referenced within.\n\nHarbor has ‘deployment security’ which can prevent artifacts from being pulled if vulnerabilities are discovered. For pulling indexes, ‘deployment security’ will skip this policy checking for the index artifact itself and will only apply policy checking on the referenced artifacts and at the individual artifact level and not on the index as a whole. This means when pulling Redis for ARM for example, it only checks to see if whether Redis for ARM has vulnerabilities and not impacted by whether amd64 has CVEs. This applies to CNABs as well..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/deployment-security", "title": "Deployment Security", "description": "This section covers the deployment security features added in Harbor version 2.0, including artifact type checks, OCI image index support, and vulnerability policies.", "has_code_examples": false, "has_best_practices": false, "section_count": 1, "timestamp": "2025-03-01 03:06:00", "type": "section_detail", "page_metadata": {"ogUrl": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/deployment-security/", "favicon": "https://goharbor.io/favicon.svg", "og:site_name": "Harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "twitter:creator": "@project_harbor", "og:title": "Harbor &ndash; Deployment security", "og:url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/deployment-security/", "title": "\n      \nHarbor docs | Deployment security\n\n    ", "ogTitle": "Harbor &ndash; Deployment security", "generator": "Hugo 0.74.0", "ogLocale": "en_US", "og:type": ["documentation", "article"], "og:locale": "en_US", "ogSiteName": "Harbor", "og:image:alt": "Harbor &ndash; Deployment security project logo", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "twitter:card": "summary", "twitter:site": "@project_harbor", "og:image:type": "image/png", "scrapeId": "46cc6749-ade7-40b9-8fb3-9bc12eb6806f", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/deployment-security", "url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/deployment-security/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you explain what Access and Search Project Logs is in harbor-2-12-0?\n\nAssistant: Sure, I'd be happy to explain Access and Search Project Logs in harbor-2-12-0.\n\n# Access and Search Project Logs\n\nHarbor keeps a log of all of the operations that users perform in a project. You can apply filters to help you to search the logs.Here's a quick rundown of what this is about:\n\n## Prerequisites\n\nLog in to Harbor with a Harbor administrator, project administrator, maintainer, developer, or guest account.\n\n## Procedure\n\n1. Go to **Projects**, select a project, and select **Logs**.\n\nAll logs for the project are displayed.\n\n2. Click the **Search** icon and start typing to filter the logs by name.\n\n3. Click **Advanced**.\n\n4. Use the **Operations** drop-down menu to filter by operation type.\n\n5. Click the calendar icons to enter dates between which to search for logs of the types you set in the **Operations** drop-down menu.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/access-project-logs", "title": "Access and Search Project Logs", "description": "Harbor keeps a log of all of the operations that users perform in a project. You can apply filters to help you to search the logs.", "has_code_examples": false, "has_best_practices": false, "section_count": 2, "timestamp": "2025-03-01 03:06:04", "type": "overview", "page_metadata": {"title": "\n      \nHarbor docs | Access and Search Project Logs\n\n    ", "ogSiteName": "Harbor", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:image:type": "image/png", "ogLocale": "en_US", "og:title": "Harbor &ndash; Access and Search Project Logs", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "twitter:site": "@project_harbor", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/access-project-logs/", "twitter:card": "summary", "favicon": "https://goharbor.io/favicon.svg", "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/access-project-logs/", "og:type": ["documentation", "article"], "og:site_name": "Harbor", "og:image:alt": "Harbor &ndash; Access and Search Project Logs project logo", "generator": "Hugo 0.74.0", "twitter:creator": "@project_harbor", "og:locale": "en_US", "ogTitle": "Harbor &ndash; Access and Search Project Logs", "scrapeId": "c6fa2c8a-dc5f-4ef2-a5af-5ae3edc3f046", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/access-project-logs", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/access-project-logs/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I prerequisites in harbor-2-12-0?\n\nAssistant: To prerequisites in harbor-2-12-0, here's what you do:\nLog in to Harbor with a Harbor administrator, project administrator, maintainer, developer, or guest account..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/access-project-logs", "title": "Access and Search Project Logs", "description": "Harbor keeps a log of all of the operations that users perform in a project. You can apply filters to help you to search the logs.", "has_code_examples": false, "has_best_practices": false, "section_count": 2, "timestamp": "2025-03-01 03:06:04", "type": "section_detail", "page_metadata": {"title": "\n      \nHarbor docs | Access and Search Project Logs\n\n    ", "ogSiteName": "Harbor", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:image:type": "image/png", "ogLocale": "en_US", "og:title": "Harbor &ndash; Access and Search Project Logs", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "twitter:site": "@project_harbor", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/access-project-logs/", "twitter:card": "summary", "favicon": "https://goharbor.io/favicon.svg", "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/access-project-logs/", "og:type": ["documentation", "article"], "og:site_name": "Harbor", "og:image:alt": "Harbor &ndash; Access and Search Project Logs project logo", "generator": "Hugo 0.74.0", "twitter:creator": "@project_harbor", "og:locale": "en_US", "ogTitle": "Harbor &ndash; Access and Search Project Logs", "scrapeId": "c6fa2c8a-dc5f-4ef2-a5af-5ae3edc3f046", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/access-project-logs", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/access-project-logs/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I procedure in harbor-2-12-0?\n\nAssistant: To procedure in harbor-2-12-0, here's what you do:\n1. Go to **Projects**, select a project, and select **Logs**.\n\nAll logs for the project are displayed.\n\n2. Click the **Search** icon and start typing to filter the logs by name.\n\n3. Click **Advanced**.\n\n4. Use the **Operations** drop-down menu to filter by operation type.\n\n5. Click the calendar icons to enter dates between which to search for logs of the types you set in the **Operations** drop-down menu..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/access-project-logs", "title": "Access and Search Project Logs", "description": "Harbor keeps a log of all of the operations that users perform in a project. You can apply filters to help you to search the logs.", "has_code_examples": false, "has_best_practices": false, "section_count": 2, "timestamp": "2025-03-01 03:06:04", "type": "section_detail", "page_metadata": {"title": "\n      \nHarbor docs | Access and Search Project Logs\n\n    ", "ogSiteName": "Harbor", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:image:type": "image/png", "ogLocale": "en_US", "og:title": "Harbor &ndash; Access and Search Project Logs", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "twitter:site": "@project_harbor", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/access-project-logs/", "twitter:card": "summary", "favicon": "https://goharbor.io/favicon.svg", "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/access-project-logs/", "og:type": ["documentation", "article"], "og:site_name": "Harbor", "og:image:alt": "Harbor &ndash; Access and Search Project Logs project logo", "generator": "Hugo 0.74.0", "twitter:creator": "@project_harbor", "og:locale": "en_US", "ogTitle": "Harbor &ndash; Access and Search Project Logs", "scrapeId": "c6fa2c8a-dc5f-4ef2-a5af-5ae3edc3f046", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/access-project-logs", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/access-project-logs/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you explain what Configure Proxy Cache is in harbor-2-12-0?\n\nAssistant: Sure, I'd be happy to explain Configure Proxy Cache in harbor-2-12-0.\n\n# Configure Proxy Cache\n\nProxy cache allows you to use Harbor to proxy and cache images from a target public or private registry. As of Harbor v2.1.1, the proxy cache feature was updated to align with Docker Hub’s rate limit policy. If you plan to use proxy cache with your Harbor instance, it is strongly recommended that you use v2.1.1 or later to avoid being rate limited.Here's a quick rundown of what this is about:\n\n## How Harbor proxy cache works\n\nWhen a pull request comes to a proxy cache project, if the image is not cached, Harbor pulls the image from the target registry and serves the pull command as if it is a local image from the proxy cache project. The proxy cache project then caches the image for a future request.\n\nThe next time a user requests that image, Harbor checks the image’s latest manifest in the target registry and serves the image based on the following scenarios:\n\n- If the image has not been updated in the target registry, the cached image is served from the proxy cache project.\n- If the image has been updated in the target registry, the new image is pulled from the target registry, then served and cached in the proxy cache project.\n- If the target registry is not reachable, the proxy cache project serves the cached image.\n- If the image is no longer in the target registry, but is still in the proxy cache project, the cached image is served from the proxy cache project.\n\nAs of Harbor v2.1.1, Harbor proxy cache fires a HEAD request to determine whether any layer of a cached image has been updated in the Docker Hub registry. Using this method to check the target registry will not trigger the Docker Hub rate limiter. If any image layer was updated, the proxy cache will pull the new image, which will count towards the Docker Hub rate limiter.\n\n## Create Proxy Cache Project\n\nTo set up a proxy cache, a Harbor system administrators can create a proxy cache project that connects to a target registry using a registry endpoint.\n\nA proxy cache project is able to use the same features available to a normal Harbor project, except that you are not able to push images to a proxy cache project. For more information on projects, see the Working with Projects documentation.\n\n1. Before creating a proxy cache project, create a registry endpoint for the proxy cache project to use. See how to create a registry endpoint.\n\nProxy cache projects can pull every image from the target registry that the access account you configure in the registry endpoint has access to. This means that Harbor users with access to the proxy cache project are able to pull any image available to the access account in the target repository.\n\n2. On the Projects page, click New Project and configure the new project information. See the Create Projects documentation for more details.\n\n3. Click the Proxy Cache slider and then select your registry endpoint from the drop-down that appears. The Bandwidth is the pull image speed limit to the upstream registry, -1 means no limit.\n\n4. Click OK.\n\nYou can view all available proxy cache projects from the Projects page.\n\nBy default, Harbor creates a 7 day retention policy for each new proxy cache project. See more about Tag Retention Policies.\n\nTo start using the proxy cache, configure your docker pull commands or pod manifests to reference the proxy cache project by adding <harbor_servername>/<proxy_project_name>/ as a prefix to the image tag.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/configure-proxy-cache", "title": "Configure Proxy Cache", "description": "Proxy cache allows you to use Harbor to proxy and cache images from a target public or private registry. As of Harbor v2.1.1, the proxy cache feature was updated to align with Docker Hub’s rate limit policy. If you plan to use proxy cache with your Harbor instance, it is strongly recommended that you use v2.1.1 or later to avoid being rate limited.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:06:16", "type": "overview", "page_metadata": {"viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:site_name": "Harbor", "og:type": ["documentation", "article"], "title": "\n      \nHarbor docs | Configure Proxy Cache\n\n    ", "ogLocale": "en_US", "twitter:creator": "@project_harbor", "og:url": "https://goharbor.io/docs/2.12.0/administration/configure-proxy-cache/", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogSiteName": "Harbor", "og:image:alt": "Harbor &ndash; Configure Proxy Cache project logo", "twitter:site": "@project_harbor", "og:title": "Harbor &ndash; Configure Proxy Cache", "og:locale": "en_US", "generator": "Hugo 0.74.0", "og:image:type": "image/png", "favicon": "https://goharbor.io/favicon.svg", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/configure-proxy-cache/", "ogTitle": "Harbor &ndash; Configure Proxy Cache", "twitter:card": "summary", "scrapeId": "6c6aa921-127e-4eeb-b2d2-ac3e9d9143d1", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/configure-proxy-cache", "url": "https://goharbor.io/docs/2.12.0/administration/configure-proxy-cache/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I how harbor proxy cache works in harbor-2-12-0?\n\nAssistant: To how harbor proxy cache works in harbor-2-12-0, here's what you do:\nWhen a pull request comes to a proxy cache project, if the image is not cached, Harbor pulls the image from the target registry and serves the pull command as if it is a local image from the proxy cache project. The proxy cache project then caches the image for a future request.\n\nThe next time a user requests that image, Harbor checks the image’s latest manifest in the target registry and serves the image based on the following scenarios:\n\n- If the image has not been updated in the target registry, the cached image is served from the proxy cache project.\n- If the image has been updated in the target registry, the new image is pulled from the target registry, then served and cached in the proxy cache project.\n- If the target registry is not reachable, the proxy cache project serves the cached image.\n- If the image is no longer in the target registry, but is still in the proxy cache project, the cached image is served from the proxy cache project.\n\nAs of Harbor v2.1.1, Harbor proxy cache fires a HEAD request to determine whether any layer of a cached image has been updated in the Docker Hub registry. Using this method to check the target registry will not trigger the Docker Hub rate limiter. If any image layer was updated, the proxy cache will pull the new image, which will count towards the Docker Hub rate limiter..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/configure-proxy-cache", "title": "Configure Proxy Cache", "description": "Proxy cache allows you to use Harbor to proxy and cache images from a target public or private registry. As of Harbor v2.1.1, the proxy cache feature was updated to align with Docker Hub’s rate limit policy. If you plan to use proxy cache with your Harbor instance, it is strongly recommended that you use v2.1.1 or later to avoid being rate limited.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:06:16", "type": "section_detail", "page_metadata": {"viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:site_name": "Harbor", "og:type": ["documentation", "article"], "title": "\n      \nHarbor docs | Configure Proxy Cache\n\n    ", "ogLocale": "en_US", "twitter:creator": "@project_harbor", "og:url": "https://goharbor.io/docs/2.12.0/administration/configure-proxy-cache/", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogSiteName": "Harbor", "og:image:alt": "Harbor &ndash; Configure Proxy Cache project logo", "twitter:site": "@project_harbor", "og:title": "Harbor &ndash; Configure Proxy Cache", "og:locale": "en_US", "generator": "Hugo 0.74.0", "og:image:type": "image/png", "favicon": "https://goharbor.io/favicon.svg", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/configure-proxy-cache/", "ogTitle": "Harbor &ndash; Configure Proxy Cache", "twitter:card": "summary", "scrapeId": "6c6aa921-127e-4eeb-b2d2-ac3e9d9143d1", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/configure-proxy-cache", "url": "https://goharbor.io/docs/2.12.0/administration/configure-proxy-cache/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I create proxy cache project in harbor-2-12-0?\n\nAssistant: To create proxy cache project in harbor-2-12-0, here's what you do:\nTo set up a proxy cache, a Harbor system administrators can create a proxy cache project that connects to a target registry using a registry endpoint.\n\nA proxy cache project is able to use the same features available to a normal Harbor project, except that you are not able to push images to a proxy cache project. For more information on projects, see the Working with Projects documentation.\n\n1. Before creating a proxy cache project, create a registry endpoint for the proxy cache project to use. See how to create a registry endpoint.\n\nProxy cache projects can pull every image from the target registry that the access account you configure in the registry endpoint has access to. This means that Harbor users with access to the proxy cache project are able to pull any image available to the access account in the target repository.\n\n2. On the Projects page, click New Project and configure the new project information. See the Create Projects documentation for more details.\n\n3. Click the Proxy Cache slider and then select your registry endpoint from the drop-down that appears. The Bandwidth is the pull image speed limit to the upstream registry, -1 means no limit.\n\n4. Click OK.\n\nYou can view all available proxy cache projects from the Projects page.\n\nBy default, Harbor creates a 7 day retention policy for each new proxy cache project. See more about Tag Retention Policies.\n\nTo start using the proxy cache, configure your docker pull commands or pod manifests to reference the proxy cache project by adding <harbor_servername>/<proxy_project_name>/ as a prefix to the image tag..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/configure-proxy-cache", "title": "Configure Proxy Cache", "description": "Proxy cache allows you to use Harbor to proxy and cache images from a target public or private registry. As of Harbor v2.1.1, the proxy cache feature was updated to align with Docker Hub’s rate limit policy. If you plan to use proxy cache with your Harbor instance, it is strongly recommended that you use v2.1.1 or later to avoid being rate limited.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:06:16", "type": "section_detail", "page_metadata": {"viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:site_name": "Harbor", "og:type": ["documentation", "article"], "title": "\n      \nHarbor docs | Configure Proxy Cache\n\n    ", "ogLocale": "en_US", "twitter:creator": "@project_harbor", "og:url": "https://goharbor.io/docs/2.12.0/administration/configure-proxy-cache/", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogSiteName": "Harbor", "og:image:alt": "Harbor &ndash; Configure Proxy Cache project logo", "twitter:site": "@project_harbor", "og:title": "Harbor &ndash; Configure Proxy Cache", "og:locale": "en_US", "generator": "Hugo 0.74.0", "og:image:type": "image/png", "favicon": "https://goharbor.io/favicon.svg", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/configure-proxy-cache/", "ogTitle": "Harbor &ndash; Configure Proxy Cache", "twitter:card": "summary", "scrapeId": "6c6aa921-127e-4eeb-b2d2-ac3e9d9143d1", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/configure-proxy-cache", "url": "https://goharbor.io/docs/2.12.0/administration/configure-proxy-cache/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you give me some code examples for Configure Proxy Cache in harbor-2-12-0?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Docker Pull Command Example**:\n\n```yaml\ndocker pull <harbor_server_name>/<proxy_project_name>/goharbor/harbor-core:dev\n```\n\nThis snippet shows you how to docker pull command example, which is an important aspect of configure proxy cache.\n\n", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/configure-proxy-cache", "title": "Configure Proxy Cache", "description": "Proxy cache allows you to use Harbor to proxy and cache images from a target public or private registry. As of Harbor v2.1.1, the proxy cache feature was updated to align with Docker Hub’s rate limit policy. If you plan to use proxy cache with your Harbor instance, it is strongly recommended that you use v2.1.1 or later to avoid being rate limited.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:06:16", "type": "code_examples", "page_metadata": {"viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:site_name": "Harbor", "og:type": ["documentation", "article"], "title": "\n      \nHarbor docs | Configure Proxy Cache\n\n    ", "ogLocale": "en_US", "twitter:creator": "@project_harbor", "og:url": "https://goharbor.io/docs/2.12.0/administration/configure-proxy-cache/", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogSiteName": "Harbor", "og:image:alt": "Harbor &ndash; Configure Proxy Cache project logo", "twitter:site": "@project_harbor", "og:title": "Harbor &ndash; Configure Proxy Cache", "og:locale": "en_US", "generator": "Hugo 0.74.0", "og:image:type": "image/png", "favicon": "https://goharbor.io/favicon.svg", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/configure-proxy-cache/", "ogTitle": "Harbor &ndash; Configure Proxy Cache", "twitter:card": "summary", "scrapeId": "6c6aa921-127e-4eeb-b2d2-ac3e9d9143d1", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/configure-proxy-cache", "url": "https://goharbor.io/docs/2.12.0/administration/configure-proxy-cache/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: What are some tips for using Configure Proxy Cache in harbor-2-12-0 effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nUse Harbor v2.1.1 or later to avoid being rate limited by Docker Hub.\n\nConfigure your docker pull commands and pod manifests to pull images from the proxy cache project instead of the target registry.\n\nCreate a registry endpoint for the proxy cache project before creating the project.\n\nBy default, Harbor creates a 7 day retention policy for each new proxy cache project.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/configure-proxy-cache", "title": "Configure Proxy Cache", "description": "Proxy cache allows you to use Harbor to proxy and cache images from a target public or private registry. As of Harbor v2.1.1, the proxy cache feature was updated to align with Docker Hub’s rate limit policy. If you plan to use proxy cache with your Harbor instance, it is strongly recommended that you use v2.1.1 or later to avoid being rate limited.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:06:16", "type": "best_practices", "page_metadata": {"viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:site_name": "Harbor", "og:type": ["documentation", "article"], "title": "\n      \nHarbor docs | Configure Proxy Cache\n\n    ", "ogLocale": "en_US", "twitter:creator": "@project_harbor", "og:url": "https://goharbor.io/docs/2.12.0/administration/configure-proxy-cache/", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogSiteName": "Harbor", "og:image:alt": "Harbor &ndash; Configure Proxy Cache project logo", "twitter:site": "@project_harbor", "og:title": "Harbor &ndash; Configure Proxy Cache", "og:locale": "en_US", "generator": "Hugo 0.74.0", "og:image:type": "image/png", "favicon": "https://goharbor.io/favicon.svg", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/configure-proxy-cache/", "ogTitle": "Harbor &ndash; Configure Proxy Cache", "twitter:card": "summary", "scrapeId": "6c6aa921-127e-4eeb-b2d2-ac3e9d9143d1", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/configure-proxy-cache", "url": "https://goharbor.io/docs/2.12.0/administration/configure-proxy-cache/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you explain what Run the Installer Script is in harbor-2-12-0?\n\nAssistant: Sure, I'd be happy to explain Run the Installer Script in harbor-2-12-0.\n\n# Run the Installer Script\n\nInstructions for installing and starting Harbor using the install.sh script, including configurations with and without Trivy.Here's a quick rundown of what this is about:\n\n## Default installation without Trivy\n\nThe default Harbor installation does not include Trivy service. Run the following command\n\n```sh\nsudo ./install.sh\n```\n\nIf the installation succeeds, you can open a browser to visit the Harbor interface at `http://reg.yourdomain.com`, changing `reg.yourdomain.com` to the hostname that you configured in `harbor.yml`. If you did not change them in `harbor.yml`, the default administrator username and password are `admin` and `Harbor12345`.\n\nLog in to the admin portal and create a new project, for example, `myproject`. You can then use Docker commands to log in to Harbor, tag images, and push them to Harbor.\n\n```sh\ndocker login reg.yourdomain.com\ndocker push reg.yourdomain.com/myproject/myrepo:mytag\n```\n\n- If your installation of Harbor uses HTTPS, you must provide the Harbor certificates to the Docker client. For information, see [Configure HTTPS Access to Harbor](https://goharbor.io/docs/2.12.0/install-config/run-installer-script/configure-https.md#provide-the-certificates-to-harbor-and-docker).\n- If your installation of Harbor uses HTTP, you must add the option `--insecure-registry` to your client’s Docker daemon and restart the Docker service. For more information, see [Connecting to Harbor via HTTP](https://goharbor.io/docs/2.12.0/install-config/run-installer-script/#connect-http) below.\n\n## Installation with Trivy\n\nTo install Harbor with Trivy service, add the `--with-trivy` parameter when you run `install.sh`:\n\n```sh\nsudo ./install.sh --with-trivy\n```\n\nFor more information about Trivy, see the [Trivy documentation](https://github.com/aquasecurity/trivy).\nFor more information about how to use Trivy in a webproxy environment see [Configure custom Certification Authorities for trivy](https://goharbor.io/docs/2.12.0/install-config/run-installer-script/administration/vulnerability-scanning/configure-custom-certs.md).\n\n## Connecting to Harbor via HTTP\n\n**IMPORTANT:** If your installation of Harbor uses HTTP rather than HTTPS, you must add the option `--insecure-registry` to your client’s Docker daemon. By default, the daemon file is located at `/etc/docker/daemon.json`.\n\nFor example, add the following to your `daemon.json` file:\n\n```\n{\n\"insecure-registries\" : [\"myregistrydomain.com:5000\", \"0.0.0.0\"]\n}\n```\n\nAfter you update `daemon.json`, you must restart both Docker Engine and Harbor.\n\n1. Restart Docker Engine.\n\n```sh\nsystemctl restart docker\n```\n\n2. Stop Harbor.\n\n```sh\ndocker compose down -v\n```\n\n3. Restart Harbor.\n\n```sh\ndocker compose up -d\n```\n\n## What to Do Next\n\n- If the installation succeeds, see [Harbor Administration](https://goharbor.io/docs/2.12.0/administration/) for information about using Harbor.\n- If you deployed Harbor with HTTP and you want to secure the connections to Harbor, see [Configure HTTPS Access to Harbor](https://goharbor.io/docs/2.12.0/install-config/configure-https/).\n- If installation fails, see [Troubleshooting Harbor Installation](https://goharbor.io/docs/2.12.0/install-config/troubleshoot-installation/).\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/install-config/run-installer-script", "title": "Run the Installer Script", "description": "Instructions for installing and starting Harbor using the install.sh script, including configurations with and without Trivy.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:09:38", "type": "overview", "page_metadata": {"generator": "Hugo 0.74.0", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:title": "Harbor &ndash; Run the Installer Script", "og:url": "https://goharbor.io/docs/2.12.0/install-config/run-installer-script/", "twitter:card": "summary", "title": "\n      \nHarbor docs | Run the Installer Script\n\n    ", "ogLocale": "en_US", "ogSiteName": "Harbor", "favicon": "https://goharbor.io/favicon.svg", "ogUrl": "https://goharbor.io/docs/2.12.0/install-config/run-installer-script/", "og:type": ["documentation", "article"], "og:image:alt": "Harbor &ndash; Run the Installer Script project logo", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogTitle": "Harbor &ndash; Run the Installer Script", "og:site_name": "Harbor", "og:locale": "en_US", "og:image:type": "image/png", "twitter:creator": "@project_harbor", "twitter:site": "@project_harbor", "scrapeId": "ed13a1f0-fd2a-4d57-a88e-124a677da6e3", "sourceURL": "https://goharbor.io/docs/2.12.0/install-config/run-installer-script", "url": "https://goharbor.io/docs/2.12.0/install-config/run-installer-script/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I default installation without trivy in harbor-2-12-0?\n\nAssistant: To default installation without trivy in harbor-2-12-0, here's what you do:\nThe default Harbor installation does not include Trivy service. Run the following command\n\n```sh\nsudo ./install.sh\n```\n\nIf the installation succeeds, you can open a browser to visit the Harbor interface at `http://reg.yourdomain.com`, changing `reg.yourdomain.com` to the hostname that you configured in `harbor.yml`. If you did not change them in `harbor.yml`, the default administrator username and password are `admin` and `Harbor12345`.\n\nLog in to the admin portal and create a new project, for example, `myproject`. You can then use Docker commands to log in to Harbor, tag images, and push them to Harbor.\n\n```sh\ndocker login reg.yourdomain.com\ndocker push reg.yourdomain.com/myproject/myrepo:mytag\n```\n\n- If your installation of Harbor uses HTTPS, you must provide the Harbor certificates to the Docker client. For information, see [Configure HTTPS Access to Harbor](https://goharbor.io/docs/2.12.0/install-config/run-installer-script/configure-https.md#provide-the-certificates-to-harbor-and-docker).\n- If your installation of Harbor uses HTTP, you must add the option `--insecure-registry` to your client’s Docker daemon and restart the Docker service. For more information, see [Connecting to Harbor via HTTP](https://goharbor.io/docs/2.12.0/install-config/run-installer-script/#connect-http) below..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/install-config/run-installer-script", "title": "Run the Installer Script", "description": "Instructions for installing and starting Harbor using the install.sh script, including configurations with and without Trivy.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:09:38", "type": "section_detail", "page_metadata": {"generator": "Hugo 0.74.0", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:title": "Harbor &ndash; Run the Installer Script", "og:url": "https://goharbor.io/docs/2.12.0/install-config/run-installer-script/", "twitter:card": "summary", "title": "\n      \nHarbor docs | Run the Installer Script\n\n    ", "ogLocale": "en_US", "ogSiteName": "Harbor", "favicon": "https://goharbor.io/favicon.svg", "ogUrl": "https://goharbor.io/docs/2.12.0/install-config/run-installer-script/", "og:type": ["documentation", "article"], "og:image:alt": "Harbor &ndash; Run the Installer Script project logo", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogTitle": "Harbor &ndash; Run the Installer Script", "og:site_name": "Harbor", "og:locale": "en_US", "og:image:type": "image/png", "twitter:creator": "@project_harbor", "twitter:site": "@project_harbor", "scrapeId": "ed13a1f0-fd2a-4d57-a88e-124a677da6e3", "sourceURL": "https://goharbor.io/docs/2.12.0/install-config/run-installer-script", "url": "https://goharbor.io/docs/2.12.0/install-config/run-installer-script/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I installation with trivy in harbor-2-12-0?\n\nAssistant: To installation with trivy in harbor-2-12-0, here's what you do:\nTo install Harbor with Trivy service, add the `--with-trivy` parameter when you run `install.sh`:\n\n```sh\nsudo ./install.sh --with-trivy\n```\n\nFor more information about Trivy, see the [Trivy documentation](https://github.com/aquasecurity/trivy).\nFor more information about how to use Trivy in a webproxy environment see [Configure custom Certification Authorities for trivy](https://goharbor.io/docs/2.12.0/install-config/run-installer-script/administration/vulnerability-scanning/configure-custom-certs.md)..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/install-config/run-installer-script", "title": "Run the Installer Script", "description": "Instructions for installing and starting Harbor using the install.sh script, including configurations with and without Trivy.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:09:38", "type": "section_detail", "page_metadata": {"generator": "Hugo 0.74.0", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:title": "Harbor &ndash; Run the Installer Script", "og:url": "https://goharbor.io/docs/2.12.0/install-config/run-installer-script/", "twitter:card": "summary", "title": "\n      \nHarbor docs | Run the Installer Script\n\n    ", "ogLocale": "en_US", "ogSiteName": "Harbor", "favicon": "https://goharbor.io/favicon.svg", "ogUrl": "https://goharbor.io/docs/2.12.0/install-config/run-installer-script/", "og:type": ["documentation", "article"], "og:image:alt": "Harbor &ndash; Run the Installer Script project logo", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogTitle": "Harbor &ndash; Run the Installer Script", "og:site_name": "Harbor", "og:locale": "en_US", "og:image:type": "image/png", "twitter:creator": "@project_harbor", "twitter:site": "@project_harbor", "scrapeId": "ed13a1f0-fd2a-4d57-a88e-124a677da6e3", "sourceURL": "https://goharbor.io/docs/2.12.0/install-config/run-installer-script", "url": "https://goharbor.io/docs/2.12.0/install-config/run-installer-script/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I connecting to harbor via http in harbor-2-12-0?\n\nAssistant: To connecting to harbor via http in harbor-2-12-0, here's what you do:\n**IMPORTANT:** If your installation of Harbor uses HTTP rather than HTTPS, you must add the option `--insecure-registry` to your client’s Docker daemon. By default, the daemon file is located at `/etc/docker/daemon.json`.\n\nFor example, add the following to your `daemon.json` file:\n\n```\n{\n\"insecure-registries\" : [\"myregistrydomain.com:5000\", \"0.0.0.0\"]\n}\n```\n\nAfter you update `daemon.json`, you must restart both Docker Engine and Harbor.\n\n1. Restart Docker Engine.\n\n```sh\nsystemctl restart docker\n```\n\n2. Stop Harbor.\n\n```sh\ndocker compose down -v\n```\n\n3. Restart Harbor.\n\n```sh\ndocker compose up -d\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/install-config/run-installer-script", "title": "Run the Installer Script", "description": "Instructions for installing and starting Harbor using the install.sh script, including configurations with and without Trivy.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:09:38", "type": "section_detail", "page_metadata": {"generator": "Hugo 0.74.0", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:title": "Harbor &ndash; Run the Installer Script", "og:url": "https://goharbor.io/docs/2.12.0/install-config/run-installer-script/", "twitter:card": "summary", "title": "\n      \nHarbor docs | Run the Installer Script\n\n    ", "ogLocale": "en_US", "ogSiteName": "Harbor", "favicon": "https://goharbor.io/favicon.svg", "ogUrl": "https://goharbor.io/docs/2.12.0/install-config/run-installer-script/", "og:type": ["documentation", "article"], "og:image:alt": "Harbor &ndash; Run the Installer Script project logo", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogTitle": "Harbor &ndash; Run the Installer Script", "og:site_name": "Harbor", "og:locale": "en_US", "og:image:type": "image/png", "twitter:creator": "@project_harbor", "twitter:site": "@project_harbor", "scrapeId": "ed13a1f0-fd2a-4d57-a88e-124a677da6e3", "sourceURL": "https://goharbor.io/docs/2.12.0/install-config/run-installer-script", "url": "https://goharbor.io/docs/2.12.0/install-config/run-installer-script/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I what to do next in harbor-2-12-0?\n\nAssistant: To what to do next in harbor-2-12-0, here's what you do:\n- If the installation succeeds, see [Harbor Administration](https://goharbor.io/docs/2.12.0/administration/) for information about using Harbor.\n- If you deployed Harbor with HTTP and you want to secure the connections to Harbor, see [Configure HTTPS Access to Harbor](https://goharbor.io/docs/2.12.0/install-config/configure-https/).\n- If installation fails, see [Troubleshooting Harbor Installation](https://goharbor.io/docs/2.12.0/install-config/troubleshoot-installation/)..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/install-config/run-installer-script", "title": "Run the Installer Script", "description": "Instructions for installing and starting Harbor using the install.sh script, including configurations with and without Trivy.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:09:38", "type": "section_detail", "page_metadata": {"generator": "Hugo 0.74.0", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:title": "Harbor &ndash; Run the Installer Script", "og:url": "https://goharbor.io/docs/2.12.0/install-config/run-installer-script/", "twitter:card": "summary", "title": "\n      \nHarbor docs | Run the Installer Script\n\n    ", "ogLocale": "en_US", "ogSiteName": "Harbor", "favicon": "https://goharbor.io/favicon.svg", "ogUrl": "https://goharbor.io/docs/2.12.0/install-config/run-installer-script/", "og:type": ["documentation", "article"], "og:image:alt": "Harbor &ndash; Run the Installer Script project logo", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogTitle": "Harbor &ndash; Run the Installer Script", "og:site_name": "Harbor", "og:locale": "en_US", "og:image:type": "image/png", "twitter:creator": "@project_harbor", "twitter:site": "@project_harbor", "scrapeId": "ed13a1f0-fd2a-4d57-a88e-124a677da6e3", "sourceURL": "https://goharbor.io/docs/2.12.0/install-config/run-installer-script", "url": "https://goharbor.io/docs/2.12.0/install-config/run-installer-script/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you give me some code examples for Run the Installer Script in harbor-2-12-0?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Default installation command**:\n\n```yaml\nsudo ./install.sh\n```\n\nThis snippet shows you how to default installation command, which is an important aspect of run the installer script.\n\n**Docker login command**:\n\n```yaml\ndocker login reg.yourdomain.com\n```\n\nThis snippet shows you how to docker login command, which is an important aspect of run the installer script.\n\n**Docker push command**:\n\n```yaml\ndocker push reg.yourdomain.com/myproject/myrepo:mytag\n```\n\nThis snippet shows you how to docker push command, which is an important aspect of run the installer script.\n\n**Installation with Trivy command**:\n\n```yaml\nsudo ./install.sh --with-trivy\n```\n\nThis snippet shows you how to installation with trivy command, which is an important aspect of run the installer script.\n\n**Docker daemon.json configuration**:\n\n```yaml\n{\n\"insecure-registries\" : [\"myregistrydomain.com:5000\", \"0.0.0.0\"]\n}\n```\n\nThis snippet shows you how to docker daemon.json configuration, which is an important aspect of run the installer script.\n\n", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/install-config/run-installer-script", "title": "Run the Installer Script", "description": "Instructions for installing and starting Harbor using the install.sh script, including configurations with and without Trivy.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:09:38", "type": "code_examples", "page_metadata": {"generator": "Hugo 0.74.0", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:title": "Harbor &ndash; Run the Installer Script", "og:url": "https://goharbor.io/docs/2.12.0/install-config/run-installer-script/", "twitter:card": "summary", "title": "\n      \nHarbor docs | Run the Installer Script\n\n    ", "ogLocale": "en_US", "ogSiteName": "Harbor", "favicon": "https://goharbor.io/favicon.svg", "ogUrl": "https://goharbor.io/docs/2.12.0/install-config/run-installer-script/", "og:type": ["documentation", "article"], "og:image:alt": "Harbor &ndash; Run the Installer Script project logo", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogTitle": "Harbor &ndash; Run the Installer Script", "og:site_name": "Harbor", "og:locale": "en_US", "og:image:type": "image/png", "twitter:creator": "@project_harbor", "twitter:site": "@project_harbor", "scrapeId": "ed13a1f0-fd2a-4d57-a88e-124a677da6e3", "sourceURL": "https://goharbor.io/docs/2.12.0/install-config/run-installer-script", "url": "https://goharbor.io/docs/2.12.0/install-config/run-installer-script/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: What are some tips for using Run the Installer Script in harbor-2-12-0 effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nIf your installation of Harbor uses HTTPS, provide the Harbor certificates to the Docker client.\n\nIf your installation of Harbor uses HTTP, add the option `--insecure-registry` to your client’s Docker daemon and restart the Docker service.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/install-config/run-installer-script", "title": "Run the Installer Script", "description": "Instructions for installing and starting Harbor using the install.sh script, including configurations with and without Trivy.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:09:38", "type": "best_practices", "page_metadata": {"generator": "Hugo 0.74.0", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:title": "Harbor &ndash; Run the Installer Script", "og:url": "https://goharbor.io/docs/2.12.0/install-config/run-installer-script/", "twitter:card": "summary", "title": "\n      \nHarbor docs | Run the Installer Script\n\n    ", "ogLocale": "en_US", "ogSiteName": "Harbor", "favicon": "https://goharbor.io/favicon.svg", "ogUrl": "https://goharbor.io/docs/2.12.0/install-config/run-installer-script/", "og:type": ["documentation", "article"], "og:image:alt": "Harbor &ndash; Run the Installer Script project logo", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogTitle": "Harbor &ndash; Run the Installer Script", "og:site_name": "Harbor", "og:locale": "en_US", "og:image:type": "image/png", "twitter:creator": "@project_harbor", "twitter:site": "@project_harbor", "scrapeId": "ed13a1f0-fd2a-4d57-a88e-124a677da6e3", "sourceURL": "https://goharbor.io/docs/2.12.0/install-config/run-installer-script", "url": "https://goharbor.io/docs/2.12.0/install-config/run-installer-script/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you explain what Scan All Artifacts is in harbor-2-12-0?\n\nAssistant: Sure, I'd be happy to explain Scan All Artifacts in harbor-2-12-0.\n\n# Scan All Artifacts\n\nIn addition to scanning individual artifacts in projects, you can run global scans on all of the artifacts in a Harbor instance, across all projects.Here's a quick rundown of what this is about:\n\n## How to Scan All Artifacts\n\n1. Log in to the Harbor interface with an account that has Harbor system administrator privileges.\n\n2. Expand **Administration**, and select **Interrogation Services**.\n\n3. Select the **Vulnerability** tab and click **Scan Now** to scan all of the artifacts in all projects.\n\n## Important Note\n\nScanning requires intensive resource consumption. If scanning is in progress, the **Scan Now** button is unavailable.\n\n## Contributing\n\n[Page source](https://github.com/goharbor/website/blob/release-2.12.0/docs/administration/vulnerability-scanning/scan-all-artifacts.md) [Create issue](https://github.com/goharbor/harbor/issues)\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/scan-all-artifacts", "title": "Scan All Artifacts", "description": "In addition to scanning individual artifacts in projects, you can run global scans on all of the artifacts in a Harbor instance, across all projects.", "has_code_examples": false, "has_best_practices": false, "section_count": 3, "timestamp": "2025-03-01 03:09:49", "type": "overview", "page_metadata": {"og:image:alt": "Harbor &ndash; Scan All Artifacts project logo", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "ogTitle": "Harbor &ndash; Scan All Artifacts", "og:type": ["documentation", "article"], "og:site_name": "Harbor", "twitter:card": "summary", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/scan-all-artifacts/", "og:title": "Harbor &ndash; Scan All Artifacts", "og:url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/scan-all-artifacts/", "twitter:creator": "@project_harbor", "generator": "Hugo 0.74.0", "ogLocale": "en_US", "favicon": "https://goharbor.io/favicon.svg", "og:image:type": "image/png", "title": "\n      \nHarbor docs | Scan All Artifacts\n\n    ", "ogSiteName": "Harbor", "og:locale": "en_US", "twitter:site": "@project_harbor", "scrapeId": "81874c62-509a-4499-ba37-25aa1ec13d93", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/scan-all-artifacts", "url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/scan-all-artifacts/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I how to scan all artifacts in harbor-2-12-0?\n\nAssistant: To how to scan all artifacts in harbor-2-12-0, here's what you do:\n1. Log in to the Harbor interface with an account that has Harbor system administrator privileges.\n\n2. Expand **Administration**, and select **Interrogation Services**.\n\n3. Select the **Vulnerability** tab and click **Scan Now** to scan all of the artifacts in all projects..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/scan-all-artifacts", "title": "Scan All Artifacts", "description": "In addition to scanning individual artifacts in projects, you can run global scans on all of the artifacts in a Harbor instance, across all projects.", "has_code_examples": false, "has_best_practices": false, "section_count": 3, "timestamp": "2025-03-01 03:09:49", "type": "section_detail", "page_metadata": {"og:image:alt": "Harbor &ndash; Scan All Artifacts project logo", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "ogTitle": "Harbor &ndash; Scan All Artifacts", "og:type": ["documentation", "article"], "og:site_name": "Harbor", "twitter:card": "summary", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/scan-all-artifacts/", "og:title": "Harbor &ndash; Scan All Artifacts", "og:url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/scan-all-artifacts/", "twitter:creator": "@project_harbor", "generator": "Hugo 0.74.0", "ogLocale": "en_US", "favicon": "https://goharbor.io/favicon.svg", "og:image:type": "image/png", "title": "\n      \nHarbor docs | Scan All Artifacts\n\n    ", "ogSiteName": "Harbor", "og:locale": "en_US", "twitter:site": "@project_harbor", "scrapeId": "81874c62-509a-4499-ba37-25aa1ec13d93", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/scan-all-artifacts", "url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/scan-all-artifacts/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I important note in harbor-2-12-0?\n\nAssistant: To important note in harbor-2-12-0, here's what you do:\nScanning requires intensive resource consumption. If scanning is in progress, the **Scan Now** button is unavailable..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/scan-all-artifacts", "title": "Scan All Artifacts", "description": "In addition to scanning individual artifacts in projects, you can run global scans on all of the artifacts in a Harbor instance, across all projects.", "has_code_examples": false, "has_best_practices": false, "section_count": 3, "timestamp": "2025-03-01 03:09:49", "type": "section_detail", "page_metadata": {"og:image:alt": "Harbor &ndash; Scan All Artifacts project logo", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "ogTitle": "Harbor &ndash; Scan All Artifacts", "og:type": ["documentation", "article"], "og:site_name": "Harbor", "twitter:card": "summary", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/scan-all-artifacts/", "og:title": "Harbor &ndash; Scan All Artifacts", "og:url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/scan-all-artifacts/", "twitter:creator": "@project_harbor", "generator": "Hugo 0.74.0", "ogLocale": "en_US", "favicon": "https://goharbor.io/favicon.svg", "og:image:type": "image/png", "title": "\n      \nHarbor docs | Scan All Artifacts\n\n    ", "ogSiteName": "Harbor", "og:locale": "en_US", "twitter:site": "@project_harbor", "scrapeId": "81874c62-509a-4499-ba37-25aa1ec13d93", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/scan-all-artifacts", "url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/scan-all-artifacts/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I contributing in harbor-2-12-0?\n\nAssistant: To contributing in harbor-2-12-0, here's what you do:\n[Page source](https://github.com/goharbor/website/blob/release-2.12.0/docs/administration/vulnerability-scanning/scan-all-artifacts.md) [Create issue](https://github.com/goharbor/harbor/issues).\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/scan-all-artifacts", "title": "Scan All Artifacts", "description": "In addition to scanning individual artifacts in projects, you can run global scans on all of the artifacts in a Harbor instance, across all projects.", "has_code_examples": false, "has_best_practices": false, "section_count": 3, "timestamp": "2025-03-01 03:09:49", "type": "section_detail", "page_metadata": {"og:image:alt": "Harbor &ndash; Scan All Artifacts project logo", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "ogTitle": "Harbor &ndash; Scan All Artifacts", "og:type": ["documentation", "article"], "og:site_name": "Harbor", "twitter:card": "summary", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/scan-all-artifacts/", "og:title": "Harbor &ndash; Scan All Artifacts", "og:url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/scan-all-artifacts/", "twitter:creator": "@project_harbor", "generator": "Hugo 0.74.0", "ogLocale": "en_US", "favicon": "https://goharbor.io/favicon.svg", "og:image:type": "image/png", "title": "\n      \nHarbor docs | Scan All Artifacts\n\n    ", "ogSiteName": "Harbor", "og:locale": "en_US", "twitter:site": "@project_harbor", "scrapeId": "81874c62-509a-4499-ba37-25aa1ec13d93", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/scan-all-artifacts", "url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/scan-all-artifacts/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you explain what Vulnerability Scanning is in harbor-2-12-0?\n\nAssistant: Sure, I'd be happy to explain Vulnerability Scanning in harbor-2-12-0.\n\n# Vulnerability Scanning\n\nHarbor provides static analysis of vulnerabilities in images through the open source projects Trivy. This page covers how to use Trivy with Harbor, connecting to additional scanners, and managing vulnerability scans.Here's a quick rundown of what this is about:\n\n## Overview\n\nHarbor provides static analysis of vulnerabilities in images through the open source projects [Trivy](https://github.com/aquasecurity/trivy). To be able to use Trivy you must have enabled Trivy when you installed your Harbor instance (by appending installation options `--with-trivy`). For information about installing Harbor with Trivy, see the [Run the Installer Script](https://goharbor.io/docs/2.12.0/install-config/run-installer-script/).\n\n## Default Scanner Behavior\n\nIf the upgrading path is from the version that is >=V1.10 to current version (V2.0) and there was an existing system default scanner “ABC” is set in the previous version, that scanner “ABC” will be kept as system default scanner.\n\n## Connecting to Additional Scanners\n\nYou can also connect Harbor to your own instance of Trivy or to other [additional vulnerability scanners](https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/pluggable-scanners/) through Harbor’s embedded interrogation service. These scanners can be configured in the Harbor UI at any time after installation. It might be necessary to connect Harbor to other scanners for corporate compliance reasons, or because your organization already uses a particular scanner. Different scanners also use different vulnerability databases, capture different CVE sets, and apply different severity thresholds. By connecting Harbor to more than one vulnerability scanner, you broaden the scope of your protection against vulnerabilities. For the list of additional scanners that are currently supported, see the [Harbor Compatibility List](https://goharbor.io/docs/2.12.0/install-config/harbor-compatibility-list/#scanner-adapters).\n\n## Clair Scanner Removal\n\nClair has been removed as a default scanner in v2.2. You are still able to use Clair for vulnerability scanning by adding it as an external scanner.\n\n## Manual and Scheduled Scanning\n\nYou can manually initiate scanning on a particular image, or on all images in Harbor. Additionally, you can also set a policy to automatically scan all of the images at specific intervals. Vulnerability scans of [Cosign signatures](https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/sign-images/#use-cosign-to-sign-artifacts) are not supported.\n\n## Exporting Scan Results\n\nYou can also export scans for an image using the Harbor API endpoint `/projects/{project_name}/repositories/{repository_name}/artifacts/{reference}/additions/vulnerabilities`. See more information about using this endpoint in the [Harbor Swagger file](https://github.com/goharbor/harbor/blob/main/api/v2.0/swagger.yaml).\n\n## Related Pages\n\n- [Connect Harbor to Additional Vulnerability Scanners](https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/pluggable-scanners/)\n- [Scan Individual Artifacts](https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/scan-individual-artifact/)\n- [Stop Scan & Stop Scan All](https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/stop-scan/)\n- [Deployment security](https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/deployment-security/)\n- [Scan All Artifacts](https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/scan-all-artifacts/)\n- [Schedule Scans](https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/schedule-scans/)\n- [Import Vulnerability Data to an Offline Harbor instance](https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/import-vulnerability-data/)\n- [Configure System-Wide CVE Allowlists](https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/configure-system-allowlist/)\n- [Configure custom Certification Authorities for trivy](https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/configure-custom-certs/)\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning", "title": "Vulnerability Scanning", "description": "Harbor provides static analysis of vulnerabilities in images through the open source projects Trivy. This page covers how to use Trivy with Harbor, connecting to additional scanners, and managing vulnerability scans.", "has_code_examples": false, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:10:09", "type": "overview", "page_metadata": {"og:image:type": "image/png", "twitter:creator": "@project_harbor", "twitter:card": "summary", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "twitter:site": "@project_harbor", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "title": "\n      \nHarbor docs | Vulnerability Scanning\n\n    ", "og:title": "Harbor &ndash; Vulnerability Scanning", "favicon": "https://goharbor.io/favicon.svg", "og:image:alt": "Harbor &ndash; Vulnerability Scanning project logo", "generator": "Hugo 0.74.0", "og:locale": "en_US", "og:type": ["documentation", "article"], "ogLocale": "en_US", "og:site_name": "Harbor", "ogTitle": "Harbor &ndash; Vulnerability Scanning", "ogSiteName": "Harbor", "og:url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/", "scrapeId": "adb28f44-1b80-455c-a7c0-14690cf340ae", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning", "url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I overview in harbor-2-12-0?\n\nAssistant: To overview in harbor-2-12-0, here's what you do:\nHarbor provides static analysis of vulnerabilities in images through the open source projects [Trivy](https://github.com/aquasecurity/trivy). To be able to use Trivy you must have enabled Trivy when you installed your Harbor instance (by appending installation options `--with-trivy`). For information about installing Harbor with Trivy, see the [Run the Installer Script](https://goharbor.io/docs/2.12.0/install-config/run-installer-script/)..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning", "title": "Vulnerability Scanning", "description": "Harbor provides static analysis of vulnerabilities in images through the open source projects Trivy. This page covers how to use Trivy with Harbor, connecting to additional scanners, and managing vulnerability scans.", "has_code_examples": false, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:10:09", "type": "section_detail", "page_metadata": {"og:image:type": "image/png", "twitter:creator": "@project_harbor", "twitter:card": "summary", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "twitter:site": "@project_harbor", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "title": "\n      \nHarbor docs | Vulnerability Scanning\n\n    ", "og:title": "Harbor &ndash; Vulnerability Scanning", "favicon": "https://goharbor.io/favicon.svg", "og:image:alt": "Harbor &ndash; Vulnerability Scanning project logo", "generator": "Hugo 0.74.0", "og:locale": "en_US", "og:type": ["documentation", "article"], "ogLocale": "en_US", "og:site_name": "Harbor", "ogTitle": "Harbor &ndash; Vulnerability Scanning", "ogSiteName": "Harbor", "og:url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/", "scrapeId": "adb28f44-1b80-455c-a7c0-14690cf340ae", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning", "url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I default scanner behavior in harbor-2-12-0?\n\nAssistant: To default scanner behavior in harbor-2-12-0, here's what you do:\nIf the upgrading path is from the version that is >=V1.10 to current version (V2.0) and there was an existing system default scanner “ABC” is set in the previous version, that scanner “ABC” will be kept as system default scanner..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning", "title": "Vulnerability Scanning", "description": "Harbor provides static analysis of vulnerabilities in images through the open source projects Trivy. This page covers how to use Trivy with Harbor, connecting to additional scanners, and managing vulnerability scans.", "has_code_examples": false, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:10:09", "type": "section_detail", "page_metadata": {"og:image:type": "image/png", "twitter:creator": "@project_harbor", "twitter:card": "summary", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "twitter:site": "@project_harbor", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "title": "\n      \nHarbor docs | Vulnerability Scanning\n\n    ", "og:title": "Harbor &ndash; Vulnerability Scanning", "favicon": "https://goharbor.io/favicon.svg", "og:image:alt": "Harbor &ndash; Vulnerability Scanning project logo", "generator": "Hugo 0.74.0", "og:locale": "en_US", "og:type": ["documentation", "article"], "ogLocale": "en_US", "og:site_name": "Harbor", "ogTitle": "Harbor &ndash; Vulnerability Scanning", "ogSiteName": "Harbor", "og:url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/", "scrapeId": "adb28f44-1b80-455c-a7c0-14690cf340ae", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning", "url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I connecting to additional scanners in harbor-2-12-0?\n\nAssistant: To connecting to additional scanners in harbor-2-12-0, here's what you do:\nYou can also connect Harbor to your own instance of Trivy or to other [additional vulnerability scanners](https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/pluggable-scanners/) through Harbor’s embedded interrogation service. These scanners can be configured in the Harbor UI at any time after installation. It might be necessary to connect Harbor to other scanners for corporate compliance reasons, or because your organization already uses a particular scanner. Different scanners also use different vulnerability databases, capture different CVE sets, and apply different severity thresholds. By connecting Harbor to more than one vulnerability scanner, you broaden the scope of your protection against vulnerabilities. For the list of additional scanners that are currently supported, see the [Harbor Compatibility List](https://goharbor.io/docs/2.12.0/install-config/harbor-compatibility-list/#scanner-adapters)..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning", "title": "Vulnerability Scanning", "description": "Harbor provides static analysis of vulnerabilities in images through the open source projects Trivy. This page covers how to use Trivy with Harbor, connecting to additional scanners, and managing vulnerability scans.", "has_code_examples": false, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:10:09", "type": "section_detail", "page_metadata": {"og:image:type": "image/png", "twitter:creator": "@project_harbor", "twitter:card": "summary", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "twitter:site": "@project_harbor", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "title": "\n      \nHarbor docs | Vulnerability Scanning\n\n    ", "og:title": "Harbor &ndash; Vulnerability Scanning", "favicon": "https://goharbor.io/favicon.svg", "og:image:alt": "Harbor &ndash; Vulnerability Scanning project logo", "generator": "Hugo 0.74.0", "og:locale": "en_US", "og:type": ["documentation", "article"], "ogLocale": "en_US", "og:site_name": "Harbor", "ogTitle": "Harbor &ndash; Vulnerability Scanning", "ogSiteName": "Harbor", "og:url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/", "scrapeId": "adb28f44-1b80-455c-a7c0-14690cf340ae", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning", "url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I clair scanner removal in harbor-2-12-0?\n\nAssistant: To clair scanner removal in harbor-2-12-0, here's what you do:\nClair has been removed as a default scanner in v2.2. You are still able to use Clair for vulnerability scanning by adding it as an external scanner..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning", "title": "Vulnerability Scanning", "description": "Harbor provides static analysis of vulnerabilities in images through the open source projects Trivy. This page covers how to use Trivy with Harbor, connecting to additional scanners, and managing vulnerability scans.", "has_code_examples": false, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:10:09", "type": "section_detail", "page_metadata": {"og:image:type": "image/png", "twitter:creator": "@project_harbor", "twitter:card": "summary", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "twitter:site": "@project_harbor", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "title": "\n      \nHarbor docs | Vulnerability Scanning\n\n    ", "og:title": "Harbor &ndash; Vulnerability Scanning", "favicon": "https://goharbor.io/favicon.svg", "og:image:alt": "Harbor &ndash; Vulnerability Scanning project logo", "generator": "Hugo 0.74.0", "og:locale": "en_US", "og:type": ["documentation", "article"], "ogLocale": "en_US", "og:site_name": "Harbor", "ogTitle": "Harbor &ndash; Vulnerability Scanning", "ogSiteName": "Harbor", "og:url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/", "scrapeId": "adb28f44-1b80-455c-a7c0-14690cf340ae", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning", "url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I manual and scheduled scanning in harbor-2-12-0?\n\nAssistant: To manual and scheduled scanning in harbor-2-12-0, here's what you do:\nYou can manually initiate scanning on a particular image, or on all images in Harbor. Additionally, you can also set a policy to automatically scan all of the images at specific intervals. Vulnerability scans of [Cosign signatures](https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/sign-images/#use-cosign-to-sign-artifacts) are not supported..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning", "title": "Vulnerability Scanning", "description": "Harbor provides static analysis of vulnerabilities in images through the open source projects Trivy. This page covers how to use Trivy with Harbor, connecting to additional scanners, and managing vulnerability scans.", "has_code_examples": false, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:10:09", "type": "section_detail", "page_metadata": {"og:image:type": "image/png", "twitter:creator": "@project_harbor", "twitter:card": "summary", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "twitter:site": "@project_harbor", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "title": "\n      \nHarbor docs | Vulnerability Scanning\n\n    ", "og:title": "Harbor &ndash; Vulnerability Scanning", "favicon": "https://goharbor.io/favicon.svg", "og:image:alt": "Harbor &ndash; Vulnerability Scanning project logo", "generator": "Hugo 0.74.0", "og:locale": "en_US", "og:type": ["documentation", "article"], "ogLocale": "en_US", "og:site_name": "Harbor", "ogTitle": "Harbor &ndash; Vulnerability Scanning", "ogSiteName": "Harbor", "og:url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/", "scrapeId": "adb28f44-1b80-455c-a7c0-14690cf340ae", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning", "url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I exporting scan results in harbor-2-12-0?\n\nAssistant: To exporting scan results in harbor-2-12-0, here's what you do:\nYou can also export scans for an image using the Harbor API endpoint `/projects/{project_name}/repositories/{repository_name}/artifacts/{reference}/additions/vulnerabilities`. See more information about using this endpoint in the [Harbor Swagger file](https://github.com/goharbor/harbor/blob/main/api/v2.0/swagger.yaml)..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning", "title": "Vulnerability Scanning", "description": "Harbor provides static analysis of vulnerabilities in images through the open source projects Trivy. This page covers how to use Trivy with Harbor, connecting to additional scanners, and managing vulnerability scans.", "has_code_examples": false, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:10:09", "type": "section_detail", "page_metadata": {"og:image:type": "image/png", "twitter:creator": "@project_harbor", "twitter:card": "summary", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "twitter:site": "@project_harbor", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "title": "\n      \nHarbor docs | Vulnerability Scanning\n\n    ", "og:title": "Harbor &ndash; Vulnerability Scanning", "favicon": "https://goharbor.io/favicon.svg", "og:image:alt": "Harbor &ndash; Vulnerability Scanning project logo", "generator": "Hugo 0.74.0", "og:locale": "en_US", "og:type": ["documentation", "article"], "ogLocale": "en_US", "og:site_name": "Harbor", "ogTitle": "Harbor &ndash; Vulnerability Scanning", "ogSiteName": "Harbor", "og:url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/", "scrapeId": "adb28f44-1b80-455c-a7c0-14690cf340ae", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning", "url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I related pages in harbor-2-12-0?\n\nAssistant: To related pages in harbor-2-12-0, here's what you do:\n- [Connect Harbor to Additional Vulnerability Scanners](https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/pluggable-scanners/)\n- [Scan Individual Artifacts](https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/scan-individual-artifact/)\n- [Stop Scan & Stop Scan All](https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/stop-scan/)\n- [Deployment security](https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/deployment-security/)\n- [Scan All Artifacts](https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/scan-all-artifacts/)\n- [Schedule Scans](https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/schedule-scans/)\n- [Import Vulnerability Data to an Offline Harbor instance](https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/import-vulnerability-data/)\n- [Configure System-Wide CVE Allowlists](https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/configure-system-allowlist/)\n- [Configure custom Certification Authorities for trivy](https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/configure-custom-certs/).\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning", "title": "Vulnerability Scanning", "description": "Harbor provides static analysis of vulnerabilities in images through the open source projects Trivy. This page covers how to use Trivy with Harbor, connecting to additional scanners, and managing vulnerability scans.", "has_code_examples": false, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:10:09", "type": "section_detail", "page_metadata": {"og:image:type": "image/png", "twitter:creator": "@project_harbor", "twitter:card": "summary", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "twitter:site": "@project_harbor", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "title": "\n      \nHarbor docs | Vulnerability Scanning\n\n    ", "og:title": "Harbor &ndash; Vulnerability Scanning", "favicon": "https://goharbor.io/favicon.svg", "og:image:alt": "Harbor &ndash; Vulnerability Scanning project logo", "generator": "Hugo 0.74.0", "og:locale": "en_US", "og:type": ["documentation", "article"], "ogLocale": "en_US", "og:site_name": "Harbor", "ogTitle": "Harbor &ndash; Vulnerability Scanning", "ogSiteName": "Harbor", "og:url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/", "scrapeId": "adb28f44-1b80-455c-a7c0-14690cf340ae", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning", "url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: What are some tips for using Vulnerability Scanning in harbor-2-12-0 effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nEnsure Trivy is enabled during Harbor installation for vulnerability scanning.\n\nConsider connecting to multiple vulnerability scanners for broader protection.\n\nRegularly schedule scans to maintain security compliance.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning", "title": "Vulnerability Scanning", "description": "Harbor provides static analysis of vulnerabilities in images through the open source projects Trivy. This page covers how to use Trivy with Harbor, connecting to additional scanners, and managing vulnerability scans.", "has_code_examples": false, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:10:09", "type": "best_practices", "page_metadata": {"og:image:type": "image/png", "twitter:creator": "@project_harbor", "twitter:card": "summary", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "twitter:site": "@project_harbor", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "title": "\n      \nHarbor docs | Vulnerability Scanning\n\n    ", "og:title": "Harbor &ndash; Vulnerability Scanning", "favicon": "https://goharbor.io/favicon.svg", "og:image:alt": "Harbor &ndash; Vulnerability Scanning project logo", "generator": "Hugo 0.74.0", "og:locale": "en_US", "og:type": ["documentation", "article"], "ogLocale": "en_US", "og:site_name": "Harbor", "ogTitle": "Harbor &ndash; Vulnerability Scanning", "ogSiteName": "Harbor", "og:url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/", "scrapeId": "adb28f44-1b80-455c-a7c0-14690cf340ae", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning", "url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you explain what Access Metrics is in harbor-2-12-0?\n\nAssistant: Sure, I'd be happy to explain Access Metrics in harbor-2-12-0.\n\n# Access Metrics\n\nHarbor exposes some key metrics needed for operators and administrators to monitor how your Harbor instance is running in real time. Observability is a key feature for operating a service in production and using this data you can identify abnormal statuses and make informed decisions to fix issues when an error occurs. Harbor exposes metrics using the Prometheus data model so you can easily start scraping your Harbor instance’s metrics using Prometheus.Here's a quick rundown of what this is about:\n\n## Harbor Exporter Metrics\n\nThe exporter component metrics relate to your Harbor instance configuration and collects some data from the Harbor database. Metrics are available at `<harbor_instance>:<metrics_port>/<metrics_path>`.\n\n| Name | Description | Labels (Values) | Metric type |\n| :-- | :-- | :-- | :-- |\n| `harbor_project_total` | Total number of public and private projects | public ( `true`, `false`) | gauge |\n| `harbor_project_repo_total` | Total number of repositories in a project | public ( `true`, `false`), project_name | gauge |\n| `harbor_project_member_total` | Total number of members in a project | project_name | gauge |\n| `harbor_project_quota_usage_byte` | Total used resources of a project | project_name | gauge |\n| `harbor_project_quota_byte` | Quota set in a project | project_name | gauge |\n| `harbor_artifact_pulled` | Number of images pulled in a project | project_name | gauge |\n| `harbor_project_artifact_total` | Total number of artifacts type in a project | artifact_type , project_name, public ( `true`, `false`) | gauge |\n| `harbor_health` | Current status of Harbor |  | gauge |\n| `harbor_system_info` | Information about your Harbor instance | auth_mode ( `db_auth`, `ldap_auth`, `uaa_auth`, `http_auth`, `oidc_auth`), harbor_version, self_registration( `true`, `false`) | gauge |\n| `harbor_up` | Running status of Harbor components | component ( `chartmuseum`, `core`, `database`, `jobservice`, `portal`, `redis`, `registry`, `registryctl`, `trivy`) | gauge |\n| `harbor_task_queue_size` | The total number of tasks per type in the queue | instance, job, type | gauge |\n| `harbor_task_queue_latency` | How long ago the next job to be processed was enqueued per type | instance, job, type | gauge |\n| `harbor_task_scheduled_total` | Number of scheduled tasks | instance, job | gauge |\n| `harbor_task_concurrency` | Total number of concurrent tasks per type on a pool | instance, job, pool, type | gauge |\n\nMetrics exposed by the Harbor Exporter\n\n## Harbor Core Metrics\n\nThe following are metrics pulled from the Harbor core pod and are available at `<harbor_instance>:<metrics_port>/<metrics_path>?comp=core`.\n\n| Name | Description | Labels (Values) | Metric type |\n| :-- | :-- | :-- | :-- |\n| `harbor_core_http_inflight_requests` | The total number of requests | operation (values from `operationId` in <br>[Harbor API](https://github.com/goharbor/harbor/blob/main/api/v2.0/swagger.yaml). Some legacy endpoints do not have an `operationId`, so the label value is `unknown`) | gauge |\n| `harbor_core_http_request_duration_seconds` | The time duration of the requests | method ( `GET`, `POST`, `HEAD`, `PATCH`, `PUT`), operation (values from `operationId` in <br>[Harbor API](https://github.com/goharbor/harbor/blob/main/api/v2.0/swagger.yaml). Some legacy endpoints do not have an `operationId`, so the label value is `unknown`), quantile | summary |\n| `harbor_core_http_request_total` | The total number of requests | method ( `GET`, `POST`, `HEAD`, `PATCH`, `PUT`), operation (values from `operationId` in <br>[Harbor API](https://github.com/goharbor/harbor/blob/main/api/v2.0/swagger.yaml). Some legacy endpoints do not have an `operationId`, so the label value is `unknown`) | counter |\n\nMetrics exposed by Harbor Core\n\n## Registry Metrics\n\nThe following are metrics pulled from the Distribution/Distribution and are available at `<harbor_instance>:<metrics_port>/<metrics_path>?comp=registry`.\n\n| Name | Description | Labels (Values) | Metric type |\n| :-- | :-- | :-- | :-- |\n| `registry_http_in_flight_requests` | The in-flight HTTP requests | handler | gauge |\n| `registry_http_request_duration_seconds_bucket` `registry_http_request_duration_seconds_sum` `registry_http_request_duration_seconds_count` | The HTTP request latencies in seconds | handler, method ( `GET`, `POST`, `HEAD`, `PATCH`, `PUT`), le | histogram |\n| `registry_http_request_size_bytes_bucket registry_http_request_size_bytes_sum registry_http_request_size_bytes_count` | The HTTP request sizes in bytes | handler, le | histogram |\n| `registry_http_requests_total` | Total number of HTTP requests made | code,handler,method,le | counter |\n| `registry_http_response_size_bytes_bucket` `registry_http_response_size_bytes_sum` `registry_http_response_size_bytes_count` | The HTTP response sizes in bytes | handler,le | histogram |\n| `registry_storage_action_seconds_bucket` `registry_storage_action_seconds_sum` `registry_storage_action_seconds_count` | The number of seconds that the storage action takes | action,driver,le | histogram |\n| `registry_storage_cache_total` | The number of cache request received | type | gauge |\n\nMetrics exposed by Harbor Core\n\n## Harbor Jobservice metrics\n\nThe following are metrics pulled from the Harbor Jobservice and are available at `<harbor_instance>:<metrics_port>/<metrics_path>?comp=jobservice`.\n\n| Name | Description | Labels (Values) | Metric type |\n| :-- | :-- | :-- | :-- |\n| `harbor_jobservice_info` | The information of Jobservice | instance, job, node, pool, workers | gauge |\n| `harbor_jobservice_task_total` | The number of processed tasks per job type | instance, job, status, type | counter |\n| `harbor_jobservice_task_process_time_seconds` | The duration of the task processing time | instance, job, quantile, status, type | summary |\n\nMetrics exposed by Harbor Jobservice\n\n## Scraping Metrics with Prometheus\n\nTo begin accessing your Harbor instance’s metrics with Prometheus,\n\n1. Enable exposing metrics in your `harbor.yml` [configuration file](https://goharbor.io/docs/2.12.0/install-config/configure-yml-file/) and set the port and path for metrics to be exposed on. Also see more about [reconfiguring your Harbor instance](https://goharbor.io/docs/2.12.0/install-config/reconfigure-manage-lifecycle/).\n\n2. Set up a Prometheus server, see the [Prometheus documentation](https://prometheus.io/docs/prometheus/latest/installation/) for more information on installing.\n\n3. Configure your Prometheus config file to scrape Harbor metrics exposed at your configured port and path. Below is an example scrape config, see the Prometheus documentation for all available [scrape configuration options](https://prometheus.io/docs/prometheus/latest/configuration/configuration/#scrape_config).\n\n```fallback\n     scrape_configs:\n\n    - job_name: 'harbor-exporter'\n      scrape_interval: 20s\n      static_configs:\n        # Scrape metrics from the Harbor exporter component\n        - targets: ['<harbor_instance>:<metrics_port>']\n\n    - job_name: 'harbor-core'\n      scrape_interval: 20s\n      params:\n        # Scrape metrics from the Harbor core component\n        comp: ['core']\n      static_configs:\n        - targets: ['<harbor_instance>:<metrics_port>']\n\n    - job_name: 'harbor-registry'\n      scrape_interval: 20s\n      params:\n        # Scrape metrics from the Harbor registry component\n        comp: ['registry']\n      static_configs:\n        - targets: ['<harbor_instance>:<metrics_port>']\n\n    - job_name: 'harbor-jobservice'\n      scrape_interval: 20s\n      params:\n        # Scrape metrics from the Harbor jobservice component\n        comp: ['jobservice']\n      static_configs:\n        - targets: ['<harbor_instance>:<metrics_port>']\n\n```\n\n4. Once you have configured your Prometheus server to collect your Harbor metrics, you can use [Grafana](https://grafana.com/docs/) to visualize your data. An [example Grafana dashboard](https://github.com/goharbor/harbor/blob/main/contrib/grafana-dashboard/metrics-example.json) is available in the Harbor repo to help you get started visualizing Harbor metrics.\n\n### From a Kubernetes cluster\n\nYou can also use Prometheus to collect metrics from a Harbor instance deployed in your Kubernetes cluster. You should already have [installed Prometheus](https://github.com/prometheus-community/helm-charts) and set up to pull metrics from your cluster.\n\n1. Create a ServiceMonitor in Prometheus for Harbor.\n\n```fallback\napiVersion: monitoring.coreos.com/v1\nkind: ServiceMonitor\nmetadata:\n     name: harbor\n     labels:\n       app: harbor\nspec:\n     selector:\n       matchLabels:\n         app: harbor\n     endpoints:\n  - port: metrics\n```\n\n2. Enable Harbor to expose metrics by updating your harbor-helm `values.yaml` file and set `metrics.enabled` to `true`. You can also edit the port and path the metrics are exposed on by updating the available harbor-helm chart [configuration options for metrics](https://github.com/goharbor/harbor-helm#configuration).\n\nPrometheus should now show your Harbor instance’s metrics.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/metrics", "title": "Access Metrics", "description": "Harbor exposes some key metrics needed for operators and administrators to monitor how your Harbor instance is running in real time. Observability is a key feature for operating a service in production and using this data you can identify abnormal statuses and make informed decisions to fix issues when an error occurs. Harbor exposes metrics using the Prometheus data model so you can easily start scraping your Harbor instance’s metrics using Prometheus.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:10:47", "type": "overview", "page_metadata": {"ogLocale": "en_US", "og:url": "https://goharbor.io/docs/2.12.0/administration/metrics/", "og:image:type": "image/png", "ogSiteName": "Harbor", "og:image:alt": "Harbor &ndash; Access Metrics project logo", "title": "\n      \nHarbor docs | Access Metrics\n\n    ", "og:title": "Harbor &ndash; Access Metrics", "favicon": "https://goharbor.io/favicon.svg", "og:locale": "en_US", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:site_name": "Harbor", "generator": "Hugo 0.74.0", "twitter:site": "@project_harbor", "twitter:card": "summary", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "twitter:creator": "@project_harbor", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/metrics/", "ogTitle": "Harbor &ndash; Access Metrics", "og:type": ["documentation", "article"], "scrapeId": "8f533303-9233-45fd-b0a2-92de5ade9808", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/metrics", "url": "https://goharbor.io/docs/2.12.0/administration/metrics/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I harbor exporter metrics in harbor-2-12-0?\n\nAssistant: To harbor exporter metrics in harbor-2-12-0, here's what you do:\nThe exporter component metrics relate to your Harbor instance configuration and collects some data from the Harbor database. Metrics are available at `<harbor_instance>:<metrics_port>/<metrics_path>`.\n\n| Name | Description | Labels (Values) | Metric type |\n| :-- | :-- | :-- | :-- |\n| `harbor_project_total` | Total number of public and private projects | public ( `true`, `false`) | gauge |\n| `harbor_project_repo_total` | Total number of repositories in a project | public ( `true`, `false`), project_name | gauge |\n| `harbor_project_member_total` | Total number of members in a project | project_name | gauge |\n| `harbor_project_quota_usage_byte` | Total used resources of a project | project_name | gauge |\n| `harbor_project_quota_byte` | Quota set in a project | project_name | gauge |\n| `harbor_artifact_pulled` | Number of images pulled in a project | project_name | gauge |\n| `harbor_project_artifact_total` | Total number of artifacts type in a project | artifact_type , project_name, public ( `true`, `false`) | gauge |\n| `harbor_health` | Current status of Harbor |  | gauge |\n| `harbor_system_info` | Information about your Harbor instance | auth_mode ( `db_auth`, `ldap_auth`, `uaa_auth`, `http_auth`, `oidc_auth`), harbor_version, self_registration( `true`, `false`) | gauge |\n| `harbor_up` | Running status of Harbor components | component ( `chartmuseum`, `core`, `database`, `jobservice`, `portal`, `redis`, `registry`, `registryctl`, `trivy`) | gauge |\n| `harbor_task_queue_size` | The total number of tasks per type in the queue | instance, job, type | gauge |\n| `harbor_task_queue_latency` | How long ago the next job to be processed was enqueued per type | instance, job, type | gauge |\n| `harbor_task_scheduled_total` | Number of scheduled tasks | instance, job | gauge |\n| `harbor_task_concurrency` | Total number of concurrent tasks per type on a pool | instance, job, pool, type | gauge |\n\nMetrics exposed by the Harbor Exporter.\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/metrics", "title": "Access Metrics", "description": "Harbor exposes some key metrics needed for operators and administrators to monitor how your Harbor instance is running in real time. Observability is a key feature for operating a service in production and using this data you can identify abnormal statuses and make informed decisions to fix issues when an error occurs. Harbor exposes metrics using the Prometheus data model so you can easily start scraping your Harbor instance’s metrics using Prometheus.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:10:47", "type": "section_detail", "page_metadata": {"ogLocale": "en_US", "og:url": "https://goharbor.io/docs/2.12.0/administration/metrics/", "og:image:type": "image/png", "ogSiteName": "Harbor", "og:image:alt": "Harbor &ndash; Access Metrics project logo", "title": "\n      \nHarbor docs | Access Metrics\n\n    ", "og:title": "Harbor &ndash; Access Metrics", "favicon": "https://goharbor.io/favicon.svg", "og:locale": "en_US", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:site_name": "Harbor", "generator": "Hugo 0.74.0", "twitter:site": "@project_harbor", "twitter:card": "summary", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "twitter:creator": "@project_harbor", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/metrics/", "ogTitle": "Harbor &ndash; Access Metrics", "og:type": ["documentation", "article"], "scrapeId": "8f533303-9233-45fd-b0a2-92de5ade9808", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/metrics", "url": "https://goharbor.io/docs/2.12.0/administration/metrics/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I harbor core metrics in harbor-2-12-0?\n\nAssistant: To harbor core metrics in harbor-2-12-0, here's what you do:\nThe following are metrics pulled from the Harbor core pod and are available at `<harbor_instance>:<metrics_port>/<metrics_path>?comp=core`.\n\n| Name | Description | Labels (Values) | Metric type |\n| :-- | :-- | :-- | :-- |\n| `harbor_core_http_inflight_requests` | The total number of requests | operation (values from `operationId` in <br>[Harbor API](https://github.com/goharbor/harbor/blob/main/api/v2.0/swagger.yaml). Some legacy endpoints do not have an `operationId`, so the label value is `unknown`) | gauge |\n| `harbor_core_http_request_duration_seconds` | The time duration of the requests | method ( `GET`, `POST`, `HEAD`, `PATCH`, `PUT`), operation (values from `operationId` in <br>[Harbor API](https://github.com/goharbor/harbor/blob/main/api/v2.0/swagger.yaml). Some legacy endpoints do not have an `operationId`, so the label value is `unknown`), quantile | summary |\n| `harbor_core_http_request_total` | The total number of requests | method ( `GET`, `POST`, `HEAD`, `PATCH`, `PUT`), operation (values from `operationId` in <br>[Harbor API](https://github.com/goharbor/harbor/blob/main/api/v2.0/swagger.yaml). Some legacy endpoints do not have an `operationId`, so the label value is `unknown`) | counter |\n\nMetrics exposed by Harbor Core.\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/metrics", "title": "Access Metrics", "description": "Harbor exposes some key metrics needed for operators and administrators to monitor how your Harbor instance is running in real time. Observability is a key feature for operating a service in production and using this data you can identify abnormal statuses and make informed decisions to fix issues when an error occurs. Harbor exposes metrics using the Prometheus data model so you can easily start scraping your Harbor instance’s metrics using Prometheus.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:10:47", "type": "section_detail", "page_metadata": {"ogLocale": "en_US", "og:url": "https://goharbor.io/docs/2.12.0/administration/metrics/", "og:image:type": "image/png", "ogSiteName": "Harbor", "og:image:alt": "Harbor &ndash; Access Metrics project logo", "title": "\n      \nHarbor docs | Access Metrics\n\n    ", "og:title": "Harbor &ndash; Access Metrics", "favicon": "https://goharbor.io/favicon.svg", "og:locale": "en_US", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:site_name": "Harbor", "generator": "Hugo 0.74.0", "twitter:site": "@project_harbor", "twitter:card": "summary", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "twitter:creator": "@project_harbor", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/metrics/", "ogTitle": "Harbor &ndash; Access Metrics", "og:type": ["documentation", "article"], "scrapeId": "8f533303-9233-45fd-b0a2-92de5ade9808", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/metrics", "url": "https://goharbor.io/docs/2.12.0/administration/metrics/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I registry metrics in harbor-2-12-0?\n\nAssistant: To registry metrics in harbor-2-12-0, here's what you do:\nThe following are metrics pulled from the Distribution/Distribution and are available at `<harbor_instance>:<metrics_port>/<metrics_path>?comp=registry`.\n\n| Name | Description | Labels (Values) | Metric type |\n| :-- | :-- | :-- | :-- |\n| `registry_http_in_flight_requests` | The in-flight HTTP requests | handler | gauge |\n| `registry_http_request_duration_seconds_bucket` `registry_http_request_duration_seconds_sum` `registry_http_request_duration_seconds_count` | The HTTP request latencies in seconds | handler, method ( `GET`, `POST`, `HEAD`, `PATCH`, `PUT`), le | histogram |\n| `registry_http_request_size_bytes_bucket registry_http_request_size_bytes_sum registry_http_request_size_bytes_count` | The HTTP request sizes in bytes | handler, le | histogram |\n| `registry_http_requests_total` | Total number of HTTP requests made | code,handler,method,le | counter |\n| `registry_http_response_size_bytes_bucket` `registry_http_response_size_bytes_sum` `registry_http_response_size_bytes_count` | The HTTP response sizes in bytes | handler,le | histogram |\n| `registry_storage_action_seconds_bucket` `registry_storage_action_seconds_sum` `registry_storage_action_seconds_count` | The number of seconds that the storage action takes | action,driver,le | histogram |\n| `registry_storage_cache_total` | The number of cache request received | type | gauge |\n\nMetrics exposed by Harbor Core.\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/metrics", "title": "Access Metrics", "description": "Harbor exposes some key metrics needed for operators and administrators to monitor how your Harbor instance is running in real time. Observability is a key feature for operating a service in production and using this data you can identify abnormal statuses and make informed decisions to fix issues when an error occurs. Harbor exposes metrics using the Prometheus data model so you can easily start scraping your Harbor instance’s metrics using Prometheus.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:10:47", "type": "section_detail", "page_metadata": {"ogLocale": "en_US", "og:url": "https://goharbor.io/docs/2.12.0/administration/metrics/", "og:image:type": "image/png", "ogSiteName": "Harbor", "og:image:alt": "Harbor &ndash; Access Metrics project logo", "title": "\n      \nHarbor docs | Access Metrics\n\n    ", "og:title": "Harbor &ndash; Access Metrics", "favicon": "https://goharbor.io/favicon.svg", "og:locale": "en_US", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:site_name": "Harbor", "generator": "Hugo 0.74.0", "twitter:site": "@project_harbor", "twitter:card": "summary", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "twitter:creator": "@project_harbor", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/metrics/", "ogTitle": "Harbor &ndash; Access Metrics", "og:type": ["documentation", "article"], "scrapeId": "8f533303-9233-45fd-b0a2-92de5ade9808", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/metrics", "url": "https://goharbor.io/docs/2.12.0/administration/metrics/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I harbor jobservice metrics in harbor-2-12-0?\n\nAssistant: To harbor jobservice metrics in harbor-2-12-0, here's what you do:\nThe following are metrics pulled from the Harbor Jobservice and are available at `<harbor_instance>:<metrics_port>/<metrics_path>?comp=jobservice`.\n\n| Name | Description | Labels (Values) | Metric type |\n| :-- | :-- | :-- | :-- |\n| `harbor_jobservice_info` | The information of Jobservice | instance, job, node, pool, workers | gauge |\n| `harbor_jobservice_task_total` | The number of processed tasks per job type | instance, job, status, type | counter |\n| `harbor_jobservice_task_process_time_seconds` | The duration of the task processing time | instance, job, quantile, status, type | summary |\n\nMetrics exposed by Harbor Jobservice.\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/metrics", "title": "Access Metrics", "description": "Harbor exposes some key metrics needed for operators and administrators to monitor how your Harbor instance is running in real time. Observability is a key feature for operating a service in production and using this data you can identify abnormal statuses and make informed decisions to fix issues when an error occurs. Harbor exposes metrics using the Prometheus data model so you can easily start scraping your Harbor instance’s metrics using Prometheus.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:10:47", "type": "section_detail", "page_metadata": {"ogLocale": "en_US", "og:url": "https://goharbor.io/docs/2.12.0/administration/metrics/", "og:image:type": "image/png", "ogSiteName": "Harbor", "og:image:alt": "Harbor &ndash; Access Metrics project logo", "title": "\n      \nHarbor docs | Access Metrics\n\n    ", "og:title": "Harbor &ndash; Access Metrics", "favicon": "https://goharbor.io/favicon.svg", "og:locale": "en_US", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:site_name": "Harbor", "generator": "Hugo 0.74.0", "twitter:site": "@project_harbor", "twitter:card": "summary", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "twitter:creator": "@project_harbor", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/metrics/", "ogTitle": "Harbor &ndash; Access Metrics", "og:type": ["documentation", "article"], "scrapeId": "8f533303-9233-45fd-b0a2-92de5ade9808", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/metrics", "url": "https://goharbor.io/docs/2.12.0/administration/metrics/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I scraping metrics with prometheus in harbor-2-12-0?\n\nAssistant: To scraping metrics with prometheus in harbor-2-12-0, here's what you do:\nTo begin accessing your Harbor instance’s metrics with Prometheus,\n\n1. Enable exposing metrics in your `harbor.yml` [configuration file](https://goharbor.io/docs/2.12.0/install-config/configure-yml-file/) and set the port and path for metrics to be exposed on. Also see more about [reconfiguring your Harbor instance](https://goharbor.io/docs/2.12.0/install-config/reconfigure-manage-lifecycle/).\n\n2. Set up a Prometheus server, see the [Prometheus documentation](https://prometheus.io/docs/prometheus/latest/installation/) for more information on installing.\n\n3. Configure your Prometheus config file to scrape Harbor metrics exposed at your configured port and path. Below is an example scrape config, see the Prometheus documentation for all available [scrape configuration options](https://prometheus.io/docs/prometheus/latest/configuration/configuration/#scrape_config).\n\n```fallback\n     scrape_configs:\n\n    - job_name: 'harbor-exporter'\n      scrape_interval: 20s\n      static_configs:\n        # Scrape metrics from the Harbor exporter component\n        - targets: ['<harbor_instance>:<metrics_port>']\n\n    - job_name: 'harbor-core'\n      scrape_interval: 20s\n      params:\n        # Scrape metrics from the Harbor core component\n        comp: ['core']\n      static_configs:\n        - targets: ['<harbor_instance>:<metrics_port>']\n\n    - job_name: 'harbor-registry'\n      scrape_interval: 20s\n      params:\n        # Scrape metrics from the Harbor registry component\n        comp: ['registry']\n      static_configs:\n        - targets: ['<harbor_instance>:<metrics_port>']\n\n    - job_name: 'harbor-jobservice'\n      scrape_interval: 20s\n      params:\n        # Scrape metrics from the Harbor jobservice component\n        comp: ['jobservice']\n      static_configs:\n        - targets: ['<harbor_instance>:<metrics_port>']\n\n```\n\n4. Once you have configured your Prometheus server to collect your Harbor metrics, you can use [Grafana](https://grafana.com/docs/) to visualize your data. An [example Grafana dashboard](https://github.com/goharbor/harbor/blob/main/contrib/grafana-dashboard/metrics-example.json) is available in the Harbor repo to help you get started visualizing Harbor metrics.\n\n### From a Kubernetes cluster\n\nYou can also use Prometheus to collect metrics from a Harbor instance deployed in your Kubernetes cluster. You should already have [installed Prometheus](https://github.com/prometheus-community/helm-charts) and set up to pull metrics from your cluster.\n\n1. Create a ServiceMonitor in Prometheus for Harbor.\n\n```fallback\napiVersion: monitoring.coreos.com/v1\nkind: ServiceMonitor\nmetadata:\n     name: harbor\n     labels:\n       app: harbor\nspec:\n     selector:\n       matchLabels:\n         app: harbor\n     endpoints:\n  - port: metrics\n```\n\n2. Enable Harbor to expose metrics by updating your harbor-helm `values.yaml` file and set `metrics.enabled` to `true`. You can also edit the port and path the metrics are exposed on by updating the available harbor-helm chart [configuration options for metrics](https://github.com/goharbor/harbor-helm#configuration).\n\nPrometheus should now show your Harbor instance’s metrics..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/metrics", "title": "Access Metrics", "description": "Harbor exposes some key metrics needed for operators and administrators to monitor how your Harbor instance is running in real time. Observability is a key feature for operating a service in production and using this data you can identify abnormal statuses and make informed decisions to fix issues when an error occurs. Harbor exposes metrics using the Prometheus data model so you can easily start scraping your Harbor instance’s metrics using Prometheus.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:10:47", "type": "section_detail", "page_metadata": {"ogLocale": "en_US", "og:url": "https://goharbor.io/docs/2.12.0/administration/metrics/", "og:image:type": "image/png", "ogSiteName": "Harbor", "og:image:alt": "Harbor &ndash; Access Metrics project logo", "title": "\n      \nHarbor docs | Access Metrics\n\n    ", "og:title": "Harbor &ndash; Access Metrics", "favicon": "https://goharbor.io/favicon.svg", "og:locale": "en_US", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:site_name": "Harbor", "generator": "Hugo 0.74.0", "twitter:site": "@project_harbor", "twitter:card": "summary", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "twitter:creator": "@project_harbor", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/metrics/", "ogTitle": "Harbor &ndash; Access Metrics", "og:type": ["documentation", "article"], "scrapeId": "8f533303-9233-45fd-b0a2-92de5ade9808", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/metrics", "url": "https://goharbor.io/docs/2.12.0/administration/metrics/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you give me some code examples for Access Metrics in harbor-2-12-0?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Prometheus Scrape Config Example**:\n\n```yaml\n     scrape_configs:\n\n    - job_name: 'harbor-exporter'\n      scrape_interval: 20s\n      static_configs:\n        # Scrape metrics from the Harbor exporter component\n        - targets: ['<harbor_instance>:<metrics_port>']\n\n    - job_name: 'harbor-core'\n      scrape_interval: 20s\n      params:\n        # Scrape metrics from the Harbor core component\n        comp: ['core']\n      static_configs:\n        - targets: ['<harbor_instance>:<metrics_port>']\n\n    - job_name: 'harbor-registry'\n      scrape_interval: 20s\n      params:\n        # Scrape metrics from the Harbor registry component\n        comp: ['registry']\n      static_configs:\n        - targets: ['<harbor_instance>:<metrics_port>']\n\n    - job_name: 'harbor-jobservice'\n      scrape_interval: 20s\n      params:\n        # Scrape metrics from the Harbor jobservice component\n        comp: ['jobservice']\n      static_configs:\n        - targets: ['<harbor_instance>:<metrics_port>']\n\n```\n\nThis snippet shows you how to prometheus scrape config example, which is an important aspect of access metrics.\n\n", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/metrics", "title": "Access Metrics", "description": "Harbor exposes some key metrics needed for operators and administrators to monitor how your Harbor instance is running in real time. Observability is a key feature for operating a service in production and using this data you can identify abnormal statuses and make informed decisions to fix issues when an error occurs. Harbor exposes metrics using the Prometheus data model so you can easily start scraping your Harbor instance’s metrics using Prometheus.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:10:47", "type": "code_examples", "page_metadata": {"ogLocale": "en_US", "og:url": "https://goharbor.io/docs/2.12.0/administration/metrics/", "og:image:type": "image/png", "ogSiteName": "Harbor", "og:image:alt": "Harbor &ndash; Access Metrics project logo", "title": "\n      \nHarbor docs | Access Metrics\n\n    ", "og:title": "Harbor &ndash; Access Metrics", "favicon": "https://goharbor.io/favicon.svg", "og:locale": "en_US", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:site_name": "Harbor", "generator": "Hugo 0.74.0", "twitter:site": "@project_harbor", "twitter:card": "summary", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "twitter:creator": "@project_harbor", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/metrics/", "ogTitle": "Harbor &ndash; Access Metrics", "og:type": ["documentation", "article"], "scrapeId": "8f533303-9233-45fd-b0a2-92de5ade9808", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/metrics", "url": "https://goharbor.io/docs/2.12.0/administration/metrics/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: What are some tips for using Access Metrics in harbor-2-12-0 effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nEnable exposing metrics in your harbor.yml configuration file and set the port and path for metrics to be exposed on.\n\nSet up a Prometheus server to scrape Harbor metrics.\n\nUse Grafana to visualize your data after configuring Prometheus to collect Harbor metrics.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/metrics", "title": "Access Metrics", "description": "Harbor exposes some key metrics needed for operators and administrators to monitor how your Harbor instance is running in real time. Observability is a key feature for operating a service in production and using this data you can identify abnormal statuses and make informed decisions to fix issues when an error occurs. Harbor exposes metrics using the Prometheus data model so you can easily start scraping your Harbor instance’s metrics using Prometheus.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:10:47", "type": "best_practices", "page_metadata": {"ogLocale": "en_US", "og:url": "https://goharbor.io/docs/2.12.0/administration/metrics/", "og:image:type": "image/png", "ogSiteName": "Harbor", "og:image:alt": "Harbor &ndash; Access Metrics project logo", "title": "\n      \nHarbor docs | Access Metrics\n\n    ", "og:title": "Harbor &ndash; Access Metrics", "favicon": "https://goharbor.io/favicon.svg", "og:locale": "en_US", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:site_name": "Harbor", "generator": "Hugo 0.74.0", "twitter:site": "@project_harbor", "twitter:card": "summary", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "twitter:creator": "@project_harbor", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/metrics/", "ogTitle": "Harbor &ndash; Access Metrics", "og:type": ["documentation", "article"], "scrapeId": "8f533303-9233-45fd-b0a2-92de5ade9808", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/metrics", "url": "https://goharbor.io/docs/2.12.0/administration/metrics/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you explain what Distributed Tracing is in harbor-2-12-0?\n\nAssistant: Sure, I'd be happy to explain Distributed Tracing in harbor-2-12-0.\n\n# Distributed Tracing\n\nThis page covers the distributed tracing feature in Harbor, detailing how it enhances observability and troubleshooting in production environments.Here's a quick rundown of what this is about:\n\n## Observability and Distributed Tracing\n\nObservability is a key feature for operating a service in production and using this data you can identify abnormal statuses and make informed decisions to fix issues when an error occurs. The distributed tracing is key element of observability in modern application. Harbor can provide distributed tracing data for operators and administrator to know the current running status and to help troubleshooting. Harbor expose tracing data using the OpenTelemetry sdk, you can easily export traces via Otel protocol which can consumed by OpenTelemetry Collector then expose to almost the on-prem or cloud trace backend. Because of the popularity Jaeger, Harbor also can expose tracing data to Jaeger backend directly.\n\n## Enabling Distributed Tracing\n\nIn harbor v2.4 and later you are able to enable distributed tracing in you Harbor configuration file. But we only support one exporter at a time (you can not set bosh or none of them if you enabled tracing). You can set otel as exporter and leveraging OpenTelemetry Collector to retransmit to multiple backend if you want to send data to multiple exporter. And similarly, Jaeger exporter support agent mode and endpoint mode, but only one mode can enabled at a time.\n\n## Exposed Data\n\nTracing data are exposed by several Harbor components: core, jobservice, registry. The following sections list the available Harbor trace data.\n\n| Data | Component | Example |\n| :-- | :-- | :-- |\n| Received HTTP Request | Core | Every HTTP request (like operation on harbor UI, push image, etc.) |\n| Client Sent HTTP Request | Core | core access other services via HTTP (like health check, proxy to chartmuseum, call job service API, etc.) |\n| Request ID | Core | Every http tracing will added a X-Request-ID, which will help to find the log |\n| Database Transaction | Core | Every Operation that triggered DB transaction (like create project, push image to harbor, etc.) |\n| Received HTTP Request | Jobservice | Every HTTP request (like health check, call from core, etc.) |\n| Client Sent HTTP Request | Jobservice | jobservice access other services via HTTP (like replication job calling core API to push image, GC job calling registryctl API, etc.) |\n| backend jobs | Jobservice | Any job ran by jobservice |\n| Received HTTP Request | Registryctl | Every HTTP request (like health check from core, call from jobservice, etc.)\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/distributed-tracing", "title": "Distributed Tracing", "description": "This page covers the distributed tracing feature in Harbor, detailing how it enhances observability and troubleshooting in production environments.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:10:59", "type": "overview", "page_metadata": {"ogTitle": "Harbor &ndash; Distributed Tracing", "og:title": "Harbor &ndash; Distributed Tracing", "title": "\n      \nHarbor docs | Distributed Tracing\n\n    ", "generator": "Hugo 0.74.0", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/distributed-tracing/", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:type": ["documentation", "article"], "og:image:type": "image/png", "twitter:creator": "@project_harbor", "favicon": "https://goharbor.io/favicon.svg", "ogSiteName": "Harbor", "og:locale": "en_US", "og:site_name": "Harbor", "ogLocale": "en_US", "og:url": "https://goharbor.io/docs/2.12.0/administration/distributed-tracing/", "og:image:alt": "Harbor &ndash; Distributed Tracing project logo", "twitter:card": "summary", "twitter:site": "@project_harbor", "scrapeId": "3c2c76e0-b6f6-4d9d-af48-e595e8621b89", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/distributed-tracing", "url": "https://goharbor.io/docs/2.12.0/administration/distributed-tracing/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I observability and distributed tracing in harbor-2-12-0?\n\nAssistant: To observability and distributed tracing in harbor-2-12-0, here's what you do:\nObservability is a key feature for operating a service in production and using this data you can identify abnormal statuses and make informed decisions to fix issues when an error occurs. The distributed tracing is key element of observability in modern application. Harbor can provide distributed tracing data for operators and administrator to know the current running status and to help troubleshooting. Harbor expose tracing data using the OpenTelemetry sdk, you can easily export traces via Otel protocol which can consumed by OpenTelemetry Collector then expose to almost the on-prem or cloud trace backend. Because of the popularity Jaeger, Harbor also can expose tracing data to Jaeger backend directly..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/distributed-tracing", "title": "Distributed Tracing", "description": "This page covers the distributed tracing feature in Harbor, detailing how it enhances observability and troubleshooting in production environments.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:10:59", "type": "section_detail", "page_metadata": {"ogTitle": "Harbor &ndash; Distributed Tracing", "og:title": "Harbor &ndash; Distributed Tracing", "title": "\n      \nHarbor docs | Distributed Tracing\n\n    ", "generator": "Hugo 0.74.0", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/distributed-tracing/", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:type": ["documentation", "article"], "og:image:type": "image/png", "twitter:creator": "@project_harbor", "favicon": "https://goharbor.io/favicon.svg", "ogSiteName": "Harbor", "og:locale": "en_US", "og:site_name": "Harbor", "ogLocale": "en_US", "og:url": "https://goharbor.io/docs/2.12.0/administration/distributed-tracing/", "og:image:alt": "Harbor &ndash; Distributed Tracing project logo", "twitter:card": "summary", "twitter:site": "@project_harbor", "scrapeId": "3c2c76e0-b6f6-4d9d-af48-e595e8621b89", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/distributed-tracing", "url": "https://goharbor.io/docs/2.12.0/administration/distributed-tracing/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I enabling distributed tracing in harbor-2-12-0?\n\nAssistant: To enabling distributed tracing in harbor-2-12-0, here's what you do:\nIn harbor v2.4 and later you are able to enable distributed tracing in you Harbor configuration file. But we only support one exporter at a time (you can not set bosh or none of them if you enabled tracing). You can set otel as exporter and leveraging OpenTelemetry Collector to retransmit to multiple backend if you want to send data to multiple exporter. And similarly, Jaeger exporter support agent mode and endpoint mode, but only one mode can enabled at a time..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/distributed-tracing", "title": "Distributed Tracing", "description": "This page covers the distributed tracing feature in Harbor, detailing how it enhances observability and troubleshooting in production environments.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:10:59", "type": "section_detail", "page_metadata": {"ogTitle": "Harbor &ndash; Distributed Tracing", "og:title": "Harbor &ndash; Distributed Tracing", "title": "\n      \nHarbor docs | Distributed Tracing\n\n    ", "generator": "Hugo 0.74.0", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/distributed-tracing/", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:type": ["documentation", "article"], "og:image:type": "image/png", "twitter:creator": "@project_harbor", "favicon": "https://goharbor.io/favicon.svg", "ogSiteName": "Harbor", "og:locale": "en_US", "og:site_name": "Harbor", "ogLocale": "en_US", "og:url": "https://goharbor.io/docs/2.12.0/administration/distributed-tracing/", "og:image:alt": "Harbor &ndash; Distributed Tracing project logo", "twitter:card": "summary", "twitter:site": "@project_harbor", "scrapeId": "3c2c76e0-b6f6-4d9d-af48-e595e8621b89", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/distributed-tracing", "url": "https://goharbor.io/docs/2.12.0/administration/distributed-tracing/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I exposed data in harbor-2-12-0?\n\nAssistant: To exposed data in harbor-2-12-0, here's what you do:\nTracing data are exposed by several Harbor components: core, jobservice, registry. The following sections list the available Harbor trace data.\n\n| Data | Component | Example |\n| :-- | :-- | :-- |\n| Received HTTP Request | Core | Every HTTP request (like operation on harbor UI, push image, etc.) |\n| Client Sent HTTP Request | Core | core access other services via HTTP (like health check, proxy to chartmuseum, call job service API, etc.) |\n| Request ID | Core | Every http tracing will added a X-Request-ID, which will help to find the log |\n| Database Transaction | Core | Every Operation that triggered DB transaction (like create project, push image to harbor, etc.) |\n| Received HTTP Request | Jobservice | Every HTTP request (like health check, call from core, etc.) |\n| Client Sent HTTP Request | Jobservice | jobservice access other services via HTTP (like replication job calling core API to push image, GC job calling registryctl API, etc.) |\n| backend jobs | Jobservice | Any job ran by jobservice |\n| Received HTTP Request | Registryctl | Every HTTP request (like health check from core, call from jobservice, etc.).\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/distributed-tracing", "title": "Distributed Tracing", "description": "This page covers the distributed tracing feature in Harbor, detailing how it enhances observability and troubleshooting in production environments.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:10:59", "type": "section_detail", "page_metadata": {"ogTitle": "Harbor &ndash; Distributed Tracing", "og:title": "Harbor &ndash; Distributed Tracing", "title": "\n      \nHarbor docs | Distributed Tracing\n\n    ", "generator": "Hugo 0.74.0", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/distributed-tracing/", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:type": ["documentation", "article"], "og:image:type": "image/png", "twitter:creator": "@project_harbor", "favicon": "https://goharbor.io/favicon.svg", "ogSiteName": "Harbor", "og:locale": "en_US", "og:site_name": "Harbor", "ogLocale": "en_US", "og:url": "https://goharbor.io/docs/2.12.0/administration/distributed-tracing/", "og:image:alt": "Harbor &ndash; Distributed Tracing project logo", "twitter:card": "summary", "twitter:site": "@project_harbor", "scrapeId": "3c2c76e0-b6f6-4d9d-af48-e595e8621b89", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/distributed-tracing", "url": "https://goharbor.io/docs/2.12.0/administration/distributed-tracing/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: What are some tips for using Distributed Tracing in harbor-2-12-0 effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nIn Harbor v2.4 and later, enable distributed tracing in the configuration file.\n\nOnly one exporter can be set at a time; you cannot set bosh or none if tracing is enabled.\n\nUse OpenTelemetry Collector to retransmit data to multiple backends if needed.\n\nJaeger exporter supports agent mode and endpoint mode, but only one mode can be enabled at a time.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/distributed-tracing", "title": "Distributed Tracing", "description": "This page covers the distributed tracing feature in Harbor, detailing how it enhances observability and troubleshooting in production environments.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:10:59", "type": "best_practices", "page_metadata": {"ogTitle": "Harbor &ndash; Distributed Tracing", "og:title": "Harbor &ndash; Distributed Tracing", "title": "\n      \nHarbor docs | Distributed Tracing\n\n    ", "generator": "Hugo 0.74.0", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/distributed-tracing/", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:type": ["documentation", "article"], "og:image:type": "image/png", "twitter:creator": "@project_harbor", "favicon": "https://goharbor.io/favicon.svg", "ogSiteName": "Harbor", "og:locale": "en_US", "og:site_name": "Harbor", "ogLocale": "en_US", "og:url": "https://goharbor.io/docs/2.12.0/administration/distributed-tracing/", "og:image:alt": "Harbor &ndash; Distributed Tracing project logo", "twitter:card": "summary", "twitter:site": "@project_harbor", "scrapeId": "3c2c76e0-b6f6-4d9d-af48-e595e8621b89", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/distributed-tracing", "url": "https://goharbor.io/docs/2.12.0/administration/distributed-tracing/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you explain what Create Project Robot Accounts is in harbor-2-12-0?\n\nAssistant: Sure, I'd be happy to explain Create Project Robot Accounts in harbor-2-12-0.\n\n# Create Project Robot Accounts\n\nThis page covers how to create and manage project robot accounts in Harbor, including viewing, adding, editing, and refreshing robot account secrets.Here's a quick rundown of what this is about:\n\n## View Project Robot Accounts\n\n1. Log in to the Harbor interface with an account that has at least project administrator privileges.\n2. Go to **Projects**, select a project, and select **Robot Accounts**.\n\nThis page lists all available project robot accounts for a project. The table lists the following information for each robot account,\n\n- The name of the robot account. This is derived from robot account prefix configured for your Harbor instance, the project name, and the name assigned to the robot account when it was created. A robot account name follows the format `<prefix><project_name>+<account_name>`. If you use the search function on this page, you only need to search for the account name without the prefix.\n- The enabled status shows if an account is enabled or deactivated.\n- Click the **Permission(s)** dropdown to view the permissions granted to the robot account.\n- The created time shows when the robot account was created.\n- The time until the project robot account expires. This is calculated based on the created time and the expiration time set when creating the project robot account.\n- The description of the project robot account.\n\nYou are only able to see project robot accounts from this page. Harbor administrators can also see system robot account information on the [System Robot Account](https://goharbor.io/docs/2.12.0/administration/robot-accounts/) page.\n\n## Add a Robot Account\n\n1. Log in to the Harbor interface with an account that has at least project administrator privileges.\n\n2. Go to **Projects**, select a project, and select **Robot Accounts**.\n\n3. Click **New Robot Account**.\n\n4. Enter a name and an optional description for this robot account.\n\n5. Set expiration time for this robot account, you can also select checkbox **Never Expired** if you want to create a never expiring robot account.\n\n6. Go to the next step to grant permissions to the robot account. You can refer to the [**Permission References**](https://goharbor.io/docs/2.12.0/administration/robot-accounts/#permission-references) to assign a combination of the project permissions to this robot account. You can use the **Select All** and **Unselect All** buttons to quickly add or remove all permissions from a robot account.\n\nThe **Push Repository** permission must be assigned with the **Pull Repository** permission. You are not able to assign the Push Repository permission by itself.\n\n7. Click **FINISH**.\n\n8. In the confirmation window, click **Export to File** to download the access token as a JSON file, or click the clipboard icon to copy its contents to the clipboard.\n\nHarbor does not store robot secret tokens, so you must either download the secret or copy and paste its contents into a text file. There is no way to get the secret from Harbor after you have created the robot account, however you are able refresh the secret after the robot account is created.\n\n## Edit, Deactivate, or Delete a Project Robot Account\n\nYou are able to edit, deactivate, or delete a project robot account.\n\n1. From a project’s **Robot Account** page, select the checkbox next to the robot account you are updating.\n2. Select **Action** and then **Edit**, **Deactivate**, or **Delete**.\n\n## Refresh Project Robot Account Secret\n\nYou can refresh a robot account’s secret after its created in the event that you need a new one.\n\n1. From the administrator **Robot Account** page, select the checkbox next to the robot account you are updating.\n\n2. Select **Action** and then **Refresh Secret**.\n\n3. By default Harbor will generate a new secret randomly, or you can choose to enable manually reseting the secret and entering the **New Secret** then **Confirm Secret**. Optionally, you can view the secret by clicking the eye icon.\n\n4. Click **Refresh**. If you created a secret randomly, download the secret JSON file or copy and paste its contents.\n\n## Authenticate with a Project Robot Account\n\nTo use a robot account in an automated process, for example, use `docker login` and provide the credentials of the robot account.\n\n```fallback\ndocker login <harbor_address>\nUsername: <prefix><project_name>+<account_name>\nPassword: <secret>\n```\n\n## Legacy Robot Accounts\n\nRobot accounts created before Harbor v2.2 are considered legacy robot accounts and will appear with a **Legacy** label in the Harbor v2.2 and later interface.\n\nLegacy robot accounts functionality is still available in Harbor 2.2, but it will be removed in a future version of Harbor. Its strongly recommended that you recreate your legacy robot accounts as either a project or system robot accounts after upgrading to Harbor v2.2. Note that there is currently no way to migrate legacy robot accounts into the new format, you must create a new account.\n\nLegacy robot accounts functionality:\n- You are able to perform operations by using the Docker and Helm CLIs. A Legacy robot account can’t log into the Harbor interface.\n- You can’t edit a legacy robot account. You are only able to deactivate or delete legacy robot accounts.\n- Available legacy robot accounts permissions are limited to pushing and pulling artifact, and pushing or pulling a Helm Chart.\n- Legacy robot accounts use a JWT for authentication. You are not able to refresh or retrieve a legacy robot account JWT authentication token.\n- Legacy robot accounts names use the prefix `robot$`, for example `robot$<account_name>`.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/create-robot-accounts", "title": "Create Project Robot Accounts", "description": "This page covers how to create and manage project robot accounts in Harbor, including viewing, adding, editing, and refreshing robot account secrets.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:11:17", "type": "overview", "page_metadata": {"title": "\n      \nHarbor docs | Create Project Robot Accounts\n\n    ", "ogLocale": "en_US", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/create-robot-accounts/", "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/create-robot-accounts/", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:locale": "en_US", "og:image:type": "image/png", "twitter:creator": "@project_harbor", "twitter:site": "@project_harbor", "generator": "Hugo 0.74.0", "twitter:card": "summary", "favicon": "https://goharbor.io/favicon.svg", "og:type": ["documentation", "article"], "og:site_name": "Harbor", "og:title": "Harbor &ndash; Create Project Robot Accounts", "og:image:alt": "Harbor &ndash; Create Project Robot Accounts project logo", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogSiteName": "Harbor", "ogTitle": "Harbor &ndash; Create Project Robot Accounts", "scrapeId": "ef350dcf-2be4-49db-8dd9-c3e68bc6eaf7", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/create-robot-accounts", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/create-robot-accounts/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I view project robot accounts in harbor-2-12-0?\n\nAssistant: To view project robot accounts in harbor-2-12-0, here's what you do:\n1. Log in to the Harbor interface with an account that has at least project administrator privileges.\n2. Go to **Projects**, select a project, and select **Robot Accounts**.\n\nThis page lists all available project robot accounts for a project. The table lists the following information for each robot account,\n\n- The name of the robot account. This is derived from robot account prefix configured for your Harbor instance, the project name, and the name assigned to the robot account when it was created. A robot account name follows the format `<prefix><project_name>+<account_name>`. If you use the search function on this page, you only need to search for the account name without the prefix.\n- The enabled status shows if an account is enabled or deactivated.\n- Click the **Permission(s)** dropdown to view the permissions granted to the robot account.\n- The created time shows when the robot account was created.\n- The time until the project robot account expires. This is calculated based on the created time and the expiration time set when creating the project robot account.\n- The description of the project robot account.\n\nYou are only able to see project robot accounts from this page. Harbor administrators can also see system robot account information on the [System Robot Account](https://goharbor.io/docs/2.12.0/administration/robot-accounts/) page..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/create-robot-accounts", "title": "Create Project Robot Accounts", "description": "This page covers how to create and manage project robot accounts in Harbor, including viewing, adding, editing, and refreshing robot account secrets.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:11:17", "type": "section_detail", "page_metadata": {"title": "\n      \nHarbor docs | Create Project Robot Accounts\n\n    ", "ogLocale": "en_US", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/create-robot-accounts/", "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/create-robot-accounts/", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:locale": "en_US", "og:image:type": "image/png", "twitter:creator": "@project_harbor", "twitter:site": "@project_harbor", "generator": "Hugo 0.74.0", "twitter:card": "summary", "favicon": "https://goharbor.io/favicon.svg", "og:type": ["documentation", "article"], "og:site_name": "Harbor", "og:title": "Harbor &ndash; Create Project Robot Accounts", "og:image:alt": "Harbor &ndash; Create Project Robot Accounts project logo", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogSiteName": "Harbor", "ogTitle": "Harbor &ndash; Create Project Robot Accounts", "scrapeId": "ef350dcf-2be4-49db-8dd9-c3e68bc6eaf7", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/create-robot-accounts", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/create-robot-accounts/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I add a robot account in harbor-2-12-0?\n\nAssistant: To add a robot account in harbor-2-12-0, here's what you do:\n1. Log in to the Harbor interface with an account that has at least project administrator privileges.\n\n2. Go to **Projects**, select a project, and select **Robot Accounts**.\n\n3. Click **New Robot Account**.\n\n4. Enter a name and an optional description for this robot account.\n\n5. Set expiration time for this robot account, you can also select checkbox **Never Expired** if you want to create a never expiring robot account.\n\n6. Go to the next step to grant permissions to the robot account. You can refer to the [**Permission References**](https://goharbor.io/docs/2.12.0/administration/robot-accounts/#permission-references) to assign a combination of the project permissions to this robot account. You can use the **Select All** and **Unselect All** buttons to quickly add or remove all permissions from a robot account.\n\nThe **Push Repository** permission must be assigned with the **Pull Repository** permission. You are not able to assign the Push Repository permission by itself.\n\n7. Click **FINISH**.\n\n8. In the confirmation window, click **Export to File** to download the access token as a JSON file, or click the clipboard icon to copy its contents to the clipboard.\n\nHarbor does not store robot secret tokens, so you must either download the secret or copy and paste its contents into a text file. There is no way to get the secret from Harbor after you have created the robot account, however you are able refresh the secret after the robot account is created..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/create-robot-accounts", "title": "Create Project Robot Accounts", "description": "This page covers how to create and manage project robot accounts in Harbor, including viewing, adding, editing, and refreshing robot account secrets.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:11:17", "type": "section_detail", "page_metadata": {"title": "\n      \nHarbor docs | Create Project Robot Accounts\n\n    ", "ogLocale": "en_US", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/create-robot-accounts/", "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/create-robot-accounts/", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:locale": "en_US", "og:image:type": "image/png", "twitter:creator": "@project_harbor", "twitter:site": "@project_harbor", "generator": "Hugo 0.74.0", "twitter:card": "summary", "favicon": "https://goharbor.io/favicon.svg", "og:type": ["documentation", "article"], "og:site_name": "Harbor", "og:title": "Harbor &ndash; Create Project Robot Accounts", "og:image:alt": "Harbor &ndash; Create Project Robot Accounts project logo", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogSiteName": "Harbor", "ogTitle": "Harbor &ndash; Create Project Robot Accounts", "scrapeId": "ef350dcf-2be4-49db-8dd9-c3e68bc6eaf7", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/create-robot-accounts", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/create-robot-accounts/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I edit, deactivate, or delete a project robot account in harbor-2-12-0?\n\nAssistant: To edit, deactivate, or delete a project robot account in harbor-2-12-0, here's what you do:\nYou are able to edit, deactivate, or delete a project robot account.\n\n1. From a project’s **Robot Account** page, select the checkbox next to the robot account you are updating.\n2. Select **Action** and then **Edit**, **Deactivate**, or **Delete**..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/create-robot-accounts", "title": "Create Project Robot Accounts", "description": "This page covers how to create and manage project robot accounts in Harbor, including viewing, adding, editing, and refreshing robot account secrets.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:11:17", "type": "section_detail", "page_metadata": {"title": "\n      \nHarbor docs | Create Project Robot Accounts\n\n    ", "ogLocale": "en_US", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/create-robot-accounts/", "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/create-robot-accounts/", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:locale": "en_US", "og:image:type": "image/png", "twitter:creator": "@project_harbor", "twitter:site": "@project_harbor", "generator": "Hugo 0.74.0", "twitter:card": "summary", "favicon": "https://goharbor.io/favicon.svg", "og:type": ["documentation", "article"], "og:site_name": "Harbor", "og:title": "Harbor &ndash; Create Project Robot Accounts", "og:image:alt": "Harbor &ndash; Create Project Robot Accounts project logo", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogSiteName": "Harbor", "ogTitle": "Harbor &ndash; Create Project Robot Accounts", "scrapeId": "ef350dcf-2be4-49db-8dd9-c3e68bc6eaf7", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/create-robot-accounts", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/create-robot-accounts/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I refresh project robot account secret in harbor-2-12-0?\n\nAssistant: To refresh project robot account secret in harbor-2-12-0, here's what you do:\nYou can refresh a robot account’s secret after its created in the event that you need a new one.\n\n1. From the administrator **Robot Account** page, select the checkbox next to the robot account you are updating.\n\n2. Select **Action** and then **Refresh Secret**.\n\n3. By default Harbor will generate a new secret randomly, or you can choose to enable manually reseting the secret and entering the **New Secret** then **Confirm Secret**. Optionally, you can view the secret by clicking the eye icon.\n\n4. Click **Refresh**. If you created a secret randomly, download the secret JSON file or copy and paste its contents..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/create-robot-accounts", "title": "Create Project Robot Accounts", "description": "This page covers how to create and manage project robot accounts in Harbor, including viewing, adding, editing, and refreshing robot account secrets.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:11:17", "type": "section_detail", "page_metadata": {"title": "\n      \nHarbor docs | Create Project Robot Accounts\n\n    ", "ogLocale": "en_US", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/create-robot-accounts/", "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/create-robot-accounts/", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:locale": "en_US", "og:image:type": "image/png", "twitter:creator": "@project_harbor", "twitter:site": "@project_harbor", "generator": "Hugo 0.74.0", "twitter:card": "summary", "favicon": "https://goharbor.io/favicon.svg", "og:type": ["documentation", "article"], "og:site_name": "Harbor", "og:title": "Harbor &ndash; Create Project Robot Accounts", "og:image:alt": "Harbor &ndash; Create Project Robot Accounts project logo", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogSiteName": "Harbor", "ogTitle": "Harbor &ndash; Create Project Robot Accounts", "scrapeId": "ef350dcf-2be4-49db-8dd9-c3e68bc6eaf7", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/create-robot-accounts", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/create-robot-accounts/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I authenticate with a project robot account in harbor-2-12-0?\n\nAssistant: To authenticate with a project robot account in harbor-2-12-0, here's what you do:\nTo use a robot account in an automated process, for example, use `docker login` and provide the credentials of the robot account.\n\n```fallback\ndocker login <harbor_address>\nUsername: <prefix><project_name>+<account_name>\nPassword: <secret>\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/create-robot-accounts", "title": "Create Project Robot Accounts", "description": "This page covers how to create and manage project robot accounts in Harbor, including viewing, adding, editing, and refreshing robot account secrets.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:11:17", "type": "section_detail", "page_metadata": {"title": "\n      \nHarbor docs | Create Project Robot Accounts\n\n    ", "ogLocale": "en_US", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/create-robot-accounts/", "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/create-robot-accounts/", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:locale": "en_US", "og:image:type": "image/png", "twitter:creator": "@project_harbor", "twitter:site": "@project_harbor", "generator": "Hugo 0.74.0", "twitter:card": "summary", "favicon": "https://goharbor.io/favicon.svg", "og:type": ["documentation", "article"], "og:site_name": "Harbor", "og:title": "Harbor &ndash; Create Project Robot Accounts", "og:image:alt": "Harbor &ndash; Create Project Robot Accounts project logo", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogSiteName": "Harbor", "ogTitle": "Harbor &ndash; Create Project Robot Accounts", "scrapeId": "ef350dcf-2be4-49db-8dd9-c3e68bc6eaf7", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/create-robot-accounts", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/create-robot-accounts/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I legacy robot accounts in harbor-2-12-0?\n\nAssistant: To legacy robot accounts in harbor-2-12-0, here's what you do:\nRobot accounts created before Harbor v2.2 are considered legacy robot accounts and will appear with a **Legacy** label in the Harbor v2.2 and later interface.\n\nLegacy robot accounts functionality is still available in Harbor 2.2, but it will be removed in a future version of Harbor. Its strongly recommended that you recreate your legacy robot accounts as either a project or system robot accounts after upgrading to Harbor v2.2. Note that there is currently no way to migrate legacy robot accounts into the new format, you must create a new account.\n\nLegacy robot accounts functionality:\n- You are able to perform operations by using the Docker and Helm CLIs. A Legacy robot account can’t log into the Harbor interface.\n- You can’t edit a legacy robot account. You are only able to deactivate or delete legacy robot accounts.\n- Available legacy robot accounts permissions are limited to pushing and pulling artifact, and pushing or pulling a Helm Chart.\n- Legacy robot accounts use a JWT for authentication. You are not able to refresh or retrieve a legacy robot account JWT authentication token.\n- Legacy robot accounts names use the prefix `robot$`, for example `robot$<account_name>`..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/create-robot-accounts", "title": "Create Project Robot Accounts", "description": "This page covers how to create and manage project robot accounts in Harbor, including viewing, adding, editing, and refreshing robot account secrets.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:11:17", "type": "section_detail", "page_metadata": {"title": "\n      \nHarbor docs | Create Project Robot Accounts\n\n    ", "ogLocale": "en_US", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/create-robot-accounts/", "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/create-robot-accounts/", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:locale": "en_US", "og:image:type": "image/png", "twitter:creator": "@project_harbor", "twitter:site": "@project_harbor", "generator": "Hugo 0.74.0", "twitter:card": "summary", "favicon": "https://goharbor.io/favicon.svg", "og:type": ["documentation", "article"], "og:site_name": "Harbor", "og:title": "Harbor &ndash; Create Project Robot Accounts", "og:image:alt": "Harbor &ndash; Create Project Robot Accounts project logo", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogSiteName": "Harbor", "ogTitle": "Harbor &ndash; Create Project Robot Accounts", "scrapeId": "ef350dcf-2be4-49db-8dd9-c3e68bc6eaf7", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/create-robot-accounts", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/create-robot-accounts/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you give me some code examples for Create Project Robot Accounts in harbor-2-12-0?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Authenticate with a Project Robot Account**:\n\n```yaml\n```fallback\ndocker login <harbor_address>\nUsername: <prefix><project_name>+<account_name>\nPassword: <secret>\n```\n```\n\nThis snippet shows you how to authenticate with a project robot account, which is an important aspect of create project robot accounts.\n\n", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/create-robot-accounts", "title": "Create Project Robot Accounts", "description": "This page covers how to create and manage project robot accounts in Harbor, including viewing, adding, editing, and refreshing robot account secrets.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:11:17", "type": "code_examples", "page_metadata": {"title": "\n      \nHarbor docs | Create Project Robot Accounts\n\n    ", "ogLocale": "en_US", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/create-robot-accounts/", "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/create-robot-accounts/", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:locale": "en_US", "og:image:type": "image/png", "twitter:creator": "@project_harbor", "twitter:site": "@project_harbor", "generator": "Hugo 0.74.0", "twitter:card": "summary", "favicon": "https://goharbor.io/favicon.svg", "og:type": ["documentation", "article"], "og:site_name": "Harbor", "og:title": "Harbor &ndash; Create Project Robot Accounts", "og:image:alt": "Harbor &ndash; Create Project Robot Accounts project logo", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogSiteName": "Harbor", "ogTitle": "Harbor &ndash; Create Project Robot Accounts", "scrapeId": "ef350dcf-2be4-49db-8dd9-c3e68bc6eaf7", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/create-robot-accounts", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/create-robot-accounts/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: What are some tips for using Create Project Robot Accounts in harbor-2-12-0 effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nThe Push Repository permission must be assigned with the Pull Repository permission; you cannot assign the Push Repository permission by itself.\n\nHarbor does not store robot secret tokens, so ensure to download or copy the secret immediately after creation.\n\nIt is recommended to recreate legacy robot accounts as either project or system robot accounts after upgrading to Harbor v2.2.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/create-robot-accounts", "title": "Create Project Robot Accounts", "description": "This page covers how to create and manage project robot accounts in Harbor, including viewing, adding, editing, and refreshing robot account secrets.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:11:17", "type": "best_practices", "page_metadata": {"title": "\n      \nHarbor docs | Create Project Robot Accounts\n\n    ", "ogLocale": "en_US", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/create-robot-accounts/", "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/create-robot-accounts/", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:locale": "en_US", "og:image:type": "image/png", "twitter:creator": "@project_harbor", "twitter:site": "@project_harbor", "generator": "Hugo 0.74.0", "twitter:card": "summary", "favicon": "https://goharbor.io/favicon.svg", "og:type": ["documentation", "article"], "og:site_name": "Harbor", "og:title": "Harbor &ndash; Create Project Robot Accounts", "og:image:alt": "Harbor &ndash; Create Project Robot Accounts project logo", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogSiteName": "Harbor", "ogTitle": "Harbor &ndash; Create Project Robot Accounts", "scrapeId": "ef350dcf-2be4-49db-8dd9-c3e68bc6eaf7", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/create-robot-accounts", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/create-robot-accounts/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you explain what Create System Robot Accounts is in harbor-2-12-0?\n\nAssistant: Sure, I'd be happy to explain Create System Robot Accounts in harbor-2-12-0.\n\n# Create System Robot Accounts\n\nHarbor incorporates the concept of system-wide robot accounts. An administrator can create a system-wide robot account covering multiple projects. System robot accounts are used to create non-user-scoped credentials to perform operations and API calls across multiple projects.Here's a quick rundown of what this is about:\n\n## View System Robot Accounts\n\n1. Log into your Harbor instance as an administrator.\n2. In the sidebar select **Robot Accounts** in the **Administration section**.\n\n![System robot account page](https://goharbor.io/docs/2.12.0/img/robot-account/system-robot-account-page.png)\n\nThis page contains the lists of all existing system robot accounts in your Harbor instance. The table contains the following information for each system robot account:\n\n- The name of a system account. This is derived from robot account prefix configured for your Harbor instance and the name assigned to the account when it was created. A robot account name follows the format `<prefix><account_name>`. If you use the search function on this page, you only need to search for the account name without the prefix.\n\n- Enabled status indicates whether an account is active or deactivated.\n\n- The count of system permissions an account is assigned to. To see a full set of the assigned system permissions, click on the **PERMISSIONS** link.\n\n![View all the system permissions](https://goharbor.io/docs/2.12.0/img/robot-account/view-system-permissions.png)\n\n- The number of projects an account is associated with. Click on the **PROJECT(S)** link to see a full list of projects associated with an account.\n\n![View list of all projects associated with a system robot account](https://goharbor.io/docs/2.12.0/img/list-robot-account-projects.png)\n\n- The created time shows when the robot account was created.\n\n- The account expiration time. Calculated based on the created time and the expiration time set when creating the robot account.\n\n- The manually added description for the system robot account.\n\n## Add a System Robot Account\n\n01. Log in to the Harbor interface, with system administrator privileges.\n\n02. Go to **Administration**, select a project, and select **Robot Accounts**.\n\n03. Click **New Robot Account**.\n\n![Create system robot account window](https://goharbor.io/docs/2.12.0/img/robot-account/create-system-robot-account-step1.png)\n\n04. Enter a name and an optional description for this robot account.\n\n05. Set Expiration time for this robot account. By default the system configured expiration time is used. You can also select **Never Expired** from the dropdown if you want to create a never expiring robot account.\n\n06. Select the system permissions for this robot account.\n\n07. Select **Cover all projects** if you want to use this system robot account across all projects. Using this option means that this system robot account will be able to access all existing and future projects in your Harbor instance. You can select which permission to grant to the robot account.\n\n![Cover all projects and select permissions](https://goharbor.io/docs/2.12.0/img/robot-account/cover-all-project-and-select-permissions.png)\n\n08. If you want this robot account to only cover certain projects or be granted certain permissions, use the project table to select the projects and permissions you want to assign to the system robot account. This table shows the each project name, the project creation time, and a dropdown list of permissions to assign the system robot account for that project.\n\n![Project table for assigning robot accounts](https://goharbor.io/docs/2.12.0/img/robot-account/project-table-robot-account.png)\n\nClick the checkbox next to the project name to associate this robot account.\n\nBy default the table shows all projects in your Harbor instance. You are able to filter for projects using the **filter icon** to the right of Project Name header. Note that the project table may be broken into pages and only display a subset of projects at one time depending on how many projects you have in your Harbor instance and how many projects match your filter criteria.\n\n![Filter project names](https://goharbor.io/docs/2.12.0/img/robot-account/filter-project-name.png)\n\nUse the **Permissions** dropdown to choose which permissions to assign to a particular project. You are able to control which permissions to assign to an individual robot account by project, allowing you fine grained control over each robot account. You can select **Select All** or **Unselect All** to quickly add or remove all permissions from a robot account.\n\nThe **Push Repository** permission must be assigned with the **Pull Repository** permission. You are not able to assign the Push Repository permission by itself.\n\n![Set project permission](https://goharbor.io/docs/2.12.0/img/robot-account/set-project-permissions.png)\n\nClick the **Reset All Project Permissions** dropdown to control which permissions are available for each project. Selecting or unselecting a permission will add or remove the permission for every project. Using this option will adjust permissions for all projects, not just the projects shown if you have filtered for a specific project name.\n\n![Reset robot account permissions](https://goharbor.io/docs/2.12.0/img/robot-account/reset-robot-permissions.png)\n\nClick **Select All Projects** to associate the system robot account with all of the projects shown in the table. If you are filtering by project name, this option will only select the filtered projects.\n\n09. Click **FINISH**.\n\n10. In the confirmation window, click **Export to File** to download the secret as a JSON file, or click the clipboard icon to copy its contents to the clipboard.\n\n![Copy system robot account token](https://goharbor.io/docs/2.12.0/img/copy-system-robot-account-token.png)\n\nHarbor does not store robot account secrets, so you must either download the secret or copy and paste its contents into a text file. There is no way to get the secret from Harbor after you have created the robot account.\n\nThe new robot account appears as `<prefix>account_name` in the list of robot accounts. Read more about [robot account prefixes](https://goharbor.io/docs/2.12.0/administration/robot-accounts/#configure-robot-account-prefix).\n\n## Administration System Robot Account\n\nYou are able to edit, deactivate, or delete a system robot account.\n\n1. From the administrator **Robot Account** page, select the checkbox next to the robot account you are updating.\n2. Select **Action** and then **Edit**, **Deactivate**, or **Delete**.\n\n![deactivate or delete a robot account](https://goharbor.io/docs/2.12.0/img/disable-delete-system-robot-account.png)\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/robot-accounts", "title": "Create System Robot Accounts", "description": "Harbor incorporates the concept of system-wide robot accounts. An administrator can create a system-wide robot account covering multiple projects. System robot accounts are used to create non-user-scoped credentials to perform operations and API calls across multiple projects.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:11:46", "type": "overview", "page_metadata": {"viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "ogSiteName": "Harbor", "favicon": "https://goharbor.io/favicon.svg", "og:url": "https://goharbor.io/docs/2.12.0/administration/robot-accounts/", "og:site_name": "Harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:title": "Harbor &ndash; Create System Robot Accounts", "og:type": ["documentation", "article"], "og:image:type": "image/png", "ogLocale": "en_US", "twitter:site": "@project_harbor", "generator": "Hugo 0.74.0", "twitter:creator": "@project_harbor", "title": "\n      \nHarbor docs | Create System Robot Accounts\n\n    ", "twitter:card": "summary", "ogTitle": "Harbor &ndash; Create System Robot Accounts", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/robot-accounts/", "og:locale": "en_US", "og:image:alt": "Harbor &ndash; Create System Robot Accounts project logo", "scrapeId": "0df3b4d1-5b32-429c-a841-dbfc82d440d0", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/robot-accounts", "url": "https://goharbor.io/docs/2.12.0/administration/robot-accounts/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I view system robot accounts in harbor-2-12-0?\n\nAssistant: To view system robot accounts in harbor-2-12-0, here's what you do:\n1. Log into your Harbor instance as an administrator.\n2. In the sidebar select **Robot Accounts** in the **Administration section**.\n\n![System robot account page](https://goharbor.io/docs/2.12.0/img/robot-account/system-robot-account-page.png)\n\nThis page contains the lists of all existing system robot accounts in your Harbor instance. The table contains the following information for each system robot account:\n\n- The name of a system account. This is derived from robot account prefix configured for your Harbor instance and the name assigned to the account when it was created. A robot account name follows the format `<prefix><account_name>`. If you use the search function on this page, you only need to search for the account name without the prefix.\n\n- Enabled status indicates whether an account is active or deactivated.\n\n- The count of system permissions an account is assigned to. To see a full set of the assigned system permissions, click on the **PERMISSIONS** link.\n\n![View all the system permissions](https://goharbor.io/docs/2.12.0/img/robot-account/view-system-permissions.png)\n\n- The number of projects an account is associated with. Click on the **PROJECT(S)** link to see a full list of projects associated with an account.\n\n![View list of all projects associated with a system robot account](https://goharbor.io/docs/2.12.0/img/list-robot-account-projects.png)\n\n- The created time shows when the robot account was created.\n\n- The account expiration time. Calculated based on the created time and the expiration time set when creating the robot account.\n\n- The manually added description for the system robot account..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/robot-accounts", "title": "Create System Robot Accounts", "description": "Harbor incorporates the concept of system-wide robot accounts. An administrator can create a system-wide robot account covering multiple projects. System robot accounts are used to create non-user-scoped credentials to perform operations and API calls across multiple projects.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:11:46", "type": "section_detail", "page_metadata": {"viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "ogSiteName": "Harbor", "favicon": "https://goharbor.io/favicon.svg", "og:url": "https://goharbor.io/docs/2.12.0/administration/robot-accounts/", "og:site_name": "Harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:title": "Harbor &ndash; Create System Robot Accounts", "og:type": ["documentation", "article"], "og:image:type": "image/png", "ogLocale": "en_US", "twitter:site": "@project_harbor", "generator": "Hugo 0.74.0", "twitter:creator": "@project_harbor", "title": "\n      \nHarbor docs | Create System Robot Accounts\n\n    ", "twitter:card": "summary", "ogTitle": "Harbor &ndash; Create System Robot Accounts", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/robot-accounts/", "og:locale": "en_US", "og:image:alt": "Harbor &ndash; Create System Robot Accounts project logo", "scrapeId": "0df3b4d1-5b32-429c-a841-dbfc82d440d0", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/robot-accounts", "url": "https://goharbor.io/docs/2.12.0/administration/robot-accounts/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I add a system robot account in harbor-2-12-0?\n\nAssistant: To add a system robot account in harbor-2-12-0, here's what you do:\n01. Log in to the Harbor interface, with system administrator privileges.\n\n02. Go to **Administration**, select a project, and select **Robot Accounts**.\n\n03. Click **New Robot Account**.\n\n![Create system robot account window](https://goharbor.io/docs/2.12.0/img/robot-account/create-system-robot-account-step1.png)\n\n04. Enter a name and an optional description for this robot account.\n\n05. Set Expiration time for this robot account. By default the system configured expiration time is used. You can also select **Never Expired** from the dropdown if you want to create a never expiring robot account.\n\n06. Select the system permissions for this robot account.\n\n07. Select **Cover all projects** if you want to use this system robot account across all projects. Using this option means that this system robot account will be able to access all existing and future projects in your Harbor instance. You can select which permission to grant to the robot account.\n\n![Cover all projects and select permissions](https://goharbor.io/docs/2.12.0/img/robot-account/cover-all-project-and-select-permissions.png)\n\n08. If you want this robot account to only cover certain projects or be granted certain permissions, use the project table to select the projects and permissions you want to assign to the system robot account. This table shows the each project name, the project creation time, and a dropdown list of permissions to assign the system robot account for that project.\n\n![Project table for assigning robot accounts](https://goharbor.io/docs/2.12.0/img/robot-account/project-table-robot-account.png)\n\nClick the checkbox next to the project name to associate this robot account.\n\nBy default the table shows all projects in your Harbor instance. You are able to filter for projects using the **filter icon** to the right of Project Name header. Note that the project table may be broken into pages and only display a subset of projects at one time depending on how many projects you have in your Harbor instance and how many projects match your filter criteria.\n\n![Filter project names](https://goharbor.io/docs/2.12.0/img/robot-account/filter-project-name.png)\n\nUse the **Permissions** dropdown to choose which permissions to assign to a particular project. You are able to control which permissions to assign to an individual robot account by project, allowing you fine grained control over each robot account. You can select **Select All** or **Unselect All** to quickly add or remove all permissions from a robot account.\n\nThe **Push Repository** permission must be assigned with the **Pull Repository** permission. You are not able to assign the Push Repository permission by itself.\n\n![Set project permission](https://goharbor.io/docs/2.12.0/img/robot-account/set-project-permissions.png)\n\nClick the **Reset All Project Permissions** dropdown to control which permissions are available for each project. Selecting or unselecting a permission will add or remove the permission for every project. Using this option will adjust permissions for all projects, not just the projects shown if you have filtered for a specific project name.\n\n![Reset robot account permissions](https://goharbor.io/docs/2.12.0/img/robot-account/reset-robot-permissions.png)\n\nClick **Select All Projects** to associate the system robot account with all of the projects shown in the table. If you are filtering by project name, this option will only select the filtered projects.\n\n09. Click **FINISH**.\n\n10. In the confirmation window, click **Export to File** to download the secret as a JSON file, or click the clipboard icon to copy its contents to the clipboard.\n\n![Copy system robot account token](https://goharbor.io/docs/2.12.0/img/copy-system-robot-account-token.png)\n\nHarbor does not store robot account secrets, so you must either download the secret or copy and paste its contents into a text file. There is no way to get the secret from Harbor after you have created the robot account.\n\nThe new robot account appears as `<prefix>account_name` in the list of robot accounts. Read more about [robot account prefixes](https://goharbor.io/docs/2.12.0/administration/robot-accounts/#configure-robot-account-prefix)..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/robot-accounts", "title": "Create System Robot Accounts", "description": "Harbor incorporates the concept of system-wide robot accounts. An administrator can create a system-wide robot account covering multiple projects. System robot accounts are used to create non-user-scoped credentials to perform operations and API calls across multiple projects.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:11:46", "type": "section_detail", "page_metadata": {"viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "ogSiteName": "Harbor", "favicon": "https://goharbor.io/favicon.svg", "og:url": "https://goharbor.io/docs/2.12.0/administration/robot-accounts/", "og:site_name": "Harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:title": "Harbor &ndash; Create System Robot Accounts", "og:type": ["documentation", "article"], "og:image:type": "image/png", "ogLocale": "en_US", "twitter:site": "@project_harbor", "generator": "Hugo 0.74.0", "twitter:creator": "@project_harbor", "title": "\n      \nHarbor docs | Create System Robot Accounts\n\n    ", "twitter:card": "summary", "ogTitle": "Harbor &ndash; Create System Robot Accounts", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/robot-accounts/", "og:locale": "en_US", "og:image:alt": "Harbor &ndash; Create System Robot Accounts project logo", "scrapeId": "0df3b4d1-5b32-429c-a841-dbfc82d440d0", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/robot-accounts", "url": "https://goharbor.io/docs/2.12.0/administration/robot-accounts/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I administration system robot account in harbor-2-12-0?\n\nAssistant: To administration system robot account in harbor-2-12-0, here's what you do:\nYou are able to edit, deactivate, or delete a system robot account.\n\n1. From the administrator **Robot Account** page, select the checkbox next to the robot account you are updating.\n2. Select **Action** and then **Edit**, **Deactivate**, or **Delete**.\n\n![deactivate or delete a robot account](https://goharbor.io/docs/2.12.0/img/disable-delete-system-robot-account.png).\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/robot-accounts", "title": "Create System Robot Accounts", "description": "Harbor incorporates the concept of system-wide robot accounts. An administrator can create a system-wide robot account covering multiple projects. System robot accounts are used to create non-user-scoped credentials to perform operations and API calls across multiple projects.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:11:46", "type": "section_detail", "page_metadata": {"viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "ogSiteName": "Harbor", "favicon": "https://goharbor.io/favicon.svg", "og:url": "https://goharbor.io/docs/2.12.0/administration/robot-accounts/", "og:site_name": "Harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:title": "Harbor &ndash; Create System Robot Accounts", "og:type": ["documentation", "article"], "og:image:type": "image/png", "ogLocale": "en_US", "twitter:site": "@project_harbor", "generator": "Hugo 0.74.0", "twitter:creator": "@project_harbor", "title": "\n      \nHarbor docs | Create System Robot Accounts\n\n    ", "twitter:card": "summary", "ogTitle": "Harbor &ndash; Create System Robot Accounts", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/robot-accounts/", "og:locale": "en_US", "og:image:alt": "Harbor &ndash; Create System Robot Accounts project logo", "scrapeId": "0df3b4d1-5b32-429c-a841-dbfc82d440d0", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/robot-accounts", "url": "https://goharbor.io/docs/2.12.0/administration/robot-accounts/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you give me some code examples for Create System Robot Accounts in harbor-2-12-0?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Authenticate with a System Robot Account**:\n\n```yaml\ndocker login <harbor_address<>\nUsername: <prefix><account_name>\nPassword: <secret>\n\n```\n\nThis snippet shows you how to authenticate with a system robot account, which is an important aspect of create system robot accounts.\n\n", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/robot-accounts", "title": "Create System Robot Accounts", "description": "Harbor incorporates the concept of system-wide robot accounts. An administrator can create a system-wide robot account covering multiple projects. System robot accounts are used to create non-user-scoped credentials to perform operations and API calls across multiple projects.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:11:46", "type": "code_examples", "page_metadata": {"viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "ogSiteName": "Harbor", "favicon": "https://goharbor.io/favicon.svg", "og:url": "https://goharbor.io/docs/2.12.0/administration/robot-accounts/", "og:site_name": "Harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:title": "Harbor &ndash; Create System Robot Accounts", "og:type": ["documentation", "article"], "og:image:type": "image/png", "ogLocale": "en_US", "twitter:site": "@project_harbor", "generator": "Hugo 0.74.0", "twitter:creator": "@project_harbor", "title": "\n      \nHarbor docs | Create System Robot Accounts\n\n    ", "twitter:card": "summary", "ogTitle": "Harbor &ndash; Create System Robot Accounts", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/robot-accounts/", "og:locale": "en_US", "og:image:alt": "Harbor &ndash; Create System Robot Accounts project logo", "scrapeId": "0df3b4d1-5b32-429c-a841-dbfc82d440d0", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/robot-accounts", "url": "https://goharbor.io/docs/2.12.0/administration/robot-accounts/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: What are some tips for using Create System Robot Accounts in harbor-2-12-0 effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nThe **Push Repository** permission must be assigned with the **Pull Repository** permission. You are not able to assign the Push Repository permission by itself.\n\nHarbor does not store robot account secrets, so you must either download the secret or copy and paste its contents into a text file. There is no way to get the secret from Harbor after you have created the robot account.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/robot-accounts", "title": "Create System Robot Accounts", "description": "Harbor incorporates the concept of system-wide robot accounts. An administrator can create a system-wide robot account covering multiple projects. System robot accounts are used to create non-user-scoped credentials to perform operations and API calls across multiple projects.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:11:46", "type": "best_practices", "page_metadata": {"viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "ogSiteName": "Harbor", "favicon": "https://goharbor.io/favicon.svg", "og:url": "https://goharbor.io/docs/2.12.0/administration/robot-accounts/", "og:site_name": "Harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:title": "Harbor &ndash; Create System Robot Accounts", "og:type": ["documentation", "article"], "og:image:type": "image/png", "ogLocale": "en_US", "twitter:site": "@project_harbor", "generator": "Hugo 0.74.0", "twitter:creator": "@project_harbor", "title": "\n      \nHarbor docs | Create System Robot Accounts\n\n    ", "twitter:card": "summary", "ogTitle": "Harbor &ndash; Create System Robot Accounts", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/robot-accounts/", "og:locale": "en_US", "og:image:alt": "Harbor &ndash; Create System Robot Accounts project logo", "scrapeId": "0df3b4d1-5b32-429c-a841-dbfc82d440d0", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/robot-accounts", "url": "https://goharbor.io/docs/2.12.0/administration/robot-accounts/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you explain what Deploying Harbor with High Availability via Helm is in harbor-2-12-0?\n\nAssistant: Sure, I'd be happy to explain Deploying Harbor with High Availability via Helm in harbor-2-12-0.\n\n# Deploying Harbor with High Availability via Helm\n\nYou can deploy Harbor on Kubernetes via helm to make it highly available. In this way, if one of the nodes on which Harbor is running becomes unavailable, users do not experience interruptions of service.Here's a quick rundown of what this is about:\n\n## Prerequisites\n\n- Kubernetes cluster 1.10+\n- Helm 2.8.0+\n- Highly available ingress controller (Harbor does not manage the external endpoint)\n- Highly available PostgreSQL 9.6+ (Harbor does not handle the deployment of HA of database)\n- Highly available Redis (Harbor does not handle the deployment of HA of Redis)\n- PVC that can be shared across nodes or external object storage\n\n## Architecture\n\nMost of Harbor’s components are stateless now. So we can simply increase the replica of the pods to make sure the components are distributed to multiple worker nodes, and leverage the “Service” mechanism of K8S to ensure the connectivity across pods.\n\nAs for the storage layer, it is expected that the user provides a highly available PostgreSQL and Redis cluster for application data, as well as PVCs or object storage for storing images and charts.\n\n## Download Chart\n\nDownload Harbor helm chart:\n\n```bash\nhelm repo add harbor https://helm.goharbor.io\nhelm fetch harbor/harbor --untar\n```\n\n## Configuration\n\nConfigure the followings items in `values.yaml`, you can also set them as parameters via `--set` flag during running `helm install`:\n\n- **Ingress rule**\nConfigure the `expose.ingress.hosts.core`.\n\n- **External URL**\nConfigure the `externalURL`.\n\n- **External PostgreSQL**\nSet the `database.type` to `external` and fill the information in `database.external` section.\n\nAn empty databases should be created manually for `Harbor core` and configured in the section. Harbor will create tables automatically when starting up.\n\n- **External Redis**\nSet the `redis.type` to `external` and fill the information in `redis.external` section.\n\nHarbor introduced redis `Sentinel` mode support in 2.1.0. You can enable this by setting `sentinel_master_set` and `host` to `<host_sentinel1>:<port_sentinel1>,<host_sentinel2>:<port_sentinel2>,<host_sentinel3>:<port_sentinel3>`.\n\nYou can also refer to this [guide](https://community.pivotal.io/s/article/How-to-setup-HAProxy-and-Redis-Sentinel-for-automatic-failover-between-Redis-Master-and-Slave-servers) to setup a HAProxy before the Redis to expose a single entry point.\n\n- **Storage**\nBy default, a default `StorageClass` is needed in the K8S cluster to provision volumes to store images, charts and job logs.\n\nIf you want to specify the `StorageClass`, set `persistence.persistentVolumeClaim.registry.storageClass`, `persistence.persistentVolumeClaim.chartmuseum.storageClass` and `persistence.persistentVolumeClaim.jobservice.storageClass`.\n\nIf you use `StorageClass`, for both default or specified one, set `persistence.persistentVolumeClaim.registry.accessMode`, `persistence.persistentVolumeClaim.chartmuseum.accessMode` and `persistence.persistentVolumeClaim.jobservice.accessMode` as `ReadWriteMany`, and make sure that the persistent volumes must can be shared cross different nodes.\n\nYou can also use the existing PVCs to store data, set `persistence.persistentVolumeClaim.registry.existingClaim`, `persistence.persistentVolumeClaim.chartmuseum.existingClaim` and `persistence.persistentVolumeClaim.jobservice.existingClaim`.\n\nIf you have no PVCs that can be shared across nodes, you can use external object storage to store images and charts and store the job logs in database. Set the `persistence.imageChartStorage.type` to the value you want to use and fill the corresponding section and set `jobservice.jobLogger` to `database`.\n\n- **Replica**\nSet `portal.replicas`, `core.replicas`, `jobservice.replicas`, `registry.replicas`, `chartmuseum.replicas`, to `n`( `n` >=2).\n\n## Installation\n\nInstall the Harbor helm chart with a release name `my-release`:\n\nHelm 2:\n\n```bash\nhelm install --name my-release harbor/\n```\n\nHelm 3:\n\n```bash\nhelm install my-release harbor/\n```\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/install-config/harbor-ha-helm", "title": "Deploying Harbor with High Availability via Helm", "description": "You can deploy Harbor on Kubernetes via helm to make it highly available. In this way, if one of the nodes on which Harbor is running becomes unavailable, users do not experience interruptions of service.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:11:59", "type": "overview", "page_metadata": {"og:title": "Harbor &ndash; Deploying Harbor with High Availability via Helm", "twitter:card": "summary", "title": "\n      \nHarbor docs | Deploying Harbor with High Availability via Helm\n\n    ", "ogSiteName": "Harbor", "og:image:type": "image/png", "og:site_name": "Harbor", "favicon": "https://goharbor.io/favicon.svg", "ogLocale": "en_US", "og:type": ["documentation", "article"], "og:locale": "en_US", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "twitter:site": "@project_harbor", "generator": "Hugo 0.74.0", "ogTitle": "Harbor &ndash; Deploying Harbor with High Availability via Helm", "og:url": "https://goharbor.io/docs/2.12.0/install-config/harbor-ha-helm/", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "ogUrl": "https://goharbor.io/docs/2.12.0/install-config/harbor-ha-helm/", "twitter:creator": "@project_harbor", "og:image:alt": "Harbor &ndash; Deploying Harbor with High Availability via Helm project logo", "scrapeId": "b5dc2730-6ecb-494e-97e2-16d44dac302e", "sourceURL": "https://goharbor.io/docs/2.12.0/install-config/harbor-ha-helm", "url": "https://goharbor.io/docs/2.12.0/install-config/harbor-ha-helm/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I prerequisites in harbor-2-12-0?\n\nAssistant: To prerequisites in harbor-2-12-0, here's what you do:\n- Kubernetes cluster 1.10+\n- Helm 2.8.0+\n- Highly available ingress controller (Harbor does not manage the external endpoint)\n- Highly available PostgreSQL 9.6+ (Harbor does not handle the deployment of HA of database)\n- Highly available Redis (Harbor does not handle the deployment of HA of Redis)\n- PVC that can be shared across nodes or external object storage.\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/install-config/harbor-ha-helm", "title": "Deploying Harbor with High Availability via Helm", "description": "You can deploy Harbor on Kubernetes via helm to make it highly available. In this way, if one of the nodes on which Harbor is running becomes unavailable, users do not experience interruptions of service.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:11:59", "type": "section_detail", "page_metadata": {"og:title": "Harbor &ndash; Deploying Harbor with High Availability via Helm", "twitter:card": "summary", "title": "\n      \nHarbor docs | Deploying Harbor with High Availability via Helm\n\n    ", "ogSiteName": "Harbor", "og:image:type": "image/png", "og:site_name": "Harbor", "favicon": "https://goharbor.io/favicon.svg", "ogLocale": "en_US", "og:type": ["documentation", "article"], "og:locale": "en_US", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "twitter:site": "@project_harbor", "generator": "Hugo 0.74.0", "ogTitle": "Harbor &ndash; Deploying Harbor with High Availability via Helm", "og:url": "https://goharbor.io/docs/2.12.0/install-config/harbor-ha-helm/", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "ogUrl": "https://goharbor.io/docs/2.12.0/install-config/harbor-ha-helm/", "twitter:creator": "@project_harbor", "og:image:alt": "Harbor &ndash; Deploying Harbor with High Availability via Helm project logo", "scrapeId": "b5dc2730-6ecb-494e-97e2-16d44dac302e", "sourceURL": "https://goharbor.io/docs/2.12.0/install-config/harbor-ha-helm", "url": "https://goharbor.io/docs/2.12.0/install-config/harbor-ha-helm/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I architecture in harbor-2-12-0?\n\nAssistant: To architecture in harbor-2-12-0, here's what you do:\nMost of Harbor’s components are stateless now. So we can simply increase the replica of the pods to make sure the components are distributed to multiple worker nodes, and leverage the “Service” mechanism of K8S to ensure the connectivity across pods.\n\nAs for the storage layer, it is expected that the user provides a highly available PostgreSQL and Redis cluster for application data, as well as PVCs or object storage for storing images and charts..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/install-config/harbor-ha-helm", "title": "Deploying Harbor with High Availability via Helm", "description": "You can deploy Harbor on Kubernetes via helm to make it highly available. In this way, if one of the nodes on which Harbor is running becomes unavailable, users do not experience interruptions of service.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:11:59", "type": "section_detail", "page_metadata": {"og:title": "Harbor &ndash; Deploying Harbor with High Availability via Helm", "twitter:card": "summary", "title": "\n      \nHarbor docs | Deploying Harbor with High Availability via Helm\n\n    ", "ogSiteName": "Harbor", "og:image:type": "image/png", "og:site_name": "Harbor", "favicon": "https://goharbor.io/favicon.svg", "ogLocale": "en_US", "og:type": ["documentation", "article"], "og:locale": "en_US", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "twitter:site": "@project_harbor", "generator": "Hugo 0.74.0", "ogTitle": "Harbor &ndash; Deploying Harbor with High Availability via Helm", "og:url": "https://goharbor.io/docs/2.12.0/install-config/harbor-ha-helm/", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "ogUrl": "https://goharbor.io/docs/2.12.0/install-config/harbor-ha-helm/", "twitter:creator": "@project_harbor", "og:image:alt": "Harbor &ndash; Deploying Harbor with High Availability via Helm project logo", "scrapeId": "b5dc2730-6ecb-494e-97e2-16d44dac302e", "sourceURL": "https://goharbor.io/docs/2.12.0/install-config/harbor-ha-helm", "url": "https://goharbor.io/docs/2.12.0/install-config/harbor-ha-helm/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I download chart in harbor-2-12-0?\n\nAssistant: To download chart in harbor-2-12-0, here's what you do:\nDownload Harbor helm chart:\n\n```bash\nhelm repo add harbor https://helm.goharbor.io\nhelm fetch harbor/harbor --untar\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/install-config/harbor-ha-helm", "title": "Deploying Harbor with High Availability via Helm", "description": "You can deploy Harbor on Kubernetes via helm to make it highly available. In this way, if one of the nodes on which Harbor is running becomes unavailable, users do not experience interruptions of service.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:11:59", "type": "section_detail", "page_metadata": {"og:title": "Harbor &ndash; Deploying Harbor with High Availability via Helm", "twitter:card": "summary", "title": "\n      \nHarbor docs | Deploying Harbor with High Availability via Helm\n\n    ", "ogSiteName": "Harbor", "og:image:type": "image/png", "og:site_name": "Harbor", "favicon": "https://goharbor.io/favicon.svg", "ogLocale": "en_US", "og:type": ["documentation", "article"], "og:locale": "en_US", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "twitter:site": "@project_harbor", "generator": "Hugo 0.74.0", "ogTitle": "Harbor &ndash; Deploying Harbor with High Availability via Helm", "og:url": "https://goharbor.io/docs/2.12.0/install-config/harbor-ha-helm/", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "ogUrl": "https://goharbor.io/docs/2.12.0/install-config/harbor-ha-helm/", "twitter:creator": "@project_harbor", "og:image:alt": "Harbor &ndash; Deploying Harbor with High Availability via Helm project logo", "scrapeId": "b5dc2730-6ecb-494e-97e2-16d44dac302e", "sourceURL": "https://goharbor.io/docs/2.12.0/install-config/harbor-ha-helm", "url": "https://goharbor.io/docs/2.12.0/install-config/harbor-ha-helm/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I configuration in harbor-2-12-0?\n\nAssistant: To configuration in harbor-2-12-0, here's what you do:\nConfigure the followings items in `values.yaml`, you can also set them as parameters via `--set` flag during running `helm install`:\n\n- **Ingress rule**\nConfigure the `expose.ingress.hosts.core`.\n\n- **External URL**\nConfigure the `externalURL`.\n\n- **External PostgreSQL**\nSet the `database.type` to `external` and fill the information in `database.external` section.\n\nAn empty databases should be created manually for `Harbor core` and configured in the section. Harbor will create tables automatically when starting up.\n\n- **External Redis**\nSet the `redis.type` to `external` and fill the information in `redis.external` section.\n\nHarbor introduced redis `Sentinel` mode support in 2.1.0. You can enable this by setting `sentinel_master_set` and `host` to `<host_sentinel1>:<port_sentinel1>,<host_sentinel2>:<port_sentinel2>,<host_sentinel3>:<port_sentinel3>`.\n\nYou can also refer to this [guide](https://community.pivotal.io/s/article/How-to-setup-HAProxy-and-Redis-Sentinel-for-automatic-failover-between-Redis-Master-and-Slave-servers) to setup a HAProxy before the Redis to expose a single entry point.\n\n- **Storage**\nBy default, a default `StorageClass` is needed in the K8S cluster to provision volumes to store images, charts and job logs.\n\nIf you want to specify the `StorageClass`, set `persistence.persistentVolumeClaim.registry.storageClass`, `persistence.persistentVolumeClaim.chartmuseum.storageClass` and `persistence.persistentVolumeClaim.jobservice.storageClass`.\n\nIf you use `StorageClass`, for both default or specified one, set `persistence.persistentVolumeClaim.registry.accessMode`, `persistence.persistentVolumeClaim.chartmuseum.accessMode` and `persistence.persistentVolumeClaim.jobservice.accessMode` as `ReadWriteMany`, and make sure that the persistent volumes must can be shared cross different nodes.\n\nYou can also use the existing PVCs to store data, set `persistence.persistentVolumeClaim.registry.existingClaim`, `persistence.persistentVolumeClaim.chartmuseum.existingClaim` and `persistence.persistentVolumeClaim.jobservice.existingClaim`.\n\nIf you have no PVCs that can be shared across nodes, you can use external object storage to store images and charts and store the job logs in database. Set the `persistence.imageChartStorage.type` to the value you want to use and fill the corresponding section and set `jobservice.jobLogger` to `database`.\n\n- **Replica**\nSet `portal.replicas`, `core.replicas`, `jobservice.replicas`, `registry.replicas`, `chartmuseum.replicas`, to `n`( `n` >=2)..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/install-config/harbor-ha-helm", "title": "Deploying Harbor with High Availability via Helm", "description": "You can deploy Harbor on Kubernetes via helm to make it highly available. In this way, if one of the nodes on which Harbor is running becomes unavailable, users do not experience interruptions of service.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:11:59", "type": "section_detail", "page_metadata": {"og:title": "Harbor &ndash; Deploying Harbor with High Availability via Helm", "twitter:card": "summary", "title": "\n      \nHarbor docs | Deploying Harbor with High Availability via Helm\n\n    ", "ogSiteName": "Harbor", "og:image:type": "image/png", "og:site_name": "Harbor", "favicon": "https://goharbor.io/favicon.svg", "ogLocale": "en_US", "og:type": ["documentation", "article"], "og:locale": "en_US", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "twitter:site": "@project_harbor", "generator": "Hugo 0.74.0", "ogTitle": "Harbor &ndash; Deploying Harbor with High Availability via Helm", "og:url": "https://goharbor.io/docs/2.12.0/install-config/harbor-ha-helm/", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "ogUrl": "https://goharbor.io/docs/2.12.0/install-config/harbor-ha-helm/", "twitter:creator": "@project_harbor", "og:image:alt": "Harbor &ndash; Deploying Harbor with High Availability via Helm project logo", "scrapeId": "b5dc2730-6ecb-494e-97e2-16d44dac302e", "sourceURL": "https://goharbor.io/docs/2.12.0/install-config/harbor-ha-helm", "url": "https://goharbor.io/docs/2.12.0/install-config/harbor-ha-helm/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I installation in harbor-2-12-0?\n\nAssistant: To installation in harbor-2-12-0, here's what you do:\nInstall the Harbor helm chart with a release name `my-release`:\n\nHelm 2:\n\n```bash\nhelm install --name my-release harbor/\n```\n\nHelm 3:\n\n```bash\nhelm install my-release harbor/\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/install-config/harbor-ha-helm", "title": "Deploying Harbor with High Availability via Helm", "description": "You can deploy Harbor on Kubernetes via helm to make it highly available. In this way, if one of the nodes on which Harbor is running becomes unavailable, users do not experience interruptions of service.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:11:59", "type": "section_detail", "page_metadata": {"og:title": "Harbor &ndash; Deploying Harbor with High Availability via Helm", "twitter:card": "summary", "title": "\n      \nHarbor docs | Deploying Harbor with High Availability via Helm\n\n    ", "ogSiteName": "Harbor", "og:image:type": "image/png", "og:site_name": "Harbor", "favicon": "https://goharbor.io/favicon.svg", "ogLocale": "en_US", "og:type": ["documentation", "article"], "og:locale": "en_US", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "twitter:site": "@project_harbor", "generator": "Hugo 0.74.0", "ogTitle": "Harbor &ndash; Deploying Harbor with High Availability via Helm", "og:url": "https://goharbor.io/docs/2.12.0/install-config/harbor-ha-helm/", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "ogUrl": "https://goharbor.io/docs/2.12.0/install-config/harbor-ha-helm/", "twitter:creator": "@project_harbor", "og:image:alt": "Harbor &ndash; Deploying Harbor with High Availability via Helm project logo", "scrapeId": "b5dc2730-6ecb-494e-97e2-16d44dac302e", "sourceURL": "https://goharbor.io/docs/2.12.0/install-config/harbor-ha-helm", "url": "https://goharbor.io/docs/2.12.0/install-config/harbor-ha-helm/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you give me some code examples for Deploying Harbor with High Availability via Helm in harbor-2-12-0?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Download Harbor helm chart**:\n\n```yaml\nhelm repo add harbor https://helm.goharbor.io\nhelm fetch harbor/harbor --untar\n```\n\nThis snippet shows you how to download harbor helm chart, which is an important aspect of deploying harbor with high availability via helm.\n\n**Install Harbor helm chart (Helm 2)**:\n\n```yaml\nhelm install --name my-release harbor/\n```\n\nThis snippet shows you how to install harbor helm chart (helm 2), which is an important aspect of deploying harbor with high availability via helm.\n\n", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/install-config/harbor-ha-helm", "title": "Deploying Harbor with High Availability via Helm", "description": "You can deploy Harbor on Kubernetes via helm to make it highly available. In this way, if one of the nodes on which Harbor is running becomes unavailable, users do not experience interruptions of service.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:11:59", "type": "code_examples", "page_metadata": {"og:title": "Harbor &ndash; Deploying Harbor with High Availability via Helm", "twitter:card": "summary", "title": "\n      \nHarbor docs | Deploying Harbor with High Availability via Helm\n\n    ", "ogSiteName": "Harbor", "og:image:type": "image/png", "og:site_name": "Harbor", "favicon": "https://goharbor.io/favicon.svg", "ogLocale": "en_US", "og:type": ["documentation", "article"], "og:locale": "en_US", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "twitter:site": "@project_harbor", "generator": "Hugo 0.74.0", "ogTitle": "Harbor &ndash; Deploying Harbor with High Availability via Helm", "og:url": "https://goharbor.io/docs/2.12.0/install-config/harbor-ha-helm/", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "ogUrl": "https://goharbor.io/docs/2.12.0/install-config/harbor-ha-helm/", "twitter:creator": "@project_harbor", "og:image:alt": "Harbor &ndash; Deploying Harbor with High Availability via Helm project logo", "scrapeId": "b5dc2730-6ecb-494e-97e2-16d44dac302e", "sourceURL": "https://goharbor.io/docs/2.12.0/install-config/harbor-ha-helm", "url": "https://goharbor.io/docs/2.12.0/install-config/harbor-ha-helm/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: What are some tips for using Deploying Harbor with High Availability via Helm in harbor-2-12-0 effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nEnsure that the Kubernetes cluster is version 1.10 or higher.\n\nUse a highly available ingress controller as Harbor does not manage the external endpoint.\n\nSet up a highly available PostgreSQL and Redis cluster for application data.\n\nUse PVCs that can be shared across nodes or consider external object storage for images and charts.\n\nSet the replicas for all components to at least 2 for high availability.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/install-config/harbor-ha-helm", "title": "Deploying Harbor with High Availability via Helm", "description": "You can deploy Harbor on Kubernetes via helm to make it highly available. In this way, if one of the nodes on which Harbor is running becomes unavailable, users do not experience interruptions of service.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:11:59", "type": "best_practices", "page_metadata": {"og:title": "Harbor &ndash; Deploying Harbor with High Availability via Helm", "twitter:card": "summary", "title": "\n      \nHarbor docs | Deploying Harbor with High Availability via Helm\n\n    ", "ogSiteName": "Harbor", "og:image:type": "image/png", "og:site_name": "Harbor", "favicon": "https://goharbor.io/favicon.svg", "ogLocale": "en_US", "og:type": ["documentation", "article"], "og:locale": "en_US", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "twitter:site": "@project_harbor", "generator": "Hugo 0.74.0", "ogTitle": "Harbor &ndash; Deploying Harbor with High Availability via Helm", "og:url": "https://goharbor.io/docs/2.12.0/install-config/harbor-ha-helm/", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "ogUrl": "https://goharbor.io/docs/2.12.0/install-config/harbor-ha-helm/", "twitter:creator": "@project_harbor", "og:image:alt": "Harbor &ndash; Deploying Harbor with High Availability via Helm project logo", "scrapeId": "b5dc2730-6ecb-494e-97e2-16d44dac302e", "sourceURL": "https://goharbor.io/docs/2.12.0/install-config/harbor-ha-helm", "url": "https://goharbor.io/docs/2.12.0/install-config/harbor-ha-helm/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you explain what Garbage Collection is in harbor-2-12-0?\n\nAssistant: Sure, I'd be happy to explain Garbage Collection in harbor-2-12-0.\n\n# Garbage Collection\n\nThis page covers how to manage garbage collection in Harbor, including running, scheduling, viewing history, and stopping in-progress tasks.Here's a quick rundown of what this is about:\n\n## Run Garbage Collection\n\n1. Log in to the Harbor interface with an account that has Harbor system administrator privileges.\n\n2. Expand **Administration**, and select **Clean Up**.\n\n3. Select the **‘Garbage Collection’** tab.\n\n4. For the **Workers** item, you are able to select the number of workers that can execute GC tasks in parallel.\n\n5. To **Allow garbage collection on untagged artifacts**, select the option. If you have this option turned on, the next time Garbage collect runs on your Harbor instance, Harbor will delete untagged artifacts and then perform garbage collection on them.\n\n6. To dry run garbage collection, click **DRY RUN**.\n\n7. To run garbage collection immediately, click **GC Now**.\n\n**DRY RUN** prints the blobs eligible for deletion and a rough estimation of free up space without removing any data.\n\nTo avoid damaging the uploading artifact, the garbage collection introduces a time windows(2 hours) to reserve the recent uploaded layers. Garbage collection does not sweep the manifest & blob files that have a timestamp in the time window. Harbor runs garbage collection without interrupting your ability to continue use Harbor, for example you are able to push, pull, or delete artifacts while garbage collection is running.\n\nTo avoid triggering the garbage collection process too frequently, the availability of the **GC Now** button is restricted. Garbage collection can be only run once per minute.\n\n## Schedule Garbage Collection\n\nYou are able to schedule garbage collection on your Harbor interface from the **‘Garbage Collection’** tab on the **Administration** \\> **Clean Up** page of the Harbor interface.\n\n1. Use the drop down-menu to select how often to run garbage collection.\n\n   - **None**: No garbage collection is scheduled.\n   - **Hourly**: Run garbage collection at the beginning of every hour.\n   - **Daily**: Run garbage collection at midnight every day.\n   - **Weekly**: Run garbage collection at midnight every Saturday.\n   - **Custom**: Run garbage collection according to a `cron` task.\n2. For the **Workers** item, you are able to select the number of workers that can execute GC tasks in parallel.\n\n3. To **Allow garbage collection on untagged artifacts**, select the option. If you have this option turned on, the next time Garbage collect runs on your Harbor instance, Harbor will delete untagged artifacts and then perform garbage collection on them.\n\n4. Click **Save**.\n\n## View Garbage Collection History\n\nView garbage collection runs in the **Garbage Collection History** table on the **‘Garbage Collection’** tab on the **Administration** \\> **Clean Up** page of the Harbor interface.\n\nEach time you run garbage collection on your Harbor instance, Harbor will track some information about the run including:\n\n- **Task ID:** Unique numerical value assigned by Harbor when a run is initiated.\n- **Trigger Type:** How the run was initiated, either Manual or by Schedule.\n- **Dry Run:** If the run was a dry run or not.\n- **Status:** Current status of the run.\n- **Details:** Garbage collection details.\n- **Creation Time:** Time the run started.\n- **Update time:** The last time the run was updated.\n- **Logs:** A link to the logs generated by the run. If you are performing a Dry Run, this will include an estimate of the artifacts that will be garbage collected.\n\n## Stop in Progress Garbage Collection\n\nYou are able to stop any running garbage collection task from the Garbage Collection History table.\n\n1. Navigate to **Administration** \\> **Clean Up** page and select the **‘Garbage Collection’** tab.\n\n2. In the **Garbage Collection History** table, click on the checkbox next to the Task Id of the running garbage collection. You can stop one or more running garbage collection tasks at one time.\n\n3. Click **Stop** and then **Confirm** that you want to stop the garbage collection in the modal.\n\nThis will only stop the garbage collection task from processing more artifacts. Harbor will not restore any artifact that has already been garbage collected.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/garbage-collection", "title": "Garbage Collection", "description": "This page covers how to manage garbage collection in Harbor, including running, scheduling, viewing history, and stopping in-progress tasks.", "has_code_examples": false, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:12:14", "type": "overview", "page_metadata": {"generator": "Hugo 0.74.0", "og:type": ["documentation", "article"], "ogUrl": "https://goharbor.io/docs/2.12.0/administration/garbage-collection/", "twitter:creator": "@project_harbor", "title": "\n      \nHarbor docs | Garbage Collection\n\n    ", "og:image:alt": "Harbor &ndash; Garbage Collection project logo", "og:title": "Harbor &ndash; Garbage Collection", "og:url": "https://goharbor.io/docs/2.12.0/administration/garbage-collection/", "twitter:card": "summary", "og:site_name": "Harbor", "og:locale": "en_US", "favicon": "https://goharbor.io/favicon.svg", "ogTitle": "Harbor &ndash; Garbage Collection", "ogSiteName": "Harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogLocale": "en_US", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:image:type": "image/png", "twitter:site": "@project_harbor", "scrapeId": "2be28735-15c4-4c82-bf93-9334fea114fe", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/garbage-collection", "url": "https://goharbor.io/docs/2.12.0/administration/garbage-collection/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I run garbage collection in harbor-2-12-0?\n\nAssistant: To run garbage collection in harbor-2-12-0, here's what you do:\n1. Log in to the Harbor interface with an account that has Harbor system administrator privileges.\n\n2. Expand **Administration**, and select **Clean Up**.\n\n3. Select the **‘Garbage Collection’** tab.\n\n4. For the **Workers** item, you are able to select the number of workers that can execute GC tasks in parallel.\n\n5. To **Allow garbage collection on untagged artifacts**, select the option. If you have this option turned on, the next time Garbage collect runs on your Harbor instance, Harbor will delete untagged artifacts and then perform garbage collection on them.\n\n6. To dry run garbage collection, click **DRY RUN**.\n\n7. To run garbage collection immediately, click **GC Now**.\n\n**DRY RUN** prints the blobs eligible for deletion and a rough estimation of free up space without removing any data.\n\nTo avoid damaging the uploading artifact, the garbage collection introduces a time windows(2 hours) to reserve the recent uploaded layers. Garbage collection does not sweep the manifest & blob files that have a timestamp in the time window. Harbor runs garbage collection without interrupting your ability to continue use Harbor, for example you are able to push, pull, or delete artifacts while garbage collection is running.\n\nTo avoid triggering the garbage collection process too frequently, the availability of the **GC Now** button is restricted. Garbage collection can be only run once per minute..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/garbage-collection", "title": "Garbage Collection", "description": "This page covers how to manage garbage collection in Harbor, including running, scheduling, viewing history, and stopping in-progress tasks.", "has_code_examples": false, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:12:14", "type": "section_detail", "page_metadata": {"generator": "Hugo 0.74.0", "og:type": ["documentation", "article"], "ogUrl": "https://goharbor.io/docs/2.12.0/administration/garbage-collection/", "twitter:creator": "@project_harbor", "title": "\n      \nHarbor docs | Garbage Collection\n\n    ", "og:image:alt": "Harbor &ndash; Garbage Collection project logo", "og:title": "Harbor &ndash; Garbage Collection", "og:url": "https://goharbor.io/docs/2.12.0/administration/garbage-collection/", "twitter:card": "summary", "og:site_name": "Harbor", "og:locale": "en_US", "favicon": "https://goharbor.io/favicon.svg", "ogTitle": "Harbor &ndash; Garbage Collection", "ogSiteName": "Harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogLocale": "en_US", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:image:type": "image/png", "twitter:site": "@project_harbor", "scrapeId": "2be28735-15c4-4c82-bf93-9334fea114fe", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/garbage-collection", "url": "https://goharbor.io/docs/2.12.0/administration/garbage-collection/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I schedule garbage collection in harbor-2-12-0?\n\nAssistant: To schedule garbage collection in harbor-2-12-0, here's what you do:\nYou are able to schedule garbage collection on your Harbor interface from the **‘Garbage Collection’** tab on the **Administration** \\> **Clean Up** page of the Harbor interface.\n\n1. Use the drop down-menu to select how often to run garbage collection.\n\n   - **None**: No garbage collection is scheduled.\n   - **Hourly**: Run garbage collection at the beginning of every hour.\n   - **Daily**: Run garbage collection at midnight every day.\n   - **Weekly**: Run garbage collection at midnight every Saturday.\n   - **Custom**: Run garbage collection according to a `cron` task.\n2. For the **Workers** item, you are able to select the number of workers that can execute GC tasks in parallel.\n\n3. To **Allow garbage collection on untagged artifacts**, select the option. If you have this option turned on, the next time Garbage collect runs on your Harbor instance, Harbor will delete untagged artifacts and then perform garbage collection on them.\n\n4. Click **Save**..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/garbage-collection", "title": "Garbage Collection", "description": "This page covers how to manage garbage collection in Harbor, including running, scheduling, viewing history, and stopping in-progress tasks.", "has_code_examples": false, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:12:14", "type": "section_detail", "page_metadata": {"generator": "Hugo 0.74.0", "og:type": ["documentation", "article"], "ogUrl": "https://goharbor.io/docs/2.12.0/administration/garbage-collection/", "twitter:creator": "@project_harbor", "title": "\n      \nHarbor docs | Garbage Collection\n\n    ", "og:image:alt": "Harbor &ndash; Garbage Collection project logo", "og:title": "Harbor &ndash; Garbage Collection", "og:url": "https://goharbor.io/docs/2.12.0/administration/garbage-collection/", "twitter:card": "summary", "og:site_name": "Harbor", "og:locale": "en_US", "favicon": "https://goharbor.io/favicon.svg", "ogTitle": "Harbor &ndash; Garbage Collection", "ogSiteName": "Harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogLocale": "en_US", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:image:type": "image/png", "twitter:site": "@project_harbor", "scrapeId": "2be28735-15c4-4c82-bf93-9334fea114fe", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/garbage-collection", "url": "https://goharbor.io/docs/2.12.0/administration/garbage-collection/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I view garbage collection history in harbor-2-12-0?\n\nAssistant: To view garbage collection history in harbor-2-12-0, here's what you do:\nView garbage collection runs in the **Garbage Collection History** table on the **‘Garbage Collection’** tab on the **Administration** \\> **Clean Up** page of the Harbor interface.\n\nEach time you run garbage collection on your Harbor instance, Harbor will track some information about the run including:\n\n- **Task ID:** Unique numerical value assigned by Harbor when a run is initiated.\n- **Trigger Type:** How the run was initiated, either Manual or by Schedule.\n- **Dry Run:** If the run was a dry run or not.\n- **Status:** Current status of the run.\n- **Details:** Garbage collection details.\n- **Creation Time:** Time the run started.\n- **Update time:** The last time the run was updated.\n- **Logs:** A link to the logs generated by the run. If you are performing a Dry Run, this will include an estimate of the artifacts that will be garbage collected..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/garbage-collection", "title": "Garbage Collection", "description": "This page covers how to manage garbage collection in Harbor, including running, scheduling, viewing history, and stopping in-progress tasks.", "has_code_examples": false, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:12:14", "type": "section_detail", "page_metadata": {"generator": "Hugo 0.74.0", "og:type": ["documentation", "article"], "ogUrl": "https://goharbor.io/docs/2.12.0/administration/garbage-collection/", "twitter:creator": "@project_harbor", "title": "\n      \nHarbor docs | Garbage Collection\n\n    ", "og:image:alt": "Harbor &ndash; Garbage Collection project logo", "og:title": "Harbor &ndash; Garbage Collection", "og:url": "https://goharbor.io/docs/2.12.0/administration/garbage-collection/", "twitter:card": "summary", "og:site_name": "Harbor", "og:locale": "en_US", "favicon": "https://goharbor.io/favicon.svg", "ogTitle": "Harbor &ndash; Garbage Collection", "ogSiteName": "Harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogLocale": "en_US", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:image:type": "image/png", "twitter:site": "@project_harbor", "scrapeId": "2be28735-15c4-4c82-bf93-9334fea114fe", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/garbage-collection", "url": "https://goharbor.io/docs/2.12.0/administration/garbage-collection/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I stop in progress garbage collection in harbor-2-12-0?\n\nAssistant: To stop in progress garbage collection in harbor-2-12-0, here's what you do:\nYou are able to stop any running garbage collection task from the Garbage Collection History table.\n\n1. Navigate to **Administration** \\> **Clean Up** page and select the **‘Garbage Collection’** tab.\n\n2. In the **Garbage Collection History** table, click on the checkbox next to the Task Id of the running garbage collection. You can stop one or more running garbage collection tasks at one time.\n\n3. Click **Stop** and then **Confirm** that you want to stop the garbage collection in the modal.\n\nThis will only stop the garbage collection task from processing more artifacts. Harbor will not restore any artifact that has already been garbage collected..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/garbage-collection", "title": "Garbage Collection", "description": "This page covers how to manage garbage collection in Harbor, including running, scheduling, viewing history, and stopping in-progress tasks.", "has_code_examples": false, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:12:14", "type": "section_detail", "page_metadata": {"generator": "Hugo 0.74.0", "og:type": ["documentation", "article"], "ogUrl": "https://goharbor.io/docs/2.12.0/administration/garbage-collection/", "twitter:creator": "@project_harbor", "title": "\n      \nHarbor docs | Garbage Collection\n\n    ", "og:image:alt": "Harbor &ndash; Garbage Collection project logo", "og:title": "Harbor &ndash; Garbage Collection", "og:url": "https://goharbor.io/docs/2.12.0/administration/garbage-collection/", "twitter:card": "summary", "og:site_name": "Harbor", "og:locale": "en_US", "favicon": "https://goharbor.io/favicon.svg", "ogTitle": "Harbor &ndash; Garbage Collection", "ogSiteName": "Harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogLocale": "en_US", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:image:type": "image/png", "twitter:site": "@project_harbor", "scrapeId": "2be28735-15c4-4c82-bf93-9334fea114fe", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/garbage-collection", "url": "https://goharbor.io/docs/2.12.0/administration/garbage-collection/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: What are some tips for using Garbage Collection in harbor-2-12-0 effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nTo avoid damaging the uploading artifact, the garbage collection introduces a time window (2 hours) to reserve the recent uploaded layers.\n\nGarbage collection does not sweep the manifest & blob files that have a timestamp in the time window.\n\nGarbage collection can be only run once per minute.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/garbage-collection", "title": "Garbage Collection", "description": "This page covers how to manage garbage collection in Harbor, including running, scheduling, viewing history, and stopping in-progress tasks.", "has_code_examples": false, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:12:14", "type": "best_practices", "page_metadata": {"generator": "Hugo 0.74.0", "og:type": ["documentation", "article"], "ogUrl": "https://goharbor.io/docs/2.12.0/administration/garbage-collection/", "twitter:creator": "@project_harbor", "title": "\n      \nHarbor docs | Garbage Collection\n\n    ", "og:image:alt": "Harbor &ndash; Garbage Collection project logo", "og:title": "Harbor &ndash; Garbage Collection", "og:url": "https://goharbor.io/docs/2.12.0/administration/garbage-collection/", "twitter:card": "summary", "og:site_name": "Harbor", "og:locale": "en_US", "favicon": "https://goharbor.io/favicon.svg", "ogTitle": "Harbor &ndash; Garbage Collection", "ogSiteName": "Harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogLocale": "en_US", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:image:type": "image/png", "twitter:site": "@project_harbor", "scrapeId": "2be28735-15c4-4c82-bf93-9334fea114fe", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/garbage-collection", "url": "https://goharbor.io/docs/2.12.0/administration/garbage-collection/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you explain what Schedule Scans is in harbor-2-12-0?\n\nAssistant: Sure, I'd be happy to explain Schedule Scans in harbor-2-12-0.\n\n# Schedule Scans\n\nYou can set policies to control when vulnerability scanning should run.Here's a quick rundown of what this is about:\n\n## Setting Up Scan Policies\n\n1. Log in to the Harbor interface with an account that has Harbor system administrator privileges.\n\n2. Expand **Administration**, and select **Interrogation Services**.\n\n3. Select the **Vulnerability** tab and click the **Edit** button next to **Schedule to scan all**.\n\n4. Use the drop down-menu to select how often to run scans.\n\n   - **None**: No scans are scheduled.\n   - **Hourly**: Run a scan at the beginning of every hour.\n   - **Daily**: Run a scan at midnight every day.\n   - **Weekly**: Run a scan at midnight every Saturday.\n   - **Custom**: Run a scan according to a `cron` job.\n\n5. Click **Save**.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/schedule-scans", "title": "Schedule Scans", "description": "You can set policies to control when vulnerability scanning should run.", "has_code_examples": false, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 03:12:20", "type": "overview", "page_metadata": {"twitter:creator": "@project_harbor", "twitter:site": "@project_harbor", "og:site_name": "Harbor", "og:locale": "en_US", "og:image:type": "image/png", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/schedule-scans/", "ogTitle": "Harbor &ndash; Schedule Scans", "favicon": "https://goharbor.io/favicon.svg", "og:image:alt": "Harbor &ndash; Schedule Scans project logo", "ogSiteName": "Harbor", "ogLocale": "en_US", "og:title": "Harbor &ndash; Schedule Scans", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "generator": "Hugo 0.74.0", "twitter:card": "summary", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/schedule-scans/", "title": "\n      \nHarbor docs | Schedule Scans\n\n    ", "og:type": ["documentation", "article"], "scrapeId": "5c59fe04-3b60-4ce7-971b-ab627e78436e", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/schedule-scans", "url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/schedule-scans/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I setting up scan policies in harbor-2-12-0?\n\nAssistant: To setting up scan policies in harbor-2-12-0, here's what you do:\n1. Log in to the Harbor interface with an account that has Harbor system administrator privileges.\n\n2. Expand **Administration**, and select **Interrogation Services**.\n\n3. Select the **Vulnerability** tab and click the **Edit** button next to **Schedule to scan all**.\n\n4. Use the drop down-menu to select how often to run scans.\n\n   - **None**: No scans are scheduled.\n   - **Hourly**: Run a scan at the beginning of every hour.\n   - **Daily**: Run a scan at midnight every day.\n   - **Weekly**: Run a scan at midnight every Saturday.\n   - **Custom**: Run a scan according to a `cron` job.\n\n5. Click **Save**..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/schedule-scans", "title": "Schedule Scans", "description": "You can set policies to control when vulnerability scanning should run.", "has_code_examples": false, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 03:12:20", "type": "section_detail", "page_metadata": {"twitter:creator": "@project_harbor", "twitter:site": "@project_harbor", "og:site_name": "Harbor", "og:locale": "en_US", "og:image:type": "image/png", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/schedule-scans/", "ogTitle": "Harbor &ndash; Schedule Scans", "favicon": "https://goharbor.io/favicon.svg", "og:image:alt": "Harbor &ndash; Schedule Scans project logo", "ogSiteName": "Harbor", "ogLocale": "en_US", "og:title": "Harbor &ndash; Schedule Scans", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "generator": "Hugo 0.74.0", "twitter:card": "summary", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/schedule-scans/", "title": "\n      \nHarbor docs | Schedule Scans\n\n    ", "og:type": ["documentation", "article"], "scrapeId": "5c59fe04-3b60-4ce7-971b-ab627e78436e", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/schedule-scans", "url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/schedule-scans/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: What are some tips for using Schedule Scans in harbor-2-12-0 effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nEnsure you have administrator privileges to access the scanning settings.\n\nChoose the scan frequency that best fits your operational needs.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/schedule-scans", "title": "Schedule Scans", "description": "You can set policies to control when vulnerability scanning should run.", "has_code_examples": false, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 03:12:20", "type": "best_practices", "page_metadata": {"twitter:creator": "@project_harbor", "twitter:site": "@project_harbor", "og:site_name": "Harbor", "og:locale": "en_US", "og:image:type": "image/png", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/schedule-scans/", "ogTitle": "Harbor &ndash; Schedule Scans", "favicon": "https://goharbor.io/favicon.svg", "og:image:alt": "Harbor &ndash; Schedule Scans project logo", "ogSiteName": "Harbor", "ogLocale": "en_US", "og:title": "Harbor &ndash; Schedule Scans", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "generator": "Hugo 0.74.0", "twitter:card": "summary", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/schedule-scans/", "title": "\n      \nHarbor docs | Schedule Scans\n\n    ", "og:type": ["documentation", "article"], "scrapeId": "5c59fe04-3b60-4ce7-971b-ab627e78436e", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/schedule-scans", "url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/schedule-scans/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you explain what Upgrading Harbor Deployed with Helm is in harbor-2-12-0?\n\nAssistant: Sure, I'd be happy to explain Upgrading Harbor Deployed with Helm in harbor-2-12-0.\n\n# Upgrading Harbor Deployed with Helm\n\nThis guide is used to upgrade Harbor deployed by chart since version 0.3.0.Here's a quick rundown of what this is about:\n\n## Notes\n\n- As the database schema may change between different versions of Harbor, there is a progress to migrate the schema during the upgrade and the downtime cannot be avoid\n- The database schema cannot be downgraded automatically, so the `helm rollback` is not supported\n\n## Upgrade\n\n### 1. Backup database\n\nBackup the database used by Harbor in case the upgrade process fails.\n\n### 2. Download new chart\n\nDownload the latest version of Harbor chart.\n\n### 3. Configure new chart\n\nConfigure the new chart to make sure that the configuration items have the same values with the old one.\n\n> Note: if TLS is enabled and the certificate is generated by chart automatically, a new certificate will be generated and overwrite the old one during the upgrade, this may cause some issues if you have distributed the certificate. You can follow the below steps to configure the new chart to use the old certificate:\n\n1. Get the secret name which certificate is stored in:\n\n\n```bash\nkubectl get secret\n```\n\n\nFind the secret whose name ends with `-harbor-ingress` (expose service via `Ingress`) or `-harbor-nginx`(expose service via `ClusterIP` or `NodePort`)\n\n2. Export the secret as yaml file:\n\n\n```bash\nkubectl get secret <secret-name-from-step-1> -o yaml > secret.yaml\n```\n\n\n3. Rename the secret by setting `metadata.name` in `secret.yaml`\n\n4. Create a new secret:\n\n\n```bash\nkubectl create -f secret.yaml\n```\n\n\n5. Configure the chart to use the new secret by setting `expose.tls.secretName` as the value you set in step **3**\n\n### 4. Upgrade\n\nRun upgrade command:\n\n\n```bash\nhelm upgrade release-name --force .\n```\n\n\nThe `--force` is necessary if upgrade from version 0.3.0 due to issue [#30](https://github.com/goharbor/harbor-helm/issues/30).\n\n## Known issues\n\n- The job logs will be lost if you upgrade from version 0.3.0 as the logs are store in a `emptyDir` in 0.3.0.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/upgrade/helm-upgrade", "title": "Upgrading Harbor Deployed with Helm", "description": "This guide is used to upgrade Harbor deployed by chart since version 0.3.0.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:12:34", "type": "overview", "page_metadata": {"og:locale": "en_US", "ogSiteName": "Harbor", "og:site_name": "Harbor", "twitter:card": "summary", "og:image:type": "image/png", "favicon": "https://goharbor.io/favicon.svg", "og:title": "Harbor &ndash; Upgrading Harbor Deployed with Helm", "ogLocale": "en_US", "ogTitle": "Harbor &ndash; Upgrading Harbor Deployed with Helm", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "twitter:creator": "@project_harbor", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/upgrade/helm-upgrade/", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:type": ["documentation", "article"], "title": "\n      \nHarbor docs | Upgrading Harbor Deployed with Helm\n\n    ", "twitter:site": "@project_harbor", "og:image:alt": "Harbor &ndash; Upgrading Harbor Deployed with Helm project logo", "og:url": "https://goharbor.io/docs/2.12.0/administration/upgrade/helm-upgrade/", "generator": "Hugo 0.74.0", "scrapeId": "e06f463b-458a-4a92-9b7f-c41a6ee6f39c", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/upgrade/helm-upgrade", "url": "https://goharbor.io/docs/2.12.0/administration/upgrade/helm-upgrade/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I notes in harbor-2-12-0?\n\nAssistant: To notes in harbor-2-12-0, here's what you do:\n- As the database schema may change between different versions of Harbor, there is a progress to migrate the schema during the upgrade and the downtime cannot be avoid\n- The database schema cannot be downgraded automatically, so the `helm rollback` is not supported.\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/upgrade/helm-upgrade", "title": "Upgrading Harbor Deployed with Helm", "description": "This guide is used to upgrade Harbor deployed by chart since version 0.3.0.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:12:34", "type": "section_detail", "page_metadata": {"og:locale": "en_US", "ogSiteName": "Harbor", "og:site_name": "Harbor", "twitter:card": "summary", "og:image:type": "image/png", "favicon": "https://goharbor.io/favicon.svg", "og:title": "Harbor &ndash; Upgrading Harbor Deployed with Helm", "ogLocale": "en_US", "ogTitle": "Harbor &ndash; Upgrading Harbor Deployed with Helm", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "twitter:creator": "@project_harbor", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/upgrade/helm-upgrade/", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:type": ["documentation", "article"], "title": "\n      \nHarbor docs | Upgrading Harbor Deployed with Helm\n\n    ", "twitter:site": "@project_harbor", "og:image:alt": "Harbor &ndash; Upgrading Harbor Deployed with Helm project logo", "og:url": "https://goharbor.io/docs/2.12.0/administration/upgrade/helm-upgrade/", "generator": "Hugo 0.74.0", "scrapeId": "e06f463b-458a-4a92-9b7f-c41a6ee6f39c", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/upgrade/helm-upgrade", "url": "https://goharbor.io/docs/2.12.0/administration/upgrade/helm-upgrade/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I upgrade in harbor-2-12-0?\n\nAssistant: To upgrade in harbor-2-12-0, here's what you do:\n### 1. Backup database\n\nBackup the database used by Harbor in case the upgrade process fails.\n\n### 2. Download new chart\n\nDownload the latest version of Harbor chart.\n\n### 3. Configure new chart\n\nConfigure the new chart to make sure that the configuration items have the same values with the old one.\n\n> Note: if TLS is enabled and the certificate is generated by chart automatically, a new certificate will be generated and overwrite the old one during the upgrade, this may cause some issues if you have distributed the certificate. You can follow the below steps to configure the new chart to use the old certificate:\n\n1. Get the secret name which certificate is stored in:\n\n\n```bash\nkubectl get secret\n```\n\n\nFind the secret whose name ends with `-harbor-ingress` (expose service via `Ingress`) or `-harbor-nginx`(expose service via `ClusterIP` or `NodePort`)\n\n2. Export the secret as yaml file:\n\n\n```bash\nkubectl get secret <secret-name-from-step-1> -o yaml > secret.yaml\n```\n\n\n3. Rename the secret by setting `metadata.name` in `secret.yaml`\n\n4. Create a new secret:\n\n\n```bash\nkubectl create -f secret.yaml\n```\n\n\n5. Configure the chart to use the new secret by setting `expose.tls.secretName` as the value you set in step **3**\n\n### 4. Upgrade\n\nRun upgrade command:\n\n\n```bash\nhelm upgrade release-name --force .\n```\n\n\nThe `--force` is necessary if upgrade from version 0.3.0 due to issue [#30](https://github.com/goharbor/harbor-helm/issues/30)..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/upgrade/helm-upgrade", "title": "Upgrading Harbor Deployed with Helm", "description": "This guide is used to upgrade Harbor deployed by chart since version 0.3.0.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:12:34", "type": "section_detail", "page_metadata": {"og:locale": "en_US", "ogSiteName": "Harbor", "og:site_name": "Harbor", "twitter:card": "summary", "og:image:type": "image/png", "favicon": "https://goharbor.io/favicon.svg", "og:title": "Harbor &ndash; Upgrading Harbor Deployed with Helm", "ogLocale": "en_US", "ogTitle": "Harbor &ndash; Upgrading Harbor Deployed with Helm", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "twitter:creator": "@project_harbor", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/upgrade/helm-upgrade/", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:type": ["documentation", "article"], "title": "\n      \nHarbor docs | Upgrading Harbor Deployed with Helm\n\n    ", "twitter:site": "@project_harbor", "og:image:alt": "Harbor &ndash; Upgrading Harbor Deployed with Helm project logo", "og:url": "https://goharbor.io/docs/2.12.0/administration/upgrade/helm-upgrade/", "generator": "Hugo 0.74.0", "scrapeId": "e06f463b-458a-4a92-9b7f-c41a6ee6f39c", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/upgrade/helm-upgrade", "url": "https://goharbor.io/docs/2.12.0/administration/upgrade/helm-upgrade/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I known issues in harbor-2-12-0?\n\nAssistant: To known issues in harbor-2-12-0, here's what you do:\n- The job logs will be lost if you upgrade from version 0.3.0 as the logs are store in a `emptyDir` in 0.3.0..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/upgrade/helm-upgrade", "title": "Upgrading Harbor Deployed with Helm", "description": "This guide is used to upgrade Harbor deployed by chart since version 0.3.0.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:12:34", "type": "section_detail", "page_metadata": {"og:locale": "en_US", "ogSiteName": "Harbor", "og:site_name": "Harbor", "twitter:card": "summary", "og:image:type": "image/png", "favicon": "https://goharbor.io/favicon.svg", "og:title": "Harbor &ndash; Upgrading Harbor Deployed with Helm", "ogLocale": "en_US", "ogTitle": "Harbor &ndash; Upgrading Harbor Deployed with Helm", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "twitter:creator": "@project_harbor", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/upgrade/helm-upgrade/", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:type": ["documentation", "article"], "title": "\n      \nHarbor docs | Upgrading Harbor Deployed with Helm\n\n    ", "twitter:site": "@project_harbor", "og:image:alt": "Harbor &ndash; Upgrading Harbor Deployed with Helm project logo", "og:url": "https://goharbor.io/docs/2.12.0/administration/upgrade/helm-upgrade/", "generator": "Hugo 0.74.0", "scrapeId": "e06f463b-458a-4a92-9b7f-c41a6ee6f39c", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/upgrade/helm-upgrade", "url": "https://goharbor.io/docs/2.12.0/administration/upgrade/helm-upgrade/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you give me some code examples for Upgrading Harbor Deployed with Helm in harbor-2-12-0?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Get secret**:\n\n```yaml\nkubectl get secret\n```\n\nThis snippet shows you how to get secret, which is an important aspect of upgrading harbor deployed with helm.\n\n**Export secret as yaml file**:\n\n```yaml\nkubectl get secret <secret-name-from-step-1> -o yaml > secret.yaml\n```\n\nThis snippet shows you how to export secret as yaml file, which is an important aspect of upgrading harbor deployed with helm.\n\n**Create a new secret**:\n\n```yaml\nkubectl create -f secret.yaml\n```\n\nThis snippet shows you how to create a new secret, which is an important aspect of upgrading harbor deployed with helm.\n\n**Run upgrade command**:\n\n```yaml\nhelm upgrade release-name --force .\n```\n\nThis snippet shows you how to run upgrade command, which is an important aspect of upgrading harbor deployed with helm.\n\n", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/upgrade/helm-upgrade", "title": "Upgrading Harbor Deployed with Helm", "description": "This guide is used to upgrade Harbor deployed by chart since version 0.3.0.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:12:34", "type": "code_examples", "page_metadata": {"og:locale": "en_US", "ogSiteName": "Harbor", "og:site_name": "Harbor", "twitter:card": "summary", "og:image:type": "image/png", "favicon": "https://goharbor.io/favicon.svg", "og:title": "Harbor &ndash; Upgrading Harbor Deployed with Helm", "ogLocale": "en_US", "ogTitle": "Harbor &ndash; Upgrading Harbor Deployed with Helm", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "twitter:creator": "@project_harbor", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/upgrade/helm-upgrade/", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:type": ["documentation", "article"], "title": "\n      \nHarbor docs | Upgrading Harbor Deployed with Helm\n\n    ", "twitter:site": "@project_harbor", "og:image:alt": "Harbor &ndash; Upgrading Harbor Deployed with Helm project logo", "og:url": "https://goharbor.io/docs/2.12.0/administration/upgrade/helm-upgrade/", "generator": "Hugo 0.74.0", "scrapeId": "e06f463b-458a-4a92-9b7f-c41a6ee6f39c", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/upgrade/helm-upgrade", "url": "https://goharbor.io/docs/2.12.0/administration/upgrade/helm-upgrade/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: What are some tips for using Upgrading Harbor Deployed with Helm in harbor-2-12-0 effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nBackup the database used by Harbor before upgrading.\n\nEnsure configuration items in the new chart match the old chart values.\n\nIf using TLS, manage certificates carefully to avoid overwriting during upgrade.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/upgrade/helm-upgrade", "title": "Upgrading Harbor Deployed with Helm", "description": "This guide is used to upgrade Harbor deployed by chart since version 0.3.0.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:12:34", "type": "best_practices", "page_metadata": {"og:locale": "en_US", "ogSiteName": "Harbor", "og:site_name": "Harbor", "twitter:card": "summary", "og:image:type": "image/png", "favicon": "https://goharbor.io/favicon.svg", "og:title": "Harbor &ndash; Upgrading Harbor Deployed with Helm", "ogLocale": "en_US", "ogTitle": "Harbor &ndash; Upgrading Harbor Deployed with Helm", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "twitter:creator": "@project_harbor", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/upgrade/helm-upgrade/", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:type": ["documentation", "article"], "title": "\n      \nHarbor docs | Upgrading Harbor Deployed with Helm\n\n    ", "twitter:site": "@project_harbor", "og:image:alt": "Harbor &ndash; Upgrading Harbor Deployed with Helm project logo", "og:url": "https://goharbor.io/docs/2.12.0/administration/upgrade/helm-upgrade/", "generator": "Hugo 0.74.0", "scrapeId": "e06f463b-458a-4a92-9b7f-c41a6ee6f39c", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/upgrade/helm-upgrade", "url": "https://goharbor.io/docs/2.12.0/administration/upgrade/helm-upgrade/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you explain what Log Rotation is in harbor-2-12-0?\n\nAssistant: Sure, I'd be happy to explain Log Rotation in harbor-2-12-0.\n\n# Log Rotation\n\nThis page covers how to manage audit logs in Harbor, including scheduling log purges, configuring audit log forwarding, and viewing log rotation history.Here's a quick rundown of what this is about:\n\n## Schedule Log Purge\n\n1. Log in to the Harbor interface with an account that has Harbor system administrator privileges.\n\n2. Expand **Administration**, and select **Clean Up**.\n\n3. Select the **Log Rotation** tab.\n\n4. Use the drop down-menu to select how often to run log rotation.\n\n   - **None**: No log rotation is scheduled.\n   - **Hourly**: Run log rotation at the beginning of every hour.\n   - **Daily**: Run log rotation at midnight every day.\n   - **Weekly**: Run log rotation at midnight every Saturday.\n   - **Custom**: Run log rotation according to a `cron` task.\n\n5. Use the **Keep records in** to configure how long audit logs should be kept. Use the drop down-menu to select **Hours** or **Days**. For example, if you set this to 7 days, Harbor will only purge audit logs that are 8 or more days old.\n\n6. Select the **Included Operations** for the purge. When **Create**, **Delete**, or **Pull** is selected, Harbor will include audit logs for those operations in the purge.\n\n7. Click **Save** to save your log rotation schedule.\n\nUse the **DRY RUN** option to test your purge settings. When you perform a dry run, Harbor will create a log with the estimated amount of audit logs that will be purged. You can view a dry run logs in the **Purge History** table.\n\nUse the **PURGE NOW** option to manually run a purge immediately, without waiting for the next scheduled purge.\n\n## View Log Rotation History\n\nView the purge runs in the **Purge History** table. Harbor tracks information about each purge run, including:\n\n- **Task ID:** Unique numerical value assigned by Harbor when a run is initiated.\n- **Trigger Type:** How the run was initiated, either Manual or by Schedule.\n- **Dry Run:** If the run was a dry run or not.\n- **Status:** Current status of the run.\n- **Creation Time:** Time the run started.\n- **Update time:** The last time the run was updated.\n- **Logs:** A link to the logs generated by the run. If you are performing a Dry Run, this will include an estimate of the artifacts that will be purged.\n\n## Configure Audit Log Forward Endpoint\n\n1. Log in to the Harbor interface with an account that has Harbor system administrator privileges.\n2. Go to **Configuration** and select **System Settings**.\n3. In the **Audit Log Forward Syslog Endpoint** row, add your syslog endpoint. If the you installed Harbor with docker-compose, the local syslog endpoint is `harbor-log:10514`.\n4. If you have configured an endpoint to forward audit logs, you can select the checkbox to **Skip Audit Log Database**. When selected, Harbor will not keep any records of audit logs in its database, but will forward all logs to your configured endpoint immediately.\n\n## Stop in Progress Log Rotation\n\nYou are able to stop any running log purge task from the Purge History table.\n\n1. Navigate to **Administration** \\> **Clean Up** page and select the **Log Rotation** tab.\n\n2. In the **Purge History** table, click on the checkbox next to the Task Id of the running log purge task. You can stop one or more running log purge tasks at one time.\n\n3. Click **Stop** and then **Confirm** that you want to stop the garbage collection in the modal.\n\nThis will only stop the log purge task from processing more logs. Harbor will not restore any logs that has already been purged.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/log-rotation", "title": "Log Rotation", "description": "This page covers how to manage audit logs in Harbor, including scheduling log purges, configuring audit log forwarding, and viewing log rotation history.", "has_code_examples": false, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:12:46", "type": "overview", "page_metadata": {"ogSiteName": "Harbor", "og:image:alt": "Harbor &ndash; Log Rotation project logo", "title": "\n      \nHarbor docs | Log Rotation\n\n    ", "twitter:card": "summary", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/log-rotation/", "og:type": ["documentation", "article"], "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogLocale": "en_US", "og:locale": "en_US", "twitter:site": "@project_harbor", "og:url": "https://goharbor.io/docs/2.12.0/administration/log-rotation/", "og:site_name": "Harbor", "og:image:type": "image/png", "twitter:creator": "@project_harbor", "og:title": "Harbor &ndash; Log Rotation", "generator": "Hugo 0.74.0", "favicon": "https://goharbor.io/favicon.svg", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "ogTitle": "Harbor &ndash; Log Rotation", "scrapeId": "cf0a2dae-b971-4c29-b77d-557f233fa04f", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/log-rotation", "url": "https://goharbor.io/docs/2.12.0/administration/log-rotation/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I schedule log purge in harbor-2-12-0?\n\nAssistant: To schedule log purge in harbor-2-12-0, here's what you do:\n1. Log in to the Harbor interface with an account that has Harbor system administrator privileges.\n\n2. Expand **Administration**, and select **Clean Up**.\n\n3. Select the **Log Rotation** tab.\n\n4. Use the drop down-menu to select how often to run log rotation.\n\n   - **None**: No log rotation is scheduled.\n   - **Hourly**: Run log rotation at the beginning of every hour.\n   - **Daily**: Run log rotation at midnight every day.\n   - **Weekly**: Run log rotation at midnight every Saturday.\n   - **Custom**: Run log rotation according to a `cron` task.\n\n5. Use the **Keep records in** to configure how long audit logs should be kept. Use the drop down-menu to select **Hours** or **Days**. For example, if you set this to 7 days, Harbor will only purge audit logs that are 8 or more days old.\n\n6. Select the **Included Operations** for the purge. When **Create**, **Delete**, or **Pull** is selected, Harbor will include audit logs for those operations in the purge.\n\n7. Click **Save** to save your log rotation schedule.\n\nUse the **DRY RUN** option to test your purge settings. When you perform a dry run, Harbor will create a log with the estimated amount of audit logs that will be purged. You can view a dry run logs in the **Purge History** table.\n\nUse the **PURGE NOW** option to manually run a purge immediately, without waiting for the next scheduled purge..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/log-rotation", "title": "Log Rotation", "description": "This page covers how to manage audit logs in Harbor, including scheduling log purges, configuring audit log forwarding, and viewing log rotation history.", "has_code_examples": false, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:12:46", "type": "section_detail", "page_metadata": {"ogSiteName": "Harbor", "og:image:alt": "Harbor &ndash; Log Rotation project logo", "title": "\n      \nHarbor docs | Log Rotation\n\n    ", "twitter:card": "summary", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/log-rotation/", "og:type": ["documentation", "article"], "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogLocale": "en_US", "og:locale": "en_US", "twitter:site": "@project_harbor", "og:url": "https://goharbor.io/docs/2.12.0/administration/log-rotation/", "og:site_name": "Harbor", "og:image:type": "image/png", "twitter:creator": "@project_harbor", "og:title": "Harbor &ndash; Log Rotation", "generator": "Hugo 0.74.0", "favicon": "https://goharbor.io/favicon.svg", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "ogTitle": "Harbor &ndash; Log Rotation", "scrapeId": "cf0a2dae-b971-4c29-b77d-557f233fa04f", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/log-rotation", "url": "https://goharbor.io/docs/2.12.0/administration/log-rotation/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I view log rotation history in harbor-2-12-0?\n\nAssistant: To view log rotation history in harbor-2-12-0, here's what you do:\nView the purge runs in the **Purge History** table. Harbor tracks information about each purge run, including:\n\n- **Task ID:** Unique numerical value assigned by Harbor when a run is initiated.\n- **Trigger Type:** How the run was initiated, either Manual or by Schedule.\n- **Dry Run:** If the run was a dry run or not.\n- **Status:** Current status of the run.\n- **Creation Time:** Time the run started.\n- **Update time:** The last time the run was updated.\n- **Logs:** A link to the logs generated by the run. If you are performing a Dry Run, this will include an estimate of the artifacts that will be purged..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/log-rotation", "title": "Log Rotation", "description": "This page covers how to manage audit logs in Harbor, including scheduling log purges, configuring audit log forwarding, and viewing log rotation history.", "has_code_examples": false, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:12:46", "type": "section_detail", "page_metadata": {"ogSiteName": "Harbor", "og:image:alt": "Harbor &ndash; Log Rotation project logo", "title": "\n      \nHarbor docs | Log Rotation\n\n    ", "twitter:card": "summary", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/log-rotation/", "og:type": ["documentation", "article"], "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogLocale": "en_US", "og:locale": "en_US", "twitter:site": "@project_harbor", "og:url": "https://goharbor.io/docs/2.12.0/administration/log-rotation/", "og:site_name": "Harbor", "og:image:type": "image/png", "twitter:creator": "@project_harbor", "og:title": "Harbor &ndash; Log Rotation", "generator": "Hugo 0.74.0", "favicon": "https://goharbor.io/favicon.svg", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "ogTitle": "Harbor &ndash; Log Rotation", "scrapeId": "cf0a2dae-b971-4c29-b77d-557f233fa04f", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/log-rotation", "url": "https://goharbor.io/docs/2.12.0/administration/log-rotation/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I configure audit log forward endpoint in harbor-2-12-0?\n\nAssistant: To configure audit log forward endpoint in harbor-2-12-0, here's what you do:\n1. Log in to the Harbor interface with an account that has Harbor system administrator privileges.\n2. Go to **Configuration** and select **System Settings**.\n3. In the **Audit Log Forward Syslog Endpoint** row, add your syslog endpoint. If the you installed Harbor with docker-compose, the local syslog endpoint is `harbor-log:10514`.\n4. If you have configured an endpoint to forward audit logs, you can select the checkbox to **Skip Audit Log Database**. When selected, Harbor will not keep any records of audit logs in its database, but will forward all logs to your configured endpoint immediately..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/log-rotation", "title": "Log Rotation", "description": "This page covers how to manage audit logs in Harbor, including scheduling log purges, configuring audit log forwarding, and viewing log rotation history.", "has_code_examples": false, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:12:46", "type": "section_detail", "page_metadata": {"ogSiteName": "Harbor", "og:image:alt": "Harbor &ndash; Log Rotation project logo", "title": "\n      \nHarbor docs | Log Rotation\n\n    ", "twitter:card": "summary", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/log-rotation/", "og:type": ["documentation", "article"], "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogLocale": "en_US", "og:locale": "en_US", "twitter:site": "@project_harbor", "og:url": "https://goharbor.io/docs/2.12.0/administration/log-rotation/", "og:site_name": "Harbor", "og:image:type": "image/png", "twitter:creator": "@project_harbor", "og:title": "Harbor &ndash; Log Rotation", "generator": "Hugo 0.74.0", "favicon": "https://goharbor.io/favicon.svg", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "ogTitle": "Harbor &ndash; Log Rotation", "scrapeId": "cf0a2dae-b971-4c29-b77d-557f233fa04f", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/log-rotation", "url": "https://goharbor.io/docs/2.12.0/administration/log-rotation/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I stop in progress log rotation in harbor-2-12-0?\n\nAssistant: To stop in progress log rotation in harbor-2-12-0, here's what you do:\nYou are able to stop any running log purge task from the Purge History table.\n\n1. Navigate to **Administration** \\> **Clean Up** page and select the **Log Rotation** tab.\n\n2. In the **Purge History** table, click on the checkbox next to the Task Id of the running log purge task. You can stop one or more running log purge tasks at one time.\n\n3. Click **Stop** and then **Confirm** that you want to stop the garbage collection in the modal.\n\nThis will only stop the log purge task from processing more logs. Harbor will not restore any logs that has already been purged..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/log-rotation", "title": "Log Rotation", "description": "This page covers how to manage audit logs in Harbor, including scheduling log purges, configuring audit log forwarding, and viewing log rotation history.", "has_code_examples": false, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:12:46", "type": "section_detail", "page_metadata": {"ogSiteName": "Harbor", "og:image:alt": "Harbor &ndash; Log Rotation project logo", "title": "\n      \nHarbor docs | Log Rotation\n\n    ", "twitter:card": "summary", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/log-rotation/", "og:type": ["documentation", "article"], "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogLocale": "en_US", "og:locale": "en_US", "twitter:site": "@project_harbor", "og:url": "https://goharbor.io/docs/2.12.0/administration/log-rotation/", "og:site_name": "Harbor", "og:image:type": "image/png", "twitter:creator": "@project_harbor", "og:title": "Harbor &ndash; Log Rotation", "generator": "Hugo 0.74.0", "favicon": "https://goharbor.io/favicon.svg", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "ogTitle": "Harbor &ndash; Log Rotation", "scrapeId": "cf0a2dae-b971-4c29-b77d-557f233fa04f", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/log-rotation", "url": "https://goharbor.io/docs/2.12.0/administration/log-rotation/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: What are some tips for using Log Rotation in harbor-2-12-0 effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nUse the **DRY RUN** option to test your purge settings before executing a real purge.\n\nUse the **PURGE NOW** option to manually run a purge immediately, without waiting for the next scheduled purge.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/log-rotation", "title": "Log Rotation", "description": "This page covers how to manage audit logs in Harbor, including scheduling log purges, configuring audit log forwarding, and viewing log rotation history.", "has_code_examples": false, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:12:46", "type": "best_practices", "page_metadata": {"ogSiteName": "Harbor", "og:image:alt": "Harbor &ndash; Log Rotation project logo", "title": "\n      \nHarbor docs | Log Rotation\n\n    ", "twitter:card": "summary", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/log-rotation/", "og:type": ["documentation", "article"], "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogLocale": "en_US", "og:locale": "en_US", "twitter:site": "@project_harbor", "og:url": "https://goharbor.io/docs/2.12.0/administration/log-rotation/", "og:site_name": "Harbor", "og:image:type": "image/png", "twitter:creator": "@project_harbor", "og:title": "Harbor &ndash; Log Rotation", "generator": "Hugo 0.74.0", "favicon": "https://goharbor.io/favicon.svg", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "ogTitle": "Harbor &ndash; Log Rotation", "scrapeId": "cf0a2dae-b971-4c29-b77d-557f233fa04f", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/log-rotation", "url": "https://goharbor.io/docs/2.12.0/administration/log-rotation/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you explain what SBOM Generation Capabilities is in harbor-2-12-0?\n\nAssistant: Sure, I'd be happy to explain SBOM Generation Capabilities in harbor-2-12-0.\n\n# SBOM Generation Capabilities\n\nThis page covers the capabilities of generating Software Bill of Materials (SBOM) in Harbor, including automatic and manual generation, deletion, and replication of SBOMs.Here's a quick rundown of what this is about:\n\n## Automatic Generation of SBOMs during Image Push\n\nTo automatically generate an SBOM for images pushed to Harbor, users need to navigate to the `Configuration` tab of the project where an image was pushed. Then select the checkbox of `SBOM generation` and click `SAVE` button afterward.\n\n![Enable SBOM auto generation configuration](https://goharbor.io/docs/2.12.0/img/sbom-integration/1_enable_auto_generate_sbom.png)\n\nAfter the configuration change, newly pushed artifacts `docker push ...` to this project will automatically trigger the SBOM generation process using the assigned scanner defined in the Scanner section.\n\n![SBOM automatically generated](https://goharbor.io/docs/2.12.0/img/sbom-integration/2_sbom_accessory.png)\n\nIn the project artifact page, users can see the SBOM details link as shown in the above image. By clicking on the “SBOM Details” (Inside the yellow rectangle), users will be redirected to the SBOM details page.\n\nA table with package name, its current version, and package license will become visible, including a download link `DOWNLOAD SBOM` to download the file containing full SBOM details in SPDX format.\n\n![SBOM details](https://goharbor.io/docs/2.12.0/img/sbom-integration/3_sbom_details.png)\n\n## Manual SBOM Generation for Container Images With Harbor\n\nIn case the automatic SBOM generation is not enabled or desired, Users can selectively generate SBOMs for container images. Navigate to the artifact page and select the images for which the SBOM should be generated. After one or more images are selected, the Button `GENERATE SBOM` will become available. It is also possible to abort the SBOM generation inside the `ACTIONS` drop-down menu.\n\n![SBOM manual generation and stopping](https://goharbor.io/docs/2.12.0/img/sbom-integration/4_stop_manual_generate_sbom.png)\n\n## How to delete an SBOM\n\nAn SBOM accessory can be deleted individually as shown below by clicking on the three vertical dot icon next to the SBOM accessory you want to delete and then click the `Delete` option.\n\n![SBOM deletion individually](https://goharbor.io/docs/2.12.0/img/sbom-integration/5_delete_sbom_individually.png)\n\nAfter the deletion, the SBOM accessory will be removed from the artifact and hence not visible in the UI anymore.\n\n![No SBOM accessory](https://goharbor.io/docs/2.12.0/img/sbom-integration/7_no_sbom_after_delete.png)\n\nThe final and physical deletion of the SBOM will be performed during the garbage collection process.\n\nAn SBOM can also be deleted along with its subject artifact, as shown below.\n\n![SBOM deletion together with subject artifact](https://goharbor.io/docs/2.12.0/img/sbom-integration/9_delete_sbom_with_subject_artifact.png)\n\n## SBOM Replication\n\nUsers can create a pull-based or pushed-based replication rule to replicate a set of artifacts together with their corresponding SBOM from a source Harbor registry to a destination Harbor registry.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/sbom-integration", "title": "SBOM Generation Capabilities", "description": "This page covers the capabilities of generating Software Bill of Materials (SBOM) in Harbor, including automatic and manual generation, deletion, and replication of SBOMs.", "has_code_examples": false, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:14:33", "type": "overview", "page_metadata": {"title": "\n      \nHarbor docs | SBOM Generation Capabilities\n\n    ", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:image:type": "image/png", "og:image:alt": "Harbor &ndash; SBOM Generation Capabilities project logo", "ogTitle": "Harbor &ndash; SBOM Generation Capabilities", "twitter:creator": "@project_harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:locale": "en_US", "og:site_name": "Harbor", "og:title": "Harbor &ndash; SBOM Generation Capabilities", "og:type": ["documentation", "article"], "twitter:card": "summary", "generator": "Hugo 0.74.0", "twitter:site": "@project_harbor", "ogLocale": "en_US", "favicon": "https://goharbor.io/favicon.svg", "og:url": "https://goharbor.io/docs/2.12.0/administration/sbom-integration/", "ogSiteName": "Harbor", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/sbom-integration/", "scrapeId": "5be8640e-fabf-4bdc-aee6-202da0a713a2", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/sbom-integration", "url": "https://goharbor.io/docs/2.12.0/administration/sbom-integration/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I automatic generation of sboms during image push in harbor-2-12-0?\n\nAssistant: To automatic generation of sboms during image push in harbor-2-12-0, here's what you do:\nTo automatically generate an SBOM for images pushed to Harbor, users need to navigate to the `Configuration` tab of the project where an image was pushed. Then select the checkbox of `SBOM generation` and click `SAVE` button afterward.\n\n![Enable SBOM auto generation configuration](https://goharbor.io/docs/2.12.0/img/sbom-integration/1_enable_auto_generate_sbom.png)\n\nAfter the configuration change, newly pushed artifacts `docker push ...` to this project will automatically trigger the SBOM generation process using the assigned scanner defined in the Scanner section.\n\n![SBOM automatically generated](https://goharbor.io/docs/2.12.0/img/sbom-integration/2_sbom_accessory.png)\n\nIn the project artifact page, users can see the SBOM details link as shown in the above image. By clicking on the “SBOM Details” (Inside the yellow rectangle), users will be redirected to the SBOM details page.\n\nA table with package name, its current version, and package license will become visible, including a download link `DOWNLOAD SBOM` to download the file containing full SBOM details in SPDX format.\n\n![SBOM details](https://goharbor.io/docs/2.12.0/img/sbom-integration/3_sbom_details.png).\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/sbom-integration", "title": "SBOM Generation Capabilities", "description": "This page covers the capabilities of generating Software Bill of Materials (SBOM) in Harbor, including automatic and manual generation, deletion, and replication of SBOMs.", "has_code_examples": false, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:14:33", "type": "section_detail", "page_metadata": {"title": "\n      \nHarbor docs | SBOM Generation Capabilities\n\n    ", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:image:type": "image/png", "og:image:alt": "Harbor &ndash; SBOM Generation Capabilities project logo", "ogTitle": "Harbor &ndash; SBOM Generation Capabilities", "twitter:creator": "@project_harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:locale": "en_US", "og:site_name": "Harbor", "og:title": "Harbor &ndash; SBOM Generation Capabilities", "og:type": ["documentation", "article"], "twitter:card": "summary", "generator": "Hugo 0.74.0", "twitter:site": "@project_harbor", "ogLocale": "en_US", "favicon": "https://goharbor.io/favicon.svg", "og:url": "https://goharbor.io/docs/2.12.0/administration/sbom-integration/", "ogSiteName": "Harbor", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/sbom-integration/", "scrapeId": "5be8640e-fabf-4bdc-aee6-202da0a713a2", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/sbom-integration", "url": "https://goharbor.io/docs/2.12.0/administration/sbom-integration/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I manual sbom generation for container images with harbor in harbor-2-12-0?\n\nAssistant: To manual sbom generation for container images with harbor in harbor-2-12-0, here's what you do:\nIn case the automatic SBOM generation is not enabled or desired, Users can selectively generate SBOMs for container images. Navigate to the artifact page and select the images for which the SBOM should be generated. After one or more images are selected, the Button `GENERATE SBOM` will become available. It is also possible to abort the SBOM generation inside the `ACTIONS` drop-down menu.\n\n![SBOM manual generation and stopping](https://goharbor.io/docs/2.12.0/img/sbom-integration/4_stop_manual_generate_sbom.png).\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/sbom-integration", "title": "SBOM Generation Capabilities", "description": "This page covers the capabilities of generating Software Bill of Materials (SBOM) in Harbor, including automatic and manual generation, deletion, and replication of SBOMs.", "has_code_examples": false, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:14:33", "type": "section_detail", "page_metadata": {"title": "\n      \nHarbor docs | SBOM Generation Capabilities\n\n    ", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:image:type": "image/png", "og:image:alt": "Harbor &ndash; SBOM Generation Capabilities project logo", "ogTitle": "Harbor &ndash; SBOM Generation Capabilities", "twitter:creator": "@project_harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:locale": "en_US", "og:site_name": "Harbor", "og:title": "Harbor &ndash; SBOM Generation Capabilities", "og:type": ["documentation", "article"], "twitter:card": "summary", "generator": "Hugo 0.74.0", "twitter:site": "@project_harbor", "ogLocale": "en_US", "favicon": "https://goharbor.io/favicon.svg", "og:url": "https://goharbor.io/docs/2.12.0/administration/sbom-integration/", "ogSiteName": "Harbor", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/sbom-integration/", "scrapeId": "5be8640e-fabf-4bdc-aee6-202da0a713a2", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/sbom-integration", "url": "https://goharbor.io/docs/2.12.0/administration/sbom-integration/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I how to delete an sbom in harbor-2-12-0?\n\nAssistant: To how to delete an sbom in harbor-2-12-0, here's what you do:\nAn SBOM accessory can be deleted individually as shown below by clicking on the three vertical dot icon next to the SBOM accessory you want to delete and then click the `Delete` option.\n\n![SBOM deletion individually](https://goharbor.io/docs/2.12.0/img/sbom-integration/5_delete_sbom_individually.png)\n\nAfter the deletion, the SBOM accessory will be removed from the artifact and hence not visible in the UI anymore.\n\n![No SBOM accessory](https://goharbor.io/docs/2.12.0/img/sbom-integration/7_no_sbom_after_delete.png)\n\nThe final and physical deletion of the SBOM will be performed during the garbage collection process.\n\nAn SBOM can also be deleted along with its subject artifact, as shown below.\n\n![SBOM deletion together with subject artifact](https://goharbor.io/docs/2.12.0/img/sbom-integration/9_delete_sbom_with_subject_artifact.png).\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/sbom-integration", "title": "SBOM Generation Capabilities", "description": "This page covers the capabilities of generating Software Bill of Materials (SBOM) in Harbor, including automatic and manual generation, deletion, and replication of SBOMs.", "has_code_examples": false, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:14:33", "type": "section_detail", "page_metadata": {"title": "\n      \nHarbor docs | SBOM Generation Capabilities\n\n    ", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:image:type": "image/png", "og:image:alt": "Harbor &ndash; SBOM Generation Capabilities project logo", "ogTitle": "Harbor &ndash; SBOM Generation Capabilities", "twitter:creator": "@project_harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:locale": "en_US", "og:site_name": "Harbor", "og:title": "Harbor &ndash; SBOM Generation Capabilities", "og:type": ["documentation", "article"], "twitter:card": "summary", "generator": "Hugo 0.74.0", "twitter:site": "@project_harbor", "ogLocale": "en_US", "favicon": "https://goharbor.io/favicon.svg", "og:url": "https://goharbor.io/docs/2.12.0/administration/sbom-integration/", "ogSiteName": "Harbor", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/sbom-integration/", "scrapeId": "5be8640e-fabf-4bdc-aee6-202da0a713a2", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/sbom-integration", "url": "https://goharbor.io/docs/2.12.0/administration/sbom-integration/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I sbom replication in harbor-2-12-0?\n\nAssistant: To sbom replication in harbor-2-12-0, here's what you do:\nUsers can create a pull-based or pushed-based replication rule to replicate a set of artifacts together with their corresponding SBOM from a source Harbor registry to a destination Harbor registry..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/sbom-integration", "title": "SBOM Generation Capabilities", "description": "This page covers the capabilities of generating Software Bill of Materials (SBOM) in Harbor, including automatic and manual generation, deletion, and replication of SBOMs.", "has_code_examples": false, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:14:33", "type": "section_detail", "page_metadata": {"title": "\n      \nHarbor docs | SBOM Generation Capabilities\n\n    ", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:image:type": "image/png", "og:image:alt": "Harbor &ndash; SBOM Generation Capabilities project logo", "ogTitle": "Harbor &ndash; SBOM Generation Capabilities", "twitter:creator": "@project_harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:locale": "en_US", "og:site_name": "Harbor", "og:title": "Harbor &ndash; SBOM Generation Capabilities", "og:type": ["documentation", "article"], "twitter:card": "summary", "generator": "Hugo 0.74.0", "twitter:site": "@project_harbor", "ogLocale": "en_US", "favicon": "https://goharbor.io/favicon.svg", "og:url": "https://goharbor.io/docs/2.12.0/administration/sbom-integration/", "ogSiteName": "Harbor", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/sbom-integration/", "scrapeId": "5be8640e-fabf-4bdc-aee6-202da0a713a2", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/sbom-integration", "url": "https://goharbor.io/docs/2.12.0/administration/sbom-integration/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: What are some tips for using SBOM Generation Capabilities in harbor-2-12-0 effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nEnsure SBOM generation is enabled in the project configuration for automatic generation.\n\nUse the `GENERATE SBOM` button for manual generation when needed.\n\nDelete SBOMs carefully, as they can be removed individually or with their subject artifacts.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/sbom-integration", "title": "SBOM Generation Capabilities", "description": "This page covers the capabilities of generating Software Bill of Materials (SBOM) in Harbor, including automatic and manual generation, deletion, and replication of SBOMs.", "has_code_examples": false, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:14:33", "type": "best_practices", "page_metadata": {"title": "\n      \nHarbor docs | SBOM Generation Capabilities\n\n    ", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:image:type": "image/png", "og:image:alt": "Harbor &ndash; SBOM Generation Capabilities project logo", "ogTitle": "Harbor &ndash; SBOM Generation Capabilities", "twitter:creator": "@project_harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:locale": "en_US", "og:site_name": "Harbor", "og:title": "Harbor &ndash; SBOM Generation Capabilities", "og:type": ["documentation", "article"], "twitter:card": "summary", "generator": "Hugo 0.74.0", "twitter:site": "@project_harbor", "ogLocale": "en_US", "favicon": "https://goharbor.io/favicon.svg", "og:url": "https://goharbor.io/docs/2.12.0/administration/sbom-integration/", "ogSiteName": "Harbor", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/sbom-integration/", "scrapeId": "5be8640e-fabf-4bdc-aee6-202da0a713a2", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/sbom-integration", "url": "https://goharbor.io/docs/2.12.0/administration/sbom-integration/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you explain what Security Hub is in harbor-2-12-0?\n\nAssistant: Sure, I'd be happy to explain Security Hub in harbor-2-12-0.\n\n# Security Hub\n\nThe Security Hub provides administrators with a comprehensive and centralized overview of the present security status of artifacts stored within the Harbor registry.Here's a quick rundown of what this is about:\n\n## Accessing the Security Hub\n\nYou can access the Security Hub via the Harbor UI Navigation or direct URL:\n\n1. Method 1: Accessing the Security Hub via UI Navigation\n   - Login to Harbor as a user with admin permissions, locate and click on the “Administration” option in the Harbor UI.\n   - Within the Administration section, find and click on the “Interrogation Service” section.\n   - The Security Hub tab can be found on the “Interrogation Service” settings page. Click on it.\n2. Method 2: Accessing the Security Hub via Direct URL:\n   - Open your web browser, and enter the following URL in the address bar: `https://<harbor-domain>/harbor/interrogation-services/security-hub`.\n\nNote: Replace <harbor-domain> with the appropriate domain or IP address of your Harbor instance.\n\n## Total Vulnerabilities\n\nThe first card shows the total number of vulnerabilities found in the scanned images. The total number is broken up into severity groups with their respective occurrences.\n\n![Total Vulnerabilities](https://goharbor.io/docs/2.12.0/img/security-hub/total_vulnerabilities.png)\n\n## Top 5 Most Dangerous Artifacts\n\nThe second card shows the top 5 most dangerous artifacts found in scanned artifacts. It ranks the severe artifacts according to the number of vulnerabilities and their severity levels. Clicking on an artifact, the vulnerability table will query all vulnerabilities found in the selected artifact.\n\n![Most Dangerous Artifacts](https://goharbor.io/docs/2.12.0/img/security-hub/dangerous_artifacts.png)\n\n## Top 5 Most Dangerous CVEs\n\nThe third card shows the top 5 most dangerous CVEs found in scanned artifacts. it sorts the dangerous CVEs by the number of artifacts and their severity levels found in the artifacts. When click the CVE, the search vulnerabilities table displays all vulnerabilities found in artifacts.\n\n![Most Dangerous CVEs](https://goharbor.io/docs/2.12.0/img/security-hub/dangerous_cves.png)\n\n## Search Vulnerabilities\n\nThe search vulnerabilities panel allows you to search the vulnerabilities by the CVE ID, severity, project, repository, digest or tag etc. the search result will be shown in the table below.\n\n![Search Vulnerabilities](https://goharbor.io/docs/2.12.0/img/security-hub/search_vulnerabilities.png)\n\nSupported search fields:\n\n| Query condition | Description |\n| --- | --- |\n| CVE ID | Search vulnerability information by CVE ID, for performance consideration, cve_id condition is required to query the vulnerability info, support exact match |\n| Severity | Search vulnerability information by severity level, support exact match |\n| CVSS3 | Search vulnerability information by cvss v3 score range |\n| Project Name | Search vulnerability information by project name, support exact match |\n| Digest | Search vulnerability information by artifact digest, support exact match |\n| Repository Name | Search vulnerability information by repository name, support exact match |\n| Package | Search vulnerability information by package name, support exact match |\n| Tag | Search vulnerability information by tag name, support exact match |\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/security-hub", "title": "Security Hub", "description": "The Security Hub provides administrators with a comprehensive and centralized overview of the present security status of artifacts stored within the Harbor registry.", "has_code_examples": false, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:15:19", "type": "overview", "page_metadata": {"og:site_name": "Harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:image:type": "image/png", "og:url": "https://goharbor.io/docs/2.12.0/administration/security-hub/", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "twitter:creator": "@project_harbor", "og:image:alt": "Harbor &ndash; Security Hub project logo", "ogLocale": "en_US", "og:type": ["documentation", "article"], "favicon": "https://goharbor.io/favicon.svg", "og:title": "Harbor &ndash; Security Hub", "title": "\n      \nHarbor docs | Security Hub\n\n    ", "og:locale": "en_US", "ogTitle": "Harbor &ndash; Security Hub", "twitter:card": "summary", "twitter:site": "@project_harbor", "generator": "Hugo 0.74.0", "ogSiteName": "Harbor", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/security-hub/", "scrapeId": "c3f7a68b-de22-4c44-9b14-5300a8829982", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/security-hub", "url": "https://goharbor.io/docs/2.12.0/administration/security-hub/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I accessing the security hub in harbor-2-12-0?\n\nAssistant: To accessing the security hub in harbor-2-12-0, here's what you do:\nYou can access the Security Hub via the Harbor UI Navigation or direct URL:\n\n1. Method 1: Accessing the Security Hub via UI Navigation\n   - Login to Harbor as a user with admin permissions, locate and click on the “Administration” option in the Harbor UI.\n   - Within the Administration section, find and click on the “Interrogation Service” section.\n   - The Security Hub tab can be found on the “Interrogation Service” settings page. Click on it.\n2. Method 2: Accessing the Security Hub via Direct URL:\n   - Open your web browser, and enter the following URL in the address bar: `https://<harbor-domain>/harbor/interrogation-services/security-hub`.\n\nNote: Replace <harbor-domain> with the appropriate domain or IP address of your Harbor instance..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/security-hub", "title": "Security Hub", "description": "The Security Hub provides administrators with a comprehensive and centralized overview of the present security status of artifacts stored within the Harbor registry.", "has_code_examples": false, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:15:19", "type": "section_detail", "page_metadata": {"og:site_name": "Harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:image:type": "image/png", "og:url": "https://goharbor.io/docs/2.12.0/administration/security-hub/", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "twitter:creator": "@project_harbor", "og:image:alt": "Harbor &ndash; Security Hub project logo", "ogLocale": "en_US", "og:type": ["documentation", "article"], "favicon": "https://goharbor.io/favicon.svg", "og:title": "Harbor &ndash; Security Hub", "title": "\n      \nHarbor docs | Security Hub\n\n    ", "og:locale": "en_US", "ogTitle": "Harbor &ndash; Security Hub", "twitter:card": "summary", "twitter:site": "@project_harbor", "generator": "Hugo 0.74.0", "ogSiteName": "Harbor", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/security-hub/", "scrapeId": "c3f7a68b-de22-4c44-9b14-5300a8829982", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/security-hub", "url": "https://goharbor.io/docs/2.12.0/administration/security-hub/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I total vulnerabilities in harbor-2-12-0?\n\nAssistant: To total vulnerabilities in harbor-2-12-0, here's what you do:\nThe first card shows the total number of vulnerabilities found in the scanned images. The total number is broken up into severity groups with their respective occurrences.\n\n![Total Vulnerabilities](https://goharbor.io/docs/2.12.0/img/security-hub/total_vulnerabilities.png).\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/security-hub", "title": "Security Hub", "description": "The Security Hub provides administrators with a comprehensive and centralized overview of the present security status of artifacts stored within the Harbor registry.", "has_code_examples": false, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:15:19", "type": "section_detail", "page_metadata": {"og:site_name": "Harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:image:type": "image/png", "og:url": "https://goharbor.io/docs/2.12.0/administration/security-hub/", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "twitter:creator": "@project_harbor", "og:image:alt": "Harbor &ndash; Security Hub project logo", "ogLocale": "en_US", "og:type": ["documentation", "article"], "favicon": "https://goharbor.io/favicon.svg", "og:title": "Harbor &ndash; Security Hub", "title": "\n      \nHarbor docs | Security Hub\n\n    ", "og:locale": "en_US", "ogTitle": "Harbor &ndash; Security Hub", "twitter:card": "summary", "twitter:site": "@project_harbor", "generator": "Hugo 0.74.0", "ogSiteName": "Harbor", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/security-hub/", "scrapeId": "c3f7a68b-de22-4c44-9b14-5300a8829982", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/security-hub", "url": "https://goharbor.io/docs/2.12.0/administration/security-hub/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I top 5 most dangerous artifacts in harbor-2-12-0?\n\nAssistant: To top 5 most dangerous artifacts in harbor-2-12-0, here's what you do:\nThe second card shows the top 5 most dangerous artifacts found in scanned artifacts. It ranks the severe artifacts according to the number of vulnerabilities and their severity levels. Clicking on an artifact, the vulnerability table will query all vulnerabilities found in the selected artifact.\n\n![Most Dangerous Artifacts](https://goharbor.io/docs/2.12.0/img/security-hub/dangerous_artifacts.png).\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/security-hub", "title": "Security Hub", "description": "The Security Hub provides administrators with a comprehensive and centralized overview of the present security status of artifacts stored within the Harbor registry.", "has_code_examples": false, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:15:19", "type": "section_detail", "page_metadata": {"og:site_name": "Harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:image:type": "image/png", "og:url": "https://goharbor.io/docs/2.12.0/administration/security-hub/", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "twitter:creator": "@project_harbor", "og:image:alt": "Harbor &ndash; Security Hub project logo", "ogLocale": "en_US", "og:type": ["documentation", "article"], "favicon": "https://goharbor.io/favicon.svg", "og:title": "Harbor &ndash; Security Hub", "title": "\n      \nHarbor docs | Security Hub\n\n    ", "og:locale": "en_US", "ogTitle": "Harbor &ndash; Security Hub", "twitter:card": "summary", "twitter:site": "@project_harbor", "generator": "Hugo 0.74.0", "ogSiteName": "Harbor", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/security-hub/", "scrapeId": "c3f7a68b-de22-4c44-9b14-5300a8829982", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/security-hub", "url": "https://goharbor.io/docs/2.12.0/administration/security-hub/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I top 5 most dangerous cves in harbor-2-12-0?\n\nAssistant: To top 5 most dangerous cves in harbor-2-12-0, here's what you do:\nThe third card shows the top 5 most dangerous CVEs found in scanned artifacts. it sorts the dangerous CVEs by the number of artifacts and their severity levels found in the artifacts. When click the CVE, the search vulnerabilities table displays all vulnerabilities found in artifacts.\n\n![Most Dangerous CVEs](https://goharbor.io/docs/2.12.0/img/security-hub/dangerous_cves.png).\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/security-hub", "title": "Security Hub", "description": "The Security Hub provides administrators with a comprehensive and centralized overview of the present security status of artifacts stored within the Harbor registry.", "has_code_examples": false, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:15:19", "type": "section_detail", "page_metadata": {"og:site_name": "Harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:image:type": "image/png", "og:url": "https://goharbor.io/docs/2.12.0/administration/security-hub/", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "twitter:creator": "@project_harbor", "og:image:alt": "Harbor &ndash; Security Hub project logo", "ogLocale": "en_US", "og:type": ["documentation", "article"], "favicon": "https://goharbor.io/favicon.svg", "og:title": "Harbor &ndash; Security Hub", "title": "\n      \nHarbor docs | Security Hub\n\n    ", "og:locale": "en_US", "ogTitle": "Harbor &ndash; Security Hub", "twitter:card": "summary", "twitter:site": "@project_harbor", "generator": "Hugo 0.74.0", "ogSiteName": "Harbor", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/security-hub/", "scrapeId": "c3f7a68b-de22-4c44-9b14-5300a8829982", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/security-hub", "url": "https://goharbor.io/docs/2.12.0/administration/security-hub/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I search vulnerabilities in harbor-2-12-0?\n\nAssistant: To search vulnerabilities in harbor-2-12-0, here's what you do:\nThe search vulnerabilities panel allows you to search the vulnerabilities by the CVE ID, severity, project, repository, digest or tag etc. the search result will be shown in the table below.\n\n![Search Vulnerabilities](https://goharbor.io/docs/2.12.0/img/security-hub/search_vulnerabilities.png)\n\nSupported search fields:\n\n| Query condition | Description |\n| --- | --- |\n| CVE ID | Search vulnerability information by CVE ID, for performance consideration, cve_id condition is required to query the vulnerability info, support exact match |\n| Severity | Search vulnerability information by severity level, support exact match |\n| CVSS3 | Search vulnerability information by cvss v3 score range |\n| Project Name | Search vulnerability information by project name, support exact match |\n| Digest | Search vulnerability information by artifact digest, support exact match |\n| Repository Name | Search vulnerability information by repository name, support exact match |\n| Package | Search vulnerability information by package name, support exact match |\n| Tag | Search vulnerability information by tag name, support exact match |.\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/security-hub", "title": "Security Hub", "description": "The Security Hub provides administrators with a comprehensive and centralized overview of the present security status of artifacts stored within the Harbor registry.", "has_code_examples": false, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:15:19", "type": "section_detail", "page_metadata": {"og:site_name": "Harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:image:type": "image/png", "og:url": "https://goharbor.io/docs/2.12.0/administration/security-hub/", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "twitter:creator": "@project_harbor", "og:image:alt": "Harbor &ndash; Security Hub project logo", "ogLocale": "en_US", "og:type": ["documentation", "article"], "favicon": "https://goharbor.io/favicon.svg", "og:title": "Harbor &ndash; Security Hub", "title": "\n      \nHarbor docs | Security Hub\n\n    ", "og:locale": "en_US", "ogTitle": "Harbor &ndash; Security Hub", "twitter:card": "summary", "twitter:site": "@project_harbor", "generator": "Hugo 0.74.0", "ogSiteName": "Harbor", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/security-hub/", "scrapeId": "c3f7a68b-de22-4c44-9b14-5300a8829982", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/security-hub", "url": "https://goharbor.io/docs/2.12.0/administration/security-hub/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: What are some tips for using Security Hub in harbor-2-12-0 effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nEnsure you have admin permissions to access the Security Hub via UI Navigation.\n\nUse the direct URL method for quick access to the Security Hub.\n\nReplace <harbor-domain> with the correct domain or IP address of your Harbor instance when using the direct URL.\n\nUtilize the search vulnerabilities panel effectively by using supported search fields for precise results.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/security-hub", "title": "Security Hub", "description": "The Security Hub provides administrators with a comprehensive and centralized overview of the present security status of artifacts stored within the Harbor registry.", "has_code_examples": false, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:15:19", "type": "best_practices", "page_metadata": {"og:site_name": "Harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:image:type": "image/png", "og:url": "https://goharbor.io/docs/2.12.0/administration/security-hub/", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "twitter:creator": "@project_harbor", "og:image:alt": "Harbor &ndash; Security Hub project logo", "ogLocale": "en_US", "og:type": ["documentation", "article"], "favicon": "https://goharbor.io/favicon.svg", "og:title": "Harbor &ndash; Security Hub", "title": "\n      \nHarbor docs | Security Hub\n\n    ", "og:locale": "en_US", "ogTitle": "Harbor &ndash; Security Hub", "twitter:card": "summary", "twitter:site": "@project_harbor", "generator": "Hugo 0.74.0", "ogSiteName": "Harbor", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/security-hub/", "scrapeId": "c3f7a68b-de22-4c44-9b14-5300a8829982", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/security-hub", "url": "https://goharbor.io/docs/2.12.0/administration/security-hub/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you explain what Import Vulnerability Data to an Offline Harbor instance is in harbor-2-12-0?\n\nAssistant: Sure, I'd be happy to explain Import Vulnerability Data to an Offline Harbor instance in harbor-2-12-0.\n\n# Import Vulnerability Data to an Offline Harbor instance\n\nThis page provides instructions on how to import vulnerability data into an offline Harbor instance, including preparation steps, database dumping, and data importing processes.Here's a quick rundown of what this is about:\n\n## Preparation\n\n- You have an instance of Clair that has an internet connection. If you have another instance of Harbor that has internet access, this also works.\n\n- Check whether your Clair instance has already updated its vulnerability database to the latest version.\n\n1. Use `docker ps` to find out the container ID of the Clair service.\n2. Run `docker logs <container_id>` to check the log of the Clair container. If you are using Harbor you can find the latest Clair logs under `/var/log/harbor/2017-xx-xx/clair.log`.\n3. Look for logs that look like the following:\n\n```fallback\nJul 3 20:40:45 172.18.0.1 clair[3516]: {\"Event\":\"finished fetching\",\"Level\":\"info\",\"Location\":\"updater.go:227\",\"Time\":\"2017-07-04 03:40:45.890364\",\"updater name\":\"rhel\"}\nJul 3 20:40:46 172.18.0.1 clair[3516]: {\"Event\":\"finished fetching\",\"Level\":\"info\",\"Location\":\"updater.go:227\",\"Time\":\"2017-07-04 03:40:46.768924\",\"updater name\":\"alpine\"}\nJul 3 20:40:47 172.18.0.1 clair[3516]: {\"Event\":\"finished fetching\",\"Level\":\"info\",\"Location\":\"updater.go:227\",\"Time\":\"2017-07-04 03:40:47.190982\",\"updater name\":\"oracle\"}\nJul 3 20:41:07 172.18.0.1 clair[3516]: {\"Event\":\"Debian buster is not mapped to any version number (eg. Jessie->8). Please update me.\",\"Level\":\"warning\",\"Location\":\"debian.go:128\",\"Time\":\"2017-07-04 03:41:07.833720\"}\nJul 3 20:41:07 172.18.0.1 clair[3516]: {\"Event\":\"finished fetching\",\"Level\":\"info\",\"Location\":\"updater.go:227\",\"Time\":\"2017-07-04 03:41:07.833975\",\"updater name\":\"debian\"}\nJul 4 00:26:17 172.18.0.1 clair[3516]: {\"Event\":\"finished fetching\",\"Level\":\"info\",\"Location\":\"updater.go:227\",\"Time\":\"2017-07-04 07:26:17.596986\",\"updater name\":\"ubuntu\"}\nJul 4 00:26:18 172.18.0.1 clair[3516]: {\"Event\":\"adding metadata to vulnerabilities\",\"Level\":\"info\",\"Location\":\"updater.go:253\",\"Time\":\"2017-07-04 07:26:18.060810\"}\nJul 4 00:38:05 172.18.0.1 clair[3516]: {\"Event\":\"update finished\",\"Level\":\"info\",\"Location\":\"updater.go:198\",\"Time\":\"2017-07-04 07:38:05.251580\"}\n```\n\nThe phrase `finished fetching` indicates that Clair has finished a round of vulnerability updates from an endpoint. Make sure all of the `rhel`, `alpine`, `oracle`, `debian`, and `ubuntu` endpoints are updated correctly. If they have not, wait for Clair to get the data.\n\n## Dump Vulnerability Data\n\n1. Log in to the host, that is connected to Internet, on which the Postgres Clair database is running.\n\n2. Dump Clair’s vulnerability database by running the following commands.\n\nThe container name `clair-db` is a placeholder for the database container used by the internet-connected instance of Clair.\n\n```shell\n$ docker exec clair-db /bin/sh -c  \"pg_dump -U postgres -a -t feature -t keyvalue -t namespace -t schema_migrations -t vulnerability -t vulnerability_fixedin_feature\" > vulnerability.sql\n$ docker exec clair-db /bin/sh -c \"pg_dump -U postgres -c -s\" > clear.sql\n```\n\nThe files `vulnerability.sql` and `clear.sql` are generated.\n\n## Back Up the Harbor Clair Database\n\nBefore importing the data, it is strongly recommended to back up the Clair database in Harbor.\n\n```shell\ndocker exec harbor-db /bin/sh -c  \"pg_dump -U postgres -c\" > all.sql\n```\n\n## Update the Harbor Clair Database\n\n1. Copy the `vulnerability.sql` and `clear.sql` files to the host on which Harbor is running.\n\n2. Run the following commands to import the data to the Harbor Clair database:\n\n```shell\ndocker exec -i harbor-db psql -U postgres < clear.sql\ndocker exec -i harbor-db psql -U postgres < vulnerability.sql\n```\n\n## Rescan the Images\n\nAfter importing the data, trigger the scanning process in the Harbor interface. For information about running a scan, see [Scan All Artifacts](https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/scan-all-artifacts/).\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/import-vulnerability-data", "title": "Import Vulnerability Data to an Offline Harbor instance", "description": "This page provides instructions on how to import vulnerability data into an offline Harbor instance, including preparation steps, database dumping, and data importing processes.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:19:11", "type": "overview", "page_metadata": {"og:url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/import-vulnerability-data/", "og:image:alt": "Harbor &ndash; Import Vulnerability Data to an Offline Harbor instance project logo", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "favicon": "https://goharbor.io/favicon.svg", "ogSiteName": "Harbor", "ogLocale": "en_US", "generator": "Hugo 0.74.0", "ogTitle": "Harbor &ndash; Import Vulnerability Data to an Offline Harbor instance", "og:type": ["documentation", "article"], "og:title": "Harbor &ndash; Import Vulnerability Data to an Offline Harbor instance", "og:locale": "en_US", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:image:type": "image/png", "og:site_name": "Harbor", "title": "\n      \nHarbor docs | Import Vulnerability Data to an Offline Harbor instance\n\n    ", "twitter:card": "summary", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/import-vulnerability-data/", "twitter:site": "@project_harbor", "twitter:creator": "@project_harbor", "scrapeId": "6eaf4ff0-a7f4-4e58-93e6-14210cc0b13a", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/import-vulnerability-data", "url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/import-vulnerability-data/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I preparation in harbor-2-12-0?\n\nAssistant: To preparation in harbor-2-12-0, here's what you do:\n- You have an instance of Clair that has an internet connection. If you have another instance of Harbor that has internet access, this also works.\n\n- Check whether your Clair instance has already updated its vulnerability database to the latest version.\n\n1. Use `docker ps` to find out the container ID of the Clair service.\n2. Run `docker logs <container_id>` to check the log of the Clair container. If you are using Harbor you can find the latest Clair logs under `/var/log/harbor/2017-xx-xx/clair.log`.\n3. Look for logs that look like the following:\n\n```fallback\nJul 3 20:40:45 172.18.0.1 clair[3516]: {\"Event\":\"finished fetching\",\"Level\":\"info\",\"Location\":\"updater.go:227\",\"Time\":\"2017-07-04 03:40:45.890364\",\"updater name\":\"rhel\"}\nJul 3 20:40:46 172.18.0.1 clair[3516]: {\"Event\":\"finished fetching\",\"Level\":\"info\",\"Location\":\"updater.go:227\",\"Time\":\"2017-07-04 03:40:46.768924\",\"updater name\":\"alpine\"}\nJul 3 20:40:47 172.18.0.1 clair[3516]: {\"Event\":\"finished fetching\",\"Level\":\"info\",\"Location\":\"updater.go:227\",\"Time\":\"2017-07-04 03:40:47.190982\",\"updater name\":\"oracle\"}\nJul 3 20:41:07 172.18.0.1 clair[3516]: {\"Event\":\"Debian buster is not mapped to any version number (eg. Jessie->8). Please update me.\",\"Level\":\"warning\",\"Location\":\"debian.go:128\",\"Time\":\"2017-07-04 03:41:07.833720\"}\nJul 3 20:41:07 172.18.0.1 clair[3516]: {\"Event\":\"finished fetching\",\"Level\":\"info\",\"Location\":\"updater.go:227\",\"Time\":\"2017-07-04 03:41:07.833975\",\"updater name\":\"debian\"}\nJul 4 00:26:17 172.18.0.1 clair[3516]: {\"Event\":\"finished fetching\",\"Level\":\"info\",\"Location\":\"updater.go:227\",\"Time\":\"2017-07-04 07:26:17.596986\",\"updater name\":\"ubuntu\"}\nJul 4 00:26:18 172.18.0.1 clair[3516]: {\"Event\":\"adding metadata to vulnerabilities\",\"Level\":\"info\",\"Location\":\"updater.go:253\",\"Time\":\"2017-07-04 07:26:18.060810\"}\nJul 4 00:38:05 172.18.0.1 clair[3516]: {\"Event\":\"update finished\",\"Level\":\"info\",\"Location\":\"updater.go:198\",\"Time\":\"2017-07-04 07:38:05.251580\"}\n```\n\nThe phrase `finished fetching` indicates that Clair has finished a round of vulnerability updates from an endpoint. Make sure all of the `rhel`, `alpine`, `oracle`, `debian`, and `ubuntu` endpoints are updated correctly. If they have not, wait for Clair to get the data..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/import-vulnerability-data", "title": "Import Vulnerability Data to an Offline Harbor instance", "description": "This page provides instructions on how to import vulnerability data into an offline Harbor instance, including preparation steps, database dumping, and data importing processes.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:19:11", "type": "section_detail", "page_metadata": {"og:url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/import-vulnerability-data/", "og:image:alt": "Harbor &ndash; Import Vulnerability Data to an Offline Harbor instance project logo", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "favicon": "https://goharbor.io/favicon.svg", "ogSiteName": "Harbor", "ogLocale": "en_US", "generator": "Hugo 0.74.0", "ogTitle": "Harbor &ndash; Import Vulnerability Data to an Offline Harbor instance", "og:type": ["documentation", "article"], "og:title": "Harbor &ndash; Import Vulnerability Data to an Offline Harbor instance", "og:locale": "en_US", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:image:type": "image/png", "og:site_name": "Harbor", "title": "\n      \nHarbor docs | Import Vulnerability Data to an Offline Harbor instance\n\n    ", "twitter:card": "summary", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/import-vulnerability-data/", "twitter:site": "@project_harbor", "twitter:creator": "@project_harbor", "scrapeId": "6eaf4ff0-a7f4-4e58-93e6-14210cc0b13a", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/import-vulnerability-data", "url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/import-vulnerability-data/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I dump vulnerability data in harbor-2-12-0?\n\nAssistant: To dump vulnerability data in harbor-2-12-0, here's what you do:\n1. Log in to the host, that is connected to Internet, on which the Postgres Clair database is running.\n\n2. Dump Clair’s vulnerability database by running the following commands.\n\nThe container name `clair-db` is a placeholder for the database container used by the internet-connected instance of Clair.\n\n```shell\n$ docker exec clair-db /bin/sh -c  \"pg_dump -U postgres -a -t feature -t keyvalue -t namespace -t schema_migrations -t vulnerability -t vulnerability_fixedin_feature\" > vulnerability.sql\n$ docker exec clair-db /bin/sh -c \"pg_dump -U postgres -c -s\" > clear.sql\n```\n\nThe files `vulnerability.sql` and `clear.sql` are generated..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/import-vulnerability-data", "title": "Import Vulnerability Data to an Offline Harbor instance", "description": "This page provides instructions on how to import vulnerability data into an offline Harbor instance, including preparation steps, database dumping, and data importing processes.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:19:11", "type": "section_detail", "page_metadata": {"og:url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/import-vulnerability-data/", "og:image:alt": "Harbor &ndash; Import Vulnerability Data to an Offline Harbor instance project logo", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "favicon": "https://goharbor.io/favicon.svg", "ogSiteName": "Harbor", "ogLocale": "en_US", "generator": "Hugo 0.74.0", "ogTitle": "Harbor &ndash; Import Vulnerability Data to an Offline Harbor instance", "og:type": ["documentation", "article"], "og:title": "Harbor &ndash; Import Vulnerability Data to an Offline Harbor instance", "og:locale": "en_US", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:image:type": "image/png", "og:site_name": "Harbor", "title": "\n      \nHarbor docs | Import Vulnerability Data to an Offline Harbor instance\n\n    ", "twitter:card": "summary", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/import-vulnerability-data/", "twitter:site": "@project_harbor", "twitter:creator": "@project_harbor", "scrapeId": "6eaf4ff0-a7f4-4e58-93e6-14210cc0b13a", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/import-vulnerability-data", "url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/import-vulnerability-data/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I back up the harbor clair database in harbor-2-12-0?\n\nAssistant: To back up the harbor clair database in harbor-2-12-0, here's what you do:\nBefore importing the data, it is strongly recommended to back up the Clair database in Harbor.\n\n```shell\ndocker exec harbor-db /bin/sh -c  \"pg_dump -U postgres -c\" > all.sql\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/import-vulnerability-data", "title": "Import Vulnerability Data to an Offline Harbor instance", "description": "This page provides instructions on how to import vulnerability data into an offline Harbor instance, including preparation steps, database dumping, and data importing processes.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:19:11", "type": "section_detail", "page_metadata": {"og:url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/import-vulnerability-data/", "og:image:alt": "Harbor &ndash; Import Vulnerability Data to an Offline Harbor instance project logo", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "favicon": "https://goharbor.io/favicon.svg", "ogSiteName": "Harbor", "ogLocale": "en_US", "generator": "Hugo 0.74.0", "ogTitle": "Harbor &ndash; Import Vulnerability Data to an Offline Harbor instance", "og:type": ["documentation", "article"], "og:title": "Harbor &ndash; Import Vulnerability Data to an Offline Harbor instance", "og:locale": "en_US", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:image:type": "image/png", "og:site_name": "Harbor", "title": "\n      \nHarbor docs | Import Vulnerability Data to an Offline Harbor instance\n\n    ", "twitter:card": "summary", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/import-vulnerability-data/", "twitter:site": "@project_harbor", "twitter:creator": "@project_harbor", "scrapeId": "6eaf4ff0-a7f4-4e58-93e6-14210cc0b13a", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/import-vulnerability-data", "url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/import-vulnerability-data/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I update the harbor clair database in harbor-2-12-0?\n\nAssistant: To update the harbor clair database in harbor-2-12-0, here's what you do:\n1. Copy the `vulnerability.sql` and `clear.sql` files to the host on which Harbor is running.\n\n2. Run the following commands to import the data to the Harbor Clair database:\n\n```shell\ndocker exec -i harbor-db psql -U postgres < clear.sql\ndocker exec -i harbor-db psql -U postgres < vulnerability.sql\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/import-vulnerability-data", "title": "Import Vulnerability Data to an Offline Harbor instance", "description": "This page provides instructions on how to import vulnerability data into an offline Harbor instance, including preparation steps, database dumping, and data importing processes.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:19:11", "type": "section_detail", "page_metadata": {"og:url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/import-vulnerability-data/", "og:image:alt": "Harbor &ndash; Import Vulnerability Data to an Offline Harbor instance project logo", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "favicon": "https://goharbor.io/favicon.svg", "ogSiteName": "Harbor", "ogLocale": "en_US", "generator": "Hugo 0.74.0", "ogTitle": "Harbor &ndash; Import Vulnerability Data to an Offline Harbor instance", "og:type": ["documentation", "article"], "og:title": "Harbor &ndash; Import Vulnerability Data to an Offline Harbor instance", "og:locale": "en_US", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:image:type": "image/png", "og:site_name": "Harbor", "title": "\n      \nHarbor docs | Import Vulnerability Data to an Offline Harbor instance\n\n    ", "twitter:card": "summary", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/import-vulnerability-data/", "twitter:site": "@project_harbor", "twitter:creator": "@project_harbor", "scrapeId": "6eaf4ff0-a7f4-4e58-93e6-14210cc0b13a", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/import-vulnerability-data", "url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/import-vulnerability-data/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I rescan the images in harbor-2-12-0?\n\nAssistant: To rescan the images in harbor-2-12-0, here's what you do:\nAfter importing the data, trigger the scanning process in the Harbor interface. For information about running a scan, see [Scan All Artifacts](https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/scan-all-artifacts/)..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/import-vulnerability-data", "title": "Import Vulnerability Data to an Offline Harbor instance", "description": "This page provides instructions on how to import vulnerability data into an offline Harbor instance, including preparation steps, database dumping, and data importing processes.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:19:11", "type": "section_detail", "page_metadata": {"og:url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/import-vulnerability-data/", "og:image:alt": "Harbor &ndash; Import Vulnerability Data to an Offline Harbor instance project logo", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "favicon": "https://goharbor.io/favicon.svg", "ogSiteName": "Harbor", "ogLocale": "en_US", "generator": "Hugo 0.74.0", "ogTitle": "Harbor &ndash; Import Vulnerability Data to an Offline Harbor instance", "og:type": ["documentation", "article"], "og:title": "Harbor &ndash; Import Vulnerability Data to an Offline Harbor instance", "og:locale": "en_US", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:image:type": "image/png", "og:site_name": "Harbor", "title": "\n      \nHarbor docs | Import Vulnerability Data to an Offline Harbor instance\n\n    ", "twitter:card": "summary", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/import-vulnerability-data/", "twitter:site": "@project_harbor", "twitter:creator": "@project_harbor", "scrapeId": "6eaf4ff0-a7f4-4e58-93e6-14210cc0b13a", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/import-vulnerability-data", "url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/import-vulnerability-data/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you give me some code examples for Import Vulnerability Data to an Offline Harbor instance in harbor-2-12-0?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Check Clair Logs**:\n\n```yaml\ndocker logs <container_id>\n```\n\nThis snippet shows you how to check clair logs, which is an important aspect of import vulnerability data to an offline harbor instance.\n\n**Dump Clair Vulnerability Database**:\n\n```yaml\ndocker exec clair-db /bin/sh -c  \"pg_dump -U postgres -a -t feature -t keyvalue -t namespace -t schema_migrations -t vulnerability -t vulnerability_fixedin_feature\" > vulnerability.sql\n```\n\nThis snippet shows you how to dump clair vulnerability database, which is an important aspect of import vulnerability data to an offline harbor instance.\n\n**Dump Clair Schema**:\n\n```yaml\ndocker exec clair-db /bin/sh -c \"pg_dump -U postgres -c -s\" > clear.sql\n```\n\nThis snippet shows you how to dump clair schema, which is an important aspect of import vulnerability data to an offline harbor instance.\n\n**Backup Harbor Clair Database**:\n\n```yaml\ndocker exec harbor-db /bin/sh -c  \"pg_dump -U postgres -c\" > all.sql\n```\n\nThis snippet shows you how to backup harbor clair database, which is an important aspect of import vulnerability data to an offline harbor instance.\n\n**Import Clear SQL to Harbor**:\n\n```yaml\ndocker exec -i harbor-db psql -U postgres < clear.sql\n```\n\nThis snippet shows you how to import clear sql to harbor, which is an important aspect of import vulnerability data to an offline harbor instance.\n\n**Import Vulnerability SQL to Harbor**:\n\n```yaml\ndocker exec -i harbor-db psql -U postgres < vulnerability.sql\n```\n\nThis snippet shows you how to import vulnerability sql to harbor, which is an important aspect of import vulnerability data to an offline harbor instance.\n\n", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/import-vulnerability-data", "title": "Import Vulnerability Data to an Offline Harbor instance", "description": "This page provides instructions on how to import vulnerability data into an offline Harbor instance, including preparation steps, database dumping, and data importing processes.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:19:11", "type": "code_examples", "page_metadata": {"og:url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/import-vulnerability-data/", "og:image:alt": "Harbor &ndash; Import Vulnerability Data to an Offline Harbor instance project logo", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "favicon": "https://goharbor.io/favicon.svg", "ogSiteName": "Harbor", "ogLocale": "en_US", "generator": "Hugo 0.74.0", "ogTitle": "Harbor &ndash; Import Vulnerability Data to an Offline Harbor instance", "og:type": ["documentation", "article"], "og:title": "Harbor &ndash; Import Vulnerability Data to an Offline Harbor instance", "og:locale": "en_US", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:image:type": "image/png", "og:site_name": "Harbor", "title": "\n      \nHarbor docs | Import Vulnerability Data to an Offline Harbor instance\n\n    ", "twitter:card": "summary", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/import-vulnerability-data/", "twitter:site": "@project_harbor", "twitter:creator": "@project_harbor", "scrapeId": "6eaf4ff0-a7f4-4e58-93e6-14210cc0b13a", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/import-vulnerability-data", "url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/import-vulnerability-data/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: What are some tips for using Import Vulnerability Data to an Offline Harbor instance in harbor-2-12-0 effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nIt is highly recommended to configure Trivy as your default scanner instead of Clair in Harbor v2.2 and later.\n\nAlways back up the Clair database in Harbor before importing new data.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/import-vulnerability-data", "title": "Import Vulnerability Data to an Offline Harbor instance", "description": "This page provides instructions on how to import vulnerability data into an offline Harbor instance, including preparation steps, database dumping, and data importing processes.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:19:11", "type": "best_practices", "page_metadata": {"og:url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/import-vulnerability-data/", "og:image:alt": "Harbor &ndash; Import Vulnerability Data to an Offline Harbor instance project logo", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "favicon": "https://goharbor.io/favicon.svg", "ogSiteName": "Harbor", "ogLocale": "en_US", "generator": "Hugo 0.74.0", "ogTitle": "Harbor &ndash; Import Vulnerability Data to an Offline Harbor instance", "og:type": ["documentation", "article"], "og:title": "Harbor &ndash; Import Vulnerability Data to an Offline Harbor instance", "og:locale": "en_US", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:image:type": "image/png", "og:site_name": "Harbor", "title": "\n      \nHarbor docs | Import Vulnerability Data to an Offline Harbor instance\n\n    ", "twitter:card": "summary", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/import-vulnerability-data/", "twitter:site": "@project_harbor", "twitter:creator": "@project_harbor", "scrapeId": "6eaf4ff0-a7f4-4e58-93e6-14210cc0b13a", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/import-vulnerability-data", "url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/import-vulnerability-data/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you explain what Job Service Dashboard is in harbor-2-12-0?\n\nAssistant: Sure, I'd be happy to explain Job Service Dashboard in harbor-2-12-0.\n\n# Job Service Dashboard\n\nThe job service dashboard is a web-based interface that allows you to view and manage jobs that are running in the Harbor job service. It is available at `https://<harbor_url>/harbor/job-service-dashboard/`. You can use the dashboard to view the status of job queues, the schedule of jobs, and the status of the job service pools and workers. you can also use it to stop pending or running jobs, or pause or resume the job service queue.Here's a quick rundown of what this is about:\n\n## View Job Service Queue Status\n\n1. Log in to the Harbor Web interface with an account that has Harbor system administrator privileges.\n2. Expand **Administration**, and select **Job Service Dashboard**.\n\nIn the job service dashboard, you can view the status of the job service queue, the job service pools, and the job service workers.\n\n![Job service dashboard](https://goharbor.io/docs/2.12.0/img/jobservice-dashboard/jobservice-dashboard.png)\n\nThe following table describes the information that is displayed in the dashboard.\n\n| Field | Description | Actions |\n| :-- | :-- | :-- |\n| **Pending Jobs In Queues** | The job service queue is a FIFO queue that stores jobs to be executed. Total displays the count of queue type, and the top 2 queues | **Stop All**: stop all jobs in all queues |\n| **Schedules** | The job service pool is a pool of workers that execute jobs, display the total count of schedules and show its status | **Pause All**: Pause all running job schedule, **Resume All**: Resume all paused job schedule |\n| **Workers** | The job service worker is a goroutine that executes jobs, it displays the free/total workers | **Free All**: stop the execution of running jobs to free all workers |\n\n## View Job Queue Details\n\nIn the job service dashboard, click the **Job Queues** tab.\n\n![Job queues](https://goharbor.io/docs/2.12.0/img/jobservice-dashboard/jobqueues.png)\n\nThe **Job Queues** tab displays the detail of job queues. The following table describes the information that is displayed in the **Job Queues** tab.\n\n| Field | Description |\n| :-- | :-- |\n| **Job Type** | The name of the job queue. |\n| **Pending Count** | The number of jobs that are waiting to be executed in the queue. |\n| **Latency** | The waiting time of the current queue, it indicate how long tasks in the queue have already waited. |\n| **Paused** | The paused status of job queue. |\n\nActions for each job queue:\n\n- Click the **Stop** button to stop all jobs in the queue. it will remove all jobs from the queue and mark their status as “Stopped”.\n- Click the **Pause** button to pause the job queue.\n- Click the **Resume** button to resume the job queue.\n\nJob Types\n\n| Type Name | Description |\n| :-- | :-- |\n| `GARBAGE_COLLECTION` | Job queue for garbage collection. |\n| `IMAGE_SCAN` | Job queue for image scan. |\n| `P2P_PREHEAT` | Job queue for p2p preheat related task. |\n| `PURGE_AUDIT` | Job queue for purge audit log. |\n| `REPLICATION` | Job queue for image replication. |\n| `RETENTION` | Job queue for tag retention. |\n| `SCAN_DATA_EXPORT` | Job queue for export CVE data. |\n| `SCHEDULER` | Job queue for all periodical tasks, if it is paused, all periodical schedule will not be triggered. |\n| `SLACK` | Job queue for sending slack message. |\n| `SYSTEM_ARTIFACT_CLEANUP` | Job queue for cleanup system artifact, used by export CVE feature. |\n| `WEBHOOK` | Job queue for web hook task. |\n\n**NOTE** The **Pause** and **Resume** operation just stop the worker from consuming jobs in the job queue, it does not stop the job task submission, neither change job status in the job queue.\n\n## View Schedule Details\n\nIn the job service dashboard, click the **Schedules** tab.\n\n![Schedules](https://goharbor.io/docs/2.12.0/img/jobservice-dashboard/schedules.png)\n\nThe **Schedules** tab displays the details of the job schedules. The following table describes the information that is displayed in the Schedules tab.\n\n| Field | Description |\n| :-- | :-- |\n| **ID** | The ID of the job schedule. |\n| **Vendor Type** | The vendor type of the job service schedule. |\n| **Vendor ID** | The vendor id of the job schedule. empty if there is no vendor id. |\n| **Cron** | The cron expression of the schedule. |\n| **Create Time** | The created time of the job schedule.\n\n## View Worker Details\n\nIn the job service dashboard, click the **Workers** tab.\n\n![Workers](https://goharbor.io/docs/2.12.0/img/jobservice-dashboard/workers.png)\n\nThe worker pools table displays the details of the worker pools. The following table describes the information that is displayed in the Workers tab. When you click a worker pool in the table, workes of this pool is displayed in the worker’s table.\n\n| Field | Description |\n| :-- | :-- |\n| **Worker Pool ID** | The ID of the worker pool. |\n| **PID** | The process the worker pool. |\n| **Start At** | The start time of the worker pool. |\n| **Heartbeat At** | The heartbeat time of the worker pool. |\n| **Concurrency** | The concurrency of worker pool. |\n\nThe worker’s table displays the details of the workers. The following table describes the information that is displayed in the Workers tab.\n\n| Field | Description |\n| :-- | :-- |\n| **Worker ID** | The ID of the worker. |\n| **Job Name** | The job name of the current job that the worker is executing. |\n| **Job ID** | The ID of the current job that the worker is executing. |\n| **Started At** | The start time of the current job that the worker is executing. |\n| **Checked In At** | The check in time of the current job that the worker is executing. |\n| **Logs** | The log of the current job that the worker is executing. |\n\nActions for workers:\n\n– Click the **Free** button to stop the execution of the current job that the worker is executing to free the worker. The stop operation takes several minutes to complete, it depends on the job type.\n– Click the link in the **Logs** column to view the log of the current job that the worker is executing.\n\n## Steps to Withdraw an Execution\n\nBecause an execution might contains one or many tasks, some of then might be in pending state, some of them might be in running state. Stop running tasks might not stop whole the execution. You can use the following steps to stop the overall execution.\n\n1. Go to the Harbor job service dashboard with an account that has Harbor system administrator privileges.\n2. Click the **Job Queues** tab, and click the **Stop** button to stop all jobs in the queue.\n3. Click the **Workers** tab, and click the **Free** button to stop the execution of the current job which the worker is working on to free the worker.\n4. Wait and check the execution status to become **Stopped**.\n\nSometimes, you don’t want to remove this scheduled task from job queue. To let workers to work on other types of jobs, you can pause/resume the job queue.\n\n1. Go to the Harbor job service dashboard with an account that has Harbor system administrator privileges.\n2. Click the **Job Queues** tab, and click the **Pause** button to pause all jobs in the queue.\n3. Wait the job service workers to work on other type of jobs.\n4. Click the **Resume** button to resume the job queue.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/jobservice-dashboard", "title": "Job Service Dashboard", "description": "The job service dashboard is a web-based interface that allows you to view and manage jobs that are running in the Harbor job service. It is available at `https://<harbor_url>/harbor/job-service-dashboard/`. You can use the dashboard to view the status of job queues, the schedule of jobs, and the status of the job service pools and workers. you can also use it to stop pending or running jobs, or pause or resume the job service queue.", "has_code_examples": false, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:19:52", "type": "overview", "page_metadata": {"og:image:type": "image/png", "ogTitle": "Harbor &ndash; Job Service Dashboard", "og:url": "https://goharbor.io/docs/2.12.0/administration/jobservice-dashboard/", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/jobservice-dashboard/", "og:site_name": "Harbor", "twitter:site": "@project_harbor", "generator": "Hugo 0.74.0", "favicon": "https://goharbor.io/favicon.svg", "og:image:alt": "Harbor &ndash; Job Service Dashboard project logo", "ogLocale": "en_US", "ogSiteName": "Harbor", "og:locale": "en_US", "og:type": ["documentation", "article"], "twitter:card": "summary", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "title": "\n      \nHarbor docs | Job Service Dashboard\n\n    ", "og:title": "Harbor &ndash; Job Service Dashboard", "twitter:creator": "@project_harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "scrapeId": "41715915-cc57-4386-be94-dc12a330545a", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/jobservice-dashboard", "url": "https://goharbor.io/docs/2.12.0/administration/jobservice-dashboard/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I view job service queue status in harbor-2-12-0?\n\nAssistant: To view job service queue status in harbor-2-12-0, here's what you do:\n1. Log in to the Harbor Web interface with an account that has Harbor system administrator privileges.\n2. Expand **Administration**, and select **Job Service Dashboard**.\n\nIn the job service dashboard, you can view the status of the job service queue, the job service pools, and the job service workers.\n\n![Job service dashboard](https://goharbor.io/docs/2.12.0/img/jobservice-dashboard/jobservice-dashboard.png)\n\nThe following table describes the information that is displayed in the dashboard.\n\n| Field | Description | Actions |\n| :-- | :-- | :-- |\n| **Pending Jobs In Queues** | The job service queue is a FIFO queue that stores jobs to be executed. Total displays the count of queue type, and the top 2 queues | **Stop All**: stop all jobs in all queues |\n| **Schedules** | The job service pool is a pool of workers that execute jobs, display the total count of schedules and show its status | **Pause All**: Pause all running job schedule, **Resume All**: Resume all paused job schedule |\n| **Workers** | The job service worker is a goroutine that executes jobs, it displays the free/total workers | **Free All**: stop the execution of running jobs to free all workers |.\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/jobservice-dashboard", "title": "Job Service Dashboard", "description": "The job service dashboard is a web-based interface that allows you to view and manage jobs that are running in the Harbor job service. It is available at `https://<harbor_url>/harbor/job-service-dashboard/`. You can use the dashboard to view the status of job queues, the schedule of jobs, and the status of the job service pools and workers. you can also use it to stop pending or running jobs, or pause or resume the job service queue.", "has_code_examples": false, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:19:52", "type": "section_detail", "page_metadata": {"og:image:type": "image/png", "ogTitle": "Harbor &ndash; Job Service Dashboard", "og:url": "https://goharbor.io/docs/2.12.0/administration/jobservice-dashboard/", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/jobservice-dashboard/", "og:site_name": "Harbor", "twitter:site": "@project_harbor", "generator": "Hugo 0.74.0", "favicon": "https://goharbor.io/favicon.svg", "og:image:alt": "Harbor &ndash; Job Service Dashboard project logo", "ogLocale": "en_US", "ogSiteName": "Harbor", "og:locale": "en_US", "og:type": ["documentation", "article"], "twitter:card": "summary", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "title": "\n      \nHarbor docs | Job Service Dashboard\n\n    ", "og:title": "Harbor &ndash; Job Service Dashboard", "twitter:creator": "@project_harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "scrapeId": "41715915-cc57-4386-be94-dc12a330545a", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/jobservice-dashboard", "url": "https://goharbor.io/docs/2.12.0/administration/jobservice-dashboard/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I view job queue details in harbor-2-12-0?\n\nAssistant: To view job queue details in harbor-2-12-0, here's what you do:\nIn the job service dashboard, click the **Job Queues** tab.\n\n![Job queues](https://goharbor.io/docs/2.12.0/img/jobservice-dashboard/jobqueues.png)\n\nThe **Job Queues** tab displays the detail of job queues. The following table describes the information that is displayed in the **Job Queues** tab.\n\n| Field | Description |\n| :-- | :-- |\n| **Job Type** | The name of the job queue. |\n| **Pending Count** | The number of jobs that are waiting to be executed in the queue. |\n| **Latency** | The waiting time of the current queue, it indicate how long tasks in the queue have already waited. |\n| **Paused** | The paused status of job queue. |\n\nActions for each job queue:\n\n- Click the **Stop** button to stop all jobs in the queue. it will remove all jobs from the queue and mark their status as “Stopped”.\n- Click the **Pause** button to pause the job queue.\n- Click the **Resume** button to resume the job queue.\n\nJob Types\n\n| Type Name | Description |\n| :-- | :-- |\n| `GARBAGE_COLLECTION` | Job queue for garbage collection. |\n| `IMAGE_SCAN` | Job queue for image scan. |\n| `P2P_PREHEAT` | Job queue for p2p preheat related task. |\n| `PURGE_AUDIT` | Job queue for purge audit log. |\n| `REPLICATION` | Job queue for image replication. |\n| `RETENTION` | Job queue for tag retention. |\n| `SCAN_DATA_EXPORT` | Job queue for export CVE data. |\n| `SCHEDULER` | Job queue for all periodical tasks, if it is paused, all periodical schedule will not be triggered. |\n| `SLACK` | Job queue for sending slack message. |\n| `SYSTEM_ARTIFACT_CLEANUP` | Job queue for cleanup system artifact, used by export CVE feature. |\n| `WEBHOOK` | Job queue for web hook task. |\n\n**NOTE** The **Pause** and **Resume** operation just stop the worker from consuming jobs in the job queue, it does not stop the job task submission, neither change job status in the job queue..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/jobservice-dashboard", "title": "Job Service Dashboard", "description": "The job service dashboard is a web-based interface that allows you to view and manage jobs that are running in the Harbor job service. It is available at `https://<harbor_url>/harbor/job-service-dashboard/`. You can use the dashboard to view the status of job queues, the schedule of jobs, and the status of the job service pools and workers. you can also use it to stop pending or running jobs, or pause or resume the job service queue.", "has_code_examples": false, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:19:52", "type": "section_detail", "page_metadata": {"og:image:type": "image/png", "ogTitle": "Harbor &ndash; Job Service Dashboard", "og:url": "https://goharbor.io/docs/2.12.0/administration/jobservice-dashboard/", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/jobservice-dashboard/", "og:site_name": "Harbor", "twitter:site": "@project_harbor", "generator": "Hugo 0.74.0", "favicon": "https://goharbor.io/favicon.svg", "og:image:alt": "Harbor &ndash; Job Service Dashboard project logo", "ogLocale": "en_US", "ogSiteName": "Harbor", "og:locale": "en_US", "og:type": ["documentation", "article"], "twitter:card": "summary", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "title": "\n      \nHarbor docs | Job Service Dashboard\n\n    ", "og:title": "Harbor &ndash; Job Service Dashboard", "twitter:creator": "@project_harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "scrapeId": "41715915-cc57-4386-be94-dc12a330545a", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/jobservice-dashboard", "url": "https://goharbor.io/docs/2.12.0/administration/jobservice-dashboard/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I view schedule details in harbor-2-12-0?\n\nAssistant: To view schedule details in harbor-2-12-0, here's what you do:\nIn the job service dashboard, click the **Schedules** tab.\n\n![Schedules](https://goharbor.io/docs/2.12.0/img/jobservice-dashboard/schedules.png)\n\nThe **Schedules** tab displays the details of the job schedules. The following table describes the information that is displayed in the Schedules tab.\n\n| Field | Description |\n| :-- | :-- |\n| **ID** | The ID of the job schedule. |\n| **Vendor Type** | The vendor type of the job service schedule. |\n| **Vendor ID** | The vendor id of the job schedule. empty if there is no vendor id. |\n| **Cron** | The cron expression of the schedule. |\n| **Create Time** | The created time of the job schedule..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/jobservice-dashboard", "title": "Job Service Dashboard", "description": "The job service dashboard is a web-based interface that allows you to view and manage jobs that are running in the Harbor job service. It is available at `https://<harbor_url>/harbor/job-service-dashboard/`. You can use the dashboard to view the status of job queues, the schedule of jobs, and the status of the job service pools and workers. you can also use it to stop pending or running jobs, or pause or resume the job service queue.", "has_code_examples": false, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:19:52", "type": "section_detail", "page_metadata": {"og:image:type": "image/png", "ogTitle": "Harbor &ndash; Job Service Dashboard", "og:url": "https://goharbor.io/docs/2.12.0/administration/jobservice-dashboard/", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/jobservice-dashboard/", "og:site_name": "Harbor", "twitter:site": "@project_harbor", "generator": "Hugo 0.74.0", "favicon": "https://goharbor.io/favicon.svg", "og:image:alt": "Harbor &ndash; Job Service Dashboard project logo", "ogLocale": "en_US", "ogSiteName": "Harbor", "og:locale": "en_US", "og:type": ["documentation", "article"], "twitter:card": "summary", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "title": "\n      \nHarbor docs | Job Service Dashboard\n\n    ", "og:title": "Harbor &ndash; Job Service Dashboard", "twitter:creator": "@project_harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "scrapeId": "41715915-cc57-4386-be94-dc12a330545a", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/jobservice-dashboard", "url": "https://goharbor.io/docs/2.12.0/administration/jobservice-dashboard/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I view worker details in harbor-2-12-0?\n\nAssistant: To view worker details in harbor-2-12-0, here's what you do:\nIn the job service dashboard, click the **Workers** tab.\n\n![Workers](https://goharbor.io/docs/2.12.0/img/jobservice-dashboard/workers.png)\n\nThe worker pools table displays the details of the worker pools. The following table describes the information that is displayed in the Workers tab. When you click a worker pool in the table, workes of this pool is displayed in the worker’s table.\n\n| Field | Description |\n| :-- | :-- |\n| **Worker Pool ID** | The ID of the worker pool. |\n| **PID** | The process the worker pool. |\n| **Start At** | The start time of the worker pool. |\n| **Heartbeat At** | The heartbeat time of the worker pool. |\n| **Concurrency** | The concurrency of worker pool. |\n\nThe worker’s table displays the details of the workers. The following table describes the information that is displayed in the Workers tab.\n\n| Field | Description |\n| :-- | :-- |\n| **Worker ID** | The ID of the worker. |\n| **Job Name** | The job name of the current job that the worker is executing. |\n| **Job ID** | The ID of the current job that the worker is executing. |\n| **Started At** | The start time of the current job that the worker is executing. |\n| **Checked In At** | The check in time of the current job that the worker is executing. |\n| **Logs** | The log of the current job that the worker is executing. |\n\nActions for workers:\n\n– Click the **Free** button to stop the execution of the current job that the worker is executing to free the worker. The stop operation takes several minutes to complete, it depends on the job type.\n– Click the link in the **Logs** column to view the log of the current job that the worker is executing..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/jobservice-dashboard", "title": "Job Service Dashboard", "description": "The job service dashboard is a web-based interface that allows you to view and manage jobs that are running in the Harbor job service. It is available at `https://<harbor_url>/harbor/job-service-dashboard/`. You can use the dashboard to view the status of job queues, the schedule of jobs, and the status of the job service pools and workers. you can also use it to stop pending or running jobs, or pause or resume the job service queue.", "has_code_examples": false, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:19:52", "type": "section_detail", "page_metadata": {"og:image:type": "image/png", "ogTitle": "Harbor &ndash; Job Service Dashboard", "og:url": "https://goharbor.io/docs/2.12.0/administration/jobservice-dashboard/", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/jobservice-dashboard/", "og:site_name": "Harbor", "twitter:site": "@project_harbor", "generator": "Hugo 0.74.0", "favicon": "https://goharbor.io/favicon.svg", "og:image:alt": "Harbor &ndash; Job Service Dashboard project logo", "ogLocale": "en_US", "ogSiteName": "Harbor", "og:locale": "en_US", "og:type": ["documentation", "article"], "twitter:card": "summary", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "title": "\n      \nHarbor docs | Job Service Dashboard\n\n    ", "og:title": "Harbor &ndash; Job Service Dashboard", "twitter:creator": "@project_harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "scrapeId": "41715915-cc57-4386-be94-dc12a330545a", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/jobservice-dashboard", "url": "https://goharbor.io/docs/2.12.0/administration/jobservice-dashboard/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I steps to withdraw an execution in harbor-2-12-0?\n\nAssistant: To steps to withdraw an execution in harbor-2-12-0, here's what you do:\nBecause an execution might contains one or many tasks, some of then might be in pending state, some of them might be in running state. Stop running tasks might not stop whole the execution. You can use the following steps to stop the overall execution.\n\n1. Go to the Harbor job service dashboard with an account that has Harbor system administrator privileges.\n2. Click the **Job Queues** tab, and click the **Stop** button to stop all jobs in the queue.\n3. Click the **Workers** tab, and click the **Free** button to stop the execution of the current job which the worker is working on to free the worker.\n4. Wait and check the execution status to become **Stopped**.\n\nSometimes, you don’t want to remove this scheduled task from job queue. To let workers to work on other types of jobs, you can pause/resume the job queue.\n\n1. Go to the Harbor job service dashboard with an account that has Harbor system administrator privileges.\n2. Click the **Job Queues** tab, and click the **Pause** button to pause all jobs in the queue.\n3. Wait the job service workers to work on other type of jobs.\n4. Click the **Resume** button to resume the job queue..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/jobservice-dashboard", "title": "Job Service Dashboard", "description": "The job service dashboard is a web-based interface that allows you to view and manage jobs that are running in the Harbor job service. It is available at `https://<harbor_url>/harbor/job-service-dashboard/`. You can use the dashboard to view the status of job queues, the schedule of jobs, and the status of the job service pools and workers. you can also use it to stop pending or running jobs, or pause or resume the job service queue.", "has_code_examples": false, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:19:52", "type": "section_detail", "page_metadata": {"og:image:type": "image/png", "ogTitle": "Harbor &ndash; Job Service Dashboard", "og:url": "https://goharbor.io/docs/2.12.0/administration/jobservice-dashboard/", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/jobservice-dashboard/", "og:site_name": "Harbor", "twitter:site": "@project_harbor", "generator": "Hugo 0.74.0", "favicon": "https://goharbor.io/favicon.svg", "og:image:alt": "Harbor &ndash; Job Service Dashboard project logo", "ogLocale": "en_US", "ogSiteName": "Harbor", "og:locale": "en_US", "og:type": ["documentation", "article"], "twitter:card": "summary", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "title": "\n      \nHarbor docs | Job Service Dashboard\n\n    ", "og:title": "Harbor &ndash; Job Service Dashboard", "twitter:creator": "@project_harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "scrapeId": "41715915-cc57-4386-be94-dc12a330545a", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/jobservice-dashboard", "url": "https://goharbor.io/docs/2.12.0/administration/jobservice-dashboard/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: What are some tips for using Job Service Dashboard in harbor-2-12-0 effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nLog in with an account that has Harbor system administrator privileges to access the Job Service Dashboard.\n\nUse the **Stop** button to stop all jobs in the queue and mark their status as 'Stopped'.\n\nUse the **Pause** and **Resume** buttons to manage job queues without removing scheduled tasks.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/jobservice-dashboard", "title": "Job Service Dashboard", "description": "The job service dashboard is a web-based interface that allows you to view and manage jobs that are running in the Harbor job service. It is available at `https://<harbor_url>/harbor/job-service-dashboard/`. You can use the dashboard to view the status of job queues, the schedule of jobs, and the status of the job service pools and workers. you can also use it to stop pending or running jobs, or pause or resume the job service queue.", "has_code_examples": false, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:19:52", "type": "best_practices", "page_metadata": {"og:image:type": "image/png", "ogTitle": "Harbor &ndash; Job Service Dashboard", "og:url": "https://goharbor.io/docs/2.12.0/administration/jobservice-dashboard/", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/jobservice-dashboard/", "og:site_name": "Harbor", "twitter:site": "@project_harbor", "generator": "Hugo 0.74.0", "favicon": "https://goharbor.io/favicon.svg", "og:image:alt": "Harbor &ndash; Job Service Dashboard project logo", "ogLocale": "en_US", "ogSiteName": "Harbor", "og:locale": "en_US", "og:type": ["documentation", "article"], "twitter:card": "summary", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "title": "\n      \nHarbor docs | Job Service Dashboard\n\n    ", "og:title": "Harbor &ndash; Job Service Dashboard", "twitter:creator": "@project_harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "scrapeId": "41715915-cc57-4386-be94-dc12a330545a", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/jobservice-dashboard", "url": "https://goharbor.io/docs/2.12.0/administration/jobservice-dashboard/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you explain what Roll Back from an Upgrade is in harbor-2-12-0?\n\nAssistant: Sure, I'd be happy to explain Roll Back from an Upgrade in harbor-2-12-0.\n\n# Roll Back from an Upgrade\n\nInstructions on how to roll back to the previous version of Harbor after an upgrade.Here's a quick rundown of what this is about:\n\n## Introduction\n\nIf, for any reason, you need to roll back to the previous version of Harbor, perform the following steps.\n\n## Backup Requirement\n\nTo roll back from an upgrade, you must have backed up the previous version of Harbor. For information about backing up Harbor before an upgrade, see Upgrade Harbor and Migrate Data.\n\n## TLS Certificate Considerations\n\nHarbor 2.2 is compiled by Golang 1.15 which deprecated self signed certificate without SAN. If you enabled internal TLS and cert files are generated by Harbor prepare script, you must generate the internal certificates again, using command like this `docker run -v /:/hostfs goharbor/prepare:v2.2.0 gencert -p /path/to/internal/tls/cert`. The certs generated by the old version prepare script didn’t include the SAN extension. If you manage the certs file, make the SAN is included, if not please check Configure Internal TLS communication between Harbor Component. For more information about Go’s break please refer release note of Go 1.5 and this issue.\n\n## Rollback Steps\n\n1. Stop and remove the current Harbor service if it is still running.\n\n```sh\ncd harbor\ndocker compose down\n```\n\n2. Remove current Harbor instance.\n\n```sh\nrm -rf harbor\n```\n\n3. Restore the older version of Harbor.\n\n```sh\nmv /my_backup_dir/harbor harbor\n```\n\n4. To restore the database, copy the data files from the backup directory to your data volume, which by default is `/data/database`.\n\n5. Restart the Harbor service using the previous configuration.\n\nIf the previous version of Harbor was installed by a release build:\n\n```sh\ncd harbor\n./install.sh\n```\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/upgrade/roll-back-upgrade", "title": "Roll Back from an Upgrade", "description": "Instructions on how to roll back to the previous version of Harbor after an upgrade.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:20:43", "type": "overview", "page_metadata": {"twitter:card": "summary", "twitter:site": "@project_harbor", "ogTitle": "Harbor &ndash; Roll Back from an Upgrade", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "twitter:creator": "@project_harbor", "favicon": "https://goharbor.io/favicon.svg", "og:type": ["documentation", "article"], "og:title": "Harbor &ndash; Roll Back from an Upgrade", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "ogSiteName": "Harbor", "title": "\n      \nHarbor docs | Roll Back from an Upgrade\n\n    ", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/upgrade/roll-back-upgrade/", "ogLocale": "en_US", "og:url": "https://goharbor.io/docs/2.12.0/administration/upgrade/roll-back-upgrade/", "og:site_name": "Harbor", "og:image:type": "image/png", "og:image:alt": "Harbor &ndash; Roll Back from an Upgrade project logo", "og:locale": "en_US", "generator": "Hugo 0.74.0", "scrapeId": "8b0d1446-7452-4014-9fda-458f96155c21", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/upgrade/roll-back-upgrade", "url": "https://goharbor.io/docs/2.12.0/administration/upgrade/roll-back-upgrade/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I introduction in harbor-2-12-0?\n\nAssistant: To introduction in harbor-2-12-0, here's what you do:\nIf, for any reason, you need to roll back to the previous version of Harbor, perform the following steps..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/upgrade/roll-back-upgrade", "title": "Roll Back from an Upgrade", "description": "Instructions on how to roll back to the previous version of Harbor after an upgrade.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:20:43", "type": "section_detail", "page_metadata": {"twitter:card": "summary", "twitter:site": "@project_harbor", "ogTitle": "Harbor &ndash; Roll Back from an Upgrade", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "twitter:creator": "@project_harbor", "favicon": "https://goharbor.io/favicon.svg", "og:type": ["documentation", "article"], "og:title": "Harbor &ndash; Roll Back from an Upgrade", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "ogSiteName": "Harbor", "title": "\n      \nHarbor docs | Roll Back from an Upgrade\n\n    ", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/upgrade/roll-back-upgrade/", "ogLocale": "en_US", "og:url": "https://goharbor.io/docs/2.12.0/administration/upgrade/roll-back-upgrade/", "og:site_name": "Harbor", "og:image:type": "image/png", "og:image:alt": "Harbor &ndash; Roll Back from an Upgrade project logo", "og:locale": "en_US", "generator": "Hugo 0.74.0", "scrapeId": "8b0d1446-7452-4014-9fda-458f96155c21", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/upgrade/roll-back-upgrade", "url": "https://goharbor.io/docs/2.12.0/administration/upgrade/roll-back-upgrade/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I backup requirement in harbor-2-12-0?\n\nAssistant: To backup requirement in harbor-2-12-0, here's what you do:\nTo roll back from an upgrade, you must have backed up the previous version of Harbor. For information about backing up Harbor before an upgrade, see Upgrade Harbor and Migrate Data..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/upgrade/roll-back-upgrade", "title": "Roll Back from an Upgrade", "description": "Instructions on how to roll back to the previous version of Harbor after an upgrade.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:20:43", "type": "section_detail", "page_metadata": {"twitter:card": "summary", "twitter:site": "@project_harbor", "ogTitle": "Harbor &ndash; Roll Back from an Upgrade", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "twitter:creator": "@project_harbor", "favicon": "https://goharbor.io/favicon.svg", "og:type": ["documentation", "article"], "og:title": "Harbor &ndash; Roll Back from an Upgrade", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "ogSiteName": "Harbor", "title": "\n      \nHarbor docs | Roll Back from an Upgrade\n\n    ", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/upgrade/roll-back-upgrade/", "ogLocale": "en_US", "og:url": "https://goharbor.io/docs/2.12.0/administration/upgrade/roll-back-upgrade/", "og:site_name": "Harbor", "og:image:type": "image/png", "og:image:alt": "Harbor &ndash; Roll Back from an Upgrade project logo", "og:locale": "en_US", "generator": "Hugo 0.74.0", "scrapeId": "8b0d1446-7452-4014-9fda-458f96155c21", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/upgrade/roll-back-upgrade", "url": "https://goharbor.io/docs/2.12.0/administration/upgrade/roll-back-upgrade/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I tls certificate considerations in harbor-2-12-0?\n\nAssistant: To tls certificate considerations in harbor-2-12-0, here's what you do:\nHarbor 2.2 is compiled by Golang 1.15 which deprecated self signed certificate without SAN. If you enabled internal TLS and cert files are generated by Harbor prepare script, you must generate the internal certificates again, using command like this `docker run -v /:/hostfs goharbor/prepare:v2.2.0 gencert -p /path/to/internal/tls/cert`. The certs generated by the old version prepare script didn’t include the SAN extension. If you manage the certs file, make the SAN is included, if not please check Configure Internal TLS communication between Harbor Component. For more information about Go’s break please refer release note of Go 1.5 and this issue..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/upgrade/roll-back-upgrade", "title": "Roll Back from an Upgrade", "description": "Instructions on how to roll back to the previous version of Harbor after an upgrade.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:20:43", "type": "section_detail", "page_metadata": {"twitter:card": "summary", "twitter:site": "@project_harbor", "ogTitle": "Harbor &ndash; Roll Back from an Upgrade", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "twitter:creator": "@project_harbor", "favicon": "https://goharbor.io/favicon.svg", "og:type": ["documentation", "article"], "og:title": "Harbor &ndash; Roll Back from an Upgrade", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "ogSiteName": "Harbor", "title": "\n      \nHarbor docs | Roll Back from an Upgrade\n\n    ", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/upgrade/roll-back-upgrade/", "ogLocale": "en_US", "og:url": "https://goharbor.io/docs/2.12.0/administration/upgrade/roll-back-upgrade/", "og:site_name": "Harbor", "og:image:type": "image/png", "og:image:alt": "Harbor &ndash; Roll Back from an Upgrade project logo", "og:locale": "en_US", "generator": "Hugo 0.74.0", "scrapeId": "8b0d1446-7452-4014-9fda-458f96155c21", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/upgrade/roll-back-upgrade", "url": "https://goharbor.io/docs/2.12.0/administration/upgrade/roll-back-upgrade/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I rollback steps in harbor-2-12-0?\n\nAssistant: To rollback steps in harbor-2-12-0, here's what you do:\n1. Stop and remove the current Harbor service if it is still running.\n\n```sh\ncd harbor\ndocker compose down\n```\n\n2. Remove current Harbor instance.\n\n```sh\nrm -rf harbor\n```\n\n3. Restore the older version of Harbor.\n\n```sh\nmv /my_backup_dir/harbor harbor\n```\n\n4. To restore the database, copy the data files from the backup directory to your data volume, which by default is `/data/database`.\n\n5. Restart the Harbor service using the previous configuration.\n\nIf the previous version of Harbor was installed by a release build:\n\n```sh\ncd harbor\n./install.sh\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/upgrade/roll-back-upgrade", "title": "Roll Back from an Upgrade", "description": "Instructions on how to roll back to the previous version of Harbor after an upgrade.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:20:43", "type": "section_detail", "page_metadata": {"twitter:card": "summary", "twitter:site": "@project_harbor", "ogTitle": "Harbor &ndash; Roll Back from an Upgrade", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "twitter:creator": "@project_harbor", "favicon": "https://goharbor.io/favicon.svg", "og:type": ["documentation", "article"], "og:title": "Harbor &ndash; Roll Back from an Upgrade", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "ogSiteName": "Harbor", "title": "\n      \nHarbor docs | Roll Back from an Upgrade\n\n    ", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/upgrade/roll-back-upgrade/", "ogLocale": "en_US", "og:url": "https://goharbor.io/docs/2.12.0/administration/upgrade/roll-back-upgrade/", "og:site_name": "Harbor", "og:image:type": "image/png", "og:image:alt": "Harbor &ndash; Roll Back from an Upgrade project logo", "og:locale": "en_US", "generator": "Hugo 0.74.0", "scrapeId": "8b0d1446-7452-4014-9fda-458f96155c21", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/upgrade/roll-back-upgrade", "url": "https://goharbor.io/docs/2.12.0/administration/upgrade/roll-back-upgrade/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you give me some code examples for Roll Back from an Upgrade in harbor-2-12-0?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Stop and Remove Harbor Service**:\n\n```yaml\n```sh\ncd harbor\ndocker compose down\n```\n```\n\nThis snippet shows you how to stop and remove harbor service, which is an important aspect of roll back from an upgrade.\n\n**Remove Current Harbor Instance**:\n\n```yaml\n```sh\nrm -rf harbor\n```\n```\n\nThis snippet shows you how to remove current harbor instance, which is an important aspect of roll back from an upgrade.\n\n**Restore Older Version of Harbor**:\n\n```yaml\n```sh\nmv /my_backup_dir/harbor harbor\n```\n```\n\nThis snippet shows you how to restore older version of harbor, which is an important aspect of roll back from an upgrade.\n\n**Restart Harbor Service**:\n\n```yaml\n```sh\ncd harbor\n./install.sh\n```\n```\n\nThis snippet shows you how to restart harbor service, which is an important aspect of roll back from an upgrade.\n\n", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/upgrade/roll-back-upgrade", "title": "Roll Back from an Upgrade", "description": "Instructions on how to roll back to the previous version of Harbor after an upgrade.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:20:43", "type": "code_examples", "page_metadata": {"twitter:card": "summary", "twitter:site": "@project_harbor", "ogTitle": "Harbor &ndash; Roll Back from an Upgrade", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "twitter:creator": "@project_harbor", "favicon": "https://goharbor.io/favicon.svg", "og:type": ["documentation", "article"], "og:title": "Harbor &ndash; Roll Back from an Upgrade", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "ogSiteName": "Harbor", "title": "\n      \nHarbor docs | Roll Back from an Upgrade\n\n    ", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/upgrade/roll-back-upgrade/", "ogLocale": "en_US", "og:url": "https://goharbor.io/docs/2.12.0/administration/upgrade/roll-back-upgrade/", "og:site_name": "Harbor", "og:image:type": "image/png", "og:image:alt": "Harbor &ndash; Roll Back from an Upgrade project logo", "og:locale": "en_US", "generator": "Hugo 0.74.0", "scrapeId": "8b0d1446-7452-4014-9fda-458f96155c21", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/upgrade/roll-back-upgrade", "url": "https://goharbor.io/docs/2.12.0/administration/upgrade/roll-back-upgrade/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: What are some tips for using Roll Back from an Upgrade in harbor-2-12-0 effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nEnsure you have a backup of the previous version of Harbor before attempting a rollback.\n\nIf using internal TLS, regenerate certificates to include the SAN extension.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/upgrade/roll-back-upgrade", "title": "Roll Back from an Upgrade", "description": "Instructions on how to roll back to the previous version of Harbor after an upgrade.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:20:43", "type": "best_practices", "page_metadata": {"twitter:card": "summary", "twitter:site": "@project_harbor", "ogTitle": "Harbor &ndash; Roll Back from an Upgrade", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "twitter:creator": "@project_harbor", "favicon": "https://goharbor.io/favicon.svg", "og:type": ["documentation", "article"], "og:title": "Harbor &ndash; Roll Back from an Upgrade", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "ogSiteName": "Harbor", "title": "\n      \nHarbor docs | Roll Back from an Upgrade\n\n    ", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/upgrade/roll-back-upgrade/", "ogLocale": "en_US", "og:url": "https://goharbor.io/docs/2.12.0/administration/upgrade/roll-back-upgrade/", "og:site_name": "Harbor", "og:image:type": "image/png", "og:image:alt": "Harbor &ndash; Roll Back from an Upgrade project logo", "og:locale": "en_US", "generator": "Hugo 0.74.0", "scrapeId": "8b0d1446-7452-4014-9fda-458f96155c21", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/upgrade/roll-back-upgrade", "url": "https://goharbor.io/docs/2.12.0/administration/upgrade/roll-back-upgrade/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you explain what Upgrade Harbor and Migrate Data is in harbor-2-12-0?\n\nAssistant: Sure, I'd be happy to explain Upgrade Harbor and Migrate Data in harbor-2-12-0.\n\n# Upgrade Harbor and Migrate Data\n\nThis guide covers upgrade and migration to v2.12.0. This guide only covers migration from v2.10.0 and later to the current version. If you are upgrading from an earlier version, refer to the migration guide for an earlier Harbor version.Here's a quick rundown of what this is about:\n\n## Important Upgrade Notes\n\n- Again, you MUST backup your data before any data migration.\n- In Harbor v2.9, if you are using an external database, make sure the version of PostgreSQL >= 12.\n\n## Upgrading Harbor and Migrating Data\n\n1. Log in to the Harbor host and, if it is still running, stop and remove the existing Harbor instance.\n\n\n```sh\ncd harbor\ndocker compose down\n\n```\n\n2. Back up Harbor’s current files so that you can roll back to the current version if necessary.\n\n\n```sh\nmv harbor /my_backup_dir/harbor\n\n```\n\n3. Back up the database, which by default is in the directory `/data/database`.\n\n\n```sh\ncp -r /data/database /my_backup_dir/\n\n```\n\n4. Get the latest Harbor release package from\n[https://github.com/goharbor/harbor/releases](https://github.com/goharbor/harbor/releases) and extract it.\n\nFor more information see\n[Download the Harbor Installer](https://goharbor.io/docs/2.12.0/install-config/download-installer/).\n\n5. Before upgrading Harbor, perform migration.\n\nThe migration tool is in harbor-prepare tools delivered as a docker image. You can pull the image from docker hub. in the following command:\n\n\n```sh\ndocker pull goharbor/prepare:[tag]\n\n```\n\n\nAlternatively, if you are using an offline installer package, you can load it from the image tarball that is included in the offline installer package. Replace \\[tag\\] with the new Harbor version, for example v1.10.0, in the following command:\n\n\n```sh\ntar zxf <offline package>\ndocker image load -i harbor/harbor.[version].tar.gz\n\n```\n\n6. Copy the `/path/to/old/harbor.yml` to `harbor.yml` and upgrade it.\n\n\n```sh\ndocker run -it --rm -v /:/hostfs goharbor/prepare:[tag] migrate -i ${path to harbor.yml}\n\n```\n\n**NOTE:** The schema upgrade and data migration of the database is performed by core when Harbor starts. If the migration fails, check the core log to debug.\n\n7. In the `./harbor` directory, run the `./install.sh` script to install the new Harbor instance.\n\nTo install Harbor with Trivy, see\n[Run the Installer Script](https://goharbor.io/docs/2.12.0/install-config/run-installer-script/) for more information.\n\nIf you need to roll back to the previous version of Harbor, see\n[Roll Back from an Upgrade](https://goharbor.io/docs/2.12.0/administration/upgrade/roll-back-upgrade/).\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/upgrade", "title": "Upgrade Harbor and Migrate Data", "description": "This guide covers upgrade and migration to v2.12.0. This guide only covers migration from v2.10.0 and later to the current version. If you are upgrading from an earlier version, refer to the migration guide for an earlier Harbor version.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:21:10", "type": "overview", "page_metadata": {"twitter:site": "@project_harbor", "ogTitle": "Harbor &ndash; Upgrade Harbor and Migrate Data", "og:site_name": "Harbor", "og:title": "Harbor &ndash; Upgrade Harbor and Migrate Data", "og:type": ["documentation", "article"], "twitter:creator": "@project_harbor", "og:image:alt": "Harbor &ndash; Upgrade Harbor and Migrate Data project logo", "title": "\n      \nHarbor docs | Upgrade Harbor and Migrate Data\n\n    ", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/upgrade/", "favicon": "https://goharbor.io/favicon.svg", "ogSiteName": "Harbor", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:locale": "en_US", "ogLocale": "en_US", "og:image:type": "image/png", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "generator": "Hugo 0.74.0", "twitter:card": "summary", "og:url": "https://goharbor.io/docs/2.12.0/administration/upgrade/", "scrapeId": "5af83cac-3776-48aa-9bfa-b13522f11bca", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/upgrade", "url": "https://goharbor.io/docs/2.12.0/administration/upgrade/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I important upgrade notes in harbor-2-12-0?\n\nAssistant: To important upgrade notes in harbor-2-12-0, here's what you do:\n- Again, you MUST backup your data before any data migration.\n- In Harbor v2.9, if you are using an external database, make sure the version of PostgreSQL >= 12..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/upgrade", "title": "Upgrade Harbor and Migrate Data", "description": "This guide covers upgrade and migration to v2.12.0. This guide only covers migration from v2.10.0 and later to the current version. If you are upgrading from an earlier version, refer to the migration guide for an earlier Harbor version.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:21:10", "type": "section_detail", "page_metadata": {"twitter:site": "@project_harbor", "ogTitle": "Harbor &ndash; Upgrade Harbor and Migrate Data", "og:site_name": "Harbor", "og:title": "Harbor &ndash; Upgrade Harbor and Migrate Data", "og:type": ["documentation", "article"], "twitter:creator": "@project_harbor", "og:image:alt": "Harbor &ndash; Upgrade Harbor and Migrate Data project logo", "title": "\n      \nHarbor docs | Upgrade Harbor and Migrate Data\n\n    ", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/upgrade/", "favicon": "https://goharbor.io/favicon.svg", "ogSiteName": "Harbor", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:locale": "en_US", "ogLocale": "en_US", "og:image:type": "image/png", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "generator": "Hugo 0.74.0", "twitter:card": "summary", "og:url": "https://goharbor.io/docs/2.12.0/administration/upgrade/", "scrapeId": "5af83cac-3776-48aa-9bfa-b13522f11bca", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/upgrade", "url": "https://goharbor.io/docs/2.12.0/administration/upgrade/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I upgrading harbor and migrating data in harbor-2-12-0?\n\nAssistant: To upgrading harbor and migrating data in harbor-2-12-0, here's what you do:\n1. Log in to the Harbor host and, if it is still running, stop and remove the existing Harbor instance.\n\n\n```sh\ncd harbor\ndocker compose down\n\n```\n\n2. Back up Harbor’s current files so that you can roll back to the current version if necessary.\n\n\n```sh\nmv harbor /my_backup_dir/harbor\n\n```\n\n3. Back up the database, which by default is in the directory `/data/database`.\n\n\n```sh\ncp -r /data/database /my_backup_dir/\n\n```\n\n4. Get the latest Harbor release package from\n[https://github.com/goharbor/harbor/releases](https://github.com/goharbor/harbor/releases) and extract it.\n\nFor more information see\n[Download the Harbor Installer](https://goharbor.io/docs/2.12.0/install-config/download-installer/).\n\n5. Before upgrading Harbor, perform migration.\n\nThe migration tool is in harbor-prepare tools delivered as a docker image. You can pull the image from docker hub. in the following command:\n\n\n```sh\ndocker pull goharbor/prepare:[tag]\n\n```\n\n\nAlternatively, if you are using an offline installer package, you can load it from the image tarball that is included in the offline installer package. Replace \\[tag\\] with the new Harbor version, for example v1.10.0, in the following command:\n\n\n```sh\ntar zxf <offline package>\ndocker image load -i harbor/harbor.[version].tar.gz\n\n```\n\n6. Copy the `/path/to/old/harbor.yml` to `harbor.yml` and upgrade it.\n\n\n```sh\ndocker run -it --rm -v /:/hostfs goharbor/prepare:[tag] migrate -i ${path to harbor.yml}\n\n```\n\n**NOTE:** The schema upgrade and data migration of the database is performed by core when Harbor starts. If the migration fails, check the core log to debug.\n\n7. In the `./harbor` directory, run the `./install.sh` script to install the new Harbor instance.\n\nTo install Harbor with Trivy, see\n[Run the Installer Script](https://goharbor.io/docs/2.12.0/install-config/run-installer-script/) for more information.\n\nIf you need to roll back to the previous version of Harbor, see\n[Roll Back from an Upgrade](https://goharbor.io/docs/2.12.0/administration/upgrade/roll-back-upgrade/)..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/upgrade", "title": "Upgrade Harbor and Migrate Data", "description": "This guide covers upgrade and migration to v2.12.0. This guide only covers migration from v2.10.0 and later to the current version. If you are upgrading from an earlier version, refer to the migration guide for an earlier Harbor version.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:21:10", "type": "section_detail", "page_metadata": {"twitter:site": "@project_harbor", "ogTitle": "Harbor &ndash; Upgrade Harbor and Migrate Data", "og:site_name": "Harbor", "og:title": "Harbor &ndash; Upgrade Harbor and Migrate Data", "og:type": ["documentation", "article"], "twitter:creator": "@project_harbor", "og:image:alt": "Harbor &ndash; Upgrade Harbor and Migrate Data project logo", "title": "\n      \nHarbor docs | Upgrade Harbor and Migrate Data\n\n    ", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/upgrade/", "favicon": "https://goharbor.io/favicon.svg", "ogSiteName": "Harbor", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:locale": "en_US", "ogLocale": "en_US", "og:image:type": "image/png", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "generator": "Hugo 0.74.0", "twitter:card": "summary", "og:url": "https://goharbor.io/docs/2.12.0/administration/upgrade/", "scrapeId": "5af83cac-3776-48aa-9bfa-b13522f11bca", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/upgrade", "url": "https://goharbor.io/docs/2.12.0/administration/upgrade/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you give me some code examples for Upgrade Harbor and Migrate Data in harbor-2-12-0?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Stop and remove existing Harbor instance**:\n\n```yaml\n```sh\ncd harbor\ndocker compose down\n```\n```\n\nThis snippet shows you how to stop and remove existing harbor instance, which is an important aspect of upgrade harbor and migrate data.\n\n**Backup Harbor current files**:\n\n```yaml\n```sh\nmv harbor /my_backup_dir/harbor\n```\n```\n\nThis snippet shows you how to backup harbor current files, which is an important aspect of upgrade harbor and migrate data.\n\n**Backup the database**:\n\n```yaml\n```sh\ncp -r /data/database /my_backup_dir/\n```\n```\n\nThis snippet shows you how to backup the database, which is an important aspect of upgrade harbor and migrate data.\n\n**Pull migration tool image**:\n\n```yaml\n```sh\ndocker pull goharbor/prepare:[tag]\n```\n```\n\nThis snippet shows you how to pull migration tool image, which is an important aspect of upgrade harbor and migrate data.\n\n**Load offline installer package**:\n\n```yaml\n```sh\ntar zxf <offline package>\ndocker image load -i harbor/harbor.[version].tar.gz\n```\n```\n\nThis snippet shows you how to load offline installer package, which is an important aspect of upgrade harbor and migrate data.\n\n**Run migration tool**:\n\n```yaml\n```sh\ndocker run -it --rm -v /:/hostfs goharbor/prepare:[tag] migrate -i ${path to harbor.yml}\n```\n```\n\nThis snippet shows you how to run migration tool, which is an important aspect of upgrade harbor and migrate data.\n\n", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/upgrade", "title": "Upgrade Harbor and Migrate Data", "description": "This guide covers upgrade and migration to v2.12.0. This guide only covers migration from v2.10.0 and later to the current version. If you are upgrading from an earlier version, refer to the migration guide for an earlier Harbor version.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:21:10", "type": "code_examples", "page_metadata": {"twitter:site": "@project_harbor", "ogTitle": "Harbor &ndash; Upgrade Harbor and Migrate Data", "og:site_name": "Harbor", "og:title": "Harbor &ndash; Upgrade Harbor and Migrate Data", "og:type": ["documentation", "article"], "twitter:creator": "@project_harbor", "og:image:alt": "Harbor &ndash; Upgrade Harbor and Migrate Data project logo", "title": "\n      \nHarbor docs | Upgrade Harbor and Migrate Data\n\n    ", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/upgrade/", "favicon": "https://goharbor.io/favicon.svg", "ogSiteName": "Harbor", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:locale": "en_US", "ogLocale": "en_US", "og:image:type": "image/png", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "generator": "Hugo 0.74.0", "twitter:card": "summary", "og:url": "https://goharbor.io/docs/2.12.0/administration/upgrade/", "scrapeId": "5af83cac-3776-48aa-9bfa-b13522f11bca", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/upgrade", "url": "https://goharbor.io/docs/2.12.0/administration/upgrade/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: What are some tips for using Upgrade Harbor and Migrate Data in harbor-2-12-0 effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nAlways back up your data before any migration.\n\nEnsure that the version of PostgreSQL is >= 12 if using an external database.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/upgrade", "title": "Upgrade Harbor and Migrate Data", "description": "This guide covers upgrade and migration to v2.12.0. This guide only covers migration from v2.10.0 and later to the current version. If you are upgrading from an earlier version, refer to the migration guide for an earlier Harbor version.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:21:10", "type": "best_practices", "page_metadata": {"twitter:site": "@project_harbor", "ogTitle": "Harbor &ndash; Upgrade Harbor and Migrate Data", "og:site_name": "Harbor", "og:title": "Harbor &ndash; Upgrade Harbor and Migrate Data", "og:type": ["documentation", "article"], "twitter:creator": "@project_harbor", "og:image:alt": "Harbor &ndash; Upgrade Harbor and Migrate Data project logo", "title": "\n      \nHarbor docs | Upgrade Harbor and Migrate Data\n\n    ", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/upgrade/", "favicon": "https://goharbor.io/favicon.svg", "ogSiteName": "Harbor", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:locale": "en_US", "ogLocale": "en_US", "og:image:type": "image/png", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "generator": "Hugo 0.74.0", "twitter:card": "summary", "og:url": "https://goharbor.io/docs/2.12.0/administration/upgrade/", "scrapeId": "5af83cac-3776-48aa-9bfa-b13522f11bca", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/upgrade", "url": "https://goharbor.io/docs/2.12.0/administration/upgrade/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you explain what Backup And Restore Harbor With Velero is in harbor-2-12-0?\n\nAssistant: Sure, I'd be happy to explain Backup And Restore Harbor With Velero in harbor-2-12-0.\n\n# Backup And Restore Harbor With Velero\n\nBackup and restore is important for disaster recovery and data migration scenarios. With a tool like Velero, you can backup and restore your Harbor instances and avoid disruptions in service in the event of a disaster. Velero is an open source tool you can use to safely backup and restore, perform disaster recovery, and migrate Kubernetes cluster resources and persistent volumes.Here's a quick rundown of what this is about:\n\n## Install Velero\n\nInstall the Velero CLI and server according to the official Velero documentation. Depending on the size of your data, you may need to increase the CPU or memory resources available to Velero. Refer to the doc for more information.\n\n## Backup Harbor Instance\n\n### Set Harbor to ReadOnly\n1. Log in to the Harbor portal with an account that has Harbor system administrator privileges.\n2. Expand **Administration**, and select **Configuration**.\n3. Select the **System Settings** tab.\n4. Select the check box **Repository Read Only** and click the **Save** button to save the configurations.\n\n### Label Resources to Exclude Redis Data from Backup\nIn order to exclude the volume of Redis in backup, we need to label the Redis pod, PVC and PV with specific label:\n\n```shell\n# label the Pod of Redis, replace the namespace and Pod name with yours\nkubectl -n harbor label pod/harbor-redis-0 velero.io/exclude-from-backup=true\n# label the PVC of Redis, replace the namespace and PVC name with yours\nkubectl -n harbor label pvc/data-harbor-redis-0 velero.io/exclude-from-backup=true\n# label the PV of Redis, replace the namespace and PVC name with yours\nkubectl label pv/$(kubectl -n harbor get pvc data-harbor-redis-0 --template={{.spec.volumeName}}) velero.io/exclude-from-backup=true\n```\n\n### Backup Harbor Instance\nAccording to the capability of the platform where Harbor is deployed, you can choose back up the PersistentVolumes with Snapshot or File System Backup:\n\n- Snapshot\n\nDepends on how Velero is installed, you can use the [CSI Snapshot](https://velero.io/docs/latest/csi/), [CSI Snapshot with Data Move](https://velero.io/docs/latest/csi-snapshot-data-movement/) or [Native Snapshot](https://velero.io/docs/latest/supported-providers/) to backup the PersistentVolumes:\n1. Back up Harbor with CSI Snapshot or Native Snapshot\n\n```shell\n# replace the namespace and backup name with yours\nvelero backup create harbor-backup --include-namespaces harbor --snapshot-volumes --wait\n```\n\n2. Back up Harbor with CSI Snapshot with Data Move\n\n```shell\n# replace the namespace and backup name with yours\nvelero backup create harbor-backup --include-namespaces harbor --snapshot-volumes --snapshot-move-data --wait\n```\n\n- File System Backup\n\nBefore using File System Backup, you should review the Velero [File System Backup](https://velero.io/docs/latest/file-system-backup/) page, and especially understand the [limitations](https://velero.io/docs/latest/file-system-backup/#limitations).\n1. Back up Harbor\n\n```shell\n# replace the namespace and backup name with yours\nvelero backup create harbor-backup --include-namespaces harbor --default-volumes-to-fs-backup --wait\n```\n\n### Unset ReadOnly\nFollow the same steps in [Set Harbor to ReadOnly](https://goharbor.io/docs/2.12.0/administration/backup-restore/#set-harbor-to-readonly), uncheck the **Repository Read Only** check box and click the **Save** button to save the configurations.\n\n## Restore Harbor Instance\n\n### Restore from the Backup\n```shell\n# replace the backup and restore names with yours\nvelero restore create harbor-restore --from-backup harbor-backup --wait\n```\n\n### Unset ReadOnly\nAs we set Harbor to ReadOnly when doing the backup, the instance is still in ReadOnly mode after the restoring, follow [Unset ReadOnly](https://goharbor.io/docs/2.12.0/administration/backup-restore/#unset-readonly) to unset ReadOnly.\n\n## Troubleshooting\n\nIf you have any issue while backing up or restoring, please refer to Velero’s [troubleshooting](https://velero.io/docs/latest/troubleshooting/) documentation.\n\n## Limitations\n\n- **The upload purging process may cause backup failure**\n\nA purging process starts in the `registry` pod by default, it removes the unused files under the upload directory periodically and cannot be deactivated without restarting. This may impact the backup when using Restic and cause failures.\n\nIt’s better to increase the [interval](https://github.com/goharbor/harbor-helm/blob/v1.9.2/values.yaml#L581) of the purging operation(the default value is 168h) and do the backup in the middle of two rounds of purging to avoid files being removed.\n- **The data in memory is lost during the backup**\n\nHarbor stores repository pull and artifact pull times in memory and syncs them periodically into Harbor’s database. This means that any data that isn’t synced into the database when you take a backup is lost. This data loss should be low impact to your restored Harbor instance.\n- **Tasks may hang in the in-progress status after restore**\n\nHarbor tasks, such as replication, garbage collection, or security scans may hang in the in-progress status after restore. You can manually stop them on the portal.\n- **Sessions of logged users will lose after restore**\n\nAs we don’t back up the persistent volume of Redis, the sessions of logged used will is lost after restore.\n- **Backups of external databases are not supported**\n\nOnly backups of the Harbor internal database is supported.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/backup-restore", "title": "Backup And Restore Harbor With Velero", "description": "Backup and restore is important for disaster recovery and data migration scenarios. With a tool like Velero, you can backup and restore your Harbor instances and avoid disruptions in service in the event of a disaster. Velero is an open source tool you can use to safely backup and restore, perform disaster recovery, and migrate Kubernetes cluster resources and persistent volumes.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:22:35", "type": "overview", "page_metadata": {"ogUrl": "https://goharbor.io/docs/2.12.0/administration/backup-restore/", "ogTitle": "Harbor &ndash; Backup And Restore Harbor With Velero", "og:image:type": "image/png", "og:site_name": "Harbor", "generator": "Hugo 0.74.0", "og:url": "https://goharbor.io/docs/2.12.0/administration/backup-restore/", "og:image:alt": "Harbor &ndash; Backup And Restore Harbor With Velero project logo", "og:type": ["documentation", "article"], "twitter:card": "summary", "og:title": "Harbor &ndash; Backup And Restore Harbor With Velero", "ogSiteName": "Harbor", "twitter:creator": "@project_harbor", "ogLocale": "en_US", "favicon": "https://goharbor.io/favicon.svg", "title": "\n      \nHarbor docs | Backup And Restore Harbor With Velero\n\n    ", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "twitter:site": "@project_harbor", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:locale": "en_US", "scrapeId": "2a1a2610-cb22-412a-9fda-5b4c4fa506e3", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/backup-restore", "url": "https://goharbor.io/docs/2.12.0/administration/backup-restore/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I install velero in harbor-2-12-0?\n\nAssistant: To install velero in harbor-2-12-0, here's what you do:\nInstall the Velero CLI and server according to the official Velero documentation. Depending on the size of your data, you may need to increase the CPU or memory resources available to Velero. Refer to the doc for more information..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/backup-restore", "title": "Backup And Restore Harbor With Velero", "description": "Backup and restore is important for disaster recovery and data migration scenarios. With a tool like Velero, you can backup and restore your Harbor instances and avoid disruptions in service in the event of a disaster. Velero is an open source tool you can use to safely backup and restore, perform disaster recovery, and migrate Kubernetes cluster resources and persistent volumes.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:22:35", "type": "section_detail", "page_metadata": {"ogUrl": "https://goharbor.io/docs/2.12.0/administration/backup-restore/", "ogTitle": "Harbor &ndash; Backup And Restore Harbor With Velero", "og:image:type": "image/png", "og:site_name": "Harbor", "generator": "Hugo 0.74.0", "og:url": "https://goharbor.io/docs/2.12.0/administration/backup-restore/", "og:image:alt": "Harbor &ndash; Backup And Restore Harbor With Velero project logo", "og:type": ["documentation", "article"], "twitter:card": "summary", "og:title": "Harbor &ndash; Backup And Restore Harbor With Velero", "ogSiteName": "Harbor", "twitter:creator": "@project_harbor", "ogLocale": "en_US", "favicon": "https://goharbor.io/favicon.svg", "title": "\n      \nHarbor docs | Backup And Restore Harbor With Velero\n\n    ", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "twitter:site": "@project_harbor", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:locale": "en_US", "scrapeId": "2a1a2610-cb22-412a-9fda-5b4c4fa506e3", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/backup-restore", "url": "https://goharbor.io/docs/2.12.0/administration/backup-restore/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I backup harbor instance in harbor-2-12-0?\n\nAssistant: To backup harbor instance in harbor-2-12-0, here's what you do:\n### Set Harbor to ReadOnly\n1. Log in to the Harbor portal with an account that has Harbor system administrator privileges.\n2. Expand **Administration**, and select **Configuration**.\n3. Select the **System Settings** tab.\n4. Select the check box **Repository Read Only** and click the **Save** button to save the configurations.\n\n### Label Resources to Exclude Redis Data from Backup\nIn order to exclude the volume of Redis in backup, we need to label the Redis pod, PVC and PV with specific label:\n\n```shell\n# label the Pod of Redis, replace the namespace and Pod name with yours\nkubectl -n harbor label pod/harbor-redis-0 velero.io/exclude-from-backup=true\n# label the PVC of Redis, replace the namespace and PVC name with yours\nkubectl -n harbor label pvc/data-harbor-redis-0 velero.io/exclude-from-backup=true\n# label the PV of Redis, replace the namespace and PVC name with yours\nkubectl label pv/$(kubectl -n harbor get pvc data-harbor-redis-0 --template={{.spec.volumeName}}) velero.io/exclude-from-backup=true\n```\n\n### Backup Harbor Instance\nAccording to the capability of the platform where Harbor is deployed, you can choose back up the PersistentVolumes with Snapshot or File System Backup:\n\n- Snapshot\n\nDepends on how Velero is installed, you can use the [CSI Snapshot](https://velero.io/docs/latest/csi/), [CSI Snapshot with Data Move](https://velero.io/docs/latest/csi-snapshot-data-movement/) or [Native Snapshot](https://velero.io/docs/latest/supported-providers/) to backup the PersistentVolumes:\n1. Back up Harbor with CSI Snapshot or Native Snapshot\n\n```shell\n# replace the namespace and backup name with yours\nvelero backup create harbor-backup --include-namespaces harbor --snapshot-volumes --wait\n```\n\n2. Back up Harbor with CSI Snapshot with Data Move\n\n```shell\n# replace the namespace and backup name with yours\nvelero backup create harbor-backup --include-namespaces harbor --snapshot-volumes --snapshot-move-data --wait\n```\n\n- File System Backup\n\nBefore using File System Backup, you should review the Velero [File System Backup](https://velero.io/docs/latest/file-system-backup/) page, and especially understand the [limitations](https://velero.io/docs/latest/file-system-backup/#limitations).\n1. Back up Harbor\n\n```shell\n# replace the namespace and backup name with yours\nvelero backup create harbor-backup --include-namespaces harbor --default-volumes-to-fs-backup --wait\n```\n\n### Unset ReadOnly\nFollow the same steps in [Set Harbor to ReadOnly](https://goharbor.io/docs/2.12.0/administration/backup-restore/#set-harbor-to-readonly), uncheck the **Repository Read Only** check box and click the **Save** button to save the configurations..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/backup-restore", "title": "Backup And Restore Harbor With Velero", "description": "Backup and restore is important for disaster recovery and data migration scenarios. With a tool like Velero, you can backup and restore your Harbor instances and avoid disruptions in service in the event of a disaster. Velero is an open source tool you can use to safely backup and restore, perform disaster recovery, and migrate Kubernetes cluster resources and persistent volumes.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:22:35", "type": "section_detail", "page_metadata": {"ogUrl": "https://goharbor.io/docs/2.12.0/administration/backup-restore/", "ogTitle": "Harbor &ndash; Backup And Restore Harbor With Velero", "og:image:type": "image/png", "og:site_name": "Harbor", "generator": "Hugo 0.74.0", "og:url": "https://goharbor.io/docs/2.12.0/administration/backup-restore/", "og:image:alt": "Harbor &ndash; Backup And Restore Harbor With Velero project logo", "og:type": ["documentation", "article"], "twitter:card": "summary", "og:title": "Harbor &ndash; Backup And Restore Harbor With Velero", "ogSiteName": "Harbor", "twitter:creator": "@project_harbor", "ogLocale": "en_US", "favicon": "https://goharbor.io/favicon.svg", "title": "\n      \nHarbor docs | Backup And Restore Harbor With Velero\n\n    ", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "twitter:site": "@project_harbor", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:locale": "en_US", "scrapeId": "2a1a2610-cb22-412a-9fda-5b4c4fa506e3", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/backup-restore", "url": "https://goharbor.io/docs/2.12.0/administration/backup-restore/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I restore harbor instance in harbor-2-12-0?\n\nAssistant: To restore harbor instance in harbor-2-12-0, here's what you do:\n### Restore from the Backup\n```shell\n# replace the backup and restore names with yours\nvelero restore create harbor-restore --from-backup harbor-backup --wait\n```\n\n### Unset ReadOnly\nAs we set Harbor to ReadOnly when doing the backup, the instance is still in ReadOnly mode after the restoring, follow [Unset ReadOnly](https://goharbor.io/docs/2.12.0/administration/backup-restore/#unset-readonly) to unset ReadOnly..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/backup-restore", "title": "Backup And Restore Harbor With Velero", "description": "Backup and restore is important for disaster recovery and data migration scenarios. With a tool like Velero, you can backup and restore your Harbor instances and avoid disruptions in service in the event of a disaster. Velero is an open source tool you can use to safely backup and restore, perform disaster recovery, and migrate Kubernetes cluster resources and persistent volumes.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:22:35", "type": "section_detail", "page_metadata": {"ogUrl": "https://goharbor.io/docs/2.12.0/administration/backup-restore/", "ogTitle": "Harbor &ndash; Backup And Restore Harbor With Velero", "og:image:type": "image/png", "og:site_name": "Harbor", "generator": "Hugo 0.74.0", "og:url": "https://goharbor.io/docs/2.12.0/administration/backup-restore/", "og:image:alt": "Harbor &ndash; Backup And Restore Harbor With Velero project logo", "og:type": ["documentation", "article"], "twitter:card": "summary", "og:title": "Harbor &ndash; Backup And Restore Harbor With Velero", "ogSiteName": "Harbor", "twitter:creator": "@project_harbor", "ogLocale": "en_US", "favicon": "https://goharbor.io/favicon.svg", "title": "\n      \nHarbor docs | Backup And Restore Harbor With Velero\n\n    ", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "twitter:site": "@project_harbor", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:locale": "en_US", "scrapeId": "2a1a2610-cb22-412a-9fda-5b4c4fa506e3", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/backup-restore", "url": "https://goharbor.io/docs/2.12.0/administration/backup-restore/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I troubleshooting in harbor-2-12-0?\n\nAssistant: To troubleshooting in harbor-2-12-0, here's what you do:\nIf you have any issue while backing up or restoring, please refer to Velero’s [troubleshooting](https://velero.io/docs/latest/troubleshooting/) documentation..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/backup-restore", "title": "Backup And Restore Harbor With Velero", "description": "Backup and restore is important for disaster recovery and data migration scenarios. With a tool like Velero, you can backup and restore your Harbor instances and avoid disruptions in service in the event of a disaster. Velero is an open source tool you can use to safely backup and restore, perform disaster recovery, and migrate Kubernetes cluster resources and persistent volumes.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:22:35", "type": "section_detail", "page_metadata": {"ogUrl": "https://goharbor.io/docs/2.12.0/administration/backup-restore/", "ogTitle": "Harbor &ndash; Backup And Restore Harbor With Velero", "og:image:type": "image/png", "og:site_name": "Harbor", "generator": "Hugo 0.74.0", "og:url": "https://goharbor.io/docs/2.12.0/administration/backup-restore/", "og:image:alt": "Harbor &ndash; Backup And Restore Harbor With Velero project logo", "og:type": ["documentation", "article"], "twitter:card": "summary", "og:title": "Harbor &ndash; Backup And Restore Harbor With Velero", "ogSiteName": "Harbor", "twitter:creator": "@project_harbor", "ogLocale": "en_US", "favicon": "https://goharbor.io/favicon.svg", "title": "\n      \nHarbor docs | Backup And Restore Harbor With Velero\n\n    ", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "twitter:site": "@project_harbor", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:locale": "en_US", "scrapeId": "2a1a2610-cb22-412a-9fda-5b4c4fa506e3", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/backup-restore", "url": "https://goharbor.io/docs/2.12.0/administration/backup-restore/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I limitations in harbor-2-12-0?\n\nAssistant: To limitations in harbor-2-12-0, here's what you do:\n- **The upload purging process may cause backup failure**\n\nA purging process starts in the `registry` pod by default, it removes the unused files under the upload directory periodically and cannot be deactivated without restarting. This may impact the backup when using Restic and cause failures.\n\nIt’s better to increase the [interval](https://github.com/goharbor/harbor-helm/blob/v1.9.2/values.yaml#L581) of the purging operation(the default value is 168h) and do the backup in the middle of two rounds of purging to avoid files being removed.\n- **The data in memory is lost during the backup**\n\nHarbor stores repository pull and artifact pull times in memory and syncs them periodically into Harbor’s database. This means that any data that isn’t synced into the database when you take a backup is lost. This data loss should be low impact to your restored Harbor instance.\n- **Tasks may hang in the in-progress status after restore**\n\nHarbor tasks, such as replication, garbage collection, or security scans may hang in the in-progress status after restore. You can manually stop them on the portal.\n- **Sessions of logged users will lose after restore**\n\nAs we don’t back up the persistent volume of Redis, the sessions of logged used will is lost after restore.\n- **Backups of external databases are not supported**\n\nOnly backups of the Harbor internal database is supported..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/backup-restore", "title": "Backup And Restore Harbor With Velero", "description": "Backup and restore is important for disaster recovery and data migration scenarios. With a tool like Velero, you can backup and restore your Harbor instances and avoid disruptions in service in the event of a disaster. Velero is an open source tool you can use to safely backup and restore, perform disaster recovery, and migrate Kubernetes cluster resources and persistent volumes.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:22:35", "type": "section_detail", "page_metadata": {"ogUrl": "https://goharbor.io/docs/2.12.0/administration/backup-restore/", "ogTitle": "Harbor &ndash; Backup And Restore Harbor With Velero", "og:image:type": "image/png", "og:site_name": "Harbor", "generator": "Hugo 0.74.0", "og:url": "https://goharbor.io/docs/2.12.0/administration/backup-restore/", "og:image:alt": "Harbor &ndash; Backup And Restore Harbor With Velero project logo", "og:type": ["documentation", "article"], "twitter:card": "summary", "og:title": "Harbor &ndash; Backup And Restore Harbor With Velero", "ogSiteName": "Harbor", "twitter:creator": "@project_harbor", "ogLocale": "en_US", "favicon": "https://goharbor.io/favicon.svg", "title": "\n      \nHarbor docs | Backup And Restore Harbor With Velero\n\n    ", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "twitter:site": "@project_harbor", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:locale": "en_US", "scrapeId": "2a1a2610-cb22-412a-9fda-5b4c4fa506e3", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/backup-restore", "url": "https://goharbor.io/docs/2.12.0/administration/backup-restore/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you give me some code examples for Backup And Restore Harbor With Velero in harbor-2-12-0?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Label Resources to Exclude Redis Data from Backup**:\n\n```yaml\n# label the Pod of Redis, replace the namespace and Pod name with yours\nkubectl -n harbor label pod/harbor-redis-0 velero.io/exclude-from-backup=true\n# label the PVC of Redis, replace the namespace and PVC name with yours\nkubectl -n harbor label pvc/data-harbor-redis-0 velero.io/exclude-from-backup=true\n# label the PV of Redis, replace the namespace and PVC name with yours\nkubectl label pv/$(kubectl -n harbor get pvc data-harbor-redis-0 --template={{.spec.volumeName}}) velero.io/exclude-from-backup=true\n```\n\nThis snippet shows you how to label resources to exclude redis data from backup, which is an important aspect of backup and restore harbor with velero.\n\n**Backup Harbor with CSI Snapshot or Native Snapshot**:\n\n```yaml\n# replace the namespace and backup name with yours\nvelero backup create harbor-backup --include-namespaces harbor --snapshot-volumes --wait\n```\n\nThis snippet shows you how to backup harbor with csi snapshot or native snapshot, which is an important aspect of backup and restore harbor with velero.\n\n**Backup Harbor with CSI Snapshot with Data Move**:\n\n```yaml\n# replace the namespace and backup name with yours\nvelero backup create harbor-backup --include-namespaces harbor --snapshot-volumes --snapshot-move-data --wait\n```\n\nThis snippet shows you how to backup harbor with csi snapshot with data move, which is an important aspect of backup and restore harbor with velero.\n\n**Backup Harbor with File System Backup**:\n\n```yaml\n# replace the namespace and backup name with yours\nvelero backup create harbor-backup --include-namespaces harbor --default-volumes-to-fs-backup --wait\n```\n\nThis snippet shows you how to backup harbor with file system backup, which is an important aspect of backup and restore harbor with velero.\n\n**Restore from the Backup**:\n\n```yaml\n# replace the backup and restore names with yours\nvelero restore create harbor-restore --from-backup harbor-backup --wait\n```\n\nThis snippet shows you how to restore from the backup, which is an important aspect of backup and restore harbor with velero.\n\n", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/backup-restore", "title": "Backup And Restore Harbor With Velero", "description": "Backup and restore is important for disaster recovery and data migration scenarios. With a tool like Velero, you can backup and restore your Harbor instances and avoid disruptions in service in the event of a disaster. Velero is an open source tool you can use to safely backup and restore, perform disaster recovery, and migrate Kubernetes cluster resources and persistent volumes.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:22:35", "type": "code_examples", "page_metadata": {"ogUrl": "https://goharbor.io/docs/2.12.0/administration/backup-restore/", "ogTitle": "Harbor &ndash; Backup And Restore Harbor With Velero", "og:image:type": "image/png", "og:site_name": "Harbor", "generator": "Hugo 0.74.0", "og:url": "https://goharbor.io/docs/2.12.0/administration/backup-restore/", "og:image:alt": "Harbor &ndash; Backup And Restore Harbor With Velero project logo", "og:type": ["documentation", "article"], "twitter:card": "summary", "og:title": "Harbor &ndash; Backup And Restore Harbor With Velero", "ogSiteName": "Harbor", "twitter:creator": "@project_harbor", "ogLocale": "en_US", "favicon": "https://goharbor.io/favicon.svg", "title": "\n      \nHarbor docs | Backup And Restore Harbor With Velero\n\n    ", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "twitter:site": "@project_harbor", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:locale": "en_US", "scrapeId": "2a1a2610-cb22-412a-9fda-5b4c4fa506e3", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/backup-restore", "url": "https://goharbor.io/docs/2.12.0/administration/backup-restore/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: What are some tips for using Backup And Restore Harbor With Velero in harbor-2-12-0 effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nIncrease CPU or memory resources available to Velero based on data size.\n\nIncrease the interval of the purging operation to avoid backup failures.\n\nUnderstand the limitations of data loss during backup and restore.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/backup-restore", "title": "Backup And Restore Harbor With Velero", "description": "Backup and restore is important for disaster recovery and data migration scenarios. With a tool like Velero, you can backup and restore your Harbor instances and avoid disruptions in service in the event of a disaster. Velero is an open source tool you can use to safely backup and restore, perform disaster recovery, and migrate Kubernetes cluster resources and persistent volumes.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:22:35", "type": "best_practices", "page_metadata": {"ogUrl": "https://goharbor.io/docs/2.12.0/administration/backup-restore/", "ogTitle": "Harbor &ndash; Backup And Restore Harbor With Velero", "og:image:type": "image/png", "og:site_name": "Harbor", "generator": "Hugo 0.74.0", "og:url": "https://goharbor.io/docs/2.12.0/administration/backup-restore/", "og:image:alt": "Harbor &ndash; Backup And Restore Harbor With Velero project logo", "og:type": ["documentation", "article"], "twitter:card": "summary", "og:title": "Harbor &ndash; Backup And Restore Harbor With Velero", "ogSiteName": "Harbor", "twitter:creator": "@project_harbor", "ogLocale": "en_US", "favicon": "https://goharbor.io/favicon.svg", "title": "\n      \nHarbor docs | Backup And Restore Harbor With Velero\n\n    ", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "twitter:site": "@project_harbor", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:locale": "en_US", "scrapeId": "2a1a2610-cb22-412a-9fda-5b4c4fa506e3", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/backup-restore", "url": "https://goharbor.io/docs/2.12.0/administration/backup-restore/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you explain what Configure a Per-Project CVE Allowlist is in harbor-2-12-0?\n\nAssistant: Sure, I'd be happy to explain Configure a Per-Project CVE Allowlist in harbor-2-12-0.\n\n# Configure a Per-Project CVE Allowlist\n\nThis page explains how to create and manage allowlists of Common Vulnerabilities and Exposures (CVE) for individual projects in Harbor, overriding the system-wide allowlist.Here's a quick rundown of what this is about:\n\n## Introduction\n\nWhen you run vulnerability scans, images that are subject to Common Vulnerabilities and Exposures (CVE) are identified. According to the severity of the CVE and your security settings, these images might not be permitted to run. You can create allowlists of CVEs to ignore during vulnerability scanning.\n\n## System-Wide CVE Allowlist\n\nHarbor administrators can set a system-wide CVE allowlist. For information about site-wide CVE allowlists, see [Configure System-Wide CVE Allowlists](https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/configure-system-allowlist/). By default, the system allowlist is applied to all projects. You can configure different CVE allowlists for individual projects, that override the system allowlist.\n\n## Steps to Configure Project CVE Allowlist\n\n1. Go to **Projects**, select a project, and select **Configuration**.\n\n2. Under **CVE allowlist**, select **Project allowlist**.\n\n3. Optionally click **Copy From System** to add all of the CVE IDs from the system CVE allowlist to this project allowlist.\n\n4. Click **Add** and enter a list of additional CVE IDs to ignore during vulnerability scanning of this project.\n\n5. Click **Add** at the bottom of the window to add the CVEs to the project allowlist.\n\n6. Optionally uncheck the **Never expires** checkbox and use the calendar selector to set an expiry date for the allowlist.\n\n7. Click **Save** at the bottom of the page to save your settings.\n\n## Managing Project CVE Allowlist\n\nAfter you have created a project allowlist, you can remove CVE IDs from the list by clicking the delete button next to it in the list. You can click **Add** at any time to add more CVE IDs to this project allowlist.\n\nIf CVEs are added to the system allowlist after you have created a project allowlist, click **Copy From System** to add the new entries from the system allowlist to the project allowlist.\n\nIf CVEs are deleted from the system allowlist after you have created a project allowlist, and if you added the system allowlist to the project allowlist, you must manually remove the deleted CVEs from the project allowlist. If you click **Copy From System** after CVEs have been deleted from the system allowlist, the deleted CVEs are not automatically removed from the project allowlist.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/configure-project-allowlist", "title": "Configure a Per-Project CVE Allowlist", "description": "This page explains how to create and manage allowlists of Common Vulnerabilities and Exposures (CVE) for individual projects in Harbor, overriding the system-wide allowlist.", "has_code_examples": false, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:23:07", "type": "overview", "page_metadata": {"og:locale": "en_US", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "favicon": "https://goharbor.io/favicon.svg", "og:type": ["documentation", "article"], "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/configure-project-allowlist/", "generator": "Hugo 0.74.0", "title": "\n      \nHarbor docs | Configure a Per-Project CVE Allowlist\n\n    ", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:image:alt": "Harbor &ndash; Configure a Per-Project CVE Allowlist project logo", "ogSiteName": "Harbor", "twitter:card": "summary", "ogLocale": "en_US", "og:image:type": "image/png", "og:site_name": "Harbor", "og:title": "Harbor &ndash; Configure a Per-Project CVE Allowlist", "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/configure-project-allowlist/", "twitter:site": "@project_harbor", "twitter:creator": "@project_harbor", "ogTitle": "Harbor &ndash; Configure a Per-Project CVE Allowlist", "scrapeId": "3673b66d-473c-453d-8cd7-dbbcff55ba22", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/configure-project-allowlist", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/configure-project-allowlist/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I introduction in harbor-2-12-0?\n\nAssistant: To introduction in harbor-2-12-0, here's what you do:\nWhen you run vulnerability scans, images that are subject to Common Vulnerabilities and Exposures (CVE) are identified. According to the severity of the CVE and your security settings, these images might not be permitted to run. You can create allowlists of CVEs to ignore during vulnerability scanning..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/configure-project-allowlist", "title": "Configure a Per-Project CVE Allowlist", "description": "This page explains how to create and manage allowlists of Common Vulnerabilities and Exposures (CVE) for individual projects in Harbor, overriding the system-wide allowlist.", "has_code_examples": false, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:23:07", "type": "section_detail", "page_metadata": {"og:locale": "en_US", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "favicon": "https://goharbor.io/favicon.svg", "og:type": ["documentation", "article"], "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/configure-project-allowlist/", "generator": "Hugo 0.74.0", "title": "\n      \nHarbor docs | Configure a Per-Project CVE Allowlist\n\n    ", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:image:alt": "Harbor &ndash; Configure a Per-Project CVE Allowlist project logo", "ogSiteName": "Harbor", "twitter:card": "summary", "ogLocale": "en_US", "og:image:type": "image/png", "og:site_name": "Harbor", "og:title": "Harbor &ndash; Configure a Per-Project CVE Allowlist", "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/configure-project-allowlist/", "twitter:site": "@project_harbor", "twitter:creator": "@project_harbor", "ogTitle": "Harbor &ndash; Configure a Per-Project CVE Allowlist", "scrapeId": "3673b66d-473c-453d-8cd7-dbbcff55ba22", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/configure-project-allowlist", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/configure-project-allowlist/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I system-wide cve allowlist in harbor-2-12-0?\n\nAssistant: To system-wide cve allowlist in harbor-2-12-0, here's what you do:\nHarbor administrators can set a system-wide CVE allowlist. For information about site-wide CVE allowlists, see [Configure System-Wide CVE Allowlists](https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/configure-system-allowlist/). By default, the system allowlist is applied to all projects. You can configure different CVE allowlists for individual projects, that override the system allowlist..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/configure-project-allowlist", "title": "Configure a Per-Project CVE Allowlist", "description": "This page explains how to create and manage allowlists of Common Vulnerabilities and Exposures (CVE) for individual projects in Harbor, overriding the system-wide allowlist.", "has_code_examples": false, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:23:07", "type": "section_detail", "page_metadata": {"og:locale": "en_US", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "favicon": "https://goharbor.io/favicon.svg", "og:type": ["documentation", "article"], "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/configure-project-allowlist/", "generator": "Hugo 0.74.0", "title": "\n      \nHarbor docs | Configure a Per-Project CVE Allowlist\n\n    ", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:image:alt": "Harbor &ndash; Configure a Per-Project CVE Allowlist project logo", "ogSiteName": "Harbor", "twitter:card": "summary", "ogLocale": "en_US", "og:image:type": "image/png", "og:site_name": "Harbor", "og:title": "Harbor &ndash; Configure a Per-Project CVE Allowlist", "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/configure-project-allowlist/", "twitter:site": "@project_harbor", "twitter:creator": "@project_harbor", "ogTitle": "Harbor &ndash; Configure a Per-Project CVE Allowlist", "scrapeId": "3673b66d-473c-453d-8cd7-dbbcff55ba22", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/configure-project-allowlist", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/configure-project-allowlist/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I steps to configure project cve allowlist in harbor-2-12-0?\n\nAssistant: To steps to configure project cve allowlist in harbor-2-12-0, here's what you do:\n1. Go to **Projects**, select a project, and select **Configuration**.\n\n2. Under **CVE allowlist**, select **Project allowlist**.\n\n3. Optionally click **Copy From System** to add all of the CVE IDs from the system CVE allowlist to this project allowlist.\n\n4. Click **Add** and enter a list of additional CVE IDs to ignore during vulnerability scanning of this project.\n\n5. Click **Add** at the bottom of the window to add the CVEs to the project allowlist.\n\n6. Optionally uncheck the **Never expires** checkbox and use the calendar selector to set an expiry date for the allowlist.\n\n7. Click **Save** at the bottom of the page to save your settings..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/configure-project-allowlist", "title": "Configure a Per-Project CVE Allowlist", "description": "This page explains how to create and manage allowlists of Common Vulnerabilities and Exposures (CVE) for individual projects in Harbor, overriding the system-wide allowlist.", "has_code_examples": false, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:23:07", "type": "section_detail", "page_metadata": {"og:locale": "en_US", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "favicon": "https://goharbor.io/favicon.svg", "og:type": ["documentation", "article"], "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/configure-project-allowlist/", "generator": "Hugo 0.74.0", "title": "\n      \nHarbor docs | Configure a Per-Project CVE Allowlist\n\n    ", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:image:alt": "Harbor &ndash; Configure a Per-Project CVE Allowlist project logo", "ogSiteName": "Harbor", "twitter:card": "summary", "ogLocale": "en_US", "og:image:type": "image/png", "og:site_name": "Harbor", "og:title": "Harbor &ndash; Configure a Per-Project CVE Allowlist", "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/configure-project-allowlist/", "twitter:site": "@project_harbor", "twitter:creator": "@project_harbor", "ogTitle": "Harbor &ndash; Configure a Per-Project CVE Allowlist", "scrapeId": "3673b66d-473c-453d-8cd7-dbbcff55ba22", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/configure-project-allowlist", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/configure-project-allowlist/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I managing project cve allowlist in harbor-2-12-0?\n\nAssistant: To managing project cve allowlist in harbor-2-12-0, here's what you do:\nAfter you have created a project allowlist, you can remove CVE IDs from the list by clicking the delete button next to it in the list. You can click **Add** at any time to add more CVE IDs to this project allowlist.\n\nIf CVEs are added to the system allowlist after you have created a project allowlist, click **Copy From System** to add the new entries from the system allowlist to the project allowlist.\n\nIf CVEs are deleted from the system allowlist after you have created a project allowlist, and if you added the system allowlist to the project allowlist, you must manually remove the deleted CVEs from the project allowlist. If you click **Copy From System** after CVEs have been deleted from the system allowlist, the deleted CVEs are not automatically removed from the project allowlist..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/configure-project-allowlist", "title": "Configure a Per-Project CVE Allowlist", "description": "This page explains how to create and manage allowlists of Common Vulnerabilities and Exposures (CVE) for individual projects in Harbor, overriding the system-wide allowlist.", "has_code_examples": false, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:23:07", "type": "section_detail", "page_metadata": {"og:locale": "en_US", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "favicon": "https://goharbor.io/favicon.svg", "og:type": ["documentation", "article"], "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/configure-project-allowlist/", "generator": "Hugo 0.74.0", "title": "\n      \nHarbor docs | Configure a Per-Project CVE Allowlist\n\n    ", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:image:alt": "Harbor &ndash; Configure a Per-Project CVE Allowlist project logo", "ogSiteName": "Harbor", "twitter:card": "summary", "ogLocale": "en_US", "og:image:type": "image/png", "og:site_name": "Harbor", "og:title": "Harbor &ndash; Configure a Per-Project CVE Allowlist", "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/configure-project-allowlist/", "twitter:site": "@project_harbor", "twitter:creator": "@project_harbor", "ogTitle": "Harbor &ndash; Configure a Per-Project CVE Allowlist", "scrapeId": "3673b66d-473c-453d-8cd7-dbbcff55ba22", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/configure-project-allowlist", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/configure-project-allowlist/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: What are some tips for using Configure a Per-Project CVE Allowlist in harbor-2-12-0 effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nUse a comma-separated list or newlines to add multiple CVE IDs to the project allowlist.\n\nOptionally set an expiry date for the allowlist to manage its validity.\n\nRegularly check for updates in the system allowlist and synchronize with the project allowlist.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/configure-project-allowlist", "title": "Configure a Per-Project CVE Allowlist", "description": "This page explains how to create and manage allowlists of Common Vulnerabilities and Exposures (CVE) for individual projects in Harbor, overriding the system-wide allowlist.", "has_code_examples": false, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:23:07", "type": "best_practices", "page_metadata": {"og:locale": "en_US", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "favicon": "https://goharbor.io/favicon.svg", "og:type": ["documentation", "article"], "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/configure-project-allowlist/", "generator": "Hugo 0.74.0", "title": "\n      \nHarbor docs | Configure a Per-Project CVE Allowlist\n\n    ", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:image:alt": "Harbor &ndash; Configure a Per-Project CVE Allowlist project logo", "ogSiteName": "Harbor", "twitter:card": "summary", "ogLocale": "en_US", "og:image:type": "image/png", "og:site_name": "Harbor", "og:title": "Harbor &ndash; Configure a Per-Project CVE Allowlist", "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/configure-project-allowlist/", "twitter:site": "@project_harbor", "twitter:creator": "@project_harbor", "ogTitle": "Harbor &ndash; Configure a Per-Project CVE Allowlist", "scrapeId": "3673b66d-473c-453d-8cd7-dbbcff55ba22", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/configure-project-allowlist", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/configure-project-allowlist/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you explain what Configure System-Wide CVE Allowlists is in harbor-2-12-0?\n\nAssistant: Sure, I'd be happy to explain Configure System-Wide CVE Allowlists in harbor-2-12-0.\n\n# Configure System-Wide CVE Allowlists\n\nInstructions for creating system-wide CVE allowlists to ignore during vulnerability scanning in Harbor.Here's a quick rundown of what this is about:\n\n## Overview\n\nWhen you run vulnerability scans, images that are subject to Common Vulnerabilities and Exposures (CVE) are identified. According to the severity of the CVE and your security settings, these images might not be permitted to run. As a Harbor system administrator, you can create allowlists of CVEs to ignore during vulnerability scanning.\n\n## System-Wide CVE Allowlists\n\nYou can set a system-wide CVE allowlist or you can set CVE allowlists on a per-project basis. System-wide CVE allowlists apply to all of the projects in a Harbor instance.\n\n## Steps to Configure System-Wide CVE Allowlists\n\n1. Go to **Configuration** > **Security**.\n\n2. Under **Deployment security**, click **Add**.\n\n3. Enter the list of CVE IDs to ignore during vulnerability scanning. Either use a comma-separated list or newlines to add multiple CVE IDs to the list.\n\n4. Click **Add** at the bottom of the window to add the list.\n\n5. Optionally uncheck the **Never expires** checkbox and use the calendar selector to set an expiry date for the allowlist.\n\n6. Click **Save** at the bottom of the page to save your settings.\n\n## Managing CVE Allowlists\n\nAfter you have created a system allowlist, you can remove CVE IDs from the list by clicking the delete button next to it in the list. You can click **Add** to add more CVE IDs to the system allowlist.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/configure-system-allowlist", "title": "Configure System-Wide CVE Allowlists", "description": "Instructions for creating system-wide CVE allowlists to ignore during vulnerability scanning in Harbor.", "has_code_examples": false, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:23:27", "type": "overview", "page_metadata": {"title": "\n      \nHarbor docs | Configure System-Wide CVE Allowlists\n\n    ", "ogLocale": "en_US", "og:type": ["documentation", "article"], "og:locale": "en_US", "generator": "Hugo 0.74.0", "favicon": "https://goharbor.io/favicon.svg", "ogSiteName": "Harbor", "ogTitle": "Harbor &ndash; Configure System-Wide CVE Allowlists", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/configure-system-allowlist/", "og:image:alt": "Harbor &ndash; Configure System-Wide CVE Allowlists project logo", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:site_name": "Harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "twitter:creator": "@project_harbor", "og:title": "Harbor &ndash; Configure System-Wide CVE Allowlists", "og:image:type": "image/png", "twitter:site": "@project_harbor", "og:url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/configure-system-allowlist/", "twitter:card": "summary", "scrapeId": "5f904a86-516a-4e71-ae06-74dfdde4ebc2", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/configure-system-allowlist", "url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/configure-system-allowlist/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I overview in harbor-2-12-0?\n\nAssistant: To overview in harbor-2-12-0, here's what you do:\nWhen you run vulnerability scans, images that are subject to Common Vulnerabilities and Exposures (CVE) are identified. According to the severity of the CVE and your security settings, these images might not be permitted to run. As a Harbor system administrator, you can create allowlists of CVEs to ignore during vulnerability scanning..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/configure-system-allowlist", "title": "Configure System-Wide CVE Allowlists", "description": "Instructions for creating system-wide CVE allowlists to ignore during vulnerability scanning in Harbor.", "has_code_examples": false, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:23:27", "type": "section_detail", "page_metadata": {"title": "\n      \nHarbor docs | Configure System-Wide CVE Allowlists\n\n    ", "ogLocale": "en_US", "og:type": ["documentation", "article"], "og:locale": "en_US", "generator": "Hugo 0.74.0", "favicon": "https://goharbor.io/favicon.svg", "ogSiteName": "Harbor", "ogTitle": "Harbor &ndash; Configure System-Wide CVE Allowlists", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/configure-system-allowlist/", "og:image:alt": "Harbor &ndash; Configure System-Wide CVE Allowlists project logo", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:site_name": "Harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "twitter:creator": "@project_harbor", "og:title": "Harbor &ndash; Configure System-Wide CVE Allowlists", "og:image:type": "image/png", "twitter:site": "@project_harbor", "og:url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/configure-system-allowlist/", "twitter:card": "summary", "scrapeId": "5f904a86-516a-4e71-ae06-74dfdde4ebc2", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/configure-system-allowlist", "url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/configure-system-allowlist/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I system-wide cve allowlists in harbor-2-12-0?\n\nAssistant: To system-wide cve allowlists in harbor-2-12-0, here's what you do:\nYou can set a system-wide CVE allowlist or you can set CVE allowlists on a per-project basis. System-wide CVE allowlists apply to all of the projects in a Harbor instance..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/configure-system-allowlist", "title": "Configure System-Wide CVE Allowlists", "description": "Instructions for creating system-wide CVE allowlists to ignore during vulnerability scanning in Harbor.", "has_code_examples": false, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:23:27", "type": "section_detail", "page_metadata": {"title": "\n      \nHarbor docs | Configure System-Wide CVE Allowlists\n\n    ", "ogLocale": "en_US", "og:type": ["documentation", "article"], "og:locale": "en_US", "generator": "Hugo 0.74.0", "favicon": "https://goharbor.io/favicon.svg", "ogSiteName": "Harbor", "ogTitle": "Harbor &ndash; Configure System-Wide CVE Allowlists", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/configure-system-allowlist/", "og:image:alt": "Harbor &ndash; Configure System-Wide CVE Allowlists project logo", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:site_name": "Harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "twitter:creator": "@project_harbor", "og:title": "Harbor &ndash; Configure System-Wide CVE Allowlists", "og:image:type": "image/png", "twitter:site": "@project_harbor", "og:url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/configure-system-allowlist/", "twitter:card": "summary", "scrapeId": "5f904a86-516a-4e71-ae06-74dfdde4ebc2", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/configure-system-allowlist", "url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/configure-system-allowlist/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I steps to configure system-wide cve allowlists in harbor-2-12-0?\n\nAssistant: To steps to configure system-wide cve allowlists in harbor-2-12-0, here's what you do:\n1. Go to **Configuration** > **Security**.\n\n2. Under **Deployment security**, click **Add**.\n\n3. Enter the list of CVE IDs to ignore during vulnerability scanning. Either use a comma-separated list or newlines to add multiple CVE IDs to the list.\n\n4. Click **Add** at the bottom of the window to add the list.\n\n5. Optionally uncheck the **Never expires** checkbox and use the calendar selector to set an expiry date for the allowlist.\n\n6. Click **Save** at the bottom of the page to save your settings..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/configure-system-allowlist", "title": "Configure System-Wide CVE Allowlists", "description": "Instructions for creating system-wide CVE allowlists to ignore during vulnerability scanning in Harbor.", "has_code_examples": false, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:23:27", "type": "section_detail", "page_metadata": {"title": "\n      \nHarbor docs | Configure System-Wide CVE Allowlists\n\n    ", "ogLocale": "en_US", "og:type": ["documentation", "article"], "og:locale": "en_US", "generator": "Hugo 0.74.0", "favicon": "https://goharbor.io/favicon.svg", "ogSiteName": "Harbor", "ogTitle": "Harbor &ndash; Configure System-Wide CVE Allowlists", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/configure-system-allowlist/", "og:image:alt": "Harbor &ndash; Configure System-Wide CVE Allowlists project logo", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:site_name": "Harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "twitter:creator": "@project_harbor", "og:title": "Harbor &ndash; Configure System-Wide CVE Allowlists", "og:image:type": "image/png", "twitter:site": "@project_harbor", "og:url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/configure-system-allowlist/", "twitter:card": "summary", "scrapeId": "5f904a86-516a-4e71-ae06-74dfdde4ebc2", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/configure-system-allowlist", "url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/configure-system-allowlist/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I managing cve allowlists in harbor-2-12-0?\n\nAssistant: To managing cve allowlists in harbor-2-12-0, here's what you do:\nAfter you have created a system allowlist, you can remove CVE IDs from the list by clicking the delete button next to it in the list. You can click **Add** to add more CVE IDs to the system allowlist..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/configure-system-allowlist", "title": "Configure System-Wide CVE Allowlists", "description": "Instructions for creating system-wide CVE allowlists to ignore during vulnerability scanning in Harbor.", "has_code_examples": false, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:23:27", "type": "section_detail", "page_metadata": {"title": "\n      \nHarbor docs | Configure System-Wide CVE Allowlists\n\n    ", "ogLocale": "en_US", "og:type": ["documentation", "article"], "og:locale": "en_US", "generator": "Hugo 0.74.0", "favicon": "https://goharbor.io/favicon.svg", "ogSiteName": "Harbor", "ogTitle": "Harbor &ndash; Configure System-Wide CVE Allowlists", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/configure-system-allowlist/", "og:image:alt": "Harbor &ndash; Configure System-Wide CVE Allowlists project logo", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:site_name": "Harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "twitter:creator": "@project_harbor", "og:title": "Harbor &ndash; Configure System-Wide CVE Allowlists", "og:image:type": "image/png", "twitter:site": "@project_harbor", "og:url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/configure-system-allowlist/", "twitter:card": "summary", "scrapeId": "5f904a86-516a-4e71-ae06-74dfdde4ebc2", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/configure-system-allowlist", "url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/configure-system-allowlist/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: What are some tips for using Configure System-Wide CVE Allowlists in harbor-2-12-0 effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nUse a comma-separated list or newlines to add multiple CVE IDs to the allowlist.\n\nOptionally set an expiry date for the allowlist to manage its validity.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/configure-system-allowlist", "title": "Configure System-Wide CVE Allowlists", "description": "Instructions for creating system-wide CVE allowlists to ignore during vulnerability scanning in Harbor.", "has_code_examples": false, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:23:27", "type": "best_practices", "page_metadata": {"title": "\n      \nHarbor docs | Configure System-Wide CVE Allowlists\n\n    ", "ogLocale": "en_US", "og:type": ["documentation", "article"], "og:locale": "en_US", "generator": "Hugo 0.74.0", "favicon": "https://goharbor.io/favicon.svg", "ogSiteName": "Harbor", "ogTitle": "Harbor &ndash; Configure System-Wide CVE Allowlists", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/configure-system-allowlist/", "og:image:alt": "Harbor &ndash; Configure System-Wide CVE Allowlists project logo", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:site_name": "Harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "twitter:creator": "@project_harbor", "og:title": "Harbor &ndash; Configure System-Wide CVE Allowlists", "og:image:type": "image/png", "twitter:site": "@project_harbor", "og:url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/configure-system-allowlist/", "twitter:card": "summary", "scrapeId": "5f904a86-516a-4e71-ae06-74dfdde4ebc2", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/configure-system-allowlist", "url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/configure-system-allowlist/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you explain what Test Harbor Upgrade is in harbor-2-12-0?\n\nAssistant: Sure, I'd be happy to explain Test Harbor Upgrade in harbor-2-12-0.\n\n# Test Harbor Upgrade\n\nA comprehensive guide to preparing for and executing an upgrade of the Harbor system, including pre-upgrade preparations, upgrade steps, and post-upgrade confirmations.Here's a quick rundown of what this is about:\n\n## Prepare data\n\n01. Add user usera userb userc userd usere, set usera userb as system admin.\n02. Create project projecta projectc as private, create projectb as public.\n03. Add usera as projecta’s admin, userc as developer, and userd as guest. Do the same to projectb and projectc.\n04. Login harbor as usera, push an unsigned image into projecta, then push a signed image to projecta.\n05. Login harbor as userc, push an unsigned image into projecta, then push a signed image to projeca.\n06. Login harbor as userd, push each image one time.\n07. Repeat 4 5 6 to projectb and projectc.\n08. Add one endpoint to harbor.\n09. Add an immediate replication rule to projeca, a schedule rule to projectb, a manual rule to projectc, trigger each rule one time.\n10. Add 5 system label syslabel1 to syslabel5 and tag syslabel1 and syslabel2 to all unsigned image.\n11. In each project add 5 project label projlabela to projlabele, add projlabela projlabelb and projlabelc to signed image.\n12. Trigger one scan all job to scan all images.(For Trivy enabled instance)\n13. Update project publicly, content trust, severity and scanning settings.\n14. Update Harbor email, token expire read only and scan settings.\n15. Update repository info.\n\n    **NOTE**: Create user step is not needed if auth mode is LDAP.\n\n## Upgrade\n\n## Follow the upgrade guide\n\n1. Run db migrator image to backup database.\n2. Run db migrator image to migrate database.\n3. Install new version harbor.\n\n## After upgrade\n\n01. Confirm users are exist and available(No need for VIC and LDAP Mode).\n02. Confirm users have the correct role.\n03. Confirm labels are existing and labeled correct.(No need for VIC)\n04. Confirm endpoint exist.\n05. Confirm replication rule exist and works well.\n06. Confirm project level settings(publicly, content trust, scan) same as before.\n07. Confirm system level settings(email token expire scan) same as before.\n08. Confirm scan result the same as before upgrade.\n09. Confirm access log the same as before upgrade.\n10. Confirm repository info the same as before.\n11. Confirm other image metadata(e.g. author, size) the same as before.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/upgrade/upgrade-test", "title": "Test Harbor Upgrade", "description": "A comprehensive guide to preparing for and executing an upgrade of the Harbor system, including pre-upgrade preparations, upgrade steps, and post-upgrade confirmations.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:24:06", "type": "overview", "page_metadata": {"og:title": "Harbor &ndash; Test Harbor Upgrade", "og:url": "https://goharbor.io/docs/2.12.0/administration/upgrade/upgrade-test/", "ogTitle": "Harbor &ndash; Test Harbor Upgrade", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogSiteName": "Harbor", "twitter:creator": "@project_harbor", "ogLocale": "en_US", "og:site_name": "Harbor", "twitter:site": "@project_harbor", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/upgrade/upgrade-test/", "og:image:alt": "Harbor &ndash; Test Harbor Upgrade project logo", "favicon": "https://goharbor.io/favicon.svg", "generator": "Hugo 0.74.0", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "title": "\n      \nHarbor docs | Test Harbor Upgrade\n\n    ", "og:image:type": "image/png", "twitter:card": "summary", "og:locale": "en_US", "og:type": ["documentation", "article"], "scrapeId": "6659396a-4028-4189-b27e-42d8eb2e7671", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/upgrade/upgrade-test", "url": "https://goharbor.io/docs/2.12.0/administration/upgrade/upgrade-test/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I prepare data in harbor-2-12-0?\n\nAssistant: To prepare data in harbor-2-12-0, here's what you do:\n01. Add user usera userb userc userd usere, set usera userb as system admin.\n02. Create project projecta projectc as private, create projectb as public.\n03. Add usera as projecta’s admin, userc as developer, and userd as guest. Do the same to projectb and projectc.\n04. Login harbor as usera, push an unsigned image into projecta, then push a signed image to projecta.\n05. Login harbor as userc, push an unsigned image into projecta, then push a signed image to projeca.\n06. Login harbor as userd, push each image one time.\n07. Repeat 4 5 6 to projectb and projectc.\n08. Add one endpoint to harbor.\n09. Add an immediate replication rule to projeca, a schedule rule to projectb, a manual rule to projectc, trigger each rule one time.\n10. Add 5 system label syslabel1 to syslabel5 and tag syslabel1 and syslabel2 to all unsigned image.\n11. In each project add 5 project label projlabela to projlabele, add projlabela projlabelb and projlabelc to signed image.\n12. Trigger one scan all job to scan all images.(For Trivy enabled instance)\n13. Update project publicly, content trust, severity and scanning settings.\n14. Update Harbor email, token expire read only and scan settings.\n15. Update repository info.\n\n    **NOTE**: Create user step is not needed if auth mode is LDAP..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/upgrade/upgrade-test", "title": "Test Harbor Upgrade", "description": "A comprehensive guide to preparing for and executing an upgrade of the Harbor system, including pre-upgrade preparations, upgrade steps, and post-upgrade confirmations.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:24:06", "type": "section_detail", "page_metadata": {"og:title": "Harbor &ndash; Test Harbor Upgrade", "og:url": "https://goharbor.io/docs/2.12.0/administration/upgrade/upgrade-test/", "ogTitle": "Harbor &ndash; Test Harbor Upgrade", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogSiteName": "Harbor", "twitter:creator": "@project_harbor", "ogLocale": "en_US", "og:site_name": "Harbor", "twitter:site": "@project_harbor", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/upgrade/upgrade-test/", "og:image:alt": "Harbor &ndash; Test Harbor Upgrade project logo", "favicon": "https://goharbor.io/favicon.svg", "generator": "Hugo 0.74.0", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "title": "\n      \nHarbor docs | Test Harbor Upgrade\n\n    ", "og:image:type": "image/png", "twitter:card": "summary", "og:locale": "en_US", "og:type": ["documentation", "article"], "scrapeId": "6659396a-4028-4189-b27e-42d8eb2e7671", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/upgrade/upgrade-test", "url": "https://goharbor.io/docs/2.12.0/administration/upgrade/upgrade-test/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I upgrade in harbor-2-12-0?\n\nAssistant: To upgrade in harbor-2-12-0, here's what you do:\n## Follow the upgrade guide\n\n1. Run db migrator image to backup database.\n2. Run db migrator image to migrate database.\n3. Install new version harbor..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/upgrade/upgrade-test", "title": "Test Harbor Upgrade", "description": "A comprehensive guide to preparing for and executing an upgrade of the Harbor system, including pre-upgrade preparations, upgrade steps, and post-upgrade confirmations.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:24:06", "type": "section_detail", "page_metadata": {"og:title": "Harbor &ndash; Test Harbor Upgrade", "og:url": "https://goharbor.io/docs/2.12.0/administration/upgrade/upgrade-test/", "ogTitle": "Harbor &ndash; Test Harbor Upgrade", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogSiteName": "Harbor", "twitter:creator": "@project_harbor", "ogLocale": "en_US", "og:site_name": "Harbor", "twitter:site": "@project_harbor", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/upgrade/upgrade-test/", "og:image:alt": "Harbor &ndash; Test Harbor Upgrade project logo", "favicon": "https://goharbor.io/favicon.svg", "generator": "Hugo 0.74.0", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "title": "\n      \nHarbor docs | Test Harbor Upgrade\n\n    ", "og:image:type": "image/png", "twitter:card": "summary", "og:locale": "en_US", "og:type": ["documentation", "article"], "scrapeId": "6659396a-4028-4189-b27e-42d8eb2e7671", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/upgrade/upgrade-test", "url": "https://goharbor.io/docs/2.12.0/administration/upgrade/upgrade-test/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I after upgrade in harbor-2-12-0?\n\nAssistant: To after upgrade in harbor-2-12-0, here's what you do:\n01. Confirm users are exist and available(No need for VIC and LDAP Mode).\n02. Confirm users have the correct role.\n03. Confirm labels are existing and labeled correct.(No need for VIC)\n04. Confirm endpoint exist.\n05. Confirm replication rule exist and works well.\n06. Confirm project level settings(publicly, content trust, scan) same as before.\n07. Confirm system level settings(email token expire scan) same as before.\n08. Confirm scan result the same as before upgrade.\n09. Confirm access log the same as before upgrade.\n10. Confirm repository info the same as before.\n11. Confirm other image metadata(e.g. author, size) the same as before..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/upgrade/upgrade-test", "title": "Test Harbor Upgrade", "description": "A comprehensive guide to preparing for and executing an upgrade of the Harbor system, including pre-upgrade preparations, upgrade steps, and post-upgrade confirmations.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:24:06", "type": "section_detail", "page_metadata": {"og:title": "Harbor &ndash; Test Harbor Upgrade", "og:url": "https://goharbor.io/docs/2.12.0/administration/upgrade/upgrade-test/", "ogTitle": "Harbor &ndash; Test Harbor Upgrade", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogSiteName": "Harbor", "twitter:creator": "@project_harbor", "ogLocale": "en_US", "og:site_name": "Harbor", "twitter:site": "@project_harbor", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/upgrade/upgrade-test/", "og:image:alt": "Harbor &ndash; Test Harbor Upgrade project logo", "favicon": "https://goharbor.io/favicon.svg", "generator": "Hugo 0.74.0", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "title": "\n      \nHarbor docs | Test Harbor Upgrade\n\n    ", "og:image:type": "image/png", "twitter:card": "summary", "og:locale": "en_US", "og:type": ["documentation", "article"], "scrapeId": "6659396a-4028-4189-b27e-42d8eb2e7671", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/upgrade/upgrade-test", "url": "https://goharbor.io/docs/2.12.0/administration/upgrade/upgrade-test/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: What are some tips for using Test Harbor Upgrade in harbor-2-12-0 effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nCreate user step is not needed if auth mode is LDAP.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/upgrade/upgrade-test", "title": "Test Harbor Upgrade", "description": "A comprehensive guide to preparing for and executing an upgrade of the Harbor system, including pre-upgrade preparations, upgrade steps, and post-upgrade confirmations.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:24:06", "type": "best_practices", "page_metadata": {"og:title": "Harbor &ndash; Test Harbor Upgrade", "og:url": "https://goharbor.io/docs/2.12.0/administration/upgrade/upgrade-test/", "ogTitle": "Harbor &ndash; Test Harbor Upgrade", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogSiteName": "Harbor", "twitter:creator": "@project_harbor", "ogLocale": "en_US", "og:site_name": "Harbor", "twitter:site": "@project_harbor", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/upgrade/upgrade-test/", "og:image:alt": "Harbor &ndash; Test Harbor Upgrade project logo", "favicon": "https://goharbor.io/favicon.svg", "generator": "Hugo 0.74.0", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "title": "\n      \nHarbor docs | Test Harbor Upgrade\n\n    ", "og:image:type": "image/png", "twitter:card": "summary", "og:locale": "en_US", "og:type": ["documentation", "article"], "scrapeId": "6659396a-4028-4189-b27e-42d8eb2e7671", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/upgrade/upgrade-test", "url": "https://goharbor.io/docs/2.12.0/administration/upgrade/upgrade-test/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you explain what Troubleshooting Harbor Installation is in harbor-2-12-0?\n\nAssistant: Sure, I'd be happy to explain Troubleshooting Harbor Installation in harbor-2-12-0.\n\n# Troubleshooting Harbor Installation\n\nThe following sections help you to solve problems when installing Harbor.Here's a quick rundown of what this is about:\n\n## Access Harbor Logs\n\nBy default, registry data is persisted in the host’s `/data/` directory. This data remains unchanged even when Harbor’s containers are removed and/or recreated, you can edit the `data_volume` in `harbor.yml` file to change this directory.\n\nIn addition, Harbor uses `rsyslog` to collect the logs of each container. By default, these log files are stored in the directory `/var/log/harbor/` on the target host for troubleshooting, also you can change the log directory in `harbor.yml`.\n\n## Harbor Does Not Start or Functions Incorrectly\n\nIf Harbor does not start or functions incorrectly, run the following command to check whether all of Harbor’s containers are in the `Up` state.\n\n```fallback\nsudo docker compose ps\n        Name                     Command               State                    Ports\n  -----------------------------------------------------------------------------------------------------------------------------\n  harbor-core         /harbor/start.sh                 Up\n  harbor-db           /entrypoint.sh postgres          Up      5432/tcp\n  harbor-jobservice   /harbor/start.sh                 Up\n  harbor-log          /bin/sh -c /usr/local/bin/ ...   Up      127.0.0.1:1514->10514/tcp\n  harbor-portal       nginx -g daemon off;             Up      80/tcp\n  nginx               nginx -g daemon off;             Up      0.0.0.0:443->443/tcp, 0.0.0.0:4443->4443/tcp, 0.0.0.0:80->80/tcp\n  redis               docker-entrypoint.sh redis ...   Up      6379/tcp\n  registry            /entrypoint.sh /etc/regist ...   Up      5000/tcp\n  registryctl         /harbor/start.sh                 Up\n```\n\nIf a container is not in the `Up` state, check the log file for that container in `/var/log/harbor`. For example, if the `harbor-core` container is not running, look at the `core.log` log file.\n\n## Using `nginx` or Load Balancing\n\nIf Harbor is running behind an `nginx` proxy or elastic load balancing, open the file `common/config/nginx/nginx.conf` and search for the following line.\n\n```fallback\nproxy_set_header X-Forwarded-Proto $scheme;\n```\n\nIf the proxy already has similar settings, remove it from the sections `location /`, `location /v2/` and `location /service/` and redeploy Harbor. For instructions about how to redeploy Harbor, see [Reconfigure Harbor and Manage the Harbor Lifecycle](https://goharbor.io/docs/2.12.0/install-config/reconfigure-manage-lifecycle/).\n\n## Troubleshoot HTTPS Connections\n\nIf you use an intermediate certificate from a certificate issuer, merge the intermediate certificate with your own certificate to create a certificate bundle. Run the following command.\n\n```fallback\ncat intermediate-certificate.pem >> yourdomain.com.crt\n```\n\nWhen the Docker daemon runs on certain operating systems, you might need to trust the certificate at the OS level. For example, run the following commands.\n\n- Ubuntu:\n\n```sh\ncp yourdomain.com.crt /usr/local/share/ca-certificates/yourdomain.com.crt\nupdate-ca-certificates\n```\n\n- Red Hat (CentOS etc):\n\n```sh\ncp yourdomain.com.crt /etc/pki/ca-trust/source/anchors/yourdomain.com.crt\nupdate-ca-trust\n```\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/install-config/troubleshoot-installation", "title": "Troubleshooting Harbor Installation", "description": "The following sections help you to solve problems when installing Harbor.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:25:56", "type": "overview", "page_metadata": {"ogSiteName": "Harbor", "twitter:creator": "@project_harbor", "ogTitle": "Harbor &ndash; Troubleshooting Harbor Installation", "og:site_name": "Harbor", "title": "\n      \nHarbor docs | Troubleshooting Harbor Installation\n\n    ", "favicon": "https://goharbor.io/favicon.svg", "og:image:type": "image/png", "ogLocale": "en_US", "twitter:card": "summary", "og:url": "https://goharbor.io/docs/2.12.0/install-config/troubleshoot-installation/", "og:image:alt": "Harbor &ndash; Troubleshooting Harbor Installation project logo", "og:type": ["documentation", "article"], "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "twitter:site": "@project_harbor", "generator": "Hugo 0.74.0", "ogUrl": "https://goharbor.io/docs/2.12.0/install-config/troubleshoot-installation/", "og:title": "Harbor &ndash; Troubleshooting Harbor Installation", "og:locale": "en_US", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "scrapeId": "4df4ad3c-05f3-48d6-806b-0a3ebf0ce571", "sourceURL": "https://goharbor.io/docs/2.12.0/install-config/troubleshoot-installation", "url": "https://goharbor.io/docs/2.12.0/install-config/troubleshoot-installation/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I access harbor logs in harbor-2-12-0?\n\nAssistant: To access harbor logs in harbor-2-12-0, here's what you do:\nBy default, registry data is persisted in the host’s `/data/` directory. This data remains unchanged even when Harbor’s containers are removed and/or recreated, you can edit the `data_volume` in `harbor.yml` file to change this directory.\n\nIn addition, Harbor uses `rsyslog` to collect the logs of each container. By default, these log files are stored in the directory `/var/log/harbor/` on the target host for troubleshooting, also you can change the log directory in `harbor.yml`..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/install-config/troubleshoot-installation", "title": "Troubleshooting Harbor Installation", "description": "The following sections help you to solve problems when installing Harbor.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:25:56", "type": "section_detail", "page_metadata": {"ogSiteName": "Harbor", "twitter:creator": "@project_harbor", "ogTitle": "Harbor &ndash; Troubleshooting Harbor Installation", "og:site_name": "Harbor", "title": "\n      \nHarbor docs | Troubleshooting Harbor Installation\n\n    ", "favicon": "https://goharbor.io/favicon.svg", "og:image:type": "image/png", "ogLocale": "en_US", "twitter:card": "summary", "og:url": "https://goharbor.io/docs/2.12.0/install-config/troubleshoot-installation/", "og:image:alt": "Harbor &ndash; Troubleshooting Harbor Installation project logo", "og:type": ["documentation", "article"], "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "twitter:site": "@project_harbor", "generator": "Hugo 0.74.0", "ogUrl": "https://goharbor.io/docs/2.12.0/install-config/troubleshoot-installation/", "og:title": "Harbor &ndash; Troubleshooting Harbor Installation", "og:locale": "en_US", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "scrapeId": "4df4ad3c-05f3-48d6-806b-0a3ebf0ce571", "sourceURL": "https://goharbor.io/docs/2.12.0/install-config/troubleshoot-installation", "url": "https://goharbor.io/docs/2.12.0/install-config/troubleshoot-installation/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I harbor does not start or functions incorrectly in harbor-2-12-0?\n\nAssistant: To harbor does not start or functions incorrectly in harbor-2-12-0, here's what you do:\nIf Harbor does not start or functions incorrectly, run the following command to check whether all of Harbor’s containers are in the `Up` state.\n\n```fallback\nsudo docker compose ps\n        Name                     Command               State                    Ports\n  -----------------------------------------------------------------------------------------------------------------------------\n  harbor-core         /harbor/start.sh                 Up\n  harbor-db           /entrypoint.sh postgres          Up      5432/tcp\n  harbor-jobservice   /harbor/start.sh                 Up\n  harbor-log          /bin/sh -c /usr/local/bin/ ...   Up      127.0.0.1:1514->10514/tcp\n  harbor-portal       nginx -g daemon off;             Up      80/tcp\n  nginx               nginx -g daemon off;             Up      0.0.0.0:443->443/tcp, 0.0.0.0:4443->4443/tcp, 0.0.0.0:80->80/tcp\n  redis               docker-entrypoint.sh redis ...   Up      6379/tcp\n  registry            /entrypoint.sh /etc/regist ...   Up      5000/tcp\n  registryctl         /harbor/start.sh                 Up\n```\n\nIf a container is not in the `Up` state, check the log file for that container in `/var/log/harbor`. For example, if the `harbor-core` container is not running, look at the `core.log` log file..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/install-config/troubleshoot-installation", "title": "Troubleshooting Harbor Installation", "description": "The following sections help you to solve problems when installing Harbor.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:25:56", "type": "section_detail", "page_metadata": {"ogSiteName": "Harbor", "twitter:creator": "@project_harbor", "ogTitle": "Harbor &ndash; Troubleshooting Harbor Installation", "og:site_name": "Harbor", "title": "\n      \nHarbor docs | Troubleshooting Harbor Installation\n\n    ", "favicon": "https://goharbor.io/favicon.svg", "og:image:type": "image/png", "ogLocale": "en_US", "twitter:card": "summary", "og:url": "https://goharbor.io/docs/2.12.0/install-config/troubleshoot-installation/", "og:image:alt": "Harbor &ndash; Troubleshooting Harbor Installation project logo", "og:type": ["documentation", "article"], "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "twitter:site": "@project_harbor", "generator": "Hugo 0.74.0", "ogUrl": "https://goharbor.io/docs/2.12.0/install-config/troubleshoot-installation/", "og:title": "Harbor &ndash; Troubleshooting Harbor Installation", "og:locale": "en_US", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "scrapeId": "4df4ad3c-05f3-48d6-806b-0a3ebf0ce571", "sourceURL": "https://goharbor.io/docs/2.12.0/install-config/troubleshoot-installation", "url": "https://goharbor.io/docs/2.12.0/install-config/troubleshoot-installation/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I using `nginx` or load balancing in harbor-2-12-0?\n\nAssistant: To using `nginx` or load balancing in harbor-2-12-0, here's what you do:\nIf Harbor is running behind an `nginx` proxy or elastic load balancing, open the file `common/config/nginx/nginx.conf` and search for the following line.\n\n```fallback\nproxy_set_header X-Forwarded-Proto $scheme;\n```\n\nIf the proxy already has similar settings, remove it from the sections `location /`, `location /v2/` and `location /service/` and redeploy Harbor. For instructions about how to redeploy Harbor, see [Reconfigure Harbor and Manage the Harbor Lifecycle](https://goharbor.io/docs/2.12.0/install-config/reconfigure-manage-lifecycle/)..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/install-config/troubleshoot-installation", "title": "Troubleshooting Harbor Installation", "description": "The following sections help you to solve problems when installing Harbor.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:25:56", "type": "section_detail", "page_metadata": {"ogSiteName": "Harbor", "twitter:creator": "@project_harbor", "ogTitle": "Harbor &ndash; Troubleshooting Harbor Installation", "og:site_name": "Harbor", "title": "\n      \nHarbor docs | Troubleshooting Harbor Installation\n\n    ", "favicon": "https://goharbor.io/favicon.svg", "og:image:type": "image/png", "ogLocale": "en_US", "twitter:card": "summary", "og:url": "https://goharbor.io/docs/2.12.0/install-config/troubleshoot-installation/", "og:image:alt": "Harbor &ndash; Troubleshooting Harbor Installation project logo", "og:type": ["documentation", "article"], "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "twitter:site": "@project_harbor", "generator": "Hugo 0.74.0", "ogUrl": "https://goharbor.io/docs/2.12.0/install-config/troubleshoot-installation/", "og:title": "Harbor &ndash; Troubleshooting Harbor Installation", "og:locale": "en_US", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "scrapeId": "4df4ad3c-05f3-48d6-806b-0a3ebf0ce571", "sourceURL": "https://goharbor.io/docs/2.12.0/install-config/troubleshoot-installation", "url": "https://goharbor.io/docs/2.12.0/install-config/troubleshoot-installation/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I troubleshoot https connections in harbor-2-12-0?\n\nAssistant: To troubleshoot https connections in harbor-2-12-0, here's what you do:\nIf you use an intermediate certificate from a certificate issuer, merge the intermediate certificate with your own certificate to create a certificate bundle. Run the following command.\n\n```fallback\ncat intermediate-certificate.pem >> yourdomain.com.crt\n```\n\nWhen the Docker daemon runs on certain operating systems, you might need to trust the certificate at the OS level. For example, run the following commands.\n\n- Ubuntu:\n\n```sh\ncp yourdomain.com.crt /usr/local/share/ca-certificates/yourdomain.com.crt\nupdate-ca-certificates\n```\n\n- Red Hat (CentOS etc):\n\n```sh\ncp yourdomain.com.crt /etc/pki/ca-trust/source/anchors/yourdomain.com.crt\nupdate-ca-trust\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/install-config/troubleshoot-installation", "title": "Troubleshooting Harbor Installation", "description": "The following sections help you to solve problems when installing Harbor.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:25:56", "type": "section_detail", "page_metadata": {"ogSiteName": "Harbor", "twitter:creator": "@project_harbor", "ogTitle": "Harbor &ndash; Troubleshooting Harbor Installation", "og:site_name": "Harbor", "title": "\n      \nHarbor docs | Troubleshooting Harbor Installation\n\n    ", "favicon": "https://goharbor.io/favicon.svg", "og:image:type": "image/png", "ogLocale": "en_US", "twitter:card": "summary", "og:url": "https://goharbor.io/docs/2.12.0/install-config/troubleshoot-installation/", "og:image:alt": "Harbor &ndash; Troubleshooting Harbor Installation project logo", "og:type": ["documentation", "article"], "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "twitter:site": "@project_harbor", "generator": "Hugo 0.74.0", "ogUrl": "https://goharbor.io/docs/2.12.0/install-config/troubleshoot-installation/", "og:title": "Harbor &ndash; Troubleshooting Harbor Installation", "og:locale": "en_US", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "scrapeId": "4df4ad3c-05f3-48d6-806b-0a3ebf0ce571", "sourceURL": "https://goharbor.io/docs/2.12.0/install-config/troubleshoot-installation", "url": "https://goharbor.io/docs/2.12.0/install-config/troubleshoot-installation/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you give me some code examples for Troubleshooting Harbor Installation in harbor-2-12-0?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Check Harbor Containers State**:\n\n```yaml\nsudo docker compose ps\n        Name                     Command               State                    Ports\n  -----------------------------------------------------------------------------------------------------------------------------\n  harbor-core         /harbor/start.sh                 Up\n  harbor-db           /entrypoint.sh postgres          Up      5432/tcp\n  harbor-jobservice   /harbor/start.sh                 Up\n  harbor-log          /bin/sh -c /usr/local/bin/ ...   Up      127.0.0.1:1514->10514/tcp\n  harbor-portal       nginx -g daemon off;             Up      80/tcp\n  nginx               nginx -g daemon off;             Up      0.0.0.0:443->443/tcp, 0.0.0.0:4443->4443/tcp, 0.0.0.0:80->80/tcp\n  redis               docker-entrypoint.sh redis ...   Up      6379/tcp\n  registry            /entrypoint.sh /etc/regist ...   Up      5000/tcp\n  registryctl         /harbor/start.sh                 Up\n```\n\nThis snippet shows you how to check harbor containers state, which is an important aspect of troubleshooting harbor installation.\n\n", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/install-config/troubleshoot-installation", "title": "Troubleshooting Harbor Installation", "description": "The following sections help you to solve problems when installing Harbor.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:25:56", "type": "code_examples", "page_metadata": {"ogSiteName": "Harbor", "twitter:creator": "@project_harbor", "ogTitle": "Harbor &ndash; Troubleshooting Harbor Installation", "og:site_name": "Harbor", "title": "\n      \nHarbor docs | Troubleshooting Harbor Installation\n\n    ", "favicon": "https://goharbor.io/favicon.svg", "og:image:type": "image/png", "ogLocale": "en_US", "twitter:card": "summary", "og:url": "https://goharbor.io/docs/2.12.0/install-config/troubleshoot-installation/", "og:image:alt": "Harbor &ndash; Troubleshooting Harbor Installation project logo", "og:type": ["documentation", "article"], "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "twitter:site": "@project_harbor", "generator": "Hugo 0.74.0", "ogUrl": "https://goharbor.io/docs/2.12.0/install-config/troubleshoot-installation/", "og:title": "Harbor &ndash; Troubleshooting Harbor Installation", "og:locale": "en_US", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "scrapeId": "4df4ad3c-05f3-48d6-806b-0a3ebf0ce571", "sourceURL": "https://goharbor.io/docs/2.12.0/install-config/troubleshoot-installation", "url": "https://goharbor.io/docs/2.12.0/install-config/troubleshoot-installation/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: What are some tips for using Troubleshooting Harbor Installation in harbor-2-12-0 effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nEdit the `data_volume` in `harbor.yml` to change the default registry data directory.\n\nCheck the log file for any container that is not in the `Up` state in `/var/log/harbor`.\n\nRemove duplicate `proxy_set_header X-Forwarded-Proto $scheme;` settings in `nginx.conf` before redeploying Harbor.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/install-config/troubleshoot-installation", "title": "Troubleshooting Harbor Installation", "description": "The following sections help you to solve problems when installing Harbor.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:25:56", "type": "best_practices", "page_metadata": {"ogSiteName": "Harbor", "twitter:creator": "@project_harbor", "ogTitle": "Harbor &ndash; Troubleshooting Harbor Installation", "og:site_name": "Harbor", "title": "\n      \nHarbor docs | Troubleshooting Harbor Installation\n\n    ", "favicon": "https://goharbor.io/favicon.svg", "og:image:type": "image/png", "ogLocale": "en_US", "twitter:card": "summary", "og:url": "https://goharbor.io/docs/2.12.0/install-config/troubleshoot-installation/", "og:image:alt": "Harbor &ndash; Troubleshooting Harbor Installation project logo", "og:type": ["documentation", "article"], "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "twitter:site": "@project_harbor", "generator": "Hugo 0.74.0", "ogUrl": "https://goharbor.io/docs/2.12.0/install-config/troubleshoot-installation/", "og:title": "Harbor &ndash; Troubleshooting Harbor Installation", "og:locale": "en_US", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "scrapeId": "4df4ad3c-05f3-48d6-806b-0a3ebf0ce571", "sourceURL": "https://goharbor.io/docs/2.12.0/install-config/troubleshoot-installation", "url": "https://goharbor.io/docs/2.12.0/install-config/troubleshoot-installation/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you explain what Configure custom Certification Authorities for trivy is in harbor-2-12-0?\n\nAssistant: Sure, I'd be happy to explain Configure custom Certification Authorities for trivy in harbor-2-12-0.\n\n# Configure custom Certification Authorities for trivy\n\nThis page covers how to configure custom certificate authorities (CAs) for Trivy, particularly in enterprise environments where a web proxy is used.Here's a quick rundown of what this is about:\n\n## Preparation\n\n- You have a ca-bundle, or single public certificates of your CA, which is used by the webproxy.\n\n## Implementation\n\n1. Change into your harbor configuration folder\n2. Take a look at the docker-compose.yml and the configuration of trivy-adapter. It looks something like this:\n\n```yaml\n  trivy-adapter:\n    container_name: trivy-adapter\n    image: goharbor/trivy-adapter-photon:dev\n    restart: always\n    cap_drop:\n      - ALL\n    dns_search: .\n    depends_on:\n      - log\n      - redis\n    networks:\n      - harbor\n    volumes:\n      - type: bind\n        source: /data/trivy-adapter/trivy\n        target: /home/scanner/.cache/trivy\n      - type: bind\n        source: /data/trivy-adapter/reports\n        target: /home/scanner/.cache/reports\n      - type: bind\n        source: ./common/config/shared/trust-certificates\n        target: /harbor_cust_cert\n```\n\n1. note the binding which mounts to `/harbor_cust_cert` and add your ca-bundle or the single public-certificates into the mount-location, by copying them.\n2. (opt) if the host-path doesn’t fit for your case, you can also configure another path in the docker-compose file. be aware, that you might have to manually change this, if there are changes on new releases of trivy/harbor.\n3. restart your containers (at least trivy-adapter) by using `docker restart trivy-adapter` or `docker compose restart`. If you changed the bind path, it is necessary to start the services by using `docker compose up -d`.\n\n## Upgrades\n\nDepending on if you changed the path or not an update might overwrite the folder or mount from a different location. The following process makes sure, you don’t run into anything unexpected\n\n1. backup your certificates to a folder, which is unrelated to harbor-configuration\n2. upgrade harbor as always\n3. check if the `/harbor_cust_cert` mount is the same as the folder where your certificates reside (normally `./common/config/shared/trust-certificates`)\n4. check if the folder still holds your certificates, otherwise copy your backuped certificates to the location\n5. check if trivy is able to get CVE data.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/configure-custom-certs", "title": "Configure custom Certification Authorities for trivy", "description": "This page covers how to configure custom certificate authorities (CAs) for Trivy, particularly in enterprise environments where a web proxy is used.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:26:32", "type": "overview", "page_metadata": {"generator": "Hugo 0.74.0", "og:image:type": "image/png", "twitter:site": "@project_harbor", "favicon": "https://goharbor.io/favicon.svg", "twitter:card": "summary", "og:type": ["documentation", "article"], "ogTitle": "Harbor &ndash; Configure custom Certification Authorities for trivy", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "ogLocale": "en_US", "og:url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/configure-custom-certs/", "og:locale": "en_US", "og:site_name": "Harbor", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/configure-custom-certs/", "title": "\n      \nHarbor docs | Configure custom Certification Authorities for trivy\n\n    ", "og:title": "Harbor &ndash; Configure custom Certification Authorities for trivy", "ogSiteName": "Harbor", "og:image:alt": "Harbor &ndash; Configure custom Certification Authorities for trivy project logo", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "twitter:creator": "@project_harbor", "scrapeId": "78df5639-9acf-4e1a-86e9-c76813a72178", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/configure-custom-certs", "url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/configure-custom-certs/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I preparation in harbor-2-12-0?\n\nAssistant: To preparation in harbor-2-12-0, here's what you do:\n- You have a ca-bundle, or single public certificates of your CA, which is used by the webproxy..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/configure-custom-certs", "title": "Configure custom Certification Authorities for trivy", "description": "This page covers how to configure custom certificate authorities (CAs) for Trivy, particularly in enterprise environments where a web proxy is used.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:26:32", "type": "section_detail", "page_metadata": {"generator": "Hugo 0.74.0", "og:image:type": "image/png", "twitter:site": "@project_harbor", "favicon": "https://goharbor.io/favicon.svg", "twitter:card": "summary", "og:type": ["documentation", "article"], "ogTitle": "Harbor &ndash; Configure custom Certification Authorities for trivy", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "ogLocale": "en_US", "og:url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/configure-custom-certs/", "og:locale": "en_US", "og:site_name": "Harbor", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/configure-custom-certs/", "title": "\n      \nHarbor docs | Configure custom Certification Authorities for trivy\n\n    ", "og:title": "Harbor &ndash; Configure custom Certification Authorities for trivy", "ogSiteName": "Harbor", "og:image:alt": "Harbor &ndash; Configure custom Certification Authorities for trivy project logo", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "twitter:creator": "@project_harbor", "scrapeId": "78df5639-9acf-4e1a-86e9-c76813a72178", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/configure-custom-certs", "url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/configure-custom-certs/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I implementation in harbor-2-12-0?\n\nAssistant: To implementation in harbor-2-12-0, here's what you do:\n1. Change into your harbor configuration folder\n2. Take a look at the docker-compose.yml and the configuration of trivy-adapter. It looks something like this:\n\n```yaml\n  trivy-adapter:\n    container_name: trivy-adapter\n    image: goharbor/trivy-adapter-photon:dev\n    restart: always\n    cap_drop:\n      - ALL\n    dns_search: .\n    depends_on:\n      - log\n      - redis\n    networks:\n      - harbor\n    volumes:\n      - type: bind\n        source: /data/trivy-adapter/trivy\n        target: /home/scanner/.cache/trivy\n      - type: bind\n        source: /data/trivy-adapter/reports\n        target: /home/scanner/.cache/reports\n      - type: bind\n        source: ./common/config/shared/trust-certificates\n        target: /harbor_cust_cert\n```\n\n1. note the binding which mounts to `/harbor_cust_cert` and add your ca-bundle or the single public-certificates into the mount-location, by copying them.\n2. (opt) if the host-path doesn’t fit for your case, you can also configure another path in the docker-compose file. be aware, that you might have to manually change this, if there are changes on new releases of trivy/harbor.\n3. restart your containers (at least trivy-adapter) by using `docker restart trivy-adapter` or `docker compose restart`. If you changed the bind path, it is necessary to start the services by using `docker compose up -d`..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/configure-custom-certs", "title": "Configure custom Certification Authorities for trivy", "description": "This page covers how to configure custom certificate authorities (CAs) for Trivy, particularly in enterprise environments where a web proxy is used.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:26:32", "type": "section_detail", "page_metadata": {"generator": "Hugo 0.74.0", "og:image:type": "image/png", "twitter:site": "@project_harbor", "favicon": "https://goharbor.io/favicon.svg", "twitter:card": "summary", "og:type": ["documentation", "article"], "ogTitle": "Harbor &ndash; Configure custom Certification Authorities for trivy", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "ogLocale": "en_US", "og:url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/configure-custom-certs/", "og:locale": "en_US", "og:site_name": "Harbor", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/configure-custom-certs/", "title": "\n      \nHarbor docs | Configure custom Certification Authorities for trivy\n\n    ", "og:title": "Harbor &ndash; Configure custom Certification Authorities for trivy", "ogSiteName": "Harbor", "og:image:alt": "Harbor &ndash; Configure custom Certification Authorities for trivy project logo", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "twitter:creator": "@project_harbor", "scrapeId": "78df5639-9acf-4e1a-86e9-c76813a72178", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/configure-custom-certs", "url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/configure-custom-certs/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I upgrades in harbor-2-12-0?\n\nAssistant: To upgrades in harbor-2-12-0, here's what you do:\nDepending on if you changed the path or not an update might overwrite the folder or mount from a different location. The following process makes sure, you don’t run into anything unexpected\n\n1. backup your certificates to a folder, which is unrelated to harbor-configuration\n2. upgrade harbor as always\n3. check if the `/harbor_cust_cert` mount is the same as the folder where your certificates reside (normally `./common/config/shared/trust-certificates`)\n4. check if the folder still holds your certificates, otherwise copy your backuped certificates to the location\n5. check if trivy is able to get CVE data..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/configure-custom-certs", "title": "Configure custom Certification Authorities for trivy", "description": "This page covers how to configure custom certificate authorities (CAs) for Trivy, particularly in enterprise environments where a web proxy is used.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:26:32", "type": "section_detail", "page_metadata": {"generator": "Hugo 0.74.0", "og:image:type": "image/png", "twitter:site": "@project_harbor", "favicon": "https://goharbor.io/favicon.svg", "twitter:card": "summary", "og:type": ["documentation", "article"], "ogTitle": "Harbor &ndash; Configure custom Certification Authorities for trivy", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "ogLocale": "en_US", "og:url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/configure-custom-certs/", "og:locale": "en_US", "og:site_name": "Harbor", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/configure-custom-certs/", "title": "\n      \nHarbor docs | Configure custom Certification Authorities for trivy\n\n    ", "og:title": "Harbor &ndash; Configure custom Certification Authorities for trivy", "ogSiteName": "Harbor", "og:image:alt": "Harbor &ndash; Configure custom Certification Authorities for trivy project logo", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "twitter:creator": "@project_harbor", "scrapeId": "78df5639-9acf-4e1a-86e9-c76813a72178", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/configure-custom-certs", "url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/configure-custom-certs/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you give me some code examples for Configure custom Certification Authorities for trivy in harbor-2-12-0?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Docker Compose Configuration for Trivy Adapter**:\n\n```yaml\n```yaml\n  trivy-adapter:\n    container_name: trivy-adapter\n    image: goharbor/trivy-adapter-photon:dev\n    restart: always\n    cap_drop:\n      - ALL\n    dns_search: .\n    depends_on:\n      - log\n      - redis\n    networks:\n      - harbor\n    volumes:\n      - type: bind\n        source: /data/trivy-adapter/trivy\n        target: /home/scanner/.cache/trivy\n      - type: bind\n        source: /data/trivy-adapter/reports\n        target: /home/scanner/.cache/reports\n      - type: bind\n        source: ./common/config/shared/trust-certificates\n        target: /harbor_cust_cert\n```\n```\n\nThis snippet shows you how to docker compose configuration for trivy adapter, which is an important aspect of configure custom certification authorities for trivy.\n\n**Restarting Trivy Adapter**:\n\n```yaml\n`docker restart trivy-adapter` or `docker compose restart`\n```\n\nThis snippet shows you how to restarting trivy adapter, which is an important aspect of configure custom certification authorities for trivy.\n\n**Starting Services with Docker Compose**:\n\n```yaml\n`docker compose up -d`\n```\n\nThis snippet shows you how to starting services with docker compose, which is an important aspect of configure custom certification authorities for trivy.\n\n", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/configure-custom-certs", "title": "Configure custom Certification Authorities for trivy", "description": "This page covers how to configure custom certificate authorities (CAs) for Trivy, particularly in enterprise environments where a web proxy is used.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:26:32", "type": "code_examples", "page_metadata": {"generator": "Hugo 0.74.0", "og:image:type": "image/png", "twitter:site": "@project_harbor", "favicon": "https://goharbor.io/favicon.svg", "twitter:card": "summary", "og:type": ["documentation", "article"], "ogTitle": "Harbor &ndash; Configure custom Certification Authorities for trivy", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "ogLocale": "en_US", "og:url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/configure-custom-certs/", "og:locale": "en_US", "og:site_name": "Harbor", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/configure-custom-certs/", "title": "\n      \nHarbor docs | Configure custom Certification Authorities for trivy\n\n    ", "og:title": "Harbor &ndash; Configure custom Certification Authorities for trivy", "ogSiteName": "Harbor", "og:image:alt": "Harbor &ndash; Configure custom Certification Authorities for trivy project logo", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "twitter:creator": "@project_harbor", "scrapeId": "78df5639-9acf-4e1a-86e9-c76813a72178", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/configure-custom-certs", "url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/configure-custom-certs/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: What are some tips for using Configure custom Certification Authorities for trivy in harbor-2-12-0 effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nEnsure you have a ca-bundle or public certificates before starting the configuration.\n\nBackup your certificates before upgrading Harbor to avoid losing them.\n\nCheck the mount location after upgrades to ensure your certificates are still in place.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/configure-custom-certs", "title": "Configure custom Certification Authorities for trivy", "description": "This page covers how to configure custom certificate authorities (CAs) for Trivy, particularly in enterprise environments where a web proxy is used.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:26:32", "type": "best_practices", "page_metadata": {"generator": "Hugo 0.74.0", "og:image:type": "image/png", "twitter:site": "@project_harbor", "favicon": "https://goharbor.io/favicon.svg", "twitter:card": "summary", "og:type": ["documentation", "article"], "ogTitle": "Harbor &ndash; Configure custom Certification Authorities for trivy", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "ogLocale": "en_US", "og:url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/configure-custom-certs/", "og:locale": "en_US", "og:site_name": "Harbor", "ogUrl": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/configure-custom-certs/", "title": "\n      \nHarbor docs | Configure custom Certification Authorities for trivy\n\n    ", "og:title": "Harbor &ndash; Configure custom Certification Authorities for trivy", "ogSiteName": "Harbor", "og:image:alt": "Harbor &ndash; Configure custom Certification Authorities for trivy project logo", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "twitter:creator": "@project_harbor", "scrapeId": "78df5639-9acf-4e1a-86e9-c76813a72178", "sourceURL": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/configure-custom-certs", "url": "https://goharbor.io/docs/2.12.0/administration/vulnerability-scanning/configure-custom-certs/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you explain what Implementing Content Trust is in harbor-2-12-0?\n\nAssistant: Sure, I'd be happy to explain Implementing Content Trust in harbor-2-12-0.\n\n# Implementing Content Trust\n\nThis page describes how to enforce content trust using a default Harbor deployment policy, ensuring that only signed and verified images are pulled from your Harbor instance.Here's a quick rundown of what this is about:\n\n## Enforce deployment security\n\nAs a project administrator, you are able to enforce deployment security by activating the default deployment policy for Cosign or Notation for a given project.\n\n1. Log into the Harbor interface and navigate to the Configuration tab for the Project you want to enforce content trust on.\n2. Select the checkbox for **Cosign** or **Notation**. When checked, Harbor will only allow verified images to be pulled from the project. Verified images are determined by Cosign or Notation, depending on the policy you have checked. You are able to select both options if you wish for both policies to be enforced. If you have both Cosign and Notation policies enforced, then images will need to be signed by both Cosign and Notation to be pulled.\n3. Click **Save**.\n\n![Enable deployment security in project configuration page](https://goharbor.io/docs/2.12.0/img/enable-deployment-security.png)\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/implementing-content-trust", "title": "Implementing Content Trust", "description": "This page describes how to enforce content trust using a default Harbor deployment policy, ensuring that only signed and verified images are pulled from your Harbor instance.", "has_code_examples": false, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 03:37:00", "type": "overview", "page_metadata": {"twitter:card": "summary", "generator": "Hugo 0.74.0", "og:image:type": "image/png", "twitter:creator": "@project_harbor", "og:site_name": "Harbor", "ogSiteName": "Harbor", "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/implementing-content-trust/", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/implementing-content-trust/", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "favicon": "https://goharbor.io/favicon.svg", "og:title": "Harbor &ndash; Implementing Content Trust", "title": "\n      \nHarbor docs | Implementing Content Trust\n\n    ", "og:type": ["documentation", "article"], "og:locale": "en_US", "og:image:alt": "Harbor &ndash; Implementing Content Trust project logo", "twitter:site": "@project_harbor", "ogLocale": "en_US", "ogTitle": "Harbor &ndash; Implementing Content Trust", "scrapeId": "58dee9a2-03fb-4ada-8a8a-38dd36b39f99", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/implementing-content-trust", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/implementing-content-trust/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I enforce deployment security in harbor-2-12-0?\n\nAssistant: To enforce deployment security in harbor-2-12-0, here's what you do:\nAs a project administrator, you are able to enforce deployment security by activating the default deployment policy for Cosign or Notation for a given project.\n\n1. Log into the Harbor interface and navigate to the Configuration tab for the Project you want to enforce content trust on.\n2. Select the checkbox for **Cosign** or **Notation**. When checked, Harbor will only allow verified images to be pulled from the project. Verified images are determined by Cosign or Notation, depending on the policy you have checked. You are able to select both options if you wish for both policies to be enforced. If you have both Cosign and Notation policies enforced, then images will need to be signed by both Cosign and Notation to be pulled.\n3. Click **Save**.\n\n![Enable deployment security in project configuration page](https://goharbor.io/docs/2.12.0/img/enable-deployment-security.png).\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/implementing-content-trust", "title": "Implementing Content Trust", "description": "This page describes how to enforce content trust using a default Harbor deployment policy, ensuring that only signed and verified images are pulled from your Harbor instance.", "has_code_examples": false, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 03:37:00", "type": "section_detail", "page_metadata": {"twitter:card": "summary", "generator": "Hugo 0.74.0", "og:image:type": "image/png", "twitter:creator": "@project_harbor", "og:site_name": "Harbor", "ogSiteName": "Harbor", "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/implementing-content-trust/", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/implementing-content-trust/", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "favicon": "https://goharbor.io/favicon.svg", "og:title": "Harbor &ndash; Implementing Content Trust", "title": "\n      \nHarbor docs | Implementing Content Trust\n\n    ", "og:type": ["documentation", "article"], "og:locale": "en_US", "og:image:alt": "Harbor &ndash; Implementing Content Trust project logo", "twitter:site": "@project_harbor", "ogLocale": "en_US", "ogTitle": "Harbor &ndash; Implementing Content Trust", "scrapeId": "58dee9a2-03fb-4ada-8a8a-38dd36b39f99", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/implementing-content-trust", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/implementing-content-trust/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: What are some tips for using Implementing Content Trust in harbor-2-12-0 effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nEnsure that you have both Cosign and Notation policies enforced if you want images to be signed by both.\n\nAlways save your configuration changes after modifying the deployment policy.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/implementing-content-trust", "title": "Implementing Content Trust", "description": "This page describes how to enforce content trust using a default Harbor deployment policy, ensuring that only signed and verified images are pulled from your Harbor instance.", "has_code_examples": false, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 03:37:00", "type": "best_practices", "page_metadata": {"twitter:card": "summary", "generator": "Hugo 0.74.0", "og:image:type": "image/png", "twitter:creator": "@project_harbor", "og:site_name": "Harbor", "ogSiteName": "Harbor", "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/implementing-content-trust/", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/implementing-content-trust/", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "favicon": "https://goharbor.io/favicon.svg", "og:title": "Harbor &ndash; Implementing Content Trust", "title": "\n      \nHarbor docs | Implementing Content Trust\n\n    ", "og:type": ["documentation", "article"], "og:locale": "en_US", "og:image:alt": "Harbor &ndash; Implementing Content Trust project logo", "twitter:site": "@project_harbor", "ogLocale": "en_US", "ogTitle": "Harbor &ndash; Implementing Content Trust", "scrapeId": "58dee9a2-03fb-4ada-8a8a-38dd36b39f99", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/implementing-content-trust", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/implementing-content-trust/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you explain what Reconfigure Harbor and Manage the Harbor Lifecycle is in harbor-2-12-0?\n\nAssistant: Sure, I'd be happy to explain Reconfigure Harbor and Manage the Harbor Lifecycle in harbor-2-12-0.\n\n# Reconfigure Harbor and Manage the Harbor Lifecycle\n\nYou use `docker-compose` to manage the lifecycle of Harbor. This topic provides some useful commands. You must run the commands in the directory in which `docker-compose.yml` is located.Here's a quick rundown of what this is about:\n\n## Stop Harbor\n\nTo stop Harbor, run the following command.\n\n```sh\nsudo docker compose stop\nStopping nginx              ... done\nStopping harbor-portal      ... done\nStopping harbor-jobservice  ... done\nStopping harbor-core        ... done\nStopping registry           ... done\nStopping redis              ... done\nStopping registryctl        ... done\nStopping harbor-db          ... done\nStopping harbor-log         ... done\n```\n\n## Restart Harbor\n\nTo restart Harbor, run the following command.\n\n```sh\nsudo docker compose start\nStarting log         ... done\nStarting registry    ... done\nStarting registryctl ... done\nStarting postgresql  ... done\nStarting core        ... done\nStarting portal      ... done\nStarting redis       ... done\nStarting jobservice  ... done\nStarting proxy       ... done\n```\n\n## Reconfigure Harbor\n\nTo reconfigure Harbor, perform the following steps.\n\n1. Stop Harbor.\n\n```sh\nsudo docker compose down -v\n```\n\n2. Update `harbor.yml`.\n\n```sh\nvim harbor.yml\n```\n\n3. Run the `prepare` script to populate the configuration.\n\n```sh\nsudo ./prepare\n```\n\nTo reconfigure Harbor to install Trivy, include the component in the `prepare` command.\n\n```sh\nsudo ./prepare --with-trivy\n```\n\n4. Re-create and start the Harbor instance.\n\n```sh\nsudo docker compose up -d\n```\n\n## Other Commands\n\nRemove Harbor’s containers but keep all of the image data and Harbor’s database files in the file system:\n\n```sh\nsudo docker compose down -v\n```\n\nRemove the Harbor database and image data before performing a clean re-installation:\n\n```sh\nrm -r /data/database\nrm -r /data/registry\nrm -r /data/redis\n```\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/install-config/reconfigure-manage-lifecycle", "title": "Reconfigure Harbor and Manage the Harbor Lifecycle", "description": "You use `docker-compose` to manage the lifecycle of Harbor. This topic provides some useful commands. You must run the commands in the directory in which `docker-compose.yml` is located.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:37:18", "type": "overview", "page_metadata": {"ogSiteName": "Harbor", "og:title": "Harbor &ndash; Reconfigure Harbor and Manage the Harbor Lifecycle", "og:type": ["documentation", "article"], "ogTitle": "Harbor &ndash; Reconfigure Harbor and Manage the Harbor Lifecycle", "ogLocale": "en_US", "ogUrl": "https://goharbor.io/docs/2.12.0/install-config/reconfigure-manage-lifecycle/", "title": "\n      \nHarbor docs | Reconfigure Harbor and Manage the Harbor Lifecycle\n\n    ", "og:image:alt": "Harbor &ndash; Reconfigure Harbor and Manage the Harbor Lifecycle project logo", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:site_name": "Harbor", "og:locale": "en_US", "favicon": "https://goharbor.io/favicon.svg", "generator": "Hugo 0.74.0", "og:url": "https://goharbor.io/docs/2.12.0/install-config/reconfigure-manage-lifecycle/", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "twitter:site": "@project_harbor", "twitter:card": "summary", "twitter:creator": "@project_harbor", "og:image:type": "image/png", "scrapeId": "97aec0f9-ec21-4a3d-8b46-6f2917888015", "sourceURL": "https://goharbor.io/docs/2.12.0/install-config/reconfigure-manage-lifecycle", "url": "https://goharbor.io/docs/2.12.0/install-config/reconfigure-manage-lifecycle/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I stop harbor in harbor-2-12-0?\n\nAssistant: To stop harbor in harbor-2-12-0, here's what you do:\nTo stop Harbor, run the following command.\n\n```sh\nsudo docker compose stop\nStopping nginx              ... done\nStopping harbor-portal      ... done\nStopping harbor-jobservice  ... done\nStopping harbor-core        ... done\nStopping registry           ... done\nStopping redis              ... done\nStopping registryctl        ... done\nStopping harbor-db          ... done\nStopping harbor-log         ... done\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/install-config/reconfigure-manage-lifecycle", "title": "Reconfigure Harbor and Manage the Harbor Lifecycle", "description": "You use `docker-compose` to manage the lifecycle of Harbor. This topic provides some useful commands. You must run the commands in the directory in which `docker-compose.yml` is located.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:37:18", "type": "section_detail", "page_metadata": {"ogSiteName": "Harbor", "og:title": "Harbor &ndash; Reconfigure Harbor and Manage the Harbor Lifecycle", "og:type": ["documentation", "article"], "ogTitle": "Harbor &ndash; Reconfigure Harbor and Manage the Harbor Lifecycle", "ogLocale": "en_US", "ogUrl": "https://goharbor.io/docs/2.12.0/install-config/reconfigure-manage-lifecycle/", "title": "\n      \nHarbor docs | Reconfigure Harbor and Manage the Harbor Lifecycle\n\n    ", "og:image:alt": "Harbor &ndash; Reconfigure Harbor and Manage the Harbor Lifecycle project logo", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:site_name": "Harbor", "og:locale": "en_US", "favicon": "https://goharbor.io/favicon.svg", "generator": "Hugo 0.74.0", "og:url": "https://goharbor.io/docs/2.12.0/install-config/reconfigure-manage-lifecycle/", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "twitter:site": "@project_harbor", "twitter:card": "summary", "twitter:creator": "@project_harbor", "og:image:type": "image/png", "scrapeId": "97aec0f9-ec21-4a3d-8b46-6f2917888015", "sourceURL": "https://goharbor.io/docs/2.12.0/install-config/reconfigure-manage-lifecycle", "url": "https://goharbor.io/docs/2.12.0/install-config/reconfigure-manage-lifecycle/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I restart harbor in harbor-2-12-0?\n\nAssistant: To restart harbor in harbor-2-12-0, here's what you do:\nTo restart Harbor, run the following command.\n\n```sh\nsudo docker compose start\nStarting log         ... done\nStarting registry    ... done\nStarting registryctl ... done\nStarting postgresql  ... done\nStarting core        ... done\nStarting portal      ... done\nStarting redis       ... done\nStarting jobservice  ... done\nStarting proxy       ... done\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/install-config/reconfigure-manage-lifecycle", "title": "Reconfigure Harbor and Manage the Harbor Lifecycle", "description": "You use `docker-compose` to manage the lifecycle of Harbor. This topic provides some useful commands. You must run the commands in the directory in which `docker-compose.yml` is located.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:37:18", "type": "section_detail", "page_metadata": {"ogSiteName": "Harbor", "og:title": "Harbor &ndash; Reconfigure Harbor and Manage the Harbor Lifecycle", "og:type": ["documentation", "article"], "ogTitle": "Harbor &ndash; Reconfigure Harbor and Manage the Harbor Lifecycle", "ogLocale": "en_US", "ogUrl": "https://goharbor.io/docs/2.12.0/install-config/reconfigure-manage-lifecycle/", "title": "\n      \nHarbor docs | Reconfigure Harbor and Manage the Harbor Lifecycle\n\n    ", "og:image:alt": "Harbor &ndash; Reconfigure Harbor and Manage the Harbor Lifecycle project logo", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:site_name": "Harbor", "og:locale": "en_US", "favicon": "https://goharbor.io/favicon.svg", "generator": "Hugo 0.74.0", "og:url": "https://goharbor.io/docs/2.12.0/install-config/reconfigure-manage-lifecycle/", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "twitter:site": "@project_harbor", "twitter:card": "summary", "twitter:creator": "@project_harbor", "og:image:type": "image/png", "scrapeId": "97aec0f9-ec21-4a3d-8b46-6f2917888015", "sourceURL": "https://goharbor.io/docs/2.12.0/install-config/reconfigure-manage-lifecycle", "url": "https://goharbor.io/docs/2.12.0/install-config/reconfigure-manage-lifecycle/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I reconfigure harbor in harbor-2-12-0?\n\nAssistant: To reconfigure harbor in harbor-2-12-0, here's what you do:\nTo reconfigure Harbor, perform the following steps.\n\n1. Stop Harbor.\n\n```sh\nsudo docker compose down -v\n```\n\n2. Update `harbor.yml`.\n\n```sh\nvim harbor.yml\n```\n\n3. Run the `prepare` script to populate the configuration.\n\n```sh\nsudo ./prepare\n```\n\nTo reconfigure Harbor to install Trivy, include the component in the `prepare` command.\n\n```sh\nsudo ./prepare --with-trivy\n```\n\n4. Re-create and start the Harbor instance.\n\n```sh\nsudo docker compose up -d\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/install-config/reconfigure-manage-lifecycle", "title": "Reconfigure Harbor and Manage the Harbor Lifecycle", "description": "You use `docker-compose` to manage the lifecycle of Harbor. This topic provides some useful commands. You must run the commands in the directory in which `docker-compose.yml` is located.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:37:18", "type": "section_detail", "page_metadata": {"ogSiteName": "Harbor", "og:title": "Harbor &ndash; Reconfigure Harbor and Manage the Harbor Lifecycle", "og:type": ["documentation", "article"], "ogTitle": "Harbor &ndash; Reconfigure Harbor and Manage the Harbor Lifecycle", "ogLocale": "en_US", "ogUrl": "https://goharbor.io/docs/2.12.0/install-config/reconfigure-manage-lifecycle/", "title": "\n      \nHarbor docs | Reconfigure Harbor and Manage the Harbor Lifecycle\n\n    ", "og:image:alt": "Harbor &ndash; Reconfigure Harbor and Manage the Harbor Lifecycle project logo", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:site_name": "Harbor", "og:locale": "en_US", "favicon": "https://goharbor.io/favicon.svg", "generator": "Hugo 0.74.0", "og:url": "https://goharbor.io/docs/2.12.0/install-config/reconfigure-manage-lifecycle/", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "twitter:site": "@project_harbor", "twitter:card": "summary", "twitter:creator": "@project_harbor", "og:image:type": "image/png", "scrapeId": "97aec0f9-ec21-4a3d-8b46-6f2917888015", "sourceURL": "https://goharbor.io/docs/2.12.0/install-config/reconfigure-manage-lifecycle", "url": "https://goharbor.io/docs/2.12.0/install-config/reconfigure-manage-lifecycle/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I other commands in harbor-2-12-0?\n\nAssistant: To other commands in harbor-2-12-0, here's what you do:\nRemove Harbor’s containers but keep all of the image data and Harbor’s database files in the file system:\n\n```sh\nsudo docker compose down -v\n```\n\nRemove the Harbor database and image data before performing a clean re-installation:\n\n```sh\nrm -r /data/database\nrm -r /data/registry\nrm -r /data/redis\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/install-config/reconfigure-manage-lifecycle", "title": "Reconfigure Harbor and Manage the Harbor Lifecycle", "description": "You use `docker-compose` to manage the lifecycle of Harbor. This topic provides some useful commands. You must run the commands in the directory in which `docker-compose.yml` is located.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:37:18", "type": "section_detail", "page_metadata": {"ogSiteName": "Harbor", "og:title": "Harbor &ndash; Reconfigure Harbor and Manage the Harbor Lifecycle", "og:type": ["documentation", "article"], "ogTitle": "Harbor &ndash; Reconfigure Harbor and Manage the Harbor Lifecycle", "ogLocale": "en_US", "ogUrl": "https://goharbor.io/docs/2.12.0/install-config/reconfigure-manage-lifecycle/", "title": "\n      \nHarbor docs | Reconfigure Harbor and Manage the Harbor Lifecycle\n\n    ", "og:image:alt": "Harbor &ndash; Reconfigure Harbor and Manage the Harbor Lifecycle project logo", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:site_name": "Harbor", "og:locale": "en_US", "favicon": "https://goharbor.io/favicon.svg", "generator": "Hugo 0.74.0", "og:url": "https://goharbor.io/docs/2.12.0/install-config/reconfigure-manage-lifecycle/", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "twitter:site": "@project_harbor", "twitter:card": "summary", "twitter:creator": "@project_harbor", "og:image:type": "image/png", "scrapeId": "97aec0f9-ec21-4a3d-8b46-6f2917888015", "sourceURL": "https://goharbor.io/docs/2.12.0/install-config/reconfigure-manage-lifecycle", "url": "https://goharbor.io/docs/2.12.0/install-config/reconfigure-manage-lifecycle/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you give me some code examples for Reconfigure Harbor and Manage the Harbor Lifecycle in harbor-2-12-0?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Stop Harbor Command**:\n\n```yaml\nsudo docker compose stop\nStopping nginx              ... done\nStopping harbor-portal      ... done\nStopping harbor-jobservice  ... done\nStopping harbor-core        ... done\nStopping registry           ... done\nStopping redis              ... done\nStopping registryctl        ... done\nStopping harbor-db          ... done\nStopping harbor-log         ... done\n\n```\n\nThis snippet shows you how to stop harbor command, which is an important aspect of reconfigure harbor and manage the harbor lifecycle.\n\n**Restart Harbor Command**:\n\n```yaml\nsudo docker compose start\nStarting log         ... done\nStarting registry    ... done\nStarting registryctl ... done\nStarting postgresql  ... done\nStarting core        ... done\nStarting portal      ... done\nStarting redis       ... done\nStarting jobservice  ... done\nStarting proxy       ... done\n\n```\n\nThis snippet shows you how to restart harbor command, which is an important aspect of reconfigure harbor and manage the harbor lifecycle.\n\n**Reconfigure Harbor Steps**:\n\n```yaml\n1. Stop Harbor.\n\n```sh\nsudo docker compose down -v\n```\n\n2. Update `harbor.yml`.\n\n```sh\nvim harbor.yml\n```\n\n3. Run the `prepare` script to populate the configuration.\n\n```sh\nsudo ./prepare\n```\n\nTo reconfigure Harbor to install Trivy, include the component in the `prepare` command.\n\n```sh\nsudo ./prepare --with-trivy\n```\n\n4. Re-create and start the Harbor instance.\n\n```sh\nsudo docker compose up -d\n```\n```\n\nThis snippet shows you how to reconfigure harbor steps, which is an important aspect of reconfigure harbor and manage the harbor lifecycle.\n\n**Remove Harbor Containers Command**:\n\n```yaml\nsudo docker compose down -v\n\n```\n\nThis snippet shows you how to remove harbor containers command, which is an important aspect of reconfigure harbor and manage the harbor lifecycle.\n\n**Remove Harbor Database and Image Data Commands**:\n\n```yaml\nrm -r /data/database\nrm -r /data/registry\nrm -r /data/redis\n\n```\n\nThis snippet shows you how to remove harbor database and image data commands, which is an important aspect of reconfigure harbor and manage the harbor lifecycle.\n\n", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/install-config/reconfigure-manage-lifecycle", "title": "Reconfigure Harbor and Manage the Harbor Lifecycle", "description": "You use `docker-compose` to manage the lifecycle of Harbor. This topic provides some useful commands. You must run the commands in the directory in which `docker-compose.yml` is located.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:37:18", "type": "code_examples", "page_metadata": {"ogSiteName": "Harbor", "og:title": "Harbor &ndash; Reconfigure Harbor and Manage the Harbor Lifecycle", "og:type": ["documentation", "article"], "ogTitle": "Harbor &ndash; Reconfigure Harbor and Manage the Harbor Lifecycle", "ogLocale": "en_US", "ogUrl": "https://goharbor.io/docs/2.12.0/install-config/reconfigure-manage-lifecycle/", "title": "\n      \nHarbor docs | Reconfigure Harbor and Manage the Harbor Lifecycle\n\n    ", "og:image:alt": "Harbor &ndash; Reconfigure Harbor and Manage the Harbor Lifecycle project logo", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:site_name": "Harbor", "og:locale": "en_US", "favicon": "https://goharbor.io/favicon.svg", "generator": "Hugo 0.74.0", "og:url": "https://goharbor.io/docs/2.12.0/install-config/reconfigure-manage-lifecycle/", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "twitter:site": "@project_harbor", "twitter:card": "summary", "twitter:creator": "@project_harbor", "og:image:type": "image/png", "scrapeId": "97aec0f9-ec21-4a3d-8b46-6f2917888015", "sourceURL": "https://goharbor.io/docs/2.12.0/install-config/reconfigure-manage-lifecycle", "url": "https://goharbor.io/docs/2.12.0/install-config/reconfigure-manage-lifecycle/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: What are some tips for using Reconfigure Harbor and Manage the Harbor Lifecycle in harbor-2-12-0 effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nRun commands in the directory where `docker-compose.yml` is located.\n\nRefer to the Docker Compose command-line reference for more information.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/install-config/reconfigure-manage-lifecycle", "title": "Reconfigure Harbor and Manage the Harbor Lifecycle", "description": "You use `docker-compose` to manage the lifecycle of Harbor. This topic provides some useful commands. You must run the commands in the directory in which `docker-compose.yml` is located.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:37:18", "type": "best_practices", "page_metadata": {"ogSiteName": "Harbor", "og:title": "Harbor &ndash; Reconfigure Harbor and Manage the Harbor Lifecycle", "og:type": ["documentation", "article"], "ogTitle": "Harbor &ndash; Reconfigure Harbor and Manage the Harbor Lifecycle", "ogLocale": "en_US", "ogUrl": "https://goharbor.io/docs/2.12.0/install-config/reconfigure-manage-lifecycle/", "title": "\n      \nHarbor docs | Reconfigure Harbor and Manage the Harbor Lifecycle\n\n    ", "og:image:alt": "Harbor &ndash; Reconfigure Harbor and Manage the Harbor Lifecycle project logo", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:site_name": "Harbor", "og:locale": "en_US", "favicon": "https://goharbor.io/favicon.svg", "generator": "Hugo 0.74.0", "og:url": "https://goharbor.io/docs/2.12.0/install-config/reconfigure-manage-lifecycle/", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "twitter:site": "@project_harbor", "twitter:card": "summary", "twitter:creator": "@project_harbor", "og:image:type": "image/png", "scrapeId": "97aec0f9-ec21-4a3d-8b46-6f2917888015", "sourceURL": "https://goharbor.io/docs/2.12.0/install-config/reconfigure-manage-lifecycle", "url": "https://goharbor.io/docs/2.12.0/install-config/reconfigure-manage-lifecycle/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you explain what Customize the Harbor Token Service is in harbor-2-12-0?\n\nAssistant: Sure, I'd be happy to explain Customize the Harbor Token Service in harbor-2-12-0.\n\n# Customize the Harbor Token Service\n\nThis topic describes how to optionally customize your configuration to use your own key and certificate for Harbor's Token Service.Here's a quick rundown of what this is about:\n\n## Generate a Root Certificate\n\n1. Generate a private key.\n\n```sh\nopenssl genrsa -out private_key.pem 4096\n```\n\n2. Generate a certificate.\n\n```sh\nopenssl req -new -x509 -key private_key.pem -out root.crt -days 3650\n```\n\n3. Enter information to include in your certificate request.\n\nWhat you are about to enter is what is called a Distinguished Name or a DN. There are quite a few fields but you can leave some of them blank. For some fields there is a default value. If you enter `.`, the field is left blank.\n\n   - Country Name (2 letter code) \\[AU\\]:\n   - State or Province Name (full name) \\[Some-State\\]:\n   - Locality Name (eg, city) \\[\\]:\n   - Organization Name (eg, company) \\[Internet Widgits Pty Ltd\\]:\n   - Organizational Unit Name (eg, section) \\[\\]:\n   - Common Name (eg, server FQDN or YOUR name) \\[\\]:\n   - Email Address \\[\\]:\n\nAfter you run these commands, the files `private_key.pem` and `root.crt` are created in the current directory.\n\n## Provide the Certificate to Harbor\n\nSee [Run the Installer Script](https://goharbor.io/docs/2.12.0/install-config/run-installer-script/) or [Reconfigure Harbor and Manage the Harbor Lifecycle](https://goharbor.io/docs/2.12.0/install-config/reconfigure-manage-lifecycle/) to install or reconfigure Harbor. After you run `./install` or `./prepare`, Harbor generates several configuration files. You need to replace the original private key and certificate with your own key and certificate.\n\n1. Replace the default key and certificate.\n\nAssuming that the new key and certificate are in `/root/cert`, and `/srv/harbor/data` was specified as `data_volume` run the following commands:\n\n```sh\ncd config/ui\ncp /root/cert/private_key.pem /srv/harbor/data/secret/core/private_key.pem\ncp /root/cert/root.crt /srv/harbor/data/secret/registry/root.crt\n```\n\n2. Go back to the `make` directory, and start Harbor by using following command:\n\n```sh\ndocker compose up -d\n```\n\n3. Push and pull images to and from Harbor to check that your own certificate works.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/install-config/customize-token-service", "title": "Customize the Harbor Token Service", "description": "This topic describes how to optionally customize your configuration to use your own key and certificate for Harbor's Token Service.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:37:56", "type": "overview", "page_metadata": {"ogUrl": "https://goharbor.io/docs/2.12.0/install-config/customize-token-service/", "ogLocale": "en_US", "og:locale": "en_US", "favicon": "https://goharbor.io/favicon.svg", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "twitter:site": "@project_harbor", "ogSiteName": "Harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:title": "Harbor &ndash; Customize the Harbor Token Service", "generator": "Hugo 0.74.0", "twitter:card": "summary", "og:image:type": "image/png", "title": "\n      \nHarbor docs | Customize the Harbor Token Service\n\n    ", "og:url": "https://goharbor.io/docs/2.12.0/install-config/customize-token-service/", "ogTitle": "Harbor &ndash; Customize the Harbor Token Service", "twitter:creator": "@project_harbor", "og:type": ["documentation", "article"], "og:site_name": "Harbor", "og:image:alt": "Harbor &ndash; Customize the Harbor Token Service project logo", "scrapeId": "5b65bbc9-af53-442f-af32-b320cd2a74e0", "sourceURL": "https://goharbor.io/docs/2.12.0/install-config/customize-token-service", "url": "https://goharbor.io/docs/2.12.0/install-config/customize-token-service/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I generate a root certificate in harbor-2-12-0?\n\nAssistant: To generate a root certificate in harbor-2-12-0, here's what you do:\n1. Generate a private key.\n\n```sh\nopenssl genrsa -out private_key.pem 4096\n```\n\n2. Generate a certificate.\n\n```sh\nopenssl req -new -x509 -key private_key.pem -out root.crt -days 3650\n```\n\n3. Enter information to include in your certificate request.\n\nWhat you are about to enter is what is called a Distinguished Name or a DN. There are quite a few fields but you can leave some of them blank. For some fields there is a default value. If you enter `.`, the field is left blank.\n\n   - Country Name (2 letter code) \\[AU\\]:\n   - State or Province Name (full name) \\[Some-State\\]:\n   - Locality Name (eg, city) \\[\\]:\n   - Organization Name (eg, company) \\[Internet Widgits Pty Ltd\\]:\n   - Organizational Unit Name (eg, section) \\[\\]:\n   - Common Name (eg, server FQDN or YOUR name) \\[\\]:\n   - Email Address \\[\\]:\n\nAfter you run these commands, the files `private_key.pem` and `root.crt` are created in the current directory..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/install-config/customize-token-service", "title": "Customize the Harbor Token Service", "description": "This topic describes how to optionally customize your configuration to use your own key and certificate for Harbor's Token Service.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:37:56", "type": "section_detail", "page_metadata": {"ogUrl": "https://goharbor.io/docs/2.12.0/install-config/customize-token-service/", "ogLocale": "en_US", "og:locale": "en_US", "favicon": "https://goharbor.io/favicon.svg", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "twitter:site": "@project_harbor", "ogSiteName": "Harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:title": "Harbor &ndash; Customize the Harbor Token Service", "generator": "Hugo 0.74.0", "twitter:card": "summary", "og:image:type": "image/png", "title": "\n      \nHarbor docs | Customize the Harbor Token Service\n\n    ", "og:url": "https://goharbor.io/docs/2.12.0/install-config/customize-token-service/", "ogTitle": "Harbor &ndash; Customize the Harbor Token Service", "twitter:creator": "@project_harbor", "og:type": ["documentation", "article"], "og:site_name": "Harbor", "og:image:alt": "Harbor &ndash; Customize the Harbor Token Service project logo", "scrapeId": "5b65bbc9-af53-442f-af32-b320cd2a74e0", "sourceURL": "https://goharbor.io/docs/2.12.0/install-config/customize-token-service", "url": "https://goharbor.io/docs/2.12.0/install-config/customize-token-service/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I provide the certificate to harbor in harbor-2-12-0?\n\nAssistant: To provide the certificate to harbor in harbor-2-12-0, here's what you do:\nSee [Run the Installer Script](https://goharbor.io/docs/2.12.0/install-config/run-installer-script/) or [Reconfigure Harbor and Manage the Harbor Lifecycle](https://goharbor.io/docs/2.12.0/install-config/reconfigure-manage-lifecycle/) to install or reconfigure Harbor. After you run `./install` or `./prepare`, Harbor generates several configuration files. You need to replace the original private key and certificate with your own key and certificate.\n\n1. Replace the default key and certificate.\n\nAssuming that the new key and certificate are in `/root/cert`, and `/srv/harbor/data` was specified as `data_volume` run the following commands:\n\n```sh\ncd config/ui\ncp /root/cert/private_key.pem /srv/harbor/data/secret/core/private_key.pem\ncp /root/cert/root.crt /srv/harbor/data/secret/registry/root.crt\n```\n\n2. Go back to the `make` directory, and start Harbor by using following command:\n\n```sh\ndocker compose up -d\n```\n\n3. Push and pull images to and from Harbor to check that your own certificate works..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/install-config/customize-token-service", "title": "Customize the Harbor Token Service", "description": "This topic describes how to optionally customize your configuration to use your own key and certificate for Harbor's Token Service.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:37:56", "type": "section_detail", "page_metadata": {"ogUrl": "https://goharbor.io/docs/2.12.0/install-config/customize-token-service/", "ogLocale": "en_US", "og:locale": "en_US", "favicon": "https://goharbor.io/favicon.svg", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "twitter:site": "@project_harbor", "ogSiteName": "Harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:title": "Harbor &ndash; Customize the Harbor Token Service", "generator": "Hugo 0.74.0", "twitter:card": "summary", "og:image:type": "image/png", "title": "\n      \nHarbor docs | Customize the Harbor Token Service\n\n    ", "og:url": "https://goharbor.io/docs/2.12.0/install-config/customize-token-service/", "ogTitle": "Harbor &ndash; Customize the Harbor Token Service", "twitter:creator": "@project_harbor", "og:type": ["documentation", "article"], "og:site_name": "Harbor", "og:image:alt": "Harbor &ndash; Customize the Harbor Token Service project logo", "scrapeId": "5b65bbc9-af53-442f-af32-b320cd2a74e0", "sourceURL": "https://goharbor.io/docs/2.12.0/install-config/customize-token-service", "url": "https://goharbor.io/docs/2.12.0/install-config/customize-token-service/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you give me some code examples for Customize the Harbor Token Service in harbor-2-12-0?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Generate a Private Key**:\n\n```yaml\nopenssl genrsa -out private_key.pem 4096\n```\n\nThis snippet shows you how to generate a private key, which is an important aspect of customize the harbor token service.\n\n**Generate a Certificate**:\n\n```yaml\nopenssl req -new -x509 -key private_key.pem -out root.crt -days 3650\n```\n\nThis snippet shows you how to generate a certificate, which is an important aspect of customize the harbor token service.\n\n**Replace the Default Key and Certificate**:\n\n```yaml\ncd config/ui\ncp /root/cert/private_key.pem /srv/harbor/data/secret/core/private_key.pem\ncp /root/cert/root.crt /srv/harbor/data/secret/registry/root.crt\n```\n\nThis snippet shows you how to replace the default key and certificate, which is an important aspect of customize the harbor token service.\n\n**Start Harbor**:\n\n```yaml\ndocker compose up -d\n```\n\nThis snippet shows you how to start harbor, which is an important aspect of customize the harbor token service.\n\n", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/install-config/customize-token-service", "title": "Customize the Harbor Token Service", "description": "This topic describes how to optionally customize your configuration to use your own key and certificate for Harbor's Token Service.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:37:56", "type": "code_examples", "page_metadata": {"ogUrl": "https://goharbor.io/docs/2.12.0/install-config/customize-token-service/", "ogLocale": "en_US", "og:locale": "en_US", "favicon": "https://goharbor.io/favicon.svg", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "twitter:site": "@project_harbor", "ogSiteName": "Harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:title": "Harbor &ndash; Customize the Harbor Token Service", "generator": "Hugo 0.74.0", "twitter:card": "summary", "og:image:type": "image/png", "title": "\n      \nHarbor docs | Customize the Harbor Token Service\n\n    ", "og:url": "https://goharbor.io/docs/2.12.0/install-config/customize-token-service/", "ogTitle": "Harbor &ndash; Customize the Harbor Token Service", "twitter:creator": "@project_harbor", "og:type": ["documentation", "article"], "og:site_name": "Harbor", "og:image:alt": "Harbor &ndash; Customize the Harbor Token Service project logo", "scrapeId": "5b65bbc9-af53-442f-af32-b320cd2a74e0", "sourceURL": "https://goharbor.io/docs/2.12.0/install-config/customize-token-service", "url": "https://goharbor.io/docs/2.12.0/install-config/customize-token-service/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: What are some tips for using Customize the Harbor Token Service in harbor-2-12-0 effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nIf you do not already have a certificate, follow the instructions in Generate a Root Certificate to generate a root certificate by using openSSL.\n\nIf you already have a certificate, go to Provide the Certificate to Harbor.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/install-config/customize-token-service", "title": "Customize the Harbor Token Service", "description": "This topic describes how to optionally customize your configuration to use your own key and certificate for Harbor's Token Service.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:37:56", "type": "best_practices", "page_metadata": {"ogUrl": "https://goharbor.io/docs/2.12.0/install-config/customize-token-service/", "ogLocale": "en_US", "og:locale": "en_US", "favicon": "https://goharbor.io/favicon.svg", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "twitter:site": "@project_harbor", "ogSiteName": "Harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:title": "Harbor &ndash; Customize the Harbor Token Service", "generator": "Hugo 0.74.0", "twitter:card": "summary", "og:image:type": "image/png", "title": "\n      \nHarbor docs | Customize the Harbor Token Service\n\n    ", "og:url": "https://goharbor.io/docs/2.12.0/install-config/customize-token-service/", "ogTitle": "Harbor &ndash; Customize the Harbor Token Service", "twitter:creator": "@project_harbor", "og:type": ["documentation", "article"], "og:site_name": "Harbor", "og:image:alt": "Harbor &ndash; Customize the Harbor Token Service project logo", "scrapeId": "5b65bbc9-af53-442f-af32-b320cd2a74e0", "sourceURL": "https://goharbor.io/docs/2.12.0/install-config/customize-token-service", "url": "https://goharbor.io/docs/2.12.0/install-config/customize-token-service/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you explain what Working with Images and Tags is in harbor-2-12-0?\n\nAssistant: Sure, I'd be happy to explain Working with Images and Tags in harbor-2-12-0.\n\n# Working with Images and Tags\n\nThis section describes how to work with images and tags in Harbor.Here's a quick rundown of what this is about:\n\n## Pages in this section\n\n- [Preheat Images](https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/preheat-images/)\n- [Pulling and Pushing Images in the Docker Client](https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/pulling-pushing-images/)\n- [Managing Labels](https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-labels/)\n- [Deleting Artifacts](https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/deleting-artifact/)\n- [Detagging Artifacts](https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/deleting-tags/)\n- [Repositories](https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/repositories/)\n- [Retagging Artifacts](https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/retagging-images/)\n- [Tagging Artifacts](https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/adding-tags/)\n- [Create Tag Retention Rules](https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-tag-retention-rules/)\n- [Tag Immutability Rules](https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-tag-immutability-rules/)\n- [Sign Artifacts with Cosign or Notation](https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/sign-images/)\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images", "title": "Working with Images and Tags", "description": "This section describes how to work with images and tags in Harbor.", "has_code_examples": false, "has_best_practices": false, "section_count": 1, "timestamp": "2025-03-01 03:38:49", "type": "overview", "page_metadata": {"ogLocale": "en_US", "twitter:card": "summary", "twitter:site": "@project_harbor", "generator": "Hugo 0.74.0", "favicon": "https://goharbor.io/favicon.svg", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/", "og:locale": "en_US", "title": "\n      \nHarbor docs | Working with Images and Tags\n\n    ", "og:type": ["documentation", "article"], "og:title": "Harbor &ndash; Working with Images and Tags", "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/", "og:image:type": "image/png", "twitter:creator": "@project_harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:site_name": "Harbor", "ogTitle": "Harbor &ndash; Working with Images and Tags", "og:image:alt": "Harbor &ndash; Working with Images and Tags project logo", "ogSiteName": "Harbor", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "scrapeId": "cc6e80cf-ec88-46b0-afce-1f920b55c1ba", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I pages in this section in harbor-2-12-0?\n\nAssistant: To pages in this section in harbor-2-12-0, here's what you do:\n- [Preheat Images](https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/preheat-images/)\n- [Pulling and Pushing Images in the Docker Client](https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/pulling-pushing-images/)\n- [Managing Labels](https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-labels/)\n- [Deleting Artifacts](https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/deleting-artifact/)\n- [Detagging Artifacts](https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/deleting-tags/)\n- [Repositories](https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/repositories/)\n- [Retagging Artifacts](https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/retagging-images/)\n- [Tagging Artifacts](https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/adding-tags/)\n- [Create Tag Retention Rules](https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-tag-retention-rules/)\n- [Tag Immutability Rules](https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-tag-immutability-rules/)\n- [Sign Artifacts with Cosign or Notation](https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/sign-images/).\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images", "title": "Working with Images and Tags", "description": "This section describes how to work with images and tags in Harbor.", "has_code_examples": false, "has_best_practices": false, "section_count": 1, "timestamp": "2025-03-01 03:38:49", "type": "section_detail", "page_metadata": {"ogLocale": "en_US", "twitter:card": "summary", "twitter:site": "@project_harbor", "generator": "Hugo 0.74.0", "favicon": "https://goharbor.io/favicon.svg", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/", "og:locale": "en_US", "title": "\n      \nHarbor docs | Working with Images and Tags\n\n    ", "og:type": ["documentation", "article"], "og:title": "Harbor &ndash; Working with Images and Tags", "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/", "og:image:type": "image/png", "twitter:creator": "@project_harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:site_name": "Harbor", "ogTitle": "Harbor &ndash; Working with Images and Tags", "og:image:alt": "Harbor &ndash; Working with Images and Tags project logo", "ogSiteName": "Harbor", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "scrapeId": "cc6e80cf-ec88-46b0-afce-1f920b55c1ba", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you explain what Harbor Configuration is in harbor-2-12-0?\n\nAssistant: Sure, I'd be happy to explain Harbor Configuration in harbor-2-12-0.\n\n# Harbor Configuration\n\nThis page describes the available configuration items for Harbor and how to use the command line or environment variable to update the configuration.Here's a quick rundown of what this is about:\n\n## Example Configuration Commands for the Commandline\n\n**Get the current configuration:**\n\n```sh\ncurl -u \"<username>:<password>\" -H \"Content-Type: application/json\" -ki <Harbor Server URL>/api/v2.0/configurations\n```\n\n**Update the current configuration:**\n\n```sh\ncurl -X PUT -u \"<username>:<password>\" -H \"Content-Type: application/json\" -ki <Harbor Server URL>/api/v2.0/configurations -d'{\"<item_name>\":\"<item_value>\"}'\n```\n\n**Update Harbor to use LDAP authentication:**\n\nCommand\n\n```shell\ncurl -X PUT -u \"<username>:<password>\" -H \"Content-Type: application/json\" -ki https://harbor.sample.domain/api/v2.0/configurations -d'{\"auth_mode\":\"ldap_auth\"}'\n```\n\nOutput\n\n```fallback\nHTTP/1.1 200 OK\nServer: nginx\nDate: Wed, 08 May 2019 08:22:02 GMT\nContent-Type: text/plain; charset=utf-8\nContent-Length: 0\nConnection: keep-alive\nSet-Cookie: sid=a5803a1265e2b095cf65ce1d8bbd79b1; Path=/; HttpOnly\n```\n\n**Restrict project creation to Harbor administrators:**\n\nCommand\n\n```shell\ncurl -X PUT -u \"<username>:<password>\" -H \"Content-Type: application/json\" -ki https://harbor.sample.domain/api/v2.0/configurations -d'{\"project_creation_restriction\":\"adminonly\"}'\n```\n\nOutput\n\n```fallback\nHTTP/1.1 200 OK\nServer: nginx\nDate: Wed, 08 May 2019 08:24:32 GMT\nContent-Type: text/plain; charset=utf-8\nContent-Length: 0\nConnection: keep-alive\nSet-Cookie: sid=b7925eaf7af53bdefb13bdcae201a14a; Path=/; HttpOnly\n```\n\n**Update the token expiration time:**\n\nCommand\n\n```shell\ncurl -X PUT -u \"<username>:<password>\" -H \"Content-Type: application/json\" -ki https://harbor.sample.domain/api/v2.0/configurations -d'{\"token_expiration\":\"300\"}'\n```\n\nOutput\n\n```fallback\nHTTP/1.1 200 OK\nServer: nginx\nDate: Wed, 08 May 2019 08:23:38 GMT\nContent-Type: text/plain; charset=utf-8\nContent-Length: 0\nConnection: keep-alive\nSet-Cookie: sid=cc1bc93ffa2675253fc62b4bf3d9de0e; Path=/; HttpOnly\n```\n\n## Set Configuration Items Using An Environment Variable\n\nIntroduced in 2.3.0 is the ability to use an environment variable, `CONFIG_OVERWRITE_JSON`, in the core container to set the configuration. Once the `CONFIG_OVERWRITE_JSON` variable is set, you can only update or remove the configuration by updating the `CONFIG_OVERWRITE_JSON` and restarting the container. You will not be able to update the configuration in the Harbor interface or in the commandline.\n\n**Example CONFIG_OVERWRITE_JSON configuration:**\n\n```fallback\nCONFIG_OVERWRITE_JSON={\"ldap_verify_cert\":\"false\", \"auth_mode\":\"ldap_auth\",\"ldap_base_dn\":\"dc=example,dc=com\", \"ldap_search_dn\":\"cn=admin,dc=example,dc=com\",\"ldap_search_password\":\"admin\",\"ldap_url\":\"myldap.example.com\", \"ldap_scope\":2}\n```\n\nSee the [Harbor Configuration Items](https://goharbor.io/docs/2.12.0/install-config/configure-system-settings-cli/#harbor-configuration-items) table below for more information about available inputs for `CONFIG_OVERWRITE_JSON`.\n\nIf there is a legacy user in your instance of Harbor, the authentication mode can’t be changed by the environment variable `CONFIG_OVERWRITE_JSON`.\n\n## Harbor Configuration Items\n\n| Configure item name | Description | Type | Required | Default Value |\n| --- | --- | --- | --- | --- |\n| auth_mode | Authentication mode, it can be db_auth, ldap_auth, uaa_auth or oidc_auth | string |  |  |\n| primary_auth_mode | Set Identity Provider to be the primary auth method | boolean | optional | false |\n| ldap_url | LDAP URL | string | required |  |\n| ldap_base_dn | LDAP base DN | string | required(ldap_auth) |  |\n| ldap_filter | LDAP filter | string | optional |  |\n| ldap_scope | LDAP search scope, 0-Base Level, 1- One Level, 2-Sub Tree | number | optional | 2-Sub Tree |\n| ldap_search_dn | LDAP DN to search LDAP users | string | required(ldap_auth) |  |\n| ldap_search_password | LDAP DN’s password | string | required(ldap_auth) |  |\n| ldap_timeout | LDAP connection timeout | number | optional | 5 |\n| ldap_uid | LDAP attribute to indicate the username in Harbor | string | optional | cn |\n| ldap_verify_cert | Verify cert when create SSL connection with LDAP server, true or false | boolean | optional | true |\n| ldap_group_admin_dn | LDAP Group Admin DN | string | optional |  |\n| ldap_group_attribute_name | LDAP Group Attribute, the LDAP attribute indicate the groupname in Harbor, it can be gid or cn | string | optional | cn |\n| ldap_group_base_dn | The Base DN which to search the LDAP groups | string | required(ldap_auth and LDAP group) |  |\n| ldap_group_search_filter | The filter to search LDAP groups | string | optional |  |\n| ldap_group_search_scope | LDAP group search scope, 0-Base Level, 1- One Level, 2-Sub Tree | number | optional | 2-Sub Tree |\n| ldap_group_membership_attribute | LDAP group membership attribute, to indicate the group membership, it can be memberof, or ismemberof | string | optional | memberof |\n| project_creation_restriction | The option to indicate user can be create object, it can be everyone, adminonly | string | optional | everyone |\n| read_only | The option to set repository read only, it can be true or false | boolean | optional | false |\n| self_registration | User can register account in Harbor, it can be true or false | boolean | optional | true |\n| token_expiration | Security token expiration time in minutes | number | optional | 30 |\n| uaa_client_id | UAA client ID | string | required(uaa_auth) |  |\n| uaa_client_secret | UAA certificate | string | required(uaa_auth) |  |\n| uaa_endpoint | UAA endpoint | string | required(uaa_auth) |  |\n| uaa_verify_cert | UAA verify cert, true or false | boolean | optional | true |\n| oidc_name | Name for OIDC authentication | string | required(oidc_auth) |  |\n| oidc_endpoint | Endpoint for OIDC auth | string | required(oidc_auth) |  |\n| oidc_extra_redirect_parms | Extra parameters to add when redirect request to OIDC provider | string | optional | {} |\n| oidc_client_id | Client id for OIDC auth | string | required(oidc_auth) |  |\n| oidc_client_secret | Client secret for OIDC auth | string | required(oidc_auth) |  |\n| oidc_groups_claim | The name of a custom group claim that you have configured in your OIDC provider, that includes the groups to add to Harbor | string | optional |  |\n| oidc_admin_group | The name of the admin group, if the ID token of the user shows that he is a member of this group, the user will have admin privilege in Harbor. Note: You can only set one Admin Group. | string | optional |  |\n| oidc_scope | Scope for OIDC auth | string | required(oidc_auth) |  |\n| oidc_verify_cert | Verify certificate for OIDC auth, true or false | boolean | optional | true |\n| oidc_auto_onboard | Skip the onboarding screen, so user cannot change its username. Username is provided from ID Token, true or false | boolean | optional | false |\n| oidc_user_claim | The name of the claim in the ID Token where the username is retrieved from | string | optional | name |\n| robot_token_duration | Robot token expiration time in minutes | number | optional | 43200 (30days) |\n| robot_name_prefix | Prefixed string for each robot account name | string | optional | robot$ |\n| audit_log_forward_endpoint | Forward audit logs to the syslog endpoint, for example: harbor-log:10514 | string | optional |  |\n| skip_audit_log_database | Skip to log audit log in the database, only available when audit log forward endpoint is configured | boolean | optional | false |\n| scanner_skip_update_pulltime | Vulnerability scanner(e.g. Trivy) will not update the image “last pull time” when the image is scanned | boolean | optional |  |\n| banner_message | The banner message for the UI. It is the stringified result of the banner message object | string | optional |  |\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/install-config/configure-system-settings-cli", "title": "Harbor Configuration", "description": "This page describes the available configuration items for Harbor and how to use the command line or environment variable to update the configuration.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:41:36", "type": "overview", "page_metadata": {"og:site_name": "Harbor", "twitter:creator": "@project_harbor", "ogSiteName": "Harbor", "twitter:card": "summary", "og:title": "Harbor &ndash; Harbor Configuration", "favicon": "https://goharbor.io/favicon.svg", "twitter:site": "@project_harbor", "title": "\n      \nHarbor docs | Harbor Configuration\n\n    ", "og:image:type": "image/png", "ogLocale": "en_US", "ogTitle": "Harbor &ndash; Harbor Configuration", "og:image:alt": "Harbor &ndash; Harbor Configuration project logo", "generator": "Hugo 0.74.0", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:url": "https://goharbor.io/docs/2.12.0/install-config/configure-system-settings-cli/", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogUrl": "https://goharbor.io/docs/2.12.0/install-config/configure-system-settings-cli/", "og:type": ["documentation", "article"], "og:locale": "en_US", "scrapeId": "41babf83-d2a1-4874-a5c9-aeb741eeaeec", "sourceURL": "https://goharbor.io/docs/2.12.0/install-config/configure-system-settings-cli", "url": "https://goharbor.io/docs/2.12.0/install-config/configure-system-settings-cli/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I example configuration commands for the commandline in harbor-2-12-0?\n\nAssistant: To example configuration commands for the commandline in harbor-2-12-0, here's what you do:\n**Get the current configuration:**\n\n```sh\ncurl -u \"<username>:<password>\" -H \"Content-Type: application/json\" -ki <Harbor Server URL>/api/v2.0/configurations\n```\n\n**Update the current configuration:**\n\n```sh\ncurl -X PUT -u \"<username>:<password>\" -H \"Content-Type: application/json\" -ki <Harbor Server URL>/api/v2.0/configurations -d'{\"<item_name>\":\"<item_value>\"}'\n```\n\n**Update Harbor to use LDAP authentication:**\n\nCommand\n\n```shell\ncurl -X PUT -u \"<username>:<password>\" -H \"Content-Type: application/json\" -ki https://harbor.sample.domain/api/v2.0/configurations -d'{\"auth_mode\":\"ldap_auth\"}'\n```\n\nOutput\n\n```fallback\nHTTP/1.1 200 OK\nServer: nginx\nDate: Wed, 08 May 2019 08:22:02 GMT\nContent-Type: text/plain; charset=utf-8\nContent-Length: 0\nConnection: keep-alive\nSet-Cookie: sid=a5803a1265e2b095cf65ce1d8bbd79b1; Path=/; HttpOnly\n```\n\n**Restrict project creation to Harbor administrators:**\n\nCommand\n\n```shell\ncurl -X PUT -u \"<username>:<password>\" -H \"Content-Type: application/json\" -ki https://harbor.sample.domain/api/v2.0/configurations -d'{\"project_creation_restriction\":\"adminonly\"}'\n```\n\nOutput\n\n```fallback\nHTTP/1.1 200 OK\nServer: nginx\nDate: Wed, 08 May 2019 08:24:32 GMT\nContent-Type: text/plain; charset=utf-8\nContent-Length: 0\nConnection: keep-alive\nSet-Cookie: sid=b7925eaf7af53bdefb13bdcae201a14a; Path=/; HttpOnly\n```\n\n**Update the token expiration time:**\n\nCommand\n\n```shell\ncurl -X PUT -u \"<username>:<password>\" -H \"Content-Type: application/json\" -ki https://harbor.sample.domain/api/v2.0/configurations -d'{\"token_expiration\":\"300\"}'\n```\n\nOutput\n\n```fallback\nHTTP/1.1 200 OK\nServer: nginx\nDate: Wed, 08 May 2019 08:23:38 GMT\nContent-Type: text/plain; charset=utf-8\nContent-Length: 0\nConnection: keep-alive\nSet-Cookie: sid=cc1bc93ffa2675253fc62b4bf3d9de0e; Path=/; HttpOnly\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/install-config/configure-system-settings-cli", "title": "Harbor Configuration", "description": "This page describes the available configuration items for Harbor and how to use the command line or environment variable to update the configuration.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:41:36", "type": "section_detail", "page_metadata": {"og:site_name": "Harbor", "twitter:creator": "@project_harbor", "ogSiteName": "Harbor", "twitter:card": "summary", "og:title": "Harbor &ndash; Harbor Configuration", "favicon": "https://goharbor.io/favicon.svg", "twitter:site": "@project_harbor", "title": "\n      \nHarbor docs | Harbor Configuration\n\n    ", "og:image:type": "image/png", "ogLocale": "en_US", "ogTitle": "Harbor &ndash; Harbor Configuration", "og:image:alt": "Harbor &ndash; Harbor Configuration project logo", "generator": "Hugo 0.74.0", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:url": "https://goharbor.io/docs/2.12.0/install-config/configure-system-settings-cli/", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogUrl": "https://goharbor.io/docs/2.12.0/install-config/configure-system-settings-cli/", "og:type": ["documentation", "article"], "og:locale": "en_US", "scrapeId": "41babf83-d2a1-4874-a5c9-aeb741eeaeec", "sourceURL": "https://goharbor.io/docs/2.12.0/install-config/configure-system-settings-cli", "url": "https://goharbor.io/docs/2.12.0/install-config/configure-system-settings-cli/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I set configuration items using an environment variable in harbor-2-12-0?\n\nAssistant: To set configuration items using an environment variable in harbor-2-12-0, here's what you do:\nIntroduced in 2.3.0 is the ability to use an environment variable, `CONFIG_OVERWRITE_JSON`, in the core container to set the configuration. Once the `CONFIG_OVERWRITE_JSON` variable is set, you can only update or remove the configuration by updating the `CONFIG_OVERWRITE_JSON` and restarting the container. You will not be able to update the configuration in the Harbor interface or in the commandline.\n\n**Example CONFIG_OVERWRITE_JSON configuration:**\n\n```fallback\nCONFIG_OVERWRITE_JSON={\"ldap_verify_cert\":\"false\", \"auth_mode\":\"ldap_auth\",\"ldap_base_dn\":\"dc=example,dc=com\", \"ldap_search_dn\":\"cn=admin,dc=example,dc=com\",\"ldap_search_password\":\"admin\",\"ldap_url\":\"myldap.example.com\", \"ldap_scope\":2}\n```\n\nSee the [Harbor Configuration Items](https://goharbor.io/docs/2.12.0/install-config/configure-system-settings-cli/#harbor-configuration-items) table below for more information about available inputs for `CONFIG_OVERWRITE_JSON`.\n\nIf there is a legacy user in your instance of Harbor, the authentication mode can’t be changed by the environment variable `CONFIG_OVERWRITE_JSON`..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/install-config/configure-system-settings-cli", "title": "Harbor Configuration", "description": "This page describes the available configuration items for Harbor and how to use the command line or environment variable to update the configuration.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:41:36", "type": "section_detail", "page_metadata": {"og:site_name": "Harbor", "twitter:creator": "@project_harbor", "ogSiteName": "Harbor", "twitter:card": "summary", "og:title": "Harbor &ndash; Harbor Configuration", "favicon": "https://goharbor.io/favicon.svg", "twitter:site": "@project_harbor", "title": "\n      \nHarbor docs | Harbor Configuration\n\n    ", "og:image:type": "image/png", "ogLocale": "en_US", "ogTitle": "Harbor &ndash; Harbor Configuration", "og:image:alt": "Harbor &ndash; Harbor Configuration project logo", "generator": "Hugo 0.74.0", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:url": "https://goharbor.io/docs/2.12.0/install-config/configure-system-settings-cli/", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogUrl": "https://goharbor.io/docs/2.12.0/install-config/configure-system-settings-cli/", "og:type": ["documentation", "article"], "og:locale": "en_US", "scrapeId": "41babf83-d2a1-4874-a5c9-aeb741eeaeec", "sourceURL": "https://goharbor.io/docs/2.12.0/install-config/configure-system-settings-cli", "url": "https://goharbor.io/docs/2.12.0/install-config/configure-system-settings-cli/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I harbor configuration items in harbor-2-12-0?\n\nAssistant: To harbor configuration items in harbor-2-12-0, here's what you do:\n| Configure item name | Description | Type | Required | Default Value |\n| --- | --- | --- | --- | --- |\n| auth_mode | Authentication mode, it can be db_auth, ldap_auth, uaa_auth or oidc_auth | string |  |  |\n| primary_auth_mode | Set Identity Provider to be the primary auth method | boolean | optional | false |\n| ldap_url | LDAP URL | string | required |  |\n| ldap_base_dn | LDAP base DN | string | required(ldap_auth) |  |\n| ldap_filter | LDAP filter | string | optional |  |\n| ldap_scope | LDAP search scope, 0-Base Level, 1- One Level, 2-Sub Tree | number | optional | 2-Sub Tree |\n| ldap_search_dn | LDAP DN to search LDAP users | string | required(ldap_auth) |  |\n| ldap_search_password | LDAP DN’s password | string | required(ldap_auth) |  |\n| ldap_timeout | LDAP connection timeout | number | optional | 5 |\n| ldap_uid | LDAP attribute to indicate the username in Harbor | string | optional | cn |\n| ldap_verify_cert | Verify cert when create SSL connection with LDAP server, true or false | boolean | optional | true |\n| ldap_group_admin_dn | LDAP Group Admin DN | string | optional |  |\n| ldap_group_attribute_name | LDAP Group Attribute, the LDAP attribute indicate the groupname in Harbor, it can be gid or cn | string | optional | cn |\n| ldap_group_base_dn | The Base DN which to search the LDAP groups | string | required(ldap_auth and LDAP group) |  |\n| ldap_group_search_filter | The filter to search LDAP groups | string | optional |  |\n| ldap_group_search_scope | LDAP group search scope, 0-Base Level, 1- One Level, 2-Sub Tree | number | optional | 2-Sub Tree |\n| ldap_group_membership_attribute | LDAP group membership attribute, to indicate the group membership, it can be memberof, or ismemberof | string | optional | memberof |\n| project_creation_restriction | The option to indicate user can be create object, it can be everyone, adminonly | string | optional | everyone |\n| read_only | The option to set repository read only, it can be true or false | boolean | optional | false |\n| self_registration | User can register account in Harbor, it can be true or false | boolean | optional | true |\n| token_expiration | Security token expiration time in minutes | number | optional | 30 |\n| uaa_client_id | UAA client ID | string | required(uaa_auth) |  |\n| uaa_client_secret | UAA certificate | string | required(uaa_auth) |  |\n| uaa_endpoint | UAA endpoint | string | required(uaa_auth) |  |\n| uaa_verify_cert | UAA verify cert, true or false | boolean | optional | true |\n| oidc_name | Name for OIDC authentication | string | required(oidc_auth) |  |\n| oidc_endpoint | Endpoint for OIDC auth | string | required(oidc_auth) |  |\n| oidc_extra_redirect_parms | Extra parameters to add when redirect request to OIDC provider | string | optional | {} |\n| oidc_client_id | Client id for OIDC auth | string | required(oidc_auth) |  |\n| oidc_client_secret | Client secret for OIDC auth | string | required(oidc_auth) |  |\n| oidc_groups_claim | The name of a custom group claim that you have configured in your OIDC provider, that includes the groups to add to Harbor | string | optional |  |\n| oidc_admin_group | The name of the admin group, if the ID token of the user shows that he is a member of this group, the user will have admin privilege in Harbor. Note: You can only set one Admin Group. | string | optional |  |\n| oidc_scope | Scope for OIDC auth | string | required(oidc_auth) |  |\n| oidc_verify_cert | Verify certificate for OIDC auth, true or false | boolean | optional | true |\n| oidc_auto_onboard | Skip the onboarding screen, so user cannot change its username. Username is provided from ID Token, true or false | boolean | optional | false |\n| oidc_user_claim | The name of the claim in the ID Token where the username is retrieved from | string | optional | name |\n| robot_token_duration | Robot token expiration time in minutes | number | optional | 43200 (30days) |\n| robot_name_prefix | Prefixed string for each robot account name | string | optional | robot$ |\n| audit_log_forward_endpoint | Forward audit logs to the syslog endpoint, for example: harbor-log:10514 | string | optional |  |\n| skip_audit_log_database | Skip to log audit log in the database, only available when audit log forward endpoint is configured | boolean | optional | false |\n| scanner_skip_update_pulltime | Vulnerability scanner(e.g. Trivy) will not update the image “last pull time” when the image is scanned | boolean | optional |  |\n| banner_message | The banner message for the UI. It is the stringified result of the banner message object | string | optional |  |.\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/install-config/configure-system-settings-cli", "title": "Harbor Configuration", "description": "This page describes the available configuration items for Harbor and how to use the command line or environment variable to update the configuration.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:41:36", "type": "section_detail", "page_metadata": {"og:site_name": "Harbor", "twitter:creator": "@project_harbor", "ogSiteName": "Harbor", "twitter:card": "summary", "og:title": "Harbor &ndash; Harbor Configuration", "favicon": "https://goharbor.io/favicon.svg", "twitter:site": "@project_harbor", "title": "\n      \nHarbor docs | Harbor Configuration\n\n    ", "og:image:type": "image/png", "ogLocale": "en_US", "ogTitle": "Harbor &ndash; Harbor Configuration", "og:image:alt": "Harbor &ndash; Harbor Configuration project logo", "generator": "Hugo 0.74.0", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:url": "https://goharbor.io/docs/2.12.0/install-config/configure-system-settings-cli/", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogUrl": "https://goharbor.io/docs/2.12.0/install-config/configure-system-settings-cli/", "og:type": ["documentation", "article"], "og:locale": "en_US", "scrapeId": "41babf83-d2a1-4874-a5c9-aeb741eeaeec", "sourceURL": "https://goharbor.io/docs/2.12.0/install-config/configure-system-settings-cli", "url": "https://goharbor.io/docs/2.12.0/install-config/configure-system-settings-cli/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you give me some code examples for Harbor Configuration in harbor-2-12-0?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Get the current configuration**:\n\n```yaml\ncurl -u \"<username>:<password>\" -H \"Content-Type: application/json\" -ki <Harbor Server URL>/api/v2.0/configurations\n```\n\nThis snippet shows you how to get the current configuration, which is an important aspect of harbor configuration.\n\n**Update the current configuration**:\n\n```yaml\ncurl -X PUT -u \"<username>:<password>\" -H \"Content-Type: application/json\" -ki <Harbor Server URL>/api/v2.0/configurations -d'{\"<item_name>\":\"<item_value>\"}'\n```\n\nThis snippet shows you how to update the current configuration, which is an important aspect of harbor configuration.\n\n**Update Harbor to use LDAP authentication**:\n\n```yaml\ncurl -X PUT -u \"<username>:<password>\" -H \"Content-Type: application/json\" -ki https://harbor.sample.domain/api/v2.0/configurations -d'{\"auth_mode\":\"ldap_auth\"}'\n```\n\nThis snippet shows you how to update harbor to use ldap authentication, which is an important aspect of harbor configuration.\n\n**Restrict project creation to Harbor administrators**:\n\n```yaml\ncurl -X PUT -u \"<username>:<password>\" -H \"Content-Type: application/json\" -ki https://harbor.sample.domain/api/v2.0/configurations -d'{\"project_creation_restriction\":\"adminonly\"}'\n```\n\nThis snippet shows you how to restrict project creation to harbor administrators, which is an important aspect of harbor configuration.\n\n**Update the token expiration time**:\n\n```yaml\ncurl -X PUT -u \"<username>:<password>\" -H \"Content-Type: application/json\" -ki https://harbor.sample.domain/api/v2.0/configurations -d'{\"token_expiration\":\"300\"}'\n```\n\nThis snippet shows you how to update the token expiration time, which is an important aspect of harbor configuration.\n\n**Set Configuration Items Using An Environment Variable**:\n\n```yaml\nCONFIG_OVERWRITE_JSON={\"ldap_verify_cert\":\"false\", \"auth_mode\":\"ldap_auth\",\"ldap_base_dn\":\"dc=example,dc=com\", \"ldap_search_dn\":\"cn=admin,dc=example,dc=com\",\"ldap_search_password\":\"admin\",\"ldap_url\":\"myldap.example.com\", \"ldap_scope\":2}\n```\n\nThis snippet shows you how to set configuration items using an environment variable, which is an important aspect of harbor configuration.\n\n", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/install-config/configure-system-settings-cli", "title": "Harbor Configuration", "description": "This page describes the available configuration items for Harbor and how to use the command line or environment variable to update the configuration.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:41:36", "type": "code_examples", "page_metadata": {"og:site_name": "Harbor", "twitter:creator": "@project_harbor", "ogSiteName": "Harbor", "twitter:card": "summary", "og:title": "Harbor &ndash; Harbor Configuration", "favicon": "https://goharbor.io/favicon.svg", "twitter:site": "@project_harbor", "title": "\n      \nHarbor docs | Harbor Configuration\n\n    ", "og:image:type": "image/png", "ogLocale": "en_US", "ogTitle": "Harbor &ndash; Harbor Configuration", "og:image:alt": "Harbor &ndash; Harbor Configuration project logo", "generator": "Hugo 0.74.0", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:url": "https://goharbor.io/docs/2.12.0/install-config/configure-system-settings-cli/", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogUrl": "https://goharbor.io/docs/2.12.0/install-config/configure-system-settings-cli/", "og:type": ["documentation", "article"], "og:locale": "en_US", "scrapeId": "41babf83-d2a1-4874-a5c9-aeb741eeaeec", "sourceURL": "https://goharbor.io/docs/2.12.0/install-config/configure-system-settings-cli", "url": "https://goharbor.io/docs/2.12.0/install-config/configure-system-settings-cli/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: What are some tips for using Harbor Configuration in harbor-2-12-0 effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nBoth booleans and numbers can be enclosed with double quote in the request json, for example: `123`, `\"123\"`, `\"true\"` or `true` is OK.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/install-config/configure-system-settings-cli", "title": "Harbor Configuration", "description": "This page describes the available configuration items for Harbor and how to use the command line or environment variable to update the configuration.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:41:36", "type": "best_practices", "page_metadata": {"og:site_name": "Harbor", "twitter:creator": "@project_harbor", "ogSiteName": "Harbor", "twitter:card": "summary", "og:title": "Harbor &ndash; Harbor Configuration", "favicon": "https://goharbor.io/favicon.svg", "twitter:site": "@project_harbor", "title": "\n      \nHarbor docs | Harbor Configuration\n\n    ", "og:image:type": "image/png", "ogLocale": "en_US", "ogTitle": "Harbor &ndash; Harbor Configuration", "og:image:alt": "Harbor &ndash; Harbor Configuration project logo", "generator": "Hugo 0.74.0", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:url": "https://goharbor.io/docs/2.12.0/install-config/configure-system-settings-cli/", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogUrl": "https://goharbor.io/docs/2.12.0/install-config/configure-system-settings-cli/", "og:type": ["documentation", "article"], "og:locale": "en_US", "scrapeId": "41babf83-d2a1-4874-a5c9-aeb741eeaeec", "sourceURL": "https://goharbor.io/docs/2.12.0/install-config/configure-system-settings-cli", "url": "https://goharbor.io/docs/2.12.0/install-config/configure-system-settings-cli/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you explain what Pulling and Pushing Images in the Docker Client is in harbor-2-12-0?\n\nAssistant: Sure, I'd be happy to explain Pulling and Pushing Images in the Docker Client in harbor-2-12-0.\n\n# Pulling and Pushing Images in the Docker Client\n\nThis page covers how to pull and push images using the Docker client with Harbor, including configuration for HTTP connections, handling errors, and managing images in Harbor.Here's a quick rundown of what this is about:\n\n## Pulling Images\n\nIf the project that the image belongs to is private, you must sign in first:\n\n```sh\ndocker login <harbor_address>\n```\n\nYou can now pull an image:\n\n```sh\ndocker pull <harbor_address>/library/ubuntu:14.04\n```\n\nHarbor supports content trust through Cosign and Notation. If you have enforced content trust in your project, you will not be able to pull an unsigned image. Read more about [implementing content trust](https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/implementing-content-trust/).\n\n## Pushing Images\n\nBefore you can push an image to Harbor, you must create a corresponding project in the Harbor interface. For information about how to create a project, see [Create Projects](https://goharbor.io/docs/2.12.0/working-with-projects/create-projects/).\n\nTo push Windows images to your Harbor instance, you also must set your docker daemon to `allow-nondistributable-artifacts`. For more information see [Pushing Windows Images](https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/pulling-pushing-images/#pushing-windows-images).\n\nYou cannot push images to a proxy cache project. See more about [proxy cache projects](https://goharbor.io/docs/2.12.0/administration/configure-proxy-cache/).\n\nFirst, log in from Docker client:\n\n```sh\ndocker login <harbor_address>\n```\n\nTag the image:\n\n```sh\ndocker tag ubuntu:14.04 <harbor_address>/demo/ubuntu:14.04\n```\n\nPush the image:\n\n```sh\ndocker push <harbor_address>/demo/ubuntu:14.04\n```\n\n### Pushing Windows Images\n\nIf you plan to push Windows images to your Harbor instance, you must configure your docker daemon to allow pushing restricted artifacts by setting `allow-nondistributable-artifacts` in your `daemon.json` file.\n\n```fallback\n{\n\"allow-nondistributable-artifacts\" : [\"myregistrydomain.com:5000\"]\n}\n```\n\nFor more information on the `allow-nondistributable-artifacts` setting, see [Docker’s documentation](https://docs.docker.com/engine/reference/commandline/dockerd/#allow-push-of-nondistributable-artifacts).\n\n## Add Descriptions to Repositories\n\nAfter pushing an image, the project administrator can add information to describe the repository.\n\nGo into the repository and select the **Info** tab, and click the **Edit** button. Enter a description and click **Save** to save the description.\n\n## Download the Harbor Certificate\n\nUsers can click the **Registry Certificate** button to download the registry certificate. If there is no **Registry Certificate** button, copy your server certificate into the directory `<your-data_volume>/ca_download/` and name it `ca.cert`.\n\n## Deleting Repositories\n\nDeleting repositories involves two steps.\n\nFirst, you delete a repository in the Harbor interface. This is soft deletion. You can delete the entire repository or just one of its tags. After the soft deletion, the repository is no longer managed by Harbor, however, the repository files remain in the Harbor storage.\n\nNext, delete the repository files by running [garbage collection](https://goharbor.io/docs/2.12.0/administration/garbage-collection/) in the Harbor interface.\n\n## Pulling Images from Harbor in Kubernetes\n\nKubernetes users can easily deploy pods with images stored in Harbor. The settings are similar to those of any other private registry. There are two issues to be aware of:\n\n1. When your Harbor instance is hosting HTTP and the certificate is self-signed, you must modify `daemon.json` on each work node of your cluster. For information, see [https://docs.docker.com/registry/insecure/#deploy-a-plain-http-registry](https://docs.docker.com/registry/insecure/#deploy-a-plain-http-registry).\n2. If your pod references an image under a private project, you must create a secret with the credentials of a user who has permission to pull images from the project. For information, see [https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/](https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/).\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/pulling-pushing-images", "title": "Pulling and Pushing Images in the Docker Client", "description": "This page covers how to pull and push images using the Docker client with Harbor, including configuration for HTTP connections, handling errors, and managing images in Harbor.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:41:58", "type": "overview", "page_metadata": {"twitter:creator": "@project_harbor", "favicon": "https://goharbor.io/favicon.svg", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/pulling-pushing-images/", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogSiteName": "Harbor", "og:site_name": "Harbor", "ogLocale": "en_US", "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/pulling-pushing-images/", "og:type": ["documentation", "article"], "og:image:type": "image/png", "ogTitle": "Harbor &ndash; Pulling and Pushing Images in the Docker Client", "og:locale": "en_US", "title": "\n      \nHarbor docs | Pulling and Pushing Images in the Docker Client\n\n    ", "og:image:alt": "Harbor &ndash; Pulling and Pushing Images in the Docker Client project logo", "twitter:site": "@project_harbor", "twitter:card": "summary", "generator": "Hugo 0.74.0", "og:title": "Harbor &ndash; Pulling and Pushing Images in the Docker Client", "scrapeId": "13d24af0-21d8-4d90-841c-fdede2c422f3", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/pulling-pushing-images", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/pulling-pushing-images/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I pulling images in harbor-2-12-0?\n\nAssistant: To pulling images in harbor-2-12-0, here's what you do:\nIf the project that the image belongs to is private, you must sign in first:\n\n```sh\ndocker login <harbor_address>\n```\n\nYou can now pull an image:\n\n```sh\ndocker pull <harbor_address>/library/ubuntu:14.04\n```\n\nHarbor supports content trust through Cosign and Notation. If you have enforced content trust in your project, you will not be able to pull an unsigned image. Read more about [implementing content trust](https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/implementing-content-trust/)..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/pulling-pushing-images", "title": "Pulling and Pushing Images in the Docker Client", "description": "This page covers how to pull and push images using the Docker client with Harbor, including configuration for HTTP connections, handling errors, and managing images in Harbor.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:41:58", "type": "section_detail", "page_metadata": {"twitter:creator": "@project_harbor", "favicon": "https://goharbor.io/favicon.svg", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/pulling-pushing-images/", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogSiteName": "Harbor", "og:site_name": "Harbor", "ogLocale": "en_US", "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/pulling-pushing-images/", "og:type": ["documentation", "article"], "og:image:type": "image/png", "ogTitle": "Harbor &ndash; Pulling and Pushing Images in the Docker Client", "og:locale": "en_US", "title": "\n      \nHarbor docs | Pulling and Pushing Images in the Docker Client\n\n    ", "og:image:alt": "Harbor &ndash; Pulling and Pushing Images in the Docker Client project logo", "twitter:site": "@project_harbor", "twitter:card": "summary", "generator": "Hugo 0.74.0", "og:title": "Harbor &ndash; Pulling and Pushing Images in the Docker Client", "scrapeId": "13d24af0-21d8-4d90-841c-fdede2c422f3", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/pulling-pushing-images", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/pulling-pushing-images/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I pushing images in harbor-2-12-0?\n\nAssistant: To pushing images in harbor-2-12-0, here's what you do:\nBefore you can push an image to Harbor, you must create a corresponding project in the Harbor interface. For information about how to create a project, see [Create Projects](https://goharbor.io/docs/2.12.0/working-with-projects/create-projects/).\n\nTo push Windows images to your Harbor instance, you also must set your docker daemon to `allow-nondistributable-artifacts`. For more information see [Pushing Windows Images](https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/pulling-pushing-images/#pushing-windows-images).\n\nYou cannot push images to a proxy cache project. See more about [proxy cache projects](https://goharbor.io/docs/2.12.0/administration/configure-proxy-cache/).\n\nFirst, log in from Docker client:\n\n```sh\ndocker login <harbor_address>\n```\n\nTag the image:\n\n```sh\ndocker tag ubuntu:14.04 <harbor_address>/demo/ubuntu:14.04\n```\n\nPush the image:\n\n```sh\ndocker push <harbor_address>/demo/ubuntu:14.04\n```\n\n### Pushing Windows Images\n\nIf you plan to push Windows images to your Harbor instance, you must configure your docker daemon to allow pushing restricted artifacts by setting `allow-nondistributable-artifacts` in your `daemon.json` file.\n\n```fallback\n{\n\"allow-nondistributable-artifacts\" : [\"myregistrydomain.com:5000\"]\n}\n```\n\nFor more information on the `allow-nondistributable-artifacts` setting, see [Docker’s documentation](https://docs.docker.com/engine/reference/commandline/dockerd/#allow-push-of-nondistributable-artifacts)..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/pulling-pushing-images", "title": "Pulling and Pushing Images in the Docker Client", "description": "This page covers how to pull and push images using the Docker client with Harbor, including configuration for HTTP connections, handling errors, and managing images in Harbor.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:41:58", "type": "section_detail", "page_metadata": {"twitter:creator": "@project_harbor", "favicon": "https://goharbor.io/favicon.svg", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/pulling-pushing-images/", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogSiteName": "Harbor", "og:site_name": "Harbor", "ogLocale": "en_US", "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/pulling-pushing-images/", "og:type": ["documentation", "article"], "og:image:type": "image/png", "ogTitle": "Harbor &ndash; Pulling and Pushing Images in the Docker Client", "og:locale": "en_US", "title": "\n      \nHarbor docs | Pulling and Pushing Images in the Docker Client\n\n    ", "og:image:alt": "Harbor &ndash; Pulling and Pushing Images in the Docker Client project logo", "twitter:site": "@project_harbor", "twitter:card": "summary", "generator": "Hugo 0.74.0", "og:title": "Harbor &ndash; Pulling and Pushing Images in the Docker Client", "scrapeId": "13d24af0-21d8-4d90-841c-fdede2c422f3", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/pulling-pushing-images", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/pulling-pushing-images/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I add descriptions to repositories in harbor-2-12-0?\n\nAssistant: To add descriptions to repositories in harbor-2-12-0, here's what you do:\nAfter pushing an image, the project administrator can add information to describe the repository.\n\nGo into the repository and select the **Info** tab, and click the **Edit** button. Enter a description and click **Save** to save the description..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/pulling-pushing-images", "title": "Pulling and Pushing Images in the Docker Client", "description": "This page covers how to pull and push images using the Docker client with Harbor, including configuration for HTTP connections, handling errors, and managing images in Harbor.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:41:58", "type": "section_detail", "page_metadata": {"twitter:creator": "@project_harbor", "favicon": "https://goharbor.io/favicon.svg", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/pulling-pushing-images/", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogSiteName": "Harbor", "og:site_name": "Harbor", "ogLocale": "en_US", "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/pulling-pushing-images/", "og:type": ["documentation", "article"], "og:image:type": "image/png", "ogTitle": "Harbor &ndash; Pulling and Pushing Images in the Docker Client", "og:locale": "en_US", "title": "\n      \nHarbor docs | Pulling and Pushing Images in the Docker Client\n\n    ", "og:image:alt": "Harbor &ndash; Pulling and Pushing Images in the Docker Client project logo", "twitter:site": "@project_harbor", "twitter:card": "summary", "generator": "Hugo 0.74.0", "og:title": "Harbor &ndash; Pulling and Pushing Images in the Docker Client", "scrapeId": "13d24af0-21d8-4d90-841c-fdede2c422f3", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/pulling-pushing-images", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/pulling-pushing-images/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I download the harbor certificate in harbor-2-12-0?\n\nAssistant: To download the harbor certificate in harbor-2-12-0, here's what you do:\nUsers can click the **Registry Certificate** button to download the registry certificate. If there is no **Registry Certificate** button, copy your server certificate into the directory `<your-data_volume>/ca_download/` and name it `ca.cert`..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/pulling-pushing-images", "title": "Pulling and Pushing Images in the Docker Client", "description": "This page covers how to pull and push images using the Docker client with Harbor, including configuration for HTTP connections, handling errors, and managing images in Harbor.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:41:58", "type": "section_detail", "page_metadata": {"twitter:creator": "@project_harbor", "favicon": "https://goharbor.io/favicon.svg", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/pulling-pushing-images/", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogSiteName": "Harbor", "og:site_name": "Harbor", "ogLocale": "en_US", "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/pulling-pushing-images/", "og:type": ["documentation", "article"], "og:image:type": "image/png", "ogTitle": "Harbor &ndash; Pulling and Pushing Images in the Docker Client", "og:locale": "en_US", "title": "\n      \nHarbor docs | Pulling and Pushing Images in the Docker Client\n\n    ", "og:image:alt": "Harbor &ndash; Pulling and Pushing Images in the Docker Client project logo", "twitter:site": "@project_harbor", "twitter:card": "summary", "generator": "Hugo 0.74.0", "og:title": "Harbor &ndash; Pulling and Pushing Images in the Docker Client", "scrapeId": "13d24af0-21d8-4d90-841c-fdede2c422f3", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/pulling-pushing-images", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/pulling-pushing-images/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I deleting repositories in harbor-2-12-0?\n\nAssistant: To deleting repositories in harbor-2-12-0, here's what you do:\nDeleting repositories involves two steps.\n\nFirst, you delete a repository in the Harbor interface. This is soft deletion. You can delete the entire repository or just one of its tags. After the soft deletion, the repository is no longer managed by Harbor, however, the repository files remain in the Harbor storage.\n\nNext, delete the repository files by running [garbage collection](https://goharbor.io/docs/2.12.0/administration/garbage-collection/) in the Harbor interface..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/pulling-pushing-images", "title": "Pulling and Pushing Images in the Docker Client", "description": "This page covers how to pull and push images using the Docker client with Harbor, including configuration for HTTP connections, handling errors, and managing images in Harbor.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:41:58", "type": "section_detail", "page_metadata": {"twitter:creator": "@project_harbor", "favicon": "https://goharbor.io/favicon.svg", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/pulling-pushing-images/", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogSiteName": "Harbor", "og:site_name": "Harbor", "ogLocale": "en_US", "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/pulling-pushing-images/", "og:type": ["documentation", "article"], "og:image:type": "image/png", "ogTitle": "Harbor &ndash; Pulling and Pushing Images in the Docker Client", "og:locale": "en_US", "title": "\n      \nHarbor docs | Pulling and Pushing Images in the Docker Client\n\n    ", "og:image:alt": "Harbor &ndash; Pulling and Pushing Images in the Docker Client project logo", "twitter:site": "@project_harbor", "twitter:card": "summary", "generator": "Hugo 0.74.0", "og:title": "Harbor &ndash; Pulling and Pushing Images in the Docker Client", "scrapeId": "13d24af0-21d8-4d90-841c-fdede2c422f3", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/pulling-pushing-images", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/pulling-pushing-images/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I pulling images from harbor in kubernetes in harbor-2-12-0?\n\nAssistant: To pulling images from harbor in kubernetes in harbor-2-12-0, here's what you do:\nKubernetes users can easily deploy pods with images stored in Harbor. The settings are similar to those of any other private registry. There are two issues to be aware of:\n\n1. When your Harbor instance is hosting HTTP and the certificate is self-signed, you must modify `daemon.json` on each work node of your cluster. For information, see [https://docs.docker.com/registry/insecure/#deploy-a-plain-http-registry](https://docs.docker.com/registry/insecure/#deploy-a-plain-http-registry).\n2. If your pod references an image under a private project, you must create a secret with the credentials of a user who has permission to pull images from the project. For information, see [https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/](https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/)..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/pulling-pushing-images", "title": "Pulling and Pushing Images in the Docker Client", "description": "This page covers how to pull and push images using the Docker client with Harbor, including configuration for HTTP connections, handling errors, and managing images in Harbor.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:41:58", "type": "section_detail", "page_metadata": {"twitter:creator": "@project_harbor", "favicon": "https://goharbor.io/favicon.svg", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/pulling-pushing-images/", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogSiteName": "Harbor", "og:site_name": "Harbor", "ogLocale": "en_US", "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/pulling-pushing-images/", "og:type": ["documentation", "article"], "og:image:type": "image/png", "ogTitle": "Harbor &ndash; Pulling and Pushing Images in the Docker Client", "og:locale": "en_US", "title": "\n      \nHarbor docs | Pulling and Pushing Images in the Docker Client\n\n    ", "og:image:alt": "Harbor &ndash; Pulling and Pushing Images in the Docker Client project logo", "twitter:site": "@project_harbor", "twitter:card": "summary", "generator": "Hugo 0.74.0", "og:title": "Harbor &ndash; Pulling and Pushing Images in the Docker Client", "scrapeId": "13d24af0-21d8-4d90-841c-fdede2c422f3", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/pulling-pushing-images", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/pulling-pushing-images/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you give me some code examples for Pulling and Pushing Images in the Docker Client in harbor-2-12-0?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Error Response from Daemon**:\n\n```yaml\nError response from daemon: Get https://myregistrydomain.com/v1/users/: dial tcp myregistrydomain.com:443 getsockopt: connection refused.\n```\n\nThis snippet shows you how to error response from daemon, which is an important aspect of pulling and pushing images in the docker client.\n\n**Docker Login Command**:\n\n```yaml\ndocker login <harbor_address>\n```\n\nThis snippet shows you how to docker login command, which is an important aspect of pulling and pushing images in the docker client.\n\n**Docker Pull Command**:\n\n```yaml\ndocker pull <harbor_address>/library/ubuntu:14.04\n```\n\nThis snippet shows you how to docker pull command, which is an important aspect of pulling and pushing images in the docker client.\n\n**Docker Tag Command**:\n\n```yaml\ndocker tag ubuntu:14.04 <harbor_address>/demo/ubuntu:14.04\n```\n\nThis snippet shows you how to docker tag command, which is an important aspect of pulling and pushing images in the docker client.\n\n**Docker Push Command**:\n\n```yaml\ndocker push <harbor_address>/demo/ubuntu:14.04\n```\n\nThis snippet shows you how to docker push command, which is an important aspect of pulling and pushing images in the docker client.\n\n**Allow Nondistributable Artifacts Configuration**:\n\n```yaml\n{\n\"allow-nondistributable-artifacts\" : [\"myregistrydomain.com:5000\"]\n}\n```\n\nThis snippet shows you how to allow nondistributable artifacts configuration, which is an important aspect of pulling and pushing images in the docker client.\n\n", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/pulling-pushing-images", "title": "Pulling and Pushing Images in the Docker Client", "description": "This page covers how to pull and push images using the Docker client with Harbor, including configuration for HTTP connections, handling errors, and managing images in Harbor.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:41:58", "type": "code_examples", "page_metadata": {"twitter:creator": "@project_harbor", "favicon": "https://goharbor.io/favicon.svg", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/pulling-pushing-images/", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogSiteName": "Harbor", "og:site_name": "Harbor", "ogLocale": "en_US", "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/pulling-pushing-images/", "og:type": ["documentation", "article"], "og:image:type": "image/png", "ogTitle": "Harbor &ndash; Pulling and Pushing Images in the Docker Client", "og:locale": "en_US", "title": "\n      \nHarbor docs | Pulling and Pushing Images in the Docker Client\n\n    ", "og:image:alt": "Harbor &ndash; Pulling and Pushing Images in the Docker Client project logo", "twitter:site": "@project_harbor", "twitter:card": "summary", "generator": "Hugo 0.74.0", "og:title": "Harbor &ndash; Pulling and Pushing Images in the Docker Client", "scrapeId": "13d24af0-21d8-4d90-841c-fdede2c422f3", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/pulling-pushing-images", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/pulling-pushing-images/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: What are some tips for using Pulling and Pushing Images in the Docker Client in harbor-2-12-0 effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nIf Harbor is configured for HTTP, configure your Docker client for insecure registries to avoid connection errors.\n\nObtain the registry’s CA certificate if using HTTPS with an unknown CA certificate and place it in the correct directory.\n\nEnsure you are using Docker client 1.6.0 or higher for pushing and pulling images.\n\nCreate a project in Harbor before pushing images.\n\nUse content trust features if required by your project.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/pulling-pushing-images", "title": "Pulling and Pushing Images in the Docker Client", "description": "This page covers how to pull and push images using the Docker client with Harbor, including configuration for HTTP connections, handling errors, and managing images in Harbor.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:41:58", "type": "best_practices", "page_metadata": {"twitter:creator": "@project_harbor", "favicon": "https://goharbor.io/favicon.svg", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/pulling-pushing-images/", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogSiteName": "Harbor", "og:site_name": "Harbor", "ogLocale": "en_US", "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/pulling-pushing-images/", "og:type": ["documentation", "article"], "og:image:type": "image/png", "ogTitle": "Harbor &ndash; Pulling and Pushing Images in the Docker Client", "og:locale": "en_US", "title": "\n      \nHarbor docs | Pulling and Pushing Images in the Docker Client\n\n    ", "og:image:alt": "Harbor &ndash; Pulling and Pushing Images in the Docker Client project logo", "twitter:site": "@project_harbor", "twitter:card": "summary", "generator": "Hugo 0.74.0", "og:title": "Harbor &ndash; Pulling and Pushing Images in the Docker Client", "scrapeId": "13d24af0-21d8-4d90-841c-fdede2c422f3", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/pulling-pushing-images", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/pulling-pushing-images/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you explain what Working with OCI Helm Charts is in harbor-2-12-0?\n\nAssistant: Sure, I'd be happy to explain Working with OCI Helm Charts in harbor-2-12-0.\n\n# Working with OCI Helm Charts\n\nThis page covers how to work with OCI Helm Charts, including pulling, pushing, and installing charts, as well as creating and packaging them.Here's a quick rundown of what this is about:\n\n## Pulling Helm Charts\n\nIf the project that the helm chart belongs to is private, you must sign in first:\n\n```sh\nhelm registry login <harbor_address>\n```\n\nYou can now pull a chart:\n\n```sh\nhelm pull oci://<harbor_address>/<project>/<chart_name> --version <version>\n```\n\ne.g.\n\n```sh\nhelm pull oci://demo.goharbor.io/oci/demo --version 0.1.0\n```\n\nHarbor supports content trust through Cosign and Notation. If you have enforced content trust in your project, you will not be able to pull an unsigned image. Read more about [implementing content trust](https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/implementing-content-trust/).\n\n## Pushing OCI Helm charts\n\nBefore you can push an OCI Helm chart to Harbor, you must create a project in the Harbor interface or use already existing one. For information about how to create a project, see [Create Projects](https://goharbor.io/docs/2.12.0/working-with-projects/create-projects/).\n\nYou cannot push charts and images to a proxy cache project. See more about [proxy cache projects](https://goharbor.io/docs/2.12.0/administration/configure-proxy-cache/).\n\nFirst, log in from Docker client:\n\n```sh\nhelm registry login <harbor_address>\n```\n\nPush the OCI Helm Chart:\n\n```sh\nhelm push <chart_name_and_version>.tgz oci://<harbor_address>/<project>\n```\n\ne.g.\n\n```sh\nhelm push example-0.1.0.tgz oci://demo.goharbor.io/oci\n```\n\n## Installing OCI Helm Chart\n\nIf project is private you need to login first as shown above\n\n```sh\nhelm install <release_name> oci://<harbor_address>/<project>/<chart_name> --version <version>\n```\n\ne.g.\n\n```sh\nhelm install MyRelease oci://demo.goharbor.io/oci/demo --version 0.1.0\n```\n\n## Creating and packaging the OCI Chart\n\nFor full reference please check official [Helm documentation](https://goharbor.io/docs/2.12.0/working-with-projects/working-with-oci/working-with-helm-oci-charts/)\n\n### Create the chart\n\n```sh\nhelm create oci-chart-example\n```\n\n### Edit and make it usable\n\nUse your preferred method to edit the newly created chart.\n\n### Package\n\n```sh\nhelm package oci-chart-example\n```\n\n### Push OCI Chart to Harbor Registry\n\n```sh\nhelm push oci-chart-example-0.1.0.tgz oci://demo.goharbor.io/oci-charts\n```\n\n## See you images in the Harbor Interface\n\nYou can see your OCI Helm Charts in your Harbor Project as any other artifact\n\n![Project View](https://goharbor.io/docs/2.12.0/img/oci/oci-chart-main-view.png)\n\nYou can see all tags(versions)\n\n![Tags](https://goharbor.io/docs/2.12.0/img/oci/oci-chart-tags.png)\n\nWork with OCI Helm Charts from the UI\n\n![Actions](https://goharbor.io/docs/2.12.0/img/oci/oci-chart-actions.png)\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-oci/working-with-helm-oci-charts", "title": "Working with OCI Helm Charts", "description": "This page covers how to work with OCI Helm Charts, including pulling, pushing, and installing charts, as well as creating and packaging them.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:42:24", "type": "overview", "page_metadata": {"twitter:card": "summary", "generator": "Hugo 0.74.0", "favicon": "https://goharbor.io/favicon.svg", "twitter:site": "@project_harbor", "og:type": ["documentation", "article"], "og:site_name": "Harbor", "og:title": "Harbor &ndash; Working with OCI Helm Charts", "og:image:alt": "Harbor &ndash; Working with OCI Helm Charts project logo", "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-oci/working-with-helm-oci-charts/", "title": "\n      \nHarbor docs | Working with OCI Helm Charts\n\n    ", "ogLocale": "en_US", "twitter:creator": "@project_harbor", "og:image:type": "image/png", "ogSiteName": "Harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogTitle": "Harbor &ndash; Working with OCI Helm Charts", "og:locale": "en_US", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-oci/working-with-helm-oci-charts/", "scrapeId": "67c39b03-31db-4f0e-9991-4849cfd5bd93", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-oci/working-with-helm-oci-charts", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-oci/working-with-helm-oci-charts/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I pulling helm charts in harbor-2-12-0?\n\nAssistant: To pulling helm charts in harbor-2-12-0, here's what you do:\nIf the project that the helm chart belongs to is private, you must sign in first:\n\n```sh\nhelm registry login <harbor_address>\n```\n\nYou can now pull a chart:\n\n```sh\nhelm pull oci://<harbor_address>/<project>/<chart_name> --version <version>\n```\n\ne.g.\n\n```sh\nhelm pull oci://demo.goharbor.io/oci/demo --version 0.1.0\n```\n\nHarbor supports content trust through Cosign and Notation. If you have enforced content trust in your project, you will not be able to pull an unsigned image. Read more about [implementing content trust](https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/implementing-content-trust/)..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-oci/working-with-helm-oci-charts", "title": "Working with OCI Helm Charts", "description": "This page covers how to work with OCI Helm Charts, including pulling, pushing, and installing charts, as well as creating and packaging them.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:42:24", "type": "section_detail", "page_metadata": {"twitter:card": "summary", "generator": "Hugo 0.74.0", "favicon": "https://goharbor.io/favicon.svg", "twitter:site": "@project_harbor", "og:type": ["documentation", "article"], "og:site_name": "Harbor", "og:title": "Harbor &ndash; Working with OCI Helm Charts", "og:image:alt": "Harbor &ndash; Working with OCI Helm Charts project logo", "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-oci/working-with-helm-oci-charts/", "title": "\n      \nHarbor docs | Working with OCI Helm Charts\n\n    ", "ogLocale": "en_US", "twitter:creator": "@project_harbor", "og:image:type": "image/png", "ogSiteName": "Harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogTitle": "Harbor &ndash; Working with OCI Helm Charts", "og:locale": "en_US", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-oci/working-with-helm-oci-charts/", "scrapeId": "67c39b03-31db-4f0e-9991-4849cfd5bd93", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-oci/working-with-helm-oci-charts", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-oci/working-with-helm-oci-charts/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I pushing oci helm charts in harbor-2-12-0?\n\nAssistant: To pushing oci helm charts in harbor-2-12-0, here's what you do:\nBefore you can push an OCI Helm chart to Harbor, you must create a project in the Harbor interface or use already existing one. For information about how to create a project, see [Create Projects](https://goharbor.io/docs/2.12.0/working-with-projects/create-projects/).\n\nYou cannot push charts and images to a proxy cache project. See more about [proxy cache projects](https://goharbor.io/docs/2.12.0/administration/configure-proxy-cache/).\n\nFirst, log in from Docker client:\n\n```sh\nhelm registry login <harbor_address>\n```\n\nPush the OCI Helm Chart:\n\n```sh\nhelm push <chart_name_and_version>.tgz oci://<harbor_address>/<project>\n```\n\ne.g.\n\n```sh\nhelm push example-0.1.0.tgz oci://demo.goharbor.io/oci\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-oci/working-with-helm-oci-charts", "title": "Working with OCI Helm Charts", "description": "This page covers how to work with OCI Helm Charts, including pulling, pushing, and installing charts, as well as creating and packaging them.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:42:24", "type": "section_detail", "page_metadata": {"twitter:card": "summary", "generator": "Hugo 0.74.0", "favicon": "https://goharbor.io/favicon.svg", "twitter:site": "@project_harbor", "og:type": ["documentation", "article"], "og:site_name": "Harbor", "og:title": "Harbor &ndash; Working with OCI Helm Charts", "og:image:alt": "Harbor &ndash; Working with OCI Helm Charts project logo", "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-oci/working-with-helm-oci-charts/", "title": "\n      \nHarbor docs | Working with OCI Helm Charts\n\n    ", "ogLocale": "en_US", "twitter:creator": "@project_harbor", "og:image:type": "image/png", "ogSiteName": "Harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogTitle": "Harbor &ndash; Working with OCI Helm Charts", "og:locale": "en_US", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-oci/working-with-helm-oci-charts/", "scrapeId": "67c39b03-31db-4f0e-9991-4849cfd5bd93", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-oci/working-with-helm-oci-charts", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-oci/working-with-helm-oci-charts/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I installing oci helm chart in harbor-2-12-0?\n\nAssistant: To installing oci helm chart in harbor-2-12-0, here's what you do:\nIf project is private you need to login first as shown above\n\n```sh\nhelm install <release_name> oci://<harbor_address>/<project>/<chart_name> --version <version>\n```\n\ne.g.\n\n```sh\nhelm install MyRelease oci://demo.goharbor.io/oci/demo --version 0.1.0\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-oci/working-with-helm-oci-charts", "title": "Working with OCI Helm Charts", "description": "This page covers how to work with OCI Helm Charts, including pulling, pushing, and installing charts, as well as creating and packaging them.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:42:24", "type": "section_detail", "page_metadata": {"twitter:card": "summary", "generator": "Hugo 0.74.0", "favicon": "https://goharbor.io/favicon.svg", "twitter:site": "@project_harbor", "og:type": ["documentation", "article"], "og:site_name": "Harbor", "og:title": "Harbor &ndash; Working with OCI Helm Charts", "og:image:alt": "Harbor &ndash; Working with OCI Helm Charts project logo", "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-oci/working-with-helm-oci-charts/", "title": "\n      \nHarbor docs | Working with OCI Helm Charts\n\n    ", "ogLocale": "en_US", "twitter:creator": "@project_harbor", "og:image:type": "image/png", "ogSiteName": "Harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogTitle": "Harbor &ndash; Working with OCI Helm Charts", "og:locale": "en_US", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-oci/working-with-helm-oci-charts/", "scrapeId": "67c39b03-31db-4f0e-9991-4849cfd5bd93", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-oci/working-with-helm-oci-charts", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-oci/working-with-helm-oci-charts/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I creating and packaging the oci chart in harbor-2-12-0?\n\nAssistant: To creating and packaging the oci chart in harbor-2-12-0, here's what you do:\nFor full reference please check official [Helm documentation](https://goharbor.io/docs/2.12.0/working-with-projects/working-with-oci/working-with-helm-oci-charts/)\n\n### Create the chart\n\n```sh\nhelm create oci-chart-example\n```\n\n### Edit and make it usable\n\nUse your preferred method to edit the newly created chart.\n\n### Package\n\n```sh\nhelm package oci-chart-example\n```\n\n### Push OCI Chart to Harbor Registry\n\n```sh\nhelm push oci-chart-example-0.1.0.tgz oci://demo.goharbor.io/oci-charts\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-oci/working-with-helm-oci-charts", "title": "Working with OCI Helm Charts", "description": "This page covers how to work with OCI Helm Charts, including pulling, pushing, and installing charts, as well as creating and packaging them.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:42:24", "type": "section_detail", "page_metadata": {"twitter:card": "summary", "generator": "Hugo 0.74.0", "favicon": "https://goharbor.io/favicon.svg", "twitter:site": "@project_harbor", "og:type": ["documentation", "article"], "og:site_name": "Harbor", "og:title": "Harbor &ndash; Working with OCI Helm Charts", "og:image:alt": "Harbor &ndash; Working with OCI Helm Charts project logo", "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-oci/working-with-helm-oci-charts/", "title": "\n      \nHarbor docs | Working with OCI Helm Charts\n\n    ", "ogLocale": "en_US", "twitter:creator": "@project_harbor", "og:image:type": "image/png", "ogSiteName": "Harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogTitle": "Harbor &ndash; Working with OCI Helm Charts", "og:locale": "en_US", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-oci/working-with-helm-oci-charts/", "scrapeId": "67c39b03-31db-4f0e-9991-4849cfd5bd93", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-oci/working-with-helm-oci-charts", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-oci/working-with-helm-oci-charts/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I see you images in the harbor interface in harbor-2-12-0?\n\nAssistant: To see you images in the harbor interface in harbor-2-12-0, here's what you do:\nYou can see your OCI Helm Charts in your Harbor Project as any other artifact\n\n![Project View](https://goharbor.io/docs/2.12.0/img/oci/oci-chart-main-view.png)\n\nYou can see all tags(versions)\n\n![Tags](https://goharbor.io/docs/2.12.0/img/oci/oci-chart-tags.png)\n\nWork with OCI Helm Charts from the UI\n\n![Actions](https://goharbor.io/docs/2.12.0/img/oci/oci-chart-actions.png).\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-oci/working-with-helm-oci-charts", "title": "Working with OCI Helm Charts", "description": "This page covers how to work with OCI Helm Charts, including pulling, pushing, and installing charts, as well as creating and packaging them.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:42:24", "type": "section_detail", "page_metadata": {"twitter:card": "summary", "generator": "Hugo 0.74.0", "favicon": "https://goharbor.io/favicon.svg", "twitter:site": "@project_harbor", "og:type": ["documentation", "article"], "og:site_name": "Harbor", "og:title": "Harbor &ndash; Working with OCI Helm Charts", "og:image:alt": "Harbor &ndash; Working with OCI Helm Charts project logo", "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-oci/working-with-helm-oci-charts/", "title": "\n      \nHarbor docs | Working with OCI Helm Charts\n\n    ", "ogLocale": "en_US", "twitter:creator": "@project_harbor", "og:image:type": "image/png", "ogSiteName": "Harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogTitle": "Harbor &ndash; Working with OCI Helm Charts", "og:locale": "en_US", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-oci/working-with-helm-oci-charts/", "scrapeId": "67c39b03-31db-4f0e-9991-4849cfd5bd93", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-oci/working-with-helm-oci-charts", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-oci/working-with-helm-oci-charts/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you give me some code examples for Working with OCI Helm Charts in harbor-2-12-0?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Login to Harbor Registry**:\n\n```yaml\nhelm registry login <harbor_address>\n```\n\nThis snippet shows you how to login to harbor registry, which is an important aspect of working with oci helm charts.\n\n**Pull Helm Chart**:\n\n```yaml\nhelm pull oci://<harbor_address>/<project>/<chart_name> --version <version>\n```\n\nThis snippet shows you how to pull helm chart, which is an important aspect of working with oci helm charts.\n\n**Push OCI Helm Chart**:\n\n```yaml\nhelm push <chart_name_and_version>.tgz oci://<harbor_address>/<project>\n```\n\nThis snippet shows you how to push oci helm chart, which is an important aspect of working with oci helm charts.\n\n**Install OCI Helm Chart**:\n\n```yaml\nhelm install <release_name> oci://<harbor_address>/<project>/<chart_name> --version <version>\n```\n\nThis snippet shows you how to install oci helm chart, which is an important aspect of working with oci helm charts.\n\n**Create the Chart**:\n\n```yaml\nhelm create oci-chart-example\n```\n\nThis snippet shows you how to create the chart, which is an important aspect of working with oci helm charts.\n\n**Package the Chart**:\n\n```yaml\nhelm package oci-chart-example\n```\n\nThis snippet shows you how to package the chart, which is an important aspect of working with oci helm charts.\n\n**Push OCI Chart to Harbor Registry**:\n\n```yaml\nhelm push oci-chart-example-0.1.0.tgz oci://demo.goharbor.io/oci-charts\n```\n\nThis snippet shows you how to push oci chart to harbor registry, which is an important aspect of working with oci helm charts.\n\n", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-oci/working-with-helm-oci-charts", "title": "Working with OCI Helm Charts", "description": "This page covers how to work with OCI Helm Charts, including pulling, pushing, and installing charts, as well as creating and packaging them.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:42:24", "type": "code_examples", "page_metadata": {"twitter:card": "summary", "generator": "Hugo 0.74.0", "favicon": "https://goharbor.io/favicon.svg", "twitter:site": "@project_harbor", "og:type": ["documentation", "article"], "og:site_name": "Harbor", "og:title": "Harbor &ndash; Working with OCI Helm Charts", "og:image:alt": "Harbor &ndash; Working with OCI Helm Charts project logo", "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-oci/working-with-helm-oci-charts/", "title": "\n      \nHarbor docs | Working with OCI Helm Charts\n\n    ", "ogLocale": "en_US", "twitter:creator": "@project_harbor", "og:image:type": "image/png", "ogSiteName": "Harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogTitle": "Harbor &ndash; Working with OCI Helm Charts", "og:locale": "en_US", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-oci/working-with-helm-oci-charts/", "scrapeId": "67c39b03-31db-4f0e-9991-4849cfd5bd93", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-oci/working-with-helm-oci-charts", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-oci/working-with-helm-oci-charts/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: What are some tips for using Working with OCI Helm Charts in harbor-2-12-0 effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nIf the project is private, ensure to log in before pulling or installing charts.\n\nYou cannot push charts to a proxy cache project.\n\nRead about implementing content trust if enforced in your project.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-oci/working-with-helm-oci-charts", "title": "Working with OCI Helm Charts", "description": "This page covers how to work with OCI Helm Charts, including pulling, pushing, and installing charts, as well as creating and packaging them.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:42:24", "type": "best_practices", "page_metadata": {"twitter:card": "summary", "generator": "Hugo 0.74.0", "favicon": "https://goharbor.io/favicon.svg", "twitter:site": "@project_harbor", "og:type": ["documentation", "article"], "og:site_name": "Harbor", "og:title": "Harbor &ndash; Working with OCI Helm Charts", "og:image:alt": "Harbor &ndash; Working with OCI Helm Charts project logo", "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-oci/working-with-helm-oci-charts/", "title": "\n      \nHarbor docs | Working with OCI Helm Charts\n\n    ", "ogLocale": "en_US", "twitter:creator": "@project_harbor", "og:image:type": "image/png", "ogSiteName": "Harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogTitle": "Harbor &ndash; Working with OCI Helm Charts", "og:locale": "en_US", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-oci/working-with-helm-oci-charts/", "scrapeId": "67c39b03-31db-4f0e-9991-4849cfd5bd93", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-oci/working-with-helm-oci-charts", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-oci/working-with-helm-oci-charts/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you explain what Managing Labels is in harbor-2-12-0?\n\nAssistant: Sure, I'd be happy to explain Managing Labels in harbor-2-12-0.\n\n# Managing Labels\n\nHarbor provides two kinds of labels to isolate different kinds of resources: Global Level Label and Project Level Label.Here's a quick rundown of what this is about:\n\n## Managing Global Labels\n\nThe Harbor system administrators can list, create, update and delete the global level labels under `Administration->Labels`:\n\n![manage global level labels](https://goharbor.io/docs/2.12.0/img/manage-global-level-labels.png)\n\n## Managing Project-Level Labels\n\nThe project administrators and Harbor system administrators can list, create, update and delete the project level labels under `Labels` tab of the project detail page:\n\n![manage project level labels](https://goharbor.io/docs/2.12.0/img/manage-project-level-labels.png)\n\n## Adding and Removing Labels to and from Images\n\nUsers who have Harbor system administrator, project administrator or project developer role can click the `ADD LABELS` button to add labels to or remove labels from images. The label list contains both global level labels(come first) and project level labels:\n\n![add labels to images](https://goharbor.io/docs/2.12.0/img/add-labels-to-images.png)\n\n## Filtering Images by Label\n\nThe images can be filtered by labels:\n\n![filter images by labels](https://goharbor.io/docs/2.12.0/img/filter-images-by-label.png)\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-labels", "title": "Managing Labels", "description": "Harbor provides two kinds of labels to isolate different kinds of resources: Global Level Label and Project Level Label.", "has_code_examples": false, "has_best_practices": false, "section_count": 4, "timestamp": "2025-03-01 03:42:53", "type": "overview", "page_metadata": {"twitter:site": "@project_harbor", "title": "\n      \nHarbor docs | Managing Labels\n\n    ", "generator": "Hugo 0.74.0", "ogTitle": "Harbor &ndash; Managing Labels", "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-labels/", "og:title": "Harbor &ndash; Managing Labels", "og:image:type": "image/png", "twitter:creator": "@project_harbor", "favicon": "https://goharbor.io/favicon.svg", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:type": ["documentation", "article"], "og:image:alt": "Harbor &ndash; Managing Labels project logo", "og:site_name": "Harbor", "twitter:card": "summary", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-labels/", "ogLocale": "en_US", "ogSiteName": "Harbor", "og:locale": "en_US", "scrapeId": "652c14a4-0b7e-45c6-8a77-f70df576cbc4", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-labels", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-labels/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I managing global labels in harbor-2-12-0?\n\nAssistant: To managing global labels in harbor-2-12-0, here's what you do:\nThe Harbor system administrators can list, create, update and delete the global level labels under `Administration->Labels`:\n\n![manage global level labels](https://goharbor.io/docs/2.12.0/img/manage-global-level-labels.png).\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-labels", "title": "Managing Labels", "description": "Harbor provides two kinds of labels to isolate different kinds of resources: Global Level Label and Project Level Label.", "has_code_examples": false, "has_best_practices": false, "section_count": 4, "timestamp": "2025-03-01 03:42:53", "type": "section_detail", "page_metadata": {"twitter:site": "@project_harbor", "title": "\n      \nHarbor docs | Managing Labels\n\n    ", "generator": "Hugo 0.74.0", "ogTitle": "Harbor &ndash; Managing Labels", "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-labels/", "og:title": "Harbor &ndash; Managing Labels", "og:image:type": "image/png", "twitter:creator": "@project_harbor", "favicon": "https://goharbor.io/favicon.svg", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:type": ["documentation", "article"], "og:image:alt": "Harbor &ndash; Managing Labels project logo", "og:site_name": "Harbor", "twitter:card": "summary", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-labels/", "ogLocale": "en_US", "ogSiteName": "Harbor", "og:locale": "en_US", "scrapeId": "652c14a4-0b7e-45c6-8a77-f70df576cbc4", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-labels", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-labels/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I managing project-level labels in harbor-2-12-0?\n\nAssistant: To managing project-level labels in harbor-2-12-0, here's what you do:\nThe project administrators and Harbor system administrators can list, create, update and delete the project level labels under `Labels` tab of the project detail page:\n\n![manage project level labels](https://goharbor.io/docs/2.12.0/img/manage-project-level-labels.png).\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-labels", "title": "Managing Labels", "description": "Harbor provides two kinds of labels to isolate different kinds of resources: Global Level Label and Project Level Label.", "has_code_examples": false, "has_best_practices": false, "section_count": 4, "timestamp": "2025-03-01 03:42:53", "type": "section_detail", "page_metadata": {"twitter:site": "@project_harbor", "title": "\n      \nHarbor docs | Managing Labels\n\n    ", "generator": "Hugo 0.74.0", "ogTitle": "Harbor &ndash; Managing Labels", "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-labels/", "og:title": "Harbor &ndash; Managing Labels", "og:image:type": "image/png", "twitter:creator": "@project_harbor", "favicon": "https://goharbor.io/favicon.svg", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:type": ["documentation", "article"], "og:image:alt": "Harbor &ndash; Managing Labels project logo", "og:site_name": "Harbor", "twitter:card": "summary", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-labels/", "ogLocale": "en_US", "ogSiteName": "Harbor", "og:locale": "en_US", "scrapeId": "652c14a4-0b7e-45c6-8a77-f70df576cbc4", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-labels", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-labels/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I adding and removing labels to and from images in harbor-2-12-0?\n\nAssistant: To adding and removing labels to and from images in harbor-2-12-0, here's what you do:\nUsers who have Harbor system administrator, project administrator or project developer role can click the `ADD LABELS` button to add labels to or remove labels from images. The label list contains both global level labels(come first) and project level labels:\n\n![add labels to images](https://goharbor.io/docs/2.12.0/img/add-labels-to-images.png).\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-labels", "title": "Managing Labels", "description": "Harbor provides two kinds of labels to isolate different kinds of resources: Global Level Label and Project Level Label.", "has_code_examples": false, "has_best_practices": false, "section_count": 4, "timestamp": "2025-03-01 03:42:53", "type": "section_detail", "page_metadata": {"twitter:site": "@project_harbor", "title": "\n      \nHarbor docs | Managing Labels\n\n    ", "generator": "Hugo 0.74.0", "ogTitle": "Harbor &ndash; Managing Labels", "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-labels/", "og:title": "Harbor &ndash; Managing Labels", "og:image:type": "image/png", "twitter:creator": "@project_harbor", "favicon": "https://goharbor.io/favicon.svg", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:type": ["documentation", "article"], "og:image:alt": "Harbor &ndash; Managing Labels project logo", "og:site_name": "Harbor", "twitter:card": "summary", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-labels/", "ogLocale": "en_US", "ogSiteName": "Harbor", "og:locale": "en_US", "scrapeId": "652c14a4-0b7e-45c6-8a77-f70df576cbc4", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-labels", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-labels/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I filtering images by label in harbor-2-12-0?\n\nAssistant: To filtering images by label in harbor-2-12-0, here's what you do:\nThe images can be filtered by labels:\n\n![filter images by labels](https://goharbor.io/docs/2.12.0/img/filter-images-by-label.png).\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-labels", "title": "Managing Labels", "description": "Harbor provides two kinds of labels to isolate different kinds of resources: Global Level Label and Project Level Label.", "has_code_examples": false, "has_best_practices": false, "section_count": 4, "timestamp": "2025-03-01 03:42:53", "type": "section_detail", "page_metadata": {"twitter:site": "@project_harbor", "title": "\n      \nHarbor docs | Managing Labels\n\n    ", "generator": "Hugo 0.74.0", "ogTitle": "Harbor &ndash; Managing Labels", "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-labels/", "og:title": "Harbor &ndash; Managing Labels", "og:image:type": "image/png", "twitter:creator": "@project_harbor", "favicon": "https://goharbor.io/favicon.svg", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:type": ["documentation", "article"], "og:image:alt": "Harbor &ndash; Managing Labels project logo", "og:site_name": "Harbor", "twitter:card": "summary", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-labels/", "ogLocale": "en_US", "ogSiteName": "Harbor", "og:locale": "en_US", "scrapeId": "652c14a4-0b7e-45c6-8a77-f70df576cbc4", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-labels", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-labels/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you explain what Working with OCI Artifacts is in harbor-2-12-0?\n\nAssistant: Sure, I'd be happy to explain Working with OCI Artifacts in harbor-2-12-0.\n\n# Working with OCI Artifacts\n\nThis section describes how to work with OCI artifacts like OCI Helm chart or used defined OCI artifacts.Here's a quick rundown of what this is about:\n\n## Pages in this section\n\n- [Working with OCI Helm Charts](https://goharbor.io/docs/2.12.0/working-with-projects/working-with-oci/working-with-helm-oci-charts/)\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-oci", "title": "Working with OCI Artifacts", "description": "This section describes how to work with OCI artifacts like OCI Helm chart or used defined OCI artifacts.", "has_code_examples": false, "has_best_practices": false, "section_count": 1, "timestamp": "2025-03-01 03:43:43", "type": "overview", "page_metadata": {"og:title": "Harbor &ndash; Working with OCI Artifacts", "ogTitle": "Harbor &ndash; Working with OCI Artifacts", "ogSiteName": "Harbor", "twitter:card": "summary", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-oci/", "favicon": "https://goharbor.io/favicon.svg", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:image:type": "image/png", "og:site_name": "Harbor", "og:type": ["documentation", "article"], "og:image:alt": "Harbor &ndash; Working with OCI Artifacts project logo", "generator": "Hugo 0.74.0", "og:locale": "en_US", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-oci/", "ogLocale": "en_US", "title": "\n      \nHarbor docs | Working with OCI Artifacts\n\n    ", "twitter:site": "@project_harbor", "twitter:creator": "@project_harbor", "scrapeId": "bd607aca-e0ed-4a4e-9ed7-fd5ef62fb95e", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-oci", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-oci/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I pages in this section in harbor-2-12-0?\n\nAssistant: To pages in this section in harbor-2-12-0, here's what you do:\n- [Working with OCI Helm Charts](https://goharbor.io/docs/2.12.0/working-with-projects/working-with-oci/working-with-helm-oci-charts/).\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-oci", "title": "Working with OCI Artifacts", "description": "This section describes how to work with OCI artifacts like OCI Helm chart or used defined OCI artifacts.", "has_code_examples": false, "has_best_practices": false, "section_count": 1, "timestamp": "2025-03-01 03:43:43", "type": "section_detail", "page_metadata": {"og:title": "Harbor &ndash; Working with OCI Artifacts", "ogTitle": "Harbor &ndash; Working with OCI Artifacts", "ogSiteName": "Harbor", "twitter:card": "summary", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-oci/", "favicon": "https://goharbor.io/favicon.svg", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:image:type": "image/png", "og:site_name": "Harbor", "og:type": ["documentation", "article"], "og:image:alt": "Harbor &ndash; Working with OCI Artifacts project logo", "generator": "Hugo 0.74.0", "og:locale": "en_US", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-oci/", "ogLocale": "en_US", "title": "\n      \nHarbor docs | Working with OCI Artifacts\n\n    ", "twitter:site": "@project_harbor", "twitter:creator": "@project_harbor", "scrapeId": "bd607aca-e0ed-4a4e-9ed7-fd5ef62fb95e", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-oci", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-oci/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you explain what Detagging Artifacts is in harbor-2-12-0?\n\nAssistant: Sure, I'd be happy to explain Detagging Artifacts in harbor-2-12-0.\n\n# Detagging Artifacts\n\nThis page covers the process of detagging artifacts in Harbor v2.0, including the management of OCI images and OCI image indexes.Here's a quick rundown of what this is about:\n\n## Overview\n\nHarbor v2.0 now supports OCI images and OCI image indexes (OCI Image Index Specification). An OCI image index (or OCI index) is a higher level manifest which points to a list of image manifests, ideal for one or more platforms. Both the index itself and the images referenced within are referred to as artifacts in Harbor parlance. An OCI index could hold another OCI index and so on and so forth. For any artifact referenced by an OCI index, the referenced artifact is known as the child artifact and the OCI index referencing the artifact is known as the parent artifact. We can also say that the child artifact belongs to the parent artifact or is a part of the parent artifact.\n\n## Deleting Tags\n\nUsers can delete any existing tag from an artifact without deleting the artifact digest and all other existing tags. For an OCI index, users can delete tags from the parent as well as from the referenced artifacts within. Tags removed from the parent artifact are not automatically removed from children artifacts. For example, you can tag artifacts as follows: In the Harbor interface, click on an artifact to see its current set of tags, then select the tag you wish to delete and click ‘REMOVE TAG’, and then click ‘OK’.\n\n## Removing All Tags\n\nYou can remove all tags from an artifact without deleting the artifact manifest itself. The artifact is still visible on the web console with nothing listed under ‘Tags '.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/deleting-tags", "title": "Detagging Artifacts", "description": "This page covers the process of detagging artifacts in Harbor v2.0, including the management of OCI images and OCI image indexes.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:46:58", "type": "overview", "page_metadata": {"twitter:card": "summary", "og:type": ["documentation", "article"], "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/deleting-tags/", "og:title": "Harbor &ndash; Detagging Artifacts", "twitter:site": "@project_harbor", "ogLocale": "en_US", "favicon": "https://goharbor.io/favicon.svg", "ogTitle": "Harbor &ndash; Detagging Artifacts", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:locale": "en_US", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/deleting-tags/", "og:site_name": "Harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:image:alt": "Harbor &ndash; Detagging Artifacts project logo", "og:image:type": "image/png", "generator": "Hugo 0.74.0", "title": "\n      \nHarbor docs | Detagging Artifacts\n\n    ", "twitter:creator": "@project_harbor", "ogSiteName": "Harbor", "scrapeId": "b9a35390-2b7b-457f-8222-91a3cdc149b8", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/deleting-tags", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/deleting-tags/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I overview in harbor-2-12-0?\n\nAssistant: To overview in harbor-2-12-0, here's what you do:\nHarbor v2.0 now supports OCI images and OCI image indexes (OCI Image Index Specification). An OCI image index (or OCI index) is a higher level manifest which points to a list of image manifests, ideal for one or more platforms. Both the index itself and the images referenced within are referred to as artifacts in Harbor parlance. An OCI index could hold another OCI index and so on and so forth. For any artifact referenced by an OCI index, the referenced artifact is known as the child artifact and the OCI index referencing the artifact is known as the parent artifact. We can also say that the child artifact belongs to the parent artifact or is a part of the parent artifact..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/deleting-tags", "title": "Detagging Artifacts", "description": "This page covers the process of detagging artifacts in Harbor v2.0, including the management of OCI images and OCI image indexes.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:46:58", "type": "section_detail", "page_metadata": {"twitter:card": "summary", "og:type": ["documentation", "article"], "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/deleting-tags/", "og:title": "Harbor &ndash; Detagging Artifacts", "twitter:site": "@project_harbor", "ogLocale": "en_US", "favicon": "https://goharbor.io/favicon.svg", "ogTitle": "Harbor &ndash; Detagging Artifacts", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:locale": "en_US", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/deleting-tags/", "og:site_name": "Harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:image:alt": "Harbor &ndash; Detagging Artifacts project logo", "og:image:type": "image/png", "generator": "Hugo 0.74.0", "title": "\n      \nHarbor docs | Detagging Artifacts\n\n    ", "twitter:creator": "@project_harbor", "ogSiteName": "Harbor", "scrapeId": "b9a35390-2b7b-457f-8222-91a3cdc149b8", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/deleting-tags", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/deleting-tags/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I deleting tags in harbor-2-12-0?\n\nAssistant: To deleting tags in harbor-2-12-0, here's what you do:\nUsers can delete any existing tag from an artifact without deleting the artifact digest and all other existing tags. For an OCI index, users can delete tags from the parent as well as from the referenced artifacts within. Tags removed from the parent artifact are not automatically removed from children artifacts. For example, you can tag artifacts as follows: In the Harbor interface, click on an artifact to see its current set of tags, then select the tag you wish to delete and click ‘REMOVE TAG’, and then click ‘OK’..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/deleting-tags", "title": "Detagging Artifacts", "description": "This page covers the process of detagging artifacts in Harbor v2.0, including the management of OCI images and OCI image indexes.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:46:58", "type": "section_detail", "page_metadata": {"twitter:card": "summary", "og:type": ["documentation", "article"], "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/deleting-tags/", "og:title": "Harbor &ndash; Detagging Artifacts", "twitter:site": "@project_harbor", "ogLocale": "en_US", "favicon": "https://goharbor.io/favicon.svg", "ogTitle": "Harbor &ndash; Detagging Artifacts", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:locale": "en_US", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/deleting-tags/", "og:site_name": "Harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:image:alt": "Harbor &ndash; Detagging Artifacts project logo", "og:image:type": "image/png", "generator": "Hugo 0.74.0", "title": "\n      \nHarbor docs | Detagging Artifacts\n\n    ", "twitter:creator": "@project_harbor", "ogSiteName": "Harbor", "scrapeId": "b9a35390-2b7b-457f-8222-91a3cdc149b8", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/deleting-tags", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/deleting-tags/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I removing all tags in harbor-2-12-0?\n\nAssistant: To removing all tags in harbor-2-12-0, here's what you do:\nYou can remove all tags from an artifact without deleting the artifact manifest itself. The artifact is still visible on the web console with nothing listed under ‘Tags '..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/deleting-tags", "title": "Detagging Artifacts", "description": "This page covers the process of detagging artifacts in Harbor v2.0, including the management of OCI images and OCI image indexes.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:46:58", "type": "section_detail", "page_metadata": {"twitter:card": "summary", "og:type": ["documentation", "article"], "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/deleting-tags/", "og:title": "Harbor &ndash; Detagging Artifacts", "twitter:site": "@project_harbor", "ogLocale": "en_US", "favicon": "https://goharbor.io/favicon.svg", "ogTitle": "Harbor &ndash; Detagging Artifacts", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:locale": "en_US", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/deleting-tags/", "og:site_name": "Harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:image:alt": "Harbor &ndash; Detagging Artifacts project logo", "og:image:type": "image/png", "generator": "Hugo 0.74.0", "title": "\n      \nHarbor docs | Detagging Artifacts\n\n    ", "twitter:creator": "@project_harbor", "ogSiteName": "Harbor", "scrapeId": "b9a35390-2b7b-457f-8222-91a3cdc149b8", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/deleting-tags", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/deleting-tags/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: What are some tips for using Detagging Artifacts in harbor-2-12-0 effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nTags removed from the parent artifact are not automatically removed from children artifacts.\n\nYou can remove all tags from an artifact without deleting the artifact manifest itself.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/deleting-tags", "title": "Detagging Artifacts", "description": "This page covers the process of detagging artifacts in Harbor v2.0, including the management of OCI images and OCI image indexes.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:46:58", "type": "best_practices", "page_metadata": {"twitter:card": "summary", "og:type": ["documentation", "article"], "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/deleting-tags/", "og:title": "Harbor &ndash; Detagging Artifacts", "twitter:site": "@project_harbor", "ogLocale": "en_US", "favicon": "https://goharbor.io/favicon.svg", "ogTitle": "Harbor &ndash; Detagging Artifacts", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:locale": "en_US", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/deleting-tags/", "og:site_name": "Harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:image:alt": "Harbor &ndash; Detagging Artifacts project logo", "og:image:type": "image/png", "generator": "Hugo 0.74.0", "title": "\n      \nHarbor docs | Detagging Artifacts\n\n    ", "twitter:creator": "@project_harbor", "ogSiteName": "Harbor", "scrapeId": "b9a35390-2b7b-457f-8222-91a3cdc149b8", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/deleting-tags", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/deleting-tags/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you explain what Repositories is in harbor-2-12-0?\n\nAssistant: Sure, I'd be happy to explain Repositories in harbor-2-12-0.\n\n# Repositories\n\nA repository is a collection of artifacts. Since version v2.0, in addition to container images, Harbor can manage different kinds of artifacts that are bundled in OCI-compatible format, such as helm chart (requires helm v3), CNAB, OPA bundle, etc.Here's a quick rundown of what this is about:\n\n## List Repositories\n\nClick your project to enter the project detail page after successful logging in. Click the “Repositories” tab to view the list of of repositories.\n\n![list_repositories](https://goharbor.io/docs/2.12.0/img/list-repositories.png)\n\n## Description of a repository\n\nClick the repository, then click the “Info” tab. You can view the description of the project. Users with project admin, maintainer or developer role can click the “Edit” button to edit the description. You can style the description via Markdown syntax.\n\n![edit_repository_description](https://goharbor.io/docs/2.12.0/img/edit-repository-description.png)\n\n## List artifacts in a repository\n\nClick the “Artifacts” tab to view the list of artifacts in a repository.\nEach artifact is identified by its sha256 digest in the list of artifacts, and different types of artifacts can be distinguished by the icon on the left of the digest. Hover your mouse on the icon you can see the name of the type.\n\nBy clicking the icon in the column **Pull Command**, the command to pull the artifact in the row of the icon will be copied to the clipboard.\n\nThe column **Annotations** in the grid shows the manifest annotations of the artifact, which are a set of key-value pairs. More details about the annotations please refer to [OCI Annotations](https://github.com/opencontainers/image-spec/blob/master/annotations.md).\nThe column **Push Time** in the grid shows the time each artifact is pushed to the registry.\n\n![list_artifacts](https://goharbor.io/docs/2.12.0/img/list-artifacts.png)\n\nBy clicking the search icon in the top right of the list of artifacts, you can user different types of filters to filter the items in the artifact list. You can choose to filter by type, tags, labels. Particularly, if you choose to filter by tags, you can choose to view only the tagged or untagged artifacts.\n\n![filter_artifacts](https://goharbor.io/docs/2.12.0/img/filter-artifacts.png)\n\nSince Harbor v2.0.0, [Image index](https://raw.githubusercontent.com/opencontainers/image-spec/master/image-index.md) can also be managed as an artifact in a repository. If an artifact is an index, there will be a folder icon on the right side of its digest.\n\n![image_index](https://goharbor.io/docs/2.12.0/img/index-icon.png)\n\nClick the folder icon, you can see the list of artifacts that is referenced by the index. The artifacts in this view is read only. i.e. You can not remove an artifact from an index via Harbor’s UI, and none of the actions like ‘copy digest’, ‘add labels’, ‘copy’ are available.\n\n![index_detail](https://goharbor.io/docs/2.12.0/img/index-detail.png)\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/repositories", "title": "Repositories", "description": "A repository is a collection of artifacts. Since version v2.0, in addition to container images, Harbor can manage different kinds of artifacts that are bundled in OCI-compatible format, such as helm chart (requires helm v3), CNAB, OPA bundle, etc.", "has_code_examples": false, "has_best_practices": false, "section_count": 3, "timestamp": "2025-03-01 03:47:37", "type": "overview", "page_metadata": {"og:title": "Harbor &ndash; Repositories", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/repositories/", "og:image:alt": "Harbor &ndash; Repositories project logo", "twitter:site": "@project_harbor", "ogSiteName": "Harbor", "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/repositories/", "generator": "Hugo 0.74.0", "twitter:card": "summary", "og:site_name": "Harbor", "twitter:creator": "@project_harbor", "favicon": "https://goharbor.io/favicon.svg", "ogLocale": "en_US", "og:type": ["documentation", "article"], "og:locale": "en_US", "title": "\n      \nHarbor docs | Repositories\n\n    ", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:image:type": "image/png", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "ogTitle": "Harbor &ndash; Repositories", "scrapeId": "0f650c58-c7bd-44bc-bf26-6e065f5bc156", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/repositories", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/repositories/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I list repositories in harbor-2-12-0?\n\nAssistant: To list repositories in harbor-2-12-0, here's what you do:\nClick your project to enter the project detail page after successful logging in. Click the “Repositories” tab to view the list of of repositories.\n\n![list_repositories](https://goharbor.io/docs/2.12.0/img/list-repositories.png).\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/repositories", "title": "Repositories", "description": "A repository is a collection of artifacts. Since version v2.0, in addition to container images, Harbor can manage different kinds of artifacts that are bundled in OCI-compatible format, such as helm chart (requires helm v3), CNAB, OPA bundle, etc.", "has_code_examples": false, "has_best_practices": false, "section_count": 3, "timestamp": "2025-03-01 03:47:37", "type": "section_detail", "page_metadata": {"og:title": "Harbor &ndash; Repositories", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/repositories/", "og:image:alt": "Harbor &ndash; Repositories project logo", "twitter:site": "@project_harbor", "ogSiteName": "Harbor", "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/repositories/", "generator": "Hugo 0.74.0", "twitter:card": "summary", "og:site_name": "Harbor", "twitter:creator": "@project_harbor", "favicon": "https://goharbor.io/favicon.svg", "ogLocale": "en_US", "og:type": ["documentation", "article"], "og:locale": "en_US", "title": "\n      \nHarbor docs | Repositories\n\n    ", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:image:type": "image/png", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "ogTitle": "Harbor &ndash; Repositories", "scrapeId": "0f650c58-c7bd-44bc-bf26-6e065f5bc156", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/repositories", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/repositories/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I description of a repository in harbor-2-12-0?\n\nAssistant: To description of a repository in harbor-2-12-0, here's what you do:\nClick the repository, then click the “Info” tab. You can view the description of the project. Users with project admin, maintainer or developer role can click the “Edit” button to edit the description. You can style the description via Markdown syntax.\n\n![edit_repository_description](https://goharbor.io/docs/2.12.0/img/edit-repository-description.png).\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/repositories", "title": "Repositories", "description": "A repository is a collection of artifacts. Since version v2.0, in addition to container images, Harbor can manage different kinds of artifacts that are bundled in OCI-compatible format, such as helm chart (requires helm v3), CNAB, OPA bundle, etc.", "has_code_examples": false, "has_best_practices": false, "section_count": 3, "timestamp": "2025-03-01 03:47:37", "type": "section_detail", "page_metadata": {"og:title": "Harbor &ndash; Repositories", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/repositories/", "og:image:alt": "Harbor &ndash; Repositories project logo", "twitter:site": "@project_harbor", "ogSiteName": "Harbor", "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/repositories/", "generator": "Hugo 0.74.0", "twitter:card": "summary", "og:site_name": "Harbor", "twitter:creator": "@project_harbor", "favicon": "https://goharbor.io/favicon.svg", "ogLocale": "en_US", "og:type": ["documentation", "article"], "og:locale": "en_US", "title": "\n      \nHarbor docs | Repositories\n\n    ", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:image:type": "image/png", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "ogTitle": "Harbor &ndash; Repositories", "scrapeId": "0f650c58-c7bd-44bc-bf26-6e065f5bc156", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/repositories", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/repositories/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I list artifacts in a repository in harbor-2-12-0?\n\nAssistant: To list artifacts in a repository in harbor-2-12-0, here's what you do:\nClick the “Artifacts” tab to view the list of artifacts in a repository.\nEach artifact is identified by its sha256 digest in the list of artifacts, and different types of artifacts can be distinguished by the icon on the left of the digest. Hover your mouse on the icon you can see the name of the type.\n\nBy clicking the icon in the column **Pull Command**, the command to pull the artifact in the row of the icon will be copied to the clipboard.\n\nThe column **Annotations** in the grid shows the manifest annotations of the artifact, which are a set of key-value pairs. More details about the annotations please refer to [OCI Annotations](https://github.com/opencontainers/image-spec/blob/master/annotations.md).\nThe column **Push Time** in the grid shows the time each artifact is pushed to the registry.\n\n![list_artifacts](https://goharbor.io/docs/2.12.0/img/list-artifacts.png)\n\nBy clicking the search icon in the top right of the list of artifacts, you can user different types of filters to filter the items in the artifact list. You can choose to filter by type, tags, labels. Particularly, if you choose to filter by tags, you can choose to view only the tagged or untagged artifacts.\n\n![filter_artifacts](https://goharbor.io/docs/2.12.0/img/filter-artifacts.png)\n\nSince Harbor v2.0.0, [Image index](https://raw.githubusercontent.com/opencontainers/image-spec/master/image-index.md) can also be managed as an artifact in a repository. If an artifact is an index, there will be a folder icon on the right side of its digest.\n\n![image_index](https://goharbor.io/docs/2.12.0/img/index-icon.png)\n\nClick the folder icon, you can see the list of artifacts that is referenced by the index. The artifacts in this view is read only. i.e. You can not remove an artifact from an index via Harbor’s UI, and none of the actions like ‘copy digest’, ‘add labels’, ‘copy’ are available.\n\n![index_detail](https://goharbor.io/docs/2.12.0/img/index-detail.png).\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/repositories", "title": "Repositories", "description": "A repository is a collection of artifacts. Since version v2.0, in addition to container images, Harbor can manage different kinds of artifacts that are bundled in OCI-compatible format, such as helm chart (requires helm v3), CNAB, OPA bundle, etc.", "has_code_examples": false, "has_best_practices": false, "section_count": 3, "timestamp": "2025-03-01 03:47:37", "type": "section_detail", "page_metadata": {"og:title": "Harbor &ndash; Repositories", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/repositories/", "og:image:alt": "Harbor &ndash; Repositories project logo", "twitter:site": "@project_harbor", "ogSiteName": "Harbor", "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/repositories/", "generator": "Hugo 0.74.0", "twitter:card": "summary", "og:site_name": "Harbor", "twitter:creator": "@project_harbor", "favicon": "https://goharbor.io/favicon.svg", "ogLocale": "en_US", "og:type": ["documentation", "article"], "og:locale": "en_US", "title": "\n      \nHarbor docs | Repositories\n\n    ", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:image:type": "image/png", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "ogTitle": "Harbor &ndash; Repositories", "scrapeId": "0f650c58-c7bd-44bc-bf26-6e065f5bc156", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/repositories", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/repositories/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you explain what Retagging Artifacts is in harbor-2-12-0?\n\nAssistant: Sure, I'd be happy to explain Retagging Artifacts in harbor-2-12-0.\n\n# Retagging Artifacts\n\nUser with sufficient privileges can copy artifacts in Harbor to different repositories and projects.Here's a quick rundown of what this is about:\n\n## Copying Artifacts\n\nUser with sufficient privileges can copy artifacts in Harbor to different repositories and projects. For example, you can copy images as follows:\n\n- `release/app:stg` –> `release/app:prd`\n- `develop/app:v1.0` –> `release/app:v1.0`\n\nTo copy an artifact, you must have read permission (guest role or above) in the source project and write permission (developer role or above) in the target project.\n\n## Using the Harbor Interface\n\nIn the Harbor interface, select the artifact to copy, and click `Copy`.\n\nIn the Retag window, enter the project name, repository name, the new tag name, and click **Confirm**.\n\n## Images\n\n![retag artifact](https://goharbor.io/docs/2.12.0/img/retag1.png)\n\n![retag artifact](https://goharbor.io/docs/2.12.0/img/retag2.png)\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/retagging-images", "title": "Retagging Artifacts", "description": "User with sufficient privileges can copy artifacts in Harbor to different repositories and projects.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:47:56", "type": "overview", "page_metadata": {"og:image:alt": "Harbor &ndash; Retagging Artifacts project logo", "og:image:type": "image/png", "twitter:creator": "@project_harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/retagging-images/", "ogLocale": "en_US", "favicon": "https://goharbor.io/favicon.svg", "og:title": "Harbor &ndash; Retagging Artifacts", "og:site_name": "Harbor", "ogTitle": "Harbor &ndash; Retagging Artifacts", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "title": "\n      \nHarbor docs | Retagging Artifacts\n\n    ", "og:type": ["documentation", "article"], "ogSiteName": "Harbor", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/retagging-images/", "generator": "Hugo 0.74.0", "og:locale": "en_US", "twitter:card": "summary", "twitter:site": "@project_harbor", "scrapeId": "1ba9763f-fb68-4a71-8d35-4aa535e8490d", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/retagging-images", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/retagging-images/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I copying artifacts in harbor-2-12-0?\n\nAssistant: To copying artifacts in harbor-2-12-0, here's what you do:\nUser with sufficient privileges can copy artifacts in Harbor to different repositories and projects. For example, you can copy images as follows:\n\n- `release/app:stg` –> `release/app:prd`\n- `develop/app:v1.0` –> `release/app:v1.0`\n\nTo copy an artifact, you must have read permission (guest role or above) in the source project and write permission (developer role or above) in the target project..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/retagging-images", "title": "Retagging Artifacts", "description": "User with sufficient privileges can copy artifacts in Harbor to different repositories and projects.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:47:56", "type": "section_detail", "page_metadata": {"og:image:alt": "Harbor &ndash; Retagging Artifacts project logo", "og:image:type": "image/png", "twitter:creator": "@project_harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/retagging-images/", "ogLocale": "en_US", "favicon": "https://goharbor.io/favicon.svg", "og:title": "Harbor &ndash; Retagging Artifacts", "og:site_name": "Harbor", "ogTitle": "Harbor &ndash; Retagging Artifacts", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "title": "\n      \nHarbor docs | Retagging Artifacts\n\n    ", "og:type": ["documentation", "article"], "ogSiteName": "Harbor", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/retagging-images/", "generator": "Hugo 0.74.0", "og:locale": "en_US", "twitter:card": "summary", "twitter:site": "@project_harbor", "scrapeId": "1ba9763f-fb68-4a71-8d35-4aa535e8490d", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/retagging-images", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/retagging-images/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I using the harbor interface in harbor-2-12-0?\n\nAssistant: To using the harbor interface in harbor-2-12-0, here's what you do:\nIn the Harbor interface, select the artifact to copy, and click `Copy`.\n\nIn the Retag window, enter the project name, repository name, the new tag name, and click **Confirm**..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/retagging-images", "title": "Retagging Artifacts", "description": "User with sufficient privileges can copy artifacts in Harbor to different repositories and projects.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:47:56", "type": "section_detail", "page_metadata": {"og:image:alt": "Harbor &ndash; Retagging Artifacts project logo", "og:image:type": "image/png", "twitter:creator": "@project_harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/retagging-images/", "ogLocale": "en_US", "favicon": "https://goharbor.io/favicon.svg", "og:title": "Harbor &ndash; Retagging Artifacts", "og:site_name": "Harbor", "ogTitle": "Harbor &ndash; Retagging Artifacts", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "title": "\n      \nHarbor docs | Retagging Artifacts\n\n    ", "og:type": ["documentation", "article"], "ogSiteName": "Harbor", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/retagging-images/", "generator": "Hugo 0.74.0", "og:locale": "en_US", "twitter:card": "summary", "twitter:site": "@project_harbor", "scrapeId": "1ba9763f-fb68-4a71-8d35-4aa535e8490d", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/retagging-images", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/retagging-images/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I images in harbor-2-12-0?\n\nAssistant: To images in harbor-2-12-0, here's what you do:\n![retag artifact](https://goharbor.io/docs/2.12.0/img/retag1.png)\n\n![retag artifact](https://goharbor.io/docs/2.12.0/img/retag2.png).\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/retagging-images", "title": "Retagging Artifacts", "description": "User with sufficient privileges can copy artifacts in Harbor to different repositories and projects.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:47:56", "type": "section_detail", "page_metadata": {"og:image:alt": "Harbor &ndash; Retagging Artifacts project logo", "og:image:type": "image/png", "twitter:creator": "@project_harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/retagging-images/", "ogLocale": "en_US", "favicon": "https://goharbor.io/favicon.svg", "og:title": "Harbor &ndash; Retagging Artifacts", "og:site_name": "Harbor", "ogTitle": "Harbor &ndash; Retagging Artifacts", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "title": "\n      \nHarbor docs | Retagging Artifacts\n\n    ", "og:type": ["documentation", "article"], "ogSiteName": "Harbor", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/retagging-images/", "generator": "Hugo 0.74.0", "og:locale": "en_US", "twitter:card": "summary", "twitter:site": "@project_harbor", "scrapeId": "1ba9763f-fb68-4a71-8d35-4aa535e8490d", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/retagging-images", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/retagging-images/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: What are some tips for using Retagging Artifacts in harbor-2-12-0 effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nEnsure you have the necessary permissions before attempting to copy artifacts.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/retagging-images", "title": "Retagging Artifacts", "description": "User with sufficient privileges can copy artifacts in Harbor to different repositories and projects.", "has_code_examples": false, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:47:56", "type": "best_practices", "page_metadata": {"og:image:alt": "Harbor &ndash; Retagging Artifacts project logo", "og:image:type": "image/png", "twitter:creator": "@project_harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/retagging-images/", "ogLocale": "en_US", "favicon": "https://goharbor.io/favicon.svg", "og:title": "Harbor &ndash; Retagging Artifacts", "og:site_name": "Harbor", "ogTitle": "Harbor &ndash; Retagging Artifacts", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "title": "\n      \nHarbor docs | Retagging Artifacts\n\n    ", "og:type": ["documentation", "article"], "ogSiteName": "Harbor", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/retagging-images/", "generator": "Hugo 0.74.0", "og:locale": "en_US", "twitter:card": "summary", "twitter:site": "@project_harbor", "scrapeId": "1ba9763f-fb68-4a71-8d35-4aa535e8490d", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/retagging-images", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/retagging-images/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you explain what Tagging Artifacts is in harbor-2-12-0?\n\nAssistant: Sure, I'd be happy to explain Tagging Artifacts in harbor-2-12-0.\n\n# Tagging Artifacts\n\nHarbor v2.0 now supports OCI images and OCI image indexes, allowing users to manage tags for artifacts effectively.Here's a quick rundown of what this is about:\n\n## Overview\n\nHarbor v2.0 now supports OCI images and OCI image indexes (OCI Image Index Specification). An OCI image index (or OCI index) is a higher level manifest which points to a list of image manifests, ideal for one or more platforms. Both the index itself and the images referenced within are referred to as artifacts in Harbor parlance. An OCI index could hold another OCI index and so on and so forth. For any artifact referenced by an OCI index, the referenced artifact is known as the child artifact and the OCI index referencing the artifact is known as the parent artifact. We can also say that the child artifact belongs to the parent artifact or is a part of the parent artifact.\n\n## Tagging Artifacts\n\nUsers can add as many tags to any artifact as they wish without impacting the artifact digest or the associated storage. For an OCI index, users can add tags to the parent as well as add tags to the individual referenced artifacts within. Tags added to the parent artifact are not automatically inherited by the children artifacts. You can tag artifacts on the Harbor web console as follows:\n\nIn the Harbor interface, click on an artifact to see its current set of tags, then click ‘ADD TAG’, specify the name and click ‘OK’.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/adding-tags", "title": "Tagging Artifacts", "description": "Harbor v2.0 now supports OCI images and OCI image indexes, allowing users to manage tags for artifacts effectively.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:48:17", "type": "overview", "page_metadata": {"favicon": "https://goharbor.io/favicon.svg", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:site_name": "Harbor", "og:title": "Harbor &ndash; Tagging Artifacts", "og:locale": "en_US", "og:type": ["documentation", "article"], "og:image:alt": "Harbor &ndash; Tagging Artifacts project logo", "og:image:type": "image/png", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/adding-tags/", "ogTitle": "Harbor &ndash; Tagging Artifacts", "ogLocale": "en_US", "ogSiteName": "Harbor", "twitter:card": "summary", "title": "\n      \nHarbor docs | Tagging Artifacts\n\n    ", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "generator": "Hugo 0.74.0", "twitter:creator": "@project_harbor", "twitter:site": "@project_harbor", "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/adding-tags/", "scrapeId": "30d8b60e-f1bb-4b26-acd3-91af2ef2500b", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/adding-tags", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/adding-tags/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I overview in harbor-2-12-0?\n\nAssistant: To overview in harbor-2-12-0, here's what you do:\nHarbor v2.0 now supports OCI images and OCI image indexes (OCI Image Index Specification). An OCI image index (or OCI index) is a higher level manifest which points to a list of image manifests, ideal for one or more platforms. Both the index itself and the images referenced within are referred to as artifacts in Harbor parlance. An OCI index could hold another OCI index and so on and so forth. For any artifact referenced by an OCI index, the referenced artifact is known as the child artifact and the OCI index referencing the artifact is known as the parent artifact. We can also say that the child artifact belongs to the parent artifact or is a part of the parent artifact..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/adding-tags", "title": "Tagging Artifacts", "description": "Harbor v2.0 now supports OCI images and OCI image indexes, allowing users to manage tags for artifacts effectively.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:48:17", "type": "section_detail", "page_metadata": {"favicon": "https://goharbor.io/favicon.svg", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:site_name": "Harbor", "og:title": "Harbor &ndash; Tagging Artifacts", "og:locale": "en_US", "og:type": ["documentation", "article"], "og:image:alt": "Harbor &ndash; Tagging Artifacts project logo", "og:image:type": "image/png", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/adding-tags/", "ogTitle": "Harbor &ndash; Tagging Artifacts", "ogLocale": "en_US", "ogSiteName": "Harbor", "twitter:card": "summary", "title": "\n      \nHarbor docs | Tagging Artifacts\n\n    ", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "generator": "Hugo 0.74.0", "twitter:creator": "@project_harbor", "twitter:site": "@project_harbor", "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/adding-tags/", "scrapeId": "30d8b60e-f1bb-4b26-acd3-91af2ef2500b", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/adding-tags", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/adding-tags/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I tagging artifacts in harbor-2-12-0?\n\nAssistant: To tagging artifacts in harbor-2-12-0, here's what you do:\nUsers can add as many tags to any artifact as they wish without impacting the artifact digest or the associated storage. For an OCI index, users can add tags to the parent as well as add tags to the individual referenced artifacts within. Tags added to the parent artifact are not automatically inherited by the children artifacts. You can tag artifacts on the Harbor web console as follows:\n\nIn the Harbor interface, click on an artifact to see its current set of tags, then click ‘ADD TAG’, specify the name and click ‘OK’..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/adding-tags", "title": "Tagging Artifacts", "description": "Harbor v2.0 now supports OCI images and OCI image indexes, allowing users to manage tags for artifacts effectively.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:48:17", "type": "section_detail", "page_metadata": {"favicon": "https://goharbor.io/favicon.svg", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:site_name": "Harbor", "og:title": "Harbor &ndash; Tagging Artifacts", "og:locale": "en_US", "og:type": ["documentation", "article"], "og:image:alt": "Harbor &ndash; Tagging Artifacts project logo", "og:image:type": "image/png", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/adding-tags/", "ogTitle": "Harbor &ndash; Tagging Artifacts", "ogLocale": "en_US", "ogSiteName": "Harbor", "twitter:card": "summary", "title": "\n      \nHarbor docs | Tagging Artifacts\n\n    ", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "generator": "Hugo 0.74.0", "twitter:creator": "@project_harbor", "twitter:site": "@project_harbor", "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/adding-tags/", "scrapeId": "30d8b60e-f1bb-4b26-acd3-91af2ef2500b", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/adding-tags", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/adding-tags/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: What are some tips for using Tagging Artifacts in harbor-2-12-0 effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nTags added to the parent artifact are not automatically inherited by the children artifacts.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/adding-tags", "title": "Tagging Artifacts", "description": "Harbor v2.0 now supports OCI images and OCI image indexes, allowing users to manage tags for artifacts effectively.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:48:17", "type": "best_practices", "page_metadata": {"favicon": "https://goharbor.io/favicon.svg", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:site_name": "Harbor", "og:title": "Harbor &ndash; Tagging Artifacts", "og:locale": "en_US", "og:type": ["documentation", "article"], "og:image:alt": "Harbor &ndash; Tagging Artifacts project logo", "og:image:type": "image/png", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/adding-tags/", "ogTitle": "Harbor &ndash; Tagging Artifacts", "ogLocale": "en_US", "ogSiteName": "Harbor", "twitter:card": "summary", "title": "\n      \nHarbor docs | Tagging Artifacts\n\n    ", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "generator": "Hugo 0.74.0", "twitter:creator": "@project_harbor", "twitter:site": "@project_harbor", "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/adding-tags/", "scrapeId": "30d8b60e-f1bb-4b26-acd3-91af2ef2500b", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/adding-tags", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/adding-tags/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you explain what Tag Immutability Rules is in harbor-2-12-0?\n\nAssistant: Sure, I'd be happy to explain Tag Immutability Rules in harbor-2-12-0.\n\n# Tag Immutability Rules\n\nThis page covers the rules and configurations for tag immutability in Harbor, including how to prevent tag deletion and create immutability rules.Here's a quick rundown of what this is about:\n\n## Overview\n\nBy default, users can repeatedly push an artifact with the same tag to a repository in Harbor. This causes the tag to migrate across the artifacts and every artifact that has its tag taken away becomes tagless. This is due to Distribution/Distribution upstream which does not enforce the mapping between an image tag and the image digest. This can be undesirable in certain cases, because the tag can no longer be trusted to identify the image version. The sha256 digest remains reliable and always points to the same build, but it is not rendered in a human-readable format.\n\nTo prevent this, Harbor allows you to configure tag immutability at the project level, so that artifacts with certain tags cannot be pushed into Harbor if their tags match existing tags. This prevents existing artifacts from being overwritten. Tag immutability guarantees that an immutable tagged artifact cannot be deleted, and also cannot be altered in any way such as through re-pushing, re-tagging, or replication from another target registry.\n\nImmutability rules use `OR` logic, so if you set multiple rules and a tag is matched by any of those rules, it is marked as immutable.\n\n## How Immutable Tags Prevent Tag Deletion\n\nSince v2.0, you can delete any tag of an artifact without deleting the artifact itself. Therefore, you can lock down a particular tag by configuring an immutability rule matching this tag which means the artifact holding the tag also cannot be overwritten or deleted. However you can still delete other tags associated with this immutable artifact. Consider the follow example:\n\n1. In the Docker client, push `hello-world:v1` into a project.\n2. In the project, set an immutable tag rule in this project that matches the image and tag `hello-world:v1`.\n3. Push `hello-world:v1` to the project.\n4. In your local env, retag `hello-world:v1` to `hello-world:v2`.\n5. Push `hello-world:v2` to the project.\n6. In the Harbor interface, attempt to delete tag `v1` and `v2` of `hello-world` sequentially.\n\nIn this case, you cannot delete tag `v1` as it’s an immutable tag and you cannot delete the artifact `hello-world` holding this tag. But you can delete tag `v2` even it shares the sha256 digest with `v1`.\n\n## Create a Tag Immutability Rule\n\n1. Log in to the Harbor interface with an account that has at least project administrator privileges.\n\n2. Go to **Projects**, select a project, select policy, and select **Tag Immutability**.\n\n![Add an immutability rule](https://goharbor.io/docs/2.12.0/img/tag-immutability.png)\n\n3. Click **Add Rule**.\n   - In the **Respositories** row, enter a comma-separated list of repositories to which to either apply or exclude from the rule by selecting either **matching** or **excluding** from the drop-down menu.\n\n   - In the **Tags** row, enter a comma-separated list of tags to which to either apply or exclude from the rule by selecting either **matching** or **excluding** from the drop-down menu.\n\n     ![Add an immutability rule](https://goharbor.io/docs/2.12.0/img/add-immutability-rule.png)\n4. Click **Add** to save the rule.\n\nYou can add a maximum of 15 immutability rules per project.\n\nAfter you add a rule, any tags that are identified by the rule are marked **Immutable** in the Repositories tab.\n\n5. To modify an existing rule, use the **Action** drop-down menu next to a rule to deactivate, edit, or delete that rule.\n\n![Immutability rules](https://goharbor.io/docs/2.12.0/img/edit-tag-immutability.png)\n\n## Example\n\nTo make all tags for all repositories in the project immutable, set the following options:\n\n- Set **For the respositories** to **matching** and enter `**`.\n- Set **Tags** to **matching** and enter `**`.\n\nTo allow the tags `rc`, `test`, and `nightly` to be overwritten but make all other tags immutable, set the following options:\n\n- Set **For the respositories** to **matching** and enter `**`.\n- Set **Tags** to **excluding** and enter `rc,test,nightly`.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-tag-immutability-rules", "title": "Tag Immutability Rules", "description": "This page covers the rules and configurations for tag immutability in Harbor, including how to prevent tag deletion and create immutability rules.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:52:33", "type": "overview", "page_metadata": {"favicon": "https://goharbor.io/favicon.svg", "og:locale": "en_US", "twitter:site": "@project_harbor", "title": "\n      \nHarbor docs | Tag Immutability Rules\n\n    ", "twitter:creator": "@project_harbor", "og:title": "Harbor &ndash; Tag Immutability Rules", "ogTitle": "Harbor &ndash; Tag Immutability Rules", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:image:alt": "Harbor &ndash; Tag Immutability Rules project logo", "og:image:type": "image/png", "ogSiteName": "Harbor", "og:site_name": "Harbor", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-tag-immutability-rules/", "og:type": ["documentation", "article"], "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-tag-immutability-rules/", "twitter:card": "summary", "generator": "Hugo 0.74.0", "ogLocale": "en_US", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "scrapeId": "42a9bdbb-c412-470a-841a-dd4b92b44bb2", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-tag-immutability-rules", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-tag-immutability-rules/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I overview in harbor-2-12-0?\n\nAssistant: To overview in harbor-2-12-0, here's what you do:\nBy default, users can repeatedly push an artifact with the same tag to a repository in Harbor. This causes the tag to migrate across the artifacts and every artifact that has its tag taken away becomes tagless. This is due to Distribution/Distribution upstream which does not enforce the mapping between an image tag and the image digest. This can be undesirable in certain cases, because the tag can no longer be trusted to identify the image version. The sha256 digest remains reliable and always points to the same build, but it is not rendered in a human-readable format.\n\nTo prevent this, Harbor allows you to configure tag immutability at the project level, so that artifacts with certain tags cannot be pushed into Harbor if their tags match existing tags. This prevents existing artifacts from being overwritten. Tag immutability guarantees that an immutable tagged artifact cannot be deleted, and also cannot be altered in any way such as through re-pushing, re-tagging, or replication from another target registry.\n\nImmutability rules use `OR` logic, so if you set multiple rules and a tag is matched by any of those rules, it is marked as immutable..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-tag-immutability-rules", "title": "Tag Immutability Rules", "description": "This page covers the rules and configurations for tag immutability in Harbor, including how to prevent tag deletion and create immutability rules.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:52:33", "type": "section_detail", "page_metadata": {"favicon": "https://goharbor.io/favicon.svg", "og:locale": "en_US", "twitter:site": "@project_harbor", "title": "\n      \nHarbor docs | Tag Immutability Rules\n\n    ", "twitter:creator": "@project_harbor", "og:title": "Harbor &ndash; Tag Immutability Rules", "ogTitle": "Harbor &ndash; Tag Immutability Rules", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:image:alt": "Harbor &ndash; Tag Immutability Rules project logo", "og:image:type": "image/png", "ogSiteName": "Harbor", "og:site_name": "Harbor", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-tag-immutability-rules/", "og:type": ["documentation", "article"], "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-tag-immutability-rules/", "twitter:card": "summary", "generator": "Hugo 0.74.0", "ogLocale": "en_US", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "scrapeId": "42a9bdbb-c412-470a-841a-dd4b92b44bb2", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-tag-immutability-rules", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-tag-immutability-rules/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I how immutable tags prevent tag deletion in harbor-2-12-0?\n\nAssistant: To how immutable tags prevent tag deletion in harbor-2-12-0, here's what you do:\nSince v2.0, you can delete any tag of an artifact without deleting the artifact itself. Therefore, you can lock down a particular tag by configuring an immutability rule matching this tag which means the artifact holding the tag also cannot be overwritten or deleted. However you can still delete other tags associated with this immutable artifact. Consider the follow example:\n\n1. In the Docker client, push `hello-world:v1` into a project.\n2. In the project, set an immutable tag rule in this project that matches the image and tag `hello-world:v1`.\n3. Push `hello-world:v1` to the project.\n4. In your local env, retag `hello-world:v1` to `hello-world:v2`.\n5. Push `hello-world:v2` to the project.\n6. In the Harbor interface, attempt to delete tag `v1` and `v2` of `hello-world` sequentially.\n\nIn this case, you cannot delete tag `v1` as it’s an immutable tag and you cannot delete the artifact `hello-world` holding this tag. But you can delete tag `v2` even it shares the sha256 digest with `v1`..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-tag-immutability-rules", "title": "Tag Immutability Rules", "description": "This page covers the rules and configurations for tag immutability in Harbor, including how to prevent tag deletion and create immutability rules.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:52:33", "type": "section_detail", "page_metadata": {"favicon": "https://goharbor.io/favicon.svg", "og:locale": "en_US", "twitter:site": "@project_harbor", "title": "\n      \nHarbor docs | Tag Immutability Rules\n\n    ", "twitter:creator": "@project_harbor", "og:title": "Harbor &ndash; Tag Immutability Rules", "ogTitle": "Harbor &ndash; Tag Immutability Rules", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:image:alt": "Harbor &ndash; Tag Immutability Rules project logo", "og:image:type": "image/png", "ogSiteName": "Harbor", "og:site_name": "Harbor", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-tag-immutability-rules/", "og:type": ["documentation", "article"], "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-tag-immutability-rules/", "twitter:card": "summary", "generator": "Hugo 0.74.0", "ogLocale": "en_US", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "scrapeId": "42a9bdbb-c412-470a-841a-dd4b92b44bb2", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-tag-immutability-rules", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-tag-immutability-rules/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I create a tag immutability rule in harbor-2-12-0?\n\nAssistant: To create a tag immutability rule in harbor-2-12-0, here's what you do:\n1. Log in to the Harbor interface with an account that has at least project administrator privileges.\n\n2. Go to **Projects**, select a project, select policy, and select **Tag Immutability**.\n\n![Add an immutability rule](https://goharbor.io/docs/2.12.0/img/tag-immutability.png)\n\n3. Click **Add Rule**.\n   - In the **Respositories** row, enter a comma-separated list of repositories to which to either apply or exclude from the rule by selecting either **matching** or **excluding** from the drop-down menu.\n\n   - In the **Tags** row, enter a comma-separated list of tags to which to either apply or exclude from the rule by selecting either **matching** or **excluding** from the drop-down menu.\n\n     ![Add an immutability rule](https://goharbor.io/docs/2.12.0/img/add-immutability-rule.png)\n4. Click **Add** to save the rule.\n\nYou can add a maximum of 15 immutability rules per project.\n\nAfter you add a rule, any tags that are identified by the rule are marked **Immutable** in the Repositories tab.\n\n5. To modify an existing rule, use the **Action** drop-down menu next to a rule to deactivate, edit, or delete that rule.\n\n![Immutability rules](https://goharbor.io/docs/2.12.0/img/edit-tag-immutability.png).\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-tag-immutability-rules", "title": "Tag Immutability Rules", "description": "This page covers the rules and configurations for tag immutability in Harbor, including how to prevent tag deletion and create immutability rules.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:52:33", "type": "section_detail", "page_metadata": {"favicon": "https://goharbor.io/favicon.svg", "og:locale": "en_US", "twitter:site": "@project_harbor", "title": "\n      \nHarbor docs | Tag Immutability Rules\n\n    ", "twitter:creator": "@project_harbor", "og:title": "Harbor &ndash; Tag Immutability Rules", "ogTitle": "Harbor &ndash; Tag Immutability Rules", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:image:alt": "Harbor &ndash; Tag Immutability Rules project logo", "og:image:type": "image/png", "ogSiteName": "Harbor", "og:site_name": "Harbor", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-tag-immutability-rules/", "og:type": ["documentation", "article"], "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-tag-immutability-rules/", "twitter:card": "summary", "generator": "Hugo 0.74.0", "ogLocale": "en_US", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "scrapeId": "42a9bdbb-c412-470a-841a-dd4b92b44bb2", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-tag-immutability-rules", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-tag-immutability-rules/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I example in harbor-2-12-0?\n\nAssistant: To example in harbor-2-12-0, here's what you do:\nTo make all tags for all repositories in the project immutable, set the following options:\n\n- Set **For the respositories** to **matching** and enter `**`.\n- Set **Tags** to **matching** and enter `**`.\n\nTo allow the tags `rc`, `test`, and `nightly` to be overwritten but make all other tags immutable, set the following options:\n\n- Set **For the respositories** to **matching** and enter `**`.\n- Set **Tags** to **excluding** and enter `rc,test,nightly`..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-tag-immutability-rules", "title": "Tag Immutability Rules", "description": "This page covers the rules and configurations for tag immutability in Harbor, including how to prevent tag deletion and create immutability rules.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:52:33", "type": "section_detail", "page_metadata": {"favicon": "https://goharbor.io/favicon.svg", "og:locale": "en_US", "twitter:site": "@project_harbor", "title": "\n      \nHarbor docs | Tag Immutability Rules\n\n    ", "twitter:creator": "@project_harbor", "og:title": "Harbor &ndash; Tag Immutability Rules", "ogTitle": "Harbor &ndash; Tag Immutability Rules", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:image:alt": "Harbor &ndash; Tag Immutability Rules project logo", "og:image:type": "image/png", "ogSiteName": "Harbor", "og:site_name": "Harbor", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-tag-immutability-rules/", "og:type": ["documentation", "article"], "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-tag-immutability-rules/", "twitter:card": "summary", "generator": "Hugo 0.74.0", "ogLocale": "en_US", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "scrapeId": "42a9bdbb-c412-470a-841a-dd4b92b44bb2", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-tag-immutability-rules", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-tag-immutability-rules/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you give me some code examples for Tag Immutability Rules in harbor-2-12-0?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Pushing Docker Images**:\n\n```yaml\ndocker push hello-world:v1\n```\n\nThis snippet shows you how to pushing docker images, which is an important aspect of tag immutability rules.\n\n**Retagging Docker Images**:\n\n```yaml\ndocker tag hello-world:v1 hello-world:v2\n```\n\nThis snippet shows you how to retagging docker images, which is an important aspect of tag immutability rules.\n\n", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-tag-immutability-rules", "title": "Tag Immutability Rules", "description": "This page covers the rules and configurations for tag immutability in Harbor, including how to prevent tag deletion and create immutability rules.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:52:33", "type": "code_examples", "page_metadata": {"favicon": "https://goharbor.io/favicon.svg", "og:locale": "en_US", "twitter:site": "@project_harbor", "title": "\n      \nHarbor docs | Tag Immutability Rules\n\n    ", "twitter:creator": "@project_harbor", "og:title": "Harbor &ndash; Tag Immutability Rules", "ogTitle": "Harbor &ndash; Tag Immutability Rules", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:image:alt": "Harbor &ndash; Tag Immutability Rules project logo", "og:image:type": "image/png", "ogSiteName": "Harbor", "og:site_name": "Harbor", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-tag-immutability-rules/", "og:type": ["documentation", "article"], "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-tag-immutability-rules/", "twitter:card": "summary", "generator": "Hugo 0.74.0", "ogLocale": "en_US", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "scrapeId": "42a9bdbb-c412-470a-841a-dd4b92b44bb2", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-tag-immutability-rules", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-tag-immutability-rules/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: What are some tips for using Tag Immutability Rules in harbor-2-12-0 effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nConfigure tag immutability at the project level to prevent overwriting existing artifacts.\n\nUse OR logic when setting multiple immutability rules to ensure any matched tag is marked as immutable.\n\nYou can add a maximum of 15 immutability rules per project.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-tag-immutability-rules", "title": "Tag Immutability Rules", "description": "This page covers the rules and configurations for tag immutability in Harbor, including how to prevent tag deletion and create immutability rules.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:52:33", "type": "best_practices", "page_metadata": {"favicon": "https://goharbor.io/favicon.svg", "og:locale": "en_US", "twitter:site": "@project_harbor", "title": "\n      \nHarbor docs | Tag Immutability Rules\n\n    ", "twitter:creator": "@project_harbor", "og:title": "Harbor &ndash; Tag Immutability Rules", "ogTitle": "Harbor &ndash; Tag Immutability Rules", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:image:alt": "Harbor &ndash; Tag Immutability Rules project logo", "og:image:type": "image/png", "ogSiteName": "Harbor", "og:site_name": "Harbor", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-tag-immutability-rules/", "og:type": ["documentation", "article"], "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-tag-immutability-rules/", "twitter:card": "summary", "generator": "Hugo 0.74.0", "ogLocale": "en_US", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "scrapeId": "42a9bdbb-c412-470a-841a-dd4b92b44bb2", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-tag-immutability-rules", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-tag-immutability-rules/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you explain what Sign Artifacts with Cosign or Notation is in harbor-2-12-0?\n\nAssistant: Sure, I'd be happy to explain Sign Artifacts with Cosign or Notation in harbor-2-12-0.\n\n# Sign Artifacts with Cosign or Notation\n\nArtifact signing and signature verification are critical security capabilities that allow you to verify the integrity of an artifact. Harbor supports content trust through integrations with Cosign and Notation.Here's a quick rundown of what this is about:\n\n## Use Cosign to sign artifacts\n\nHarbor v2.5 integrates support for Cosign, an OCI artifact signing and verification solution that is part of the Sigstore project.\n\nCosign signs OCI artifacts and pushes the generated signature into Harbor. This signature is stored as an artifact accessory along side the signed artifact. Harbor manages a link between the signed artifact and cosign signature, allowing you to apply things like tag retention rules and immutable rules to a signed artifact, and it will extend to both the signed artifact and the signature. In this way you can use Harbor’s built in functionality to manage signed artifacts and Cosign signature accessories. Note that Vulnerability scans of Cosign signatures are not supported.\n\nA key feature of using Cosign with Harbor is the ability to use Harbor’s replication capabilities to replicate signatures with their associated signed artifact. This means that if a replication rule applies to a signed artifact, Harbor will apply the replication rule to the signature in the same way it applies it to the signed artifact.\n\n- When replicating between Harbor instances, the target Harbor instance will maintain the link between the signed artifact and its associated signatures. You will be able to see the relationship between the two artifacts in the target Harbor interface, in the same way that you do in the source registry.\n\n- When replicating from Harbor to another target registry type, the target registry will not manage the link between the signed artifact and any associated signatures. You will see the subject manifest and signatures as coordinating artifacts under the same repository.\n\n**Note:** Only Manual and Scheduled replications “Trigger Modes” are applicable. Event-based replication is not possible at the moment due to the chicken and egg situation, you cannot replication image which is not signed, but you cannot replicate signature without image.\n\n## Sign, upload, and view Cosign signatures in Harbor\n\nBefore starting to sign with Cosign, you must have cosign installed locally and have generated a private key. See the Cosign documentation for more installation information.\n\nUse the `cosign sign` command to sign an image and upload the Cosign signature to your Harbor instance. Replace `<harbor-instance>/<image/path>:<image-tag>` in the example below with your Harbor instance and the path to the image.\n\n```fallback\ncosign sign --key cosign.key <harbor-instance>/<image/path>:<image-tag>\n```\n\nAfter entering the password for your cosign private key, cosign will sign the image and upload the generated signature to your Harbor instance. You can view all signatures for a signed artifact in the Harbor interface.\n\n1. Log into the Harbor interface and navigate to the project that your signed artifact is located in.\n\n2. If the artifact has an associated cosign signature accessory, you can click the > icon to display the Accessories table.\n\nThe Accessories table lists all associated cosign signatures that have been pushed to the project. This table shows the Accessory name, Type, Size, and Created Time.\n\n## Delete Cosign signatures\n\nYou can delete a Cosign signature individually through the Harbor interface.\n\n1. Log into the Harbor interface and navigate to the project that your signed artifact is located in and expand the accessories table.\n\n2. Click on the **three vertical dot icon** next to the signature you want to delete and then click Delete.\n\nAll the signatures associated with a signed artifact and will be deleted if the signed artifact is deleted.\n\nNote that Harbor’s garbage collection will not remove any signature individually. In Harbor, Cosign signatures are treated like any other OCI artifact, except from the perspective of the garbage collector which can’t see accessory artifacts, like Cosign signatures. For example, if you configure garbage collection for untagged artifacts, Harbor’s garbage collector will not remove any signatures without a tag. If the signed artifact is untagged, and matches the configured garbage collect rule, it and any associated signatures will be deleted.\n\nHarbor doesn’t support `cosign clean` to remove signatures as Harbor has chosen not to implement tag deletion which is used by `cosign clean`. See the OCI distribution specification for more information on implantation requirements.\n\n## Use Notation to sign and verify artifacts with distribution spec v1.1 mode\n\nNotation is a standard-based tool and library for signing and verifying OCI artifacts. It generates signatures and associates them with OCI artifacts to ensure integrity for the supply chain.\n\n## Install Notation CLI\n\nInstall the latest version on Linux. Follow the installation guide for other platforms and methods.\n\n`brew install notation`\n\n## Generating a Test Key and Self-Signed Certificate:\n\nUse notation `cert generate-test` to generate a test RSA key for signing artifacts, and a self-signed `X.509` test certificate for verifying artifacts. Please note the self-signed certificate should be used for testing or development purposes only. You should use CA-issued certificate in production.\n\n```shell\nnotation cert generate-test --default \"wabbit-networks.io\"\n```\n\n## Authenticate to Harbor Registry\n\nTo authenticate with the Harbor registry, set the following environment variables:\n\n```shell\nexport NOTATION_USERNAME=\"YOUR_REGISTRY_USERNAME\"\nexport NOTATION_PASSWORD=\"YOUR_REGISTRY_PASSWORD\"\n```\n\n## Sign an existing image in Harbor\n\nAssuming you have configured HTTPS access and pushed an image to Harbor, you can use the `notation sign` command to sign the image.\n\n```shell\nnotation sign <harbor-domain>/<image-reference>\n```\n\n## Create a trust policy to verify the image\n\nTo verify the container image, configure the trust policy to specify trusted identities that sign the artifacts, and level of signature verification to use. For more details, see trust policy spec.\n\nCreate a JSON file with the following trust policy, for example:\n\n```shell\ncat <<EOF > ./trustpolicy.json\n{\n    \"version\": \"1.0\",\n    \"trustPolicies\": [\\\n        {\\\n            \"name\": \"wabbit-networks-images\",\\\n            \"registryScopes\": [ \"*\" ],\\\n            \"signatureVerification\": {\\\n                \"level\" : \"strict\"\\\n            },\\\n            \"trustStores\": [ \"ca:wabbit-networks.io\" ],\\\n            \"trustedIdentities\": [\\\n                \"*\"\\\n            ]\\\n        }\\\n    ]\n}\nEOF\n```\n\n## Verify the image\n\nUse `notation verify` to verify signatures associated with the container image.\n\n```shell\nnotation verify <harbor-domain>/<image-reference>\n```\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/sign-images", "title": "Sign Artifacts with Cosign or Notation", "description": "Artifact signing and signature verification are critical security capabilities that allow you to verify the integrity of an artifact. Harbor supports content trust through integrations with Cosign and Notation.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 03:53:22", "type": "overview", "page_metadata": {"twitter:site": "@project_harbor", "ogTitle": "Harbor &ndash; Sign Artifacts with Cosign or Notation", "title": "\n      \nHarbor docs | Sign Artifacts with Cosign or Notation\n\n    ", "generator": "Hugo 0.74.0", "og:image:alt": "Harbor &ndash; Sign Artifacts with Cosign or Notation project logo", "twitter:creator": "@project_harbor", "ogLocale": "en_US", "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/sign-images/", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:type": ["documentation", "article"], "og:image:type": "image/png", "twitter:card": "summary", "ogSiteName": "Harbor", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/sign-images/", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "favicon": "https://goharbor.io/favicon.svg", "og:title": "Harbor &ndash; Sign Artifacts with Cosign or Notation", "og:locale": "en_US", "og:site_name": "Harbor", "scrapeId": "6b30ba55-4f79-4020-b636-1d213663bc59", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/sign-images", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/sign-images/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I use cosign to sign artifacts in harbor-2-12-0?\n\nAssistant: To use cosign to sign artifacts in harbor-2-12-0, here's what you do:\nHarbor v2.5 integrates support for Cosign, an OCI artifact signing and verification solution that is part of the Sigstore project.\n\nCosign signs OCI artifacts and pushes the generated signature into Harbor. This signature is stored as an artifact accessory along side the signed artifact. Harbor manages a link between the signed artifact and cosign signature, allowing you to apply things like tag retention rules and immutable rules to a signed artifact, and it will extend to both the signed artifact and the signature. In this way you can use Harbor’s built in functionality to manage signed artifacts and Cosign signature accessories. Note that Vulnerability scans of Cosign signatures are not supported.\n\nA key feature of using Cosign with Harbor is the ability to use Harbor’s replication capabilities to replicate signatures with their associated signed artifact. This means that if a replication rule applies to a signed artifact, Harbor will apply the replication rule to the signature in the same way it applies it to the signed artifact.\n\n- When replicating between Harbor instances, the target Harbor instance will maintain the link between the signed artifact and its associated signatures. You will be able to see the relationship between the two artifacts in the target Harbor interface, in the same way that you do in the source registry.\n\n- When replicating from Harbor to another target registry type, the target registry will not manage the link between the signed artifact and any associated signatures. You will see the subject manifest and signatures as coordinating artifacts under the same repository.\n\n**Note:** Only Manual and Scheduled replications “Trigger Modes” are applicable. Event-based replication is not possible at the moment due to the chicken and egg situation, you cannot replication image which is not signed, but you cannot replicate signature without image..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/sign-images", "title": "Sign Artifacts with Cosign or Notation", "description": "Artifact signing and signature verification are critical security capabilities that allow you to verify the integrity of an artifact. Harbor supports content trust through integrations with Cosign and Notation.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 03:53:22", "type": "section_detail", "page_metadata": {"twitter:site": "@project_harbor", "ogTitle": "Harbor &ndash; Sign Artifacts with Cosign or Notation", "title": "\n      \nHarbor docs | Sign Artifacts with Cosign or Notation\n\n    ", "generator": "Hugo 0.74.0", "og:image:alt": "Harbor &ndash; Sign Artifacts with Cosign or Notation project logo", "twitter:creator": "@project_harbor", "ogLocale": "en_US", "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/sign-images/", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:type": ["documentation", "article"], "og:image:type": "image/png", "twitter:card": "summary", "ogSiteName": "Harbor", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/sign-images/", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "favicon": "https://goharbor.io/favicon.svg", "og:title": "Harbor &ndash; Sign Artifacts with Cosign or Notation", "og:locale": "en_US", "og:site_name": "Harbor", "scrapeId": "6b30ba55-4f79-4020-b636-1d213663bc59", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/sign-images", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/sign-images/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I sign, upload, and view cosign signatures in harbor in harbor-2-12-0?\n\nAssistant: To sign, upload, and view cosign signatures in harbor in harbor-2-12-0, here's what you do:\nBefore starting to sign with Cosign, you must have cosign installed locally and have generated a private key. See the Cosign documentation for more installation information.\n\nUse the `cosign sign` command to sign an image and upload the Cosign signature to your Harbor instance. Replace `<harbor-instance>/<image/path>:<image-tag>` in the example below with your Harbor instance and the path to the image.\n\n```fallback\ncosign sign --key cosign.key <harbor-instance>/<image/path>:<image-tag>\n```\n\nAfter entering the password for your cosign private key, cosign will sign the image and upload the generated signature to your Harbor instance. You can view all signatures for a signed artifact in the Harbor interface.\n\n1. Log into the Harbor interface and navigate to the project that your signed artifact is located in.\n\n2. If the artifact has an associated cosign signature accessory, you can click the > icon to display the Accessories table.\n\nThe Accessories table lists all associated cosign signatures that have been pushed to the project. This table shows the Accessory name, Type, Size, and Created Time..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/sign-images", "title": "Sign Artifacts with Cosign or Notation", "description": "Artifact signing and signature verification are critical security capabilities that allow you to verify the integrity of an artifact. Harbor supports content trust through integrations with Cosign and Notation.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 03:53:22", "type": "section_detail", "page_metadata": {"twitter:site": "@project_harbor", "ogTitle": "Harbor &ndash; Sign Artifacts with Cosign or Notation", "title": "\n      \nHarbor docs | Sign Artifacts with Cosign or Notation\n\n    ", "generator": "Hugo 0.74.0", "og:image:alt": "Harbor &ndash; Sign Artifacts with Cosign or Notation project logo", "twitter:creator": "@project_harbor", "ogLocale": "en_US", "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/sign-images/", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:type": ["documentation", "article"], "og:image:type": "image/png", "twitter:card": "summary", "ogSiteName": "Harbor", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/sign-images/", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "favicon": "https://goharbor.io/favicon.svg", "og:title": "Harbor &ndash; Sign Artifacts with Cosign or Notation", "og:locale": "en_US", "og:site_name": "Harbor", "scrapeId": "6b30ba55-4f79-4020-b636-1d213663bc59", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/sign-images", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/sign-images/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I delete cosign signatures in harbor-2-12-0?\n\nAssistant: To delete cosign signatures in harbor-2-12-0, here's what you do:\nYou can delete a Cosign signature individually through the Harbor interface.\n\n1. Log into the Harbor interface and navigate to the project that your signed artifact is located in and expand the accessories table.\n\n2. Click on the **three vertical dot icon** next to the signature you want to delete and then click Delete.\n\nAll the signatures associated with a signed artifact and will be deleted if the signed artifact is deleted.\n\nNote that Harbor’s garbage collection will not remove any signature individually. In Harbor, Cosign signatures are treated like any other OCI artifact, except from the perspective of the garbage collector which can’t see accessory artifacts, like Cosign signatures. For example, if you configure garbage collection for untagged artifacts, Harbor’s garbage collector will not remove any signatures without a tag. If the signed artifact is untagged, and matches the configured garbage collect rule, it and any associated signatures will be deleted.\n\nHarbor doesn’t support `cosign clean` to remove signatures as Harbor has chosen not to implement tag deletion which is used by `cosign clean`. See the OCI distribution specification for more information on implantation requirements..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/sign-images", "title": "Sign Artifacts with Cosign or Notation", "description": "Artifact signing and signature verification are critical security capabilities that allow you to verify the integrity of an artifact. Harbor supports content trust through integrations with Cosign and Notation.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 03:53:22", "type": "section_detail", "page_metadata": {"twitter:site": "@project_harbor", "ogTitle": "Harbor &ndash; Sign Artifacts with Cosign or Notation", "title": "\n      \nHarbor docs | Sign Artifacts with Cosign or Notation\n\n    ", "generator": "Hugo 0.74.0", "og:image:alt": "Harbor &ndash; Sign Artifacts with Cosign or Notation project logo", "twitter:creator": "@project_harbor", "ogLocale": "en_US", "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/sign-images/", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:type": ["documentation", "article"], "og:image:type": "image/png", "twitter:card": "summary", "ogSiteName": "Harbor", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/sign-images/", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "favicon": "https://goharbor.io/favicon.svg", "og:title": "Harbor &ndash; Sign Artifacts with Cosign or Notation", "og:locale": "en_US", "og:site_name": "Harbor", "scrapeId": "6b30ba55-4f79-4020-b636-1d213663bc59", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/sign-images", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/sign-images/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I use notation to sign and verify artifacts with distribution spec v1.1 mode in harbor-2-12-0?\n\nAssistant: To use notation to sign and verify artifacts with distribution spec v1.1 mode in harbor-2-12-0, here's what you do:\nNotation is a standard-based tool and library for signing and verifying OCI artifacts. It generates signatures and associates them with OCI artifacts to ensure integrity for the supply chain..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/sign-images", "title": "Sign Artifacts with Cosign or Notation", "description": "Artifact signing and signature verification are critical security capabilities that allow you to verify the integrity of an artifact. Harbor supports content trust through integrations with Cosign and Notation.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 03:53:22", "type": "section_detail", "page_metadata": {"twitter:site": "@project_harbor", "ogTitle": "Harbor &ndash; Sign Artifacts with Cosign or Notation", "title": "\n      \nHarbor docs | Sign Artifacts with Cosign or Notation\n\n    ", "generator": "Hugo 0.74.0", "og:image:alt": "Harbor &ndash; Sign Artifacts with Cosign or Notation project logo", "twitter:creator": "@project_harbor", "ogLocale": "en_US", "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/sign-images/", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:type": ["documentation", "article"], "og:image:type": "image/png", "twitter:card": "summary", "ogSiteName": "Harbor", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/sign-images/", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "favicon": "https://goharbor.io/favicon.svg", "og:title": "Harbor &ndash; Sign Artifacts with Cosign or Notation", "og:locale": "en_US", "og:site_name": "Harbor", "scrapeId": "6b30ba55-4f79-4020-b636-1d213663bc59", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/sign-images", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/sign-images/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I install notation cli in harbor-2-12-0?\n\nAssistant: To install notation cli in harbor-2-12-0, here's what you do:\nInstall the latest version on Linux. Follow the installation guide for other platforms and methods.\n\n`brew install notation`.\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/sign-images", "title": "Sign Artifacts with Cosign or Notation", "description": "Artifact signing and signature verification are critical security capabilities that allow you to verify the integrity of an artifact. Harbor supports content trust through integrations with Cosign and Notation.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 03:53:22", "type": "section_detail", "page_metadata": {"twitter:site": "@project_harbor", "ogTitle": "Harbor &ndash; Sign Artifacts with Cosign or Notation", "title": "\n      \nHarbor docs | Sign Artifacts with Cosign or Notation\n\n    ", "generator": "Hugo 0.74.0", "og:image:alt": "Harbor &ndash; Sign Artifacts with Cosign or Notation project logo", "twitter:creator": "@project_harbor", "ogLocale": "en_US", "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/sign-images/", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:type": ["documentation", "article"], "og:image:type": "image/png", "twitter:card": "summary", "ogSiteName": "Harbor", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/sign-images/", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "favicon": "https://goharbor.io/favicon.svg", "og:title": "Harbor &ndash; Sign Artifacts with Cosign or Notation", "og:locale": "en_US", "og:site_name": "Harbor", "scrapeId": "6b30ba55-4f79-4020-b636-1d213663bc59", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/sign-images", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/sign-images/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I generating a test key and self-signed certificate: in harbor-2-12-0?\n\nAssistant: To generating a test key and self-signed certificate: in harbor-2-12-0, here's what you do:\nUse notation `cert generate-test` to generate a test RSA key for signing artifacts, and a self-signed `X.509` test certificate for verifying artifacts. Please note the self-signed certificate should be used for testing or development purposes only. You should use CA-issued certificate in production.\n\n```shell\nnotation cert generate-test --default \"wabbit-networks.io\"\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/sign-images", "title": "Sign Artifacts with Cosign or Notation", "description": "Artifact signing and signature verification are critical security capabilities that allow you to verify the integrity of an artifact. Harbor supports content trust through integrations with Cosign and Notation.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 03:53:22", "type": "section_detail", "page_metadata": {"twitter:site": "@project_harbor", "ogTitle": "Harbor &ndash; Sign Artifacts with Cosign or Notation", "title": "\n      \nHarbor docs | Sign Artifacts with Cosign or Notation\n\n    ", "generator": "Hugo 0.74.0", "og:image:alt": "Harbor &ndash; Sign Artifacts with Cosign or Notation project logo", "twitter:creator": "@project_harbor", "ogLocale": "en_US", "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/sign-images/", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:type": ["documentation", "article"], "og:image:type": "image/png", "twitter:card": "summary", "ogSiteName": "Harbor", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/sign-images/", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "favicon": "https://goharbor.io/favicon.svg", "og:title": "Harbor &ndash; Sign Artifacts with Cosign or Notation", "og:locale": "en_US", "og:site_name": "Harbor", "scrapeId": "6b30ba55-4f79-4020-b636-1d213663bc59", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/sign-images", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/sign-images/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I authenticate to harbor registry in harbor-2-12-0?\n\nAssistant: To authenticate to harbor registry in harbor-2-12-0, here's what you do:\nTo authenticate with the Harbor registry, set the following environment variables:\n\n```shell\nexport NOTATION_USERNAME=\"YOUR_REGISTRY_USERNAME\"\nexport NOTATION_PASSWORD=\"YOUR_REGISTRY_PASSWORD\"\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/sign-images", "title": "Sign Artifacts with Cosign or Notation", "description": "Artifact signing and signature verification are critical security capabilities that allow you to verify the integrity of an artifact. Harbor supports content trust through integrations with Cosign and Notation.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 03:53:22", "type": "section_detail", "page_metadata": {"twitter:site": "@project_harbor", "ogTitle": "Harbor &ndash; Sign Artifacts with Cosign or Notation", "title": "\n      \nHarbor docs | Sign Artifacts with Cosign or Notation\n\n    ", "generator": "Hugo 0.74.0", "og:image:alt": "Harbor &ndash; Sign Artifacts with Cosign or Notation project logo", "twitter:creator": "@project_harbor", "ogLocale": "en_US", "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/sign-images/", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:type": ["documentation", "article"], "og:image:type": "image/png", "twitter:card": "summary", "ogSiteName": "Harbor", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/sign-images/", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "favicon": "https://goharbor.io/favicon.svg", "og:title": "Harbor &ndash; Sign Artifacts with Cosign or Notation", "og:locale": "en_US", "og:site_name": "Harbor", "scrapeId": "6b30ba55-4f79-4020-b636-1d213663bc59", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/sign-images", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/sign-images/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I sign an existing image in harbor in harbor-2-12-0?\n\nAssistant: To sign an existing image in harbor in harbor-2-12-0, here's what you do:\nAssuming you have configured HTTPS access and pushed an image to Harbor, you can use the `notation sign` command to sign the image.\n\n```shell\nnotation sign <harbor-domain>/<image-reference>\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/sign-images", "title": "Sign Artifacts with Cosign or Notation", "description": "Artifact signing and signature verification are critical security capabilities that allow you to verify the integrity of an artifact. Harbor supports content trust through integrations with Cosign and Notation.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 03:53:22", "type": "section_detail", "page_metadata": {"twitter:site": "@project_harbor", "ogTitle": "Harbor &ndash; Sign Artifacts with Cosign or Notation", "title": "\n      \nHarbor docs | Sign Artifacts with Cosign or Notation\n\n    ", "generator": "Hugo 0.74.0", "og:image:alt": "Harbor &ndash; Sign Artifacts with Cosign or Notation project logo", "twitter:creator": "@project_harbor", "ogLocale": "en_US", "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/sign-images/", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:type": ["documentation", "article"], "og:image:type": "image/png", "twitter:card": "summary", "ogSiteName": "Harbor", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/sign-images/", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "favicon": "https://goharbor.io/favicon.svg", "og:title": "Harbor &ndash; Sign Artifacts with Cosign or Notation", "og:locale": "en_US", "og:site_name": "Harbor", "scrapeId": "6b30ba55-4f79-4020-b636-1d213663bc59", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/sign-images", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/sign-images/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I create a trust policy to verify the image in harbor-2-12-0?\n\nAssistant: To create a trust policy to verify the image in harbor-2-12-0, here's what you do:\nTo verify the container image, configure the trust policy to specify trusted identities that sign the artifacts, and level of signature verification to use. For more details, see trust policy spec.\n\nCreate a JSON file with the following trust policy, for example:\n\n```shell\ncat <<EOF > ./trustpolicy.json\n{\n    \"version\": \"1.0\",\n    \"trustPolicies\": [\\\n        {\\\n            \"name\": \"wabbit-networks-images\",\\\n            \"registryScopes\": [ \"*\" ],\\\n            \"signatureVerification\": {\\\n                \"level\" : \"strict\"\\\n            },\\\n            \"trustStores\": [ \"ca:wabbit-networks.io\" ],\\\n            \"trustedIdentities\": [\\\n                \"*\"\\\n            ]\\\n        }\\\n    ]\n}\nEOF\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/sign-images", "title": "Sign Artifacts with Cosign or Notation", "description": "Artifact signing and signature verification are critical security capabilities that allow you to verify the integrity of an artifact. Harbor supports content trust through integrations with Cosign and Notation.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 03:53:22", "type": "section_detail", "page_metadata": {"twitter:site": "@project_harbor", "ogTitle": "Harbor &ndash; Sign Artifacts with Cosign or Notation", "title": "\n      \nHarbor docs | Sign Artifacts with Cosign or Notation\n\n    ", "generator": "Hugo 0.74.0", "og:image:alt": "Harbor &ndash; Sign Artifacts with Cosign or Notation project logo", "twitter:creator": "@project_harbor", "ogLocale": "en_US", "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/sign-images/", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:type": ["documentation", "article"], "og:image:type": "image/png", "twitter:card": "summary", "ogSiteName": "Harbor", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/sign-images/", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "favicon": "https://goharbor.io/favicon.svg", "og:title": "Harbor &ndash; Sign Artifacts with Cosign or Notation", "og:locale": "en_US", "og:site_name": "Harbor", "scrapeId": "6b30ba55-4f79-4020-b636-1d213663bc59", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/sign-images", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/sign-images/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I verify the image in harbor-2-12-0?\n\nAssistant: To verify the image in harbor-2-12-0, here's what you do:\nUse `notation verify` to verify signatures associated with the container image.\n\n```shell\nnotation verify <harbor-domain>/<image-reference>\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/sign-images", "title": "Sign Artifacts with Cosign or Notation", "description": "Artifact signing and signature verification are critical security capabilities that allow you to verify the integrity of an artifact. Harbor supports content trust through integrations with Cosign and Notation.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 03:53:22", "type": "section_detail", "page_metadata": {"twitter:site": "@project_harbor", "ogTitle": "Harbor &ndash; Sign Artifacts with Cosign or Notation", "title": "\n      \nHarbor docs | Sign Artifacts with Cosign or Notation\n\n    ", "generator": "Hugo 0.74.0", "og:image:alt": "Harbor &ndash; Sign Artifacts with Cosign or Notation project logo", "twitter:creator": "@project_harbor", "ogLocale": "en_US", "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/sign-images/", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:type": ["documentation", "article"], "og:image:type": "image/png", "twitter:card": "summary", "ogSiteName": "Harbor", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/sign-images/", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "favicon": "https://goharbor.io/favicon.svg", "og:title": "Harbor &ndash; Sign Artifacts with Cosign or Notation", "og:locale": "en_US", "og:site_name": "Harbor", "scrapeId": "6b30ba55-4f79-4020-b636-1d213663bc59", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/sign-images", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/sign-images/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you give me some code examples for Sign Artifacts with Cosign or Notation in harbor-2-12-0?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Sign an image with Cosign**:\n\n```yaml\ncosign sign --key cosign.key <harbor-instance>/<image/path>:<image-tag>\n```\n\nThis snippet shows you how to sign an image with cosign, which is an important aspect of sign artifacts with cosign or notation.\n\n**Generate a test key and self-signed certificate**:\n\n```yaml\nnotation cert generate-test --default \"wabbit-networks.io\"\n```\n\nThis snippet shows you how to generate a test key and self-signed certificate, which is an important aspect of sign artifacts with cosign or notation.\n\n**Authenticate to Harbor Registry**:\n\n```yaml\nexport NOTATION_USERNAME=\"YOUR_REGISTRY_USERNAME\"\nexport NOTATION_PASSWORD=\"YOUR_REGISTRY_PASSWORD\"\n```\n\nThis snippet shows you how to authenticate to harbor registry, which is an important aspect of sign artifacts with cosign or notation.\n\n**Sign an existing image in Harbor**:\n\n```yaml\nnotation sign <harbor-domain>/<image-reference>\n```\n\nThis snippet shows you how to sign an existing image in harbor, which is an important aspect of sign artifacts with cosign or notation.\n\n**Create a trust policy**:\n\n```yaml\ncat <<EOF > ./trustpolicy.json\n{\n    \"version\": \"1.0\",\n    \"trustPolicies\": [\\\n        {\\\n            \"name\": \"wabbit-networks-images\",\\\n            \"registryScopes\": [ \"*\" ],\\\n            \"signatureVerification\": {\\\n                \"level\" : \"strict\"\\\n            },\\\n            \"trustStores\": [ \"ca:wabbit-networks.io\" ],\\\n            \"trustedIdentities\": [\\\n                \"*\"\\\n            ]\\\n        }\\\n    ]\n}\nEOF\n```\n\nThis snippet shows you how to create a trust policy, which is an important aspect of sign artifacts with cosign or notation.\n\n", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/sign-images", "title": "Sign Artifacts with Cosign or Notation", "description": "Artifact signing and signature verification are critical security capabilities that allow you to verify the integrity of an artifact. Harbor supports content trust through integrations with Cosign and Notation.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 03:53:22", "type": "code_examples", "page_metadata": {"twitter:site": "@project_harbor", "ogTitle": "Harbor &ndash; Sign Artifacts with Cosign or Notation", "title": "\n      \nHarbor docs | Sign Artifacts with Cosign or Notation\n\n    ", "generator": "Hugo 0.74.0", "og:image:alt": "Harbor &ndash; Sign Artifacts with Cosign or Notation project logo", "twitter:creator": "@project_harbor", "ogLocale": "en_US", "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/sign-images/", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:type": ["documentation", "article"], "og:image:type": "image/png", "twitter:card": "summary", "ogSiteName": "Harbor", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/sign-images/", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "favicon": "https://goharbor.io/favicon.svg", "og:title": "Harbor &ndash; Sign Artifacts with Cosign or Notation", "og:locale": "en_US", "og:site_name": "Harbor", "scrapeId": "6b30ba55-4f79-4020-b636-1d213663bc59", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/sign-images", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/sign-images/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: What are some tips for using Sign Artifacts with Cosign or Notation in harbor-2-12-0 effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nEnsure you have Cosign installed and a private key generated before signing artifacts.\n\nUse CA-issued certificates in production environments instead of self-signed certificates.\n\nWhen deleting signatures, remember that all associated signatures will be deleted if the signed artifact is deleted.\n\nConfigure garbage collection carefully, as it does not remove signatures individually.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/sign-images", "title": "Sign Artifacts with Cosign or Notation", "description": "Artifact signing and signature verification are critical security capabilities that allow you to verify the integrity of an artifact. Harbor supports content trust through integrations with Cosign and Notation.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 03:53:22", "type": "best_practices", "page_metadata": {"twitter:site": "@project_harbor", "ogTitle": "Harbor &ndash; Sign Artifacts with Cosign or Notation", "title": "\n      \nHarbor docs | Sign Artifacts with Cosign or Notation\n\n    ", "generator": "Hugo 0.74.0", "og:image:alt": "Harbor &ndash; Sign Artifacts with Cosign or Notation project logo", "twitter:creator": "@project_harbor", "ogLocale": "en_US", "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/sign-images/", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:type": ["documentation", "article"], "og:image:type": "image/png", "twitter:card": "summary", "ogSiteName": "Harbor", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/sign-images/", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "favicon": "https://goharbor.io/favicon.svg", "og:title": "Harbor &ndash; Sign Artifacts with Cosign or Notation", "og:locale": "en_US", "og:site_name": "Harbor", "scrapeId": "6b30ba55-4f79-4020-b636-1d213663bc59", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/sign-images", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/sign-images/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you explain what View the Harbor REST API is in harbor-2-12-0?\n\nAssistant: Sure, I'd be happy to explain View the Harbor REST API in harbor-2-12-0.\n\n# View the Harbor REST API\n\nYou can view and test the Harbor REST API from your Harbor interface using the Swagger UI. This means that you can invoke all APIs through the Harbor interface.Here's a quick rundown of what this is about:\n\n## Access Harbor REST API thorough the interface\n\n1. Log in to Harbor and click the **Harbor API** button located at the bottom of the left side navigation menu in the Harbor interface. All APIs will be invoked with the current user’s authorization.\n\n![navigation bar](https://goharbor.io/docs/2.12.0/img/api-explorer-btn.png)\n\n## Access Harbor REST API directly\n\n1. Navigate to the Swagger page by using the IP address of your Harbor instance, `https://<harbor_ip>/devcenter-api-2.0`. For example: https://10.192.111.118/devcenter-api-2.0.\n2. Then click the **Authorize** button to give basic authentication to all APIs. All APIs will be invoked with the current user’s authorization.\n\n![authentication](https://goharbor.io/docs/2.12.0/img/authorize.png)\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/using-api-explorer", "title": "View the Harbor REST API", "description": "You can view and test the Harbor REST API from your Harbor interface using the Swagger UI. This means that you can invoke all APIs through the Harbor interface.", "has_code_examples": false, "has_best_practices": false, "section_count": 2, "timestamp": "2025-03-01 03:53:59", "type": "overview", "page_metadata": {"ogLocale": "en_US", "favicon": "https://goharbor.io/favicon.svg", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/using-api-explorer/", "og:image:alt": "Harbor &ndash; View the Harbor REST API project logo", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "title": "\n      \nHarbor docs | View the Harbor REST API\n\n    ", "og:type": ["documentation", "article"], "og:image:type": "image/png", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:title": "Harbor &ndash; View the Harbor REST API", "twitter:creator": "@project_harbor", "twitter:site": "@project_harbor", "ogSiteName": "Harbor", "og:site_name": "Harbor", "ogTitle": "Harbor &ndash; View the Harbor REST API", "og:locale": "en_US", "twitter:card": "summary", "generator": "Hugo 0.74.0", "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/using-api-explorer/", "scrapeId": "679fb702-b37a-4d56-b8ab-f0c5a155b52e", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/using-api-explorer", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/using-api-explorer/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I access harbor rest api thorough the interface in harbor-2-12-0?\n\nAssistant: To access harbor rest api thorough the interface in harbor-2-12-0, here's what you do:\n1. Log in to Harbor and click the **Harbor API** button located at the bottom of the left side navigation menu in the Harbor interface. All APIs will be invoked with the current user’s authorization.\n\n![navigation bar](https://goharbor.io/docs/2.12.0/img/api-explorer-btn.png).\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/using-api-explorer", "title": "View the Harbor REST API", "description": "You can view and test the Harbor REST API from your Harbor interface using the Swagger UI. This means that you can invoke all APIs through the Harbor interface.", "has_code_examples": false, "has_best_practices": false, "section_count": 2, "timestamp": "2025-03-01 03:53:59", "type": "section_detail", "page_metadata": {"ogLocale": "en_US", "favicon": "https://goharbor.io/favicon.svg", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/using-api-explorer/", "og:image:alt": "Harbor &ndash; View the Harbor REST API project logo", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "title": "\n      \nHarbor docs | View the Harbor REST API\n\n    ", "og:type": ["documentation", "article"], "og:image:type": "image/png", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:title": "Harbor &ndash; View the Harbor REST API", "twitter:creator": "@project_harbor", "twitter:site": "@project_harbor", "ogSiteName": "Harbor", "og:site_name": "Harbor", "ogTitle": "Harbor &ndash; View the Harbor REST API", "og:locale": "en_US", "twitter:card": "summary", "generator": "Hugo 0.74.0", "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/using-api-explorer/", "scrapeId": "679fb702-b37a-4d56-b8ab-f0c5a155b52e", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/using-api-explorer", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/using-api-explorer/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I access harbor rest api directly in harbor-2-12-0?\n\nAssistant: To access harbor rest api directly in harbor-2-12-0, here's what you do:\n1. Navigate to the Swagger page by using the IP address of your Harbor instance, `https://<harbor_ip>/devcenter-api-2.0`. For example: https://10.192.111.118/devcenter-api-2.0.\n2. Then click the **Authorize** button to give basic authentication to all APIs. All APIs will be invoked with the current user’s authorization.\n\n![authentication](https://goharbor.io/docs/2.12.0/img/authorize.png).\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/using-api-explorer", "title": "View the Harbor REST API", "description": "You can view and test the Harbor REST API from your Harbor interface using the Swagger UI. This means that you can invoke all APIs through the Harbor interface.", "has_code_examples": false, "has_best_practices": false, "section_count": 2, "timestamp": "2025-03-01 03:53:59", "type": "section_detail", "page_metadata": {"ogLocale": "en_US", "favicon": "https://goharbor.io/favicon.svg", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/using-api-explorer/", "og:image:alt": "Harbor &ndash; View the Harbor REST API project logo", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "title": "\n      \nHarbor docs | View the Harbor REST API\n\n    ", "og:type": ["documentation", "article"], "og:image:type": "image/png", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:title": "Harbor &ndash; View the Harbor REST API", "twitter:creator": "@project_harbor", "twitter:site": "@project_harbor", "ogSiteName": "Harbor", "og:site_name": "Harbor", "ogTitle": "Harbor &ndash; View the Harbor REST API", "og:locale": "en_US", "twitter:card": "summary", "generator": "Hugo 0.74.0", "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/using-api-explorer/", "scrapeId": "679fb702-b37a-4d56-b8ab-f0c5a155b52e", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/using-api-explorer", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/using-api-explorer/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you explain what Build Harbor from Source Code is in harbor-2-12-0?\n\nAssistant: Sure, I'd be happy to explain Build Harbor from Source Code in harbor-2-12-0.\n\n# Build Harbor from Source Code\n\nThis guide provides instructions for developers to build and run Harbor from source code.Here's a quick rundown of what this is about:\n\n## Step 1: Prepare for a build environment for Harbor\n\nHarbor is deployed as several Docker containers and most of the code is written in Go language. The build environment requires Docker, Docker Compose and golang development environment. Please install the below prerequisites:\n\n| Software | Required Version |\n| --- | --- |\n| docker | 17.05 + |\n| docker-compose | 1.18.0 + |\n| python | 2.7 + |\n| git | 1.9.1 + |\n| make | 3.81 + |\n| golang* | 1.15.6 + |\n\n\\*optional, required if you use your own Golang environment.\n\n## Step 2: Getting the source code\n\n```sh\ngit clone https://github.com/goharbor/harbor\n```\n\n## Step 3: Building and installing Harbor\n\n### Configuration\n\nCopy the file **make/harbor.yml.tmpl** to **make/harbor.yml**, and make necessary configuration changes such as hostname, admin password and mail server. Refer to [Harbor Installation and Configuration](https://goharbor.io/docs/2.12.0/install-config/) for more info.\n\n```sh\ncd harbor\nvi make/harbor.yml\n```\n\n### Compiling and Running\n\nYou can compile the code by one of the two approaches:\n\n#### I. Build with official Golang image\n\n- Build, install and bring up Harbor:\n\n```sh\nmake install COMPILETAG=compile_golangimage\n```\n\n#### II. Compile code with your own Golang environment, then build Harbor\n\n- Move source code to `$GOPATH`:\n\n```sh\nmkdir $GOPATH/src/github.com/goharbor/\ncd ..\nmv harbor $GOPATH/src/github.com/goharbor/.\n```\n\n- Build, install and run Harbor:\n\n```sh\ncd $GOPATH/src/github.com/goharbor/harbor\n$ make install\n```\n\n### Verify your installation\n\nIf everything works properly, you will see this message:\n\n```sh\n...\nStart complete. You can visit harbor now.\n```\n\nRefer to [Reconfigure Harbor and Manage the Harbor Lifecycle](https://goharbor.io/docs/2.12.0/install-config/reconfigure-manage-lifecycle/) for more information about managing your Harbor instance.\n\n## Appendix\n\n- Using the Makefile\n\nThe `Makefile` contains these configurable parameters:\n\n| Variable | Description |\n| --- | --- |\n| BASEIMAGE | Container base image, default: photon |\n| DEVFLAG | Build model flag, default: dev |\n| COMPILETAG | Compile model flag, default: compile_normal (local golang build) |\n| TRIVYFLAG | Trivy mode flag, default: false |\n| HTTPPROXY | NPM http proxy for Clarity UI builder |\n| REGISTRYSERVER | Remote registry server IP address |\n| REGISTRYUSER | Remote registry server user name |\n| REGISTRYPASSWORD | Remote registry server user password |\n| REGISTRYPROJECTNAME | Project name on remote registry server |\n| VERSIONTAG | Harbor images tag, default: dev |\n| PKGVERSIONTAG | Harbor online and offline version tag, default:dev |\n\n- Predefined targets:\n\n| Target | Description |\n| --- | --- |\n| all | prepare env, compile binaries, build images and install images |\n| prepare | prepare env |\n| compile | compile ui and jobservice code |\n| compile_portal | compile portal code |\n| compile_ui | compile ui binary |\n| compile_jobservice | compile jobservice binary |\n| build | build Harbor docker images (default: using build_photon) |\n| build_photon | build Harbor docker images from Photon OS base image |\n| install | compile binaries, build images, prepare specific version of compose file and startup Harbor instance |\n| start | startup Harbor instance |\n| down | shutdown Harbor instance |\n| package_online | prepare online install package |\n| package_offline | prepare offline install package |\n| pushimage | push Harbor images to specific registry server |\n| cleanall | remove binary, Harbor images, specific version docker-compose file, specific version tag and online/offline install package |\n| cleanbinary | remove ui and jobservice binary |\n| cleanimage | remove Harbor images |\n| cleandockercomposefile | remove specific version docker-compose |\n| cleanversiontag | remove specific version tag |\n| cleanpackage | remove online/offline install package |\n\n#### EXAMPLE:\n\n#### Push Harbor images to specific registry server\n\n```sh\nmake pushimage -e DEVFLAG=false REGISTRYSERVER=[$SERVERADDRESS] REGISTRYUSER=[$USERNAME] REGISTRYPASSWORD=[$PASSWORD] REGISTRYPROJECTNAME=[$PROJECTNAME]\n```\n\n**Note**: need to add “/” at the end of REGISTRYSERVER. If REGISTRYSERVER is not set, images will be pushed directly to Docker Hub.\n\n```sh\nmake pushimage -e DEVFLAG=false REGISTRYUSER=[$USERNAME] REGISTRYPASSWORD=[$PASSWORD] REGISTRYPROJECTNAME=[$PROJECTNAME]\n```\n\n#### Clean up binaries and images of a specific version\n\n```sh\nmake clean -e VERSIONTAG=[TAG]\n```\n\nIf new code has been added to Github, the git commit TAG will change. Better use this command to clean up images and files of the previous TAG.\n\n#### By default, the make process creates a development build. To create a release build of Harbor, set the below flag to false.\n\n```sh\nmake XXXX -e DEVFLAG=false\n```\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/compile-guide", "title": "Build Harbor from Source Code", "description": "This guide provides instructions for developers to build and run Harbor from source code.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:54:37", "type": "overview", "page_metadata": {"generator": "Hugo 0.74.0", "og:locale": "en_US", "ogLocale": "en_US", "og:title": "Harbor &ndash; Build Harbor from Source Code", "twitter:card": "summary", "twitter:site": "@project_harbor", "twitter:creator": "@project_harbor", "og:site_name": "Harbor", "og:image:alt": "Harbor &ndash; Build Harbor from Source Code project logo", "ogTitle": "Harbor &ndash; Build Harbor from Source Code", "title": "\n      \nHarbor docs | Build Harbor from Source Code\n\n    ", "og:type": ["documentation", "article"], "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/compile-guide/", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "favicon": "https://goharbor.io/favicon.svg", "ogUrl": "https://goharbor.io/docs/2.12.0/build-customize-contribute/compile-guide/", "ogSiteName": "Harbor", "og:image:type": "image/png", "scrapeId": "8a61c470-977a-4a44-809c-319bffff8f98", "sourceURL": "https://goharbor.io/docs/2.12.0/build-customize-contribute/compile-guide", "url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/compile-guide/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I step 1: prepare for a build environment for harbor in harbor-2-12-0?\n\nAssistant: To step 1: prepare for a build environment for harbor in harbor-2-12-0, here's what you do:\nHarbor is deployed as several Docker containers and most of the code is written in Go language. The build environment requires Docker, Docker Compose and golang development environment. Please install the below prerequisites:\n\n| Software | Required Version |\n| --- | --- |\n| docker | 17.05 + |\n| docker-compose | 1.18.0 + |\n| python | 2.7 + |\n| git | 1.9.1 + |\n| make | 3.81 + |\n| golang* | 1.15.6 + |\n\n\\*optional, required if you use your own Golang environment..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/compile-guide", "title": "Build Harbor from Source Code", "description": "This guide provides instructions for developers to build and run Harbor from source code.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:54:37", "type": "section_detail", "page_metadata": {"generator": "Hugo 0.74.0", "og:locale": "en_US", "ogLocale": "en_US", "og:title": "Harbor &ndash; Build Harbor from Source Code", "twitter:card": "summary", "twitter:site": "@project_harbor", "twitter:creator": "@project_harbor", "og:site_name": "Harbor", "og:image:alt": "Harbor &ndash; Build Harbor from Source Code project logo", "ogTitle": "Harbor &ndash; Build Harbor from Source Code", "title": "\n      \nHarbor docs | Build Harbor from Source Code\n\n    ", "og:type": ["documentation", "article"], "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/compile-guide/", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "favicon": "https://goharbor.io/favicon.svg", "ogUrl": "https://goharbor.io/docs/2.12.0/build-customize-contribute/compile-guide/", "ogSiteName": "Harbor", "og:image:type": "image/png", "scrapeId": "8a61c470-977a-4a44-809c-319bffff8f98", "sourceURL": "https://goharbor.io/docs/2.12.0/build-customize-contribute/compile-guide", "url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/compile-guide/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I step 2: getting the source code in harbor-2-12-0?\n\nAssistant: To step 2: getting the source code in harbor-2-12-0, here's what you do:\n```sh\ngit clone https://github.com/goharbor/harbor\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/compile-guide", "title": "Build Harbor from Source Code", "description": "This guide provides instructions for developers to build and run Harbor from source code.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:54:37", "type": "section_detail", "page_metadata": {"generator": "Hugo 0.74.0", "og:locale": "en_US", "ogLocale": "en_US", "og:title": "Harbor &ndash; Build Harbor from Source Code", "twitter:card": "summary", "twitter:site": "@project_harbor", "twitter:creator": "@project_harbor", "og:site_name": "Harbor", "og:image:alt": "Harbor &ndash; Build Harbor from Source Code project logo", "ogTitle": "Harbor &ndash; Build Harbor from Source Code", "title": "\n      \nHarbor docs | Build Harbor from Source Code\n\n    ", "og:type": ["documentation", "article"], "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/compile-guide/", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "favicon": "https://goharbor.io/favicon.svg", "ogUrl": "https://goharbor.io/docs/2.12.0/build-customize-contribute/compile-guide/", "ogSiteName": "Harbor", "og:image:type": "image/png", "scrapeId": "8a61c470-977a-4a44-809c-319bffff8f98", "sourceURL": "https://goharbor.io/docs/2.12.0/build-customize-contribute/compile-guide", "url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/compile-guide/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I step 3: building and installing harbor in harbor-2-12-0?\n\nAssistant: To step 3: building and installing harbor in harbor-2-12-0, here's what you do:\n### Configuration\n\nCopy the file **make/harbor.yml.tmpl** to **make/harbor.yml**, and make necessary configuration changes such as hostname, admin password and mail server. Refer to [Harbor Installation and Configuration](https://goharbor.io/docs/2.12.0/install-config/) for more info.\n\n```sh\ncd harbor\nvi make/harbor.yml\n```\n\n### Compiling and Running\n\nYou can compile the code by one of the two approaches:\n\n#### I. Build with official Golang image\n\n- Build, install and bring up Harbor:\n\n```sh\nmake install COMPILETAG=compile_golangimage\n```\n\n#### II. Compile code with your own Golang environment, then build Harbor\n\n- Move source code to `$GOPATH`:\n\n```sh\nmkdir $GOPATH/src/github.com/goharbor/\ncd ..\nmv harbor $GOPATH/src/github.com/goharbor/.\n```\n\n- Build, install and run Harbor:\n\n```sh\ncd $GOPATH/src/github.com/goharbor/harbor\n$ make install\n```\n\n### Verify your installation\n\nIf everything works properly, you will see this message:\n\n```sh\n...\nStart complete. You can visit harbor now.\n```\n\nRefer to [Reconfigure Harbor and Manage the Harbor Lifecycle](https://goharbor.io/docs/2.12.0/install-config/reconfigure-manage-lifecycle/) for more information about managing your Harbor instance..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/compile-guide", "title": "Build Harbor from Source Code", "description": "This guide provides instructions for developers to build and run Harbor from source code.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:54:37", "type": "section_detail", "page_metadata": {"generator": "Hugo 0.74.0", "og:locale": "en_US", "ogLocale": "en_US", "og:title": "Harbor &ndash; Build Harbor from Source Code", "twitter:card": "summary", "twitter:site": "@project_harbor", "twitter:creator": "@project_harbor", "og:site_name": "Harbor", "og:image:alt": "Harbor &ndash; Build Harbor from Source Code project logo", "ogTitle": "Harbor &ndash; Build Harbor from Source Code", "title": "\n      \nHarbor docs | Build Harbor from Source Code\n\n    ", "og:type": ["documentation", "article"], "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/compile-guide/", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "favicon": "https://goharbor.io/favicon.svg", "ogUrl": "https://goharbor.io/docs/2.12.0/build-customize-contribute/compile-guide/", "ogSiteName": "Harbor", "og:image:type": "image/png", "scrapeId": "8a61c470-977a-4a44-809c-319bffff8f98", "sourceURL": "https://goharbor.io/docs/2.12.0/build-customize-contribute/compile-guide", "url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/compile-guide/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I appendix in harbor-2-12-0?\n\nAssistant: To appendix in harbor-2-12-0, here's what you do:\n- Using the Makefile\n\nThe `Makefile` contains these configurable parameters:\n\n| Variable | Description |\n| --- | --- |\n| BASEIMAGE | Container base image, default: photon |\n| DEVFLAG | Build model flag, default: dev |\n| COMPILETAG | Compile model flag, default: compile_normal (local golang build) |\n| TRIVYFLAG | Trivy mode flag, default: false |\n| HTTPPROXY | NPM http proxy for Clarity UI builder |\n| REGISTRYSERVER | Remote registry server IP address |\n| REGISTRYUSER | Remote registry server user name |\n| REGISTRYPASSWORD | Remote registry server user password |\n| REGISTRYPROJECTNAME | Project name on remote registry server |\n| VERSIONTAG | Harbor images tag, default: dev |\n| PKGVERSIONTAG | Harbor online and offline version tag, default:dev |\n\n- Predefined targets:\n\n| Target | Description |\n| --- | --- |\n| all | prepare env, compile binaries, build images and install images |\n| prepare | prepare env |\n| compile | compile ui and jobservice code |\n| compile_portal | compile portal code |\n| compile_ui | compile ui binary |\n| compile_jobservice | compile jobservice binary |\n| build | build Harbor docker images (default: using build_photon) |\n| build_photon | build Harbor docker images from Photon OS base image |\n| install | compile binaries, build images, prepare specific version of compose file and startup Harbor instance |\n| start | startup Harbor instance |\n| down | shutdown Harbor instance |\n| package_online | prepare online install package |\n| package_offline | prepare offline install package |\n| pushimage | push Harbor images to specific registry server |\n| cleanall | remove binary, Harbor images, specific version docker-compose file, specific version tag and online/offline install package |\n| cleanbinary | remove ui and jobservice binary |\n| cleanimage | remove Harbor images |\n| cleandockercomposefile | remove specific version docker-compose |\n| cleanversiontag | remove specific version tag |\n| cleanpackage | remove online/offline install package |\n\n#### EXAMPLE:\n\n#### Push Harbor images to specific registry server\n\n```sh\nmake pushimage -e DEVFLAG=false REGISTRYSERVER=[$SERVERADDRESS] REGISTRYUSER=[$USERNAME] REGISTRYPASSWORD=[$PASSWORD] REGISTRYPROJECTNAME=[$PROJECTNAME]\n```\n\n**Note**: need to add “/” at the end of REGISTRYSERVER. If REGISTRYSERVER is not set, images will be pushed directly to Docker Hub.\n\n```sh\nmake pushimage -e DEVFLAG=false REGISTRYUSER=[$USERNAME] REGISTRYPASSWORD=[$PASSWORD] REGISTRYPROJECTNAME=[$PROJECTNAME]\n```\n\n#### Clean up binaries and images of a specific version\n\n```sh\nmake clean -e VERSIONTAG=[TAG]\n```\n\nIf new code has been added to Github, the git commit TAG will change. Better use this command to clean up images and files of the previous TAG.\n\n#### By default, the make process creates a development build. To create a release build of Harbor, set the below flag to false.\n\n```sh\nmake XXXX -e DEVFLAG=false\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/compile-guide", "title": "Build Harbor from Source Code", "description": "This guide provides instructions for developers to build and run Harbor from source code.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:54:37", "type": "section_detail", "page_metadata": {"generator": "Hugo 0.74.0", "og:locale": "en_US", "ogLocale": "en_US", "og:title": "Harbor &ndash; Build Harbor from Source Code", "twitter:card": "summary", "twitter:site": "@project_harbor", "twitter:creator": "@project_harbor", "og:site_name": "Harbor", "og:image:alt": "Harbor &ndash; Build Harbor from Source Code project logo", "ogTitle": "Harbor &ndash; Build Harbor from Source Code", "title": "\n      \nHarbor docs | Build Harbor from Source Code\n\n    ", "og:type": ["documentation", "article"], "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/compile-guide/", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "favicon": "https://goharbor.io/favicon.svg", "ogUrl": "https://goharbor.io/docs/2.12.0/build-customize-contribute/compile-guide/", "ogSiteName": "Harbor", "og:image:type": "image/png", "scrapeId": "8a61c470-977a-4a44-809c-319bffff8f98", "sourceURL": "https://goharbor.io/docs/2.12.0/build-customize-contribute/compile-guide", "url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/compile-guide/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you give me some code examples for Build Harbor from Source Code in harbor-2-12-0?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Getting the source code**:\n\n```yaml\ngit clone https://github.com/goharbor/harbor\n```\n\nThis snippet shows you how to getting the source code, which is an important aspect of build harbor from source code.\n\n**Configuration**:\n\n```yaml\ncd harbor\nvi make/harbor.yml\n```\n\nThis snippet shows you how to configuration, which is an important aspect of build harbor from source code.\n\n**Build with official Golang image**:\n\n```yaml\nmake install COMPILETAG=compile_golangimage\n```\n\nThis snippet shows you how to build with official golang image, which is an important aspect of build harbor from source code.\n\n**Move source code to $GOPATH**:\n\n```yaml\nmkdir $GOPATH/src/github.com/goharbor/\ncd ..\nmv harbor $GOPATH/src/github.com/goharbor/.\n```\n\nThis snippet shows you how to move source code to $gopath, which is an important aspect of build harbor from source code.\n\n**Build, install and run Harbor**:\n\n```yaml\ncd $GOPATH/src/github.com/goharbor/harbor\n$ make install\n```\n\nThis snippet shows you how to build, install and run harbor, which is an important aspect of build harbor from source code.\n\n**Verify your installation**:\n\n```yaml\n...\nStart complete. You can visit harbor now.\n```\n\nThis snippet shows you how to verify your installation, which is an important aspect of build harbor from source code.\n\n**Push Harbor images to specific registry server**:\n\n```yaml\nmake pushimage -e DEVFLAG=false REGISTRYSERVER=[$SERVERADDRESS] REGISTRYUSER=[$USERNAME] REGISTRYPASSWORD=[$PASSWORD] REGISTRYPROJECTNAME=[$PROJECTNAME]\n```\n\nThis snippet shows you how to push harbor images to specific registry server, which is an important aspect of build harbor from source code.\n\n**Clean up binaries and images of a specific version**:\n\n```yaml\nmake clean -e VERSIONTAG=[TAG]\n```\n\nThis snippet shows you how to clean up binaries and images of a specific version, which is an important aspect of build harbor from source code.\n\n**Create a release build of Harbor**:\n\n```yaml\nmake XXXX -e DEVFLAG=false\n```\n\nThis snippet shows you how to create a release build of harbor, which is an important aspect of build harbor from source code.\n\n", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/compile-guide", "title": "Build Harbor from Source Code", "description": "This guide provides instructions for developers to build and run Harbor from source code.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:54:37", "type": "code_examples", "page_metadata": {"generator": "Hugo 0.74.0", "og:locale": "en_US", "ogLocale": "en_US", "og:title": "Harbor &ndash; Build Harbor from Source Code", "twitter:card": "summary", "twitter:site": "@project_harbor", "twitter:creator": "@project_harbor", "og:site_name": "Harbor", "og:image:alt": "Harbor &ndash; Build Harbor from Source Code project logo", "ogTitle": "Harbor &ndash; Build Harbor from Source Code", "title": "\n      \nHarbor docs | Build Harbor from Source Code\n\n    ", "og:type": ["documentation", "article"], "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/compile-guide/", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "favicon": "https://goharbor.io/favicon.svg", "ogUrl": "https://goharbor.io/docs/2.12.0/build-customize-contribute/compile-guide/", "ogSiteName": "Harbor", "og:image:type": "image/png", "scrapeId": "8a61c470-977a-4a44-809c-319bffff8f98", "sourceURL": "https://goharbor.io/docs/2.12.0/build-customize-contribute/compile-guide", "url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/compile-guide/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: What are some tips for using Build Harbor from Source Code in harbor-2-12-0 effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nIf REGISTRYSERVER is not set, images will be pushed directly to Docker Hub.\n\nBetter use the command to clean up images and files of the previous TAG if new code has been added to Github.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/compile-guide", "title": "Build Harbor from Source Code", "description": "This guide provides instructions for developers to build and run Harbor from source code.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:54:37", "type": "best_practices", "page_metadata": {"generator": "Hugo 0.74.0", "og:locale": "en_US", "ogLocale": "en_US", "og:title": "Harbor &ndash; Build Harbor from Source Code", "twitter:card": "summary", "twitter:site": "@project_harbor", "twitter:creator": "@project_harbor", "og:site_name": "Harbor", "og:image:alt": "Harbor &ndash; Build Harbor from Source Code project logo", "ogTitle": "Harbor &ndash; Build Harbor from Source Code", "title": "\n      \nHarbor docs | Build Harbor from Source Code\n\n    ", "og:type": ["documentation", "article"], "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/compile-guide/", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "favicon": "https://goharbor.io/favicon.svg", "ogUrl": "https://goharbor.io/docs/2.12.0/build-customize-contribute/compile-guide/", "ogSiteName": "Harbor", "og:image:type": "image/png", "scrapeId": "8a61c470-977a-4a44-809c-319bffff8f98", "sourceURL": "https://goharbor.io/docs/2.12.0/build-customize-contribute/compile-guide", "url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/compile-guide/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you explain what Customize the Look and Feel of Harbor is in harbor-2-12-0?\n\nAssistant: Sure, I'd be happy to explain Customize the Look and Feel of Harbor in harbor-2-12-0.\n\n# Customize the Look and Feel of Harbor\n\nThe primary look & feel of Harbor supports to be customized with several simple steps. All the relevant customization in configurations are saved in the `setting.json` file under `$HARBOR_DIR/src/portal/src` folder with `json` format and will be loaded when Harbor is launched.Here's a quick rundown of what this is about:\n\n## Configure\n\nOpen the `setting.json` file, you’ll see the default content as shown below:\n\n```json\n{\n  \"headerBgColor\": {\n    \"darkMode\": \"\",\n    \"lightMode\": \"\"\n  },\n  \"loginBgImg\": \"\",\n  \"loginTitle\": \"\",\n  \"product\": {\n    \"name\": \"\",\n    \"logo\": \"\",\n    \"introduction\": \"\"\n  }\n}\n```\n\nChange the values of configuration if you want to override the default style to your own. Here are references:\n\n- **headerBgColor**: The background color of the page header, support either HEX or RGB value. e.g: `#004a70` and `rgb(210,110,235)`.\n\n  - **darkMode**: The background color of the page header for the dark mode.\n  - **lightMode**: The background color of the page header for the light mode.\n- **loginBgImg**: The name path of the background image displayed in the login page, e.g: ‘login_bg.png’. The image file should be put in the `images` folder. Suggest the size of this image should be bigger than 800px*600px.\n- **loginTitle**: The full product title displayed in the login page.\n- **Product**: Contain metadata / description of the product.\n\n  - **name**: The name of the product.\n  - **logo**: The name path of the product logo, e.g: ‘logo.png’. The image file should be put in the `images` folder.\n  - **introductions**: The introduction about the product, which are displayed in the `About` dialog.\n\n## Build\n\nOnce the `setting.json` configurations has been updated, re-[build](https://goharbor.io/docs/2.12.0/build-customize-contribute/customize-look-feel/#configure) your product to apply the new changes.\n\n## On this page\n\nContributing\n\n[Page source](https://github.com/goharbor/website/blob/release-2.12.0/docs/build-customize-contribute/customize-look-feel.md) [Create issue](https://github.com/goharbor/harbor/issues)\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/customize-look-feel", "title": "Customize the Look and Feel of Harbor", "description": "The primary look & feel of Harbor supports to be customized with several simple steps. All the relevant customization in configurations are saved in the `setting.json` file under `$HARBOR_DIR/src/portal/src` folder with `json` format and will be loaded when Harbor is launched.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:55:00", "type": "overview", "page_metadata": {"favicon": "https://goharbor.io/favicon.svg", "og:url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/customize-look-feel/", "ogLocale": "en_US", "ogUrl": "https://goharbor.io/docs/2.12.0/build-customize-contribute/customize-look-feel/", "og:title": "Harbor &ndash; Customize the Look and Feel of Harbor", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:locale": "en_US", "twitter:card": "summary", "twitter:site": "@project_harbor", "og:type": ["documentation", "article"], "og:image:alt": "Harbor &ndash; Customize the Look and Feel of Harbor project logo", "ogTitle": "Harbor &ndash; Customize the Look and Feel of Harbor", "og:site_name": "Harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "generator": "Hugo 0.74.0", "title": "\n      \nHarbor docs | Customize the Look and Feel of Harbor\n\n    ", "og:image:type": "image/png", "ogSiteName": "Harbor", "twitter:creator": "@project_harbor", "scrapeId": "94a8de27-9bce-44e5-a835-5de0bb92bc7b", "sourceURL": "https://goharbor.io/docs/2.12.0/build-customize-contribute/customize-look-feel", "url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/customize-look-feel/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I configure in harbor-2-12-0?\n\nAssistant: To configure in harbor-2-12-0, here's what you do:\nOpen the `setting.json` file, you’ll see the default content as shown below:\n\n```json\n{\n  \"headerBgColor\": {\n    \"darkMode\": \"\",\n    \"lightMode\": \"\"\n  },\n  \"loginBgImg\": \"\",\n  \"loginTitle\": \"\",\n  \"product\": {\n    \"name\": \"\",\n    \"logo\": \"\",\n    \"introduction\": \"\"\n  }\n}\n```\n\nChange the values of configuration if you want to override the default style to your own. Here are references:\n\n- **headerBgColor**: The background color of the page header, support either HEX or RGB value. e.g: `#004a70` and `rgb(210,110,235)`.\n\n  - **darkMode**: The background color of the page header for the dark mode.\n  - **lightMode**: The background color of the page header for the light mode.\n- **loginBgImg**: The name path of the background image displayed in the login page, e.g: ‘login_bg.png’. The image file should be put in the `images` folder. Suggest the size of this image should be bigger than 800px*600px.\n- **loginTitle**: The full product title displayed in the login page.\n- **Product**: Contain metadata / description of the product.\n\n  - **name**: The name of the product.\n  - **logo**: The name path of the product logo, e.g: ‘logo.png’. The image file should be put in the `images` folder.\n  - **introductions**: The introduction about the product, which are displayed in the `About` dialog..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/customize-look-feel", "title": "Customize the Look and Feel of Harbor", "description": "The primary look & feel of Harbor supports to be customized with several simple steps. All the relevant customization in configurations are saved in the `setting.json` file under `$HARBOR_DIR/src/portal/src` folder with `json` format and will be loaded when Harbor is launched.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:55:00", "type": "section_detail", "page_metadata": {"favicon": "https://goharbor.io/favicon.svg", "og:url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/customize-look-feel/", "ogLocale": "en_US", "ogUrl": "https://goharbor.io/docs/2.12.0/build-customize-contribute/customize-look-feel/", "og:title": "Harbor &ndash; Customize the Look and Feel of Harbor", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:locale": "en_US", "twitter:card": "summary", "twitter:site": "@project_harbor", "og:type": ["documentation", "article"], "og:image:alt": "Harbor &ndash; Customize the Look and Feel of Harbor project logo", "ogTitle": "Harbor &ndash; Customize the Look and Feel of Harbor", "og:site_name": "Harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "generator": "Hugo 0.74.0", "title": "\n      \nHarbor docs | Customize the Look and Feel of Harbor\n\n    ", "og:image:type": "image/png", "ogSiteName": "Harbor", "twitter:creator": "@project_harbor", "scrapeId": "94a8de27-9bce-44e5-a835-5de0bb92bc7b", "sourceURL": "https://goharbor.io/docs/2.12.0/build-customize-contribute/customize-look-feel", "url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/customize-look-feel/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I build in harbor-2-12-0?\n\nAssistant: To build in harbor-2-12-0, here's what you do:\nOnce the `setting.json` configurations has been updated, re-[build](https://goharbor.io/docs/2.12.0/build-customize-contribute/customize-look-feel/#configure) your product to apply the new changes..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/customize-look-feel", "title": "Customize the Look and Feel of Harbor", "description": "The primary look & feel of Harbor supports to be customized with several simple steps. All the relevant customization in configurations are saved in the `setting.json` file under `$HARBOR_DIR/src/portal/src` folder with `json` format and will be loaded when Harbor is launched.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:55:00", "type": "section_detail", "page_metadata": {"favicon": "https://goharbor.io/favicon.svg", "og:url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/customize-look-feel/", "ogLocale": "en_US", "ogUrl": "https://goharbor.io/docs/2.12.0/build-customize-contribute/customize-look-feel/", "og:title": "Harbor &ndash; Customize the Look and Feel of Harbor", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:locale": "en_US", "twitter:card": "summary", "twitter:site": "@project_harbor", "og:type": ["documentation", "article"], "og:image:alt": "Harbor &ndash; Customize the Look and Feel of Harbor project logo", "ogTitle": "Harbor &ndash; Customize the Look and Feel of Harbor", "og:site_name": "Harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "generator": "Hugo 0.74.0", "title": "\n      \nHarbor docs | Customize the Look and Feel of Harbor\n\n    ", "og:image:type": "image/png", "ogSiteName": "Harbor", "twitter:creator": "@project_harbor", "scrapeId": "94a8de27-9bce-44e5-a835-5de0bb92bc7b", "sourceURL": "https://goharbor.io/docs/2.12.0/build-customize-contribute/customize-look-feel", "url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/customize-look-feel/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I on this page in harbor-2-12-0?\n\nAssistant: To on this page in harbor-2-12-0, here's what you do:\nContributing\n\n[Page source](https://github.com/goharbor/website/blob/release-2.12.0/docs/build-customize-contribute/customize-look-feel.md) [Create issue](https://github.com/goharbor/harbor/issues).\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/customize-look-feel", "title": "Customize the Look and Feel of Harbor", "description": "The primary look & feel of Harbor supports to be customized with several simple steps. All the relevant customization in configurations are saved in the `setting.json` file under `$HARBOR_DIR/src/portal/src` folder with `json` format and will be loaded when Harbor is launched.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:55:00", "type": "section_detail", "page_metadata": {"favicon": "https://goharbor.io/favicon.svg", "og:url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/customize-look-feel/", "ogLocale": "en_US", "ogUrl": "https://goharbor.io/docs/2.12.0/build-customize-contribute/customize-look-feel/", "og:title": "Harbor &ndash; Customize the Look and Feel of Harbor", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:locale": "en_US", "twitter:card": "summary", "twitter:site": "@project_harbor", "og:type": ["documentation", "article"], "og:image:alt": "Harbor &ndash; Customize the Look and Feel of Harbor project logo", "ogTitle": "Harbor &ndash; Customize the Look and Feel of Harbor", "og:site_name": "Harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "generator": "Hugo 0.74.0", "title": "\n      \nHarbor docs | Customize the Look and Feel of Harbor\n\n    ", "og:image:type": "image/png", "ogSiteName": "Harbor", "twitter:creator": "@project_harbor", "scrapeId": "94a8de27-9bce-44e5-a835-5de0bb92bc7b", "sourceURL": "https://goharbor.io/docs/2.12.0/build-customize-contribute/customize-look-feel", "url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/customize-look-feel/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you give me some code examples for Customize the Look and Feel of Harbor in harbor-2-12-0?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Default setting.json content**:\n\n```yaml\n{\n  \"headerBgColor\": {\n    \"darkMode\": \"\",\n    \"lightMode\": \"\"\n  },\n  \"loginBgImg\": \"\",\n  \"loginTitle\": \"\",\n  \"product\": {\n    \"name\": \"\",\n    \"logo\": \"\",\n    \"introduction\": \"\"\n  }\n}\n```\n\nThis snippet shows you how to default setting.json content, which is an important aspect of customize the look and feel of harbor.\n\n", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/customize-look-feel", "title": "Customize the Look and Feel of Harbor", "description": "The primary look & feel of Harbor supports to be customized with several simple steps. All the relevant customization in configurations are saved in the `setting.json` file under `$HARBOR_DIR/src/portal/src` folder with `json` format and will be loaded when Harbor is launched.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:55:00", "type": "code_examples", "page_metadata": {"favicon": "https://goharbor.io/favicon.svg", "og:url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/customize-look-feel/", "ogLocale": "en_US", "ogUrl": "https://goharbor.io/docs/2.12.0/build-customize-contribute/customize-look-feel/", "og:title": "Harbor &ndash; Customize the Look and Feel of Harbor", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:locale": "en_US", "twitter:card": "summary", "twitter:site": "@project_harbor", "og:type": ["documentation", "article"], "og:image:alt": "Harbor &ndash; Customize the Look and Feel of Harbor project logo", "ogTitle": "Harbor &ndash; Customize the Look and Feel of Harbor", "og:site_name": "Harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "generator": "Hugo 0.74.0", "title": "\n      \nHarbor docs | Customize the Look and Feel of Harbor\n\n    ", "og:image:type": "image/png", "ogSiteName": "Harbor", "twitter:creator": "@project_harbor", "scrapeId": "94a8de27-9bce-44e5-a835-5de0bb92bc7b", "sourceURL": "https://goharbor.io/docs/2.12.0/build-customize-contribute/customize-look-feel", "url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/customize-look-feel/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: What are some tips for using Customize the Look and Feel of Harbor in harbor-2-12-0 effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nThe background color of the page header supports either HEX or RGB value.\n\nThe background image for the login page should be larger than 800px*600px.\n\nEnsure that the product logo and background image are placed in the `images` folder.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/customize-look-feel", "title": "Customize the Look and Feel of Harbor", "description": "The primary look & feel of Harbor supports to be customized with several simple steps. All the relevant customization in configurations are saved in the `setting.json` file under `$HARBOR_DIR/src/portal/src` folder with `json` format and will be loaded when Harbor is launched.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:55:00", "type": "best_practices", "page_metadata": {"favicon": "https://goharbor.io/favicon.svg", "og:url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/customize-look-feel/", "ogLocale": "en_US", "ogUrl": "https://goharbor.io/docs/2.12.0/build-customize-contribute/customize-look-feel/", "og:title": "Harbor &ndash; Customize the Look and Feel of Harbor", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:locale": "en_US", "twitter:card": "summary", "twitter:site": "@project_harbor", "og:type": ["documentation", "article"], "og:image:alt": "Harbor &ndash; Customize the Look and Feel of Harbor project logo", "ogTitle": "Harbor &ndash; Customize the Look and Feel of Harbor", "og:site_name": "Harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "generator": "Hugo 0.74.0", "title": "\n      \nHarbor docs | Customize the Look and Feel of Harbor\n\n    ", "og:image:type": "image/png", "ogSiteName": "Harbor", "twitter:creator": "@project_harbor", "scrapeId": "94a8de27-9bce-44e5-a835-5de0bb92bc7b", "sourceURL": "https://goharbor.io/docs/2.12.0/build-customize-contribute/customize-look-feel", "url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/customize-look-feel/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you explain what Developing for Internationalization is in harbor-2-12-0?\n\nAssistant: Sure, I'd be happy to explain Developing for Internationalization in harbor-2-12-0.\n\n# Developing for Internationalization\n\nGuidelines for adding translations to the Harbor portal and contributing localization files.Here's a quick rundown of what this is about:\n\n## Introduction\n\nAll the files you created should use UTF-8 encoding.\n\nThere are several translations available for the Harbor portal. See the available [translation files](https://github.com/goharbor/harbor/tree/main/src/portal/src/i18n/lang) for a full list of available languages.\n\nHarbor only officially supports the English and Chinese translations, and both languages are verified for each release. If you plan to use another translation, its recommended that you verify the translations are correct for your Harbor version before implementing.\n\n## Steps to Add a Translation\n\nUse the steps below to add a translation for a new language to the Harbor portal.\n\n1. In the folder `src/portal/src/i18n/lang`, copy json file `en-us-lang.json` to a new file and rename it to `<language>-<locale>-lang.json` .\n\nThe file contains a JSON object including all the key-value pairs of UI strings:\n\n```javascript\n{\n     \"APP_TITLE\": {\n       \"VMW_HARBOR\": \"Harbor\",\n       \"HARBOR\": \"Harbor\",\n       // ...\n     },\n     // ...\n}\n```\n\nIn the file `<language>-<locale>-lang.json`, translate all the values into your language. Do not change any keys.\n\n2. Add the language to the set of supported languages in `src/portal/src/app/shared/entities/shared.const.ts`:\n\n```typescript\nexport const LANGUAGES = {\n       'en-us': ['English', locale_en],\n       'zh-cn': ['中文简体', locale_zh_CN],\n       '<language>-<locale>': ['<DISPLAY_NAME>', '<LOCALE_DATA>'],\n} as const;\n```\n\nFor `LOCALE_DATA`, You need to import it correctly:\n\n```typescript\nimport locale_en\n  from '@angular/common/locales/en';\nimport locale_zh_CN\n  from '@angular/common/locales/zh-Hans';\n```\n\n3. Next, refer to [Build Harbor from Source Code](https://goharbor.io/docs/2.12.0/build-customize-contribute/compile-guide/) to rebuild and restart Harbor.\n\n## Contributing Localizations to Harbor\n\nIf you’d like to [contribute your localization file](https://github.com/goharbor/harbor/blob/main/CONTRIBUTING.md) to the Harbor project, please make a pull request with the changes from the instructions above. Please do your best to make sure your translations are correct and easily understood by speakers of that language.\n\nFinding reviewers for a translation PR is best effort, maintainers may not be able to review the pull request because they do not speak or read the language of your contribution. If you know of another community member who can help with reviewing the pull request, make sure to tag them when you open the PR. You should also plan to attend a community meeting to raise awareness for your pull request and ask the community for help reviewing.\n\nYour contribution may still be accepted without additional reviews even if we aren’t able to find someone to review the translations in your pull request.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/developer-guide-i18n", "title": "Developing for Internationalization", "description": "Guidelines for adding translations to the Harbor portal and contributing localization files.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:56:58", "type": "overview", "page_metadata": {"twitter:site": "@project_harbor", "og:image:alt": "Harbor &ndash; Developing for Internationalization project logo", "twitter:card": "summary", "title": "\n      \nHarbor docs | Developing for Internationalization\n\n    ", "favicon": "https://goharbor.io/favicon.svg", "ogUrl": "https://goharbor.io/docs/2.12.0/build-customize-contribute/developer-guide-i18n/", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:type": ["documentation", "article"], "ogSiteName": "Harbor", "og:url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/developer-guide-i18n/", "ogLocale": "en_US", "ogTitle": "Harbor &ndash; Developing for Internationalization", "og:image:type": "image/png", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:title": "Harbor &ndash; Developing for Internationalization", "og:locale": "en_US", "twitter:creator": "@project_harbor", "generator": "Hugo 0.74.0", "og:site_name": "Harbor", "scrapeId": "5ee1a83f-29fb-4043-a329-97ea9501db13", "sourceURL": "https://goharbor.io/docs/2.12.0/build-customize-contribute/developer-guide-i18n", "url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/developer-guide-i18n/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I introduction in harbor-2-12-0?\n\nAssistant: To introduction in harbor-2-12-0, here's what you do:\nAll the files you created should use UTF-8 encoding.\n\nThere are several translations available for the Harbor portal. See the available [translation files](https://github.com/goharbor/harbor/tree/main/src/portal/src/i18n/lang) for a full list of available languages.\n\nHarbor only officially supports the English and Chinese translations, and both languages are verified for each release. If you plan to use another translation, its recommended that you verify the translations are correct for your Harbor version before implementing..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/developer-guide-i18n", "title": "Developing for Internationalization", "description": "Guidelines for adding translations to the Harbor portal and contributing localization files.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:56:58", "type": "section_detail", "page_metadata": {"twitter:site": "@project_harbor", "og:image:alt": "Harbor &ndash; Developing for Internationalization project logo", "twitter:card": "summary", "title": "\n      \nHarbor docs | Developing for Internationalization\n\n    ", "favicon": "https://goharbor.io/favicon.svg", "ogUrl": "https://goharbor.io/docs/2.12.0/build-customize-contribute/developer-guide-i18n/", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:type": ["documentation", "article"], "ogSiteName": "Harbor", "og:url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/developer-guide-i18n/", "ogLocale": "en_US", "ogTitle": "Harbor &ndash; Developing for Internationalization", "og:image:type": "image/png", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:title": "Harbor &ndash; Developing for Internationalization", "og:locale": "en_US", "twitter:creator": "@project_harbor", "generator": "Hugo 0.74.0", "og:site_name": "Harbor", "scrapeId": "5ee1a83f-29fb-4043-a329-97ea9501db13", "sourceURL": "https://goharbor.io/docs/2.12.0/build-customize-contribute/developer-guide-i18n", "url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/developer-guide-i18n/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I steps to add a translation in harbor-2-12-0?\n\nAssistant: To steps to add a translation in harbor-2-12-0, here's what you do:\nUse the steps below to add a translation for a new language to the Harbor portal.\n\n1. In the folder `src/portal/src/i18n/lang`, copy json file `en-us-lang.json` to a new file and rename it to `<language>-<locale>-lang.json` .\n\nThe file contains a JSON object including all the key-value pairs of UI strings:\n\n```javascript\n{\n     \"APP_TITLE\": {\n       \"VMW_HARBOR\": \"Harbor\",\n       \"HARBOR\": \"Harbor\",\n       // ...\n     },\n     // ...\n}\n```\n\nIn the file `<language>-<locale>-lang.json`, translate all the values into your language. Do not change any keys.\n\n2. Add the language to the set of supported languages in `src/portal/src/app/shared/entities/shared.const.ts`:\n\n```typescript\nexport const LANGUAGES = {\n       'en-us': ['English', locale_en],\n       'zh-cn': ['中文简体', locale_zh_CN],\n       '<language>-<locale>': ['<DISPLAY_NAME>', '<LOCALE_DATA>'],\n} as const;\n```\n\nFor `LOCALE_DATA`, You need to import it correctly:\n\n```typescript\nimport locale_en\n  from '@angular/common/locales/en';\nimport locale_zh_CN\n  from '@angular/common/locales/zh-Hans';\n```\n\n3. Next, refer to [Build Harbor from Source Code](https://goharbor.io/docs/2.12.0/build-customize-contribute/compile-guide/) to rebuild and restart Harbor..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/developer-guide-i18n", "title": "Developing for Internationalization", "description": "Guidelines for adding translations to the Harbor portal and contributing localization files.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:56:58", "type": "section_detail", "page_metadata": {"twitter:site": "@project_harbor", "og:image:alt": "Harbor &ndash; Developing for Internationalization project logo", "twitter:card": "summary", "title": "\n      \nHarbor docs | Developing for Internationalization\n\n    ", "favicon": "https://goharbor.io/favicon.svg", "ogUrl": "https://goharbor.io/docs/2.12.0/build-customize-contribute/developer-guide-i18n/", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:type": ["documentation", "article"], "ogSiteName": "Harbor", "og:url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/developer-guide-i18n/", "ogLocale": "en_US", "ogTitle": "Harbor &ndash; Developing for Internationalization", "og:image:type": "image/png", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:title": "Harbor &ndash; Developing for Internationalization", "og:locale": "en_US", "twitter:creator": "@project_harbor", "generator": "Hugo 0.74.0", "og:site_name": "Harbor", "scrapeId": "5ee1a83f-29fb-4043-a329-97ea9501db13", "sourceURL": "https://goharbor.io/docs/2.12.0/build-customize-contribute/developer-guide-i18n", "url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/developer-guide-i18n/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I contributing localizations to harbor in harbor-2-12-0?\n\nAssistant: To contributing localizations to harbor in harbor-2-12-0, here's what you do:\nIf you’d like to [contribute your localization file](https://github.com/goharbor/harbor/blob/main/CONTRIBUTING.md) to the Harbor project, please make a pull request with the changes from the instructions above. Please do your best to make sure your translations are correct and easily understood by speakers of that language.\n\nFinding reviewers for a translation PR is best effort, maintainers may not be able to review the pull request because they do not speak or read the language of your contribution. If you know of another community member who can help with reviewing the pull request, make sure to tag them when you open the PR. You should also plan to attend a community meeting to raise awareness for your pull request and ask the community for help reviewing.\n\nYour contribution may still be accepted without additional reviews even if we aren’t able to find someone to review the translations in your pull request..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/developer-guide-i18n", "title": "Developing for Internationalization", "description": "Guidelines for adding translations to the Harbor portal and contributing localization files.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:56:58", "type": "section_detail", "page_metadata": {"twitter:site": "@project_harbor", "og:image:alt": "Harbor &ndash; Developing for Internationalization project logo", "twitter:card": "summary", "title": "\n      \nHarbor docs | Developing for Internationalization\n\n    ", "favicon": "https://goharbor.io/favicon.svg", "ogUrl": "https://goharbor.io/docs/2.12.0/build-customize-contribute/developer-guide-i18n/", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:type": ["documentation", "article"], "ogSiteName": "Harbor", "og:url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/developer-guide-i18n/", "ogLocale": "en_US", "ogTitle": "Harbor &ndash; Developing for Internationalization", "og:image:type": "image/png", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:title": "Harbor &ndash; Developing for Internationalization", "og:locale": "en_US", "twitter:creator": "@project_harbor", "generator": "Hugo 0.74.0", "og:site_name": "Harbor", "scrapeId": "5ee1a83f-29fb-4043-a329-97ea9501db13", "sourceURL": "https://goharbor.io/docs/2.12.0/build-customize-contribute/developer-guide-i18n", "url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/developer-guide-i18n/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you give me some code examples for Developing for Internationalization in harbor-2-12-0?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**JSON Object Structure for Language File**:\n\n```yaml\n{\n     \"APP_TITLE\": {\n       \"VMW_HARBOR\": \"Harbor\",\n       \"HARBOR\": \"Harbor\",\n       // ...\n     },\n     // ...\n}\n```\n\nThis snippet shows you how to json object structure for language file, which is an important aspect of developing for internationalization.\n\n**Adding Supported Languages in TypeScript**:\n\n```yaml\nexport const LANGUAGES = {\n       'en-us': ['English', locale_en],\n       'zh-cn': ['中文简体', locale_zh_CN],\n       '<language>-<locale>': ['<DISPLAY_NAME>', '<LOCALE_DATA>'],\n} as const;\n```\n\nThis snippet shows you how to adding supported languages in typescript, which is an important aspect of developing for internationalization.\n\n", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/developer-guide-i18n", "title": "Developing for Internationalization", "description": "Guidelines for adding translations to the Harbor portal and contributing localization files.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:56:58", "type": "code_examples", "page_metadata": {"twitter:site": "@project_harbor", "og:image:alt": "Harbor &ndash; Developing for Internationalization project logo", "twitter:card": "summary", "title": "\n      \nHarbor docs | Developing for Internationalization\n\n    ", "favicon": "https://goharbor.io/favicon.svg", "ogUrl": "https://goharbor.io/docs/2.12.0/build-customize-contribute/developer-guide-i18n/", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:type": ["documentation", "article"], "ogSiteName": "Harbor", "og:url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/developer-guide-i18n/", "ogLocale": "en_US", "ogTitle": "Harbor &ndash; Developing for Internationalization", "og:image:type": "image/png", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:title": "Harbor &ndash; Developing for Internationalization", "og:locale": "en_US", "twitter:creator": "@project_harbor", "generator": "Hugo 0.74.0", "og:site_name": "Harbor", "scrapeId": "5ee1a83f-29fb-4043-a329-97ea9501db13", "sourceURL": "https://goharbor.io/docs/2.12.0/build-customize-contribute/developer-guide-i18n", "url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/developer-guide-i18n/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: What are some tips for using Developing for Internationalization in harbor-2-12-0 effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nEnsure all files are created using UTF-8 encoding.\n\nVerify translations for non-official languages before implementation.\n\nTag community members for review assistance when submitting a pull request.\n\nAttend community meetings to raise awareness for your pull request.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/developer-guide-i18n", "title": "Developing for Internationalization", "description": "Guidelines for adding translations to the Harbor portal and contributing localization files.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:56:58", "type": "best_practices", "page_metadata": {"twitter:site": "@project_harbor", "og:image:alt": "Harbor &ndash; Developing for Internationalization project logo", "twitter:card": "summary", "title": "\n      \nHarbor docs | Developing for Internationalization\n\n    ", "favicon": "https://goharbor.io/favicon.svg", "ogUrl": "https://goharbor.io/docs/2.12.0/build-customize-contribute/developer-guide-i18n/", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:type": ["documentation", "article"], "ogSiteName": "Harbor", "og:url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/developer-guide-i18n/", "ogLocale": "en_US", "ogTitle": "Harbor &ndash; Developing for Internationalization", "og:image:type": "image/png", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:title": "Harbor &ndash; Developing for Internationalization", "og:locale": "en_US", "twitter:creator": "@project_harbor", "generator": "Hugo 0.74.0", "og:site_name": "Harbor", "scrapeId": "5ee1a83f-29fb-4043-a329-97ea9501db13", "sourceURL": "https://goharbor.io/docs/2.12.0/build-customize-contribute/developer-guide-i18n", "url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/developer-guide-i18n/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you explain what Developing the Harbor Frontend is in harbor-2-12-0?\n\nAssistant: Sure, I'd be happy to explain Developing the Harbor Frontend in harbor-2-12-0.\n\n# Developing the Harbor Frontend\n\nInstructions for setting up a frontend development environment for Harbor if a backend environment is already available.Here's a quick rundown of what this is about:\n\n## Frontend Development Environment Setup\n\nIf you already have a harbor backend environment, you can build a frontend development environment with the following configuration.\n\n## Step 1: Copy Proxy Configuration\n\nOpen the terminal and run the following command to copy “proxy.config.mjs.temp” file to “proxy.config.mjs”.\n\n```sh\ncd harbor/src/portal\ncp proxy.config.mjs.temp proxy.config.mjs\n``` \n\n**NOTE:** You should specify an available Harbor hostname. And you can specify the agent if you work behind a corporate proxy.\n\n## Step 2: Define Proxy Configuration\n\n```js\nimport HttpsProxyAgent from 'https-proxy-agent';\n// Define the proxy configuration\nconst HarborProxyConfig = [\\\n  {\\\n    \"context\": [\\\n      \"/api\",\\\n      \"/c\",\\\n      \"/i18n\",\\\n      \"/chartrepo\",\\\n      \"/LICENSE\",\\\n      \"/swagger.json\",\\\n      \"/devcenter-api-2.0\",\\\n      \"/swagger-ui.bundle.js\"\\\n    ],\\\n    \"target\": \"${A Harbor server}\",\\\n    \"secure\": false,\\\n    \"changeOrigin\": true,\\\n    \"logLevel\": \"debug\"\\\n  }\\\n];\n// Define if you use agent\nconst useAgent = false;\n// Specify an agent server, if empty, will read it from environment variable http_proxy or HTTP_PROXY\nconst specifiedAgentServer = \"${An agent server}\";\n\nfunction setupForCorporateProxy(proxyConfig) {\n  if (useAgent) {\n    const agentServer = process.env.http_proxy || process.env.HTTP_PROXY || specifiedAgentServer;\n    if (agentServer) {\n      const agent = new HttpsProxyAgent(agentServer);\n      console.log('Using corporate agent server: ' + agentServer);\n      proxyConfig.forEach(function (entry) {\n        entry.agent = agent;\n      });\n    }\n  }\n  return proxyConfig;\n}\n\nexport default setupForCorporateProxy(HarborProxyConfig);\n```\n\n## Step 3: Install Dependencies\n\nInstall npm packages and 3rd-party dependencies.\n\n```sh\nnpm install\n```\n\n## Step 4: Serve Harbor Locally\n\nExecute the following command, serve Harbor locally.\n\n```sh\nnpm run start\n```\n\nThen you can visit the Harbor by address: https://localhost:4200.\n\n## Contributing\n\n[Page source](https://github.com/goharbor/website/blob/release-2.12.0/docs/build-customize-contribute/ui-contribution-get-started.md) [Create issue](https://github.com/goharbor/harbor/issues)\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/ui-contribution-get-started", "title": "Developing the Harbor Frontend", "description": "Instructions for setting up a frontend development environment for Harbor if a backend environment is already available.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:58:24", "type": "overview", "page_metadata": {"twitter:creator": "@project_harbor", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/ui-contribution-get-started/", "twitter:card": "summary", "og:locale": "en_US", "og:type": ["documentation", "article"], "og:image:type": "image/png", "og:image:alt": "Harbor &ndash; Developing the Harbor Frontend project logo", "twitter:site": "@project_harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogSiteName": "Harbor", "ogTitle": "Harbor &ndash; Developing the Harbor Frontend", "ogUrl": "https://goharbor.io/docs/2.12.0/build-customize-contribute/ui-contribution-get-started/", "favicon": "https://goharbor.io/favicon.svg", "title": "\n      \nHarbor docs | Developing the Harbor Frontend\n\n    ", "og:title": "Harbor &ndash; Developing the Harbor Frontend", "ogLocale": "en_US", "og:site_name": "Harbor", "generator": "Hugo 0.74.0", "scrapeId": "02614c79-0439-4011-9e12-9e3e7a303dd3", "sourceURL": "https://goharbor.io/docs/2.12.0/build-customize-contribute/ui-contribution-get-started", "url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/ui-contribution-get-started/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I frontend development environment setup in harbor-2-12-0?\n\nAssistant: To frontend development environment setup in harbor-2-12-0, here's what you do:\nIf you already have a harbor backend environment, you can build a frontend development environment with the following configuration..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/ui-contribution-get-started", "title": "Developing the Harbor Frontend", "description": "Instructions for setting up a frontend development environment for Harbor if a backend environment is already available.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:58:24", "type": "section_detail", "page_metadata": {"twitter:creator": "@project_harbor", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/ui-contribution-get-started/", "twitter:card": "summary", "og:locale": "en_US", "og:type": ["documentation", "article"], "og:image:type": "image/png", "og:image:alt": "Harbor &ndash; Developing the Harbor Frontend project logo", "twitter:site": "@project_harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogSiteName": "Harbor", "ogTitle": "Harbor &ndash; Developing the Harbor Frontend", "ogUrl": "https://goharbor.io/docs/2.12.0/build-customize-contribute/ui-contribution-get-started/", "favicon": "https://goharbor.io/favicon.svg", "title": "\n      \nHarbor docs | Developing the Harbor Frontend\n\n    ", "og:title": "Harbor &ndash; Developing the Harbor Frontend", "ogLocale": "en_US", "og:site_name": "Harbor", "generator": "Hugo 0.74.0", "scrapeId": "02614c79-0439-4011-9e12-9e3e7a303dd3", "sourceURL": "https://goharbor.io/docs/2.12.0/build-customize-contribute/ui-contribution-get-started", "url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/ui-contribution-get-started/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I step 1: copy proxy configuration in harbor-2-12-0?\n\nAssistant: To step 1: copy proxy configuration in harbor-2-12-0, here's what you do:\nOpen the terminal and run the following command to copy “proxy.config.mjs.temp” file to “proxy.config.mjs”.\n\n```sh\ncd harbor/src/portal\ncp proxy.config.mjs.temp proxy.config.mjs\n``` \n\n**NOTE:** You should specify an available Harbor hostname. And you can specify the agent if you work behind a corporate proxy..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/ui-contribution-get-started", "title": "Developing the Harbor Frontend", "description": "Instructions for setting up a frontend development environment for Harbor if a backend environment is already available.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:58:24", "type": "section_detail", "page_metadata": {"twitter:creator": "@project_harbor", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/ui-contribution-get-started/", "twitter:card": "summary", "og:locale": "en_US", "og:type": ["documentation", "article"], "og:image:type": "image/png", "og:image:alt": "Harbor &ndash; Developing the Harbor Frontend project logo", "twitter:site": "@project_harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogSiteName": "Harbor", "ogTitle": "Harbor &ndash; Developing the Harbor Frontend", "ogUrl": "https://goharbor.io/docs/2.12.0/build-customize-contribute/ui-contribution-get-started/", "favicon": "https://goharbor.io/favicon.svg", "title": "\n      \nHarbor docs | Developing the Harbor Frontend\n\n    ", "og:title": "Harbor &ndash; Developing the Harbor Frontend", "ogLocale": "en_US", "og:site_name": "Harbor", "generator": "Hugo 0.74.0", "scrapeId": "02614c79-0439-4011-9e12-9e3e7a303dd3", "sourceURL": "https://goharbor.io/docs/2.12.0/build-customize-contribute/ui-contribution-get-started", "url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/ui-contribution-get-started/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I step 2: define proxy configuration in harbor-2-12-0?\n\nAssistant: To step 2: define proxy configuration in harbor-2-12-0, here's what you do:\n```js\nimport HttpsProxyAgent from 'https-proxy-agent';\n// Define the proxy configuration\nconst HarborProxyConfig = [\\\n  {\\\n    \"context\": [\\\n      \"/api\",\\\n      \"/c\",\\\n      \"/i18n\",\\\n      \"/chartrepo\",\\\n      \"/LICENSE\",\\\n      \"/swagger.json\",\\\n      \"/devcenter-api-2.0\",\\\n      \"/swagger-ui.bundle.js\"\\\n    ],\\\n    \"target\": \"${A Harbor server}\",\\\n    \"secure\": false,\\\n    \"changeOrigin\": true,\\\n    \"logLevel\": \"debug\"\\\n  }\\\n];\n// Define if you use agent\nconst useAgent = false;\n// Specify an agent server, if empty, will read it from environment variable http_proxy or HTTP_PROXY\nconst specifiedAgentServer = \"${An agent server}\";\n\nfunction setupForCorporateProxy(proxyConfig) {\n  if (useAgent) {\n    const agentServer = process.env.http_proxy || process.env.HTTP_PROXY || specifiedAgentServer;\n    if (agentServer) {\n      const agent = new HttpsProxyAgent(agentServer);\n      console.log('Using corporate agent server: ' + agentServer);\n      proxyConfig.forEach(function (entry) {\n        entry.agent = agent;\n      });\n    }\n  }\n  return proxyConfig;\n}\n\nexport default setupForCorporateProxy(HarborProxyConfig);\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/ui-contribution-get-started", "title": "Developing the Harbor Frontend", "description": "Instructions for setting up a frontend development environment for Harbor if a backend environment is already available.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:58:24", "type": "section_detail", "page_metadata": {"twitter:creator": "@project_harbor", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/ui-contribution-get-started/", "twitter:card": "summary", "og:locale": "en_US", "og:type": ["documentation", "article"], "og:image:type": "image/png", "og:image:alt": "Harbor &ndash; Developing the Harbor Frontend project logo", "twitter:site": "@project_harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogSiteName": "Harbor", "ogTitle": "Harbor &ndash; Developing the Harbor Frontend", "ogUrl": "https://goharbor.io/docs/2.12.0/build-customize-contribute/ui-contribution-get-started/", "favicon": "https://goharbor.io/favicon.svg", "title": "\n      \nHarbor docs | Developing the Harbor Frontend\n\n    ", "og:title": "Harbor &ndash; Developing the Harbor Frontend", "ogLocale": "en_US", "og:site_name": "Harbor", "generator": "Hugo 0.74.0", "scrapeId": "02614c79-0439-4011-9e12-9e3e7a303dd3", "sourceURL": "https://goharbor.io/docs/2.12.0/build-customize-contribute/ui-contribution-get-started", "url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/ui-contribution-get-started/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I step 3: install dependencies in harbor-2-12-0?\n\nAssistant: To step 3: install dependencies in harbor-2-12-0, here's what you do:\nInstall npm packages and 3rd-party dependencies.\n\n```sh\nnpm install\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/ui-contribution-get-started", "title": "Developing the Harbor Frontend", "description": "Instructions for setting up a frontend development environment for Harbor if a backend environment is already available.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:58:24", "type": "section_detail", "page_metadata": {"twitter:creator": "@project_harbor", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/ui-contribution-get-started/", "twitter:card": "summary", "og:locale": "en_US", "og:type": ["documentation", "article"], "og:image:type": "image/png", "og:image:alt": "Harbor &ndash; Developing the Harbor Frontend project logo", "twitter:site": "@project_harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogSiteName": "Harbor", "ogTitle": "Harbor &ndash; Developing the Harbor Frontend", "ogUrl": "https://goharbor.io/docs/2.12.0/build-customize-contribute/ui-contribution-get-started/", "favicon": "https://goharbor.io/favicon.svg", "title": "\n      \nHarbor docs | Developing the Harbor Frontend\n\n    ", "og:title": "Harbor &ndash; Developing the Harbor Frontend", "ogLocale": "en_US", "og:site_name": "Harbor", "generator": "Hugo 0.74.0", "scrapeId": "02614c79-0439-4011-9e12-9e3e7a303dd3", "sourceURL": "https://goharbor.io/docs/2.12.0/build-customize-contribute/ui-contribution-get-started", "url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/ui-contribution-get-started/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I step 4: serve harbor locally in harbor-2-12-0?\n\nAssistant: To step 4: serve harbor locally in harbor-2-12-0, here's what you do:\nExecute the following command, serve Harbor locally.\n\n```sh\nnpm run start\n```\n\nThen you can visit the Harbor by address: https://localhost:4200..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/ui-contribution-get-started", "title": "Developing the Harbor Frontend", "description": "Instructions for setting up a frontend development environment for Harbor if a backend environment is already available.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:58:24", "type": "section_detail", "page_metadata": {"twitter:creator": "@project_harbor", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/ui-contribution-get-started/", "twitter:card": "summary", "og:locale": "en_US", "og:type": ["documentation", "article"], "og:image:type": "image/png", "og:image:alt": "Harbor &ndash; Developing the Harbor Frontend project logo", "twitter:site": "@project_harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogSiteName": "Harbor", "ogTitle": "Harbor &ndash; Developing the Harbor Frontend", "ogUrl": "https://goharbor.io/docs/2.12.0/build-customize-contribute/ui-contribution-get-started/", "favicon": "https://goharbor.io/favicon.svg", "title": "\n      \nHarbor docs | Developing the Harbor Frontend\n\n    ", "og:title": "Harbor &ndash; Developing the Harbor Frontend", "ogLocale": "en_US", "og:site_name": "Harbor", "generator": "Hugo 0.74.0", "scrapeId": "02614c79-0439-4011-9e12-9e3e7a303dd3", "sourceURL": "https://goharbor.io/docs/2.12.0/build-customize-contribute/ui-contribution-get-started", "url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/ui-contribution-get-started/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I contributing in harbor-2-12-0?\n\nAssistant: To contributing in harbor-2-12-0, here's what you do:\n[Page source](https://github.com/goharbor/website/blob/release-2.12.0/docs/build-customize-contribute/ui-contribution-get-started.md) [Create issue](https://github.com/goharbor/harbor/issues).\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/ui-contribution-get-started", "title": "Developing the Harbor Frontend", "description": "Instructions for setting up a frontend development environment for Harbor if a backend environment is already available.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:58:24", "type": "section_detail", "page_metadata": {"twitter:creator": "@project_harbor", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/ui-contribution-get-started/", "twitter:card": "summary", "og:locale": "en_US", "og:type": ["documentation", "article"], "og:image:type": "image/png", "og:image:alt": "Harbor &ndash; Developing the Harbor Frontend project logo", "twitter:site": "@project_harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogSiteName": "Harbor", "ogTitle": "Harbor &ndash; Developing the Harbor Frontend", "ogUrl": "https://goharbor.io/docs/2.12.0/build-customize-contribute/ui-contribution-get-started/", "favicon": "https://goharbor.io/favicon.svg", "title": "\n      \nHarbor docs | Developing the Harbor Frontend\n\n    ", "og:title": "Harbor &ndash; Developing the Harbor Frontend", "ogLocale": "en_US", "og:site_name": "Harbor", "generator": "Hugo 0.74.0", "scrapeId": "02614c79-0439-4011-9e12-9e3e7a303dd3", "sourceURL": "https://goharbor.io/docs/2.12.0/build-customize-contribute/ui-contribution-get-started", "url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/ui-contribution-get-started/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you give me some code examples for Developing the Harbor Frontend in harbor-2-12-0?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Copy Proxy Configuration Command**:\n\n```yaml\n```sh\ncd harbor/src/portal\ncp proxy.config.mjs.temp proxy.config.mjs\n```\n```\n\nThis snippet shows you how to copy proxy configuration command, which is an important aspect of developing the harbor frontend.\n\n**Proxy Configuration Code**:\n\n```yaml\n```js\nimport HttpsProxyAgent from 'https-proxy-agent';\n// Define the proxy configuration\nconst HarborProxyConfig = [\\\n  {\\\n    \"context\": [\\\n      \"/api\",\\\n      \"/c\",\\\n      \"/i18n\",\\\n      \"/chartrepo\",\\\n      \"/LICENSE\",\\\n      \"/swagger.json\",\\\n      \"/devcenter-api-2.0\",\\\n      \"/swagger-ui.bundle.js\"\\\n    ],\\\n    \"target\": \"${A Harbor server}\",\\\n    \"secure\": false,\\\n    \"changeOrigin\": true,\\\n    \"logLevel\": \"debug\"\\\n  }\\\n];\n// Define if you use agent\nconst useAgent = false;\n// Specify an agent server, if empty, will read it from environment variable http_proxy or HTTP_PROXY\nconst specifiedAgentServer = \"${An agent server}\";\n\nfunction setupForCorporateProxy(proxyConfig) {\n  if (useAgent) {\n    const agentServer = process.env.http_proxy || process.env.HTTP_PROXY || specifiedAgentServer;\n    if (agentServer) {\n      const agent = new HttpsProxyAgent(agentServer);\n      console.log('Using corporate agent server: ' + agentServer);\n      proxyConfig.forEach(function (entry) {\n        entry.agent = agent;\n      });\n    }\n  }\n  return proxyConfig;\n}\n\nexport default setupForCorporateProxy(HarborProxyConfig);\n```\n```\n\nThis snippet shows you how to proxy configuration code, which is an important aspect of developing the harbor frontend.\n\n**Install Dependencies Command**:\n\n```yaml\n```sh\nnpm install\n```\n```\n\nThis snippet shows you how to install dependencies command, which is an important aspect of developing the harbor frontend.\n\n**Serve Harbor Locally Command**:\n\n```yaml\n```sh\nnpm run start\n```\n```\n\nThis snippet shows you how to serve harbor locally command, which is an important aspect of developing the harbor frontend.\n\n", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/ui-contribution-get-started", "title": "Developing the Harbor Frontend", "description": "Instructions for setting up a frontend development environment for Harbor if a backend environment is already available.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:58:24", "type": "code_examples", "page_metadata": {"twitter:creator": "@project_harbor", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/ui-contribution-get-started/", "twitter:card": "summary", "og:locale": "en_US", "og:type": ["documentation", "article"], "og:image:type": "image/png", "og:image:alt": "Harbor &ndash; Developing the Harbor Frontend project logo", "twitter:site": "@project_harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogSiteName": "Harbor", "ogTitle": "Harbor &ndash; Developing the Harbor Frontend", "ogUrl": "https://goharbor.io/docs/2.12.0/build-customize-contribute/ui-contribution-get-started/", "favicon": "https://goharbor.io/favicon.svg", "title": "\n      \nHarbor docs | Developing the Harbor Frontend\n\n    ", "og:title": "Harbor &ndash; Developing the Harbor Frontend", "ogLocale": "en_US", "og:site_name": "Harbor", "generator": "Hugo 0.74.0", "scrapeId": "02614c79-0439-4011-9e12-9e3e7a303dd3", "sourceURL": "https://goharbor.io/docs/2.12.0/build-customize-contribute/ui-contribution-get-started", "url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/ui-contribution-get-started/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: What are some tips for using Developing the Harbor Frontend in harbor-2-12-0 effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nSpecify an available Harbor hostname in the proxy configuration.\n\nIf working behind a corporate proxy, specify the agent server.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/ui-contribution-get-started", "title": "Developing the Harbor Frontend", "description": "Instructions for setting up a frontend development environment for Harbor if a backend environment is already available.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:58:24", "type": "best_practices", "page_metadata": {"twitter:creator": "@project_harbor", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/ui-contribution-get-started/", "twitter:card": "summary", "og:locale": "en_US", "og:type": ["documentation", "article"], "og:image:type": "image/png", "og:image:alt": "Harbor &ndash; Developing the Harbor Frontend project logo", "twitter:site": "@project_harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogSiteName": "Harbor", "ogTitle": "Harbor &ndash; Developing the Harbor Frontend", "ogUrl": "https://goharbor.io/docs/2.12.0/build-customize-contribute/ui-contribution-get-started/", "favicon": "https://goharbor.io/favicon.svg", "title": "\n      \nHarbor docs | Developing the Harbor Frontend\n\n    ", "og:title": "Harbor &ndash; Developing the Harbor Frontend", "ogLocale": "en_US", "og:site_name": "Harbor", "generator": "Hugo 0.74.0", "scrapeId": "02614c79-0439-4011-9e12-9e3e7a303dd3", "sourceURL": "https://goharbor.io/docs/2.12.0/build-customize-contribute/ui-contribution-get-started", "url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/ui-contribution-get-started/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you explain what Registry Landscape is in harbor-2-12-0?\n\nAssistant: Sure, I'd be happy to explain Registry Landscape in harbor-2-12-0.\n\n# Registry Landscape\n\nThe cloud native ecosystem is moving rapidly—registries and their feature sets are no exception. We’ve made our best effort to survey the container registry landscape and compare to our core feature set.Here's a quick rundown of what this is about:\n\n## Feature Comparison Table\n\n| Feature | Harbor | Docker Trusted Registry | Quay | Cloud Providers (GCP, AWS, Azure) | Distribution/Distribution | Artifactory | GitLab |\n| --: | :-: | :-: | :-: | :-: | :-: | :-: | :-: |\n| Ability to Determine Version of Binaries in Containers | ✓ | ✓ | ✓ | ✗ | ✗ | ? | ? |\n| Artifact Repository (rpms, git, jar, etc) | ✗ | ✗ | ✗ | ✗ | ✗ | ✓ | partial |\n| Audit Logs | ✓ | ✓ | ✓ | ✓ | ✗ | ✓ | ✓ |\n| Content Trust and Validation | ✓ | ✓ | ✓ | ✗ | partial | partial | ✗ |\n| Custom TLS Certificates | ✓ | ✓ | ✓ | ✗ | ✓ | ✓ | ✓ |\n| Helm Chart Repository Manager | ✓ | ✗ | partial | ✗ | ✗ | ✓ | ✗ |\n| LDAP-based Auth | ✓ | ✓ | ✓ | partial | ✗ | ✓ | ✓ |\n| Local Auth | ✓ | ✓ | ✓ | ✓ | ✗ | ✓ | ✓ |\n| Metrics | ✓ | ✓ | ✓ | ✓ | ✓ | ✓ | ✓ |\n| Multi-Tenancy (projects, teams, namespaces, etc) | ✓ | ✓ | ✓ | partial | ✗ | ✓ | ✓ |\n| Open Source | ✓ | partial | ✓ | ✗ | ✓ | partial | partial |\n| Project Quotas (by storage consumption) | ✓ | ✗ | ✓ | partial | ✗ | ✗ | ✗ |\n| Replication between instances | ✓ | ✓ | ✓ | n/a | ✗ | ✓ | ✗ |\n| Replication between non-instances | ✓ | ✗ | ✓ | n/a | ✗ | ✗ | ✗ |\n| Robot Accounts for Helm Charts | ✓ | ✗ | ✗ | ? | ✗ | ✗ | ✗ |\n| Robot Accounts for Images | ✓ | ? | ✓ | ? | ✗ | ? | ? |\n| Role-Based Access Control | ✓ | ✓ | ✓ | ✓ | ✗ | ✓ | ✗ |\n| Single Sign On (OIDC) | ✓ | ✓ | ✓ | ✓ | ✗ | partial | ✗ |\n| Tag Retention Policy | ✓ | ✗ | ✓ | ✗ | ✗ | ✗ | ✗ |\n| Upstream Registry Proxy Cache | ✓ | ✓ | ✗ | ✗ | ✓ | ✓ | ✗ |\n| Vulnerability Scanning & Monitoring | ✓ | ✓ | ✓ | ✗ | ✗ | ✓ | partial |\n| Vulnerability Scanning Plugin Framework | ✓ | ✗ | ✓ | ✗ | ✗ | ✗ | ✗ |\n| Vulnerability Allowlisting | ✓ | ✗ | ✗ | ✗ | ✗ | ✗ | ✗ |\n| Webhooks | ✓ | ✓ | ✓ | ✓ | ✓ | ✓ | ✓ |\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/registry-landscape", "title": "Registry Landscape", "description": "The cloud native ecosystem is moving rapidly—registries and their feature sets are no exception. We’ve made our best effort to survey the container registry landscape and compare to our core feature set.", "has_code_examples": false, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 04:03:29", "type": "overview", "page_metadata": {"og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:type": ["documentation", "article"], "ogTitle": "Harbor &ndash; Registry Landscape", "ogLocale": "en_US", "og:locale": "en_US", "title": "\n      \nHarbor docs | Registry Landscape\n\n    ", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:site_name": "Harbor", "twitter:creator": "@project_harbor", "favicon": "https://goharbor.io/favicon.svg", "ogUrl": "https://goharbor.io/docs/2.12.0/build-customize-contribute/registry-landscape/", "og:url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/registry-landscape/", "og:image:alt": "Harbor &ndash; Registry Landscape project logo", "og:image:type": "image/png", "twitter:card": "summary", "twitter:site": "@project_harbor", "ogSiteName": "Harbor", "og:title": "Harbor &ndash; Registry Landscape", "generator": "Hugo 0.74.0", "scrapeId": "7a7db9b5-dc1d-4d89-b5a5-aef8dbd31ef1", "sourceURL": "https://goharbor.io/docs/2.12.0/build-customize-contribute/registry-landscape", "url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/registry-landscape/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I feature comparison table in harbor-2-12-0?\n\nAssistant: To feature comparison table in harbor-2-12-0, here's what you do:\n| Feature | Harbor | Docker Trusted Registry | Quay | Cloud Providers (GCP, AWS, Azure) | Distribution/Distribution | Artifactory | GitLab |\n| --: | :-: | :-: | :-: | :-: | :-: | :-: | :-: |\n| Ability to Determine Version of Binaries in Containers | ✓ | ✓ | ✓ | ✗ | ✗ | ? | ? |\n| Artifact Repository (rpms, git, jar, etc) | ✗ | ✗ | ✗ | ✗ | ✗ | ✓ | partial |\n| Audit Logs | ✓ | ✓ | ✓ | ✓ | ✗ | ✓ | ✓ |\n| Content Trust and Validation | ✓ | ✓ | ✓ | ✗ | partial | partial | ✗ |\n| Custom TLS Certificates | ✓ | ✓ | ✓ | ✗ | ✓ | ✓ | ✓ |\n| Helm Chart Repository Manager | ✓ | ✗ | partial | ✗ | ✗ | ✓ | ✗ |\n| LDAP-based Auth | ✓ | ✓ | ✓ | partial | ✗ | ✓ | ✓ |\n| Local Auth | ✓ | ✓ | ✓ | ✓ | ✗ | ✓ | ✓ |\n| Metrics | ✓ | ✓ | ✓ | ✓ | ✓ | ✓ | ✓ |\n| Multi-Tenancy (projects, teams, namespaces, etc) | ✓ | ✓ | ✓ | partial | ✗ | ✓ | ✓ |\n| Open Source | ✓ | partial | ✓ | ✗ | ✓ | partial | partial |\n| Project Quotas (by storage consumption) | ✓ | ✗ | ✓ | partial | ✗ | ✗ | ✗ |\n| Replication between instances | ✓ | ✓ | ✓ | n/a | ✗ | ✓ | ✗ |\n| Replication between non-instances | ✓ | ✗ | ✓ | n/a | ✗ | ✗ | ✗ |\n| Robot Accounts for Helm Charts | ✓ | ✗ | ✗ | ? | ✗ | ✗ | ✗ |\n| Robot Accounts for Images | ✓ | ? | ✓ | ? | ✗ | ? | ? |\n| Role-Based Access Control | ✓ | ✓ | ✓ | ✓ | ✗ | ✓ | ✗ |\n| Single Sign On (OIDC) | ✓ | ✓ | ✓ | ✓ | ✗ | partial | ✗ |\n| Tag Retention Policy | ✓ | ✗ | ✓ | ✗ | ✗ | ✗ | ✗ |\n| Upstream Registry Proxy Cache | ✓ | ✓ | ✗ | ✗ | ✓ | ✓ | ✗ |\n| Vulnerability Scanning & Monitoring | ✓ | ✓ | ✓ | ✗ | ✗ | ✓ | partial |\n| Vulnerability Scanning Plugin Framework | ✓ | ✗ | ✓ | ✗ | ✗ | ✗ | ✗ |\n| Vulnerability Allowlisting | ✓ | ✗ | ✗ | ✗ | ✗ | ✗ | ✗ |\n| Webhooks | ✓ | ✓ | ✓ | ✓ | ✓ | ✓ | ✓ |.\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/registry-landscape", "title": "Registry Landscape", "description": "The cloud native ecosystem is moving rapidly—registries and their feature sets are no exception. We’ve made our best effort to survey the container registry landscape and compare to our core feature set.", "has_code_examples": false, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 04:03:29", "type": "section_detail", "page_metadata": {"og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:type": ["documentation", "article"], "ogTitle": "Harbor &ndash; Registry Landscape", "ogLocale": "en_US", "og:locale": "en_US", "title": "\n      \nHarbor docs | Registry Landscape\n\n    ", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:site_name": "Harbor", "twitter:creator": "@project_harbor", "favicon": "https://goharbor.io/favicon.svg", "ogUrl": "https://goharbor.io/docs/2.12.0/build-customize-contribute/registry-landscape/", "og:url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/registry-landscape/", "og:image:alt": "Harbor &ndash; Registry Landscape project logo", "og:image:type": "image/png", "twitter:card": "summary", "twitter:site": "@project_harbor", "ogSiteName": "Harbor", "og:title": "Harbor &ndash; Registry Landscape", "generator": "Hugo 0.74.0", "scrapeId": "7a7db9b5-dc1d-4d89-b5a5-aef8dbd31ef1", "sourceURL": "https://goharbor.io/docs/2.12.0/build-customize-contribute/registry-landscape", "url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/registry-landscape/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: What are some tips for using Registry Landscape in harbor-2-12-0 effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nIf you find something outdated or outright erroneous, please submit a PR and we’ll fix it right away.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/registry-landscape", "title": "Registry Landscape", "description": "The cloud native ecosystem is moving rapidly—registries and their feature sets are no exception. We’ve made our best effort to survey the container registry landscape and compare to our core feature set.", "has_code_examples": false, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 04:03:29", "type": "best_practices", "page_metadata": {"og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:type": ["documentation", "article"], "ogTitle": "Harbor &ndash; Registry Landscape", "ogLocale": "en_US", "og:locale": "en_US", "title": "\n      \nHarbor docs | Registry Landscape\n\n    ", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:site_name": "Harbor", "twitter:creator": "@project_harbor", "favicon": "https://goharbor.io/favicon.svg", "ogUrl": "https://goharbor.io/docs/2.12.0/build-customize-contribute/registry-landscape/", "og:url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/registry-landscape/", "og:image:alt": "Harbor &ndash; Registry Landscape project logo", "og:image:type": "image/png", "twitter:card": "summary", "twitter:site": "@project_harbor", "ogSiteName": "Harbor", "og:title": "Harbor &ndash; Registry Landscape", "generator": "Hugo 0.74.0", "scrapeId": "7a7db9b5-dc1d-4d89-b5a5-aef8dbd31ef1", "sourceURL": "https://goharbor.io/docs/2.12.0/build-customize-contribute/registry-landscape", "url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/registry-landscape/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you explain what Using Make is in harbor-2-12-0?\n\nAssistant: Sure, I'd be happy to explain Using Make in harbor-2-12-0.\n\n# Using Make\n\nThis page provides information on using Make to build and manage Harbor images and binaries.Here's a quick rundown of what this is about:\n\n## Variables\n\n| Variable | Description |\n| --- | --- |\n| BASEIMAGETAG | The tag for base image, default:dev |\n| VERSIONTAG | The tag for harbor image, default:dev |\n| DEVFLAG | Build model flag, default: true |\n| GOBUILDIMAGE | Golang image to compile harbor go source code. |\n| TRIVYFLAG | Whether to enable trivy in harbor, default:false |\n| CHARTFLAG | Whether to enable chartmuseum in harbor, default:false |\n| HTTPPROXY | Clarity proxy to build UI.\n\n## Targets\n\n| Target | Description |\n| --- | --- |\n| all | prepare env, compile binaries, build images and install images |\n| prepare | prepare env |\n| compile | compile core and jobservice code |\n| compile_core | compile core binary |\n| compile_jobservice | compile jobservice binary |\n| build | build Harbor docker images |\n| build_base_docker | build Harbor docker base images |\n| install | compile binaries, build images, prepare specific version of compose file and startup Harbor instance |\n| start | startup Harbor instance |\n| down | shutdown Harbor instance |\n| package_online | prepare online install package |\n| package_offline | prepare offline install package |\n| pushimage | push Harbor images to specific registry server |\n| cleanall | remove binary, Harbor images, specific version docker-compose file, specific version tag and online/offline install package |\n| cleanbinary | remove core and jobservice binary |\n| cleanimage | remove Harbor images |\n| cleandockercomposefile | remove specific version docker-compose |\n| cleanpackage | remove online/offline install package.\n\n## Examples\n\n### Build and run harbor from source code\n\n```sh\nmake install\n```\n\n### Package offline installer\n\n```sh\nmake package_offline\n```\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/use-make", "title": "Using Make", "description": "This page provides information on using Make to build and manage Harbor images and binaries.", "has_code_examples": true, "has_best_practices": false, "section_count": 3, "timestamp": "2025-03-01 04:04:42", "type": "overview", "page_metadata": {"ogUrl": "https://goharbor.io/docs/2.12.0/build-customize-contribute/use-make/", "ogSiteName": "Harbor", "og:locale": "en_US", "ogLocale": "en_US", "ogTitle": "Harbor &ndash; Using Make", "twitter:card": "summary", "og:image:alt": "Harbor &ndash; Using Make project logo", "favicon": "https://goharbor.io/favicon.svg", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/use-make/", "og:image:type": "image/png", "og:site_name": "Harbor", "og:title": "Harbor &ndash; Using Make", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "twitter:creator": "@project_harbor", "title": "\n      \nHarbor docs | Using Make\n\n    ", "twitter:site": "@project_harbor", "generator": "Hugo 0.74.0", "og:type": ["documentation", "article"], "scrapeId": "04e323e8-b439-4b96-8cc3-3bbf848619bc", "sourceURL": "https://goharbor.io/docs/2.12.0/build-customize-contribute/use-make", "url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/use-make/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I variables in harbor-2-12-0?\n\nAssistant: To variables in harbor-2-12-0, here's what you do:\n| Variable | Description |\n| --- | --- |\n| BASEIMAGETAG | The tag for base image, default:dev |\n| VERSIONTAG | The tag for harbor image, default:dev |\n| DEVFLAG | Build model flag, default: true |\n| GOBUILDIMAGE | Golang image to compile harbor go source code. |\n| TRIVYFLAG | Whether to enable trivy in harbor, default:false |\n| CHARTFLAG | Whether to enable chartmuseum in harbor, default:false |\n| HTTPPROXY | Clarity proxy to build UI..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/use-make", "title": "Using Make", "description": "This page provides information on using Make to build and manage Harbor images and binaries.", "has_code_examples": true, "has_best_practices": false, "section_count": 3, "timestamp": "2025-03-01 04:04:42", "type": "section_detail", "page_metadata": {"ogUrl": "https://goharbor.io/docs/2.12.0/build-customize-contribute/use-make/", "ogSiteName": "Harbor", "og:locale": "en_US", "ogLocale": "en_US", "ogTitle": "Harbor &ndash; Using Make", "twitter:card": "summary", "og:image:alt": "Harbor &ndash; Using Make project logo", "favicon": "https://goharbor.io/favicon.svg", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/use-make/", "og:image:type": "image/png", "og:site_name": "Harbor", "og:title": "Harbor &ndash; Using Make", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "twitter:creator": "@project_harbor", "title": "\n      \nHarbor docs | Using Make\n\n    ", "twitter:site": "@project_harbor", "generator": "Hugo 0.74.0", "og:type": ["documentation", "article"], "scrapeId": "04e323e8-b439-4b96-8cc3-3bbf848619bc", "sourceURL": "https://goharbor.io/docs/2.12.0/build-customize-contribute/use-make", "url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/use-make/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I targets in harbor-2-12-0?\n\nAssistant: To targets in harbor-2-12-0, here's what you do:\n| Target | Description |\n| --- | --- |\n| all | prepare env, compile binaries, build images and install images |\n| prepare | prepare env |\n| compile | compile core and jobservice code |\n| compile_core | compile core binary |\n| compile_jobservice | compile jobservice binary |\n| build | build Harbor docker images |\n| build_base_docker | build Harbor docker base images |\n| install | compile binaries, build images, prepare specific version of compose file and startup Harbor instance |\n| start | startup Harbor instance |\n| down | shutdown Harbor instance |\n| package_online | prepare online install package |\n| package_offline | prepare offline install package |\n| pushimage | push Harbor images to specific registry server |\n| cleanall | remove binary, Harbor images, specific version docker-compose file, specific version tag and online/offline install package |\n| cleanbinary | remove core and jobservice binary |\n| cleanimage | remove Harbor images |\n| cleandockercomposefile | remove specific version docker-compose |\n| cleanpackage | remove online/offline install package..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/use-make", "title": "Using Make", "description": "This page provides information on using Make to build and manage Harbor images and binaries.", "has_code_examples": true, "has_best_practices": false, "section_count": 3, "timestamp": "2025-03-01 04:04:42", "type": "section_detail", "page_metadata": {"ogUrl": "https://goharbor.io/docs/2.12.0/build-customize-contribute/use-make/", "ogSiteName": "Harbor", "og:locale": "en_US", "ogLocale": "en_US", "ogTitle": "Harbor &ndash; Using Make", "twitter:card": "summary", "og:image:alt": "Harbor &ndash; Using Make project logo", "favicon": "https://goharbor.io/favicon.svg", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/use-make/", "og:image:type": "image/png", "og:site_name": "Harbor", "og:title": "Harbor &ndash; Using Make", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "twitter:creator": "@project_harbor", "title": "\n      \nHarbor docs | Using Make\n\n    ", "twitter:site": "@project_harbor", "generator": "Hugo 0.74.0", "og:type": ["documentation", "article"], "scrapeId": "04e323e8-b439-4b96-8cc3-3bbf848619bc", "sourceURL": "https://goharbor.io/docs/2.12.0/build-customize-contribute/use-make", "url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/use-make/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I examples in harbor-2-12-0?\n\nAssistant: To examples in harbor-2-12-0, here's what you do:\n### Build and run harbor from source code\n\n```sh\nmake install\n```\n\n### Package offline installer\n\n```sh\nmake package_offline\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/use-make", "title": "Using Make", "description": "This page provides information on using Make to build and manage Harbor images and binaries.", "has_code_examples": true, "has_best_practices": false, "section_count": 3, "timestamp": "2025-03-01 04:04:42", "type": "section_detail", "page_metadata": {"ogUrl": "https://goharbor.io/docs/2.12.0/build-customize-contribute/use-make/", "ogSiteName": "Harbor", "og:locale": "en_US", "ogLocale": "en_US", "ogTitle": "Harbor &ndash; Using Make", "twitter:card": "summary", "og:image:alt": "Harbor &ndash; Using Make project logo", "favicon": "https://goharbor.io/favicon.svg", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/use-make/", "og:image:type": "image/png", "og:site_name": "Harbor", "og:title": "Harbor &ndash; Using Make", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "twitter:creator": "@project_harbor", "title": "\n      \nHarbor docs | Using Make\n\n    ", "twitter:site": "@project_harbor", "generator": "Hugo 0.74.0", "og:type": ["documentation", "article"], "scrapeId": "04e323e8-b439-4b96-8cc3-3bbf848619bc", "sourceURL": "https://goharbor.io/docs/2.12.0/build-customize-contribute/use-make", "url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/use-make/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you give me some code examples for Using Make in harbor-2-12-0?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Build and run harbor from source code**:\n\n```yaml\nmake install\n```\n\nThis snippet shows you how to build and run harbor from source code, which is an important aspect of using make.\n\n**Package offline installer**:\n\n```yaml\nmake package_offline\n```\n\nThis snippet shows you how to package offline installer, which is an important aspect of using make.\n\n", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/use-make", "title": "Using Make", "description": "This page provides information on using Make to build and manage Harbor images and binaries.", "has_code_examples": true, "has_best_practices": false, "section_count": 3, "timestamp": "2025-03-01 04:04:42", "type": "code_examples", "page_metadata": {"ogUrl": "https://goharbor.io/docs/2.12.0/build-customize-contribute/use-make/", "ogSiteName": "Harbor", "og:locale": "en_US", "ogLocale": "en_US", "ogTitle": "Harbor &ndash; Using Make", "twitter:card": "summary", "og:image:alt": "Harbor &ndash; Using Make project logo", "favicon": "https://goharbor.io/favicon.svg", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/use-make/", "og:image:type": "image/png", "og:site_name": "Harbor", "og:title": "Harbor &ndash; Using Make", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "twitter:creator": "@project_harbor", "title": "\n      \nHarbor docs | Using Make\n\n    ", "twitter:site": "@project_harbor", "generator": "Hugo 0.74.0", "og:type": ["documentation", "article"], "scrapeId": "04e323e8-b439-4b96-8cc3-3bbf848619bc", "sourceURL": "https://goharbor.io/docs/2.12.0/build-customize-contribute/use-make", "url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/use-make/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you explain what Deleting Artifacts is in harbor-2-12-0?\n\nAssistant: Sure, I'd be happy to explain Deleting Artifacts in harbor-2-12-0.\n\n# Deleting Artifacts\n\nThis page covers the process of deleting artifacts in Harbor v2.0, including the handling of OCI images and OCI image indexes.Here's a quick rundown of what this is about:\n\n## Introduction to OCI Image Index\n\nHarbor v2.0 now supports OCI images and OCI image indexes (OCI Image Index Specification). An OCI image index (or OCI index) is a higher level manifest which points to a list of image manifests, ideal for one or more platforms. Both the index itself and the images referenced within are referred to as artifacts in Harbor parlance. An OCI index could hold another OCI index and so on and so forth. For any artifact referenced by an OCI index, the referenced artifact is known as the child artifact and the OCI index referencing the artifact is known as the parent artifact. We can also say that the child artifact belongs to the parent artifact or is a part of the parent artifact.\n\n## Example of an OCI Image Index\n\nAn example of an OCI image index is provided in the following JSON structure.\n\n## Deleting Artifact\n\nWhen an artifact is not referenced by any OCI index, you can delete the artifact freely which will delete its manifest and all associated tags. When an artifact is referenced by an OCI index, you cannot delete it. In order to delete this artifact, you must first delete all OCI indexes referencing this artifact first, remembering that an artifact can be referenced by multiple parents artifacts pushed onto Harbor by different users. So when deleting an OCI index holding 9 children artifacts not referenced by any other index and 1 child artifact referenced by another index, only 9 out of 10 children artifacts will be deleted. To delete any artifact in the Harbor interface, click on the artifact and select ‘Delete’ and confirm.\n\n## Images\n\n![delete image1](https://goharbor.io/docs/2.12.0/img/deleteimage1.png)\n\n![delete image2](https://goharbor.io/docs/2.12.0/img/deleteimage2.png)\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/deleting-artifact", "title": "Deleting Artifacts", "description": "This page covers the process of deleting artifacts in Harbor v2.0, including the handling of OCI images and OCI image indexes.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 04:11:28", "type": "overview", "page_metadata": {"og:type": ["documentation", "article"], "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/deleting-artifact/", "ogSiteName": "Harbor", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:title": "Harbor &ndash; Deleting Artifacts", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/deleting-artifact/", "og:locale": "en_US", "og:site_name": "Harbor", "twitter:card": "summary", "title": "\n      \nHarbor docs | Deleting Artifacts\n\n    ", "generator": "Hugo 0.74.0", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "favicon": "https://goharbor.io/favicon.svg", "ogLocale": "en_US", "twitter:site": "@project_harbor", "og:image:type": "image/png", "ogTitle": "Harbor &ndash; Deleting Artifacts", "twitter:creator": "@project_harbor", "og:image:alt": "Harbor &ndash; Deleting Artifacts project logo", "scrapeId": "22787237-0e6a-448a-9dee-3938828f4a3a", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/deleting-artifact", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/deleting-artifact/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I introduction to oci image index in harbor-2-12-0?\n\nAssistant: To introduction to oci image index in harbor-2-12-0, here's what you do:\nHarbor v2.0 now supports OCI images and OCI image indexes (OCI Image Index Specification). An OCI image index (or OCI index) is a higher level manifest which points to a list of image manifests, ideal for one or more platforms. Both the index itself and the images referenced within are referred to as artifacts in Harbor parlance. An OCI index could hold another OCI index and so on and so forth. For any artifact referenced by an OCI index, the referenced artifact is known as the child artifact and the OCI index referencing the artifact is known as the parent artifact. We can also say that the child artifact belongs to the parent artifact or is a part of the parent artifact..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/deleting-artifact", "title": "Deleting Artifacts", "description": "This page covers the process of deleting artifacts in Harbor v2.0, including the handling of OCI images and OCI image indexes.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 04:11:28", "type": "section_detail", "page_metadata": {"og:type": ["documentation", "article"], "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/deleting-artifact/", "ogSiteName": "Harbor", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:title": "Harbor &ndash; Deleting Artifacts", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/deleting-artifact/", "og:locale": "en_US", "og:site_name": "Harbor", "twitter:card": "summary", "title": "\n      \nHarbor docs | Deleting Artifacts\n\n    ", "generator": "Hugo 0.74.0", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "favicon": "https://goharbor.io/favicon.svg", "ogLocale": "en_US", "twitter:site": "@project_harbor", "og:image:type": "image/png", "ogTitle": "Harbor &ndash; Deleting Artifacts", "twitter:creator": "@project_harbor", "og:image:alt": "Harbor &ndash; Deleting Artifacts project logo", "scrapeId": "22787237-0e6a-448a-9dee-3938828f4a3a", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/deleting-artifact", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/deleting-artifact/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I example of an oci image index in harbor-2-12-0?\n\nAssistant: To example of an oci image index in harbor-2-12-0, here's what you do:\nAn example of an OCI image index is provided in the following JSON structure..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/deleting-artifact", "title": "Deleting Artifacts", "description": "This page covers the process of deleting artifacts in Harbor v2.0, including the handling of OCI images and OCI image indexes.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 04:11:28", "type": "section_detail", "page_metadata": {"og:type": ["documentation", "article"], "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/deleting-artifact/", "ogSiteName": "Harbor", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:title": "Harbor &ndash; Deleting Artifacts", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/deleting-artifact/", "og:locale": "en_US", "og:site_name": "Harbor", "twitter:card": "summary", "title": "\n      \nHarbor docs | Deleting Artifacts\n\n    ", "generator": "Hugo 0.74.0", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "favicon": "https://goharbor.io/favicon.svg", "ogLocale": "en_US", "twitter:site": "@project_harbor", "og:image:type": "image/png", "ogTitle": "Harbor &ndash; Deleting Artifacts", "twitter:creator": "@project_harbor", "og:image:alt": "Harbor &ndash; Deleting Artifacts project logo", "scrapeId": "22787237-0e6a-448a-9dee-3938828f4a3a", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/deleting-artifact", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/deleting-artifact/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I deleting artifact in harbor-2-12-0?\n\nAssistant: To deleting artifact in harbor-2-12-0, here's what you do:\nWhen an artifact is not referenced by any OCI index, you can delete the artifact freely which will delete its manifest and all associated tags. When an artifact is referenced by an OCI index, you cannot delete it. In order to delete this artifact, you must first delete all OCI indexes referencing this artifact first, remembering that an artifact can be referenced by multiple parents artifacts pushed onto Harbor by different users. So when deleting an OCI index holding 9 children artifacts not referenced by any other index and 1 child artifact referenced by another index, only 9 out of 10 children artifacts will be deleted. To delete any artifact in the Harbor interface, click on the artifact and select ‘Delete’ and confirm..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/deleting-artifact", "title": "Deleting Artifacts", "description": "This page covers the process of deleting artifacts in Harbor v2.0, including the handling of OCI images and OCI image indexes.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 04:11:28", "type": "section_detail", "page_metadata": {"og:type": ["documentation", "article"], "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/deleting-artifact/", "ogSiteName": "Harbor", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:title": "Harbor &ndash; Deleting Artifacts", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/deleting-artifact/", "og:locale": "en_US", "og:site_name": "Harbor", "twitter:card": "summary", "title": "\n      \nHarbor docs | Deleting Artifacts\n\n    ", "generator": "Hugo 0.74.0", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "favicon": "https://goharbor.io/favicon.svg", "ogLocale": "en_US", "twitter:site": "@project_harbor", "og:image:type": "image/png", "ogTitle": "Harbor &ndash; Deleting Artifacts", "twitter:creator": "@project_harbor", "og:image:alt": "Harbor &ndash; Deleting Artifacts project logo", "scrapeId": "22787237-0e6a-448a-9dee-3938828f4a3a", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/deleting-artifact", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/deleting-artifact/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I images in harbor-2-12-0?\n\nAssistant: To images in harbor-2-12-0, here's what you do:\n![delete image1](https://goharbor.io/docs/2.12.0/img/deleteimage1.png)\n\n![delete image2](https://goharbor.io/docs/2.12.0/img/deleteimage2.png).\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/deleting-artifact", "title": "Deleting Artifacts", "description": "This page covers the process of deleting artifacts in Harbor v2.0, including the handling of OCI images and OCI image indexes.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 04:11:28", "type": "section_detail", "page_metadata": {"og:type": ["documentation", "article"], "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/deleting-artifact/", "ogSiteName": "Harbor", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:title": "Harbor &ndash; Deleting Artifacts", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/deleting-artifact/", "og:locale": "en_US", "og:site_name": "Harbor", "twitter:card": "summary", "title": "\n      \nHarbor docs | Deleting Artifacts\n\n    ", "generator": "Hugo 0.74.0", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "favicon": "https://goharbor.io/favicon.svg", "ogLocale": "en_US", "twitter:site": "@project_harbor", "og:image:type": "image/png", "ogTitle": "Harbor &ndash; Deleting Artifacts", "twitter:creator": "@project_harbor", "og:image:alt": "Harbor &ndash; Deleting Artifacts project logo", "scrapeId": "22787237-0e6a-448a-9dee-3938828f4a3a", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/deleting-artifact", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/deleting-artifact/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you give me some code examples for Deleting Artifacts in harbor-2-12-0?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**OCI Image Index Example**:\n\n```yaml\n{\n  \"schemaVersion\": 2,\n  \"manifests\": [\n    {\n      \"mediaType\": \"application/vnd.oci.image.manifest.v1+json\",\n      \"size\": 7143,\n      \"digest\": \"sha256:e692418e4cbaf90ca69d05a66403747baa33ee08806650b51fab815ad7fc331f\",\n      \"platform\": {\n        \"architecture\": \"ppc64le\",\n        \"os\": \"linux\"\n      }\n    },\n    {\n      \"mediaType\": \"application/vnd.oci.image.manifest.v1+json\",\n      \"size\": 7682,\n      \"digest\": \"sha256:5b0bcabd1ed22e9fb1310cf6c2dec7cdef19f0ad69efa1f392e94a4333501270\",\n      \"platform\": {\n        \"architecture\": \"amd64\",\n        \"os\": \"linux\"\n      }\n    }\n  ],\n  \"annotations\": {\n    \"com.example.key1\": \"value1\",\n    \"com.example.key2\": \"value2\"\n  }\n}\n```\n\nThis snippet shows you how to oci image index example, which is an important aspect of deleting artifacts.\n\n", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/deleting-artifact", "title": "Deleting Artifacts", "description": "This page covers the process of deleting artifacts in Harbor v2.0, including the handling of OCI images and OCI image indexes.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 04:11:28", "type": "code_examples", "page_metadata": {"og:type": ["documentation", "article"], "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/deleting-artifact/", "ogSiteName": "Harbor", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:title": "Harbor &ndash; Deleting Artifacts", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/deleting-artifact/", "og:locale": "en_US", "og:site_name": "Harbor", "twitter:card": "summary", "title": "\n      \nHarbor docs | Deleting Artifacts\n\n    ", "generator": "Hugo 0.74.0", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "favicon": "https://goharbor.io/favicon.svg", "ogLocale": "en_US", "twitter:site": "@project_harbor", "og:image:type": "image/png", "ogTitle": "Harbor &ndash; Deleting Artifacts", "twitter:creator": "@project_harbor", "og:image:alt": "Harbor &ndash; Deleting Artifacts project logo", "scrapeId": "22787237-0e6a-448a-9dee-3938828f4a3a", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/deleting-artifact", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/deleting-artifact/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: What are some tips for using Deleting Artifacts in harbor-2-12-0 effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nEnsure that all OCI indexes referencing an artifact are deleted before attempting to delete the artifact itself.\n\nBe aware that an artifact can be referenced by multiple parent artifacts, which may affect deletion operations.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/deleting-artifact", "title": "Deleting Artifacts", "description": "This page covers the process of deleting artifacts in Harbor v2.0, including the handling of OCI images and OCI image indexes.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 04:11:28", "type": "best_practices", "page_metadata": {"og:type": ["documentation", "article"], "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/deleting-artifact/", "ogSiteName": "Harbor", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:title": "Harbor &ndash; Deleting Artifacts", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/deleting-artifact/", "og:locale": "en_US", "og:site_name": "Harbor", "twitter:card": "summary", "title": "\n      \nHarbor docs | Deleting Artifacts\n\n    ", "generator": "Hugo 0.74.0", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "favicon": "https://goharbor.io/favicon.svg", "ogLocale": "en_US", "twitter:site": "@project_harbor", "og:image:type": "image/png", "ogTitle": "Harbor &ndash; Deleting Artifacts", "twitter:creator": "@project_harbor", "og:image:alt": "Harbor &ndash; Deleting Artifacts project logo", "scrapeId": "22787237-0e6a-448a-9dee-3938828f4a3a", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/deleting-artifact", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/deleting-artifact/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you explain what Create Tag Retention Rules is in harbor-2-12-0?\n\nAssistant: Sure, I'd be happy to explain Create Tag Retention Rules in harbor-2-12-0.\n\n# Create Tag Retention Rules\n\nThis page covers how to define and configure tag retention rules for repositories in Harbor, including examples and best practices.Here's a quick rundown of what this is about:\n\n## How Tag Retention Rules Work\n\nYou define tag retention rules on projects and can specify which repositories you want to apply it to. This allows for greater granularity when defining your retention rules. As the name suggests, when you define a retention rule for a repository, you are identifying which tags to retain. You do not define rules to explicitly remove tags. Rather, when you set a rule, any tags in a repository that are not identified as being eligible for retention are discarded. The `OR` algorithm is used between rules.\n\nA tag retention rule has 3 filters that are applied sequentially, as described in the following table.\n\n| Order | Filter | Description |\n| --- | --- | --- |\n| First | Repository or repositories | Identity the tags on which to apply the rule. You can identify repositories that either have a certain name or name fragment, or that do not have that name or name fragment. Wild cards (for example `*repo`, `repo*`, and `**`) are permitted. The repository filter is applied first to mark the repositories to which to apply the retention rule. The identified repositories are earmarked for further matching based on the tag criteria. No action is taken on the nonspecified repositories at this stage. |\n| Second | Quantity to retain | Set which tags to retain either by specifying a maximum number of tags, or by specifying a maximum period for which to retain tags. |\n| Third | Tags to retain | Identify the tag or tags on which to apply the rule. You can identify tags that either have a certain name or name fragment, or that do not have that name or name fragment. Wild cards (for example `*tag`, `tag*`, and `**`) are permitted. Use the checkbox to select whether untagged artifacts should be captured as part of the set of artifacts eligible for tag retention.\n\n## Example 1\n\n- You have 5 repositories in a project, repositories A to E.\n  - Repository A has 102 artifacts with 2 untagged, all of which have been pulled in the last week.\n  - Repositories B to E each have 7 artifacts with 1 untagged artifact, none of which have been pulled in the last month.\n- You set the repository filter to `**`, meaning that all repositories in the project are included.\n- You set the retention policy to retain the 10 most recently pulled artifacts in each repository.\n- You set the tag filter to `**`, keep “untagged artifacts” unchecked, meaning that all artifacts with at least one tag in the repository are included.\n\nIn this example the rule retains the 10 most recently pulled tagged artifacts in repository A, and the 6 of the artifacts in each of the 4 repositories B to E. So, a total of 34 artifacts are retained in the project.\nIn other words, the rule does not treat all of the artifacts in repositories A to E as a single pool from which to choose the 10 most recent artifacts.\nSo, even if the 11th to 100th tags in repository A have been pulled more recently than any of the tags in repositories B to E, all of the tagged artifacts in repositories B to E are retained, because each of those repositories has fewer than 10 tags, and all untagged artifacts are deleted.\n\n## Example 2\n\nThis example uses the same project and repositories as example 1, but sets the retention policy to retain the artifacts in each repository that have been pulled in the last 7 days.\n\nIn this case, all of the 100 tagged artifacts in repository A are retained because they have been pulled in the last 7 days. None of the artifacts in repositories B to E are retained, because none of them has been pulled in the last week. In this example, 100 artifacts are retained, as opposed to 34 artifacts in example 1.\nAnd all untagged artifacts are deleted.\n\n## Example 3\n\nThis example uses the same project and repositories as example 2, but checked “untagged artifacts”, then all artifacts in repository A are retained.\n\nIn this case, all of the 103 artifacts in repository A are retained because they have been pulled in the last 7 days. None of the artifacts in repositories B to E are retained, because none of them has been pulled in the last week. In this example, 103 artifacts are retained, as opposed to 100 artifacts in example 2.\nAnd all untagged artifacts are retained.\n\n## Tag Retention Rules and Native Docker Tag Deletion\n\n**Note**: If an artifact has several tags, and only a partial set of tags are matched via the retention policy, then the artifact and all its tags will be retained. In other words, retention is matched at the tag level but retention / deletion is carried out at the artifact level, with retention fully preserving the artifact including all of its tags.\n\nFor example, you have following tags, listed according to their push time, and all of them refer to the same SHA digest:\n\n- `harbor-1.8`, pushed 8/14/2019 01:00am\n- `harbor-release`, pushed 8/14/2019 03:00am\n- `harbor-nightly`, pushed 8/14/2019 06:00am\n- `harbor-latest`, pushed 8/14/2019 09:00am\n\nYou configure a retention policy to retain the two latest tags that match `harbor-*`, so that `harbor-nightly` and `harbor-latest` are retained. However, since all tags refer to the same SHA digest, this policy would also retain the tags `harbor-1.8` and `harbor-release`, so all tags are retained.\n\n## Combining Rules on a Repository\n\nYou can define up to 15 rules per project. You can apply multiple rules to a repository or set of repositories. When you apply multiple rules to a repository, they are applied with `OR` logic rather than with `AND` logic. In this way, there is no prioritization of application of the rules on a given repository. Rules run concurrently in the background, and the resulting sets from each rule are combined at the end of the run.\n\n## Example 4\n\nThis example uses the same project and repositories as examples 1 and 2, but sets two rules:\n\n- Rule 1: Retain all of the artifacts in each repository that have been pulled in the last 7 days.\n- Rule 2: Retain a maximum number of 10 artifacts in each repository.\n\nFor repository A, rule 1 retains all of the 100 tagged artifacts because they have all been pulled in the last week. Rule 2 retains the 10 most recently pulled artifacts. So, since the two rules are applied with an `OR` relationship, all 100 artifacts are retained in repository A.\n\nFor repositories B-E, rule 1 will retain 0 artifacts as no artifacts are pulled in the last week. Rule 2 will retain all 6 artifacts because 6 < 10. So, since the two rules are applied with an `OR` relationship, for repositories B-E, each repository will keep all 6 artifacts.\n\nIn this example, all of the artifacts are retained.\n\n## Example 5\n\nThis example uses a different repository to the previous examples.\n\n- You have a repository that has 12 tags:\n\n| Production | Release Candidate | Release |\n| --- | --- | --- |\n| `2.1-your_repo-prod` | `2.1-your_repo-rc` | `2.1-your_repo-release` |\n| `2.2-your_repo-prod` | `2.2-your_repo-rc` | `2.2-your_repo-release` |\n| `3.1-your_repo-prod` | `3.1-your_repo-rc` | `3.1-your_repo-release` |\n| `4.4-your_repo-prod` | `4.4-your_repo-rc` | `4.4-your_repo-release` |\n\n- You define two tag retention rules on this repository:\n  - Retain the 10 most recently pushed artifacts that start with `2`.\n  - Retain the 10 most recently pushed artifacts that end with `-prod`.\n\nIn this example, the rules are applied to the following 8 tags:\n\n- `2.1-your_repo-prod`\n- `2.1-your_repo-rc`\n- `2.1-your_repo-release`\n- `2.2-your_repo-prod`\n- `2.2-your_repo-rc`\n- `2.2-your_repo-release`\n- `3.1-your_repo-prod`\n- `4.4-your_repo-prod`\n\nBecause there are no untagged artifacts, checking the checkbox makes no difference.\n\n## How Tag Retention Rules Interact with Project Quotas\n\nThe Harbor system administrator can set a maximum on the number of tags that a project can contain and the amount of storage that it can consume. For information about project quotas, see [Configure Project Quotas](https://goharbor.io/docs/2.12.0/administration/configure-project-quotas/).\n\nIf you set a quota on a project, this quota cannot be exceeded. The quota is applied to a project even if you set a retention rule that would exceed it. In other words, you cannot use retention rules to bypass quotas.\n\n## Configure Tag Retention Rules\n\n01. Log in to the Harbor interface with an account that has at least project administrator privileges.\n\n02. Go to **Projects**, select a project, select **Policy**, and select **Tag Retention**.\n\n03. Click **Add Rule** to add a rule.\n\n04. In the **Repositories** drop-down menu, select **matching** or **excluding**.\n\n05. In the **Repositories** text box, identify the repositories on which to apply the rule.\n\n    You can define the repositories on which to apply the rule by entering the following information:\n\n    - A repository name, for example `my_repo_1`.\n    - A comma-separated list of repository names, for example `my_repo_1,my_repo_2,your_repo_3`.\n    - A partial repository name with wildcards, for example `my_*`, `*_3`, or `*_repo_*`.\n    - `**` to apply the rule to all of the repositories in the project.\n\nIf you selected **matching**, the rule is applied to the repositories you identified. If you selected **excluding**, the rule is applied to all of the repositories in the project except for the ones that you identified.\n\n06. In the **By artifact count or number of days** drop-down menu, define how many tags to retain or the period to retain tags.\n\n| Option | Description |\n| --- | --- |\n| **retain the most recently pushed # artifacts** | Enter the maximum number of artifacts to retain, keeping the ones that have been pushed most recently. There is no maximum age for an artifact. |\n| **retain the most recently pulled # artifacts** | Enter the maximum number of artifacts to retain, keeping only the ones that have been pulled recently. There is no maximum age for an artifact. |\n| **retain the artifacts pushed within the last # days** | Enter the number of days to retain artifacts, keeping only the ones that have been pushed during this period. There is no maximum number of artifacts. |\n| **retain the artifacts pulled within the last # days** | Enter the number of days to retain artifacts, keeping only the ones that have been pulled during this period. There is no maximum number of artifacts. |\n| **retain always** | Always retain the artifacts identified by this rule. |\n\n07. In the **Tags** drop-down menu, select **matching** or **excluding**.\n\n08. In the **Tags** text box, identify the tags on which to apply the rule.\n\n    You can define the tags on which to apply the rule by entering the following information:\n\n    - A tag name, for example `my_tag_1`.\n    - A comma-separated list of tag names, for example `my_tag_1,my_tag_2,your_tag_3`.\n    - A partial tag name with wildcards, for example `my_*`, `*_3`, or `*_tag_*`.\n    - `**` to apply the rule to all of the tags in the project.\n\nIf you selected **matching**, the rule is applied to the tags you identified. If you selected **excluding**, the rule is applied to all of the tags in the repository except for the ones that you identified.\n\n09. Click **Add** to save the rule.\n\n10. (Optional) Click **Add Rule** to add more rules, up to a maximum of 15 per project.\n\n11. (Optional) Under Schedule, click **Edit** and select how often to run the rule.\n\n    If you select **Custom**, enter a cron job command to schedule the rule.\n\n    **NOTE**: If you define multiple rules, the schedule is applied to all of the rules. You cannot schedule different rules to run at different times.\n\n12. Click **Dry Run** to test the rule or rules that you have defined.\n\n13. Click **Run Now** to run the rule immediately.\n\n**WARNING**: You cannot revert a rule after you run it. It is strongly recommended to perform a dry run before you run rules.\n\nTo modify an existing rule, use the **Action** drop-down menu next to a rule to deactivate, edit, or delete that rule.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-tag-retention-rules", "title": "Create Tag Retention Rules", "description": "This page covers how to define and configure tag retention rules for repositories in Harbor, including examples and best practices.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 04:26:51", "type": "overview", "page_metadata": {"favicon": "https://goharbor.io/favicon.svg", "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-tag-retention-rules/", "ogSiteName": "Harbor", "twitter:site": "@project_harbor", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-tag-retention-rules/", "og:image:type": "image/png", "og:image:alt": "Harbor &ndash; Create Tag Retention Rules project logo", "generator": "Hugo 0.74.0", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "title": "\n      \nHarbor docs | Create Tag Retention Rules\n\n    ", "twitter:creator": "@project_harbor", "og:title": "Harbor &ndash; Create Tag Retention Rules", "og:type": ["documentation", "article"], "og:site_name": "Harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:locale": "en_US", "twitter:card": "summary", "ogLocale": "en_US", "ogTitle": "Harbor &ndash; Create Tag Retention Rules", "scrapeId": "249c1ae9-8a56-4216-ad07-992f9f95235a", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-tag-retention-rules", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-tag-retention-rules/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I how tag retention rules work in harbor-2-12-0?\n\nAssistant: To how tag retention rules work in harbor-2-12-0, here's what you do:\nYou define tag retention rules on projects and can specify which repositories you want to apply it to. This allows for greater granularity when defining your retention rules. As the name suggests, when you define a retention rule for a repository, you are identifying which tags to retain. You do not define rules to explicitly remove tags. Rather, when you set a rule, any tags in a repository that are not identified as being eligible for retention are discarded. The `OR` algorithm is used between rules.\n\nA tag retention rule has 3 filters that are applied sequentially, as described in the following table.\n\n| Order | Filter | Description |\n| --- | --- | --- |\n| First | Repository or repositories | Identity the tags on which to apply the rule. You can identify repositories that either have a certain name or name fragment, or that do not have that name or name fragment. Wild cards (for example `*repo`, `repo*`, and `**`) are permitted. The repository filter is applied first to mark the repositories to which to apply the retention rule. The identified repositories are earmarked for further matching based on the tag criteria. No action is taken on the nonspecified repositories at this stage. |\n| Second | Quantity to retain | Set which tags to retain either by specifying a maximum number of tags, or by specifying a maximum period for which to retain tags. |\n| Third | Tags to retain | Identify the tag or tags on which to apply the rule. You can identify tags that either have a certain name or name fragment, or that do not have that name or name fragment. Wild cards (for example `*tag`, `tag*`, and `**`) are permitted. Use the checkbox to select whether untagged artifacts should be captured as part of the set of artifacts eligible for tag retention..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-tag-retention-rules", "title": "Create Tag Retention Rules", "description": "This page covers how to define and configure tag retention rules for repositories in Harbor, including examples and best practices.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 04:26:51", "type": "section_detail", "page_metadata": {"favicon": "https://goharbor.io/favicon.svg", "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-tag-retention-rules/", "ogSiteName": "Harbor", "twitter:site": "@project_harbor", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-tag-retention-rules/", "og:image:type": "image/png", "og:image:alt": "Harbor &ndash; Create Tag Retention Rules project logo", "generator": "Hugo 0.74.0", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "title": "\n      \nHarbor docs | Create Tag Retention Rules\n\n    ", "twitter:creator": "@project_harbor", "og:title": "Harbor &ndash; Create Tag Retention Rules", "og:type": ["documentation", "article"], "og:site_name": "Harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:locale": "en_US", "twitter:card": "summary", "ogLocale": "en_US", "ogTitle": "Harbor &ndash; Create Tag Retention Rules", "scrapeId": "249c1ae9-8a56-4216-ad07-992f9f95235a", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-tag-retention-rules", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-tag-retention-rules/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I example 1 in harbor-2-12-0?\n\nAssistant: To example 1 in harbor-2-12-0, here's what you do:\n- You have 5 repositories in a project, repositories A to E.\n  - Repository A has 102 artifacts with 2 untagged, all of which have been pulled in the last week.\n  - Repositories B to E each have 7 artifacts with 1 untagged artifact, none of which have been pulled in the last month.\n- You set the repository filter to `**`, meaning that all repositories in the project are included.\n- You set the retention policy to retain the 10 most recently pulled artifacts in each repository.\n- You set the tag filter to `**`, keep “untagged artifacts” unchecked, meaning that all artifacts with at least one tag in the repository are included.\n\nIn this example the rule retains the 10 most recently pulled tagged artifacts in repository A, and the 6 of the artifacts in each of the 4 repositories B to E. So, a total of 34 artifacts are retained in the project.\nIn other words, the rule does not treat all of the artifacts in repositories A to E as a single pool from which to choose the 10 most recent artifacts.\nSo, even if the 11th to 100th tags in repository A have been pulled more recently than any of the tags in repositories B to E, all of the tagged artifacts in repositories B to E are retained, because each of those repositories has fewer than 10 tags, and all untagged artifacts are deleted..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-tag-retention-rules", "title": "Create Tag Retention Rules", "description": "This page covers how to define and configure tag retention rules for repositories in Harbor, including examples and best practices.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 04:26:51", "type": "section_detail", "page_metadata": {"favicon": "https://goharbor.io/favicon.svg", "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-tag-retention-rules/", "ogSiteName": "Harbor", "twitter:site": "@project_harbor", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-tag-retention-rules/", "og:image:type": "image/png", "og:image:alt": "Harbor &ndash; Create Tag Retention Rules project logo", "generator": "Hugo 0.74.0", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "title": "\n      \nHarbor docs | Create Tag Retention Rules\n\n    ", "twitter:creator": "@project_harbor", "og:title": "Harbor &ndash; Create Tag Retention Rules", "og:type": ["documentation", "article"], "og:site_name": "Harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:locale": "en_US", "twitter:card": "summary", "ogLocale": "en_US", "ogTitle": "Harbor &ndash; Create Tag Retention Rules", "scrapeId": "249c1ae9-8a56-4216-ad07-992f9f95235a", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-tag-retention-rules", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-tag-retention-rules/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I example 2 in harbor-2-12-0?\n\nAssistant: To example 2 in harbor-2-12-0, here's what you do:\nThis example uses the same project and repositories as example 1, but sets the retention policy to retain the artifacts in each repository that have been pulled in the last 7 days.\n\nIn this case, all of the 100 tagged artifacts in repository A are retained because they have been pulled in the last 7 days. None of the artifacts in repositories B to E are retained, because none of them has been pulled in the last week. In this example, 100 artifacts are retained, as opposed to 34 artifacts in example 1.\nAnd all untagged artifacts are deleted..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-tag-retention-rules", "title": "Create Tag Retention Rules", "description": "This page covers how to define and configure tag retention rules for repositories in Harbor, including examples and best practices.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 04:26:51", "type": "section_detail", "page_metadata": {"favicon": "https://goharbor.io/favicon.svg", "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-tag-retention-rules/", "ogSiteName": "Harbor", "twitter:site": "@project_harbor", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-tag-retention-rules/", "og:image:type": "image/png", "og:image:alt": "Harbor &ndash; Create Tag Retention Rules project logo", "generator": "Hugo 0.74.0", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "title": "\n      \nHarbor docs | Create Tag Retention Rules\n\n    ", "twitter:creator": "@project_harbor", "og:title": "Harbor &ndash; Create Tag Retention Rules", "og:type": ["documentation", "article"], "og:site_name": "Harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:locale": "en_US", "twitter:card": "summary", "ogLocale": "en_US", "ogTitle": "Harbor &ndash; Create Tag Retention Rules", "scrapeId": "249c1ae9-8a56-4216-ad07-992f9f95235a", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-tag-retention-rules", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-tag-retention-rules/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I example 3 in harbor-2-12-0?\n\nAssistant: To example 3 in harbor-2-12-0, here's what you do:\nThis example uses the same project and repositories as example 2, but checked “untagged artifacts”, then all artifacts in repository A are retained.\n\nIn this case, all of the 103 artifacts in repository A are retained because they have been pulled in the last 7 days. None of the artifacts in repositories B to E are retained, because none of them has been pulled in the last week. In this example, 103 artifacts are retained, as opposed to 100 artifacts in example 2.\nAnd all untagged artifacts are retained..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-tag-retention-rules", "title": "Create Tag Retention Rules", "description": "This page covers how to define and configure tag retention rules for repositories in Harbor, including examples and best practices.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 04:26:51", "type": "section_detail", "page_metadata": {"favicon": "https://goharbor.io/favicon.svg", "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-tag-retention-rules/", "ogSiteName": "Harbor", "twitter:site": "@project_harbor", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-tag-retention-rules/", "og:image:type": "image/png", "og:image:alt": "Harbor &ndash; Create Tag Retention Rules project logo", "generator": "Hugo 0.74.0", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "title": "\n      \nHarbor docs | Create Tag Retention Rules\n\n    ", "twitter:creator": "@project_harbor", "og:title": "Harbor &ndash; Create Tag Retention Rules", "og:type": ["documentation", "article"], "og:site_name": "Harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:locale": "en_US", "twitter:card": "summary", "ogLocale": "en_US", "ogTitle": "Harbor &ndash; Create Tag Retention Rules", "scrapeId": "249c1ae9-8a56-4216-ad07-992f9f95235a", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-tag-retention-rules", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-tag-retention-rules/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I tag retention rules and native docker tag deletion in harbor-2-12-0?\n\nAssistant: To tag retention rules and native docker tag deletion in harbor-2-12-0, here's what you do:\n**Note**: If an artifact has several tags, and only a partial set of tags are matched via the retention policy, then the artifact and all its tags will be retained. In other words, retention is matched at the tag level but retention / deletion is carried out at the artifact level, with retention fully preserving the artifact including all of its tags.\n\nFor example, you have following tags, listed according to their push time, and all of them refer to the same SHA digest:\n\n- `harbor-1.8`, pushed 8/14/2019 01:00am\n- `harbor-release`, pushed 8/14/2019 03:00am\n- `harbor-nightly`, pushed 8/14/2019 06:00am\n- `harbor-latest`, pushed 8/14/2019 09:00am\n\nYou configure a retention policy to retain the two latest tags that match `harbor-*`, so that `harbor-nightly` and `harbor-latest` are retained. However, since all tags refer to the same SHA digest, this policy would also retain the tags `harbor-1.8` and `harbor-release`, so all tags are retained..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-tag-retention-rules", "title": "Create Tag Retention Rules", "description": "This page covers how to define and configure tag retention rules for repositories in Harbor, including examples and best practices.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 04:26:51", "type": "section_detail", "page_metadata": {"favicon": "https://goharbor.io/favicon.svg", "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-tag-retention-rules/", "ogSiteName": "Harbor", "twitter:site": "@project_harbor", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-tag-retention-rules/", "og:image:type": "image/png", "og:image:alt": "Harbor &ndash; Create Tag Retention Rules project logo", "generator": "Hugo 0.74.0", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "title": "\n      \nHarbor docs | Create Tag Retention Rules\n\n    ", "twitter:creator": "@project_harbor", "og:title": "Harbor &ndash; Create Tag Retention Rules", "og:type": ["documentation", "article"], "og:site_name": "Harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:locale": "en_US", "twitter:card": "summary", "ogLocale": "en_US", "ogTitle": "Harbor &ndash; Create Tag Retention Rules", "scrapeId": "249c1ae9-8a56-4216-ad07-992f9f95235a", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-tag-retention-rules", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-tag-retention-rules/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I combining rules on a repository in harbor-2-12-0?\n\nAssistant: To combining rules on a repository in harbor-2-12-0, here's what you do:\nYou can define up to 15 rules per project. You can apply multiple rules to a repository or set of repositories. When you apply multiple rules to a repository, they are applied with `OR` logic rather than with `AND` logic. In this way, there is no prioritization of application of the rules on a given repository. Rules run concurrently in the background, and the resulting sets from each rule are combined at the end of the run..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-tag-retention-rules", "title": "Create Tag Retention Rules", "description": "This page covers how to define and configure tag retention rules for repositories in Harbor, including examples and best practices.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 04:26:51", "type": "section_detail", "page_metadata": {"favicon": "https://goharbor.io/favicon.svg", "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-tag-retention-rules/", "ogSiteName": "Harbor", "twitter:site": "@project_harbor", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-tag-retention-rules/", "og:image:type": "image/png", "og:image:alt": "Harbor &ndash; Create Tag Retention Rules project logo", "generator": "Hugo 0.74.0", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "title": "\n      \nHarbor docs | Create Tag Retention Rules\n\n    ", "twitter:creator": "@project_harbor", "og:title": "Harbor &ndash; Create Tag Retention Rules", "og:type": ["documentation", "article"], "og:site_name": "Harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:locale": "en_US", "twitter:card": "summary", "ogLocale": "en_US", "ogTitle": "Harbor &ndash; Create Tag Retention Rules", "scrapeId": "249c1ae9-8a56-4216-ad07-992f9f95235a", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-tag-retention-rules", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-tag-retention-rules/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I example 4 in harbor-2-12-0?\n\nAssistant: To example 4 in harbor-2-12-0, here's what you do:\nThis example uses the same project and repositories as examples 1 and 2, but sets two rules:\n\n- Rule 1: Retain all of the artifacts in each repository that have been pulled in the last 7 days.\n- Rule 2: Retain a maximum number of 10 artifacts in each repository.\n\nFor repository A, rule 1 retains all of the 100 tagged artifacts because they have all been pulled in the last week. Rule 2 retains the 10 most recently pulled artifacts. So, since the two rules are applied with an `OR` relationship, all 100 artifacts are retained in repository A.\n\nFor repositories B-E, rule 1 will retain 0 artifacts as no artifacts are pulled in the last week. Rule 2 will retain all 6 artifacts because 6 < 10. So, since the two rules are applied with an `OR` relationship, for repositories B-E, each repository will keep all 6 artifacts.\n\nIn this example, all of the artifacts are retained..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-tag-retention-rules", "title": "Create Tag Retention Rules", "description": "This page covers how to define and configure tag retention rules for repositories in Harbor, including examples and best practices.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 04:26:51", "type": "section_detail", "page_metadata": {"favicon": "https://goharbor.io/favicon.svg", "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-tag-retention-rules/", "ogSiteName": "Harbor", "twitter:site": "@project_harbor", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-tag-retention-rules/", "og:image:type": "image/png", "og:image:alt": "Harbor &ndash; Create Tag Retention Rules project logo", "generator": "Hugo 0.74.0", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "title": "\n      \nHarbor docs | Create Tag Retention Rules\n\n    ", "twitter:creator": "@project_harbor", "og:title": "Harbor &ndash; Create Tag Retention Rules", "og:type": ["documentation", "article"], "og:site_name": "Harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:locale": "en_US", "twitter:card": "summary", "ogLocale": "en_US", "ogTitle": "Harbor &ndash; Create Tag Retention Rules", "scrapeId": "249c1ae9-8a56-4216-ad07-992f9f95235a", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-tag-retention-rules", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-tag-retention-rules/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I example 5 in harbor-2-12-0?\n\nAssistant: To example 5 in harbor-2-12-0, here's what you do:\nThis example uses a different repository to the previous examples.\n\n- You have a repository that has 12 tags:\n\n| Production | Release Candidate | Release |\n| --- | --- | --- |\n| `2.1-your_repo-prod` | `2.1-your_repo-rc` | `2.1-your_repo-release` |\n| `2.2-your_repo-prod` | `2.2-your_repo-rc` | `2.2-your_repo-release` |\n| `3.1-your_repo-prod` | `3.1-your_repo-rc` | `3.1-your_repo-release` |\n| `4.4-your_repo-prod` | `4.4-your_repo-rc` | `4.4-your_repo-release` |\n\n- You define two tag retention rules on this repository:\n  - Retain the 10 most recently pushed artifacts that start with `2`.\n  - Retain the 10 most recently pushed artifacts that end with `-prod`.\n\nIn this example, the rules are applied to the following 8 tags:\n\n- `2.1-your_repo-prod`\n- `2.1-your_repo-rc`\n- `2.1-your_repo-release`\n- `2.2-your_repo-prod`\n- `2.2-your_repo-rc`\n- `2.2-your_repo-release`\n- `3.1-your_repo-prod`\n- `4.4-your_repo-prod`\n\nBecause there are no untagged artifacts, checking the checkbox makes no difference..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-tag-retention-rules", "title": "Create Tag Retention Rules", "description": "This page covers how to define and configure tag retention rules for repositories in Harbor, including examples and best practices.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 04:26:51", "type": "section_detail", "page_metadata": {"favicon": "https://goharbor.io/favicon.svg", "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-tag-retention-rules/", "ogSiteName": "Harbor", "twitter:site": "@project_harbor", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-tag-retention-rules/", "og:image:type": "image/png", "og:image:alt": "Harbor &ndash; Create Tag Retention Rules project logo", "generator": "Hugo 0.74.0", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "title": "\n      \nHarbor docs | Create Tag Retention Rules\n\n    ", "twitter:creator": "@project_harbor", "og:title": "Harbor &ndash; Create Tag Retention Rules", "og:type": ["documentation", "article"], "og:site_name": "Harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:locale": "en_US", "twitter:card": "summary", "ogLocale": "en_US", "ogTitle": "Harbor &ndash; Create Tag Retention Rules", "scrapeId": "249c1ae9-8a56-4216-ad07-992f9f95235a", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-tag-retention-rules", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-tag-retention-rules/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I how tag retention rules interact with project quotas in harbor-2-12-0?\n\nAssistant: To how tag retention rules interact with project quotas in harbor-2-12-0, here's what you do:\nThe Harbor system administrator can set a maximum on the number of tags that a project can contain and the amount of storage that it can consume. For information about project quotas, see [Configure Project Quotas](https://goharbor.io/docs/2.12.0/administration/configure-project-quotas/).\n\nIf you set a quota on a project, this quota cannot be exceeded. The quota is applied to a project even if you set a retention rule that would exceed it. In other words, you cannot use retention rules to bypass quotas..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-tag-retention-rules", "title": "Create Tag Retention Rules", "description": "This page covers how to define and configure tag retention rules for repositories in Harbor, including examples and best practices.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 04:26:51", "type": "section_detail", "page_metadata": {"favicon": "https://goharbor.io/favicon.svg", "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-tag-retention-rules/", "ogSiteName": "Harbor", "twitter:site": "@project_harbor", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-tag-retention-rules/", "og:image:type": "image/png", "og:image:alt": "Harbor &ndash; Create Tag Retention Rules project logo", "generator": "Hugo 0.74.0", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "title": "\n      \nHarbor docs | Create Tag Retention Rules\n\n    ", "twitter:creator": "@project_harbor", "og:title": "Harbor &ndash; Create Tag Retention Rules", "og:type": ["documentation", "article"], "og:site_name": "Harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:locale": "en_US", "twitter:card": "summary", "ogLocale": "en_US", "ogTitle": "Harbor &ndash; Create Tag Retention Rules", "scrapeId": "249c1ae9-8a56-4216-ad07-992f9f95235a", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-tag-retention-rules", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-tag-retention-rules/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I configure tag retention rules in harbor-2-12-0?\n\nAssistant: To configure tag retention rules in harbor-2-12-0, here's what you do:\n01. Log in to the Harbor interface with an account that has at least project administrator privileges.\n\n02. Go to **Projects**, select a project, select **Policy**, and select **Tag Retention**.\n\n03. Click **Add Rule** to add a rule.\n\n04. In the **Repositories** drop-down menu, select **matching** or **excluding**.\n\n05. In the **Repositories** text box, identify the repositories on which to apply the rule.\n\n    You can define the repositories on which to apply the rule by entering the following information:\n\n    - A repository name, for example `my_repo_1`.\n    - A comma-separated list of repository names, for example `my_repo_1,my_repo_2,your_repo_3`.\n    - A partial repository name with wildcards, for example `my_*`, `*_3`, or `*_repo_*`.\n    - `**` to apply the rule to all of the repositories in the project.\n\nIf you selected **matching**, the rule is applied to the repositories you identified. If you selected **excluding**, the rule is applied to all of the repositories in the project except for the ones that you identified.\n\n06. In the **By artifact count or number of days** drop-down menu, define how many tags to retain or the period to retain tags.\n\n| Option | Description |\n| --- | --- |\n| **retain the most recently pushed # artifacts** | Enter the maximum number of artifacts to retain, keeping the ones that have been pushed most recently. There is no maximum age for an artifact. |\n| **retain the most recently pulled # artifacts** | Enter the maximum number of artifacts to retain, keeping only the ones that have been pulled recently. There is no maximum age for an artifact. |\n| **retain the artifacts pushed within the last # days** | Enter the number of days to retain artifacts, keeping only the ones that have been pushed during this period. There is no maximum number of artifacts. |\n| **retain the artifacts pulled within the last # days** | Enter the number of days to retain artifacts, keeping only the ones that have been pulled during this period. There is no maximum number of artifacts. |\n| **retain always** | Always retain the artifacts identified by this rule. |\n\n07. In the **Tags** drop-down menu, select **matching** or **excluding**.\n\n08. In the **Tags** text box, identify the tags on which to apply the rule.\n\n    You can define the tags on which to apply the rule by entering the following information:\n\n    - A tag name, for example `my_tag_1`.\n    - A comma-separated list of tag names, for example `my_tag_1,my_tag_2,your_tag_3`.\n    - A partial tag name with wildcards, for example `my_*`, `*_3`, or `*_tag_*`.\n    - `**` to apply the rule to all of the tags in the project.\n\nIf you selected **matching**, the rule is applied to the tags you identified. If you selected **excluding**, the rule is applied to all of the tags in the repository except for the ones that you identified.\n\n09. Click **Add** to save the rule.\n\n10. (Optional) Click **Add Rule** to add more rules, up to a maximum of 15 per project.\n\n11. (Optional) Under Schedule, click **Edit** and select how often to run the rule.\n\n    If you select **Custom**, enter a cron job command to schedule the rule.\n\n    **NOTE**: If you define multiple rules, the schedule is applied to all of the rules. You cannot schedule different rules to run at different times.\n\n12. Click **Dry Run** to test the rule or rules that you have defined.\n\n13. Click **Run Now** to run the rule immediately.\n\n**WARNING**: You cannot revert a rule after you run it. It is strongly recommended to perform a dry run before you run rules.\n\nTo modify an existing rule, use the **Action** drop-down menu next to a rule to deactivate, edit, or delete that rule..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-tag-retention-rules", "title": "Create Tag Retention Rules", "description": "This page covers how to define and configure tag retention rules for repositories in Harbor, including examples and best practices.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 04:26:51", "type": "section_detail", "page_metadata": {"favicon": "https://goharbor.io/favicon.svg", "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-tag-retention-rules/", "ogSiteName": "Harbor", "twitter:site": "@project_harbor", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-tag-retention-rules/", "og:image:type": "image/png", "og:image:alt": "Harbor &ndash; Create Tag Retention Rules project logo", "generator": "Hugo 0.74.0", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "title": "\n      \nHarbor docs | Create Tag Retention Rules\n\n    ", "twitter:creator": "@project_harbor", "og:title": "Harbor &ndash; Create Tag Retention Rules", "og:type": ["documentation", "article"], "og:site_name": "Harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:locale": "en_US", "twitter:card": "summary", "ogLocale": "en_US", "ogTitle": "Harbor &ndash; Create Tag Retention Rules", "scrapeId": "249c1ae9-8a56-4216-ad07-992f9f95235a", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-tag-retention-rules", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-tag-retention-rules/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you give me some code examples for Create Tag Retention Rules in harbor-2-12-0?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Example of Tag Retention Rule**:\n\n```yaml\n- Rule 1: Retain all of the artifacts in each repository that have been pulled in the last 7 days.\n- Rule 2: Retain a maximum number of 10 artifacts in each repository.\n```\n\nThis snippet shows you how to example of tag retention rule, which is an important aspect of create tag retention rules.\n\n**Retention Policy Configuration**:\n\n```yaml\n- You set the repository filter to `**`.\n- You set the retention policy to retain the 10 most recently pulled artifacts in each repository.\n- You set the tag filter to `**`, keep “untagged artifacts” unchecked.\n```\n\nThis snippet shows you how to retention policy configuration, which is an important aspect of create tag retention rules.\n\n", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-tag-retention-rules", "title": "Create Tag Retention Rules", "description": "This page covers how to define and configure tag retention rules for repositories in Harbor, including examples and best practices.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 04:26:51", "type": "code_examples", "page_metadata": {"favicon": "https://goharbor.io/favicon.svg", "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-tag-retention-rules/", "ogSiteName": "Harbor", "twitter:site": "@project_harbor", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-tag-retention-rules/", "og:image:type": "image/png", "og:image:alt": "Harbor &ndash; Create Tag Retention Rules project logo", "generator": "Hugo 0.74.0", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "title": "\n      \nHarbor docs | Create Tag Retention Rules\n\n    ", "twitter:creator": "@project_harbor", "og:title": "Harbor &ndash; Create Tag Retention Rules", "og:type": ["documentation", "article"], "og:site_name": "Harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:locale": "en_US", "twitter:card": "summary", "ogLocale": "en_US", "ogTitle": "Harbor &ndash; Create Tag Retention Rules", "scrapeId": "249c1ae9-8a56-4216-ad07-992f9f95235a", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-tag-retention-rules", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-tag-retention-rules/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: What are some tips for using Create Tag Retention Rules in harbor-2-12-0 effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nPerform a dry run before running rules to avoid unintended deletions.\n\nYou cannot revert a rule after you run it, so be cautious when applying retention rules.\n\nDefine repositories and tags carefully to ensure the correct artifacts are retained.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-tag-retention-rules", "title": "Create Tag Retention Rules", "description": "This page covers how to define and configure tag retention rules for repositories in Harbor, including examples and best practices.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 04:26:51", "type": "best_practices", "page_metadata": {"favicon": "https://goharbor.io/favicon.svg", "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-tag-retention-rules/", "ogSiteName": "Harbor", "twitter:site": "@project_harbor", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-tag-retention-rules/", "og:image:type": "image/png", "og:image:alt": "Harbor &ndash; Create Tag Retention Rules project logo", "generator": "Hugo 0.74.0", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "title": "\n      \nHarbor docs | Create Tag Retention Rules\n\n    ", "twitter:creator": "@project_harbor", "og:title": "Harbor &ndash; Create Tag Retention Rules", "og:type": ["documentation", "article"], "og:site_name": "Harbor", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "og:locale": "en_US", "twitter:card": "summary", "ogLocale": "en_US", "ogTitle": "Harbor &ndash; Create Tag Retention Rules", "scrapeId": "249c1ae9-8a56-4216-ad07-992f9f95235a", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-tag-retention-rules", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/working-with-images/create-tag-retention-rules/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you explain what Documentation Style Guide is in harbor-2-12-0?\n\nAssistant: Sure, I'd be happy to explain Documentation Style Guide in harbor-2-12-0.\n\n# Documentation Style Guide\n\nThis page outlines writing style guidelines for the Harbor documentation and you should use it as a reference as you write or edit content. These are guidelines, not rules.Here's a quick rundown of what this is about:\n\n## Content best practices\n\n### Use present tense\n\n| Do | Don’t |\n| --- | --- |\n| This command starts a proxy. | This command will start a proxy. |\n\nException: Use future or past tense if it is required to convey the correct meaning.\n\n### Use active voice\n\n| Do | Don’t |\n| --- | --- |\n| You can explore the API using a browser. | The API can be explored using a browser. |\n| The YAML file specifies the replica count. | The replica count is specified in the YAML file. |\n\nException: Use passive voice if active voice leads to an awkward sentence construction.\n\n### Use simple and direct language\n\nUse simple and direct language. Avoid using unnecessary phrases, such as saying “please.”\n\n| Do | Don’t |\n| --- | --- |\n| To create a ReplicaSet, … | In order to create a ReplicaSet, … |\n| See the configuration file. | Please see the configuration file. |\n| View the Pods. | With this next command, we’ll view the Pods. |\n\n### Address the reader as “you”\n\n| Do | Don’t |\n| --- | --- |\n| You can create a Deployment by … | We’ll create a Deployment by … |\n| In the preceding output, you can see… | In the preceding output, we can see … |\n\n### Avoid Latin phrases\n\nPrefer English terms over Latin abbreviations.\n\n| Do | Don’t |\n| --- | --- |\n| For example, … | e.g., … |\n| That is, … | i.e., … |\n\nException: Use “etc.” for et cetera.\n\n## Patterns to avoid\n\n### Avoid using “we”\n\nUsing “we” in a sentence can be confusing, because the reader might not know whether they’re part of the “we” you’re describing.\n\n| Do | Don’t |\n| --- | --- |\n| Version 1.4 includes … | In version 1.4, we have added … |\n| Kubernetes provides a new feature for … | We provide a new feature … |\n| This page teaches you how to use Pods. | In this page, we are going to learn about Pods. |\n\n### Avoid jargon and idioms\n\nMany readers speak English as a second language. Avoid jargon and idioms to help them understand better.\n\n| Do | Don’t |\n| --- | --- |\n| Internally, … | Under the hood, … |\n| Create a new cluster. | Turn up a new cluster. |\n\n### Avoid statements about the future or that will soon be out of date\n\nAvoid making promises or giving hints about the future. If you need to talk about a beta feature, put the text under a heading that identifies it as beta information.\n\nAlso avoid words like “recently”, “currently” and “new.” A feature that is new today might not be considered new in a few months.\n\n| Do | Don’t |\n| --- | --- |\n| In version 1.4, … | In the current version, … |\n| The Federation feature provides … | The new Federation feature provides … |\n\n### Language\n\nThis documentation uses U.S. English spelling and grammar.\n\n## Documentation formatting standards\n\n### Use angle brackets for placeholders\n\nUse angle brackets for placeholders. Tell the reader what a placeholder represents.\n\n1. Display information about a Pod:\n\n```\n    kubectl describe pod <pod-name> -n <namespace>\n```\n\nIf the pod is in the default namespace, you can omit the ‘-n’ parameter.\n\n### Use bold for user interface elements\n\n| Do | Don’t |\n| --- | --- |\n| Click **Fork**. | Click “Fork”. |\n| Select **Other**. | Select “Other”. |\n\n### Use code style for filenames, directories, paths, object field names and namespaces\n\n| Do | Don’t |\n| --- | --- |\n| Open the `envars.yaml` file. | Open the envars.yaml file. |\n| Go to the `/docs/tutorials` directory. | Go to the /docs/tutorials directory. |\n| Open the `/_data/concepts.yaml` file. | Open the /\u001fdata/concepts.yaml file. |\n\n### Use punctuation inside quotes\n\n| Do | Don’t |\n| --- | --- |\n| events are recorded with an associated “stage.” | events are recorded with an associated “stage”. |\n| The copy is called a “fork.” | The copy is called a “fork”. |\n\nException: When the quoted word is a user input.\n\nExample:\n\n- My user ID is “IM47g”.\n- Did you try the password “mycatisawesome”? \n\n### Inline code formatting\n\n### Use code style for inline code and commands\n\nFor inline code in an HTML document, use the `<code>` tag. In a Markdown document, use the backtick ( `` ` ``).\n\n| Do | Don’t |\n| --- | --- |\n| The `kubectl run` command creates a Deployment. | The “kubectl run” command creates a Deployment. |\n| For declarative management, use `kubectl apply`. | For declarative management, use “kubectl apply”. |\n| Use single backticks to enclose inline code. For example, `var example = true`. | Use two asterisks ( `**`) or an underscore ( `_`) to enclose inline code. For example, **var example = true**. |\n| Use triple backticks () before and after a multi-line block of code for fenced code blocks. | Use multi-line blocks of code to create diagrams, flowcharts, or other illustrations. |\n| Use meaningful variable names that have a context. | Use variable names such as ‘foo’,‘bar’, and ‘baz’ that are not meaningful and lack context. |\n| Remove trailing spaces in the code. | Add trailing spaces in the code, where these are important, because a screen reader will read out the spaces as well. |\n\n### Use normal style for string and integer field values\n\nFor field values of type string or integer, use normal style without quotation marks.\n\n| Do | Don’t |\n| --- | --- |\n| Set the value of `imagePullPolicy` to `Always`. | Set the value of `imagePullPolicy` to “Always”. |\n| Set the value of `image` to `nginx:1.16`. | Set the value of `image` to nginx:1.16. |\n| Set the value of the `replicas` field to `2`. | Set the value of the `replicas` field to 2. |\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/style-guide", "title": "Documentation Style Guide", "description": "This page outlines writing style guidelines for the Harbor documentation and you should use it as a reference as you write or edit content. These are guidelines, not rules.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:29:22", "type": "overview", "page_metadata": {"ogSiteName": "Harbor", "og:title": "Harbor &ndash; Documentation Style Guide", "twitter:card": "summary", "og:image:type": "image/png", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "generator": "Hugo 0.74.0", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:type": ["documentation", "article"], "twitter:site": "@project_harbor", "ogUrl": "https://goharbor.io/docs/2.12.0/build-customize-contribute/style-guide/", "og:image:alt": "Harbor &ndash; Documentation Style Guide project logo", "ogLocale": "en_US", "og:url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/style-guide/", "title": "\n      \nHarbor docs | Documentation Style Guide\n\n    ", "og:site_name": "Harbor", "twitter:creator": "@project_harbor", "og:locale": "en_US", "ogTitle": "Harbor &ndash; Documentation Style Guide", "favicon": "https://goharbor.io/favicon.svg", "scrapeId": "0bc3ca33-2b8e-4667-a46d-5155f7f649e4", "sourceURL": "https://goharbor.io/docs/2.12.0/build-customize-contribute/style-guide", "url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/style-guide/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I content best practices in harbor-2-12-0?\n\nAssistant: To content best practices in harbor-2-12-0, here's what you do:\n### Use present tense\n\n| Do | Don’t |\n| --- | --- |\n| This command starts a proxy. | This command will start a proxy. |\n\nException: Use future or past tense if it is required to convey the correct meaning.\n\n### Use active voice\n\n| Do | Don’t |\n| --- | --- |\n| You can explore the API using a browser. | The API can be explored using a browser. |\n| The YAML file specifies the replica count. | The replica count is specified in the YAML file. |\n\nException: Use passive voice if active voice leads to an awkward sentence construction.\n\n### Use simple and direct language\n\nUse simple and direct language. Avoid using unnecessary phrases, such as saying “please.”\n\n| Do | Don’t |\n| --- | --- |\n| To create a ReplicaSet, … | In order to create a ReplicaSet, … |\n| See the configuration file. | Please see the configuration file. |\n| View the Pods. | With this next command, we’ll view the Pods. |\n\n### Address the reader as “you”\n\n| Do | Don’t |\n| --- | --- |\n| You can create a Deployment by … | We’ll create a Deployment by … |\n| In the preceding output, you can see… | In the preceding output, we can see … |\n\n### Avoid Latin phrases\n\nPrefer English terms over Latin abbreviations.\n\n| Do | Don’t |\n| --- | --- |\n| For example, … | e.g., … |\n| That is, … | i.e., … |\n\nException: Use “etc.” for et cetera..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/style-guide", "title": "Documentation Style Guide", "description": "This page outlines writing style guidelines for the Harbor documentation and you should use it as a reference as you write or edit content. These are guidelines, not rules.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:29:22", "type": "section_detail", "page_metadata": {"ogSiteName": "Harbor", "og:title": "Harbor &ndash; Documentation Style Guide", "twitter:card": "summary", "og:image:type": "image/png", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "generator": "Hugo 0.74.0", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:type": ["documentation", "article"], "twitter:site": "@project_harbor", "ogUrl": "https://goharbor.io/docs/2.12.0/build-customize-contribute/style-guide/", "og:image:alt": "Harbor &ndash; Documentation Style Guide project logo", "ogLocale": "en_US", "og:url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/style-guide/", "title": "\n      \nHarbor docs | Documentation Style Guide\n\n    ", "og:site_name": "Harbor", "twitter:creator": "@project_harbor", "og:locale": "en_US", "ogTitle": "Harbor &ndash; Documentation Style Guide", "favicon": "https://goharbor.io/favicon.svg", "scrapeId": "0bc3ca33-2b8e-4667-a46d-5155f7f649e4", "sourceURL": "https://goharbor.io/docs/2.12.0/build-customize-contribute/style-guide", "url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/style-guide/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I patterns to avoid in harbor-2-12-0?\n\nAssistant: To patterns to avoid in harbor-2-12-0, here's what you do:\n### Avoid using “we”\n\nUsing “we” in a sentence can be confusing, because the reader might not know whether they’re part of the “we” you’re describing.\n\n| Do | Don’t |\n| --- | --- |\n| Version 1.4 includes … | In version 1.4, we have added … |\n| Kubernetes provides a new feature for … | We provide a new feature … |\n| This page teaches you how to use Pods. | In this page, we are going to learn about Pods. |\n\n### Avoid jargon and idioms\n\nMany readers speak English as a second language. Avoid jargon and idioms to help them understand better.\n\n| Do | Don’t |\n| --- | --- |\n| Internally, … | Under the hood, … |\n| Create a new cluster. | Turn up a new cluster. |\n\n### Avoid statements about the future or that will soon be out of date\n\nAvoid making promises or giving hints about the future. If you need to talk about a beta feature, put the text under a heading that identifies it as beta information.\n\nAlso avoid words like “recently”, “currently” and “new.” A feature that is new today might not be considered new in a few months.\n\n| Do | Don’t |\n| --- | --- |\n| In version 1.4, … | In the current version, … |\n| The Federation feature provides … | The new Federation feature provides … |\n\n### Language\n\nThis documentation uses U.S. English spelling and grammar..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/style-guide", "title": "Documentation Style Guide", "description": "This page outlines writing style guidelines for the Harbor documentation and you should use it as a reference as you write or edit content. These are guidelines, not rules.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:29:22", "type": "section_detail", "page_metadata": {"ogSiteName": "Harbor", "og:title": "Harbor &ndash; Documentation Style Guide", "twitter:card": "summary", "og:image:type": "image/png", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "generator": "Hugo 0.74.0", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:type": ["documentation", "article"], "twitter:site": "@project_harbor", "ogUrl": "https://goharbor.io/docs/2.12.0/build-customize-contribute/style-guide/", "og:image:alt": "Harbor &ndash; Documentation Style Guide project logo", "ogLocale": "en_US", "og:url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/style-guide/", "title": "\n      \nHarbor docs | Documentation Style Guide\n\n    ", "og:site_name": "Harbor", "twitter:creator": "@project_harbor", "og:locale": "en_US", "ogTitle": "Harbor &ndash; Documentation Style Guide", "favicon": "https://goharbor.io/favicon.svg", "scrapeId": "0bc3ca33-2b8e-4667-a46d-5155f7f649e4", "sourceURL": "https://goharbor.io/docs/2.12.0/build-customize-contribute/style-guide", "url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/style-guide/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I documentation formatting standards in harbor-2-12-0?\n\nAssistant: To documentation formatting standards in harbor-2-12-0, here's what you do:\n### Use angle brackets for placeholders\n\nUse angle brackets for placeholders. Tell the reader what a placeholder represents.\n\n1. Display information about a Pod:\n\n```\n    kubectl describe pod <pod-name> -n <namespace>\n```\n\nIf the pod is in the default namespace, you can omit the ‘-n’ parameter.\n\n### Use bold for user interface elements\n\n| Do | Don’t |\n| --- | --- |\n| Click **Fork**. | Click “Fork”. |\n| Select **Other**. | Select “Other”. |\n\n### Use code style for filenames, directories, paths, object field names and namespaces\n\n| Do | Don’t |\n| --- | --- |\n| Open the `envars.yaml` file. | Open the envars.yaml file. |\n| Go to the `/docs/tutorials` directory. | Go to the /docs/tutorials directory. |\n| Open the `/_data/concepts.yaml` file. | Open the /\u001fdata/concepts.yaml file. |\n\n### Use punctuation inside quotes\n\n| Do | Don’t |\n| --- | --- |\n| events are recorded with an associated “stage.” | events are recorded with an associated “stage”. |\n| The copy is called a “fork.” | The copy is called a “fork”. |\n\nException: When the quoted word is a user input.\n\nExample:\n\n- My user ID is “IM47g”.\n- Did you try the password “mycatisawesome”? \n\n### Inline code formatting\n\n### Use code style for inline code and commands\n\nFor inline code in an HTML document, use the `<code>` tag. In a Markdown document, use the backtick ( `` ` ``).\n\n| Do | Don’t |\n| --- | --- |\n| The `kubectl run` command creates a Deployment. | The “kubectl run” command creates a Deployment. |\n| For declarative management, use `kubectl apply`. | For declarative management, use “kubectl apply”. |\n| Use single backticks to enclose inline code. For example, `var example = true`. | Use two asterisks ( `**`) or an underscore ( `_`) to enclose inline code. For example, **var example = true**. |\n| Use triple backticks () before and after a multi-line block of code for fenced code blocks. | Use multi-line blocks of code to create diagrams, flowcharts, or other illustrations. |\n| Use meaningful variable names that have a context. | Use variable names such as ‘foo’,‘bar’, and ‘baz’ that are not meaningful and lack context. |\n| Remove trailing spaces in the code. | Add trailing spaces in the code, where these are important, because a screen reader will read out the spaces as well. |\n\n### Use normal style for string and integer field values\n\nFor field values of type string or integer, use normal style without quotation marks.\n\n| Do | Don’t |\n| --- | --- |\n| Set the value of `imagePullPolicy` to `Always`. | Set the value of `imagePullPolicy` to “Always”. |\n| Set the value of `image` to `nginx:1.16`. | Set the value of `image` to nginx:1.16. |\n| Set the value of the `replicas` field to `2`. | Set the value of the `replicas` field to 2. |.\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/style-guide", "title": "Documentation Style Guide", "description": "This page outlines writing style guidelines for the Harbor documentation and you should use it as a reference as you write or edit content. These are guidelines, not rules.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:29:22", "type": "section_detail", "page_metadata": {"ogSiteName": "Harbor", "og:title": "Harbor &ndash; Documentation Style Guide", "twitter:card": "summary", "og:image:type": "image/png", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "generator": "Hugo 0.74.0", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:type": ["documentation", "article"], "twitter:site": "@project_harbor", "ogUrl": "https://goharbor.io/docs/2.12.0/build-customize-contribute/style-guide/", "og:image:alt": "Harbor &ndash; Documentation Style Guide project logo", "ogLocale": "en_US", "og:url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/style-guide/", "title": "\n      \nHarbor docs | Documentation Style Guide\n\n    ", "og:site_name": "Harbor", "twitter:creator": "@project_harbor", "og:locale": "en_US", "ogTitle": "Harbor &ndash; Documentation Style Guide", "favicon": "https://goharbor.io/favicon.svg", "scrapeId": "0bc3ca33-2b8e-4667-a46d-5155f7f649e4", "sourceURL": "https://goharbor.io/docs/2.12.0/build-customize-contribute/style-guide", "url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/style-guide/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you give me some code examples for Documentation Style Guide in harbor-2-12-0?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Display information about a Pod**:\n\n```yaml\nkubectl describe pod <pod-name> -n <namespace>\n```\n\nThis snippet shows you how to display information about a pod, which is an important aspect of documentation style guide.\n\n**Verify that the Pod is running on your chosen node**:\n\n```yaml\nkubectl get pods --output=wide\n\nThe output is similar to this:\n\nNAME     READY     STATUS    RESTARTS   AGE    IP           NODE\nnginx    1/1       Running   0          13s    10.200.0.4   worker0\n```\n\nThis snippet shows you how to verify that the pod is running on your chosen node, which is an important aspect of documentation style guide.\n\n**Create a table in markdown**:\n\n```yaml\n{{< table caption=\"Configuration parameters\" >}}\nParameter | Description | Default\n:---------|:------------|:-------\n`timeout` | The timeout for requests | `30s`\n`logLevel` | The log level for log output | `INFO`\n{{< /table >}}\n```\n\nThis snippet shows you how to create a table in markdown, which is an important aspect of documentation style guide.\n\n", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/style-guide", "title": "Documentation Style Guide", "description": "This page outlines writing style guidelines for the Harbor documentation and you should use it as a reference as you write or edit content. These are guidelines, not rules.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:29:22", "type": "code_examples", "page_metadata": {"ogSiteName": "Harbor", "og:title": "Harbor &ndash; Documentation Style Guide", "twitter:card": "summary", "og:image:type": "image/png", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "generator": "Hugo 0.74.0", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:type": ["documentation", "article"], "twitter:site": "@project_harbor", "ogUrl": "https://goharbor.io/docs/2.12.0/build-customize-contribute/style-guide/", "og:image:alt": "Harbor &ndash; Documentation Style Guide project logo", "ogLocale": "en_US", "og:url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/style-guide/", "title": "\n      \nHarbor docs | Documentation Style Guide\n\n    ", "og:site_name": "Harbor", "twitter:creator": "@project_harbor", "og:locale": "en_US", "ogTitle": "Harbor &ndash; Documentation Style Guide", "favicon": "https://goharbor.io/favicon.svg", "scrapeId": "0bc3ca33-2b8e-4667-a46d-5155f7f649e4", "sourceURL": "https://goharbor.io/docs/2.12.0/build-customize-contribute/style-guide", "url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/style-guide/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: What are some tips for using Documentation Style Guide in harbor-2-12-0 effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nUse present tense for commands and actions.\n\nUse active voice to make sentences clearer.\n\nUse simple and direct language, avoiding unnecessary phrases.\n\nAddress the reader as 'you' for direct engagement.\n\nAvoid Latin phrases in favor of English terms.\n\nAvoid using 'we' to prevent confusion about the audience.\n\nAvoid jargon and idioms for better understanding.\n\nAvoid statements about the future to prevent obsolescence.\n\nUse U.S. English spelling and grammar consistently.\n\nUse angle brackets for placeholders in commands.\n\nUse bold for user interface elements for clarity.\n\nUse code style for filenames, directories, and paths for consistency.\n\nUse punctuation inside quotes correctly.\n\nUse code style for inline code and commands for clarity.\n\nUse normal style for string and integer field values without quotes.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/style-guide", "title": "Documentation Style Guide", "description": "This page outlines writing style guidelines for the Harbor documentation and you should use it as a reference as you write or edit content. These are guidelines, not rules.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:29:22", "type": "best_practices", "page_metadata": {"ogSiteName": "Harbor", "og:title": "Harbor &ndash; Documentation Style Guide", "twitter:card": "summary", "og:image:type": "image/png", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "generator": "Hugo 0.74.0", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "og:type": ["documentation", "article"], "twitter:site": "@project_harbor", "ogUrl": "https://goharbor.io/docs/2.12.0/build-customize-contribute/style-guide/", "og:image:alt": "Harbor &ndash; Documentation Style Guide project logo", "ogLocale": "en_US", "og:url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/style-guide/", "title": "\n      \nHarbor docs | Documentation Style Guide\n\n    ", "og:site_name": "Harbor", "twitter:creator": "@project_harbor", "og:locale": "en_US", "ogTitle": "Harbor &ndash; Documentation Style Guide", "favicon": "https://goharbor.io/favicon.svg", "scrapeId": "0bc3ca33-2b8e-4667-a46d-5155f7f649e4", "sourceURL": "https://goharbor.io/docs/2.12.0/build-customize-contribute/style-guide", "url": "https://goharbor.io/docs/2.12.0/build-customize-contribute/style-guide/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you explain what Configure Webhook Notifications is in harbor-2-12-0?\n\nAssistant: Sure, I'd be happy to explain Configure Webhook Notifications in harbor-2-12-0.\n\n# Configure Webhook Notifications\n\nIf you are a project administrator, you can configure a connection from a project in Harbor to a webhook endpoint. If you configure webhooks, Harbor notifies the webhook endpoint of certain events that occur in the project. Webhooks allow you to integrate Harbor with other tools to streamline continuous integration and development processes.Here's a quick rundown of what this is about:\n\n## Supported Events\n\nYou can define multiple webhook endpoints per project. Harbor supports two kinds of endpoints currently, `HTTP` and `SLACK`. Webhook notifications provide information about events in JSON format and are delivered by `HTTP` or `HTTPS POST` to an existing webhhook endpoint URL or Slack address that you provide. There are 2 JSON formats supported for the webhook payload, `Default` is the format that has always existed, and the data structure has not changed from the previous versions, except that it has been named, `CloudEvents` is the format which organizes the payload data as following the spec of [CloudEvents](https://cloudevents.io/). The following table describes the events that trigger notifications and the contents of each notification.\n\n| Event | Webhook Event Type | Contents of Notification |\n| --- | --- | --- |\n| Push artifact to registry | `PUSH_ARTIFACT` | Repository namespace name, repository name, resource URL, tags, manifest digest, artifact name, push time timestamp, username of user who pushed artifact |\n| Pull artifact from registry | `PULL_ARTIFACT` | Repository namespace name, repository name, manifest digest, artifact name, pull time timestamp, username of user who pulled artifact |\n| Delete artifact from registry | `DELETE_ARTIFACT` | Repository namespace name, repository name, manifest digest, artifact name, artifact size, delete time timestamp, username of user who deleted image |\n| Artifact scan completed | `SCANNING_COMPLETED` | Repository namespace name, repository name, tag scanned, artifact name, number of critical issues, number of major issues, number of minor issues, last scan status, scan completion time timestamp, username of user who performed scan |\n| Artifact scan stopped | `SCANNING_STOPPED` | Repository namespace name, repository name, tag scanned, artifact name, scan status |\n| Artifact scan failed | `SCANNING_FAILED` | Repository namespace name, repository name, tag scanned, artifact name, error that occurred, username of user who performed scan |\n| Project quota exceeded | `QUOTA_EXCEED` | Repository namespace name, repository name, tags, manifest digest, artifact name, push time timestamp, username of user who pushed artifact |\n| Project quota near threshold | `QUOTA_WARNING` | Repository namespace name, repository name, tags, manifest digest, artifact name, push time timestamp, username of user who pushed artifact |\n| Artifact replication status changed | `REPLICATION` | Repository namespace name, repository name, tags, manifest digest, artifact name, push time timestamp, username of user who trigger the replication |\n| Artifact tag retention finished | `TAG_RETENTION` | Repository namespace name, repository name, the number of total and retained, the rule of retention, deleted artifacts results\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/configure-webhooks", "title": "Configure Webhook Notifications", "description": "If you are a project administrator, you can configure a connection from a project in Harbor to a webhook endpoint. If you configure webhooks, Harbor notifies the webhook endpoint of certain events that occur in the project. Webhooks allow you to integrate Harbor with other tools to streamline continuous integration and development processes.", "has_code_examples": true, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 04:33:32", "type": "overview", "page_metadata": {"og:title": "Harbor &ndash; Configure Webhook Notifications", "og:locale": "en_US", "og:type": ["documentation", "article"], "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/configure-webhooks/", "ogTitle": "Harbor &ndash; Configure Webhook Notifications", "og:image:type": "image/png", "favicon": "https://goharbor.io/favicon.svg", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "title": "\n      \nHarbor docs | Configure Webhook Notifications\n\n    ", "ogSiteName": "Harbor", "twitter:site": "@project_harbor", "twitter:creator": "@project_harbor", "og:image:alt": "Harbor &ndash; Configure Webhook Notifications project logo", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/configure-webhooks/", "ogLocale": "en_US", "twitter:card": "summary", "og:site_name": "Harbor", "generator": "Hugo 0.74.0", "scrapeId": "138c52b9-f398-4a5e-9eec-d891bfca8002", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/configure-webhooks", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/configure-webhooks/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I supported events in harbor-2-12-0?\n\nAssistant: To supported events in harbor-2-12-0, here's what you do:\nYou can define multiple webhook endpoints per project. Harbor supports two kinds of endpoints currently, `HTTP` and `SLACK`. Webhook notifications provide information about events in JSON format and are delivered by `HTTP` or `HTTPS POST` to an existing webhhook endpoint URL or Slack address that you provide. There are 2 JSON formats supported for the webhook payload, `Default` is the format that has always existed, and the data structure has not changed from the previous versions, except that it has been named, `CloudEvents` is the format which organizes the payload data as following the spec of [CloudEvents](https://cloudevents.io/). The following table describes the events that trigger notifications and the contents of each notification.\n\n| Event | Webhook Event Type | Contents of Notification |\n| --- | --- | --- |\n| Push artifact to registry | `PUSH_ARTIFACT` | Repository namespace name, repository name, resource URL, tags, manifest digest, artifact name, push time timestamp, username of user who pushed artifact |\n| Pull artifact from registry | `PULL_ARTIFACT` | Repository namespace name, repository name, manifest digest, artifact name, pull time timestamp, username of user who pulled artifact |\n| Delete artifact from registry | `DELETE_ARTIFACT` | Repository namespace name, repository name, manifest digest, artifact name, artifact size, delete time timestamp, username of user who deleted image |\n| Artifact scan completed | `SCANNING_COMPLETED` | Repository namespace name, repository name, tag scanned, artifact name, number of critical issues, number of major issues, number of minor issues, last scan status, scan completion time timestamp, username of user who performed scan |\n| Artifact scan stopped | `SCANNING_STOPPED` | Repository namespace name, repository name, tag scanned, artifact name, scan status |\n| Artifact scan failed | `SCANNING_FAILED` | Repository namespace name, repository name, tag scanned, artifact name, error that occurred, username of user who performed scan |\n| Project quota exceeded | `QUOTA_EXCEED` | Repository namespace name, repository name, tags, manifest digest, artifact name, push time timestamp, username of user who pushed artifact |\n| Project quota near threshold | `QUOTA_WARNING` | Repository namespace name, repository name, tags, manifest digest, artifact name, push time timestamp, username of user who pushed artifact |\n| Artifact replication status changed | `REPLICATION` | Repository namespace name, repository name, tags, manifest digest, artifact name, push time timestamp, username of user who trigger the replication |\n| Artifact tag retention finished | `TAG_RETENTION` | Repository namespace name, repository name, the number of total and retained, the rule of retention, deleted artifacts results.\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/configure-webhooks", "title": "Configure Webhook Notifications", "description": "If you are a project administrator, you can configure a connection from a project in Harbor to a webhook endpoint. If you configure webhooks, Harbor notifies the webhook endpoint of certain events that occur in the project. Webhooks allow you to integrate Harbor with other tools to streamline continuous integration and development processes.", "has_code_examples": true, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 04:33:32", "type": "section_detail", "page_metadata": {"og:title": "Harbor &ndash; Configure Webhook Notifications", "og:locale": "en_US", "og:type": ["documentation", "article"], "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/configure-webhooks/", "ogTitle": "Harbor &ndash; Configure Webhook Notifications", "og:image:type": "image/png", "favicon": "https://goharbor.io/favicon.svg", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "title": "\n      \nHarbor docs | Configure Webhook Notifications\n\n    ", "ogSiteName": "Harbor", "twitter:site": "@project_harbor", "twitter:creator": "@project_harbor", "og:image:alt": "Harbor &ndash; Configure Webhook Notifications project logo", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/configure-webhooks/", "ogLocale": "en_US", "twitter:card": "summary", "og:site_name": "Harbor", "generator": "Hugo 0.74.0", "scrapeId": "138c52b9-f398-4a5e-9eec-d891bfca8002", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/configure-webhooks", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/configure-webhooks/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you give me some code examples for Configure Webhook Notifications in harbor-2-12-0?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Artifact pushed - Default**:\n\n```yaml\n{\n  \"type\": \"PUSH_ARTIFACT\",\n  \"occur_at\": 1680501893,\n  \"operator\": \"harbor-jobservice\",\n  \"event_data\": {\n    \"resources\": [\\\n      {\\\n        \"digest\": \"sha256:954b378c375d852eb3c63ab88978f640b4348b01c1b3456a024a81536dafbbf4\",\\\n        \"tag\": \"sha256:954b378c375d852eb3c63ab88978f640b4348b01c1b3456a024a81536dafbbf4\",\\\n        \"resource_url\": \"localhost/harbor/alpine@sha256:954b378c375d852eb3c63ab88978f640b4348b01c1b3456a024a81536dafbbf4\"\\\n      }\\\n    ],\n    \"repository\": {\n      \"date_created\": 1680501893,\n      \"name\": \"alpine\",\n      \"namespace\": \"harbor\",\n      \"repo_full_name\": \"harbor/alpine\",\n      \"repo_type\": \"private\"\n    }\n  }\n}\n```\n\nThis snippet shows you how to artifact pushed - default, which is an important aspect of configure webhook notifications.\n\n", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/configure-webhooks", "title": "Configure Webhook Notifications", "description": "If you are a project administrator, you can configure a connection from a project in Harbor to a webhook endpoint. If you configure webhooks, Harbor notifies the webhook endpoint of certain events that occur in the project. Webhooks allow you to integrate Harbor with other tools to streamline continuous integration and development processes.", "has_code_examples": true, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 04:33:32", "type": "code_examples", "page_metadata": {"og:title": "Harbor &ndash; Configure Webhook Notifications", "og:locale": "en_US", "og:type": ["documentation", "article"], "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/configure-webhooks/", "ogTitle": "Harbor &ndash; Configure Webhook Notifications", "og:image:type": "image/png", "favicon": "https://goharbor.io/favicon.svg", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "title": "\n      \nHarbor docs | Configure Webhook Notifications\n\n    ", "ogSiteName": "Harbor", "twitter:site": "@project_harbor", "twitter:creator": "@project_harbor", "og:image:alt": "Harbor &ndash; Configure Webhook Notifications project logo", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/configure-webhooks/", "ogLocale": "en_US", "twitter:card": "summary", "og:site_name": "Harbor", "generator": "Hugo 0.74.0", "scrapeId": "138c52b9-f398-4a5e-9eec-d891bfca8002", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/configure-webhooks", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/configure-webhooks/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: What are some tips for using Configure Webhook Notifications in harbor-2-12-0 effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nFor `HTTP` the endpoint that receives the webhook should ideally have a webhook listener that is capable of interpreting the payload and acting upon the information it contains. For example, running a shell script.\n\nFor Slack endpoint, you should follow the [guide of Slack incoming webhook](https://api.slack.com/messaging/webhooks).\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/configure-webhooks", "title": "Configure Webhook Notifications", "description": "If you are a project administrator, you can configure a connection from a project in Harbor to a webhook endpoint. If you configure webhooks, Harbor notifies the webhook endpoint of certain events that occur in the project. Webhooks allow you to integrate Harbor with other tools to streamline continuous integration and development processes.", "has_code_examples": true, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 04:33:32", "type": "best_practices", "page_metadata": {"og:title": "Harbor &ndash; Configure Webhook Notifications", "og:locale": "en_US", "og:type": ["documentation", "article"], "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "ogUrl": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/configure-webhooks/", "ogTitle": "Harbor &ndash; Configure Webhook Notifications", "og:image:type": "image/png", "favicon": "https://goharbor.io/favicon.svg", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "title": "\n      \nHarbor docs | Configure Webhook Notifications\n\n    ", "ogSiteName": "Harbor", "twitter:site": "@project_harbor", "twitter:creator": "@project_harbor", "og:image:alt": "Harbor &ndash; Configure Webhook Notifications project logo", "og:url": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/configure-webhooks/", "ogLocale": "en_US", "twitter:card": "summary", "og:site_name": "Harbor", "generator": "Hugo 0.74.0", "scrapeId": "138c52b9-f398-4a5e-9eec-d891bfca8002", "sourceURL": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/configure-webhooks", "url": "https://goharbor.io/docs/2.12.0/working-with-projects/project-configuration/configure-webhooks/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you explain what Configure the Harbor YML File is in harbor-2-12-0?\n\nAssistant: Sure, I'd be happy to explain Configure the Harbor YML File in harbor-2-12-0.\n\n# Configure the Harbor YML File\n\nThis page covers the configuration of the Harbor YML file, including required and optional parameters for deploying Harbor.Here's a quick rundown of what this is about:\n\n## Required Parameters\n\nThe table below lists the parameters that must be set when you deploy Harbor. By default, all of the required parameters are uncommented in the `harbor.yml` file. The optional parameters are commented with `#`. You do not necessarily need to change the values of the required parameters from the defaults that are provided, but these parameters must remain uncommented. At the very least, you must update the `hostname` parameter.\n\n**IMPORTANT**: Harbor does not ship with any certificates. In versions up to and including 1.9.x, by default Harbor uses HTTP to serve registry requests. This is acceptable only in air-gapped test or development environments. In production environments, always use HTTPS.\n\nYou can use certificates that are signed by a trusted third-party CA, or you can use self-signed certificates. For information about how to create a CA, and how to use a CA to sign a server certificate and a client certificate, see [Configuring Harbor with HTTPS Access](https://goharbor.io/docs/2.12.0/install-config/configure-https/). \n\n| Parameter | Sub-parameters | Description and Additional Parameters |\n| --- | --- | --- |\n| `hostname` | None | Specify the IP address or the fully qualified domain name (FQDN) of the target host on which to deploy Harbor. This is the address at which you access the Harbor Portal and the registry service. For example, `192.168.1.10` or `reg.yourdomain.com`. The registry service must be accessible to external clients, so do not specify `localhost`, `127.0.0.1`, or `0.0.0.0` as the hostname. |\n| `http` |  | Do not use HTTP in production environments. Using HTTP is acceptable only in air-gapped test or development environments that do not have a connection to the external internet. Using HTTP in environments that are not air-gapped exposes you to man-in-the-middle attacks. |\n|  | `port` | Port number for HTTP, for both Harbor portal and Docker commands. The default is 80. |\n| `https` |  | Use HTTPS to access the Harbor Portal and the token/notification service. Always use HTTPS in production environments and environments that are not air-gapped. |\n|  | `port` | The port number for HTTPS, for both Harbor portal and Docker commands. The default is 443. |\n|  | `certificate` | The path to the SSL certificate. |\n|  | `private_key` | The path to the SSL key. |\n| `internal_tls` |  | Use HTTPS to communicate between harbor components |\n|  | `enabled` | Set this flag to `true` means internal tls is enabled |\n|  | `dir` | The path to the directory that contains internal certs and keys |\n| `harbor_admin_password` | None | Set an initial password for the Harbor system administrator. This password is only used on the first time that Harbor starts. On subsequent logins, this setting is ignored and the administrator's password is set in the Harbor Portal. The default username and password are `admin` and `Harbor12345`. |\n| `database` |  | Use a local PostgreSQL database. You can optionally configure an external database, in which case you can deactivate this option. |\n|  | `password` | Set the root password for the local database. You must change this password for production deployments. |\n|  | `max_idle_conns` | The maximum number of connections in the idle connection pool. If it <=0, no idle connections are retained. |\n|  | `max_open_conns` | The maximum number of open connections to the database. If it <= 0, then there is no limit on the number of open connections. |\n|  | `conn_max_lifetime` | The maximum amount of time a connection may be reused. If it <= 0, connections are not closed due to a connection's age. |\n|  | `conn_max_idle_time` | The maximum amount of time a connection may be idle. If it <= 0, connections are not closed due to a connection's idle time. |\n| `data_volume` | None | The location on the target host in which to store Harbor's data. This data remains unchanged even when Harbor's containers are removed and/or recreated. You can optionally configure external storage, in which case deactivate this option and enable `storage_service`. The default is `/data`. |\n| `trivy` |  | Configure Trivy scanner. |\n|  | `ignore_unfixed` | Set the flag to `true` to display only fixed vulnerabilities. The default value is `false` |\n|  | `security_check` | Comma-separated list of what security issues to detect. Possible values are `vuln`, `config` and `secret`. Defaults to `vuln`. |\n|  | `skip_update` | You might want to enable this flag in test or CI/CD environments to avoid GitHub rate limiting issues. If the flag is enabled you have to download the `trivy-offline.tar.gz` archive manually, extract and the `trivy.db` and `metadata.json` files and mount them in the `/home/scanner/.cache/trivy/db/trivy.db` path in container. The default value is `false` |\n|  | `insecure` | Set the flag to `true` to skip verifying registry certificate. The default value is `false` |\n|  | `github_token` | Set the GitHub access token to download Trivy DB. Trivy DB is downloaded by Trivy from the GitHub release page. Anonymous downloads from GitHub are subject to the limit of 60 requests per hour. Normally such rate limit is enough for production operations. If, for any reason, it's not enough, you could increase the rate limit to 5000 requests per hour by specifying the GitHub access token. For more details on GitHub rate limiting please consult https://developer.github.com/v3/#rate-limiting .You can create a GitHub token by following the instructions in https://help.github.com/en/github/authenticating-to-github/creating-a-personal-access-token-for-the-command-line |\n| `jobservice` | `max_job_workers` | The maximum number of replication workers in the job service. For each image replication job, a worker synchronizes all tags of a repository to the remote destination. Increasing this number allows more concurrent replication jobs in the system. However, since each worker consumes a certain amount of network/CPU/IO resources, set the value of this attribute based on the hardware resource of the host. The default is 10. |\n| `notification` | `webhook_job_max_retry` | Set the maximum number of retries for web hook jobs. The default is 10. |\n| `log` |  | Configure logging. Harbor uses `rsyslog` to collect the logs for each container. |\n|  | `level` | Set the logging level to `debug`, `info`, `warning`, `error`, or `fatal`. The default is `info`. |\n|  | `local` | Set the log retention parameters:<br>- `rotate_count`: Log files are rotated `rotate_count` times before being removed. If count is 0, old versions are removed rather than rotated. The default is 50.<br>- `rotate_size`: Log files are rotated only if they grow bigger than `rotate_size` bytes. Use `k` for kilobytes, `M` for megabytes, and `G` for gigabytes. `100`, `100k`, `100M` and `100G` are all valid values. The default is 200M.<br>- `location`: Set the directory in which to store the logs. The default is `/var/log/harbor`. |\n|  | `external_endpoint` | Enable this option to forward logs to a syslog server.<br> <br>- `protocol`: Transport protocol for the syslog server. Default is TCP.<br>- `host`: The URL of the syslog server.<br>- `port`: The port on which the syslog server listens |\n| `proxy` |  | Configure proxies to be used by trivy-adapter, the replication jobservice, and Harbor. Leave blank if no proxies are required. Some proxies have whitelist settings, if Trivy is enabled, you need to add the following urls to the proxy server whitelist: `github.com`, `github-releases.githubusercontent.com`, and `*.s3.amazonaws.com.` |\n|  | `http_proxy` | Configure an HTTP proxy, for example, `http://my.proxy.com:3128`. |\n|  | `https_proxy` | Configure an HTTPS proxy, for example, `http://my.proxy.com:3128`. |\n|  | `no_proxy` | Configure when not to use a proxy, for example, `127.0.0.1,localhost,core,registry`. |\n| `cache` |  | Configure cache layer for your Harbor instance. When enabled, Harbor will cache some Harbor resources (for example, artifacts, projects, or project metadata) using Redis, reducing the amount of time and resources used for repeated requests for the same Harbor resource. It's strongly recommended that you enable this feature on Harbor instances with high concurrent pull request rates to improve Harbor's overall performance. For more details on the cache layer implementation and performance improvements, see the [Cache Layer wiki page](https://github.com/goharbor/perf/wiki/Cache-layer). |\n|  | `enabled` | Default is `false`, set to `true` to enable Harbor's cache layer. |\n|  | `expire_hours` | Configure the cache expiration limit in hours. Default is 24.\n\n## Optional Parameters\n\nThe following table lists the additional, optional parameters that you can set to configure your Harbor deployment beyond the minimum required settings. To enable a setting, you must uncomment it in `harbor.yml` by deleting the leading `#` character.\n\n| Parameter | Sub-Parameters | Description and Additional Parameters |\n| --- | --- | --- |\n| `external_url` | None | Enable this option to use an external proxy. When enabled, the hostname is no longer used. |\n| `storage_service` |  | By default, Harbor stores images and charts on your local filesystem. In a production environment, you might want to use another storage backend instead of the local filesystem. The parameters listed below are the configurations for the registry. See *Configuring Storage Backend* below for more information about how to configure a different backend. |\n|  | `ca_bundle` | The path to the custom root CA certificate, which is injected into the trust store of registry and chart repository containers. This is usually needed if internal storage uses a self signed certificate. |\n|  | `filesystem` | The default is `filesystem`, but you can set `azure`, `gcs`, `s3`, `swift` and `oss`. For information about how to configure other backends, see [Configuring a Storage Backend](https://goharbor.io/docs/2.12.0/install-config/configure-yml-file/#backend) below. Set `maxthreads` to limit the number of threads to the external provider. The default is 100. |\n|  | `redirect` | Set `deactivate` to `true` when you want to deactivate registry redirect |\n| `external_database` |  | Configure external database settings, if you deactivate the local database option. Currently, Harbor only supports PostgreSQL database. You must create a database for Harbor core. The tables are generated automatically when Harbor starts up. |\n|  | `harbor` | Configure an external database for Harbor data.<br>- `host`: Hostname of the Harbor database.<br>- `port`: Database port.<br>- `db_name`: Database name.<br>- `username`: Username to connect to the core Harbor database.<br>- `password`: Password for the account you set in `username`.<br>- `ssl_mode`: Enable SSL mode.<br>- `max_idle_conns`: The maximum number of connections in the idle connection pool. If <=0 no idle connections are retained. The default value is 2.<br>- `max_open_conns`: The maximum number of open connections to the database. If <= 0 there is no limit on the number of open connections. The default value is 0. |\n| `external_redis` |  | Configure an external Redis instance. |\n|  | `host` | redis_host:redis_port of the external Redis instance. If you are using Sentinel mode, this part should be host_sentinel1:port_sentinel1,host_sentinel2:port_sentinel2 |\n|  | `sentinel_master_set` | Only set this when using Sentinel mode |\n|  | `password` | Password to connect to the external Redis instance. |\n|  | `registry_db_index` | Database index for Harbor registry. |\n|  | `jobservice_db_index` | Database index for jobservice. |\n|  | `chartmuseum_db_index` | Database index for Chart museum. |\n|  | `trivy_db_index` | Database index for Trivy adapter. |\n| `metric` |  | Configure exposing Harbor instance metrics to a specified port and path |\n|  | `enabled` | Enable exposing metrics on your Harbor instance by setting this to `true`. Default is `false` |\n|  | `port` | Port metrics are exposed on. Default is `9090` |\n|  | `path` | Path metrics are exposed on. Default is `/metrics` |\n| `trace` |  | Configure exposing Distributed tracing data |\n|  | `enabled` | Enable exposing tracing on your Harbor instance by setting this to `true`. Default is `false` |\n|  | `sample_rate` | Set the sample rate of tracing. For example, set sample_rate to `1` if you wanna sampling 100% of trace data; set `0.5` if you wanna sampling 50% of trace data, and so forth |\n|  | `namespace` | Namespace used to differenciate different harbor services, which will set to attribute with key `service.namespace` |\n|  | `attributes` | The attributes is a key value dict contains user defined customized attributes used to initialize trace provider, and all of these atributes will added to trace data |\n|  | `jaeger` | - `endpoint`: The url of endpoint(for example `http://127.0.0.1:14268/api/traces`). set endpoint means export to jaeger collector via http.<br>- `username:`: Username used to connect endpoint. Left empty if not needed.<br>- `password:`: Password used to connect endpoint. Left empty if not needed.<br>- `agent_host`: The host name of jaeger agent. Set agent_host means export data to jaeger agent via udp. <br>- `agent_port:`: The port name of jaeger agent. |\n|  | `otel` | - `endpoint`: The hostname and port for otel compitable backend(for example `127.0.0.1:4318`).<br>- `url_path:`: The url path of endpoint(for example `127.0.0.1:4318`) <br>- `compression:`: If enabling data compression<br>- `insecure`: Ignore cert verification for otel backend <br>- `timeout:`: The timeout of data transfer |\n\n## Configuring a Storage Backend\n\nBy default Harbor uses local storage for the registry, but you can optionally configure the `storage_service` setting so that Harbor uses external storage. For information about how to configure the storage backend of a registry for different storage providers, see the [Distribution Configuration Reference](https://distribution.github.io/distribution/about/configuration/) in the Distribution Registry (previously Docker Registry) documentation. For example, if you use Openstack Swift as your storage backend, the parameters might resemble the following:\n\n```yaml\nstorage_service:\n  ca_bundle:\n  swift:\n    username: admin\n    password: ADMIN_PASS\n    authurl: http://keystone_addr:35357/v3/auth\n    tenant: admin\n    domain: default\n    region: regionOne\n    container: docker_images\n  redirect:\n    disabled: false\n```\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/install-config/configure-yml-file", "title": "Configure the Harbor YML File", "description": "This page covers the configuration of the Harbor YML file, including required and optional parameters for deploying Harbor.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:36:34", "type": "overview", "page_metadata": {"og:title": "Harbor &ndash; Configure the Harbor YML File", "ogSiteName": "Harbor", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "ogUrl": "https://goharbor.io/docs/2.12.0/install-config/configure-yml-file/", "ogTitle": "Harbor &ndash; Configure the Harbor YML File", "og:image:type": "image/png", "twitter:creator": "@project_harbor", "og:site_name": "Harbor", "twitter:site": "@project_harbor", "title": "\n      \nHarbor docs | Configure the Harbor YML File\n\n    ", "twitter:card": "summary", "generator": "Hugo 0.74.0", "og:image:alt": "Harbor &ndash; Configure the Harbor YML File project logo", "favicon": "https://goharbor.io/favicon.svg", "og:type": ["documentation", "article"], "og:locale": "en_US", "og:url": "https://goharbor.io/docs/2.12.0/install-config/configure-yml-file/", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogLocale": "en_US", "scrapeId": "69bf7a78-588b-44af-bceb-0932425e5264", "sourceURL": "https://goharbor.io/docs/2.12.0/install-config/configure-yml-file", "url": "https://goharbor.io/docs/2.12.0/install-config/configure-yml-file/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I required parameters in harbor-2-12-0?\n\nAssistant: To required parameters in harbor-2-12-0, here's what you do:\nThe table below lists the parameters that must be set when you deploy Harbor. By default, all of the required parameters are uncommented in the `harbor.yml` file. The optional parameters are commented with `#`. You do not necessarily need to change the values of the required parameters from the defaults that are provided, but these parameters must remain uncommented. At the very least, you must update the `hostname` parameter.\n\n**IMPORTANT**: Harbor does not ship with any certificates. In versions up to and including 1.9.x, by default Harbor uses HTTP to serve registry requests. This is acceptable only in air-gapped test or development environments. In production environments, always use HTTPS.\n\nYou can use certificates that are signed by a trusted third-party CA, or you can use self-signed certificates. For information about how to create a CA, and how to use a CA to sign a server certificate and a client certificate, see [Configuring Harbor with HTTPS Access](https://goharbor.io/docs/2.12.0/install-config/configure-https/). \n\n| Parameter | Sub-parameters | Description and Additional Parameters |\n| --- | --- | --- |\n| `hostname` | None | Specify the IP address or the fully qualified domain name (FQDN) of the target host on which to deploy Harbor. This is the address at which you access the Harbor Portal and the registry service. For example, `192.168.1.10` or `reg.yourdomain.com`. The registry service must be accessible to external clients, so do not specify `localhost`, `127.0.0.1`, or `0.0.0.0` as the hostname. |\n| `http` |  | Do not use HTTP in production environments. Using HTTP is acceptable only in air-gapped test or development environments that do not have a connection to the external internet. Using HTTP in environments that are not air-gapped exposes you to man-in-the-middle attacks. |\n|  | `port` | Port number for HTTP, for both Harbor portal and Docker commands. The default is 80. |\n| `https` |  | Use HTTPS to access the Harbor Portal and the token/notification service. Always use HTTPS in production environments and environments that are not air-gapped. |\n|  | `port` | The port number for HTTPS, for both Harbor portal and Docker commands. The default is 443. |\n|  | `certificate` | The path to the SSL certificate. |\n|  | `private_key` | The path to the SSL key. |\n| `internal_tls` |  | Use HTTPS to communicate between harbor components |\n|  | `enabled` | Set this flag to `true` means internal tls is enabled |\n|  | `dir` | The path to the directory that contains internal certs and keys |\n| `harbor_admin_password` | None | Set an initial password for the Harbor system administrator. This password is only used on the first time that Harbor starts. On subsequent logins, this setting is ignored and the administrator's password is set in the Harbor Portal. The default username and password are `admin` and `Harbor12345`. |\n| `database` |  | Use a local PostgreSQL database. You can optionally configure an external database, in which case you can deactivate this option. |\n|  | `password` | Set the root password for the local database. You must change this password for production deployments. |\n|  | `max_idle_conns` | The maximum number of connections in the idle connection pool. If it <=0, no idle connections are retained. |\n|  | `max_open_conns` | The maximum number of open connections to the database. If it <= 0, then there is no limit on the number of open connections. |\n|  | `conn_max_lifetime` | The maximum amount of time a connection may be reused. If it <= 0, connections are not closed due to a connection's age. |\n|  | `conn_max_idle_time` | The maximum amount of time a connection may be idle. If it <= 0, connections are not closed due to a connection's idle time. |\n| `data_volume` | None | The location on the target host in which to store Harbor's data. This data remains unchanged even when Harbor's containers are removed and/or recreated. You can optionally configure external storage, in which case deactivate this option and enable `storage_service`. The default is `/data`. |\n| `trivy` |  | Configure Trivy scanner. |\n|  | `ignore_unfixed` | Set the flag to `true` to display only fixed vulnerabilities. The default value is `false` |\n|  | `security_check` | Comma-separated list of what security issues to detect. Possible values are `vuln`, `config` and `secret`. Defaults to `vuln`. |\n|  | `skip_update` | You might want to enable this flag in test or CI/CD environments to avoid GitHub rate limiting issues. If the flag is enabled you have to download the `trivy-offline.tar.gz` archive manually, extract and the `trivy.db` and `metadata.json` files and mount them in the `/home/scanner/.cache/trivy/db/trivy.db` path in container. The default value is `false` |\n|  | `insecure` | Set the flag to `true` to skip verifying registry certificate. The default value is `false` |\n|  | `github_token` | Set the GitHub access token to download Trivy DB. Trivy DB is downloaded by Trivy from the GitHub release page. Anonymous downloads from GitHub are subject to the limit of 60 requests per hour. Normally such rate limit is enough for production operations. If, for any reason, it's not enough, you could increase the rate limit to 5000 requests per hour by specifying the GitHub access token. For more details on GitHub rate limiting please consult https://developer.github.com/v3/#rate-limiting .You can create a GitHub token by following the instructions in https://help.github.com/en/github/authenticating-to-github/creating-a-personal-access-token-for-the-command-line |\n| `jobservice` | `max_job_workers` | The maximum number of replication workers in the job service. For each image replication job, a worker synchronizes all tags of a repository to the remote destination. Increasing this number allows more concurrent replication jobs in the system. However, since each worker consumes a certain amount of network/CPU/IO resources, set the value of this attribute based on the hardware resource of the host. The default is 10. |\n| `notification` | `webhook_job_max_retry` | Set the maximum number of retries for web hook jobs. The default is 10. |\n| `log` |  | Configure logging. Harbor uses `rsyslog` to collect the logs for each container. |\n|  | `level` | Set the logging level to `debug`, `info`, `warning`, `error`, or `fatal`. The default is `info`. |\n|  | `local` | Set the log retention parameters:<br>- `rotate_count`: Log files are rotated `rotate_count` times before being removed. If count is 0, old versions are removed rather than rotated. The default is 50.<br>- `rotate_size`: Log files are rotated only if they grow bigger than `rotate_size` bytes. Use `k` for kilobytes, `M` for megabytes, and `G` for gigabytes. `100`, `100k`, `100M` and `100G` are all valid values. The default is 200M.<br>- `location`: Set the directory in which to store the logs. The default is `/var/log/harbor`. |\n|  | `external_endpoint` | Enable this option to forward logs to a syslog server.<br> <br>- `protocol`: Transport protocol for the syslog server. Default is TCP.<br>- `host`: The URL of the syslog server.<br>- `port`: The port on which the syslog server listens |\n| `proxy` |  | Configure proxies to be used by trivy-adapter, the replication jobservice, and Harbor. Leave blank if no proxies are required. Some proxies have whitelist settings, if Trivy is enabled, you need to add the following urls to the proxy server whitelist: `github.com`, `github-releases.githubusercontent.com`, and `*.s3.amazonaws.com.` |\n|  | `http_proxy` | Configure an HTTP proxy, for example, `http://my.proxy.com:3128`. |\n|  | `https_proxy` | Configure an HTTPS proxy, for example, `http://my.proxy.com:3128`. |\n|  | `no_proxy` | Configure when not to use a proxy, for example, `127.0.0.1,localhost,core,registry`. |\n| `cache` |  | Configure cache layer for your Harbor instance. When enabled, Harbor will cache some Harbor resources (for example, artifacts, projects, or project metadata) using Redis, reducing the amount of time and resources used for repeated requests for the same Harbor resource. It's strongly recommended that you enable this feature on Harbor instances with high concurrent pull request rates to improve Harbor's overall performance. For more details on the cache layer implementation and performance improvements, see the [Cache Layer wiki page](https://github.com/goharbor/perf/wiki/Cache-layer). |\n|  | `enabled` | Default is `false`, set to `true` to enable Harbor's cache layer. |\n|  | `expire_hours` | Configure the cache expiration limit in hours. Default is 24..\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/install-config/configure-yml-file", "title": "Configure the Harbor YML File", "description": "This page covers the configuration of the Harbor YML file, including required and optional parameters for deploying Harbor.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:36:34", "type": "section_detail", "page_metadata": {"og:title": "Harbor &ndash; Configure the Harbor YML File", "ogSiteName": "Harbor", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "ogUrl": "https://goharbor.io/docs/2.12.0/install-config/configure-yml-file/", "ogTitle": "Harbor &ndash; Configure the Harbor YML File", "og:image:type": "image/png", "twitter:creator": "@project_harbor", "og:site_name": "Harbor", "twitter:site": "@project_harbor", "title": "\n      \nHarbor docs | Configure the Harbor YML File\n\n    ", "twitter:card": "summary", "generator": "Hugo 0.74.0", "og:image:alt": "Harbor &ndash; Configure the Harbor YML File project logo", "favicon": "https://goharbor.io/favicon.svg", "og:type": ["documentation", "article"], "og:locale": "en_US", "og:url": "https://goharbor.io/docs/2.12.0/install-config/configure-yml-file/", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogLocale": "en_US", "scrapeId": "69bf7a78-588b-44af-bceb-0932425e5264", "sourceURL": "https://goharbor.io/docs/2.12.0/install-config/configure-yml-file", "url": "https://goharbor.io/docs/2.12.0/install-config/configure-yml-file/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I optional parameters in harbor-2-12-0?\n\nAssistant: To optional parameters in harbor-2-12-0, here's what you do:\nThe following table lists the additional, optional parameters that you can set to configure your Harbor deployment beyond the minimum required settings. To enable a setting, you must uncomment it in `harbor.yml` by deleting the leading `#` character.\n\n| Parameter | Sub-Parameters | Description and Additional Parameters |\n| --- | --- | --- |\n| `external_url` | None | Enable this option to use an external proxy. When enabled, the hostname is no longer used. |\n| `storage_service` |  | By default, Harbor stores images and charts on your local filesystem. In a production environment, you might want to use another storage backend instead of the local filesystem. The parameters listed below are the configurations for the registry. See *Configuring Storage Backend* below for more information about how to configure a different backend. |\n|  | `ca_bundle` | The path to the custom root CA certificate, which is injected into the trust store of registry and chart repository containers. This is usually needed if internal storage uses a self signed certificate. |\n|  | `filesystem` | The default is `filesystem`, but you can set `azure`, `gcs`, `s3`, `swift` and `oss`. For information about how to configure other backends, see [Configuring a Storage Backend](https://goharbor.io/docs/2.12.0/install-config/configure-yml-file/#backend) below. Set `maxthreads` to limit the number of threads to the external provider. The default is 100. |\n|  | `redirect` | Set `deactivate` to `true` when you want to deactivate registry redirect |\n| `external_database` |  | Configure external database settings, if you deactivate the local database option. Currently, Harbor only supports PostgreSQL database. You must create a database for Harbor core. The tables are generated automatically when Harbor starts up. |\n|  | `harbor` | Configure an external database for Harbor data.<br>- `host`: Hostname of the Harbor database.<br>- `port`: Database port.<br>- `db_name`: Database name.<br>- `username`: Username to connect to the core Harbor database.<br>- `password`: Password for the account you set in `username`.<br>- `ssl_mode`: Enable SSL mode.<br>- `max_idle_conns`: The maximum number of connections in the idle connection pool. If <=0 no idle connections are retained. The default value is 2.<br>- `max_open_conns`: The maximum number of open connections to the database. If <= 0 there is no limit on the number of open connections. The default value is 0. |\n| `external_redis` |  | Configure an external Redis instance. |\n|  | `host` | redis_host:redis_port of the external Redis instance. If you are using Sentinel mode, this part should be host_sentinel1:port_sentinel1,host_sentinel2:port_sentinel2 |\n|  | `sentinel_master_set` | Only set this when using Sentinel mode |\n|  | `password` | Password to connect to the external Redis instance. |\n|  | `registry_db_index` | Database index for Harbor registry. |\n|  | `jobservice_db_index` | Database index for jobservice. |\n|  | `chartmuseum_db_index` | Database index for Chart museum. |\n|  | `trivy_db_index` | Database index for Trivy adapter. |\n| `metric` |  | Configure exposing Harbor instance metrics to a specified port and path |\n|  | `enabled` | Enable exposing metrics on your Harbor instance by setting this to `true`. Default is `false` |\n|  | `port` | Port metrics are exposed on. Default is `9090` |\n|  | `path` | Path metrics are exposed on. Default is `/metrics` |\n| `trace` |  | Configure exposing Distributed tracing data |\n|  | `enabled` | Enable exposing tracing on your Harbor instance by setting this to `true`. Default is `false` |\n|  | `sample_rate` | Set the sample rate of tracing. For example, set sample_rate to `1` if you wanna sampling 100% of trace data; set `0.5` if you wanna sampling 50% of trace data, and so forth |\n|  | `namespace` | Namespace used to differenciate different harbor services, which will set to attribute with key `service.namespace` |\n|  | `attributes` | The attributes is a key value dict contains user defined customized attributes used to initialize trace provider, and all of these atributes will added to trace data |\n|  | `jaeger` | - `endpoint`: The url of endpoint(for example `http://127.0.0.1:14268/api/traces`). set endpoint means export to jaeger collector via http.<br>- `username:`: Username used to connect endpoint. Left empty if not needed.<br>- `password:`: Password used to connect endpoint. Left empty if not needed.<br>- `agent_host`: The host name of jaeger agent. Set agent_host means export data to jaeger agent via udp. <br>- `agent_port:`: The port name of jaeger agent. |\n|  | `otel` | - `endpoint`: The hostname and port for otel compitable backend(for example `127.0.0.1:4318`).<br>- `url_path:`: The url path of endpoint(for example `127.0.0.1:4318`) <br>- `compression:`: If enabling data compression<br>- `insecure`: Ignore cert verification for otel backend <br>- `timeout:`: The timeout of data transfer |.\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/install-config/configure-yml-file", "title": "Configure the Harbor YML File", "description": "This page covers the configuration of the Harbor YML file, including required and optional parameters for deploying Harbor.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:36:34", "type": "section_detail", "page_metadata": {"og:title": "Harbor &ndash; Configure the Harbor YML File", "ogSiteName": "Harbor", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "ogUrl": "https://goharbor.io/docs/2.12.0/install-config/configure-yml-file/", "ogTitle": "Harbor &ndash; Configure the Harbor YML File", "og:image:type": "image/png", "twitter:creator": "@project_harbor", "og:site_name": "Harbor", "twitter:site": "@project_harbor", "title": "\n      \nHarbor docs | Configure the Harbor YML File\n\n    ", "twitter:card": "summary", "generator": "Hugo 0.74.0", "og:image:alt": "Harbor &ndash; Configure the Harbor YML File project logo", "favicon": "https://goharbor.io/favicon.svg", "og:type": ["documentation", "article"], "og:locale": "en_US", "og:url": "https://goharbor.io/docs/2.12.0/install-config/configure-yml-file/", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogLocale": "en_US", "scrapeId": "69bf7a78-588b-44af-bceb-0932425e5264", "sourceURL": "https://goharbor.io/docs/2.12.0/install-config/configure-yml-file", "url": "https://goharbor.io/docs/2.12.0/install-config/configure-yml-file/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: How do I configuring a storage backend in harbor-2-12-0?\n\nAssistant: To configuring a storage backend in harbor-2-12-0, here's what you do:\nBy default Harbor uses local storage for the registry, but you can optionally configure the `storage_service` setting so that Harbor uses external storage. For information about how to configure the storage backend of a registry for different storage providers, see the [Distribution Configuration Reference](https://distribution.github.io/distribution/about/configuration/) in the Distribution Registry (previously Docker Registry) documentation. For example, if you use Openstack Swift as your storage backend, the parameters might resemble the following:\n\n```yaml\nstorage_service:\n  ca_bundle:\n  swift:\n    username: admin\n    password: ADMIN_PASS\n    authurl: http://keystone_addr:35357/v3/auth\n    tenant: admin\n    domain: default\n    region: regionOne\n    container: docker_images\n  redirect:\n    disabled: false\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/install-config/configure-yml-file", "title": "Configure the Harbor YML File", "description": "This page covers the configuration of the Harbor YML file, including required and optional parameters for deploying Harbor.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:36:34", "type": "section_detail", "page_metadata": {"og:title": "Harbor &ndash; Configure the Harbor YML File", "ogSiteName": "Harbor", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "ogUrl": "https://goharbor.io/docs/2.12.0/install-config/configure-yml-file/", "ogTitle": "Harbor &ndash; Configure the Harbor YML File", "og:image:type": "image/png", "twitter:creator": "@project_harbor", "og:site_name": "Harbor", "twitter:site": "@project_harbor", "title": "\n      \nHarbor docs | Configure the Harbor YML File\n\n    ", "twitter:card": "summary", "generator": "Hugo 0.74.0", "og:image:alt": "Harbor &ndash; Configure the Harbor YML File project logo", "favicon": "https://goharbor.io/favicon.svg", "og:type": ["documentation", "article"], "og:locale": "en_US", "og:url": "https://goharbor.io/docs/2.12.0/install-config/configure-yml-file/", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogLocale": "en_US", "scrapeId": "69bf7a78-588b-44af-bceb-0932425e5264", "sourceURL": "https://goharbor.io/docs/2.12.0/install-config/configure-yml-file", "url": "https://goharbor.io/docs/2.12.0/install-config/configure-yml-file/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: Can you give me some code examples for Configure the Harbor YML File in harbor-2-12-0?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Example of Configuring Storage Backend**:\n\n```yaml\nstorage_service:\n  ca_bundle:\n  swift:\n    username: admin\n    password: ADMIN_PASS\n    authurl: http://keystone_addr:35357/v3/auth\n    tenant: admin\n    domain: default\n    region: regionOne\n    container: docker_images\n  redirect:\n    disabled: false\n\n```\n\nThis snippet shows you how to example of configuring storage backend, which is an important aspect of configure the harbor yml file.\n\n", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/install-config/configure-yml-file", "title": "Configure the Harbor YML File", "description": "This page covers the configuration of the Harbor YML file, including required and optional parameters for deploying Harbor.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:36:34", "type": "code_examples", "page_metadata": {"og:title": "Harbor &ndash; Configure the Harbor YML File", "ogSiteName": "Harbor", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "ogUrl": "https://goharbor.io/docs/2.12.0/install-config/configure-yml-file/", "ogTitle": "Harbor &ndash; Configure the Harbor YML File", "og:image:type": "image/png", "twitter:creator": "@project_harbor", "og:site_name": "Harbor", "twitter:site": "@project_harbor", "title": "\n      \nHarbor docs | Configure the Harbor YML File\n\n    ", "twitter:card": "summary", "generator": "Hugo 0.74.0", "og:image:alt": "Harbor &ndash; Configure the Harbor YML File project logo", "favicon": "https://goharbor.io/favicon.svg", "og:type": ["documentation", "article"], "og:locale": "en_US", "og:url": "https://goharbor.io/docs/2.12.0/install-config/configure-yml-file/", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogLocale": "en_US", "scrapeId": "69bf7a78-588b-44af-bceb-0932425e5264", "sourceURL": "https://goharbor.io/docs/2.12.0/install-config/configure-yml-file", "url": "https://goharbor.io/docs/2.12.0/install-config/configure-yml-file/", "statusCode": 200}}}
{"text": "System: You are a helpful harbor-2-12-0 expert.\n\nUser: What are some tips for using Configure the Harbor YML File in harbor-2-12-0 effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nAlways use HTTPS in production environments and environments that are not air-gapped.\n\nDo not use HTTP in production environments.\n\nSet the `hostname` parameter to the IP address or FQDN of the target host.\n\nChange the root password for the local database for production deployments.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://goharbor.io/docs/2.12.0/install-config/configure-yml-file", "title": "Configure the Harbor YML File", "description": "This page covers the configuration of the Harbor YML file, including required and optional parameters for deploying Harbor.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 04:36:34", "type": "best_practices", "page_metadata": {"og:title": "Harbor &ndash; Configure the Harbor YML File", "ogSiteName": "Harbor", "viewport": "initial-scale=1,maximum-scale=1,user-scalable=no", "ogUrl": "https://goharbor.io/docs/2.12.0/install-config/configure-yml-file/", "ogTitle": "Harbor &ndash; Configure the Harbor YML File", "og:image:type": "image/png", "twitter:creator": "@project_harbor", "og:site_name": "Harbor", "twitter:site": "@project_harbor", "title": "\n      \nHarbor docs | Configure the Harbor YML File\n\n    ", "twitter:card": "summary", "generator": "Hugo 0.74.0", "og:image:alt": "Harbor &ndash; Configure the Harbor YML File project logo", "favicon": "https://goharbor.io/favicon.svg", "og:type": ["documentation", "article"], "og:locale": "en_US", "og:url": "https://goharbor.io/docs/2.12.0/install-config/configure-yml-file/", "og:image": "https://goharbor.io/img/logos/harbor-icon-color.png", "ogLocale": "en_US", "scrapeId": "69bf7a78-588b-44af-bceb-0932425e5264", "sourceURL": "https://goharbor.io/docs/2.12.0/install-config/configure-yml-file", "url": "https://goharbor.io/docs/2.12.0/install-config/configure-yml-file/", "statusCode": 200}}}

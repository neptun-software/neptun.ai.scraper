{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: Can you explain what Nitro Deploy Providers is in nitro-deploy?\n\nAssistant: Sure, I'd be happy to explain Nitro Deploy Providers in nitro-deploy.\n\n# Nitro Deploy Providers\n\nLearn more about Nitro deploy providers.Here's a quick rundown of what this is about:\n\n## Default output\n\nThe default production output preset is [Node.js server](https://nitro.build/deploy/node).\n\nWhen running Nitro in development mode, Nitro will always use a special preset called `nitro-dev` using Node.js with ESM in an isolated Worker environment with behavior as close as possible to the production environment.\n\n## Zero-Config Providers\n\nWhen deploying to production using CI/CD, Nitro tries to automatically detect the provider environment and set the right one without any additional configuration required. Currently, the providers below can be auto-detected with zero config.\n\n- [aws amplify](https://nitro.build/deploy/providers/aws-amplify)\n- [azure](https://nitro.build/deploy/providers/azure)\n- [cloudflare pages](https://nitro.build/deploy/providers/cloudflare#cloudflare-pages)\n- [firebase app hosting](https://nitro.build/deploy/providers/firebase#firebase-app-hosting-beta)\n- [netlify](https://nitro.build/deploy/providers/netlify)\n- [stormkit](https://nitro.build/deploy/providers/stormkit)\n- [vercel](https://nitro.build/deploy/providers/vercel)\n- [zeabur](https://nitro.build/deploy/providers/zeabur)\n\n## Changing the deployment preset\n\nIf you need to build Nitro against a specific provider, you can target it by defining an environment variable named `NITRO_PRESET` or `SERVER_PRESET`, or by updating your Nitro [configuration](https://nitro.build/guide/configuration) or using `--preset` argument.\n\nUsing the environment variable approach is recommended for deployments depending on CI/CD.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://nitro.build/deploy", "title": "Nitro Deploy Providers", "description": "Learn more about Nitro deploy providers.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 00:55:47", "type": "overview", "page_metadata": {"og:image:width": "1200", "viewport": "width=device-width, initial-scale=1", "ogImage": "https://nitro.build/_og/deploy.png?name=Nitro&title=Overview&description=Learn+more+about+Nitro+deploy+providers.", "favicon": "https://nitro.build/icon.svg", "og:image:height": "600", "twitter:site": "@unjsio", "twitter:image:alt": "Learn more about Nitro deploy providers.", "og:image:type": "image/png", "twitter:image": "https://nitro.build/_og/deploy.png?name=Nitro&title=Overview&description=Learn+more+about+Nitro+deploy+providers.", "twitter:image:height": "600", "title": "Overview - Nitro", "description": "Learn more about Nitro deploy providers.", "og:image:alt": "Learn more about Nitro deploy providers.", "og:image": "https://nitro.build/_og/deploy.png?name=Nitro&title=Overview&description=Learn+more+about+Nitro+deploy+providers.", "twitter:image:width": "1200", "scrapeId": "3e6fa601-2d8b-48c1-ad78-9b99a0509160", "sourceURL": "https://nitro.build/deploy", "url": "https://nitro.build/deploy", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: How do I default output in nitro-deploy?\n\nAssistant: To default output in nitro-deploy, here's what you do:\nThe default production output preset is [Node.js server](https://nitro.build/deploy/node).\n\nWhen running Nitro in development mode, Nitro will always use a special preset called `nitro-dev` using Node.js with ESM in an isolated Worker environment with behavior as close as possible to the production environment..\nPretty straightforward, right?", "metadata": {"source_url": "https://nitro.build/deploy", "title": "Nitro Deploy Providers", "description": "Learn more about Nitro deploy providers.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 00:55:47", "type": "section_detail", "page_metadata": {"og:image:width": "1200", "viewport": "width=device-width, initial-scale=1", "ogImage": "https://nitro.build/_og/deploy.png?name=Nitro&title=Overview&description=Learn+more+about+Nitro+deploy+providers.", "favicon": "https://nitro.build/icon.svg", "og:image:height": "600", "twitter:site": "@unjsio", "twitter:image:alt": "Learn more about Nitro deploy providers.", "og:image:type": "image/png", "twitter:image": "https://nitro.build/_og/deploy.png?name=Nitro&title=Overview&description=Learn+more+about+Nitro+deploy+providers.", "twitter:image:height": "600", "title": "Overview - Nitro", "description": "Learn more about Nitro deploy providers.", "og:image:alt": "Learn more about Nitro deploy providers.", "og:image": "https://nitro.build/_og/deploy.png?name=Nitro&title=Overview&description=Learn+more+about+Nitro+deploy+providers.", "twitter:image:width": "1200", "scrapeId": "3e6fa601-2d8b-48c1-ad78-9b99a0509160", "sourceURL": "https://nitro.build/deploy", "url": "https://nitro.build/deploy", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: How do I zero-config providers in nitro-deploy?\n\nAssistant: To zero-config providers in nitro-deploy, here's what you do:\nWhen deploying to production using CI/CD, Nitro tries to automatically detect the provider environment and set the right one without any additional configuration required. Currently, the providers below can be auto-detected with zero config.\n\n- [aws amplify](https://nitro.build/deploy/providers/aws-amplify)\n- [azure](https://nitro.build/deploy/providers/azure)\n- [cloudflare pages](https://nitro.build/deploy/providers/cloudflare#cloudflare-pages)\n- [firebase app hosting](https://nitro.build/deploy/providers/firebase#firebase-app-hosting-beta)\n- [netlify](https://nitro.build/deploy/providers/netlify)\n- [stormkit](https://nitro.build/deploy/providers/stormkit)\n- [vercel](https://nitro.build/deploy/providers/vercel)\n- [zeabur](https://nitro.build/deploy/providers/zeabur).\nPretty straightforward, right?", "metadata": {"source_url": "https://nitro.build/deploy", "title": "Nitro Deploy Providers", "description": "Learn more about Nitro deploy providers.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 00:55:47", "type": "section_detail", "page_metadata": {"og:image:width": "1200", "viewport": "width=device-width, initial-scale=1", "ogImage": "https://nitro.build/_og/deploy.png?name=Nitro&title=Overview&description=Learn+more+about+Nitro+deploy+providers.", "favicon": "https://nitro.build/icon.svg", "og:image:height": "600", "twitter:site": "@unjsio", "twitter:image:alt": "Learn more about Nitro deploy providers.", "og:image:type": "image/png", "twitter:image": "https://nitro.build/_og/deploy.png?name=Nitro&title=Overview&description=Learn+more+about+Nitro+deploy+providers.", "twitter:image:height": "600", "title": "Overview - Nitro", "description": "Learn more about Nitro deploy providers.", "og:image:alt": "Learn more about Nitro deploy providers.", "og:image": "https://nitro.build/_og/deploy.png?name=Nitro&title=Overview&description=Learn+more+about+Nitro+deploy+providers.", "twitter:image:width": "1200", "scrapeId": "3e6fa601-2d8b-48c1-ad78-9b99a0509160", "sourceURL": "https://nitro.build/deploy", "url": "https://nitro.build/deploy", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: How do I changing the deployment preset in nitro-deploy?\n\nAssistant: To changing the deployment preset in nitro-deploy, here's what you do:\nIf you need to build Nitro against a specific provider, you can target it by defining an environment variable named `NITRO_PRESET` or `SERVER_PRESET`, or by updating your Nitro [configuration](https://nitro.build/guide/configuration) or using `--preset` argument.\n\nUsing the environment variable approach is recommended for deployments depending on CI/CD..\nPretty straightforward, right?", "metadata": {"source_url": "https://nitro.build/deploy", "title": "Nitro Deploy Providers", "description": "Learn more about Nitro deploy providers.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 00:55:47", "type": "section_detail", "page_metadata": {"og:image:width": "1200", "viewport": "width=device-width, initial-scale=1", "ogImage": "https://nitro.build/_og/deploy.png?name=Nitro&title=Overview&description=Learn+more+about+Nitro+deploy+providers.", "favicon": "https://nitro.build/icon.svg", "og:image:height": "600", "twitter:site": "@unjsio", "twitter:image:alt": "Learn more about Nitro deploy providers.", "og:image:type": "image/png", "twitter:image": "https://nitro.build/_og/deploy.png?name=Nitro&title=Overview&description=Learn+more+about+Nitro+deploy+providers.", "twitter:image:height": "600", "title": "Overview - Nitro", "description": "Learn more about Nitro deploy providers.", "og:image:alt": "Learn more about Nitro deploy providers.", "og:image": "https://nitro.build/_og/deploy.png?name=Nitro&title=Overview&description=Learn+more+about+Nitro+deploy+providers.", "twitter:image:width": "1200", "scrapeId": "3e6fa601-2d8b-48c1-ad78-9b99a0509160", "sourceURL": "https://nitro.build/deploy", "url": "https://nitro.build/deploy", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: Can you give me some code examples for Nitro Deploy Providers in nitro-deploy?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Defining a `NITRO_PRESET` environment variable**:\n\n```yaml\nnitro build --preset cloudflare_pages\n```\n\nThis snippet shows you how to defining a `nitro_preset` environment variable, which is an important aspect of nitro deploy providers.\n\n**Updating the `nitro.config.ts` file**:\n\n```yaml\nexport default defineNitroConfig({\n  preset: 'cloudflare_pages'\n})\n```\n\nThis snippet shows you how to updating the `nitro.config.ts` file, which is an important aspect of nitro deploy providers.\n\n", "metadata": {"source_url": "https://nitro.build/deploy", "title": "Nitro Deploy Providers", "description": "Learn more about Nitro deploy providers.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 00:55:47", "type": "code_examples", "page_metadata": {"og:image:width": "1200", "viewport": "width=device-width, initial-scale=1", "ogImage": "https://nitro.build/_og/deploy.png?name=Nitro&title=Overview&description=Learn+more+about+Nitro+deploy+providers.", "favicon": "https://nitro.build/icon.svg", "og:image:height": "600", "twitter:site": "@unjsio", "twitter:image:alt": "Learn more about Nitro deploy providers.", "og:image:type": "image/png", "twitter:image": "https://nitro.build/_og/deploy.png?name=Nitro&title=Overview&description=Learn+more+about+Nitro+deploy+providers.", "twitter:image:height": "600", "title": "Overview - Nitro", "description": "Learn more about Nitro deploy providers.", "og:image:alt": "Learn more about Nitro deploy providers.", "og:image": "https://nitro.build/_og/deploy.png?name=Nitro&title=Overview&description=Learn+more+about+Nitro+deploy+providers.", "twitter:image:width": "1200", "scrapeId": "3e6fa601-2d8b-48c1-ad78-9b99a0509160", "sourceURL": "https://nitro.build/deploy", "url": "https://nitro.build/deploy", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: What are some tips for using Nitro Deploy Providers in nitro-deploy effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nUsing the environment variable approach is recommended for deployments depending on CI/CD.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://nitro.build/deploy", "title": "Nitro Deploy Providers", "description": "Learn more about Nitro deploy providers.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 00:55:47", "type": "best_practices", "page_metadata": {"og:image:width": "1200", "viewport": "width=device-width, initial-scale=1", "ogImage": "https://nitro.build/_og/deploy.png?name=Nitro&title=Overview&description=Learn+more+about+Nitro+deploy+providers.", "favicon": "https://nitro.build/icon.svg", "og:image:height": "600", "twitter:site": "@unjsio", "twitter:image:alt": "Learn more about Nitro deploy providers.", "og:image:type": "image/png", "twitter:image": "https://nitro.build/_og/deploy.png?name=Nitro&title=Overview&description=Learn+more+about+Nitro+deploy+providers.", "twitter:image:height": "600", "title": "Overview - Nitro", "description": "Learn more about Nitro deploy providers.", "og:image:alt": "Learn more about Nitro deploy providers.", "og:image": "https://nitro.build/_og/deploy.png?name=Nitro&title=Overview&description=Learn+more+about+Nitro+deploy+providers.", "twitter:image:width": "1200", "scrapeId": "3e6fa601-2d8b-48c1-ad78-9b99a0509160", "sourceURL": "https://nitro.build/deploy", "url": "https://nitro.build/deploy", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: Can you explain what Runtimes is in nitro-deploy?\n\nAssistant: Sure, I'd be happy to explain Runtimes in nitro-deploy.\n\n# Runtimes\n\nRun Nitro apps with Node.js runtime.Here's a quick rundown of what this is about:\n\n## Node.js\n\nNode.js is the default nitro output preset for production builds and Nitro has native Node.js runtime support.\n\nBuild project using nitro CLI:\n\n```\nnitro build\n```\n\nWhen running `nitro build` with the Node server preset, the result will be an entry point that launches a ready-to-run Node server. To try output:\n\n```\n$ node .output/server/index.mjs\nListening on http://localhost:3000\n```\n\nYou can now deploy fully standalone `.output` directory to the hosting of your choice.\n\n## Environment Variables\n\nYou can customize server behavior using following environment variables:\n\n- `NITRO_PORT` or `PORT` (defaults to `3000`)\n- `NITRO_HOST` or `HOST`\n- `NITRO_UNIX_SOCKET` - if provided (a path to the desired socket file) the service will be served over the provided UNIX socket.\n- `NITRO_SSL_CERT` and `NITRO_SSL_KEY` - if both are present, this will launch the server in HTTPS mode. In the vast majority of cases, this should not be used other than for testing, and the Nitro server should be run behind a reverse proxy like nginx or Cloudflare which terminates SSL.\n- `NITRO_SHUTDOWN_DISABLED` - Disables the graceful shutdown feature when set to 'true'. If it's set to 'true', the graceful shutdown is bypassed to speed up the development process. Defaults to 'false'.\n- `NITRO_SHUTDOWN_SIGNALS` - Allows you to specify which signals should be handled. Each signal should be separated with a space. Defaults to 'SIGINT SIGTERM'.\n- `NITRO_SHUTDOWN_TIMEOUT` - Sets the amount of time (in milliseconds) before a forced shutdown occurs. Defaults to '30000' milliseconds.\n- `NITRO_SHUTDOWN_FORCE` - When set to true, it triggers `process.exit()` at the end of the shutdown process. If it's set to 'false', the process will simply let the event loop clear. Defaults to 'true'.\n\n## Cluster mode\n\nFor more performance and leveraging multi-core handling, you can use cluster preset.\n\n## Handler (advanced)\n\nNitro also has a more low-level preset that directly exports a function with `(req, res) => {}` signature usable for middleware and custom servers.\n\nWhen running `nitro build` with the Node preset, the result will be an entry point exporting a function with the `(req, res) => {}` signature.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://nitro.build/deploy/node", "title": "Runtimes", "description": "Run Nitro apps with Node.js runtime.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 00:56:20", "type": "overview", "page_metadata": {"twitter:image:width": "1200", "description": "Run Nitro apps with Node.js runtime.", "og:image:type": "image/png", "favicon": "https://nitro.build/icon.svg", "ogImage": "https://nitro.build/_og/deploy/runtimes/node.png?name=Nitro&title=Node.js&description=Run+Nitro+apps+with+Node.js+runtime.", "twitter:site": "@unjsio", "viewport": "width=device-width, initial-scale=1", "og:image": "https://nitro.build/_og/deploy/runtimes/node.png?name=Nitro&title=Node.js&description=Run+Nitro+apps+with+Node.js+runtime.", "og:image:height": "600", "og:image:width": "1200", "twitter:image:alt": "Run Nitro apps with Node.js runtime.", "title": "Node.js - Nitro", "twitter:image:height": "600", "og:image:alt": "Run Nitro apps with Node.js runtime.", "twitter:image": "https://nitro.build/_og/deploy/runtimes/node.png?name=Nitro&title=Node.js&description=Run+Nitro+apps+with+Node.js+runtime.", "scrapeId": "3383f4df-8962-4de3-ab69-a47e7a5d9cc2", "sourceURL": "https://nitro.build/deploy/node", "url": "https://nitro.build/deploy/runtimes/node", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: How do I node.js in nitro-deploy?\n\nAssistant: To node.js in nitro-deploy, here's what you do:\nNode.js is the default nitro output preset for production builds and Nitro has native Node.js runtime support.\n\nBuild project using nitro CLI:\n\n```\nnitro build\n```\n\nWhen running `nitro build` with the Node server preset, the result will be an entry point that launches a ready-to-run Node server. To try output:\n\n```\n$ node .output/server/index.mjs\nListening on http://localhost:3000\n```\n\nYou can now deploy fully standalone `.output` directory to the hosting of your choice..\nPretty straightforward, right?", "metadata": {"source_url": "https://nitro.build/deploy/node", "title": "Runtimes", "description": "Run Nitro apps with Node.js runtime.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 00:56:20", "type": "section_detail", "page_metadata": {"twitter:image:width": "1200", "description": "Run Nitro apps with Node.js runtime.", "og:image:type": "image/png", "favicon": "https://nitro.build/icon.svg", "ogImage": "https://nitro.build/_og/deploy/runtimes/node.png?name=Nitro&title=Node.js&description=Run+Nitro+apps+with+Node.js+runtime.", "twitter:site": "@unjsio", "viewport": "width=device-width, initial-scale=1", "og:image": "https://nitro.build/_og/deploy/runtimes/node.png?name=Nitro&title=Node.js&description=Run+Nitro+apps+with+Node.js+runtime.", "og:image:height": "600", "og:image:width": "1200", "twitter:image:alt": "Run Nitro apps with Node.js runtime.", "title": "Node.js - Nitro", "twitter:image:height": "600", "og:image:alt": "Run Nitro apps with Node.js runtime.", "twitter:image": "https://nitro.build/_og/deploy/runtimes/node.png?name=Nitro&title=Node.js&description=Run+Nitro+apps+with+Node.js+runtime.", "scrapeId": "3383f4df-8962-4de3-ab69-a47e7a5d9cc2", "sourceURL": "https://nitro.build/deploy/node", "url": "https://nitro.build/deploy/runtimes/node", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: How do I environment variables in nitro-deploy?\n\nAssistant: To environment variables in nitro-deploy, here's what you do:\nYou can customize server behavior using following environment variables:\n\n- `NITRO_PORT` or `PORT` (defaults to `3000`)\n- `NITRO_HOST` or `HOST`\n- `NITRO_UNIX_SOCKET` - if provided (a path to the desired socket file) the service will be served over the provided UNIX socket.\n- `NITRO_SSL_CERT` and `NITRO_SSL_KEY` - if both are present, this will launch the server in HTTPS mode. In the vast majority of cases, this should not be used other than for testing, and the Nitro server should be run behind a reverse proxy like nginx or Cloudflare which terminates SSL.\n- `NITRO_SHUTDOWN_DISABLED` - Disables the graceful shutdown feature when set to 'true'. If it's set to 'true', the graceful shutdown is bypassed to speed up the development process. Defaults to 'false'.\n- `NITRO_SHUTDOWN_SIGNALS` - Allows you to specify which signals should be handled. Each signal should be separated with a space. Defaults to 'SIGINT SIGTERM'.\n- `NITRO_SHUTDOWN_TIMEOUT` - Sets the amount of time (in milliseconds) before a forced shutdown occurs. Defaults to '30000' milliseconds.\n- `NITRO_SHUTDOWN_FORCE` - When set to true, it triggers `process.exit()` at the end of the shutdown process. If it's set to 'false', the process will simply let the event loop clear. Defaults to 'true'..\nPretty straightforward, right?", "metadata": {"source_url": "https://nitro.build/deploy/node", "title": "Runtimes", "description": "Run Nitro apps with Node.js runtime.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 00:56:20", "type": "section_detail", "page_metadata": {"twitter:image:width": "1200", "description": "Run Nitro apps with Node.js runtime.", "og:image:type": "image/png", "favicon": "https://nitro.build/icon.svg", "ogImage": "https://nitro.build/_og/deploy/runtimes/node.png?name=Nitro&title=Node.js&description=Run+Nitro+apps+with+Node.js+runtime.", "twitter:site": "@unjsio", "viewport": "width=device-width, initial-scale=1", "og:image": "https://nitro.build/_og/deploy/runtimes/node.png?name=Nitro&title=Node.js&description=Run+Nitro+apps+with+Node.js+runtime.", "og:image:height": "600", "og:image:width": "1200", "twitter:image:alt": "Run Nitro apps with Node.js runtime.", "title": "Node.js - Nitro", "twitter:image:height": "600", "og:image:alt": "Run Nitro apps with Node.js runtime.", "twitter:image": "https://nitro.build/_og/deploy/runtimes/node.png?name=Nitro&title=Node.js&description=Run+Nitro+apps+with+Node.js+runtime.", "scrapeId": "3383f4df-8962-4de3-ab69-a47e7a5d9cc2", "sourceURL": "https://nitro.build/deploy/node", "url": "https://nitro.build/deploy/runtimes/node", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: How do I cluster mode in nitro-deploy?\n\nAssistant: To cluster mode in nitro-deploy, here's what you do:\nFor more performance and leveraging multi-core handling, you can use cluster preset..\nPretty straightforward, right?", "metadata": {"source_url": "https://nitro.build/deploy/node", "title": "Runtimes", "description": "Run Nitro apps with Node.js runtime.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 00:56:20", "type": "section_detail", "page_metadata": {"twitter:image:width": "1200", "description": "Run Nitro apps with Node.js runtime.", "og:image:type": "image/png", "favicon": "https://nitro.build/icon.svg", "ogImage": "https://nitro.build/_og/deploy/runtimes/node.png?name=Nitro&title=Node.js&description=Run+Nitro+apps+with+Node.js+runtime.", "twitter:site": "@unjsio", "viewport": "width=device-width, initial-scale=1", "og:image": "https://nitro.build/_og/deploy/runtimes/node.png?name=Nitro&title=Node.js&description=Run+Nitro+apps+with+Node.js+runtime.", "og:image:height": "600", "og:image:width": "1200", "twitter:image:alt": "Run Nitro apps with Node.js runtime.", "title": "Node.js - Nitro", "twitter:image:height": "600", "og:image:alt": "Run Nitro apps with Node.js runtime.", "twitter:image": "https://nitro.build/_og/deploy/runtimes/node.png?name=Nitro&title=Node.js&description=Run+Nitro+apps+with+Node.js+runtime.", "scrapeId": "3383f4df-8962-4de3-ab69-a47e7a5d9cc2", "sourceURL": "https://nitro.build/deploy/node", "url": "https://nitro.build/deploy/runtimes/node", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: How do I handler (advanced) in nitro-deploy?\n\nAssistant: To handler (advanced) in nitro-deploy, here's what you do:\nNitro also has a more low-level preset that directly exports a function with `(req, res) => {}` signature usable for middleware and custom servers.\n\nWhen running `nitro build` with the Node preset, the result will be an entry point exporting a function with the `(req, res) => {}` signature..\nPretty straightforward, right?", "metadata": {"source_url": "https://nitro.build/deploy/node", "title": "Runtimes", "description": "Run Nitro apps with Node.js runtime.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 00:56:20", "type": "section_detail", "page_metadata": {"twitter:image:width": "1200", "description": "Run Nitro apps with Node.js runtime.", "og:image:type": "image/png", "favicon": "https://nitro.build/icon.svg", "ogImage": "https://nitro.build/_og/deploy/runtimes/node.png?name=Nitro&title=Node.js&description=Run+Nitro+apps+with+Node.js+runtime.", "twitter:site": "@unjsio", "viewport": "width=device-width, initial-scale=1", "og:image": "https://nitro.build/_og/deploy/runtimes/node.png?name=Nitro&title=Node.js&description=Run+Nitro+apps+with+Node.js+runtime.", "og:image:height": "600", "og:image:width": "1200", "twitter:image:alt": "Run Nitro apps with Node.js runtime.", "title": "Node.js - Nitro", "twitter:image:height": "600", "og:image:alt": "Run Nitro apps with Node.js runtime.", "twitter:image": "https://nitro.build/_og/deploy/runtimes/node.png?name=Nitro&title=Node.js&description=Run+Nitro+apps+with+Node.js+runtime.", "scrapeId": "3383f4df-8962-4de3-ab69-a47e7a5d9cc2", "sourceURL": "https://nitro.build/deploy/node", "url": "https://nitro.build/deploy/runtimes/node", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: Can you give me some code examples for Runtimes in nitro-deploy?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Build Project**:\n\n```yaml\nnitro build\n```\n\nThis snippet shows you how to build project, which is an important aspect of runtimes.\n\n**Run Node Server**:\n\n```yaml\n$ node .output/server/index.mjs\nListening on http://localhost:3000\n```\n\nThis snippet shows you how to run node server, which is an important aspect of runtimes.\n\n**Example of Handler**:\n\n```yaml\nimport { createServer } from 'node:http'\nimport { listener } from './.output/server'\n\nconst server = createServer(listener)\nserver.listen(8080)\n```\n\nThis snippet shows you how to example of handler, which is an important aspect of runtimes.\n\n", "metadata": {"source_url": "https://nitro.build/deploy/node", "title": "Runtimes", "description": "Run Nitro apps with Node.js runtime.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 00:56:20", "type": "code_examples", "page_metadata": {"twitter:image:width": "1200", "description": "Run Nitro apps with Node.js runtime.", "og:image:type": "image/png", "favicon": "https://nitro.build/icon.svg", "ogImage": "https://nitro.build/_og/deploy/runtimes/node.png?name=Nitro&title=Node.js&description=Run+Nitro+apps+with+Node.js+runtime.", "twitter:site": "@unjsio", "viewport": "width=device-width, initial-scale=1", "og:image": "https://nitro.build/_og/deploy/runtimes/node.png?name=Nitro&title=Node.js&description=Run+Nitro+apps+with+Node.js+runtime.", "og:image:height": "600", "og:image:width": "1200", "twitter:image:alt": "Run Nitro apps with Node.js runtime.", "title": "Node.js - Nitro", "twitter:image:height": "600", "og:image:alt": "Run Nitro apps with Node.js runtime.", "twitter:image": "https://nitro.build/_og/deploy/runtimes/node.png?name=Nitro&title=Node.js&description=Run+Nitro+apps+with+Node.js+runtime.", "scrapeId": "3383f4df-8962-4de3-ab69-a47e7a5d9cc2", "sourceURL": "https://nitro.build/deploy/node", "url": "https://nitro.build/deploy/runtimes/node", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: What are some tips for using Runtimes in nitro-deploy effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nUse the Node.js runtime for production builds with the `node_server` preset.\n\nFor performance, consider using the `node_cluster` preset to leverage multi-core handling.\n\nCustomize server behavior with environment variables as needed.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://nitro.build/deploy/node", "title": "Runtimes", "description": "Run Nitro apps with Node.js runtime.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 00:56:20", "type": "best_practices", "page_metadata": {"twitter:image:width": "1200", "description": "Run Nitro apps with Node.js runtime.", "og:image:type": "image/png", "favicon": "https://nitro.build/icon.svg", "ogImage": "https://nitro.build/_og/deploy/runtimes/node.png?name=Nitro&title=Node.js&description=Run+Nitro+apps+with+Node.js+runtime.", "twitter:site": "@unjsio", "viewport": "width=device-width, initial-scale=1", "og:image": "https://nitro.build/_og/deploy/runtimes/node.png?name=Nitro&title=Node.js&description=Run+Nitro+apps+with+Node.js+runtime.", "og:image:height": "600", "og:image:width": "1200", "twitter:image:alt": "Run Nitro apps with Node.js runtime.", "title": "Node.js - Nitro", "twitter:image:height": "600", "og:image:alt": "Run Nitro apps with Node.js runtime.", "twitter:image": "https://nitro.build/_og/deploy/runtimes/node.png?name=Nitro&title=Node.js&description=Run+Nitro+apps+with+Node.js+runtime.", "scrapeId": "3383f4df-8962-4de3-ab69-a47e7a5d9cc2", "sourceURL": "https://nitro.build/deploy/node", "url": "https://nitro.build/deploy/runtimes/node", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: Can you explain what Providers is in nitro-deploy?\n\nAssistant: Sure, I'd be happy to explain Providers in nitro-deploy.\n\n# Providers\n\nDeploy Nitro apps to Azure Static Web apps or functions.Here's a quick rundown of what this is about:\n\n## Azure static web apps\n\n**Preset:** `azure`\n\nRead more in Azure Static Web Apps.\n\nIntegration with this provider is possible with [zero configuration](https://nitro.build/deploy/#zero-config-providers).\n\n[Azure Static Web Apps](https://azure.microsoft.com/en-us/products/app-service/static) are designed to be deployed continuously in a [GitHub Actions workflow](https://docs.microsoft.com/en-us/azure/static-web-apps/github-actions-workflow). By default, Nitro will detect this deployment environment and enable the `azure` preset.\n\n## Local preview\n\nInstall [Azure Functions Core Tools](https://docs.microsoft.com/en-us/azure/azure-functions/functions-run-local) if you want to test locally.\n\nYou can invoke a development environment to preview before deploying.\n\n```\nNITRO_PRESET=azure npx nypm@latest build\nnpx @azure/static-web-apps-cli start .output/public --api-location .output/server\n```\n\n## Configuration\n\nAzure Static Web Apps are [configured](https://learn.microsoft.com/en-us/azure/static-web-apps/configuration) using the `staticwebapp.config.json` file.\n\nNitro automatically generates this configuration file whenever the application is built with the `azure` preset.\n\nNitro will automatically add the following properties based on the following criteria:\n\n| Property | Criteria | Default |\n| --- | --- | --- |\n| **[platform.apiRuntime](https://learn.microsoft.com/en-us/azure/static-web-apps/configuration#platform)** | Will automatically set to `node:16` or `node:14` depending on your package configuration. | `node:16` |\n| **[navigationFallback.rewrite](https://learn.microsoft.com/en-us/azure/static-web-apps/configuration#fallback-routes)** | Is always `/api/server` | `/api/server` |\n| **[routes](https://learn.microsoft.com/en-us/azure/static-web-apps/configuration#routes)** | All prerendered routes are added. Additionally, if you do not have an `index.html` file an empty one is created for you for compatibility purposes and also requests to `/index.html` are redirected to the root directory which is handled by `/api/server`. | `[]` |\n\n## Custom configuration\n\nYou can alter the Nitro generated configuration using `azure.config` option.\n\nCustom routes will be added and matched first. In the case of a conflict (determined if an object has the same route property), custom routes will override generated ones.\n\n## Deploy from CI/CD via GitHub actions\n\nWhen you link your GitHub repository to Azure Static Web Apps, a workflow file is added to the repository.\n\nWhen you are asked to select your framework, select custom and provide the following information:\n\n| Input | Value |\n| --- | --- |\n| **app_location** | '/' |\n| **api_location** | '.output/server' |\n| **output_location** | '.output/public' |\n\nIf you miss this step, you can always find the build configuration section in your workflow and update the build configuration:\n\n.github/workflows/azure-static-web-apps-<RANDOM_NAME>.yml\n\n```\n###### Repository/Build Configurations ######\napp_location: '/'\napi_location: '.output/server'\noutput_location: '.output/public'\n###### End of Repository/Build Configurations ######\n```\n\nThat's it! Now Azure Static Web Apps will automatically deploy your Nitro-powered application on push.\n\nIf you are using runtimeConfig, you will likely want to configure the corresponding [environment variables on Azure](https://docs.microsoft.com/en-us/azure/static-web-apps/application-settings).\n\n## Azure functions\n\n**Preset:** `azure_functions`\n\nIf you encounter any issues, please ensure you're using a Node.js 16+ runtime. You can find more information about [how to set the Node version in the Azure docs](https://docs.microsoft.com/en-us/azure/azure-functions/functions-reference-node?tabs=v2#setting-the-node-version).\nPlease see [nitrojs/nitro#2114](https://github.com/nitrojs/nitro/issues/2114) for some common issues.\n\n## Local preview\n\nInstall [Azure Functions Core Tools](https://docs.microsoft.com/en-us/azure/azure-functions/functions-run-local) if you want to test locally.\n\nYou can invoke a development environment from the serverless directory.\n\n```\nNITRO_PRESET=azure_functions npx nypm@latest build\ncd .output\nfunc start\n```\n\nYou can now visit `http://localhost:7071/` in your browser and browse your site running locally on Azure Functions.\n\n## Deploy from your local machine\n\nTo deploy, just run the following command:\n\n```\n# To publish the bundled zip file\naz functionapp deployment source config-zip -g <resource-group> -n <app-name> --src dist/deploy.zip\n# Alternatively you can publish from source\ncd dist && func azure functionapp publish --javascript <app-name>\n```\n\n## Deploy from CI/CD via GitHub actions\n\nFirst, obtain your Azure Functions Publish Profile and add it as a secret to your GitHub repository settings following [these instructions](https://github.com/Azure/functions-action#using-publish-profile-as-deployment-credential-recommended).\n\nThen create the following file as a workflow:\n\n.github/workflows/azure.yml\n\n```\nname: azure\non:\n  push:\n    branches:\n      - main\n  pull_request:\n    branches:\n      - main\njobs:\n  deploy:\n    runs-on: ${{ matrix.os }}\n    strategy:\n      matrix:\n        os: [ ubuntu-latest ]\n        node: [ 14 ]\n    steps:\n      - uses: actions/setup-node@v2\n        with:\n          node-version: ${{ matrix.node }}\n\n      - name: Checkout\n        uses: actions/checkout@master\n\n      - name: Get yarn cache directory path\n        id: yarn-cache-dir-path\n        run: echo \"::set-output name=dir::$(yarn cache dir)\"\n\n      - uses: actions/cache@v2\n        id: yarn-cache\n        with:\n          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}\n          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}\n          restore-keys: |\n            ${{ runner.os }}-yarn-azure\n\n      - name: Install Dependencies\n        if: steps.cache.outputs.cache-hit != 'true'\n        run: yarn\n\n      - name: Build\n        run: npm run build\n        env:\n          NITRO_PRESET: azure_functions\n\n      - name: 'Deploy to Azure Functions'\n        uses: Azure/functions-action@v1\n        with:\n          app-name: <your-app-name>\n          package: .output/deploy.zip\n          publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE }}\n```\n\n## Optimizing Azure functions\n\nConsider [turning on immutable packages](https://docs.microsoft.com/en-us/azure/app-service/deploy-run-package) to support running your app from the zip file. This can speed up cold starts.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://nitro.build/deploy/providers/azure", "title": "Providers", "description": "Deploy Nitro apps to Azure Static Web apps or functions.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 00:59:56", "type": "overview", "page_metadata": {"twitter:image:height": "600", "title": "Azure - Nitro", "twitter:site": "@unjsio", "twitter:image:width": "1200", "og:image:alt": "Deploy Nitro apps to Azure Static Web apps or functions.", "twitter:image:alt": "Deploy Nitro apps to Azure Static Web apps or functions.", "favicon": "https://nitro.build/icon.svg", "og:image:type": "image/png", "og:image": "https://nitro.build/_og/deploy/providers/azure.png?name=Nitro&title=Azure&description=Deploy+Nitro+apps+to+Azure+Static+Web+apps+or+functions.", "twitter:image": "https://nitro.build/_og/deploy/providers/azure.png?name=Nitro&title=Azure&description=Deploy+Nitro+apps+to+Azure+Static+Web+apps+or+functions.", "og:image:width": "1200", "ogImage": "https://nitro.build/_og/deploy/providers/azure.png?name=Nitro&title=Azure&description=Deploy+Nitro+apps+to+Azure+Static+Web+apps+or+functions.", "viewport": "width=device-width, initial-scale=1", "description": "Deploy Nitro apps to Azure Static Web apps or functions.", "og:image:height": "600", "scrapeId": "46d0c065-92f1-49e5-baab-f0dc1509ed92", "sourceURL": "https://nitro.build/deploy/providers/azure", "url": "https://nitro.build/deploy/providers/azure", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: How do I azure static web apps in nitro-deploy?\n\nAssistant: To azure static web apps in nitro-deploy, here's what you do:\n**Preset:** `azure`\n\nRead more in Azure Static Web Apps.\n\nIntegration with this provider is possible with [zero configuration](https://nitro.build/deploy/#zero-config-providers).\n\n[Azure Static Web Apps](https://azure.microsoft.com/en-us/products/app-service/static) are designed to be deployed continuously in a [GitHub Actions workflow](https://docs.microsoft.com/en-us/azure/static-web-apps/github-actions-workflow). By default, Nitro will detect this deployment environment and enable the `azure` preset..\nPretty straightforward, right?", "metadata": {"source_url": "https://nitro.build/deploy/providers/azure", "title": "Providers", "description": "Deploy Nitro apps to Azure Static Web apps or functions.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 00:59:56", "type": "section_detail", "page_metadata": {"twitter:image:height": "600", "title": "Azure - Nitro", "twitter:site": "@unjsio", "twitter:image:width": "1200", "og:image:alt": "Deploy Nitro apps to Azure Static Web apps or functions.", "twitter:image:alt": "Deploy Nitro apps to Azure Static Web apps or functions.", "favicon": "https://nitro.build/icon.svg", "og:image:type": "image/png", "og:image": "https://nitro.build/_og/deploy/providers/azure.png?name=Nitro&title=Azure&description=Deploy+Nitro+apps+to+Azure+Static+Web+apps+or+functions.", "twitter:image": "https://nitro.build/_og/deploy/providers/azure.png?name=Nitro&title=Azure&description=Deploy+Nitro+apps+to+Azure+Static+Web+apps+or+functions.", "og:image:width": "1200", "ogImage": "https://nitro.build/_og/deploy/providers/azure.png?name=Nitro&title=Azure&description=Deploy+Nitro+apps+to+Azure+Static+Web+apps+or+functions.", "viewport": "width=device-width, initial-scale=1", "description": "Deploy Nitro apps to Azure Static Web apps or functions.", "og:image:height": "600", "scrapeId": "46d0c065-92f1-49e5-baab-f0dc1509ed92", "sourceURL": "https://nitro.build/deploy/providers/azure", "url": "https://nitro.build/deploy/providers/azure", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: How do I local preview in nitro-deploy?\n\nAssistant: To local preview in nitro-deploy, here's what you do:\nInstall [Azure Functions Core Tools](https://docs.microsoft.com/en-us/azure/azure-functions/functions-run-local) if you want to test locally.\n\nYou can invoke a development environment to preview before deploying.\n\n```\nNITRO_PRESET=azure npx nypm@latest build\nnpx @azure/static-web-apps-cli start .output/public --api-location .output/server\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://nitro.build/deploy/providers/azure", "title": "Providers", "description": "Deploy Nitro apps to Azure Static Web apps or functions.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 00:59:56", "type": "section_detail", "page_metadata": {"twitter:image:height": "600", "title": "Azure - Nitro", "twitter:site": "@unjsio", "twitter:image:width": "1200", "og:image:alt": "Deploy Nitro apps to Azure Static Web apps or functions.", "twitter:image:alt": "Deploy Nitro apps to Azure Static Web apps or functions.", "favicon": "https://nitro.build/icon.svg", "og:image:type": "image/png", "og:image": "https://nitro.build/_og/deploy/providers/azure.png?name=Nitro&title=Azure&description=Deploy+Nitro+apps+to+Azure+Static+Web+apps+or+functions.", "twitter:image": "https://nitro.build/_og/deploy/providers/azure.png?name=Nitro&title=Azure&description=Deploy+Nitro+apps+to+Azure+Static+Web+apps+or+functions.", "og:image:width": "1200", "ogImage": "https://nitro.build/_og/deploy/providers/azure.png?name=Nitro&title=Azure&description=Deploy+Nitro+apps+to+Azure+Static+Web+apps+or+functions.", "viewport": "width=device-width, initial-scale=1", "description": "Deploy Nitro apps to Azure Static Web apps or functions.", "og:image:height": "600", "scrapeId": "46d0c065-92f1-49e5-baab-f0dc1509ed92", "sourceURL": "https://nitro.build/deploy/providers/azure", "url": "https://nitro.build/deploy/providers/azure", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: How do I configuration in nitro-deploy?\n\nAssistant: To configuration in nitro-deploy, here's what you do:\nAzure Static Web Apps are [configured](https://learn.microsoft.com/en-us/azure/static-web-apps/configuration) using the `staticwebapp.config.json` file.\n\nNitro automatically generates this configuration file whenever the application is built with the `azure` preset.\n\nNitro will automatically add the following properties based on the following criteria:\n\n| Property | Criteria | Default |\n| --- | --- | --- |\n| **[platform.apiRuntime](https://learn.microsoft.com/en-us/azure/static-web-apps/configuration#platform)** | Will automatically set to `node:16` or `node:14` depending on your package configuration. | `node:16` |\n| **[navigationFallback.rewrite](https://learn.microsoft.com/en-us/azure/static-web-apps/configuration#fallback-routes)** | Is always `/api/server` | `/api/server` |\n| **[routes](https://learn.microsoft.com/en-us/azure/static-web-apps/configuration#routes)** | All prerendered routes are added. Additionally, if you do not have an `index.html` file an empty one is created for you for compatibility purposes and also requests to `/index.html` are redirected to the root directory which is handled by `/api/server`. | `[]` |.\nPretty straightforward, right?", "metadata": {"source_url": "https://nitro.build/deploy/providers/azure", "title": "Providers", "description": "Deploy Nitro apps to Azure Static Web apps or functions.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 00:59:56", "type": "section_detail", "page_metadata": {"twitter:image:height": "600", "title": "Azure - Nitro", "twitter:site": "@unjsio", "twitter:image:width": "1200", "og:image:alt": "Deploy Nitro apps to Azure Static Web apps or functions.", "twitter:image:alt": "Deploy Nitro apps to Azure Static Web apps or functions.", "favicon": "https://nitro.build/icon.svg", "og:image:type": "image/png", "og:image": "https://nitro.build/_og/deploy/providers/azure.png?name=Nitro&title=Azure&description=Deploy+Nitro+apps+to+Azure+Static+Web+apps+or+functions.", "twitter:image": "https://nitro.build/_og/deploy/providers/azure.png?name=Nitro&title=Azure&description=Deploy+Nitro+apps+to+Azure+Static+Web+apps+or+functions.", "og:image:width": "1200", "ogImage": "https://nitro.build/_og/deploy/providers/azure.png?name=Nitro&title=Azure&description=Deploy+Nitro+apps+to+Azure+Static+Web+apps+or+functions.", "viewport": "width=device-width, initial-scale=1", "description": "Deploy Nitro apps to Azure Static Web apps or functions.", "og:image:height": "600", "scrapeId": "46d0c065-92f1-49e5-baab-f0dc1509ed92", "sourceURL": "https://nitro.build/deploy/providers/azure", "url": "https://nitro.build/deploy/providers/azure", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: How do I custom configuration in nitro-deploy?\n\nAssistant: To custom configuration in nitro-deploy, here's what you do:\nYou can alter the Nitro generated configuration using `azure.config` option.\n\nCustom routes will be added and matched first. In the case of a conflict (determined if an object has the same route property), custom routes will override generated ones..\nPretty straightforward, right?", "metadata": {"source_url": "https://nitro.build/deploy/providers/azure", "title": "Providers", "description": "Deploy Nitro apps to Azure Static Web apps or functions.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 00:59:56", "type": "section_detail", "page_metadata": {"twitter:image:height": "600", "title": "Azure - Nitro", "twitter:site": "@unjsio", "twitter:image:width": "1200", "og:image:alt": "Deploy Nitro apps to Azure Static Web apps or functions.", "twitter:image:alt": "Deploy Nitro apps to Azure Static Web apps or functions.", "favicon": "https://nitro.build/icon.svg", "og:image:type": "image/png", "og:image": "https://nitro.build/_og/deploy/providers/azure.png?name=Nitro&title=Azure&description=Deploy+Nitro+apps+to+Azure+Static+Web+apps+or+functions.", "twitter:image": "https://nitro.build/_og/deploy/providers/azure.png?name=Nitro&title=Azure&description=Deploy+Nitro+apps+to+Azure+Static+Web+apps+or+functions.", "og:image:width": "1200", "ogImage": "https://nitro.build/_og/deploy/providers/azure.png?name=Nitro&title=Azure&description=Deploy+Nitro+apps+to+Azure+Static+Web+apps+or+functions.", "viewport": "width=device-width, initial-scale=1", "description": "Deploy Nitro apps to Azure Static Web apps or functions.", "og:image:height": "600", "scrapeId": "46d0c065-92f1-49e5-baab-f0dc1509ed92", "sourceURL": "https://nitro.build/deploy/providers/azure", "url": "https://nitro.build/deploy/providers/azure", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: How do I deploy from ci/cd via github actions in nitro-deploy?\n\nAssistant: To deploy from ci/cd via github actions in nitro-deploy, here's what you do:\nWhen you link your GitHub repository to Azure Static Web Apps, a workflow file is added to the repository.\n\nWhen you are asked to select your framework, select custom and provide the following information:\n\n| Input | Value |\n| --- | --- |\n| **app_location** | '/' |\n| **api_location** | '.output/server' |\n| **output_location** | '.output/public' |\n\nIf you miss this step, you can always find the build configuration section in your workflow and update the build configuration:\n\n.github/workflows/azure-static-web-apps-<RANDOM_NAME>.yml\n\n```\n###### Repository/Build Configurations ######\napp_location: '/'\napi_location: '.output/server'\noutput_location: '.output/public'\n###### End of Repository/Build Configurations ######\n```\n\nThat's it! Now Azure Static Web Apps will automatically deploy your Nitro-powered application on push.\n\nIf you are using runtimeConfig, you will likely want to configure the corresponding [environment variables on Azure](https://docs.microsoft.com/en-us/azure/static-web-apps/application-settings)..\nPretty straightforward, right?", "metadata": {"source_url": "https://nitro.build/deploy/providers/azure", "title": "Providers", "description": "Deploy Nitro apps to Azure Static Web apps or functions.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 00:59:56", "type": "section_detail", "page_metadata": {"twitter:image:height": "600", "title": "Azure - Nitro", "twitter:site": "@unjsio", "twitter:image:width": "1200", "og:image:alt": "Deploy Nitro apps to Azure Static Web apps or functions.", "twitter:image:alt": "Deploy Nitro apps to Azure Static Web apps or functions.", "favicon": "https://nitro.build/icon.svg", "og:image:type": "image/png", "og:image": "https://nitro.build/_og/deploy/providers/azure.png?name=Nitro&title=Azure&description=Deploy+Nitro+apps+to+Azure+Static+Web+apps+or+functions.", "twitter:image": "https://nitro.build/_og/deploy/providers/azure.png?name=Nitro&title=Azure&description=Deploy+Nitro+apps+to+Azure+Static+Web+apps+or+functions.", "og:image:width": "1200", "ogImage": "https://nitro.build/_og/deploy/providers/azure.png?name=Nitro&title=Azure&description=Deploy+Nitro+apps+to+Azure+Static+Web+apps+or+functions.", "viewport": "width=device-width, initial-scale=1", "description": "Deploy Nitro apps to Azure Static Web apps or functions.", "og:image:height": "600", "scrapeId": "46d0c065-92f1-49e5-baab-f0dc1509ed92", "sourceURL": "https://nitro.build/deploy/providers/azure", "url": "https://nitro.build/deploy/providers/azure", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: How do I azure functions in nitro-deploy?\n\nAssistant: To azure functions in nitro-deploy, here's what you do:\n**Preset:** `azure_functions`\n\nIf you encounter any issues, please ensure you're using a Node.js 16+ runtime. You can find more information about [how to set the Node version in the Azure docs](https://docs.microsoft.com/en-us/azure/azure-functions/functions-reference-node?tabs=v2#setting-the-node-version).\nPlease see [nitrojs/nitro#2114](https://github.com/nitrojs/nitro/issues/2114) for some common issues..\nPretty straightforward, right?", "metadata": {"source_url": "https://nitro.build/deploy/providers/azure", "title": "Providers", "description": "Deploy Nitro apps to Azure Static Web apps or functions.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 00:59:56", "type": "section_detail", "page_metadata": {"twitter:image:height": "600", "title": "Azure - Nitro", "twitter:site": "@unjsio", "twitter:image:width": "1200", "og:image:alt": "Deploy Nitro apps to Azure Static Web apps or functions.", "twitter:image:alt": "Deploy Nitro apps to Azure Static Web apps or functions.", "favicon": "https://nitro.build/icon.svg", "og:image:type": "image/png", "og:image": "https://nitro.build/_og/deploy/providers/azure.png?name=Nitro&title=Azure&description=Deploy+Nitro+apps+to+Azure+Static+Web+apps+or+functions.", "twitter:image": "https://nitro.build/_og/deploy/providers/azure.png?name=Nitro&title=Azure&description=Deploy+Nitro+apps+to+Azure+Static+Web+apps+or+functions.", "og:image:width": "1200", "ogImage": "https://nitro.build/_og/deploy/providers/azure.png?name=Nitro&title=Azure&description=Deploy+Nitro+apps+to+Azure+Static+Web+apps+or+functions.", "viewport": "width=device-width, initial-scale=1", "description": "Deploy Nitro apps to Azure Static Web apps or functions.", "og:image:height": "600", "scrapeId": "46d0c065-92f1-49e5-baab-f0dc1509ed92", "sourceURL": "https://nitro.build/deploy/providers/azure", "url": "https://nitro.build/deploy/providers/azure", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: How do I local preview in nitro-deploy?\n\nAssistant: To local preview in nitro-deploy, here's what you do:\nInstall [Azure Functions Core Tools](https://docs.microsoft.com/en-us/azure/azure-functions/functions-run-local) if you want to test locally.\n\nYou can invoke a development environment from the serverless directory.\n\n```\nNITRO_PRESET=azure_functions npx nypm@latest build\ncd .output\nfunc start\n```\n\nYou can now visit `http://localhost:7071/` in your browser and browse your site running locally on Azure Functions..\nPretty straightforward, right?", "metadata": {"source_url": "https://nitro.build/deploy/providers/azure", "title": "Providers", "description": "Deploy Nitro apps to Azure Static Web apps or functions.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 00:59:56", "type": "section_detail", "page_metadata": {"twitter:image:height": "600", "title": "Azure - Nitro", "twitter:site": "@unjsio", "twitter:image:width": "1200", "og:image:alt": "Deploy Nitro apps to Azure Static Web apps or functions.", "twitter:image:alt": "Deploy Nitro apps to Azure Static Web apps or functions.", "favicon": "https://nitro.build/icon.svg", "og:image:type": "image/png", "og:image": "https://nitro.build/_og/deploy/providers/azure.png?name=Nitro&title=Azure&description=Deploy+Nitro+apps+to+Azure+Static+Web+apps+or+functions.", "twitter:image": "https://nitro.build/_og/deploy/providers/azure.png?name=Nitro&title=Azure&description=Deploy+Nitro+apps+to+Azure+Static+Web+apps+or+functions.", "og:image:width": "1200", "ogImage": "https://nitro.build/_og/deploy/providers/azure.png?name=Nitro&title=Azure&description=Deploy+Nitro+apps+to+Azure+Static+Web+apps+or+functions.", "viewport": "width=device-width, initial-scale=1", "description": "Deploy Nitro apps to Azure Static Web apps or functions.", "og:image:height": "600", "scrapeId": "46d0c065-92f1-49e5-baab-f0dc1509ed92", "sourceURL": "https://nitro.build/deploy/providers/azure", "url": "https://nitro.build/deploy/providers/azure", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: How do I deploy from your local machine in nitro-deploy?\n\nAssistant: To deploy from your local machine in nitro-deploy, here's what you do:\nTo deploy, just run the following command:\n\n```\n# To publish the bundled zip file\naz functionapp deployment source config-zip -g <resource-group> -n <app-name> --src dist/deploy.zip\n# Alternatively you can publish from source\ncd dist && func azure functionapp publish --javascript <app-name>\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://nitro.build/deploy/providers/azure", "title": "Providers", "description": "Deploy Nitro apps to Azure Static Web apps or functions.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 00:59:56", "type": "section_detail", "page_metadata": {"twitter:image:height": "600", "title": "Azure - Nitro", "twitter:site": "@unjsio", "twitter:image:width": "1200", "og:image:alt": "Deploy Nitro apps to Azure Static Web apps or functions.", "twitter:image:alt": "Deploy Nitro apps to Azure Static Web apps or functions.", "favicon": "https://nitro.build/icon.svg", "og:image:type": "image/png", "og:image": "https://nitro.build/_og/deploy/providers/azure.png?name=Nitro&title=Azure&description=Deploy+Nitro+apps+to+Azure+Static+Web+apps+or+functions.", "twitter:image": "https://nitro.build/_og/deploy/providers/azure.png?name=Nitro&title=Azure&description=Deploy+Nitro+apps+to+Azure+Static+Web+apps+or+functions.", "og:image:width": "1200", "ogImage": "https://nitro.build/_og/deploy/providers/azure.png?name=Nitro&title=Azure&description=Deploy+Nitro+apps+to+Azure+Static+Web+apps+or+functions.", "viewport": "width=device-width, initial-scale=1", "description": "Deploy Nitro apps to Azure Static Web apps or functions.", "og:image:height": "600", "scrapeId": "46d0c065-92f1-49e5-baab-f0dc1509ed92", "sourceURL": "https://nitro.build/deploy/providers/azure", "url": "https://nitro.build/deploy/providers/azure", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: How do I deploy from ci/cd via github actions in nitro-deploy?\n\nAssistant: To deploy from ci/cd via github actions in nitro-deploy, here's what you do:\nFirst, obtain your Azure Functions Publish Profile and add it as a secret to your GitHub repository settings following [these instructions](https://github.com/Azure/functions-action#using-publish-profile-as-deployment-credential-recommended).\n\nThen create the following file as a workflow:\n\n.github/workflows/azure.yml\n\n```\nname: azure\non:\n  push:\n    branches:\n      - main\n  pull_request:\n    branches:\n      - main\njobs:\n  deploy:\n    runs-on: ${{ matrix.os }}\n    strategy:\n      matrix:\n        os: [ ubuntu-latest ]\n        node: [ 14 ]\n    steps:\n      - uses: actions/setup-node@v2\n        with:\n          node-version: ${{ matrix.node }}\n\n      - name: Checkout\n        uses: actions/checkout@master\n\n      - name: Get yarn cache directory path\n        id: yarn-cache-dir-path\n        run: echo \"::set-output name=dir::$(yarn cache dir)\"\n\n      - uses: actions/cache@v2\n        id: yarn-cache\n        with:\n          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}\n          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}\n          restore-keys: |\n            ${{ runner.os }}-yarn-azure\n\n      - name: Install Dependencies\n        if: steps.cache.outputs.cache-hit != 'true'\n        run: yarn\n\n      - name: Build\n        run: npm run build\n        env:\n          NITRO_PRESET: azure_functions\n\n      - name: 'Deploy to Azure Functions'\n        uses: Azure/functions-action@v1\n        with:\n          app-name: <your-app-name>\n          package: .output/deploy.zip\n          publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE }}\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://nitro.build/deploy/providers/azure", "title": "Providers", "description": "Deploy Nitro apps to Azure Static Web apps or functions.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 00:59:56", "type": "section_detail", "page_metadata": {"twitter:image:height": "600", "title": "Azure - Nitro", "twitter:site": "@unjsio", "twitter:image:width": "1200", "og:image:alt": "Deploy Nitro apps to Azure Static Web apps or functions.", "twitter:image:alt": "Deploy Nitro apps to Azure Static Web apps or functions.", "favicon": "https://nitro.build/icon.svg", "og:image:type": "image/png", "og:image": "https://nitro.build/_og/deploy/providers/azure.png?name=Nitro&title=Azure&description=Deploy+Nitro+apps+to+Azure+Static+Web+apps+or+functions.", "twitter:image": "https://nitro.build/_og/deploy/providers/azure.png?name=Nitro&title=Azure&description=Deploy+Nitro+apps+to+Azure+Static+Web+apps+or+functions.", "og:image:width": "1200", "ogImage": "https://nitro.build/_og/deploy/providers/azure.png?name=Nitro&title=Azure&description=Deploy+Nitro+apps+to+Azure+Static+Web+apps+or+functions.", "viewport": "width=device-width, initial-scale=1", "description": "Deploy Nitro apps to Azure Static Web apps or functions.", "og:image:height": "600", "scrapeId": "46d0c065-92f1-49e5-baab-f0dc1509ed92", "sourceURL": "https://nitro.build/deploy/providers/azure", "url": "https://nitro.build/deploy/providers/azure", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: How do I optimizing azure functions in nitro-deploy?\n\nAssistant: To optimizing azure functions in nitro-deploy, here's what you do:\nConsider [turning on immutable packages](https://docs.microsoft.com/en-us/azure/app-service/deploy-run-package) to support running your app from the zip file. This can speed up cold starts..\nPretty straightforward, right?", "metadata": {"source_url": "https://nitro.build/deploy/providers/azure", "title": "Providers", "description": "Deploy Nitro apps to Azure Static Web apps or functions.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 00:59:56", "type": "section_detail", "page_metadata": {"twitter:image:height": "600", "title": "Azure - Nitro", "twitter:site": "@unjsio", "twitter:image:width": "1200", "og:image:alt": "Deploy Nitro apps to Azure Static Web apps or functions.", "twitter:image:alt": "Deploy Nitro apps to Azure Static Web apps or functions.", "favicon": "https://nitro.build/icon.svg", "og:image:type": "image/png", "og:image": "https://nitro.build/_og/deploy/providers/azure.png?name=Nitro&title=Azure&description=Deploy+Nitro+apps+to+Azure+Static+Web+apps+or+functions.", "twitter:image": "https://nitro.build/_og/deploy/providers/azure.png?name=Nitro&title=Azure&description=Deploy+Nitro+apps+to+Azure+Static+Web+apps+or+functions.", "og:image:width": "1200", "ogImage": "https://nitro.build/_og/deploy/providers/azure.png?name=Nitro&title=Azure&description=Deploy+Nitro+apps+to+Azure+Static+Web+apps+or+functions.", "viewport": "width=device-width, initial-scale=1", "description": "Deploy Nitro apps to Azure Static Web apps or functions.", "og:image:height": "600", "scrapeId": "46d0c065-92f1-49e5-baab-f0dc1509ed92", "sourceURL": "https://nitro.build/deploy/providers/azure", "url": "https://nitro.build/deploy/providers/azure", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: Can you give me some code examples for Providers in nitro-deploy?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Local preview for Azure Static Web Apps**:\n\n```yaml\n```\nNITRO_PRESET=azure npx nypm@latest build\nnpx @azure/static-web-apps-cli start .output/public --api-location .output/server\n```\n```\n\nThis snippet shows you how to local preview for azure static web apps, which is an important aspect of providers.\n\n**Configuration for Azure Static Web Apps**:\n\n```yaml\n| Property | Criteria | Default |\n| --- | --- | --- |\n| **[platform.apiRuntime](https://learn.microsoft.com/en-us/azure/static-web-apps/configuration#platform)** | Will automatically set to `node:16` or `node:14` depending on your package configuration. | `node:16` |\n| **[navigationFallback.rewrite](https://learn.microsoft.com/en-us/azure/static-web-apps/configuration#fallback-routes)** | Is always `/api/server` | `/api/server` |\n| **[routes](https://learn.microsoft.com/en-us/azure/static-web-apps/configuration#routes)** | All prerendered routes are added. Additionally, if you do not have an `index.html` file an empty one is created for you for compatibility purposes and also requests to `/index.html` are redirected to the root directory which is handled by `/api/server`. | `[]` |\n```\n\nThis snippet shows you how to configuration for azure static web apps, which is an important aspect of providers.\n\n**Local preview for Azure Functions**:\n\n```yaml\n```\nNITRO_PRESET=azure_functions npx nypm@latest build\ncd .output\nfunc start\n```\n```\n\nThis snippet shows you how to local preview for azure functions, which is an important aspect of providers.\n\n**Deploy from your local machine**:\n\n```yaml\n```\n# To publish the bundled zip file\naz functionapp deployment source config-zip -g <resource-group> -n <app-name> --src dist/deploy.zip\n# Alternatively you can publish from source\ncd dist && func azure functionapp publish --javascript <app-name>\n```\n```\n\nThis snippet shows you how to deploy from your local machine, which is an important aspect of providers.\n\n**Deploy from CI/CD via GitHub actions**:\n\n```yaml\n```\nname: azure\non:\n  push:\n    branches:\n      - main\n  pull_request:\n    branches:\n      - main\njobs:\n  deploy:\n    runs-on: ${{ matrix.os }}\n    strategy:\n      matrix:\n        os: [ ubuntu-latest ]\n        node: [ 14 ]\n    steps:\n      - uses: actions/setup-node@v2\n        with:\n          node-version: ${{ matrix.node }}\n\n      - name: Checkout\n        uses: actions/checkout@master\n\n      - name: Get yarn cache directory path\n        id: yarn-cache-dir-path\n        run: echo \"::set-output name=dir::$(yarn cache dir)\"\n\n      - uses: actions/cache@v2\n        id: yarn-cache\n        with:\n          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}\n          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}\n          restore-keys: |\n            ${{ runner.os }}-yarn-azure\n\n      - name: Install Dependencies\n        if: steps.cache.outputs.cache-hit != 'true'\n        run: yarn\n\n      - name: Build\n        run: npm run build\n        env:\n          NITRO_PRESET: azure_functions\n\n      - name: 'Deploy to Azure Functions'\n        uses: Azure/functions-action@v1\n        with:\n          app-name: <your-app-name>\n          package: .output/deploy.zip\n          publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE }}\n```\n```\n\nThis snippet shows you how to deploy from ci/cd via github actions, which is an important aspect of providers.\n\n", "metadata": {"source_url": "https://nitro.build/deploy/providers/azure", "title": "Providers", "description": "Deploy Nitro apps to Azure Static Web apps or functions.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 00:59:56", "type": "code_examples", "page_metadata": {"twitter:image:height": "600", "title": "Azure - Nitro", "twitter:site": "@unjsio", "twitter:image:width": "1200", "og:image:alt": "Deploy Nitro apps to Azure Static Web apps or functions.", "twitter:image:alt": "Deploy Nitro apps to Azure Static Web apps or functions.", "favicon": "https://nitro.build/icon.svg", "og:image:type": "image/png", "og:image": "https://nitro.build/_og/deploy/providers/azure.png?name=Nitro&title=Azure&description=Deploy+Nitro+apps+to+Azure+Static+Web+apps+or+functions.", "twitter:image": "https://nitro.build/_og/deploy/providers/azure.png?name=Nitro&title=Azure&description=Deploy+Nitro+apps+to+Azure+Static+Web+apps+or+functions.", "og:image:width": "1200", "ogImage": "https://nitro.build/_og/deploy/providers/azure.png?name=Nitro&title=Azure&description=Deploy+Nitro+apps+to+Azure+Static+Web+apps+or+functions.", "viewport": "width=device-width, initial-scale=1", "description": "Deploy Nitro apps to Azure Static Web apps or functions.", "og:image:height": "600", "scrapeId": "46d0c065-92f1-49e5-baab-f0dc1509ed92", "sourceURL": "https://nitro.build/deploy/providers/azure", "url": "https://nitro.build/deploy/providers/azure", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: What are some tips for using Providers in nitro-deploy effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nConsider turning on immutable packages to support running your app from the zip file. This can speed up cold starts.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://nitro.build/deploy/providers/azure", "title": "Providers", "description": "Deploy Nitro apps to Azure Static Web apps or functions.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 00:59:56", "type": "best_practices", "page_metadata": {"twitter:image:height": "600", "title": "Azure - Nitro", "twitter:site": "@unjsio", "twitter:image:width": "1200", "og:image:alt": "Deploy Nitro apps to Azure Static Web apps or functions.", "twitter:image:alt": "Deploy Nitro apps to Azure Static Web apps or functions.", "favicon": "https://nitro.build/icon.svg", "og:image:type": "image/png", "og:image": "https://nitro.build/_og/deploy/providers/azure.png?name=Nitro&title=Azure&description=Deploy+Nitro+apps+to+Azure+Static+Web+apps+or+functions.", "twitter:image": "https://nitro.build/_og/deploy/providers/azure.png?name=Nitro&title=Azure&description=Deploy+Nitro+apps+to+Azure+Static+Web+apps+or+functions.", "og:image:width": "1200", "ogImage": "https://nitro.build/_og/deploy/providers/azure.png?name=Nitro&title=Azure&description=Deploy+Nitro+apps+to+Azure+Static+Web+apps+or+functions.", "viewport": "width=device-width, initial-scale=1", "description": "Deploy Nitro apps to Azure Static Web apps or functions.", "og:image:height": "600", "scrapeId": "46d0c065-92f1-49e5-baab-f0dc1509ed92", "sourceURL": "https://nitro.build/deploy/providers/azure", "url": "https://nitro.build/deploy/providers/azure", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: Can you explain what Vercel is in nitro-deploy?\n\nAssistant: Sure, I'd be happy to explain Vercel in nitro-deploy.\n\n# Vercel\n\nDeploy Nitro apps to Vercel functions or edge.Here's a quick rundown of what this is about:\n\n## Deploy using git\n\n1. Push your code to your git repository (GitHub, GitLab, Bitbucket).\n2. [Import your project](https://vercel.com/new) into Vercel.\n3. Vercel will detect that you are using Nitro and will enable the correct settings for your deployment.\n4. Your application is deployed!\n\nAfter your project has been imported and deployed, all subsequent pushes to branches will generate [Preview Deployments](https://vercel.com/docs/concepts/deployments/environments#preview), and all changes made to the Production Branch (commonly “main”) will result in a [Production Deployment](https://vercel.com/docs/concepts/deployments/environments#production). \n\nLearn more about Vercel’s [Git Integration](https://vercel.com/docs/concepts/git).\n\n## Monorepo\n\nMonorepo is supported by Vercel. However a custom \" [Root Directory](https://vercel.com/docs/deployments/configure-a-build#root-directory)\" must be specified in \"Project Settings > General\" tab. Also make sure that \"Include source files outside of the Root Directory\" is checked.\n\nExamples of values for \"Root Directory\": `apps/web` or `packages/app`.\n\n## Vercel edge functions\n\n**Preset:** `vercel_edge`\n\nRead more in Vercel Edge Functions.\n\nIt is possible to deploy your nitro applications directly on [Vercel Edge Functions](https://vercel.com/docs/concepts/functions/edge-functions).\n\nIn order to enable this target, please set `NITRO_PRESET` environment variable to `vercel_edge`.\n\n## Vercel KV storage\n\nYou can easily use [Vercel KV Storage](https://vercel.com/docs/storage/vercel-kv) with [Nitro Storage](https://nitro.build/guide/storage).\n\nThis feature is currently in beta. Please check [driver docs](https://unstorage.unjs.io/drivers/vercel-kv).\n\n1. Install `@vercel/kv` dependency:\n\npackage.json\n\n```\n{\n  \"devDependencies\": {\n    \"@vercel/kv\": \"latest\"\n  }\n}\n```\n\nUpdate your configuration:\nnitro.config.tsnuxt.config.ts\n\n```\nexport default defineNitroConfig({\n  storage: {\n    data: { driver: 'vercelKV' }\n  }\n})\n```\n\nYou need to either set `KV_REST_API_URL` and `KV_REST_API_TOKEN` environment variables or pass `url` and `token` to driver options. Check [driver docs](https://unstorage.unjs.io/drivers/vercel-kv) for more information about usage.\n\nYou can now access data store in any event handler:\n\n```\nexport default defineEventHandler(async (event) => {\n  const dataStorage = useStorage(\"data\");\n  await dataStorage.setItem(\"hello\", \"world\");\n  return {\n    hello: await dataStorage.getItem(\"hello\"),\n  };\n});\n```\n\n## API routes\n\nNitro `/api` directory isn't compatible with Vercel.\nInstead, you have to use :\n\n- `routes/api/` for standalone usage\n- `server/api/` with [Nuxt](https://nuxt.com/).\n\n## Custom build output configuration\n\nYou can provide additional [build output configuration](https://vercel.com/docs/build-output-api/v3) using `vercel.config` key inside `nitro.config`. It will be merged with built-in auto generated config.\n\n## On-Demand incremental static regeneration (ISR)\n\nOn-demand revalidation allows you to purge the cache for an ISR route whenever you want, foregoing the time interval required with background revalidation.\n\nTo revalidate a page on demand:\n\n1. Create an Environment Variable which will store a revalidation secret\n   - You can use the command `openssl rand -base64 32` or [Generate a Secret](https://generate-secret.vercel.app/32) to generate a random value.\n2. Update your configuration:\n\nnitro.config.tsnuxt.config.ts\n\n```\nexport default defineNitroConfig({\n     vercel: {\n       config: {\n         bypassToken: process.env.VERCEL_BYPASS_TOKEN\n       }\n     }\n})\n```\n\n3. To trigger \"On-Demand Incremental Static Regeneration (ISR)\" and revalidate a path to a Prerender Function, make a GET or HEAD request to that path with a header of x-prerender-revalidate: `bypassToken`. When that Prerender Function endpoint is accessed with this header set, the cache will be revalidated. The next request to that function should return a fresh response.\n\n## Fine-grained ISR config via route rules\n\nBy default, query paramas are ignored by cache.\n\nYou can pass an options object to `isr` route rule to configure caching behavior.\n\n- `expiration`: Expiration time (in seconds) before the cached asset will be re-generated by invoking the Serverless Function. Setting the value to `false` (or `isr: true` route rule) means it will never expire.\n- `group`: Group number of the asset. Prerender assets with the same group number will all be re-validated at the same time.\n- `allowQuery`: List of query string parameter names that will be cached independently.\n  - If an empty array, query values are not considered for caching.\n  - If `undefined` each unique query value is cached independently.\n  - For wildcard `/**` route rules, `url` is always added\n- `passQuery`: When `true`, the query string will be present on the `request` argument passed to the invoked function. The `allowQuery` filter still applies.\n\n```\nexport default defineNitroConfig({\n  routeRules: {\n    \"/products/**\": {\n      isr: {\n        allowQuery: [\"q\"],\n        passQuery: true,\n      },\n    },\n  },\n});\n```\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://nitro.build/deploy/providers/vercel", "title": "Vercel", "description": "Deploy Nitro apps to Vercel functions or edge.", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 01:02:50", "type": "overview", "page_metadata": {"og:image:type": "image/png", "og:image:alt": "Deploy Nitro apps to Vercel functions or edge.", "viewport": "width=device-width, initial-scale=1", "description": "Deploy Nitro apps to Vercel functions or edge.", "og:image": "https://nitro.build/_og/deploy/providers/vercel.png?name=Nitro&title=Vercel&description=Deploy+Nitro+apps+to+Vercel+functions+or+edge.", "twitter:site": "@unjsio", "twitter:image:height": "600", "twitter:image:alt": "Deploy Nitro apps to Vercel functions or edge.", "ogImage": "https://nitro.build/_og/deploy/providers/vercel.png?name=Nitro&title=Vercel&description=Deploy+Nitro+apps+to+Vercel+functions+or+edge.", "title": "Vercel - Nitro", "og:image:width": "1200", "twitter:image": "https://nitro.build/_og/deploy/providers/vercel.png?name=Nitro&title=Vercel&description=Deploy+Nitro+apps+to+Vercel+functions+or+edge.", "twitter:image:width": "1200", "favicon": "https://nitro.build/icon.svg", "og:image:height": "600", "scrapeId": "28612703-7380-4242-9ef1-b787583a3743", "sourceURL": "https://nitro.build/deploy/providers/vercel", "url": "https://nitro.build/deploy/providers/vercel", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: How do I deploy using git in nitro-deploy?\n\nAssistant: To deploy using git in nitro-deploy, here's what you do:\n1. Push your code to your git repository (GitHub, GitLab, Bitbucket).\n2. [Import your project](https://vercel.com/new) into Vercel.\n3. Vercel will detect that you are using Nitro and will enable the correct settings for your deployment.\n4. Your application is deployed!\n\nAfter your project has been imported and deployed, all subsequent pushes to branches will generate [Preview Deployments](https://vercel.com/docs/concepts/deployments/environments#preview), and all changes made to the Production Branch (commonly “main”) will result in a [Production Deployment](https://vercel.com/docs/concepts/deployments/environments#production). \n\nLearn more about Vercel’s [Git Integration](https://vercel.com/docs/concepts/git)..\nPretty straightforward, right?", "metadata": {"source_url": "https://nitro.build/deploy/providers/vercel", "title": "Vercel", "description": "Deploy Nitro apps to Vercel functions or edge.", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 01:02:50", "type": "section_detail", "page_metadata": {"og:image:type": "image/png", "og:image:alt": "Deploy Nitro apps to Vercel functions or edge.", "viewport": "width=device-width, initial-scale=1", "description": "Deploy Nitro apps to Vercel functions or edge.", "og:image": "https://nitro.build/_og/deploy/providers/vercel.png?name=Nitro&title=Vercel&description=Deploy+Nitro+apps+to+Vercel+functions+or+edge.", "twitter:site": "@unjsio", "twitter:image:height": "600", "twitter:image:alt": "Deploy Nitro apps to Vercel functions or edge.", "ogImage": "https://nitro.build/_og/deploy/providers/vercel.png?name=Nitro&title=Vercel&description=Deploy+Nitro+apps+to+Vercel+functions+or+edge.", "title": "Vercel - Nitro", "og:image:width": "1200", "twitter:image": "https://nitro.build/_og/deploy/providers/vercel.png?name=Nitro&title=Vercel&description=Deploy+Nitro+apps+to+Vercel+functions+or+edge.", "twitter:image:width": "1200", "favicon": "https://nitro.build/icon.svg", "og:image:height": "600", "scrapeId": "28612703-7380-4242-9ef1-b787583a3743", "sourceURL": "https://nitro.build/deploy/providers/vercel", "url": "https://nitro.build/deploy/providers/vercel", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: How do I monorepo in nitro-deploy?\n\nAssistant: To monorepo in nitro-deploy, here's what you do:\nMonorepo is supported by Vercel. However a custom \" [Root Directory](https://vercel.com/docs/deployments/configure-a-build#root-directory)\" must be specified in \"Project Settings > General\" tab. Also make sure that \"Include source files outside of the Root Directory\" is checked.\n\nExamples of values for \"Root Directory\": `apps/web` or `packages/app`..\nPretty straightforward, right?", "metadata": {"source_url": "https://nitro.build/deploy/providers/vercel", "title": "Vercel", "description": "Deploy Nitro apps to Vercel functions or edge.", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 01:02:50", "type": "section_detail", "page_metadata": {"og:image:type": "image/png", "og:image:alt": "Deploy Nitro apps to Vercel functions or edge.", "viewport": "width=device-width, initial-scale=1", "description": "Deploy Nitro apps to Vercel functions or edge.", "og:image": "https://nitro.build/_og/deploy/providers/vercel.png?name=Nitro&title=Vercel&description=Deploy+Nitro+apps+to+Vercel+functions+or+edge.", "twitter:site": "@unjsio", "twitter:image:height": "600", "twitter:image:alt": "Deploy Nitro apps to Vercel functions or edge.", "ogImage": "https://nitro.build/_og/deploy/providers/vercel.png?name=Nitro&title=Vercel&description=Deploy+Nitro+apps+to+Vercel+functions+or+edge.", "title": "Vercel - Nitro", "og:image:width": "1200", "twitter:image": "https://nitro.build/_og/deploy/providers/vercel.png?name=Nitro&title=Vercel&description=Deploy+Nitro+apps+to+Vercel+functions+or+edge.", "twitter:image:width": "1200", "favicon": "https://nitro.build/icon.svg", "og:image:height": "600", "scrapeId": "28612703-7380-4242-9ef1-b787583a3743", "sourceURL": "https://nitro.build/deploy/providers/vercel", "url": "https://nitro.build/deploy/providers/vercel", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: How do I vercel edge functions in nitro-deploy?\n\nAssistant: To vercel edge functions in nitro-deploy, here's what you do:\n**Preset:** `vercel_edge`\n\nRead more in Vercel Edge Functions.\n\nIt is possible to deploy your nitro applications directly on [Vercel Edge Functions](https://vercel.com/docs/concepts/functions/edge-functions).\n\nIn order to enable this target, please set `NITRO_PRESET` environment variable to `vercel_edge`..\nPretty straightforward, right?", "metadata": {"source_url": "https://nitro.build/deploy/providers/vercel", "title": "Vercel", "description": "Deploy Nitro apps to Vercel functions or edge.", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 01:02:50", "type": "section_detail", "page_metadata": {"og:image:type": "image/png", "og:image:alt": "Deploy Nitro apps to Vercel functions or edge.", "viewport": "width=device-width, initial-scale=1", "description": "Deploy Nitro apps to Vercel functions or edge.", "og:image": "https://nitro.build/_og/deploy/providers/vercel.png?name=Nitro&title=Vercel&description=Deploy+Nitro+apps+to+Vercel+functions+or+edge.", "twitter:site": "@unjsio", "twitter:image:height": "600", "twitter:image:alt": "Deploy Nitro apps to Vercel functions or edge.", "ogImage": "https://nitro.build/_og/deploy/providers/vercel.png?name=Nitro&title=Vercel&description=Deploy+Nitro+apps+to+Vercel+functions+or+edge.", "title": "Vercel - Nitro", "og:image:width": "1200", "twitter:image": "https://nitro.build/_og/deploy/providers/vercel.png?name=Nitro&title=Vercel&description=Deploy+Nitro+apps+to+Vercel+functions+or+edge.", "twitter:image:width": "1200", "favicon": "https://nitro.build/icon.svg", "og:image:height": "600", "scrapeId": "28612703-7380-4242-9ef1-b787583a3743", "sourceURL": "https://nitro.build/deploy/providers/vercel", "url": "https://nitro.build/deploy/providers/vercel", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: How do I vercel kv storage in nitro-deploy?\n\nAssistant: To vercel kv storage in nitro-deploy, here's what you do:\nYou can easily use [Vercel KV Storage](https://vercel.com/docs/storage/vercel-kv) with [Nitro Storage](https://nitro.build/guide/storage).\n\nThis feature is currently in beta. Please check [driver docs](https://unstorage.unjs.io/drivers/vercel-kv).\n\n1. Install `@vercel/kv` dependency:\n\npackage.json\n\n```\n{\n  \"devDependencies\": {\n    \"@vercel/kv\": \"latest\"\n  }\n}\n```\n\nUpdate your configuration:\nnitro.config.tsnuxt.config.ts\n\n```\nexport default defineNitroConfig({\n  storage: {\n    data: { driver: 'vercelKV' }\n  }\n})\n```\n\nYou need to either set `KV_REST_API_URL` and `KV_REST_API_TOKEN` environment variables or pass `url` and `token` to driver options. Check [driver docs](https://unstorage.unjs.io/drivers/vercel-kv) for more information about usage.\n\nYou can now access data store in any event handler:\n\n```\nexport default defineEventHandler(async (event) => {\n  const dataStorage = useStorage(\"data\");\n  await dataStorage.setItem(\"hello\", \"world\");\n  return {\n    hello: await dataStorage.getItem(\"hello\"),\n  };\n});\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://nitro.build/deploy/providers/vercel", "title": "Vercel", "description": "Deploy Nitro apps to Vercel functions or edge.", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 01:02:50", "type": "section_detail", "page_metadata": {"og:image:type": "image/png", "og:image:alt": "Deploy Nitro apps to Vercel functions or edge.", "viewport": "width=device-width, initial-scale=1", "description": "Deploy Nitro apps to Vercel functions or edge.", "og:image": "https://nitro.build/_og/deploy/providers/vercel.png?name=Nitro&title=Vercel&description=Deploy+Nitro+apps+to+Vercel+functions+or+edge.", "twitter:site": "@unjsio", "twitter:image:height": "600", "twitter:image:alt": "Deploy Nitro apps to Vercel functions or edge.", "ogImage": "https://nitro.build/_og/deploy/providers/vercel.png?name=Nitro&title=Vercel&description=Deploy+Nitro+apps+to+Vercel+functions+or+edge.", "title": "Vercel - Nitro", "og:image:width": "1200", "twitter:image": "https://nitro.build/_og/deploy/providers/vercel.png?name=Nitro&title=Vercel&description=Deploy+Nitro+apps+to+Vercel+functions+or+edge.", "twitter:image:width": "1200", "favicon": "https://nitro.build/icon.svg", "og:image:height": "600", "scrapeId": "28612703-7380-4242-9ef1-b787583a3743", "sourceURL": "https://nitro.build/deploy/providers/vercel", "url": "https://nitro.build/deploy/providers/vercel", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: How do I api routes in nitro-deploy?\n\nAssistant: To api routes in nitro-deploy, here's what you do:\nNitro `/api` directory isn't compatible with Vercel.\nInstead, you have to use :\n\n- `routes/api/` for standalone usage\n- `server/api/` with [Nuxt](https://nuxt.com/)..\nPretty straightforward, right?", "metadata": {"source_url": "https://nitro.build/deploy/providers/vercel", "title": "Vercel", "description": "Deploy Nitro apps to Vercel functions or edge.", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 01:02:50", "type": "section_detail", "page_metadata": {"og:image:type": "image/png", "og:image:alt": "Deploy Nitro apps to Vercel functions or edge.", "viewport": "width=device-width, initial-scale=1", "description": "Deploy Nitro apps to Vercel functions or edge.", "og:image": "https://nitro.build/_og/deploy/providers/vercel.png?name=Nitro&title=Vercel&description=Deploy+Nitro+apps+to+Vercel+functions+or+edge.", "twitter:site": "@unjsio", "twitter:image:height": "600", "twitter:image:alt": "Deploy Nitro apps to Vercel functions or edge.", "ogImage": "https://nitro.build/_og/deploy/providers/vercel.png?name=Nitro&title=Vercel&description=Deploy+Nitro+apps+to+Vercel+functions+or+edge.", "title": "Vercel - Nitro", "og:image:width": "1200", "twitter:image": "https://nitro.build/_og/deploy/providers/vercel.png?name=Nitro&title=Vercel&description=Deploy+Nitro+apps+to+Vercel+functions+or+edge.", "twitter:image:width": "1200", "favicon": "https://nitro.build/icon.svg", "og:image:height": "600", "scrapeId": "28612703-7380-4242-9ef1-b787583a3743", "sourceURL": "https://nitro.build/deploy/providers/vercel", "url": "https://nitro.build/deploy/providers/vercel", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: How do I custom build output configuration in nitro-deploy?\n\nAssistant: To custom build output configuration in nitro-deploy, here's what you do:\nYou can provide additional [build output configuration](https://vercel.com/docs/build-output-api/v3) using `vercel.config` key inside `nitro.config`. It will be merged with built-in auto generated config..\nPretty straightforward, right?", "metadata": {"source_url": "https://nitro.build/deploy/providers/vercel", "title": "Vercel", "description": "Deploy Nitro apps to Vercel functions or edge.", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 01:02:50", "type": "section_detail", "page_metadata": {"og:image:type": "image/png", "og:image:alt": "Deploy Nitro apps to Vercel functions or edge.", "viewport": "width=device-width, initial-scale=1", "description": "Deploy Nitro apps to Vercel functions or edge.", "og:image": "https://nitro.build/_og/deploy/providers/vercel.png?name=Nitro&title=Vercel&description=Deploy+Nitro+apps+to+Vercel+functions+or+edge.", "twitter:site": "@unjsio", "twitter:image:height": "600", "twitter:image:alt": "Deploy Nitro apps to Vercel functions or edge.", "ogImage": "https://nitro.build/_og/deploy/providers/vercel.png?name=Nitro&title=Vercel&description=Deploy+Nitro+apps+to+Vercel+functions+or+edge.", "title": "Vercel - Nitro", "og:image:width": "1200", "twitter:image": "https://nitro.build/_og/deploy/providers/vercel.png?name=Nitro&title=Vercel&description=Deploy+Nitro+apps+to+Vercel+functions+or+edge.", "twitter:image:width": "1200", "favicon": "https://nitro.build/icon.svg", "og:image:height": "600", "scrapeId": "28612703-7380-4242-9ef1-b787583a3743", "sourceURL": "https://nitro.build/deploy/providers/vercel", "url": "https://nitro.build/deploy/providers/vercel", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: How do I on-demand incremental static regeneration (isr) in nitro-deploy?\n\nAssistant: To on-demand incremental static regeneration (isr) in nitro-deploy, here's what you do:\nOn-demand revalidation allows you to purge the cache for an ISR route whenever you want, foregoing the time interval required with background revalidation.\n\nTo revalidate a page on demand:\n\n1. Create an Environment Variable which will store a revalidation secret\n   - You can use the command `openssl rand -base64 32` or [Generate a Secret](https://generate-secret.vercel.app/32) to generate a random value.\n2. Update your configuration:\n\nnitro.config.tsnuxt.config.ts\n\n```\nexport default defineNitroConfig({\n     vercel: {\n       config: {\n         bypassToken: process.env.VERCEL_BYPASS_TOKEN\n       }\n     }\n})\n```\n\n3. To trigger \"On-Demand Incremental Static Regeneration (ISR)\" and revalidate a path to a Prerender Function, make a GET or HEAD request to that path with a header of x-prerender-revalidate: `bypassToken`. When that Prerender Function endpoint is accessed with this header set, the cache will be revalidated. The next request to that function should return a fresh response..\nPretty straightforward, right?", "metadata": {"source_url": "https://nitro.build/deploy/providers/vercel", "title": "Vercel", "description": "Deploy Nitro apps to Vercel functions or edge.", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 01:02:50", "type": "section_detail", "page_metadata": {"og:image:type": "image/png", "og:image:alt": "Deploy Nitro apps to Vercel functions or edge.", "viewport": "width=device-width, initial-scale=1", "description": "Deploy Nitro apps to Vercel functions or edge.", "og:image": "https://nitro.build/_og/deploy/providers/vercel.png?name=Nitro&title=Vercel&description=Deploy+Nitro+apps+to+Vercel+functions+or+edge.", "twitter:site": "@unjsio", "twitter:image:height": "600", "twitter:image:alt": "Deploy Nitro apps to Vercel functions or edge.", "ogImage": "https://nitro.build/_og/deploy/providers/vercel.png?name=Nitro&title=Vercel&description=Deploy+Nitro+apps+to+Vercel+functions+or+edge.", "title": "Vercel - Nitro", "og:image:width": "1200", "twitter:image": "https://nitro.build/_og/deploy/providers/vercel.png?name=Nitro&title=Vercel&description=Deploy+Nitro+apps+to+Vercel+functions+or+edge.", "twitter:image:width": "1200", "favicon": "https://nitro.build/icon.svg", "og:image:height": "600", "scrapeId": "28612703-7380-4242-9ef1-b787583a3743", "sourceURL": "https://nitro.build/deploy/providers/vercel", "url": "https://nitro.build/deploy/providers/vercel", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: How do I fine-grained isr config via route rules in nitro-deploy?\n\nAssistant: To fine-grained isr config via route rules in nitro-deploy, here's what you do:\nBy default, query paramas are ignored by cache.\n\nYou can pass an options object to `isr` route rule to configure caching behavior.\n\n- `expiration`: Expiration time (in seconds) before the cached asset will be re-generated by invoking the Serverless Function. Setting the value to `false` (or `isr: true` route rule) means it will never expire.\n- `group`: Group number of the asset. Prerender assets with the same group number will all be re-validated at the same time.\n- `allowQuery`: List of query string parameter names that will be cached independently.\n  - If an empty array, query values are not considered for caching.\n  - If `undefined` each unique query value is cached independently.\n  - For wildcard `/**` route rules, `url` is always added\n- `passQuery`: When `true`, the query string will be present on the `request` argument passed to the invoked function. The `allowQuery` filter still applies.\n\n```\nexport default defineNitroConfig({\n  routeRules: {\n    \"/products/**\": {\n      isr: {\n        allowQuery: [\"q\"],\n        passQuery: true,\n      },\n    },\n  },\n});\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://nitro.build/deploy/providers/vercel", "title": "Vercel", "description": "Deploy Nitro apps to Vercel functions or edge.", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 01:02:50", "type": "section_detail", "page_metadata": {"og:image:type": "image/png", "og:image:alt": "Deploy Nitro apps to Vercel functions or edge.", "viewport": "width=device-width, initial-scale=1", "description": "Deploy Nitro apps to Vercel functions or edge.", "og:image": "https://nitro.build/_og/deploy/providers/vercel.png?name=Nitro&title=Vercel&description=Deploy+Nitro+apps+to+Vercel+functions+or+edge.", "twitter:site": "@unjsio", "twitter:image:height": "600", "twitter:image:alt": "Deploy Nitro apps to Vercel functions or edge.", "ogImage": "https://nitro.build/_og/deploy/providers/vercel.png?name=Nitro&title=Vercel&description=Deploy+Nitro+apps+to+Vercel+functions+or+edge.", "title": "Vercel - Nitro", "og:image:width": "1200", "twitter:image": "https://nitro.build/_og/deploy/providers/vercel.png?name=Nitro&title=Vercel&description=Deploy+Nitro+apps+to+Vercel+functions+or+edge.", "twitter:image:width": "1200", "favicon": "https://nitro.build/icon.svg", "og:image:height": "600", "scrapeId": "28612703-7380-4242-9ef1-b787583a3743", "sourceURL": "https://nitro.build/deploy/providers/vercel", "url": "https://nitro.build/deploy/providers/vercel", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: Can you give me some code examples for Vercel in nitro-deploy?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Install Vercel KV Dependency**:\n\n```yaml\n{\n  \"devDependencies\": {\n    \"@vercel/kv\": \"latest\"\n  }\n}\n```\n\nThis snippet shows you how to install vercel kv dependency, which is an important aspect of vercel.\n\n**Update Configuration for Vercel KV**:\n\n```yaml\nexport default defineNitroConfig({\n  storage: {\n    data: { driver: 'vercelKV' }\n  }\n})\n```\n\nThis snippet shows you how to update configuration for vercel kv, which is an important aspect of vercel.\n\n**Access Data Store in Event Handler**:\n\n```yaml\nexport default defineEventHandler(async (event) => {\n  const dataStorage = useStorage(\"data\");\n  await dataStorage.setItem(\"hello\", \"world\");\n  return {\n    hello: await dataStorage.getItem(\"hello\"),\n  };\n});\n```\n\nThis snippet shows you how to access data store in event handler, which is an important aspect of vercel.\n\n**On-Demand ISR Configuration**:\n\n```yaml\nexport default defineNitroConfig({\n     vercel: {\n       config: {\n         bypassToken: process.env.VERCEL_BYPASS_TOKEN\n       }\n     }\n})\n```\n\nThis snippet shows you how to on-demand isr configuration, which is an important aspect of vercel.\n\n**Fine-grained ISR Config Example**:\n\n```yaml\nexport default defineNitroConfig({\n  routeRules: {\n    \"/products/**\": {\n      isr: {\n        allowQuery: [\"q\"],\n        passQuery: true,\n      },\n    },\n  },\n});\n```\n\nThis snippet shows you how to fine-grained isr config example, which is an important aspect of vercel.\n\n", "metadata": {"source_url": "https://nitro.build/deploy/providers/vercel", "title": "Vercel", "description": "Deploy Nitro apps to Vercel functions or edge.", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 01:02:50", "type": "code_examples", "page_metadata": {"og:image:type": "image/png", "og:image:alt": "Deploy Nitro apps to Vercel functions or edge.", "viewport": "width=device-width, initial-scale=1", "description": "Deploy Nitro apps to Vercel functions or edge.", "og:image": "https://nitro.build/_og/deploy/providers/vercel.png?name=Nitro&title=Vercel&description=Deploy+Nitro+apps+to+Vercel+functions+or+edge.", "twitter:site": "@unjsio", "twitter:image:height": "600", "twitter:image:alt": "Deploy Nitro apps to Vercel functions or edge.", "ogImage": "https://nitro.build/_og/deploy/providers/vercel.png?name=Nitro&title=Vercel&description=Deploy+Nitro+apps+to+Vercel+functions+or+edge.", "title": "Vercel - Nitro", "og:image:width": "1200", "twitter:image": "https://nitro.build/_og/deploy/providers/vercel.png?name=Nitro&title=Vercel&description=Deploy+Nitro+apps+to+Vercel+functions+or+edge.", "twitter:image:width": "1200", "favicon": "https://nitro.build/icon.svg", "og:image:height": "600", "scrapeId": "28612703-7380-4242-9ef1-b787583a3743", "sourceURL": "https://nitro.build/deploy/providers/vercel", "url": "https://nitro.build/deploy/providers/vercel", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: What are some tips for using Vercel in nitro-deploy effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nIntegration with this provider is possible with zero configuration.\n\nMake sure to specify a custom \"Root Directory\" for Monorepo support in Vercel.\n\nEnsure to set the `NITRO_PRESET` environment variable to `vercel_edge` for deploying on Vercel Edge Functions.\n\nCheck the driver docs for Vercel KV Storage for more information about usage.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://nitro.build/deploy/providers/vercel", "title": "Vercel", "description": "Deploy Nitro apps to Vercel functions or edge.", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 01:02:50", "type": "best_practices", "page_metadata": {"og:image:type": "image/png", "og:image:alt": "Deploy Nitro apps to Vercel functions or edge.", "viewport": "width=device-width, initial-scale=1", "description": "Deploy Nitro apps to Vercel functions or edge.", "og:image": "https://nitro.build/_og/deploy/providers/vercel.png?name=Nitro&title=Vercel&description=Deploy+Nitro+apps+to+Vercel+functions+or+edge.", "twitter:site": "@unjsio", "twitter:image:height": "600", "twitter:image:alt": "Deploy Nitro apps to Vercel functions or edge.", "ogImage": "https://nitro.build/_og/deploy/providers/vercel.png?name=Nitro&title=Vercel&description=Deploy+Nitro+apps+to+Vercel+functions+or+edge.", "title": "Vercel - Nitro", "og:image:width": "1200", "twitter:image": "https://nitro.build/_og/deploy/providers/vercel.png?name=Nitro&title=Vercel&description=Deploy+Nitro+apps+to+Vercel+functions+or+edge.", "twitter:image:width": "1200", "favicon": "https://nitro.build/icon.svg", "og:image:height": "600", "scrapeId": "28612703-7380-4242-9ef1-b787583a3743", "sourceURL": "https://nitro.build/deploy/providers/vercel", "url": "https://nitro.build/deploy/providers/vercel", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: Can you explain what Koyeb is in nitro-deploy?\n\nAssistant: Sure, I'd be happy to explain Koyeb in nitro-deploy.\n\n# Koyeb\n\nDeploy Nitro apps to Koyeb.Here's a quick rundown of what this is about:\n\n## Using the control panel\n\n1. In the [Koyeb control panel](https://app.koyeb.com/), click **Create App**.\n2. Choose **GitHub** as your deployment method.\n3. Choose the GitHub **repository** and **branch** containing your application code.\n4. Name your Service.\n5. If you did not add a `start` command to your `package.json` file, under the **Build and deployment settings**, toggle the override switch associated with the run command field. In the **Run command** field, enter:\n\n```\nnode .output/server/index.mjs`\n```\n\n6. In the **Advanced** section, click **Add Variable** and add a `NITRO_PRESET` variable set to `koyeb`.\n7. Name the App.\n8. Click the **Deploy** button.\n\n## Using the Koyeb CLI\n\n1. Follow the instructions targeting your operating system to [install the Koyeb CLI client](https://www.koyeb.com/docs/cli/installation) with an installer. Alternatively, visit the [releases page on GitHub](https://github.com/koyeb/koyeb-cli/releases) to directly download required files.\n2. Create a Koyeb API access token by visiting the [API settings for your organization](https://app.koyeb.com/settings/api) in the Koyeb control panel.\n3. Log into your account with the Koyeb CLI by typing:\n\n```\nkoyeb login\n```\n\nPaste your API credentials when prompted.\n4. Deploy your Nitro application from a GitHub repository with the following command. Be sure to substitute your own values for `<APPLICATION_NAME>`, `<YOUR_GITHUB_USERNAME>`, and `<YOUR_REPOSITORY_NAME>`:\n\n```\nkoyeb app init <APPLICATION_NAME> \\\n      --git github.com/<YOUR_GITHUB_USERNAME>/<YOUR_REPOSITORY_NAME> \\\n      --git-branch main \\\n      --git-run-command \"node .output/server/index.mjs\" \\\n      --ports 3000:http \\\n      --routes /:3000 \\\n      --env PORT=3000 \\\n      --env NITRO_PRESET=koyeb\n```\n\n## Using a docker container\n\n1. Create a `.dockerignore` file in the root of your project and add the following lines:\n\n```\nDockerfile\n.dockerignore\nnode_modules\nnpm-debug.log\n.nitro\n.output\n.git\ndist\nREADME.md\n```\n\n2. Add a `Dockerfile` to the root of your project:\n\n```\nFROM node:18-alpine AS base\n\nFROM base AS deps\nRUN apk add --no-cache libc6-compat\nWORKDIR /app\nCOPY package.json package-lock.json ./\nRUN npm ci\n\nFROM base AS builder\nWORKDIR /app\nCOPY --from=deps /app/node_modules ./node_modules\nCOPY . .\nRUN npm run build && npm cache clean --force\n\nFROM base AS runner\nWORKDIR /app\nRUN addgroup --system --gid 1001 nodejs\nRUN adduser --system --uid 1001 nitro\nCOPY --from=builder /app .\nUSER nitro\nEXPOSE 3000\nENV PORT 3000\nCMD [\"npm\", \"run\", \"start\"]\n```\n\nThe Dockerfile above provides the minimum requirements to run the Nitro application. You can easily extend it depending on your needs.\nYou will then need to push your Docker image to a registry. You can use [Docker Hub](https://hub.docker.com/) or [GitHub Container Registry](https://docs.github.com/en/packages/guides/about-github-container-registry) for example.\nIn the Koyeb control panel, use the image and the tag field to specify the image you want to deploy.\nYou can also use the [Koyeb CLI](https://www.koyeb.com/docs/build-and-deploy/cli/installation)\nRefer to the Koyeb [Docker documentation](https://www.koyeb.com/docs/build-and-deploy/prebuilt-docker-images) for more information.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://nitro.build/deploy/providers/koyeb", "title": "Koyeb", "description": "Deploy Nitro apps to Koyeb.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 01:06:27", "type": "overview", "page_metadata": {"favicon": "https://nitro.build/icon.svg", "twitter:image:width": "1200", "twitter:image:height": "600", "twitter:site": "@unjsio", "viewport": "width=device-width, initial-scale=1", "og:image:width": "1200", "og:image:height": "600", "og:image": "https://nitro.build/_og/deploy/providers/koyeb.png?name=Nitro&title=Koyeb&description=Deploy+Nitro+apps+to+Koyeb.", "description": "Deploy Nitro apps to Koyeb.", "og:image:type": "image/png", "twitter:image": "https://nitro.build/_og/deploy/providers/koyeb.png?name=Nitro&title=Koyeb&description=Deploy+Nitro+apps+to+Koyeb.", "twitter:image:alt": "Deploy Nitro apps to Koyeb.", "ogImage": "https://nitro.build/_og/deploy/providers/koyeb.png?name=Nitro&title=Koyeb&description=Deploy+Nitro+apps+to+Koyeb.", "title": "Koyeb - Nitro", "og:image:alt": "Deploy Nitro apps to Koyeb.", "scrapeId": "14539dfb-9439-4802-97af-3fbf2ff77e05", "sourceURL": "https://nitro.build/deploy/providers/koyeb", "url": "https://nitro.build/deploy/providers/koyeb", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: How do I using the control panel in nitro-deploy?\n\nAssistant: To using the control panel in nitro-deploy, here's what you do:\n1. In the [Koyeb control panel](https://app.koyeb.com/), click **Create App**.\n2. Choose **GitHub** as your deployment method.\n3. Choose the GitHub **repository** and **branch** containing your application code.\n4. Name your Service.\n5. If you did not add a `start` command to your `package.json` file, under the **Build and deployment settings**, toggle the override switch associated with the run command field. In the **Run command** field, enter:\n\n```\nnode .output/server/index.mjs`\n```\n\n6. In the **Advanced** section, click **Add Variable** and add a `NITRO_PRESET` variable set to `koyeb`.\n7. Name the App.\n8. Click the **Deploy** button..\nPretty straightforward, right?", "metadata": {"source_url": "https://nitro.build/deploy/providers/koyeb", "title": "Koyeb", "description": "Deploy Nitro apps to Koyeb.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 01:06:27", "type": "section_detail", "page_metadata": {"favicon": "https://nitro.build/icon.svg", "twitter:image:width": "1200", "twitter:image:height": "600", "twitter:site": "@unjsio", "viewport": "width=device-width, initial-scale=1", "og:image:width": "1200", "og:image:height": "600", "og:image": "https://nitro.build/_og/deploy/providers/koyeb.png?name=Nitro&title=Koyeb&description=Deploy+Nitro+apps+to+Koyeb.", "description": "Deploy Nitro apps to Koyeb.", "og:image:type": "image/png", "twitter:image": "https://nitro.build/_og/deploy/providers/koyeb.png?name=Nitro&title=Koyeb&description=Deploy+Nitro+apps+to+Koyeb.", "twitter:image:alt": "Deploy Nitro apps to Koyeb.", "ogImage": "https://nitro.build/_og/deploy/providers/koyeb.png?name=Nitro&title=Koyeb&description=Deploy+Nitro+apps+to+Koyeb.", "title": "Koyeb - Nitro", "og:image:alt": "Deploy Nitro apps to Koyeb.", "scrapeId": "14539dfb-9439-4802-97af-3fbf2ff77e05", "sourceURL": "https://nitro.build/deploy/providers/koyeb", "url": "https://nitro.build/deploy/providers/koyeb", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: How do I using the koyeb cli in nitro-deploy?\n\nAssistant: To using the koyeb cli in nitro-deploy, here's what you do:\n1. Follow the instructions targeting your operating system to [install the Koyeb CLI client](https://www.koyeb.com/docs/cli/installation) with an installer. Alternatively, visit the [releases page on GitHub](https://github.com/koyeb/koyeb-cli/releases) to directly download required files.\n2. Create a Koyeb API access token by visiting the [API settings for your organization](https://app.koyeb.com/settings/api) in the Koyeb control panel.\n3. Log into your account with the Koyeb CLI by typing:\n\n```\nkoyeb login\n```\n\nPaste your API credentials when prompted.\n4. Deploy your Nitro application from a GitHub repository with the following command. Be sure to substitute your own values for `<APPLICATION_NAME>`, `<YOUR_GITHUB_USERNAME>`, and `<YOUR_REPOSITORY_NAME>`:\n\n```\nkoyeb app init <APPLICATION_NAME> \\\n      --git github.com/<YOUR_GITHUB_USERNAME>/<YOUR_REPOSITORY_NAME> \\\n      --git-branch main \\\n      --git-run-command \"node .output/server/index.mjs\" \\\n      --ports 3000:http \\\n      --routes /:3000 \\\n      --env PORT=3000 \\\n      --env NITRO_PRESET=koyeb\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://nitro.build/deploy/providers/koyeb", "title": "Koyeb", "description": "Deploy Nitro apps to Koyeb.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 01:06:27", "type": "section_detail", "page_metadata": {"favicon": "https://nitro.build/icon.svg", "twitter:image:width": "1200", "twitter:image:height": "600", "twitter:site": "@unjsio", "viewport": "width=device-width, initial-scale=1", "og:image:width": "1200", "og:image:height": "600", "og:image": "https://nitro.build/_og/deploy/providers/koyeb.png?name=Nitro&title=Koyeb&description=Deploy+Nitro+apps+to+Koyeb.", "description": "Deploy Nitro apps to Koyeb.", "og:image:type": "image/png", "twitter:image": "https://nitro.build/_og/deploy/providers/koyeb.png?name=Nitro&title=Koyeb&description=Deploy+Nitro+apps+to+Koyeb.", "twitter:image:alt": "Deploy Nitro apps to Koyeb.", "ogImage": "https://nitro.build/_og/deploy/providers/koyeb.png?name=Nitro&title=Koyeb&description=Deploy+Nitro+apps+to+Koyeb.", "title": "Koyeb - Nitro", "og:image:alt": "Deploy Nitro apps to Koyeb.", "scrapeId": "14539dfb-9439-4802-97af-3fbf2ff77e05", "sourceURL": "https://nitro.build/deploy/providers/koyeb", "url": "https://nitro.build/deploy/providers/koyeb", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: How do I using a docker container in nitro-deploy?\n\nAssistant: To using a docker container in nitro-deploy, here's what you do:\n1. Create a `.dockerignore` file in the root of your project and add the following lines:\n\n```\nDockerfile\n.dockerignore\nnode_modules\nnpm-debug.log\n.nitro\n.output\n.git\ndist\nREADME.md\n```\n\n2. Add a `Dockerfile` to the root of your project:\n\n```\nFROM node:18-alpine AS base\n\nFROM base AS deps\nRUN apk add --no-cache libc6-compat\nWORKDIR /app\nCOPY package.json package-lock.json ./\nRUN npm ci\n\nFROM base AS builder\nWORKDIR /app\nCOPY --from=deps /app/node_modules ./node_modules\nCOPY . .\nRUN npm run build && npm cache clean --force\n\nFROM base AS runner\nWORKDIR /app\nRUN addgroup --system --gid 1001 nodejs\nRUN adduser --system --uid 1001 nitro\nCOPY --from=builder /app .\nUSER nitro\nEXPOSE 3000\nENV PORT 3000\nCMD [\"npm\", \"run\", \"start\"]\n```\n\nThe Dockerfile above provides the minimum requirements to run the Nitro application. You can easily extend it depending on your needs.\nYou will then need to push your Docker image to a registry. You can use [Docker Hub](https://hub.docker.com/) or [GitHub Container Registry](https://docs.github.com/en/packages/guides/about-github-container-registry) for example.\nIn the Koyeb control panel, use the image and the tag field to specify the image you want to deploy.\nYou can also use the [Koyeb CLI](https://www.koyeb.com/docs/build-and-deploy/cli/installation)\nRefer to the Koyeb [Docker documentation](https://www.koyeb.com/docs/build-and-deploy/prebuilt-docker-images) for more information..\nPretty straightforward, right?", "metadata": {"source_url": "https://nitro.build/deploy/providers/koyeb", "title": "Koyeb", "description": "Deploy Nitro apps to Koyeb.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 01:06:27", "type": "section_detail", "page_metadata": {"favicon": "https://nitro.build/icon.svg", "twitter:image:width": "1200", "twitter:image:height": "600", "twitter:site": "@unjsio", "viewport": "width=device-width, initial-scale=1", "og:image:width": "1200", "og:image:height": "600", "og:image": "https://nitro.build/_og/deploy/providers/koyeb.png?name=Nitro&title=Koyeb&description=Deploy+Nitro+apps+to+Koyeb.", "description": "Deploy Nitro apps to Koyeb.", "og:image:type": "image/png", "twitter:image": "https://nitro.build/_og/deploy/providers/koyeb.png?name=Nitro&title=Koyeb&description=Deploy+Nitro+apps+to+Koyeb.", "twitter:image:alt": "Deploy Nitro apps to Koyeb.", "ogImage": "https://nitro.build/_og/deploy/providers/koyeb.png?name=Nitro&title=Koyeb&description=Deploy+Nitro+apps+to+Koyeb.", "title": "Koyeb - Nitro", "og:image:alt": "Deploy Nitro apps to Koyeb.", "scrapeId": "14539dfb-9439-4802-97af-3fbf2ff77e05", "sourceURL": "https://nitro.build/deploy/providers/koyeb", "url": "https://nitro.build/deploy/providers/koyeb", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: Can you give me some code examples for Koyeb in nitro-deploy?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Run command for Koyeb control panel**:\n\n```yaml\nnode .output/server/index.mjs\n```\n\nThis snippet shows you how to run command for koyeb control panel, which is an important aspect of koyeb.\n\n**Koyeb CLI login command**:\n\n```yaml\nkoyeb login\n```\n\nThis snippet shows you how to koyeb cli login command, which is an important aspect of koyeb.\n\n**Koyeb CLI deploy command**:\n\n```yaml\nkoyeb app init <APPLICATION_NAME> \\\n      --git github.com/<YOUR_GITHUB_USERNAME>/<YOUR_REPOSITORY_NAME> \\\n      --git-branch main \\\n      --git-run-command \"node .output/server/index.mjs\" \\\n      --ports 3000:http \\\n      --routes /:3000 \\\n      --env PORT=3000 \\\n      --env NITRO_PRESET=koyeb\n```\n\nThis snippet shows you how to koyeb cli deploy command, which is an important aspect of koyeb.\n\n**Dockerignore file**:\n\n```yaml\nDockerfile\n.dockerignore\nnode_modules\nnpm-debug.log\n.nitro\n.output\n.git\ndist\nREADME.md\n```\n\nThis snippet shows you how to dockerignore file, which is an important aspect of koyeb.\n\n**Dockerfile for Nitro application**:\n\n```yaml\nFROM node:18-alpine AS base\n\nFROM base AS deps\nRUN apk add --no-cache libc6-compat\nWORKDIR /app\nCOPY package.json package-lock.json ./\nRUN npm ci\n\nFROM base AS builder\nWORKDIR /app\nCOPY --from=deps /app/node_modules ./node_modules\nCOPY . .\nRUN npm run build && npm cache clean --force\n\nFROM base AS runner\nWORKDIR /app\nRUN addgroup --system --gid 1001 nodejs\nRUN adduser --system --uid 1001 nitro\nCOPY --from=builder /app .\nUSER nitro\nEXPOSE 3000\nENV PORT 3000\nCMD [\"npm\", \"run\", \"start\"]\n```\n\nThis snippet shows you how to dockerfile for nitro application, which is an important aspect of koyeb.\n\n", "metadata": {"source_url": "https://nitro.build/deploy/providers/koyeb", "title": "Koyeb", "description": "Deploy Nitro apps to Koyeb.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 01:06:27", "type": "code_examples", "page_metadata": {"favicon": "https://nitro.build/icon.svg", "twitter:image:width": "1200", "twitter:image:height": "600", "twitter:site": "@unjsio", "viewport": "width=device-width, initial-scale=1", "og:image:width": "1200", "og:image:height": "600", "og:image": "https://nitro.build/_og/deploy/providers/koyeb.png?name=Nitro&title=Koyeb&description=Deploy+Nitro+apps+to+Koyeb.", "description": "Deploy Nitro apps to Koyeb.", "og:image:type": "image/png", "twitter:image": "https://nitro.build/_og/deploy/providers/koyeb.png?name=Nitro&title=Koyeb&description=Deploy+Nitro+apps+to+Koyeb.", "twitter:image:alt": "Deploy Nitro apps to Koyeb.", "ogImage": "https://nitro.build/_og/deploy/providers/koyeb.png?name=Nitro&title=Koyeb&description=Deploy+Nitro+apps+to+Koyeb.", "title": "Koyeb - Nitro", "og:image:alt": "Deploy Nitro apps to Koyeb.", "scrapeId": "14539dfb-9439-4802-97af-3fbf2ff77e05", "sourceURL": "https://nitro.build/deploy/providers/koyeb", "url": "https://nitro.build/deploy/providers/koyeb", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: What are some tips for using Koyeb in nitro-deploy effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nEnsure to add a `start` command in your `package.json` file to avoid toggling the override switch.\n\nWhen using the Koyeb CLI, make sure to substitute your own values for application name, GitHub username, and repository name.\n\nPush your Docker image to a registry before deploying it on Koyeb.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://nitro.build/deploy/providers/koyeb", "title": "Koyeb", "description": "Deploy Nitro apps to Koyeb.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 01:06:27", "type": "best_practices", "page_metadata": {"favicon": "https://nitro.build/icon.svg", "twitter:image:width": "1200", "twitter:image:height": "600", "twitter:site": "@unjsio", "viewport": "width=device-width, initial-scale=1", "og:image:width": "1200", "og:image:height": "600", "og:image": "https://nitro.build/_og/deploy/providers/koyeb.png?name=Nitro&title=Koyeb&description=Deploy+Nitro+apps+to+Koyeb.", "description": "Deploy Nitro apps to Koyeb.", "og:image:type": "image/png", "twitter:image": "https://nitro.build/_og/deploy/providers/koyeb.png?name=Nitro&title=Koyeb&description=Deploy+Nitro+apps+to+Koyeb.", "twitter:image:alt": "Deploy Nitro apps to Koyeb.", "ogImage": "https://nitro.build/_og/deploy/providers/koyeb.png?name=Nitro&title=Koyeb&description=Deploy+Nitro+apps+to+Koyeb.", "title": "Koyeb - Nitro", "og:image:alt": "Deploy Nitro apps to Koyeb.", "scrapeId": "14539dfb-9439-4802-97af-3fbf2ff77e05", "sourceURL": "https://nitro.build/deploy/providers/koyeb", "url": "https://nitro.build/deploy/providers/koyeb", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: Can you explain what Zerops is in nitro-deploy?\n\nAssistant: Sure, I'd be happy to explain Zerops in nitro-deploy.\n\n# Zerops\n\nDeploy Nitro apps to Zerops.Here's a quick rundown of what this is about:\n\n## Starter templates\n\nIf you want to quickly get started with zerops and nitro you can use repositories [`zeropsio/recipe-nitro-nodejs`](https://github.com/zeropsio/recipe-nitro-nodejs) and [`zeropsio/recipe-nitro-static`](https://github.com/zeropsio/recipe-nitro-static) starter templates.\n\n## Project setup\n\nProjects and services can be added either through [project add wizard](https://app.zerops.io/dashboard/project-add) or imported using `zerops-project-import.yml`.\n\nzerops-project-import.yml (node.js)zerops-project-import.yml (static)\n\n```\nproject:\n  name: nitro-app\n\nservices:\n  - hostname: app\n    type: nodejs@20\n```\n\nThen create a `zerops.yml` config in your project root:\n\nzerops.yml (node.js)zerops.yml (static)\n\n```\nzerops:\n  - setup: app\n    build:\n      base: nodejs@20\n      envVariables:\n        SERVER_PRESET: zerops\n      buildCommands:\n        - pnpm i\n        - pnpm run build\n      deployFiles:\n        - .output\n        - package.json\n        - node_modules\n    run:\n      base: nodejs@20\n      ports:\n        - port: 3000\n          httpSupport: true\n      start: node .output/server/index.mjs\n```\n\nNow you can trigger the [build & deploy pipeline using the Zerops CLI](https://nitro.build/deploy/providers/zerops#building-deploying-your-app) or by connecting the app service with your [GitHub](https://docs.zerops.io/references/github-integration/) / [GitLab](https://docs.zerops.io/references/gitlab-integration) repository from inside the service detail.\n\n## Build and deploy\n\nOpen [Settings > Access Token Management](https://app.zerops.io/settings/token-management) in the Zerops app and generate a new access token.\n\nLog in using your access token with the following command:\n\nnpmyarnpnpmbundeno\n\n```\nnpx @zerops/zcli login <token>\n```\n\nNavigate to the root of your app (where `zerops.yml` is located) and run the following command to trigger the deploy:\n\nnpmyarnpnpmbundeno\n\n```\nnpx @zerops/zcli push\n```\n\nYour code can be deployed automatically on each commit or a new tag by connecting the service with your [GitHub](https://docs.zerops.io/references/gitlab-integration) / [GitLab](https://docs.zerops.io/references/gitlab-integration) repository. This connection can be set up in the service detail.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://nitro.build/deploy/providers/zerops", "title": "Zerops", "description": "Deploy Nitro apps to Zerops.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 01:07:15", "type": "overview", "page_metadata": {"ogImage": "https://nitro.build/_og/deploy/providers/zerops.png?name=Nitro&title=Zerops&description=Deploy+Nitro+apps+to+Zerops.", "og:image:type": "image/png", "title": "Zerops - Nitro", "twitter:image:width": "1200", "twitter:image": "https://nitro.build/_og/deploy/providers/zerops.png?name=Nitro&title=Zerops&description=Deploy+Nitro+apps+to+Zerops.", "description": "Deploy Nitro apps to Zerops.", "twitter:site": "@unjsio", "favicon": "https://nitro.build/icon.svg", "viewport": "width=device-width, initial-scale=1", "og:image:height": "600", "twitter:image:alt": "Deploy Nitro apps to Zerops.", "twitter:image:height": "600", "og:image:width": "1200", "og:image:alt": "Deploy Nitro apps to Zerops.", "og:image": "https://nitro.build/_og/deploy/providers/zerops.png?name=Nitro&title=Zerops&description=Deploy+Nitro+apps+to+Zerops.", "scrapeId": "145763d4-57fb-49fa-a63e-89113fc3d265", "sourceURL": "https://nitro.build/deploy/providers/zerops", "url": "https://nitro.build/deploy/providers/zerops", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: How do I starter templates in nitro-deploy?\n\nAssistant: To starter templates in nitro-deploy, here's what you do:\nIf you want to quickly get started with zerops and nitro you can use repositories [`zeropsio/recipe-nitro-nodejs`](https://github.com/zeropsio/recipe-nitro-nodejs) and [`zeropsio/recipe-nitro-static`](https://github.com/zeropsio/recipe-nitro-static) starter templates..\nPretty straightforward, right?", "metadata": {"source_url": "https://nitro.build/deploy/providers/zerops", "title": "Zerops", "description": "Deploy Nitro apps to Zerops.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 01:07:15", "type": "section_detail", "page_metadata": {"ogImage": "https://nitro.build/_og/deploy/providers/zerops.png?name=Nitro&title=Zerops&description=Deploy+Nitro+apps+to+Zerops.", "og:image:type": "image/png", "title": "Zerops - Nitro", "twitter:image:width": "1200", "twitter:image": "https://nitro.build/_og/deploy/providers/zerops.png?name=Nitro&title=Zerops&description=Deploy+Nitro+apps+to+Zerops.", "description": "Deploy Nitro apps to Zerops.", "twitter:site": "@unjsio", "favicon": "https://nitro.build/icon.svg", "viewport": "width=device-width, initial-scale=1", "og:image:height": "600", "twitter:image:alt": "Deploy Nitro apps to Zerops.", "twitter:image:height": "600", "og:image:width": "1200", "og:image:alt": "Deploy Nitro apps to Zerops.", "og:image": "https://nitro.build/_og/deploy/providers/zerops.png?name=Nitro&title=Zerops&description=Deploy+Nitro+apps+to+Zerops.", "scrapeId": "145763d4-57fb-49fa-a63e-89113fc3d265", "sourceURL": "https://nitro.build/deploy/providers/zerops", "url": "https://nitro.build/deploy/providers/zerops", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: How do I project setup in nitro-deploy?\n\nAssistant: To project setup in nitro-deploy, here's what you do:\nProjects and services can be added either through [project add wizard](https://app.zerops.io/dashboard/project-add) or imported using `zerops-project-import.yml`.\n\nzerops-project-import.yml (node.js)zerops-project-import.yml (static)\n\n```\nproject:\n  name: nitro-app\n\nservices:\n  - hostname: app\n    type: nodejs@20\n```\n\nThen create a `zerops.yml` config in your project root:\n\nzerops.yml (node.js)zerops.yml (static)\n\n```\nzerops:\n  - setup: app\n    build:\n      base: nodejs@20\n      envVariables:\n        SERVER_PRESET: zerops\n      buildCommands:\n        - pnpm i\n        - pnpm run build\n      deployFiles:\n        - .output\n        - package.json\n        - node_modules\n    run:\n      base: nodejs@20\n      ports:\n        - port: 3000\n          httpSupport: true\n      start: node .output/server/index.mjs\n```\n\nNow you can trigger the [build & deploy pipeline using the Zerops CLI](https://nitro.build/deploy/providers/zerops#building-deploying-your-app) or by connecting the app service with your [GitHub](https://docs.zerops.io/references/github-integration/) / [GitLab](https://docs.zerops.io/references/gitlab-integration) repository from inside the service detail..\nPretty straightforward, right?", "metadata": {"source_url": "https://nitro.build/deploy/providers/zerops", "title": "Zerops", "description": "Deploy Nitro apps to Zerops.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 01:07:15", "type": "section_detail", "page_metadata": {"ogImage": "https://nitro.build/_og/deploy/providers/zerops.png?name=Nitro&title=Zerops&description=Deploy+Nitro+apps+to+Zerops.", "og:image:type": "image/png", "title": "Zerops - Nitro", "twitter:image:width": "1200", "twitter:image": "https://nitro.build/_og/deploy/providers/zerops.png?name=Nitro&title=Zerops&description=Deploy+Nitro+apps+to+Zerops.", "description": "Deploy Nitro apps to Zerops.", "twitter:site": "@unjsio", "favicon": "https://nitro.build/icon.svg", "viewport": "width=device-width, initial-scale=1", "og:image:height": "600", "twitter:image:alt": "Deploy Nitro apps to Zerops.", "twitter:image:height": "600", "og:image:width": "1200", "og:image:alt": "Deploy Nitro apps to Zerops.", "og:image": "https://nitro.build/_og/deploy/providers/zerops.png?name=Nitro&title=Zerops&description=Deploy+Nitro+apps+to+Zerops.", "scrapeId": "145763d4-57fb-49fa-a63e-89113fc3d265", "sourceURL": "https://nitro.build/deploy/providers/zerops", "url": "https://nitro.build/deploy/providers/zerops", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: How do I build and deploy in nitro-deploy?\n\nAssistant: To build and deploy in nitro-deploy, here's what you do:\nOpen [Settings > Access Token Management](https://app.zerops.io/settings/token-management) in the Zerops app and generate a new access token.\n\nLog in using your access token with the following command:\n\nnpmyarnpnpmbundeno\n\n```\nnpx @zerops/zcli login <token>\n```\n\nNavigate to the root of your app (where `zerops.yml` is located) and run the following command to trigger the deploy:\n\nnpmyarnpnpmbundeno\n\n```\nnpx @zerops/zcli push\n```\n\nYour code can be deployed automatically on each commit or a new tag by connecting the service with your [GitHub](https://docs.zerops.io/references/gitlab-integration) / [GitLab](https://docs.zerops.io/references/gitlab-integration) repository. This connection can be set up in the service detail..\nPretty straightforward, right?", "metadata": {"source_url": "https://nitro.build/deploy/providers/zerops", "title": "Zerops", "description": "Deploy Nitro apps to Zerops.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 01:07:15", "type": "section_detail", "page_metadata": {"ogImage": "https://nitro.build/_og/deploy/providers/zerops.png?name=Nitro&title=Zerops&description=Deploy+Nitro+apps+to+Zerops.", "og:image:type": "image/png", "title": "Zerops - Nitro", "twitter:image:width": "1200", "twitter:image": "https://nitro.build/_og/deploy/providers/zerops.png?name=Nitro&title=Zerops&description=Deploy+Nitro+apps+to+Zerops.", "description": "Deploy Nitro apps to Zerops.", "twitter:site": "@unjsio", "favicon": "https://nitro.build/icon.svg", "viewport": "width=device-width, initial-scale=1", "og:image:height": "600", "twitter:image:alt": "Deploy Nitro apps to Zerops.", "twitter:image:height": "600", "og:image:width": "1200", "og:image:alt": "Deploy Nitro apps to Zerops.", "og:image": "https://nitro.build/_og/deploy/providers/zerops.png?name=Nitro&title=Zerops&description=Deploy+Nitro+apps+to+Zerops.", "scrapeId": "145763d4-57fb-49fa-a63e-89113fc3d265", "sourceURL": "https://nitro.build/deploy/providers/zerops", "url": "https://nitro.build/deploy/providers/zerops", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: Can you give me some code examples for Zerops in nitro-deploy?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**zerops-project-import.yml**:\n\n```yaml\nproject:\n  name: nitro-app\n\nservices:\n  - hostname: app\n    type: nodejs@20\n\n```\n\nThis snippet shows you how to zerops-project-import.yml, which is an important aspect of zerops.\n\n**zerops.yml**:\n\n```yaml\nzerops:\n  - setup: app\n    build:\n      base: nodejs@20\n      envVariables:\n        SERVER_PRESET: zerops\n      buildCommands:\n        - pnpm i\n        - pnpm run build\n      deployFiles:\n        - .output\n        - package.json\n        - node_modules\n    run:\n      base: nodejs@20\n      ports:\n        - port: 3000\n          httpSupport: true\n      start: node .output/server/index.mjs\n\n```\n\nThis snippet shows you how to zerops.yml, which is an important aspect of zerops.\n\n**Zerops CLI login command**:\n\n```yaml\nnpx @zerops/zcli login <token>\n\n```\n\nThis snippet shows you how to zerops cli login command, which is an important aspect of zerops.\n\n**Zerops CLI push command**:\n\n```yaml\nnpx @zerops/zcli push\n```\n\nThis snippet shows you how to zerops cli push command, which is an important aspect of zerops.\n\n", "metadata": {"source_url": "https://nitro.build/deploy/providers/zerops", "title": "Zerops", "description": "Deploy Nitro apps to Zerops.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 01:07:15", "type": "code_examples", "page_metadata": {"ogImage": "https://nitro.build/_og/deploy/providers/zerops.png?name=Nitro&title=Zerops&description=Deploy+Nitro+apps+to+Zerops.", "og:image:type": "image/png", "title": "Zerops - Nitro", "twitter:image:width": "1200", "twitter:image": "https://nitro.build/_og/deploy/providers/zerops.png?name=Nitro&title=Zerops&description=Deploy+Nitro+apps+to+Zerops.", "description": "Deploy Nitro apps to Zerops.", "twitter:site": "@unjsio", "favicon": "https://nitro.build/icon.svg", "viewport": "width=device-width, initial-scale=1", "og:image:height": "600", "twitter:image:alt": "Deploy Nitro apps to Zerops.", "twitter:image:height": "600", "og:image:width": "1200", "og:image:alt": "Deploy Nitro apps to Zerops.", "og:image": "https://nitro.build/_og/deploy/providers/zerops.png?name=Nitro&title=Zerops&description=Deploy+Nitro+apps+to+Zerops.", "scrapeId": "145763d4-57fb-49fa-a63e-89113fc3d265", "sourceURL": "https://nitro.build/deploy/providers/zerops", "url": "https://nitro.build/deploy/providers/zerops", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: What are some tips for using Zerops in nitro-deploy effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nThis preset is currently experimental.\n\nUse starter templates for quick setup.\n\nGenerate a new access token for deployment.\n\nConnect your service with GitHub or GitLab for automatic deployments.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://nitro.build/deploy/providers/zerops", "title": "Zerops", "description": "Deploy Nitro apps to Zerops.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 01:07:15", "type": "best_practices", "page_metadata": {"ogImage": "https://nitro.build/_og/deploy/providers/zerops.png?name=Nitro&title=Zerops&description=Deploy+Nitro+apps+to+Zerops.", "og:image:type": "image/png", "title": "Zerops - Nitro", "twitter:image:width": "1200", "twitter:image": "https://nitro.build/_og/deploy/providers/zerops.png?name=Nitro&title=Zerops&description=Deploy+Nitro+apps+to+Zerops.", "description": "Deploy Nitro apps to Zerops.", "twitter:site": "@unjsio", "favicon": "https://nitro.build/icon.svg", "viewport": "width=device-width, initial-scale=1", "og:image:height": "600", "twitter:image:alt": "Deploy Nitro apps to Zerops.", "twitter:image:height": "600", "og:image:width": "1200", "og:image:alt": "Deploy Nitro apps to Zerops.", "og:image": "https://nitro.build/_og/deploy/providers/zerops.png?name=Nitro&title=Zerops&description=Deploy+Nitro+apps+to+Zerops.", "scrapeId": "145763d4-57fb-49fa-a63e-89113fc3d265", "sourceURL": "https://nitro.build/deploy/providers/zerops", "url": "https://nitro.build/deploy/providers/zerops", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: Can you explain what Sample Documentation Page is in nitro-deploy?\n\nAssistant: Sure, I'd be happy to explain Sample Documentation Page in nitro-deploy.\n\n# Sample Documentation Page\n\nThis page provides an overview of the sample documentation structure.Here's a quick rundown of what this is about:\n\n## Introduction\n\nThis section introduces the purpose of the documentation.\n\n## Installation\n\nFollow these steps to install the software: 1. Download the installer. 2. Run the installer and follow the prompts.\n\n## Usage\n\nTo use the software, open the application and select the desired options.\n\n## Troubleshooting\n\nIf you encounter issues, refer to the troubleshooting section for common problems and solutions.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://nitro.build/deploy/providers/flightcontrol", "title": "Sample Documentation Page", "description": "This page provides an overview of the sample documentation structure.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 01:10:00", "type": "overview", "page_metadata": {"og:image:type": "image/png", "twitter:image:height": "600", "title": "Flightcontrol - Nitro", "og:image:height": "600", "twitter:image": "https://nitro.build/_og/deploy/providers/flightcontrol.png?name=Nitro&title=Flightcontrol&description=Deploy+Nitro+apps+to+AWS+via+Flightcontrol.", "viewport": "width=device-width, initial-scale=1", "ogImage": "https://nitro.build/_og/deploy/providers/flightcontrol.png?name=Nitro&title=Flightcontrol&description=Deploy+Nitro+apps+to+AWS+via+Flightcontrol.", "og:image": "https://nitro.build/_og/deploy/providers/flightcontrol.png?name=Nitro&title=Flightcontrol&description=Deploy+Nitro+apps+to+AWS+via+Flightcontrol.", "favicon": "https://nitro.build/icon.svg", "twitter:image:width": "1200", "og:image:alt": "Deploy Nitro apps to AWS via Flightcontrol.", "twitter:site": "@unjsio", "og:image:width": "1200", "twitter:image:alt": "Deploy Nitro apps to AWS via Flightcontrol.", "description": "Deploy Nitro apps to AWS via Flightcontrol.", "scrapeId": "0d223542-922e-48b9-81c8-d461eb64c168", "sourceURL": "https://nitro.build/deploy/providers/flightcontrol", "url": "https://nitro.build/deploy/providers/flightcontrol", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: How do I introduction in nitro-deploy?\n\nAssistant: To introduction in nitro-deploy, here's what you do:\nThis section introduces the purpose of the documentation..\nPretty straightforward, right?", "metadata": {"source_url": "https://nitro.build/deploy/providers/flightcontrol", "title": "Sample Documentation Page", "description": "This page provides an overview of the sample documentation structure.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 01:10:00", "type": "section_detail", "page_metadata": {"og:image:type": "image/png", "twitter:image:height": "600", "title": "Flightcontrol - Nitro", "og:image:height": "600", "twitter:image": "https://nitro.build/_og/deploy/providers/flightcontrol.png?name=Nitro&title=Flightcontrol&description=Deploy+Nitro+apps+to+AWS+via+Flightcontrol.", "viewport": "width=device-width, initial-scale=1", "ogImage": "https://nitro.build/_og/deploy/providers/flightcontrol.png?name=Nitro&title=Flightcontrol&description=Deploy+Nitro+apps+to+AWS+via+Flightcontrol.", "og:image": "https://nitro.build/_og/deploy/providers/flightcontrol.png?name=Nitro&title=Flightcontrol&description=Deploy+Nitro+apps+to+AWS+via+Flightcontrol.", "favicon": "https://nitro.build/icon.svg", "twitter:image:width": "1200", "og:image:alt": "Deploy Nitro apps to AWS via Flightcontrol.", "twitter:site": "@unjsio", "og:image:width": "1200", "twitter:image:alt": "Deploy Nitro apps to AWS via Flightcontrol.", "description": "Deploy Nitro apps to AWS via Flightcontrol.", "scrapeId": "0d223542-922e-48b9-81c8-d461eb64c168", "sourceURL": "https://nitro.build/deploy/providers/flightcontrol", "url": "https://nitro.build/deploy/providers/flightcontrol", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: How do I installation in nitro-deploy?\n\nAssistant: To installation in nitro-deploy, here's what you do:\nFollow these steps to install the software: 1. Download the installer. 2. Run the installer and follow the prompts..\nPretty straightforward, right?", "metadata": {"source_url": "https://nitro.build/deploy/providers/flightcontrol", "title": "Sample Documentation Page", "description": "This page provides an overview of the sample documentation structure.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 01:10:00", "type": "section_detail", "page_metadata": {"og:image:type": "image/png", "twitter:image:height": "600", "title": "Flightcontrol - Nitro", "og:image:height": "600", "twitter:image": "https://nitro.build/_og/deploy/providers/flightcontrol.png?name=Nitro&title=Flightcontrol&description=Deploy+Nitro+apps+to+AWS+via+Flightcontrol.", "viewport": "width=device-width, initial-scale=1", "ogImage": "https://nitro.build/_og/deploy/providers/flightcontrol.png?name=Nitro&title=Flightcontrol&description=Deploy+Nitro+apps+to+AWS+via+Flightcontrol.", "og:image": "https://nitro.build/_og/deploy/providers/flightcontrol.png?name=Nitro&title=Flightcontrol&description=Deploy+Nitro+apps+to+AWS+via+Flightcontrol.", "favicon": "https://nitro.build/icon.svg", "twitter:image:width": "1200", "og:image:alt": "Deploy Nitro apps to AWS via Flightcontrol.", "twitter:site": "@unjsio", "og:image:width": "1200", "twitter:image:alt": "Deploy Nitro apps to AWS via Flightcontrol.", "description": "Deploy Nitro apps to AWS via Flightcontrol.", "scrapeId": "0d223542-922e-48b9-81c8-d461eb64c168", "sourceURL": "https://nitro.build/deploy/providers/flightcontrol", "url": "https://nitro.build/deploy/providers/flightcontrol", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: How do I usage in nitro-deploy?\n\nAssistant: To usage in nitro-deploy, here's what you do:\nTo use the software, open the application and select the desired options..\nPretty straightforward, right?", "metadata": {"source_url": "https://nitro.build/deploy/providers/flightcontrol", "title": "Sample Documentation Page", "description": "This page provides an overview of the sample documentation structure.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 01:10:00", "type": "section_detail", "page_metadata": {"og:image:type": "image/png", "twitter:image:height": "600", "title": "Flightcontrol - Nitro", "og:image:height": "600", "twitter:image": "https://nitro.build/_og/deploy/providers/flightcontrol.png?name=Nitro&title=Flightcontrol&description=Deploy+Nitro+apps+to+AWS+via+Flightcontrol.", "viewport": "width=device-width, initial-scale=1", "ogImage": "https://nitro.build/_og/deploy/providers/flightcontrol.png?name=Nitro&title=Flightcontrol&description=Deploy+Nitro+apps+to+AWS+via+Flightcontrol.", "og:image": "https://nitro.build/_og/deploy/providers/flightcontrol.png?name=Nitro&title=Flightcontrol&description=Deploy+Nitro+apps+to+AWS+via+Flightcontrol.", "favicon": "https://nitro.build/icon.svg", "twitter:image:width": "1200", "og:image:alt": "Deploy Nitro apps to AWS via Flightcontrol.", "twitter:site": "@unjsio", "og:image:width": "1200", "twitter:image:alt": "Deploy Nitro apps to AWS via Flightcontrol.", "description": "Deploy Nitro apps to AWS via Flightcontrol.", "scrapeId": "0d223542-922e-48b9-81c8-d461eb64c168", "sourceURL": "https://nitro.build/deploy/providers/flightcontrol", "url": "https://nitro.build/deploy/providers/flightcontrol", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: How do I troubleshooting in nitro-deploy?\n\nAssistant: To troubleshooting in nitro-deploy, here's what you do:\nIf you encounter issues, refer to the troubleshooting section for common problems and solutions..\nPretty straightforward, right?", "metadata": {"source_url": "https://nitro.build/deploy/providers/flightcontrol", "title": "Sample Documentation Page", "description": "This page provides an overview of the sample documentation structure.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 01:10:00", "type": "section_detail", "page_metadata": {"og:image:type": "image/png", "twitter:image:height": "600", "title": "Flightcontrol - Nitro", "og:image:height": "600", "twitter:image": "https://nitro.build/_og/deploy/providers/flightcontrol.png?name=Nitro&title=Flightcontrol&description=Deploy+Nitro+apps+to+AWS+via+Flightcontrol.", "viewport": "width=device-width, initial-scale=1", "ogImage": "https://nitro.build/_og/deploy/providers/flightcontrol.png?name=Nitro&title=Flightcontrol&description=Deploy+Nitro+apps+to+AWS+via+Flightcontrol.", "og:image": "https://nitro.build/_og/deploy/providers/flightcontrol.png?name=Nitro&title=Flightcontrol&description=Deploy+Nitro+apps+to+AWS+via+Flightcontrol.", "favicon": "https://nitro.build/icon.svg", "twitter:image:width": "1200", "og:image:alt": "Deploy Nitro apps to AWS via Flightcontrol.", "twitter:site": "@unjsio", "og:image:width": "1200", "twitter:image:alt": "Deploy Nitro apps to AWS via Flightcontrol.", "description": "Deploy Nitro apps to AWS via Flightcontrol.", "scrapeId": "0d223542-922e-48b9-81c8-d461eb64c168", "sourceURL": "https://nitro.build/deploy/providers/flightcontrol", "url": "https://nitro.build/deploy/providers/flightcontrol", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: Can you give me some code examples for Sample Documentation Page in nitro-deploy?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Basic Installation Command**:\n\n```yaml\n$ sudo apt-get install sample-software\n```\n\nThis snippet shows you how to basic installation command, which is an important aspect of sample documentation page.\n\n**Configuration Example**:\n\n```yaml\n{\n  \"setting1\": \"value1\",\n  \"setting2\": \"value2\"\n}\n```\n\nThis snippet shows you how to configuration example, which is an important aspect of sample documentation page.\n\n", "metadata": {"source_url": "https://nitro.build/deploy/providers/flightcontrol", "title": "Sample Documentation Page", "description": "This page provides an overview of the sample documentation structure.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 01:10:00", "type": "code_examples", "page_metadata": {"og:image:type": "image/png", "twitter:image:height": "600", "title": "Flightcontrol - Nitro", "og:image:height": "600", "twitter:image": "https://nitro.build/_og/deploy/providers/flightcontrol.png?name=Nitro&title=Flightcontrol&description=Deploy+Nitro+apps+to+AWS+via+Flightcontrol.", "viewport": "width=device-width, initial-scale=1", "ogImage": "https://nitro.build/_og/deploy/providers/flightcontrol.png?name=Nitro&title=Flightcontrol&description=Deploy+Nitro+apps+to+AWS+via+Flightcontrol.", "og:image": "https://nitro.build/_og/deploy/providers/flightcontrol.png?name=Nitro&title=Flightcontrol&description=Deploy+Nitro+apps+to+AWS+via+Flightcontrol.", "favicon": "https://nitro.build/icon.svg", "twitter:image:width": "1200", "og:image:alt": "Deploy Nitro apps to AWS via Flightcontrol.", "twitter:site": "@unjsio", "og:image:width": "1200", "twitter:image:alt": "Deploy Nitro apps to AWS via Flightcontrol.", "description": "Deploy Nitro apps to AWS via Flightcontrol.", "scrapeId": "0d223542-922e-48b9-81c8-d461eb64c168", "sourceURL": "https://nitro.build/deploy/providers/flightcontrol", "url": "https://nitro.build/deploy/providers/flightcontrol", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: What are some tips for using Sample Documentation Page in nitro-deploy effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nAlways check for the latest version before installation.\n\nBackup your configuration files before making changes.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://nitro.build/deploy/providers/flightcontrol", "title": "Sample Documentation Page", "description": "This page provides an overview of the sample documentation structure.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 01:10:00", "type": "best_practices", "page_metadata": {"og:image:type": "image/png", "twitter:image:height": "600", "title": "Flightcontrol - Nitro", "og:image:height": "600", "twitter:image": "https://nitro.build/_og/deploy/providers/flightcontrol.png?name=Nitro&title=Flightcontrol&description=Deploy+Nitro+apps+to+AWS+via+Flightcontrol.", "viewport": "width=device-width, initial-scale=1", "ogImage": "https://nitro.build/_og/deploy/providers/flightcontrol.png?name=Nitro&title=Flightcontrol&description=Deploy+Nitro+apps+to+AWS+via+Flightcontrol.", "og:image": "https://nitro.build/_og/deploy/providers/flightcontrol.png?name=Nitro&title=Flightcontrol&description=Deploy+Nitro+apps+to+AWS+via+Flightcontrol.", "favicon": "https://nitro.build/icon.svg", "twitter:image:width": "1200", "og:image:alt": "Deploy Nitro apps to AWS via Flightcontrol.", "twitter:site": "@unjsio", "og:image:width": "1200", "twitter:image:alt": "Deploy Nitro apps to AWS via Flightcontrol.", "description": "Deploy Nitro apps to AWS via Flightcontrol.", "scrapeId": "0d223542-922e-48b9-81c8-d461eb64c168", "sourceURL": "https://nitro.build/deploy/providers/flightcontrol", "url": "https://nitro.build/deploy/providers/flightcontrol", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: Can you explain what Heroku is in nitro-deploy?\n\nAssistant: Sure, I'd be happy to explain Heroku in nitro-deploy.\n\n# Heroku\n\nDeploy Nitro apps to Heroku.Here's a quick rundown of what this is about:\n\n## Using the heroku CLI\n\n1. Create a new Heroku app.\n\n```\nheroku create myapp\n```\n\n2. Configure Heroku to use the nodejs buildpack.\n\n```\nheroku buildpacks:set heroku/nodejs\n```\n\n3. Configure your app.\n\n```\nheroku config:set NITRO_PRESET=heroku\n```\n\n4. Ensure you have `start` and `build` commands in your `package.json` file.\n\n```\n\"scripts\": {\n     \"build\": \"nitro build\", // or `nuxt build` if using nuxt\n     \"start\": \"node .output/server/index.mjs\"\n}\n```\n\n## With nginx\n\n1. Add the heroku Nginx buildpack [here](https://github.com/heroku/heroku-buildpack-nginx.git)\n2. Change to the 'node' preset in your `nuxt.config`\n\n```\n\"nitro\": {\n      \"preset\":\"node\",\n}\n```\n\n3. From the **Existing app** section of buildpack doc, 2 key steps are required to get things running\n\nStep 1: Listen on a socket at 'tmp/nginx.socket'\nStep 2: Create a file '/tmp/app-initialized' when your app is ready to accept connections\n4. Create custom app runner, eg: apprunner.mjs at the root of the project (or any other preferred location), in this file, create a server, using the listener generated by the node preset, then listen on the socket as detailed in the buildpack doc\n\n```\nimport { createServer } from 'node:http'\nimport { listener } from './.output/server/index.mjs'\n\nconst server = createServer(listener)\n\nserver.listen('/tmp/nginx.socket') //following the buildpack doc\n```\n\n5. To create the 'tmp/app-initialized' file, use a nitro plugin, create file 'initServer.ts' at the root of the project (or any other preferred location)\n\n```\nimport fs from \"fs\"\n\nexport default defineNitroPlugin((nitroApp) => {\n      if((process.env.NODE_ENV || 'development') != 'development') {\n         fs.openSync('/tmp/app-initialized', 'w')\n      }\n})\n```\n\n6. Finally, create file 'Procfile' at the root of the project, with the Procfile, we tell heroku to start nginx and use the custom apprunner.mjs to start the server\n\n```\nweb: bin/start-nginx node apprunner.mjs\n```\n7. Bonus: create file 'config/nginx.conf.erb' to customize your nginx config. With the node preset, by default, static files handlers will not be generated, you can use nginx to server static files, just add the right location rule to the server block(s), or, force the node preset to generate handlers for the static files by setting serveStatic to true.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://nitro.build/deploy/providers/heroku", "title": "Heroku", "description": "Deploy Nitro apps to Heroku.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 01:13:48", "type": "overview", "page_metadata": {"og:image:alt": "Deploy Nitro apps to Heroku.", "og:image": "https://nitro.build/_og/deploy/providers/heroku.png?name=Nitro&title=Heroku&description=Deploy+Nitro+apps+to+Heroku.", "twitter:image": "https://nitro.build/_og/deploy/providers/heroku.png?name=Nitro&title=Heroku&description=Deploy+Nitro+apps+to+Heroku.", "title": "Heroku - Nitro", "favicon": "https://nitro.build/icon.svg", "twitter:image:alt": "Deploy Nitro apps to Heroku.", "description": "Deploy Nitro apps to Heroku.", "viewport": "width=device-width, initial-scale=1", "og:image:type": "image/png", "og:image:width": "1200", "twitter:image:height": "600", "twitter:image:width": "1200", "ogImage": "https://nitro.build/_og/deploy/providers/heroku.png?name=Nitro&title=Heroku&description=Deploy+Nitro+apps+to+Heroku.", "og:image:height": "600", "twitter:site": "@unjsio", "scrapeId": "b5c81a3d-eff6-4b82-ba72-8d6dda09b3e9", "sourceURL": "https://nitro.build/deploy/providers/heroku", "url": "https://nitro.build/deploy/providers/heroku", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: How do I using the heroku cli in nitro-deploy?\n\nAssistant: To using the heroku cli in nitro-deploy, here's what you do:\n1. Create a new Heroku app.\n\n```\nheroku create myapp\n```\n\n2. Configure Heroku to use the nodejs buildpack.\n\n```\nheroku buildpacks:set heroku/nodejs\n```\n\n3. Configure your app.\n\n```\nheroku config:set NITRO_PRESET=heroku\n```\n\n4. Ensure you have `start` and `build` commands in your `package.json` file.\n\n```\n\"scripts\": {\n     \"build\": \"nitro build\", // or `nuxt build` if using nuxt\n     \"start\": \"node .output/server/index.mjs\"\n}\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://nitro.build/deploy/providers/heroku", "title": "Heroku", "description": "Deploy Nitro apps to Heroku.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 01:13:48", "type": "section_detail", "page_metadata": {"og:image:alt": "Deploy Nitro apps to Heroku.", "og:image": "https://nitro.build/_og/deploy/providers/heroku.png?name=Nitro&title=Heroku&description=Deploy+Nitro+apps+to+Heroku.", "twitter:image": "https://nitro.build/_og/deploy/providers/heroku.png?name=Nitro&title=Heroku&description=Deploy+Nitro+apps+to+Heroku.", "title": "Heroku - Nitro", "favicon": "https://nitro.build/icon.svg", "twitter:image:alt": "Deploy Nitro apps to Heroku.", "description": "Deploy Nitro apps to Heroku.", "viewport": "width=device-width, initial-scale=1", "og:image:type": "image/png", "og:image:width": "1200", "twitter:image:height": "600", "twitter:image:width": "1200", "ogImage": "https://nitro.build/_og/deploy/providers/heroku.png?name=Nitro&title=Heroku&description=Deploy+Nitro+apps+to+Heroku.", "og:image:height": "600", "twitter:site": "@unjsio", "scrapeId": "b5c81a3d-eff6-4b82-ba72-8d6dda09b3e9", "sourceURL": "https://nitro.build/deploy/providers/heroku", "url": "https://nitro.build/deploy/providers/heroku", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: How do I with nginx in nitro-deploy?\n\nAssistant: To with nginx in nitro-deploy, here's what you do:\n1. Add the heroku Nginx buildpack [here](https://github.com/heroku/heroku-buildpack-nginx.git)\n2. Change to the 'node' preset in your `nuxt.config`\n\n```\n\"nitro\": {\n      \"preset\":\"node\",\n}\n```\n\n3. From the **Existing app** section of buildpack doc, 2 key steps are required to get things running\n\nStep 1: Listen on a socket at 'tmp/nginx.socket'\nStep 2: Create a file '/tmp/app-initialized' when your app is ready to accept connections\n4. Create custom app runner, eg: apprunner.mjs at the root of the project (or any other preferred location), in this file, create a server, using the listener generated by the node preset, then listen on the socket as detailed in the buildpack doc\n\n```\nimport { createServer } from 'node:http'\nimport { listener } from './.output/server/index.mjs'\n\nconst server = createServer(listener)\n\nserver.listen('/tmp/nginx.socket') //following the buildpack doc\n```\n\n5. To create the 'tmp/app-initialized' file, use a nitro plugin, create file 'initServer.ts' at the root of the project (or any other preferred location)\n\n```\nimport fs from \"fs\"\n\nexport default defineNitroPlugin((nitroApp) => {\n      if((process.env.NODE_ENV || 'development') != 'development') {\n         fs.openSync('/tmp/app-initialized', 'w')\n      }\n})\n```\n\n6. Finally, create file 'Procfile' at the root of the project, with the Procfile, we tell heroku to start nginx and use the custom apprunner.mjs to start the server\n\n```\nweb: bin/start-nginx node apprunner.mjs\n```\n7. Bonus: create file 'config/nginx.conf.erb' to customize your nginx config. With the node preset, by default, static files handlers will not be generated, you can use nginx to server static files, just add the right location rule to the server block(s), or, force the node preset to generate handlers for the static files by setting serveStatic to true..\nPretty straightforward, right?", "metadata": {"source_url": "https://nitro.build/deploy/providers/heroku", "title": "Heroku", "description": "Deploy Nitro apps to Heroku.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 01:13:48", "type": "section_detail", "page_metadata": {"og:image:alt": "Deploy Nitro apps to Heroku.", "og:image": "https://nitro.build/_og/deploy/providers/heroku.png?name=Nitro&title=Heroku&description=Deploy+Nitro+apps+to+Heroku.", "twitter:image": "https://nitro.build/_og/deploy/providers/heroku.png?name=Nitro&title=Heroku&description=Deploy+Nitro+apps+to+Heroku.", "title": "Heroku - Nitro", "favicon": "https://nitro.build/icon.svg", "twitter:image:alt": "Deploy Nitro apps to Heroku.", "description": "Deploy Nitro apps to Heroku.", "viewport": "width=device-width, initial-scale=1", "og:image:type": "image/png", "og:image:width": "1200", "twitter:image:height": "600", "twitter:image:width": "1200", "ogImage": "https://nitro.build/_og/deploy/providers/heroku.png?name=Nitro&title=Heroku&description=Deploy+Nitro+apps+to+Heroku.", "og:image:height": "600", "twitter:site": "@unjsio", "scrapeId": "b5c81a3d-eff6-4b82-ba72-8d6dda09b3e9", "sourceURL": "https://nitro.build/deploy/providers/heroku", "url": "https://nitro.build/deploy/providers/heroku", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: Can you give me some code examples for Heroku in nitro-deploy?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Create a new Heroku app**:\n\n```yaml\nheroku create myapp\n```\n\nThis snippet shows you how to create a new heroku app, which is an important aspect of heroku.\n\n**Configure Heroku to use the nodejs buildpack**:\n\n```yaml\nheroku buildpacks:set heroku/nodejs\n```\n\nThis snippet shows you how to configure heroku to use the nodejs buildpack, which is an important aspect of heroku.\n\n**Configure your app**:\n\n```yaml\nheroku config:set NITRO_PRESET=heroku\n```\n\nThis snippet shows you how to configure your app, which is an important aspect of heroku.\n\n**Ensure you have start and build commands in your package.json file**:\n\n```yaml\n\"scripts\": {\n     \"build\": \"nitro build\", // or `nuxt build` if using nuxt\n     \"start\": \"node .output/server/index.mjs\"\n}\n```\n\nThis snippet shows you how to ensure you have start and build commands in your package.json file, which is an important aspect of heroku.\n\n**Change to the 'node' preset in your nuxt.config**:\n\n```yaml\n\"nitro\": {\n      \"preset\":\"node\",\n}\n```\n\nThis snippet shows you how to change to the 'node' preset in your nuxt.config, which is an important aspect of heroku.\n\n**Create a server using the listener generated by the node preset**:\n\n```yaml\nimport { createServer } from 'node:http'\nimport { listener } from './.output/server/index.mjs'\n\nconst server = createServer(listener)\n\nserver.listen('/tmp/nginx.socket') //following the buildpack doc\n```\n\nThis snippet shows you how to create a server using the listener generated by the node preset, which is an important aspect of heroku.\n\n**Create the 'tmp/app-initialized' file using a nitro plugin**:\n\n```yaml\nimport fs from \"fs\"\n\nexport default defineNitroPlugin((nitroApp) => {\n      if((process.env.NODE_ENV || 'development') != 'development') {\n         fs.openSync('/tmp/app-initialized', 'w')\n      }\n})\n```\n\nThis snippet shows you how to create the 'tmp/app-initialized' file using a nitro plugin, which is an important aspect of heroku.\n\n**Procfile to start nginx and use the custom apprunner.mjs**:\n\n```yaml\nweb: bin/start-nginx node apprunner.mjs\n```\n\nThis snippet shows you how to procfile to start nginx and use the custom apprunner.mjs, which is an important aspect of heroku.\n\n", "metadata": {"source_url": "https://nitro.build/deploy/providers/heroku", "title": "Heroku", "description": "Deploy Nitro apps to Heroku.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 01:13:48", "type": "code_examples", "page_metadata": {"og:image:alt": "Deploy Nitro apps to Heroku.", "og:image": "https://nitro.build/_og/deploy/providers/heroku.png?name=Nitro&title=Heroku&description=Deploy+Nitro+apps+to+Heroku.", "twitter:image": "https://nitro.build/_og/deploy/providers/heroku.png?name=Nitro&title=Heroku&description=Deploy+Nitro+apps+to+Heroku.", "title": "Heroku - Nitro", "favicon": "https://nitro.build/icon.svg", "twitter:image:alt": "Deploy Nitro apps to Heroku.", "description": "Deploy Nitro apps to Heroku.", "viewport": "width=device-width, initial-scale=1", "og:image:type": "image/png", "og:image:width": "1200", "twitter:image:height": "600", "twitter:image:width": "1200", "ogImage": "https://nitro.build/_og/deploy/providers/heroku.png?name=Nitro&title=Heroku&description=Deploy+Nitro+apps+to+Heroku.", "og:image:height": "600", "twitter:site": "@unjsio", "scrapeId": "b5c81a3d-eff6-4b82-ba72-8d6dda09b3e9", "sourceURL": "https://nitro.build/deploy/providers/heroku", "url": "https://nitro.build/deploy/providers/heroku", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: What are some tips for using Heroku in nitro-deploy effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nEnsure you have the correct buildpack set for your Heroku app.\n\nMake sure to listen on the correct socket as specified in the buildpack documentation.\n\nCreate the necessary files for initialization and configuration as outlined in the steps.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://nitro.build/deploy/providers/heroku", "title": "Heroku", "description": "Deploy Nitro apps to Heroku.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 01:13:48", "type": "best_practices", "page_metadata": {"og:image:alt": "Deploy Nitro apps to Heroku.", "og:image": "https://nitro.build/_og/deploy/providers/heroku.png?name=Nitro&title=Heroku&description=Deploy+Nitro+apps+to+Heroku.", "twitter:image": "https://nitro.build/_og/deploy/providers/heroku.png?name=Nitro&title=Heroku&description=Deploy+Nitro+apps+to+Heroku.", "title": "Heroku - Nitro", "favicon": "https://nitro.build/icon.svg", "twitter:image:alt": "Deploy Nitro apps to Heroku.", "description": "Deploy Nitro apps to Heroku.", "viewport": "width=device-width, initial-scale=1", "og:image:type": "image/png", "og:image:width": "1200", "twitter:image:height": "600", "twitter:image:width": "1200", "ogImage": "https://nitro.build/_og/deploy/providers/heroku.png?name=Nitro&title=Heroku&description=Deploy+Nitro+apps+to+Heroku.", "og:image:height": "600", "twitter:site": "@unjsio", "scrapeId": "b5c81a3d-eff6-4b82-ba72-8d6dda09b3e9", "sourceURL": "https://nitro.build/deploy/providers/heroku", "url": "https://nitro.build/deploy/providers/heroku", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: Can you explain what Custom Preset is in nitro-deploy?\n\nAssistant: Sure, I'd be happy to explain Custom Preset in nitro-deploy.\n\n# Custom Preset\n\nIf you want to use a provider that Nitro doesn't support, or want to modify an existing one, you can create a local custom preset in your project.Here's a quick rundown of what this is about:\n\n## Custom Presets Overview\n\nCustom presets are local files that have a preset entry that defines builder configuration and a runtime entry point.\n\nCustom local preset support is an experimental feature.\n\n## Example\n\nCheck [nitrojs/nitro-preset-starter](https://github.com/nitrojs/nitro-preset-starter) for a ready-to-use template.\n\nFirst, we have to define our preset entry point in a local directory `preset/nitro.config.ts`.\n\n## Nitro Config File\n\nThen in your nitro config file, you can use your custom preset.\n\n## Referencing Source Code\n\nRefer to the Nitro [source code](https://github.com/nitrojs/nitro/tree/main/src) directly to have a better understanding of presets and entry points.\n\n## Additional Resources\n\n[Edit this page](https://github.com/nitrojs/nitro/edit/v2/docs/2.deploy/2.custom-presets.md)\n\n[Edge Workers\\\n\\\nNitro provides out of the box support for deploying to Edge Workers.](https://nitro.build/deploy/workers) [WinterJS](https://nitro.build/deploy/runtimes/_winterjs)\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://nitro.build/deploy/custom-presets", "title": "Custom Preset", "description": "If you want to use a provider that Nitro doesn't support, or want to modify an existing one, you can create a local custom preset in your project.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 01:14:28", "type": "overview", "page_metadata": {"description": "If you want to use a provider that Nitro doesn't support, or want to modify an existing one, you can create a local custom preset in your project.", "ogImage": "https://nitro.build/_og/deploy/custom-presets.png?name=Nitro&title=Custom+Preset&description=If+you+want+to+use+a+provider+that+Nitro+doesn%27t+support%2C+or+want+to+modify+an+existing+one%2C+you+can+create+a+local+custom+preset+in+your+project.", "twitter:image": "https://nitro.build/_og/deploy/custom-presets.png?name=Nitro&title=Custom+Preset&description=If+you+want+to+use+a+provider+that+Nitro+doesn%27t+support%2C+or+want+to+modify+an+existing+one%2C+you+can+create+a+local+custom+preset+in+your+project.", "og:image:type": "image/png", "twitter:image:alt": "If you want to use a provider that Nitro doesn't support, or want to modify an existing one, you can create a local custom preset in your project.", "twitter:image:height": "600", "twitter:image:width": "1200", "twitter:site": "@unjsio", "og:image:alt": "If you want to use a provider that Nitro doesn't support, or want to modify an existing one, you can create a local custom preset in your project.", "og:image:width": "1200", "og:image": "https://nitro.build/_og/deploy/custom-presets.png?name=Nitro&title=Custom+Preset&description=If+you+want+to+use+a+provider+that+Nitro+doesn%27t+support%2C+or+want+to+modify+an+existing+one%2C+you+can+create+a+local+custom+preset+in+your+project.", "og:image:height": "600", "viewport": "width=device-width, initial-scale=1", "favicon": "https://nitro.build/icon.svg", "title": "Custom Preset - Nitro", "scrapeId": "55d39db4-a897-4674-9c81-448af8d0573a", "sourceURL": "https://nitro.build/deploy/custom-presets", "url": "https://nitro.build/deploy/custom-presets", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: How do I custom presets overview in nitro-deploy?\n\nAssistant: To custom presets overview in nitro-deploy, here's what you do:\nCustom presets are local files that have a preset entry that defines builder configuration and a runtime entry point.\n\nCustom local preset support is an experimental feature..\nPretty straightforward, right?", "metadata": {"source_url": "https://nitro.build/deploy/custom-presets", "title": "Custom Preset", "description": "If you want to use a provider that Nitro doesn't support, or want to modify an existing one, you can create a local custom preset in your project.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 01:14:28", "type": "section_detail", "page_metadata": {"description": "If you want to use a provider that Nitro doesn't support, or want to modify an existing one, you can create a local custom preset in your project.", "ogImage": "https://nitro.build/_og/deploy/custom-presets.png?name=Nitro&title=Custom+Preset&description=If+you+want+to+use+a+provider+that+Nitro+doesn%27t+support%2C+or+want+to+modify+an+existing+one%2C+you+can+create+a+local+custom+preset+in+your+project.", "twitter:image": "https://nitro.build/_og/deploy/custom-presets.png?name=Nitro&title=Custom+Preset&description=If+you+want+to+use+a+provider+that+Nitro+doesn%27t+support%2C+or+want+to+modify+an+existing+one%2C+you+can+create+a+local+custom+preset+in+your+project.", "og:image:type": "image/png", "twitter:image:alt": "If you want to use a provider that Nitro doesn't support, or want to modify an existing one, you can create a local custom preset in your project.", "twitter:image:height": "600", "twitter:image:width": "1200", "twitter:site": "@unjsio", "og:image:alt": "If you want to use a provider that Nitro doesn't support, or want to modify an existing one, you can create a local custom preset in your project.", "og:image:width": "1200", "og:image": "https://nitro.build/_og/deploy/custom-presets.png?name=Nitro&title=Custom+Preset&description=If+you+want+to+use+a+provider+that+Nitro+doesn%27t+support%2C+or+want+to+modify+an+existing+one%2C+you+can+create+a+local+custom+preset+in+your+project.", "og:image:height": "600", "viewport": "width=device-width, initial-scale=1", "favicon": "https://nitro.build/icon.svg", "title": "Custom Preset - Nitro", "scrapeId": "55d39db4-a897-4674-9c81-448af8d0573a", "sourceURL": "https://nitro.build/deploy/custom-presets", "url": "https://nitro.build/deploy/custom-presets", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: How do I example in nitro-deploy?\n\nAssistant: To example in nitro-deploy, here's what you do:\nCheck [nitrojs/nitro-preset-starter](https://github.com/nitrojs/nitro-preset-starter) for a ready-to-use template.\n\nFirst, we have to define our preset entry point in a local directory `preset/nitro.config.ts`..\nPretty straightforward, right?", "metadata": {"source_url": "https://nitro.build/deploy/custom-presets", "title": "Custom Preset", "description": "If you want to use a provider that Nitro doesn't support, or want to modify an existing one, you can create a local custom preset in your project.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 01:14:28", "type": "section_detail", "page_metadata": {"description": "If you want to use a provider that Nitro doesn't support, or want to modify an existing one, you can create a local custom preset in your project.", "ogImage": "https://nitro.build/_og/deploy/custom-presets.png?name=Nitro&title=Custom+Preset&description=If+you+want+to+use+a+provider+that+Nitro+doesn%27t+support%2C+or+want+to+modify+an+existing+one%2C+you+can+create+a+local+custom+preset+in+your+project.", "twitter:image": "https://nitro.build/_og/deploy/custom-presets.png?name=Nitro&title=Custom+Preset&description=If+you+want+to+use+a+provider+that+Nitro+doesn%27t+support%2C+or+want+to+modify+an+existing+one%2C+you+can+create+a+local+custom+preset+in+your+project.", "og:image:type": "image/png", "twitter:image:alt": "If you want to use a provider that Nitro doesn't support, or want to modify an existing one, you can create a local custom preset in your project.", "twitter:image:height": "600", "twitter:image:width": "1200", "twitter:site": "@unjsio", "og:image:alt": "If you want to use a provider that Nitro doesn't support, or want to modify an existing one, you can create a local custom preset in your project.", "og:image:width": "1200", "og:image": "https://nitro.build/_og/deploy/custom-presets.png?name=Nitro&title=Custom+Preset&description=If+you+want+to+use+a+provider+that+Nitro+doesn%27t+support%2C+or+want+to+modify+an+existing+one%2C+you+can+create+a+local+custom+preset+in+your+project.", "og:image:height": "600", "viewport": "width=device-width, initial-scale=1", "favicon": "https://nitro.build/icon.svg", "title": "Custom Preset - Nitro", "scrapeId": "55d39db4-a897-4674-9c81-448af8d0573a", "sourceURL": "https://nitro.build/deploy/custom-presets", "url": "https://nitro.build/deploy/custom-presets", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: How do I nitro config file in nitro-deploy?\n\nAssistant: To nitro config file in nitro-deploy, here's what you do:\nThen in your nitro config file, you can use your custom preset..\nPretty straightforward, right?", "metadata": {"source_url": "https://nitro.build/deploy/custom-presets", "title": "Custom Preset", "description": "If you want to use a provider that Nitro doesn't support, or want to modify an existing one, you can create a local custom preset in your project.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 01:14:28", "type": "section_detail", "page_metadata": {"description": "If you want to use a provider that Nitro doesn't support, or want to modify an existing one, you can create a local custom preset in your project.", "ogImage": "https://nitro.build/_og/deploy/custom-presets.png?name=Nitro&title=Custom+Preset&description=If+you+want+to+use+a+provider+that+Nitro+doesn%27t+support%2C+or+want+to+modify+an+existing+one%2C+you+can+create+a+local+custom+preset+in+your+project.", "twitter:image": "https://nitro.build/_og/deploy/custom-presets.png?name=Nitro&title=Custom+Preset&description=If+you+want+to+use+a+provider+that+Nitro+doesn%27t+support%2C+or+want+to+modify+an+existing+one%2C+you+can+create+a+local+custom+preset+in+your+project.", "og:image:type": "image/png", "twitter:image:alt": "If you want to use a provider that Nitro doesn't support, or want to modify an existing one, you can create a local custom preset in your project.", "twitter:image:height": "600", "twitter:image:width": "1200", "twitter:site": "@unjsio", "og:image:alt": "If you want to use a provider that Nitro doesn't support, or want to modify an existing one, you can create a local custom preset in your project.", "og:image:width": "1200", "og:image": "https://nitro.build/_og/deploy/custom-presets.png?name=Nitro&title=Custom+Preset&description=If+you+want+to+use+a+provider+that+Nitro+doesn%27t+support%2C+or+want+to+modify+an+existing+one%2C+you+can+create+a+local+custom+preset+in+your+project.", "og:image:height": "600", "viewport": "width=device-width, initial-scale=1", "favicon": "https://nitro.build/icon.svg", "title": "Custom Preset - Nitro", "scrapeId": "55d39db4-a897-4674-9c81-448af8d0573a", "sourceURL": "https://nitro.build/deploy/custom-presets", "url": "https://nitro.build/deploy/custom-presets", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: How do I referencing source code in nitro-deploy?\n\nAssistant: To referencing source code in nitro-deploy, here's what you do:\nRefer to the Nitro [source code](https://github.com/nitrojs/nitro/tree/main/src) directly to have a better understanding of presets and entry points..\nPretty straightforward, right?", "metadata": {"source_url": "https://nitro.build/deploy/custom-presets", "title": "Custom Preset", "description": "If you want to use a provider that Nitro doesn't support, or want to modify an existing one, you can create a local custom preset in your project.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 01:14:28", "type": "section_detail", "page_metadata": {"description": "If you want to use a provider that Nitro doesn't support, or want to modify an existing one, you can create a local custom preset in your project.", "ogImage": "https://nitro.build/_og/deploy/custom-presets.png?name=Nitro&title=Custom+Preset&description=If+you+want+to+use+a+provider+that+Nitro+doesn%27t+support%2C+or+want+to+modify+an+existing+one%2C+you+can+create+a+local+custom+preset+in+your+project.", "twitter:image": "https://nitro.build/_og/deploy/custom-presets.png?name=Nitro&title=Custom+Preset&description=If+you+want+to+use+a+provider+that+Nitro+doesn%27t+support%2C+or+want+to+modify+an+existing+one%2C+you+can+create+a+local+custom+preset+in+your+project.", "og:image:type": "image/png", "twitter:image:alt": "If you want to use a provider that Nitro doesn't support, or want to modify an existing one, you can create a local custom preset in your project.", "twitter:image:height": "600", "twitter:image:width": "1200", "twitter:site": "@unjsio", "og:image:alt": "If you want to use a provider that Nitro doesn't support, or want to modify an existing one, you can create a local custom preset in your project.", "og:image:width": "1200", "og:image": "https://nitro.build/_og/deploy/custom-presets.png?name=Nitro&title=Custom+Preset&description=If+you+want+to+use+a+provider+that+Nitro+doesn%27t+support%2C+or+want+to+modify+an+existing+one%2C+you+can+create+a+local+custom+preset+in+your+project.", "og:image:height": "600", "viewport": "width=device-width, initial-scale=1", "favicon": "https://nitro.build/icon.svg", "title": "Custom Preset - Nitro", "scrapeId": "55d39db4-a897-4674-9c81-448af8d0573a", "sourceURL": "https://nitro.build/deploy/custom-presets", "url": "https://nitro.build/deploy/custom-presets", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: How do I additional resources in nitro-deploy?\n\nAssistant: To additional resources in nitro-deploy, here's what you do:\n[Edit this page](https://github.com/nitrojs/nitro/edit/v2/docs/2.deploy/2.custom-presets.md)\n\n[Edge Workers\\\n\\\nNitro provides out of the box support for deploying to Edge Workers.](https://nitro.build/deploy/workers) [WinterJS](https://nitro.build/deploy/runtimes/_winterjs).\nPretty straightforward, right?", "metadata": {"source_url": "https://nitro.build/deploy/custom-presets", "title": "Custom Preset", "description": "If you want to use a provider that Nitro doesn't support, or want to modify an existing one, you can create a local custom preset in your project.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 01:14:28", "type": "section_detail", "page_metadata": {"description": "If you want to use a provider that Nitro doesn't support, or want to modify an existing one, you can create a local custom preset in your project.", "ogImage": "https://nitro.build/_og/deploy/custom-presets.png?name=Nitro&title=Custom+Preset&description=If+you+want+to+use+a+provider+that+Nitro+doesn%27t+support%2C+or+want+to+modify+an+existing+one%2C+you+can+create+a+local+custom+preset+in+your+project.", "twitter:image": "https://nitro.build/_og/deploy/custom-presets.png?name=Nitro&title=Custom+Preset&description=If+you+want+to+use+a+provider+that+Nitro+doesn%27t+support%2C+or+want+to+modify+an+existing+one%2C+you+can+create+a+local+custom+preset+in+your+project.", "og:image:type": "image/png", "twitter:image:alt": "If you want to use a provider that Nitro doesn't support, or want to modify an existing one, you can create a local custom preset in your project.", "twitter:image:height": "600", "twitter:image:width": "1200", "twitter:site": "@unjsio", "og:image:alt": "If you want to use a provider that Nitro doesn't support, or want to modify an existing one, you can create a local custom preset in your project.", "og:image:width": "1200", "og:image": "https://nitro.build/_og/deploy/custom-presets.png?name=Nitro&title=Custom+Preset&description=If+you+want+to+use+a+provider+that+Nitro+doesn%27t+support%2C+or+want+to+modify+an+existing+one%2C+you+can+create+a+local+custom+preset+in+your+project.", "og:image:height": "600", "viewport": "width=device-width, initial-scale=1", "favicon": "https://nitro.build/icon.svg", "title": "Custom Preset - Nitro", "scrapeId": "55d39db4-a897-4674-9c81-448af8d0573a", "sourceURL": "https://nitro.build/deploy/custom-presets", "url": "https://nitro.build/deploy/custom-presets", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: Can you give me some code examples for Custom Preset in nitro-deploy?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Custom Preset Entry Point**:\n\n```yaml\nimport type { NitroPreset } from \"nitropack\";\nimport { fileURLToPath } from \"node:url\"\n\nexport default <NitroPreset>{\n  // extends: \"node-server\", // You can extend existing presets\n  entry: fileURLToPath(new URL(\"./entry.ts\", import.meta.url)),\n  hooks: {\n    compiled() {\n      // ...\n    },\n  },\n};\n```\n\nThis snippet shows you how to custom preset entry point, which is an important aspect of custom preset.\n\n**Entry Point for Workers and Node.js**:\n\n```yaml\nimport \"#internal/nitro/virtual/polyfill\";\n\nconst nitroApp = useNitroApp();\n\nexport default {\n  fetch(request: Request) {\n    const url = new URL(request.url);\n    return nitroApp.localFetch(url.pathname + url.search, {\n      context: {},\n      host: url.hostname,\n      protocol: url.protocol,\n      method: request.method,\n      headers: request.headers,\n      body: undefined,\n    });\n  },\n};\n```\n\nThis snippet shows you how to entry point for workers and node.js, which is an important aspect of custom preset.\n\n**Nitro Config File Usage**:\n\n```yaml\nexport default defineNitroConfig({\n  preset: \"./preset\",\n});\n```\n\nThis snippet shows you how to nitro config file usage, which is an important aspect of custom preset.\n\n", "metadata": {"source_url": "https://nitro.build/deploy/custom-presets", "title": "Custom Preset", "description": "If you want to use a provider that Nitro doesn't support, or want to modify an existing one, you can create a local custom preset in your project.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 01:14:28", "type": "code_examples", "page_metadata": {"description": "If you want to use a provider that Nitro doesn't support, or want to modify an existing one, you can create a local custom preset in your project.", "ogImage": "https://nitro.build/_og/deploy/custom-presets.png?name=Nitro&title=Custom+Preset&description=If+you+want+to+use+a+provider+that+Nitro+doesn%27t+support%2C+or+want+to+modify+an+existing+one%2C+you+can+create+a+local+custom+preset+in+your+project.", "twitter:image": "https://nitro.build/_og/deploy/custom-presets.png?name=Nitro&title=Custom+Preset&description=If+you+want+to+use+a+provider+that+Nitro+doesn%27t+support%2C+or+want+to+modify+an+existing+one%2C+you+can+create+a+local+custom+preset+in+your+project.", "og:image:type": "image/png", "twitter:image:alt": "If you want to use a provider that Nitro doesn't support, or want to modify an existing one, you can create a local custom preset in your project.", "twitter:image:height": "600", "twitter:image:width": "1200", "twitter:site": "@unjsio", "og:image:alt": "If you want to use a provider that Nitro doesn't support, or want to modify an existing one, you can create a local custom preset in your project.", "og:image:width": "1200", "og:image": "https://nitro.build/_og/deploy/custom-presets.png?name=Nitro&title=Custom+Preset&description=If+you+want+to+use+a+provider+that+Nitro+doesn%27t+support%2C+or+want+to+modify+an+existing+one%2C+you+can+create+a+local+custom+preset+in+your+project.", "og:image:height": "600", "viewport": "width=device-width, initial-scale=1", "favicon": "https://nitro.build/icon.svg", "title": "Custom Preset - Nitro", "scrapeId": "55d39db4-a897-4674-9c81-448af8d0573a", "sourceURL": "https://nitro.build/deploy/custom-presets", "url": "https://nitro.build/deploy/custom-presets", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: What are some tips for using Custom Preset in nitro-deploy effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nCustom local preset support is an experimental feature.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://nitro.build/deploy/custom-presets", "title": "Custom Preset", "description": "If you want to use a provider that Nitro doesn't support, or want to modify an existing one, you can create a local custom preset in your project.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 01:14:28", "type": "best_practices", "page_metadata": {"description": "If you want to use a provider that Nitro doesn't support, or want to modify an existing one, you can create a local custom preset in your project.", "ogImage": "https://nitro.build/_og/deploy/custom-presets.png?name=Nitro&title=Custom+Preset&description=If+you+want+to+use+a+provider+that+Nitro+doesn%27t+support%2C+or+want+to+modify+an+existing+one%2C+you+can+create+a+local+custom+preset+in+your+project.", "twitter:image": "https://nitro.build/_og/deploy/custom-presets.png?name=Nitro&title=Custom+Preset&description=If+you+want+to+use+a+provider+that+Nitro+doesn%27t+support%2C+or+want+to+modify+an+existing+one%2C+you+can+create+a+local+custom+preset+in+your+project.", "og:image:type": "image/png", "twitter:image:alt": "If you want to use a provider that Nitro doesn't support, or want to modify an existing one, you can create a local custom preset in your project.", "twitter:image:height": "600", "twitter:image:width": "1200", "twitter:site": "@unjsio", "og:image:alt": "If you want to use a provider that Nitro doesn't support, or want to modify an existing one, you can create a local custom preset in your project.", "og:image:width": "1200", "og:image": "https://nitro.build/_og/deploy/custom-presets.png?name=Nitro&title=Custom+Preset&description=If+you+want+to+use+a+provider+that+Nitro+doesn%27t+support%2C+or+want+to+modify+an+existing+one%2C+you+can+create+a+local+custom+preset+in+your+project.", "og:image:height": "600", "viewport": "width=device-width, initial-scale=1", "favicon": "https://nitro.build/icon.svg", "title": "Custom Preset - Nitro", "scrapeId": "55d39db4-a897-4674-9c81-448af8d0573a", "sourceURL": "https://nitro.build/deploy/custom-presets", "url": "https://nitro.build/deploy/custom-presets", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: Can you explain what Netlify is in nitro-deploy?\n\nAssistant: Sure, I'd be happy to explain Netlify in nitro-deploy.\n\n# Netlify\n\nDeploy Nitro apps to Netlify functions or edge.Here's a quick rundown of what this is about:\n\n## On this page\n\n**Preset:** `netlify`\n\nRead more in Netlify Functions.\n\nIntegration with this provider is possible with [zero configuration](https://nitro.build/deploy/#zero-config-providers).\n\nNormally, the deployment to Netlify does not require any configuration.\nNitro will auto-detect that you are in a [Netlify](https://www.netlify.com/) build environment and build the correct version of your server.\n\nFor new sites, Netlify will detect that you are using Nitro and set the publish directory to `dist` and build command to `npm run build`.\n\nIf you are upgrading an existing site you should check these and update them if needed.\n\nIf you want to add custom redirects, you can do so with [`routeRules`](https://nitro.build/config#routerules) or by adding a [`_redirects`](https://docs.netlify.com/routing/redirects/#syntax-for-the-redirects-file) file to your `public` directory.\n\nFor deployment, just push to your git repository [as you would normally do for Netlify](https://docs.netlify.com/configure-builds/get-started/).\n\nMake sure the publish directory is set to `dist` when creating a new project.\n\n## Netlify edge functions\n\n**Preset:** `netlify_edge`\n\nNetlify Edge Functions use Deno and the powerful V8 JavaScript runtime to let you run globally distributed functions for the fastest possible response times.\n\nRead more in Netlify Edge functions.\n\nNitro output can directly run the server at the edge. Closer to your users.\n\nMake sure the publish directory is set to `dist` when creating a new project.\n\n## On-demand builders\n\n**Preset:** `netlify_builder`\n\nOn-demand Builders are serverless functions used to generate web content as needed that’s automatically cached on Netlify’s Edge CDN. They enable you to build pages for your site when a user visits them for the first time and then cache them at the edge for subsequent visits.\n\nRead more in Netlify On-demand Builders.\n\n## Custom deploy configuration\n\nYou can provide additional deploy configuration using the `netlify` key inside `nitro.config`. It will be merged with built-in auto-generated config. Currently the only supported value is `images.remote_images`, for [configuring Netlify Image CDN](https://docs.netlify.com/image-cdn/create-integration/).\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://nitro.build/deploy/providers/netlify", "title": "Netlify", "description": "Deploy Nitro apps to Netlify functions or edge.", "has_code_examples": false, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 01:15:56", "type": "overview", "page_metadata": {"og:image:alt": "Deploy Nitro apps to Netlify functions or edge.", "og:image:width": "1200", "og:image:height": "600", "twitter:site": "@unjsio", "twitter:image": "https://nitro.build/_og/deploy/providers/netlify.png?name=Nitro&title=Netlify&description=Deploy+Nitro+apps+to+Netlify+functions+or+edge.", "title": "Netlify - Nitro", "og:image:type": "image/png", "og:image": "https://nitro.build/_og/deploy/providers/netlify.png?name=Nitro&title=Netlify&description=Deploy+Nitro+apps+to+Netlify+functions+or+edge.", "description": "Deploy Nitro apps to Netlify functions or edge.", "twitter:image:alt": "Deploy Nitro apps to Netlify functions or edge.", "twitter:image:height": "600", "viewport": "width=device-width, initial-scale=1", "ogImage": "https://nitro.build/_og/deploy/providers/netlify.png?name=Nitro&title=Netlify&description=Deploy+Nitro+apps+to+Netlify+functions+or+edge.", "favicon": "https://nitro.build/icon.svg", "twitter:image:width": "1200", "scrapeId": "21b74e55-692f-4493-8bef-4baefcb14179", "sourceURL": "https://nitro.build/deploy/providers/netlify", "url": "https://nitro.build/deploy/providers/netlify", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: How do I on this page in nitro-deploy?\n\nAssistant: To on this page in nitro-deploy, here's what you do:\n**Preset:** `netlify`\n\nRead more in Netlify Functions.\n\nIntegration with this provider is possible with [zero configuration](https://nitro.build/deploy/#zero-config-providers).\n\nNormally, the deployment to Netlify does not require any configuration.\nNitro will auto-detect that you are in a [Netlify](https://www.netlify.com/) build environment and build the correct version of your server.\n\nFor new sites, Netlify will detect that you are using Nitro and set the publish directory to `dist` and build command to `npm run build`.\n\nIf you are upgrading an existing site you should check these and update them if needed.\n\nIf you want to add custom redirects, you can do so with [`routeRules`](https://nitro.build/config#routerules) or by adding a [`_redirects`](https://docs.netlify.com/routing/redirects/#syntax-for-the-redirects-file) file to your `public` directory.\n\nFor deployment, just push to your git repository [as you would normally do for Netlify](https://docs.netlify.com/configure-builds/get-started/).\n\nMake sure the publish directory is set to `dist` when creating a new project..\nPretty straightforward, right?", "metadata": {"source_url": "https://nitro.build/deploy/providers/netlify", "title": "Netlify", "description": "Deploy Nitro apps to Netlify functions or edge.", "has_code_examples": false, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 01:15:56", "type": "section_detail", "page_metadata": {"og:image:alt": "Deploy Nitro apps to Netlify functions or edge.", "og:image:width": "1200", "og:image:height": "600", "twitter:site": "@unjsio", "twitter:image": "https://nitro.build/_og/deploy/providers/netlify.png?name=Nitro&title=Netlify&description=Deploy+Nitro+apps+to+Netlify+functions+or+edge.", "title": "Netlify - Nitro", "og:image:type": "image/png", "og:image": "https://nitro.build/_og/deploy/providers/netlify.png?name=Nitro&title=Netlify&description=Deploy+Nitro+apps+to+Netlify+functions+or+edge.", "description": "Deploy Nitro apps to Netlify functions or edge.", "twitter:image:alt": "Deploy Nitro apps to Netlify functions or edge.", "twitter:image:height": "600", "viewport": "width=device-width, initial-scale=1", "ogImage": "https://nitro.build/_og/deploy/providers/netlify.png?name=Nitro&title=Netlify&description=Deploy+Nitro+apps+to+Netlify+functions+or+edge.", "favicon": "https://nitro.build/icon.svg", "twitter:image:width": "1200", "scrapeId": "21b74e55-692f-4493-8bef-4baefcb14179", "sourceURL": "https://nitro.build/deploy/providers/netlify", "url": "https://nitro.build/deploy/providers/netlify", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: How do I netlify edge functions in nitro-deploy?\n\nAssistant: To netlify edge functions in nitro-deploy, here's what you do:\n**Preset:** `netlify_edge`\n\nNetlify Edge Functions use Deno and the powerful V8 JavaScript runtime to let you run globally distributed functions for the fastest possible response times.\n\nRead more in Netlify Edge functions.\n\nNitro output can directly run the server at the edge. Closer to your users.\n\nMake sure the publish directory is set to `dist` when creating a new project..\nPretty straightforward, right?", "metadata": {"source_url": "https://nitro.build/deploy/providers/netlify", "title": "Netlify", "description": "Deploy Nitro apps to Netlify functions or edge.", "has_code_examples": false, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 01:15:56", "type": "section_detail", "page_metadata": {"og:image:alt": "Deploy Nitro apps to Netlify functions or edge.", "og:image:width": "1200", "og:image:height": "600", "twitter:site": "@unjsio", "twitter:image": "https://nitro.build/_og/deploy/providers/netlify.png?name=Nitro&title=Netlify&description=Deploy+Nitro+apps+to+Netlify+functions+or+edge.", "title": "Netlify - Nitro", "og:image:type": "image/png", "og:image": "https://nitro.build/_og/deploy/providers/netlify.png?name=Nitro&title=Netlify&description=Deploy+Nitro+apps+to+Netlify+functions+or+edge.", "description": "Deploy Nitro apps to Netlify functions or edge.", "twitter:image:alt": "Deploy Nitro apps to Netlify functions or edge.", "twitter:image:height": "600", "viewport": "width=device-width, initial-scale=1", "ogImage": "https://nitro.build/_og/deploy/providers/netlify.png?name=Nitro&title=Netlify&description=Deploy+Nitro+apps+to+Netlify+functions+or+edge.", "favicon": "https://nitro.build/icon.svg", "twitter:image:width": "1200", "scrapeId": "21b74e55-692f-4493-8bef-4baefcb14179", "sourceURL": "https://nitro.build/deploy/providers/netlify", "url": "https://nitro.build/deploy/providers/netlify", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: How do I on-demand builders in nitro-deploy?\n\nAssistant: To on-demand builders in nitro-deploy, here's what you do:\n**Preset:** `netlify_builder`\n\nOn-demand Builders are serverless functions used to generate web content as needed that’s automatically cached on Netlify’s Edge CDN. They enable you to build pages for your site when a user visits them for the first time and then cache them at the edge for subsequent visits.\n\nRead more in Netlify On-demand Builders..\nPretty straightforward, right?", "metadata": {"source_url": "https://nitro.build/deploy/providers/netlify", "title": "Netlify", "description": "Deploy Nitro apps to Netlify functions or edge.", "has_code_examples": false, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 01:15:56", "type": "section_detail", "page_metadata": {"og:image:alt": "Deploy Nitro apps to Netlify functions or edge.", "og:image:width": "1200", "og:image:height": "600", "twitter:site": "@unjsio", "twitter:image": "https://nitro.build/_og/deploy/providers/netlify.png?name=Nitro&title=Netlify&description=Deploy+Nitro+apps+to+Netlify+functions+or+edge.", "title": "Netlify - Nitro", "og:image:type": "image/png", "og:image": "https://nitro.build/_og/deploy/providers/netlify.png?name=Nitro&title=Netlify&description=Deploy+Nitro+apps+to+Netlify+functions+or+edge.", "description": "Deploy Nitro apps to Netlify functions or edge.", "twitter:image:alt": "Deploy Nitro apps to Netlify functions or edge.", "twitter:image:height": "600", "viewport": "width=device-width, initial-scale=1", "ogImage": "https://nitro.build/_og/deploy/providers/netlify.png?name=Nitro&title=Netlify&description=Deploy+Nitro+apps+to+Netlify+functions+or+edge.", "favicon": "https://nitro.build/icon.svg", "twitter:image:width": "1200", "scrapeId": "21b74e55-692f-4493-8bef-4baefcb14179", "sourceURL": "https://nitro.build/deploy/providers/netlify", "url": "https://nitro.build/deploy/providers/netlify", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: How do I custom deploy configuration in nitro-deploy?\n\nAssistant: To custom deploy configuration in nitro-deploy, here's what you do:\nYou can provide additional deploy configuration using the `netlify` key inside `nitro.config`. It will be merged with built-in auto-generated config. Currently the only supported value is `images.remote_images`, for [configuring Netlify Image CDN](https://docs.netlify.com/image-cdn/create-integration/)..\nPretty straightforward, right?", "metadata": {"source_url": "https://nitro.build/deploy/providers/netlify", "title": "Netlify", "description": "Deploy Nitro apps to Netlify functions or edge.", "has_code_examples": false, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 01:15:56", "type": "section_detail", "page_metadata": {"og:image:alt": "Deploy Nitro apps to Netlify functions or edge.", "og:image:width": "1200", "og:image:height": "600", "twitter:site": "@unjsio", "twitter:image": "https://nitro.build/_og/deploy/providers/netlify.png?name=Nitro&title=Netlify&description=Deploy+Nitro+apps+to+Netlify+functions+or+edge.", "title": "Netlify - Nitro", "og:image:type": "image/png", "og:image": "https://nitro.build/_og/deploy/providers/netlify.png?name=Nitro&title=Netlify&description=Deploy+Nitro+apps+to+Netlify+functions+or+edge.", "description": "Deploy Nitro apps to Netlify functions or edge.", "twitter:image:alt": "Deploy Nitro apps to Netlify functions or edge.", "twitter:image:height": "600", "viewport": "width=device-width, initial-scale=1", "ogImage": "https://nitro.build/_og/deploy/providers/netlify.png?name=Nitro&title=Netlify&description=Deploy+Nitro+apps+to+Netlify+functions+or+edge.", "favicon": "https://nitro.build/icon.svg", "twitter:image:width": "1200", "scrapeId": "21b74e55-692f-4493-8bef-4baefcb14179", "sourceURL": "https://nitro.build/deploy/providers/netlify", "url": "https://nitro.build/deploy/providers/netlify", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: What are some tips for using Netlify in nitro-deploy effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nMake sure the publish directory is set to `dist` when creating a new project.\n\nIf you are upgrading an existing site, check and update the publish directory and build command if needed.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://nitro.build/deploy/providers/netlify", "title": "Netlify", "description": "Deploy Nitro apps to Netlify functions or edge.", "has_code_examples": false, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 01:15:56", "type": "best_practices", "page_metadata": {"og:image:alt": "Deploy Nitro apps to Netlify functions or edge.", "og:image:width": "1200", "og:image:height": "600", "twitter:site": "@unjsio", "twitter:image": "https://nitro.build/_og/deploy/providers/netlify.png?name=Nitro&title=Netlify&description=Deploy+Nitro+apps+to+Netlify+functions+or+edge.", "title": "Netlify - Nitro", "og:image:type": "image/png", "og:image": "https://nitro.build/_og/deploy/providers/netlify.png?name=Nitro&title=Netlify&description=Deploy+Nitro+apps+to+Netlify+functions+or+edge.", "description": "Deploy Nitro apps to Netlify functions or edge.", "twitter:image:alt": "Deploy Nitro apps to Netlify functions or edge.", "twitter:image:height": "600", "viewport": "width=device-width, initial-scale=1", "ogImage": "https://nitro.build/_og/deploy/providers/netlify.png?name=Nitro&title=Netlify&description=Deploy+Nitro+apps+to+Netlify+functions+or+edge.", "favicon": "https://nitro.build/icon.svg", "twitter:image:width": "1200", "scrapeId": "21b74e55-692f-4493-8bef-4baefcb14179", "sourceURL": "https://nitro.build/deploy/providers/netlify", "url": "https://nitro.build/deploy/providers/netlify", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: Can you explain what Edgio is in nitro-deploy?\n\nAssistant: Sure, I'd be happy to explain Edgio in nitro-deploy.\n\n# Edgio\n\nDeploy Nitro apps to Edgio.Here's a quick rundown of what this is about:\n\n## Install the Edgio CLI\n\n```\nnpm i -g @edgio/cli\n```\n\n## Testing production build locally with Edgio\n\nYou can use Nitropack to test your app's development experience locally:\n\n```\nNITRO_PRESET=edgio npx nitropack build\n```\n\nTo simulate on local how your app would run in production with Edgio, run the following command:\n\n```\nedgio build && edgio run --production\n```\n\n## Deploying from your local machine\n\nOnce you have tested your application locally, you may deploy using:\n\n```\nedgio deploy\n```\n\n## Deploying using CI/CD\n\nIf you are deploying from a non-interactive environment, you will need to create an account on [Edgio Developer Console](https://app.layer0.co/) first and setup a [deploy token](https://docs.edg.io/guides/basics/deployments#deploy-from-ci). Once the deploy token is created, save it as a secret to your environment. You can start the deploy by running:\n\n```\nedgio deploy --token=XXX\n```\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://nitro.build/deploy/providers/edgio", "title": "Edgio", "description": "Deploy Nitro apps to Edgio.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 01:17:20", "type": "overview", "page_metadata": {"description": "Deploy Nitro apps to Edgio.", "twitter:site": "@unjsio", "viewport": "width=device-width, initial-scale=1", "twitter:image:width": "1200", "twitter:image": "https://nitro.build/_og/deploy/providers/edgio.png?name=Nitro&title=Edgio&description=Deploy+Nitro+apps+to+Edgio.", "og:image:width": "1200", "og:image:type": "image/png", "favicon": "https://nitro.build/icon.svg", "ogImage": "https://nitro.build/_og/deploy/providers/edgio.png?name=Nitro&title=Edgio&description=Deploy+Nitro+apps+to+Edgio.", "og:image": "https://nitro.build/_og/deploy/providers/edgio.png?name=Nitro&title=Edgio&description=Deploy+Nitro+apps+to+Edgio.", "twitter:image:height": "600", "og:image:height": "600", "og:image:alt": "Deploy Nitro apps to Edgio.", "title": "Edgio - Nitro", "twitter:image:alt": "Deploy Nitro apps to Edgio.", "scrapeId": "11812aee-47d3-4dd8-aff6-5319eaa29de7", "sourceURL": "https://nitro.build/deploy/providers/edgio", "url": "https://nitro.build/deploy/providers/edgio", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: How do I install the edgio cli in nitro-deploy?\n\nAssistant: To install the edgio cli in nitro-deploy, here's what you do:\n```\nnpm i -g @edgio/cli\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://nitro.build/deploy/providers/edgio", "title": "Edgio", "description": "Deploy Nitro apps to Edgio.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 01:17:20", "type": "section_detail", "page_metadata": {"description": "Deploy Nitro apps to Edgio.", "twitter:site": "@unjsio", "viewport": "width=device-width, initial-scale=1", "twitter:image:width": "1200", "twitter:image": "https://nitro.build/_og/deploy/providers/edgio.png?name=Nitro&title=Edgio&description=Deploy+Nitro+apps+to+Edgio.", "og:image:width": "1200", "og:image:type": "image/png", "favicon": "https://nitro.build/icon.svg", "ogImage": "https://nitro.build/_og/deploy/providers/edgio.png?name=Nitro&title=Edgio&description=Deploy+Nitro+apps+to+Edgio.", "og:image": "https://nitro.build/_og/deploy/providers/edgio.png?name=Nitro&title=Edgio&description=Deploy+Nitro+apps+to+Edgio.", "twitter:image:height": "600", "og:image:height": "600", "og:image:alt": "Deploy Nitro apps to Edgio.", "title": "Edgio - Nitro", "twitter:image:alt": "Deploy Nitro apps to Edgio.", "scrapeId": "11812aee-47d3-4dd8-aff6-5319eaa29de7", "sourceURL": "https://nitro.build/deploy/providers/edgio", "url": "https://nitro.build/deploy/providers/edgio", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: How do I testing production build locally with edgio in nitro-deploy?\n\nAssistant: To testing production build locally with edgio in nitro-deploy, here's what you do:\nYou can use Nitropack to test your app's development experience locally:\n\n```\nNITRO_PRESET=edgio npx nitropack build\n```\n\nTo simulate on local how your app would run in production with Edgio, run the following command:\n\n```\nedgio build && edgio run --production\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://nitro.build/deploy/providers/edgio", "title": "Edgio", "description": "Deploy Nitro apps to Edgio.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 01:17:20", "type": "section_detail", "page_metadata": {"description": "Deploy Nitro apps to Edgio.", "twitter:site": "@unjsio", "viewport": "width=device-width, initial-scale=1", "twitter:image:width": "1200", "twitter:image": "https://nitro.build/_og/deploy/providers/edgio.png?name=Nitro&title=Edgio&description=Deploy+Nitro+apps+to+Edgio.", "og:image:width": "1200", "og:image:type": "image/png", "favicon": "https://nitro.build/icon.svg", "ogImage": "https://nitro.build/_og/deploy/providers/edgio.png?name=Nitro&title=Edgio&description=Deploy+Nitro+apps+to+Edgio.", "og:image": "https://nitro.build/_og/deploy/providers/edgio.png?name=Nitro&title=Edgio&description=Deploy+Nitro+apps+to+Edgio.", "twitter:image:height": "600", "og:image:height": "600", "og:image:alt": "Deploy Nitro apps to Edgio.", "title": "Edgio - Nitro", "twitter:image:alt": "Deploy Nitro apps to Edgio.", "scrapeId": "11812aee-47d3-4dd8-aff6-5319eaa29de7", "sourceURL": "https://nitro.build/deploy/providers/edgio", "url": "https://nitro.build/deploy/providers/edgio", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: How do I deploying from your local machine in nitro-deploy?\n\nAssistant: To deploying from your local machine in nitro-deploy, here's what you do:\nOnce you have tested your application locally, you may deploy using:\n\n```\nedgio deploy\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://nitro.build/deploy/providers/edgio", "title": "Edgio", "description": "Deploy Nitro apps to Edgio.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 01:17:20", "type": "section_detail", "page_metadata": {"description": "Deploy Nitro apps to Edgio.", "twitter:site": "@unjsio", "viewport": "width=device-width, initial-scale=1", "twitter:image:width": "1200", "twitter:image": "https://nitro.build/_og/deploy/providers/edgio.png?name=Nitro&title=Edgio&description=Deploy+Nitro+apps+to+Edgio.", "og:image:width": "1200", "og:image:type": "image/png", "favicon": "https://nitro.build/icon.svg", "ogImage": "https://nitro.build/_og/deploy/providers/edgio.png?name=Nitro&title=Edgio&description=Deploy+Nitro+apps+to+Edgio.", "og:image": "https://nitro.build/_og/deploy/providers/edgio.png?name=Nitro&title=Edgio&description=Deploy+Nitro+apps+to+Edgio.", "twitter:image:height": "600", "og:image:height": "600", "og:image:alt": "Deploy Nitro apps to Edgio.", "title": "Edgio - Nitro", "twitter:image:alt": "Deploy Nitro apps to Edgio.", "scrapeId": "11812aee-47d3-4dd8-aff6-5319eaa29de7", "sourceURL": "https://nitro.build/deploy/providers/edgio", "url": "https://nitro.build/deploy/providers/edgio", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: How do I deploying using ci/cd in nitro-deploy?\n\nAssistant: To deploying using ci/cd in nitro-deploy, here's what you do:\nIf you are deploying from a non-interactive environment, you will need to create an account on [Edgio Developer Console](https://app.layer0.co/) first and setup a [deploy token](https://docs.edg.io/guides/basics/deployments#deploy-from-ci). Once the deploy token is created, save it as a secret to your environment. You can start the deploy by running:\n\n```\nedgio deploy --token=XXX\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://nitro.build/deploy/providers/edgio", "title": "Edgio", "description": "Deploy Nitro apps to Edgio.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 01:17:20", "type": "section_detail", "page_metadata": {"description": "Deploy Nitro apps to Edgio.", "twitter:site": "@unjsio", "viewport": "width=device-width, initial-scale=1", "twitter:image:width": "1200", "twitter:image": "https://nitro.build/_og/deploy/providers/edgio.png?name=Nitro&title=Edgio&description=Deploy+Nitro+apps+to+Edgio.", "og:image:width": "1200", "og:image:type": "image/png", "favicon": "https://nitro.build/icon.svg", "ogImage": "https://nitro.build/_og/deploy/providers/edgio.png?name=Nitro&title=Edgio&description=Deploy+Nitro+apps+to+Edgio.", "og:image": "https://nitro.build/_og/deploy/providers/edgio.png?name=Nitro&title=Edgio&description=Deploy+Nitro+apps+to+Edgio.", "twitter:image:height": "600", "og:image:height": "600", "og:image:alt": "Deploy Nitro apps to Edgio.", "title": "Edgio - Nitro", "twitter:image:alt": "Deploy Nitro apps to Edgio.", "scrapeId": "11812aee-47d3-4dd8-aff6-5319eaa29de7", "sourceURL": "https://nitro.build/deploy/providers/edgio", "url": "https://nitro.build/deploy/providers/edgio", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: Can you give me some code examples for Edgio in nitro-deploy?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Install the Edgio CLI**:\n\n```yaml\n```\nnpm i -g @edgio/cli\n```\n```\n\nThis snippet shows you how to install the edgio cli, which is an important aspect of edgio.\n\n**Testing production build locally with Edgio**:\n\n```yaml\n```\nNITRO_PRESET=edgio npx nitropack build\n```\n\n```\nedgio build && edgio run --production\n```\n```\n\nThis snippet shows you how to testing production build locally with edgio, which is an important aspect of edgio.\n\n**Deploying from your local machine**:\n\n```yaml\n```\nedgio deploy\n```\n```\n\nThis snippet shows you how to deploying from your local machine, which is an important aspect of edgio.\n\n**Deploying using CI/CD**:\n\n```yaml\n```\nedgio deploy --token=XXX\n```\n```\n\nThis snippet shows you how to deploying using ci/cd, which is an important aspect of edgio.\n\n", "metadata": {"source_url": "https://nitro.build/deploy/providers/edgio", "title": "Edgio", "description": "Deploy Nitro apps to Edgio.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 01:17:20", "type": "code_examples", "page_metadata": {"description": "Deploy Nitro apps to Edgio.", "twitter:site": "@unjsio", "viewport": "width=device-width, initial-scale=1", "twitter:image:width": "1200", "twitter:image": "https://nitro.build/_og/deploy/providers/edgio.png?name=Nitro&title=Edgio&description=Deploy+Nitro+apps+to+Edgio.", "og:image:width": "1200", "og:image:type": "image/png", "favicon": "https://nitro.build/icon.svg", "ogImage": "https://nitro.build/_og/deploy/providers/edgio.png?name=Nitro&title=Edgio&description=Deploy+Nitro+apps+to+Edgio.", "og:image": "https://nitro.build/_og/deploy/providers/edgio.png?name=Nitro&title=Edgio&description=Deploy+Nitro+apps+to+Edgio.", "twitter:image:height": "600", "og:image:height": "600", "og:image:alt": "Deploy Nitro apps to Edgio.", "title": "Edgio - Nitro", "twitter:image:alt": "Deploy Nitro apps to Edgio.", "scrapeId": "11812aee-47d3-4dd8-aff6-5319eaa29de7", "sourceURL": "https://nitro.build/deploy/providers/edgio", "url": "https://nitro.build/deploy/providers/edgio", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: What are some tips for using Edgio in nitro-deploy effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nIf this is your first time deploying to Edgio, the interactive CLI as part of the `deploy` command will prompt to authenticate using your browser.\n\nYou may also sign up prior to deployment.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://nitro.build/deploy/providers/edgio", "title": "Edgio", "description": "Deploy Nitro apps to Edgio.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 01:17:20", "type": "best_practices", "page_metadata": {"description": "Deploy Nitro apps to Edgio.", "twitter:site": "@unjsio", "viewport": "width=device-width, initial-scale=1", "twitter:image:width": "1200", "twitter:image": "https://nitro.build/_og/deploy/providers/edgio.png?name=Nitro&title=Edgio&description=Deploy+Nitro+apps+to+Edgio.", "og:image:width": "1200", "og:image:type": "image/png", "favicon": "https://nitro.build/icon.svg", "ogImage": "https://nitro.build/_og/deploy/providers/edgio.png?name=Nitro&title=Edgio&description=Deploy+Nitro+apps+to+Edgio.", "og:image": "https://nitro.build/_og/deploy/providers/edgio.png?name=Nitro&title=Edgio&description=Deploy+Nitro+apps+to+Edgio.", "twitter:image:height": "600", "og:image:height": "600", "og:image:alt": "Deploy Nitro apps to Edgio.", "title": "Edgio - Nitro", "twitter:image:alt": "Deploy Nitro apps to Edgio.", "scrapeId": "11812aee-47d3-4dd8-aff6-5319eaa29de7", "sourceURL": "https://nitro.build/deploy/providers/edgio", "url": "https://nitro.build/deploy/providers/edgio", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: Can you explain what Alwaysdata is in nitro-deploy?\n\nAssistant: Sure, I'd be happy to explain Alwaysdata in nitro-deploy.\n\n# Alwaysdata\n\nDeploy Nitro apps to alwaysdata.Here's a quick rundown of what this is about:\n\n## Set up application\n\n### Pre-requisites\n\n1. [Register a new profile](https://www.alwaysdata.com/en/register/) on alwaysdata platform if you don't have one.\n2. Get a free 100Mb plan to host your app.\n\nKeep in mind your _account name_ will be used to provide you a default URL in the form of `account_name.alwaysdata.net`, so choose it wisely. You can also link your existing domains to your account later or register as many accounts under your profile as you need.\n\n## Local deployment\n\n1. Build your project locally with `npm run build -- preset alwaysdata`\n2. [Upload your app](https://help.alwaysdata.com/en/remote-access/) to your account in its own directory (e.g. `$HOME/www/my-app`). You can use any protocol you prefer (SSH/FTP/WebDAV…) to do so.\n3. On your admin panel, [create a new site](https://admin.alwaysdata.com/site/add/) for your app with the following features:\n\n   - _Addresses_: `[account_name].alwaysdata.net`\n   - _Type_: Node.js\n   - _Command_: `node ./output/server/index.mjs`\n   - _Working directory_: `www/my-app` (adapt it to your deployment path)\n   - _Environment_:\n\n     ```\n     NITRO_PRESET=alwaysdata\n     ```\n   - _Node.js version_: `Default version` is fine; pick no less than `20.0.0` (you can also [set your Node.js version globally](https://help.alwaysdata.com/en/languages/nodejs/configuration/#supported-versions))\n   - _Hot restart_: `SIGHUP`\n\nRead more in Get more information about alwaysdata Node.js sites type.\n4. Your app is now live at `http(s)://[account_name].alwaysdata.net`.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://nitro.build/deploy/providers/alwaysdata", "title": "Alwaysdata", "description": "Deploy Nitro apps to alwaysdata.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 01:17:38", "type": "overview", "page_metadata": {"twitter:site": "@unjsio", "og:image": "https://nitro.build/_og/deploy/providers/alwaysdata.png?name=Nitro&title=Alwaysdata&description=Deploy+Nitro+apps+to+alwaysdata.", "og:image:alt": "Deploy Nitro apps to alwaysdata.", "twitter:image": "https://nitro.build/_og/deploy/providers/alwaysdata.png?name=Nitro&title=Alwaysdata&description=Deploy+Nitro+apps+to+alwaysdata.", "ogImage": "https://nitro.build/_og/deploy/providers/alwaysdata.png?name=Nitro&title=Alwaysdata&description=Deploy+Nitro+apps+to+alwaysdata.", "og:image:width": "1200", "description": "Deploy Nitro apps to alwaysdata.", "og:image:height": "600", "twitter:image:width": "1200", "title": "Alwaysdata - Nitro", "twitter:image:alt": "Deploy Nitro apps to alwaysdata.", "favicon": "https://nitro.build/icon.svg", "og:image:type": "image/png", "viewport": "width=device-width, initial-scale=1", "twitter:image:height": "600", "scrapeId": "b863cc0d-29bb-4fa2-afe7-bfc9dda20b70", "sourceURL": "https://nitro.build/deploy/providers/alwaysdata", "url": "https://nitro.build/deploy/providers/alwaysdata", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: How do I set up application in nitro-deploy?\n\nAssistant: To set up application in nitro-deploy, here's what you do:\n### Pre-requisites\n\n1. [Register a new profile](https://www.alwaysdata.com/en/register/) on alwaysdata platform if you don't have one.\n2. Get a free 100Mb plan to host your app.\n\nKeep in mind your _account name_ will be used to provide you a default URL in the form of `account_name.alwaysdata.net`, so choose it wisely. You can also link your existing domains to your account later or register as many accounts under your profile as you need..\nPretty straightforward, right?", "metadata": {"source_url": "https://nitro.build/deploy/providers/alwaysdata", "title": "Alwaysdata", "description": "Deploy Nitro apps to alwaysdata.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 01:17:38", "type": "section_detail", "page_metadata": {"twitter:site": "@unjsio", "og:image": "https://nitro.build/_og/deploy/providers/alwaysdata.png?name=Nitro&title=Alwaysdata&description=Deploy+Nitro+apps+to+alwaysdata.", "og:image:alt": "Deploy Nitro apps to alwaysdata.", "twitter:image": "https://nitro.build/_og/deploy/providers/alwaysdata.png?name=Nitro&title=Alwaysdata&description=Deploy+Nitro+apps+to+alwaysdata.", "ogImage": "https://nitro.build/_og/deploy/providers/alwaysdata.png?name=Nitro&title=Alwaysdata&description=Deploy+Nitro+apps+to+alwaysdata.", "og:image:width": "1200", "description": "Deploy Nitro apps to alwaysdata.", "og:image:height": "600", "twitter:image:width": "1200", "title": "Alwaysdata - Nitro", "twitter:image:alt": "Deploy Nitro apps to alwaysdata.", "favicon": "https://nitro.build/icon.svg", "og:image:type": "image/png", "viewport": "width=device-width, initial-scale=1", "twitter:image:height": "600", "scrapeId": "b863cc0d-29bb-4fa2-afe7-bfc9dda20b70", "sourceURL": "https://nitro.build/deploy/providers/alwaysdata", "url": "https://nitro.build/deploy/providers/alwaysdata", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: How do I local deployment in nitro-deploy?\n\nAssistant: To local deployment in nitro-deploy, here's what you do:\n1. Build your project locally with `npm run build -- preset alwaysdata`\n2. [Upload your app](https://help.alwaysdata.com/en/remote-access/) to your account in its own directory (e.g. `$HOME/www/my-app`). You can use any protocol you prefer (SSH/FTP/WebDAV…) to do so.\n3. On your admin panel, [create a new site](https://admin.alwaysdata.com/site/add/) for your app with the following features:\n\n   - _Addresses_: `[account_name].alwaysdata.net`\n   - _Type_: Node.js\n   - _Command_: `node ./output/server/index.mjs`\n   - _Working directory_: `www/my-app` (adapt it to your deployment path)\n   - _Environment_:\n\n     ```\n     NITRO_PRESET=alwaysdata\n     ```\n   - _Node.js version_: `Default version` is fine; pick no less than `20.0.0` (you can also [set your Node.js version globally](https://help.alwaysdata.com/en/languages/nodejs/configuration/#supported-versions))\n   - _Hot restart_: `SIGHUP`\n\nRead more in Get more information about alwaysdata Node.js sites type.\n4. Your app is now live at `http(s)://[account_name].alwaysdata.net`..\nPretty straightforward, right?", "metadata": {"source_url": "https://nitro.build/deploy/providers/alwaysdata", "title": "Alwaysdata", "description": "Deploy Nitro apps to alwaysdata.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 01:17:38", "type": "section_detail", "page_metadata": {"twitter:site": "@unjsio", "og:image": "https://nitro.build/_og/deploy/providers/alwaysdata.png?name=Nitro&title=Alwaysdata&description=Deploy+Nitro+apps+to+alwaysdata.", "og:image:alt": "Deploy Nitro apps to alwaysdata.", "twitter:image": "https://nitro.build/_og/deploy/providers/alwaysdata.png?name=Nitro&title=Alwaysdata&description=Deploy+Nitro+apps+to+alwaysdata.", "ogImage": "https://nitro.build/_og/deploy/providers/alwaysdata.png?name=Nitro&title=Alwaysdata&description=Deploy+Nitro+apps+to+alwaysdata.", "og:image:width": "1200", "description": "Deploy Nitro apps to alwaysdata.", "og:image:height": "600", "twitter:image:width": "1200", "title": "Alwaysdata - Nitro", "twitter:image:alt": "Deploy Nitro apps to alwaysdata.", "favicon": "https://nitro.build/icon.svg", "og:image:type": "image/png", "viewport": "width=device-width, initial-scale=1", "twitter:image:height": "600", "scrapeId": "b863cc0d-29bb-4fa2-afe7-bfc9dda20b70", "sourceURL": "https://nitro.build/deploy/providers/alwaysdata", "url": "https://nitro.build/deploy/providers/alwaysdata", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: Can you give me some code examples for Alwaysdata in nitro-deploy?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Local deployment command**:\n\n```yaml\nnpm run build -- preset alwaysdata\n```\n\nThis snippet shows you how to local deployment command, which is an important aspect of alwaysdata.\n\n**Node.js command**:\n\n```yaml\nnode ./output/server/index.mjs\n```\n\nThis snippet shows you how to node.js command, which is an important aspect of alwaysdata.\n\n**Environment variable**:\n\n```yaml\nNITRO_PRESET=alwaysdata\n```\n\nThis snippet shows you how to environment variable, which is an important aspect of alwaysdata.\n\n", "metadata": {"source_url": "https://nitro.build/deploy/providers/alwaysdata", "title": "Alwaysdata", "description": "Deploy Nitro apps to alwaysdata.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 01:17:38", "type": "code_examples", "page_metadata": {"twitter:site": "@unjsio", "og:image": "https://nitro.build/_og/deploy/providers/alwaysdata.png?name=Nitro&title=Alwaysdata&description=Deploy+Nitro+apps+to+alwaysdata.", "og:image:alt": "Deploy Nitro apps to alwaysdata.", "twitter:image": "https://nitro.build/_og/deploy/providers/alwaysdata.png?name=Nitro&title=Alwaysdata&description=Deploy+Nitro+apps+to+alwaysdata.", "ogImage": "https://nitro.build/_og/deploy/providers/alwaysdata.png?name=Nitro&title=Alwaysdata&description=Deploy+Nitro+apps+to+alwaysdata.", "og:image:width": "1200", "description": "Deploy Nitro apps to alwaysdata.", "og:image:height": "600", "twitter:image:width": "1200", "title": "Alwaysdata - Nitro", "twitter:image:alt": "Deploy Nitro apps to alwaysdata.", "favicon": "https://nitro.build/icon.svg", "og:image:type": "image/png", "viewport": "width=device-width, initial-scale=1", "twitter:image:height": "600", "scrapeId": "b863cc0d-29bb-4fa2-afe7-bfc9dda20b70", "sourceURL": "https://nitro.build/deploy/providers/alwaysdata", "url": "https://nitro.build/deploy/providers/alwaysdata", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: What are some tips for using Alwaysdata in nitro-deploy effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nChoose your account name wisely as it will be part of your default URL.\n\nEnsure your Node.js version is no less than 20.0.0.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://nitro.build/deploy/providers/alwaysdata", "title": "Alwaysdata", "description": "Deploy Nitro apps to alwaysdata.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 01:17:38", "type": "best_practices", "page_metadata": {"twitter:site": "@unjsio", "og:image": "https://nitro.build/_og/deploy/providers/alwaysdata.png?name=Nitro&title=Alwaysdata&description=Deploy+Nitro+apps+to+alwaysdata.", "og:image:alt": "Deploy Nitro apps to alwaysdata.", "twitter:image": "https://nitro.build/_og/deploy/providers/alwaysdata.png?name=Nitro&title=Alwaysdata&description=Deploy+Nitro+apps+to+alwaysdata.", "ogImage": "https://nitro.build/_og/deploy/providers/alwaysdata.png?name=Nitro&title=Alwaysdata&description=Deploy+Nitro+apps+to+alwaysdata.", "og:image:width": "1200", "description": "Deploy Nitro apps to alwaysdata.", "og:image:height": "600", "twitter:image:width": "1200", "title": "Alwaysdata - Nitro", "twitter:image:alt": "Deploy Nitro apps to alwaysdata.", "favicon": "https://nitro.build/icon.svg", "og:image:type": "image/png", "viewport": "width=device-width, initial-scale=1", "twitter:image:height": "600", "scrapeId": "b863cc0d-29bb-4fa2-afe7-bfc9dda20b70", "sourceURL": "https://nitro.build/deploy/providers/alwaysdata", "url": "https://nitro.build/deploy/providers/alwaysdata", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: Can you explain what Deno is in nitro-deploy?\n\nAssistant: Sure, I'd be happy to explain Deno in nitro-deploy.\n\n# Deno\n\nRun Nitro apps with Deno runtime.Here's a quick rundown of what this is about:\n\n## On this page\n\n**Preset:** `deno_server`\n\nYou can build your Nitro server using Node.js to run within [Deno Runtime](https://deno.com/runtime) in a custom server.\n\n## Code Examples\n\n```\n# Build with the deno NITRO preset\nNITRO_PRESET=deno_server npm run build\n\n# Start production server\ndeno run --unstable --allow-net --allow-read --allow-env .output/server/index.ts\n```\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://nitro.build/deploy/runtimes/deno", "title": "Deno", "description": "Run Nitro apps with Deno runtime.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 01:17:49", "type": "overview", "page_metadata": {"twitter:site": "@unjsio", "viewport": "width=device-width, initial-scale=1", "description": "Run Nitro apps with Deno runtime.", "og:image": "https://nitro.build/_og/deploy/runtimes/deno.png?name=Nitro&title=Deno&description=Run+Nitro+apps+with+Deno+runtime.", "og:image:alt": "Run Nitro apps with Deno runtime.", "og:image:height": "600", "twitter:image:width": "1200", "title": "Deno - Nitro", "twitter:image:height": "600", "og:image:type": "image/png", "twitter:image": "https://nitro.build/_og/deploy/runtimes/deno.png?name=Nitro&title=Deno&description=Run+Nitro+apps+with+Deno+runtime.", "ogImage": "https://nitro.build/_og/deploy/runtimes/deno.png?name=Nitro&title=Deno&description=Run+Nitro+apps+with+Deno+runtime.", "og:image:width": "1200", "twitter:image:alt": "Run Nitro apps with Deno runtime.", "favicon": "https://nitro.build/icon.svg", "scrapeId": "99451b25-a76d-4fa8-aad8-8f671e7b9f2f", "sourceURL": "https://nitro.build/deploy/runtimes/deno", "url": "https://nitro.build/deploy/runtimes/deno", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: How do I on this page in nitro-deploy?\n\nAssistant: To on this page in nitro-deploy, here's what you do:\n**Preset:** `deno_server`\n\nYou can build your Nitro server using Node.js to run within [Deno Runtime](https://deno.com/runtime) in a custom server..\nPretty straightforward, right?", "metadata": {"source_url": "https://nitro.build/deploy/runtimes/deno", "title": "Deno", "description": "Run Nitro apps with Deno runtime.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 01:17:49", "type": "section_detail", "page_metadata": {"twitter:site": "@unjsio", "viewport": "width=device-width, initial-scale=1", "description": "Run Nitro apps with Deno runtime.", "og:image": "https://nitro.build/_og/deploy/runtimes/deno.png?name=Nitro&title=Deno&description=Run+Nitro+apps+with+Deno+runtime.", "og:image:alt": "Run Nitro apps with Deno runtime.", "og:image:height": "600", "twitter:image:width": "1200", "title": "Deno - Nitro", "twitter:image:height": "600", "og:image:type": "image/png", "twitter:image": "https://nitro.build/_og/deploy/runtimes/deno.png?name=Nitro&title=Deno&description=Run+Nitro+apps+with+Deno+runtime.", "ogImage": "https://nitro.build/_og/deploy/runtimes/deno.png?name=Nitro&title=Deno&description=Run+Nitro+apps+with+Deno+runtime.", "og:image:width": "1200", "twitter:image:alt": "Run Nitro apps with Deno runtime.", "favicon": "https://nitro.build/icon.svg", "scrapeId": "99451b25-a76d-4fa8-aad8-8f671e7b9f2f", "sourceURL": "https://nitro.build/deploy/runtimes/deno", "url": "https://nitro.build/deploy/runtimes/deno", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: How do I code examples in nitro-deploy?\n\nAssistant: To code examples in nitro-deploy, here's what you do:\n```\n# Build with the deno NITRO preset\nNITRO_PRESET=deno_server npm run build\n\n# Start production server\ndeno run --unstable --allow-net --allow-read --allow-env .output/server/index.ts\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://nitro.build/deploy/runtimes/deno", "title": "Deno", "description": "Run Nitro apps with Deno runtime.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 01:17:49", "type": "section_detail", "page_metadata": {"twitter:site": "@unjsio", "viewport": "width=device-width, initial-scale=1", "description": "Run Nitro apps with Deno runtime.", "og:image": "https://nitro.build/_og/deploy/runtimes/deno.png?name=Nitro&title=Deno&description=Run+Nitro+apps+with+Deno+runtime.", "og:image:alt": "Run Nitro apps with Deno runtime.", "og:image:height": "600", "twitter:image:width": "1200", "title": "Deno - Nitro", "twitter:image:height": "600", "og:image:type": "image/png", "twitter:image": "https://nitro.build/_og/deploy/runtimes/deno.png?name=Nitro&title=Deno&description=Run+Nitro+apps+with+Deno+runtime.", "ogImage": "https://nitro.build/_og/deploy/runtimes/deno.png?name=Nitro&title=Deno&description=Run+Nitro+apps+with+Deno+runtime.", "og:image:width": "1200", "twitter:image:alt": "Run Nitro apps with Deno runtime.", "favicon": "https://nitro.build/icon.svg", "scrapeId": "99451b25-a76d-4fa8-aad8-8f671e7b9f2f", "sourceURL": "https://nitro.build/deploy/runtimes/deno", "url": "https://nitro.build/deploy/runtimes/deno", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: Can you give me some code examples for Deno in nitro-deploy?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Build and Start Deno Nitro Server**:\n\n```yaml\n# Build with the deno NITRO preset\nNITRO_PRESET=deno_server npm run build\n\n# Start production server\ndeno run --unstable --allow-net --allow-read --allow-env .output/server/index.ts\n```\n\nThis snippet shows you how to build and start deno nitro server, which is an important aspect of deno.\n\n", "metadata": {"source_url": "https://nitro.build/deploy/runtimes/deno", "title": "Deno", "description": "Run Nitro apps with Deno runtime.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 01:17:49", "type": "code_examples", "page_metadata": {"twitter:site": "@unjsio", "viewport": "width=device-width, initial-scale=1", "description": "Run Nitro apps with Deno runtime.", "og:image": "https://nitro.build/_og/deploy/runtimes/deno.png?name=Nitro&title=Deno&description=Run+Nitro+apps+with+Deno+runtime.", "og:image:alt": "Run Nitro apps with Deno runtime.", "og:image:height": "600", "twitter:image:width": "1200", "title": "Deno - Nitro", "twitter:image:height": "600", "og:image:type": "image/png", "twitter:image": "https://nitro.build/_og/deploy/runtimes/deno.png?name=Nitro&title=Deno&description=Run+Nitro+apps+with+Deno+runtime.", "ogImage": "https://nitro.build/_og/deploy/runtimes/deno.png?name=Nitro&title=Deno&description=Run+Nitro+apps+with+Deno+runtime.", "og:image:width": "1200", "twitter:image:alt": "Run Nitro apps with Deno runtime.", "favicon": "https://nitro.build/icon.svg", "scrapeId": "99451b25-a76d-4fa8-aad8-8f671e7b9f2f", "sourceURL": "https://nitro.build/deploy/runtimes/deno", "url": "https://nitro.build/deploy/runtimes/deno", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: What are some tips for using Deno in nitro-deploy effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nRead more in Deploy > Providers > Deno Deploy.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://nitro.build/deploy/runtimes/deno", "title": "Deno", "description": "Run Nitro apps with Deno runtime.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 01:17:49", "type": "best_practices", "page_metadata": {"twitter:site": "@unjsio", "viewport": "width=device-width, initial-scale=1", "description": "Run Nitro apps with Deno runtime.", "og:image": "https://nitro.build/_og/deploy/runtimes/deno.png?name=Nitro&title=Deno&description=Run+Nitro+apps+with+Deno+runtime.", "og:image:alt": "Run Nitro apps with Deno runtime.", "og:image:height": "600", "twitter:image:width": "1200", "title": "Deno - Nitro", "twitter:image:height": "600", "og:image:type": "image/png", "twitter:image": "https://nitro.build/_og/deploy/runtimes/deno.png?name=Nitro&title=Deno&description=Run+Nitro+apps+with+Deno+runtime.", "ogImage": "https://nitro.build/_og/deploy/runtimes/deno.png?name=Nitro&title=Deno&description=Run+Nitro+apps+with+Deno+runtime.", "og:image:width": "1200", "twitter:image:alt": "Run Nitro apps with Deno runtime.", "favicon": "https://nitro.build/icon.svg", "scrapeId": "99451b25-a76d-4fa8-aad8-8f671e7b9f2f", "sourceURL": "https://nitro.build/deploy/runtimes/deno", "url": "https://nitro.build/deploy/runtimes/deno", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: Can you explain what Genezio is in nitro-deploy?\n\nAssistant: Sure, I'd be happy to explain Genezio in nitro-deploy.\n\n# Genezio\n\nDeploy Nitro apps to Genezio.Here's a quick rundown of what this is about:\n\n## 1. Project Setup\n\nCreate `genezio.yaml` file:\n\n```\n# The name of the project.\nname: nitro-app\n# The version of the Genezio YAML configuration to parse.\nyamlVersion: 2\nbackend:\n  # The root directory of the backend.\n  path: .output/\n  # Information about the backend's programming language.\n  language:\n      # The name of the programming language.\n      name: js\n      # The package manager used by the backend.\n      packageManager: npm\n  # Information about the backend's functions.\n  functions:\n      # The name (label) of the function.\n      - name: nitroServer\n      # The path to the function's code.\n        path: server/\n        # The name of the function handler\n        handler: handler\n        # The entry point for the function.\n        entry: index.mjs\n```\n\nTo further customize the file to your needs, you can consult the [official documentation](https://genezio.com/docs/project-structure/genezio-configuration-file/).\n\n## 2. Deploy your project\n\nBuild with the genezio nitro preset:\n\n```\nNITRO_PRESET=genezio npm run build\n```\n\nDeploy with [`genezio`](https://npmjs.com/package/genezio) cli:\n\n```\nnpx genezio deploy\n```\n\nTo set environment variables, please check out [Genezio - Environment Variables](https://genezio.com/docs/project-structure/backend-environment-variables).\n\n## 3. Monitor your project\n\nYou can monitor and manage your application through the [Genezio App Dashboard](https://app.genez.io/dashboard). The dashboard URL, also provided after deployment, allows you to access comprehensive views of your project's status and logs.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://nitro.build/deploy/providers/genezio", "title": "Genezio", "description": "Deploy Nitro apps to Genezio.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 01:18:31", "type": "overview", "page_metadata": {"favicon": "https://nitro.build/icon.svg", "twitter:site": "@unjsio", "viewport": "width=device-width, initial-scale=1", "og:image:width": "1200", "og:image:height": "600", "twitter:image:height": "600", "ogImage": "https://nitro.build/_og/deploy/providers/genezio.png?name=Nitro&title=Genezio&description=Deploy+Nitro+apps+to+Genezio.", "description": "Deploy Nitro apps to Genezio.", "og:image:type": "image/png", "twitter:image": "https://nitro.build/_og/deploy/providers/genezio.png?name=Nitro&title=Genezio&description=Deploy+Nitro+apps+to+Genezio.", "twitter:image:alt": "Deploy Nitro apps to Genezio.", "twitter:image:width": "1200", "title": "Genezio - Nitro", "og:image": "https://nitro.build/_og/deploy/providers/genezio.png?name=Nitro&title=Genezio&description=Deploy+Nitro+apps+to+Genezio.", "og:image:alt": "Deploy Nitro apps to Genezio.", "scrapeId": "a30ac76b-992a-4b9c-b47f-078471b8688c", "sourceURL": "https://nitro.build/deploy/providers/genezio", "url": "https://nitro.build/deploy/providers/genezio", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: How do I 1. project setup in nitro-deploy?\n\nAssistant: To 1. project setup in nitro-deploy, here's what you do:\nCreate `genezio.yaml` file:\n\n```\n# The name of the project.\nname: nitro-app\n# The version of the Genezio YAML configuration to parse.\nyamlVersion: 2\nbackend:\n  # The root directory of the backend.\n  path: .output/\n  # Information about the backend's programming language.\n  language:\n      # The name of the programming language.\n      name: js\n      # The package manager used by the backend.\n      packageManager: npm\n  # Information about the backend's functions.\n  functions:\n      # The name (label) of the function.\n      - name: nitroServer\n      # The path to the function's code.\n        path: server/\n        # The name of the function handler\n        handler: handler\n        # The entry point for the function.\n        entry: index.mjs\n```\n\nTo further customize the file to your needs, you can consult the [official documentation](https://genezio.com/docs/project-structure/genezio-configuration-file/)..\nPretty straightforward, right?", "metadata": {"source_url": "https://nitro.build/deploy/providers/genezio", "title": "Genezio", "description": "Deploy Nitro apps to Genezio.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 01:18:31", "type": "section_detail", "page_metadata": {"favicon": "https://nitro.build/icon.svg", "twitter:site": "@unjsio", "viewport": "width=device-width, initial-scale=1", "og:image:width": "1200", "og:image:height": "600", "twitter:image:height": "600", "ogImage": "https://nitro.build/_og/deploy/providers/genezio.png?name=Nitro&title=Genezio&description=Deploy+Nitro+apps+to+Genezio.", "description": "Deploy Nitro apps to Genezio.", "og:image:type": "image/png", "twitter:image": "https://nitro.build/_og/deploy/providers/genezio.png?name=Nitro&title=Genezio&description=Deploy+Nitro+apps+to+Genezio.", "twitter:image:alt": "Deploy Nitro apps to Genezio.", "twitter:image:width": "1200", "title": "Genezio - Nitro", "og:image": "https://nitro.build/_og/deploy/providers/genezio.png?name=Nitro&title=Genezio&description=Deploy+Nitro+apps+to+Genezio.", "og:image:alt": "Deploy Nitro apps to Genezio.", "scrapeId": "a30ac76b-992a-4b9c-b47f-078471b8688c", "sourceURL": "https://nitro.build/deploy/providers/genezio", "url": "https://nitro.build/deploy/providers/genezio", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: How do I 2. deploy your project in nitro-deploy?\n\nAssistant: To 2. deploy your project in nitro-deploy, here's what you do:\nBuild with the genezio nitro preset:\n\n```\nNITRO_PRESET=genezio npm run build\n```\n\nDeploy with [`genezio`](https://npmjs.com/package/genezio) cli:\n\n```\nnpx genezio deploy\n```\n\nTo set environment variables, please check out [Genezio - Environment Variables](https://genezio.com/docs/project-structure/backend-environment-variables)..\nPretty straightforward, right?", "metadata": {"source_url": "https://nitro.build/deploy/providers/genezio", "title": "Genezio", "description": "Deploy Nitro apps to Genezio.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 01:18:31", "type": "section_detail", "page_metadata": {"favicon": "https://nitro.build/icon.svg", "twitter:site": "@unjsio", "viewport": "width=device-width, initial-scale=1", "og:image:width": "1200", "og:image:height": "600", "twitter:image:height": "600", "ogImage": "https://nitro.build/_og/deploy/providers/genezio.png?name=Nitro&title=Genezio&description=Deploy+Nitro+apps+to+Genezio.", "description": "Deploy Nitro apps to Genezio.", "og:image:type": "image/png", "twitter:image": "https://nitro.build/_og/deploy/providers/genezio.png?name=Nitro&title=Genezio&description=Deploy+Nitro+apps+to+Genezio.", "twitter:image:alt": "Deploy Nitro apps to Genezio.", "twitter:image:width": "1200", "title": "Genezio - Nitro", "og:image": "https://nitro.build/_og/deploy/providers/genezio.png?name=Nitro&title=Genezio&description=Deploy+Nitro+apps+to+Genezio.", "og:image:alt": "Deploy Nitro apps to Genezio.", "scrapeId": "a30ac76b-992a-4b9c-b47f-078471b8688c", "sourceURL": "https://nitro.build/deploy/providers/genezio", "url": "https://nitro.build/deploy/providers/genezio", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: How do I 3. monitor your project in nitro-deploy?\n\nAssistant: To 3. monitor your project in nitro-deploy, here's what you do:\nYou can monitor and manage your application through the [Genezio App Dashboard](https://app.genez.io/dashboard). The dashboard URL, also provided after deployment, allows you to access comprehensive views of your project's status and logs..\nPretty straightforward, right?", "metadata": {"source_url": "https://nitro.build/deploy/providers/genezio", "title": "Genezio", "description": "Deploy Nitro apps to Genezio.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 01:18:31", "type": "section_detail", "page_metadata": {"favicon": "https://nitro.build/icon.svg", "twitter:site": "@unjsio", "viewport": "width=device-width, initial-scale=1", "og:image:width": "1200", "og:image:height": "600", "twitter:image:height": "600", "ogImage": "https://nitro.build/_og/deploy/providers/genezio.png?name=Nitro&title=Genezio&description=Deploy+Nitro+apps+to+Genezio.", "description": "Deploy Nitro apps to Genezio.", "og:image:type": "image/png", "twitter:image": "https://nitro.build/_og/deploy/providers/genezio.png?name=Nitro&title=Genezio&description=Deploy+Nitro+apps+to+Genezio.", "twitter:image:alt": "Deploy Nitro apps to Genezio.", "twitter:image:width": "1200", "title": "Genezio - Nitro", "og:image": "https://nitro.build/_og/deploy/providers/genezio.png?name=Nitro&title=Genezio&description=Deploy+Nitro+apps+to+Genezio.", "og:image:alt": "Deploy Nitro apps to Genezio.", "scrapeId": "a30ac76b-992a-4b9c-b47f-078471b8688c", "sourceURL": "https://nitro.build/deploy/providers/genezio", "url": "https://nitro.build/deploy/providers/genezio", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: Can you give me some code examples for Genezio in nitro-deploy?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Genezio YAML Configuration**:\n\n```yaml\n# The name of the project.\nname: nitro-app\n# The version of the Genezio YAML configuration to parse.\nyamlVersion: 2\nbackend:\n  # The root directory of the backend.\n  path: .output/\n  # Information about the backend's programming language.\n  language:\n      # The name of the programming language.\n      name: js\n      # The package manager used by the backend.\n      packageManager: npm\n  # Information about the backend's functions.\n  functions:\n      # The name (label) of the function.\n      - name: nitroServer\n      # The path to the function's code.\n        path: server/\n        # The name of the function handler\n        handler: handler\n        # The entry point for the function.\n        entry: index.mjs\n```\n\nThis snippet shows you how to genezio yaml configuration, which is an important aspect of genezio.\n\n", "metadata": {"source_url": "https://nitro.build/deploy/providers/genezio", "title": "Genezio", "description": "Deploy Nitro apps to Genezio.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 01:18:31", "type": "code_examples", "page_metadata": {"favicon": "https://nitro.build/icon.svg", "twitter:site": "@unjsio", "viewport": "width=device-width, initial-scale=1", "og:image:width": "1200", "og:image:height": "600", "twitter:image:height": "600", "ogImage": "https://nitro.build/_og/deploy/providers/genezio.png?name=Nitro&title=Genezio&description=Deploy+Nitro+apps+to+Genezio.", "description": "Deploy Nitro apps to Genezio.", "og:image:type": "image/png", "twitter:image": "https://nitro.build/_og/deploy/providers/genezio.png?name=Nitro&title=Genezio&description=Deploy+Nitro+apps+to+Genezio.", "twitter:image:alt": "Deploy Nitro apps to Genezio.", "twitter:image:width": "1200", "title": "Genezio - Nitro", "og:image": "https://nitro.build/_og/deploy/providers/genezio.png?name=Nitro&title=Genezio&description=Deploy+Nitro+apps+to+Genezio.", "og:image:alt": "Deploy Nitro apps to Genezio.", "scrapeId": "a30ac76b-992a-4b9c-b47f-078471b8688c", "sourceURL": "https://nitro.build/deploy/providers/genezio", "url": "https://nitro.build/deploy/providers/genezio", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: What are some tips for using Genezio in nitro-deploy effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nThis preset is currently experimental.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://nitro.build/deploy/providers/genezio", "title": "Genezio", "description": "Deploy Nitro apps to Genezio.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 01:18:31", "type": "best_practices", "page_metadata": {"favicon": "https://nitro.build/icon.svg", "twitter:site": "@unjsio", "viewport": "width=device-width, initial-scale=1", "og:image:width": "1200", "og:image:height": "600", "twitter:image:height": "600", "ogImage": "https://nitro.build/_og/deploy/providers/genezio.png?name=Nitro&title=Genezio&description=Deploy+Nitro+apps+to+Genezio.", "description": "Deploy Nitro apps to Genezio.", "og:image:type": "image/png", "twitter:image": "https://nitro.build/_og/deploy/providers/genezio.png?name=Nitro&title=Genezio&description=Deploy+Nitro+apps+to+Genezio.", "twitter:image:alt": "Deploy Nitro apps to Genezio.", "twitter:image:width": "1200", "title": "Genezio - Nitro", "og:image": "https://nitro.build/_og/deploy/providers/genezio.png?name=Nitro&title=Genezio&description=Deploy+Nitro+apps+to+Genezio.", "og:image:alt": "Deploy Nitro apps to Genezio.", "scrapeId": "a30ac76b-992a-4b9c-b47f-078471b8688c", "sourceURL": "https://nitro.build/deploy/providers/genezio", "url": "https://nitro.build/deploy/providers/genezio", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: Can you explain what StormKit is in nitro-deploy?\n\nAssistant: Sure, I'd be happy to explain StormKit in nitro-deploy.\n\n# StormKit\n\nDeploy Nitro apps to StormKit.Here's a quick rundown of what this is about:\n\n## Setup\n\nFollow the steps to [create a new app](https://app.stormkit.io/apps/new) on Stormkit.\n\n![Create a new app on Stormkit](https://nitro.build/images/stormkit-new-app.png)\n\n## Deployment\n\nBy default, Stormkit will deploy your apps automatically when you push changes to your main branch. But to trigger a manual deploy (for example, you might do this for the very first deployment), you may click `Deploy now`.\n\n![Trigger a manual deploy with Deploy Now](https://nitro.build/images/stormkit-deploy.png)\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://nitro.build/deploy/providers/stormkit", "title": "StormKit", "description": "Deploy Nitro apps to StormKit.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 01:18:39", "type": "overview", "page_metadata": {"favicon": "https://nitro.build/icon.svg", "og:image:width": "1200", "og:image:type": "image/png", "twitter:image:width": "1200", "og:image": "https://nitro.build/_og/deploy/providers/stormkit.png?name=Nitro&title=StormKit&description=Deploy+Nitro+apps+to+StormKit.", "twitter:site": "@unjsio", "viewport": "width=device-width, initial-scale=1", "description": "Deploy Nitro apps to StormKit.", "og:image:alt": "Deploy Nitro apps to StormKit.", "og:image:height": "600", "ogImage": "https://nitro.build/_og/deploy/providers/stormkit.png?name=Nitro&title=StormKit&description=Deploy+Nitro+apps+to+StormKit.", "twitter:image:height": "600", "twitter:image:alt": "Deploy Nitro apps to StormKit.", "title": "StormKit - Nitro", "twitter:image": "https://nitro.build/_og/deploy/providers/stormkit.png?name=Nitro&title=StormKit&description=Deploy+Nitro+apps+to+StormKit.", "scrapeId": "629e11cd-f25a-455a-bbda-63ecf436b97e", "sourceURL": "https://nitro.build/deploy/providers/stormkit", "url": "https://nitro.build/deploy/providers/stormkit", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: How do I setup in nitro-deploy?\n\nAssistant: To setup in nitro-deploy, here's what you do:\nFollow the steps to [create a new app](https://app.stormkit.io/apps/new) on Stormkit.\n\n![Create a new app on Stormkit](https://nitro.build/images/stormkit-new-app.png).\nPretty straightforward, right?", "metadata": {"source_url": "https://nitro.build/deploy/providers/stormkit", "title": "StormKit", "description": "Deploy Nitro apps to StormKit.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 01:18:39", "type": "section_detail", "page_metadata": {"favicon": "https://nitro.build/icon.svg", "og:image:width": "1200", "og:image:type": "image/png", "twitter:image:width": "1200", "og:image": "https://nitro.build/_og/deploy/providers/stormkit.png?name=Nitro&title=StormKit&description=Deploy+Nitro+apps+to+StormKit.", "twitter:site": "@unjsio", "viewport": "width=device-width, initial-scale=1", "description": "Deploy Nitro apps to StormKit.", "og:image:alt": "Deploy Nitro apps to StormKit.", "og:image:height": "600", "ogImage": "https://nitro.build/_og/deploy/providers/stormkit.png?name=Nitro&title=StormKit&description=Deploy+Nitro+apps+to+StormKit.", "twitter:image:height": "600", "twitter:image:alt": "Deploy Nitro apps to StormKit.", "title": "StormKit - Nitro", "twitter:image": "https://nitro.build/_og/deploy/providers/stormkit.png?name=Nitro&title=StormKit&description=Deploy+Nitro+apps+to+StormKit.", "scrapeId": "629e11cd-f25a-455a-bbda-63ecf436b97e", "sourceURL": "https://nitro.build/deploy/providers/stormkit", "url": "https://nitro.build/deploy/providers/stormkit", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: How do I deployment in nitro-deploy?\n\nAssistant: To deployment in nitro-deploy, here's what you do:\nBy default, Stormkit will deploy your apps automatically when you push changes to your main branch. But to trigger a manual deploy (for example, you might do this for the very first deployment), you may click `Deploy now`.\n\n![Trigger a manual deploy with Deploy Now](https://nitro.build/images/stormkit-deploy.png).\nPretty straightforward, right?", "metadata": {"source_url": "https://nitro.build/deploy/providers/stormkit", "title": "StormKit", "description": "Deploy Nitro apps to StormKit.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 01:18:39", "type": "section_detail", "page_metadata": {"favicon": "https://nitro.build/icon.svg", "og:image:width": "1200", "og:image:type": "image/png", "twitter:image:width": "1200", "og:image": "https://nitro.build/_og/deploy/providers/stormkit.png?name=Nitro&title=StormKit&description=Deploy+Nitro+apps+to+StormKit.", "twitter:site": "@unjsio", "viewport": "width=device-width, initial-scale=1", "description": "Deploy Nitro apps to StormKit.", "og:image:alt": "Deploy Nitro apps to StormKit.", "og:image:height": "600", "ogImage": "https://nitro.build/_og/deploy/providers/stormkit.png?name=Nitro&title=StormKit&description=Deploy+Nitro+apps+to+StormKit.", "twitter:image:height": "600", "twitter:image:alt": "Deploy Nitro apps to StormKit.", "title": "StormKit - Nitro", "twitter:image": "https://nitro.build/_og/deploy/providers/stormkit.png?name=Nitro&title=StormKit&description=Deploy+Nitro+apps+to+StormKit.", "scrapeId": "629e11cd-f25a-455a-bbda-63ecf436b97e", "sourceURL": "https://nitro.build/deploy/providers/stormkit", "url": "https://nitro.build/deploy/providers/stormkit", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: What are some tips for using StormKit in nitro-deploy effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nIntegration with Stormkit is possible with zero configuration.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://nitro.build/deploy/providers/stormkit", "title": "StormKit", "description": "Deploy Nitro apps to StormKit.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 01:18:39", "type": "best_practices", "page_metadata": {"favicon": "https://nitro.build/icon.svg", "og:image:width": "1200", "og:image:type": "image/png", "twitter:image:width": "1200", "og:image": "https://nitro.build/_og/deploy/providers/stormkit.png?name=Nitro&title=StormKit&description=Deploy+Nitro+apps+to+StormKit.", "twitter:site": "@unjsio", "viewport": "width=device-width, initial-scale=1", "description": "Deploy Nitro apps to StormKit.", "og:image:alt": "Deploy Nitro apps to StormKit.", "og:image:height": "600", "ogImage": "https://nitro.build/_og/deploy/providers/stormkit.png?name=Nitro&title=StormKit&description=Deploy+Nitro+apps+to+StormKit.", "twitter:image:height": "600", "twitter:image:alt": "Deploy Nitro apps to StormKit.", "title": "StormKit - Nitro", "twitter:image": "https://nitro.build/_og/deploy/providers/stormkit.png?name=Nitro&title=StormKit&description=Deploy+Nitro+apps+to+StormKit.", "scrapeId": "629e11cd-f25a-455a-bbda-63ecf436b97e", "sourceURL": "https://nitro.build/deploy/providers/stormkit", "url": "https://nitro.build/deploy/providers/stormkit", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: Can you explain what Render.com is in nitro-deploy?\n\nAssistant: Sure, I'd be happy to explain Render.com in nitro-deploy.\n\n# Render.com\n\nDeploy Nitro apps to Render.com.Here's a quick rundown of what this is about:\n\n## Set up application\n\n1. [Create a new Web Service](https://dashboard.render.com/select-repo?type=web) and select the repository that contains your code.\n2. Ensure the 'Node' environment is selected.\n3. Update the start command to `node .output/server/index.mjs`\n4. Click 'Advanced' and add an environment variable with `NITRO_PRESET` set to `render_com`. You may also need to add a `NODE_VERSION` environment variable set to `18` for the build to succeed ( [docs](https://render.com/docs/node-version)).\n5. Click 'Create Web Service'.\n\n## Infrastructure as Code (IaC)\n\n1. Create a file called `render.yaml` with following content at the root of your repository.\n\n> This file followed by [Infrastructure as Code](https://render.com/docs/infrastructure-as-code) on Render\n\n```\nservices:\n  - type: web\n    name: <PROJECTNAME>\n    env: node\n    branch: main\n    startCommand: node .output/server/index.mjs\n    buildCommand: npx nypm install && npm run build\n    envVars:\n    - key: NITRO_PRESET\n      value: render_com\n```\n\n1. [Create a new Blueprint Instance](https://dashboard.render.com/select-repo?type=blueprint) and select the repository containing your `render.yaml` file.\n\nYou should be good to go!\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://nitro.build/deploy/providers/render", "title": "Render.com", "description": "Deploy Nitro apps to Render.com.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 01:19:16", "type": "overview", "page_metadata": {"twitter:image:height": "600", "twitter:image": "https://nitro.build/_og/deploy/providers/render.png?name=Nitro&title=Render.com&description=Deploy+Nitro+apps+to+Render.com.", "title": "Render.com - Nitro", "description": "Deploy Nitro apps to Render.com.", "og:image:alt": "Deploy Nitro apps to Render.com.", "favicon": "https://nitro.build/icon.svg", "og:image:width": "1200", "ogImage": "https://nitro.build/_og/deploy/providers/render.png?name=Nitro&title=Render.com&description=Deploy+Nitro+apps+to+Render.com.", "og:image:height": "600", "viewport": "width=device-width, initial-scale=1", "twitter:image:width": "1200", "twitter:image:alt": "Deploy Nitro apps to Render.com.", "og:image": "https://nitro.build/_og/deploy/providers/render.png?name=Nitro&title=Render.com&description=Deploy+Nitro+apps+to+Render.com.", "og:image:type": "image/png", "twitter:site": "@unjsio", "scrapeId": "363fa823-c0e3-41a3-84eb-3078c9cb6d67", "sourceURL": "https://nitro.build/deploy/providers/render", "url": "https://nitro.build/deploy/providers/render", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: How do I set up application in nitro-deploy?\n\nAssistant: To set up application in nitro-deploy, here's what you do:\n1. [Create a new Web Service](https://dashboard.render.com/select-repo?type=web) and select the repository that contains your code.\n2. Ensure the 'Node' environment is selected.\n3. Update the start command to `node .output/server/index.mjs`\n4. Click 'Advanced' and add an environment variable with `NITRO_PRESET` set to `render_com`. You may also need to add a `NODE_VERSION` environment variable set to `18` for the build to succeed ( [docs](https://render.com/docs/node-version)).\n5. Click 'Create Web Service'..\nPretty straightforward, right?", "metadata": {"source_url": "https://nitro.build/deploy/providers/render", "title": "Render.com", "description": "Deploy Nitro apps to Render.com.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 01:19:16", "type": "section_detail", "page_metadata": {"twitter:image:height": "600", "twitter:image": "https://nitro.build/_og/deploy/providers/render.png?name=Nitro&title=Render.com&description=Deploy+Nitro+apps+to+Render.com.", "title": "Render.com - Nitro", "description": "Deploy Nitro apps to Render.com.", "og:image:alt": "Deploy Nitro apps to Render.com.", "favicon": "https://nitro.build/icon.svg", "og:image:width": "1200", "ogImage": "https://nitro.build/_og/deploy/providers/render.png?name=Nitro&title=Render.com&description=Deploy+Nitro+apps+to+Render.com.", "og:image:height": "600", "viewport": "width=device-width, initial-scale=1", "twitter:image:width": "1200", "twitter:image:alt": "Deploy Nitro apps to Render.com.", "og:image": "https://nitro.build/_og/deploy/providers/render.png?name=Nitro&title=Render.com&description=Deploy+Nitro+apps+to+Render.com.", "og:image:type": "image/png", "twitter:site": "@unjsio", "scrapeId": "363fa823-c0e3-41a3-84eb-3078c9cb6d67", "sourceURL": "https://nitro.build/deploy/providers/render", "url": "https://nitro.build/deploy/providers/render", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: How do I infrastructure as code (iac) in nitro-deploy?\n\nAssistant: To infrastructure as code (iac) in nitro-deploy, here's what you do:\n1. Create a file called `render.yaml` with following content at the root of your repository.\n\n> This file followed by [Infrastructure as Code](https://render.com/docs/infrastructure-as-code) on Render\n\n```\nservices:\n  - type: web\n    name: <PROJECTNAME>\n    env: node\n    branch: main\n    startCommand: node .output/server/index.mjs\n    buildCommand: npx nypm install && npm run build\n    envVars:\n    - key: NITRO_PRESET\n      value: render_com\n```\n\n1. [Create a new Blueprint Instance](https://dashboard.render.com/select-repo?type=blueprint) and select the repository containing your `render.yaml` file.\n\nYou should be good to go!.\nPretty straightforward, right?", "metadata": {"source_url": "https://nitro.build/deploy/providers/render", "title": "Render.com", "description": "Deploy Nitro apps to Render.com.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 01:19:16", "type": "section_detail", "page_metadata": {"twitter:image:height": "600", "twitter:image": "https://nitro.build/_og/deploy/providers/render.png?name=Nitro&title=Render.com&description=Deploy+Nitro+apps+to+Render.com.", "title": "Render.com - Nitro", "description": "Deploy Nitro apps to Render.com.", "og:image:alt": "Deploy Nitro apps to Render.com.", "favicon": "https://nitro.build/icon.svg", "og:image:width": "1200", "ogImage": "https://nitro.build/_og/deploy/providers/render.png?name=Nitro&title=Render.com&description=Deploy+Nitro+apps+to+Render.com.", "og:image:height": "600", "viewport": "width=device-width, initial-scale=1", "twitter:image:width": "1200", "twitter:image:alt": "Deploy Nitro apps to Render.com.", "og:image": "https://nitro.build/_og/deploy/providers/render.png?name=Nitro&title=Render.com&description=Deploy+Nitro+apps+to+Render.com.", "og:image:type": "image/png", "twitter:site": "@unjsio", "scrapeId": "363fa823-c0e3-41a3-84eb-3078c9cb6d67", "sourceURL": "https://nitro.build/deploy/providers/render", "url": "https://nitro.build/deploy/providers/render", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: Can you give me some code examples for Render.com in nitro-deploy?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Render.yaml example**:\n\n```yaml\nservices:\n  - type: web\n    name: <PROJECTNAME>\n    env: node\n    branch: main\n    startCommand: node .output/server/index.mjs\n    buildCommand: npx nypm install && npm run build\n    envVars:\n    - key: NITRO_PRESET\n      value: render_com\n```\n\nThis snippet shows you how to render.yaml example, which is an important aspect of render.com.\n\n", "metadata": {"source_url": "https://nitro.build/deploy/providers/render", "title": "Render.com", "description": "Deploy Nitro apps to Render.com.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 01:19:16", "type": "code_examples", "page_metadata": {"twitter:image:height": "600", "twitter:image": "https://nitro.build/_og/deploy/providers/render.png?name=Nitro&title=Render.com&description=Deploy+Nitro+apps+to+Render.com.", "title": "Render.com - Nitro", "description": "Deploy Nitro apps to Render.com.", "og:image:alt": "Deploy Nitro apps to Render.com.", "favicon": "https://nitro.build/icon.svg", "og:image:width": "1200", "ogImage": "https://nitro.build/_og/deploy/providers/render.png?name=Nitro&title=Render.com&description=Deploy+Nitro+apps+to+Render.com.", "og:image:height": "600", "viewport": "width=device-width, initial-scale=1", "twitter:image:width": "1200", "twitter:image:alt": "Deploy Nitro apps to Render.com.", "og:image": "https://nitro.build/_og/deploy/providers/render.png?name=Nitro&title=Render.com&description=Deploy+Nitro+apps+to+Render.com.", "og:image:type": "image/png", "twitter:site": "@unjsio", "scrapeId": "363fa823-c0e3-41a3-84eb-3078c9cb6d67", "sourceURL": "https://nitro.build/deploy/providers/render", "url": "https://nitro.build/deploy/providers/render", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: What are some tips for using Render.com in nitro-deploy effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nEnsure the 'Node' environment is selected when creating a new Web Service.\n\nAdd `NODE_VERSION` environment variable set to `18` for the build to succeed.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://nitro.build/deploy/providers/render", "title": "Render.com", "description": "Deploy Nitro apps to Render.com.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 01:19:16", "type": "best_practices", "page_metadata": {"twitter:image:height": "600", "twitter:image": "https://nitro.build/_og/deploy/providers/render.png?name=Nitro&title=Render.com&description=Deploy+Nitro+apps+to+Render.com.", "title": "Render.com - Nitro", "description": "Deploy Nitro apps to Render.com.", "og:image:alt": "Deploy Nitro apps to Render.com.", "favicon": "https://nitro.build/icon.svg", "og:image:width": "1200", "ogImage": "https://nitro.build/_og/deploy/providers/render.png?name=Nitro&title=Render.com&description=Deploy+Nitro+apps+to+Render.com.", "og:image:height": "600", "viewport": "width=device-width, initial-scale=1", "twitter:image:width": "1200", "twitter:image:alt": "Deploy Nitro apps to Render.com.", "og:image": "https://nitro.build/_og/deploy/providers/render.png?name=Nitro&title=Render.com&description=Deploy+Nitro+apps+to+Render.com.", "og:image:type": "image/png", "twitter:site": "@unjsio", "scrapeId": "363fa823-c0e3-41a3-84eb-3078c9cb6d67", "sourceURL": "https://nitro.build/deploy/providers/render", "url": "https://nitro.build/deploy/providers/render", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: Can you explain what Providers is in nitro-deploy?\n\nAssistant: Sure, I'd be happy to explain Providers in nitro-deploy.\n\n# Providers\n\nDeploy Nitro apps to various providers including Zeabur, Vercel, and Zerops.Here's a quick rundown of what this is about:\n\n## Zeabur\n\nDeploy Nitro apps to Zeabur.\n\nOn this page\n\n**Preset:** `zeabur`\n\nRead more in Zeabur.\n\nIntegration with this provider is possible with [zero configuration](https://nitro.build/deploy/#zero-config-providers).\n\n## Deploy using git\n\n1. Push your code to your git repository (Currently only GitHub supported).\n2. [Import your project](https://zeabur.com/docs/get-started) into Zeabur.\n3. Zeabur will detect that you are using Nitro and will enable the correct settings for your deployment.\n4. Your application is deployed!\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://nitro.build/deploy/providers/zeabur", "title": "Providers", "description": "Deploy Nitro apps to various providers including Zeabur, Vercel, and Zerops.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 01:19:51", "type": "overview", "page_metadata": {"twitter:image": "https://nitro.build/_og/deploy/providers/zeabur.png?name=Nitro&title=Zeabur&description=Deploy+Nitro+apps+to+Zeabur.", "title": "Zeabur - Nitro", "og:image:alt": "Deploy Nitro apps to Zeabur.", "og:image:width": "1200", "favicon": "https://nitro.build/icon.svg", "og:image:height": "600", "og:image:type": "image/png", "ogImage": "https://nitro.build/_og/deploy/providers/zeabur.png?name=Nitro&title=Zeabur&description=Deploy+Nitro+apps+to+Zeabur.", "twitter:site": "@unjsio", "twitter:image:width": "1200", "og:image": "https://nitro.build/_og/deploy/providers/zeabur.png?name=Nitro&title=Zeabur&description=Deploy+Nitro+apps+to+Zeabur.", "twitter:image:alt": "Deploy Nitro apps to Zeabur.", "description": "Deploy Nitro apps to Zeabur.", "twitter:image:height": "600", "viewport": "width=device-width, initial-scale=1", "scrapeId": "5d5a562e-c559-401d-b224-b783aec93c28", "sourceURL": "https://nitro.build/deploy/providers/zeabur", "url": "https://nitro.build/deploy/providers/zeabur", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: How do I zeabur in nitro-deploy?\n\nAssistant: To zeabur in nitro-deploy, here's what you do:\nDeploy Nitro apps to Zeabur.\n\nOn this page\n\n**Preset:** `zeabur`\n\nRead more in Zeabur.\n\nIntegration with this provider is possible with [zero configuration](https://nitro.build/deploy/#zero-config-providers)..\nPretty straightforward, right?", "metadata": {"source_url": "https://nitro.build/deploy/providers/zeabur", "title": "Providers", "description": "Deploy Nitro apps to various providers including Zeabur, Vercel, and Zerops.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 01:19:51", "type": "section_detail", "page_metadata": {"twitter:image": "https://nitro.build/_og/deploy/providers/zeabur.png?name=Nitro&title=Zeabur&description=Deploy+Nitro+apps+to+Zeabur.", "title": "Zeabur - Nitro", "og:image:alt": "Deploy Nitro apps to Zeabur.", "og:image:width": "1200", "favicon": "https://nitro.build/icon.svg", "og:image:height": "600", "og:image:type": "image/png", "ogImage": "https://nitro.build/_og/deploy/providers/zeabur.png?name=Nitro&title=Zeabur&description=Deploy+Nitro+apps+to+Zeabur.", "twitter:site": "@unjsio", "twitter:image:width": "1200", "og:image": "https://nitro.build/_og/deploy/providers/zeabur.png?name=Nitro&title=Zeabur&description=Deploy+Nitro+apps+to+Zeabur.", "twitter:image:alt": "Deploy Nitro apps to Zeabur.", "description": "Deploy Nitro apps to Zeabur.", "twitter:image:height": "600", "viewport": "width=device-width, initial-scale=1", "scrapeId": "5d5a562e-c559-401d-b224-b783aec93c28", "sourceURL": "https://nitro.build/deploy/providers/zeabur", "url": "https://nitro.build/deploy/providers/zeabur", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: How do I deploy using git in nitro-deploy?\n\nAssistant: To deploy using git in nitro-deploy, here's what you do:\n1. Push your code to your git repository (Currently only GitHub supported).\n2. [Import your project](https://zeabur.com/docs/get-started) into Zeabur.\n3. Zeabur will detect that you are using Nitro and will enable the correct settings for your deployment.\n4. Your application is deployed!.\nPretty straightforward, right?", "metadata": {"source_url": "https://nitro.build/deploy/providers/zeabur", "title": "Providers", "description": "Deploy Nitro apps to various providers including Zeabur, Vercel, and Zerops.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 01:19:51", "type": "section_detail", "page_metadata": {"twitter:image": "https://nitro.build/_og/deploy/providers/zeabur.png?name=Nitro&title=Zeabur&description=Deploy+Nitro+apps+to+Zeabur.", "title": "Zeabur - Nitro", "og:image:alt": "Deploy Nitro apps to Zeabur.", "og:image:width": "1200", "favicon": "https://nitro.build/icon.svg", "og:image:height": "600", "og:image:type": "image/png", "ogImage": "https://nitro.build/_og/deploy/providers/zeabur.png?name=Nitro&title=Zeabur&description=Deploy+Nitro+apps+to+Zeabur.", "twitter:site": "@unjsio", "twitter:image:width": "1200", "og:image": "https://nitro.build/_og/deploy/providers/zeabur.png?name=Nitro&title=Zeabur&description=Deploy+Nitro+apps+to+Zeabur.", "twitter:image:alt": "Deploy Nitro apps to Zeabur.", "description": "Deploy Nitro apps to Zeabur.", "twitter:image:height": "600", "viewport": "width=device-width, initial-scale=1", "scrapeId": "5d5a562e-c559-401d-b224-b783aec93c28", "sourceURL": "https://nitro.build/deploy/providers/zeabur", "url": "https://nitro.build/deploy/providers/zeabur", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: What are some tips for using Providers in nitro-deploy effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nIntegration with Zeabur is possible with zero configuration.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://nitro.build/deploy/providers/zeabur", "title": "Providers", "description": "Deploy Nitro apps to various providers including Zeabur, Vercel, and Zerops.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 01:19:51", "type": "best_practices", "page_metadata": {"twitter:image": "https://nitro.build/_og/deploy/providers/zeabur.png?name=Nitro&title=Zeabur&description=Deploy+Nitro+apps+to+Zeabur.", "title": "Zeabur - Nitro", "og:image:alt": "Deploy Nitro apps to Zeabur.", "og:image:width": "1200", "favicon": "https://nitro.build/icon.svg", "og:image:height": "600", "og:image:type": "image/png", "ogImage": "https://nitro.build/_og/deploy/providers/zeabur.png?name=Nitro&title=Zeabur&description=Deploy+Nitro+apps+to+Zeabur.", "twitter:site": "@unjsio", "twitter:image:width": "1200", "og:image": "https://nitro.build/_og/deploy/providers/zeabur.png?name=Nitro&title=Zeabur&description=Deploy+Nitro+apps+to+Zeabur.", "twitter:image:alt": "Deploy Nitro apps to Zeabur.", "description": "Deploy Nitro apps to Zeabur.", "twitter:image:height": "600", "viewport": "width=device-width, initial-scale=1", "scrapeId": "5d5a562e-c559-401d-b224-b783aec93c28", "sourceURL": "https://nitro.build/deploy/providers/zeabur", "url": "https://nitro.build/deploy/providers/zeabur", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: Can you explain what IIS is in nitro-deploy?\n\nAssistant: Sure, I'd be happy to explain IIS in nitro-deploy.\n\n# IIS\n\nDeploy Nitro apps to IIS.Here's a quick rundown of what this is about:\n\n## Using IISnode\n\n**Preset:** `iis_node`\n\n1. Install the latest LTS version of [Node.js](https://nodejs.org/en/) on your Windows Server.\n2. Install [IISnode](https://github.com/azure/iisnode/releases)\n3. Install [IIS `URLRewrite` Module](https://www.iis.net/downloads/microsoft/url-rewrite).\n4. In IIS, add `.mjs` as a new mime type and set its content type to `application/javascript`.\n5. Deploy the contents of your `.output` folder to your website in IIS.\n\n## Using IIS handler\n\n**Preset:** `iis_handler` / `iis`\n\nYou can use IIS http handler directly.\n\n1. Install the latest LTS version of [Node.js](https://nodejs.org/en/) on your Windows Server.\n2. Install [IIS `HttpPlatformHandler` Module](https://www.iis.net/downloads/microsoft/httpplatformhandler)\n3. Copy your `.output` directory into the Windows Server, and create a website on IIS pointing to that exact directory.\n\n## IIS config options\n\nnitro.config.tsnuxt.config.ts\n\n```\nexport default defineNitroConfig({\n  // IIS options default\n  iis: {\n    // merges in a pre-existing web.config file to the nitro default file\n    mergeConfig: true,\n    // overrides the default nitro web.config file all together\n    overrideConfig: false,\n  },\n});\n```\n\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://nitro.build/deploy/providers/iis", "title": "IIS", "description": "Deploy Nitro apps to IIS.", "has_code_examples": true, "has_best_practices": false, "section_count": 3, "timestamp": "2025-03-01 01:20:07", "type": "overview", "page_metadata": {"twitter:site": "@unjsio", "title": "IIS - Nitro", "description": "Deploy Nitro apps to IIS.", "og:image:alt": "Deploy Nitro apps to IIS.", "og:image:width": "1200", "og:image:type": "image/png", "og:image:height": "600", "og:image": "https://nitro.build/_og/deploy/providers/iis.png?name=Nitro&title=IIS&description=Deploy+Nitro+apps+to+IIS.", "ogImage": "https://nitro.build/_og/deploy/providers/iis.png?name=Nitro&title=IIS&description=Deploy+Nitro+apps+to+IIS.", "twitter:image:height": "600", "favicon": "https://nitro.build/icon.svg", "viewport": "width=device-width, initial-scale=1", "twitter:image": "https://nitro.build/_og/deploy/providers/iis.png?name=Nitro&title=IIS&description=Deploy+Nitro+apps+to+IIS.", "twitter:image:alt": "Deploy Nitro apps to IIS.", "twitter:image:width": "1200", "scrapeId": "680cc180-eafe-4111-a6be-5b008c689418", "sourceURL": "https://nitro.build/deploy/providers/iis", "url": "https://nitro.build/deploy/providers/iis", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: How do I using iisnode in nitro-deploy?\n\nAssistant: To using iisnode in nitro-deploy, here's what you do:\n**Preset:** `iis_node`\n\n1. Install the latest LTS version of [Node.js](https://nodejs.org/en/) on your Windows Server.\n2. Install [IISnode](https://github.com/azure/iisnode/releases)\n3. Install [IIS `URLRewrite` Module](https://www.iis.net/downloads/microsoft/url-rewrite).\n4. In IIS, add `.mjs` as a new mime type and set its content type to `application/javascript`.\n5. Deploy the contents of your `.output` folder to your website in IIS..\nPretty straightforward, right?", "metadata": {"source_url": "https://nitro.build/deploy/providers/iis", "title": "IIS", "description": "Deploy Nitro apps to IIS.", "has_code_examples": true, "has_best_practices": false, "section_count": 3, "timestamp": "2025-03-01 01:20:07", "type": "section_detail", "page_metadata": {"twitter:site": "@unjsio", "title": "IIS - Nitro", "description": "Deploy Nitro apps to IIS.", "og:image:alt": "Deploy Nitro apps to IIS.", "og:image:width": "1200", "og:image:type": "image/png", "og:image:height": "600", "og:image": "https://nitro.build/_og/deploy/providers/iis.png?name=Nitro&title=IIS&description=Deploy+Nitro+apps+to+IIS.", "ogImage": "https://nitro.build/_og/deploy/providers/iis.png?name=Nitro&title=IIS&description=Deploy+Nitro+apps+to+IIS.", "twitter:image:height": "600", "favicon": "https://nitro.build/icon.svg", "viewport": "width=device-width, initial-scale=1", "twitter:image": "https://nitro.build/_og/deploy/providers/iis.png?name=Nitro&title=IIS&description=Deploy+Nitro+apps+to+IIS.", "twitter:image:alt": "Deploy Nitro apps to IIS.", "twitter:image:width": "1200", "scrapeId": "680cc180-eafe-4111-a6be-5b008c689418", "sourceURL": "https://nitro.build/deploy/providers/iis", "url": "https://nitro.build/deploy/providers/iis", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: How do I using iis handler in nitro-deploy?\n\nAssistant: To using iis handler in nitro-deploy, here's what you do:\n**Preset:** `iis_handler` / `iis`\n\nYou can use IIS http handler directly.\n\n1. Install the latest LTS version of [Node.js](https://nodejs.org/en/) on your Windows Server.\n2. Install [IIS `HttpPlatformHandler` Module](https://www.iis.net/downloads/microsoft/httpplatformhandler)\n3. Copy your `.output` directory into the Windows Server, and create a website on IIS pointing to that exact directory..\nPretty straightforward, right?", "metadata": {"source_url": "https://nitro.build/deploy/providers/iis", "title": "IIS", "description": "Deploy Nitro apps to IIS.", "has_code_examples": true, "has_best_practices": false, "section_count": 3, "timestamp": "2025-03-01 01:20:07", "type": "section_detail", "page_metadata": {"twitter:site": "@unjsio", "title": "IIS - Nitro", "description": "Deploy Nitro apps to IIS.", "og:image:alt": "Deploy Nitro apps to IIS.", "og:image:width": "1200", "og:image:type": "image/png", "og:image:height": "600", "og:image": "https://nitro.build/_og/deploy/providers/iis.png?name=Nitro&title=IIS&description=Deploy+Nitro+apps+to+IIS.", "ogImage": "https://nitro.build/_og/deploy/providers/iis.png?name=Nitro&title=IIS&description=Deploy+Nitro+apps+to+IIS.", "twitter:image:height": "600", "favicon": "https://nitro.build/icon.svg", "viewport": "width=device-width, initial-scale=1", "twitter:image": "https://nitro.build/_og/deploy/providers/iis.png?name=Nitro&title=IIS&description=Deploy+Nitro+apps+to+IIS.", "twitter:image:alt": "Deploy Nitro apps to IIS.", "twitter:image:width": "1200", "scrapeId": "680cc180-eafe-4111-a6be-5b008c689418", "sourceURL": "https://nitro.build/deploy/providers/iis", "url": "https://nitro.build/deploy/providers/iis", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: How do I iis config options in nitro-deploy?\n\nAssistant: To iis config options in nitro-deploy, here's what you do:\nnitro.config.tsnuxt.config.ts\n\n```\nexport default defineNitroConfig({\n  // IIS options default\n  iis: {\n    // merges in a pre-existing web.config file to the nitro default file\n    mergeConfig: true,\n    // overrides the default nitro web.config file all together\n    overrideConfig: false,\n  },\n});\n```\n.\nPretty straightforward, right?", "metadata": {"source_url": "https://nitro.build/deploy/providers/iis", "title": "IIS", "description": "Deploy Nitro apps to IIS.", "has_code_examples": true, "has_best_practices": false, "section_count": 3, "timestamp": "2025-03-01 01:20:07", "type": "section_detail", "page_metadata": {"twitter:site": "@unjsio", "title": "IIS - Nitro", "description": "Deploy Nitro apps to IIS.", "og:image:alt": "Deploy Nitro apps to IIS.", "og:image:width": "1200", "og:image:type": "image/png", "og:image:height": "600", "og:image": "https://nitro.build/_og/deploy/providers/iis.png?name=Nitro&title=IIS&description=Deploy+Nitro+apps+to+IIS.", "ogImage": "https://nitro.build/_og/deploy/providers/iis.png?name=Nitro&title=IIS&description=Deploy+Nitro+apps+to+IIS.", "twitter:image:height": "600", "favicon": "https://nitro.build/icon.svg", "viewport": "width=device-width, initial-scale=1", "twitter:image": "https://nitro.build/_og/deploy/providers/iis.png?name=Nitro&title=IIS&description=Deploy+Nitro+apps+to+IIS.", "twitter:image:alt": "Deploy Nitro apps to IIS.", "twitter:image:width": "1200", "scrapeId": "680cc180-eafe-4111-a6be-5b008c689418", "sourceURL": "https://nitro.build/deploy/providers/iis", "url": "https://nitro.build/deploy/providers/iis", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: Can you give me some code examples for IIS in nitro-deploy?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**IIS config options example**:\n\n```yaml\nexport default defineNitroConfig({\n  // IIS options default\n  iis: {\n    // merges in a pre-existing web.config file to the nitro default file\n    mergeConfig: true,\n    // overrides the default nitro web.config file all together\n    overrideConfig: false,\n  },\n});\n```\n\nThis snippet shows you how to iis config options example, which is an important aspect of iis.\n\n", "metadata": {"source_url": "https://nitro.build/deploy/providers/iis", "title": "IIS", "description": "Deploy Nitro apps to IIS.", "has_code_examples": true, "has_best_practices": false, "section_count": 3, "timestamp": "2025-03-01 01:20:07", "type": "code_examples", "page_metadata": {"twitter:site": "@unjsio", "title": "IIS - Nitro", "description": "Deploy Nitro apps to IIS.", "og:image:alt": "Deploy Nitro apps to IIS.", "og:image:width": "1200", "og:image:type": "image/png", "og:image:height": "600", "og:image": "https://nitro.build/_og/deploy/providers/iis.png?name=Nitro&title=IIS&description=Deploy+Nitro+apps+to+IIS.", "ogImage": "https://nitro.build/_og/deploy/providers/iis.png?name=Nitro&title=IIS&description=Deploy+Nitro+apps+to+IIS.", "twitter:image:height": "600", "favicon": "https://nitro.build/icon.svg", "viewport": "width=device-width, initial-scale=1", "twitter:image": "https://nitro.build/_og/deploy/providers/iis.png?name=Nitro&title=IIS&description=Deploy+Nitro+apps+to+IIS.", "twitter:image:alt": "Deploy Nitro apps to IIS.", "twitter:image:width": "1200", "scrapeId": "680cc180-eafe-4111-a6be-5b008c689418", "sourceURL": "https://nitro.build/deploy/providers/iis", "url": "https://nitro.build/deploy/providers/iis", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: Can you explain what DigitalOcean is in nitro-deploy?\n\nAssistant: Sure, I'd be happy to explain DigitalOcean in nitro-deploy.\n\n# DigitalOcean\n\nDeploy Nitro apps to DigitalOcean.Here's a quick rundown of what this is about:\n\n## Set up application\n\n1. Create a new Digital Ocean app following the [guide](https://docs.digitalocean.com/products/app-platform/how-to/create-apps/).\n2. Next, you'll need to configure environment variables. In your app settings, ensure the following app-level environment variables are set:\n\n```\nNITRO_PRESET=digital_ocean\n```\n\n[More information](https://docs.digitalocean.com/products/app-platform/how-to/use-environment-variables/).\n3. You will need to ensure you set an `engines.node` field in your app's `package.json` to ensure Digital Ocean uses a supported version of Node.js:\n\n```\n{\n      \"engines\": {\n         \"node\": \"16.x\"\n      }\n}\n```\n\n[See more information](https://docs.digitalocean.com/products/app-platform/languages-frameworks/nodejs/#node-version).\n4. You'll also need to add a run command so Digital Ocean knows what command to run after a build. You can do so by adding a start script to your `package.json`:\n\n```\n{\n      \"scripts\": {\n         \"start\": \"node .output/server/index.mjs\"\n      }\n}\n```\n\n5. Finally, you'll need to add this start script to your Digital Ocean app's run command. Go to `Components > Settings > Commands`, click \"Edit\", then add `npm run start`\n\nYour app should be live at a Digital Ocean generated URL and you can now follow [the rest of the Digital Ocean deployment guide](https://docs.digitalocean.com/products/app-platform/how-to/manage-deployments/).\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://nitro.build/deploy/providers/digitalocean", "title": "DigitalOcean", "description": "Deploy Nitro apps to DigitalOcean.", "has_code_examples": true, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 01:20:37", "type": "overview", "page_metadata": {"twitter:image": "https://nitro.build/_og/deploy/providers/digitalocean.png?name=Nitro&title=DigitalOcean&description=Deploy+Nitro+apps+to+DigitalOcean.", "twitter:site": "@unjsio", "viewport": "width=device-width, initial-scale=1", "description": "Deploy Nitro apps to DigitalOcean.", "og:image:width": "1200", "og:image:alt": "Deploy Nitro apps to DigitalOcean.", "title": "DigitalOcean - Nitro", "ogImage": "https://nitro.build/_og/deploy/providers/digitalocean.png?name=Nitro&title=DigitalOcean&description=Deploy+Nitro+apps+to+DigitalOcean.", "twitter:image:width": "1200", "og:image:height": "600", "twitter:image:alt": "Deploy Nitro apps to DigitalOcean.", "og:image": "https://nitro.build/_og/deploy/providers/digitalocean.png?name=Nitro&title=DigitalOcean&description=Deploy+Nitro+apps+to+DigitalOcean.", "favicon": "https://nitro.build/icon.svg", "og:image:type": "image/png", "twitter:image:height": "600", "scrapeId": "73fe0eb8-4051-4247-8360-cb3fe71095d0", "sourceURL": "https://nitro.build/deploy/providers/digitalocean", "url": "https://nitro.build/deploy/providers/digitalocean", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: How do I set up application in nitro-deploy?\n\nAssistant: To set up application in nitro-deploy, here's what you do:\n1. Create a new Digital Ocean app following the [guide](https://docs.digitalocean.com/products/app-platform/how-to/create-apps/).\n2. Next, you'll need to configure environment variables. In your app settings, ensure the following app-level environment variables are set:\n\n```\nNITRO_PRESET=digital_ocean\n```\n\n[More information](https://docs.digitalocean.com/products/app-platform/how-to/use-environment-variables/).\n3. You will need to ensure you set an `engines.node` field in your app's `package.json` to ensure Digital Ocean uses a supported version of Node.js:\n\n```\n{\n      \"engines\": {\n         \"node\": \"16.x\"\n      }\n}\n```\n\n[See more information](https://docs.digitalocean.com/products/app-platform/languages-frameworks/nodejs/#node-version).\n4. You'll also need to add a run command so Digital Ocean knows what command to run after a build. You can do so by adding a start script to your `package.json`:\n\n```\n{\n      \"scripts\": {\n         \"start\": \"node .output/server/index.mjs\"\n      }\n}\n```\n\n5. Finally, you'll need to add this start script to your Digital Ocean app's run command. Go to `Components > Settings > Commands`, click \"Edit\", then add `npm run start`\n\nYour app should be live at a Digital Ocean generated URL and you can now follow [the rest of the Digital Ocean deployment guide](https://docs.digitalocean.com/products/app-platform/how-to/manage-deployments/)..\nPretty straightforward, right?", "metadata": {"source_url": "https://nitro.build/deploy/providers/digitalocean", "title": "DigitalOcean", "description": "Deploy Nitro apps to DigitalOcean.", "has_code_examples": true, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 01:20:37", "type": "section_detail", "page_metadata": {"twitter:image": "https://nitro.build/_og/deploy/providers/digitalocean.png?name=Nitro&title=DigitalOcean&description=Deploy+Nitro+apps+to+DigitalOcean.", "twitter:site": "@unjsio", "viewport": "width=device-width, initial-scale=1", "description": "Deploy Nitro apps to DigitalOcean.", "og:image:width": "1200", "og:image:alt": "Deploy Nitro apps to DigitalOcean.", "title": "DigitalOcean - Nitro", "ogImage": "https://nitro.build/_og/deploy/providers/digitalocean.png?name=Nitro&title=DigitalOcean&description=Deploy+Nitro+apps+to+DigitalOcean.", "twitter:image:width": "1200", "og:image:height": "600", "twitter:image:alt": "Deploy Nitro apps to DigitalOcean.", "og:image": "https://nitro.build/_og/deploy/providers/digitalocean.png?name=Nitro&title=DigitalOcean&description=Deploy+Nitro+apps+to+DigitalOcean.", "favicon": "https://nitro.build/icon.svg", "og:image:type": "image/png", "twitter:image:height": "600", "scrapeId": "73fe0eb8-4051-4247-8360-cb3fe71095d0", "sourceURL": "https://nitro.build/deploy/providers/digitalocean", "url": "https://nitro.build/deploy/providers/digitalocean", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: Can you give me some code examples for DigitalOcean in nitro-deploy?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Set NITRO_PRESET environment variable**:\n\n```yaml\nNITRO_PRESET=digital_ocean\n```\n\nThis snippet shows you how to set nitro_preset environment variable, which is an important aspect of digitalocean.\n\n**Set Node.js version in package.json**:\n\n```yaml\n{\n      \"engines\": {\n         \"node\": \"16.x\"\n      }\n}\n```\n\nThis snippet shows you how to set node.js version in package.json, which is an important aspect of digitalocean.\n\n", "metadata": {"source_url": "https://nitro.build/deploy/providers/digitalocean", "title": "DigitalOcean", "description": "Deploy Nitro apps to DigitalOcean.", "has_code_examples": true, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 01:20:37", "type": "code_examples", "page_metadata": {"twitter:image": "https://nitro.build/_og/deploy/providers/digitalocean.png?name=Nitro&title=DigitalOcean&description=Deploy+Nitro+apps+to+DigitalOcean.", "twitter:site": "@unjsio", "viewport": "width=device-width, initial-scale=1", "description": "Deploy Nitro apps to DigitalOcean.", "og:image:width": "1200", "og:image:alt": "Deploy Nitro apps to DigitalOcean.", "title": "DigitalOcean - Nitro", "ogImage": "https://nitro.build/_og/deploy/providers/digitalocean.png?name=Nitro&title=DigitalOcean&description=Deploy+Nitro+apps+to+DigitalOcean.", "twitter:image:width": "1200", "og:image:height": "600", "twitter:image:alt": "Deploy Nitro apps to DigitalOcean.", "og:image": "https://nitro.build/_og/deploy/providers/digitalocean.png?name=Nitro&title=DigitalOcean&description=Deploy+Nitro+apps+to+DigitalOcean.", "favicon": "https://nitro.build/icon.svg", "og:image:type": "image/png", "twitter:image:height": "600", "scrapeId": "73fe0eb8-4051-4247-8360-cb3fe71095d0", "sourceURL": "https://nitro.build/deploy/providers/digitalocean", "url": "https://nitro.build/deploy/providers/digitalocean", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: What are some tips for using DigitalOcean in nitro-deploy effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nEnsure to set the correct Node.js version in your package.json to avoid compatibility issues.\n\nAdd the start script to your Digital Ocean app's run command to ensure the app runs correctly after deployment.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://nitro.build/deploy/providers/digitalocean", "title": "DigitalOcean", "description": "Deploy Nitro apps to DigitalOcean.", "has_code_examples": true, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 01:20:37", "type": "best_practices", "page_metadata": {"twitter:image": "https://nitro.build/_og/deploy/providers/digitalocean.png?name=Nitro&title=DigitalOcean&description=Deploy+Nitro+apps+to+DigitalOcean.", "twitter:site": "@unjsio", "viewport": "width=device-width, initial-scale=1", "description": "Deploy Nitro apps to DigitalOcean.", "og:image:width": "1200", "og:image:alt": "Deploy Nitro apps to DigitalOcean.", "title": "DigitalOcean - Nitro", "ogImage": "https://nitro.build/_og/deploy/providers/digitalocean.png?name=Nitro&title=DigitalOcean&description=Deploy+Nitro+apps+to+DigitalOcean.", "twitter:image:width": "1200", "og:image:height": "600", "twitter:image:alt": "Deploy Nitro apps to DigitalOcean.", "og:image": "https://nitro.build/_og/deploy/providers/digitalocean.png?name=Nitro&title=DigitalOcean&description=Deploy+Nitro+apps+to+DigitalOcean.", "favicon": "https://nitro.build/icon.svg", "og:image:type": "image/png", "twitter:image:height": "600", "scrapeId": "73fe0eb8-4051-4247-8360-cb3fe71095d0", "sourceURL": "https://nitro.build/deploy/providers/digitalocean", "url": "https://nitro.build/deploy/providers/digitalocean", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: Can you explain what Cleavr is in nitro-deploy?\n\nAssistant: Sure, I'd be happy to explain Cleavr in nitro-deploy.\n\n# Cleavr\n\nDeploy Nitro apps to Cleavr.Here's a quick rundown of what this is about:\n\n## Set up your web app\n\nIn your project, set Nitro preset to `cleavr`.\n\n```\nexport default {\n  nitro: {\n    preset: 'cleavr'\n  }\n}\n```\n\nPush changes to your code repository.\n\n**In your Cleavr panel:**\n\n1. Provision a new server\n2. Add a website, selecting **Nuxt 3** as the app type\n3. In web app > settings > Code Repo, point to your project's code repository\n\nYou're now all set to deploy your project!\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://nitro.build/deploy/providers/cleavr", "title": "Cleavr", "description": "Deploy Nitro apps to Cleavr.", "has_code_examples": true, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 01:21:12", "type": "overview", "page_metadata": {"twitter:image": "https://nitro.build/_og/deploy/providers/cleavr.png?name=Nitro&title=Cleavr&description=Deploy+Nitro+apps+to+Cleavr.", "viewport": "width=device-width, initial-scale=1", "description": "Deploy Nitro apps to Cleavr.", "ogImage": "https://nitro.build/_og/deploy/providers/cleavr.png?name=Nitro&title=Cleavr&description=Deploy+Nitro+apps+to+Cleavr.", "twitter:image:alt": "Deploy Nitro apps to Cleavr.", "og:image": "https://nitro.build/_og/deploy/providers/cleavr.png?name=Nitro&title=Cleavr&description=Deploy+Nitro+apps+to+Cleavr.", "twitter:site": "@unjsio", "title": "Cleavr - Nitro", "og:image:alt": "Deploy Nitro apps to Cleavr.", "og:image:height": "600", "twitter:image:height": "600", "favicon": "https://nitro.build/icon.svg", "og:image:type": "image/png", "og:image:width": "1200", "twitter:image:width": "1200", "scrapeId": "59e6a154-929f-43d1-89b3-58f12cb565aa", "sourceURL": "https://nitro.build/deploy/providers/cleavr", "url": "https://nitro.build/deploy/providers/cleavr", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: How do I set up your web app in nitro-deploy?\n\nAssistant: To set up your web app in nitro-deploy, here's what you do:\nIn your project, set Nitro preset to `cleavr`.\n\n```\nexport default {\n  nitro: {\n    preset: 'cleavr'\n  }\n}\n```\n\nPush changes to your code repository.\n\n**In your Cleavr panel:**\n\n1. Provision a new server\n2. Add a website, selecting **Nuxt 3** as the app type\n3. In web app > settings > Code Repo, point to your project's code repository\n\nYou're now all set to deploy your project!.\nPretty straightforward, right?", "metadata": {"source_url": "https://nitro.build/deploy/providers/cleavr", "title": "Cleavr", "description": "Deploy Nitro apps to Cleavr.", "has_code_examples": true, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 01:21:12", "type": "section_detail", "page_metadata": {"twitter:image": "https://nitro.build/_og/deploy/providers/cleavr.png?name=Nitro&title=Cleavr&description=Deploy+Nitro+apps+to+Cleavr.", "viewport": "width=device-width, initial-scale=1", "description": "Deploy Nitro apps to Cleavr.", "ogImage": "https://nitro.build/_og/deploy/providers/cleavr.png?name=Nitro&title=Cleavr&description=Deploy+Nitro+apps+to+Cleavr.", "twitter:image:alt": "Deploy Nitro apps to Cleavr.", "og:image": "https://nitro.build/_og/deploy/providers/cleavr.png?name=Nitro&title=Cleavr&description=Deploy+Nitro+apps+to+Cleavr.", "twitter:site": "@unjsio", "title": "Cleavr - Nitro", "og:image:alt": "Deploy Nitro apps to Cleavr.", "og:image:height": "600", "twitter:image:height": "600", "favicon": "https://nitro.build/icon.svg", "og:image:type": "image/png", "og:image:width": "1200", "twitter:image:width": "1200", "scrapeId": "59e6a154-929f-43d1-89b3-58f12cb565aa", "sourceURL": "https://nitro.build/deploy/providers/cleavr", "url": "https://nitro.build/deploy/providers/cleavr", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: Can you give me some code examples for Cleavr in nitro-deploy?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Nitro preset configuration**:\n\n```yaml\nexport default {\n  nitro: {\n    preset: 'cleavr'\n  }\n}\n```\n\nThis snippet shows you how to nitro preset configuration, which is an important aspect of cleavr.\n\n", "metadata": {"source_url": "https://nitro.build/deploy/providers/cleavr", "title": "Cleavr", "description": "Deploy Nitro apps to Cleavr.", "has_code_examples": true, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 01:21:12", "type": "code_examples", "page_metadata": {"twitter:image": "https://nitro.build/_og/deploy/providers/cleavr.png?name=Nitro&title=Cleavr&description=Deploy+Nitro+apps+to+Cleavr.", "viewport": "width=device-width, initial-scale=1", "description": "Deploy Nitro apps to Cleavr.", "ogImage": "https://nitro.build/_og/deploy/providers/cleavr.png?name=Nitro&title=Cleavr&description=Deploy+Nitro+apps+to+Cleavr.", "twitter:image:alt": "Deploy Nitro apps to Cleavr.", "og:image": "https://nitro.build/_og/deploy/providers/cleavr.png?name=Nitro&title=Cleavr&description=Deploy+Nitro+apps+to+Cleavr.", "twitter:site": "@unjsio", "title": "Cleavr - Nitro", "og:image:alt": "Deploy Nitro apps to Cleavr.", "og:image:height": "600", "twitter:image:height": "600", "favicon": "https://nitro.build/icon.svg", "og:image:type": "image/png", "og:image:width": "1200", "twitter:image:width": "1200", "scrapeId": "59e6a154-929f-43d1-89b3-58f12cb565aa", "sourceURL": "https://nitro.build/deploy/providers/cleavr", "url": "https://nitro.build/deploy/providers/cleavr", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: What are some tips for using Cleavr in nitro-deploy effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nIntegration with this provider is possible with zero configuration.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://nitro.build/deploy/providers/cleavr", "title": "Cleavr", "description": "Deploy Nitro apps to Cleavr.", "has_code_examples": true, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 01:21:12", "type": "best_practices", "page_metadata": {"twitter:image": "https://nitro.build/_og/deploy/providers/cleavr.png?name=Nitro&title=Cleavr&description=Deploy+Nitro+apps+to+Cleavr.", "viewport": "width=device-width, initial-scale=1", "description": "Deploy Nitro apps to Cleavr.", "ogImage": "https://nitro.build/_og/deploy/providers/cleavr.png?name=Nitro&title=Cleavr&description=Deploy+Nitro+apps+to+Cleavr.", "twitter:image:alt": "Deploy Nitro apps to Cleavr.", "og:image": "https://nitro.build/_og/deploy/providers/cleavr.png?name=Nitro&title=Cleavr&description=Deploy+Nitro+apps+to+Cleavr.", "twitter:site": "@unjsio", "title": "Cleavr - Nitro", "og:image:alt": "Deploy Nitro apps to Cleavr.", "og:image:height": "600", "twitter:image:height": "600", "favicon": "https://nitro.build/icon.svg", "og:image:type": "image/png", "og:image:width": "1200", "twitter:image:width": "1200", "scrapeId": "59e6a154-929f-43d1-89b3-58f12cb565aa", "sourceURL": "https://nitro.build/deploy/providers/cleavr", "url": "https://nitro.build/deploy/providers/cleavr", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: Can you explain what AWS Lambda is in nitro-deploy?\n\nAssistant: Sure, I'd be happy to explain AWS Lambda in nitro-deploy.\n\n# AWS Lambda\n\nDeploy Nitro apps to AWS Lambda.Here's a quick rundown of what this is about:\n\n## On this page\n\n**Preset:** `aws_lambda`\n\nRead more in AWS Lambda.\n\nNitro provides a built-in preset to generate output format compatible with [AWS Lambda](https://aws.amazon.com/lambda/).\nThe output entrypoint in `.output/server/index.mjs` is compatible with [AWS Lambda format](https://docs.aws.amazon.com/lex/latest/dg/lambda-input-response-format.html).\n\nIt can be used programmatically or as part of a deployment.\n\n## Inlining chunks\n\nNitro output, by default uses dynamic chunks for lazy loading code only when needed. However this sometimes can not be ideal for performance. (See discussions in [nitrojs/nitro#650](https://github.com/nitrojs/nitro/pull/650)). You can enabling chunk inlining behavior using [`inlineDynamicImports`](https://nitro.build/config#inlinedynamicimports) config.\n\n## Response streaming\n\nRead more in Introducing AWS Lambda response streaming.\n\nIn order to enable response streaming, enable `awsLambda.streaming` flag:\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://nitro.build/deploy/providers/aws", "title": "AWS Lambda", "description": "Deploy Nitro apps to AWS Lambda.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 01:22:30", "type": "overview", "page_metadata": {"description": "Deploy Nitro apps to AWS Lambda.", "ogImage": "https://nitro.build/_og/deploy/providers/aws.png?name=Nitro&title=AWS+Lambda&description=Deploy+Nitro+apps+to+AWS+Lambda.", "og:image:width": "1200", "twitter:image:width": "1200", "og:image:height": "600", "twitter:image": "https://nitro.build/_og/deploy/providers/aws.png?name=Nitro&title=AWS+Lambda&description=Deploy+Nitro+apps+to+AWS+Lambda.", "twitter:site": "@unjsio", "favicon": "https://nitro.build/icon.svg", "twitter:image:height": "600", "title": "AWS Lambda - Nitro", "og:image": "https://nitro.build/_og/deploy/providers/aws.png?name=Nitro&title=AWS+Lambda&description=Deploy+Nitro+apps+to+AWS+Lambda.", "og:image:alt": "Deploy Nitro apps to AWS Lambda.", "og:image:type": "image/png", "twitter:image:alt": "Deploy Nitro apps to AWS Lambda.", "viewport": "width=device-width, initial-scale=1", "scrapeId": "c34221db-369b-4003-975d-2293a7a60d88", "sourceURL": "https://nitro.build/deploy/providers/aws", "url": "https://nitro.build/deploy/providers/aws", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: How do I on this page in nitro-deploy?\n\nAssistant: To on this page in nitro-deploy, here's what you do:\n**Preset:** `aws_lambda`\n\nRead more in AWS Lambda.\n\nNitro provides a built-in preset to generate output format compatible with [AWS Lambda](https://aws.amazon.com/lambda/).\nThe output entrypoint in `.output/server/index.mjs` is compatible with [AWS Lambda format](https://docs.aws.amazon.com/lex/latest/dg/lambda-input-response-format.html).\n\nIt can be used programmatically or as part of a deployment..\nPretty straightforward, right?", "metadata": {"source_url": "https://nitro.build/deploy/providers/aws", "title": "AWS Lambda", "description": "Deploy Nitro apps to AWS Lambda.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 01:22:30", "type": "section_detail", "page_metadata": {"description": "Deploy Nitro apps to AWS Lambda.", "ogImage": "https://nitro.build/_og/deploy/providers/aws.png?name=Nitro&title=AWS+Lambda&description=Deploy+Nitro+apps+to+AWS+Lambda.", "og:image:width": "1200", "twitter:image:width": "1200", "og:image:height": "600", "twitter:image": "https://nitro.build/_og/deploy/providers/aws.png?name=Nitro&title=AWS+Lambda&description=Deploy+Nitro+apps+to+AWS+Lambda.", "twitter:site": "@unjsio", "favicon": "https://nitro.build/icon.svg", "twitter:image:height": "600", "title": "AWS Lambda - Nitro", "og:image": "https://nitro.build/_og/deploy/providers/aws.png?name=Nitro&title=AWS+Lambda&description=Deploy+Nitro+apps+to+AWS+Lambda.", "og:image:alt": "Deploy Nitro apps to AWS Lambda.", "og:image:type": "image/png", "twitter:image:alt": "Deploy Nitro apps to AWS Lambda.", "viewport": "width=device-width, initial-scale=1", "scrapeId": "c34221db-369b-4003-975d-2293a7a60d88", "sourceURL": "https://nitro.build/deploy/providers/aws", "url": "https://nitro.build/deploy/providers/aws", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: How do I inlining chunks in nitro-deploy?\n\nAssistant: To inlining chunks in nitro-deploy, here's what you do:\nNitro output, by default uses dynamic chunks for lazy loading code only when needed. However this sometimes can not be ideal for performance. (See discussions in [nitrojs/nitro#650](https://github.com/nitrojs/nitro/pull/650)). You can enabling chunk inlining behavior using [`inlineDynamicImports`](https://nitro.build/config#inlinedynamicimports) config..\nPretty straightforward, right?", "metadata": {"source_url": "https://nitro.build/deploy/providers/aws", "title": "AWS Lambda", "description": "Deploy Nitro apps to AWS Lambda.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 01:22:30", "type": "section_detail", "page_metadata": {"description": "Deploy Nitro apps to AWS Lambda.", "ogImage": "https://nitro.build/_og/deploy/providers/aws.png?name=Nitro&title=AWS+Lambda&description=Deploy+Nitro+apps+to+AWS+Lambda.", "og:image:width": "1200", "twitter:image:width": "1200", "og:image:height": "600", "twitter:image": "https://nitro.build/_og/deploy/providers/aws.png?name=Nitro&title=AWS+Lambda&description=Deploy+Nitro+apps+to+AWS+Lambda.", "twitter:site": "@unjsio", "favicon": "https://nitro.build/icon.svg", "twitter:image:height": "600", "title": "AWS Lambda - Nitro", "og:image": "https://nitro.build/_og/deploy/providers/aws.png?name=Nitro&title=AWS+Lambda&description=Deploy+Nitro+apps+to+AWS+Lambda.", "og:image:alt": "Deploy Nitro apps to AWS Lambda.", "og:image:type": "image/png", "twitter:image:alt": "Deploy Nitro apps to AWS Lambda.", "viewport": "width=device-width, initial-scale=1", "scrapeId": "c34221db-369b-4003-975d-2293a7a60d88", "sourceURL": "https://nitro.build/deploy/providers/aws", "url": "https://nitro.build/deploy/providers/aws", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: How do I response streaming in nitro-deploy?\n\nAssistant: To response streaming in nitro-deploy, here's what you do:\nRead more in Introducing AWS Lambda response streaming.\n\nIn order to enable response streaming, enable `awsLambda.streaming` flag:.\nPretty straightforward, right?", "metadata": {"source_url": "https://nitro.build/deploy/providers/aws", "title": "AWS Lambda", "description": "Deploy Nitro apps to AWS Lambda.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 01:22:30", "type": "section_detail", "page_metadata": {"description": "Deploy Nitro apps to AWS Lambda.", "ogImage": "https://nitro.build/_og/deploy/providers/aws.png?name=Nitro&title=AWS+Lambda&description=Deploy+Nitro+apps+to+AWS+Lambda.", "og:image:width": "1200", "twitter:image:width": "1200", "og:image:height": "600", "twitter:image": "https://nitro.build/_og/deploy/providers/aws.png?name=Nitro&title=AWS+Lambda&description=Deploy+Nitro+apps+to+AWS+Lambda.", "twitter:site": "@unjsio", "favicon": "https://nitro.build/icon.svg", "twitter:image:height": "600", "title": "AWS Lambda - Nitro", "og:image": "https://nitro.build/_og/deploy/providers/aws.png?name=Nitro&title=AWS+Lambda&description=Deploy+Nitro+apps+to+AWS+Lambda.", "og:image:alt": "Deploy Nitro apps to AWS Lambda.", "og:image:type": "image/png", "twitter:image:alt": "Deploy Nitro apps to AWS Lambda.", "viewport": "width=device-width, initial-scale=1", "scrapeId": "c34221db-369b-4003-975d-2293a7a60d88", "sourceURL": "https://nitro.build/deploy/providers/aws", "url": "https://nitro.build/deploy/providers/aws", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: Can you give me some code examples for AWS Lambda in nitro-deploy?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Programmatic usage of handler**:\n\n```yaml\nimport { handler } from './.output/server'\n\n// Use programmatically\nconst { statusCode, headers, body } = handler({ rawPath: '/' })\n```\n\nThis snippet shows you how to programmatic usage of handler, which is an important aspect of aws lambda.\n\n**Inlining dynamic imports configuration**:\n\n```yaml\nexport default defineNitroConfig({\n  inlineDynamicImports: true\n});\n```\n\nThis snippet shows you how to inlining dynamic imports configuration, which is an important aspect of aws lambda.\n\n**Response streaming configuration**:\n\n```yaml\nexport default defineNitroConfig({\n  awsLambda: {\n    streaming: true\n  }\n});\n```\n\nThis snippet shows you how to response streaming configuration, which is an important aspect of aws lambda.\n\n", "metadata": {"source_url": "https://nitro.build/deploy/providers/aws", "title": "AWS Lambda", "description": "Deploy Nitro apps to AWS Lambda.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 01:22:30", "type": "code_examples", "page_metadata": {"description": "Deploy Nitro apps to AWS Lambda.", "ogImage": "https://nitro.build/_og/deploy/providers/aws.png?name=Nitro&title=AWS+Lambda&description=Deploy+Nitro+apps+to+AWS+Lambda.", "og:image:width": "1200", "twitter:image:width": "1200", "og:image:height": "600", "twitter:image": "https://nitro.build/_og/deploy/providers/aws.png?name=Nitro&title=AWS+Lambda&description=Deploy+Nitro+apps+to+AWS+Lambda.", "twitter:site": "@unjsio", "favicon": "https://nitro.build/icon.svg", "twitter:image:height": "600", "title": "AWS Lambda - Nitro", "og:image": "https://nitro.build/_og/deploy/providers/aws.png?name=Nitro&title=AWS+Lambda&description=Deploy+Nitro+apps+to+AWS+Lambda.", "og:image:alt": "Deploy Nitro apps to AWS Lambda.", "og:image:type": "image/png", "twitter:image:alt": "Deploy Nitro apps to AWS Lambda.", "viewport": "width=device-width, initial-scale=1", "scrapeId": "c34221db-369b-4003-975d-2293a7a60d88", "sourceURL": "https://nitro.build/deploy/providers/aws", "url": "https://nitro.build/deploy/providers/aws", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: What are some tips for using AWS Lambda in nitro-deploy effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nUse the built-in preset for AWS Lambda to ensure compatibility.\n\nConsider enabling chunk inlining for better performance if dynamic chunks are not ideal.\n\nEnable response streaming by setting the awsLambda.streaming flag.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://nitro.build/deploy/providers/aws", "title": "AWS Lambda", "description": "Deploy Nitro apps to AWS Lambda.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 01:22:30", "type": "best_practices", "page_metadata": {"description": "Deploy Nitro apps to AWS Lambda.", "ogImage": "https://nitro.build/_og/deploy/providers/aws.png?name=Nitro&title=AWS+Lambda&description=Deploy+Nitro+apps+to+AWS+Lambda.", "og:image:width": "1200", "twitter:image:width": "1200", "og:image:height": "600", "twitter:image": "https://nitro.build/_og/deploy/providers/aws.png?name=Nitro&title=AWS+Lambda&description=Deploy+Nitro+apps+to+AWS+Lambda.", "twitter:site": "@unjsio", "favicon": "https://nitro.build/icon.svg", "twitter:image:height": "600", "title": "AWS Lambda - Nitro", "og:image": "https://nitro.build/_og/deploy/providers/aws.png?name=Nitro&title=AWS+Lambda&description=Deploy+Nitro+apps+to+AWS+Lambda.", "og:image:alt": "Deploy Nitro apps to AWS Lambda.", "og:image:type": "image/png", "twitter:image:alt": "Deploy Nitro apps to AWS Lambda.", "viewport": "width=device-width, initial-scale=1", "scrapeId": "c34221db-369b-4003-975d-2293a7a60d88", "sourceURL": "https://nitro.build/deploy/providers/aws", "url": "https://nitro.build/deploy/providers/aws", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: Can you explain what Bun is in nitro-deploy?\n\nAssistant: Sure, I'd be happy to explain Bun in nitro-deploy.\n\n# Bun\n\nRun Nitro apps with Bun runtime.Here's a quick rundown of what this is about:\n\n## On this page\n\n**Preset:** `bun`\n\nNitro output is compatible with Bun runtime. While using default Node.js you can also run the output in bun, using `bun` preset has advantage of better optimizations.\n\nAfter building with bun preset using `bun` as preset, you can run server in production using:\n\n```\nbun run ./.output/server/index.mjs\n```\n\nRead more in bun.sh.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://nitro.build/deploy/runtimes/bun", "title": "Bun", "description": "Run Nitro apps with Bun runtime.", "has_code_examples": true, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 01:22:36", "type": "overview", "page_metadata": {"twitter:image:alt": "Run Nitro apps with Bun runtime.", "og:image": "https://nitro.build/_og/deploy/runtimes/bun.png?name=Nitro&title=Bun&description=Run+Nitro+apps+with+Bun+runtime.", "twitter:image": "https://nitro.build/_og/deploy/runtimes/bun.png?name=Nitro&title=Bun&description=Run+Nitro+apps+with+Bun+runtime.", "og:image:width": "1200", "description": "Run Nitro apps with Bun runtime.", "favicon": "https://nitro.build/icon.svg", "twitter:image:width": "1200", "viewport": "width=device-width, initial-scale=1", "og:image:height": "600", "ogImage": "https://nitro.build/_og/deploy/runtimes/bun.png?name=Nitro&title=Bun&description=Run+Nitro+apps+with+Bun+runtime.", "title": "Bun - Nitro", "twitter:image:height": "600", "og:image:alt": "Run Nitro apps with Bun runtime.", "twitter:site": "@unjsio", "og:image:type": "image/png", "scrapeId": "03f9d11e-2b3f-422f-becb-6b6dc9dbec45", "sourceURL": "https://nitro.build/deploy/runtimes/bun", "url": "https://nitro.build/deploy/runtimes/bun", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: How do I on this page in nitro-deploy?\n\nAssistant: To on this page in nitro-deploy, here's what you do:\n**Preset:** `bun`\n\nNitro output is compatible with Bun runtime. While using default Node.js you can also run the output in bun, using `bun` preset has advantage of better optimizations.\n\nAfter building with bun preset using `bun` as preset, you can run server in production using:\n\n```\nbun run ./.output/server/index.mjs\n```\n\nRead more in bun.sh..\nPretty straightforward, right?", "metadata": {"source_url": "https://nitro.build/deploy/runtimes/bun", "title": "Bun", "description": "Run Nitro apps with Bun runtime.", "has_code_examples": true, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 01:22:36", "type": "section_detail", "page_metadata": {"twitter:image:alt": "Run Nitro apps with Bun runtime.", "og:image": "https://nitro.build/_og/deploy/runtimes/bun.png?name=Nitro&title=Bun&description=Run+Nitro+apps+with+Bun+runtime.", "twitter:image": "https://nitro.build/_og/deploy/runtimes/bun.png?name=Nitro&title=Bun&description=Run+Nitro+apps+with+Bun+runtime.", "og:image:width": "1200", "description": "Run Nitro apps with Bun runtime.", "favicon": "https://nitro.build/icon.svg", "twitter:image:width": "1200", "viewport": "width=device-width, initial-scale=1", "og:image:height": "600", "ogImage": "https://nitro.build/_og/deploy/runtimes/bun.png?name=Nitro&title=Bun&description=Run+Nitro+apps+with+Bun+runtime.", "title": "Bun - Nitro", "twitter:image:height": "600", "og:image:alt": "Run Nitro apps with Bun runtime.", "twitter:site": "@unjsio", "og:image:type": "image/png", "scrapeId": "03f9d11e-2b3f-422f-becb-6b6dc9dbec45", "sourceURL": "https://nitro.build/deploy/runtimes/bun", "url": "https://nitro.build/deploy/runtimes/bun", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: Can you give me some code examples for Bun in nitro-deploy?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Run server in production**:\n\n```yaml\nbun run ./.output/server/index.mjs\n```\n\nThis snippet shows you how to run server in production, which is an important aspect of bun.\n\n", "metadata": {"source_url": "https://nitro.build/deploy/runtimes/bun", "title": "Bun", "description": "Run Nitro apps with Bun runtime.", "has_code_examples": true, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 01:22:36", "type": "code_examples", "page_metadata": {"twitter:image:alt": "Run Nitro apps with Bun runtime.", "og:image": "https://nitro.build/_og/deploy/runtimes/bun.png?name=Nitro&title=Bun&description=Run+Nitro+apps+with+Bun+runtime.", "twitter:image": "https://nitro.build/_og/deploy/runtimes/bun.png?name=Nitro&title=Bun&description=Run+Nitro+apps+with+Bun+runtime.", "og:image:width": "1200", "description": "Run Nitro apps with Bun runtime.", "favicon": "https://nitro.build/icon.svg", "twitter:image:width": "1200", "viewport": "width=device-width, initial-scale=1", "og:image:height": "600", "ogImage": "https://nitro.build/_og/deploy/runtimes/bun.png?name=Nitro&title=Bun&description=Run+Nitro+apps+with+Bun+runtime.", "title": "Bun - Nitro", "twitter:image:height": "600", "og:image:alt": "Run Nitro apps with Bun runtime.", "twitter:site": "@unjsio", "og:image:type": "image/png", "scrapeId": "03f9d11e-2b3f-422f-becb-6b6dc9dbec45", "sourceURL": "https://nitro.build/deploy/runtimes/bun", "url": "https://nitro.build/deploy/runtimes/bun", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: What are some tips for using Bun in nitro-deploy effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nUsing the `bun` preset has the advantage of better optimizations.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://nitro.build/deploy/runtimes/bun", "title": "Bun", "description": "Run Nitro apps with Bun runtime.", "has_code_examples": true, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 01:22:36", "type": "best_practices", "page_metadata": {"twitter:image:alt": "Run Nitro apps with Bun runtime.", "og:image": "https://nitro.build/_og/deploy/runtimes/bun.png?name=Nitro&title=Bun&description=Run+Nitro+apps+with+Bun+runtime.", "twitter:image": "https://nitro.build/_og/deploy/runtimes/bun.png?name=Nitro&title=Bun&description=Run+Nitro+apps+with+Bun+runtime.", "og:image:width": "1200", "description": "Run Nitro apps with Bun runtime.", "favicon": "https://nitro.build/icon.svg", "twitter:image:width": "1200", "viewport": "width=device-width, initial-scale=1", "og:image:height": "600", "ogImage": "https://nitro.build/_og/deploy/runtimes/bun.png?name=Nitro&title=Bun&description=Run+Nitro+apps+with+Bun+runtime.", "title": "Bun - Nitro", "twitter:image:height": "600", "og:image:alt": "Run Nitro apps with Bun runtime.", "twitter:site": "@unjsio", "og:image:type": "image/png", "scrapeId": "03f9d11e-2b3f-422f-becb-6b6dc9dbec45", "sourceURL": "https://nitro.build/deploy/runtimes/bun", "url": "https://nitro.build/deploy/runtimes/bun", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: Can you explain what AWS Amplify is in nitro-deploy?\n\nAssistant: Sure, I'd be happy to explain AWS Amplify in nitro-deploy.\n\n# AWS Amplify\n\nDeploy Nitro apps to AWS Amplify Hosting.Here's a quick rundown of what this is about:\n\n## Deploy to AWS Amplify Hosting\n\nIntegration with this provider is possible with [zero configuration](https://nitro.build/deploy/#zero-config-providers).\n\n1. Login to the [AWS Amplify Hosting Console](https://console.aws.amazon.com/amplify/)\n2. Click on \"Get Started\" > Amplify Hosting (Host your web app)\n3. Select and authorize access to your Git repository provider and select the main branch\n4. Choose a name for your app, make sure build settings are auto-detected and optionally set requirement environment variables under the advanced section\n5. Optionally, select Enable SSR logging to enable server-side logging to your Amazon CloudWatch account\n6. Confirm configuration and click on \"Save and Deploy\"\n\n## Advanced Configuration\n\nYou can configure advanced options of this preset using `awsAmplify` option.\n\nnitro.config.tsnuxt.config.ts\n\n```javascript\nexport default defineNitroConfig({\n  awsAmplify: {\n      // catchAllStaticFallback: true,\n      // imageOptimization: { path: \"/_image\", cacheControl: \"public, max-age=3600, immutable\" },\n      // imageSettings: { ... },\n  }\n})\n```\n\n### [`amplify.yml`](https://nitro.build/deploy/providers/aws-amplify#amplifyyml)\n\nYou might need a custom `amplify.yml` file for advanced configuration. Here are two template examples:\n\namplify.ymlamplify.yml (monorepo)\n\n```\nversion: 1\nfrontend:\n  phases:\n    preBuild:\n      commands:\n        - nvm use 18 && node --version\n        - corepack enable && npx --yes nypm install\n    build:\n      commands:\n        - pnpm build\n  artifacts:\n    baseDirectory: .amplify-hosting\n    files:\n      - \"**/*\"\n```\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://nitro.build/deploy/providers/aws-amplify", "title": "AWS Amplify", "description": "Deploy Nitro apps to AWS Amplify Hosting.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 01:22:51", "type": "overview", "page_metadata": {"twitter:image:width": "1200", "og:image:width": "1200", "twitter:image:alt": "Deploy Nitro apps to AWS Amplify Hosting.", "ogImage": "https://nitro.build/_og/deploy/providers/aws-amplify.png?name=Nitro&title=AWS+Amplify&description=Deploy+Nitro+apps+to+AWS+Amplify+Hosting.", "og:image:height": "600", "twitter:image": "https://nitro.build/_og/deploy/providers/aws-amplify.png?name=Nitro&title=AWS+Amplify&description=Deploy+Nitro+apps+to+AWS+Amplify+Hosting.", "favicon": "https://nitro.build/icon.svg", "title": "AWS Amplify - Nitro", "twitter:site": "@unjsio", "og:image:type": "image/png", "twitter:image:height": "600", "description": "Deploy Nitro apps to AWS Amplify Hosting.", "og:image": "https://nitro.build/_og/deploy/providers/aws-amplify.png?name=Nitro&title=AWS+Amplify&description=Deploy+Nitro+apps+to+AWS+Amplify+Hosting.", "viewport": "width=device-width, initial-scale=1", "og:image:alt": "Deploy Nitro apps to AWS Amplify Hosting.", "scrapeId": "ad29622b-3f9a-4b2c-a290-83de162b2160", "sourceURL": "https://nitro.build/deploy/providers/aws-amplify", "url": "https://nitro.build/deploy/providers/aws-amplify", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: How do I deploy to aws amplify hosting in nitro-deploy?\n\nAssistant: To deploy to aws amplify hosting in nitro-deploy, here's what you do:\nIntegration with this provider is possible with [zero configuration](https://nitro.build/deploy/#zero-config-providers).\n\n1. Login to the [AWS Amplify Hosting Console](https://console.aws.amazon.com/amplify/)\n2. Click on \"Get Started\" > Amplify Hosting (Host your web app)\n3. Select and authorize access to your Git repository provider and select the main branch\n4. Choose a name for your app, make sure build settings are auto-detected and optionally set requirement environment variables under the advanced section\n5. Optionally, select Enable SSR logging to enable server-side logging to your Amazon CloudWatch account\n6. Confirm configuration and click on \"Save and Deploy\".\nPretty straightforward, right?", "metadata": {"source_url": "https://nitro.build/deploy/providers/aws-amplify", "title": "AWS Amplify", "description": "Deploy Nitro apps to AWS Amplify Hosting.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 01:22:51", "type": "section_detail", "page_metadata": {"twitter:image:width": "1200", "og:image:width": "1200", "twitter:image:alt": "Deploy Nitro apps to AWS Amplify Hosting.", "ogImage": "https://nitro.build/_og/deploy/providers/aws-amplify.png?name=Nitro&title=AWS+Amplify&description=Deploy+Nitro+apps+to+AWS+Amplify+Hosting.", "og:image:height": "600", "twitter:image": "https://nitro.build/_og/deploy/providers/aws-amplify.png?name=Nitro&title=AWS+Amplify&description=Deploy+Nitro+apps+to+AWS+Amplify+Hosting.", "favicon": "https://nitro.build/icon.svg", "title": "AWS Amplify - Nitro", "twitter:site": "@unjsio", "og:image:type": "image/png", "twitter:image:height": "600", "description": "Deploy Nitro apps to AWS Amplify Hosting.", "og:image": "https://nitro.build/_og/deploy/providers/aws-amplify.png?name=Nitro&title=AWS+Amplify&description=Deploy+Nitro+apps+to+AWS+Amplify+Hosting.", "viewport": "width=device-width, initial-scale=1", "og:image:alt": "Deploy Nitro apps to AWS Amplify Hosting.", "scrapeId": "ad29622b-3f9a-4b2c-a290-83de162b2160", "sourceURL": "https://nitro.build/deploy/providers/aws-amplify", "url": "https://nitro.build/deploy/providers/aws-amplify", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: How do I advanced configuration in nitro-deploy?\n\nAssistant: To advanced configuration in nitro-deploy, here's what you do:\nYou can configure advanced options of this preset using `awsAmplify` option.\n\nnitro.config.tsnuxt.config.ts\n\n```javascript\nexport default defineNitroConfig({\n  awsAmplify: {\n      // catchAllStaticFallback: true,\n      // imageOptimization: { path: \"/_image\", cacheControl: \"public, max-age=3600, immutable\" },\n      // imageSettings: { ... },\n  }\n})\n```\n\n### [`amplify.yml`](https://nitro.build/deploy/providers/aws-amplify#amplifyyml)\n\nYou might need a custom `amplify.yml` file for advanced configuration. Here are two template examples:\n\namplify.ymlamplify.yml (monorepo)\n\n```\nversion: 1\nfrontend:\n  phases:\n    preBuild:\n      commands:\n        - nvm use 18 && node --version\n        - corepack enable && npx --yes nypm install\n    build:\n      commands:\n        - pnpm build\n  artifacts:\n    baseDirectory: .amplify-hosting\n    files:\n      - \"**/*\"\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://nitro.build/deploy/providers/aws-amplify", "title": "AWS Amplify", "description": "Deploy Nitro apps to AWS Amplify Hosting.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 01:22:51", "type": "section_detail", "page_metadata": {"twitter:image:width": "1200", "og:image:width": "1200", "twitter:image:alt": "Deploy Nitro apps to AWS Amplify Hosting.", "ogImage": "https://nitro.build/_og/deploy/providers/aws-amplify.png?name=Nitro&title=AWS+Amplify&description=Deploy+Nitro+apps+to+AWS+Amplify+Hosting.", "og:image:height": "600", "twitter:image": "https://nitro.build/_og/deploy/providers/aws-amplify.png?name=Nitro&title=AWS+Amplify&description=Deploy+Nitro+apps+to+AWS+Amplify+Hosting.", "favicon": "https://nitro.build/icon.svg", "title": "AWS Amplify - Nitro", "twitter:site": "@unjsio", "og:image:type": "image/png", "twitter:image:height": "600", "description": "Deploy Nitro apps to AWS Amplify Hosting.", "og:image": "https://nitro.build/_og/deploy/providers/aws-amplify.png?name=Nitro&title=AWS+Amplify&description=Deploy+Nitro+apps+to+AWS+Amplify+Hosting.", "viewport": "width=device-width, initial-scale=1", "og:image:alt": "Deploy Nitro apps to AWS Amplify Hosting.", "scrapeId": "ad29622b-3f9a-4b2c-a290-83de162b2160", "sourceURL": "https://nitro.build/deploy/providers/aws-amplify", "url": "https://nitro.build/deploy/providers/aws-amplify", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: Can you give me some code examples for AWS Amplify in nitro-deploy?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**nitro.config.ts**:\n\n```yaml\nexport default defineNitroConfig({\n  awsAmplify: {\n      // catchAllStaticFallback: true,\n      // imageOptimization: { path: \"/_image\", cacheControl: \"public, max-age=3600, immutable\" },\n      // imageSettings: { ... },\n  }\n})\n```\n\nThis snippet shows you how to nitro.config.ts, which is an important aspect of aws amplify.\n\n**amplify.yml (monorepo)**:\n\n```yaml\nversion: 1\nfrontend:\n  phases:\n    preBuild:\n      commands:\n        - nvm use 18 && node --version\n        - corepack enable && npx --yes nypm install\n    build:\n      commands:\n        - pnpm build\n  artifacts:\n    baseDirectory: .amplify-hosting\n    files:\n      - \"**/*\"\n```\n\nThis snippet shows you how to amplify.yml (monorepo), which is an important aspect of aws amplify.\n\n", "metadata": {"source_url": "https://nitro.build/deploy/providers/aws-amplify", "title": "AWS Amplify", "description": "Deploy Nitro apps to AWS Amplify Hosting.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 01:22:51", "type": "code_examples", "page_metadata": {"twitter:image:width": "1200", "og:image:width": "1200", "twitter:image:alt": "Deploy Nitro apps to AWS Amplify Hosting.", "ogImage": "https://nitro.build/_og/deploy/providers/aws-amplify.png?name=Nitro&title=AWS+Amplify&description=Deploy+Nitro+apps+to+AWS+Amplify+Hosting.", "og:image:height": "600", "twitter:image": "https://nitro.build/_og/deploy/providers/aws-amplify.png?name=Nitro&title=AWS+Amplify&description=Deploy+Nitro+apps+to+AWS+Amplify+Hosting.", "favicon": "https://nitro.build/icon.svg", "title": "AWS Amplify - Nitro", "twitter:site": "@unjsio", "og:image:type": "image/png", "twitter:image:height": "600", "description": "Deploy Nitro apps to AWS Amplify Hosting.", "og:image": "https://nitro.build/_og/deploy/providers/aws-amplify.png?name=Nitro&title=AWS+Amplify&description=Deploy+Nitro+apps+to+AWS+Amplify+Hosting.", "viewport": "width=device-width, initial-scale=1", "og:image:alt": "Deploy Nitro apps to AWS Amplify Hosting.", "scrapeId": "ad29622b-3f9a-4b2c-a290-83de162b2160", "sourceURL": "https://nitro.build/deploy/providers/aws-amplify", "url": "https://nitro.build/deploy/providers/aws-amplify", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: What are some tips for using AWS Amplify in nitro-deploy effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nMake sure build settings are auto-detected when choosing a name for your app.\n\nOptionally set requirement environment variables under the advanced section.\n\nSelect Enable SSR logging to enable server-side logging to your Amazon CloudWatch account.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://nitro.build/deploy/providers/aws-amplify", "title": "AWS Amplify", "description": "Deploy Nitro apps to AWS Amplify Hosting.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 01:22:51", "type": "best_practices", "page_metadata": {"twitter:image:width": "1200", "og:image:width": "1200", "twitter:image:alt": "Deploy Nitro apps to AWS Amplify Hosting.", "ogImage": "https://nitro.build/_og/deploy/providers/aws-amplify.png?name=Nitro&title=AWS+Amplify&description=Deploy+Nitro+apps+to+AWS+Amplify+Hosting.", "og:image:height": "600", "twitter:image": "https://nitro.build/_og/deploy/providers/aws-amplify.png?name=Nitro&title=AWS+Amplify&description=Deploy+Nitro+apps+to+AWS+Amplify+Hosting.", "favicon": "https://nitro.build/icon.svg", "title": "AWS Amplify - Nitro", "twitter:site": "@unjsio", "og:image:type": "image/png", "twitter:image:height": "600", "description": "Deploy Nitro apps to AWS Amplify Hosting.", "og:image": "https://nitro.build/_og/deploy/providers/aws-amplify.png?name=Nitro&title=AWS+Amplify&description=Deploy+Nitro+apps+to+AWS+Amplify+Hosting.", "viewport": "width=device-width, initial-scale=1", "og:image:alt": "Deploy Nitro apps to AWS Amplify Hosting.", "scrapeId": "ad29622b-3f9a-4b2c-a290-83de162b2160", "sourceURL": "https://nitro.build/deploy/providers/aws-amplify", "url": "https://nitro.build/deploy/providers/aws-amplify", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: Can you explain what GitHub Pages is in nitro-deploy?\n\nAssistant: Sure, I'd be happy to explain GitHub Pages in nitro-deploy.\n\n# GitHub Pages\n\nDeploy Nitro apps to GitHub Pages.Here's a quick rundown of what this is about:\n\n## Setup\n\nFollow the steps to [create a GitHub Pages site](https://docs.github.com/en/pages/getting-started-with-github-pages/creating-a-github-pages-site).\n\n## Deployment\n\nHere is an example GitHub Actions workflow to deploy your site to GitHub Pages using the `github_pages` preset:\n\n.github/workflows/deploy.yml\n\n```yaml\n# https://github.com/actions/deploy-pages#usage\nname: Deploy to GitHub Pages\n\non:\n  workflow_dispatch:\n  push:\n    branches:\n      - main\n\njobs:\n  build:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v3\n      - run: corepack enable\n      - uses: actions/setup-node@v3\n        with:\n          node-version: \"18\"\n\n      - run: npx nypm install\n      - run: npm run build\n        env:\n          NITRO_PRESET: github_pages\n\n      - name: Upload artifact\n        uses: actions/upload-pages-artifact@v1\n        with:\n          path: ./.output/public\n\n  # Deployment job\n  deploy:\n    # Add a dependency to the build job\n    needs: build\n\n    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment\n    permissions:\n      pages: write      # to deploy to Pages\n      id-token: write   # to verify the deployment originates from an appropriate source\n\n    # Deploy to the github_pages environment\n    environment:\n      name: github-pages\n      url: ${{ steps.deployment.outputs.page_url }}\n\n    # Specify runner + deployment step\n    runs-on: ubuntu-latest\n    steps:\n      - name: Deploy to GitHub Pages\n        id: deployment\n        uses: actions/deploy-pages@v1\n```\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://nitro.build/deploy/providers/github-pages", "title": "GitHub Pages", "description": "Deploy Nitro apps to GitHub Pages.", "has_code_examples": true, "has_best_practices": false, "section_count": 2, "timestamp": "2025-03-01 01:23:40", "type": "overview", "page_metadata": {"title": "GitHub Pages - Nitro", "og:image": "https://nitro.build/_og/deploy/providers/github-pages.png?name=Nitro&title=GitHub+Pages&description=Deploy+Nitro+apps+to+GitHub+Pages.", "ogImage": "https://nitro.build/_og/deploy/providers/github-pages.png?name=Nitro&title=GitHub+Pages&description=Deploy+Nitro+apps+to+GitHub+Pages.", "twitter:image:height": "600", "description": "Deploy Nitro apps to GitHub Pages.", "og:image:alt": "Deploy Nitro apps to GitHub Pages.", "viewport": "width=device-width, initial-scale=1", "og:image:height": "600", "favicon": "https://nitro.build/icon.svg", "twitter:image:width": "1200", "twitter:site": "@unjsio", "twitter:image": "https://nitro.build/_og/deploy/providers/github-pages.png?name=Nitro&title=GitHub+Pages&description=Deploy+Nitro+apps+to+GitHub+Pages.", "twitter:image:alt": "Deploy Nitro apps to GitHub Pages.", "og:image:type": "image/png", "og:image:width": "1200", "scrapeId": "4b5b221f-2021-4dbd-8769-98ca1dd04fcd", "sourceURL": "https://nitro.build/deploy/providers/github-pages", "url": "https://nitro.build/deploy/providers/github-pages", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: How do I setup in nitro-deploy?\n\nAssistant: To setup in nitro-deploy, here's what you do:\nFollow the steps to [create a GitHub Pages site](https://docs.github.com/en/pages/getting-started-with-github-pages/creating-a-github-pages-site)..\nPretty straightforward, right?", "metadata": {"source_url": "https://nitro.build/deploy/providers/github-pages", "title": "GitHub Pages", "description": "Deploy Nitro apps to GitHub Pages.", "has_code_examples": true, "has_best_practices": false, "section_count": 2, "timestamp": "2025-03-01 01:23:40", "type": "section_detail", "page_metadata": {"title": "GitHub Pages - Nitro", "og:image": "https://nitro.build/_og/deploy/providers/github-pages.png?name=Nitro&title=GitHub+Pages&description=Deploy+Nitro+apps+to+GitHub+Pages.", "ogImage": "https://nitro.build/_og/deploy/providers/github-pages.png?name=Nitro&title=GitHub+Pages&description=Deploy+Nitro+apps+to+GitHub+Pages.", "twitter:image:height": "600", "description": "Deploy Nitro apps to GitHub Pages.", "og:image:alt": "Deploy Nitro apps to GitHub Pages.", "viewport": "width=device-width, initial-scale=1", "og:image:height": "600", "favicon": "https://nitro.build/icon.svg", "twitter:image:width": "1200", "twitter:site": "@unjsio", "twitter:image": "https://nitro.build/_og/deploy/providers/github-pages.png?name=Nitro&title=GitHub+Pages&description=Deploy+Nitro+apps+to+GitHub+Pages.", "twitter:image:alt": "Deploy Nitro apps to GitHub Pages.", "og:image:type": "image/png", "og:image:width": "1200", "scrapeId": "4b5b221f-2021-4dbd-8769-98ca1dd04fcd", "sourceURL": "https://nitro.build/deploy/providers/github-pages", "url": "https://nitro.build/deploy/providers/github-pages", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: How do I deployment in nitro-deploy?\n\nAssistant: To deployment in nitro-deploy, here's what you do:\nHere is an example GitHub Actions workflow to deploy your site to GitHub Pages using the `github_pages` preset:\n\n.github/workflows/deploy.yml\n\n```yaml\n# https://github.com/actions/deploy-pages#usage\nname: Deploy to GitHub Pages\n\non:\n  workflow_dispatch:\n  push:\n    branches:\n      - main\n\njobs:\n  build:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v3\n      - run: corepack enable\n      - uses: actions/setup-node@v3\n        with:\n          node-version: \"18\"\n\n      - run: npx nypm install\n      - run: npm run build\n        env:\n          NITRO_PRESET: github_pages\n\n      - name: Upload artifact\n        uses: actions/upload-pages-artifact@v1\n        with:\n          path: ./.output/public\n\n  # Deployment job\n  deploy:\n    # Add a dependency to the build job\n    needs: build\n\n    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment\n    permissions:\n      pages: write      # to deploy to Pages\n      id-token: write   # to verify the deployment originates from an appropriate source\n\n    # Deploy to the github_pages environment\n    environment:\n      name: github-pages\n      url: ${{ steps.deployment.outputs.page_url }}\n\n    # Specify runner + deployment step\n    runs-on: ubuntu-latest\n    steps:\n      - name: Deploy to GitHub Pages\n        id: deployment\n        uses: actions/deploy-pages@v1\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://nitro.build/deploy/providers/github-pages", "title": "GitHub Pages", "description": "Deploy Nitro apps to GitHub Pages.", "has_code_examples": true, "has_best_practices": false, "section_count": 2, "timestamp": "2025-03-01 01:23:40", "type": "section_detail", "page_metadata": {"title": "GitHub Pages - Nitro", "og:image": "https://nitro.build/_og/deploy/providers/github-pages.png?name=Nitro&title=GitHub+Pages&description=Deploy+Nitro+apps+to+GitHub+Pages.", "ogImage": "https://nitro.build/_og/deploy/providers/github-pages.png?name=Nitro&title=GitHub+Pages&description=Deploy+Nitro+apps+to+GitHub+Pages.", "twitter:image:height": "600", "description": "Deploy Nitro apps to GitHub Pages.", "og:image:alt": "Deploy Nitro apps to GitHub Pages.", "viewport": "width=device-width, initial-scale=1", "og:image:height": "600", "favicon": "https://nitro.build/icon.svg", "twitter:image:width": "1200", "twitter:site": "@unjsio", "twitter:image": "https://nitro.build/_og/deploy/providers/github-pages.png?name=Nitro&title=GitHub+Pages&description=Deploy+Nitro+apps+to+GitHub+Pages.", "twitter:image:alt": "Deploy Nitro apps to GitHub Pages.", "og:image:type": "image/png", "og:image:width": "1200", "scrapeId": "4b5b221f-2021-4dbd-8769-98ca1dd04fcd", "sourceURL": "https://nitro.build/deploy/providers/github-pages", "url": "https://nitro.build/deploy/providers/github-pages", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: Can you give me some code examples for GitHub Pages in nitro-deploy?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**GitHub Actions Workflow for Deployment**:\n\n```yaml\n# https://github.com/actions/deploy-pages#usage\nname: Deploy to GitHub Pages\n\non:\n  workflow_dispatch:\n  push:\n    branches:\n      - main\n\njobs:\n  build:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v3\n      - run: corepack enable\n      - uses: actions/setup-node@v3\n        with:\n          node-version: \"18\"\n\n      - run: npx nypm install\n      - run: npm run build\n        env:\n          NITRO_PRESET: github_pages\n\n      - name: Upload artifact\n        uses: actions/upload-pages-artifact@v1\n        with:\n          path: ./.output/public\n\n  # Deployment job\n  deploy:\n    # Add a dependency to the build job\n    needs: build\n\n    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment\n    permissions:\n      pages: write      # to deploy to Pages\n      id-token: write   # to verify the deployment originates from an appropriate source\n\n    # Deploy to the github_pages environment\n    environment:\n      name: github-pages\n      url: ${{ steps.deployment.outputs.page_url }}\n\n    # Specify runner + deployment step\n    runs-on: ubuntu-latest\n    steps:\n      - name: Deploy to GitHub Pages\n        id: deployment\n        uses: actions/deploy-pages@v1\n\n```\n\nThis snippet shows you how to github actions workflow for deployment, which is an important aspect of github pages.\n\n", "metadata": {"source_url": "https://nitro.build/deploy/providers/github-pages", "title": "GitHub Pages", "description": "Deploy Nitro apps to GitHub Pages.", "has_code_examples": true, "has_best_practices": false, "section_count": 2, "timestamp": "2025-03-01 01:23:40", "type": "code_examples", "page_metadata": {"title": "GitHub Pages - Nitro", "og:image": "https://nitro.build/_og/deploy/providers/github-pages.png?name=Nitro&title=GitHub+Pages&description=Deploy+Nitro+apps+to+GitHub+Pages.", "ogImage": "https://nitro.build/_og/deploy/providers/github-pages.png?name=Nitro&title=GitHub+Pages&description=Deploy+Nitro+apps+to+GitHub+Pages.", "twitter:image:height": "600", "description": "Deploy Nitro apps to GitHub Pages.", "og:image:alt": "Deploy Nitro apps to GitHub Pages.", "viewport": "width=device-width, initial-scale=1", "og:image:height": "600", "favicon": "https://nitro.build/icon.svg", "twitter:image:width": "1200", "twitter:site": "@unjsio", "twitter:image": "https://nitro.build/_og/deploy/providers/github-pages.png?name=Nitro&title=GitHub+Pages&description=Deploy+Nitro+apps+to+GitHub+Pages.", "twitter:image:alt": "Deploy Nitro apps to GitHub Pages.", "og:image:type": "image/png", "og:image:width": "1200", "scrapeId": "4b5b221f-2021-4dbd-8769-98ca1dd04fcd", "sourceURL": "https://nitro.build/deploy/providers/github-pages", "url": "https://nitro.build/deploy/providers/github-pages", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: Can you explain what Deno Deploy is in nitro-deploy?\n\nAssistant: Sure, I'd be happy to explain Deno Deploy in nitro-deploy.\n\n# Deno Deploy\n\nDeploy Nitro apps to Deno Deploy.Here's a quick rundown of what this is about:\n\n## Deploy with the CLI\n\nYou can use [deployctl](https://deno.com/deploy/docs/deployctl) to deploy your app.\n\nLogin to [Deno Deploy](https://dash.deno.com/account#access-tokens) to obtain a `DENO_DEPLOY_TOKEN` access token, and set it as an environment variable.\n\n```\n# Build with the deno_deploy NITRO preset\nNITRO_PRESET=deno_deploy npm run build\n\n# Make sure to run the deployctl command from the output directory\ncd .output\ndeployctl deploy --project=my-project server/index.ts\n``\n\n## Deploy within CI/CD using gitHub actions\n\nYou just need to include the deployctl GitHub Action as a step in your workflow.\n\nYou do not need to set up any secrets for this to work. You do need to link your GitHub repository to your Deno Deploy project and choose the \"GitHub Actions\" deployment mode. You can do this in your project settings on [Deno Deploy](https://dash.deno.com/).\n\nCreate the following workflow file in your `.github/workflows` directory:\n\n.github/workflows/deno_deploy.yml\n\n```\nname: deno-deploy\n\non:\n  push:\n    branches:\n      - main\n  pull_request:\n    branches:\n      - main\n\njobs:\n  deploy:\n    steps:\n      - uses: actions/checkout@v3\n      - run: corepack enable\n      - uses: actions/setup-node@v3\n        with:\n          node-version: 18\n          cache: pnpm\n      - run: pnpm install\n      - run: pnpm build\n        env:\n          NITRO_PRESET: deno_deploy\n      - name: Deploy to Deno Deploy\n        uses: denoland/deployctl@v1\n        with:\n          project: my-project\n          entrypoint: server/index.ts\n          root: .output\n``\n\n## Deno runtime\n\nRead more in Deploy > Runtimes > Deno.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://nitro.build/deploy/providers/deno-deploy", "title": "Deno Deploy", "description": "Deploy Nitro apps to Deno Deploy.", "has_code_examples": true, "has_best_practices": false, "section_count": 3, "timestamp": "2025-03-01 01:25:18", "type": "overview", "page_metadata": {"favicon": "https://nitro.build/icon.svg", "twitter:image": "https://nitro.build/_og/deploy/providers/deno-deploy.png?name=Nitro&title=Deno+Deploy&description=Deploy+Nitro+apps+to+Deno+Deploy.", "og:image": "https://nitro.build/_og/deploy/providers/deno-deploy.png?name=Nitro&title=Deno+Deploy&description=Deploy+Nitro+apps+to+Deno+Deploy.", "og:image:height": "600", "twitter:site": "@unjsio", "twitter:image:alt": "Deploy Nitro apps to Deno Deploy.", "twitter:image:width": "1200", "og:image:alt": "Deploy Nitro apps to Deno Deploy.", "ogImage": "https://nitro.build/_og/deploy/providers/deno-deploy.png?name=Nitro&title=Deno+Deploy&description=Deploy+Nitro+apps+to+Deno+Deploy.", "twitter:image:height": "600", "viewport": "width=device-width, initial-scale=1", "title": "Deno Deploy - Nitro", "description": "Deploy Nitro apps to Deno Deploy.", "og:image:type": "image/png", "og:image:width": "1200", "scrapeId": "11a3c347-bac5-422a-af7f-d75b5d5ad4e6", "sourceURL": "https://nitro.build/deploy/providers/deno-deploy", "url": "https://nitro.build/deploy/providers/deno-deploy", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: How do I deploy with the cli in nitro-deploy?\n\nAssistant: To deploy with the cli in nitro-deploy, here's what you do:\nYou can use [deployctl](https://deno.com/deploy/docs/deployctl) to deploy your app.\n\nLogin to [Deno Deploy](https://dash.deno.com/account#access-tokens) to obtain a `DENO_DEPLOY_TOKEN` access token, and set it as an environment variable.\n\n```\n# Build with the deno_deploy NITRO preset\nNITRO_PRESET=deno_deploy npm run build\n\n# Make sure to run the deployctl command from the output directory\ncd .output\ndeployctl deploy --project=my-project server/index.ts\n``.\nPretty straightforward, right?", "metadata": {"source_url": "https://nitro.build/deploy/providers/deno-deploy", "title": "Deno Deploy", "description": "Deploy Nitro apps to Deno Deploy.", "has_code_examples": true, "has_best_practices": false, "section_count": 3, "timestamp": "2025-03-01 01:25:18", "type": "section_detail", "page_metadata": {"favicon": "https://nitro.build/icon.svg", "twitter:image": "https://nitro.build/_og/deploy/providers/deno-deploy.png?name=Nitro&title=Deno+Deploy&description=Deploy+Nitro+apps+to+Deno+Deploy.", "og:image": "https://nitro.build/_og/deploy/providers/deno-deploy.png?name=Nitro&title=Deno+Deploy&description=Deploy+Nitro+apps+to+Deno+Deploy.", "og:image:height": "600", "twitter:site": "@unjsio", "twitter:image:alt": "Deploy Nitro apps to Deno Deploy.", "twitter:image:width": "1200", "og:image:alt": "Deploy Nitro apps to Deno Deploy.", "ogImage": "https://nitro.build/_og/deploy/providers/deno-deploy.png?name=Nitro&title=Deno+Deploy&description=Deploy+Nitro+apps+to+Deno+Deploy.", "twitter:image:height": "600", "viewport": "width=device-width, initial-scale=1", "title": "Deno Deploy - Nitro", "description": "Deploy Nitro apps to Deno Deploy.", "og:image:type": "image/png", "og:image:width": "1200", "scrapeId": "11a3c347-bac5-422a-af7f-d75b5d5ad4e6", "sourceURL": "https://nitro.build/deploy/providers/deno-deploy", "url": "https://nitro.build/deploy/providers/deno-deploy", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: How do I deploy within ci/cd using github actions in nitro-deploy?\n\nAssistant: To deploy within ci/cd using github actions in nitro-deploy, here's what you do:\nYou just need to include the deployctl GitHub Action as a step in your workflow.\n\nYou do not need to set up any secrets for this to work. You do need to link your GitHub repository to your Deno Deploy project and choose the \"GitHub Actions\" deployment mode. You can do this in your project settings on [Deno Deploy](https://dash.deno.com/).\n\nCreate the following workflow file in your `.github/workflows` directory:\n\n.github/workflows/deno_deploy.yml\n\n```\nname: deno-deploy\n\non:\n  push:\n    branches:\n      - main\n  pull_request:\n    branches:\n      - main\n\njobs:\n  deploy:\n    steps:\n      - uses: actions/checkout@v3\n      - run: corepack enable\n      - uses: actions/setup-node@v3\n        with:\n          node-version: 18\n          cache: pnpm\n      - run: pnpm install\n      - run: pnpm build\n        env:\n          NITRO_PRESET: deno_deploy\n      - name: Deploy to Deno Deploy\n        uses: denoland/deployctl@v1\n        with:\n          project: my-project\n          entrypoint: server/index.ts\n          root: .output\n``.\nPretty straightforward, right?", "metadata": {"source_url": "https://nitro.build/deploy/providers/deno-deploy", "title": "Deno Deploy", "description": "Deploy Nitro apps to Deno Deploy.", "has_code_examples": true, "has_best_practices": false, "section_count": 3, "timestamp": "2025-03-01 01:25:18", "type": "section_detail", "page_metadata": {"favicon": "https://nitro.build/icon.svg", "twitter:image": "https://nitro.build/_og/deploy/providers/deno-deploy.png?name=Nitro&title=Deno+Deploy&description=Deploy+Nitro+apps+to+Deno+Deploy.", "og:image": "https://nitro.build/_og/deploy/providers/deno-deploy.png?name=Nitro&title=Deno+Deploy&description=Deploy+Nitro+apps+to+Deno+Deploy.", "og:image:height": "600", "twitter:site": "@unjsio", "twitter:image:alt": "Deploy Nitro apps to Deno Deploy.", "twitter:image:width": "1200", "og:image:alt": "Deploy Nitro apps to Deno Deploy.", "ogImage": "https://nitro.build/_og/deploy/providers/deno-deploy.png?name=Nitro&title=Deno+Deploy&description=Deploy+Nitro+apps+to+Deno+Deploy.", "twitter:image:height": "600", "viewport": "width=device-width, initial-scale=1", "title": "Deno Deploy - Nitro", "description": "Deploy Nitro apps to Deno Deploy.", "og:image:type": "image/png", "og:image:width": "1200", "scrapeId": "11a3c347-bac5-422a-af7f-d75b5d5ad4e6", "sourceURL": "https://nitro.build/deploy/providers/deno-deploy", "url": "https://nitro.build/deploy/providers/deno-deploy", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: How do I deno runtime in nitro-deploy?\n\nAssistant: To deno runtime in nitro-deploy, here's what you do:\nRead more in Deploy > Runtimes > Deno..\nPretty straightforward, right?", "metadata": {"source_url": "https://nitro.build/deploy/providers/deno-deploy", "title": "Deno Deploy", "description": "Deploy Nitro apps to Deno Deploy.", "has_code_examples": true, "has_best_practices": false, "section_count": 3, "timestamp": "2025-03-01 01:25:18", "type": "section_detail", "page_metadata": {"favicon": "https://nitro.build/icon.svg", "twitter:image": "https://nitro.build/_og/deploy/providers/deno-deploy.png?name=Nitro&title=Deno+Deploy&description=Deploy+Nitro+apps+to+Deno+Deploy.", "og:image": "https://nitro.build/_og/deploy/providers/deno-deploy.png?name=Nitro&title=Deno+Deploy&description=Deploy+Nitro+apps+to+Deno+Deploy.", "og:image:height": "600", "twitter:site": "@unjsio", "twitter:image:alt": "Deploy Nitro apps to Deno Deploy.", "twitter:image:width": "1200", "og:image:alt": "Deploy Nitro apps to Deno Deploy.", "ogImage": "https://nitro.build/_og/deploy/providers/deno-deploy.png?name=Nitro&title=Deno+Deploy&description=Deploy+Nitro+apps+to+Deno+Deploy.", "twitter:image:height": "600", "viewport": "width=device-width, initial-scale=1", "title": "Deno Deploy - Nitro", "description": "Deploy Nitro apps to Deno Deploy.", "og:image:type": "image/png", "og:image:width": "1200", "scrapeId": "11a3c347-bac5-422a-af7f-d75b5d5ad4e6", "sourceURL": "https://nitro.build/deploy/providers/deno-deploy", "url": "https://nitro.build/deploy/providers/deno-deploy", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: Can you give me some code examples for Deno Deploy in nitro-deploy?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Deploy with the CLI**:\n\n```yaml\n# Build with the deno_deploy NITRO preset\nNITRO_PRESET=deno_deploy npm run build\n\n# Make sure to run the deployctl command from the output directory\ncd .output\ndeployctl deploy --project=my-project server/index.ts\n```\n\nThis snippet shows you how to deploy with the cli, which is an important aspect of deno deploy.\n\n**GitHub Actions Workflow for Deno Deploy**:\n\n```yaml\nname: deno-deploy\n\non:\n  push:\n    branches:\n      - main\n  pull_request:\n    branches:\n      - main\n\njobs:\n  deploy:\n    steps:\n      - uses: actions/checkout@v3\n      - run: corepack enable\n      - uses: actions/setup-node@v3\n        with:\n          node-version: 18\n          cache: pnpm\n      - run: pnpm install\n      - run: pnpm build\n        env:\n          NITRO_PRESET: deno_deploy\n      - name: Deploy to Deno Deploy\n        uses: denoland/deployctl@v1\n        with:\n          project: my-project\n          entrypoint: server/index.ts\n          root: .output\n```\n\nThis snippet shows you how to github actions workflow for deno deploy, which is an important aspect of deno deploy.\n\n", "metadata": {"source_url": "https://nitro.build/deploy/providers/deno-deploy", "title": "Deno Deploy", "description": "Deploy Nitro apps to Deno Deploy.", "has_code_examples": true, "has_best_practices": false, "section_count": 3, "timestamp": "2025-03-01 01:25:18", "type": "code_examples", "page_metadata": {"favicon": "https://nitro.build/icon.svg", "twitter:image": "https://nitro.build/_og/deploy/providers/deno-deploy.png?name=Nitro&title=Deno+Deploy&description=Deploy+Nitro+apps+to+Deno+Deploy.", "og:image": "https://nitro.build/_og/deploy/providers/deno-deploy.png?name=Nitro&title=Deno+Deploy&description=Deploy+Nitro+apps+to+Deno+Deploy.", "og:image:height": "600", "twitter:site": "@unjsio", "twitter:image:alt": "Deploy Nitro apps to Deno Deploy.", "twitter:image:width": "1200", "og:image:alt": "Deploy Nitro apps to Deno Deploy.", "ogImage": "https://nitro.build/_og/deploy/providers/deno-deploy.png?name=Nitro&title=Deno+Deploy&description=Deploy+Nitro+apps+to+Deno+Deploy.", "twitter:image:height": "600", "viewport": "width=device-width, initial-scale=1", "title": "Deno Deploy - Nitro", "description": "Deploy Nitro apps to Deno Deploy.", "og:image:type": "image/png", "og:image:width": "1200", "scrapeId": "11a3c347-bac5-422a-af7f-d75b5d5ad4e6", "sourceURL": "https://nitro.build/deploy/providers/deno-deploy", "url": "https://nitro.build/deploy/providers/deno-deploy", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: Can you explain what GitLab Pages is in nitro-deploy?\n\nAssistant: Sure, I'd be happy to explain GitLab Pages in nitro-deploy.\n\n# GitLab Pages\n\nDeploy Nitro apps to GitLab Pages.Here's a quick rundown of what this is about:\n\n## Setup\n\nFollow the steps to [create a GitLab Pages site](https://docs.gitlab.com/ee/user/project/pages/#getting-started).\n\n## Deployment\n\n1. Here is an example GitLab Pages workflow to deploy your site to GitLab Pages:\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://nitro.build/deploy/providers/gitlab-pages", "title": "GitLab Pages", "description": "Deploy Nitro apps to GitLab Pages.", "has_code_examples": true, "has_best_practices": false, "section_count": 2, "timestamp": "2025-03-01 01:37:29", "type": "overview", "page_metadata": {"title": "GitLab Pages - Nitro", "og:image:alt": "Deploy Nitro apps to GitLab Pages.", "twitter:image:width": "1200", "twitter:image": "https://nitro.build/_og/deploy/providers/gitlab-pages.png?name=Nitro&title=GitLab+Pages&description=Deploy+Nitro+apps+to+GitLab+Pages.", "og:image:type": "image/png", "og:image": "https://nitro.build/_og/deploy/providers/gitlab-pages.png?name=Nitro&title=GitLab+Pages&description=Deploy+Nitro+apps+to+GitLab+Pages.", "og:image:width": "1200", "ogImage": "https://nitro.build/_og/deploy/providers/gitlab-pages.png?name=Nitro&title=GitLab+Pages&description=Deploy+Nitro+apps+to+GitLab+Pages.", "description": "Deploy Nitro apps to GitLab Pages.", "twitter:image:alt": "Deploy Nitro apps to GitLab Pages.", "viewport": "width=device-width, initial-scale=1", "twitter:image:height": "600", "twitter:site": "@unjsio", "favicon": "https://nitro.build/icon.svg", "og:image:height": "600", "scrapeId": "19d396bb-51d1-401b-af54-8695bffb4ad0", "sourceURL": "https://nitro.build/deploy/providers/gitlab-pages", "url": "https://nitro.build/deploy/providers/gitlab-pages", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: How do I setup in nitro-deploy?\n\nAssistant: To setup in nitro-deploy, here's what you do:\nFollow the steps to [create a GitLab Pages site](https://docs.gitlab.com/ee/user/project/pages/#getting-started)..\nPretty straightforward, right?", "metadata": {"source_url": "https://nitro.build/deploy/providers/gitlab-pages", "title": "GitLab Pages", "description": "Deploy Nitro apps to GitLab Pages.", "has_code_examples": true, "has_best_practices": false, "section_count": 2, "timestamp": "2025-03-01 01:37:29", "type": "section_detail", "page_metadata": {"title": "GitLab Pages - Nitro", "og:image:alt": "Deploy Nitro apps to GitLab Pages.", "twitter:image:width": "1200", "twitter:image": "https://nitro.build/_og/deploy/providers/gitlab-pages.png?name=Nitro&title=GitLab+Pages&description=Deploy+Nitro+apps+to+GitLab+Pages.", "og:image:type": "image/png", "og:image": "https://nitro.build/_og/deploy/providers/gitlab-pages.png?name=Nitro&title=GitLab+Pages&description=Deploy+Nitro+apps+to+GitLab+Pages.", "og:image:width": "1200", "ogImage": "https://nitro.build/_og/deploy/providers/gitlab-pages.png?name=Nitro&title=GitLab+Pages&description=Deploy+Nitro+apps+to+GitLab+Pages.", "description": "Deploy Nitro apps to GitLab Pages.", "twitter:image:alt": "Deploy Nitro apps to GitLab Pages.", "viewport": "width=device-width, initial-scale=1", "twitter:image:height": "600", "twitter:site": "@unjsio", "favicon": "https://nitro.build/icon.svg", "og:image:height": "600", "scrapeId": "19d396bb-51d1-401b-af54-8695bffb4ad0", "sourceURL": "https://nitro.build/deploy/providers/gitlab-pages", "url": "https://nitro.build/deploy/providers/gitlab-pages", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: How do I deployment in nitro-deploy?\n\nAssistant: To deployment in nitro-deploy, here's what you do:\n1. Here is an example GitLab Pages workflow to deploy your site to GitLab Pages:.\nPretty straightforward, right?", "metadata": {"source_url": "https://nitro.build/deploy/providers/gitlab-pages", "title": "GitLab Pages", "description": "Deploy Nitro apps to GitLab Pages.", "has_code_examples": true, "has_best_practices": false, "section_count": 2, "timestamp": "2025-03-01 01:37:29", "type": "section_detail", "page_metadata": {"title": "GitLab Pages - Nitro", "og:image:alt": "Deploy Nitro apps to GitLab Pages.", "twitter:image:width": "1200", "twitter:image": "https://nitro.build/_og/deploy/providers/gitlab-pages.png?name=Nitro&title=GitLab+Pages&description=Deploy+Nitro+apps+to+GitLab+Pages.", "og:image:type": "image/png", "og:image": "https://nitro.build/_og/deploy/providers/gitlab-pages.png?name=Nitro&title=GitLab+Pages&description=Deploy+Nitro+apps+to+GitLab+Pages.", "og:image:width": "1200", "ogImage": "https://nitro.build/_og/deploy/providers/gitlab-pages.png?name=Nitro&title=GitLab+Pages&description=Deploy+Nitro+apps+to+GitLab+Pages.", "description": "Deploy Nitro apps to GitLab Pages.", "twitter:image:alt": "Deploy Nitro apps to GitLab Pages.", "viewport": "width=device-width, initial-scale=1", "twitter:image:height": "600", "twitter:site": "@unjsio", "favicon": "https://nitro.build/icon.svg", "og:image:height": "600", "scrapeId": "19d396bb-51d1-401b-af54-8695bffb4ad0", "sourceURL": "https://nitro.build/deploy/providers/gitlab-pages", "url": "https://nitro.build/deploy/providers/gitlab-pages", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: Can you give me some code examples for GitLab Pages in nitro-deploy?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**.gitlab-ci.yml**:\n\n```yaml\nimage: node:lts\nbefore_script:\n  - npx nypm install\npages:\n  cache:\n    paths:\n      - node_modules/\n  variables:\n    NITRO_PRESET: gitlab_pages\n  script:\n    - npm run build\n  artifacts:\n    paths:\n      - .output/public\n  publish: .output/public\n  rules:\n    # This ensures that only pushes to the default branch\n    # will trigger a pages deploy\n    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH\n\n```\n\nThis snippet shows you how to .gitlab-ci.yml, which is an important aspect of gitlab pages.\n\n", "metadata": {"source_url": "https://nitro.build/deploy/providers/gitlab-pages", "title": "GitLab Pages", "description": "Deploy Nitro apps to GitLab Pages.", "has_code_examples": true, "has_best_practices": false, "section_count": 2, "timestamp": "2025-03-01 01:37:29", "type": "code_examples", "page_metadata": {"title": "GitLab Pages - Nitro", "og:image:alt": "Deploy Nitro apps to GitLab Pages.", "twitter:image:width": "1200", "twitter:image": "https://nitro.build/_og/deploy/providers/gitlab-pages.png?name=Nitro&title=GitLab+Pages&description=Deploy+Nitro+apps+to+GitLab+Pages.", "og:image:type": "image/png", "og:image": "https://nitro.build/_og/deploy/providers/gitlab-pages.png?name=Nitro&title=GitLab+Pages&description=Deploy+Nitro+apps+to+GitLab+Pages.", "og:image:width": "1200", "ogImage": "https://nitro.build/_og/deploy/providers/gitlab-pages.png?name=Nitro&title=GitLab+Pages&description=Deploy+Nitro+apps+to+GitLab+Pages.", "description": "Deploy Nitro apps to GitLab Pages.", "twitter:image:alt": "Deploy Nitro apps to GitLab Pages.", "viewport": "width=device-width, initial-scale=1", "twitter:image:height": "600", "twitter:site": "@unjsio", "favicon": "https://nitro.build/icon.svg", "og:image:height": "600", "scrapeId": "19d396bb-51d1-401b-af54-8695bffb4ad0", "sourceURL": "https://nitro.build/deploy/providers/gitlab-pages", "url": "https://nitro.build/deploy/providers/gitlab-pages", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: Can you explain what WinterJS is in nitro-deploy?\n\nAssistant: Sure, I'd be happy to explain WinterJS in nitro-deploy.\n\n# WinterJS\n\nThis page covers the WinterJS runtime for building Nitro powered applications.Here's a quick rundown of what this is about:\n\n## Overview\n\nYou can easily build Nitro powered applications to run with [wasmerio/winterjs](https://github.com/wasmerio/winterjs) runtime.\n\n[WinterJS](https://github.com/wasmerio/winterjs) is a JavaScript Service Workers server written in Rust, that uses the SpiderMonkey runtime to execute JavaScript (the same runtime that Firefox uses) ( [announcement](https://wasmer.io/posts/announcing-winterjs-service-workers)).\n\n🚧 WinterJS runtime is unstable and under heavy development. Follow [nitrojs/nitro#1861](https://github.com/nitrojs/nitro/issues/1861) for status and information.\n\n## Building for WinterJS\n\nIn order to build for this runtime, use `NITRO_PRESET=\"winterjs\"` environment variable:\n\n```\nNITRO_PRESET=\"winterjs\" npm run build\n```\n\nMake sure you have `wasmer` installed locally ( [install wasmer](https://docs.wasmer.io/install)).\n\n## Running Locally\n\nRun locally:\n\n```\nwasmer run wasmer/winterjs --forward-host-env --net --mapdir app:.output app/server/index.mjs\n```\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://nitro.build/deploy/runtimes/_winterjs", "title": "WinterJS", "description": "This page covers the WinterJS runtime for building Nitro powered applications.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 01:37:46", "type": "overview", "page_metadata": {"title": "WinterJS - Nitro", "og:image": "https://nitro.build/_og/deploy/runtimes/_winterjs.png?name=Nitro&title=WinterJS&description=Create+web+servers+with+everything+you+need+and+deploy+them+wherever+you+prefer.", "favicon": "https://nitro.build/icon.svg", "twitter:image:width": "1200", "description": "", "twitter:image": "https://nitro.build/_og/deploy/runtimes/_winterjs.png?name=Nitro&title=WinterJS&description=Create+web+servers+with+everything+you+need+and+deploy+them+wherever+you+prefer.", "twitter:image:height": "600", "og:image:width": "1200", "twitter:site": "@unjsio", "ogImage": "https://nitro.build/_og/deploy/runtimes/_winterjs.png?name=Nitro&title=WinterJS&description=Create+web+servers+with+everything+you+need+and+deploy+them+wherever+you+prefer.", "og:image:alt": "Create web servers with everything you need and deploy them wherever you prefer.", "og:image:height": "600", "og:image:type": "image/png", "twitter:image:alt": "Create web servers with everything you need and deploy them wherever you prefer.", "viewport": "width=device-width, initial-scale=1", "scrapeId": "2a8960b9-6601-4e8f-bcc6-3048ea991871", "sourceURL": "https://nitro.build/deploy/runtimes/_winterjs", "url": "https://nitro.build/deploy/runtimes/_winterjs", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: How do I overview in nitro-deploy?\n\nAssistant: To overview in nitro-deploy, here's what you do:\nYou can easily build Nitro powered applications to run with [wasmerio/winterjs](https://github.com/wasmerio/winterjs) runtime.\n\n[WinterJS](https://github.com/wasmerio/winterjs) is a JavaScript Service Workers server written in Rust, that uses the SpiderMonkey runtime to execute JavaScript (the same runtime that Firefox uses) ( [announcement](https://wasmer.io/posts/announcing-winterjs-service-workers)).\n\n🚧 WinterJS runtime is unstable and under heavy development. Follow [nitrojs/nitro#1861](https://github.com/nitrojs/nitro/issues/1861) for status and information..\nPretty straightforward, right?", "metadata": {"source_url": "https://nitro.build/deploy/runtimes/_winterjs", "title": "WinterJS", "description": "This page covers the WinterJS runtime for building Nitro powered applications.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 01:37:46", "type": "section_detail", "page_metadata": {"title": "WinterJS - Nitro", "og:image": "https://nitro.build/_og/deploy/runtimes/_winterjs.png?name=Nitro&title=WinterJS&description=Create+web+servers+with+everything+you+need+and+deploy+them+wherever+you+prefer.", "favicon": "https://nitro.build/icon.svg", "twitter:image:width": "1200", "description": "", "twitter:image": "https://nitro.build/_og/deploy/runtimes/_winterjs.png?name=Nitro&title=WinterJS&description=Create+web+servers+with+everything+you+need+and+deploy+them+wherever+you+prefer.", "twitter:image:height": "600", "og:image:width": "1200", "twitter:site": "@unjsio", "ogImage": "https://nitro.build/_og/deploy/runtimes/_winterjs.png?name=Nitro&title=WinterJS&description=Create+web+servers+with+everything+you+need+and+deploy+them+wherever+you+prefer.", "og:image:alt": "Create web servers with everything you need and deploy them wherever you prefer.", "og:image:height": "600", "og:image:type": "image/png", "twitter:image:alt": "Create web servers with everything you need and deploy them wherever you prefer.", "viewport": "width=device-width, initial-scale=1", "scrapeId": "2a8960b9-6601-4e8f-bcc6-3048ea991871", "sourceURL": "https://nitro.build/deploy/runtimes/_winterjs", "url": "https://nitro.build/deploy/runtimes/_winterjs", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: How do I building for winterjs in nitro-deploy?\n\nAssistant: To building for winterjs in nitro-deploy, here's what you do:\nIn order to build for this runtime, use `NITRO_PRESET=\"winterjs\"` environment variable:\n\n```\nNITRO_PRESET=\"winterjs\" npm run build\n```\n\nMake sure you have `wasmer` installed locally ( [install wasmer](https://docs.wasmer.io/install))..\nPretty straightforward, right?", "metadata": {"source_url": "https://nitro.build/deploy/runtimes/_winterjs", "title": "WinterJS", "description": "This page covers the WinterJS runtime for building Nitro powered applications.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 01:37:46", "type": "section_detail", "page_metadata": {"title": "WinterJS - Nitro", "og:image": "https://nitro.build/_og/deploy/runtimes/_winterjs.png?name=Nitro&title=WinterJS&description=Create+web+servers+with+everything+you+need+and+deploy+them+wherever+you+prefer.", "favicon": "https://nitro.build/icon.svg", "twitter:image:width": "1200", "description": "", "twitter:image": "https://nitro.build/_og/deploy/runtimes/_winterjs.png?name=Nitro&title=WinterJS&description=Create+web+servers+with+everything+you+need+and+deploy+them+wherever+you+prefer.", "twitter:image:height": "600", "og:image:width": "1200", "twitter:site": "@unjsio", "ogImage": "https://nitro.build/_og/deploy/runtimes/_winterjs.png?name=Nitro&title=WinterJS&description=Create+web+servers+with+everything+you+need+and+deploy+them+wherever+you+prefer.", "og:image:alt": "Create web servers with everything you need and deploy them wherever you prefer.", "og:image:height": "600", "og:image:type": "image/png", "twitter:image:alt": "Create web servers with everything you need and deploy them wherever you prefer.", "viewport": "width=device-width, initial-scale=1", "scrapeId": "2a8960b9-6601-4e8f-bcc6-3048ea991871", "sourceURL": "https://nitro.build/deploy/runtimes/_winterjs", "url": "https://nitro.build/deploy/runtimes/_winterjs", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: How do I running locally in nitro-deploy?\n\nAssistant: To running locally in nitro-deploy, here's what you do:\nRun locally:\n\n```\nwasmer run wasmer/winterjs --forward-host-env --net --mapdir app:.output app/server/index.mjs\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://nitro.build/deploy/runtimes/_winterjs", "title": "WinterJS", "description": "This page covers the WinterJS runtime for building Nitro powered applications.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 01:37:46", "type": "section_detail", "page_metadata": {"title": "WinterJS - Nitro", "og:image": "https://nitro.build/_og/deploy/runtimes/_winterjs.png?name=Nitro&title=WinterJS&description=Create+web+servers+with+everything+you+need+and+deploy+them+wherever+you+prefer.", "favicon": "https://nitro.build/icon.svg", "twitter:image:width": "1200", "description": "", "twitter:image": "https://nitro.build/_og/deploy/runtimes/_winterjs.png?name=Nitro&title=WinterJS&description=Create+web+servers+with+everything+you+need+and+deploy+them+wherever+you+prefer.", "twitter:image:height": "600", "og:image:width": "1200", "twitter:site": "@unjsio", "ogImage": "https://nitro.build/_og/deploy/runtimes/_winterjs.png?name=Nitro&title=WinterJS&description=Create+web+servers+with+everything+you+need+and+deploy+them+wherever+you+prefer.", "og:image:alt": "Create web servers with everything you need and deploy them wherever you prefer.", "og:image:height": "600", "og:image:type": "image/png", "twitter:image:alt": "Create web servers with everything you need and deploy them wherever you prefer.", "viewport": "width=device-width, initial-scale=1", "scrapeId": "2a8960b9-6601-4e8f-bcc6-3048ea991871", "sourceURL": "https://nitro.build/deploy/runtimes/_winterjs", "url": "https://nitro.build/deploy/runtimes/_winterjs", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: Can you give me some code examples for WinterJS in nitro-deploy?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Build Command**:\n\n```yaml\nNITRO_PRESET=\"winterjs\" npm run build\n```\n\nThis snippet shows you how to build command, which is an important aspect of winterjs.\n\n**Run Command**:\n\n```yaml\nwasmer run wasmer/winterjs --forward-host-env --net --mapdir app:.output app/server/index.mjs\n```\n\nThis snippet shows you how to run command, which is an important aspect of winterjs.\n\n", "metadata": {"source_url": "https://nitro.build/deploy/runtimes/_winterjs", "title": "WinterJS", "description": "This page covers the WinterJS runtime for building Nitro powered applications.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 01:37:46", "type": "code_examples", "page_metadata": {"title": "WinterJS - Nitro", "og:image": "https://nitro.build/_og/deploy/runtimes/_winterjs.png?name=Nitro&title=WinterJS&description=Create+web+servers+with+everything+you+need+and+deploy+them+wherever+you+prefer.", "favicon": "https://nitro.build/icon.svg", "twitter:image:width": "1200", "description": "", "twitter:image": "https://nitro.build/_og/deploy/runtimes/_winterjs.png?name=Nitro&title=WinterJS&description=Create+web+servers+with+everything+you+need+and+deploy+them+wherever+you+prefer.", "twitter:image:height": "600", "og:image:width": "1200", "twitter:site": "@unjsio", "ogImage": "https://nitro.build/_og/deploy/runtimes/_winterjs.png?name=Nitro&title=WinterJS&description=Create+web+servers+with+everything+you+need+and+deploy+them+wherever+you+prefer.", "og:image:alt": "Create web servers with everything you need and deploy them wherever you prefer.", "og:image:height": "600", "og:image:type": "image/png", "twitter:image:alt": "Create web servers with everything you need and deploy them wherever you prefer.", "viewport": "width=device-width, initial-scale=1", "scrapeId": "2a8960b9-6601-4e8f-bcc6-3048ea991871", "sourceURL": "https://nitro.build/deploy/runtimes/_winterjs", "url": "https://nitro.build/deploy/runtimes/_winterjs", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: What are some tips for using WinterJS in nitro-deploy effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nEnsure you have wasmer installed locally before running the commands.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://nitro.build/deploy/runtimes/_winterjs", "title": "WinterJS", "description": "This page covers the WinterJS runtime for building Nitro powered applications.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 01:37:46", "type": "best_practices", "page_metadata": {"title": "WinterJS - Nitro", "og:image": "https://nitro.build/_og/deploy/runtimes/_winterjs.png?name=Nitro&title=WinterJS&description=Create+web+servers+with+everything+you+need+and+deploy+them+wherever+you+prefer.", "favicon": "https://nitro.build/icon.svg", "twitter:image:width": "1200", "description": "", "twitter:image": "https://nitro.build/_og/deploy/runtimes/_winterjs.png?name=Nitro&title=WinterJS&description=Create+web+servers+with+everything+you+need+and+deploy+them+wherever+you+prefer.", "twitter:image:height": "600", "og:image:width": "1200", "twitter:site": "@unjsio", "ogImage": "https://nitro.build/_og/deploy/runtimes/_winterjs.png?name=Nitro&title=WinterJS&description=Create+web+servers+with+everything+you+need+and+deploy+them+wherever+you+prefer.", "og:image:alt": "Create web servers with everything you need and deploy them wherever you prefer.", "og:image:height": "600", "og:image:type": "image/png", "twitter:image:alt": "Create web servers with everything you need and deploy them wherever you prefer.", "viewport": "width=device-width, initial-scale=1", "scrapeId": "2a8960b9-6601-4e8f-bcc6-3048ea991871", "sourceURL": "https://nitro.build/deploy/runtimes/_winterjs", "url": "https://nitro.build/deploy/runtimes/_winterjs", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: Can you explain what Deploy is in nitro-deploy?\n\nAssistant: Sure, I'd be happy to explain Deploy in nitro-deploy.\n\n# Deploy\n\nNitro provides out of the box support for deploying to Edge Workers.Here's a quick rundown of what this is about:\n\n## Deploy to workers\n\nNitro provides out of the box support for deploying any Nitro app to different Edge Worker offerings as well as Service Workers.\n\n- [Cloudflare](https://nitro.build/deploy/providers/cloudflare)\n- [Deno Deploy](https://nitro.build/deploy/providers/deno-deploy)\n- [Vercel](https://nitro.build/deploy/providers/vercel#vercel-edge-functions)\n- [Netlify](https://nitro.build/deploy/providers/netlify#netlify-edge-functions)\n- [Browser Service Workers](https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API) (via experimental preset `service-worker`)\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://nitro.build/deploy/workers", "title": "Deploy", "description": "Nitro provides out of the box support for deploying to Edge Workers.", "has_code_examples": true, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 01:38:01", "type": "overview", "page_metadata": {"twitter:image:height": "600", "viewport": "width=device-width, initial-scale=1", "favicon": "https://nitro.build/icon.svg", "twitter:site": "@unjsio", "description": "Nitro provides out of the box support for deploying to Edge Workers.", "og:image:alt": "Nitro provides out of the box support for deploying to Edge Workers.", "og:image:height": "600", "og:image": "https://nitro.build/_og/deploy/workers.png?name=Nitro&title=Edge+Workers&description=Nitro+provides+out+of+the+box+support+for+deploying+to+Edge+Workers.", "title": "Edge Workers - Nitro", "twitter:image:width": "1200", "ogImage": "https://nitro.build/_og/deploy/workers.png?name=Nitro&title=Edge+Workers&description=Nitro+provides+out+of+the+box+support+for+deploying+to+Edge+Workers.", "twitter:image": "https://nitro.build/_og/deploy/workers.png?name=Nitro&title=Edge+Workers&description=Nitro+provides+out+of+the+box+support+for+deploying+to+Edge+Workers.", "og:image:type": "image/png", "og:image:width": "1200", "twitter:image:alt": "Nitro provides out of the box support for deploying to Edge Workers.", "scrapeId": "5606c487-a42c-475b-9d6e-5ef97f9973b3", "sourceURL": "https://nitro.build/deploy/workers", "url": "https://nitro.build/deploy/workers", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: How do I deploy to workers in nitro-deploy?\n\nAssistant: To deploy to workers in nitro-deploy, here's what you do:\nNitro provides out of the box support for deploying any Nitro app to different Edge Worker offerings as well as Service Workers.\n\n- [Cloudflare](https://nitro.build/deploy/providers/cloudflare)\n- [Deno Deploy](https://nitro.build/deploy/providers/deno-deploy)\n- [Vercel](https://nitro.build/deploy/providers/vercel#vercel-edge-functions)\n- [Netlify](https://nitro.build/deploy/providers/netlify#netlify-edge-functions)\n- [Browser Service Workers](https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API) (via experimental preset `service-worker`).\nPretty straightforward, right?", "metadata": {"source_url": "https://nitro.build/deploy/workers", "title": "Deploy", "description": "Nitro provides out of the box support for deploying to Edge Workers.", "has_code_examples": true, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 01:38:01", "type": "section_detail", "page_metadata": {"twitter:image:height": "600", "viewport": "width=device-width, initial-scale=1", "favicon": "https://nitro.build/icon.svg", "twitter:site": "@unjsio", "description": "Nitro provides out of the box support for deploying to Edge Workers.", "og:image:alt": "Nitro provides out of the box support for deploying to Edge Workers.", "og:image:height": "600", "og:image": "https://nitro.build/_og/deploy/workers.png?name=Nitro&title=Edge+Workers&description=Nitro+provides+out+of+the+box+support+for+deploying+to+Edge+Workers.", "title": "Edge Workers - Nitro", "twitter:image:width": "1200", "ogImage": "https://nitro.build/_og/deploy/workers.png?name=Nitro&title=Edge+Workers&description=Nitro+provides+out+of+the+box+support+for+deploying+to+Edge+Workers.", "twitter:image": "https://nitro.build/_og/deploy/workers.png?name=Nitro&title=Edge+Workers&description=Nitro+provides+out+of+the+box+support+for+deploying+to+Edge+Workers.", "og:image:type": "image/png", "og:image:width": "1200", "twitter:image:alt": "Nitro provides out of the box support for deploying to Edge Workers.", "scrapeId": "5606c487-a42c-475b-9d6e-5ef97f9973b3", "sourceURL": "https://nitro.build/deploy/workers", "url": "https://nitro.build/deploy/workers", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: Can you give me some code examples for Deploy in nitro-deploy?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**MongoDB Example**:\n\n```yaml\nThere are possible fixes for MongoDB, like using Realm and the [Realm SDK](https://www.mongodb.com/docs/realm/sdk/node/) or using http interfaces (only available when self hosting MongoDB), but these are untested. You can find an example for using realm [here](https://github.com/albionstatus/albionstatus-backend/)\n```\n\nThis snippet shows you how to mongodb example, which is an important aspect of deploy.\n\n**MySQL Example**:\n\n```yaml\nYou can find an example with a modified MySQL driver [here](https://github.com/cloudflare/worker-template-mysql)\n```\n\nThis snippet shows you how to mysql example, which is an important aspect of deploy.\n\n", "metadata": {"source_url": "https://nitro.build/deploy/workers", "title": "Deploy", "description": "Nitro provides out of the box support for deploying to Edge Workers.", "has_code_examples": true, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 01:38:01", "type": "code_examples", "page_metadata": {"twitter:image:height": "600", "viewport": "width=device-width, initial-scale=1", "favicon": "https://nitro.build/icon.svg", "twitter:site": "@unjsio", "description": "Nitro provides out of the box support for deploying to Edge Workers.", "og:image:alt": "Nitro provides out of the box support for deploying to Edge Workers.", "og:image:height": "600", "og:image": "https://nitro.build/_og/deploy/workers.png?name=Nitro&title=Edge+Workers&description=Nitro+provides+out+of+the+box+support+for+deploying+to+Edge+Workers.", "title": "Edge Workers - Nitro", "twitter:image:width": "1200", "ogImage": "https://nitro.build/_og/deploy/workers.png?name=Nitro&title=Edge+Workers&description=Nitro+provides+out+of+the+box+support+for+deploying+to+Edge+Workers.", "twitter:image": "https://nitro.build/_og/deploy/workers.png?name=Nitro&title=Edge+Workers&description=Nitro+provides+out+of+the+box+support+for+deploying+to+Edge+Workers.", "og:image:type": "image/png", "og:image:width": "1200", "twitter:image:alt": "Nitro provides out of the box support for deploying to Edge Workers.", "scrapeId": "5606c487-a42c-475b-9d6e-5ef97f9973b3", "sourceURL": "https://nitro.build/deploy/workers", "url": "https://nitro.build/deploy/workers", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: What are some tips for using Deploy in nitro-deploy effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nIf you come across a library that you assume to be incompatible with edge workers, please open an issue on the nitro repo and help us keeping this list up to date.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://nitro.build/deploy/workers", "title": "Deploy", "description": "Nitro provides out of the box support for deploying to Edge Workers.", "has_code_examples": true, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 01:38:01", "type": "best_practices", "page_metadata": {"twitter:image:height": "600", "viewport": "width=device-width, initial-scale=1", "favicon": "https://nitro.build/icon.svg", "twitter:site": "@unjsio", "description": "Nitro provides out of the box support for deploying to Edge Workers.", "og:image:alt": "Nitro provides out of the box support for deploying to Edge Workers.", "og:image:height": "600", "og:image": "https://nitro.build/_og/deploy/workers.png?name=Nitro&title=Edge+Workers&description=Nitro+provides+out+of+the+box+support+for+deploying+to+Edge+Workers.", "title": "Edge Workers - Nitro", "twitter:image:width": "1200", "ogImage": "https://nitro.build/_og/deploy/workers.png?name=Nitro&title=Edge+Workers&description=Nitro+provides+out+of+the+box+support+for+deploying+to+Edge+Workers.", "twitter:image": "https://nitro.build/_og/deploy/workers.png?name=Nitro&title=Edge+Workers&description=Nitro+provides+out+of+the+box+support+for+deploying+to+Edge+Workers.", "og:image:type": "image/png", "og:image:width": "1200", "twitter:image:alt": "Nitro provides out of the box support for deploying to Edge Workers.", "scrapeId": "5606c487-a42c-475b-9d6e-5ef97f9973b3", "sourceURL": "https://nitro.build/deploy/workers", "url": "https://nitro.build/deploy/workers", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: Can you explain what Firebase is in nitro-deploy?\n\nAssistant: Sure, I'd be happy to explain Firebase in nitro-deploy.\n\n# Firebase\n\nDeploy Nitro apps to Firebase hosting.Here's a quick rundown of what this is about:\n\n## Firebase hosting\n\n**Preset:** `firebase`\n\nRead more in Firebase Hosting.\n\nThis preset will deploy to firebase functions 1st gen by default. If you want to deploy to firebase functions 2nd gen, see the [instructions below](https://nitro.build/deploy/providers/firebase#using-2nd-generation-firebase-functions).\n\n## Project Setup\n\n### Using firebase CLI (recommended)\n\nYou may instead prefer to set up your project with the Firebase CLI, which will fetch your project ID for you, add required dependencies (see above) and even set up automated deployments via GitHub Actions (for hosting only). [Learn about installing the firebase CLI](https://firebase.google.com/docs/cli#windows-npm).\n\n1. Install firebase CLI globally\n\nAlways try to use the latest version of the Firebase CLI.\n\n```\nnpm install -g firebase-tools@latest\n```\n\n**Note**: You need to be on [^11.18.0](https://github.com/firebase/firebase-tools/releases/tag/v11.18.0) to deploy a `nodejs18` function.\n\n2. Initialize your firebase project\n\n```\nfirebase login\nfirebase init hosting\n```\n\nWhen prompted, you can enter `.output/public` as the public directory. In the next step, **do not** configure your project as a single-page app.\n\nOnce complete, add the following to your `firebase.json` to enable server rendering in Cloud Functions:\n\nfirebase.json\n\n```\n{\n  \"functions\": { \"source\": \".output/server\" },\n  \"hosting\": [\\\n    {\\\n      \"site\": \"<your_project_id>\",\\\n      \"public\": \".output/public\",\\\n      \"cleanUrls\": true,\\\n      \"rewrites\": [{ \"source\": \"**\", \"function\": \"server\" }]\\\n    }\\\n  ]\n}\n```\n\nYou can find more details in the [Firebase documentation](https://firebase.google.com/docs/hosting/quickstart).\n\n## Alternative method\n\nIf you don't already have a `firebase.json` in your root directory, Nitro will create one the first time you run it. In this file, you will need to replace `<your_project_id>` with the ID of your Firebase project. This file should then be committed to the git.\n\n1. Create a `.firebaserc` file\n\nIt is recommended to create a `.firebaserc` file so you don't need to manually pass your project ID to your `firebase` commands (with `--project <your_project_id>`):\n\n.firebaserc\n\n```\n{\n  \"projects\": {\n    \"default\": \"<your_project_id>\"\n  }\n}\n```\n\nThis file is usually generated when you initialize your project with the Firebase CLI. But if you don't have one, you can create it manually.\n\n2. Install firebase dependencies\n\nThen, add Firebase dependencies to your project:\n\nnpmyarnpnpmbundeno\n\n```\nnpm i firebase-admin firebase-functions firebase-functions-test\n```\n\n3. Log into the firebase CLI\n\nMake sure you are authenticated with the firebase cli. Run this command and follow the prompts:\n\nnpmyarnpnpmbundeno\n\n```\nnpx firebase-tools login\n```\n\n## Local preview\n\nYou can preview a local version of your site if you need to test things out without deploying.\n\n```\nNITRO_PRESET=firebase npm run build\nfirebase emulators:start\n```\n\n## Build and deploy\n\nDeploy to Firebase Hosting by running a Nitro build and then running the `firebase deploy` command.\n\n```\nNITRO_PRESET=firebase npm run build\n```\n\nnpmyarnpnpmbundeno\n\n```\nnpx firebase-tools deploy\n```\n\nIf you installed the Firebase CLI globally, you can also run:\n\n```\nfirebase deploy\n```\n\n## Using 2nd generation firebase functions\n\n- [Comparison between 1st and 2nd generation functions](https://firebase.google.com/docs/functions/version-comparison)\n\nTo switch to the more recent and, recommended generation of firebase functions, set the `firebase.gen` option to `2`:\n\nnitro.config.tsnuxt.config.ts\n\n```\nexport default defineNitroConfig({\n  firebase: {\n    gen: 2\n    // ...\n  }\n})\n```\n\nIf you cannot use configuration for any reason, alternatively you can use `NITRO_FIREBASE_GEN` environment variable.\n\nIf you already have a deployed version of your website and want to upgrade to 2nd gen, [see the Migration process on Firebase docs](https://firebase.google.com/docs/functions/2nd-gen-upgrade). Namely, the CLI will ask you to delete your existing functions before deploying the new ones.\n\n## Options\n\nYou can set options for the firebase functions in your `nitro.config.ts` file:\nnitro.config.tsnuxt.config.ts\n\n```\nexport default defineNitroConfig({\n  firebase: {\n    gen: 2,\n    httpsOptions: {\n      region: 'europe-west1',\n      maxInstances: 3,\n    },\n  },\n});\n```\n\nYou can also set options for 1st generation Cloud Functions if the `gen` option is set to `1`. Note these are different from the options for 2nd generation Cloud Functions.\n\n## Runtime Node.js version\n\nYou can set custom Node.js version in configuration:\nnitro.config.tsnuxt.config.ts\n\n```\nexport default defineNitroConfig({\n  firebase: {\n    nodeVersion: \"20\" // Can be \"16\", \"18\", \"20\" or \"22\"\n  },\n});\n```\n\nFirebase tools use the `engines.node` version in `package.json` to determine which node version to use for your functions. Nitro automatically writes to the `.output/server/package.json` with configured Node.js version.\n\nYou might also need to add a runtime key to your `firebase.json` file:\n\nfirebase.json\n\n```\n{\n  \"functions\": {\n    \"source\": \".output/server\",\n    \"runtime\": \"nodejs20\"\n  }\n}\n```\n\nYou can read more about this in [Firebase Docs](https://firebase.google.com/docs/functions/manage-functions?gen=2nd#set_nodejs_version).\n\n## If your firebase project has other cloud functions\n\nYou may be warned that other cloud functions will be deleted when you deploy your nitro project. This is because nitro will deploy your entire project to firebase functions. If you want to deploy only your nitro project, you can use the `--only` flag:\n\n```\nfirebase deploy --only functions:server,hosting\n```\n\n## Advanced\n\n### Renaming function\n\nWhen deploying multiple apps within the same Firebase project, you must give your server a unique name in order to avoid overwriting your functions.\n\nYou can specify a new name for the deployed Firebase function in your configuration:\nnitro.config.tsnuxt.config.ts\n\n```\nexport default defineNitroConfig({\n  firebase: {\n    serverFunctionName: \"<new_function_name>\"\n  }\n})\n```\n\n`firebase.serverFunctionName` must be a valid JS variable name and cannot include dashes ( `-`).\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://nitro.build/deploy/providers/firebase", "title": "Firebase", "description": "Deploy Nitro apps to Firebase hosting.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 01:41:59", "type": "overview", "page_metadata": {"og:image:alt": "Deploy Nitro apps to Firebase hosting.", "og:image:height": "600", "description": "Deploy Nitro apps to Firebase hosting.", "twitter:site": "@unjsio", "twitter:image:alt": "Deploy Nitro apps to Firebase hosting.", "title": "Firebase - Nitro", "twitter:image:width": "1200", "og:image:width": "1200", "og:image:type": "image/png", "og:image": "https://nitro.build/_og/deploy/providers/firebase.png?name=Nitro&title=Firebase&description=Deploy+Nitro+apps+to+Firebase+hosting.", "viewport": "width=device-width, initial-scale=1", "favicon": "https://nitro.build/icon.svg", "twitter:image": "https://nitro.build/_og/deploy/providers/firebase.png?name=Nitro&title=Firebase&description=Deploy+Nitro+apps+to+Firebase+hosting.", "ogImage": "https://nitro.build/_og/deploy/providers/firebase.png?name=Nitro&title=Firebase&description=Deploy+Nitro+apps+to+Firebase+hosting.", "twitter:image:height": "600", "scrapeId": "8cf73e7b-7a59-40a8-be89-28e1d168c79e", "sourceURL": "https://nitro.build/deploy/providers/firebase", "url": "https://nitro.build/deploy/providers/firebase", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: How do I firebase hosting in nitro-deploy?\n\nAssistant: To firebase hosting in nitro-deploy, here's what you do:\n**Preset:** `firebase`\n\nRead more in Firebase Hosting.\n\nThis preset will deploy to firebase functions 1st gen by default. If you want to deploy to firebase functions 2nd gen, see the [instructions below](https://nitro.build/deploy/providers/firebase#using-2nd-generation-firebase-functions)..\nPretty straightforward, right?", "metadata": {"source_url": "https://nitro.build/deploy/providers/firebase", "title": "Firebase", "description": "Deploy Nitro apps to Firebase hosting.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 01:41:59", "type": "section_detail", "page_metadata": {"og:image:alt": "Deploy Nitro apps to Firebase hosting.", "og:image:height": "600", "description": "Deploy Nitro apps to Firebase hosting.", "twitter:site": "@unjsio", "twitter:image:alt": "Deploy Nitro apps to Firebase hosting.", "title": "Firebase - Nitro", "twitter:image:width": "1200", "og:image:width": "1200", "og:image:type": "image/png", "og:image": "https://nitro.build/_og/deploy/providers/firebase.png?name=Nitro&title=Firebase&description=Deploy+Nitro+apps+to+Firebase+hosting.", "viewport": "width=device-width, initial-scale=1", "favicon": "https://nitro.build/icon.svg", "twitter:image": "https://nitro.build/_og/deploy/providers/firebase.png?name=Nitro&title=Firebase&description=Deploy+Nitro+apps+to+Firebase+hosting.", "ogImage": "https://nitro.build/_og/deploy/providers/firebase.png?name=Nitro&title=Firebase&description=Deploy+Nitro+apps+to+Firebase+hosting.", "twitter:image:height": "600", "scrapeId": "8cf73e7b-7a59-40a8-be89-28e1d168c79e", "sourceURL": "https://nitro.build/deploy/providers/firebase", "url": "https://nitro.build/deploy/providers/firebase", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: How do I project setup in nitro-deploy?\n\nAssistant: To project setup in nitro-deploy, here's what you do:\n### Using firebase CLI (recommended)\n\nYou may instead prefer to set up your project with the Firebase CLI, which will fetch your project ID for you, add required dependencies (see above) and even set up automated deployments via GitHub Actions (for hosting only). [Learn about installing the firebase CLI](https://firebase.google.com/docs/cli#windows-npm).\n\n1. Install firebase CLI globally\n\nAlways try to use the latest version of the Firebase CLI.\n\n```\nnpm install -g firebase-tools@latest\n```\n\n**Note**: You need to be on [^11.18.0](https://github.com/firebase/firebase-tools/releases/tag/v11.18.0) to deploy a `nodejs18` function.\n\n2. Initialize your firebase project\n\n```\nfirebase login\nfirebase init hosting\n```\n\nWhen prompted, you can enter `.output/public` as the public directory. In the next step, **do not** configure your project as a single-page app.\n\nOnce complete, add the following to your `firebase.json` to enable server rendering in Cloud Functions:\n\nfirebase.json\n\n```\n{\n  \"functions\": { \"source\": \".output/server\" },\n  \"hosting\": [\\\n    {\\\n      \"site\": \"<your_project_id>\",\\\n      \"public\": \".output/public\",\\\n      \"cleanUrls\": true,\\\n      \"rewrites\": [{ \"source\": \"**\", \"function\": \"server\" }]\\\n    }\\\n  ]\n}\n```\n\nYou can find more details in the [Firebase documentation](https://firebase.google.com/docs/hosting/quickstart)..\nPretty straightforward, right?", "metadata": {"source_url": "https://nitro.build/deploy/providers/firebase", "title": "Firebase", "description": "Deploy Nitro apps to Firebase hosting.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 01:41:59", "type": "section_detail", "page_metadata": {"og:image:alt": "Deploy Nitro apps to Firebase hosting.", "og:image:height": "600", "description": "Deploy Nitro apps to Firebase hosting.", "twitter:site": "@unjsio", "twitter:image:alt": "Deploy Nitro apps to Firebase hosting.", "title": "Firebase - Nitro", "twitter:image:width": "1200", "og:image:width": "1200", "og:image:type": "image/png", "og:image": "https://nitro.build/_og/deploy/providers/firebase.png?name=Nitro&title=Firebase&description=Deploy+Nitro+apps+to+Firebase+hosting.", "viewport": "width=device-width, initial-scale=1", "favicon": "https://nitro.build/icon.svg", "twitter:image": "https://nitro.build/_og/deploy/providers/firebase.png?name=Nitro&title=Firebase&description=Deploy+Nitro+apps+to+Firebase+hosting.", "ogImage": "https://nitro.build/_og/deploy/providers/firebase.png?name=Nitro&title=Firebase&description=Deploy+Nitro+apps+to+Firebase+hosting.", "twitter:image:height": "600", "scrapeId": "8cf73e7b-7a59-40a8-be89-28e1d168c79e", "sourceURL": "https://nitro.build/deploy/providers/firebase", "url": "https://nitro.build/deploy/providers/firebase", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: How do I alternative method in nitro-deploy?\n\nAssistant: To alternative method in nitro-deploy, here's what you do:\nIf you don't already have a `firebase.json` in your root directory, Nitro will create one the first time you run it. In this file, you will need to replace `<your_project_id>` with the ID of your Firebase project. This file should then be committed to the git.\n\n1. Create a `.firebaserc` file\n\nIt is recommended to create a `.firebaserc` file so you don't need to manually pass your project ID to your `firebase` commands (with `--project <your_project_id>`):\n\n.firebaserc\n\n```\n{\n  \"projects\": {\n    \"default\": \"<your_project_id>\"\n  }\n}\n```\n\nThis file is usually generated when you initialize your project with the Firebase CLI. But if you don't have one, you can create it manually.\n\n2. Install firebase dependencies\n\nThen, add Firebase dependencies to your project:\n\nnpmyarnpnpmbundeno\n\n```\nnpm i firebase-admin firebase-functions firebase-functions-test\n```\n\n3. Log into the firebase CLI\n\nMake sure you are authenticated with the firebase cli. Run this command and follow the prompts:\n\nnpmyarnpnpmbundeno\n\n```\nnpx firebase-tools login\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://nitro.build/deploy/providers/firebase", "title": "Firebase", "description": "Deploy Nitro apps to Firebase hosting.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 01:41:59", "type": "section_detail", "page_metadata": {"og:image:alt": "Deploy Nitro apps to Firebase hosting.", "og:image:height": "600", "description": "Deploy Nitro apps to Firebase hosting.", "twitter:site": "@unjsio", "twitter:image:alt": "Deploy Nitro apps to Firebase hosting.", "title": "Firebase - Nitro", "twitter:image:width": "1200", "og:image:width": "1200", "og:image:type": "image/png", "og:image": "https://nitro.build/_og/deploy/providers/firebase.png?name=Nitro&title=Firebase&description=Deploy+Nitro+apps+to+Firebase+hosting.", "viewport": "width=device-width, initial-scale=1", "favicon": "https://nitro.build/icon.svg", "twitter:image": "https://nitro.build/_og/deploy/providers/firebase.png?name=Nitro&title=Firebase&description=Deploy+Nitro+apps+to+Firebase+hosting.", "ogImage": "https://nitro.build/_og/deploy/providers/firebase.png?name=Nitro&title=Firebase&description=Deploy+Nitro+apps+to+Firebase+hosting.", "twitter:image:height": "600", "scrapeId": "8cf73e7b-7a59-40a8-be89-28e1d168c79e", "sourceURL": "https://nitro.build/deploy/providers/firebase", "url": "https://nitro.build/deploy/providers/firebase", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: How do I local preview in nitro-deploy?\n\nAssistant: To local preview in nitro-deploy, here's what you do:\nYou can preview a local version of your site if you need to test things out without deploying.\n\n```\nNITRO_PRESET=firebase npm run build\nfirebase emulators:start\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://nitro.build/deploy/providers/firebase", "title": "Firebase", "description": "Deploy Nitro apps to Firebase hosting.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 01:41:59", "type": "section_detail", "page_metadata": {"og:image:alt": "Deploy Nitro apps to Firebase hosting.", "og:image:height": "600", "description": "Deploy Nitro apps to Firebase hosting.", "twitter:site": "@unjsio", "twitter:image:alt": "Deploy Nitro apps to Firebase hosting.", "title": "Firebase - Nitro", "twitter:image:width": "1200", "og:image:width": "1200", "og:image:type": "image/png", "og:image": "https://nitro.build/_og/deploy/providers/firebase.png?name=Nitro&title=Firebase&description=Deploy+Nitro+apps+to+Firebase+hosting.", "viewport": "width=device-width, initial-scale=1", "favicon": "https://nitro.build/icon.svg", "twitter:image": "https://nitro.build/_og/deploy/providers/firebase.png?name=Nitro&title=Firebase&description=Deploy+Nitro+apps+to+Firebase+hosting.", "ogImage": "https://nitro.build/_og/deploy/providers/firebase.png?name=Nitro&title=Firebase&description=Deploy+Nitro+apps+to+Firebase+hosting.", "twitter:image:height": "600", "scrapeId": "8cf73e7b-7a59-40a8-be89-28e1d168c79e", "sourceURL": "https://nitro.build/deploy/providers/firebase", "url": "https://nitro.build/deploy/providers/firebase", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: How do I build and deploy in nitro-deploy?\n\nAssistant: To build and deploy in nitro-deploy, here's what you do:\nDeploy to Firebase Hosting by running a Nitro build and then running the `firebase deploy` command.\n\n```\nNITRO_PRESET=firebase npm run build\n```\n\nnpmyarnpnpmbundeno\n\n```\nnpx firebase-tools deploy\n```\n\nIf you installed the Firebase CLI globally, you can also run:\n\n```\nfirebase deploy\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://nitro.build/deploy/providers/firebase", "title": "Firebase", "description": "Deploy Nitro apps to Firebase hosting.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 01:41:59", "type": "section_detail", "page_metadata": {"og:image:alt": "Deploy Nitro apps to Firebase hosting.", "og:image:height": "600", "description": "Deploy Nitro apps to Firebase hosting.", "twitter:site": "@unjsio", "twitter:image:alt": "Deploy Nitro apps to Firebase hosting.", "title": "Firebase - Nitro", "twitter:image:width": "1200", "og:image:width": "1200", "og:image:type": "image/png", "og:image": "https://nitro.build/_og/deploy/providers/firebase.png?name=Nitro&title=Firebase&description=Deploy+Nitro+apps+to+Firebase+hosting.", "viewport": "width=device-width, initial-scale=1", "favicon": "https://nitro.build/icon.svg", "twitter:image": "https://nitro.build/_og/deploy/providers/firebase.png?name=Nitro&title=Firebase&description=Deploy+Nitro+apps+to+Firebase+hosting.", "ogImage": "https://nitro.build/_og/deploy/providers/firebase.png?name=Nitro&title=Firebase&description=Deploy+Nitro+apps+to+Firebase+hosting.", "twitter:image:height": "600", "scrapeId": "8cf73e7b-7a59-40a8-be89-28e1d168c79e", "sourceURL": "https://nitro.build/deploy/providers/firebase", "url": "https://nitro.build/deploy/providers/firebase", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: How do I using 2nd generation firebase functions in nitro-deploy?\n\nAssistant: To using 2nd generation firebase functions in nitro-deploy, here's what you do:\n- [Comparison between 1st and 2nd generation functions](https://firebase.google.com/docs/functions/version-comparison)\n\nTo switch to the more recent and, recommended generation of firebase functions, set the `firebase.gen` option to `2`:\n\nnitro.config.tsnuxt.config.ts\n\n```\nexport default defineNitroConfig({\n  firebase: {\n    gen: 2\n    // ...\n  }\n})\n```\n\nIf you cannot use configuration for any reason, alternatively you can use `NITRO_FIREBASE_GEN` environment variable.\n\nIf you already have a deployed version of your website and want to upgrade to 2nd gen, [see the Migration process on Firebase docs](https://firebase.google.com/docs/functions/2nd-gen-upgrade). Namely, the CLI will ask you to delete your existing functions before deploying the new ones..\nPretty straightforward, right?", "metadata": {"source_url": "https://nitro.build/deploy/providers/firebase", "title": "Firebase", "description": "Deploy Nitro apps to Firebase hosting.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 01:41:59", "type": "section_detail", "page_metadata": {"og:image:alt": "Deploy Nitro apps to Firebase hosting.", "og:image:height": "600", "description": "Deploy Nitro apps to Firebase hosting.", "twitter:site": "@unjsio", "twitter:image:alt": "Deploy Nitro apps to Firebase hosting.", "title": "Firebase - Nitro", "twitter:image:width": "1200", "og:image:width": "1200", "og:image:type": "image/png", "og:image": "https://nitro.build/_og/deploy/providers/firebase.png?name=Nitro&title=Firebase&description=Deploy+Nitro+apps+to+Firebase+hosting.", "viewport": "width=device-width, initial-scale=1", "favicon": "https://nitro.build/icon.svg", "twitter:image": "https://nitro.build/_og/deploy/providers/firebase.png?name=Nitro&title=Firebase&description=Deploy+Nitro+apps+to+Firebase+hosting.", "ogImage": "https://nitro.build/_og/deploy/providers/firebase.png?name=Nitro&title=Firebase&description=Deploy+Nitro+apps+to+Firebase+hosting.", "twitter:image:height": "600", "scrapeId": "8cf73e7b-7a59-40a8-be89-28e1d168c79e", "sourceURL": "https://nitro.build/deploy/providers/firebase", "url": "https://nitro.build/deploy/providers/firebase", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: How do I options in nitro-deploy?\n\nAssistant: To options in nitro-deploy, here's what you do:\nYou can set options for the firebase functions in your `nitro.config.ts` file:\nnitro.config.tsnuxt.config.ts\n\n```\nexport default defineNitroConfig({\n  firebase: {\n    gen: 2,\n    httpsOptions: {\n      region: 'europe-west1',\n      maxInstances: 3,\n    },\n  },\n});\n```\n\nYou can also set options for 1st generation Cloud Functions if the `gen` option is set to `1`. Note these are different from the options for 2nd generation Cloud Functions..\nPretty straightforward, right?", "metadata": {"source_url": "https://nitro.build/deploy/providers/firebase", "title": "Firebase", "description": "Deploy Nitro apps to Firebase hosting.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 01:41:59", "type": "section_detail", "page_metadata": {"og:image:alt": "Deploy Nitro apps to Firebase hosting.", "og:image:height": "600", "description": "Deploy Nitro apps to Firebase hosting.", "twitter:site": "@unjsio", "twitter:image:alt": "Deploy Nitro apps to Firebase hosting.", "title": "Firebase - Nitro", "twitter:image:width": "1200", "og:image:width": "1200", "og:image:type": "image/png", "og:image": "https://nitro.build/_og/deploy/providers/firebase.png?name=Nitro&title=Firebase&description=Deploy+Nitro+apps+to+Firebase+hosting.", "viewport": "width=device-width, initial-scale=1", "favicon": "https://nitro.build/icon.svg", "twitter:image": "https://nitro.build/_og/deploy/providers/firebase.png?name=Nitro&title=Firebase&description=Deploy+Nitro+apps+to+Firebase+hosting.", "ogImage": "https://nitro.build/_og/deploy/providers/firebase.png?name=Nitro&title=Firebase&description=Deploy+Nitro+apps+to+Firebase+hosting.", "twitter:image:height": "600", "scrapeId": "8cf73e7b-7a59-40a8-be89-28e1d168c79e", "sourceURL": "https://nitro.build/deploy/providers/firebase", "url": "https://nitro.build/deploy/providers/firebase", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: How do I runtime node.js version in nitro-deploy?\n\nAssistant: To runtime node.js version in nitro-deploy, here's what you do:\nYou can set custom Node.js version in configuration:\nnitro.config.tsnuxt.config.ts\n\n```\nexport default defineNitroConfig({\n  firebase: {\n    nodeVersion: \"20\" // Can be \"16\", \"18\", \"20\" or \"22\"\n  },\n});\n```\n\nFirebase tools use the `engines.node` version in `package.json` to determine which node version to use for your functions. Nitro automatically writes to the `.output/server/package.json` with configured Node.js version.\n\nYou might also need to add a runtime key to your `firebase.json` file:\n\nfirebase.json\n\n```\n{\n  \"functions\": {\n    \"source\": \".output/server\",\n    \"runtime\": \"nodejs20\"\n  }\n}\n```\n\nYou can read more about this in [Firebase Docs](https://firebase.google.com/docs/functions/manage-functions?gen=2nd#set_nodejs_version)..\nPretty straightforward, right?", "metadata": {"source_url": "https://nitro.build/deploy/providers/firebase", "title": "Firebase", "description": "Deploy Nitro apps to Firebase hosting.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 01:41:59", "type": "section_detail", "page_metadata": {"og:image:alt": "Deploy Nitro apps to Firebase hosting.", "og:image:height": "600", "description": "Deploy Nitro apps to Firebase hosting.", "twitter:site": "@unjsio", "twitter:image:alt": "Deploy Nitro apps to Firebase hosting.", "title": "Firebase - Nitro", "twitter:image:width": "1200", "og:image:width": "1200", "og:image:type": "image/png", "og:image": "https://nitro.build/_og/deploy/providers/firebase.png?name=Nitro&title=Firebase&description=Deploy+Nitro+apps+to+Firebase+hosting.", "viewport": "width=device-width, initial-scale=1", "favicon": "https://nitro.build/icon.svg", "twitter:image": "https://nitro.build/_og/deploy/providers/firebase.png?name=Nitro&title=Firebase&description=Deploy+Nitro+apps+to+Firebase+hosting.", "ogImage": "https://nitro.build/_og/deploy/providers/firebase.png?name=Nitro&title=Firebase&description=Deploy+Nitro+apps+to+Firebase+hosting.", "twitter:image:height": "600", "scrapeId": "8cf73e7b-7a59-40a8-be89-28e1d168c79e", "sourceURL": "https://nitro.build/deploy/providers/firebase", "url": "https://nitro.build/deploy/providers/firebase", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: How do I if your firebase project has other cloud functions in nitro-deploy?\n\nAssistant: To if your firebase project has other cloud functions in nitro-deploy, here's what you do:\nYou may be warned that other cloud functions will be deleted when you deploy your nitro project. This is because nitro will deploy your entire project to firebase functions. If you want to deploy only your nitro project, you can use the `--only` flag:\n\n```\nfirebase deploy --only functions:server,hosting\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://nitro.build/deploy/providers/firebase", "title": "Firebase", "description": "Deploy Nitro apps to Firebase hosting.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 01:41:59", "type": "section_detail", "page_metadata": {"og:image:alt": "Deploy Nitro apps to Firebase hosting.", "og:image:height": "600", "description": "Deploy Nitro apps to Firebase hosting.", "twitter:site": "@unjsio", "twitter:image:alt": "Deploy Nitro apps to Firebase hosting.", "title": "Firebase - Nitro", "twitter:image:width": "1200", "og:image:width": "1200", "og:image:type": "image/png", "og:image": "https://nitro.build/_og/deploy/providers/firebase.png?name=Nitro&title=Firebase&description=Deploy+Nitro+apps+to+Firebase+hosting.", "viewport": "width=device-width, initial-scale=1", "favicon": "https://nitro.build/icon.svg", "twitter:image": "https://nitro.build/_og/deploy/providers/firebase.png?name=Nitro&title=Firebase&description=Deploy+Nitro+apps+to+Firebase+hosting.", "ogImage": "https://nitro.build/_og/deploy/providers/firebase.png?name=Nitro&title=Firebase&description=Deploy+Nitro+apps+to+Firebase+hosting.", "twitter:image:height": "600", "scrapeId": "8cf73e7b-7a59-40a8-be89-28e1d168c79e", "sourceURL": "https://nitro.build/deploy/providers/firebase", "url": "https://nitro.build/deploy/providers/firebase", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: How do I advanced in nitro-deploy?\n\nAssistant: To advanced in nitro-deploy, here's what you do:\n### Renaming function\n\nWhen deploying multiple apps within the same Firebase project, you must give your server a unique name in order to avoid overwriting your functions.\n\nYou can specify a new name for the deployed Firebase function in your configuration:\nnitro.config.tsnuxt.config.ts\n\n```\nexport default defineNitroConfig({\n  firebase: {\n    serverFunctionName: \"<new_function_name>\"\n  }\n})\n```\n\n`firebase.serverFunctionName` must be a valid JS variable name and cannot include dashes ( `-`)..\nPretty straightforward, right?", "metadata": {"source_url": "https://nitro.build/deploy/providers/firebase", "title": "Firebase", "description": "Deploy Nitro apps to Firebase hosting.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 01:41:59", "type": "section_detail", "page_metadata": {"og:image:alt": "Deploy Nitro apps to Firebase hosting.", "og:image:height": "600", "description": "Deploy Nitro apps to Firebase hosting.", "twitter:site": "@unjsio", "twitter:image:alt": "Deploy Nitro apps to Firebase hosting.", "title": "Firebase - Nitro", "twitter:image:width": "1200", "og:image:width": "1200", "og:image:type": "image/png", "og:image": "https://nitro.build/_og/deploy/providers/firebase.png?name=Nitro&title=Firebase&description=Deploy+Nitro+apps+to+Firebase+hosting.", "viewport": "width=device-width, initial-scale=1", "favicon": "https://nitro.build/icon.svg", "twitter:image": "https://nitro.build/_og/deploy/providers/firebase.png?name=Nitro&title=Firebase&description=Deploy+Nitro+apps+to+Firebase+hosting.", "ogImage": "https://nitro.build/_og/deploy/providers/firebase.png?name=Nitro&title=Firebase&description=Deploy+Nitro+apps+to+Firebase+hosting.", "twitter:image:height": "600", "scrapeId": "8cf73e7b-7a59-40a8-be89-28e1d168c79e", "sourceURL": "https://nitro.build/deploy/providers/firebase", "url": "https://nitro.build/deploy/providers/firebase", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: Can you give me some code examples for Firebase in nitro-deploy?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Install firebase CLI globally**:\n\n```yaml\nnpm install -g firebase-tools@latest\n```\n\nThis snippet shows you how to install firebase cli globally, which is an important aspect of firebase.\n\n**Initialize your firebase project**:\n\n```yaml\nfirebase login\nfirebase init hosting\n```\n\nThis snippet shows you how to initialize your firebase project, which is an important aspect of firebase.\n\n**Enable server rendering in Cloud Functions**:\n\n```yaml\n{\n  \"functions\": { \"source\": \".output/server\" },\n  \"hosting\": [\\\n    {\\\n      \"site\": \"<your_project_id>\",\\\n      \"public\": \".output/public\",\\\n      \"cleanUrls\": true,\\\n      \"rewrites\": [{ \"source\": \"**\", \"function\": \"server\" }]\\\n    }\\\n  ]\n}\n```\n\nThis snippet shows you how to enable server rendering in cloud functions, which is an important aspect of firebase.\n\n", "metadata": {"source_url": "https://nitro.build/deploy/providers/firebase", "title": "Firebase", "description": "Deploy Nitro apps to Firebase hosting.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 01:41:59", "type": "code_examples", "page_metadata": {"og:image:alt": "Deploy Nitro apps to Firebase hosting.", "og:image:height": "600", "description": "Deploy Nitro apps to Firebase hosting.", "twitter:site": "@unjsio", "twitter:image:alt": "Deploy Nitro apps to Firebase hosting.", "title": "Firebase - Nitro", "twitter:image:width": "1200", "og:image:width": "1200", "og:image:type": "image/png", "og:image": "https://nitro.build/_og/deploy/providers/firebase.png?name=Nitro&title=Firebase&description=Deploy+Nitro+apps+to+Firebase+hosting.", "viewport": "width=device-width, initial-scale=1", "favicon": "https://nitro.build/icon.svg", "twitter:image": "https://nitro.build/_og/deploy/providers/firebase.png?name=Nitro&title=Firebase&description=Deploy+Nitro+apps+to+Firebase+hosting.", "ogImage": "https://nitro.build/_og/deploy/providers/firebase.png?name=Nitro&title=Firebase&description=Deploy+Nitro+apps+to+Firebase+hosting.", "twitter:image:height": "600", "scrapeId": "8cf73e7b-7a59-40a8-be89-28e1d168c79e", "sourceURL": "https://nitro.build/deploy/providers/firebase", "url": "https://nitro.build/deploy/providers/firebase", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: What are some tips for using Firebase in nitro-deploy effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nAlways try to use the latest version of the Firebase CLI.\n\nYou need to be on Firebase CLI version ^11.18.0 to deploy a nodejs18 function.\n\nIt is recommended to create a .firebaserc file to avoid manually passing your project ID to firebase commands.\n\nMake sure you are authenticated with the firebase CLI before deploying.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://nitro.build/deploy/providers/firebase", "title": "Firebase", "description": "Deploy Nitro apps to Firebase hosting.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 01:41:59", "type": "best_practices", "page_metadata": {"og:image:alt": "Deploy Nitro apps to Firebase hosting.", "og:image:height": "600", "description": "Deploy Nitro apps to Firebase hosting.", "twitter:site": "@unjsio", "twitter:image:alt": "Deploy Nitro apps to Firebase hosting.", "title": "Firebase - Nitro", "twitter:image:width": "1200", "og:image:width": "1200", "og:image:type": "image/png", "og:image": "https://nitro.build/_og/deploy/providers/firebase.png?name=Nitro&title=Firebase&description=Deploy+Nitro+apps+to+Firebase+hosting.", "viewport": "width=device-width, initial-scale=1", "favicon": "https://nitro.build/icon.svg", "twitter:image": "https://nitro.build/_og/deploy/providers/firebase.png?name=Nitro&title=Firebase&description=Deploy+Nitro+apps+to+Firebase+hosting.", "ogImage": "https://nitro.build/_og/deploy/providers/firebase.png?name=Nitro&title=Firebase&description=Deploy+Nitro+apps+to+Firebase+hosting.", "twitter:image:height": "600", "scrapeId": "8cf73e7b-7a59-40a8-be89-28e1d168c79e", "sourceURL": "https://nitro.build/deploy/providers/firebase", "url": "https://nitro.build/deploy/providers/firebase", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: Can you explain what Platform.sh is in nitro-deploy?\n\nAssistant: Sure, I'd be happy to explain Platform.sh in nitro-deploy.\n\n# Platform.sh\n\nDeploy Nitro apps to platform.shHere's a quick rundown of what this is about:\n\n## Setup\n\nFirst, create a new project on platform.sh and link it to the repository you want to auto-deploy with.\n\nThen in repository create `.platform.app.yaml` file:\n\n.platform.app.yaml\n\n```\nname: nitro-app\ntype: 'nodejs:18'\ndisk: 128\nweb:\n  commands:\n    start: \"node .output/server/index.mjs\"\nbuild:\n  flavor: none\nhooks:\n  build: |\n    corepack enable\n    npx nypm install\n    NITR_PRESET=platform_sh npm run build\nmounts:\n    '.data':\n        source: local\n        source_path: .data\n```\n\nRead more in Complete list of all available properties.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://nitro.build/deploy/providers/platform-sh", "title": "Platform.sh", "description": "Deploy Nitro apps to platform.sh", "has_code_examples": true, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 01:42:12", "type": "overview", "page_metadata": {"favicon": "https://nitro.build/icon.svg", "ogImage": "https://nitro.build/_og/deploy/providers/platform-sh.png?name=Nitro&title=Platform.sh&description=Deploy+Nitro+apps+to+platform.sh", "twitter:site": "@unjsio", "og:image:type": "image/png", "twitter:image:height": "600", "twitter:image:alt": "Deploy Nitro apps to platform.sh", "og:image:height": "600", "viewport": "width=device-width, initial-scale=1", "title": "Platform.sh - Nitro", "og:image:alt": "Deploy Nitro apps to platform.sh", "og:image": "https://nitro.build/_og/deploy/providers/platform-sh.png?name=Nitro&title=Platform.sh&description=Deploy+Nitro+apps+to+platform.sh", "twitter:image:width": "1200", "og:image:width": "1200", "description": "Deploy Nitro apps to platform.sh", "twitter:image": "https://nitro.build/_og/deploy/providers/platform-sh.png?name=Nitro&title=Platform.sh&description=Deploy+Nitro+apps+to+platform.sh", "scrapeId": "5350097f-54b2-4e68-acd3-9da8ffca1938", "sourceURL": "https://nitro.build/deploy/providers/platform-sh", "url": "https://nitro.build/deploy/providers/platform-sh", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: How do I setup in nitro-deploy?\n\nAssistant: To setup in nitro-deploy, here's what you do:\nFirst, create a new project on platform.sh and link it to the repository you want to auto-deploy with.\n\nThen in repository create `.platform.app.yaml` file:\n\n.platform.app.yaml\n\n```\nname: nitro-app\ntype: 'nodejs:18'\ndisk: 128\nweb:\n  commands:\n    start: \"node .output/server/index.mjs\"\nbuild:\n  flavor: none\nhooks:\n  build: |\n    corepack enable\n    npx nypm install\n    NITR_PRESET=platform_sh npm run build\nmounts:\n    '.data':\n        source: local\n        source_path: .data\n```\n\nRead more in Complete list of all available properties..\nPretty straightforward, right?", "metadata": {"source_url": "https://nitro.build/deploy/providers/platform-sh", "title": "Platform.sh", "description": "Deploy Nitro apps to platform.sh", "has_code_examples": true, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 01:42:12", "type": "section_detail", "page_metadata": {"favicon": "https://nitro.build/icon.svg", "ogImage": "https://nitro.build/_og/deploy/providers/platform-sh.png?name=Nitro&title=Platform.sh&description=Deploy+Nitro+apps+to+platform.sh", "twitter:site": "@unjsio", "og:image:type": "image/png", "twitter:image:height": "600", "twitter:image:alt": "Deploy Nitro apps to platform.sh", "og:image:height": "600", "viewport": "width=device-width, initial-scale=1", "title": "Platform.sh - Nitro", "og:image:alt": "Deploy Nitro apps to platform.sh", "og:image": "https://nitro.build/_og/deploy/providers/platform-sh.png?name=Nitro&title=Platform.sh&description=Deploy+Nitro+apps+to+platform.sh", "twitter:image:width": "1200", "og:image:width": "1200", "description": "Deploy Nitro apps to platform.sh", "twitter:image": "https://nitro.build/_og/deploy/providers/platform-sh.png?name=Nitro&title=Platform.sh&description=Deploy+Nitro+apps+to+platform.sh", "scrapeId": "5350097f-54b2-4e68-acd3-9da8ffca1938", "sourceURL": "https://nitro.build/deploy/providers/platform-sh", "url": "https://nitro.build/deploy/providers/platform-sh", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: Can you give me some code examples for Platform.sh in nitro-deploy?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**.platform.app.yaml**:\n\n```yaml\nname: nitro-app\ntype: 'nodejs:18'\ndisk: 128\nweb:\n  commands:\n    start: \"node .output/server/index.mjs\"\nbuild:\n  flavor: none\nhooks:\n  build: |\n    corepack enable\n    npx nypm install\n    NITR_PRESET=platform_sh npm run build\nmounts:\n    '.data':\n        source: local\n        source_path: .data\n```\n\nThis snippet shows you how to .platform.app.yaml, which is an important aspect of platform.sh.\n\n", "metadata": {"source_url": "https://nitro.build/deploy/providers/platform-sh", "title": "Platform.sh", "description": "Deploy Nitro apps to platform.sh", "has_code_examples": true, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 01:42:12", "type": "code_examples", "page_metadata": {"favicon": "https://nitro.build/icon.svg", "ogImage": "https://nitro.build/_og/deploy/providers/platform-sh.png?name=Nitro&title=Platform.sh&description=Deploy+Nitro+apps+to+platform.sh", "twitter:site": "@unjsio", "og:image:type": "image/png", "twitter:image:height": "600", "twitter:image:alt": "Deploy Nitro apps to platform.sh", "og:image:height": "600", "viewport": "width=device-width, initial-scale=1", "title": "Platform.sh - Nitro", "og:image:alt": "Deploy Nitro apps to platform.sh", "og:image": "https://nitro.build/_og/deploy/providers/platform-sh.png?name=Nitro&title=Platform.sh&description=Deploy+Nitro+apps+to+platform.sh", "twitter:image:width": "1200", "og:image:width": "1200", "description": "Deploy Nitro apps to platform.sh", "twitter:image": "https://nitro.build/_og/deploy/providers/platform-sh.png?name=Nitro&title=Platform.sh&description=Deploy+Nitro+apps+to+platform.sh", "scrapeId": "5350097f-54b2-4e68-acd3-9da8ffca1938", "sourceURL": "https://nitro.build/deploy/providers/platform-sh", "url": "https://nitro.build/deploy/providers/platform-sh", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: What are some tips for using Platform.sh in nitro-deploy effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nRead more in Complete list of all available properties.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://nitro.build/deploy/providers/platform-sh", "title": "Platform.sh", "description": "Deploy Nitro apps to platform.sh", "has_code_examples": true, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 01:42:12", "type": "best_practices", "page_metadata": {"favicon": "https://nitro.build/icon.svg", "ogImage": "https://nitro.build/_og/deploy/providers/platform-sh.png?name=Nitro&title=Platform.sh&description=Deploy+Nitro+apps+to+platform.sh", "twitter:site": "@unjsio", "og:image:type": "image/png", "twitter:image:height": "600", "twitter:image:alt": "Deploy Nitro apps to platform.sh", "og:image:height": "600", "viewport": "width=device-width, initial-scale=1", "title": "Platform.sh - Nitro", "og:image:alt": "Deploy Nitro apps to platform.sh", "og:image": "https://nitro.build/_og/deploy/providers/platform-sh.png?name=Nitro&title=Platform.sh&description=Deploy+Nitro+apps+to+platform.sh", "twitter:image:width": "1200", "og:image:width": "1200", "description": "Deploy Nitro apps to platform.sh", "twitter:image": "https://nitro.build/_og/deploy/providers/platform-sh.png?name=Nitro&title=Platform.sh&description=Deploy+Nitro+apps+to+platform.sh", "scrapeId": "5350097f-54b2-4e68-acd3-9da8ffca1938", "sourceURL": "https://nitro.build/deploy/providers/platform-sh", "url": "https://nitro.build/deploy/providers/platform-sh", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: Can you explain what Cloudflare is in nitro-deploy?\n\nAssistant: Sure, I'd be happy to explain Cloudflare in nitro-deploy.\n\n# Cloudflare\n\nDeploy Nitro apps to Cloudflare.Here's a quick rundown of what this is about:\n\n## Cloudflare Pages\n\n**Preset:** `cloudflare_pages`\n\nRead more in Cloudflare Pages.\n\nThis is the recommended preset for Cloudflare deployments, please consider using the alternative ones if you need special features.\n\nIntegration with this provider is possible with [zero configuration](https://nitro.build/deploy#zero-config-providers).\n\nNitro automatically generates a `_routes.json` file that controls which routes get served from files and which are served from the Worker script. The auto-generated routes file can be overridden with the config option `cloudflare.pages.routes` ( [read more](https://developers.cloudflare.com/pages/platform/functions/routing/#functions-invocation-routes)).\n\n## Building your Application using the preset\n\nThe preset only applies for the application build process.\n\nIf you use the [Cloudflare Pages GitHub/GitLab integration](https://developers.cloudflare.com/pages/get-started/#connect-your-git-provider-to-pages), and you don't need to preview your application locally, Nitro does not require any type of configuration. When you push to your repository, the Cloudflare Pages CI/CD process will automatically build your project and Nitro will detect the correct environment and build your application accordingly.\n\nIf instead you want preview your application locally and/or manually deploy it, when building the application you will need to let Nitro know that the target environment is the Cloudflare Pages one, you can do that in two ways:\n\n- By defining either the `NITRO_PRESET` or the `SERVER_PRESET` environment variable set to `cloudflare_pages` when running the build process, like so:\n\n```\nNITRO_PRESET=cloudflare_pages npm run build\n```\n\n- Or by updating your Nitro [preset configuration](https://nitro.build/config#preset):\n\n```\n\"preset\": \"cloudflare_pages\",\n```\n\nand then running the standard build command:\n\n```\nnpm run build\n```\n\n## Wrangler\n\nTo preview your application locally or manually deploy it you will need to use the [wrangler](https://github.com/cloudflare/workers-sdk/tree/main/packages/wrangler) CLI tool, simply install it as a node dependency:\n\n```\nnpm i wrangler\n```\n\n## Preview your app locally\n\nAfter having built your application you can preview it locally with wrangler by running:\n\n```\nnpx wrangler pages dev dist\n```\n\n## Deploy from your local machine using wrangler\n\nAfter having built your application you can manually deploy it with wrangler, in order to do so first make sure to be logged into your Cloudflare account:\n\n```\nnpx wrangler login\n```\n\nThen you can deploy the application with:\n\n```\nnpx wrangler pages deploy dist\n```\n\n## Cloudflare Module Workers\n\n**Preset:** `cloudflare_module`\n\n**Note:** This preset uses the [module worker syntax](https://developers.cloudflare.com/workers/learning/migrating-to-module-workers/) for deployment.\n\nWhen using Workers you will need a `wrangler.toml` file, in your root directory. To using Workers with [Static Assets](https://developers.cloudflare.com/workers/static-assets/) (BETA with [limitations](https://developers.cloudflare.com/workers/static-assets/#limitations)), you also need a compatibility date set to `2024-09-19` or later, in your `wrangler.toml` file and nitro configuration file.\n\nThe following shows a typical `wrangler.toml` file and a `nitro.config.ts` file for a Nitro application:\n\n```\nexport default defineNitroConfig({\n    compatibilityDate: \"2024-09-19\",\n})\n```\n\n```\nname = \"nitro-app\"\ncompatibility_date = \"2024-09-19\"\nmain = \"./.output/server/index.mjs\"\nassets = { directory = \"./.output/public/\", binding = \"ASSETS\" }\n```\n\n## Runtime hooks\n\nYou can use [runtime hooks](https://nitro.build/guide/plugins#nitro-runtime-hooks) below in order to extend [worker handlers](https://developers.cloudflare.com/workers/runtime-apis/handlers/).\n\nRead more in Guide > Plugins#nitro Runtime Hooks.\n\n- [`cloudflare:scheduled`](https://developers.cloudflare.com/workers/runtime-apis/handlers/scheduled/)\n- [`cloudflare:email`](https://developers.cloudflare.com/email-routing/email-workers/runtime-api/)\n- [`cloudflare:queue`](https://developers.cloudflare.com/queues/configuration/javascript-apis/#consumer)\n- [`cloudflare:tail`](https://developers.cloudflare.com/workers/runtime-apis/handlers/tail/)\n- `cloudflare:trace`\n\n## Preview your app locally\n\nYou can use [wrangler](https://github.com/cloudflare/workers-sdk/tree/main/packages/wrangler), to preview your app locally:\n\n```\nNITRO_PRESET=cloudflare npm run build\n\n# If you have added a 'wrangler.toml' file like above in the root of your project:\nnpx wrangler dev\n\n# If you don't have a 'wrangler.toml', directly use:\nnpx wrangler dev .output/server/index.mjs --site .output/public\n```\n\n## Deploy from your local machine using wrangler\n\nInstall [wrangler](https://github.com/cloudflare/workers-sdk/tree/main/packages/wrangler) and login to your Cloudflare account:\n\n```\nnpm i wrangler\nwrangler login\n```\n\nGenerate your app using the `cloudflare_module` preset:\n\n```\nNITRO_PRESET=cloudflare_module npm run build\n```\n\nYou can then preview it locally:\n\n```\n# If you have a 'wrangler.toml' like above:\nnpx wrangler dev\n\n# If you don't have a 'wrangler.toml':\nnpx wrangler dev .output/server/index.mjs --site .output/public\n```\n\nand publish it:\n\n```\nnpx wrangler deploy\n```\n\n## Cloudflare Service Workers\n\n**Preset:** `cloudflare`\n\n**Note:** This preset uses the [service worker syntax](https://developers.cloudflare.com/workers/learning/service-worker/) for deployment.\n\n**Note:** This preset is deprecated.\n\nThe way this preset works is identical to that of the `cloudflare_module` one presented above, with the only difference being that such preset inherits all the [disadvantages](https://developers.cloudflare.com/workers/reference/migrate-to-module-workers/#advantages-of-migrating) that such syntax brings.\n\n## Deploy within CI/CD using GitHub Actions\n\nRegardless on whether you're using Cloudflare Pages or Cloudflare workers, you can use the [Wrangler GitHub actions](https://github.com/marketplace/actions/deploy-to-cloudflare-workers-with-wrangler) to deploy your application.\n\n**Note:** Remember to [instruct Nitro to use the correct preset](https://nitro.build/deploy#changing-the-deployment-preset) (note that this is necessary for all presets including the `cloudflare_pages` one).\n\n## Environment Variables\n\nNitro allows you to universally access environment variables using `process.env` or `import.meta.env` or the runtime config.\n\nMake sure to only access environment variables **within the event lifecycle** and not in global contexts since Cloudflare only makes them available during the request lifecycle and not before.\n\n**Example:** If you have set the `SECRET` and `NITRO_HELLO_THERE` environment variables set you can access them in the following way:\n\n```\nconsole.log(process.env.SECRET) // note that this is in the global scope! so it doesn't actually work and the variable is undefined!\n\nexport default defineEventHandler((event) => {\n  // note that all the below are valid ways of accessing the above mentioned variables\n  useRuntimeConfig(event).helloThere\n  useRuntimeConfig(event).secret\n  process.env.NITRO_HELLO_THERE\n  import.meta.env.SECRET\n});\n```\n\n## Specify Variables in Development Mode\n\nFor development, you can use a `.env` file to specify environment variables:\n\n```\nNITRO_HELLO_THERE=\"captain\"\nSECRET=\"top-secret\"\n```\n\n**Note:** Make sure you add `.env` to the `.gitignore` file so that you don't commit it as it can contain sensitive information.\n\n## Specify Variables for local previews\n\nAfter build, when you try out your project locally with `wrangler dev` or `wrangler pages dev`, in order to have access to environment variables you will need to specify the in a `.dev.vars` file in the root of your project (as presented in the [Pages](https://developers.cloudflare.com/pages/functions/bindings/#interact-with-your-environment-variables-locally) and [Workers](https://developers.cloudflare.com/workers/configuration/environment-variables/#interact-with-environment-variables-locally) documentation).\n\nIf you are using a `.env` file while developing, your `.dev.vars` should be identical to it.\n\n**Note:** Make sure you add `.dev.vars` to the `.gitignore` file so that you don't commit it as it can contain sensitive information.\n\n## Specify Variables for Production\n\nFor production, use the cloudflare dashboard or the [`wrangler secret`](https://developers.cloudflare.com/workers/wrangler/commands/#secret) command to set environment variables and secrets.\n\n## Specify Variables using `wrangler.toml`\n\nYou can specify a custom `wrangler.toml` file and define vars inside.\n\n**Note:** `wrangler.toml` isn't supported by cloudflare pages.\n\nNote that this isn't recommend for sensitive data.\n\n**Example:**\n\n```\n# Shared\n[vars]\nNITRO_HELLO_THERE=\"general\"\nSECRET=\"secret\"\n\n# Override values for `--env production` usage\n[env.production.vars]\nNITRO_HELLO_THERE=\"captain\"\nSECRET=\"top-secret\"\n```\n\n## Direct access to cloudflare bindings\n\nBindings are what allows you to interact with resources from the Cloudflare platform, examples of such resources are key-value data storages ( [KVs](https://developers.cloudflare.com/kv/)) and serverless SQL databases ( [D1s](https://developers.cloudflare.com/d1/)).\n\nFor more details on Bindings and how to use them please refer to the Cloudflare [Pages](https://developers.cloudflare.com/pages/functions/bindings/) and [Workers](https://developers.cloudflare.com/workers/configuration/bindings/#bindings) documentation.\n\nNitro provides high level API to interact with primitives such as [KV Storage](https://nitro.build/guide/storage) and [Database](https://nitro.build/guide/database) and you are highly recommended to prefer using them instead of directly depending on low-level APIs for usage stability.\n\nRead more in Database Layer.\nRead more in KV Storage.\n\nIn runtime, you can access bindings from the request event, by accessing its `context.cloudflare.env` field, this is for example how you can access a D1 bindings:\n\n```\ndefineEventHandler(async (event) => {\n  const { cloudflare } = event.context\n  const stmt = await cloudflare.env.MY_D1.prepare('SELECT id FROM table')\n  const { results } = await stmt.all()\n})\n```\n\n## Access to the bindings in local env\n\nIn order to access bindings during local dev mode, regardless of the chosen preset, it is recommended to use a `wrangler.toml` file (as well as a `.dev.vars` one) in combination with the [`nitro-cloudflare-dev` module](https://github.com/nitrojs/nitro-cloudflare-dev) as illustrated below.\n\nThe `nitro-cloudflare-dev` module is experimental. The Nitro team is looking into a more native integration which could in the near future make the module unneeded.\n\nIn order to access bindings in dev mode we start by defining the bindings in a `wrangler.toml` file, this is for example how you would define a variable and a KV namespace:\n\n```\n[vars]\nMY_VARIABLE=\"my-value\"\n\n[[kv_namespaces]]\nbinding = \"MY_KV\"\nid = \"xxx\"\n```\n\nOnly bindings in the default environment are recognized.\n\nNext we install the `nitro-cloudflare-dev` module as well as the required `wrangler` package (if not already installed):\n\n```\nnpm i -D nitro-cloudflare-dev wrangler\n```\n\nThen define module:\n\n```\nimport nitroCloudflareBindings from \"nitro-cloudflare-dev\";\n\nexport default defineNitroConfig({\n  modules: [nitroCloudflareBindings],\n});\n```\n\nFrom this moment, when running\n\n```\nnpm run dev\n```\n\nyou will be able to access the `MY_VARIABLE` and `MY_KV` from the request event just as illustrated above.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://nitro.build/deploy/providers/cloudflare", "title": "Cloudflare", "description": "Deploy Nitro apps to Cloudflare.", "has_code_examples": true, "has_best_practices": true, "section_count": 18, "timestamp": "2025-03-01 01:51:30", "type": "overview", "page_metadata": {"og:image:width": "1200", "twitter:image": "https://nitro.build/_og/deploy/providers/cloudflare.png?name=Nitro&title=Cloudflare&description=Deploy+Nitro+apps+to+Cloudflare.", "og:image:alt": "Deploy Nitro apps to Cloudflare.", "description": "Deploy Nitro apps to Cloudflare.", "twitter:image:height": "600", "favicon": "https://nitro.build/icon.svg", "viewport": "width=device-width, initial-scale=1", "og:image:type": "image/png", "twitter:image:alt": "Deploy Nitro apps to Cloudflare.", "og:image:height": "600", "twitter:site": "@unjsio", "og:image": "https://nitro.build/_og/deploy/providers/cloudflare.png?name=Nitro&title=Cloudflare&description=Deploy+Nitro+apps+to+Cloudflare.", "twitter:image:width": "1200", "title": "Cloudflare - Nitro", "ogImage": "https://nitro.build/_og/deploy/providers/cloudflare.png?name=Nitro&title=Cloudflare&description=Deploy+Nitro+apps+to+Cloudflare.", "scrapeId": "43ad0281-4aff-426c-8e9f-b8b1f1f65bda", "sourceURL": "https://nitro.build/deploy/providers/cloudflare", "url": "https://nitro.build/deploy/providers/cloudflare", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: How do I cloudflare pages in nitro-deploy?\n\nAssistant: To cloudflare pages in nitro-deploy, here's what you do:\n**Preset:** `cloudflare_pages`\n\nRead more in Cloudflare Pages.\n\nThis is the recommended preset for Cloudflare deployments, please consider using the alternative ones if you need special features.\n\nIntegration with this provider is possible with [zero configuration](https://nitro.build/deploy#zero-config-providers).\n\nNitro automatically generates a `_routes.json` file that controls which routes get served from files and which are served from the Worker script. The auto-generated routes file can be overridden with the config option `cloudflare.pages.routes` ( [read more](https://developers.cloudflare.com/pages/platform/functions/routing/#functions-invocation-routes))..\nPretty straightforward, right?", "metadata": {"source_url": "https://nitro.build/deploy/providers/cloudflare", "title": "Cloudflare", "description": "Deploy Nitro apps to Cloudflare.", "has_code_examples": true, "has_best_practices": true, "section_count": 18, "timestamp": "2025-03-01 01:51:30", "type": "section_detail", "page_metadata": {"og:image:width": "1200", "twitter:image": "https://nitro.build/_og/deploy/providers/cloudflare.png?name=Nitro&title=Cloudflare&description=Deploy+Nitro+apps+to+Cloudflare.", "og:image:alt": "Deploy Nitro apps to Cloudflare.", "description": "Deploy Nitro apps to Cloudflare.", "twitter:image:height": "600", "favicon": "https://nitro.build/icon.svg", "viewport": "width=device-width, initial-scale=1", "og:image:type": "image/png", "twitter:image:alt": "Deploy Nitro apps to Cloudflare.", "og:image:height": "600", "twitter:site": "@unjsio", "og:image": "https://nitro.build/_og/deploy/providers/cloudflare.png?name=Nitro&title=Cloudflare&description=Deploy+Nitro+apps+to+Cloudflare.", "twitter:image:width": "1200", "title": "Cloudflare - Nitro", "ogImage": "https://nitro.build/_og/deploy/providers/cloudflare.png?name=Nitro&title=Cloudflare&description=Deploy+Nitro+apps+to+Cloudflare.", "scrapeId": "43ad0281-4aff-426c-8e9f-b8b1f1f65bda", "sourceURL": "https://nitro.build/deploy/providers/cloudflare", "url": "https://nitro.build/deploy/providers/cloudflare", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: How do I building your application using the preset in nitro-deploy?\n\nAssistant: To building your application using the preset in nitro-deploy, here's what you do:\nThe preset only applies for the application build process.\n\nIf you use the [Cloudflare Pages GitHub/GitLab integration](https://developers.cloudflare.com/pages/get-started/#connect-your-git-provider-to-pages), and you don't need to preview your application locally, Nitro does not require any type of configuration. When you push to your repository, the Cloudflare Pages CI/CD process will automatically build your project and Nitro will detect the correct environment and build your application accordingly.\n\nIf instead you want preview your application locally and/or manually deploy it, when building the application you will need to let Nitro know that the target environment is the Cloudflare Pages one, you can do that in two ways:\n\n- By defining either the `NITRO_PRESET` or the `SERVER_PRESET` environment variable set to `cloudflare_pages` when running the build process, like so:\n\n```\nNITRO_PRESET=cloudflare_pages npm run build\n```\n\n- Or by updating your Nitro [preset configuration](https://nitro.build/config#preset):\n\n```\n\"preset\": \"cloudflare_pages\",\n```\n\nand then running the standard build command:\n\n```\nnpm run build\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://nitro.build/deploy/providers/cloudflare", "title": "Cloudflare", "description": "Deploy Nitro apps to Cloudflare.", "has_code_examples": true, "has_best_practices": true, "section_count": 18, "timestamp": "2025-03-01 01:51:30", "type": "section_detail", "page_metadata": {"og:image:width": "1200", "twitter:image": "https://nitro.build/_og/deploy/providers/cloudflare.png?name=Nitro&title=Cloudflare&description=Deploy+Nitro+apps+to+Cloudflare.", "og:image:alt": "Deploy Nitro apps to Cloudflare.", "description": "Deploy Nitro apps to Cloudflare.", "twitter:image:height": "600", "favicon": "https://nitro.build/icon.svg", "viewport": "width=device-width, initial-scale=1", "og:image:type": "image/png", "twitter:image:alt": "Deploy Nitro apps to Cloudflare.", "og:image:height": "600", "twitter:site": "@unjsio", "og:image": "https://nitro.build/_og/deploy/providers/cloudflare.png?name=Nitro&title=Cloudflare&description=Deploy+Nitro+apps+to+Cloudflare.", "twitter:image:width": "1200", "title": "Cloudflare - Nitro", "ogImage": "https://nitro.build/_og/deploy/providers/cloudflare.png?name=Nitro&title=Cloudflare&description=Deploy+Nitro+apps+to+Cloudflare.", "scrapeId": "43ad0281-4aff-426c-8e9f-b8b1f1f65bda", "sourceURL": "https://nitro.build/deploy/providers/cloudflare", "url": "https://nitro.build/deploy/providers/cloudflare", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: How do I wrangler in nitro-deploy?\n\nAssistant: To wrangler in nitro-deploy, here's what you do:\nTo preview your application locally or manually deploy it you will need to use the [wrangler](https://github.com/cloudflare/workers-sdk/tree/main/packages/wrangler) CLI tool, simply install it as a node dependency:\n\n```\nnpm i wrangler\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://nitro.build/deploy/providers/cloudflare", "title": "Cloudflare", "description": "Deploy Nitro apps to Cloudflare.", "has_code_examples": true, "has_best_practices": true, "section_count": 18, "timestamp": "2025-03-01 01:51:30", "type": "section_detail", "page_metadata": {"og:image:width": "1200", "twitter:image": "https://nitro.build/_og/deploy/providers/cloudflare.png?name=Nitro&title=Cloudflare&description=Deploy+Nitro+apps+to+Cloudflare.", "og:image:alt": "Deploy Nitro apps to Cloudflare.", "description": "Deploy Nitro apps to Cloudflare.", "twitter:image:height": "600", "favicon": "https://nitro.build/icon.svg", "viewport": "width=device-width, initial-scale=1", "og:image:type": "image/png", "twitter:image:alt": "Deploy Nitro apps to Cloudflare.", "og:image:height": "600", "twitter:site": "@unjsio", "og:image": "https://nitro.build/_og/deploy/providers/cloudflare.png?name=Nitro&title=Cloudflare&description=Deploy+Nitro+apps+to+Cloudflare.", "twitter:image:width": "1200", "title": "Cloudflare - Nitro", "ogImage": "https://nitro.build/_og/deploy/providers/cloudflare.png?name=Nitro&title=Cloudflare&description=Deploy+Nitro+apps+to+Cloudflare.", "scrapeId": "43ad0281-4aff-426c-8e9f-b8b1f1f65bda", "sourceURL": "https://nitro.build/deploy/providers/cloudflare", "url": "https://nitro.build/deploy/providers/cloudflare", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: How do I preview your app locally in nitro-deploy?\n\nAssistant: To preview your app locally in nitro-deploy, here's what you do:\nAfter having built your application you can preview it locally with wrangler by running:\n\n```\nnpx wrangler pages dev dist\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://nitro.build/deploy/providers/cloudflare", "title": "Cloudflare", "description": "Deploy Nitro apps to Cloudflare.", "has_code_examples": true, "has_best_practices": true, "section_count": 18, "timestamp": "2025-03-01 01:51:30", "type": "section_detail", "page_metadata": {"og:image:width": "1200", "twitter:image": "https://nitro.build/_og/deploy/providers/cloudflare.png?name=Nitro&title=Cloudflare&description=Deploy+Nitro+apps+to+Cloudflare.", "og:image:alt": "Deploy Nitro apps to Cloudflare.", "description": "Deploy Nitro apps to Cloudflare.", "twitter:image:height": "600", "favicon": "https://nitro.build/icon.svg", "viewport": "width=device-width, initial-scale=1", "og:image:type": "image/png", "twitter:image:alt": "Deploy Nitro apps to Cloudflare.", "og:image:height": "600", "twitter:site": "@unjsio", "og:image": "https://nitro.build/_og/deploy/providers/cloudflare.png?name=Nitro&title=Cloudflare&description=Deploy+Nitro+apps+to+Cloudflare.", "twitter:image:width": "1200", "title": "Cloudflare - Nitro", "ogImage": "https://nitro.build/_og/deploy/providers/cloudflare.png?name=Nitro&title=Cloudflare&description=Deploy+Nitro+apps+to+Cloudflare.", "scrapeId": "43ad0281-4aff-426c-8e9f-b8b1f1f65bda", "sourceURL": "https://nitro.build/deploy/providers/cloudflare", "url": "https://nitro.build/deploy/providers/cloudflare", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: How do I deploy from your local machine using wrangler in nitro-deploy?\n\nAssistant: To deploy from your local machine using wrangler in nitro-deploy, here's what you do:\nAfter having built your application you can manually deploy it with wrangler, in order to do so first make sure to be logged into your Cloudflare account:\n\n```\nnpx wrangler login\n```\n\nThen you can deploy the application with:\n\n```\nnpx wrangler pages deploy dist\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://nitro.build/deploy/providers/cloudflare", "title": "Cloudflare", "description": "Deploy Nitro apps to Cloudflare.", "has_code_examples": true, "has_best_practices": true, "section_count": 18, "timestamp": "2025-03-01 01:51:30", "type": "section_detail", "page_metadata": {"og:image:width": "1200", "twitter:image": "https://nitro.build/_og/deploy/providers/cloudflare.png?name=Nitro&title=Cloudflare&description=Deploy+Nitro+apps+to+Cloudflare.", "og:image:alt": "Deploy Nitro apps to Cloudflare.", "description": "Deploy Nitro apps to Cloudflare.", "twitter:image:height": "600", "favicon": "https://nitro.build/icon.svg", "viewport": "width=device-width, initial-scale=1", "og:image:type": "image/png", "twitter:image:alt": "Deploy Nitro apps to Cloudflare.", "og:image:height": "600", "twitter:site": "@unjsio", "og:image": "https://nitro.build/_og/deploy/providers/cloudflare.png?name=Nitro&title=Cloudflare&description=Deploy+Nitro+apps+to+Cloudflare.", "twitter:image:width": "1200", "title": "Cloudflare - Nitro", "ogImage": "https://nitro.build/_og/deploy/providers/cloudflare.png?name=Nitro&title=Cloudflare&description=Deploy+Nitro+apps+to+Cloudflare.", "scrapeId": "43ad0281-4aff-426c-8e9f-b8b1f1f65bda", "sourceURL": "https://nitro.build/deploy/providers/cloudflare", "url": "https://nitro.build/deploy/providers/cloudflare", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: How do I cloudflare module workers in nitro-deploy?\n\nAssistant: To cloudflare module workers in nitro-deploy, here's what you do:\n**Preset:** `cloudflare_module`\n\n**Note:** This preset uses the [module worker syntax](https://developers.cloudflare.com/workers/learning/migrating-to-module-workers/) for deployment.\n\nWhen using Workers you will need a `wrangler.toml` file, in your root directory. To using Workers with [Static Assets](https://developers.cloudflare.com/workers/static-assets/) (BETA with [limitations](https://developers.cloudflare.com/workers/static-assets/#limitations)), you also need a compatibility date set to `2024-09-19` or later, in your `wrangler.toml` file and nitro configuration file.\n\nThe following shows a typical `wrangler.toml` file and a `nitro.config.ts` file for a Nitro application:\n\n```\nexport default defineNitroConfig({\n    compatibilityDate: \"2024-09-19\",\n})\n```\n\n```\nname = \"nitro-app\"\ncompatibility_date = \"2024-09-19\"\nmain = \"./.output/server/index.mjs\"\nassets = { directory = \"./.output/public/\", binding = \"ASSETS\" }\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://nitro.build/deploy/providers/cloudflare", "title": "Cloudflare", "description": "Deploy Nitro apps to Cloudflare.", "has_code_examples": true, "has_best_practices": true, "section_count": 18, "timestamp": "2025-03-01 01:51:30", "type": "section_detail", "page_metadata": {"og:image:width": "1200", "twitter:image": "https://nitro.build/_og/deploy/providers/cloudflare.png?name=Nitro&title=Cloudflare&description=Deploy+Nitro+apps+to+Cloudflare.", "og:image:alt": "Deploy Nitro apps to Cloudflare.", "description": "Deploy Nitro apps to Cloudflare.", "twitter:image:height": "600", "favicon": "https://nitro.build/icon.svg", "viewport": "width=device-width, initial-scale=1", "og:image:type": "image/png", "twitter:image:alt": "Deploy Nitro apps to Cloudflare.", "og:image:height": "600", "twitter:site": "@unjsio", "og:image": "https://nitro.build/_og/deploy/providers/cloudflare.png?name=Nitro&title=Cloudflare&description=Deploy+Nitro+apps+to+Cloudflare.", "twitter:image:width": "1200", "title": "Cloudflare - Nitro", "ogImage": "https://nitro.build/_og/deploy/providers/cloudflare.png?name=Nitro&title=Cloudflare&description=Deploy+Nitro+apps+to+Cloudflare.", "scrapeId": "43ad0281-4aff-426c-8e9f-b8b1f1f65bda", "sourceURL": "https://nitro.build/deploy/providers/cloudflare", "url": "https://nitro.build/deploy/providers/cloudflare", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: How do I runtime hooks in nitro-deploy?\n\nAssistant: To runtime hooks in nitro-deploy, here's what you do:\nYou can use [runtime hooks](https://nitro.build/guide/plugins#nitro-runtime-hooks) below in order to extend [worker handlers](https://developers.cloudflare.com/workers/runtime-apis/handlers/).\n\nRead more in Guide > Plugins#nitro Runtime Hooks.\n\n- [`cloudflare:scheduled`](https://developers.cloudflare.com/workers/runtime-apis/handlers/scheduled/)\n- [`cloudflare:email`](https://developers.cloudflare.com/email-routing/email-workers/runtime-api/)\n- [`cloudflare:queue`](https://developers.cloudflare.com/queues/configuration/javascript-apis/#consumer)\n- [`cloudflare:tail`](https://developers.cloudflare.com/workers/runtime-apis/handlers/tail/)\n- `cloudflare:trace`.\nPretty straightforward, right?", "metadata": {"source_url": "https://nitro.build/deploy/providers/cloudflare", "title": "Cloudflare", "description": "Deploy Nitro apps to Cloudflare.", "has_code_examples": true, "has_best_practices": true, "section_count": 18, "timestamp": "2025-03-01 01:51:30", "type": "section_detail", "page_metadata": {"og:image:width": "1200", "twitter:image": "https://nitro.build/_og/deploy/providers/cloudflare.png?name=Nitro&title=Cloudflare&description=Deploy+Nitro+apps+to+Cloudflare.", "og:image:alt": "Deploy Nitro apps to Cloudflare.", "description": "Deploy Nitro apps to Cloudflare.", "twitter:image:height": "600", "favicon": "https://nitro.build/icon.svg", "viewport": "width=device-width, initial-scale=1", "og:image:type": "image/png", "twitter:image:alt": "Deploy Nitro apps to Cloudflare.", "og:image:height": "600", "twitter:site": "@unjsio", "og:image": "https://nitro.build/_og/deploy/providers/cloudflare.png?name=Nitro&title=Cloudflare&description=Deploy+Nitro+apps+to+Cloudflare.", "twitter:image:width": "1200", "title": "Cloudflare - Nitro", "ogImage": "https://nitro.build/_og/deploy/providers/cloudflare.png?name=Nitro&title=Cloudflare&description=Deploy+Nitro+apps+to+Cloudflare.", "scrapeId": "43ad0281-4aff-426c-8e9f-b8b1f1f65bda", "sourceURL": "https://nitro.build/deploy/providers/cloudflare", "url": "https://nitro.build/deploy/providers/cloudflare", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: How do I preview your app locally in nitro-deploy?\n\nAssistant: To preview your app locally in nitro-deploy, here's what you do:\nYou can use [wrangler](https://github.com/cloudflare/workers-sdk/tree/main/packages/wrangler), to preview your app locally:\n\n```\nNITRO_PRESET=cloudflare npm run build\n\n# If you have added a 'wrangler.toml' file like above in the root of your project:\nnpx wrangler dev\n\n# If you don't have a 'wrangler.toml', directly use:\nnpx wrangler dev .output/server/index.mjs --site .output/public\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://nitro.build/deploy/providers/cloudflare", "title": "Cloudflare", "description": "Deploy Nitro apps to Cloudflare.", "has_code_examples": true, "has_best_practices": true, "section_count": 18, "timestamp": "2025-03-01 01:51:30", "type": "section_detail", "page_metadata": {"og:image:width": "1200", "twitter:image": "https://nitro.build/_og/deploy/providers/cloudflare.png?name=Nitro&title=Cloudflare&description=Deploy+Nitro+apps+to+Cloudflare.", "og:image:alt": "Deploy Nitro apps to Cloudflare.", "description": "Deploy Nitro apps to Cloudflare.", "twitter:image:height": "600", "favicon": "https://nitro.build/icon.svg", "viewport": "width=device-width, initial-scale=1", "og:image:type": "image/png", "twitter:image:alt": "Deploy Nitro apps to Cloudflare.", "og:image:height": "600", "twitter:site": "@unjsio", "og:image": "https://nitro.build/_og/deploy/providers/cloudflare.png?name=Nitro&title=Cloudflare&description=Deploy+Nitro+apps+to+Cloudflare.", "twitter:image:width": "1200", "title": "Cloudflare - Nitro", "ogImage": "https://nitro.build/_og/deploy/providers/cloudflare.png?name=Nitro&title=Cloudflare&description=Deploy+Nitro+apps+to+Cloudflare.", "scrapeId": "43ad0281-4aff-426c-8e9f-b8b1f1f65bda", "sourceURL": "https://nitro.build/deploy/providers/cloudflare", "url": "https://nitro.build/deploy/providers/cloudflare", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: How do I deploy from your local machine using wrangler in nitro-deploy?\n\nAssistant: To deploy from your local machine using wrangler in nitro-deploy, here's what you do:\nInstall [wrangler](https://github.com/cloudflare/workers-sdk/tree/main/packages/wrangler) and login to your Cloudflare account:\n\n```\nnpm i wrangler\nwrangler login\n```\n\nGenerate your app using the `cloudflare_module` preset:\n\n```\nNITRO_PRESET=cloudflare_module npm run build\n```\n\nYou can then preview it locally:\n\n```\n# If you have a 'wrangler.toml' like above:\nnpx wrangler dev\n\n# If you don't have a 'wrangler.toml':\nnpx wrangler dev .output/server/index.mjs --site .output/public\n```\n\nand publish it:\n\n```\nnpx wrangler deploy\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://nitro.build/deploy/providers/cloudflare", "title": "Cloudflare", "description": "Deploy Nitro apps to Cloudflare.", "has_code_examples": true, "has_best_practices": true, "section_count": 18, "timestamp": "2025-03-01 01:51:30", "type": "section_detail", "page_metadata": {"og:image:width": "1200", "twitter:image": "https://nitro.build/_og/deploy/providers/cloudflare.png?name=Nitro&title=Cloudflare&description=Deploy+Nitro+apps+to+Cloudflare.", "og:image:alt": "Deploy Nitro apps to Cloudflare.", "description": "Deploy Nitro apps to Cloudflare.", "twitter:image:height": "600", "favicon": "https://nitro.build/icon.svg", "viewport": "width=device-width, initial-scale=1", "og:image:type": "image/png", "twitter:image:alt": "Deploy Nitro apps to Cloudflare.", "og:image:height": "600", "twitter:site": "@unjsio", "og:image": "https://nitro.build/_og/deploy/providers/cloudflare.png?name=Nitro&title=Cloudflare&description=Deploy+Nitro+apps+to+Cloudflare.", "twitter:image:width": "1200", "title": "Cloudflare - Nitro", "ogImage": "https://nitro.build/_og/deploy/providers/cloudflare.png?name=Nitro&title=Cloudflare&description=Deploy+Nitro+apps+to+Cloudflare.", "scrapeId": "43ad0281-4aff-426c-8e9f-b8b1f1f65bda", "sourceURL": "https://nitro.build/deploy/providers/cloudflare", "url": "https://nitro.build/deploy/providers/cloudflare", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: How do I cloudflare service workers in nitro-deploy?\n\nAssistant: To cloudflare service workers in nitro-deploy, here's what you do:\n**Preset:** `cloudflare`\n\n**Note:** This preset uses the [service worker syntax](https://developers.cloudflare.com/workers/learning/service-worker/) for deployment.\n\n**Note:** This preset is deprecated.\n\nThe way this preset works is identical to that of the `cloudflare_module` one presented above, with the only difference being that such preset inherits all the [disadvantages](https://developers.cloudflare.com/workers/reference/migrate-to-module-workers/#advantages-of-migrating) that such syntax brings..\nPretty straightforward, right?", "metadata": {"source_url": "https://nitro.build/deploy/providers/cloudflare", "title": "Cloudflare", "description": "Deploy Nitro apps to Cloudflare.", "has_code_examples": true, "has_best_practices": true, "section_count": 18, "timestamp": "2025-03-01 01:51:30", "type": "section_detail", "page_metadata": {"og:image:width": "1200", "twitter:image": "https://nitro.build/_og/deploy/providers/cloudflare.png?name=Nitro&title=Cloudflare&description=Deploy+Nitro+apps+to+Cloudflare.", "og:image:alt": "Deploy Nitro apps to Cloudflare.", "description": "Deploy Nitro apps to Cloudflare.", "twitter:image:height": "600", "favicon": "https://nitro.build/icon.svg", "viewport": "width=device-width, initial-scale=1", "og:image:type": "image/png", "twitter:image:alt": "Deploy Nitro apps to Cloudflare.", "og:image:height": "600", "twitter:site": "@unjsio", "og:image": "https://nitro.build/_og/deploy/providers/cloudflare.png?name=Nitro&title=Cloudflare&description=Deploy+Nitro+apps+to+Cloudflare.", "twitter:image:width": "1200", "title": "Cloudflare - Nitro", "ogImage": "https://nitro.build/_og/deploy/providers/cloudflare.png?name=Nitro&title=Cloudflare&description=Deploy+Nitro+apps+to+Cloudflare.", "scrapeId": "43ad0281-4aff-426c-8e9f-b8b1f1f65bda", "sourceURL": "https://nitro.build/deploy/providers/cloudflare", "url": "https://nitro.build/deploy/providers/cloudflare", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: How do I deploy within ci/cd using github actions in nitro-deploy?\n\nAssistant: To deploy within ci/cd using github actions in nitro-deploy, here's what you do:\nRegardless on whether you're using Cloudflare Pages or Cloudflare workers, you can use the [Wrangler GitHub actions](https://github.com/marketplace/actions/deploy-to-cloudflare-workers-with-wrangler) to deploy your application.\n\n**Note:** Remember to [instruct Nitro to use the correct preset](https://nitro.build/deploy#changing-the-deployment-preset) (note that this is necessary for all presets including the `cloudflare_pages` one)..\nPretty straightforward, right?", "metadata": {"source_url": "https://nitro.build/deploy/providers/cloudflare", "title": "Cloudflare", "description": "Deploy Nitro apps to Cloudflare.", "has_code_examples": true, "has_best_practices": true, "section_count": 18, "timestamp": "2025-03-01 01:51:30", "type": "section_detail", "page_metadata": {"og:image:width": "1200", "twitter:image": "https://nitro.build/_og/deploy/providers/cloudflare.png?name=Nitro&title=Cloudflare&description=Deploy+Nitro+apps+to+Cloudflare.", "og:image:alt": "Deploy Nitro apps to Cloudflare.", "description": "Deploy Nitro apps to Cloudflare.", "twitter:image:height": "600", "favicon": "https://nitro.build/icon.svg", "viewport": "width=device-width, initial-scale=1", "og:image:type": "image/png", "twitter:image:alt": "Deploy Nitro apps to Cloudflare.", "og:image:height": "600", "twitter:site": "@unjsio", "og:image": "https://nitro.build/_og/deploy/providers/cloudflare.png?name=Nitro&title=Cloudflare&description=Deploy+Nitro+apps+to+Cloudflare.", "twitter:image:width": "1200", "title": "Cloudflare - Nitro", "ogImage": "https://nitro.build/_og/deploy/providers/cloudflare.png?name=Nitro&title=Cloudflare&description=Deploy+Nitro+apps+to+Cloudflare.", "scrapeId": "43ad0281-4aff-426c-8e9f-b8b1f1f65bda", "sourceURL": "https://nitro.build/deploy/providers/cloudflare", "url": "https://nitro.build/deploy/providers/cloudflare", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: How do I environment variables in nitro-deploy?\n\nAssistant: To environment variables in nitro-deploy, here's what you do:\nNitro allows you to universally access environment variables using `process.env` or `import.meta.env` or the runtime config.\n\nMake sure to only access environment variables **within the event lifecycle** and not in global contexts since Cloudflare only makes them available during the request lifecycle and not before.\n\n**Example:** If you have set the `SECRET` and `NITRO_HELLO_THERE` environment variables set you can access them in the following way:\n\n```\nconsole.log(process.env.SECRET) // note that this is in the global scope! so it doesn't actually work and the variable is undefined!\n\nexport default defineEventHandler((event) => {\n  // note that all the below are valid ways of accessing the above mentioned variables\n  useRuntimeConfig(event).helloThere\n  useRuntimeConfig(event).secret\n  process.env.NITRO_HELLO_THERE\n  import.meta.env.SECRET\n});\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://nitro.build/deploy/providers/cloudflare", "title": "Cloudflare", "description": "Deploy Nitro apps to Cloudflare.", "has_code_examples": true, "has_best_practices": true, "section_count": 18, "timestamp": "2025-03-01 01:51:30", "type": "section_detail", "page_metadata": {"og:image:width": "1200", "twitter:image": "https://nitro.build/_og/deploy/providers/cloudflare.png?name=Nitro&title=Cloudflare&description=Deploy+Nitro+apps+to+Cloudflare.", "og:image:alt": "Deploy Nitro apps to Cloudflare.", "description": "Deploy Nitro apps to Cloudflare.", "twitter:image:height": "600", "favicon": "https://nitro.build/icon.svg", "viewport": "width=device-width, initial-scale=1", "og:image:type": "image/png", "twitter:image:alt": "Deploy Nitro apps to Cloudflare.", "og:image:height": "600", "twitter:site": "@unjsio", "og:image": "https://nitro.build/_og/deploy/providers/cloudflare.png?name=Nitro&title=Cloudflare&description=Deploy+Nitro+apps+to+Cloudflare.", "twitter:image:width": "1200", "title": "Cloudflare - Nitro", "ogImage": "https://nitro.build/_og/deploy/providers/cloudflare.png?name=Nitro&title=Cloudflare&description=Deploy+Nitro+apps+to+Cloudflare.", "scrapeId": "43ad0281-4aff-426c-8e9f-b8b1f1f65bda", "sourceURL": "https://nitro.build/deploy/providers/cloudflare", "url": "https://nitro.build/deploy/providers/cloudflare", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: How do I specify variables in development mode in nitro-deploy?\n\nAssistant: To specify variables in development mode in nitro-deploy, here's what you do:\nFor development, you can use a `.env` file to specify environment variables:\n\n```\nNITRO_HELLO_THERE=\"captain\"\nSECRET=\"top-secret\"\n```\n\n**Note:** Make sure you add `.env` to the `.gitignore` file so that you don't commit it as it can contain sensitive information..\nPretty straightforward, right?", "metadata": {"source_url": "https://nitro.build/deploy/providers/cloudflare", "title": "Cloudflare", "description": "Deploy Nitro apps to Cloudflare.", "has_code_examples": true, "has_best_practices": true, "section_count": 18, "timestamp": "2025-03-01 01:51:30", "type": "section_detail", "page_metadata": {"og:image:width": "1200", "twitter:image": "https://nitro.build/_og/deploy/providers/cloudflare.png?name=Nitro&title=Cloudflare&description=Deploy+Nitro+apps+to+Cloudflare.", "og:image:alt": "Deploy Nitro apps to Cloudflare.", "description": "Deploy Nitro apps to Cloudflare.", "twitter:image:height": "600", "favicon": "https://nitro.build/icon.svg", "viewport": "width=device-width, initial-scale=1", "og:image:type": "image/png", "twitter:image:alt": "Deploy Nitro apps to Cloudflare.", "og:image:height": "600", "twitter:site": "@unjsio", "og:image": "https://nitro.build/_og/deploy/providers/cloudflare.png?name=Nitro&title=Cloudflare&description=Deploy+Nitro+apps+to+Cloudflare.", "twitter:image:width": "1200", "title": "Cloudflare - Nitro", "ogImage": "https://nitro.build/_og/deploy/providers/cloudflare.png?name=Nitro&title=Cloudflare&description=Deploy+Nitro+apps+to+Cloudflare.", "scrapeId": "43ad0281-4aff-426c-8e9f-b8b1f1f65bda", "sourceURL": "https://nitro.build/deploy/providers/cloudflare", "url": "https://nitro.build/deploy/providers/cloudflare", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: How do I specify variables for local previews in nitro-deploy?\n\nAssistant: To specify variables for local previews in nitro-deploy, here's what you do:\nAfter build, when you try out your project locally with `wrangler dev` or `wrangler pages dev`, in order to have access to environment variables you will need to specify the in a `.dev.vars` file in the root of your project (as presented in the [Pages](https://developers.cloudflare.com/pages/functions/bindings/#interact-with-your-environment-variables-locally) and [Workers](https://developers.cloudflare.com/workers/configuration/environment-variables/#interact-with-environment-variables-locally) documentation).\n\nIf you are using a `.env` file while developing, your `.dev.vars` should be identical to it.\n\n**Note:** Make sure you add `.dev.vars` to the `.gitignore` file so that you don't commit it as it can contain sensitive information..\nPretty straightforward, right?", "metadata": {"source_url": "https://nitro.build/deploy/providers/cloudflare", "title": "Cloudflare", "description": "Deploy Nitro apps to Cloudflare.", "has_code_examples": true, "has_best_practices": true, "section_count": 18, "timestamp": "2025-03-01 01:51:30", "type": "section_detail", "page_metadata": {"og:image:width": "1200", "twitter:image": "https://nitro.build/_og/deploy/providers/cloudflare.png?name=Nitro&title=Cloudflare&description=Deploy+Nitro+apps+to+Cloudflare.", "og:image:alt": "Deploy Nitro apps to Cloudflare.", "description": "Deploy Nitro apps to Cloudflare.", "twitter:image:height": "600", "favicon": "https://nitro.build/icon.svg", "viewport": "width=device-width, initial-scale=1", "og:image:type": "image/png", "twitter:image:alt": "Deploy Nitro apps to Cloudflare.", "og:image:height": "600", "twitter:site": "@unjsio", "og:image": "https://nitro.build/_og/deploy/providers/cloudflare.png?name=Nitro&title=Cloudflare&description=Deploy+Nitro+apps+to+Cloudflare.", "twitter:image:width": "1200", "title": "Cloudflare - Nitro", "ogImage": "https://nitro.build/_og/deploy/providers/cloudflare.png?name=Nitro&title=Cloudflare&description=Deploy+Nitro+apps+to+Cloudflare.", "scrapeId": "43ad0281-4aff-426c-8e9f-b8b1f1f65bda", "sourceURL": "https://nitro.build/deploy/providers/cloudflare", "url": "https://nitro.build/deploy/providers/cloudflare", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: How do I specify variables for production in nitro-deploy?\n\nAssistant: To specify variables for production in nitro-deploy, here's what you do:\nFor production, use the cloudflare dashboard or the [`wrangler secret`](https://developers.cloudflare.com/workers/wrangler/commands/#secret) command to set environment variables and secrets..\nPretty straightforward, right?", "metadata": {"source_url": "https://nitro.build/deploy/providers/cloudflare", "title": "Cloudflare", "description": "Deploy Nitro apps to Cloudflare.", "has_code_examples": true, "has_best_practices": true, "section_count": 18, "timestamp": "2025-03-01 01:51:30", "type": "section_detail", "page_metadata": {"og:image:width": "1200", "twitter:image": "https://nitro.build/_og/deploy/providers/cloudflare.png?name=Nitro&title=Cloudflare&description=Deploy+Nitro+apps+to+Cloudflare.", "og:image:alt": "Deploy Nitro apps to Cloudflare.", "description": "Deploy Nitro apps to Cloudflare.", "twitter:image:height": "600", "favicon": "https://nitro.build/icon.svg", "viewport": "width=device-width, initial-scale=1", "og:image:type": "image/png", "twitter:image:alt": "Deploy Nitro apps to Cloudflare.", "og:image:height": "600", "twitter:site": "@unjsio", "og:image": "https://nitro.build/_og/deploy/providers/cloudflare.png?name=Nitro&title=Cloudflare&description=Deploy+Nitro+apps+to+Cloudflare.", "twitter:image:width": "1200", "title": "Cloudflare - Nitro", "ogImage": "https://nitro.build/_og/deploy/providers/cloudflare.png?name=Nitro&title=Cloudflare&description=Deploy+Nitro+apps+to+Cloudflare.", "scrapeId": "43ad0281-4aff-426c-8e9f-b8b1f1f65bda", "sourceURL": "https://nitro.build/deploy/providers/cloudflare", "url": "https://nitro.build/deploy/providers/cloudflare", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: How do I specify variables using `wrangler.toml` in nitro-deploy?\n\nAssistant: To specify variables using `wrangler.toml` in nitro-deploy, here's what you do:\nYou can specify a custom `wrangler.toml` file and define vars inside.\n\n**Note:** `wrangler.toml` isn't supported by cloudflare pages.\n\nNote that this isn't recommend for sensitive data.\n\n**Example:**\n\n```\n# Shared\n[vars]\nNITRO_HELLO_THERE=\"general\"\nSECRET=\"secret\"\n\n# Override values for `--env production` usage\n[env.production.vars]\nNITRO_HELLO_THERE=\"captain\"\nSECRET=\"top-secret\"\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://nitro.build/deploy/providers/cloudflare", "title": "Cloudflare", "description": "Deploy Nitro apps to Cloudflare.", "has_code_examples": true, "has_best_practices": true, "section_count": 18, "timestamp": "2025-03-01 01:51:30", "type": "section_detail", "page_metadata": {"og:image:width": "1200", "twitter:image": "https://nitro.build/_og/deploy/providers/cloudflare.png?name=Nitro&title=Cloudflare&description=Deploy+Nitro+apps+to+Cloudflare.", "og:image:alt": "Deploy Nitro apps to Cloudflare.", "description": "Deploy Nitro apps to Cloudflare.", "twitter:image:height": "600", "favicon": "https://nitro.build/icon.svg", "viewport": "width=device-width, initial-scale=1", "og:image:type": "image/png", "twitter:image:alt": "Deploy Nitro apps to Cloudflare.", "og:image:height": "600", "twitter:site": "@unjsio", "og:image": "https://nitro.build/_og/deploy/providers/cloudflare.png?name=Nitro&title=Cloudflare&description=Deploy+Nitro+apps+to+Cloudflare.", "twitter:image:width": "1200", "title": "Cloudflare - Nitro", "ogImage": "https://nitro.build/_og/deploy/providers/cloudflare.png?name=Nitro&title=Cloudflare&description=Deploy+Nitro+apps+to+Cloudflare.", "scrapeId": "43ad0281-4aff-426c-8e9f-b8b1f1f65bda", "sourceURL": "https://nitro.build/deploy/providers/cloudflare", "url": "https://nitro.build/deploy/providers/cloudflare", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: How do I direct access to cloudflare bindings in nitro-deploy?\n\nAssistant: To direct access to cloudflare bindings in nitro-deploy, here's what you do:\nBindings are what allows you to interact with resources from the Cloudflare platform, examples of such resources are key-value data storages ( [KVs](https://developers.cloudflare.com/kv/)) and serverless SQL databases ( [D1s](https://developers.cloudflare.com/d1/)).\n\nFor more details on Bindings and how to use them please refer to the Cloudflare [Pages](https://developers.cloudflare.com/pages/functions/bindings/) and [Workers](https://developers.cloudflare.com/workers/configuration/bindings/#bindings) documentation.\n\nNitro provides high level API to interact with primitives such as [KV Storage](https://nitro.build/guide/storage) and [Database](https://nitro.build/guide/database) and you are highly recommended to prefer using them instead of directly depending on low-level APIs for usage stability.\n\nRead more in Database Layer.\nRead more in KV Storage.\n\nIn runtime, you can access bindings from the request event, by accessing its `context.cloudflare.env` field, this is for example how you can access a D1 bindings:\n\n```\ndefineEventHandler(async (event) => {\n  const { cloudflare } = event.context\n  const stmt = await cloudflare.env.MY_D1.prepare('SELECT id FROM table')\n  const { results } = await stmt.all()\n})\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://nitro.build/deploy/providers/cloudflare", "title": "Cloudflare", "description": "Deploy Nitro apps to Cloudflare.", "has_code_examples": true, "has_best_practices": true, "section_count": 18, "timestamp": "2025-03-01 01:51:30", "type": "section_detail", "page_metadata": {"og:image:width": "1200", "twitter:image": "https://nitro.build/_og/deploy/providers/cloudflare.png?name=Nitro&title=Cloudflare&description=Deploy+Nitro+apps+to+Cloudflare.", "og:image:alt": "Deploy Nitro apps to Cloudflare.", "description": "Deploy Nitro apps to Cloudflare.", "twitter:image:height": "600", "favicon": "https://nitro.build/icon.svg", "viewport": "width=device-width, initial-scale=1", "og:image:type": "image/png", "twitter:image:alt": "Deploy Nitro apps to Cloudflare.", "og:image:height": "600", "twitter:site": "@unjsio", "og:image": "https://nitro.build/_og/deploy/providers/cloudflare.png?name=Nitro&title=Cloudflare&description=Deploy+Nitro+apps+to+Cloudflare.", "twitter:image:width": "1200", "title": "Cloudflare - Nitro", "ogImage": "https://nitro.build/_og/deploy/providers/cloudflare.png?name=Nitro&title=Cloudflare&description=Deploy+Nitro+apps+to+Cloudflare.", "scrapeId": "43ad0281-4aff-426c-8e9f-b8b1f1f65bda", "sourceURL": "https://nitro.build/deploy/providers/cloudflare", "url": "https://nitro.build/deploy/providers/cloudflare", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: How do I access to the bindings in local env in nitro-deploy?\n\nAssistant: To access to the bindings in local env in nitro-deploy, here's what you do:\nIn order to access bindings during local dev mode, regardless of the chosen preset, it is recommended to use a `wrangler.toml` file (as well as a `.dev.vars` one) in combination with the [`nitro-cloudflare-dev` module](https://github.com/nitrojs/nitro-cloudflare-dev) as illustrated below.\n\nThe `nitro-cloudflare-dev` module is experimental. The Nitro team is looking into a more native integration which could in the near future make the module unneeded.\n\nIn order to access bindings in dev mode we start by defining the bindings in a `wrangler.toml` file, this is for example how you would define a variable and a KV namespace:\n\n```\n[vars]\nMY_VARIABLE=\"my-value\"\n\n[[kv_namespaces]]\nbinding = \"MY_KV\"\nid = \"xxx\"\n```\n\nOnly bindings in the default environment are recognized.\n\nNext we install the `nitro-cloudflare-dev` module as well as the required `wrangler` package (if not already installed):\n\n```\nnpm i -D nitro-cloudflare-dev wrangler\n```\n\nThen define module:\n\n```\nimport nitroCloudflareBindings from \"nitro-cloudflare-dev\";\n\nexport default defineNitroConfig({\n  modules: [nitroCloudflareBindings],\n});\n```\n\nFrom this moment, when running\n\n```\nnpm run dev\n```\n\nyou will be able to access the `MY_VARIABLE` and `MY_KV` from the request event just as illustrated above..\nPretty straightforward, right?", "metadata": {"source_url": "https://nitro.build/deploy/providers/cloudflare", "title": "Cloudflare", "description": "Deploy Nitro apps to Cloudflare.", "has_code_examples": true, "has_best_practices": true, "section_count": 18, "timestamp": "2025-03-01 01:51:30", "type": "section_detail", "page_metadata": {"og:image:width": "1200", "twitter:image": "https://nitro.build/_og/deploy/providers/cloudflare.png?name=Nitro&title=Cloudflare&description=Deploy+Nitro+apps+to+Cloudflare.", "og:image:alt": "Deploy Nitro apps to Cloudflare.", "description": "Deploy Nitro apps to Cloudflare.", "twitter:image:height": "600", "favicon": "https://nitro.build/icon.svg", "viewport": "width=device-width, initial-scale=1", "og:image:type": "image/png", "twitter:image:alt": "Deploy Nitro apps to Cloudflare.", "og:image:height": "600", "twitter:site": "@unjsio", "og:image": "https://nitro.build/_og/deploy/providers/cloudflare.png?name=Nitro&title=Cloudflare&description=Deploy+Nitro+apps+to+Cloudflare.", "twitter:image:width": "1200", "title": "Cloudflare - Nitro", "ogImage": "https://nitro.build/_og/deploy/providers/cloudflare.png?name=Nitro&title=Cloudflare&description=Deploy+Nitro+apps+to+Cloudflare.", "scrapeId": "43ad0281-4aff-426c-8e9f-b8b1f1f65bda", "sourceURL": "https://nitro.build/deploy/providers/cloudflare", "url": "https://nitro.build/deploy/providers/cloudflare", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: Can you give me some code examples for Cloudflare in nitro-deploy?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Building your Application using the preset**:\n\n```yaml\nNITRO_PRESET=cloudflare_pages npm run build\n```\n\nThis snippet shows you how to building your application using the preset, which is an important aspect of cloudflare.\n\n**Updating Nitro preset configuration**:\n\n```yaml\n\"preset\": \"cloudflare_pages\",\n```\n\nThis snippet shows you how to updating nitro preset configuration, which is an important aspect of cloudflare.\n\n**Preview your app locally**:\n\n```yaml\nnpx wrangler pages dev dist\n```\n\nThis snippet shows you how to preview your app locally, which is an important aspect of cloudflare.\n\n**Deploy from your local machine using wrangler**:\n\n```yaml\nnpx wrangler login\n```\n\nThis snippet shows you how to deploy from your local machine using wrangler, which is an important aspect of cloudflare.\n\n**Deploy from your local machine using wrangler**:\n\n```yaml\nnpx wrangler pages deploy dist\n```\n\nThis snippet shows you how to deploy from your local machine using wrangler, which is an important aspect of cloudflare.\n\n**Specify Variables in Development Mode**:\n\n```yaml\nNITRO_HELLO_THERE=\"captain\"\nSECRET=\"top-secret\"\n```\n\nThis snippet shows you how to specify variables in development mode, which is an important aspect of cloudflare.\n\n**Specify Variables for local previews**:\n\n```yaml\nNITRO_HELLO_THERE=\"captain\"\nSECRET=\"top-secret\"\n```\n\nThis snippet shows you how to specify variables for local previews, which is an important aspect of cloudflare.\n\n**Access to the bindings in local env**:\n\n```yaml\n[vars]\nMY_VARIABLE=\"my-value\"\n\n[[kv_namespaces]]\nbinding = \"MY_KV\"\nid = \"xxx\"\n```\n\nThis snippet shows you how to access to the bindings in local env, which is an important aspect of cloudflare.\n\n**Access to the bindings in local env**:\n\n```yaml\nnpm i -D nitro-cloudflare-dev wrangler\n```\n\nThis snippet shows you how to access to the bindings in local env, which is an important aspect of cloudflare.\n\n**Access to the bindings in local env**:\n\n```yaml\nimport nitroCloudflareBindings from \"nitro-cloudflare-dev\";\n\nexport default defineNitroConfig({\n  modules: [nitroCloudflareBindings],\n});\n```\n\nThis snippet shows you how to access to the bindings in local env, which is an important aspect of cloudflare.\n\n", "metadata": {"source_url": "https://nitro.build/deploy/providers/cloudflare", "title": "Cloudflare", "description": "Deploy Nitro apps to Cloudflare.", "has_code_examples": true, "has_best_practices": true, "section_count": 18, "timestamp": "2025-03-01 01:51:30", "type": "code_examples", "page_metadata": {"og:image:width": "1200", "twitter:image": "https://nitro.build/_og/deploy/providers/cloudflare.png?name=Nitro&title=Cloudflare&description=Deploy+Nitro+apps+to+Cloudflare.", "og:image:alt": "Deploy Nitro apps to Cloudflare.", "description": "Deploy Nitro apps to Cloudflare.", "twitter:image:height": "600", "favicon": "https://nitro.build/icon.svg", "viewport": "width=device-width, initial-scale=1", "og:image:type": "image/png", "twitter:image:alt": "Deploy Nitro apps to Cloudflare.", "og:image:height": "600", "twitter:site": "@unjsio", "og:image": "https://nitro.build/_og/deploy/providers/cloudflare.png?name=Nitro&title=Cloudflare&description=Deploy+Nitro+apps+to+Cloudflare.", "twitter:image:width": "1200", "title": "Cloudflare - Nitro", "ogImage": "https://nitro.build/_og/deploy/providers/cloudflare.png?name=Nitro&title=Cloudflare&description=Deploy+Nitro+apps+to+Cloudflare.", "scrapeId": "43ad0281-4aff-426c-8e9f-b8b1f1f65bda", "sourceURL": "https://nitro.build/deploy/providers/cloudflare", "url": "https://nitro.build/deploy/providers/cloudflare", "statusCode": 200}}}
{"text": "System: You are a helpful nitro-deploy expert.\n\nUser: What are some tips for using Cloudflare in nitro-deploy effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nConsider using alternative presets if you need special features.\n\nMake sure to only access environment variables within the event lifecycle and not in global contexts.\n\nAdd `.env` and `.dev.vars` to the `.gitignore` file to avoid committing sensitive information.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://nitro.build/deploy/providers/cloudflare", "title": "Cloudflare", "description": "Deploy Nitro apps to Cloudflare.", "has_code_examples": true, "has_best_practices": true, "section_count": 18, "timestamp": "2025-03-01 01:51:30", "type": "best_practices", "page_metadata": {"og:image:width": "1200", "twitter:image": "https://nitro.build/_og/deploy/providers/cloudflare.png?name=Nitro&title=Cloudflare&description=Deploy+Nitro+apps+to+Cloudflare.", "og:image:alt": "Deploy Nitro apps to Cloudflare.", "description": "Deploy Nitro apps to Cloudflare.", "twitter:image:height": "600", "favicon": "https://nitro.build/icon.svg", "viewport": "width=device-width, initial-scale=1", "og:image:type": "image/png", "twitter:image:alt": "Deploy Nitro apps to Cloudflare.", "og:image:height": "600", "twitter:site": "@unjsio", "og:image": "https://nitro.build/_og/deploy/providers/cloudflare.png?name=Nitro&title=Cloudflare&description=Deploy+Nitro+apps+to+Cloudflare.", "twitter:image:width": "1200", "title": "Cloudflare - Nitro", "ogImage": "https://nitro.build/_og/deploy/providers/cloudflare.png?name=Nitro&title=Cloudflare&description=Deploy+Nitro+apps+to+Cloudflare.", "scrapeId": "43ad0281-4aff-426c-8e9f-b8b1f1f65bda", "sourceURL": "https://nitro.build/deploy/providers/cloudflare", "url": "https://nitro.build/deploy/providers/cloudflare", "statusCode": 200}}}

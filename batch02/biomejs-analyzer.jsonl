{"text": "System: You are a helpful biomejs-analyzer expert.\n\nUser: Can you explain what Analyzer is in biomejs-analyzer?\n\nAssistant: Sure, I'd be happy to explain Analyzer in biomejs-analyzer.\n\n# Analyzer\n\nBiome’s analyzer intends to provide a series of features that users can leverage.Here's a quick rundown of what this is about:\n\n## Overview\n\nBiome’s analyzer intends to provide a series of features that users can leverage.\n\n## Import Sorting\n\nFor now, it only provides import sorting that sorts import statements in JavaScript-like files.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://biomejs.dev/analyzer", "title": "Analyzer", "description": "Biome’s analyzer intends to provide a series of features that users can leverage.", "has_code_examples": false, "has_best_practices": false, "section_count": 2, "timestamp": "2025-02-28 21:58:40", "type": "overview", "page_metadata": {"language": "en", "title": "Analyzer | Biome", "og:site_name": "Biome", "og:description": "What the Biome analyzer provides", "twitter:card": "summary_large_image", "ogTitle": "Analyzer", "ogUrl": "https://biomejs.dev/analyzer/", "og:title": "Analyzer", "og:type": "article", "ogImage": "https://biomejs.dev/og/analyzer.png", "ogDescription": "What the Biome analyzer provides", "ogLocale": "en", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "ogSiteName": "Biome", "og:locale": "en", "description": "What the Biome analyzer provides", "og:url": "https://biomejs.dev/analyzer/", "favicon": "https://biomejs.dev/img/favicon.svg", "og:image": "https://biomejs.dev/og/analyzer.png", "twitter:image": "https://biomejs.dev/og/analyzer.png", "viewport": "width=device-width, initial-scale=1", "scrapeId": "bf9ea5a4-85ce-4c1c-92b5-a19750dec7de", "sourceURL": "https://biomejs.dev/analyzer", "url": "https://biomejs.dev/analyzer/", "statusCode": 200}}}
{"text": "System: You are a helpful biomejs-analyzer expert.\n\nUser: How do I overview in biomejs-analyzer?\n\nAssistant: To overview in biomejs-analyzer, here's what you do:\nBiome’s analyzer intends to provide a series of features that users can leverage..\nPretty straightforward, right?", "metadata": {"source_url": "https://biomejs.dev/analyzer", "title": "Analyzer", "description": "Biome’s analyzer intends to provide a series of features that users can leverage.", "has_code_examples": false, "has_best_practices": false, "section_count": 2, "timestamp": "2025-02-28 21:58:40", "type": "section_detail", "page_metadata": {"language": "en", "title": "Analyzer | Biome", "og:site_name": "Biome", "og:description": "What the Biome analyzer provides", "twitter:card": "summary_large_image", "ogTitle": "Analyzer", "ogUrl": "https://biomejs.dev/analyzer/", "og:title": "Analyzer", "og:type": "article", "ogImage": "https://biomejs.dev/og/analyzer.png", "ogDescription": "What the Biome analyzer provides", "ogLocale": "en", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "ogSiteName": "Biome", "og:locale": "en", "description": "What the Biome analyzer provides", "og:url": "https://biomejs.dev/analyzer/", "favicon": "https://biomejs.dev/img/favicon.svg", "og:image": "https://biomejs.dev/og/analyzer.png", "twitter:image": "https://biomejs.dev/og/analyzer.png", "viewport": "width=device-width, initial-scale=1", "scrapeId": "bf9ea5a4-85ce-4c1c-92b5-a19750dec7de", "sourceURL": "https://biomejs.dev/analyzer", "url": "https://biomejs.dev/analyzer/", "statusCode": 200}}}
{"text": "System: You are a helpful biomejs-analyzer expert.\n\nUser: How do I import sorting in biomejs-analyzer?\n\nAssistant: To import sorting in biomejs-analyzer, here's what you do:\nFor now, it only provides import sorting that sorts import statements in JavaScript-like files..\nPretty straightforward, right?", "metadata": {"source_url": "https://biomejs.dev/analyzer", "title": "Analyzer", "description": "Biome’s analyzer intends to provide a series of features that users can leverage.", "has_code_examples": false, "has_best_practices": false, "section_count": 2, "timestamp": "2025-02-28 21:58:40", "type": "section_detail", "page_metadata": {"language": "en", "title": "Analyzer | Biome", "og:site_name": "Biome", "og:description": "What the Biome analyzer provides", "twitter:card": "summary_large_image", "ogTitle": "Analyzer", "ogUrl": "https://biomejs.dev/analyzer/", "og:title": "Analyzer", "og:type": "article", "ogImage": "https://biomejs.dev/og/analyzer.png", "ogDescription": "What the Biome analyzer provides", "ogLocale": "en", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "ogSiteName": "Biome", "og:locale": "en", "description": "What the Biome analyzer provides", "og:url": "https://biomejs.dev/analyzer/", "favicon": "https://biomejs.dev/img/favicon.svg", "og:image": "https://biomejs.dev/og/analyzer.png", "twitter:image": "https://biomejs.dev/og/analyzer.png", "viewport": "width=device-width, initial-scale=1", "scrapeId": "bf9ea5a4-85ce-4c1c-92b5-a19750dec7de", "sourceURL": "https://biomejs.dev/analyzer", "url": "https://biomejs.dev/analyzer/", "statusCode": 200}}}
{"text": "System: You are a helpful biomejs-analyzer expert.\n\nUser: Can you explain what Imports Sorting is in biomejs-analyzer?\n\nAssistant: Sure, I'd be happy to explain Imports Sorting in biomejs-analyzer.\n\n# Imports Sorting\n\nBiome allows sorting import statements using natural ordering.Here's a quick rundown of what this is about:\n\n## How imports are sorted\n\nImport statements are sorted by “distance”. Modules that are “farther” from the user are put on the top, modules “closer” to the user are put on the bottom:\n\n01. modules imported via `bun:` protocol. This is applicable when writing code run by Bun;\n02. built-in Node.js modules that are explicitly imported using the `node:` protocol and common Node built-ins such as `assert`;\n03. modules imported via `npm:` protocol. This is applicable when writing code run by Deno;\n04. modules that contain the protocol `:`. These are usually considered “virtual modules”, modules that are injected by your working environment, e.g. `vite`;\n05. modules imported via URL;\n06. modules imported from libraries;\n07. modules imported via absolute imports;\n08. modules imported from a name prefixed by `#`. This is applicable when using Node’s subpath imports;\n09. modules imported via relative imports;\n10. modules that couldn’t be identified by the previous criteria;\n\nFor example, given the following code:\n\n```\nimport uncle from \"../uncle\";\nimport sibling from \"./sibling\";\nimport express from \"npm:express\";\nimport imageUrl from \"url:./image.png\";\nimport { sortBy } from \"virtual:utils\";\nimport assert from \"node:assert\";\nimport aunt from \"../aunt\";\nimport { VERSION } from \"https://deno.land/std/version.ts\";\nimport { mock, test } from \"node:test\";\nimport { expect } from \"bun:test\";\nimport { internal } from \"#internal\";\nimport { secret } from \"/absolute/path\";\nimport React from \"react\";\n```\n\nThey will be sorted like this:\n\n```\n import { expect } from \"bun:test\";\n import assert from \"node:assert\";\n import { mock, test } from \"node:test\";\n import express from \"npm:express\";\n import { sortBy } from \"virtual:utils\";\n import { VERSION } from \"https://deno.land/std/version.ts\";\n import React from \"react\";\n import { secret } from \"/absolute/path\";\n import { internal } from \"#internal\";\n import aunt from \"../aunt\";\n import uncle from \"../uncle\";\n import sibling from \"./sibling\";\n import imageUrl from \"url:./image.png\";\n```\n\nYou can apply the sorting in two ways: via CLI or VSCode extension.\n\n## Grouped imports\n\nIt’s widespread to have import statements in a certain order, primarily when you work on a frontend project, and you import CSS files:\n\n```\nimport \"../styles/reset.css\";\nimport \"../styles/layout.css\";\nimport { Grid } from \"../components/Grid.jsx\";\n```\n\nAnother common case is import polyfills or shim files, that needs to stay at the top file:\n\n```\nimport \"../polyfills/array/flatMap\";\nimport { functionThatUsesFlatMap } from \"./utils.js\";\n```\n\nIn these cases, Biome will sort all these three imports, and it might happen that the order will **break** your application.\n\nTo avoid this, create a “group” of imports. You create a “group” by adding a **new line** to separate the groups.\n\nBy doing so, Biome will limit the sorting only to the import statements that belong to the same group:\n\n```\n// group 1, only these two files will be sorted\nimport \"../styles/reset.css\";\nimport \"../styles/layout.css\";\n// group 2, only this one is sorted\nimport { Grid } from \"../components/Grid.jsx\";\n```\n\n```\n// group 1, the polyfill/shim\nimport \"../polyfills/array/flatMap\";\n// group 2, the files that require the polyfill/shim\nimport { functionThatUsesFlatMap } from \"./utils.js\";\n```\n\n## Side effect imports\n\n[Side effect imports](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/import#forms_of_import_declarations) are import statements that usually don’t import any name:\n\n```\nimport \"./global.js\"\n```\n\nSince it is difficult to determine which side effects a module triggers, the import sorter assumes that each side effect import forms its own import group.\n\nFor example, the following imports form 4 import groups.\n\n```\nimport sibling from \"./sibling\";       // Import group 1\nimport { internal } from \"#internal\";  // Import group 1\nimport \"z\";  // Import group 2\nimport \"a\";  // Import group 3\nimport React from \"react\";         // Import group 4\nimport assert from \"node:assert\";  // Import group 4\n```\n\nEach group is independently sorted as follows:\n\n```\nimport { internal } from \"#internal\";  // Import group 1\nimport sibling from \"./sibling\";      // Import group 1\nimport \"z\";  // Import group 2\nimport \"a\";  // Import group 3\nimport assert from \"node:assert\";  // Import group 4\nimport React from \"react\";         // Import group 4\n```\n\n## Import sorting via CLI\n\nUsing the command `check`, with the option `--write`. If you want only order the imports, you can use check like so:\n\n```\nbiome check \\\n    --formatter-enabled=false\\\n    --linter-enabled=false \\\n    --organize-imports-enabled=true \\\n    --write \\\n    ./path/to/src\n```\n\n## Import sorting via VSCode extension\n\nThe Biome VS Code extension supports imports sorting through the “Organize Imports” code action.\nBy default, this action can be run using the `⇧` + `Alt` + `O` keyboard shortcut, or is accessible through the _Command Palette_ ( `Ctrl`/ `⌘` + `⇧` + `P`) by selecting _Organize Imports_.\n\nYou can add the following to your editor configuration if you want the action to run automatically on save instead of calling it manually:\n\n```\n{\n  \"editor.codeActionsOnSave\":{\n    \"source.organizeImports.biome\": \"explicit\"\n  }\n}\n```\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://biomejs.dev/analyzer/import-sorting", "title": "Imports Sorting", "description": "Biome allows sorting import statements using natural ordering.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 21:59:21", "type": "overview", "page_metadata": {"description": "What the Biome Imports Sorting provides", "og:type": "article", "og:image": "https://biomejs.dev/og/analyzer/import-sorting.png", "ogDescription": "What the Biome Imports Sorting provides", "og:url": "https://biomejs.dev/analyzer/import-sorting/", "og:locale": "en", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "og:description": "What the Biome Imports Sorting provides", "twitter:card": "summary_large_image", "viewport": "width=device-width, initial-scale=1", "og:title": "Imports Sorting", "ogLocale": "en", "twitter:image": "https://biomejs.dev/og/analyzer/import-sorting.png", "language": "en", "title": "Imports Sorting | Biome", "ogImage": "https://biomejs.dev/og/analyzer/import-sorting.png", "ogUrl": "https://biomejs.dev/analyzer/import-sorting/", "ogTitle": "Imports Sorting", "og:site_name": "Biome", "ogSiteName": "Biome", "favicon": "https://biomejs.dev/img/favicon.svg", "scrapeId": "df998867-4294-4801-9947-5cc0fd2a1edc", "sourceURL": "https://biomejs.dev/analyzer/import-sorting", "url": "https://biomejs.dev/analyzer/import-sorting/", "statusCode": 200}}}
{"text": "System: You are a helpful biomejs-analyzer expert.\n\nUser: How do I how imports are sorted in biomejs-analyzer?\n\nAssistant: To how imports are sorted in biomejs-analyzer, here's what you do:\nImport statements are sorted by “distance”. Modules that are “farther” from the user are put on the top, modules “closer” to the user are put on the bottom:\n\n01. modules imported via `bun:` protocol. This is applicable when writing code run by Bun;\n02. built-in Node.js modules that are explicitly imported using the `node:` protocol and common Node built-ins such as `assert`;\n03. modules imported via `npm:` protocol. This is applicable when writing code run by Deno;\n04. modules that contain the protocol `:`. These are usually considered “virtual modules”, modules that are injected by your working environment, e.g. `vite`;\n05. modules imported via URL;\n06. modules imported from libraries;\n07. modules imported via absolute imports;\n08. modules imported from a name prefixed by `#`. This is applicable when using Node’s subpath imports;\n09. modules imported via relative imports;\n10. modules that couldn’t be identified by the previous criteria;\n\nFor example, given the following code:\n\n```\nimport uncle from \"../uncle\";\nimport sibling from \"./sibling\";\nimport express from \"npm:express\";\nimport imageUrl from \"url:./image.png\";\nimport { sortBy } from \"virtual:utils\";\nimport assert from \"node:assert\";\nimport aunt from \"../aunt\";\nimport { VERSION } from \"https://deno.land/std/version.ts\";\nimport { mock, test } from \"node:test\";\nimport { expect } from \"bun:test\";\nimport { internal } from \"#internal\";\nimport { secret } from \"/absolute/path\";\nimport React from \"react\";\n```\n\nThey will be sorted like this:\n\n```\n import { expect } from \"bun:test\";\n import assert from \"node:assert\";\n import { mock, test } from \"node:test\";\n import express from \"npm:express\";\n import { sortBy } from \"virtual:utils\";\n import { VERSION } from \"https://deno.land/std/version.ts\";\n import React from \"react\";\n import { secret } from \"/absolute/path\";\n import { internal } from \"#internal\";\n import aunt from \"../aunt\";\n import uncle from \"../uncle\";\n import sibling from \"./sibling\";\n import imageUrl from \"url:./image.png\";\n```\n\nYou can apply the sorting in two ways: via CLI or VSCode extension..\nPretty straightforward, right?", "metadata": {"source_url": "https://biomejs.dev/analyzer/import-sorting", "title": "Imports Sorting", "description": "Biome allows sorting import statements using natural ordering.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 21:59:21", "type": "section_detail", "page_metadata": {"description": "What the Biome Imports Sorting provides", "og:type": "article", "og:image": "https://biomejs.dev/og/analyzer/import-sorting.png", "ogDescription": "What the Biome Imports Sorting provides", "og:url": "https://biomejs.dev/analyzer/import-sorting/", "og:locale": "en", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "og:description": "What the Biome Imports Sorting provides", "twitter:card": "summary_large_image", "viewport": "width=device-width, initial-scale=1", "og:title": "Imports Sorting", "ogLocale": "en", "twitter:image": "https://biomejs.dev/og/analyzer/import-sorting.png", "language": "en", "title": "Imports Sorting | Biome", "ogImage": "https://biomejs.dev/og/analyzer/import-sorting.png", "ogUrl": "https://biomejs.dev/analyzer/import-sorting/", "ogTitle": "Imports Sorting", "og:site_name": "Biome", "ogSiteName": "Biome", "favicon": "https://biomejs.dev/img/favicon.svg", "scrapeId": "df998867-4294-4801-9947-5cc0fd2a1edc", "sourceURL": "https://biomejs.dev/analyzer/import-sorting", "url": "https://biomejs.dev/analyzer/import-sorting/", "statusCode": 200}}}
{"text": "System: You are a helpful biomejs-analyzer expert.\n\nUser: How do I grouped imports in biomejs-analyzer?\n\nAssistant: To grouped imports in biomejs-analyzer, here's what you do:\nIt’s widespread to have import statements in a certain order, primarily when you work on a frontend project, and you import CSS files:\n\n```\nimport \"../styles/reset.css\";\nimport \"../styles/layout.css\";\nimport { Grid } from \"../components/Grid.jsx\";\n```\n\nAnother common case is import polyfills or shim files, that needs to stay at the top file:\n\n```\nimport \"../polyfills/array/flatMap\";\nimport { functionThatUsesFlatMap } from \"./utils.js\";\n```\n\nIn these cases, Biome will sort all these three imports, and it might happen that the order will **break** your application.\n\nTo avoid this, create a “group” of imports. You create a “group” by adding a **new line** to separate the groups.\n\nBy doing so, Biome will limit the sorting only to the import statements that belong to the same group:\n\n```\n// group 1, only these two files will be sorted\nimport \"../styles/reset.css\";\nimport \"../styles/layout.css\";\n// group 2, only this one is sorted\nimport { Grid } from \"../components/Grid.jsx\";\n```\n\n```\n// group 1, the polyfill/shim\nimport \"../polyfills/array/flatMap\";\n// group 2, the files that require the polyfill/shim\nimport { functionThatUsesFlatMap } from \"./utils.js\";\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://biomejs.dev/analyzer/import-sorting", "title": "Imports Sorting", "description": "Biome allows sorting import statements using natural ordering.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 21:59:21", "type": "section_detail", "page_metadata": {"description": "What the Biome Imports Sorting provides", "og:type": "article", "og:image": "https://biomejs.dev/og/analyzer/import-sorting.png", "ogDescription": "What the Biome Imports Sorting provides", "og:url": "https://biomejs.dev/analyzer/import-sorting/", "og:locale": "en", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "og:description": "What the Biome Imports Sorting provides", "twitter:card": "summary_large_image", "viewport": "width=device-width, initial-scale=1", "og:title": "Imports Sorting", "ogLocale": "en", "twitter:image": "https://biomejs.dev/og/analyzer/import-sorting.png", "language": "en", "title": "Imports Sorting | Biome", "ogImage": "https://biomejs.dev/og/analyzer/import-sorting.png", "ogUrl": "https://biomejs.dev/analyzer/import-sorting/", "ogTitle": "Imports Sorting", "og:site_name": "Biome", "ogSiteName": "Biome", "favicon": "https://biomejs.dev/img/favicon.svg", "scrapeId": "df998867-4294-4801-9947-5cc0fd2a1edc", "sourceURL": "https://biomejs.dev/analyzer/import-sorting", "url": "https://biomejs.dev/analyzer/import-sorting/", "statusCode": 200}}}
{"text": "System: You are a helpful biomejs-analyzer expert.\n\nUser: How do I side effect imports in biomejs-analyzer?\n\nAssistant: To side effect imports in biomejs-analyzer, here's what you do:\n[Side effect imports](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/import#forms_of_import_declarations) are import statements that usually don’t import any name:\n\n```\nimport \"./global.js\"\n```\n\nSince it is difficult to determine which side effects a module triggers, the import sorter assumes that each side effect import forms its own import group.\n\nFor example, the following imports form 4 import groups.\n\n```\nimport sibling from \"./sibling\";       // Import group 1\nimport { internal } from \"#internal\";  // Import group 1\nimport \"z\";  // Import group 2\nimport \"a\";  // Import group 3\nimport React from \"react\";         // Import group 4\nimport assert from \"node:assert\";  // Import group 4\n```\n\nEach group is independently sorted as follows:\n\n```\nimport { internal } from \"#internal\";  // Import group 1\nimport sibling from \"./sibling\";      // Import group 1\nimport \"z\";  // Import group 2\nimport \"a\";  // Import group 3\nimport assert from \"node:assert\";  // Import group 4\nimport React from \"react\";         // Import group 4\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://biomejs.dev/analyzer/import-sorting", "title": "Imports Sorting", "description": "Biome allows sorting import statements using natural ordering.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 21:59:21", "type": "section_detail", "page_metadata": {"description": "What the Biome Imports Sorting provides", "og:type": "article", "og:image": "https://biomejs.dev/og/analyzer/import-sorting.png", "ogDescription": "What the Biome Imports Sorting provides", "og:url": "https://biomejs.dev/analyzer/import-sorting/", "og:locale": "en", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "og:description": "What the Biome Imports Sorting provides", "twitter:card": "summary_large_image", "viewport": "width=device-width, initial-scale=1", "og:title": "Imports Sorting", "ogLocale": "en", "twitter:image": "https://biomejs.dev/og/analyzer/import-sorting.png", "language": "en", "title": "Imports Sorting | Biome", "ogImage": "https://biomejs.dev/og/analyzer/import-sorting.png", "ogUrl": "https://biomejs.dev/analyzer/import-sorting/", "ogTitle": "Imports Sorting", "og:site_name": "Biome", "ogSiteName": "Biome", "favicon": "https://biomejs.dev/img/favicon.svg", "scrapeId": "df998867-4294-4801-9947-5cc0fd2a1edc", "sourceURL": "https://biomejs.dev/analyzer/import-sorting", "url": "https://biomejs.dev/analyzer/import-sorting/", "statusCode": 200}}}
{"text": "System: You are a helpful biomejs-analyzer expert.\n\nUser: How do I import sorting via cli in biomejs-analyzer?\n\nAssistant: To import sorting via cli in biomejs-analyzer, here's what you do:\nUsing the command `check`, with the option `--write`. If you want only order the imports, you can use check like so:\n\n```\nbiome check \\\n    --formatter-enabled=false\\\n    --linter-enabled=false \\\n    --organize-imports-enabled=true \\\n    --write \\\n    ./path/to/src\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://biomejs.dev/analyzer/import-sorting", "title": "Imports Sorting", "description": "Biome allows sorting import statements using natural ordering.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 21:59:21", "type": "section_detail", "page_metadata": {"description": "What the Biome Imports Sorting provides", "og:type": "article", "og:image": "https://biomejs.dev/og/analyzer/import-sorting.png", "ogDescription": "What the Biome Imports Sorting provides", "og:url": "https://biomejs.dev/analyzer/import-sorting/", "og:locale": "en", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "og:description": "What the Biome Imports Sorting provides", "twitter:card": "summary_large_image", "viewport": "width=device-width, initial-scale=1", "og:title": "Imports Sorting", "ogLocale": "en", "twitter:image": "https://biomejs.dev/og/analyzer/import-sorting.png", "language": "en", "title": "Imports Sorting | Biome", "ogImage": "https://biomejs.dev/og/analyzer/import-sorting.png", "ogUrl": "https://biomejs.dev/analyzer/import-sorting/", "ogTitle": "Imports Sorting", "og:site_name": "Biome", "ogSiteName": "Biome", "favicon": "https://biomejs.dev/img/favicon.svg", "scrapeId": "df998867-4294-4801-9947-5cc0fd2a1edc", "sourceURL": "https://biomejs.dev/analyzer/import-sorting", "url": "https://biomejs.dev/analyzer/import-sorting/", "statusCode": 200}}}
{"text": "System: You are a helpful biomejs-analyzer expert.\n\nUser: How do I import sorting via vscode extension in biomejs-analyzer?\n\nAssistant: To import sorting via vscode extension in biomejs-analyzer, here's what you do:\nThe Biome VS Code extension supports imports sorting through the “Organize Imports” code action.\nBy default, this action can be run using the `⇧` + `Alt` + `O` keyboard shortcut, or is accessible through the _Command Palette_ ( `Ctrl`/ `⌘` + `⇧` + `P`) by selecting _Organize Imports_.\n\nYou can add the following to your editor configuration if you want the action to run automatically on save instead of calling it manually:\n\n```\n{\n  \"editor.codeActionsOnSave\":{\n    \"source.organizeImports.biome\": \"explicit\"\n  }\n}\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://biomejs.dev/analyzer/import-sorting", "title": "Imports Sorting", "description": "Biome allows sorting import statements using natural ordering.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 21:59:21", "type": "section_detail", "page_metadata": {"description": "What the Biome Imports Sorting provides", "og:type": "article", "og:image": "https://biomejs.dev/og/analyzer/import-sorting.png", "ogDescription": "What the Biome Imports Sorting provides", "og:url": "https://biomejs.dev/analyzer/import-sorting/", "og:locale": "en", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "og:description": "What the Biome Imports Sorting provides", "twitter:card": "summary_large_image", "viewport": "width=device-width, initial-scale=1", "og:title": "Imports Sorting", "ogLocale": "en", "twitter:image": "https://biomejs.dev/og/analyzer/import-sorting.png", "language": "en", "title": "Imports Sorting | Biome", "ogImage": "https://biomejs.dev/og/analyzer/import-sorting.png", "ogUrl": "https://biomejs.dev/analyzer/import-sorting/", "ogTitle": "Imports Sorting", "og:site_name": "Biome", "ogSiteName": "Biome", "favicon": "https://biomejs.dev/img/favicon.svg", "scrapeId": "df998867-4294-4801-9947-5cc0fd2a1edc", "sourceURL": "https://biomejs.dev/analyzer/import-sorting", "url": "https://biomejs.dev/analyzer/import-sorting/", "statusCode": 200}}}
{"text": "System: You are a helpful biomejs-analyzer expert.\n\nUser: Can you give me some code examples for Imports Sorting in biomejs-analyzer?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Configuration to disable import sorting**:\n\n```yaml\n{\n  \"organizeImports\": {\n    \"enabled\": false\n  }\n}\n```\n\nThis snippet shows you how to configuration to disable import sorting, which is an important aspect of imports sorting.\n\n**Example of import statements**:\n\n```yaml\nimport uncle from \"../uncle\";\nimport sibling from \"./sibling\";\nimport express from \"npm:express\";\nimport imageUrl from \"url:./image.png\";\nimport { sortBy } from \"virtual:utils\";\nimport assert from \"node:assert\";\nimport aunt from \"../aunt\";\nimport { VERSION } from \"https://deno.land/std/version.ts\";\nimport { mock, test } from \"node:test\";\nimport { expect } from \"bun:test\";\nimport { internal } from \"#internal\";\nimport { secret } from \"/absolute/path\";\nimport React from \"react\";\n```\n\nThis snippet shows you how to example of import statements, which is an important aspect of imports sorting.\n\n**Sorted import statements**:\n\n```yaml\n import { expect } from \"bun:test\";\n import assert from \"node:assert\";\n import { mock, test } from \"node:test\";\n import express from \"npm:express\";\n import { sortBy } from \"virtual:utils\";\n import { VERSION } from \"https://deno.land/std/version.ts\";\n import React from \"react\";\n import { secret } from \"/absolute/path\";\n import { internal } from \"#internal\";\n import aunt from \"../aunt\";\n import uncle from \"../uncle\";\n import sibling from \"./sibling\";\n import imageUrl from \"url:./image.png\";\n```\n\nThis snippet shows you how to sorted import statements, which is an important aspect of imports sorting.\n\n**CLI command for import sorting**:\n\n```yaml\nbiome check \\\n    --formatter-enabled=false\\\n    --linter-enabled=false \\\n    --organize-imports-enabled=true \\\n    --write \\\n    ./path/to/src\n```\n\nThis snippet shows you how to cli command for import sorting, which is an important aspect of imports sorting.\n\n**VSCode configuration for auto organizing imports**:\n\n```yaml\n{\n  \"editor.codeActionsOnSave\":{\n    \"source.organizeImports.biome\": \"explicit\"\n  }\n}\n```\n\nThis snippet shows you how to vscode configuration for auto organizing imports, which is an important aspect of imports sorting.\n\n", "metadata": {"source_url": "https://biomejs.dev/analyzer/import-sorting", "title": "Imports Sorting", "description": "Biome allows sorting import statements using natural ordering.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 21:59:21", "type": "code_examples", "page_metadata": {"description": "What the Biome Imports Sorting provides", "og:type": "article", "og:image": "https://biomejs.dev/og/analyzer/import-sorting.png", "ogDescription": "What the Biome Imports Sorting provides", "og:url": "https://biomejs.dev/analyzer/import-sorting/", "og:locale": "en", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "og:description": "What the Biome Imports Sorting provides", "twitter:card": "summary_large_image", "viewport": "width=device-width, initial-scale=1", "og:title": "Imports Sorting", "ogLocale": "en", "twitter:image": "https://biomejs.dev/og/analyzer/import-sorting.png", "language": "en", "title": "Imports Sorting | Biome", "ogImage": "https://biomejs.dev/og/analyzer/import-sorting.png", "ogUrl": "https://biomejs.dev/analyzer/import-sorting/", "ogTitle": "Imports Sorting", "og:site_name": "Biome", "ogSiteName": "Biome", "favicon": "https://biomejs.dev/img/favicon.svg", "scrapeId": "df998867-4294-4801-9947-5cc0fd2a1edc", "sourceURL": "https://biomejs.dev/analyzer/import-sorting", "url": "https://biomejs.dev/analyzer/import-sorting/", "statusCode": 200}}}
{"text": "System: You are a helpful biomejs-analyzer expert.\n\nUser: What are some tips for using Imports Sorting in biomejs-analyzer effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nTo avoid breaking your application, create a group of imports by adding a new line to separate the groups.\n\nUse the CLI command with the `--write` option to sort imports automatically.\n\nIn VSCode, use the keyboard shortcut `⇧` + `Alt` + `O` to organize imports quickly.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://biomejs.dev/analyzer/import-sorting", "title": "Imports Sorting", "description": "Biome allows sorting import statements using natural ordering.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-02-28 21:59:21", "type": "best_practices", "page_metadata": {"description": "What the Biome Imports Sorting provides", "og:type": "article", "og:image": "https://biomejs.dev/og/analyzer/import-sorting.png", "ogDescription": "What the Biome Imports Sorting provides", "og:url": "https://biomejs.dev/analyzer/import-sorting/", "og:locale": "en", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "og:description": "What the Biome Imports Sorting provides", "twitter:card": "summary_large_image", "viewport": "width=device-width, initial-scale=1", "og:title": "Imports Sorting", "ogLocale": "en", "twitter:image": "https://biomejs.dev/og/analyzer/import-sorting.png", "language": "en", "title": "Imports Sorting | Biome", "ogImage": "https://biomejs.dev/og/analyzer/import-sorting.png", "ogUrl": "https://biomejs.dev/analyzer/import-sorting/", "ogTitle": "Imports Sorting", "og:site_name": "Biome", "ogSiteName": "Biome", "favicon": "https://biomejs.dev/img/favicon.svg", "scrapeId": "df998867-4294-4801-9947-5cc0fd2a1edc", "sourceURL": "https://biomejs.dev/analyzer/import-sorting", "url": "https://biomejs.dev/analyzer/import-sorting/", "statusCode": 200}}}

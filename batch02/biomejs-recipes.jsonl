{"text": "System: You are a helpful biomejs-recipes expert.\n\nUser: Can you explain what 404 is in biomejs-recipes?\n\nAssistant: Sure, I'd be happy to explain 404 in biomejs-recipes.\n\n# 404\n\nBiome not found. Check the URL or try using the search bar.", "metadata": {"source_url": "https://biomejs.dev/recipes", "title": "404", "description": "Biome not found. Check the URL or try using the search bar.", "has_code_examples": false, "has_best_practices": false, "section_count": 0, "timestamp": "2025-02-28 21:58:39", "type": "overview", "page_metadata": {"og:image": "https://biomejs.dev/og/404.png", "title": "404 | Biome", "og:locale": "en", "favicon": "https://biomejs.dev/img/favicon.svg", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "ogSiteName": "Biome", "ogUrl": "https://biomejs.dev/404/", "og:title": "404", "language": "en", "ogLocale": "en", "ogImage": "https://biomejs.dev/og/404.png", "og:url": "https://biomejs.dev/404/", "og:site_name": "Biome", "twitter:card": "summary_large_image", "twitter:image": "https://biomejs.dev/og/404.png", "og:type": "article", "viewport": "width=device-width, initial-scale=1", "ogTitle": "404", "scrapeId": "78a33f0a-da0d-4995-a17b-742d3a410995", "sourceURL": "https://biomejs.dev/recipes", "url": "https://biomejs.dev/recipes", "statusCode": 404, "error": "Not Found"}}}
{"text": "System: You are a helpful biomejs-recipes expert.\n\nUser: Can you explain what Continuous Integration is in biomejs-recipes?\n\nAssistant: Sure, I'd be happy to explain Continuous Integration in biomejs-recipes.\n\n# Continuous Integration\n\nRunning Biome in a CI environment is easy. Check out the following examples for some inspiration.Here's a quick rundown of what this is about:\n\n## GitHub Actions\n\nWe provide a first-party [GitHub Action](https://github.com/marketplace/actions/setup-biome) to setup Biome in your runner.\nHere’s what a simple workflow might look like:\n\n```\nname: Code quality\n\non:\n\n  push:\n\n  pull_request:\n\njobs:\n\n  quality:\n\n    runs-on: ubuntu-latest\n\n    steps:\n\n      - name: Checkout\n\n        uses: actions/checkout@v4\n\n      - name: Setup Biome\n\n        uses: biomejs/setup-biome@v2\n\n        with:\n\n          version: latest\n\n      - name: Run Biome\n\n        run: biome ci .\n```\n\n## Third-party actions\n\nThese are actions maintained by other communities, that you use in your runner:\n\n- [reviewdog-action-biome](https://github.com/marketplace/actions/run-biome-with-reviewdog): run Biome with reviewdog and make comments and commit suggestions on the pull request.\n\n```\nname: reviewdog\n\non: [pull_request]\n\njobs:\n\n  biome:\n\n    name: runner / Biome\n\n    runs-on: ubuntu-latest\n\n    permissions:\n\n      contents: read\n\n      pull-requests: write\n\n    steps:\n\n      - uses: actions/checkout@v4\n\n      - uses: mongolyy/reviewdog-action-biome@v1\n\n        with:\n\n          github_token: ${{ secrets.github_token }}\n\n          reporter: github-pr-review\n```\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://biomejs.dev/recipes/continuous-integration", "title": "Continuous Integration", "description": "Running Biome in a CI environment is easy. Check out the following examples for some inspiration.", "has_code_examples": true, "has_best_practices": false, "section_count": 2, "timestamp": "2025-02-28 21:58:57", "type": "overview", "page_metadata": {"language": "en", "og:image": "https://biomejs.dev/og/recipes/continuous-integration.png", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "og:type": "article", "title": "Continuous Integration | Biome", "og:title": "Continuous Integration", "ogDescription": "Using Biome in a CI environment", "og:locale": "en", "ogTitle": "Continuous Integration", "favicon": "https://biomejs.dev/img/favicon.svg", "og:site_name": "Biome", "ogImage": "https://biomejs.dev/og/recipes/continuous-integration.png", "ogUrl": "https://biomejs.dev/recipes/continuous-integration/", "og:url": "https://biomejs.dev/recipes/continuous-integration/", "og:description": "Using Biome in a CI environment", "twitter:card": "summary_large_image", "viewport": "width=device-width, initial-scale=1", "description": "Using Biome in a CI environment", "ogLocale": "en", "twitter:image": "https://biomejs.dev/og/recipes/continuous-integration.png", "ogSiteName": "Biome", "scrapeId": "ce47e24e-efe9-4185-9ad4-81e7af06d60f", "sourceURL": "https://biomejs.dev/recipes/continuous-integration", "url": "https://biomejs.dev/recipes/continuous-integration/", "statusCode": 200}}}
{"text": "System: You are a helpful biomejs-recipes expert.\n\nUser: How do I github actions in biomejs-recipes?\n\nAssistant: To github actions in biomejs-recipes, here's what you do:\nWe provide a first-party [GitHub Action](https://github.com/marketplace/actions/setup-biome) to setup Biome in your runner.\nHere’s what a simple workflow might look like:\n\n```\nname: Code quality\n\non:\n\n  push:\n\n  pull_request:\n\njobs:\n\n  quality:\n\n    runs-on: ubuntu-latest\n\n    steps:\n\n      - name: Checkout\n\n        uses: actions/checkout@v4\n\n      - name: Setup Biome\n\n        uses: biomejs/setup-biome@v2\n\n        with:\n\n          version: latest\n\n      - name: Run Biome\n\n        run: biome ci .\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://biomejs.dev/recipes/continuous-integration", "title": "Continuous Integration", "description": "Running Biome in a CI environment is easy. Check out the following examples for some inspiration.", "has_code_examples": true, "has_best_practices": false, "section_count": 2, "timestamp": "2025-02-28 21:58:57", "type": "section_detail", "page_metadata": {"language": "en", "og:image": "https://biomejs.dev/og/recipes/continuous-integration.png", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "og:type": "article", "title": "Continuous Integration | Biome", "og:title": "Continuous Integration", "ogDescription": "Using Biome in a CI environment", "og:locale": "en", "ogTitle": "Continuous Integration", "favicon": "https://biomejs.dev/img/favicon.svg", "og:site_name": "Biome", "ogImage": "https://biomejs.dev/og/recipes/continuous-integration.png", "ogUrl": "https://biomejs.dev/recipes/continuous-integration/", "og:url": "https://biomejs.dev/recipes/continuous-integration/", "og:description": "Using Biome in a CI environment", "twitter:card": "summary_large_image", "viewport": "width=device-width, initial-scale=1", "description": "Using Biome in a CI environment", "ogLocale": "en", "twitter:image": "https://biomejs.dev/og/recipes/continuous-integration.png", "ogSiteName": "Biome", "scrapeId": "ce47e24e-efe9-4185-9ad4-81e7af06d60f", "sourceURL": "https://biomejs.dev/recipes/continuous-integration", "url": "https://biomejs.dev/recipes/continuous-integration/", "statusCode": 200}}}
{"text": "System: You are a helpful biomejs-recipes expert.\n\nUser: How do I third-party actions in biomejs-recipes?\n\nAssistant: To third-party actions in biomejs-recipes, here's what you do:\nThese are actions maintained by other communities, that you use in your runner:\n\n- [reviewdog-action-biome](https://github.com/marketplace/actions/run-biome-with-reviewdog): run Biome with reviewdog and make comments and commit suggestions on the pull request.\n\n```\nname: reviewdog\n\non: [pull_request]\n\njobs:\n\n  biome:\n\n    name: runner / Biome\n\n    runs-on: ubuntu-latest\n\n    permissions:\n\n      contents: read\n\n      pull-requests: write\n\n    steps:\n\n      - uses: actions/checkout@v4\n\n      - uses: mongolyy/reviewdog-action-biome@v1\n\n        with:\n\n          github_token: ${{ secrets.github_token }}\n\n          reporter: github-pr-review\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://biomejs.dev/recipes/continuous-integration", "title": "Continuous Integration", "description": "Running Biome in a CI environment is easy. Check out the following examples for some inspiration.", "has_code_examples": true, "has_best_practices": false, "section_count": 2, "timestamp": "2025-02-28 21:58:57", "type": "section_detail", "page_metadata": {"language": "en", "og:image": "https://biomejs.dev/og/recipes/continuous-integration.png", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "og:type": "article", "title": "Continuous Integration | Biome", "og:title": "Continuous Integration", "ogDescription": "Using Biome in a CI environment", "og:locale": "en", "ogTitle": "Continuous Integration", "favicon": "https://biomejs.dev/img/favicon.svg", "og:site_name": "Biome", "ogImage": "https://biomejs.dev/og/recipes/continuous-integration.png", "ogUrl": "https://biomejs.dev/recipes/continuous-integration/", "og:url": "https://biomejs.dev/recipes/continuous-integration/", "og:description": "Using Biome in a CI environment", "twitter:card": "summary_large_image", "viewport": "width=device-width, initial-scale=1", "description": "Using Biome in a CI environment", "ogLocale": "en", "twitter:image": "https://biomejs.dev/og/recipes/continuous-integration.png", "ogSiteName": "Biome", "scrapeId": "ce47e24e-efe9-4185-9ad4-81e7af06d60f", "sourceURL": "https://biomejs.dev/recipes/continuous-integration", "url": "https://biomejs.dev/recipes/continuous-integration/", "statusCode": 200}}}
{"text": "System: You are a helpful biomejs-recipes expert.\n\nUser: Can you give me some code examples for Continuous Integration in biomejs-recipes?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**GitHub Actions Example**:\n\n```yaml\nname: Code quality\n\non:\n\n  push:\n\n  pull_request:\n\njobs:\n\n  quality:\n\n    runs-on: ubuntu-latest\n\n    steps:\n\n      - name: Checkout\n\n        uses: actions/checkout@v4\n\n      - name: Setup Biome\n\n        uses: biomejs/setup-biome@v2\n\n        with:\n\n          version: latest\n\n      - name: Run Biome\n\n        run: biome ci .\n```\n\nThis snippet shows you how to github actions example, which is an important aspect of continuous integration.\n\n**Third-party Actions Example**:\n\n```yaml\nname: reviewdog\n\non: [pull_request]\n\njobs:\n\n  biome:\n\n    name: runner / Biome\n\n    runs-on: ubuntu-latest\n\n    permissions:\n\n      contents: read\n\n      pull-requests: write\n\n    steps:\n\n      - uses: actions/checkout@v4\n\n      - uses: mongolyy/reviewdog-action-biome@v1\n\n        with:\n\n          github_token: ${{ secrets.github_token }}\n\n          reporter: github-pr-review\n\n```\n\nThis snippet shows you how to third-party actions example, which is an important aspect of continuous integration.\n\n", "metadata": {"source_url": "https://biomejs.dev/recipes/continuous-integration", "title": "Continuous Integration", "description": "Running Biome in a CI environment is easy. Check out the following examples for some inspiration.", "has_code_examples": true, "has_best_practices": false, "section_count": 2, "timestamp": "2025-02-28 21:58:57", "type": "code_examples", "page_metadata": {"language": "en", "og:image": "https://biomejs.dev/og/recipes/continuous-integration.png", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "og:type": "article", "title": "Continuous Integration | Biome", "og:title": "Continuous Integration", "ogDescription": "Using Biome in a CI environment", "og:locale": "en", "ogTitle": "Continuous Integration", "favicon": "https://biomejs.dev/img/favicon.svg", "og:site_name": "Biome", "ogImage": "https://biomejs.dev/og/recipes/continuous-integration.png", "ogUrl": "https://biomejs.dev/recipes/continuous-integration/", "og:url": "https://biomejs.dev/recipes/continuous-integration/", "og:description": "Using Biome in a CI environment", "twitter:card": "summary_large_image", "viewport": "width=device-width, initial-scale=1", "description": "Using Biome in a CI environment", "ogLocale": "en", "twitter:image": "https://biomejs.dev/og/recipes/continuous-integration.png", "ogSiteName": "Biome", "scrapeId": "ce47e24e-efe9-4185-9ad4-81e7af06d60f", "sourceURL": "https://biomejs.dev/recipes/continuous-integration", "url": "https://biomejs.dev/recipes/continuous-integration/", "statusCode": 200}}}
{"text": "System: You are a helpful biomejs-recipes expert.\n\nUser: Can you explain what Badges is in biomejs-recipes?\n\nAssistant: Sure, I'd be happy to explain Badges in biomejs-recipes.\n\n# Badges\n\nA guide on how to create and use badges in your projects with Biome.Here's a quick rundown of what this is about:\n\n## Introduction\n\nBadges are a great way to convey information about your project or application. They can be used to indicate status, version, or any other relevant information.\n\n## Creating Badges\n\nTo create a badge, you can use the following syntax:\n\n```html\n<span class=\"badge\">Your Badge Text</span>\n```\n\nYou can customize the badge with different colors and styles.\n\n## Using Badges in Your Project\n\nOnce you have created your badges, you can include them in your project by adding the HTML code to your desired location.\n\n## Examples\n\nHere are some examples of badges:\n\n- Version Badge: <span class=\"badge\">v1.0.0</span>\n- Status Badge: <span class=\"badge\" style=\"background-color: green;\">Active</span>\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://biomejs.dev/recipes/badges", "title": "Badges", "description": "A guide on how to create and use badges in your projects with Biome.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 21:59:52", "type": "overview", "page_metadata": {"twitter:card": "summary_large_image", "og:image": "https://biomejs.dev/og/recipes/badges.png", "og:locale": "en", "viewport": "width=device-width, initial-scale=1", "twitter:image": "https://biomejs.dev/og/recipes/badges.png", "title": "Social badges | Biome", "favicon": "https://biomejs.dev/img/favicon.svg", "og:site_name": "Biome", "ogDescription": "Copy the official Biome badges", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "og:url": "https://biomejs.dev/recipes/badges/", "description": "Copy the official Biome badges", "language": "en", "og:description": "Copy the official Biome badges", "og:title": "Social badges", "ogUrl": "https://biomejs.dev/recipes/badges/", "ogImage": "https://biomejs.dev/og/recipes/badges.png", "ogTitle": "Social badges", "og:type": "article", "ogLocale": "en", "ogSiteName": "Biome", "scrapeId": "84bfe27d-d0db-4622-82b6-5ffd4ce94104", "sourceURL": "https://biomejs.dev/recipes/badges", "url": "https://biomejs.dev/recipes/badges/", "statusCode": 200}}}
{"text": "System: You are a helpful biomejs-recipes expert.\n\nUser: How do I introduction in biomejs-recipes?\n\nAssistant: To introduction in biomejs-recipes, here's what you do:\nBadges are a great way to convey information about your project or application. They can be used to indicate status, version, or any other relevant information..\nPretty straightforward, right?", "metadata": {"source_url": "https://biomejs.dev/recipes/badges", "title": "Badges", "description": "A guide on how to create and use badges in your projects with Biome.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 21:59:52", "type": "section_detail", "page_metadata": {"twitter:card": "summary_large_image", "og:image": "https://biomejs.dev/og/recipes/badges.png", "og:locale": "en", "viewport": "width=device-width, initial-scale=1", "twitter:image": "https://biomejs.dev/og/recipes/badges.png", "title": "Social badges | Biome", "favicon": "https://biomejs.dev/img/favicon.svg", "og:site_name": "Biome", "ogDescription": "Copy the official Biome badges", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "og:url": "https://biomejs.dev/recipes/badges/", "description": "Copy the official Biome badges", "language": "en", "og:description": "Copy the official Biome badges", "og:title": "Social badges", "ogUrl": "https://biomejs.dev/recipes/badges/", "ogImage": "https://biomejs.dev/og/recipes/badges.png", "ogTitle": "Social badges", "og:type": "article", "ogLocale": "en", "ogSiteName": "Biome", "scrapeId": "84bfe27d-d0db-4622-82b6-5ffd4ce94104", "sourceURL": "https://biomejs.dev/recipes/badges", "url": "https://biomejs.dev/recipes/badges/", "statusCode": 200}}}
{"text": "System: You are a helpful biomejs-recipes expert.\n\nUser: How do I creating badges in biomejs-recipes?\n\nAssistant: To creating badges in biomejs-recipes, here's what you do:\nTo create a badge, you can use the following syntax:\n\n```html\n<span class=\"badge\">Your Badge Text</span>\n```\n\nYou can customize the badge with different colors and styles..\nPretty straightforward, right?", "metadata": {"source_url": "https://biomejs.dev/recipes/badges", "title": "Badges", "description": "A guide on how to create and use badges in your projects with Biome.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 21:59:52", "type": "section_detail", "page_metadata": {"twitter:card": "summary_large_image", "og:image": "https://biomejs.dev/og/recipes/badges.png", "og:locale": "en", "viewport": "width=device-width, initial-scale=1", "twitter:image": "https://biomejs.dev/og/recipes/badges.png", "title": "Social badges | Biome", "favicon": "https://biomejs.dev/img/favicon.svg", "og:site_name": "Biome", "ogDescription": "Copy the official Biome badges", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "og:url": "https://biomejs.dev/recipes/badges/", "description": "Copy the official Biome badges", "language": "en", "og:description": "Copy the official Biome badges", "og:title": "Social badges", "ogUrl": "https://biomejs.dev/recipes/badges/", "ogImage": "https://biomejs.dev/og/recipes/badges.png", "ogTitle": "Social badges", "og:type": "article", "ogLocale": "en", "ogSiteName": "Biome", "scrapeId": "84bfe27d-d0db-4622-82b6-5ffd4ce94104", "sourceURL": "https://biomejs.dev/recipes/badges", "url": "https://biomejs.dev/recipes/badges/", "statusCode": 200}}}
{"text": "System: You are a helpful biomejs-recipes expert.\n\nUser: How do I using badges in your project in biomejs-recipes?\n\nAssistant: To using badges in your project in biomejs-recipes, here's what you do:\nOnce you have created your badges, you can include them in your project by adding the HTML code to your desired location..\nPretty straightforward, right?", "metadata": {"source_url": "https://biomejs.dev/recipes/badges", "title": "Badges", "description": "A guide on how to create and use badges in your projects with Biome.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 21:59:52", "type": "section_detail", "page_metadata": {"twitter:card": "summary_large_image", "og:image": "https://biomejs.dev/og/recipes/badges.png", "og:locale": "en", "viewport": "width=device-width, initial-scale=1", "twitter:image": "https://biomejs.dev/og/recipes/badges.png", "title": "Social badges | Biome", "favicon": "https://biomejs.dev/img/favicon.svg", "og:site_name": "Biome", "ogDescription": "Copy the official Biome badges", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "og:url": "https://biomejs.dev/recipes/badges/", "description": "Copy the official Biome badges", "language": "en", "og:description": "Copy the official Biome badges", "og:title": "Social badges", "ogUrl": "https://biomejs.dev/recipes/badges/", "ogImage": "https://biomejs.dev/og/recipes/badges.png", "ogTitle": "Social badges", "og:type": "article", "ogLocale": "en", "ogSiteName": "Biome", "scrapeId": "84bfe27d-d0db-4622-82b6-5ffd4ce94104", "sourceURL": "https://biomejs.dev/recipes/badges", "url": "https://biomejs.dev/recipes/badges/", "statusCode": 200}}}
{"text": "System: You are a helpful biomejs-recipes expert.\n\nUser: How do I examples in biomejs-recipes?\n\nAssistant: To examples in biomejs-recipes, here's what you do:\nHere are some examples of badges:\n\n- Version Badge: <span class=\"badge\">v1.0.0</span>\n- Status Badge: <span class=\"badge\" style=\"background-color: green;\">Active</span>.\nPretty straightforward, right?", "metadata": {"source_url": "https://biomejs.dev/recipes/badges", "title": "Badges", "description": "A guide on how to create and use badges in your projects with Biome.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 21:59:52", "type": "section_detail", "page_metadata": {"twitter:card": "summary_large_image", "og:image": "https://biomejs.dev/og/recipes/badges.png", "og:locale": "en", "viewport": "width=device-width, initial-scale=1", "twitter:image": "https://biomejs.dev/og/recipes/badges.png", "title": "Social badges | Biome", "favicon": "https://biomejs.dev/img/favicon.svg", "og:site_name": "Biome", "ogDescription": "Copy the official Biome badges", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "og:url": "https://biomejs.dev/recipes/badges/", "description": "Copy the official Biome badges", "language": "en", "og:description": "Copy the official Biome badges", "og:title": "Social badges", "ogUrl": "https://biomejs.dev/recipes/badges/", "ogImage": "https://biomejs.dev/og/recipes/badges.png", "ogTitle": "Social badges", "og:type": "article", "ogLocale": "en", "ogSiteName": "Biome", "scrapeId": "84bfe27d-d0db-4622-82b6-5ffd4ce94104", "sourceURL": "https://biomejs.dev/recipes/badges", "url": "https://biomejs.dev/recipes/badges/", "statusCode": 200}}}
{"text": "System: You are a helpful biomejs-recipes expert.\n\nUser: Can you give me some code examples for Badges in biomejs-recipes?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Basic Badge Example**:\n\n```yaml\n<span class=\"badge\">Your Badge Text</span>\n```\n\nThis snippet shows you how to basic badge example, which is an important aspect of badges.\n\n", "metadata": {"source_url": "https://biomejs.dev/recipes/badges", "title": "Badges", "description": "A guide on how to create and use badges in your projects with Biome.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 21:59:52", "type": "code_examples", "page_metadata": {"twitter:card": "summary_large_image", "og:image": "https://biomejs.dev/og/recipes/badges.png", "og:locale": "en", "viewport": "width=device-width, initial-scale=1", "twitter:image": "https://biomejs.dev/og/recipes/badges.png", "title": "Social badges | Biome", "favicon": "https://biomejs.dev/img/favicon.svg", "og:site_name": "Biome", "ogDescription": "Copy the official Biome badges", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "og:url": "https://biomejs.dev/recipes/badges/", "description": "Copy the official Biome badges", "language": "en", "og:description": "Copy the official Biome badges", "og:title": "Social badges", "ogUrl": "https://biomejs.dev/recipes/badges/", "ogImage": "https://biomejs.dev/og/recipes/badges.png", "ogTitle": "Social badges", "og:type": "article", "ogLocale": "en", "ogSiteName": "Biome", "scrapeId": "84bfe27d-d0db-4622-82b6-5ffd4ce94104", "sourceURL": "https://biomejs.dev/recipes/badges", "url": "https://biomejs.dev/recipes/badges/", "statusCode": 200}}}
{"text": "System: You are a helpful biomejs-recipes expert.\n\nUser: What are some tips for using Badges in biomejs-recipes effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nUse contrasting colors for better visibility.\n\nKeep badge text concise and informative.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://biomejs.dev/recipes/badges", "title": "Badges", "description": "A guide on how to create and use badges in your projects with Biome.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-02-28 21:59:52", "type": "best_practices", "page_metadata": {"twitter:card": "summary_large_image", "og:image": "https://biomejs.dev/og/recipes/badges.png", "og:locale": "en", "viewport": "width=device-width, initial-scale=1", "twitter:image": "https://biomejs.dev/og/recipes/badges.png", "title": "Social badges | Biome", "favicon": "https://biomejs.dev/img/favicon.svg", "og:site_name": "Biome", "ogDescription": "Copy the official Biome badges", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "og:url": "https://biomejs.dev/recipes/badges/", "description": "Copy the official Biome badges", "language": "en", "og:description": "Copy the official Biome badges", "og:title": "Social badges", "ogUrl": "https://biomejs.dev/recipes/badges/", "ogImage": "https://biomejs.dev/og/recipes/badges.png", "ogTitle": "Social badges", "og:type": "article", "ogLocale": "en", "ogSiteName": "Biome", "scrapeId": "84bfe27d-d0db-4622-82b6-5ffd4ce94104", "sourceURL": "https://biomejs.dev/recipes/badges", "url": "https://biomejs.dev/recipes/badges/", "statusCode": 200}}}
{"text": "System: You are a helpful biomejs-recipes expert.\n\nUser: Can you explain what Renovate is in biomejs-recipes?\n\nAssistant: Sure, I'd be happy to explain Renovate in biomejs-recipes.\n\n# Renovate\n\nRenovate is a popular tool for automated dependency updates.Here's a quick rundown of what this is about:\n\n## biome.json\n\nRenovate has a shared preset rule that can help keep the `$schema` version in-sync and up-to-date within the `biome.json` configuration files.\n\nTo use, add `customManagers:biomeVersions` to your `extends` list.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://biomejs.dev/recipes/renovate", "title": "Renovate", "description": "Renovate is a popular tool for automated dependency updates.", "has_code_examples": true, "has_best_practices": false, "section_count": 1, "timestamp": "2025-02-28 22:00:06", "type": "overview", "page_metadata": {"title": "Renovate | Biome", "twitter:card": "summary_large_image", "og:locale": "en", "og:image": "https://biomejs.dev/og/recipes/renovate.png", "ogDescription": "Configuring Renovate Bot", "ogSiteName": "Biome", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "ogImage": "https://biomejs.dev/og/recipes/renovate.png", "twitter:image": "https://biomejs.dev/og/recipes/renovate.png", "ogLocale": "en", "description": "Configuring Renovate Bot", "ogUrl": "https://biomejs.dev/recipes/renovate/", "og:type": "article", "language": "en", "ogTitle": "Renovate", "og:title": "Renovate", "og:description": "Configuring Renovate Bot", "viewport": "width=device-width, initial-scale=1", "og:url": "https://biomejs.dev/recipes/renovate/", "favicon": "https://biomejs.dev/img/favicon.svg", "og:site_name": "Biome", "scrapeId": "42fee216-944f-4911-b31e-acd357864e9d", "sourceURL": "https://biomejs.dev/recipes/renovate", "url": "https://biomejs.dev/recipes/renovate/", "statusCode": 200}}}
{"text": "System: You are a helpful biomejs-recipes expert.\n\nUser: How do I biome.json in biomejs-recipes?\n\nAssistant: To biome.json in biomejs-recipes, here's what you do:\nRenovate has a shared preset rule that can help keep the `$schema` version in-sync and up-to-date within the `biome.json` configuration files.\n\nTo use, add `customManagers:biomeVersions` to your `extends` list..\nPretty straightforward, right?", "metadata": {"source_url": "https://biomejs.dev/recipes/renovate", "title": "Renovate", "description": "Renovate is a popular tool for automated dependency updates.", "has_code_examples": true, "has_best_practices": false, "section_count": 1, "timestamp": "2025-02-28 22:00:06", "type": "section_detail", "page_metadata": {"title": "Renovate | Biome", "twitter:card": "summary_large_image", "og:locale": "en", "og:image": "https://biomejs.dev/og/recipes/renovate.png", "ogDescription": "Configuring Renovate Bot", "ogSiteName": "Biome", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "ogImage": "https://biomejs.dev/og/recipes/renovate.png", "twitter:image": "https://biomejs.dev/og/recipes/renovate.png", "ogLocale": "en", "description": "Configuring Renovate Bot", "ogUrl": "https://biomejs.dev/recipes/renovate/", "og:type": "article", "language": "en", "ogTitle": "Renovate", "og:title": "Renovate", "og:description": "Configuring Renovate Bot", "viewport": "width=device-width, initial-scale=1", "og:url": "https://biomejs.dev/recipes/renovate/", "favicon": "https://biomejs.dev/img/favicon.svg", "og:site_name": "Biome", "scrapeId": "42fee216-944f-4911-b31e-acd357864e9d", "sourceURL": "https://biomejs.dev/recipes/renovate", "url": "https://biomejs.dev/recipes/renovate/", "statusCode": 200}}}
{"text": "System: You are a helpful biomejs-recipes expert.\n\nUser: Can you give me some code examples for Renovate in biomejs-recipes?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**biome.json Configuration Example**:\n\n```yaml\n{\n  \"$schema\": \"https://docs.renovatebot.com/renovate-schema.json\",\n  \"extends\": [\"customManagers:biomeVersions\"]\n}\n```\n\nThis snippet shows you how to biome.json configuration example, which is an important aspect of renovate.\n\n", "metadata": {"source_url": "https://biomejs.dev/recipes/renovate", "title": "Renovate", "description": "Renovate is a popular tool for automated dependency updates.", "has_code_examples": true, "has_best_practices": false, "section_count": 1, "timestamp": "2025-02-28 22:00:06", "type": "code_examples", "page_metadata": {"title": "Renovate | Biome", "twitter:card": "summary_large_image", "og:locale": "en", "og:image": "https://biomejs.dev/og/recipes/renovate.png", "ogDescription": "Configuring Renovate Bot", "ogSiteName": "Biome", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "ogImage": "https://biomejs.dev/og/recipes/renovate.png", "twitter:image": "https://biomejs.dev/og/recipes/renovate.png", "ogLocale": "en", "description": "Configuring Renovate Bot", "ogUrl": "https://biomejs.dev/recipes/renovate/", "og:type": "article", "language": "en", "ogTitle": "Renovate", "og:title": "Renovate", "og:description": "Configuring Renovate Bot", "viewport": "width=device-width, initial-scale=1", "og:url": "https://biomejs.dev/recipes/renovate/", "favicon": "https://biomejs.dev/img/favicon.svg", "og:site_name": "Biome", "scrapeId": "42fee216-944f-4911-b31e-acd357864e9d", "sourceURL": "https://biomejs.dev/recipes/renovate", "url": "https://biomejs.dev/recipes/renovate/", "statusCode": 200}}}
{"text": "System: You are a helpful biomejs-recipes expert.\n\nUser: Can you explain what Git Hooks is in biomejs-recipes?\n\nAssistant: Sure, I'd be happy to explain Git Hooks in biomejs-recipes.\n\n# Git Hooks\n\nGit allows executing scripts during the run of a git command using Git Hooks. For example, you can format and lint the staged files before committing or pushing. Several tools exist to simplify the management of Git Hooks. In the following sections we introduce some of them and how they can be used with Biome.Here's a quick rundown of what this is about:\n\n## Lefthook\n\nLefthook provides a fast, cross-platform, and dependency-free hook manager. It can be installed via NPM.\n\nAdd a file named `lefthook.yml` at the root of your Git repository.\nSome examples of _Lefthook_ configurations:\n\n- Check formatting and lint before committing\n\n```yaml\npre-commit:\n    commands:\n      check:\n        glob: \"*.{js,ts,cjs,mjs,d.cts,d.mts,jsx,tsx,json,jsonc}\"\n        run: npx @biomejs/biome check --no-errors-on-unmatched --files-ignore-unknown=true --colors=off {staged_files}\n```\n\n- Format, lint, and apply safe code fixes before committing\n\n```yaml\npre-commit:\n    commands:\n      check:\n        glob: \"*.{js,ts,cjs,mjs,d.cts,d.mts,jsx,tsx,json,jsonc}\"\n        run: npx @biomejs/biome check --write --no-errors-on-unmatched --files-ignore-unknown=true --colors=off {staged_files}\n        stage_fixed: true\n```\n\n`stage_fixed: true` adds again the staged files.\n\n- Check formatting and lint before pushing\n\n```yaml\npre-push:\n    commands:\n      check:\n        glob: \"*.{js,ts,cjs,mjs,d.cts,d.mts,jsx,tsx,json,jsonc}\"\n        run: npx @biomejs/biome check --no-errors-on-unmatched --files-ignore-unknown=true --colors=off {push_files}\n```\n\nNote that you don’t need to use both `glob` and `--files-ignore-unknown=true`. Using only `--files-ignore-unknown=true` allows handling files supported in the present and in the future by Biome. If you wish more control over which files are handled, you should use `glob`.\n\n`--no-errors-on-unmatched` silents possible errors in case _no files are processed_.\n\nOnce configured, run `lefthook install` to set up the hooks.\n\n## Husky\n\nHusky is a widely-used hook manager in the JavaScript ecosystem. Husky doesn’t hide unstaged changes and is not able to provide the list of staged files. This is why it is often used in tandem with another tool such as _lint-staged_ or _git-format-staged_.\n\nIf your project contains a `package.json`, you can automatically set up _husky_ hooks upon package installation using `scripts.prepare`:\n\n```json\n{\n  \"scripts\": {\n    \"prepare\": \"husky\"\n  }\n}\n```\n\n## lint-staged\n\nlint-staged is one of the most used tools in the JavaScript ecosystem.\n\nAdd the following husky configuration:\n\n```json\nlint-staged\n```\n\nThe configuration of lint-staged is directly embedded in `package.json`. Here’s some example of commands that you could find useful when running the Git hooks:\n\n```json\n{\n  \"lint-staged\": {\n    \"*.{js,ts,cjs,mjs,d.cts,d.mts,jsx,tsx,json,jsonc}\": [\n      \"biome check --files-ignore-unknown=true\", // Check formatting and lint\n      \"biome check --write --no-errors-on-unmatched\", // Format, sort imports, lint, and apply safe fixes\n      \"biome check --write --organize-imports-enabled=false --no-errors-on-unmatched\", // format and apply safe fixes\n      \"biome check --write --unsafe --no-errors-on-unmatched\", // Format, sort imports, lints, apply safe/unsafe fixes\n      \"biome format --write --no-errors-on-unmatched\", // Format\n      \"biome lint --write --no-errors-on-unmatched\" // Lint and apply safe fixes\n    ],\n    \"*\": [\n      \"biome check --no-errors-on-unmatched --files-ignore-unknown=true\" // Check formatting and lint\n    ]\n  }\n}\n```\n\nRemember to use the CLI option `--no-errors-on-unmatched` in your command, to silent possible errors in case _no files are processed_.\n\n## git-format-staged\n\nIn contrast to other tools such as _lefthook_, _pre-commit_, and _lint-staged_, git-format-staged doesn’t use `git stash` internally. This avoids manual intervention when conflicts arise between unstaged changes and updated staged changes. See the comparison of _git-format-staged_ with other tools.\n\nSome examples of configuration:\n\n- Check formatting and lint before committing\n\n```bash\ngit-format-staged --formatter 'biome check --files-ignore-unknown=true --no-errors-on-unmatched \"{}\"' .\n```\n\n- Format, lint, and apply safe code fixes before committing\n\n```bash\ngit-format-staged --formatter 'biome check --write --files-ignore-unknown=true --no-errors-on-unmatched \"{}\"' .\n```\n\n## pre-commit\n\npre-commit provides a multi-language hook manager. Biome provides four pre-commit hooks via the biomejs/pre-commit repository.\n\n| hook `id` | description |\n| --- | --- |\n| `biome-ci` | Check formatting, check if imports are organized, and lints |\n| `biome-check` | Format, organize imports, lint, and apply safe fixes to the committed files |\n| `biome-format` | Format the committed files |\n| `biome-lint` | Lint and apply safe fixes to the committed files |\n\nIn the following example, we assume that you installed pre-commit and run `pre-commit install` in your repository. if you want to use the `biome-check` hook, add the following pre-commit configuration to the root of your project in a file named `.pre-commit-config.yaml`:\n\n```yaml\nrepos:\n-   repo: https://github.com/biomejs/pre-commit\n    rev: \"v0.1.0\"  # Use the sha / tag you want to point at\n    hooks:\n    -   id: biome-check\n        additional_dependencies: [\"@biomejs/biome@1.4.1\"]\n```\n\nThis will run `biome check --write` when you run `git commit`.\n\nNote that you must specify which version of Biome to use thanks to the `additional_dependencies` option. pre-commit separately installs tools and need to know which one to install.\n\nIf Biome is already installed as a npm package in your local repository, then it can be a burden to update both `package.json` and `.pre-commit-config.yaml` when you update Biome. Instead of using the provided Biome hooks, you can specify your own local hook.\n\nFor example, if you use npm, you can write the following hook in `.pre-commit-config.yaml`:\n\n```yaml\nrepos:\n  - repo: local\n    hooks:\n      - id: local-biome-check\n        name: biome check\n        entry: npx @biomejs/biome check --write --files-ignore-unknown=true --no-errors-on-unmatched\n        language: system\n        types: [text]\n        files: \"\\.(jsx?|tsx?|c(js|ts)|m(js|ts)|d\\.(ts|cts|mts)|jsonc?)$\"\n```\n\nThe pre-commit option `files` is optional, because Biome is able to ignore unknown files (using the option `--files-ignore-unknown=true`).\n\n## Shell script\n\nYou can also use a custom shell script. Note that you can encounter cross-platform incompatibilities. We recommend the use of a dedicated tool as the one presented in the previous sections.\n\nSome examples of shells scripts:\n\n- Check formatting and lint before committing\n\n```bash\n#!/bin/sh\nset -eu\n\nnpx @biomejs/biome check --staged --files-ignore-unknown=true --no-errors-on-unmatched\n```\n\n- Format, lint, and apply safe code fixes before committing\n\n```bash\n#!/bin/sh\nset -eu\n\nif git status --short | grep --quiet '^MM'; then\n    printf '%s\\n' \"ERROR: Some staged files have unstaged changes\" >&2\n    exit 1;\nfi\n\nnpx @biomejs/biome check --write --staged --files-ignore-unknown=true --no-errors-on-unmatched\n\ngit update-index --again\n```\n\nNote that we make the hook fail if staged files have unstaged changes.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://biomejs.dev/recipes/git-hooks", "title": "Git Hooks", "description": "Git allows executing scripts during the run of a git command using Git Hooks. For example, you can format and lint the staged files before committing or pushing. Several tools exist to simplify the management of Git Hooks. In the following sections we introduce some of them and how they can be used with Biome.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-02-28 22:00:38", "type": "overview", "page_metadata": {"og:image": "https://biomejs.dev/og/recipes/git-hooks.png", "ogUrl": "https://biomejs.dev/recipes/git-hooks/", "language": "en", "ogLocale": "en", "og:description": "Using Biome in Git Hooks", "ogSiteName": "Biome", "twitter:image": "https://biomejs.dev/og/recipes/git-hooks.png", "viewport": "width=device-width, initial-scale=1", "title": "Git Hooks | Biome", "og:type": "article", "twitter:card": "summary_large_image", "favicon": "https://biomejs.dev/img/favicon.svg", "og:title": "Git Hooks", "description": "Using Biome in Git Hooks", "ogDescription": "Using Biome in Git Hooks", "og:locale": "en", "og:url": "https://biomejs.dev/recipes/git-hooks/", "ogImage": "https://biomejs.dev/og/recipes/git-hooks.png", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "ogTitle": "Git Hooks", "og:site_name": "Biome", "scrapeId": "bbc511d3-2cb2-47e6-b247-2d7072f55afb", "sourceURL": "https://biomejs.dev/recipes/git-hooks", "url": "https://biomejs.dev/recipes/git-hooks/", "statusCode": 200}}}
{"text": "System: You are a helpful biomejs-recipes expert.\n\nUser: How do I lefthook in biomejs-recipes?\n\nAssistant: To lefthook in biomejs-recipes, here's what you do:\nLefthook provides a fast, cross-platform, and dependency-free hook manager. It can be installed via NPM.\n\nAdd a file named `lefthook.yml` at the root of your Git repository.\nSome examples of _Lefthook_ configurations:\n\n- Check formatting and lint before committing\n\n```yaml\npre-commit:\n    commands:\n      check:\n        glob: \"*.{js,ts,cjs,mjs,d.cts,d.mts,jsx,tsx,json,jsonc}\"\n        run: npx @biomejs/biome check --no-errors-on-unmatched --files-ignore-unknown=true --colors=off {staged_files}\n```\n\n- Format, lint, and apply safe code fixes before committing\n\n```yaml\npre-commit:\n    commands:\n      check:\n        glob: \"*.{js,ts,cjs,mjs,d.cts,d.mts,jsx,tsx,json,jsonc}\"\n        run: npx @biomejs/biome check --write --no-errors-on-unmatched --files-ignore-unknown=true --colors=off {staged_files}\n        stage_fixed: true\n```\n\n`stage_fixed: true` adds again the staged files.\n\n- Check formatting and lint before pushing\n\n```yaml\npre-push:\n    commands:\n      check:\n        glob: \"*.{js,ts,cjs,mjs,d.cts,d.mts,jsx,tsx,json,jsonc}\"\n        run: npx @biomejs/biome check --no-errors-on-unmatched --files-ignore-unknown=true --colors=off {push_files}\n```\n\nNote that you don’t need to use both `glob` and `--files-ignore-unknown=true`. Using only `--files-ignore-unknown=true` allows handling files supported in the present and in the future by Biome. If you wish more control over which files are handled, you should use `glob`.\n\n`--no-errors-on-unmatched` silents possible errors in case _no files are processed_.\n\nOnce configured, run `lefthook install` to set up the hooks..\nPretty straightforward, right?", "metadata": {"source_url": "https://biomejs.dev/recipes/git-hooks", "title": "Git Hooks", "description": "Git allows executing scripts during the run of a git command using Git Hooks. For example, you can format and lint the staged files before committing or pushing. Several tools exist to simplify the management of Git Hooks. In the following sections we introduce some of them and how they can be used with Biome.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-02-28 22:00:38", "type": "section_detail", "page_metadata": {"og:image": "https://biomejs.dev/og/recipes/git-hooks.png", "ogUrl": "https://biomejs.dev/recipes/git-hooks/", "language": "en", "ogLocale": "en", "og:description": "Using Biome in Git Hooks", "ogSiteName": "Biome", "twitter:image": "https://biomejs.dev/og/recipes/git-hooks.png", "viewport": "width=device-width, initial-scale=1", "title": "Git Hooks | Biome", "og:type": "article", "twitter:card": "summary_large_image", "favicon": "https://biomejs.dev/img/favicon.svg", "og:title": "Git Hooks", "description": "Using Biome in Git Hooks", "ogDescription": "Using Biome in Git Hooks", "og:locale": "en", "og:url": "https://biomejs.dev/recipes/git-hooks/", "ogImage": "https://biomejs.dev/og/recipes/git-hooks.png", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "ogTitle": "Git Hooks", "og:site_name": "Biome", "scrapeId": "bbc511d3-2cb2-47e6-b247-2d7072f55afb", "sourceURL": "https://biomejs.dev/recipes/git-hooks", "url": "https://biomejs.dev/recipes/git-hooks/", "statusCode": 200}}}
{"text": "System: You are a helpful biomejs-recipes expert.\n\nUser: How do I husky in biomejs-recipes?\n\nAssistant: To husky in biomejs-recipes, here's what you do:\nHusky is a widely-used hook manager in the JavaScript ecosystem. Husky doesn’t hide unstaged changes and is not able to provide the list of staged files. This is why it is often used in tandem with another tool such as _lint-staged_ or _git-format-staged_.\n\nIf your project contains a `package.json`, you can automatically set up _husky_ hooks upon package installation using `scripts.prepare`:\n\n```json\n{\n  \"scripts\": {\n    \"prepare\": \"husky\"\n  }\n}\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://biomejs.dev/recipes/git-hooks", "title": "Git Hooks", "description": "Git allows executing scripts during the run of a git command using Git Hooks. For example, you can format and lint the staged files before committing or pushing. Several tools exist to simplify the management of Git Hooks. In the following sections we introduce some of them and how they can be used with Biome.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-02-28 22:00:38", "type": "section_detail", "page_metadata": {"og:image": "https://biomejs.dev/og/recipes/git-hooks.png", "ogUrl": "https://biomejs.dev/recipes/git-hooks/", "language": "en", "ogLocale": "en", "og:description": "Using Biome in Git Hooks", "ogSiteName": "Biome", "twitter:image": "https://biomejs.dev/og/recipes/git-hooks.png", "viewport": "width=device-width, initial-scale=1", "title": "Git Hooks | Biome", "og:type": "article", "twitter:card": "summary_large_image", "favicon": "https://biomejs.dev/img/favicon.svg", "og:title": "Git Hooks", "description": "Using Biome in Git Hooks", "ogDescription": "Using Biome in Git Hooks", "og:locale": "en", "og:url": "https://biomejs.dev/recipes/git-hooks/", "ogImage": "https://biomejs.dev/og/recipes/git-hooks.png", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "ogTitle": "Git Hooks", "og:site_name": "Biome", "scrapeId": "bbc511d3-2cb2-47e6-b247-2d7072f55afb", "sourceURL": "https://biomejs.dev/recipes/git-hooks", "url": "https://biomejs.dev/recipes/git-hooks/", "statusCode": 200}}}
{"text": "System: You are a helpful biomejs-recipes expert.\n\nUser: How do I lint-staged in biomejs-recipes?\n\nAssistant: To lint-staged in biomejs-recipes, here's what you do:\nlint-staged is one of the most used tools in the JavaScript ecosystem.\n\nAdd the following husky configuration:\n\n```json\nlint-staged\n```\n\nThe configuration of lint-staged is directly embedded in `package.json`. Here’s some example of commands that you could find useful when running the Git hooks:\n\n```json\n{\n  \"lint-staged\": {\n    \"*.{js,ts,cjs,mjs,d.cts,d.mts,jsx,tsx,json,jsonc}\": [\n      \"biome check --files-ignore-unknown=true\", // Check formatting and lint\n      \"biome check --write --no-errors-on-unmatched\", // Format, sort imports, lint, and apply safe fixes\n      \"biome check --write --organize-imports-enabled=false --no-errors-on-unmatched\", // format and apply safe fixes\n      \"biome check --write --unsafe --no-errors-on-unmatched\", // Format, sort imports, lints, apply safe/unsafe fixes\n      \"biome format --write --no-errors-on-unmatched\", // Format\n      \"biome lint --write --no-errors-on-unmatched\" // Lint and apply safe fixes\n    ],\n    \"*\": [\n      \"biome check --no-errors-on-unmatched --files-ignore-unknown=true\" // Check formatting and lint\n    ]\n  }\n}\n```\n\nRemember to use the CLI option `--no-errors-on-unmatched` in your command, to silent possible errors in case _no files are processed_..\nPretty straightforward, right?", "metadata": {"source_url": "https://biomejs.dev/recipes/git-hooks", "title": "Git Hooks", "description": "Git allows executing scripts during the run of a git command using Git Hooks. For example, you can format and lint the staged files before committing or pushing. Several tools exist to simplify the management of Git Hooks. In the following sections we introduce some of them and how they can be used with Biome.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-02-28 22:00:38", "type": "section_detail", "page_metadata": {"og:image": "https://biomejs.dev/og/recipes/git-hooks.png", "ogUrl": "https://biomejs.dev/recipes/git-hooks/", "language": "en", "ogLocale": "en", "og:description": "Using Biome in Git Hooks", "ogSiteName": "Biome", "twitter:image": "https://biomejs.dev/og/recipes/git-hooks.png", "viewport": "width=device-width, initial-scale=1", "title": "Git Hooks | Biome", "og:type": "article", "twitter:card": "summary_large_image", "favicon": "https://biomejs.dev/img/favicon.svg", "og:title": "Git Hooks", "description": "Using Biome in Git Hooks", "ogDescription": "Using Biome in Git Hooks", "og:locale": "en", "og:url": "https://biomejs.dev/recipes/git-hooks/", "ogImage": "https://biomejs.dev/og/recipes/git-hooks.png", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "ogTitle": "Git Hooks", "og:site_name": "Biome", "scrapeId": "bbc511d3-2cb2-47e6-b247-2d7072f55afb", "sourceURL": "https://biomejs.dev/recipes/git-hooks", "url": "https://biomejs.dev/recipes/git-hooks/", "statusCode": 200}}}
{"text": "System: You are a helpful biomejs-recipes expert.\n\nUser: How do I git-format-staged in biomejs-recipes?\n\nAssistant: To git-format-staged in biomejs-recipes, here's what you do:\nIn contrast to other tools such as _lefthook_, _pre-commit_, and _lint-staged_, git-format-staged doesn’t use `git stash` internally. This avoids manual intervention when conflicts arise between unstaged changes and updated staged changes. See the comparison of _git-format-staged_ with other tools.\n\nSome examples of configuration:\n\n- Check formatting and lint before committing\n\n```bash\ngit-format-staged --formatter 'biome check --files-ignore-unknown=true --no-errors-on-unmatched \"{}\"' .\n```\n\n- Format, lint, and apply safe code fixes before committing\n\n```bash\ngit-format-staged --formatter 'biome check --write --files-ignore-unknown=true --no-errors-on-unmatched \"{}\"' .\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://biomejs.dev/recipes/git-hooks", "title": "Git Hooks", "description": "Git allows executing scripts during the run of a git command using Git Hooks. For example, you can format and lint the staged files before committing or pushing. Several tools exist to simplify the management of Git Hooks. In the following sections we introduce some of them and how they can be used with Biome.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-02-28 22:00:38", "type": "section_detail", "page_metadata": {"og:image": "https://biomejs.dev/og/recipes/git-hooks.png", "ogUrl": "https://biomejs.dev/recipes/git-hooks/", "language": "en", "ogLocale": "en", "og:description": "Using Biome in Git Hooks", "ogSiteName": "Biome", "twitter:image": "https://biomejs.dev/og/recipes/git-hooks.png", "viewport": "width=device-width, initial-scale=1", "title": "Git Hooks | Biome", "og:type": "article", "twitter:card": "summary_large_image", "favicon": "https://biomejs.dev/img/favicon.svg", "og:title": "Git Hooks", "description": "Using Biome in Git Hooks", "ogDescription": "Using Biome in Git Hooks", "og:locale": "en", "og:url": "https://biomejs.dev/recipes/git-hooks/", "ogImage": "https://biomejs.dev/og/recipes/git-hooks.png", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "ogTitle": "Git Hooks", "og:site_name": "Biome", "scrapeId": "bbc511d3-2cb2-47e6-b247-2d7072f55afb", "sourceURL": "https://biomejs.dev/recipes/git-hooks", "url": "https://biomejs.dev/recipes/git-hooks/", "statusCode": 200}}}
{"text": "System: You are a helpful biomejs-recipes expert.\n\nUser: How do I pre-commit in biomejs-recipes?\n\nAssistant: To pre-commit in biomejs-recipes, here's what you do:\npre-commit provides a multi-language hook manager. Biome provides four pre-commit hooks via the biomejs/pre-commit repository.\n\n| hook `id` | description |\n| --- | --- |\n| `biome-ci` | Check formatting, check if imports are organized, and lints |\n| `biome-check` | Format, organize imports, lint, and apply safe fixes to the committed files |\n| `biome-format` | Format the committed files |\n| `biome-lint` | Lint and apply safe fixes to the committed files |\n\nIn the following example, we assume that you installed pre-commit and run `pre-commit install` in your repository. if you want to use the `biome-check` hook, add the following pre-commit configuration to the root of your project in a file named `.pre-commit-config.yaml`:\n\n```yaml\nrepos:\n-   repo: https://github.com/biomejs/pre-commit\n    rev: \"v0.1.0\"  # Use the sha / tag you want to point at\n    hooks:\n    -   id: biome-check\n        additional_dependencies: [\"@biomejs/biome@1.4.1\"]\n```\n\nThis will run `biome check --write` when you run `git commit`.\n\nNote that you must specify which version of Biome to use thanks to the `additional_dependencies` option. pre-commit separately installs tools and need to know which one to install.\n\nIf Biome is already installed as a npm package in your local repository, then it can be a burden to update both `package.json` and `.pre-commit-config.yaml` when you update Biome. Instead of using the provided Biome hooks, you can specify your own local hook.\n\nFor example, if you use npm, you can write the following hook in `.pre-commit-config.yaml`:\n\n```yaml\nrepos:\n  - repo: local\n    hooks:\n      - id: local-biome-check\n        name: biome check\n        entry: npx @biomejs/biome check --write --files-ignore-unknown=true --no-errors-on-unmatched\n        language: system\n        types: [text]\n        files: \"\\.(jsx?|tsx?|c(js|ts)|m(js|ts)|d\\.(ts|cts|mts)|jsonc?)$\"\n```\n\nThe pre-commit option `files` is optional, because Biome is able to ignore unknown files (using the option `--files-ignore-unknown=true`)..\nPretty straightforward, right?", "metadata": {"source_url": "https://biomejs.dev/recipes/git-hooks", "title": "Git Hooks", "description": "Git allows executing scripts during the run of a git command using Git Hooks. For example, you can format and lint the staged files before committing or pushing. Several tools exist to simplify the management of Git Hooks. In the following sections we introduce some of them and how they can be used with Biome.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-02-28 22:00:38", "type": "section_detail", "page_metadata": {"og:image": "https://biomejs.dev/og/recipes/git-hooks.png", "ogUrl": "https://biomejs.dev/recipes/git-hooks/", "language": "en", "ogLocale": "en", "og:description": "Using Biome in Git Hooks", "ogSiteName": "Biome", "twitter:image": "https://biomejs.dev/og/recipes/git-hooks.png", "viewport": "width=device-width, initial-scale=1", "title": "Git Hooks | Biome", "og:type": "article", "twitter:card": "summary_large_image", "favicon": "https://biomejs.dev/img/favicon.svg", "og:title": "Git Hooks", "description": "Using Biome in Git Hooks", "ogDescription": "Using Biome in Git Hooks", "og:locale": "en", "og:url": "https://biomejs.dev/recipes/git-hooks/", "ogImage": "https://biomejs.dev/og/recipes/git-hooks.png", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "ogTitle": "Git Hooks", "og:site_name": "Biome", "scrapeId": "bbc511d3-2cb2-47e6-b247-2d7072f55afb", "sourceURL": "https://biomejs.dev/recipes/git-hooks", "url": "https://biomejs.dev/recipes/git-hooks/", "statusCode": 200}}}
{"text": "System: You are a helpful biomejs-recipes expert.\n\nUser: How do I shell script in biomejs-recipes?\n\nAssistant: To shell script in biomejs-recipes, here's what you do:\nYou can also use a custom shell script. Note that you can encounter cross-platform incompatibilities. We recommend the use of a dedicated tool as the one presented in the previous sections.\n\nSome examples of shells scripts:\n\n- Check formatting and lint before committing\n\n```bash\n#!/bin/sh\nset -eu\n\nnpx @biomejs/biome check --staged --files-ignore-unknown=true --no-errors-on-unmatched\n```\n\n- Format, lint, and apply safe code fixes before committing\n\n```bash\n#!/bin/sh\nset -eu\n\nif git status --short | grep --quiet '^MM'; then\n    printf '%s\\n' \"ERROR: Some staged files have unstaged changes\" >&2\n    exit 1;\nfi\n\nnpx @biomejs/biome check --write --staged --files-ignore-unknown=true --no-errors-on-unmatched\n\ngit update-index --again\n```\n\nNote that we make the hook fail if staged files have unstaged changes..\nPretty straightforward, right?", "metadata": {"source_url": "https://biomejs.dev/recipes/git-hooks", "title": "Git Hooks", "description": "Git allows executing scripts during the run of a git command using Git Hooks. For example, you can format and lint the staged files before committing or pushing. Several tools exist to simplify the management of Git Hooks. In the following sections we introduce some of them and how they can be used with Biome.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-02-28 22:00:38", "type": "section_detail", "page_metadata": {"og:image": "https://biomejs.dev/og/recipes/git-hooks.png", "ogUrl": "https://biomejs.dev/recipes/git-hooks/", "language": "en", "ogLocale": "en", "og:description": "Using Biome in Git Hooks", "ogSiteName": "Biome", "twitter:image": "https://biomejs.dev/og/recipes/git-hooks.png", "viewport": "width=device-width, initial-scale=1", "title": "Git Hooks | Biome", "og:type": "article", "twitter:card": "summary_large_image", "favicon": "https://biomejs.dev/img/favicon.svg", "og:title": "Git Hooks", "description": "Using Biome in Git Hooks", "ogDescription": "Using Biome in Git Hooks", "og:locale": "en", "og:url": "https://biomejs.dev/recipes/git-hooks/", "ogImage": "https://biomejs.dev/og/recipes/git-hooks.png", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "ogTitle": "Git Hooks", "og:site_name": "Biome", "scrapeId": "bbc511d3-2cb2-47e6-b247-2d7072f55afb", "sourceURL": "https://biomejs.dev/recipes/git-hooks", "url": "https://biomejs.dev/recipes/git-hooks/", "statusCode": 200}}}
{"text": "System: You are a helpful biomejs-recipes expert.\n\nUser: Can you give me some code examples for Git Hooks in biomejs-recipes?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Lefthook - Check formatting and lint before committing**:\n\n```yaml\npre-commit:\n    commands:\n      check:\n        glob: \"*.{js,ts,cjs,mjs,d.cts,d.mts,jsx,tsx,json,jsonc}\"\n        run: npx @biomejs/biome check --no-errors-on-unmatched --files-ignore-unknown=true --colors=off {staged_files}\n```\n\nThis snippet shows you how to lefthook - check formatting and lint before committing, which is an important aspect of git hooks.\n\n**Lefthook - Format, lint, and apply safe code fixes before committing**:\n\n```yaml\npre-commit:\n    commands:\n      check:\n        glob: \"*.{js,ts,cjs,mjs,d.cts,d.mts,jsx,tsx,json,jsonc}\"\n        run: npx @biomejs/biome check --write --no-errors-on-unmatched --files-ignore-unknown=true --colors=off {staged_files}\n        stage_fixed: true\n```\n\nThis snippet shows you how to lefthook - format, lint, and apply safe code fixes before committing, which is an important aspect of git hooks.\n\n**Lefthook - Check formatting and lint before pushing**:\n\n```yaml\npre-push:\n    commands:\n      check:\n        glob: \"*.{js,ts,cjs,mjs,d.cts,d.mts,jsx,tsx,json,jsonc}\"\n        run: npx @biomejs/biome check --no-errors-on-unmatched --files-ignore-unknown=true --colors=off {push_files}\n```\n\nThis snippet shows you how to lefthook - check formatting and lint before pushing, which is an important aspect of git hooks.\n\n**Husky - Automatic setup in package.json**:\n\n```yaml\n{\n  \"scripts\": {\n    \"prepare\": \"husky\"\n  }\n}\n```\n\nThis snippet shows you how to husky - automatic setup in package.json, which is an important aspect of git hooks.\n\n**lint-staged - Configuration in package.json**:\n\n```yaml\n{\n  \"lint-staged\": {\n    \"*.{js,ts,cjs,mjs,d.cts,d.mts,jsx,tsx,json,jsonc}\": [\n      \"biome check --files-ignore-unknown=true\", // Check formatting and lint\n      \"biome check --write --no-errors-on-unmatched\", // Format, sort imports, lint, and apply safe fixes\n      \"biome check --write --organize-imports-enabled=false --no-errors-on-unmatched\", // format and apply safe fixes\n      \"biome check --write --unsafe --no-errors-on-unmatched\", // Format, sort imports, lints, apply safe/unsafe fixes\n      \"biome format --write --no-errors-on-unmatched\", // Format\n      \"biome lint --write --no-errors-on-unmatched\" // Lint and apply safe fixes\n    ],\n    \"*\": [\n      \"biome check --no-errors-on-unmatched --files-ignore-unknown=true\" // Check formatting and lint\n    ]\n  }\n}\n```\n\nThis snippet shows you how to lint-staged - configuration in package.json, which is an important aspect of git hooks.\n\n", "metadata": {"source_url": "https://biomejs.dev/recipes/git-hooks", "title": "Git Hooks", "description": "Git allows executing scripts during the run of a git command using Git Hooks. For example, you can format and lint the staged files before committing or pushing. Several tools exist to simplify the management of Git Hooks. In the following sections we introduce some of them and how they can be used with Biome.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-02-28 22:00:38", "type": "code_examples", "page_metadata": {"og:image": "https://biomejs.dev/og/recipes/git-hooks.png", "ogUrl": "https://biomejs.dev/recipes/git-hooks/", "language": "en", "ogLocale": "en", "og:description": "Using Biome in Git Hooks", "ogSiteName": "Biome", "twitter:image": "https://biomejs.dev/og/recipes/git-hooks.png", "viewport": "width=device-width, initial-scale=1", "title": "Git Hooks | Biome", "og:type": "article", "twitter:card": "summary_large_image", "favicon": "https://biomejs.dev/img/favicon.svg", "og:title": "Git Hooks", "description": "Using Biome in Git Hooks", "ogDescription": "Using Biome in Git Hooks", "og:locale": "en", "og:url": "https://biomejs.dev/recipes/git-hooks/", "ogImage": "https://biomejs.dev/og/recipes/git-hooks.png", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "ogTitle": "Git Hooks", "og:site_name": "Biome", "scrapeId": "bbc511d3-2cb2-47e6-b247-2d7072f55afb", "sourceURL": "https://biomejs.dev/recipes/git-hooks", "url": "https://biomejs.dev/recipes/git-hooks/", "statusCode": 200}}}
{"text": "System: You are a helpful biomejs-recipes expert.\n\nUser: What are some tips for using Git Hooks in biomejs-recipes effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nUse the CLI option `--no-errors-on-unmatched` in your command to silent possible errors in case no files are processed.\n\nWhen using Lefthook, you can choose between using `glob` or `--files-ignore-unknown=true` based on your control needs over file handling.\n\nIf Biome is already installed as a npm package in your local repository, consider specifying your own local hook to avoid updating both `package.json` and `.pre-commit-config.yaml` when updating Biome.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://biomejs.dev/recipes/git-hooks", "title": "Git Hooks", "description": "Git allows executing scripts during the run of a git command using Git Hooks. For example, you can format and lint the staged files before committing or pushing. Several tools exist to simplify the management of Git Hooks. In the following sections we introduce some of them and how they can be used with Biome.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-02-28 22:00:38", "type": "best_practices", "page_metadata": {"og:image": "https://biomejs.dev/og/recipes/git-hooks.png", "ogUrl": "https://biomejs.dev/recipes/git-hooks/", "language": "en", "ogLocale": "en", "og:description": "Using Biome in Git Hooks", "ogSiteName": "Biome", "twitter:image": "https://biomejs.dev/og/recipes/git-hooks.png", "viewport": "width=device-width, initial-scale=1", "title": "Git Hooks | Biome", "og:type": "article", "twitter:card": "summary_large_image", "favicon": "https://biomejs.dev/img/favicon.svg", "og:title": "Git Hooks", "description": "Using Biome in Git Hooks", "ogDescription": "Using Biome in Git Hooks", "og:locale": "en", "og:url": "https://biomejs.dev/recipes/git-hooks/", "ogImage": "https://biomejs.dev/og/recipes/git-hooks.png", "generator": ["Astro v5.3.1", "Starlight v0.32.0"], "ogTitle": "Git Hooks", "og:site_name": "Biome", "scrapeId": "bbc511d3-2cb2-47e6-b247-2d7072f55afb", "sourceURL": "https://biomejs.dev/recipes/git-hooks", "url": "https://biomejs.dev/recipes/git-hooks/", "statusCode": 200}}}
